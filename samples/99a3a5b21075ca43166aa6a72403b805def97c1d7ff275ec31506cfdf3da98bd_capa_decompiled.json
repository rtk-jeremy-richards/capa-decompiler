{
    "004010e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004010e0(void)\n\n{\n    ulong uVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    ulong *arg2;\n    ulong *unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    ulong *puVar10;\n    ulong *puVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            puVar5 = unaff_RBX;\ncode_r0x00401116:\n            do {\n                unaff_RBX = puVar5;\n                puVar4 = in_RAX;\n                if (unaff_RBX == NULL) {\n                    if (*0x57faf8 != NULL) {\n                        *(*0x20 + -0x38) = *0x57faf8;\n                        iVar6 = 0;\n                        puVar5 = *0x57faf8;\n                        puVar4 = *0x57faf0;\n                        while( true ) {\n                            uVar1 = *puVar4;\n                            if (*(puVar4 + 3) != '\\0') {\n                                if ((*(puVar4 + 0x19) == '\\0') || (*puVar4[2] != '\\0')) {\n                                    *puVar4[2] = *(puVar4 + 0x19);\n                                }\n                                else {\n                                    *(*0x20 + -0x40) = puVar4[1];\n                                    *(*0x20 + -0x10) = uVar1;\n                                    *(*0x20 + -0x48) = iVar6;\n                                    *(*0x20 + -0x18) = puVar4;\n                                    *(*0x20 + -0x90) = 0x4013bb;\n                                    fcn.00434840();\n                                    *(*0x20 + -0x90) = 0x4013cc;\n                                    fcn.00435140();\n                                    *(*0x20 + -0x90) = 0x4013db;\n                                    fcn.00435140();\n                                    *(*0x20 + -0x90) = 0x4013ec;\n                                    fcn.00435140();\n                                    *(*0x20 + -0x90) = 0x4013f1;\n                                    fcn.004348c0();\n                                    puVar5 = *(*0x20 + -0x38);\n                                    puVar4 = *(*0x20 + -0x18);\n                                    iVar6 = *(*0x20 + -0x48);\n                                }\n                            }\n                            iVar6 = iVar6 + 1;\n                            if (puVar5 <= iVar6) break;\n                            puVar4 = puVar4 + 4;\n                        }\n                    }\n                    return;\n                }\n                for (puVar7 = NULL; puVar7 < unaff_RBX; puVar7 = puVar7 + 1) {\n                    if (*(puVar4 + puVar7) == ',') goto code_r0x0040112d;\n                }\n                puVar7 = 0xffffffffffffffff;\ncode_r0x0040112d:\n                if (puVar7 < 0) {\n                    puVar5 = NULL;\n                    in_RAX = NULL;\n                    puVar7 = unaff_RBX;\n                }\n                else {\n                    if (unaff_RBX < puVar7) goto code_r0x00401610;\n                    if (unaff_RBX < puVar7 + 1U) goto code_r0x00401605;\n                    unaff_RBX = unaff_RBX - puVar7;\n                    puVar5 = unaff_RBX + -1;\n                    in_RAX = (puVar7 + 1U & -puVar5 >> 0x3f) + puVar4;\n                }\n            } while ((puVar7 < 4) || (*puVar4 != 0x2e757063));\n            for (arg2 = NULL; arg2 < puVar7; arg2 = arg2 + 1) {\n                if (*(puVar4 + arg2) == '=') goto code_r0x0040118c;\n            }\n            arg2 = 0xffffffffffffffff;\ncode_r0x0040118c:\n            *(*0x20 + -0x38) = puVar5;\n            *(*0x20 + -0x10) = in_RAX;\n            if (arg2 < 0) {\n                *(*0x20 + -0x60) = puVar7;\n                *(*0x20 + -0x20) = puVar4;\n                *(*0x20 + -0x90) = 0x401308;\n                fcn.00434840();\n                *(*0x20 + -0x90) = 0x401319;\n                fcn.00435140();\n                *(*0x20 + -0x90) = 0x401328;\n                fcn.00435140();\n                *(*0x20 + -0x90) = 0x401339;\n                fcn.00435140();\n                *(*0x20 + -0x90) = 0x40133e;\n                fcn.004348c0();\n                in_RAX = *(*0x20 + -0x10);\n                puVar5 = *(*0x20 + -0x38);\n                goto code_r0x00401116;\n            }\n            if (arg2 <= puVar7) {\n                if (0x3 < arg2) {\n                    puVar11 = arg2 + -4;\n                    uVar9 = -puVar11 >> 0x3f & 4;\n                    unaff_RBX = puVar4 + uVar9;\n                    if (arg2 + 1U <= puVar7) {\n                        *(*0x20 + -0x40) = puVar11;\n                        *(*0x20 + -0x28) = unaff_RBX;\n                        iVar6 = puVar7 - arg2;\n                        *(*0x20 + -0x68) = iVar6 + -1;\n                        uVar12 = arg2 + 1U & -(iVar6 + -1) >> 0x3f;\n                        puVar3 = puVar4 + uVar12;\n                        *(*0x20 + -0x30) = puVar3;\n                        if (iVar6 == 3) {\n                            if (*(puVar4 + uVar12) != 0x6e6f) {\ncode_r0x0040128c:\n                                *(*0x20 + -0x90) = 0x401291;\n                                fcn.00434840();\n                                *(*0x20 + -0x90) = 0x4012a5;\n                                fcn.00435140();\n                                *(*0x20 + -0x90) = 0x4012b4;\n                                fcn.00435140();\n                                *(*0x20 + -0x90) = 0x4012c5;\n                                fcn.00435140();\n                                *(*0x20 + -0x90) = 0x4012d4;\n                                fcn.00435140();\n                                *(*0x20 + -0x90) = 0x4012e5;\n                                fcn.00435140();\n                                *(*0x20 + -0x90) = 0x4012ea;\n                                fcn.004348c0();\n                                in_RAX = *(*0x20 + -0x10);\n                                puVar5 = *(*0x20 + -0x38);\n                                goto code_r0x00401116;\n                            }\n                        }\n                        else if (((iVar6 != 4) || (*(puVar4 + uVar12) != 0x666f)) || (*(puVar4 + uVar12 + 2) != 'f'))\n                        goto code_r0x0040128c;\n                        uVar12 = iVar6 == 3;\n                        if (((arg2 == 0x7) && (puVar3 = *(puVar4 + uVar9),  *(puVar4 + uVar9) == 0x6c61)) &&\n                           (*(puVar4 + uVar9 + 2) == 'l')) {\n                            puVar10 = *0x57faf8;\n                            for (puVar3 = NULL; puVar3 < puVar10; puVar3 = puVar3 + 1) {\n                                puVar7 = *0x57faf8;\n                                if (*0x57faf8 <= puVar3) {\ncode_r0x004015d7:\n                                    *(*0x20 + -0x90) = 0x4015dc;\n                                    fcn.0045ca40(puVar7);\n                                    goto code_r0x004015dc;\n                                }\n                                iVar6 = puVar3 * 0x20;\n                                *(*0x57faf0 + puVar3 * 4 + 3) = 1;\n                                puVar11 = *0x57faf0;\n                                if (*0x57faf8 <= puVar3) {\n                                    *(*0x20 + -0x90) = 0x4015d7;\n                                    puVar7 = *0x57faf8;\n                                    fcn.0045ca40(*0x57faf8);\n                                    goto code_r0x004015d7;\n                                }\ncode_r0x0040158a:\n                                *(puVar11 + iVar6 + 0x19) = uVar12;\n                            }\n                        }\n                        else {\n                            *(*0x20 + -0x69) = iVar6 == 3;\n                            *(*0x20 + -0x48) = *0x57faf8;\n                            puVar4 = NULL;\n                            arg2 = *0x57faf8;\n                            while (puVar4 < arg2) {\n                                puVar7 = *0x57faf8;\n                                puVar10 = *0x57faf0;\n                                if (*0x57faf8 <= puVar4) {\ncode_r0x00401585:\n                                    *(*0x20 + -0x90) = 0x40158a;\n                                    iVar6 = fcn.0045ca40(puVar7);\n                                    goto code_r0x0040158a;\n                                }\n                                puVar7 = (*0x57faf0)[puVar4 * 4 + 1];\n                                puVar10 = (*0x57faf0)[puVar4 * 4];\n                                puVar3 = puVar4;\n                                if (puVar7 == puVar11) {\n                                    *(*0x20 + -0x50) = puVar4 * 0x20;\n                                    *(*0x20 + -0x58) = puVar4;\n                                    *(*0x20 + -0x90) = 0x4014b0;\n                                    cVar2 = fcn.004021c0(puVar7, arg2);\n                                    if (cVar2 != '\\0') {\n                                        puVar3 = *(*0x20 + -0x58);\n                                        puVar7 = *0x57faf8;\n                                        in_RAX = *0x57faf0;\n                                        if (puVar3 < *0x57faf8) {\n                                            puVar10 = *(*0x20 + -0x50);\n                                            *(*0x57faf0 + 3 + puVar10) = 1;\n                                            in_RAX = *0x57faf0;\n                                            if (puVar3 < *0x57faf8) {\n                                                *(*0x57faf0 + 0x19 + puVar10) = *(*0x20 + -0x69);\n                                                in_RAX = *(*0x20 + -0x10);\n                                                puVar5 = *(*0x20 + -0x38);\n                                                goto code_r0x00401116;\n                                            }\n                                            *(*0x20 + -0x90) = 0x40157f;\n                                            puVar7 = *0x57faf8;\n                                            fcn.0045ca40(*0x57faf8);\n                                        }\n                                        *(*0x20 + -0x90) = 0x401585;\n                                        fcn.0045ca40(puVar7);\n                                        puVar3 = puVar4;\n                                        goto code_r0x00401585;\n                                    }\n                                    arg2 = *(*0x20 + -0x48);\n                                    unaff_RBX = *(*0x20 + -0x28);\n                                    in_RAX = *(*0x20 + -0x10);\n                                    puVar5 = *(*0x20 + -0x38);\n                                    puVar11 = *(*0x20 + -0x40);\n                                    uVar12 = *(*0x20 + -0x69);\n                                    puVar3 = *(*0x20 + -0x58);\n                                }\n                                puVar4 = puVar3 + 1;\n                            }\n                            *(*0x20 + -0x90) = 0x401535;\n                            fcn.00434840();\n                            *(*0x20 + -0x90) = 0x401546;\n                            fcn.00435140();\n                            *(*0x20 + -0x90) = 0x401555;\n                            fcn.00435140();\n                            *(*0x20 + -0x90) = 0x401566;\n                            fcn.00435140();\n                            *(*0x20 + -0x90) = 0x40156b;\n                            fcn.004348c0();\n                            in_RAX = *(*0x20 + -0x10);\n                            puVar5 = *(*0x20 + -0x38);\n                        }\n                        goto code_r0x00401116;\n                    }\ncode_r0x004015dc:\n                    *(*0x20 + -0x90) = 0x4015e5;\n                    fcn.0045cb00(puVar7);\n                }\n                puVar7 = arg2;\n                *(*0x20 + -0x90) = 0x4015f2;\n                arg2 = puVar7;\n                fcn.0045cb00(puVar7);\n            }\n            *(*0x20 + -0x90) = 0x401605;\n            fcn.0045ca80(arg2, puVar7);\ncode_r0x00401605:\n            *(*0x20 + -0x90) = 0x401610;\n            puVar7 = unaff_RBX;\n            fcn.0045cb00(unaff_RBX);\ncode_r0x00401610:\n            *(*0x20 + -0x90) = 0x401618;\n            in_RAX = fcn.0045ca80(puVar7, unaff_RBX);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x401628;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3402
    },
    "00403e80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403e80(uint64_t arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint8_t *puVar9;\n    uint64_t unaff_RBX;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t unaff_RDI;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint8_t *puVar14;\n    \n    if (*(in_RAX + 8) <= arg1) {\n        return;\n    }\n    uVar7 = *(in_RAX + 8) - arg1;\n    if (uVar7 < unaff_RDI) {\n        unaff_RDI = uVar7;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00404220(arg1);\n        return;\n    }\n    if (*0x57efb8 == NULL) {\n        iVar8 = 0;\n        iVar10 = 0;\n    }\n    else {\n        iVar10 = **0x57efb8;\n        iVar8 = (*0x57efb8)[1];\n    }\n    for (iVar12 = 0; iVar12 < iVar8; iVar12 = iVar12 + 1) {\n        iVar2 = *(iVar10 + iVar12 * 8);\n        if ((*(iVar2 + 0xd0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xd8))) {\n            fcn.00404220(arg1 + (unaff_RBX - *(iVar2 + 0xd0)));\n            return;\n        }\n        if ((*(iVar2 + 0xe0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xe8))) {\n            fcn.00404220(arg1 + (unaff_RBX - *(iVar2 + 0xe0)));\n            return;\n        }\n    }\n    uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (uVar7 < 0x40) {\n        if (*(*(*(*(uVar7 * 8 + 0x5a5f90) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n               (unaff_RBX >> 0xd & 0x1ff) * 8) + 99) == '\\x02') {\n            fcn.0045a220();\n            return;\n        }\n        uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar11 = unaff_RBX + 0x800000000000 >> 0x16;\n            iVar10 = *(*(uVar7 * 8 + 0x5a5f90) + (uVar11 & 0xfffff) * 8);\n            if (iVar10 == 0) {\n                uVar11 = 0;\n                uVar13 = 0;\n                puVar14 = NULL;\n                puVar9 = NULL;\n            }\n            else {\n                puVar9 = (unaff_RBX >> 5 & 0x1ffff) + iVar10;\n                uVar13 = unaff_RBX >> 3 & 3;\n                puVar14 = iVar10 + 0x1ffff;\n            }\n            uVar5 = 0;\n            uVar7 = unaff_RBX;\n            do {\n                if (unaff_RDI + arg1 <= uVar5) {\n                    return;\n                }\n                if ((arg1 <= uVar5) && ((*puVar9 >> (uVar13 & 0x1f) & 1) != 0)) {\n                    puVar1 = unaff_RBX + uVar5;\n                    unaff_RBX = uVar7;\n                    cVar4 = fcn.00403a80(*puVar1);\n                    if (cVar4 != '\\0') {\n                        fcn.004330a0();\n                        break;\n                    }\n                    uVar11 = uVar11 & 0xffffffff;\n                    uVar7 = unaff_RBX;\n                }\n                if (uVar13 < 3) {\n                    uVar13 = uVar13 + 1;\n                }\n                else if (puVar14 == puVar9) {\n                    uVar6 = uVar11 & 0xffffffff;\n                    unaff_RBX = uVar7;\n                    puVar9 = fcn.00411a80(uVar11 & 0xffffffff);\n                    uVar11 = uVar6;\n                    uVar7 = unaff_RBX;\n                }\n                else {\n                    puVar9 = puVar9 + 1;\n                    uVar13 = 0;\n                }\n                uVar5 = uVar5 + 8;\n            } while( true );\n        }\n        fcn.0045ca60(0x40);\n    }\n    fcn.0045ca60(0x40);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1183
    },
    "00408080": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408080(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t in_RAX;\n    uint64_t noname_0;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00454b20();\n    uVar5 = *(in_RAX + 0x17);\n    noname_0 = uVar5;\n    if (uVar5 < 9) {\n        if (4 < uVar5) {\n            if (6 < uVar5) {\n                if (uVar5 == 7) {\n                    fcn.00434840();\n                    fcn.00435140();\n                    fcn.00435140();\n                    fcn.00434e40();\n                    fcn.00435140();\n                    fcn.004348c0();\n                    return;\n                }\n                fcn.00434840();\n                fcn.00435140();\n                fcn.00435140();\n                fcn.00434e40();\n                fcn.00435140();\n                fcn.004348c0();\n                return;\n            }\n            if (uVar5 == 5) {\n                fcn.00434840();\n                fcn.00435140();\n                fcn.00435140();\n                fcn.00434f40();\n                fcn.00435140();\n                fcn.004348c0();\n                return;\n            }\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00434f40();\n            fcn.00435140();\n            fcn.004348c0();\n            return;\n        }\n        if (2 < uVar5) {\n            if (uVar5 == 3) {\n                fcn.00434840();\n                fcn.00435140();\n                fcn.00435140();\n                fcn.00434f40();\n                fcn.00435140();\n                fcn.004348c0();\n                return;\n            }\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00434f40();\n            fcn.00435140();\n            fcn.004348c0();\n            return;\n        }\n        if (uVar5 == 1) {\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00434ae0();\n            fcn.00435140();\n            fcn.004348c0();\n            return;\n        }\n        if (uVar5 == 2) {\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00434f40();\n            fcn.00435140();\n            fcn.004348c0();\n            return;\n        }\n    }\n    else {\n        if (uVar5 < 0xd) {\n            if (10 < uVar5) {\n                if (uVar5 == 0xb) {\n                    fcn.00434840();\n                    fcn.00435140();\n                    fcn.00435140();\n                    fcn.00434e40();\n                    fcn.00435140();\n                    fcn.004348c0();\n                    return;\n                }\n                fcn.00434840();\n                fcn.00435140();\n                fcn.00435140();\n                fcn.00434e40();\n                fcn.00435140();\n                fcn.004348c0();\n                return;\n            }\n            if (uVar5 == 9) {\n                fcn.00434840();\n                fcn.00435140();\n                fcn.00435140();\n                fcn.00434e40();\n                fcn.00435140();\n                fcn.004348c0();\n                return;\n            }\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00434e40();\n            fcn.00435140();\n            fcn.004348c0();\n            return;\n        }\n        if (uVar5 < 0xf) {\n            if (uVar5 == 0xd) {\n                fcn.00434840();\n                fcn.00435140();\n                fcn.00435140();\n                fcn.00434b40(noname_0, param_2);\n                fcn.00435140();\n                fcn.004348c0();\n                return;\n            }\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00434b40(noname_0, param_2);\n            fcn.00435140();\n            fcn.004348c0();\n            return;\n        }\n        if (uVar5 == 0xf) {\n            fVar1 = *unaff_RBX;\n            fVar2 = *(unaff_RBX + 4);\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00434da0(fVar1, fVar2);\n            fcn.004348c0();\n            return;\n        }\n        if (uVar5 == 0x10) {\n            uVar3 = *unaff_RBX;\n            uVar4 = unaff_RBX[1];\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00434da0(uVar3, uVar4);\n            fcn.004348c0();\n            return;\n        }\n        if (uVar5 == 0x18) {\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.004348c0();\n            return;\n        }\n    }\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00435140();\n    fcn.00435140();\n    fcn.004350c0();\n    fcn.004348c0();\n    return;\n}\n",
        "token_count": 1412
    },
    "0040d400": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040d400(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                if ((*(in_RAX + 0x54) >> 4 & 1) != 0) {\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x40) = 0x40d4f9;\n                    (*pcVar1)();\n                }\n                return 0x5d4c80;\n            }\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x40) = 0x40d46b;\n                uVar4 = (*pcVar1)();\n                iVar10 = *(*0x20 + 0x10);\n                uVar8 = (1 << (*(iVar10 + 9) & 0x3f)) - 1;\n                iVar9 = *(*0x20 + 8);\n                iVar2 = *(iVar10 + 0x18);\n                iVar5 = (uVar8 & uVar4) * *(iVar9 + 0x52) + *(iVar10 + 0x10);\n                if (iVar2 != 0) {\n                    if ((*(iVar10 + 8) & 8) == 0) {\n                        uVar8 = uVar8 >> 1;\n                    }\n                    iVar10 = *(iVar9 + 0x52) * (uVar8 & uVar4);\n                    if (2 < *(iVar2 + iVar10) - 2U) {\n                        iVar5 = iVar2 + iVar10;\n                    }\n                }\n                uVar8 = uVar4 >> 0x38;\n                if (uVar4 >> 0x38 < 5) {\n                    uVar8 = (uVar4 >> 0x38) + 5;\n                }\n                *(*0x20 + -0x21) = uVar8;\n                do {\n                    if (iVar5 == 0) {\n                        return 0x5d4c80;\n                    }\n                    *(*0x20 + -0x18) = iVar5;\n                    for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                        if (uVar8 == *(uVar4 + iVar5)) {\n                            *(*0x20 + -0x20) = uVar4;\n                            piVar6 = *(iVar9 + 0x50) * uVar4 + iVar5 + 8;\n                            if ((*(iVar9 + 0x54) & 1) != 0) {\n                                piVar6 = *piVar6;\n                            }\n                            pcVar1 = **(*(iVar9 + 0x30) + 0x18);\n                            *(*0x20 + -0x40) = 0x40d590;\n                            cVar3 = (*pcVar1)(piVar6);\n                            if (cVar3 != '\\0') {\n                                iVar10 = *(*0x20 + 8);\n                                piVar6 = *(*0x20 + -0x18) + *(iVar10 + 0x51) * *(*0x20 + -0x20) + *(iVar10 + 0x50) * 8 +\n                                         8;\n                                if ((*(iVar10 + 0x54) >> 1 & 1) != 0) {\n                                    piVar6 = *piVar6;\n                                }\n                                return piVar6;\n                            }\n                            uVar8 = *(*0x20 + -0x21);\n                            iVar5 = *(*0x20 + -0x18);\n                            uVar4 = *(*0x20 + -0x20);\n                            iVar9 = *(*0x20 + 8);\n                        }\n                        else if (*(uVar4 + iVar5) == '\\0') {\n                            return 0x5d4c80;\n                        }\n                    }\n                    iVar5 = *(iVar5 + *(iVar9 + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x40) = 0x40d605;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40d61a;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1330
    },
    "0040d640": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040d640(ulong arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *unaff_RBX;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n        return 0;\n    }\n    uVar3 = (***(in_RAX + 0x48))();\n    uVar7 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n    iVar1 = unaff_RBX[3];\n    iVar5 = (uVar7 & uVar3) * *(in_RAX + 0x52) + unaff_RBX[2];\n    if (iVar1 != 0) {\n        if ((*(unaff_RBX + 1) & 8) == 0) {\n            uVar7 = uVar7 >> 1;\n        }\n        iVar8 = *(in_RAX + 0x52) * (uVar7 & uVar3);\n        if (2 < *(iVar1 + iVar8) - 2U) {\n            iVar5 = iVar1 + iVar8;\n        }\n    }\n    uVar4 = uVar3 >> 0x38;\n    uVar7 = uVar4;\n    if (uVar3 >> 0x38 < 5) {\n        uVar4 = (uVar3 >> 0x38) + 5;\n        uVar7 = uVar4;\n    }\n    do {\n        if (iVar5 == 0) {\n            return 0;\n        }\n        for (uVar3 = 0; uVar3 < 8; uVar3 = uVar3 + 1) {\n            if (uVar4 == *(uVar3 + iVar5)) {\n                piVar6 = *(in_RAX + 0x50) * uVar3 + iVar5 + 8;\n                if ((*(in_RAX + 0x54) & 1) != 0) {\n                    piVar6 = *piVar6;\n                }\n                cVar2 = (***(*(in_RAX + 0x30) + 0x18))();\n                if (cVar2 != '\\0') {\n                    return piVar6;\n                }\n                uVar4 = uVar7 & 0xff;\n            }\n            else if (*(uVar3 + iVar5) == '\\0') {\n                return 0;\n            }\n        }\n        iVar5 = *(iVar5 + *(in_RAX + 0x52) + -8);\n    } while( true );\n}\n",
        "token_count": 675
    },
    "0040dd60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040dd60(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t arg1_00;\n    int64_t *piVar5;\n    int64_t *arg2_00;\n    uint64_t uVar6;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x5d3dd0 == 0) {\n        *(arg1 + 0x10) = in_RAX;\n    }\n    else {\n        in_RAX = fcn.0045c5a0(arg1, arg2, arg3, arg4);\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if (*0x5d3dd0 == 0) {\n            *(arg1 + 0x18) = unaff_RBX;\n        }\n        else {\n            in_RAX = fcn.0045c6e0(arg1, arg2, arg3, arg4);\n        }\n        *(arg1 + 0x4a) = *(unaff_RBX + 9);\n        if (*0x5d3dd0 == 0) {\n            *(arg1 + 0x20) = unaff_RBX[2];\n        }\n        else {\n            in_RAX = fcn.0045c6c0(arg1, unaff_RBX[2], arg3, arg4);\n        }\n        piVar5 = unaff_RBX;\n        if (*(*(in_RAX + 0x40) + 8) == 0) {\n            if (unaff_RBX[5] == 0) {\n                arg1_00 = arg1;\n                iVar3 = fcn.0040c440();\n                if (*0x5d3dd0 == 0) {\n                    unaff_RBX[5] = iVar3;\n                }\n                else {\n                    fcn.0045c5a0(arg1_00, unaff_RBX, arg3, arg4);\n                }\n            }\n            arg2_00 = piVar5[5];\n            if (*arg2_00 == 0) {\n                uVar4 = fcn.0040c440();\n                if (*0x5d3dd0 == 0) {\n                    *unaff_RBX[5] = uVar4;\n                    piVar5 = unaff_RBX;\n                }\n                else {\n                    fcn.0045c5a0(unaff_RBX, arg2_00, arg3, arg4);\n                    piVar5 = unaff_RBX;\n                }\n            }\n            if (*0x5d3dd0 == 0) {\n                *(arg1 + 0x30) = *piVar5[5];\n            }\n            else {\n                fcn.0045c6c0(arg1, *piVar5[5], arg3, arg4);\n            }\n            if (*0x5d3dd0 == 0) {\n                *(arg1 + 0x38) = *(piVar5[5] + 8);\n            }\n            else {\n                fcn.0045c6c0(arg1, *(piVar5[5] + 8), arg3, arg4);\n            }\n        }\n        uVar6 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar2 = ZEXT816(uVar6) * ZEXT816(uVar6 ^ 0xe7037ed1a0b428db);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar6;\n        uVar6 = SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0);\n        if (0x1c < *(piVar5 + 9)) {\n            uVar1 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n            auVar2 = ZEXT816(uVar1) * ZEXT816(uVar1 ^ 0xe7037ed1a0b428db);\n            *(*(unaff_R14 + 0x30) + 0xf0) = uVar1;\n            uVar6 = (SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) * 0x80000000 + uVar6;\n        }\n        *(arg1 + 0x40) = (1 << (*(piVar5 + 9) & 0x3f)) - 1U & uVar6;\n        *(arg1 + 0x48) = uVar6 >> (*(piVar5 + 9) & 0x3f) & -(*(piVar5 + 9) < 0x40) & 7;\n        *(arg1 + 0x50) = *(arg1 + 0x40);\n        if ((*(piVar5 + 1) & 3) != 3) {\n            LOCK();\n            *(piVar5 + 1) = *(piVar5 + 1) | 3;\n        }\n        fcn.0040dfe0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 1254
    },
    "0040dfe0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040dfe0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uchar (*in_RAX) [16];\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint8_t uVar6;\n    code **ppcVar7;\n    ulong arg1;\n    code **arg2;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    code **arg1_00;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint8_t uVar13;\n    uint32_t uVar14;\n    int64_t iVar15;\n    int64_t **ppiVar16;\n    int64_t *piVar17;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar8 = *(in_RAX[1] + 8);\n            if ((*(iVar8 + 8) & 4) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x18) = iVar8;\n                iVar10 = *in_RAX[1];\n                *(*0x20 + -0x28) = iVar10;\n                arg1_00 = *in_RAX[5];\n                iVar5 = *(in_RAX[2] + 8);\n                uVar14 = in_RAX[4][0xb];\n                ppcVar7 = *(in_RAX[5] + 8);\n                do {\n                    if (iVar5 == 0) {\n                        if ((*in_RAX[4] == arg1_00) && (in_RAX[4][9] != '\\0')) {\n                            if (*0x5d3dd0 == 0) {\n                                *in_RAX = in_XMM15;\n                            }\n                            else {\n                                *(*0x20 + -0x70) = 0x40e149;\n                                fcn.0045c6a0(0);\n                                *(*0x20 + -0x70) = 0x40e152;\n                                fcn.0045c6a0();\n                            }\n                            return;\n                        }\n                        iVar1 = *(iVar8 + 0x18);\n                        if ((iVar1 == 0) || (*(iVar8 + 9) != in_RAX[4][10])) {\n                            iVar5 = *(iVar10 + 0x52) * arg1_00 + *in_RAX[2];\n                            ppcVar7 = 0xffffffffffffffff;\n                        }\n                        else {\n                            uVar13 = *(*(in_RAX[1] + 8) + 9);\n                            if ((*(*(in_RAX[1] + 8) + 8) & 8) == 0) {\n                                uVar13 = uVar13 - 1;\n                            }\n                            iVar15 = ((1 << (uVar13 & 0x3f)) - 1U & arg1_00) * *(iVar10 + 0x52);\n                            iVar5 = iVar1 + iVar15;\n                            ppcVar7 = arg1_00;\n                            if (*(iVar15 + iVar1) - 2U < 3) {\n                                iVar5 = *(iVar10 + 0x52) * arg1_00 + *in_RAX[2];\n                                ppcVar7 = 0xffffffffffffffff;\n                            }\n                        }\n                        arg1_00 = arg1_00 + 1;\n                        if (1 << (in_RAX[4][10] & 0x3f) == arg1_00) {\n                            in_RAX[4][9] = 1;\n                            arg1_00 = NULL;\n                        }\n                        uVar14 = 0;\n                    }\n                    *(*0x20 + -0x40) = arg1_00;\n                    *(*0x20 + -0x48) = ppcVar7;\n                    *(*0x20 + -0x10) = iVar5;\n                    for (; uVar13 = uVar14,  uVar13 < 8; uVar14 = uVar14 + 1) {\n                        uVar12 = in_RAX[4][8] + uVar14;\n                        uVar4 = uVar12 & 7;\n                        if ((*(iVar5 + uVar4) < 2) || (*(iVar5 + uVar4) == 4)) goto code_r0x0040e15c;\n                        uVar11 = uVar12 & 7;\n                        uVar6 = *(iVar10 + 0x50);\n                        piVar17 = uVar11 * uVar6 + iVar5 + 8;\n                        uVar12 = *(iVar10 + 0x54);\n                        if ((uVar12 & 1) != 0) {\n                            piVar17 = *piVar17;\n                        }\n                        *(*0x20 + -0x49) = uVar13;\n                        *(*0x20 + -0x20) = piVar17;\n                        ppiVar16 = *(iVar10 + 0x51) * uVar11 + uVar6 * 8 + iVar5 + 8;\n                        *(*0x20 + -0x30) = ppiVar16;\n                        arg2 = ppcVar7;\n                        if ((ppcVar7 == 0xffffffffffffffff) || ((*(iVar8 + 8) & 8) != 0)) {\ncode_r0x0040e324:\n                            uVar6 = *(iVar5 + uVar4);\n                            uVar11 = uVar6;\n                            if ((uVar6 == 2) || (uVar6 == 3)) {\n                                uVar11 = *(iVar10 + 0x54);\n                                if ((*(iVar10 + 0x54) >> 2 & 1) == 0) {\n                                    arg2 = *(*(iVar10 + 0x30) + 0x18);\n                                    pcVar2 = *arg2;\n                                    *(*0x20 + -0x70) = 0x40e364;\n                                    uVar6 = (*pcVar2)();\n                                    iVar8 = *(*0x20 + -0x18);\n                                    iVar10 = *(*0x20 + -0x28);\n                                    arg1_00 = *(*0x20 + -0x40);\n                                    uVar13 = *(*0x20 + -0x49);\n                                    ppiVar16 = *(*0x20 + -0x30);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    ppcVar7 = *(*0x20 + -0x48);\n                                    in_RAX = *(*0x20 + 8);\n                                }\n                                else {\n                                    uVar6 = 1;\n                                }\n                                uVar6 = uVar6 ^ 1;\n                            }\n                            else {\n                                uVar6 = 1;\n                            }\n                            if (uVar6 != 0) {\n                                if (*0x5d3dd0 == 0) {\n                                    **in_RAX = *(*0x20 + -0x20);\n                                }\n                                else {\n                                    *(*0x20 + -0x70) = 0x40e445;\n                                    in_RAX = fcn.0045c6c0(arg1_00, *(*0x20 + -0x20), uVar11, uVar4);\n                                }\n                                if ((*(iVar10 + 0x54) >> 1 & 1) != 0) {\n                                    ppiVar16 = *ppiVar16;\n                                }\n                                if (*0x5d3dd0 == 0) {\n                                    *(*in_RAX + 8) = ppiVar16;\n                                }\n                                else {\n                                    *(*0x20 + -0x70) = 0x40e475;\n                                    in_RAX = fcn.0045c6e0(*in_RAX + 8, arg1_00, uVar11, uVar4);\n                                }\ncode_r0x0040e478:\n                                *in_RAX[5] = arg1_00;\n                                if (*(in_RAX[2] + 8) != iVar5) {\n                                    if (*0x5d3dd0 == 0) {\n                                        *(in_RAX[2] + 8) = iVar5;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x70) = 0x40e4a5;\n                                        in_RAX = fcn.0045c6a0();\n                                    }\n                                }\n                                in_RAX[4][0xb] = uVar13 + 1;\n                                *(in_RAX[5] + 8) = ppcVar7;\n                                return;\n                            }\n                            arg1 = *(*0x20 + -0x20);\n                            *(*0x20 + -0x70) = 0x40e3a7;\n                            iVar5 = fcn.0040d640(arg1);\n                            if (iVar5 != 0) {\n                                if (*0x5d3dd0 == 0) {\n                                    in_RAX = *(*0x20 + 8);\n                                    **in_RAX = iVar5;\n                                    *(*in_RAX + 8) = iVar8;\n                                }\n                                else {\n                                    in_RAX = *(*0x20 + 8);\n                                    *(*0x20 + -0x70) = 0x40e3f6;\n                                    fcn.0045c5a0(arg1, arg2, uVar11, uVar4);\n                                    *(*0x20 + -0x70) = 0x40e405;\n                                    fcn.0045c6e0(in_RAX, arg2, uVar11, uVar4);\n                                }\n                                arg1_00 = *(*0x20 + -0x40);\n                                uVar13 = *(*0x20 + -0x49);\n                                iVar5 = *(*0x20 + -0x10);\n                                ppcVar7 = *(*0x20 + -0x48);\n                                goto code_r0x0040e478;\n                            }\n                            in_RAX = *(*0x20 + 8);\n                            ppcVar7 = *(*0x20 + -0x48);\n                            iVar8 = *(*0x20 + -0x18);\n                            iVar10 = *(*0x20 + -0x28);\n                            arg1_00 = *(*0x20 + -0x40);\n                            uVar14 = *(*0x20 + -0x49);\n                            iVar5 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x38) = uVar4;\n                            if ((uVar12 >> 2 & 1) == 0) {\n                                pcVar2 = **(*(iVar10 + 0x30) + 0x18);\n                                *(*0x20 + -0x70) = 0x40e222;\n                                cVar3 = (*pcVar2)();\n                                iVar5 = *(*0x20 + -0x10);\n                                ppcVar7 = *(*0x20 + -0x48);\n                                iVar8 = *(*0x20 + -0x18);\n                                iVar10 = *(*0x20 + -0x28);\n                                arg1_00 = *(*0x20 + -0x40);\n                                uVar4 = *(*0x20 + -0x38);\n                                uVar14 = *(*0x20 + -0x49);\n                                ppiVar16 = *(*0x20 + -0x30);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            else {\n                                cVar3 = '\\x01';\n                            }\n                            uVar13 = uVar14;\n                            if (cVar3 == '\\0') {\n                                uVar6 = in_RAX[4][10] - 1;\n                                arg2 = ppcVar7 >> (uVar6 & 0x3f) & -(uVar6 < 0x40);\n                                if ((*(iVar5 + uVar4) & 1) == arg2) goto code_r0x0040e324;\n                            }\n                            else {\n                                arg2 = *(iVar10 + 0x48);\n                                pcVar2 = *arg2;\n                                *(*0x20 + -0x70) = 0x40e2ab;\n                                uVar4 = (*pcVar2)();\n                                in_RAX = *(*0x20 + 8);\n                                ppcVar7 = *(*0x20 + -0x48);\n                                if (ppcVar7 == (uVar4 & (1 << (in_RAX[4][10] & 0x3f)) - 1U)) {\n                                    iVar8 = *(*0x20 + -0x18);\n                                    iVar10 = *(*0x20 + -0x28);\n                                    arg1_00 = *(*0x20 + -0x40);\n                                    uVar4 = *(*0x20 + -0x38);\n                                    uVar13 = *(*0x20 + -0x49);\n                                    ppiVar16 = *(*0x20 + -0x30);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    goto code_r0x0040e324;\n                                }\n                                iVar8 = *(*0x20 + -0x18);\n                                iVar10 = *(*0x20 + -0x28);\n                                arg1_00 = *(*0x20 + -0x40);\n                                uVar14 = *(*0x20 + -0x49);\n                                iVar5 = *(*0x20 + -0x10);\n                            }\n                        }\ncode_r0x0040e15c:\n                    }\n                    iVar5 = *(iVar5 + *(iVar10 + 0x52) + -8);\n                    uVar14 = 0;\n                } while( true );\n            }\n            *(*0x20 + -0x70) = 0x40e4cb;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x40e4d6;\n        fcn.0045a360();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 3177
    },
    "0040e780": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e780(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t **arg3;\n    ulong *arg3_00;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *arg1_01;\n    int64_t **arg1_02;\n    int64_t **ppiVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x30 < *(unaff_R14 + 0x10) || *0x20 + -0x30 == *(unaff_R14 + 0x10)) {\ncode_r0x0040ecea:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40ecfe;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xb0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x91) = uVar4;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x78) = iVar7;\n        for (; arg1 = uVar4,  pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            arg1_02 = pcVar6 + 8;\n            arg1_01 = pcVar6 + *(in_RAX + 0x50) * 8 + 8;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar3 = pcVar6[iVar8];\n                if (1 < uVar3) {\n                    if (4 < uVar3) {\n                        ppiVar9 = arg1_02;\n                        if ((*(in_RAX + 0x54) & 1) != 0) {\n                            ppiVar9 = *arg1_02;\n                        }\n                        *(*0x20 + -0x90) = iVar8;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x68) = ppiVar9;\n                        *(*0x20 + -0x60) = arg1_02;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            *(*0x20 + -0x93) = uVar3;\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xb8) = 0x40e9dd;\n                            uVar4 = (*pcVar2)();\n                            if ((*(*(*0x20 + 0x10) + 8) & 1) == 0) {\n                                uVar3 = 0;\n                            }\n                            else if ((*(*(*0x20 + 8) + 0x54) >> 2 & 1) == 0) {\n                                *(*0x20 + -0x88) = uVar4;\n                                pcVar2 = **(*(*(*0x20 + 8) + 0x30) + 0x18);\n                                *(*0x20 + -0xb8) = 0x40ea22;\n                                uVar3 = (*pcVar2)();\n                                uVar3 = uVar3 ^ 1;\n                                uVar4 = *(*0x20 + -0x88);\n                            }\n                            else {\n                                uVar3 = 0;\n                            }\n                            if (uVar3 == 0) {\n                                bVar10 = (uVar4 >> (*(*0x20 + -0x91) & 0x3f) & 1) != 0;\n                                uVar3 = *(*0x20 + -0x93);\n                            }\n                            else {\n                                uVar3 = uVar4 >> 0x38;\n                                if (uVar3 < 5) {\n                                    uVar3 = uVar3 + 5;\n                                }\n                                bVar10 = *(*0x20 + -0x93) & 1;\n                            }\n                            arg1 = *(*0x20 + -0x91);\n                            arg2 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            iVar8 = *(*0x20 + -0x90);\n                            arg1_01 = *(*0x20 + -0x58);\n                            arg1_02 = *(*0x20 + -0x60);\n                            ppiVar9 = *(*0x20 + -0x68);\n                            in_RAX = *(*0x20 + 8);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar10 = false;\n                        }\n                        pcVar6[iVar8] = bVar10 + 2;\n                        if (bVar10 < 2) {\n                            iVar7 = bVar10 * 0x20;\n                            *(*0x20 + -0x80) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                *(*0x20 + -0x92) = uVar3;\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xb8) = 0x40eb05;\n                                iVar8 = fcn.0040cc80(arg1_00);\n                                iVar7 = *(*0x20 + -0x80);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                in_RAX = *(*0x20 + 8);\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                                uVar3 = *(*0x20 + -0x92);\n                                ppiVar9 = *(*0x20 + -0x68);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar3;\n                            if ((*(in_RAX + 0x54) & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40ebe5;\n                                fcn.00411220(arg1_02);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3 = *(*0x20 + iVar7 + -0x38);\n                                if (*0x5d3dd0 == 0) {\n                                    *arg3 = ppiVar9;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40ebc5;\n                                    in_RAX = fcn.0045c700(arg1, arg2, arg3, iVar7);\n                                }\n                            }\n                            if ((*(in_RAX + 0x54) >> 1 & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40ec6f;\n                                fcn.00411220(arg1_01);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3_00 = *(*0x20 + iVar7 + -0x30);\n                                if (*0x5d3dd0 == 0) {\n                                    *arg3_00 = *arg1_01;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40ec50;\n                                    in_RAX = fcn.0045c700(arg1, arg2, arg3_00, iVar7);\n                                }\n                            }\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + *(in_RAX + 0x50);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            iVar7 = *(*0x20 + -0x78);\n                            goto code_r0x0040e953;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xb8) = 0x40ecd8;\n                        fcn.0045ca40(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xb8) = 0x40ece9;\n                    in_RAX = fcn.004330a0();\n                    goto code_r0x0040ecea;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x0040e953:\n                arg1_02 = arg1_02 + *(in_RAX + 0x50);\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xb8) = 0x40e934;\n            fcn.00411520(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x78);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xb8) = 0x40e8b9;\n        fcn.0040ed20(iVar7);\n    }\n    return;\n}\n",
        "token_count": 3269
    },
    "0040ed20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040ed20(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar1 = *(in_RAX + 0x20);\n    *(in_RAX + 0x20) = iVar1 + 1;\n    uVar3 = iVar1 + 0x401;\n    if (arg1 < uVar3) {\n        uVar3 = arg1;\n    }\n    while ((uVar2 = *(in_RAX + 0x20),  uVar2 != uVar3 && (*(*(unaff_RBX + 0x52) * uVar2 + *(in_RAX + 0x18)) - 2U < 3)))\n    {\n        *(in_RAX + 0x20) = uVar2 + 1;\n    }\n    if (arg1 == uVar2) {\n        if (*0x5d3dd0 == 0) {\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            in_RAX = fcn.0045c6a0(0);\n        }\n        if (*(in_RAX + 0x28) != 0) {\n            if (*0x5d3dd0 == 0) {\n                *(*(in_RAX + 0x28) + 8) = 0;\n            }\n            else {\n                in_RAX = fcn.0045c6a0();\n            }\n        }\n        *(in_RAX + 8) = *(in_RAX + 8) & 0xf7;\n    }\n    return;\n}\n",
        "token_count": 434
    },
    "0040ee20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040ee20(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x5d4c80;\n            }\n            arg1._0_4_ = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    iVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x40ee96;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    iVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            iVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (iVar4 == 0) {\n                        return 0x5d4c80;\n                    }\n                    piVar5 = iVar4 + 8;\n                    for (uVar6 = 0; uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + iVar4))) {\n                            return uVar6 * *(in_RAX + 0x51) + iVar4 + 0x28;\n                        }\n                        piVar5 = piVar5 + 1;\n                    }\n                    iVar4 = *(iVar4 + *(in_RAX + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x40ef89;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40ef9d;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 955
    },
    "0040efc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040efc0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x5d4c80;\n            }\n            arg1._0_4_ = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    iVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x40f036;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    iVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            iVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (iVar4 == 0) {\n                        return 0x5d4c80;\n                    }\n                    piVar5 = iVar4 + 8;\n                    for (uVar6 = 0; uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + iVar4))) {\n                            return uVar6 * *(in_RAX + 0x51) + iVar4 + 0x28;\n                        }\n                        piVar5 = piVar5 + 1;\n                    }\n                    iVar4 = *(iVar4 + *(in_RAX + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x40f136;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40f14a;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 956
    },
    "0040f500": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f500(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    char *pcVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint *puVar9;\n    char *arg1_01;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar4 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0040f88b:\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40f89f;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    }\n    puVar4 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar5 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar6 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar6 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar6 & 0x3f);\n    uVar3 = arg1;\n    if (2 < *pcVar5 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x28;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x28;\n        }\n        *(*0x20 + -0x78) = arg1;\n        *(*0x20 + -0x81) = uVar6;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x68) = iVar7;\n        arg1 = uVar6;\n        for (; pcVar5 != NULL; pcVar5 = *(pcVar5 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar5;\n            puVar9 = pcVar5 + 8;\n            arg1_01 = pcVar5 + 0x28;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar5[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x40f722;\n                            uVar3 = (*pcVar2)();\n                            bVar11 = (uVar3 >> (*(*0x20 + -0x81) & 0x3f) & 1) != 0;\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x80);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar5 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar5[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x70) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x40f7a5;\n                                iVar8 = fcn.0040cc80(arg1_00);\n                                iVar7 = *(*0x20 + -0x70);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x28;\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_01 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            **(*0x20 + iVar7 + -0x38) = *puVar9;\n                            *(*0x20 + -0xa8) = 0x40f816;\n                            fcn.00411220(arg1_01);\n                            iVar7 = *(*0x20 + -0x70);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 4;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            uVar3 = *(*0x20 + -0x78);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar5 = *(*0x20 + -0x50);\n                            iVar7 = *(*0x20 + -0x68);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x80);\n                            goto code_r0x0040f6a9;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x40f879;\n                        fcn.0045ca40(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x40f88a;\n                    in_RAX = fcn.004330a0();\n                    goto code_r0x0040f88b;\n                }\n                pcVar5[iVar8] = '\\x04';\ncode_r0x0040f6a9:\n                puVar9 = puVar9 + 1;\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40f68a;\n            fcn.00411520(uVar1 * uVar3 + iVar7 + 8);\n            uVar3 = *(*0x20 + -0x78);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x68);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == uVar3) {\n        *(*0x20 + -0xa8) = 0x40f619;\n        fcn.0040ed20(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2253
    },
    "0040f8c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040f8c0(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x5d4c80;\n            }\n            arg1 = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    piVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x40f936;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    piVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            piVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (piVar4 == NULL) {\n                        return 0x5d4c80;\n                    }\n                    piVar5 = piVar4;\n                    for (uVar6 = 0; piVar5 = piVar5 + 1,  uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + piVar4))) {\n                            return piVar4 + *(in_RAX + 0x51) * uVar6 + 0x48;\n                        }\n                    }\n                    piVar4 = *(piVar4 + (*(in_RAX + 0x52) - 8));\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x40fa36;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40fa4b;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 955
    },
    "00410140": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00410140(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong *puVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    ulong *arg1_00;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0041053b:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x41054f;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    puVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *puVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x48;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x48;\n        }\n        *(*0x20 + -0x68) = arg1;\n        *(*0x20 + -0x81) = uVar4;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x70) = iVar7;\n        for (; arg1 = uVar4,  puVar6 != NULL; puVar6 = *(puVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = puVar6;\n            arg1_00 = puVar6 + 9;\n            puVar9 = puVar6;\n            for (iVar8 = 0; puVar9 = puVar9 + 1,  iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = *(puVar6 + iVar8);\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_00;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x410362;\n                            uVar4 = (*pcVar2)();\n                            arg1 = *(*0x20 + -0x81);\n                            bVar11 = (uVar4 >> (arg1 & 0x3f) & 1) != 0;\n                            in_RAX = *(*0x20 + 8);\n                            arg2 = *(*0x20 + -0x68);\n                            iVar8 = *(*0x20 + -0x80);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x82);\n                            puVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        *(puVar6 + iVar8) = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x78) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                uVar3 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x4103e6;\n                                iVar8 = fcn.0040cc80(uVar3);\n                                iVar7 = *(*0x20 + -0x78);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x48;\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x81);\n                                arg2 = *(*0x20 + -0x68);\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                                iVar7 = *(*0x20 + -0x78);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            if ((*(*(in_RAX + 0x30) + 8) == 0) || (*0x5d3dd0 == '\\0')) {\n                                **(*0x20 + iVar7 + -0x38) = *puVar9;\n                            }\n                            else {\n                                puVar6 = *(*0x20 + iVar7 + -0x38);\n                                uVar3 = *puVar9;\n                                if (*0x5d3dd0 == 0) {\n                                    *puVar6 = uVar3;\n                                }\n                                else {\n                                    *(*0x20 + -0xa8) = 0x41049c;\n                                    fcn.0045c720(arg1, arg2, uVar3, puVar6);\n                                }\n                            }\n                            *(*0x20 + -0xa8) = 0x4104c5;\n                            fcn.00411220(arg1_00);\n                            iVar7 = *(*0x20 + -0x78);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 8;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            arg2 = *(*0x20 + -0x68);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            puVar6 = *(*0x20 + -0x50);\n                            iVar8 = *(*0x20 + -0x80);\n                            iVar7 = *(*0x20 + -0x70);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            goto code_r0x004102e8;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x410529;\n                        fcn.0045ca40(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x41053a;\n                    in_RAX = fcn.004330a0();\n                    goto code_r0x0041053b;\n                }\n                *(puVar6 + iVar8) = '\\x04';\ncode_r0x004102e8:\n                arg1_00 = arg1_00 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x4102c9;\n            fcn.00411520(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x68);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x70);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xa8) = 0x410259;\n        fcn.0040ed20(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2472
    },
    "00410580": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00410580(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    int64_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int32_t *unaff_RDI;\n    int64_t iVar11;\n    int64_t iVar12;\n    int32_t **ppiVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x5d4c80;\n            }\n            if ((*(unaff_RBX + 1) & 4) == 0) break;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x68) = 0x410925;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x41093f;\n        fcn.0045a360();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 8) = in_RAX;\n    if (*(unaff_RBX + 9) != '\\0') {\ncode_r0x00410607:\n        *(*0x20 + 0x10) = unaff_RBX;\n        pcVar1 = **(in_RAX + 0x48);\n        *(*0x20 + -0x68) = 0x410622;\n        uVar7 = (*pcVar1)();\n        iVar12 = *(*0x20 + 0x10);\n        uVar8 = (1 << (*(iVar12 + 9) & 0x3f)) - 1;\n        iVar11 = *(*0x20 + 8);\n        iVar2 = *(iVar12 + 0x18);\n        iVar6 = (uVar8 & uVar7) * *(iVar11 + 0x52) + *(iVar12 + 0x10);\n        if (iVar2 != 0) {\n            if ((*(iVar12 + 8) & 8) == 0) {\n                uVar8 = uVar8 >> 1;\n            }\n            iVar12 = *(iVar11 + 0x52) * (uVar8 & uVar7);\n            if (2 < *(iVar2 + iVar12) - 2U) {\n                iVar6 = iVar2 + iVar12;\n            }\n        }\n        uVar8 = uVar7 >> 0x38;\n        if (uVar7 >> 0x38 < 5) {\n            uVar8 = (uVar7 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x41) = uVar8;\n        do {\n            if (iVar6 == 0) {\n                return 0x5d4c80;\n            }\n            *(*0x20 + -0x18) = iVar6;\n            piVar9 = iVar6 + 8;\n            for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n                if ((piVar9[1] == *(*0x20 + 0x20)) && (*(uVar7 + iVar6) == uVar8)) {\n                    if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x00410745:\n                        return iVar6 + uVar7 * *(iVar11 + 0x51) + 0x88;\n                    }\n                    *(*0x20 + -0x38) = uVar7;\n                    *(*0x20 + -0x28) = piVar9;\n                    *(*0x20 + -0x68) = 0x410717;\n                    cVar5 = fcn.004021c0(*(*0x20 + 0x20), piVar9);\n                    if (cVar5 != '\\0') {\n                        iVar6 = *(*0x20 + -0x18);\n                        uVar7 = *(*0x20 + -0x38);\n                        iVar11 = *(*0x20 + 8);\n                        goto code_r0x00410745;\n                    }\n                    uVar8 = *(*0x20 + -0x41);\n                    iVar6 = *(*0x20 + -0x18);\n                    piVar9 = *(*0x20 + -0x28);\n                    uVar7 = *(*0x20 + -0x38);\n                    iVar11 = *(*0x20 + 8);\n                }\n                piVar9 = piVar9 + 2;\n            }\n            iVar6 = *(iVar6 + *(iVar11 + 0x52) + -8);\n        } while( true );\n    }\n    iVar12 = unaff_RBX[2];\n    *(*0x20 + -0x10) = iVar12;\n    if (0x1f < unaff_RDI) {\n        ppiVar13 = iVar12 + 8;\n        uVar8 = 8;\n        for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n            if ((ppiVar13[1] == unaff_RDI) && (1 < *(uVar7 + iVar12))) {\n                piVar3 = *ppiVar13;\n                piVar4 = *(*0x20 + 0x18);\n                if (piVar4 == piVar3) {\n                    return uVar7 * *(in_RAX + 0x51) + iVar12 + 0x88;\n                }\n                if (((*piVar3 == *piVar4) && (*(unaff_RDI + piVar4 + -4) == *(unaff_RDI + piVar3 + -4))) &&\n                   (bVar14 = uVar8 != 8,  uVar8 = uVar7,  bVar14)) goto code_r0x00410607;\n            }\n            else if (*(uVar7 + iVar12) == '\\0') break;\n            ppiVar13 = ppiVar13 + 2;\n        }\n        if (uVar8 != 8) {\n            *(*0x20 + -0x40) = uVar8;\n            *(*0x20 + -0x68) = 0x410818;\n            cVar5 = fcn.004021c0(unaff_RDI, uVar8 * 0x10 + iVar12 + 8);\n            if (cVar5 != '\\0') {\n                return *(*0x20 + -0x10) + *(*0x20 + -0x40) * *(*(*0x20 + 8) + 0x51) + 0x88;\n            }\n        }\n        return 0x5d4c80;\n    }\n    piVar9 = iVar12 + 8;\n    uVar8 = 0;\n    do {\n        if (7 < uVar8) {\n            return 0x5d4c80;\n        }\n        if ((piVar9[1] == *(*0x20 + 0x20)) && (1 < *(uVar8 + iVar12))) {\n            if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x004108e3:\n                return iVar12 + uVar8 * *(in_RAX + 0x51) + 0x88;\n            }\n            *(*0x20 + -0x30) = uVar8;\n            *(*0x20 + -0x20) = piVar9;\n            *(*0x20 + -0x68) = 0x4108ba;\n            cVar5 = fcn.004021c0(*(*0x20 + 0x20), piVar9);\n            if (cVar5 != '\\0') {\n                in_RAX = *(*0x20 + 8);\n                uVar8 = *(*0x20 + -0x30);\n                iVar12 = *(*0x20 + -0x10);\n                goto code_r0x004108e3;\n            }\n            in_RAX = *(*0x20 + 8);\n            uVar8 = *(*0x20 + -0x30);\n            piVar9 = *(*0x20 + -0x20);\n            iVar12 = *(*0x20 + -0x10);\n        }\n        else if (*(uVar8 + iVar12) == '\\0') {\n            return 0x5d4c80;\n        }\n        uVar8 = uVar8 + 1;\n        piVar9 = piVar9 + 2;\n    } while( true );\n}\n",
        "token_count": 2187
    },
    "00410e00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00410e00(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    ulong *arg4;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    char *arg1_00;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x004111db:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x4111ef;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x88;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x88;\n        }\n        *(*0x20 + -0x78) = arg1;\n        *(*0x20 + -0x81) = uVar4;\n        *(*0x20 + -0x68) = iVar7;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        for (; arg1 = uVar4,  pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            puVar9 = pcVar6 + 8;\n            arg1_00 = pcVar6 + 0x88;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar6[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_00;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x411022;\n                            uVar4 = (*pcVar2)();\n                            arg1 = *(*0x20 + -0x81);\n                            bVar11 = (uVar4 >> (arg1 & 0x3f) & 1) != 0;\n                            arg2 = *(*0x20 + -0x78);\n                            iVar8 = *(*0x20 + -0x80);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar6[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x70) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                uVar3 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x4110a6;\n                                iVar8 = fcn.0040cc80(uVar3);\n                                iVar7 = *(*0x20 + -0x70);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x88;\n                                arg1 = *(*0x20 + -0x81);\n                                arg2 = *(*0x20 + -0x78);\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                                iVar7 = *(*0x20 + -0x70);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            arg4 = *(*0x20 + iVar7 + -0x38);\n                            uVar3 = *puVar9;\n                            arg4[1] = puVar9[1];\n                            if (*0x5d3dd0 == 0) {\n                                *arg4 = uVar3;\n                            }\n                            else {\n                                *(*0x20 + -0xa8) = 0x41114d;\n                                fcn.0045c720(arg1, arg2, uVar3, arg4);\n                            }\n                            *(*0x20 + -0xa8) = 0x411165;\n                            fcn.00411220(arg1_00);\n                            iVar7 = *(*0x20 + -0x70);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 0x10;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            arg2 = *(*0x20 + -0x78);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar6 = *(*0x20 + -0x50);\n                            iVar8 = *(*0x20 + -0x80);\n                            iVar7 = *(*0x20 + -0x68);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            goto code_r0x00410fb3;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x4111c9;\n                        fcn.0045ca40(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x4111da;\n                    in_RAX = fcn.004330a0();\n                    goto code_r0x004111db;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x00410fb3:\n                puVar9 = puVar9 + 2;\n                arg1_00 = arg1_00 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x410f94;\n            fcn.00411520(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x78);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x68);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xa8) = 0x410f1f;\n        fcn.0040ed20(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2400
    },
    "00411ca0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00411ca0(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    code *pcVar5;\n    uint64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint8_t *puVar11;\n    uint64_t unaff_RBX;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint8_t *puVar14;\n    int64_t iVar15;\n    int64_t unaff_R14;\n    \n    if (((in_RAX | unaff_RBX | arg1) & 7) == 0) {\n        if (*0x5d3dd4 == '\\0') {\n            return;\n        }\n        uVar6 = in_RAX + 0x800000000000 >> 0x16;\n        uVar10 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar10 < 0x40) {\n            iVar12 = *(uVar10 * 8 + 0x5a5f90);\n            if (iVar12 == 0) {\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = *(iVar12 + (uVar6 & 0xfffff) * 8);\n                if (iVar12 == 0) {\n                    iVar12 = 0;\n                }\n                else {\n                    iVar12 = *(iVar12 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n                }\n            }\n        }\n        else {\n            iVar12 = 0;\n        }\n        if (iVar12 == 0) {\n            if (*0x57efb8 == NULL) {\n                iVar15 = 0;\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = **0x57efb8;\n                iVar15 = (*0x57efb8)[1];\n            }\n            iVar7 = 0;\n            while( true ) {\n                if (iVar15 <= iVar7) {\n                    if (*0x57efb8 == NULL) {\n                        iVar15 = 0;\n                        iVar12 = 0;\n                    }\n                    else {\n                        iVar12 = **0x57efb8;\n                        iVar15 = (*0x57efb8)[1];\n                    }\n                    iVar7 = 0;\n                    while( true ) {\n                        if (iVar15 <= iVar7) {\n                            return;\n                        }\n                        iVar2 = *(iVar12 + iVar7 * 8);\n                        if ((*(iVar2 + 0xe0) <= in_RAX) &&\n                           (puVar1 = iVar2 + 0xe8,  in_RAX <= *puVar1 && *puVar1 != in_RAX)) break;\n                        iVar7 = iVar7 + 1;\n                    }\n                    fcn.00412320(arg1);\n                    return;\n                }\n                iVar2 = *(iVar12 + iVar7 * 8);\n                if ((*(iVar2 + 0xd0) <= in_RAX) && (puVar1 = iVar2 + 0xd8,  in_RAX <= *puVar1 && *puVar1 != in_RAX))\n                break;\n                iVar7 = iVar7 + 1;\n            }\n            fcn.00412320(arg1);\n            return;\n        }\n        if (((*(iVar12 + 99) != '\\x01') || (in_RAX <= *(iVar12 + 0x18) && *(iVar12 + 0x18) != in_RAX)) ||\n           (*(iVar12 + 0x70) < in_RAX || *(iVar12 + 0x70) == in_RAX)) {\n            return;\n        }\n        iVar12 = *(*(unaff_R14 + 0x30) + 0xa0);\n        if (uVar10 < 0x40) {\n            iVar15 = *(*(uVar10 * 8 + 0x5a5f90) + (uVar6 & 0xfffff) * 8);\n            if (iVar15 == 0) {\n                uVar6 = 0;\n                uVar13 = 0;\n                puVar11 = NULL;\n                puVar14 = NULL;\n            }\n            else {\n                puVar14 = iVar15 + (in_RAX >> 5 & 0x1ffff);\n                uVar13 = in_RAX >> 3 & 3;\n                puVar11 = iVar15 + 0x1ffff;\n            }\n            if (unaff_RBX == 0) {\n                for (uVar10 = 0; uVar10 < arg1; uVar10 = uVar10 + 8) {\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x1260);\n                        *puVar4 = *(uVar10 + in_RAX);\n                        puVar4[1] = 0;\n                        iVar15 = *(iVar12 + 0x1260) + 0x10;\n                        *(iVar12 + 0x1260) = iVar15;\n                        if (*(iVar12 + 0x1268) == iVar15) {\n                            fcn.0042c700();\n                            uVar6 = uVar6 & 0xffffffff;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar13 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar9 = uVar6 & 0xffffffff;\n                        puVar14 = fcn.00411a80(uVar6 & 0xffffffff);\n                        uVar6 = uVar9;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar13 = 0;\n                    }\n                }\n            }\n            else {\n                uVar10 = unaff_RBX;\n                for (uVar8 = 0; uVar8 < arg1; uVar8 = uVar8 + 8) {\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x1260);\n                        uVar3 = *(uVar8 + unaff_RBX);\n                        *puVar4 = *(uVar8 + in_RAX);\n                        puVar4[1] = uVar3;\n                        iVar15 = *(iVar12 + 0x1260) + 0x10;\n                        *(iVar12 + 0x1260) = iVar15;\n                        if (*(iVar12 + 0x1268) == iVar15) {\n                            unaff_RBX = uVar10;\n                            fcn.0042c700();\n                            uVar6 = uVar6 & 0xffffffff;\n                            uVar10 = unaff_RBX;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar13 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar9 = uVar6 & 0xffffffff;\n                        unaff_RBX = uVar10;\n                        puVar14 = fcn.00411a80(uVar6 & 0xffffffff);\n                        uVar6 = uVar9;\n                        uVar10 = unaff_RBX;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar13 = 0;\n                    }\n                }\n            }\n            return;\n        }\n        fcn.0045ca60(0x40);\n    }\n    fcn.004330a0();\n    pcVar5 = swi(3);\n    (*pcVar5)();\n    return;\n}\n",
        "token_count": 1720
    },
    "00412120": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00412120(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint32_t uVar11;\n    uint8_t *puVar12;\n    int64_t unaff_R14;\n    \n    if (((unaff_RBX | in_RAX | arg1) & 7) == 0) {\n        if (*0x5d3dd4 == '\\0') {\n            return;\n        }\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar9 = in_RAX + 0x800000000000 >> 0x16;\n            iVar10 = *(*(uVar7 * 8 + 0x5a5f90) + (uVar9 & 0xfffff) * 8);\n            if (iVar10 == 0) {\n                uVar9 = 0;\n                uVar11 = 0;\n                puVar8 = NULL;\n                puVar12 = NULL;\n            }\n            else {\n                puVar12 = iVar10 + (in_RAX >> 5 & 0x1ffff);\n                uVar11 = in_RAX >> 3 & 3;\n                puVar8 = iVar10 + 0x1ffff;\n            }\n            uVar7 = unaff_RBX;\n            for (uVar5 = 0; uVar5 < arg1; uVar5 = uVar5 + 8) {\n                if ((*puVar12 >> (uVar11 & 0x1f) & 1) != 0) {\n                    puVar2 = *(iVar1 + 0x1260);\n                    uVar3 = *(uVar5 + unaff_RBX);\n                    *puVar2 = 0;\n                    puVar2[1] = uVar3;\n                    iVar10 = *(iVar1 + 0x1260) + 0x10;\n                    *(iVar1 + 0x1260) = iVar10;\n                    if (*(iVar1 + 0x1268) == iVar10) {\n                        unaff_RBX = uVar7;\n                        fcn.0042c700();\n                        uVar9 = uVar9 & 0xffffffff;\n                        uVar7 = unaff_RBX;\n                    }\n                }\n                if (uVar11 < 3) {\n                    uVar11 = uVar11 + 1;\n                }\n                else if (puVar8 == puVar12) {\n                    uVar6 = uVar9 & 0xffffffff;\n                    unaff_RBX = uVar7;\n                    puVar12 = fcn.00411a80(uVar9 & 0xffffffff);\n                    uVar9 = uVar6;\n                    uVar7 = unaff_RBX;\n                }\n                else {\n                    puVar12 = puVar12 + 1;\n                    uVar11 = 0;\n                }\n            }\n            return;\n        }\n        fcn.0045ca60(0x40);\n    }\n    fcn.004330a0();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 786
    },
    "00412860": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00412d68)\n\nvoid fcn.00412860(uint64_t arg1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint8_t *in_RAX;\n    uint8_t *puVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int8_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint8_t *puVar10;\n    uint64_t uVar11;\n    uint64_t *unaff_RDI;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar17;\n    uint8_t uVar18;\n    uint8_t uVar19;\n    int64_t iVar20;\n    uint64_t uVar21;\n    uint8_t *puVar22;\n    uint64_t uVar23;\n    int64_t unaff_R14;\n    uint8_t *puVar24;\n    uint64_t uVar25;\n    bool bVar26;\n    uint32_t uVar16;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 8) {\n                return;\n            }\n            uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n            if (uVar7 < 0x40) {\n                puVar22 = in_RAX + 0x800000000000 >> 0x16;\n                uVar25 = puVar22 & 0xfffff;\n                iVar20 = *(*(uVar7 * 8 + 0x5a5f90) + uVar25 * 8);\n                if (iVar20 == 0) {\n                    puVar3 = NULL;\n                    uVar5 = 0;\n                    puVar24 = NULL;\n                    puVar10 = NULL;\n                }\n                else {\n                    puVar3 = iVar20 + (in_RAX >> 5 & 0x1ffff);\n                    uVar5 = in_RAX >> 3 & 3;\n                    puVar24 = iVar20 + 0x1ffff;\n                    puVar10 = puVar22;\n                }\n                puVar1 = unaff_RDI[4];\n                uVar13 = uVar5;\n                if (unaff_RBX == 0x10) {\n                    iVar6 = uVar5;\n                    if (*unaff_RDI != 8) {\n                        *puVar3 = -(uVar13 < 0x20) &\n                                  (*puVar1 & 3 |\n                                  (-(unaff_RDI[1] >> 3 < 0x20) & 0x10 << (unaff_RDI[1] >> 3 & 0x1f)) - 1 & 0xf0) <<\n                                  iVar6 | ~(0x33 << iVar6 & -(uVar13 < 0x20)) & *puVar3;\n                        return;\n                    }\n                    *puVar3 = *puVar3 | 0x33 << iVar6 & -(uVar13 < 0x20);\n                    return;\n                }\n                if (unaff_RBX == 0x18) {\n                    uVar14 = *puVar1;\n                    if (*unaff_RDI == 8) {\n                        uVar14 = 7;\n                    }\n                    uVar14 = (uVar14 & 7) << 4 | uVar14 & 7;\n                    uVar16 = (uVar14 & 0x40) >> 1;\n                    uVar15 = uVar16 | uVar14;\n                    uVar17 = uVar15 | 0x10;\n                    uVar19 = uVar17;\n                    if (uVar13 < 2) {\n                        if (uVar13 == 0) {\n                            *puVar3 = *puVar3 & 0x88 | uVar15 | 0x10;\n                        }\n                        else {\n                            *puVar3 = uVar17 << 1 | *puVar3 & 0x11;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0xeb) = uVar19;\n                        if (uVar13 == 2) {\n                            *puVar3 = (uVar16 | uVar14 & 0x33 | 0x10) << 2 | *puVar3 & 0x33;\n                            if (puVar3 == puVar24) {\n                                *(*0x20 + -0x138) = 0x412b97;\n                                puVar3 = fcn.00411a80(puVar10 & 0xffffffff);\n                                uVar19 = *(*0x20 + -0xeb);\n                            }\n                            else {\n                                puVar3 = puVar3 + 1;\n                            }\n                            *puVar3 = uVar19 >> 2 & 0x11 | *puVar3 & 0xee;\n                        }\n                        else if (uVar13 == 3) {\n                            *puVar3 = *puVar3 & 0x77 | (uVar14 & 0x11 | 0x10) << 3;\n                            if (puVar3 == puVar24) {\n                                *(*0x20 + -0x138) = 0x412bf2;\n                                puVar3 = fcn.00411a80(puVar10 & 0xffffffff);\n                                uVar19 = *(*0x20 + -0xeb);\n                            }\n                            else {\n                                puVar3 = puVar3 + 1;\n                            }\n                            *puVar3 = uVar19 >> 1 & 0x33 | *puVar3 & 0xcc;\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x48) = puVar1;\n                *(*0x20 + -0x30) = puVar3;\n                uVar23 = puVar10 & 0xffffffff;\n                uVar8 = in_RAX + unaff_RBX + 0x7fffffffffff >> 0x16;\n                puVar3 = in_RAX;\n                if (uVar23 == uVar8) {\n                    puVar3 = *(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x58) = in_RAX;\n                *(*0x20 + -0x60) = uVar25;\n                *(*0x20 + -0x68) = uVar8;\n                *(*0x20 + -0x70) = uVar7;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x78) = puVar22;\n                if ((*(unaff_RDI + 0x17) & 0x40) == 0) {\n                    *(*0x20 + -0x38) = puVar3;\n                    uVar7 = *unaff_RDI;\n                    if (arg1 <= uVar7) {\n                        uVar4 = 0;\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0xd8) = 0;\n                        *(*0x20 + -0xc0) = 0;\n                        puVar10 = *(*0x20 + -0x48);\n                        goto code_r0x00412f2a;\n                    }\n                    *(*0x20 + -0x80) = uVar7;\n                    uVar25 = unaff_RDI[1] >> 3;\n                    if (uVar25 < 0x3a) {\n                        *(*0x20 + 0x18) = arg1;\n                        puVar22 = *(*0x20 + -0x48);\n                        *(*0x20 + -0xa8) = puVar3;\n                        *(*0x20 + -200) = 0;\n                        *(*0x20 + -0xb0) = 0;\n                        puVar3 = *(*0x20 + -0xa8);\n                        while (uVar11 = *(*0x20 + -200),  uVar11 < uVar25) {\n                            uVar19 = *puVar22;\n                            puVar22 = puVar22 + 1;\n                            uVar8 = *(*0x20 + -0x68);\n                            *(*0x20 + -200) = uVar11 + 8;\n                            *(*0x20 + -0xb0) = *(*0x20 + -0xb0) | uVar19 << (uVar11 & 0x3f) & -(uVar11 < 0x40);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        uVar7 = uVar7 >> 3;\n                        if (uVar7 * 2 < 0x3a) {\n                            uVar11 = *(*0x20 + -0xb0);\n                            for (uVar25 = uVar7; uVar25 < 0x41; uVar25 = uVar25 * 2) {\n                                *(*0x20 + -0xd8) = uVar11;\n                                uVar11 = uVar11 << (uVar25 & 0x3f) & -(uVar25 < 0x40) | *(*0x20 + -0xd8);\n                                arg1 = *(*0x20 + 0x18);\n                            }\n                            if (uVar7 == '\\0') {\n                                *(*0x20 + -0x138) = 0x4134b9;\n                                fcn.00431720();\n                                goto code_r0x004134b9;\n                            }\n                            *(*0x20 + -0xea) = uVar7 & 0xff;\n                            uVar7 = (0x39 / *(*0x20 + -0xea)) * uVar7;\n                            uVar11 = (1 << (uVar7 & 0x3f) & -(uVar7 < 0x40)) - 1 & uVar11;\n                            puVar3 = *(*0x20 + -0x38);\n                            uVar8 = *(*0x20 + -0x68);\n                        }\n                        else {\n                            uVar11 = *(*0x20 + -0xb0);\n                        }\n                        *(*0x20 + -0xd0) = uVar7;\n                        uVar25 = 0;\n                        *(*0x20 + -0xd8) = uVar11;\n                        puVar10 = NULL;\n                    }\n                    else {\n                        uVar25 = uVar25 + 7 >> 3;\n                        uVar7 = (uVar7 >> 3) + (uVar25 - 1) * -8;\n                        uVar25 = (uVar25 + *(*0x20 + -0x48)) - 1;\n                        *(*0x20 + -0xd0) = 0;\n                        *(*0x20 + -0xd8) = 0;\n                        puVar10 = *(*0x20 + -0x48);\n                    }\n                    break;\n                }\n                *(*0x20 + -0x88) = uVar23;\n                uVar7 = unaff_RDI[1];\n                uVar25 = *unaff_RDI;\n                *(*0x20 + -0x138) = 0x412ad0;\n                fcn.00413500(puVar10 & 0xffffffff, uVar7, uVar25, arg1);\n                bVar26 = *(*0x20 + -0x88) == *(*0x20 + -0x68);\n                goto code_r0x00412cc1;\n            }\ncode_r0x004134b9:\n            arg1 = 0x40;\n            *(*0x20 + -0x138) = 0x4134c6;\n            in_RAX = fcn.0045ca60(0x40);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + -8) = 0x4134e5;\n        fcn.0045a360();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        *0x20 = puVar9;\n    } while( true );\ncode_r0x00413332:\n    uVar4 = *(*0x20 + -0xd0);\n    *(*0x20 + -0x28) = uVar25;\n    *(*0x20 + -0xc0) = uVar7;\n    puVar22 = *(*0x20 + -0x78);\n    uVar7 = *(*0x20 + -0x80);\ncode_r0x00412f2a:\n    if (puVar10 == NULL) {\n        uVar25 = *(*0x20 + -0xd8);\n        *(*0x20 + -0xd0) = uVar4;\n        puVar22 = *(*0x20 + -0x78);\n    }\n    else {\n        uVar25 = *puVar10;\n        puVar10 = puVar10 + 1;\n        *(*0x20 + -0xa0) = puVar3;\n        *(*0x20 + -0xd0) = 8;\n        puVar3 = *(*0x20 + -0xa0);\n    }\n    if (arg1 == uVar7) {\n        uVar7 = unaff_RDI[1];\ncode_r0x00412faf:\n        uVar7 = uVar7 >> 3;\n        if (uVar7 != 0) {\n            if (uVar5 == 0) {\n                uVar19 = uVar25 & 0xf | 0xf0;\n                if (4 < uVar7) {\n                    *puVar3 = uVar19;\n                    iVar2 = 4;\n                    iVar20 = *(*0x20 + -0xd0) + -4;\n                    uVar5 = 4;\n                    goto code_r0x0041307a;\n                }\n                puVar22 = puVar3;\n                uVar25 = 4;\n                goto code_r0x00413220;\n            }\n            if (uVar5 == 2) goto code_r0x0041300a;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x138) = 0x4132cf;\n            fcn.004330a0();\n        }\n        *(*0x20 + -0x138) = 0x4132d7;\n        uVar4 = fcn.00454b20();\n        *(*0x20 + -0x18) = uVar4;\n        *(*0x20 + -0x98) = unaff_RBX;\n        *(*0x20 + -0x138) = 0x4132ec;\n        fcn.00434840();\n        *(*0x20 + -0x138) = 0x4132fd;\n        fcn.00435140();\n        *(*0x20 + -0x138) = 0x413312;\n        fcn.00435140();\n        *(*0x20 + -0x138) = 0x413317;\n        fcn.00434aa0();\n        *(*0x20 + -0x138) = 0x41331c;\n        fcn.004348c0();\n        unaff_RBX = 0x2d;\n        *(*0x20 + -0x138) = 0x41332d;\n        fcn.004330a0();\n    }\n    else if (uVar7 != 0) {\n        uVar7 = uVar7 * (arg1 / uVar7 - 1) + unaff_RDI[1];\n        puVar3 = *(*0x20 + -0x38);\n        arg1 = uVar8;\n        goto code_r0x00412faf;\n    }\n    *(*0x20 + -0x138) = 0x413332;\n    puVar3 = fcn.00431720();\n    puVar10 = puVar22;\n    goto code_r0x00413332;\ncode_r0x0041300a:\n    uVar19 = (uVar25 & 3) << 2;\n    uVar18 = uVar19 | 0x40;\n    if (1 < uVar7) {\n        uVar18 = uVar19 | 0xc0;\n    }\n    *puVar3 = uVar18 | *puVar3 & 0x33;\n    puVar22 = puVar3 + 1;\n    if (uVar7 < 3) {\n        uVar19 = 0;\n        uVar25 = 6;\n    }\n    else {\n        iVar2 = 2;\n        iVar20 = *(*0x20 + -0xd0) + -2;\n        uVar5 = 2;\ncode_r0x0041307a:\n        puVar22 = puVar3 + 1;\n        uVar25 = uVar25 >> iVar2;\n        iVar12 = *(*0x20 + -0xd8);\n        uVar11 = iVar20 - 4;\n        while( true ) {\n            *(*0x20 + -0xb0) = uVar25;\n            uVar19 = uVar25 & 0xf | 0xf0;\n            uVar25 = uVar5 + 4;\n            if (uVar7 <= uVar5 + 4) break;\n            *puVar22 = uVar19;\n            uVar25 = *(*0x20 + -0xb0) >> 4;\n            uVar19 = uVar11;\n            if (puVar10 == *(*0x20 + -0x28)) {\n                if (puVar10 == NULL) {\n                    if (uVar11 < 8) {\n                        uVar25 = uVar25 | iVar12 << (uVar19 & 0x3f);\n                        uVar11 = uVar11 + *(*0x20 + -0xc0);\n                        iVar12 = *(*0x20 + -0xd8);\n                    }\n                    uVar21 = uVar11 - 8;\n                }\n                else {\n                    uVar25 = uVar25 | -(uVar11 < 0x40) & *puVar10 << (uVar19 & 0x3f);\n                    uVar21 = uVar11 + *(*0x20 + -0xc0);\n                    if (uVar21 < 8) {\n                        uVar25 = uVar25 | **(*0x20 + -0x48) << (uVar21 & 0x3f);\n                        puVar10 = *(*0x20 + -0x48) + 1;\n                    }\n                    else {\n                        uVar21 = (uVar11 + *(*0x20 + -0xc0)) - 8;\n                        puVar10 = *(*0x20 + -0x48);\n                    }\n                    uVar8 = *(*0x20 + -0x68);\n                }\n            }\n            else if (uVar11 < 8) {\n                uVar25 = uVar25 | *puVar10 << (uVar19 & 0x3f);\n                puVar10 = puVar10 + 1;\n                uVar21 = uVar11;\n            }\n            else {\n                uVar21 = uVar11 - 8;\n            }\n            *(*0x20 + -0xb0) = uVar25;\n            uVar19 = uVar25 & 0xf | 0xf0;\n            uVar5 = uVar5 + 8;\n            if (uVar7 <= uVar5) {\n                puVar22 = puVar22 + 1;\n                uVar25 = uVar5;\n                break;\n            }\n            puVar22[1] = uVar19;\n            uVar25 = *(*0x20 + -0xb0) >> 4;\n            puVar22 = puVar22 + 2;\n            uVar11 = uVar21;\n        }\n    }\ncode_r0x00413220:\n    if (uVar7 < uVar25) {\n        uVar7 = -((uVar25 - uVar7) + -4);\n        uVar18 = (1 << (uVar7 & 0x3f) & -(uVar7 < 0x40)) - 1;\n        uVar19 = uVar19 & (uVar18 * '\\x10' | uVar18);\n    }\n    uVar7 = unaff_RBX >> 3;\n    if (uVar25 <= uVar7) {\n        *puVar22 = uVar19;\n        while( true ) {\n            puVar22 = puVar22 + 1;\n            uVar25 = uVar25 + 4;\n            if (uVar7 < uVar25) break;\n            *puVar22 = 0;\n        }\n        uVar19 = 0;\n    }\n    if (uVar25 == uVar7 + 2) {\n        *puVar22 = uVar19 | *puVar22 & 0xcc;\n        bVar26 = uVar23 == uVar8;\n    }\n    else {\n        bVar26 = uVar23 == uVar8;\n    }\ncode_r0x00412cc1:\n    if (!bVar26) {\n        iVar20 = *(*(*(*0x20 + -0x70) * 8 + 0x5a5f90) + *(*0x20 + -0x60) * 8);\n        if (iVar20 == 0) {\n            puVar3 = *(*0x20 + -0x58);\n            puVar22 = NULL;\n            uVar13 = 0;\n            puVar10 = NULL;\n            uVar7 = 0;\n        }\n        else {\n            puVar3 = *(*0x20 + -0x58);\n            puVar22 = iVar20 + (puVar3 >> 5 & 0x1ffff);\n            uVar13 = puVar3 >> 3 & 3;\n            puVar10 = iVar20 + 0x1ffff;\n            uVar7 = *(*0x20 + -0x78);\n        }\n        uVar25 = *(*0x20 + 0x10) >> 3;\n        puVar24 = puVar3;\n        if (uVar13 == 2) {\n            *puVar22 = *puVar3 | *puVar22 & 0x33;\n            uVar13 = 3;\n            if (puVar10 == puVar22) {\n                *(*0x20 + -0x10) = puVar3;\n                *(*0x20 + -0x90) = uVar25;\n                *(*0x20 + -0x138) = 0x412d96;\n                puVar22 = fcn.00411a80(uVar7);\n                uVar25 = *(*0x20 + -0x90);\n                puVar24 = *(*0x20 + -0x58);\n                puVar3 = *(*0x20 + -0x10);\n            }\n            else {\n                puVar22 = puVar22 + 1;\n                uVar13 = 0;\n            }\n            uVar25 = uVar25 - 2;\n            puVar3 = puVar3 + 1;\n        }\n        while (*(*0x20 + -0x50) = puVar3,  3 < uVar25) {\n            *(*0x20 + -0x40) = puVar22;\n            *(*0x20 + -0xb8) = uVar25;\n            *(*0x20 + -0x138) = 0x412dfb;\n            uVar4 = fcn.00411c00(uVar7);\n            *(*0x20 + -0x18) = uVar4;\n            *(*0x20 + -0xe4) = uVar13;\n            *(*0x20 + -0xe8) = uVar7;\n            *(*0x20 + -0x20) = puVar10;\n            *(*0x20 + -0xe0) = uVar25 & 0xfffffffffffffffc;\n            *(*0x20 + -0x68) = uVar25 >> 2;\n            *(*0x20 + -0x138) = 0x412e3c;\n            fcn.0045d380(uVar25 >> 2);\n            puVar3 = *(*0x20 + -0x50) + *(*0x20 + -0x68);\n            puVar24 = *(*0x20 + -0x58);\n            puVar22 = *(*0x20 + -0x18);\n            uVar13 = *(*0x20 + -0xe4);\n            puVar10 = *(*0x20 + -0x20);\n            uVar7 = *(*0x20 + -0xe8);\n            uVar25 = *(*0x20 + -0xb8) - *(*0x20 + -0xe0);\n        }\n        if (uVar25 == 2) {\n            *puVar22 = *puVar3 | *puVar22 & 0xcc;\n            if (uVar13 < 3) {\n                uVar13 = uVar13 + 1;\n            }\n            else if (puVar10 == puVar22) {\n                *(*0x20 + -0x138) = 0x412ed0;\n                puVar22 = fcn.00411a80(uVar7);\n                puVar24 = *(*0x20 + -0x58);\n            }\n            else {\n                puVar22 = puVar22 + 1;\n                uVar13 = 0;\n            }\n            if ((2 < uVar13) && (puVar22 == puVar10)) {\n                *(*0x20 + -0x138) = 0x412eff;\n                fcn.00411a80(uVar7);\n                puVar24 = *(*0x20 + -0x58);\n            }\n        }\n        *(*0x20 + -0x138) = 0x412f25;\n        fcn.0045d0c0(puVar24);\n    }\n    return;\n}\n",
        "token_count": 5847
    },
    "00417fa0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004184b9)\n// WARNING: Removing unreachable block (ram,0x00417fe5)\n// WARNING: Removing unreachable block (ram,0x0041800c)\n\nvoid fcn.00417fa0(ulong param_1, ulong param_2, ulong param_3, int64_t param_4, uint64_t param_5)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x130 && *0x20 + -0x130 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1b0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x5d3b6c = 2;\n            *0x5d3dd4 = 1;\n            *(*0x20 + -0x100) = param_1;\n            *0x5d3dd0 = *0x5d3dd0 & 0xffffff00 | 1;\n            *0x5802a0 = *0x5d4538;\n            *(*0x20 + -0x1b8) = 0x41802d;\n            fcn.0045e320();\n            uVar14 = 0;\n            uVar15 = 0;\n            uVar16 = 0;\n            uVar17 = 0;\n            iVar9 = **(in_GS_OFFSET + 0x28);\n            iVar8 = *(iVar9 + 0x30);\n            uVar5 = *(*0x20 + -0x1b0);\n            *(*0x20 + -0x178) = uVar5;\n            piVar1 = iVar8 + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar8 = *(iVar9 + 0x30);\n            *(*0x20 + -0x30) = iVar8;\n            *(iVar8 + 0xd0) = 5;\n            *(*0x20 + -0x10) = iVar8 + 200;\n            if (*0x5d3dd0 == 0) {\n                *(iVar8 + 200) = 0x4c7d0b;\n            }\n            else {\n                *(*0x20 + -0x1b8) = 0x4180a5;\n                fcn.0045c6c0(uVar5, 0x4c7d0b, param_4, param_5);\n            }\n            *(*0x20 + -0x20) = iVar9;\n            *(*(iVar9 + 0x30) + 0xf9) = 2;\n            *(*0x20 + -0x28) = *(*(iVar9 + 0x30) + 0x90);\n            *(*0x20 + -0x1b8) = 0x4180da;\n            fcn.00437400(4);\n            *(*(*0x20 + -0x28) + 0xb0) = 6;\n            *(*0x20 + -0xf8) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n            *(*0x20 + -0xf8) = 0x418c40;\n            *(*0x20 + -0xf0) = *(*0x20 + -0x178);\n            *(*0x20 + -0x1b0) = *0x20 + -0xf8;\n            *(*0x20 + -0x1b8) = 0x41811f;\n            fcn.0045a220();\n            *(*0x20 + -0x1b0) = 0x4d5c88;\n            *(*0x20 + -0x1b8) = 0x418145;\n            fcn.0045a220();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar9 = *(*(*0x20 + -0x20) + 0x30);\n            *(iVar9 + 0xf9) = 0;\n            *(*0x20 + -0x1b8) = 0x418185;\n            fcn.00437400(2);\n            if (*0x585d30 != '\\0') {\n                *(*0x20 + -0x1b8) = 0x4181a7;\n                fcn.0044f180(0);\n            }\n            iVar8 = *(*0x20 + -0x30);\n            *(iVar8 + 0xd0) = 0;\n            if (*0x5d3dd0 == 0) {\n                *(iVar8 + 200) = 0;\n            }\n            else {\n                iVar9 = 0;\n                *(*0x20 + -0x1b8) = 0x4181df;\n                fcn.0045c6c0(iVar8, 0, param_4, param_5);\n            }\n            if (*0x5d3b6c == 0) {\n                *0x5d6fa0 = *0x5d5898;\n                *(*0x20 + -0x1b8) = 0x41820f;\n                fcn.0041e5c0(*(*0x20 + -0x100));\n                *(*0x20 + -0x1b8) = 0x41821b;\n                func_0x00422780();\n                *(*0x20 + -0x1b8) = 0x41822e;\n                fcn.0041ea60();\n                *(*0x20 + -0x1b8) = 0x418234;\n                fcn.0045e320();\n                *(*0x20 + -0x180) = *(*0x20 + -0x1b0);\n                *(*0x20 + -0x1b8) = 0x418256;\n                fcn.0045e380(*(*0x20 + -0x1b0), iVar9);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar9 = *(*0x20 + -0x1b0);\n                iVar4 = *(*0x20 + -0x1a8);\n                iVar8 = *(*0x20 + -0x180);\n                *0x580288 = *0x580288 + (iVar8 - *0x580290);\n                uVar11 = iVar8 - *0x580290;\n                *0x580280 = iVar8;\n                if (uVar11 < 0) {\n                    LOCK();\n                    *0x5d9418 = *0x5d9418 + 1;\ncode_r0x00418362:\n                    *0x5d5908 = iVar9 * 1000000000 + iVar4;\n                    *0x5d6f98 = iVar8;\n                    *((*0x5d6918 & 0xff) * 8 + 0x5d5918) = *0x580288;\n                    *((*0x5d6918 & 0xff) * 8 + 0x5d6118) = iVar9 * 1000000000 + iVar4;\n                    *0x5d5910 = *0x5d5910 + *0x580288;\n                    iVar9 = (*0x580270 - *0x580268) * *0x58025c;\n                    *(*0x20 + -0x170) = iVar9;\n                    iVar12 = (*0x580280 - *0x580278) * *0x58025c;\n                    *(*0x20 + -0x158) = iVar12;\n                    *0x580220 = *0x5d4598 + *0x5d4590 + *0x5d45a0 + iVar9 + iVar12 + *0x580220;\n                    *0x5d6920 = *0x580220 / ((iVar8 - *0x5807c0) * *0x5d3b70 + *0x5807c8);\n                    *0x57fe74 = 0;\n                    if (*0x580218 != '\\0') {\n                        *0x5d691c = *0x5d691c + 1;\n                    }\n                    *(*0x20 + -0x1b8) = 0x418476;\n                    fcn.0040a360();\n                    *0x5d6918 = *0x5d6918 + 1;\n                    *(*0x20 + -0x1b8) = 0x418488;\n                    fcn.0043b580();\n                    *(*0x20 + -0x1b8) = 0x418496;\n                    fcn.0040a580();\n                    *(*0x20 + -0x1b8) = 0x41849b;\n                    fcn.0042a420();\n                    if ((*0x57fe7c & 0x80000000) == 0) {\n                        *0x57fe7c = *0x57fe7c + 1;\n                        LOCK();\n                        *(*0x20 + -0x184) = 0;\n                        *(*0x20 + -0x188) = *0x5a5f30;\n                        *(*0x20 + -0x1b0) = 0x4d5c90;\n                        *(*0x20 + -0x1b8) = 0x4184f2;\n                        fcn.0045a220();\n                        *(*0x20 + -0x1b8) = 0x41850b;\n                        fcn.0042a4a0();\n                        *(*0x20 + -0x1b8) = 0x418510;\n                        fcn.004233a0();\n                        *(*0x20 + -0x1b0) = 0x4d5c58;\n                        *(*0x20 + -0x1b8) = 0x418525;\n                        fcn.0045a220();\n                        *(*0x20 + -0x1b0) = 0x4d5ca0;\n                        *(*0x20 + -0x1b8) = 0x418549;\n                        fcn.0045a220();\n                        uVar14 = 0;\n                        uVar15 = 0;\n                        uVar16 = 0;\n                        uVar17 = 0;\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        *(*0x20 + -0x1b8) = 0x418576;\n                        fcn.00420e60();\n                        if (*0x5d3ffc < 1) {\ncode_r0x004185d8:\n                            *(*0x20 + -0x1b8) = 0x4185e8;\n                            fcn.004433e0(0);\n                            *(*0x20 + -0x1b8) = 0x4185f9;\n                            fcn.004433e0(0);\n                            iVar4 = *(*(*0x20 + -0x30) + 0xd8);\n                            *(*(*0x20 + -0x30) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        *(*0x20 + -0x100) = *0x4f9a38 * *0x5d6920;\n                        *(*0x20 + -0xe8) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0xe0) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0x1b8) = 0x4185af;\n                        fcn.00434840();\n                        uVar7 = (*0x580268 - *0x5d3d08) / 1000000;\n                        uVar11 = 0x17;\n                        while ((cVar3 = uVar7,  9 < uVar7 || (0x13 < uVar11))) {\n                            uVar7 = uVar7 / 10;\n                            if (0x17 < uVar11) goto code_r0x00418be6;\n                            *(*0x20 + (uVar11 - 0xe8)) = cVar3 + uVar7 * -10 + '0';\n                            bVar13 = uVar11 == 0x15;\n                            uVar11 = uVar11 - 1;\n                            if (bVar13) {\n                                *(*0x20 + -0xd4) = 0x2e;\n                                uVar11 = 0x13;\n                            }\n                        }\n                        if (uVar11 < 0x18) {\n                            *(*0x20 + (uVar11 - 0xe8)) = cVar3 + '0';\n                            *(*0x20 + -0x108) = *0x5d6918;\n                            *(*0x20 + -0x1b8) = 0x4186ec;\n                            uVar5 = fcn.004489c0(-(uVar11 - 0x18));\n                            *(*0x20 + -0x18) = uVar5;\n                            *(*0x20 + -0x110) = *0x20 + ((uVar11 & uVar11 - 0x18 >> 0x3f) - 0xe8);\n                            *(*0x20 + -0x1b8) = 0x418705;\n                            fcn.00434840();\n                            *(*0x20 + -0x1b8) = 0x418716;\n                            fcn.00435140();\n                            *(*0x20 + -0x1b8) = 0x418725;\n                            fcn.00434e40();\n                            *(*0x20 + -0x1b8) = 0x418736;\n                            fcn.00435140();\n                            *(*0x20 + -0x1b8) = 0x41874b;\n                            fcn.00435140();\n                            *(*0x20 + -0x1b8) = 0x41875c;\n                            fcn.00435140();\n                            *(*0x20 + -0x1b8) = 0x41876f;\n                            fcn.00434f40(*(*0x20 + -0x100));\n                            *(*0x20 + -0x1b8) = 0x418785;\n                            fcn.00435140();\n                            *(*0x20 + -0x1b8) = 0x41878a;\n                            fcn.004348c0();\n                            *(*0x20 + -0xd0) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            *(*0x20 + -200) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            *(*0x20 + -0xd0) = *0x580270;\n                            *(*0x20 + -200) = *0x580278;\n                            *(*0x20 + -0xc0) = *0x580280;\n                            iVar9 = 0;\n                            iVar8 = *0x580268;\n                            while (iVar9 < 3) {\n                                *(*0x20 + -0x148) = iVar9;\n                                *(*0x20 + -0x168) = *(*0x20 + iVar9 * 8 + -0xd0);\n                                if (iVar9 != 0) {\n                                    *(*0x20 + -0x118) = iVar8;\n                                    *(*0x20 + -0x1b8) = 0x418876;\n                                    fcn.00434840();\n                                    *(*0x20 + -0x1b8) = 0x418887;\n                                    fcn.00435140();\n                                    *(*0x20 + -0x1b8) = 0x41888c;\n                                    fcn.004348c0();\n                                }\n                                *(*0x20 + -0x1b8) = 0x4187ec;\n                                uVar5 = fcn.00419c40(0x18);\n                                *(*0x20 + -0x1b8) = 0x4187ff;\n                                uVar6 = fcn.004489c0(0x18);\n                                *(*0x20 + -0x18) = uVar6;\n                                *(*0x20 + -0x110) = uVar5;\n                                *(*0x20 + -0x1b8) = 0x418814;\n                                fcn.00434840();\n                                *(*0x20 + -0x1b8) = 0x418829;\n                                fcn.00435140();\n                                *(*0x20 + -0x1b8) = 0x41882e;\n                                fcn.004348c0();\n                                iVar8 = *(*0x20 + -0x168);\n                                iVar9 = *(*0x20 + -0x148) + 1;\n                            }\n                            *(*0x20 + -0x1b8) = 0x4188a5;\n                            fcn.00434840();\n                            *(*0x20 + -0x1b8) = 0x4188b6;\n                            fcn.00435140();\n                            *(*0x20 + -0x1b8) = 0x4188bb;\n                            fcn.004348c0();\n                            *(*0x20 + -0x58) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            *(*0x20 + -0x50) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            *(*0x20 + -0x40) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            *(*0x20 + -0x58) = *(*0x20 + -0x170);\n                            *(*0x20 + -0x50) = *0x5d4590;\n                            *(*0x20 + -0x48) = *0x5d45a0 + *0x5d4598;\n                            *(*0x20 + -0x40) = *0x5d45a8;\n                            *(*0x20 + -0x38) = *(*0x20 + -0x158);\n                            iVar9 = 0;\n                            while (iVar9 < 5) {\n                                *(*0x20 + -0x150) = iVar9;\n                                *(*0x20 + -0x160) = *(*0x20 + iVar9 * 8 + -0x58);\n                                if ((iVar9 == 2) || (iVar9 == 3)) {\n                                    *(*0x20 + -0x1b8) = 0x4189b1;\n                                    fcn.00434840();\n                                    *(*0x20 + -0x1b8) = 0x4189c5;\n                                    fcn.00435140();\n                                    *(*0x20 + -0x1b8) = 0x4189ca;\n                                    fcn.004348c0();\n                                }\n                                else if (iVar9 != 0) {\n                                    *(*0x20 + -0x1b8) = 0x4189e5;\n                                    fcn.00434840();\n                                    *(*0x20 + -0x1b8) = 0x4189f6;\n                                    fcn.00435140();\n                                    *(*0x20 + -0x1b8) = 0x4189fb;\n                                    fcn.004348c0();\n                                }\n                                *(*0x20 + -0x1b8) = 0x41893d;\n                                uVar5 = fcn.00419c40(0x18);\n                                *(*0x20 + -0x1b8) = 0x418950;\n                                uVar6 = fcn.004489c0(0x18);\n                                *(*0x20 + -0x18) = uVar6;\n                                *(*0x20 + -0x110) = uVar5;\n                                *(*0x20 + -0x1b8) = 0x418965;\n                                fcn.00434840();\n                                *(*0x20 + -0x1b8) = 0x41897a;\n                                fcn.00435140();\n                                *(*0x20 + -0x1b8) = 0x41897f;\n                                fcn.004348c0();\n                                iVar9 = *(*0x20 + -0x150) + 1;\n                            }\n                            *(*0x20 + -0x108) = *0x580298;\n                            *(*0x20 + -0x120) = *0x5802a0;\n                            *(*0x20 + -0x128) = *0x5802a8;\n                            *(*0x20 + -0x130) = *0x5802b0;\n                            *(*0x20 + -0x138) = *0x5d4550;\n                            *(*0x20 + -0x140) = *0x5d4560;\n                            *(*0x20 + -0x118) = *0x580260;\n                            *(*0x20 + -0x1b8) = 0x418a72;\n                            fcn.00434840();\n                            *(*0x20 + -0x1b8) = 0x418a85;\n                            fcn.00435140();\n                            *(*0x20 + -0x1b8) = 0x418a96;\n                            fcn.00434e40();\n                            *(*0x20 + -0x1b8) = 0x418aa7;\n                            fcn.00435140();\n                            *(*0x20 + -0x1b8) = 0x418ab8;\n                            fcn.00434e40();\n                            *(*0x20 + -0x1b8) = 0x418ac9;\n                            fcn.00435140();\n                            *(*0x20 + -0x1b8) = 0x418ada;\n                            fcn.00434e40();\n                            *(*0x20 + -0x1b8) = 0x418aeb;\n                            fcn.00435140();\n                            *(*0x20 + -0x1b8) = 0x418afc;\n                            fcn.00434e40();\n                            *(*0x20 + -0x1b8) = 0x418b0d;\n                            fcn.00435140();\n                            *(*0x20 + -0x1b8) = 0x418b1b;\n                            fcn.00434e40();\n                            *(*0x20 + -0x1b8) = 0x418b2c;\n                            fcn.00435140();\n                            *(*0x20 + -0x1b8) = 0x418b3a;\n                            fcn.00434e40();\n                            *(*0x20 + -0x1b8) = 0x418b4b;\n                            fcn.00435140();\n                            *(*0x20 + -0x1b8) = 0x418b58;\n                            fcn.00434f40();\n                            *(*0x20 + -0x1b8) = 0x418b69;\n                            fcn.00435140();\n                            *(*0x20 + -0x1b8) = 0x418b6e;\n                            fcn.004348c0();\n                            if (*0x580218 != '\\0') {\n                                *(*0x20 + -0x1b8) = 0x418b7c;\n                                fcn.00434840();\n                                *(*0x20 + -0x1b8) = 0x418b8d;\n                                fcn.00435140();\n                                *(*0x20 + -0x1b8) = 0x418b92;\n                                fcn.004348c0();\n                            }\n                            *(*0x20 + -0x1b8) = 0x418b97;\n                            fcn.00434840();\n                            *(*0x20 + -0x1b8) = 0x418b9c;\n                            fcn.00434aa0();\n                            *(*0x20 + -0x1b8) = 0x418ba5;\n                            fcn.004348c0();\n                            cVar3 = *(*(unaff_R14 + 0x30) + 0xe7);\n                            *(*(unaff_R14 + 0x30) + 0xe7) = cVar3 + -1;\n                            if (cVar3 == '\\x01') {\n                                *(*0x20 + -0x1b8) = 0x418bd7;\n                                fcn.0040a580();\n                            }\n                            goto code_r0x004185d8;\n                        }\n                        *(*0x20 + -0x1b8) = 0x418be6;\n                        fcn.0045ca40(0x18);\ncode_r0x00418be6:\n                        *(*0x20 + -0x1b8) = 0x418bf3;\n                        fcn.0045ca40(0x18);\n                    }\n                    *(*0x20 + -0x1b8) = 0x418c05;\n                    fcn.004330a0();\n                }\n                else {\n                    if (uVar11 < 0x10) {\n                        param_4 = 0;\n                    }\n                    else {\n                        iVar12 = 0x3f;\n                        if (uVar11 != 0) {\n                            for (; uVar11 >> iVar12 == 0; iVar12 = iVar12 + -1) {\n                            }\n                        }\n                        if (uVar11 == 0) {\n                            iVar12 = -1;\n                        }\n                        param_4 = iVar12 + -3;\n                        if (param_4 * 0x10 < 0x2d0) {\n                            param_5 = ~-(iVar12 - 4U < 0x40);\n                            iVar12 = uVar11 >> ((iVar12 - 4U | param_5) & 0x3f);\n                            uVar11 = iVar12 + (((iVar12 >> 0x3f) >> 0x3c) + iVar12 >> 4) * -0x10;\n                        }\n                        else {\n                            param_4 = 0x2c;\n                            uVar11 = 0xf;\n                        }\n                    }\n                    param_4 = param_4 * 0x10;\n                    if (param_4 + uVar11 < 0x2d0) {\n                        piVar2 = (param_4 + uVar11) * 8 + 0x5d7d98;\n                        LOCK();\n                        *piVar2 = *piVar2 + 1;\n                        goto code_r0x00418362;\n                    }\n                }\n                *(*0x20 + -0x1b8) = 0x418c0f;\n                fcn.0045ca60(0x2d0);\n            }\n            *(*0x20 + -0x1b8) = 0x418c25;\n            param_1 = fcn.004330a0();\n        }\n        *(puVar10 + 8) = param_1;\n        *(puVar10 + -8) = 0x418c31;\n        fcn.0045a360();\n        param_1 = *(puVar10 + 8);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 6305
    },
    "0041a260": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0041a260(char param_1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    int64_t iStack96;\n    ulong *puStack88;\n    int64_t iStack80;\n    uint64_t uStack72;\n    uint64_t uStack64;\n    int64_t iStack56;\n    int64_t iStack48;\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iStack96 = 0;\n    if ((unaff_EBX < *0x5801c8) || (*0x5801cc <= unaff_EBX)) {\n        if ((unaff_EBX < *0x5801cc) || (*0x5801d0 <= unaff_EBX)) {\n            puVar4 = *0x5d3be0;\n            if (unaff_EBX == 0) {\n                while (puVar4 != NULL) {\ncode_r0x0041a53b:\n                    puStack88 = puVar4;\n                    fcn.0041c620(0x5d3f40);\n                    puVar4 = *puStack88;\n                }\n                piVar2 = NULL;\n            }\n            else if (unaff_EBX == 1) {\n                fcn.0045a220();\n                piVar2 = NULL;\n            }\n            else {\n                if ((unaff_EBX < *0x5801d0) || (*0x5801d4 <= unaff_EBX)) {\n                    puVar4 = *0x5801d4;\n                    if ((*0x5801d4 <= unaff_EBX) && (unaff_EBX < *0x5801d8)) {\n                        if (unaff_EBX - *0x5801d4 < *0x5801e8) {\n                            iVar3 = *(*0x5801e0 + (unaff_EBX - *0x5801d4) * 8);\n                            if (((*(iVar3 + 0x90) == 4) || (*(iVar3 + 0x90) == 3)) && (*(iVar3 + 0xa8) == 0)) {\n                                *(iVar3 + 0xa8) = *0x580198;\n                            }\n                            auStack40 = CONCAT88(iVar3, 0x41a6c0);\n                            auStack24 = CONCAT88(&iStack96, in_RAX);\n                            fcn.0045a220();\n                            piVar2 = 0x5d4578;\n                            goto code_r0x0041a448;\n                        }\n                        fcn.0045ca40(*0x5801e8);\n                    }\n                    fcn.00434840();\n                    uStack64 = *0x5801d4;\n                    uStack72 = *0x5801d8;\n                    fcn.00434840();\n                    fcn.00435140();\n                    fcn.00434e40();\n                    fcn.00435140();\n                    fcn.00434e40();\n                    fcn.00435140();\n                    fcn.00434e40();\n                    fcn.00435140();\n                    fcn.004348c0();\n                    fcn.004330a0();\n                    goto code_r0x0041a53b;\n                }\n                fcn.0041aa00();\n                piVar2 = NULL;\n            }\n        }\n        else {\n            if (*0x57efb8 == NULL) {\n                iVar3 = 0;\n                iStack56 = 0;\n            }\n            else {\n                iStack56 = **0x57efb8;\n                iVar3 = (*0x57efb8)[1];\n            }\n            iVar1 = 0;\n            while (iVar1 < iVar3) {\n                iStack80 = iVar1;\n                iVar1 = fcn.0041a820(*(*(iStack56 + iVar1 * 8) + 0x208));\n                iStack96 = iVar1 + iStack96;\n                iVar1 = iStack80 + 1;\n            }\n            piVar2 = 0x5d4580;\n        }\n    }\n    else {\n        if (*0x57efb8 == NULL) {\n            iVar3 = 0;\n            iStack48 = 0;\n        }\n        else {\n            iStack48 = **0x57efb8;\n            iVar3 = (*0x57efb8)[1];\n        }\n        iVar1 = 0;\n        while (iVar1 < iVar3) {\n            iStack80 = iVar1;\n            iVar1 = fcn.0041a820(*(*(iStack48 + iVar1 * 8) + 0x1f8));\n            iStack96 = iVar1 + iStack96;\n            iVar1 = iStack80 + 1;\n        }\n        piVar2 = 0x5d4580;\n    }\ncode_r0x0041a448:\n    if ((piVar2 != NULL) && (iStack96 != 0)) {\n        LOCK();\n        *piVar2 = *piVar2 + iStack96;\n        if (param_1 != '\\0') {\n            fcn.0041b480();\n        }\n    }\n    return iStack96;\n}\n",
        "token_count": 1219
    },
    "0041bda0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041bda0(ulong arg1)\n\n{\n    int64_t arg1_00;\n    uint64_t uVar1;\n    int32_t iVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int32_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    char cVar5;\n    char cVar6;\n    uint64_t in_R8;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    int64_t iVar10;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar3 = *in_RAX;\n    if (iVar3 == 0) {\n        uVar7 = 0;\n        bVar9 = false;\n    }\n    else {\n        uVar7 = in_R8 & 0xffffffffffffff00 | *(iVar3 + 0x24) == '\\x03';\n        bVar9 = *(iVar3 + 0x24) == '\\x05';\n    }\n    cVar5 = uVar7;\n    if (((*(unaff_RBX + 0x110) == '\\0') && (cVar5 == '\\0')) && (!bVar9)) {\n        iVar4 = 0;\n        iVar2 = fcn.00447ba0();\n        if (0 < iVar2) {\n            fcn.0041c620(unaff_RBX);\n        }\n        if (0 < iVar4) {\n            fcn.0041c620(unaff_RDI);\n        }\n        if (in_RAX[7] != 0) {\n            iVar10 = unaff_RSI;\n            for (iVar3 = 0; iVar3 < uVar7; iVar3 = iVar3 + 1) {\n                arg1_00 = unaff_RSI + iVar3 * 0x10;\n                iVar2 = *(unaff_RSI + iVar3 * 0x10);\n                iVar8 = in_RAX[7];\n                if (-1 < iVar2) {\n                    iVar8 = in_RAX[8];\n                }\n                uVar1 = iVar8 + iVar2;\n                if (in_RAX[5] < uVar1 || in_RAX[5] == uVar1) {\n                    unaff_RSI = iVar10;\n                    fcn.004209e0(arg1_00);\n                    iVar10 = unaff_RSI;\n                }\n            }\n        }\n        return;\n    }\n    if ((in_RAX[7] != 0) && (in_RAX[7] != in_RAX[5])) {\n        fcn.0041cb40(0);\n        uVar7 = uVar7 & 0xff;\n    }\n    cVar6 = uVar7;\n    if (in_RAX[9] != 0) {\n        fcn.0041cb40(0);\n        cVar6 = cVar5;\n    }\n    if ((cVar6 != '\\0') || (bVar9)) {\n        *(unaff_RBX + 0x110) = 1;\n    }\n    else {\n        *(unaff_RBX + 0x110) = 0;\n    }\n    return;\n}\n",
        "token_count": 748
    },
    "0041c7c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c7c0(void)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t *unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    int64_t unaff_R14;\n    \ncode_r0x0041c7c0:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x90;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar9 = in_RAX + 0x800000000000 >> 0x16;\n            iVar5 = *(*(uVar7 * 8 + 0x5a5f90) + (uVar9 & 0xfffff) * 8);\n            if (iVar5 == 0) {\n                uVar9 = 0;\n                uVar10 = 0;\n                puVar12 = NULL;\n                puVar11 = NULL;\n            }\n            else {\n                puVar11 = iVar5 + (in_RAX >> 5 & 0x1ffff);\n                uVar10 = in_RAX >> 3 & 3;\n                puVar12 = iVar5 + 0x1ffff;\n            }\n            iVar5 = *(iVar5 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            uVar7 = *(iVar5 + 0x68);\n            if (uVar7 != 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x30) = in_RAX;\n                if (0x20000 < uVar7) {\n                    if (*(iVar5 + 0x18) == in_RAX) {\n                        if ((*(iVar5 + 0x62) & 1) != 0) {\n                            unaff_RBX[2] = unaff_RBX[2] + uVar7;\n                            return;\n                        }\n                        *(*0x20 + -0x50) = iVar5;\n                        *(*0x20 + -0x28) = puVar12;\n                        *(*0x20 + -0x58) = uVar9;\n                        *(*0x20 + -0x60) = uVar10;\n                        *(*0x20 + -0x10) = puVar11;\n                        uVar7 = in_RAX;\ncode_r0x0041ca56:\n                        uVar7 = uVar7 + 0x20000;\n                        if (*(iVar5 + 0x68) + *(iVar5 + 0x18) <= uVar7) goto code_r0x0041ca2e;\n                        iVar2 = *unaff_RBX;\n                        if (iVar2 == 0) {\n                            bVar3 = false;\n                        }\n                        else {\n                            uVar4 = *(iVar2 + 0x10);\n                            if (uVar4 == 0xfd) {\n                                bVar3 = false;\n                            }\n                            else {\n                                if (0xfc < uVar4) goto code_r0x0041cad8;\n                                *(iVar2 + 0x18 + uVar4 * 8) = uVar7;\n                                *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                                bVar3 = true;\n                            }\n                        }\n                        if (!bVar3) {\n                            *(*0x20 + -0x48) = uVar7;\n                            *(*0x20 + -0x98) = 0x41caa5;\n                            fcn.00422880();\n                            uVar7 = *(*0x20 + -0x48);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + -0x30);\n                            uVar9 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x60);\n                            puVar11 = *(*0x20 + -0x10);\n                            iVar5 = *(*0x20 + -0x50);\n                            puVar12 = *(*0x20 + -0x28);\n                        }\n                        goto code_r0x0041ca56;\n                    }\ncode_r0x0041ca2e:\n                    uVar7 = (*(iVar5 + 0x68) + *(iVar5 + 0x18)) - in_RAX;\n                    if (0x20000 < uVar7) {\n                        uVar7 = 0x20000;\n                    }\n                }\n                *(*0x20 + -0x40) = uVar7;\n                uVar4 = 0;\n                while ((uVar4 < uVar7 && (uVar1 = *puVar11,  ((uVar1 >> (uVar10 & 0x1f)) >> 4 & 1) != 0))) {\n                    *(*0x20 + -0x38) = uVar4;\n                    if (((uVar1 >> (uVar10 & 0x1f) & 1) != 0) &&\n                       ((*(uVar4 + in_RAX) != 0 && (uVar7 <= *(uVar4 + in_RAX) - in_RAX)))) {\n                        *(*0x20 + -0x54) = uVar10;\n                        *(*0x20 + -0x18) = puVar11;\n                        *(*0x20 + -0x20) = puVar12;\n                        *(*0x20 + -0x5c) = uVar9;\n                        *(*0x20 + -0x98) = 0x41c971;\n                        iVar5 = fcn.00411920(uVar4);\n                        if (iVar5 != 0) {\n                            *(*0x20 + -0x98) = 0x41c993;\n                            fcn.0041ce00(*(*0x20 + -0x38), uVar7, uVar4);\n                        }\n                        uVar4 = *(*0x20 + -0x38);\n                        uVar10 = *(*0x20 + -0x54);\n                        uVar7 = *(*0x20 + -0x40);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        in_RAX = *(*0x20 + -0x30);\n                        uVar9 = *(*0x20 + -0x5c);\n                        puVar11 = *(*0x20 + -0x18);\n                        puVar12 = *(*0x20 + -0x20);\n                    }\n                    if (uVar10 < 3) {\n                        uVar10 = uVar10 + 1;\n                    }\n                    else if (puVar12 == puVar11) {\n                        uVar6 = uVar9 & 0xffffffff;\n                        *(*0x20 + -0x98) = 0x41c9ee;\n                        puVar11 = fcn.00411a80(uVar9 & 0xffffffff);\n                        uVar7 = *(*0x20 + -0x40);\n                        in_RAX = *(*0x20 + -0x30);\n                        uVar9 = uVar6;\n                        uVar4 = *(*0x20 + -0x38);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                    else {\n                        puVar11 = puVar11 + 1;\n                        uVar10 = 0;\n                    }\n                    uVar4 = uVar4 + 8;\n                }\n                unaff_RBX[2] = unaff_RBX[2] + uVar7;\n                unaff_RBX[3] = unaff_RBX[3] + uVar4;\n                return;\n            }\n            goto code_r0x0041cae5;\n        }\n        goto code_r0x0041caf6;\n    }\n    goto code_r0x0041cb06;\ncode_r0x0041cad8:\n    *(*0x20 + -0x98) = 0x41cae5;\n    fcn.0045ca40(0xfd);\ncode_r0x0041cae5:\n    unaff_RBX = 0x11;\n    *(*0x20 + -0x98) = 0x41caf6;\n    fcn.004330a0();\ncode_r0x0041caf6:\n    *(*0x20 + -0x98) = 0x41cb05;\n    in_RAX = fcn.0045ca60(0x40);\ncode_r0x0041cb06:\n    *(puVar8 + 8) = in_RAX;\n    *(puVar8 + 0x10) = unaff_RBX;\n    *(puVar8 + -8) = 0x41cb15;\n    fcn.0045a360();\n    in_RAX = *(puVar8 + 8);\n    unaff_RBX = *(puVar8 + 0x10);\n    *0x20 = puVar8;\n    goto code_r0x0041c7c0;\n}\n",
        "token_count": 2134
    },
    "0041e8c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e8eb)\n// WARNING: Removing unreachable block (ram,0x0041e8f2)\n// WARNING: Removing unreachable block (ram,0x0041e8f8)\n\nint64_t fcn.0041e8c0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00406f00();\n    iVar1 = fcn.004494e0();\n    if (iVar1 != iVar1) {\n        return 100;\n    }\n    return iVar1;\n}\n",
        "token_count": 177
    },
    "00421760": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00421760(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t **in_RAX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    char unaff_BL;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint32_t uVar12;\n    ulong *puVar13;\n    uint64_t uVar14;\n    int64_t iVar15;\n    uint16_t uVar16;\n    int64_t iVar17;\n    uint32_t uVar18;\n    int64_t unaff_R14;\n    uint8_t *unaff_R15;\n    \ncode_r0x00421760:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x48 && *0x20 + -0x48 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -200;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar1 = *(unaff_R14 + 0x30);\n        if (((*(piVar1 + 0x1b) != 0) || (*(piVar1 + 0x18) != 0)) || (*piVar1 == unaff_R14)) {\n            puVar10 = *in_RAX;\n            if (unaff_BL == '\\0') {\n                *in_RAX = NULL;\n            }\n            *(*0x20 + -0xa8) = *0x5a5f30;\n            uVar3 = puVar10[99];\n            *(*0x20 + -0xad) = uVar3;\n            if ((uVar3 == 1) && (*(puVar10 + 0x58) == *0x5a5f30 - 1)) {\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x88) = puVar10;\n                *(*0x20 + -0xa4) = *0x5a5f30 - 1;\n                uVar12 = *0x5a5f30;\n                if (*0x585d30 != '\\0') {\n                    *(*0x20 + -0xd0) = 0x421811;\n                    fcn.00450160();\n                    puVar10 = *(*0x20 + -0x88);\n                    uVar12 = *(*0x20 + -0xa8);\n                }\n                LOCK();\n                *0x5a5f58 = *0x5a5f58 + *(puVar10 + 0x20);\n                uVar3 = puVar10[0x62];\n                *(*0x20 + -0xb0) = uVar3;\n                uVar8 = *(puVar10 + 0x68);\n                *(*0x20 + -0x90) = uVar8;\n                uVar14 = *(puVar10 + 0x80);\n                *(*0x20 + -0xa0) = uVar14;\n                *(*0x20 + -0x48) = puVar10 + 0x80;\n                *(*0x20 + -0x40) = uVar14;\n                do {\n                    uVar4 = uVar3;\n                    puVar13 = *(*0x20 + -0x40);\n                    if (puVar13 == NULL) {\n                        if ((uVar14 != 0) && (*(puVar10 + 0x80) == 0)) {\n                            puVar13 = *(puVar10 + 0x18) + 0x800000000000;\n                            uVar14 = puVar13 >> 0x2a;\n                            if (0x3f < uVar14) {\ncode_r0x00422185:\n                                uVar5 = 0;\n                                *(*0x20 + -0xd0) = 0x422192;\n                                fcn.0045ca60(0x40);\n                                goto code_r0x00422192;\n                            }\n                            puVar13 = puVar13 >> 0x16 & 0xfffff;\n                            uVar14 = *(*(uVar14 * 8 + 0x5a5f90) + puVar13 * 8);\n                            uVar5 = *(puVar10 + 0x18) >> 0xd;\n                            uVar6 = (uVar5 & 0x1ff) >> 3;\n                            if (0x3f < uVar6) {\n                                *(*0x20 + -0xd0) = 0x422185;\n                                fcn.0045ca60(0x40);\n                                goto code_r0x00422185;\n                            }\n                            puVar9 = uVar14 + uVar6 + 0x21080;\n                            LOCK();\n                            *puVar9 = *puVar9 & ~(1 << (uVar5 & 7));\n                        }\n                        if ((*0x5d4024 != 0) || (*0x5d3fe4 != 0)) {\n                            *(*0x20 + -0x38) = *(puVar10 + 0x50);\n                            *(*0x20 + -0x30) = 1;\n                            *(*0x20 + -0x28) = 0;\n                            *(*0x20 + -0x20) = *(puVar10 + 0x48);\n                            *(*0x20 + -0x18) = 1;\n                            *(*0x20 + -0x10) = 0;\n                            for (uVar14 = 0; uVar14 <= *(puVar10 + 0x38) && *(puVar10 + 0x38) != uVar14;\n                                uVar14 = uVar14 + 1) {\n                                if (((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) &&\n                                   ((*(*0x20 + -0x10) <= *(puVar10 + 0x30) && *(puVar10 + 0x30) != *(*0x20 + -0x10) ||\n                                    ((**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0)))) {\n                                    iVar15 = *(puVar10 + 0x68) * uVar14 + *(puVar10 + 0x18);\n                                    if (*0x5d4024 != 0) {\n                                        *(*0x20 + -0x70) = uVar14;\n                                        *(*0x20 + -0x98) = iVar15;\n                                        *(*0x20 + -0xd0) = 0x4220be;\n                                        fcn.0042ae20();\n                                        uVar14 = *(*0x20 + -0x70);\n                                        puVar10 = *(*0x20 + -0x88);\n                                        uVar8 = *(*0x20 + -0x90);\n                                        iVar15 = *(*0x20 + -0x98);\n                                    }\n                                    if (*0x5d3fe4 != 0) {\n                                        for (uVar4 = 0; uVar4 < uVar8; uVar4 = uVar4 + 4) {\n                                            *(iVar15 + uVar4) = 0xdeadbeef;\n                                        }\n                                    }\n                                }\n                                if (*(*0x20 + -0x30) == -0x80) {\n                                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                                    *(*0x20 + -0x30) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                                }\n                                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                if (*(*0x20 + -0x18) == -0x80) {\n                                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                                    *(*0x20 + -0x18) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                                }\n                                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                            }\n                        }\n                        uVar14 = *(puVar10 + 0x30);\n                        if (*(puVar10 + 0x38) < uVar14 || *(puVar10 + 0x38) == uVar14) goto code_r0x00421ae6;\n                        uVar8 = uVar14 >> 3;\n                        if ((~*(uVar8 + *(puVar10 + 0x48)) & *(uVar8 + *(puVar10 + 0x50))) >> (uVar14 & 7) != 0) {\n                            *(*0x20 + -0x50) = uVar8;\n                            *(*0x20 + -0xd0) = 0x421ab2;\n                            fcn.00422320();\n                            uVar8 = *(*0x20 + -0x50);\n                            puVar10 = *(*0x20 + -0x88);\n                        }\n                        do {\n                            while (uVar8 = uVar8 + 1,  uVar8 < *(puVar10 + 0x38) + 7U >> 3) {\n                                if ((*(uVar8 + *(puVar10 + 0x50)) & ~*(uVar8 + *(puVar10 + 0x48))) != 0) {\n                                    *(*0x20 + -0x78) = uVar8;\n                                    *(*0x20 + -0xd0) = 0x422012;\n                                    fcn.00422320();\n                                    uVar8 = *(*0x20 + -0x78);\n                                    puVar10 = *(*0x20 + -0x88);\n                                }\n                            }\ncode_r0x00421ae6:\n                            uVar14 = *(puVar10 + 0x38) + 7U >> 3;\n                            *(*0x20 + -0x50) = uVar14;\n                            iVar15 = 0;\n                            for (uVar8 = 0; *(*0x20 + -0x60) = iVar15,  uVar8 < uVar14; uVar8 = uVar8 + 8) {\n                                if (*0x5d3b37 == '\\0') {\n                                    *(*0x20 + -0x80) = uVar8;\n                                    *(*0x20 + -0xd0) = 0x421b39;\n                                    iVar17 = fcn.00401d00();\n                                    uVar14 = *(*0x20 + -0x50);\n                                    puVar10 = *(*0x20 + -0x88);\n                                    iVar15 = *(*0x20 + -0x60);\n                                    uVar8 = *(*0x20 + -0x80);\n                                }\n                                else {\n                                    iVar17 = popcnt(*(*(puVar10 + 0x50) + uVar8));\n                                }\n                                iVar15 = iVar15 + iVar17;\n                            }\n                            uVar16 = *(puVar10 + 0x60);\n                            uVar14 = uVar16;\n                            uVar12 = uVar16 - iVar15;\n                            uVar8 = uVar12;\n                            *(*0x20 + -0xac) = uVar12;\n                            if (iVar15 <= uVar16) {\n                                *(puVar10 + 0x60) = iVar15;\n                                *(puVar10 + 0x30) = 0;\n                                if (*0x585d30 != '\\0') {\n                                    uVar14 = *(*(unaff_R14 + 0x30) + 0xa0);\n                                    *(uVar14 + 0x11e8) = *(uVar14 + 0x11e8) + *(puVar10 + 0x68) * (uVar12 & 0xffff);\n                                }\n                                uVar16 = uVar14;\n                                *(puVar10 + 0x48) = *(puVar10 + 0x50);\n                                *(*0x20 + -0xd0) = 0x421bd6;\n                                uVar7 = fcn.00425fe0();\n                                uVar14 = *(*0x20 + -0x88);\n                                *(uVar14 + 0x50) = uVar7;\n                                *(*0x20 + -0xd0) = 0x421be9;\n                                fcn.00411560();\n                                iVar15 = *(*0x20 + -0x88);\n                                uVar3 = *(iVar15 + 99);\n                                uVar8 = uVar14 & 0xffffffffffffff00 | uVar3;\n                                *(*0x20 + -0xad) = uVar3;\n                                if (uVar3 == 1) {\n                                    uVar12 = *(iVar15 + 0x58);\n                                    puVar10 = uVar12;\n                                    if (uVar12 == *(*0x20 + -0xa4)) {\n                                        uVar18 = *(*0x20 + -0xa8);\n                                        if ((uVar12 != uVar18 + 1) && (uVar12 != uVar18 + 3)) {\n                                            puVar10 = uVar18;\n                                            *(iVar15 + 0x58) = uVar18;\n                                            uVar14 = *(*0x20 + -0xb0);\n                                            uVar3 = *(*0x20 + -0xb0) >> 1;\n                                            if (uVar3 == 0) {\n                                                if (*(*0x20 + 0x10) != '\\0') {\n                                                    return 0;\n                                                }\n                                                if (*(*0x20 + -0xac) != 0) {\n                                                    if (*0x5d3fe8 < 1) {\n                                                        *(*0x20 + -0xd0) = 0x421dc6;\n                                                        fcn.00424f20();\n                                                    }\n                                                    else {\n                                                        *(iVar15 + 0x70) = 0;\n                                                        *(*0x20 + -0xd0) = 0x421db8;\n                                                        fcn.004159e0();\n                                                    }\n                                                    *(*0x20 + -0xd0) = 0x421dd2;\n                                                    iVar15 = fcn.0042c4c0();\n                                                    LOCK();\n                                                    *(iVar15 + 0x270) = *(iVar15 + 0x270) + 1;\n                                                    LOCK();\n                                                    piVar1 = iVar15 + 0x268;\n                                                    iVar15 = *piVar1;\n                                                    *piVar1 = *piVar1 + *(*0x20 + -0x90);\n                                                    *(*0x20 + -0xd0) = 0x421dfa;\n                                                    fcn.0042c5a0(iVar15);\n                                                    return 1;\n                                                }\n                                                if (uVar14 < 0x88) {\n                                                    *(*0x20 + -0xd0) = 0x421e45;\n                                                    fcn.0042be60(uVar14 * 0xc0 + 0x5a6290, (uVar18 >> 1 & 1) * 5);\n                                                    return 0;\n                                                }\n                                                *(*0x20 + -0xd0) = 0x421e65;\n                                                fcn.0045ca40(0x88);\ncode_r0x00421e65:\n                                                *(*0x20 + -0xd0) = 0x421e71;\n                                                fcn.0045ca40(0x88);\ncode_r0x00421e71:\n                                                *(*0x20 + -0xd0) = 0x421e7d;\n                                                fcn.0045ca40(0x88);\n                                            }\n                                            else {\n                                                if (*(*0x20 + -0xac) == 0) {\n                                                    cVar2 = *(*0x20 + 0x10);\ncode_r0x00421cc0:\n                                                    if (cVar2 != '\\0') {\n                                                        return 0;\n                                                    }\n                                                    if (*(*0x20 + -0x60) == 0) {\n                                                        *(*0x20 + -0xd0) = 0x421d67;\n                                                        fcn.00424f20();\n                                                        return 1;\n                                                    }\n                                                    if (*(iVar15 + 0x38) != (*(*0x20 + -0x60) & 0xffff)) {\n                                                        if (uVar14 < 0x88) {\n                                                            *(*0x20 + -0xd0) = 0x421d56;\n                                                            fcn.0042be60(uVar14 * 0xc0 + 0x5a6240, \n                                                                         (puVar10 >> 1 & 1) * 5);\n                                                            return 0;\n                                                        }\n                                                        goto code_r0x00421e65;\n                                                    }\n                                                    if (uVar14 < 0x88) {\n                                                        *(*0x20 + -0xd0) = 0x421d16;\n                                                        fcn.0042be60(uVar14 * 0xc0 + 0x5a6290, (puVar10 >> 1 & 1) * 5);\n                                                        return 0;\n                                                    }\n                                                    goto code_r0x00421e71;\n                                                }\n                                                *(*0x20 + -0xae) = uVar3;\n                                                *(iVar15 + 100) = 1;\n                                                *(*0x20 + -0xd0) = 0x421c69;\n                                                iVar15 = fcn.0042c4c0();\n                                                if (*(*0x20 + -0xae) < 0x44) {\n                                                    piVar1 = iVar15 + *(*0x20 + -0xae) * 8 + 0x278;\n                                                    LOCK();\n                                                    *piVar1 = *piVar1 + *(*0x20 + -0xac);\n                                                    *(*0x20 + -0xd0) = 0x421ca5;\n                                                    fcn.0042c5a0();\n                                                    cVar2 = *(*0x20 + 0x10);\n                                                    puVar10 = *(*0x20 + -0xa8);\n                                                    iVar15 = *(*0x20 + -0x88);\n                                                    uVar14 = *(*0x20 + -0xb0);\n                                                    goto code_r0x00421cc0;\n                                                }\n                                            }\n                                            uVar8 = 0x44;\n                                            *(*0x20 + -0xd0) = 0x421e8a;\n                                            fcn.0045ca40(0x44);\n                                        }\n                                        iVar15 = 0x11;\n                                        *(*0x20 + -0xd0) = 0x421e9b;\n                                        fcn.004330a0();\n                                    }\n                                }\n                                *(*0x20 + -0x58) = *(iVar15 + 0x58);\n                                *(*0x20 + -0xd0) = 0x421ea8;\n                                fcn.00434840();\n                                *(*0x20 + -0xd0) = 0x421eb9;\n                                fcn.00435140();\n                                *(*0x20 + -0xd0) = 0x421ec6;\n                                fcn.00434e40();\n                                *(*0x20 + -0xd0) = 0x421ed7;\n                                fcn.00435140();\n                                *(*0x20 + -0xd0) = 0x421ee5;\n                                fcn.00434e40();\n                                *(*0x20 + -0xd0) = 0x421ef6;\n                                fcn.00435140();\n                                *(*0x20 + -0xd0) = 0x421eff;\n                                fcn.00434e40();\n                                *(*0x20 + -0xd0) = 0x421f05;\n                                fcn.00434aa0();\n                                *(*0x20 + -0xd0) = 0x421f0a;\n                                fcn.004348c0();\n                                *(*0x20 + -0xd0) = 0x421f1b;\n                                fcn.004330a0();\n                            }\n                            *(*0x20 + -0xaa) = uVar16;\n                            *(*0x20 + -0x50) = *(puVar10 + 0x38);\n                            *(*0x20 + -0xd0) = 0x421f2f;\n                            fcn.00434840();\n                            *(*0x20 + -0xd0) = 0x421f45;\n                            fcn.00435140();\n                            *(*0x20 + -0xd0) = 0x421f4f;\n                            fcn.00434e40();\n                            *(*0x20 + -0xd0) = 0x421f65;\n                            fcn.00435140();\n                            *(*0x20 + -0xd0) = 0x421f72;\n                            fcn.00434e40();\n                            *(*0x20 + -0xd0) = 0x421f85;\n                            fcn.00435140();\n                            *(*0x20 + -0xd0) = 0x421f8f;\n                            fcn.00434e40();\n                            *(*0x20 + -0xd0) = 0x421fa5;\n                            fcn.00435140();\n                            *(*0x20 + -0xd0) = 0x421fb2;\n                            fcn.00434e40();\n                            *(*0x20 + -0xd0) = 0x421fb7;\n                            fcn.00434aa0();\n                            *(*0x20 + -0xd0) = 0x421fbc;\n                            fcn.004348c0();\n                            *(*0x20 + -0xd0) = 0x421fcd;\n                            fcn.004330a0();\n                        } while( true );\n                    }\n                    if (uVar8 == 0) goto code_r0x00422250;\n                    uVar4 = SUB168(ZEXT216(*(puVar13 + 1)) / ZEXT816(uVar8), 0);\n                    uVar18 = SUB164(ZEXT216(*(puVar13 + 1)) / ZEXT816(uVar8), 0) & 7;\n                    uVar5 = uVar18;\n                    puVar9 = (uVar4 >> 3) + *(puVar10 + 0x50);\n                    uVar3 = *puVar9;\n                    uVar12 = uVar3;\n                    if ((uVar3 & 1 << uVar18) == 0) {\n                        uVar4 = uVar4 * uVar8 + uVar8;\n                        unaff_R15 = puVar10;\n                        for (; puVar10 = puVar9,  puVar13 != NULL; puVar13 = *puVar13) {\n                            if (uVar4 <= *(puVar13 + 1)) {\n                                cVar2 = '\\0';\n                                goto code_r0x00421964;\n                            }\n                            if (*(puVar13 + 10) == '\\x01') {\n                                *puVar10 = uVar12 | 1 << (uVar5 & 0x1f);\n                                cVar2 = '\\x01';\n                                goto code_r0x00421964;\n                            }\ncode_r0x00422192:\n                            puVar9 = puVar10;\n                        }\n                        cVar2 = '\\0';\ncode_r0x00421964:\n                        *(*0x20 + -0x68) = uVar4;\n                        *(*0x20 + -0xaf) = cVar2;\n                        while ((puVar13 = *(*0x20 + -0x40),  puVar10 = unaff_R15,  puVar13 != NULL &&\n                               (*(puVar13 + 1) < uVar4))) {\n                            if ((*(puVar13 + 10) == '\\x01') || (cVar2 == '\\0')) {\n                                uVar7 = *puVar13;\n                                *(*0x20 + -0x40) = uVar7;\n                                **(*0x20 + -0x48) = uVar7;\n                                *(*0x20 + -0xd0) = 0x422225;\n                                fcn.00425ea0(uVar8);\n                                cVar2 = *(*0x20 + -0xaf);\n                                uVar4 = *(*0x20 + -0x68);\n                                uVar8 = *(*0x20 + -0x90);\n                                uVar14 = *(*0x20 + -0xa0);\n                                unaff_R15 = *(*0x20 + -0x88);\n                            }\n                            else {\n                                *(*0x20 + -0x48) = puVar13;\n                                *(*0x20 + -0x40) = *puVar13;\n                            }\n                        }\n                    }\n                    else if (*(puVar13 + 10) == '\\x03') {\n                        uVar7 = *puVar13;\n                        *(*0x20 + -0x40) = uVar7;\n                        **(*0x20 + -0x48) = uVar7;\n                        *(puVar13 + 0x11) = 1;\n                        *(*0x20 + -0xd0) = 0x421925;\n                        fcn.00425ea0(uVar8);\n                        uVar8 = *(*0x20 + -0x90);\n                        uVar14 = *(*0x20 + -0xa0);\n                        puVar10 = *(*0x20 + -0x88);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = puVar13;\n                        *(*0x20 + -0x40) = *puVar13;\n                    }\n                    uVar12 = *(*0x20 + -0xa8);\n                    uVar3 = *(*0x20 + -0xb0);\n                    unaff_R15 = puVar10;\n                } while( true );\n            }\n            goto code_r0x00422255;\n        }\n        goto code_r0x004222db;\n    }\n    goto code_r0x004222ed;\ncode_r0x00422250:\n    *(*0x20 + -0xd0) = 0x422255;\n    fcn.00431720();\ncode_r0x00422255:\n    *(*0x20 + -0x58) = *(puVar10 + 0x58);\n    *(*0x20 + -0xd0) = 0x422265;\n    fcn.00434840();\n    *(*0x20 + -0xd0) = 0x422276;\n    fcn.00435140();\n    *(*0x20 + -0xd0) = 0x422285;\n    fcn.00434e40();\n    *(*0x20 + -0xd0) = 0x422296;\n    fcn.00435140();\n    *(*0x20 + -0xd0) = 0x4222a5;\n    fcn.00434e40();\n    *(*0x20 + -0xd0) = 0x4222b6;\n    fcn.00435140();\n    *(*0x20 + -0xd0) = 0x4222bf;\n    fcn.00434e40();\n    *(*0x20 + -0xd0) = 0x4222c5;\n    fcn.00434aa0();\n    *(*0x20 + -0xd0) = 0x4222ca;\n    fcn.004348c0();\n    *(*0x20 + -0xd0) = 0x4222db;\n    fcn.004330a0();\ncode_r0x004222db:\n    unaff_BL = '\\x1c';\n    *(*0x20 + -0xd0) = 0x4222ec;\n    in_RAX = fcn.004330a0();\ncode_r0x004222ed:\n    *(puVar11 + 8) = in_RAX;\n    puVar11[0x10] = unaff_BL;\n    *(puVar11 + -8) = 0x4222fb;\n    fcn.0045a360();\n    in_RAX = *(puVar11 + 8);\n    unaff_BL = puVar11[0x10];\n    *0x20 = puVar11;\n    goto code_r0x00421760;\n}\n",
        "token_count": 6257
    },
    "00424600": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00424600(uchar param_1)\n\n{\n    int64_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    char cVar5;\n    ulong in_RAX;\n    ulong uVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uint64_t uVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    char cVar14;\n    uchar (*pauVar15) [16];\n    uchar uVar16;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        uVar16 = unaff_RDI;\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar13 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + 0x19) = uVar16;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar7 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if ((iVar7 == 0) || (0xf < unaff_RBX)) {\n                iVar7 = 0;\n                pauVar15 = NULL;\n                unaff_RBX = 0;\ncode_r0x0042470e:\n                *(*0x20 + -0x48) = unaff_RBX;\n                *(*0x20 + -0x28) = pauVar15;\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x78) = 0x424725;\n                fcn.0040a360();\n                iVar7 = *(*0x20 + -0x38);\n                if (iVar7 == 0) {\n                    *(*0x20 + -0x18) = *(*0x20 + 8) + 8;\n                    uVar8 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x78) = 0x424756;\n                    iVar7 = fcn.00428080();\n                    if (iVar7 != 0) {\n                        uVar6 = 0;\n                        goto code_r0x004247b6;\n                    }\n                    uVar8 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x78) = 0x424771;\n                    uVar6 = fcn.00424c60();\n                    if (uVar8 == '\\0') {\n                        *(*0x20 + -0x78) = 0x424785;\n                        fcn.0040a580();\n                        return 0;\n                    }\n                    *(*0x20 + -0x40) = uVar6;\n                    uVar8 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x78) = 0x4247a8;\n                    iVar7 = fcn.00428080();\n                    if (iVar7 != 0) {\n                        uVar6 = *(*0x20 + -0x40);\n                        goto code_r0x004247b6;\n                    }\n                }\n                else {\n                    uVar6 = 0;\n                    uVar8 = *(*0x20 + -0x48);\ncode_r0x004247b6:\n                    *(*0x20 + -0x48) = uVar8;\n                    *(*0x20 + -0x40) = uVar6;\n                    *(*0x20 + -0x38) = iVar7;\n                    iVar7 = *(*0x20 + -0x28);\n                    if (iVar7 == 0) {\n                        *(*0x20 + -0x78) = 0x4247d9;\n                        iVar7 = fcn.00424500();\n                    }\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x78) = 0x4247ed;\n                    fcn.0040a580();\n                    if ((*(*0x20 + -0x40) != 0) &&\n                       (*(*(*0x20 + 8) + 0x10178) < (*0x5d5890 - *0x5d58a0) + *(*0x20 + -0x40))) {\n                        *(*0x20 + -0x78) = 0x424832;\n                        fcn.0041f1c0(*(*0x20 + 8) + 8);\n                    }\n                    pauVar15 = *(*0x20 + -0x28);\n                    iVar7 = *(*0x20 + -0x38);\n                    unaff_RBX = *(*0x20 + -0x48);\ncode_r0x0042484d:\n                    *(*0x20 + -0x50) = pauVar15;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x48) = unaff_RBX;\n                    *pauVar15 = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *pauVar15[1] = 0;\n                    *(pauVar15[1] + 8) = iVar7;\n                    uVar8 = *(*0x20 + 0x10);\n                    *pauVar15[2] = uVar8;\n                    *pauVar15[6] = 0;\n                    pauVar15[6][2] = 0;\n                    *(pauVar15[6] + 8) = 0;\n                    *(pauVar15[7] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    pauVar15[6][4] = 0;\n                    *pauVar15[3] = 0;\n                    *(pauVar15[4] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *(*0x20 + -0x20) = pauVar15[6] + 3;\n                    pauVar15[6][3] = 0;\n                    *(*0x20 + -0x78) = 0x4248bf;\n                    cVar5 = fcn.004243a0(uVar8);\n                    if (cVar5 == '\\0') {\n                        iVar7 = *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar7 = *(*0x20 + -0x50);\n                        *(iVar7 + 100) = 1;\n                    }\n                    uVar12 = *(*0x20 + 0x10) << 0xd;\n                    *(*0x20 + -0x30) = uVar12;\n                    cVar5 = *(*0x20 + 0x18);\n                    if (cVar5 == '\\0') {\n                        uVar3 = *(*0x20 + 0x19);\n                        *(iVar7 + 0x62) = uVar3;\n                        if (uVar3 >> 1 == 0) {\n                            *(iVar7 + 0x68) = uVar12;\n                            *(iVar7 + 0x38) = 1;\n                            *(iVar7 + 0x5c) = 0;\ncode_r0x004249a6:\n                            *(iVar7 + 0x30) = 0;\n                            *(iVar7 + 0x40) = 0xffffffffffffffff;\n                            *(*0x20 + -0x78) = 0x4249bf;\n                            uVar8 = fcn.00425fe0();\n                            *(*(*0x20 + -0x50) + 0x50) = uVar8;\n                            *(*0x20 + -0x78) = 0x4249d1;\n                            uVar8 = fcn.00426300();\n                            iVar7 = *(*0x20 + -0x50);\n                            *(iVar7 + 0x48) = uVar8;\n                            *(iVar7 + 0x58) = *(*(*0x20 + 8) + 0x10130);\n                            **(*0x20 + -0x20) = 1;\n                            uVar12 = *(*0x20 + -0x30);\n                            cVar5 = *(*0x20 + 0x18);\n                            goto code_r0x00424a0f;\n                        }\n                        unaff_RDI = uVar3 >> 1;\n                        if (unaff_RDI < 0x44) {\n                            uVar10 = *(unaff_RDI * 2 + 0x567a20);\n                            *(iVar7 + 0x68) = uVar10;\n                            if (uVar10 != 0) {\n                                *(iVar7 + 0x38) = uVar12 / uVar10;\n                                *(iVar7 + 0x5c) = *(unaff_RDI * 4 + 0x568fc0);\n                                goto code_r0x004249a6;\n                            }\n                            goto code_r0x00424bfa;\n                        }\n                    }\n                    else {\n                        *(iVar7 + 0x28) = 0;\n                        *(iVar7 + 0x38) = 0;\n                        *(iVar7 + 0x70) = *(iVar7 + 0x20) * 0x2000 + *(iVar7 + 0x18);\n                        **(*0x20 + -0x20) = 2;\ncode_r0x00424a0f:\n                        iVar11 = *(*0x20 + -0x48);\n                        cVar14 = cVar5;\n                        if (iVar11 != 0) {\n                            *(*0x20 + -0x78) = 0x424a28;\n                            fcn.00415680(iVar11, iVar7);\n                            iVar11 = *(*0x20 + -0x48);\n                            LOCK();\n                            *0x5d58a0 = *0x5d58a0 - iVar11;\n                            cVar5 = *(*0x20 + 0x18);\n                            iVar7 = *(*0x20 + -0x50);\n                            uVar12 = *(*0x20 + -0x30);\n                            cVar14 = *(*0x20 + 0x18);\n                        }\n                        if (cVar5 == '\\0') {\n                            LOCK();\n                            *0x5d5898 = *0x5d5898 + uVar12;\n                        }\n                        if (cVar5 != '\\0' || cVar14 != '\\0') {\n                            *(*0x20 + -0x78) = 0x424a94;\n                            fcn.0042c400(iVar11, iVar7);\n                        }\n                        *(*0x20 + -0x78) = 0x424aa5;\n                        piVar9 = fcn.0042c4c0();\n                        iVar7 = *(*0x20 + -0x48);\n                        LOCK();\n                        *piVar9 = *piVar9 + iVar7;\n                        LOCK();\n                        piVar1 = piVar9 + 1;\n                        iVar11 = *piVar1;\n                        *piVar1 = *piVar1 - iVar7;\n                        uVar3 = *(*0x20 + 0x18);\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                piVar9 = piVar9 + 2;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                            else {\n                                LOCK();\n                                piVar9 = piVar9 + 3;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            piVar9 = piVar9 + 5;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            piVar9 = piVar9 + 4;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        *(*0x20 + -0x78) = 0x424b14;\n                        fcn.0042c5a0(uVar3, iVar11);\n                        unaff_RDI = *(*0x20 + -0x50);\n                        *(*0x20 + -0x78) = 0x424b2f;\n                        fcn.004242a0(*(*0x20 + 0x10));\n                        if (*(*0x20 + 0x18) != '\\0') {\ncode_r0x00424bc8:\n                            *(*0x20 + -0x78) = 0x424bcd;\n                            fcn.0045c160();\n                            return *(*0x20 + -0x50);\n                        }\n                        uVar12 = *(*(*0x20 + -0x50) + 0x18);\n                        uVar10 = uVar12 + 0x800000000000 >> 0x2a;\n                        if (uVar10 < 0x40) {\n                            puVar2 = *(*(uVar10 * 8 + 0x5a5f90) + (uVar12 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                     (uVar12 >> 0x10 & 0x3f) + 0x21000;\n                            LOCK();\n                            *puVar2 = *puVar2 | 1 << (uVar12 >> 0xd & 7);\n                            LOCK();\n                            *(*(*0x20 + 8) + 0x10150) = *(*(*0x20 + 8) + 0x10150) + *(*0x20 + 0x10);\n                            goto code_r0x00424bc8;\n                        }\n                        *(*0x20 + -0x78) = 0x424bfa;\n                        fcn.0045ca60(0x40);\ncode_r0x00424bfa:\n                        *(*0x20 + -0x78) = 0x424bff;\n                        fcn.00431720();\n                    }\n                    *(*0x20 + -0x78) = 0x424c0c;\n                    fcn.0045ca40(0x44);\n                }\n                unaff_RBX = 0x2b;\n                *(*0x20 + -0x78) = 0x424c1d;\n                fcn.004330a0();\n            }\n            else {\n                if (*(iVar7 + 0x50) == 0) {\n                    *(*0x20 + -0x10) = iVar7;\n                    *(*0x20 + -0x78) = 0x424667;\n                    fcn.0040a360();\n                    uVar8 = *(*0x20 + 8);\n                    *(*0x20 + -0x78) = 0x424675;\n                    uVar6 = fcn.00429300();\n                    iVar7 = *(*0x20 + -0x10);\n                    *(iVar7 + 0x48) = uVar6;\n                    *(iVar7 + 0x50) = unaff_RBX;\n                    *(iVar7 + 0x58) = uVar8;\n                    *(*0x20 + -0x78) = 0x424692;\n                    fcn.0040a580();\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(*0x20 + -0x78) = 0x4246a8;\n                iVar7 = fcn.00428ee0();\n                if (iVar7 == 0) {\n                    pauVar15 = NULL;\n                    goto code_r0x0042470e;\n                }\n                iVar11 = *(*(unaff_R14 + 0x30) + 0xa0);\n                if ((iVar11 == 0) || (iVar4 = *(iVar11 + 0xdc8),  iVar4 == 0)) {\n                    pauVar15 = NULL;\ncode_r0x004246ed:\n                    if (pauVar15 == NULL) goto code_r0x0042470e;\n                    goto code_r0x0042484d;\n                }\n                unaff_RDI = iVar4 - 1;\n                if (unaff_RDI < 0x80) {\n                    pauVar15 = *(iVar11 + 0xdc8 + iVar4 * 8);\n                    *(iVar11 + 0xdc8) = unaff_RDI;\n                    goto code_r0x004246ed;\n                }\n            }\n            uVar16 = unaff_RDI;\n            param_1 = 0x80;\n            *(*0x20 + -0x78) = 0x424c2a;\n            in_RAX = fcn.0045ca40(0x80);\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        puVar13[0x18] = param_1;\n        puVar13[0x19] = uVar16;\n        *(puVar13 + -8) = 0x424c45;\n        fcn.0045ea60();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        param_1 = puVar13[0x18];\n        unaff_RDI = puVar13[0x19];\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 4072
    },
    "004250a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004250a0(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    ulong arg1_00;\n    ulong *puVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(unaff_RBX + 99) == '\\x01') {\n                iVar4 = *(unaff_RBX + 0x60);\n                *(*0x20 + -0x2a) = iVar4;\n                if ((iVar4 == 0) && (*(in_RAX + 0x10130) == *(unaff_RBX + 0x58))) {\n                    LOCK();\n                    *(in_RAX + 0x10150) = *(in_RAX + 0x10150) - *(unaff_RBX + 0x20);\n                    uVar7 = *(unaff_RBX + 0x18);\n                    uVar9 = uVar7 + 0x800000000000 >> 0x2a;\n                    if (uVar9 < 0x40) {\n                        puVar2 = *(*(uVar9 * 8 + 0x5a5f90) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                 (uVar7 >> 0x10 & 0x3f) + 0x21000;\n                        LOCK();\n                        *puVar2 = *puVar2 & ~(1 << (uVar7 >> 0xd & 7));\ncode_r0x00425196:\n                        iVar6 = *(unaff_RBX + 0x20);\n                        if (arg1 == '\\0') {\n                            LOCK();\n                            *0x5d5898 = *0x5d5898 + iVar6 * -0x2000;\n                        }\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x2b) = arg1;\n                        *(*0x20 + -0x10) = iVar6 * 0x2000;\n                        if (arg1 != '\\0') {\n                            *(*0x20 + -0x58) = 0x4251df;\n                            fcn.0042c400();\n                        }\n                        *(*0x20 + -0x58) = 0x4251eb;\n                        iVar6 = fcn.0042c4c0();\n                        uVar3 = *(*0x20 + -0x2b);\n                        uVar7 = uVar3;\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                puVar1 = iVar6 + 0x10;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                            else {\n                                LOCK();\n                                puVar1 = iVar6 + 0x18;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x28;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x20;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x58) = 0x42524d;\n                        fcn.0042c5a0(uVar7);\n                        arg1_00 = *(*(*0x20 + 0x10) + 0x20);\n                        *(*0x20 + -0x58) = 0x425273;\n                        fcn.00428340(arg1_00);\n                        puVar5 = *(*0x20 + 0x10);\n                        *(puVar5 + 99) = 0;\n                        iVar6 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        if (iVar6 == 0) {\ncode_r0x004252bc:\n                            iVar6 = *(*0x20 + 8);\n                            *(iVar6 + 0x16a68) = *(iVar6 + 0x16a68) - *(iVar6 + 0x16a38);\n                            *puVar5 = *(iVar6 + 0x16a50);\n                            *(iVar6 + 0x16a50) = puVar5;\n                            return;\n                        }\n                        uVar7 = *(iVar6 + 0xdc8);\n                        if (0x7f < uVar7) goto code_r0x004252bc;\n                        if (uVar7 < 0x80) {\n                            *(iVar6 + 0xdd0 + uVar7 * 8) = puVar5;\n                            *(iVar6 + 0xdc8) = *(iVar6 + 0xdc8) + 1;\n                            return;\n                        }\n                        *(*0x20 + -0x58) = 0x4252fb;\n                        fcn.0045ca40(0x80);\n                        goto code_r0x004252fb;\n                    }\n                    goto code_r0x0042531d;\n                }\n            }\n            else {\n                if (*(unaff_RBX + 99) == '\\x02') {\n                    if (*(unaff_RBX + 0x60) == 0) goto code_r0x00425196;\ncode_r0x004252fb:\n                    *(*0x20 + -0x58) = 0x42530c;\n                    fcn.004330a0();\n                }\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x58) = 0x42531d;\n                fcn.004330a0();\ncode_r0x0042531d:\n                *(*0x20 + -0x58) = 0x42532a;\n                in_RAX = fcn.0045ca60(0x40);\n            }\n            uVar7 = *(unaff_RBX + 0x58);\n            *(*0x20 + -0x18) = uVar7;\n            *(*0x20 + -0x20) = *(in_RAX + 0x10130);\n            *(*0x20 + -0x28) = *(unaff_RBX + 0x18);\n            *(*0x20 + -0x58) = 0x42534b;\n            fcn.00434840();\n            arg1._0_1_ = uVar7;\n            *(*0x20 + -0x58) = 0x42535c;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x425366;\n            fcn.00435100();\n            *(*0x20 + -0x58) = 0x425377;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x425385;\n            fcn.00434fa0();\n            *(*0x20 + -0x58) = 0x425396;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x4253a5;\n            fcn.00434e40();\n            *(*0x20 + -0x58) = 0x4253b6;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x4253c5;\n            fcn.00434e40();\n            *(*0x20 + -0x58) = 0x4253d6;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x4253e5;\n            fcn.00434e40();\n            *(*0x20 + -0x58) = 0x4253ea;\n            fcn.00434aa0();\n            *(*0x20 + -0x58) = 0x4253ef;\n            fcn.004348c0();\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x58) = 0x425405;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = arg1;\n        *(puVar8 + -8) = 0x425419;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1._0_1_ = puVar8[0x18];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2169
    },
    "00425ea0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00425ea0(ulong arg1)\n\n{\n    char cVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            cVar1 = *(in_RAX + 10);\n            if (cVar1 == '\\x01') {\n                uVar2 = *(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x425f50;\n                fcn.00415b80(uVar2);\n                *(*0x20 + -0x38) = 0x425f5e;\n                fcn.0040a360();\n                *0x5ac8f8 = *0x5ac8f8 - *0x5ac8c8;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x5ac8e0;\n                *(*0x20 + -0x38) = 0x425f98;\n                *0x5ac8e0 = puVar3;\n                fcn.0040a580();\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -0x38) = 0x425eec;\n                fcn.0042a7e0(arg1, uVar2);\n                *(*0x20 + -0x38) = 0x425efa;\n                fcn.0040a360();\n                *0x5ac940 = *0x5ac940 - *0x5ac910;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x5ac928;\n                *(*0x20 + -0x38) = 0x425f33;\n                *0x5ac928 = puVar3;\n                fcn.0040a580();\n                return;\n            }\n            if (cVar1 == '\\x03') {\n                *(in_RAX + 0x10) = 1;\n                return;\n            }\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x425fb3;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x425fc8;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 775
    },
    "0042a0c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0042a0c0(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x10) == 2) || (*(in_RAX + 0x10) == 3)) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x42a10d;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42a118;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 307
    },
    "0042a120": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.0042a120(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    uint64_t uVar2;\n    uint64_t in_RDX;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    ulong *in_R9;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \ncode_r0x0042a120:\n    puVar3 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar3 = *0x20 + -0x38;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (*0x57ef90 != NULL) {\ncode_r0x0042a1b2:\n            uVar4 = 0;\n            for (iVar5 = 0; iVar5 < unaff_RDI; iVar5 = iVar5 + 1) {\n                uVar4 = (*(arg1 + iVar5 * 8) + uVar4) * 0x401;\n                uVar4 = uVar4 >> 6 ^ uVar4;\n            }\n            uVar4 = (uVar4 + unaff_RBX) * 0x401;\n            uVar4 = (uVar4 ^ uVar4 >> 6) * 9;\n            uVar4 = uVar4 ^ uVar4 >> 0xb;\n            in_RDX = uVar4 / 179999;\n            iVar5 = in_RDX * 179999;\n            uVar2 = uVar4 % 179999;\n            in_R9 = *0x57ef90;\n            if (uVar2 < 179999) {\n                in_R9 = (*0x57ef90)[uVar2];\n                do {\n                    if (in_R9 == NULL) {\n                        if (in_R8 == '\\0') {\n                            return NULL;\n                        }\n                        *(*0x20 + -0x20) = uVar4;\n                        *(*0x20 + -0x10) = uVar2;\n                        *(*0x20 + -0x40) = 0x42a29e;\n                        puVar1 = fcn.00429fa0();\n                        in_RDX = puVar1[5];\n                        if (0x20 < in_RDX) {\n                            unaff_RBX = 0x20;\n                            *(*0x20 + -0x40) = 0x42a37f;\n                            uVar2 = fcn.0045cb60(arg1, in_RDX);\n                            goto code_r0x0042a37f;\n                        }\n                        if (*(*0x20 + 0x20) < in_RDX) {\n                            in_RDX = *(*0x20 + 0x20);\n                        }\n                        if (*(*0x20 + 0x18) != puVar1 + 6) {\n                            *(*0x20 + -0x18) = puVar1;\n                            *(*0x20 + -0x40) = 0x42a2db;\n                            fcn.0045d380(in_RDX << 3);\n                            puVar1 = *(*0x20 + -0x18);\n                        }\n                        puVar1[3] = *(*0x20 + -0x20);\n                        puVar1[4] = *(*0x20 + 0x10);\n                        iVar5 = *(*0x20 + -0x10);\n                        *puVar1 = (*0x57ef90)[iVar5];\n                        (*0x57ef90)[iVar5] = puVar1;\n                        if (*(*0x20 + 8) == 1) {\n                            puVar1[1] = *0x5d3c88;\n                            *0x5d3c88 = puVar1;\n                        }\n                        else if (*(*0x20 + 8) == 3) {\n                            puVar1[1] = *0x5d3d50;\n                            *0x5d3d50 = puVar1;\n                        }\n                        else {\n                            puVar1[1] = *0x5d3c00;\n                            *0x5d3c00 = puVar1;\n                        }\n                        return puVar1;\n                    }\n                    if (((in_R9[2] == in_RAX) && (in_R9[3] == uVar4)) && (in_R9[4] == unaff_RBX)) {\n                        in_RDX = in_R9[5];\n                        if (0x20 < in_RDX) goto code_r0x0042a3a7;\n                        if (unaff_RDI == in_RDX) {\n                            iVar5 = 0;\n                            while( true ) {\n                                if (in_RDX <= iVar5) {\n                                    return in_R9;\n                                }\n                                if (*(arg1 + iVar5 * 8) != in_R9[iVar5 + 6]) break;\ncode_r0x0042a37f:\n                                iVar5 = iVar5 + 1;\n                            }\n                        }\n                    }\n                    in_R9 = *in_R9;\n                } while( true );\n            }\n            goto code_r0x0042a3b1;\n        }\n        *(*0x20 + 0x30) = in_R8;\n        *(*0x20 + -0x40) = 0x42a16c;\n        puVar1 = fcn.00415420();\n        if (*0x5d3dd0 != 0) {\n            unaff_RDI = 0x57ef90;\n            *(*0x20 + -0x40) = 0x42a18a;\n            fcn.0045c5a0(arg1, in_RDX, in_R8, in_R9);\n            puVar1 = *0x57ef90;\n        }\n        *0x57ef90 = puVar1;\n        if (*0x57ef90 != NULL) {\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            unaff_RDI = *(*0x20 + 0x20);\n            in_R8 = *(*0x20 + 0x30);\n            goto code_r0x0042a1b2;\n        }\n        goto code_r0x0042a3bb;\n    }\n    goto code_r0x0042a3cd;\ncode_r0x0042a3a7:\n    *(*0x20 + -0x40) = 0x42a3b1;\n    fcn.0045cb60(arg1, in_RDX);\ncode_r0x0042a3b1:\n    arg1 = 179999;\n    *(*0x20 + -0x40) = 0x42a3bb;\n    fcn.0045ca40(179999);\n    unaff_RSI = in_RAX;\ncode_r0x0042a3bb:\n    unaff_RBX = 0x1f;\n    *(*0x20 + -0x40) = 0x42a3cc;\n    in_RAX = fcn.004330a0();\ncode_r0x0042a3cd:\n    *(puVar3 + 8) = in_RAX;\n    *(puVar3 + 0x10) = unaff_RBX;\n    *(puVar3 + 0x18) = arg1;\n    *(puVar3 + 0x20) = unaff_RDI;\n    *(puVar3 + 0x28) = unaff_RSI;\n    puVar3[0x30] = in_R8;\n    *(puVar3 + -8) = 0x42a3f0;\n    fcn.0045a360();\n    in_RAX = *(puVar3 + 8);\n    unaff_RBX = *(puVar3 + 0x10);\n    arg1 = *(puVar3 + 0x18);\n    unaff_RDI = *(puVar3 + 0x20);\n    unaff_RSI = *(puVar3 + 0x28);\n    in_R8 = puVar3[0x30];\n    *0x20 = puVar3;\n    goto code_r0x0042a120;\n}\n",
        "token_count": 1947
    },
    "0042c4c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0042c4c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    iVar4 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar4 == 0) {\n        fcn.0040a360(in_RAX + 0xde8);\n    }\n    else {\n        LOCK();\n        piVar1 = iVar4 + 0x2274;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        if ((iVar2 + 1U & 1) == 0) goto code_r0x0042c552;\n    }\n    uVar5 = *(in_RAX + 0xde0) % 3;\n    if (uVar5 < 3) {\n        return in_RAX + uVar5 * 0x4a0;\n    }\n    fcn.0045ca40(3);\ncode_r0x0042c552:\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434e40();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.004330a0();\n    pcVar3 = swi(3);\n    iVar4 = (*pcVar3)();\n    return iVar4;\n}\n",
        "token_count": 341
    },
    "0042e300": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042e300(void)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x24) = 0;\n            *(*0x20 + -0x1c) = 0;\n            *(*0x20 + -0x70) = *0x57ef50;\n            *(*0x20 + -0x68) = *0x20 + -0x20;\n            *(*0x20 + -0x60) = *0x20 + -0x24;\n            *(*0x20 + -0x58) = *0x20 + -0x1c;\n            *(*0x20 + -0x78) = 0x42e35e;\n            fcn.004304e0();\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            uVar10 = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if ((*(*0x20 + -0x20) < 10) ||\n               (((*(*0x20 + -0x20) == 10 && (*(*0x20 + -0x24) == 0)) && (*(*0x20 + -0x1c) < 0x3ad7)))) {\n                return;\n            }\n            *(*0x20 + -0x78) = 0x42e3a5;\n            iVar3 = fcn.00430380();\n            puVar1 = iVar3 + 3;\n            *(*0x20 + -0x10) = puVar1;\n            uVar2 = *puVar1;\n            *(*0x20 + -0x25) = uVar2;\n            *puVar1 = uVar2 | 0x80;\n            *(*0x20 + -0x78) = 0x42e3d0;\n            fcn.0042ebc0(0x21);\n            uVar5 = *0x5d3d28;\n            if (*0x5d3d28 < 0x106) {\n                *(*0x20 + -0x18) = *0x5d3d28;\n                *(*0x20 + -0x78) = 0x42e405;\n                fcn.0045d380(*0x5d3d28);\n                iVar3 = *(*0x20 + -0x18);\n                for (iVar4 = 0; iVar4 < 0x20; iVar4 = iVar4 + 1) {\n                    uVar5 = iVar3 + iVar4 * 2;\n                    if (0x20a < uVar5) goto code_r0x0042e585;\n                    *(uVar5 + 0x5d4820) = *((*(iVar4 + 0x5d4a0a) >> 4) + 0x4ca870);\n                    if (0x20a < iVar3 + iVar4 * 2 + 1U) goto code_r0x0042e575;\n                    *(uVar5 + 0x5d4821) = *((*(iVar4 + 0x5d4a0a) & 0xf) + 0x4ca870);\n                }\n                uVar5 = iVar3 + 0x40;\n                while( true ) {\n                    if (0x209 < uVar5) {\n                        *(*0x20 + -0x70) = _sym.imp.kernel32.dll_CreateFileA;\n                        *(*0x20 + -0x68) = 0x5d4820;\n                        *(*0x20 + -0x60) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x50) = 0;\n                        *(*0x20 + -0x48) = 3;\n                        *(*0x20 + -0x40) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x78) = 0x42e4f3;\n                        fcn.004306e0();\n                        *(*0x20 + -0x78) = 0x42e50c;\n                        fcn.0045dec0();\n                        if (*(*0x20 + -0x70) != 3) {\n                            *0x5d3b24 = 1;\n                            return;\n                        }\n                        **(*0x20 + -0x10) = *(*0x20 + -0x25);\n                        *(*0x20 + -0x78) = 0x42e537;\n                        fcn.00434840();\n                        *(*0x20 + -0x78) = 0x42e548;\n                        fcn.00435140();\n                        *(*0x20 + -0x78) = 0x42e54d;\n                        fcn.004348c0();\n                        return;\n                    }\n                    if (0x20a < uVar5) break;\n                    *(uVar5 + 0x5d4820) = 0x41;\n                    uVar5 = uVar5 + 1;\n                }\n                *(*0x20 + -0x78) = 0x42e575;\n                fcn.0045ca40(0x20b);\ncode_r0x0042e575:\n                *(*0x20 + -0x78) = 0x42e585;\n                fcn.0045ca40(0x20b);\ncode_r0x0042e585:\n                uVar5 = 0x20b;\n                *(*0x20 + -0x78) = 0x42e592;\n                fcn.0045ca40(0x20b);\n            }\n            *(*0x20 + -0x78) = 0x42e59c;\n            fcn.0045caa0(uVar5, 0x105);\n        }\n        *(puVar6 + -8) = 0x42e5a5;\n        fcn.0045a360();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1547
    },
    "00433aa0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00433aa0(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uchar uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    \ncode_r0x00433aa0:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar7 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar8 = *(*(unaff_R14 + 0x30) + 0x90);\n        if ((iVar8 == 0) || (*(iVar8 + 0x90) != 2)) {\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = 0;\n            iVar5 = 0;\n            iVar6 = 0;\n            iVar4 = 0;\n            iVar8 = 0;\n            iVar9 = 0;\n            do {\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x38) = iVar4;\n                *(*0x20 + -0x50) = iVar6;\n                *(*0x20 + -0x20) = iVar5;\n                *(*0x20 + -0x5a) = uVar3;\n                *(*0x20 + -0x30) = iVar8;\n                uVar10 = *(in_RAX + 0x90);\n                if (uVar10 < 5) {\n                    if (uVar10 != 1) {\n                        if (uVar10 == 2) {\n                            if (*(in_RAX + 0xb2) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0xb1) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0x10) == -0x522) {\n                                if (*(in_RAX + 0x30) == iVar5) {\n                                    bVar11 = *(iVar5 + 0x300) == iVar6;\n                                }\n                                else {\n                                    bVar11 = false;\n                                }\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                            if (!bVar11) {\n                                *(*0x20 + -0x78) = 0x433bb8;\n                                cVar2 = fcn.00437320(0x1002);\n                                if (cVar2 == '\\0') {\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                    iVar5 = *(*0x20 + -0x20);\n                                    iVar6 = *(*0x20 + -0x50);\n                                    iVar4 = *(*0x20 + -0x38);\n                                }\n                                else {\n                                    iVar8 = *(*0x20 + 8);\n                                    *(iVar8 + 0xb1) = 0x101;\n                                    *(iVar8 + 0x10) = 0xfffffffffffffade;\n                                    iVar8 = *(iVar8 + 0x30);\n                                    *(*0x20 + -0x10) = iVar8;\n                                    iVar6 = *(iVar8 + 0x300);\n                                    *(*0x20 + -0x4c) = iVar6;\n                                    if (*(*0x20 + -0x20) == iVar8) {\n                                        bVar11 = iVar6 != *(*0x20 + -0x50);\n                                    }\n                                    else {\n                                        bVar11 = true;\n                                    }\n                                    *(*0x20 + -0x59) = bVar11;\n                                    *(*0x20 + -0x78) = 0x433c25;\n                                    fcn.00436f60(2);\n                                    if ((*0x5d4018 == 0) && (*(*0x20 + -0x59) != '\\0')) {\n                                        *(*0x20 + -0x78) = 0x433c3d;\n                                        fcn.0045e320();\n                                        iVar4 = *(*0x20 + -0x38);\n                                        if (iVar4 <= *(*0x20 + -0x70)) {\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x78) = 0x433c6e;\n                                            fcn.004309c0();\n                                            iVar4 = *(*0x20 + -0x48) + 5000;\n                                        }\n                                    }\n                                    else {\n                                        iVar4 = *(*0x20 + -0x38);\n                                    }\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    iVar6 = *(*0x20 + -0x4c);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                }\n                            }\n                            goto code_r0x00433d90;\n                        }\n                        if (uVar10 < 3) goto code_r0x00433cfa;\n                    }\ncode_r0x00433d52:\n                    *(*0x20 + -0x5a) = uVar3;\n                    *(*0x20 + -0x78) = 0x433d66;\n                    cVar2 = fcn.00437320(uVar10 | 0x1000);\n                    if (cVar2 != '\\0') {\n                        piVar1 = *(*0x20 + 8);\n                        *(piVar1 + 0xb1) = 0;\n                        piVar1[2] = *piVar1 + 0x13a0;\n                        return piVar1;\n                    }\n                    iVar8 = *(*0x20 + -0x30);\n                    iVar9 = *(*0x20 + -0x40);\n                    uVar3 = *(*0x20 + -0x5a);\n                    iVar5 = *(*0x20 + -0x20);\n                    iVar6 = *(*0x20 + -0x50);\n                    iVar4 = *(*0x20 + -0x38);\n                }\n                else {\n                    if (uVar10 == 6) {\n                        return NULL;\n                    }\n                    if (uVar10 != 8) {\n                        if (uVar10 == 9) {\n                            *(*0x20 + -0x78) = 0x433d1a;\n                            cVar2 = fcn.004378e0(4);\n                            if (cVar2 != '\\0') {\n                                uVar10 = 4;\n                                uVar3 = 1;\n                                goto code_r0x00433d52;\n                            }\n                            iVar8 = *(*0x20 + -0x30);\n                            iVar9 = *(*0x20 + -0x40);\n                            uVar3 = *(*0x20 + -0x5a);\n                            iVar5 = *(*0x20 + -0x20);\n                            iVar6 = *(*0x20 + -0x50);\n                            iVar4 = *(*0x20 + -0x38);\n                        }\n                        else {\ncode_r0x00433cfa:\n                            if ((uVar10 >> 0xc & 1) == 0) goto code_r0x00433eb3;\n                        }\n                    }\n                }\ncode_r0x00433d90:\n                *(*0x20 + -0x38) = iVar4;\n                *(*0x20 + -0x50) = iVar6;\n                *(*0x20 + -0x20) = iVar5;\n                *(*0x20 + -0x5a) = uVar3;\n                if (iVar8 == 0) {\n                    *(*0x20 + -0x78) = 0x433dac;\n                    fcn.0045e320();\n                    iVar9 = *(*0x20 + -0x70) + 10000;\n                }\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x78) = 0x433dd5;\n                fcn.0045e320();\n                if (*(*0x20 + -0x70) < *(*0x20 + -0x40)) {\n                    *(*0x20 + -0x70) = 10;\n                    *(*0x20 + -0x78) = 0x433e05;\n                    fcn.0045c140();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x40);\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x4d5e58;\n                    *(*0x20 + -0x78) = 0x433e35;\n                    fcn.0045a220();\n                    *(*0x20 + -0x78) = 0x433e4e;\n                    fcn.0045e320();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x70) + 5000;\n                }\n                iVar8 = *(*0x20 + -0x30) + 1;\n                in_RAX = *(*0x20 + 8);\n                iVar4 = *(*0x20 + -0x38);\n                iVar6 = *(*0x20 + -0x50);\n                iVar5 = *(*0x20 + -0x20);\n                uVar3 = *(*0x20 + -0x5a);\n            } while( true );\n        }\n        goto code_r0x00433fcb;\n    }\n    goto code_r0x00433fdd;\ncode_r0x00433eb3:\n    *(*0x20 + -0x18) = unaff_R14;\n    *(*0x20 + -0x54) = *(in_RAX + 0x90);\n    *(*0x20 + -0x28) = *(in_RAX + 0x98);\n    *(*0x20 + -0x78) = 0x433ed3;\n    fcn.00434840();\n    *(*0x20 + -0x78) = 0x433ee5;\n    fcn.00435140();\n    *(*0x20 + -0x78) = 0x433eef;\n    fcn.004350c0();\n    *(*0x20 + -0x78) = 0x433f05;\n    fcn.00435140();\n    *(*0x20 + -0x78) = 0x433f0f;\n    fcn.00434f40();\n    *(*0x20 + -0x78) = 0x433f25;\n    fcn.00435140();\n    *(*0x20 + -0x78) = 0x433f30;\n    fcn.00434e40();\n    *(*0x20 + -0x78) = 0x433f35;\n    fcn.00434aa0();\n    *(*0x20 + -0x78) = 0x433f3a;\n    fcn.004348c0();\n    *(*0x20 + -0x58) = *(*(*0x20 + -0x18) + 0x90);\n    *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n    *(*0x20 + -0x78) = 0x433f5a;\n    fcn.00434840();\n    *(*0x20 + -0x78) = 0x433f6b;\n    fcn.00435140();\n    *(*0x20 + -0x78) = 0x433f75;\n    fcn.004350c0();\n    *(*0x20 + -0x78) = 0x433f86;\n    fcn.00435140();\n    *(*0x20 + -0x78) = 0x433f90;\n    fcn.00434f40();\n    *(*0x20 + -0x78) = 0x433fa5;\n    fcn.00435140();\n    *(*0x20 + -0x78) = 0x433fb0;\n    fcn.00434e40();\n    *(*0x20 + -0x78) = 0x433fb5;\n    fcn.00434aa0();\n    *(*0x20 + -0x78) = 0x433fba;\n    fcn.004348c0();\n    *(*0x20 + -0x78) = 0x433fcb;\n    fcn.004330a0();\ncode_r0x00433fcb:\n    *(*0x20 + -0x78) = 0x433fdc;\n    in_RAX = fcn.004330a0();\ncode_r0x00433fdd:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + -8) = 0x433fe7;\n    fcn.0045ea60();\n    in_RAX = *(puVar7 + 8);\n    *0x20 = puVar7;\n    goto code_r0x00433aa0;\n}\n",
        "token_count": 3014
    },
    "00434300": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00434300(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t *in_RAX;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = in_RAX[6];\n            if (*(uVar6 + 0x90) != in_RAX) {\n                return 0;\n            }\n            if ((((*(uVar6 + 0xa0) == 0) || (*(uVar6 + 0xd8) != 0)) || (*(uVar6 + 0xc0) != 0)) ||\n               ((*(uVar6 + 0xd0) != 0 || (*(*(uVar6 + 0xa0) + 4) != 1)))) {\n                return 0;\n            }\n            if ((arg1 < *in_RAX) || (arg1 - *in_RAX < *0x564560)) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x78) = 0x4343a7;\n            iVar4 = fcn.0044b1a0();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x10) = iVar4;\n            *(*0x20 + -0x18) = unaff_RBX;\n            unaff_RDI = *(*0x20 + 0x10);\n            *(*0x20 + -0x78) = 0x4343c9;\n            iVar3 = fcn.0044c100(0);\n            if (iVar3 == -2) {\n                return 0;\n            }\n            iVar4 = *(*0x20 + -0x10);\n            if (*(iVar4 + 0x27) < 2) {\n                iVar7 = *(*0x20 + -0x18);\n                uVar6 = 0;\n            }\n            else {\n                uVar1 = *(iVar4 + 0x27 + *(iVar4 + 0x1c) * 4 + 5);\n                iVar7 = *(*0x20 + -0x18);\n                unaff_RDI = (uVar1 == 0xffffffff) - 1;\n                uVar6 = uVar1 + *(iVar7 + 0x130) & unaff_RDI;\n            }\n            if ((uVar6 == 0) || ((*(iVar4 + 0x25) & 4) != 0)) {\n                return 0;\n            }\n            *(*0x20 + -0x44) = iVar3;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x20) = iVar4 + 0x27;\n            *(*0x20 + -0x78) = 0x43444f;\n            piVar5 = fcn.0044b920();\n            if (*(*(*0x20 + -0x10) + 0x27) < 4) {\n                unaff_RBX = *(*0x20 + -0x18);\n                uVar6 = 0;\n            }\n            else {\n                uVar1 = *(*(*0x20 + -0x20) + *(*(*0x20 + -0x10) + 0x1c) * 4 + 0xd);\n                unaff_RBX = *(*0x20 + -0x18);\n                uVar6 = uVar1 + *(unaff_RBX + 0x130) & (uVar1 == 0xffffffff) - 1;\n            }\n            if (uVar6 == 0) {\ncode_r0x0043450a:\n                if (iVar7 < 8) {\n                    arg2 = 0;\n                }\n                else {\n                    arg2 = CONCAT71(0x2e656d69746e75, *piVar5 == 0x2e656d69746e7572);\n                }\n                if (arg2 == '\\0') {\n                    if (iVar7 < 0x11) {\n                        cVar2 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x38) = iVar7;\n                        *(*0x20 + -0x28) = piVar5;\n                        *(*0x20 + -0x78) = 0x434554;\n                        cVar2 = fcn.004021c0(0x11, arg2);\n                        iVar7 = *(*0x20 + -0x38);\n                        piVar5 = *(*0x20 + -0x28);\n                    }\n                }\n                else {\n                    cVar2 = '\\x01';\n                }\n                if (cVar2 != '\\0') {\n                    return 0;\n                }\n                if (iVar7 < 8) {\n                    bVar9 = false;\n                }\n                else {\n                    bVar9 = *piVar5 == 0x2e7463656c666572;\n                }\n                if (bVar9) {\n                    return 0;\n                }\n                if (*(*0x20 + -0x44) == -5) {\n                    *(*0x20 + -0x78) = 0x43460a;\n                    fcn.0044b140();\n                    return 1;\n                }\n                if (1 < *(*0x20 + -0x44) + 4U) {\n                    return 1;\n                }\n                uVar6 = *(*0x20 + -0x40);\n                if (((uVar6 != 0) && (uVar6 <= *(*0x20 + 0x10))) && (*(*0x20 + 0x10) - uVar6 < 0x15)) {\n                    return 1;\n                }\n                unaff_RBX = 0xe;\n                *(*0x20 + -0x78) = 0x434673;\n                fcn.004330a0();\n            }\n            else {\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x28) = piVar5;\n                *(*0x20 + -0x30) = uVar6;\n                unaff_RDI = *(*0x20 + 0x10);\n                *(*0x20 + -0x78) = 0x4344c5;\n                iVar3 = fcn.0044bfc0(2);\n                if (iVar3 < 0) {\n                    iVar7 = *(*0x20 + -0x38);\n                    piVar5 = *(*0x20 + -0x28);\n                    goto code_r0x0043450a;\n                }\n                if (iVar3 < 0x100000) {\n                    uVar1 = *(*(*0x20 + -0x30) + 0xc + iVar3 * 0x14);\n                    iVar7 = *(*0x20 + -0x18);\n                    *(*0x20 + -0x78) = 0x4344f4;\n                    piVar5 = fcn.0044ba80(uVar1);\n                    goto code_r0x0043450a;\n                }\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x78) = 0x43467d;\n            in_RAX = fcn.0045ca40(0x100000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x434697;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1943
    },
    "00436f60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00436f60(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if ((unaff_EBX - 0x1001 < 4) || (unaff_EBX == 0x1009)) {\n                if (arg1 == (unaff_EBX & 0xffffefff)) {\n                    LOCK();\n                    if (unaff_EBX == *(in_RAX + 0x90)) {\n                        *(in_RAX + 0x90) = arg1;\n                        return unaff_EBX;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x436fcb;\n                fcn.00434840();\n                *(*0x20 + -0x48) = 0x436fdc;\n                fcn.00435140();\n                *(*0x20 + -0x48) = 0x436fe6;\n                fcn.004350c0();\n                *(*0x20 + -0x48) = 0x436ff7;\n                fcn.00435140();\n                *(*0x20 + -0x48) = 0x437005;\n                fcn.00434fa0();\n                *(*0x20 + -0x48) = 0x437016;\n                fcn.00435140();\n                *(*0x20 + -0x48) = 0x437025;\n                fcn.00434fa0();\n                *(*0x20 + -0x48) = 0x43702a;\n                fcn.00434aa0();\n                *(*0x20 + -0x48) = 0x43702f;\n                fcn.004348c0();\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x2c) = *(*(*0x20 + 8) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x48) = 0x437055;\n                fcn.00434840();\n                *(*0x20 + -0x48) = 0x437066;\n                fcn.00435140();\n                *(*0x20 + -0x48) = 0x437070;\n                fcn.004350c0();\n                *(*0x20 + -0x48) = 0x437085;\n                fcn.00435140();\n                *(*0x20 + -0x48) = 0x43708f;\n                fcn.00434f40();\n                *(*0x20 + -0x48) = 0x4370a5;\n                fcn.00435140();\n                *(*0x20 + -0x48) = 0x4370b0;\n                fcn.00434e40();\n                *(*0x20 + -0x48) = 0x4370b5;\n                fcn.00434aa0();\n                *(*0x20 + -0x48) = 0x4370ba;\n                fcn.004348c0();\n                *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n                *(*0x20 + -0x48) = 0x4370da;\n                fcn.00434840();\n                *(*0x20 + -0x48) = 0x4370eb;\n                fcn.00435140();\n                *(*0x20 + -0x48) = 0x4370f5;\n                fcn.004350c0();\n                *(*0x20 + -0x48) = 0x437106;\n                fcn.00435140();\n                *(*0x20 + -0x48) = 0x437110;\n                fcn.00434f40();\n                *(*0x20 + -0x48) = 0x437125;\n                fcn.00435140();\n                *(*0x20 + -0x48) = 0x437130;\n                fcn.00434e40();\n                *(*0x20 + -0x48) = 0x437135;\n                fcn.00434aa0();\n                *(*0x20 + -0x48) = 0x43713a;\n                fcn.004348c0();\n                *(*0x20 + -0x48) = 0x43714b;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x48) = 0x437150;\n            fcn.00434840();\n            *(*0x20 + -0x48) = 0x437165;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x43716f;\n            fcn.004350c0();\n            *(*0x20 + -0x48) = 0x437185;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x437190;\n            fcn.00434fa0();\n            *(*0x20 + -0x48) = 0x4371a5;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x4371b0;\n            fcn.00434fa0();\n            *(*0x20 + -0x48) = 0x4371b5;\n            fcn.00434aa0();\n            *(*0x20 + -0x48) = 0x4371ba;\n            fcn.004348c0();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x24) = *(*(*0x20 + 8) + 0x90);\n            *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n            *(*0x20 + -0x48) = 0x4371e5;\n            fcn.00434840();\n            *(*0x20 + -0x48) = 0x4371f6;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x437205;\n            fcn.004350c0();\n            *(*0x20 + -0x48) = 0x437216;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x437225;\n            fcn.00434f40();\n            *(*0x20 + -0x48) = 0x437236;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x437245;\n            fcn.00434e40();\n            *(*0x20 + -0x48) = 0x43724a;\n            fcn.00434aa0();\n            *(*0x20 + -0x48) = 0x43724f;\n            fcn.004348c0();\n            arg1._0_4_ = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x28) = arg1;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x48) = 0x43726f;\n            fcn.00434840();\n            *(*0x20 + -0x48) = 0x437285;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x43728f;\n            fcn.004350c0();\n            *(*0x20 + -0x48) = 0x4372a5;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x4372af;\n            fcn.00434f40();\n            *(*0x20 + -0x48) = 0x4372c5;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x4372d0;\n            fcn.00434e40();\n            *(*0x20 + -0x48) = 0x4372d5;\n            fcn.00434aa0();\n            *(*0x20 + -0x48) = 0x4372da;\n            fcn.004348c0();\n            unaff_EBX = 0x37;\n            *(*0x20 + -0x48) = 0x4372eb;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x4372fe;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 2257
    },
    "00437320": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00437320(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar2;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            if ((unaff_EBX - 1 < 4) && (arg1 == (unaff_EBX | 0x1000))) {\n                LOCK();\n                bVar2 = unaff_EBX == *(in_RAX + 0x90);\n                if (bVar2) {\n                    *(in_RAX + 0x90) = arg1;\n                }\n                return arg1 & 0xffffff00 | bVar2;\n            }\n            *(*0x20 + -0x20) = 0x437373;\n            fcn.00434840();\n            *(*0x20 + -0x20) = 0x437385;\n            fcn.00435140();\n            *(*0x20 + -0x20) = 0x437390;\n            fcn.00434fa0();\n            *(*0x20 + -0x20) = 0x4373a5;\n            fcn.00435140();\n            *(*0x20 + -0x20) = 0x4373b0;\n            fcn.00434fa0();\n            *(*0x20 + -0x20) = 0x4373b5;\n            fcn.00434aa0();\n            *(*0x20 + -0x20) = 0x4373ba;\n            fcn.004348c0();\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x4373cb;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x4373de;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 660
    },
    "00437c80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437c80(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint32_t uVar8;\n    uint64_t unaff_RSI;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xd8) < 1) {\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x60) = 0x437cbc;\n                fcn.0040a360();\n                uVar1 = *0x580780;\n                *0x580784 = *0x5d3b70;\n                *0x580780 = 1;\n                *(*0x20 + -0x60) = 0x437cdb;\n                fcn.00440440(uVar1);\n                *(*(*(*(*0x20 + -0x18) + 0x30) + 0xa0) + 4) = 3;\n                *0x580784 = *0x580784 + -1;\n                *(*0x20 + -0x10) = *0x57fc90;\n                *(*0x20 + -0x30) = *0x57fc98;\n                uVar9 = *0x57fc90;\n                uVar5 = *0x57fc98;\n                for (iVar3 = 0; iVar3 < uVar5; iVar3 = iVar3 + 1) {\n                    iVar4 = *(uVar9 + iVar3 * 8);\n                    if (*(iVar4 + 4) == 2) {\n                        LOCK();\n                        bVar10 = *(iVar4 + 4) == 2;\n                        if (bVar10) {\n                            *(iVar4 + 4) = 3;\n                        }\n                        uVar8 = bVar10;\n                    }\n                    else {\n                        uVar8 = 0;\n                    }\n                    unaff_RSI = uVar8;\n                    if (uVar8 != '\\0') {\n                        if (*0x585d30 != '\\0') {\n                            *(*0x20 + -0x38) = iVar3;\n                            *(*0x20 + -0x28) = iVar4;\n                            *(*0x20 + -0x60) = 0x437d77;\n                            fcn.004507c0(uVar9, uVar5, 3);\n                            *(*0x20 + -0x60) = 0x437d85;\n                            fcn.00450040();\n                            uVar9 = *(*0x20 + -0x10);\n                            uVar5 = *(*0x20 + -0x30);\n                            iVar4 = *(*0x20 + -0x28);\n                            iVar3 = *(*0x20 + -0x38);\n                        }\n                        *(iVar4 + 0x14) = *(iVar4 + 0x14) + 1;\n                        *0x580784 = *0x580784 + -1;\n                    }\n                }\n                while( true ) {\n                    *(*0x20 + -0x60) = 0x437dbf;\n                    iVar3 = fcn.00441400();\n                    if (iVar3 == 0) break;\n                    *(iVar3 + 4) = 3;\n                    *0x580784 = *0x580784 + -1;\n                }\n                *(*0x20 + -0x44) = *0x580784;\n                *(*0x20 + -0x60) = 0x437ddd;\n                fcn.0040a580();\n                if (0 < *(*0x20 + -0x44)) {\n                    while( true ) {\n                        *(*0x20 + -0x60) = 0x437dfd;\n                        cVar2 = fcn.0040aac0();\n                        if (cVar2 != '\\0') break;\n                        *(*0x20 + -0x60) = 0x437dec;\n                        fcn.00440440();\n                    }\n                    *0x580788 = 0;\n                }\n                if (*0x580784 == 0) {\n                    iVar4 = 0;\n                    iVar3 = 0;\n                    uVar9 = 0;\n                    uVar5 = *0x57fc90;\n                    uVar6 = *0x57fc98;\n                    do {\n                        unaff_RSI = uVar9;\n                        if (uVar6 <= iVar4) {\ncode_r0x00437e3e:\n                            uVar6 = *0x5d3b5c;\n                            uVar5 = uVar9;\n                            if (*0x5d3b5c != 0) {\n                                *(*0x20 + -0x40) = iVar3;\n                                *(*0x20 + -0x20) = uVar9;\n                                *(*0x20 + -0x60) = 0x437e65;\n                                fcn.0040a360();\n                                *(*0x20 + -0x60) = 0x437e73;\n                                fcn.0040a360();\n                                iVar3 = *(*0x20 + -0x40);\n                                uVar5 = *(*0x20 + -0x20);\n                            }\n                            if (iVar3 == 0) {\n                                return;\n                            }\n                            *(*0x20 + -0x60) = 0x437e9a;\n                            iVar4 = fcn.004330a0();\n                            uVar9 = unaff_RSI;\n                        }\n                        if (*(*(uVar5 + iVar4 * 8) + 4) != 3) {\n                            iVar3 = 0x2e;\n                            uVar9 = 0x4d2c98;\n                        }\n                        iVar4 = iVar4 + 1;\n                    } while( true );\n                }\n                iVar3 = 0x29;\n                uVar9 = 0x4d21a3;\n                goto code_r0x00437e3e;\n            }\n            *(*0x20 + -0x60) = 0x437eda;\n            fcn.004330a0();\n        }\n        *(puVar7 + -8) = 0x437ee5;\n        fcn.0045a360();\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1515
    },
    "0043adc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0043adc0(void)\n\n{\n    uint32_t uVar1;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uchar uVar10;\n    uint64_t arg1;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(*0x20 + -0x10) = uVar6;\n            iVar5 = 0;\n            iVar8 = 0;\n            uVar10 = 0;\n            while( true ) {\n                if (3 < iVar5) {\n                    return 0;\n                }\n                uVar11 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar2 = ZEXT816(uVar11) * ZEXT816(uVar11 ^ 0xe7037ed1a0b428db);\n                *(*(unaff_R14 + 0x30) + 0xf0) = uVar11;\n                uVar11 = SUB168(auVar2, 0) ^ SUB168(auVar2 >> 0x40, 0);\n                if (*0x57fdc0 == 0) goto code_r0x0043b112;\n                if (*0x57fdd0 == 0) goto code_r0x0043b10d;\n                uVar12 = (uVar11 & 0xffffffff) % (*0x57fdd0 & 0xffffffff);\n                arg1 = *0x57fdd0;\n                if (*0x57fdd0 <= uVar12) break;\n                *(*0x20 + -0x50) = iVar5;\n                uVar1 = *(*0x57fdc8 + uVar12 * 4);\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x24) = *0x57fdc0;\n                *(*0x20 + -0x20) = (uVar11 & 0xffffffff) % *0x57fdc0;\n                *(*0x20 + -0x1c) = uVar1;\n                uVar11 = uVar1 & 0xffffff00 | iVar5 == 3;\n                *(*0x20 + -0x5b) = iVar5 == 3;\n                while (*(*0x20 + -0x24) != *(*0x20 + -0x28)) {\n                    if (*0x580780 != 0) {\n                        return 0;\n                    }\n                    uVar1 = *(*0x20 + -0x20);\n                    arg1 = *0x57fc98;\n                    if (*0x57fc98 <= uVar1) {\ncode_r0x0043b0fd:\n                        *(*0x20 + -0x80) = 0x43b105;\n                        fcn.0045ca40(arg1);\n                        goto code_r0x0043b105;\n                    }\n                    arg1 = *(*0x57fc90 + uVar1 * 8);\n                    uVar12 = *0x57fc90;\n                    if (uVar6 != arg1) {\n                        if (iVar5 != 3) {\n                            bVar13 = false;\ncode_r0x0043af60:\n                            if (bVar13) {\n                                *(*0x20 + -0x18) = arg1;\n                                *(*0x20 + -0x30) = iVar8;\n                                *(*0x20 + -0x5a) = uVar10;\n                                *(*0x20 + -0x80) = 0x43af85;\n                                iVar3 = fcn.0043bca0();\n                                if (in_RAX == 0) {\n                                    iVar7 = *(*0x20 + -0x30);\ncode_r0x0043afa0:\n                                    iVar8 = iVar7;\n                                }\n                                else {\n                                    iVar7 = *(*0x20 + -0x30);\n                                    iVar8 = in_RAX;\n                                    if ((iVar7 != 0) && (iVar7 <= in_RAX)) goto code_r0x0043afa0;\n                                }\n                                if (iVar5 == '\\0') {\n                                    uVar10 = *(*0x20 + -0x5a);\n                                }\n                                else {\n                                    *(*0x20 + -0x58) = iVar3;\n                                    *(*0x20 + -0x38) = iVar8;\n                                    *(*0x20 + -0x80) = 0x43afc5;\n                                    iVar5 = fcn.00441960();\n                                    if (iVar5 != 0) {\n                                        return iVar5;\n                                    }\n                                    iVar3 = *(*0x20 + -0x58);\n                                    iVar8 = *(*0x20 + -0x38);\n                                    uVar10 = 1;\n                                }\n                                uVar11 = *(*0x20 + -0x5b);\n                                arg1 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x10);\n                                iVar5 = *(*0x20 + -0x50);\n                                in_RAX = iVar3;\n                            }\n                            uVar4 = *(*0x20 + -0x20) >> 5;\n                            uVar12 = *0x57fcf8;\n                            if (uVar4 < *0x57fcf8) {\n                                uVar1 = *(*0x57fcf0 + uVar4 * 4);\n                                uVar12 = uVar1;\n                                if ((uVar1 >> (*(*0x20 + -0x20) & 0x1f) & 1) == 0) {\n                                    *(*0x20 + -0x40) = iVar8;\n                                    *(*0x20 + -0x59) = uVar10;\n                                    *(*0x20 + -0x48) = in_RAX;\n                                    *(*0x20 + -0x80) = 0x43b052;\n                                    iVar5 = fcn.00441cc0(uVar11);\n                                    if (iVar5 != 0) {\n                                        return iVar5;\n                                    }\n                                    iVar5 = *(*0x20 + -0x50);\n                                    uVar11 = *(*0x20 + -0x5b);\n                                    iVar8 = *(*0x20 + -0x40);\n                                    uVar10 = *(*0x20 + -0x59);\n                                    in_RAX = *(*0x20 + -0x48);\n                                    uVar6 = *(*0x20 + -0x10);\n                                }\n                                goto code_r0x0043b07f;\n                            }\n                            goto code_r0x0043b0ed;\n                        }\n                        uVar12 = *0x57fd38;\n                        if (uVar1 >> 5 < *0x57fd38) {\n                            bVar13 = (*(*0x57fd30 + (uVar1 >> 5) * 4) >> (uVar1 & 0x1f) & 1) != 0;\n                            goto code_r0x0043af60;\n                        }\ncode_r0x0043b0f5:\n                        *(*0x20 + -0x80) = 0x43b0fd;\n                        fcn.0045ca40(uVar12);\n                        goto code_r0x0043b0fd;\n                    }\ncode_r0x0043b07f:\n                    *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                    uVar1 = *(*0x20 + -0x24);\n                    arg1 = uVar1;\n                    if (uVar1 == 0) {\n                        *(*0x20 + -0x80) = 0x43b0ed;\n                        fcn.00431720();\ncode_r0x0043b0ed:\n                        *(*0x20 + -0x80) = 0x43b0f5;\n                        fcn.0045ca40(uVar12);\n                        goto code_r0x0043b0f5;\n                    }\n                    *(*0x20 + -0x20) = (*(*0x20 + -0x20) + *(*0x20 + -0x1c)) % uVar1;\n                }\n                iVar5 = iVar5 + 1;\n            }\ncode_r0x0043b105:\n            *(*0x20 + -0x80) = 0x43b10d;\n            fcn.0045ca40(arg1);\ncode_r0x0043b10d:\n            *(*0x20 + -0x80) = 0x43b112;\n            fcn.00431720();\ncode_r0x0043b112:\n            *(*0x20 + -0x80) = 0x43b117;\n            in_RAX = fcn.00431720();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x43b125;\n        fcn.0045a360();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2172
    },
    "004448a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00444973)\n// WARNING: Removing unreachable block (ram,0x00444994)\n\nulong fcn.004448a0(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0x5f < in_EAX) {\n                return 0;\n            }\n            LOCK();\n            uVar4 = in_EAX >> 5;\n            iVar3 = *0x5d3fbc + 1;\n            if (uVar4 < 3) {\n                if ((*(uVar4 * 4 + 0x5d3f94) >> (in_EAX & 0x1f) & 1) == 0) {\n                    LOCK();\n                    return 0;\n                }\n                do {\n                    uVar2 = *(uVar4 * 4 + 0x5d3f88);\n                    if ((uVar2 >> (in_EAX & 0x1f) & 1) != 0) {\n                        LOCK();\n                        return 1;\n                    }\n                    puVar1 = uVar4 * 4 + 0x5d3f88;\n                    LOCK();\n                } while (uVar2 != *puVar1);\n                *0x5d3fbc = *0x5d3fbc + 1;\n                *puVar1 = uVar2 | 1 << (in_EAX & 0x1f);\n                if (*0x5d3fb8 == 0) {\n                    LOCK();\n                    *0x5d3fb8 = 2;\ncode_r0x004449b8:\n                    LOCK();\n                    *0x5d3fbc = *0x5d3fbc + -1;\n                    return 1;\n                }\n                if (*0x5d3fb8 == 1) {\n                    LOCK();\n                    *0x5d3fb8 = 0;\n                    *(*0x20 + -0x20) = 0x4449b1;\n                    fcn.0040a660();\n                    goto code_r0x004449b8;\n                }\n                if (*0x5d3fb8 == 2) goto code_r0x004449b8;\n                *(*0x20 + -0x20) = 0x4449e8;\n                fcn.004330a0();\n                iVar3 = *0x5d3fbc;\n            }\n            *0x5d3fbc = iVar3;\n            *(*0x20 + -0x20) = 0x4449f2;\n            in_EAX = fcn.0045ca40(3);\n        }\n        *(puVar5 + 8) = in_EAX;\n        *(puVar5 + -8) = 0x4449fc;\n        fcn.0045a360();\n        in_EAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 791
    },
    "004498e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.004498e0(int64_t *param_1, ulong param_2, ulong param_3, int64_t *param_4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t **arg2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    uint64_t arg1;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t *piVar11;\n    int64_t *unaff_RBX;\n    uchar *puVar12;\n    ulong unaff_RBP;\n    int64_t *piVar13;\n    int64_t **arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x88 && *0x20 + -0x88 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x108;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 0x58) = in_RAX;\n            *(*0x20 + -0x118) = *0x20 + -8;\n            *(*0x20 + -0x110) = 0x44992f;\n            arg2 = fcn.0045ccf0();\n            unaff_RBP = *(*0x20 + -0x118);\n            while( true ) {\n                piVar7 = arg2[4];\n                piVar10 = arg2[3];\n                arg3 = arg2 + 3;\n                *(*0x20 + -0x60) = arg3;\n                if (1 < piVar7) break;\n                param_4 = arg2[1];\n                piVar11 = arg2[2];\n                if (param_4 == NULL) {\n                    if (piVar7 == NULL) {\n                        return 0;\n                    }\n                    if (piVar7 == 0x1) {\n                        *(*0x20 + -0x118) = unaff_RBP;\n                        *(*0x20 + -0x110) = 0x449d6f;\n                        uVar8 = fcn.0045d05a();\n                        *(uVar8 + 0x20) = 0;\n                        *(uVar8 + 0x28) = 2;\n                        if (*0x5d3dd0 == 0) {\n                            *(uVar8 + 0x18) = uVar8 + 0x30;\n                        }\n                        else {\n                            *(*0x20 + -0x110) = 0x449da5;\n                            uVar8 = fcn.0045c6c0(param_1, uVar8 + 0x30, arg3, param_4);\n                        }\n                        goto code_r0x00449efe;\n                    }\n                    break;\n                }\n                param_1 = **arg2;\n                arg2[1] = param_4 + -1;\n                arg2[2] = piVar11 + -1;\n                piVar10 = (-(piVar11 + -1) >> 0x3f & 8) + *arg2;\n                if (*0x5d3dd0 == 0) {\n                    *arg2 = piVar10;\n                }\n                else {\n                    *(*0x20 + -0x110) = 0x4499a5;\n                    fcn.0045c6c0(param_1, piVar10, arg3, param_4);\n                }\n                *(*0x20 + -200) = param_1;\n                *(*0x20 + -0x110) = 0x4499b2;\n                iVar3 = fcn.0044b1a0();\n                if (iVar3 == 0) {\n                    if (*0x57ef98 == 0) {\n                        arg2 = *(*0x20 + 0x58);\n                    }\n                    else {\n                        *(*0x20 + -0x110) = 0x4499dc;\n                        uVar4 = fcn.00449fc0();\n                        iVar3 = *(*0x20 + 0x58);\n                        piVar7 = *(iVar3 + 0x20);\n                        piVar10 = piVar7 + unaff_RBX;\n                        *(*0x20 + -0x98) = piVar10;\n                        iVar5 = *(iVar3 + 0x18);\n                        piVar11 = piVar7;\n                        param_1 = unaff_RBX;\n                        piVar13 = *(iVar3 + 0x28);\n                        if (*(iVar3 + 0x28) < piVar10) {\n                            *(*0x20 + -0xa0) = unaff_RBX;\n                            *(*0x20 + -0x68) = uVar4;\n                            *(*0x20 + -0xa8) = piVar7;\n                            *(*0x20 + -0x110) = 0x449a25;\n                            iVar5 = fcn.00444c60(piVar7);\n                            piVar11 = *(*0x20 + -0xa8);\n                            param_1 = *(*0x20 + -0xa0);\n                            piVar10 = *(*0x20 + -0x98);\n                            piVar13 = piVar7;\n                        }\n                        unaff_RBX = param_1;\n                        if (piVar10 < piVar11) goto code_r0x00449f8f;\n                        *(*0x20 + -0xa0) = piVar13;\n                        *(*0x20 + -0x70) = iVar5;\n                        param_4 = piVar11 * 0x50;\n                        unaff_RBX = (piVar11 - piVar13 >> 0x3f & param_4) + iVar5;\n                        *(*0x20 + -0x110) = 0x449a93;\n                        fcn.004113e0(param_1);\n                        arg2 = *(*0x20 + 0x58);\n                        arg2[4] = *(*0x20 + -0x98);\n                        arg2[5] = *(*0x20 + -0xa0);\n                        if (*0x5d3dd0 == 0) {\n                            arg2[3] = *(*0x20 + -0x70);\n                        }\n                        else {\n                            *(*0x20 + -0x110) = 0x449adf;\n                            arg2 = fcn.0045c6c0(param_1, *(*0x20 + -0x70), iVar5, param_4);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x78) = unaff_RBX;\n                    *(*0x20 + -0x80) = iVar3;\n                    *(*0x20 + -0x110) = 0x449afc;\n                    uVar4 = fcn.0044b0a0();\n                    *(*0x20 + -0xb8) = uVar4;\n                    uVar4 = *(*0x20 + -0x78);\n                    *(*0x20 + -0x110) = 0x449b16;\n                    uVar6 = fcn.0044b920();\n                    uVar9 = *(*0x20 + -200);\n                    uVar8 = *(*0x20 + -0xb8);\n                    if (uVar8 < uVar9) {\n                        uVar9 = uVar9 - 1;\n                    }\n                    iVar3 = *(*0x20 + -0x80);\n                    if (*(iVar3 + 0x27) < 4) {\n                        unaff_RBX = *(*0x20 + -0x78);\n                        param_4 = NULL;\n                    }\n                    else {\n                        uVar1 = *(iVar3 + *(iVar3 + 0x1c) * 4 + 0x34);\n                        unaff_RBX = *(*0x20 + -0x78);\n                        param_4 = uVar1 + unaff_RBX[0x26] & (uVar1 == 0xffffffff) - 1;\n                    }\n                    iVar5 = iVar3;\n                    if (param_4 != NULL) {\n                        *(*0x20 + -0x90) = param_4;\n                        *(*0x20 + -0xc0) = uVar4;\n                        *(*0x20 + -0x88) = uVar6;\n                        *(*0x20 + -200) = uVar9;\n                        piVar10 = NULL;\n                        *(*0x20 + -0x110) = 0x449bb9;\n                        iVar2 = fcn.0044c060(2);\n                        if (iVar2 < 0) {\n                            iVar3 = *(*0x20 + -0x80);\n                            uVar4 = *(*0x20 + -0xc0);\n                        }\n                        else {\n                            if (0xfffff < iVar2) goto code_r0x00449f85;\n                            uVar1 = *(*(*0x20 + -0x90) + 0xc + iVar2 * 0x14);\n                            uVar4 = *(*0x20 + -0x78);\n                            *(*0x20 + -0x110) = 0x449c0e;\n                            fcn.0044ba80(uVar1);\n                            iVar3 = 0;\n                        }\n                        uVar8 = *(*0x20 + -0xb8);\n                        uVar9 = *(*0x20 + -200);\n                        unaff_RBX = *(*0x20 + -0x78);\n                        iVar5 = *(*0x20 + -0x80);\n                    }\n                    *(*0x20 + -0x118) = unaff_RBP;\n                    *(*0x20 + -0x110) = 0x449c4f;\n                    uVar6 = fcn.0045ccf0();\n                    unaff_RBP = *(*0x20 + -0x118);\n                    *(*0x20 + -0x58) = uVar9;\n                    *(*0x20 + -0x50) = iVar3;\n                    *(*0x20 + -0x48) = uVar6;\n                    *(*0x20 + -0x40) = uVar4;\n                    *(*0x20 + -0x20) = uVar8;\n                    *(*0x20 + -0x18) = iVar5;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    arg2 = *(*0x20 + 0x58);\n                    param_1 = arg2[4];\n                    piVar10 = arg2[3];\n                    piVar7 = piVar10;\n                    if (arg2[5] < param_1 + 1U) {\n                        *(*0x20 + -0x110) = 0x449cb4;\n                        piVar7 = fcn.00444c60(param_1);\n                        arg2 = *(*0x20 + 0x58);\n                        arg2[5] = param_1;\n                        if (*0x5d3dd0 == 0) {\n                            arg2[3] = piVar7;\n                            param_1 = piVar10;\n                        }\n                        else {\n                            *(*0x20 + -0x110) = 0x449cdc;\n                            piVar7 = fcn.0045c5a0(param_1, arg2, uVar9, param_4);\n                            param_1 = piVar10;\n                        }\n                    }\n                    arg2[4] = param_1 + 1;\n                    unaff_RBX = piVar7 + param_1 * 10;\n                    if (*0x5d3dd0 == 0) {\n                        *(*0x20 + -0x118) = unaff_RBP;\n                        *(*0x20 + -0x110) = 0x449d16;\n                        fcn.0045d05a();\n                        unaff_RBP = *(*0x20 + -0x118);\n                        unaff_RBX = piVar7;\n                    }\n                    else {\n                        param_1 = *0x20 + -0x58;\n                        *(*0x20 + -0x110) = 0x449d33;\n                        fcn.00411220(param_1);\n                        arg2 = *(*0x20 + 0x58);\n                    }\n                }\n            }\n            if (piVar7 == 0x2) {\n                *(*0x20 + -0x118) = unaff_RBP;\n                *(*0x20 + -0x110) = 0x449def;\n                iVar3 = fcn.0045d05a();\n                unaff_RBP = *(*0x20 + -0x118);\n                uVar9 = *(iVar3 + 0x20);\n                if (1 < uVar9) {\n                    arg1 = *(iVar3 + 0x18) + 0x50;\n                    if (*0x5d3dd0 == 0) {\n                        *(*0x20 + -0x118) = unaff_RBP;\n                        *(*0x20 + -0x110) = 0x449e2f;\n                        uVar8 = fcn.0045d05a();\n                        arg1 = uVar9;\n                    }\n                    else {\n                        *(*0x20 + -0x110) = 0x449e47;\n                        fcn.00411220(arg1);\n                        uVar8 = *(*0x20 + 0x58);\n                        arg3 = *(*0x20 + -0x60);\n                    }\n                    *(uVar8 + 0x20) = 1;\n                    *(uVar8 + 0x28) = 2;\n                    if (*0x5d3dd0 == 0) {\n                        *(uVar8 + 0x18) = uVar8 + 0x30;\n                    }\n                    else {\n                        *(*0x20 + -0x110) = 0x449e85;\n                        uVar8 = fcn.0045c6c0(arg1, uVar8 + 0x30, arg3, param_4);\n                    }\ncode_r0x00449efe:\n                    iVar3 = *(uVar8 + 0x20);\n                    if (*(*0x20 + 0x48) != 0) {\n                        *(*0x20 + -0xb0) = iVar3;\n                        uVar4 = *(*0x20 + 0x50);\n                        uVar6 = *(*0x20 + 8);\n                        *(*0x20 + -0x110) = 0x449f36;\n                        uVar8 = fcn.0044bc40(uVar6);\n                        *(*0x20 + 0x28) = uVar8;\n                        *(*0x20 + 0x30) = uVar4;\n                        *(*0x20 + 0x38) = uVar6;\n                        iVar3 = *(*0x20 + -0xb0);\n                    }\n                    return uVar8 & 0xffffffffffffff00 | iVar3 != 0;\n                }\n            }\n            else {\n                *(*0x20 + -0x118) = unaff_RBP;\n                *(*0x20 + -0x110) = 0x449eaf;\n                uVar8 = fcn.0045d05a();\n                unaff_RBP = *(*0x20 + -0x118);\n                uVar9 = *(uVar8 + 0x20);\n                param_4 = *(uVar8 + 0x28);\n                if (uVar9 != 0) {\n                    *(uVar8 + 0x20) = uVar9 - 1;\n                    *(uVar8 + 0x28) = param_4 + -1;\n                    iVar3 = *(uVar8 + 0x18) + (-(param_4 + -1) >> 0x3f & 0x50);\n                    if (*0x5d3dd0 == 0) {\n                        *(uVar8 + 0x18) = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x110) = 0x449efe;\n                        uVar8 = fcn.0045c6c0(uVar9, iVar3, arg3, param_4);\n                    }\n                    goto code_r0x00449efe;\n                }\n                *(*0x20 + -0x110) = 0x449f76;\n                fcn.0045cb00(0);\n            }\n            *(*0x20 + -0x110) = 0x449f85;\n            fcn.0045ca40(uVar9);\ncode_r0x00449f85:\n            *(*0x20 + -0x110) = 0x449f8f;\n            fcn.0045ca40(0x100000);\ncode_r0x00449f8f:\n            param_1 = piVar10;\n            *(*0x20 + -0x110) = 0x449f9a;\n            in_RAX = fcn.0045cb00(param_1);\n        }\n        *(puVar12 + 0x58) = in_RAX;\n        *(puVar12 + -8) = 0x449fa5;\n        fcn.0045a360();\n        in_RAX = *(puVar12 + 0x58);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 3827
    },
    "0044ade0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * fcn.0044ade0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    uint *puVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x38) = in_RAX;\n            *(*0x20 + -0x90) = 0x44ae10;\n            puVar3 = fcn.0044b1a0();\n            if (puVar3 == NULL) {\n                return NULL;\n            }\n            if (*(puVar3 + 0x27) < 4) {\n                uVar7 = 0;\n            }\n            else {\n                uVar7 = puVar3[puVar3[7] + 0xd] + *(unaff_RBX + 0x130) & (puVar3[puVar3[7] + 0xd] == 0xffffffff) - 1;\n            }\n            if (uVar7 == 0) {\n                return puVar3;\n            }\n            *(*0x20 + -0x30) = uVar7;\n            *(*0x20 + -0x10) = puVar3;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x90) = 0x44ae7c;\n            iVar2 = fcn.0044c060(2);\n            if (iVar2 < 0) {\n                return *(*0x20 + -0x10);\n            }\n            if (iVar2 < 0x100000) {\n                uVar1 = *(*(*0x20 + -0x30) + 0xc + iVar2 * 0x14);\n                uVar6 = *(*0x20 + -0x18);\n                *(*0x20 + -0x90) = 0x44aeb3;\n                uVar4 = fcn.0044ba80(uVar1);\n                *(*0x20 + -0x28) = uVar4;\n                *(*0x20 + -0x48) = uVar6;\n                uVar6 = *(*0x20 + -0x38);\n                uVar4 = *(*0x20 + -0x18);\n                *(*0x20 + -0x90) = 0x44aed7;\n                uVar5 = fcn.0044bc40(uVar6);\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x40) = uVar4;\n                *(*0x20 + -0x54) = uVar6;\n                *(*0x20 + -0x90) = 0x44aef8;\n                uVar6 = fcn.0044acc0();\n                *(*0x20 + -0x50) = uVar6;\n                *(*0x20 + -0x90) = 0x44af09;\n                puVar3 = fcn.0040c440();\n                *puVar3 = 0xffffffff;\n                *(puVar3 + 2) = *(*0x20 + -0x50);\n                *(puVar3 + 6) = *(*0x20 + -0x48);\n                if (*0x5d3dd0 == 0) {\n                    *(puVar3 + 4) = *(*0x20 + -0x28);\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x44af45;\n                    puVar3 = fcn.0045c6a0(*(*0x20 + -0x28));\n                }\n                *(puVar3 + 10) = *(*0x20 + -0x40);\n                if (*0x5d3dd0 == 0) {\n                    *(puVar3 + 8) = *(*0x20 + -0x20);\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x44af70;\n                    puVar3 = fcn.0045c6a0();\n                }\n                *(puVar3 + 0xc) = *(*0x20 + -0x54);\n                return puVar3;\n            }\n            *(*0x20 + -0x90) = 0x44afbd;\n            in_RAX = fcn.0045ca40(0x100000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x44afc8;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1171
    },
    "0044d600": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.0044d600(int64_t *arg1, ulong noname_1, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    char cVar8;\n    int64_t *in_RAX;\n    int32_t iVar9;\n    ulong arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x30) = arg3;\n            if (0 < unaff_RBX) {\n                if (-1 < arg1) break;\n                *(*0x20 + -0x48) = 0x44dab6;\n                fcn.004330a0();\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x48) = 0x44dac7;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + 0x30) = arg3;\n        *(puVar10 + 0x38) = arg4;\n        *(puVar10 + -8) = 0x44daf0;\n        fcn.0045a360();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        arg3 = *(puVar10 + 0x30);\n        arg4 = *(puVar10 + 0x38);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x38) = arg4;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + -0x10) = unaff_RSI;\ncode_r0x0044d65c:\n    while( true ) {\n        while (uVar3 = *(in_RAX + 8),  3 < uVar3) {\n            if (uVar3 < 6) {\n                if (uVar3 != 4) goto code_r0x0044d6e9;\n                goto code_r0x0044d7ca;\n            }\n            if (uVar3 == 6) {\n                *(*0x20 + -0x40) = 0x4d5e58;\n                *(*0x20 + -0x48) = 0x44d865;\n                fcn.0045a220();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + 0x30);\n                arg4 = *(*0x20 + 0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n            else {\n                if (uVar3 < 9) goto code_r0x0044d75a;\n                if (uVar3 == 9) goto code_r0x0044d7ca;\n                *(*0x20 + -0x48) = 0x44d825;\n                fcn.0044ef40();\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + 0x30);\n                arg4 = *(*0x20 + 0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n        }\n        if (1 < uVar3) break;\n        if (uVar3 == 0) {\ncode_r0x0044d6e9:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar11 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (uVar3 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                cVar8 = '\\x01';\n                arg2 = 0;\n                goto code_r0x0044d8d2;\n            }\n            iVar9 = *(iVar11 + 0xd8);\n            *(iVar11 + 0xd8) = iVar9 + -1;\n            if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        else {\ncode_r0x0044d75a:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar11 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (uVar3 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                cVar8 = '\\0';\n                arg2 = 1;\n                goto code_r0x0044d8d2;\n            }\n            iVar9 = *(iVar11 + 0xd8);\n            *(iVar11 + 0xd8) = iVar9 + -1;\n            if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n    }\n    if (uVar3 == 2) {\ncode_r0x0044d7ca:\n        *(*0x20 + -0x40) = 0x4d5e58;\n        *(*0x20 + -0x48) = 0x44d7da;\n        fcn.0045a220();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x0044d65c;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar11 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (uVar3 != *(in_RAX + 8)) {\n        iVar9 = *(iVar11 + 0xd8);\n        *(iVar11 + 0xd8) = iVar9 + -1;\n        if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x0044d65c;\n    }\n    *(in_RAX + 8) = 6;\n    LOCK();\n    *(*in_RAX + 0x229c) = *(*in_RAX + 0x229c) + -1;\n    cVar8 = '\\0';\n    arg2 = 0;\ncode_r0x0044d8d2:\n    in_RAX[2] = arg1;\n    if (*0x5d3dd0 == 0) {\n        in_RAX[3] = unaff_RDI;\n    }\n    else {\n        arg1 = in_RAX + 3;\n        *(*0x20 + -0x48) = 0x44d8fa;\n        cVar8 = fcn.0045c6c0(arg1, unaff_RDI, arg3, arg4);\n    }\n    in_RAX[4] = unaff_RSI;\n    if (*0x5d3dd0 == 0) {\n        in_RAX[5] = arg3;\n    }\n    else {\n        *(*0x20 + -0x48) = 0x44d919;\n        cVar8 = fcn.0045c720(arg1, arg2, arg3, arg4);\n    }\n    *(*0x20 + -0x28) = iVar11;\n    *(*0x20 + -0x2d) = arg2;\n    in_RAX[6] = arg4;\n    if (cVar8 == '\\0') {\n        in_RAX[7] = unaff_RBX;\n        iVar9 = 8;\n        if (in_RAX[1] != unaff_RBX && unaff_RBX <= in_RAX[1]) {\n            iVar9 = 7;\n        }\n        iVar5 = *in_RAX;\n        if (iVar9 == 7) {\n            do {\n                uVar6 = *(iVar5 + 0x1210);\n                if ((uVar6 != 0) && (uVar6 < unaff_RBX)) break;\n                LOCK();\n                puVar2 = iVar5 + 0x1210;\n                uVar7 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar6 == uVar7) * (*puVar2 ^ unaff_RBX);\n            } while (uVar6 != uVar7);\n        }\n        LOCK();\n        if (*(in_RAX + 8) == 6) {\n            *(in_RAX + 8) = iVar9;\n        }\n        else {\n            *(*0x20 + -0x2c) = iVar9;\n            *(*0x20 + -0x48) = 0x44da14;\n            fcn.0044ef40();\n            iVar9 = *(*0x20 + -0x2c);\n            iVar11 = *(*0x20 + -0x28);\n        }\n        iVar4 = *(iVar11 + 0xd8);\n        *(iVar11 + 0xd8) = iVar4 + -1;\n        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        if (iVar9 == 7) {\n            *(*0x20 + -0x48) = 0x44da66;\n            fcn.0043b4a0();\n        }\n    }\n    else {\n        in_RAX[1] = unaff_RBX;\n        iVar11 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(*0x20 + -0x18) = iVar11;\n        *(*0x20 + -0x20) = iVar11 + 0x2278;\n        *(*0x20 + -0x48) = 0x44d979;\n        fcn.0040a360();\n        *(*0x20 + -0x48) = 0x44d988;\n        fcn.0044cde0();\n        *(*0x20 + -0x48) = 0x44d994;\n        fcn.0040a580();\n        LOCK();\n        if (*(*(*0x20 + 8) + 0x40) == 6) {\n            *(*(*0x20 + 8) + 0x40) = 1;\n        }\n        else {\n            *(*0x20 + -0x48) = 0x44d9b4;\n            fcn.0044ef40();\n        }\n        iVar9 = *(*(*0x20 + -0x28) + 0xd8);\n        *(*(*0x20 + -0x28) + 0xd8) = iVar9 + -1;\n        if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        *(*0x20 + -0x48) = 0x44d9ea;\n        fcn.0043b4a0();\n    }\n    return *(*0x20 + -0x2d);\n}\n",
        "token_count": 3143
    },
    "0044db20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044db20(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar3 = 0;\n    do {\n        if (arg1 <= iVar3) {\n            return;\n        }\n        puVar2 = *(unaff_RBX + iVar3 * 8);\ncode_r0x0044dc3a:\n        do {\n            while (uVar1 = *(puVar2 + 8),  uVar1 < 4) {\n                if (uVar1 < 2) {\n                    if (uVar1 == 0) {\ncode_r0x0044dd14:\n                        fcn.0044ef40();\n                    }\n                    else {\n                        LOCK();\n                        if (uVar1 == *(puVar2 + 8)) {\n                            *(puVar2 + 8) = 9;\n                            *puVar2 = 0;\n                            fcn.0044cde0();\n                            LOCK();\n                            if (*(puVar2 + 8) == 9) {\n                                *(puVar2 + 8) = 1;\n                            }\n                            else {\n                                fcn.0044ef40();\n                            }\n                            goto code_r0x0044db4b;\n                        }\n                    }\n                }\n                else if (uVar1 == 2) {\ncode_r0x0044dd0d:\n                    fcn.0044ef40();\n                }\n                else {\n                    LOCK();\n                    if (uVar1 == *(puVar2 + 8)) {\n                        *(puVar2 + 8) = 5;\n                        *puVar2 = 0;\n                        goto code_r0x0044db4b;\n                    }\n                }\n            }\n            if (uVar1 < 6) {\n                if (uVar1 == 4) goto code_r0x0044dd0d;\n                goto code_r0x0044dd14;\n            }\n            if (uVar1 == 6) {\n                fcn.0045a220();\n                goto code_r0x0044dc3a;\n            }\n            if (8 < uVar1) {\n                if (uVar1 == 9) goto code_r0x0044dd0d;\n                fcn.0044ef40();\n                goto code_r0x0044dc3a;\n            }\n            LOCK();\n        } while (uVar1 != *(puVar2 + 8));\n        *(puVar2 + 8) = 9;\n        puVar2[1] = puVar2[7];\n        *puVar2 = 0;\n        fcn.0044cde0();\n        LOCK();\n        if (*(puVar2 + 8) == 9) {\n            *(puVar2 + 8) = 1;\n        }\n        else {\n            fcn.0044ef40();\n        }\ncode_r0x0044db4b:\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 711
    },
    "0044dd80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044dd80(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *noname_0;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *arg1_00;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x1210) == 0) || (unaff_RBX < *(in_RAX + 0x1210))) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(in_RAX + 0x1210) = 0;\n            noname_0 = NULL;\n            arg1 = 0;\n            unaff_RBX = 0;\n            iVar2 = 0;\n            while( true ) {\n                arg1_00 = *(in_RAX + 0x2288);\n                if (arg1_00 <= noname_0) {\n                    if (arg1 != 0) {\n                        *(*0x20 + -0x88) = 0x44e085;\n                        fcn.0044e0e0(arg1);\n                    }\n                    return;\n                }\n                if (arg1_00 <= noname_0) goto code_r0x0044e0a5;\n                arg1_00 = *(*(in_RAX + 0x2280) + noname_0 * 8);\n                if (in_RAX != *arg1_00) break;\n                *(*0x20 + -0x30) = noname_0;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x40) = arg1;\n                *(*0x20 + -0x10) = iVar2;\n                uVar1 = *(arg1_00 + 8);\n                if (uVar1 < 4) {\n                    if (uVar1 < 2) {\n                        if (uVar1 == 0) {\ncode_r0x0044dfce:\n                            *(*0x20 + -0x88) = 0x44dfd3;\n                            fcn.0044ef40();\n                            in_RAX = *(*0x20 + 8);\n                            noname_0 = *(*0x20 + -0x30);\n                            unaff_RBX = *(*0x20 + -0x38);\n                            arg1 = *(*0x20 + -0x40);\n                            iVar2 = *(*0x20 + -0x10);\n                        }\n                    }\n                    else {\n                        if (uVar1 == 2) goto code_r0x0044dfce;\n                        LOCK();\n                        if (uVar1 == *(arg1_00 + 8)) {\n                            *(arg1_00 + 8) = 4;\n                            *(*0x20 + -0x88) = 0x44de75;\n                            iVar2 = fcn.0044d240(noname_0, arg1);\n                            LOCK();\n                            if (*(*(*0x20 + -0x18) + 0x40) == 4) {\n                                *(*(*0x20 + -0x18) + 0x40) = 5;\n                            }\n                            else {\n                                *(*0x20 + -0x20) = iVar2;\n                                *(*0x20 + -0x88) = 0x44de9d;\n                                fcn.0044ef40();\n                                iVar2 = *(*0x20 + -0x20);\n                            }\n                            in_RAX = *(*0x20 + 8);\n                            LOCK();\n                            *(in_RAX + 0x229c) = *(in_RAX + 0x229c) + -1;\n                            noname_0 = iVar2 + -1;\n                            arg1 = *(*0x20 + -0x40);\n                            unaff_RBX = *(*0x20 + -0x38);\n                            iVar2 = *(*0x20 + -0x10);\n                        }\n                    }\n                }\n                else if (uVar1 < 7) {\n                    if (uVar1 < 6) goto code_r0x0044dfce;\n                    if (uVar1 != 6) goto code_r0x0044dffa;\n                    *(*0x20 + -0x80) = 0x4d5e58;\n                    *(*0x20 + -0x88) = 0x44e035;\n                    fcn.0045a220();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    noname_0 = *(*0x20 + -0x30) + -1;\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    arg1 = *(*0x20 + -0x40);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                else if (uVar1 < 9) {\n                    LOCK();\n                    if (uVar1 == *(arg1_00 + 8)) {\n                        *(arg1_00 + 8) = 9;\n                        iVar2 = arg1_00[7];\n                        arg1_00[1] = iVar2;\n                        *(*0x20 + -0x88) = 0x44df26;\n                        iVar3 = fcn.0044d240(noname_0, iVar2);\n                        unaff_RBX = *(*0x20 + -0x40);\n                        arg1 = unaff_RBX + 1;\n                        if (*(*0x20 + -0x38) < arg1) {\n                            *(*0x20 + -0x28) = iVar3;\n                            iVar3 = *(*0x20 + -0x10);\n                            *(*0x20 + -0x88) = 0x44df58;\n                            iVar2 = fcn.00444c60(unaff_RBX);\n                            arg1 = iVar3 + 1;\n                            iVar3 = *(*0x20 + -0x28);\n                            uVar4 = *(*0x20 + -0x40);\n                        }\n                        else {\n                            iVar2 = *(*0x20 + -0x10);\n                            uVar4 = unaff_RBX;\n                            unaff_RBX = *(*0x20 + -0x38);\n                        }\n                        if (*0x5d3dd0 == 0) {\n                            *(iVar2 + uVar4 * 8) = *(*0x20 + -0x18);\n                        }\n                        else {\n                            *(*0x20 + -0x88) = 0x44df94;\n                            iVar3 = fcn.0045c740(unaff_RBX, iVar2, iVar2 + uVar4 * 8);\n                        }\n                        noname_0 = iVar3 + -1;\n                        in_RAX = *(*0x20 + 8);\n                    }\n                }\n                else {\n                    if (uVar1 == 9) goto code_r0x0044dfce;\ncode_r0x0044dffa:\n                    *(*0x20 + -0x88) = 0x44dfff;\n                    fcn.0044ef40();\n                    in_RAX = *(*0x20 + 8);\n                    noname_0 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    arg1 = *(*0x20 + -0x40);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                noname_0 = noname_0 + 1;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x88) = 0x44e0a5;\n            fcn.004330a0();\ncode_r0x0044e0a5:\n            *(*0x20 + -0x88) = 0x44e0b0;\n            in_RAX = fcn.0045ca40(arg1_00);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x44e0c5;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1998
    },
    "0044e1c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0044e1c0(void)\n\n{\n    uint32_t uVar1;\n    int64_t *arg2;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x0044e1c0:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar2 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\ncode_r0x0044e1e7:\n        arg1 = *(in_RAX + 0x2288);\n        if (arg1 == 0) goto code_r0x0044e44e;\n        arg2 = **(in_RAX + 0x2280);\n        if (in_RAX != *arg2) {\n            unaff_RBX = 0xf;\n            *(*0x20 + -0x30) = 0x44e44e;\n            fcn.004330a0();\n            goto code_r0x0044e44e;\n        }\n        *(*0x20 + -0x10) = arg2;\n        uVar1 = *(arg2 + 8);\n        if (uVar1 < 4) {\n            if (uVar1 < 2) {\n                if (uVar1 == 0) {\ncode_r0x0044e3e2:\n                    *(*0x20 + -0x30) = 0x44e3e7;\n                    fcn.0044ef40();\n                    in_RAX = *(*0x20 + 8);\n                    goto code_r0x0044e3f1;\n                }\n                if (unaff_RBX < arg2[1]) {\n                    return arg2[1];\n                }\n                LOCK();\n                if (uVar1 == *(arg2 + 8)) {\n                    *(arg2 + 8) = 2;\n                    *(*0x20 + -0x30) = 0x44e413;\n                    fcn.0044e480(unaff_RBX);\n                    return 0;\n                }\n                goto code_r0x0044e1e7;\n            }\n            if (uVar1 != 2) {\n                LOCK();\n                if (uVar1 == *(arg2 + 8)) {\n                    *(arg2 + 8) = 4;\n                    *(*0x20 + -0x30) = 0x44e2a5;\n                    fcn.0044d460(in_RAX, arg2);\n                    LOCK();\n                    if (*(*(*0x20 + -0x10) + 0x40) == 4) {\n                        *(*(*0x20 + -0x10) + 0x40) = 5;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x44e2c9;\n                        fcn.0044ef40();\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    LOCK();\n                    *(in_RAX + 0x229c) = *(in_RAX + 0x229c) + -1;\n                    if (*(in_RAX + 0x2288) == 0) {\n                        return -1;\n                    }\n                    goto code_r0x0044e3f1;\n                }\n                goto code_r0x0044e1e7;\n            }\ncode_r0x0044e3d0:\n            *(*0x20 + -0x30) = 0x44e3d5;\n            fcn.0044ef40();\n            in_RAX = *(*0x20 + 8);\n        }\n        else {\n            if (uVar1 < 6) {\n                if (uVar1 == 4) goto code_r0x0044e3d0;\n                goto code_r0x0044e3e2;\n            }\n            if (uVar1 == 6) {\n                *(*0x20 + -0x28) = 0x4d5e58;\n                *(*0x20 + -0x30) = 0x44e3ab;\n                fcn.0045a220();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                in_RAX = *(*0x20 + 8);\n                goto code_r0x0044e3f1;\n            }\n            if (8 < uVar1) {\n                if (uVar1 == 9) goto code_r0x0044e3d0;\n                *(*0x20 + -0x30) = 0x44e38f;\n                fcn.0044ef40();\n                in_RAX = *(*0x20 + 8);\n                goto code_r0x0044e3f1;\n            }\n            LOCK();\n            if (uVar1 != *(arg2 + 8)) goto code_r0x0044e1e7;\n            *(arg2 + 8) = 9;\n            arg2[1] = arg2[7];\n            *(*0x20 + -0x30) = 0x44e345;\n            fcn.0044d460(in_RAX, arg2);\n            *(*0x20 + -0x30) = 0x44e354;\n            fcn.0044cde0();\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n                *(*(*0x20 + -0x10) + 0x40) = 1;\n            }\n            else {\n                *(*0x20 + -0x30) = 0x44e374;\n                fcn.0044ef40();\n            }\n            in_RAX = *(*0x20 + 8);\n        }\ncode_r0x0044e3f1:\n        unaff_RBX = *(*0x20 + 0x10);\n        goto code_r0x0044e1e7;\n    }\n    goto code_r0x0044e456;\ncode_r0x0044e44e:\n    *(*0x20 + -0x30) = 0x44e455;\n    in_RAX = fcn.0045ca40(arg1);\ncode_r0x0044e456:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44e465;\n    fcn.0045ea60();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044e1c0;\n}\n",
        "token_count": 1583
    },
    "0044e620": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e620(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    ulong *arg1;\n    ulong *arg2;\n    ulong *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    ulong *arg1_00;\n    ulong *arg3;\n    int32_t iVar7;\n    ulong *arg4;\n    ulong *in_R10;\n    int64_t unaff_R12;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar9;\n    \ncode_r0x0044e620:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(in_RAX + 0x1210) = 0;\n        piVar5 = *(in_RAX + 0x2280);\n        *(*0x20 + -0x18) = piVar5;\n        arg1 = *(in_RAX + 0x2288);\n        *(*0x20 + -0x30) = arg1;\n        arg2 = *(in_RAX + 0x2290);\n        *(*0x20 + -0x28) = arg2;\n        puVar3 = NULL;\n        piVar6 = NULL;\n        arg1_00 = NULL;\n        arg4 = NULL;\n        iVar8 = unaff_R12;\n        do {\n            arg3 = arg1_00;\n            if (puVar3 < arg1) {\n                *(*0x20 + -0x20) = puVar3;\n                *(*0x20 + -0x3c) = arg4;\n                *(*0x20 + -0x38) = arg1_00;\n                *(*0x20 + -0x3d) = piVar6;\n                in_R10 = piVar5[puVar3];\n                *(*0x20 + -0x10) = in_R10;\n                unaff_R12 = in_RAX;\n            }\n            else {\n                for (; arg3 < arg1; arg3 = arg3 + 1) {\n                    if (arg1 <= arg3) goto code_r0x0044e8c9;\n                    piVar6 = piVar5 + arg3;\n                    if (*0x5d3dd0 == 0) {\n                        piVar5[arg3] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x44e847;\n                        in_RAX = fcn.0045c6e0(arg1, arg2, arg3, arg4);\n                        in_R10 = arg1_00;\n                    }\n                }\n                iVar7 = arg4;\n                LOCK();\n                puVar1 = in_RAX + 0x229c;\n                arg4 = *puVar1;\n                *puVar1 = *puVar1 + -iVar7;\n                LOCK();\n                puVar1 = in_RAX + 0x2298;\n                arg3 = *puVar1;\n                *puVar1 = *puVar1 + -iVar7;\n                if (arg1_00 <= arg2) {\n                    *(in_RAX + 0x2288) = arg1_00;\n                    *(in_RAX + 0x2290) = arg2;\n                    if (*0x5d3dd0 == 0) {\n                        *(in_RAX + 0x2280) = piVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x44e897;\n                        in_RAX = fcn.0045c700(arg1, arg2, arg3, arg4);\n                    }\n                    if (arg1_00 == NULL) {\n                        *(in_RAX + 0x1208) = 0;\n                    }\n                    else {\n                        *(in_RAX + 0x1208) = *(*piVar5 + 8);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x68) = 0x44e8c9;\n                arg1 = arg1_00;\n                fcn.0045cac0(arg1_00, arg2);\ncode_r0x0044e8c9:\n                *(*0x20 + -0x68) = 0x44e8d1;\n                fcn.0045ca40(arg1);\n                unaff_R12 = iVar8;\n                puVar3 = arg1_00;\n                arg1_00 = arg3;\n            }\ncode_r0x0044e8d4:\n            do {\n                while (uVar2 = *(in_R10 + 8),  uVar2 < 4) {\n                    in_RAX = unaff_R12;\n                    if (uVar2 < 2) {\n                        if (uVar2 != 0) {\n                            unaff_R12 = iVar8;\n                            if (piVar6 != '\\0') {\n                                if (arg1 <= arg1_00) goto code_r0x0044ea90;\n                                if (*0x5d3dd0 == 0) {\n                                    piVar5[arg1_00] = in_R10;\n                                }\n                                else {\n                                    *(*0x20 + -0x68) = 0x44e6d7;\n                                    puVar3 = in_R10;\n                                    fcn.0045c740(arg1, arg2, arg1_00);\n                                    arg4 = in_R10;\n                                    in_R10 = puVar3;\n                                }\n                                *(*0x20 + -0x68) = 0x44e6e8;\n                                fcn.0044eba0(arg2, arg2, arg1_00, arg4);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x30);\n                                arg2 = *(*0x20 + -0x28);\n                                puVar3 = *(*0x20 + -0x20);\n                                piVar5 = *(*0x20 + -0x18);\n                                piVar6 = *(*0x20 + -0x3d);\n                                arg1_00 = *(*0x20 + -0x38);\n                                arg4 = *(*0x20 + -0x3c);\n                            }\n                            arg1_00 = arg1_00 + 1;\n                            goto code_r0x0044e678;\n                        }\ncode_r0x0044ea4b:\n                        *(*0x20 + -0x68) = 0x44ea50;\n                        fcn.0044ef40();\n                        arg1 = *(*0x20 + -0x30);\n                        arg2 = *(*0x20 + -0x28);\n                        piVar5 = *(*0x20 + -0x18);\n                        piVar6 = *(*0x20 + -0x3d);\n                        arg4 = *(*0x20 + -0x3c);\n                        in_R10 = *(*0x20 + -0x10);\n                        unaff_R12 = *(*0x20 + 8);\n                        puVar3 = *(*0x20 + -0x20);\n                        arg1_00 = *(*0x20 + -0x38);\n                        iVar8 = *(*0x20 + 8);\n                    }\n                    else if (uVar2 == 2) {\ncode_r0x0044ea0e:\n                        *(*0x20 + -0x68) = 0x44ea13;\n                        fcn.0044ef40();\n                        arg1 = *(*0x20 + -0x30);\n                        arg2 = *(*0x20 + -0x28);\n                        piVar5 = *(*0x20 + -0x18);\n                        piVar6 = *(*0x20 + -0x3d);\n                        arg4 = *(*0x20 + -0x3c);\n                        in_R10 = *(*0x20 + -0x10);\n                        unaff_R12 = *(*0x20 + 8);\n                        puVar3 = *(*0x20 + -0x20);\n                        arg1_00 = *(*0x20 + -0x38);\n                        iVar8 = *(*0x20 + 8);\n                    }\n                    else {\n                        LOCK();\n                        iVar8 = unaff_R12;\n                        if (uVar2 == *(in_R10 + 8)) {\n                            *(in_R10 + 8) = 4;\n                            *in_R10 = 0;\n                            LOCK();\n                            bVar9 = *(in_R10 + 8) == 4;\n                            if (bVar9) {\n                                *(in_R10 + 8) = 5;\n                            }\n                            in_R10 = in_R10 & 0xffffffffffffff00 | bVar9;\n                            if (!bVar9) {\n                                *(*0x20 + -0x68) = 0x44e73c;\n                                fcn.0044ef40();\n                                arg1 = *(*0x20 + -0x30);\n                                arg2 = *(*0x20 + -0x28);\n                                puVar3 = *(*0x20 + -0x20);\n                                piVar5 = *(*0x20 + -0x18);\n                                arg1_00 = *(*0x20 + -0x38);\n                                arg4 = *(*0x20 + -0x3c);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            arg4 = arg4 + 1;\n                            piVar6 = 0x1;\n                            unaff_R12 = in_RAX;\n                            goto code_r0x0044e678;\n                        }\n                    }\n                }\n                if (uVar2 < 6) {\n                    if (uVar2 == 4) goto code_r0x0044ea0e;\n                    goto code_r0x0044ea4b;\n                }\n                if (uVar2 == 6) {\n                    *(*0x20 + -0x60) = 0x4d5e58;\n                    *(*0x20 + -0x68) = 0x44e9bc;\n                    fcn.0045a220();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    piVar5 = *(*0x20 + -0x18);\n                    piVar6 = *(*0x20 + -0x3d);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_R10 = *(*0x20 + -0x10);\n                    unaff_R12 = *(*0x20 + 8);\n                    puVar3 = *(*0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x38);\n                    iVar8 = *(*0x20 + 8);\n                    goto code_r0x0044e8d4;\n                }\n                if (8 < uVar2) {\n                    if (uVar2 == 9) goto code_r0x0044ea0e;\n                    *(*0x20 + -0x68) = 0x44e974;\n                    fcn.0044ef40();\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    piVar5 = *(*0x20 + -0x18);\n                    piVar6 = *(*0x20 + -0x3d);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_R10 = *(*0x20 + -0x10);\n                    unaff_R12 = *(*0x20 + 8);\n                    puVar3 = *(*0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x38);\n                    iVar8 = *(*0x20 + 8);\n                    goto code_r0x0044e8d4;\n                }\n                LOCK();\n                iVar8 = unaff_R12;\n            } while (uVar2 != *(in_R10 + 8));\n            *(in_R10 + 8) = 9;\n            in_R10[1] = in_R10[7];\n            if (arg1 <= arg1_00) goto code_r0x0044ea88;\n            if (*0x5d3dd0 == 0) {\n                piVar5[arg1_00] = in_R10;\n                in_R10 = arg4;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x44e7a7;\n                fcn.0045c740(arg1, arg2, arg1_00);\n            }\n            *(*0x20 + -0x68) = 0x44e7b8;\n            fcn.0044eba0(arg2, arg2, arg1_00, in_R10);\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n                *(*(*0x20 + -0x10) + 0x40) = 1;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x44e7d8;\n                fcn.0044ef40();\n            }\n            in_R10 = *(*0x20 + -0x38);\n            arg1_00 = in_R10 + 1;\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar3 = *(*0x20 + -0x20);\n            piVar5 = *(*0x20 + -0x18);\n            piVar6 = 0x1;\n            arg4 = *(*0x20 + -0x3c);\ncode_r0x0044e678:\n            puVar3 = puVar3 + 1;\n            iVar8 = unaff_R12;\n        } while( true );\n    }\n    goto code_r0x0044ea99;\ncode_r0x0044ea88:\n    *(*0x20 + -0x68) = 0x44ea90;\n    fcn.0045ca40(arg1);\ncode_r0x0044ea90:\n    *(*0x20 + -0x68) = 0x44ea98;\n    in_RAX = fcn.0045ca40(arg1);\ncode_r0x0044ea99:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x44eaa5;\n    fcn.0045a360();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x0044e620;\n}\n",
        "token_count": 3322
    },
    "0044f280": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f280(int64_t *arg1, ulong noname_1, uint64_t arg3, code *arg4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    code *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    uint64_t uVar7;\n    code *unaff_RDI;\n    uint32_t uVar8;\n    uint64_t in_R10;\n    uint64_t uVar9;\n    uint64_t in_R11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_SIL;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x38) = arg4;\n            iVar1 = *unaff_RDI;\n            *(*0x20 + -0x28) = in_RAX + 0x34;\n            if ((iVar1 == 0) || (-(*(iVar1 + 0x10) + -0xfbe8) < in_RAX + 0x34)) {\n                *(*0x20 + -0x60) = 0x44f2f0;\n                iVar1 = fcn.0044f940();\n                arg1 = *(*0x20 + 0x20);\n                *arg1 = iVar1;\n            }\n            *(*0x20 + -0x20) = iVar1;\n            *(*0x20 + -0x60) = 0x44f306;\n            fcn.0045c420(arg1, iVar1);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            uVar4 = *(*0x20 + -0x20);\n            uVar2 = (*(*0x20 + -0x58) >> 6) - *(uVar4 + 8);\n            unaff_RBX = *(*0x20 + -0x58) >> 6;\n            if (uVar2 == 0) {\n                unaff_RBX = *(uVar4 + 8) + 1;\n            }\n            *(uVar4 + 8) = unaff_RBX;\n            if (uVar2 == 0) {\n                uVar2 = 1;\n            }\n            uVar7 = *(*0x20 + 0x30);\n            if (uVar7 < 0) {\n                uVar5 = *(*0x20 + 0x40);\n                uVar9 = uVar5;\n            }\n            else {\n                uVar5 = *(*0x20 + 0x40);\n                uVar9 = uVar5 + 1;\n            }\n            if (3 < uVar9) {\n                uVar9 = 3;\n            }\n            arg3 = *(uVar4 + 0x10);\n            arg4 = uVar9 & 0xffffffff;\n            in_R11 = *(*0x20 + 0x28);\n            uVar8 = uVar9 << 6 | *(*0x20 + 0x28);\n            in_R10 = uVar8;\n            if (arg3 < 0xfbe8) {\n                *(uVar4 + 0x418 + arg3) = uVar8;\n                in_R10 = *(uVar4 + 0x10) + 1;\n                *(uVar4 + 0x10) = in_R10;\n                if (arg4 != '\\x03') {\n                    unaff_RBX = NULL;\n                    goto code_r0x0044f3c0;\n                }\n                unaff_RBX = NULL;\ncode_r0x0044f640:\n                if (unaff_RBX < pe_nt_image_headers64) {\n                    if (in_R10 < 0xfbe8) {\n                        *(uVar4 + 0x418 + in_R10) = unaff_RBX;\n                        *(uVar4 + 0x10) = in_R10 + 1;\n                        unaff_RBX = uVar4 + in_R10 + 0x418;\ncode_r0x0044f3c0:\n                        uVar9 = *(uVar4 + 0x10);\n                        while (0x7f < uVar2) {\n                            if (0xfbe7 < uVar9) goto code_r0x0044f612;\n                            *(uVar4 + 0x418 + uVar9) = uVar2 | 0x80;\n                            uVar9 = uVar9 + 1;\n                            uVar2 = uVar2 >> 7;\n                            in_R10 = uVar2;\n                        }\n                        if (uVar9 < 0xfbe8) {\n                            *(uVar4 + 0x418 + uVar9) = uVar2;\n                            *(uVar4 + 0x10) = uVar9 + 1;\n                            iVar1 = *(*0x20 + 0x38);\n                            iVar3 = 0;\n                            do {\n                                if (iVar3 < uVar5) {\n                                    in_R10 = *(iVar1 + iVar3 * 8);\n                                    in_R11 = *(uVar4 + 0x10);\n                                    goto code_r0x0044f5cf;\n                                }\n                                if (uVar7 != 0) {\n                                    if (uVar7 < 1) goto code_r0x0044f4a2;\n                                    *(*0x20 + -0x30) = arg3;\n                                    *(*0x20 + -0x18) = unaff_RBX;\n                                    unaff_RBX = uVar4 + 0x18;\n                                    unaff_RDI = pe_nt_image_headers64;\n                                    *(*0x20 + -0x60) = 0x44f497;\n                                    uVar2 = fcn.0044f720(0x80);\n                                    uVar4 = *(*0x20 + -0x20);\n                                    arg3 = *(uVar4 + 0x10);\n                                    goto code_r0x0044f4f1;\n                                }\n                                uVar5 = *(uVar4 + 0x10);\n                                uVar2 = 0;\ncode_r0x0044f569:\n                                if (0x7f < uVar2) {\n                                    if (0xfbe7 < uVar5) goto code_r0x0044f5a9;\ncode_r0x0044f552:\n                                    *(uVar4 + 0x418 + uVar5) = uVar2 | 0x80;\n                                    uVar2 = uVar2 >> 7;\n                                    uVar5 = uVar5 + 1;\n                                    uVar7 = uVar2;\n                                    goto code_r0x0044f569;\n                                }\n                                if (uVar5 < 0xfbe8) {\n                                    *(uVar4 + 0x418 + uVar5) = uVar2;\n                                    *(uVar4 + 0x10) = uVar5 + 1;\ncode_r0x0044f4a2:\n                                    while( true ) {\n                                        iVar3 = *(uVar4 + 0x10) - arg3;\n                                        uVar4 = *(*0x20 + -0x28);\n                                        if (iVar3 <= uVar4) {\n                                            if (unaff_RBX != NULL) {\n                                                *unaff_RBX = iVar3 + -2;\n                                            }\n                                            return;\n                                        }\n                                        unaff_RBX = 0x1d;\n                                        *(*0x20 + -0x60) = 0x44f4d9;\n                                        uVar2 = fcn.004330a0();\n                                        while( true ) {\n                                            *(uVar4 + 0x418 + arg3) = uVar2 | 0x80;\n                                            uVar2 = uVar2 >> 7;\n                                            arg3 = arg3 + 1;\ncode_r0x0044f4f1:\n                                            if (uVar2 < 0x80) break;\n                                            uVar5 = uVar4;\n                                            if (0xfbe7 < arg3) goto code_r0x0044f545;\n                                        }\n                                        if (0xfbe7 < arg3) break;\n                                        *(uVar4 + 0x418 + arg3) = uVar2;\n                                        *(uVar4 + 0x10) = arg3 + 1;\n                                        unaff_RBX = *(*0x20 + -0x18);\n                                        arg3 = *(*0x20 + -0x30);\n                                    }\n                                    *(*0x20 + -0x60) = 0x44f545;\n                                    fcn.0045ca40(0xfbe8);\n                                    uVar5 = uVar4;\ncode_r0x0044f545:\n                                    uVar4 = 0xfbe8;\n                                    *(*0x20 + -0x60) = 0x44f552;\n                                    uVar2 = fcn.0045ca40(0xfbe8);\n                                    goto code_r0x0044f552;\n                                }\n                                *(*0x20 + -0x60) = 0x44f5a9;\n                                fcn.0045ca40(0xfbe8);\ncode_r0x0044f5a9:\n                                uVar4 = 0xfbe8;\n                                *(*0x20 + -0x60) = 0x44f5b6;\n                                iVar3 = fcn.0045ca40(0xfbe8);\n                                while( true ) {\n                                    *(uVar4 + 0x418 + in_R11) = in_R10 | 0x80;\n                                    in_R10 = in_R10 >> 7;\n                                    in_R11 = in_R11 + 1;\ncode_r0x0044f5cf:\n                                    if (in_R10 < 0x80) break;\n                                    if (0xfbe7 < in_R11) goto code_r0x0044f5f8;\n                                }\n                                if (0xfbe7 < in_R11) goto code_r0x0044f5eb;\n                                *(uVar4 + 0x418 + in_R11) = in_R10;\n                                in_R10 = in_R11 + 1;\n                                *(uVar4 + 0x10) = in_R10;\n                                iVar3 = iVar3 + 1;\n                            } while( true );\n                        }\n                        goto code_r0x0044f605;\n                    }\n                    *(*0x20 + -0x60) = 0x44f68a;\n                    fcn.0045ca40(0xfbe8);\n                }\n                else if (in_R10 < 0xfbe8) goto code_r0x0044f61f;\n                *(*0x20 + -0x60) = 0x44f697;\n                fcn.0045ca40(0xfbe8);\n            }\n            unaff_SIL = uVar7;\n            arg1 = 0xfbe8;\n            *(*0x20 + -0x60) = 0x44f6a5;\n            in_RAX = fcn.0045ca40(0xfbe8);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        puVar6[0x28] = unaff_SIL;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + 0x38) = arg4;\n        *(puVar6 + 0x40) = in_R10;\n        *(puVar6 + 0x48) = in_R11;\n        *(puVar6 + -8) = 0x44f6d7;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_SIL = puVar6[0x28];\n        arg3 = *(puVar6 + 0x30);\n        arg4 = *(puVar6 + 0x38);\n        in_R10 = *(puVar6 + 0x40);\n        in_R11 = *(puVar6 + 0x48);\n        *0x20 = puVar6;\n    } while( true );\ncode_r0x0044f5eb:\n    *(*0x20 + -0x60) = 0x44f5f8;\n    fcn.0045ca40(0xfbe8);\ncode_r0x0044f5f8:\n    *(*0x20 + -0x60) = 0x44f605;\n    fcn.0045ca40(0xfbe8);\ncode_r0x0044f605:\n    *(*0x20 + -0x60) = 0x44f612;\n    fcn.0045ca40(0xfbe8);\ncode_r0x0044f612:\n    uVar4 = 0xfbe8;\n    *(*0x20 + -0x60) = 0x44f61f;\n    uVar2 = fcn.0045ca40(0xfbe8);\ncode_r0x0044f61f:\n    *(uVar4 + 0x418 + in_R10) = unaff_RBX | 0x80;\n    unaff_RBX = unaff_RBX >> 7;\n    in_R10 = in_R10 + 1;\n    arg4 = unaff_RBX;\n    goto code_r0x0044f640;\n}\n",
        "token_count": 3186
    },
    "00450a40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * fcn.00450a40(uchar *arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    ulong uVar11;\n    ulong uVar12;\n    uchar *puVar13;\n    uint32_t uVar14;\n    uchar uVar15;\n    ulong *unaff_RBX;\n    uint64_t uVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uchar *unaff_RDI;\n    uchar *puVar18;\n    int64_t *piVar19;\n    uint64_t uVar20;\n    code **ppcVar21;\n    uchar *in_R10;\n    uint8_t uVar22;\n    uint64_t in_R11;\n    uint64_t uVar23;\n    uchar *unaff_R14;\n    bool bVar24;\n    uchar in_XMM15 [16];\n    \ncode_r0x00450a40:\n    puVar17 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x2e0 && *0x20 + -0x2e0 != *(unaff_R14 + 0x10)) {\n        puVar17 = *0x20 + -0x360;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if ((unaff_RSI < 1) || (in_R10 == NULL)) {\n            if ((unaff_R14 != unaff_RDI) || (arg1 = unaff_R14,  *(*(unaff_R14 + 0x30) + 0x90) != unaff_R14)) {\n                uVar14 = *0x564468 >> 2;\n                if (*(*(unaff_R14 + 0x30) + 0xf9) != 0) {\n                    uVar14 = *(*(unaff_R14 + 0x30) + 0xf9);\n                }\n                if ((in_RAX == -1) && (unaff_RBX == 0xffffffffffffffff)) {\n                    unaff_RBX = *(unaff_RDI + 0x70);\n                    if (unaff_RBX == NULL) {\n                        in_RAX = *(unaff_RDI + 0x40);\n                        unaff_RBX = *(unaff_RDI + 0x38);\n                        uVar10 = *(unaff_RDI + 0x50);\n                    }\n                    else {\n                        in_RAX = *(unaff_RDI + 0x78);\n                        uVar10 = 0;\n                    }\n                }\n                else {\n                    uVar10 = 0;\n                }\n                *(*0x20 + -0x60) = in_XMM15;\n                *(*0x20 + -0x370) = unaff_RBP;\n                *(*0x20 + -0x368) = 0x450b0f;\n                iVar6 = fcn.0045ccf0();\n                unaff_RBP = *(*0x20 + -0x370);\n                *(*0x20 + -0x50) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                uVar23 = *(iVar6 + 0x150);\n                iVar9 = *(iVar6 + 0x158);\n                if (arg3 == 0) {\n                    puVar18 = *0x20 + -0x88 & 0xffffffffffffff00 | in_R10 == NULL;\n                }\n                else {\n                    puVar18 = NULL;\n                }\n                *(*0x20 + 0x30) = unaff_RSI;\n                *(*0x20 + 0x48) = in_R10;\n                *(*0x20 + -0x240) = in_RAX;\n                *(*0x20 + -0x248) = unaff_RBX;\n                *(*0x20 + -0x332) = puVar18;\n                *(*0x20 + -0x68) = in_R11;\n                *(*0x20 + 0x40) = arg4;\n                *(*0x20 + 0x38) = arg3;\n                *(*0x20 + -0x70) = iVar6;\n                *(*0x20 + -0x2c0) = iVar9;\n                *(*0x20 + -0xb0) = uVar23;\n                *(*0x20 + -0xb8) = uVar10;\n                *(*0x20 + -0x324) = uVar14;\n                if (in_RAX == 0) {\n                    *(*0x20 + -0x50) = *unaff_RBX;\n                    *(*0x20 + -0x38) = *(*0x20 + -0x248) + 8;\n                }\n                *(*0x20 + -0x368) = 0x450bd3;\n                iVar6 = fcn.0044b1a0();\n                if (iVar6 == 0) {\n                    arg1 = *(*0x20 + 0x48);\n                    if ((arg1 != NULL) || (puVar13 = in_R10,  puVar2 = arg1,  *(*0x20 + -0x332) != '\\0')) {\n                        *(*0x20 + -0x240) = *(*0x20 + -0x50);\n                        *(*0x20 + -0x368) = 0x450c90;\n                        fcn.00434840();\n                        *(*0x20 + -0x368) = 0x450ca5;\n                        fcn.00435140();\n                        *(*0x20 + -0x368) = 0x450cb2;\n                        fcn.00434fa0();\n                        *(*0x20 + -0x368) = 0x450cb7;\n                        fcn.00434aa0();\n                        *(*0x20 + -0x368) = 0x450cbc;\n                        fcn.004348c0();\n                        arg1 = *0x20 + -0x60;\n                        puVar18 = NULL;\n                        *(*0x20 + -0x368) = 0x450cda;\n                        fcn.004543a0(arg1);\n                        puVar13 = in_R10;\n                        puVar2 = *(*0x20 + 0x48);\n                    }\n                    if (puVar2 == NULL) {\n                        return NULL;\n                    }\n                    uVar16 = 10;\n                    *(*0x20 + -0x368) = 0x450d0f;\n                    fcn.004330a0();\n                    goto code_r0x00450d0f;\n                }\n                *(*0x20 + -0x60) = iVar6;\n                *(*0x20 + -0x58) = in_RAX;\n                *(*0x20 + -0x370) = unaff_RBP;\n                *(*0x20 + -0x368) = 0x450c0f;\n                fcn.0045ccb4();\n                unaff_RBP = *(*0x20 + -0x370);\n                unaff_RSI = *(*0x20 + 0x40);\n                arg1 = *(*0x20 + -0x70);\n                arg4 = *(*0x20 + -0x240);\n                in_R10 = *(*0x20 + -0x248);\n                in_R11 = *(*0x20 + 0x30);\n                uVar23 = *(*0x20 + -0xb0);\n                iVar9 = *(*0x20 + -0x2c0);\n                arg3 = *(*0x20 + -0xb8);\n                puVar13 = NULL;\n                uVar10 = 0;\n                uVar16 = 0;\n                unaff_RDI = NULL;\ncode_r0x00450d8f:\n                puVar18 = unaff_RDI;\n                if (puVar13 < unaff_RSI) {\n                    *(*0x20 + -0x250) = in_R11;\n                    iVar6 = *(*0x20 + -0x60);\n                    if (*(iVar6 + 0x10) != 0) {\n                        *(*0x20 + -0x78) = iVar6;\n                        *(*0x20 + -0x80) = *(*0x20 + -0x58);\n                        uVar22 = *(iVar6 + 0x25);\n                        cVar4 = *(iVar6 + 0x24);\n                        if (cVar4 == '\\x04') {\n                            uVar22 = uVar22 & 0xfd;\n                        }\n                        if ((((*(*0x20 + -0x50) == arg4) && (*(*0x20 + -0x38) == in_R10)) && (*(arg1 + 0x78) == arg4))\n                           && (*(arg1 + 0x70) == in_R10)) {\n                            uVar22 = uVar22 & 0xfd;\n                        }\n                        *(*0x20 + -0x2e8) = puVar13;\n                        *(*0x20 + -0x300) = unaff_RDI;\n                        *(*0x20 + -0x331) = uVar16;\n                        *(*0x20 + -0x88) = arg3;\n                        *(*0x20 + -0x333) = uVar10;\n                        if (*(*0x20 + -0x30) == 0) {\n                            if ((((*(*0x20 + 8) >> 2 & 1) == 0) || (**(arg1 + 0x30) != arg1)) ||\n                               (uVar10 = (*(arg1 + 0x30))[0x12],  uVar10 == 0)) {\n                                iVar6 = *(*0x20 + -0x78);\n                                uVar16 = *(*0x20 + -0x80);\n                            }\n                            else if (cVar4 == '\\f') {\n                                *(*0x20 + -0x50) = *(uVar10 + 0x40);\n                                *(*0x20 + -0x368) = 0x450efa;\n                                iVar6 = fcn.0044b1a0();\n                                *(*0x20 + -0x60) = iVar6;\n                                *(*0x20 + -0x58) = uVar16;\n                                uVar22 = *(iVar6 + 0x25);\n                                *(*0x20 + -0x38) = *(*(*(*(*0x20 + -0x70) + 0x30) + 0x90) + 0x38);\n                                iVar9 = *(*(*(*0x20 + -0x70) + 0x30) + 0x90);\n                                uVar23 = *(iVar9 + 0x150);\n                                iVar9 = *(iVar9 + 0x158);\n                            }\n                            else if (cVar4 == '\\x13') {\n                                *(*0x20 + -0x38) = *(uVar10 + 0x38);\n                                uVar23 = *(*(*(arg1 + 0x30) + 0x90) + 0x150);\n                                iVar9 = *(*(*(arg1 + 0x30) + 0x90) + 0x158);\n                                uVar22 = uVar22 & 0xfd;\n                                iVar6 = *(*0x20 + -0x78);\n                                uVar16 = *(*0x20 + -0x80);\n                            }\n                            else {\n                                iVar6 = *(*0x20 + -0x78);\n                                uVar16 = *(*0x20 + -0x80);\n                            }\n                            *(*0x20 + -0x2c0) = iVar9;\n                            *(*0x20 + -0xb0) = uVar23;\n                            *(*0x20 + -200) = uVar16;\n                            *(*0x20 + -0xc0) = iVar6;\n                            *(*0x20 + -0x330) = uVar22;\n                            *(*0x20 + -0x368) = 0x450fdd;\n                            iVar5 = fcn.0044bdc0(*(*0x20 + -0x50));\n                            *(*0x20 + -0x30) = iVar5 + *(*0x20 + -0x38);\n                            *(*0x20 + -0x30) = iVar5 + *(*0x20 + -0x38) + 8;\n                            puVar13 = *(*0x20 + -0x2e8);\n                            arg1 = *(*0x20 + -0x70);\n                            uVar10 = *(*0x20 + -0x333);\n                            uVar16 = *(*0x20 + -0x331);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x300);\n                            arg3 = *(*0x20 + -0x88);\n                            arg4 = *(*0x20 + -0x240);\n                            in_R10 = *(*0x20 + -0x248);\n                            uVar22 = *(*0x20 + -0x330);\n                            iVar6 = *(*0x20 + -0xc0);\n                            iVar9 = *(*0x20 + -0x2c0);\n                            uVar23 = *(*0x20 + -0xb0);\n                        }\n                        else {\n                            *(*0x20 + -200) = *(*0x20 + -0x80);\n                            iVar6 = *(*0x20 + -0x78);\n                        }\n                        *(*0x20 + -0x2c0) = iVar9;\n                        *(*0x20 + -0xb0) = uVar23;\n                        *(*0x20 + -0xc0) = iVar6;\n                        if ((uVar22 & 1) == 0) {\n                            if ((uVar22 & 2) == 0) {\ncode_r0x004510f4:\n                                if (*(*0x20 + -0x40) == 0) {\n                                    *(*0x20 + -0x2e0) = *(*0x20 + -0x30) + -8;\n                                    *(*0x20 + -0x40) = *(*(*0x20 + -0x30) + -8);\n                                }\n                                else {\n                                    *(*0x20 + -0x298) = puVar13;\n                                    *(*0x20 + -0x2e0) = 0;\n                                }\n                                *(*0x20 + -0x368) = 0x451145;\n                                iVar7 = fcn.0044b1a0();\n                                if (iVar7 == 0) {\n                                    arg4 = *(*0x20 + -0x332);\n                                    if (*(*0x20 + -0x332) == 0) {\n                                        arg1 = *(*0x20 + -0x70);\n                                        in_R10 = *(*0x20 + -0xc0);\n                                    }\n                                    else {\n                                        arg1 = *(*0x20 + -0x70);\n                                        if (*(*(arg1 + 0x30) + 0xe8) == '\\0') {\n                                            in_R10 = *(*0x20 + -0xc0);\n                                        }\n                                        else {\n                                            in_R10 = *(*0x20 + -0xc0);\n                                            if (in_R10[0x24] == '\\x12') {\n                                                arg4 = 0;\n                                            }\n                                        }\n                                    }\n                                    *(*0x20 + -0x90) = 0;\n                                    *(*0x20 + -0x98) = uVar16;\n                                    in_R11 = *(*0x20 + 0x48);\n                                    if ((in_R11 != 0) || (uVar10 = in_R11,  arg4 != '\\0')) {\n                                        uVar8 = *(*0x20 + -200);\n                                        *(*0x20 + -0x368) = 0x4511fd;\n                                        uVar11 = fcn.0044b920();\n                                        *(*0x20 + -0xa0) = uVar11;\n                                        *(*0x20 + -600) = uVar8;\n                                        *(*0x20 + -0x260) = *(*0x20 + -0x40);\n                                        *(*0x20 + -0x368) = 0x451225;\n                                        fcn.00434840();\n                                        *(*0x20 + -0x368) = 0x451236;\n                                        fcn.00435140();\n                                        *(*0x20 + -0x368) = 0x45124b;\n                                        fcn.00435140();\n                                        *(*0x20 + -0x368) = 0x45125c;\n                                        fcn.00435140();\n                                        *(*0x20 + -0x368) = 0x451269;\n                                        fcn.00434fa0();\n                                        *(*0x20 + -0x368) = 0x45126e;\n                                        fcn.00434aa0();\n                                        *(*0x20 + -0x368) = 0x451273;\n                                        fcn.004348c0();\n                                        unaff_RDI = *(*0x20 + -0x2e0);\n                                        *(*0x20 + -0x368) = 0x451297;\n                                        fcn.004543a0(*0x20 + -0x60);\n                                        iVar7 = *(*0x20 + -0x90);\n                                        arg1 = *(*0x20 + -0x70);\n                                        uVar16 = *(*0x20 + -0x98);\n                                        in_R10 = *(*0x20 + -0xc0);\n                                        in_R11 = *(*0x20 + 0x48);\n                                        uVar10 = *(*0x20 + 0x48);\n                                    }\n                                    if (uVar10 != 0) goto code_r0x00452465;\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x70);\n                                }\n                                uVar10 = *(*0x20 + -0x333);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                unaff_RDI = *(*0x20 + -0x300);\n                                iVar6 = *(*0x20 + -0xc0);\n                                uVar23 = *(*0x20 + -0xb0);\n                                iVar9 = *(*0x20 + -0x2c0);\n                                *(*0x20 + -0xe8) = iVar7;\n                                *(*0x20 + -0xf0) = uVar16;\n                                uVar8 = *(*0x20 + -0x2e8);\n                                uVar16 = *(*0x20 + -0x331);\n                            }\n                            else {\n                                in_R11 = *(*0x20 + 0x48);\n                                if (in_R11 != 0) {\n                                    if (puVar13 < 1) goto code_r0x004510f4;\n                                    if (in_R11 != 0) goto code_r0x00452476;\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                *(*0x20 + -0x2a0) = puVar13;\n                                *(*0x20 + -0xe8) = 0;\n                                *(*0x20 + -0xf0) = 0;\n                                uVar8 = *(*0x20 + -0x2a0);\n                            }\n                            arg3 = *(*0x20 + -0xe8);\n                            *(*0x20 + -0x2a8) = uVar8;\n                            *(*0x20 + -0xd0) = *(*0x20 + -0xf0);\n                            puVar13 = *(*0x20 + -0x2a8);\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0;\n                            *(*0x20 + -0xd0) = 0;\n                            arg3 = 0;\n                        }\n                        iVar7 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x28) = iVar7;\n                        *(*0x20 + -0x28) = iVar7 - 8U;\n                        if (*(*0x20 + -0x38) < iVar7 - 8U) {\n                            *(*0x20 + -0x28) = iVar7 + -0x10;\n                        }\n                        *(*0x20 + -0xe8) = arg3;\n                        ppcVar21 = *(*0x20 + 0x48);\n                        if (ppcVar21 == NULL) {\n                            in_R10 = *(*0x20 + -0x332);\n                            if (*(*0x20 + -0x332) != 0) goto code_r0x004513bf;\n                        }\n                        else {\n                            in_R10 = *(*0x20 + -0x332);\ncode_r0x004513bf:\n                            *(*0x20 + -0x20) = *(*0x20 + -0x30);\n                            if (ppcVar21 == NULL) {\n                                bVar24 = false;\n                            }\n                            else {\n                                bVar24 = *(iVar6 + 8) == -0x80000000;\n                            }\n                            *(*0x20 + -0x18) = *(iVar6 + 8);\n                            *(*0x20 + -0x10) = 0;\n                            if (bVar24) {\n                                *(*0x20 + -0x368) = 0x451427;\n                                uVar8 = fcn.00452ae0(*(*0x20 + -200));\n                                *(*0x20 + -0x18) = uVar8;\n                                *(*0x20 + -0x10) = iVar6;\n                                puVar13 = *(*0x20 + -0x2e8);\n                                arg1 = *(*0x20 + -0x70);\n                                uVar10 = *(*0x20 + -0x333);\n                                uVar16 = *(*0x20 + -0x331);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                unaff_RDI = *(*0x20 + -0x300);\n                                ppcVar21 = *(*0x20 + 0x48);\n                                in_R10 = *(*0x20 + -0x332);\n                                iVar6 = *(*0x20 + -0xc0);\n                                iVar9 = *(*0x20 + -0x2c0);\n                            }\n                            arg3 = *(*0x20 + -0xe8);\n                            uVar23 = *(*0x20 + -0xb0);\n                        }\n                        *(*0x20 + -0x48) = *(*0x20 + -0x50);\n                        if (uVar10 == '\\0') {\n                            bVar24 = ppcVar21 == NULL;\n                        }\n                        else if (*(*(*0x20 + -0x60) + 0xc) == 0) {\n                            *(*0x20 + -0x48) = 0;\n                            bVar24 = ppcVar21 == NULL;\n                        }\n                        else {\n                            *(*0x20 + -0x368) = 0x4514db;\n                            iVar9 = fcn.0044acc0();\n                            *(*0x20 + -0x48) = *(*(*0x20 + -0x60) + 0xc) + iVar9 + 1;\n                            bVar24 = *(*0x20 + 0x48) == 0;\n                            puVar13 = *(*0x20 + -0x2e8);\n                            arg1 = *(*0x20 + -0x70);\n                            uVar10 = *(*0x20 + -0x333);\n                            uVar16 = *(*0x20 + -0x331);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x300);\n                            arg3 = *(*0x20 + -0xe8);\n                            ppcVar21 = *(*0x20 + 0x48);\n                            in_R10 = *(*0x20 + -0x332);\n                            iVar6 = *(*0x20 + -0xc0);\n                            uVar23 = *(*0x20 + -0xb0);\n                            iVar9 = *(*0x20 + -0x2c0);\n                        }\n                        if (bVar24) {\n                            in_R11 = *(*0x20 + 0x38);\n                            uVar20 = in_R11;\n                        }\n                        else {\n                            pcVar3 = *ppcVar21;\n                            *(*0x20 + -0x368) = 0x451582;\n                            cVar4 = (*pcVar3)();\n                            if (cVar4 == '\\0') {\n                                return *(*0x20 + -0x2e8);\n                            }\n                            uVar20 = *(*0x20 + 0x38);\n                            puVar13 = *(*0x20 + -0x2e8);\n                            arg1 = *(*0x20 + -0x70);\n                            uVar10 = *(*0x20 + -0x333);\n                            uVar16 = *(*0x20 + -0x331);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x300);\n                            arg3 = *(*0x20 + -0xe8);\n                            ppcVar21 = *(*0x20 + 0x48);\n                            in_R10 = *(*0x20 + -0x332);\n                            in_R11 = *(*0x20 + 0x38);\n                            iVar6 = *(*0x20 + -0xc0);\n                            uVar23 = *(*0x20 + -0xb0);\n                            iVar9 = *(*0x20 + -0x2c0);\n                        }\n                        puVar18 = unaff_RDI;\n                        if (uVar20 == 0) goto code_r0x00451796;\n                        iVar9 = *(*0x20 + -0x50);\n                        if (((puVar13 != NULL) || ((*(*0x20 + 8) >> 1 & 1) == 0)) && (uVar10 == '\\0')) {\n                            *(*0x20 + -0x308) = iVar9;\n                            *(*0x20 + -0x368) = 0x45163e;\n                            iVar9 = fcn.0044acc0();\n                            if (iVar9 != *(*0x20 + -0x308)) {\n                                iVar9 = *(*0x20 + -0x308) + -1;\n                                puVar13 = *(*0x20 + -0x2e8);\n                                arg1 = *(*0x20 + -0x70);\n                                uVar10 = *(*0x20 + -0x333);\n                                uVar16 = *(*0x20 + -0x331);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                unaff_RDI = *(*0x20 + -0x300);\n                                arg3 = *(*0x20 + -0xe8);\n                                in_R10 = *(*0x20 + -0x332);\n                                in_R11 = *(*0x20 + 0x38);\n                                iVar6 = *(*0x20 + -0xc0);\n                                iVar7 = *(*0x20 + -0x308);\n                                goto code_r0x004516f8;\n                            }\n                            puVar13 = *(*0x20 + -0x2e8);\n                            arg1 = *(*0x20 + -0x70);\n                            uVar10 = *(*0x20 + -0x333);\n                            uVar16 = *(*0x20 + -0x331);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x300);\n                            arg3 = *(*0x20 + -0xe8);\n                            iVar9 = *(*0x20 + -0x308);\n                            in_R10 = *(*0x20 + -0x332);\n                            in_R11 = *(*0x20 + 0x38);\n                            iVar6 = *(*0x20 + -0xc0);\n                        }\n                        iVar7 = iVar9 + 1;\ncode_r0x004516f8:\n                        uVar15 = uVar16;\n                        *(*0x20 + -0x310) = iVar9;\n                        if (*(iVar6 + 0x27) < 4) {\n                            *(*0x20 + -0x2b0) = puVar13;\n                            *(*0x20 + -0x108) = 0;\n                            puVar13 = *(*0x20 + -0x2b0);\n                        }\n                        else {\n                            uVar14 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x34);\n                            in_R10 = *(*0x20 + -0x332);\n                            *(*0x20 + -0x108) = uVar14 + *(*(*0x20 + -200) + 0x130) & (uVar14 == 0xffffffff) - 1;\n                        }\n                        arg4 = *(*0x20 + -0x108);\n                        if (arg4 != 0) goto code_r0x00452259;\n                        arg4 = *(*0x20 + -0x250);\n                        do {\n                            if (((*(iVar6 + 0x24) != '\\x15') || (cVar4 = uVar16,  cVar4 == '\\t')) ||\n                               ((cVar4 == '\\x12' || (cVar4 == '\\x0e')))) {\n                                if (arg4 < 1) {\n                                    if (puVar13 < unaff_RSI) {\n                                        if (0xfffff < puVar13) {\n                                            *(*0x20 + -0x368) = 0x45244f;\n                                            fcn.0045ca40(0x100000);\ncode_r0x0045244f:\n                                            *(*0x20 + -0x368) = 0x452459;\n                                            fcn.0045ca40(0x100000);\ncode_r0x00452459:\n                                            arg1 = 0x100000;\n                                            *(*0x20 + -0x368) = 0x452465;\n                                            fcn.0045ca40(0x100000);\n                                            goto code_r0x00452465;\n                                        }\n                                        *(in_R11 + puVar13 * 8) = iVar7;\n                                        puVar13 = puVar13 + 1;\n                                    }\n                                }\n                                else {\n                                    arg4 = arg4 - 1;\n                                }\n                            }\n                            uVar16 = *(iVar6 + 0x24);\n                            puVar13 = puVar13 + -1;\n                            uVar23 = *(*0x20 + -0xb0);\n                            iVar9 = *(*0x20 + -0x2c0);\n                            *(*0x20 + -0x250) = arg4;\n                            ppcVar21 = *(*0x20 + 0x48);\n                            puVar18 = unaff_RDI;\ncode_r0x00451796:\n                            if (in_R10 == '\\0') goto code_r0x004518fa;\n                            *(*0x20 + -0x32d) = uVar16;\n                            *(*0x20 + -600) = puVar13;\n                            unaff_RDI = *(*0x20 + -0x50);\n                            *(*0x20 + -0x318) = unaff_RDI;\n                            if ((puVar13 < 1) && (in_R11 = *(*0x20 + 8),  (in_R11 >> 1 & 1) != 0)) {\n                                *(*0x20 + -0x2b8) = puVar13;\n                                *(*0x20 + -0x32e) = 0;\n                                puVar13 = *(*0x20 + -0x2b8);\n                            }\n                            else {\n                                *(*0x20 + -0x368) = 0x4517f8;\n                                uVar20 = fcn.0044acc0();\n                                puVar13 = *(*0x20 + -600);\n                                uVar10 = *(*0x20 + -0x333);\n                                uVar16 = *(*0x20 + -0x32d);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                puVar18 = *(*0x20 + -0x300);\n                                arg3 = *(*0x20 + -0xe8);\n                                unaff_RDI = *(*0x20 + -0x318);\n                                in_R11 = *(*0x20 + 8);\n                                iVar6 = *(*0x20 + -0xc0);\n                                uVar23 = *(*0x20 + -0xb0);\n                                iVar9 = *(*0x20 + -0x2c0);\n                                *(*0x20 + -0x32e) = uVar20 <= *(*0x20 + -0x50) && *(*0x20 + -0x50) != uVar20;\n                                arg1 = *(*0x20 + -0x70);\n                            }\n                            uVar14 = uVar16;\n                            if ((*(*0x20 + -0x32e) != '\\0') && (uVar10 == '\\0')) {\n                                unaff_RDI = unaff_RDI + -1;\n                            }\n                            if (*(iVar6 + 0x27) < 4) {\n                                uVar20 = 0;\n                            }\n                            else {\n                                uVar1 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x34);\n                                uVar20 = uVar1 + *(*(*0x20 + -200) + 0x130) & (uVar1 == 0xffffffff) - 1;\n                                iVar9 = *(*0x20 + -0x2c0);\n                                uVar10 = uVar23;\n                            }\n                            if (uVar20 == 0) goto code_r0x00451e17;\n                            *(*0x20 + -0x110) = uVar20;\n                            *(*0x20 + -0x238) = in_XMM15;\n                            *(*0x20 + -0x230) = in_XMM15;\n                            *(*0x20 + -0x220) = in_XMM15;\n                            while( true ) {\n                                *(*0x20 + -0x278) = puVar18;\n                                *(*0x20 + -0x331) = uVar16;\n                                *(*0x20 + -0x318) = unaff_RDI;\n                                *(*0x20 + -0x368) = 0x451c1b;\n                                in_R10 = unaff_RDI;\n                                iVar5 = fcn.0044bfc0(2);\n                                if (iVar5 < 0) {\n                                    puVar13 = *(*0x20 + -600);\n                                    arg1 = *(*0x20 + -0x70);\n                                    unaff_RSI = *(*0x20 + 0x40);\n                                    arg3 = *(*0x20 + -0xe8);\n                                    in_R11 = *(*0x20 + 8);\n                                    iVar6 = *(*0x20 + -0xc0);\n                                    uVar23 = *(*0x20 + -0xb0);\n                                    iVar9 = *(*0x20 + -0x2c0);\n                                    uVar14 = *(*0x20 + -0x331);\n                                    unaff_RDI = *(*0x20 + -0x318);\n                                    puVar18 = *(*0x20 + -0x278);\n                                    goto code_r0x00451e17;\n                                }\n                                uVar10 = iVar5;\n                                if (0xfffff < uVar10) break;\n                                *(*0x20 + -0x280) = uVar10 * 5;\n                                iVar9 = *(*0x20 + -0x110);\n                                *(*0x20 + -0x234) = *(iVar9 + 0xc + uVar10 * 0x14);\n                                *(*0x20 + -0x214) = *(iVar9 + uVar10 * 0x14 + 2);\n                                *(*0x20 + -0xa8) = iVar9 + uVar10 * 0x14;\n                                in_R11 = *(*0x20 + 8);\n                                if ((in_R11 & 1) == 0) {\n                                    arg3 = *(*0x20 + -0x331);\n                                    *(*0x20 + -0x368) = 0x451cb9;\n                                    cVar4 = fcn.00453ca0(*(*0x20 + -0x70), *(*0x20 + -0x278), arg3);\n                                    if (cVar4 != '\\0') goto code_r0x00451cc8;\n                                    iVar9 = *(*0x20 + -0x278);\n                                }\n                                else {\ncode_r0x00451cc8:\n                                    uVar8 = *(*0x20 + -200);\n                                    *(*0x20 + -0x368) = 0x451cdd;\n                                    uVar11 = fcn.0044b920();\n                                    *(*0x20 + -0xf8) = uVar11;\n                                    *(*0x20 + -0x2f0) = uVar8;\n                                    uVar8 = *(*0x20 + -0x318);\n                                    uVar11 = *(*0x20 + -200);\n                                    *(*0x20 + -0x368) = 0x451d05;\n                                    uVar12 = fcn.0044bd60(uVar8);\n                                    *(*0x20 + -0xd8) = uVar12;\n                                    *(*0x20 + -0x2d0) = uVar11;\n                                    *(*0x20 + -0x328) = uVar8;\n                                    *(*0x20 + -0x368) = 0x451d1e;\n                                    fcn.00434840();\n                                    *(*0x20 + -0x368) = 0x451d30;\n                                    fcn.00435140();\n                                    *(*0x20 + -0x368) = 0x451d45;\n                                    fcn.00435140();\n                                    *(*0x20 + -0x368) = 0x451d4a;\n                                    fcn.004348c0();\n                                    *(*0x20 + -0x368) = 0x451d4f;\n                                    fcn.00434840();\n                                    *(*0x20 + -0x368) = 0x451d65;\n                                    fcn.00435140();\n                                    *(*0x20 + -0x368) = 0x451d7a;\n                                    fcn.00435140();\n                                    *(*0x20 + -0x368) = 0x451d8b;\n                                    fcn.00435140();\n                                    *(*0x20 + -0x368) = 0x451d97;\n                                    fcn.00434f40(*(*0x20 + -0x328));\n                                    *(*0x20 + -0x368) = 0x451d9c;\n                                    fcn.00434aa0();\n                                    *(*0x20 + -0x368) = 0x451da5;\n                                    fcn.004348c0();\n                                    iVar9 = *(*0x20 + -0x278) + 1;\n                                }\n                                *(*0x20 + -0x278) = iVar9;\n                                *(*0x20 + -0x331) = *(*(*0x20 + -0xa8) + 2);\n                                *(*0x20 + -0x368) = 0x451bbc;\n                                iVar9 = fcn.0044acc0();\n                                uVar10 = *(*0x20 + -0x110);\n                                unaff_RDI = *(uVar10 + *(*0x20 + -0x280) * 4 + 0x10) + iVar9;\n                                uVar16 = *(*0x20 + -0x331);\n                                puVar18 = *(*0x20 + -0x278);\n                            }\n                            *(*0x20 + -0x368) = 0x4521e6;\n                            uVar10 = fcn.0045ca40(0x100000);\n                            while( true ) {\n                                *(*0x20 + -0x250) = arg3;\n                                *(*0x20 + -600) = uVar10;\n                                *(*0x20 + -0x331) = unaff_RDI[2];\n                                *(*0x20 + -0x368) = 0x452218;\n                                iVar9 = fcn.0044acc0();\n                                arg4 = *(*(*0x20 + -0x108) + *(*0x20 + -0x278) * 4 + 0x10) + iVar9;\n                                iVar7 = *(*(*0x20 + -0x108) + *(*0x20 + -0x278) * 4 + 0x10) + iVar9 + 1;\n                                *(*0x20 + -0x310) = arg4;\n                                uVar15 = *(*0x20 + -0x331);\n                                puVar13 = *(*0x20 + -600);\ncode_r0x00452259:\n                                *(*0x20 + -0x260) = iVar7;\n                                *(*0x20 + -600) = puVar13;\n                                *(*0x20 + -0x331) = uVar15;\n                                unaff_RDI = *(*0x20 + -0x310);\n                                unaff_RSI = *0x20 + -0x210;\n                                *(*0x20 + -0x368) = 0x45228f;\n                                iVar5 = fcn.0044bfc0(2);\n                                if (iVar5 < 0) break;\n                                uVar10 = iVar5;\n                                if (0xfffff < uVar10) goto code_r0x00452459;\n                                *(*0x20 + -0x278) = uVar10 * 5;\n                                unaff_RSI = *(*0x20 + -0x108);\n                                unaff_RDI = unaff_RSI + uVar10 * 0x14;\n                                if ((((unaff_RSI[uVar10 * 0x14 + 2] == '\\x15') &&\n                                     (cVar4 = *(*0x20 + -0x331),  cVar4 != '\\t')) && (cVar4 != '\\x12')) &&\n                                   (cVar4 != '\\x0e')) {\n                                    uVar10 = *(*0x20 + -600);\n                                    arg3 = *(*0x20 + -0x250);\n                                }\n                                else {\n                                    arg3 = *(*0x20 + -0x250);\n                                    if (arg3 < 1) {\n                                        arg4 = *(*0x20 + 0x40);\n                                        uVar10 = *(*0x20 + -600);\n                                        if (uVar10 < arg4) {\n                                            if (0xfffff < uVar10) goto code_r0x0045244f;\n                                            in_R10 = *(*0x20 + 0x38);\n                                            *(in_R10 + uVar10 * 8) = *(*0x20 + -0x260);\n                                            uVar10 = uVar10 + 1;\n                                        }\n                                        else {\n                                            in_R10 = *(*0x20 + 0x38);\n                                        }\n                                    }\n                                    else {\n                                        arg3 = arg3 - 1;\n                                        in_R10 = *(*0x20 + 0x38);\n                                        uVar10 = *(*0x20 + -600);\n                                    }\n                                }\n                            }\n                            arg1 = *(*0x20 + -0x70);\n                            uVar10 = *(*0x20 + -0x333);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x300);\n                            arg3 = *(*0x20 + -0xe8);\n                            in_R10 = *(*0x20 + -0x332);\n                            in_R11 = *(*0x20 + 0x38);\n                            iVar6 = *(*0x20 + -0xc0);\n                            uVar16 = *(*0x20 + -0x331);\n                            puVar13 = *(*0x20 + -600);\n                            iVar7 = *(*0x20 + -0x260);\n                            arg4 = *(*0x20 + -0x250);\n                        } while( true );\n                    }\n                }\ncode_r0x004519f0:\n                while( true ) {\n                    if (*(*0x20 + -0x332) != '\\0') {\n                        puVar13 = puVar18;\n                    }\n                    if ((*(*0x20 + 0x48) == 0) || (unaff_RSI <= puVar13)) break;\n                    iVar9 = *(arg1 + 0x80);\n                    if (iVar9 == *(*0x20 + -0x38)) {\n                        return puVar13;\n                    }\n                    *(*0x20 + -0x240) = *(*0x20 + -0x38);\n                    *(*0x20 + -0x248) = iVar9;\n                    *(*0x20 + -0x2e8) = puVar13;\n                    *(*0x20 + -0x268) = *(arg1 + 0x98);\n                    *(*0x20 + -0x368) = 0x451a5e;\n                    fcn.00434840();\n                    *(*0x20 + -0x368) = 0x451a6f;\n                    fcn.00435140();\n                    *(*0x20 + -0x368) = 0x451a7c;\n                    fcn.00434f40();\n                    *(*0x20 + -0x368) = 0x451a8d;\n                    fcn.00435140();\n                    *(*0x20 + -0x368) = 0x451a9a;\n                    fcn.00434fa0();\n                    *(*0x20 + -0x368) = 0x451aab;\n                    fcn.00435140();\n                    *(*0x20 + -0x368) = 0x451ab8;\n                    fcn.00434fa0();\n                    *(*0x20 + -0x368) = 0x451abd;\n                    fcn.00434aa0();\n                    *(*0x20 + -0x368) = 0x451ac5;\n                    fcn.004348c0();\n                    arg1 = **(*0x20 + -0x70);\n                    *(*0x20 + -0x240) = arg1;\n                    *(*0x20 + -0x248) = (*(*0x20 + -0x70))[1];\n                    *(*0x20 + -0x368) = 0x451ae9;\n                    fcn.00434840();\n                    *(*0x20 + -0x368) = 0x451afa;\n                    fcn.00435140();\n                    *(*0x20 + -0x368) = 0x451b07;\n                    fcn.00434fa0();\n                    *(*0x20 + -0x368) = 0x451b18;\n                    fcn.00435140();\n                    *(*0x20 + -0x368) = 0x451b25;\n                    fcn.00434fa0();\n                    *(*0x20 + -0x368) = 0x451b36;\n                    fcn.00435140();\n                    *(*0x20 + -0x368) = 0x451b45;\n                    fcn.00434f40();\n                    *(*0x20 + -0x368) = 0x451b56;\n                    fcn.00435140();\n                    *(*0x20 + -0x368) = 0x451b65;\n                    fcn.00434f40();\n                    *(*0x20 + -0x368) = 0x451b6a;\n                    fcn.00434aa0();\n                    *(*0x20 + -0x368) = 0x451b6f;\n                    fcn.004348c0();\n                    *(*0x20 + -0x368) = 0x451b85;\n                    puVar13 = in_R10;\n                    fcn.004330a0();\n                    in_R10 = puVar13;\n                }\n                return puVar13;\n            }\n            goto code_r0x004524e5;\n        }\n        goto code_r0x004524f6;\n    }\n    goto code_r0x00452508;\ncode_r0x00451e17:\n    *(*0x20 + -0x278) = puVar18;\n    *(*0x20 + -0x318) = unaff_RDI;\n    if ((in_R11 & 1) == 0) {\n        *(*0x20 + -0x368) = 0x451e53;\n        cVar4 = fcn.00453ca0(arg1, uVar10 & 0xffffffffffffff00 | puVar18 == NULL, uVar14);\n        arg1 = *(*0x20 + -0x70);\n        unaff_RSI = *(*0x20 + 0x40);\n        puVar18 = *(*0x20 + -0x278);\n        arg3 = *(*0x20 + -0xe8);\n        iVar6 = *(*0x20 + -0xc0);\n        uVar23 = *(*0x20 + -0xb0);\n        iVar9 = *(*0x20 + -0x2c0);\n        puVar13 = *(*0x20 + -600);\n    }\n    else {\n        cVar4 = '\\x01';\n    }\n    if (cVar4 != '\\0') {\n        uVar8 = *(*0x20 + -200);\n        *(*0x20 + -0x368) = 0x451eba;\n        uVar11 = fcn.0044b920();\n        *(*0x20 + -0x100) = uVar11;\n        *(*0x20 + -0x2f8) = uVar8;\n        uVar8 = *(*0x20 + -0x318);\n        uVar11 = *(*0x20 + -200);\n        *(*0x20 + -0x368) = 0x451ee5;\n        uVar12 = fcn.0044bd60(uVar8);\n        *(*0x20 + -0xe0) = uVar12;\n        *(*0x20 + -0x2d8) = uVar11;\n        *(*0x20 + -0x32c) = uVar8;\n        iVar9 = *(*0x20 + -0x2f8);\n        if (iVar9 == 0xf) {\n            piVar19 = *(*0x20 + -0x100);\n            if ((((*piVar19 == 0x2e656d69746e7572) && (*(piVar19 + 1) == 0x61706f67)) && (*(piVar19 + 0xc) == 0x696e))\n               && (*(piVar19 + 0xe) == 'c')) {\n                iVar9 = 5;\n                piVar19 = 0x4c7d4c;\n            }\n        }\n        else {\n            piVar19 = *(*0x20 + -0x100);\n        }\n        *(*0x20 + -0x2f8) = iVar9;\n        *(*0x20 + -0x100) = piVar19;\n        *(*0x20 + -0x368) = 0x451f5c;\n        fcn.00434840();\n        *(*0x20 + -0x368) = 0x451f6e;\n        fcn.00435140();\n        *(*0x20 + -0x368) = 0x451f7f;\n        fcn.00435140();\n        *(*0x20 + -0x368) = 0x451f85;\n        fcn.004348c0();\n        *(*0x20 + -0x368) = 0x451fa7;\n        fcn.00452580(*(*0x20 + -0x20));\n        *(*0x20 + -0x368) = 0x451fac;\n        fcn.00434840();\n        *(*0x20 + -0x368) = 0x451fbd;\n        fcn.00435140();\n        *(*0x20 + -0x368) = 0x451fc5;\n        fcn.004348c0();\n        *(*0x20 + -0x368) = 0x451fca;\n        fcn.00434840();\n        *(*0x20 + -0x368) = 0x451fdb;\n        fcn.00435140();\n        *(*0x20 + -0x368) = 0x451ff0;\n        fcn.00435140();\n        *(*0x20 + -0x368) = 0x452005;\n        fcn.00435140();\n        *(*0x20 + -0x368) = 0x452011;\n        fcn.00434f40();\n        *(*0x20 + -0x368) = 0x452016;\n        fcn.004348c0();\n        *(*0x20 + -0x368) = 0x45202d;\n        uVar10 = fcn.0044acc0();\n        if (uVar10 <= *(*0x20 + -0x50) && *(*0x20 + -0x50) != uVar10) {\n            *(*0x20 + -0x368) = 0x45204e;\n            uVar8 = fcn.0044acc0();\n            *(*0x20 + -800) = uVar8;\n            *(*0x20 + -0x260) = *(*0x20 + -0x50);\n            *(*0x20 + -0x368) = 0x452068;\n            fcn.00434840();\n            *(*0x20 + -0x368) = 0x452079;\n            fcn.00435140();\n            *(*0x20 + -0x368) = 0x45208e;\n            fcn.00434fa0(*(*0x20 + -800));\n            *(*0x20 + -0x368) = 0x452093;\n            fcn.004348c0();\n        }\n        iVar9 = *(*(*0x20 + -0x70) + 0x30);\n        if ((((iVar9 != 0) && (0 < *(iVar9 + 0xc4))) && (*(iVar9 + 0x90) == *(*0x20 + -0x70))) ||\n           (1 < *(*0x20 + -0x324))) {\n            *(*0x20 + -0x260) = *(*0x20 + -0x30);\n            *(*0x20 + -0x288) = *(*0x20 + -0x38);\n            *(*0x20 + -0x290) = *(*0x20 + -0x50);\n            *(*0x20 + -0x368) = 0x4520fe;\n            fcn.00434840();\n            *(*0x20 + -0x368) = 0x45210f;\n            fcn.00435140();\n            *(*0x20 + -0x368) = 0x45211c;\n            fcn.00434fa0();\n            *(*0x20 + -0x368) = 0x45212d;\n            fcn.00435140();\n            *(*0x20 + -0x368) = 0x45213a;\n            fcn.00434fa0();\n            *(*0x20 + -0x368) = 0x45214b;\n            fcn.00435140();\n            *(*0x20 + -0x368) = 0x452158;\n            fcn.00434fa0();\n            *(*0x20 + -0x368) = 0x45215d;\n            fcn.004348c0();\n        }\n        *(*0x20 + -0x368) = 0x452165;\n        fcn.00434840();\n        *(*0x20 + -0x368) = 0x45216a;\n        fcn.00434aa0();\n        *(*0x20 + -0x368) = 0x45216f;\n        fcn.004348c0();\n        puVar18 = *(*0x20 + -0x278) + 1;\n        puVar13 = *(*0x20 + -600);\n        arg1 = *(*0x20 + -0x70);\n        unaff_RSI = *(*0x20 + 0x40);\n        arg3 = *(*0x20 + -0xe8);\n        iVar6 = *(*0x20 + -0xc0);\n        uVar23 = *(*0x20 + -0xb0);\n        iVar9 = *(*0x20 + -0x2c0);\n    }\n    uVar16 = *(iVar6 + 0x24);\n    ppcVar21 = *(*0x20 + 0x48);\ncode_r0x004518fa:\n    puVar13 = puVar13 + 1;\n    if ((*(iVar6 + 0x24) == '\\x04') && (iVar9 != 0)) {\n        *(*0x20 + -0x2c8) = *((uVar23 - 8) + iVar9 * 8);\n        in_R11 = *(*0x20 + -0x250);\n        if ((in_R11 == 0) && (ppcVar21 == NULL)) {\n            *(*0x20 + -0x270) = puVar18;\n            *(*0x20 + -0x32f) = uVar16;\n            *(*0x20 + -0x368) = 0x45195a;\n            puVar13 = fcn.00452cc0(*(*0x20 + -0x2c8));\n            arg1 = *(*0x20 + -0x70);\n            uVar16 = *(*0x20 + -0x32f);\n            unaff_RSI = *(*0x20 + 0x40);\n            puVar18 = *(*0x20 + -0x270);\n            arg3 = *(*0x20 + -0xe8);\n            in_R11 = *(*0x20 + -0x250);\n            iVar6 = *(*0x20 + -0xc0);\n            uVar23 = *(*0x20 + -0xb0);\n            iVar9 = *(*0x20 + -0x2c0);\n        }\n        iVar9 = iVar9 + -1;\n    }\n    else {\n        in_R11 = *(*0x20 + -0x250);\n    }\n    uVar10 = *(iVar6 + 0x24);\n    in_R10 = puVar13;\n    if (arg3 == 0) goto code_r0x004519f0;\ncode_r0x00450d0f:\n    *(*0x20 + -0x60) = arg3;\n    *(*0x20 + -0x58) = *(*0x20 + -0xd0);\n    *(*0x20 + -0x50) = *(*0x20 + -0x40);\n    *(*0x20 + -0x40) = 0;\n    uVar20 = *(*0x20 + -0x30);\n    *(*0x20 + -0x38) = uVar20;\n    *(*0x20 + -0x30) = 0;\n    *(*0x20 + -0x10) = 0;\n    arg4 = *(*0x20 + -0x240);\n    arg3 = 0;\n    uVar10 = uVar20 & 0xffffff00 | uVar10 == '\\x12';\n    in_R10 = *(*0x20 + -0x248);\n    unaff_RDI = puVar18;\n    goto code_r0x00450d8f;\ncode_r0x00452465:\n    *(*0x20 + -0x368) = 0x452476;\n    fcn.004330a0();\ncode_r0x00452476:\n    uVar8 = *(*0x20 + -200);\n    *(*0x20 + -0x368) = 0x452486;\n    uVar11 = fcn.0044b920();\n    *(*0x20 + -0xa0) = uVar11;\n    *(*0x20 + -0x250) = uVar8;\n    *(*0x20 + -0x368) = 0x45249b;\n    fcn.00434840();\n    *(*0x20 + -0x368) = 0x4524ac;\n    fcn.00435140();\n    *(*0x20 + -0x368) = 0x4524c5;\n    fcn.00435140();\n    *(*0x20 + -0x368) = 0x4524ca;\n    fcn.00434aa0();\n    *(*0x20 + -0x368) = 0x4524cf;\n    fcn.004348c0();\n    *(*0x20 + -0x368) = 0x4524e5;\n    fcn.004330a0();\ncode_r0x004524e5:\n    *(*0x20 + -0x368) = 0x4524f6;\n    fcn.004330a0();\ncode_r0x004524f6:\n    unaff_RBX = 0x37;\n    *(*0x20 + -0x368) = 0x452507;\n    in_RAX = fcn.004330a0();\ncode_r0x00452508:\n    *(puVar17 + 0x10) = in_RAX;\n    *(puVar17 + 0x18) = unaff_RBX;\n    *(puVar17 + 0x20) = arg1;\n    *(puVar17 + 0x28) = unaff_RDI;\n    *(puVar17 + 0x30) = unaff_RSI;\n    *(puVar17 + 0x38) = arg3;\n    *(puVar17 + 0x40) = arg4;\n    *(puVar17 + 0x48) = in_R10;\n    *(puVar17 + 0x50) = in_R11;\n    *(puVar17 + -8) = 0x45253a;\n    fcn.0045a360();\n    in_RAX = *(puVar17 + 0x10);\n    unaff_RBX = *(puVar17 + 0x18);\n    arg1 = *(puVar17 + 0x20);\n    unaff_RDI = *(puVar17 + 0x28);\n    unaff_RSI = *(puVar17 + 0x30);\n    arg3 = *(puVar17 + 0x38);\n    arg4 = *(puVar17 + 0x40);\n    in_R10 = *(puVar17 + 0x48);\n    in_R11 = *(puVar17 + 0x50);\n    *0x20 = puVar17;\n    goto code_r0x00450a40;\n}\n",
        "token_count": 13802
    },
    "004532a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004532a0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar auStack312 [256];\n    ulong *puStack56;\n    ulong uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    while (auStack312 < *(unaff_R14 + 0x10) || auStack312 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (((((*0x5d3b2d != '\\0') && (iVar1 = *(unaff_RDI + 0x30),  iVar1 != 0)) && (0 < *(iVar1 + 0x108))) &&\n        ((*(unaff_RDI + 0x70) != 0 && (*(iVar1 + 0x110) != NULL)))) && (**(iVar1 + 0x110) != 0)) {\n        *(iVar1 + 0x10c) = 1;\n        iVar1 = fcn.0045cfc0();\n        **(*(iVar1 + 0x30) + 0x110) = 0;\n        *(*(iVar1 + 0x30) + 0x10c) = 0;\n        fcn.004546a0();\n    }\n    if ((*(unaff_RDI + 0x90) & 0xffffefff) == 3) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar1 = *(unaff_RDI + 0x30);\n    if ((iVar1 != 0) && (*(iVar1 + 0x2f0) != 0)) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar1 = fcn.00450a40(arg1, iVar1, 0, 100);\n    if ((iVar1 == 0) && ((unaff_RSI & 1) == 0)) {\n        iVar1 = fcn.00450a40(arg1, unaff_RSI | 1, 0, 100);\n    }\n    if (iVar1 == 100) {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.004348c0();\n    }\n    fcn.00452f40();\n    puStack56 = *(unaff_RDI + 0x130);\n    if (puStack56 == NULL) {\n        return;\n    }\n    iVar1 = puStack56[1];\n    puStack56 = *puStack56;\n    if (iVar1 != 0) {\n        iVar2 = 0;\n        while( true ) {\n            uStack48 = *puStack56;\n            uStack40 = *(puStack56 + 1);\n            uStack36 = *(puStack56 + 0xc);\n            uStack32 = *(puStack56 + 2);\n            uStack28 = *(puStack56 + 0x14);\n            uStack24 = *(puStack56 + 3);\n            uStack20 = *(puStack56 + 0x1c);\n            uStack16 = *(puStack56 + 4);\n            uStack12 = *(puStack56 + 0x24);\n            fcn.00453600(puStack56[2]);\n            iVar2 = iVar2 + 1;\n            if (iVar1 <= iVar2) break;\n            puStack56 = puStack56 + 5;\n        }\n    }\n    return;\n}\n",
        "token_count": 831
    },
    "004537c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004537c0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t *piVar8;\n    int64_t unaff_R14;\n    \n    do {\n        iVar6 = unaff_RBX;\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x80) = 0x4537ff;\n            uVar3 = fcn.0044b920();\n            iVar6 = *(*0x20 + -0x10);\n            if (*(iVar6 + 0x27) < 4) {\n                iVar6 = *(*0x20 + -0x18);\n                uVar5 = 0;\n            }\n            else {\n                uVar1 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x34);\n                iVar6 = *(*0x20 + -0x18);\n                uVar5 = uVar1 + *(iVar6 + 0x130) & (uVar1 == 0xffffffff) - 1;\n            }\n            if (uVar5 == 0) goto code_r0x004538be;\n            *(*0x20 + -0x30) = uVar5;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar3;\n            *(*0x20 + -0x80) = 0x453873;\n            iVar2 = fcn.0044bfc0(2);\n            if (iVar2 < 0) {\n                unaff_RBX = *(*0x20 + -0x40);\n                uVar3 = *(*0x20 + -0x28);\n                goto code_r0x004538b4;\n            }\n            if (iVar2 < 0x100000) {\n                uVar1 = *(*(*0x20 + -0x30) + 0xc + iVar2 * 0x14);\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x80) = 0x4538a8;\n                uVar3 = fcn.0044ba80(uVar1);\ncode_r0x004538b4:\n                iVar6 = *(*0x20 + -0x18);\ncode_r0x004538be:\n                *(*0x20 + -0x40) = unaff_RBX;\n                *(*0x20 + -0x28) = uVar3;\n                uVar3 = *(*0x20 + 0x18);\n                *(*0x20 + -0x80) = 0x4538e5;\n                uVar4 = fcn.0044bc40(uVar3);\n                *(*0x20 + -0x20) = uVar4;\n                *(*0x20 + -0x38) = iVar6;\n                *(*0x20 + -0x4c) = uVar3;\n                iVar6 = *(*0x20 + -0x40);\n                if (iVar6 == 0xf) {\n                    piVar8 = *(*0x20 + -0x28);\n                    if ((((*piVar8 == 0x2e656d69746e7572) && (*(piVar8 + 1) == 0x61706f67)) &&\n                        (*(piVar8 + 0xc) == 0x696e)) && (*(piVar8 + 0xe) == 'c')) {\n                        iVar6 = 5;\n                        piVar8 = 0x4c7d4c;\n                    }\n                }\n                else {\n                    piVar8 = *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = iVar6;\n                *(*0x20 + -0x28) = piVar8;\n                *(*0x20 + -0x80) = 0x45394b;\n                fcn.00434840();\n                *(*0x20 + -0x80) = 0x45395a;\n                fcn.00435140();\n                *(*0x20 + -0x80) = 0x45396b;\n                fcn.00435140();\n                *(*0x20 + -0x80) = 0x453970;\n                fcn.004348c0();\n                *(*0x20 + -0x80) = 0x453975;\n                fcn.00434840();\n                *(*0x20 + -0x80) = 0x453986;\n                fcn.00435140();\n                *(*0x20 + -0x80) = 0x453995;\n                fcn.00435140();\n                *(*0x20 + -0x80) = 0x4539a6;\n                fcn.00435140();\n                *(*0x20 + -0x80) = 0x4539b2;\n                fcn.00434f40();\n                *(*0x20 + -0x80) = 0x4539b7;\n                fcn.004348c0();\n                *(*0x20 + -0x80) = 0x4539c8;\n                uVar5 = fcn.0044acc0();\n                if (uVar5 < *(*0x20 + 0x18)) {\n                    *(*0x20 + -0x80) = 0x4539e6;\n                    uVar3 = fcn.0044acc0();\n                    *(*0x20 + -0x48) = uVar3;\n                    *(*0x20 + -0x80) = 0x4539f0;\n                    fcn.00434840();\n                    *(*0x20 + -0x80) = 0x453a05;\n                    fcn.00435140();\n                    *(*0x20 + -0x80) = 0x453a1a;\n                    fcn.00434fa0(*(*0x20 + -0x48));\n                    *(*0x20 + -0x80) = 0x453a1f;\n                    fcn.004348c0();\n                }\n                *(*0x20 + -0x80) = 0x453a25;\n                fcn.00434840();\n                *(*0x20 + -0x80) = 0x453a2a;\n                fcn.00434aa0();\n                *(*0x20 + -0x80) = 0x453a2f;\n                fcn.004348c0();\n                return;\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x80) = 0x453a45;\n            in_RAX = fcn.0045ca40(0x100000);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = iVar6;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x453a5a;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1820
    },
    "00453f40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453f40(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = *(in_RAX + 0x90);\n    uVar2 = uVar1 & 0xffffefff;\n    if (((uVar2 == 4) || (uVar2 == 3)) && (*(in_RAX + 0xa8) != 0)) {\n        fcn.0045e320();\n        iVar3 = (iStack64 - *(in_RAX + 0xa8)) / 60000000000;\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434f40();\n    fcn.00435140();\n    fcn.00435140();\n    fcn.004348c0();\n    if ((uVar1 >> 0xc & 1) != 0) {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.004348c0();\n    }\n    if (0 < iVar3) {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434f40();\n        fcn.00435140();\n        fcn.004348c0();\n    }\n    if (*(in_RAX + 0xe8) != 0) {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.004348c0();\n    }\n    fcn.00434840();\n    fcn.00435140();\n    fcn.004348c0();\n    return;\n}\n",
        "token_count": 444
    },
    "00456ac0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00456ac0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    \n    if (unaff_RBX <= arg1) {\n        return 0xfffd;\n    }\n    if (arg1 <= unaff_RBX) {\n        iVar7 = unaff_RBX - arg1;\n        unaff_RBX = -iVar7 >> 0x3f & arg1;\n        if (iVar7 != 0) {\n            uVar1 = *(in_RAX + unaff_RBX);\n            if (0xbf < uVar1) {\n                uVar5 = uVar1;\n                if (uVar1 < 0xe0) {\n                    if (((1 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                       ((uVar1 < 0xc0 && (uVar5 = uVar1 & 0x3f | (uVar5 & 0x1f) << 6,  0x7f < uVar5)))) {\n                        return uVar5;\n                    }\n                }\n                else if (uVar1 < 0xf0) {\n                    if ((((2 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) && (uVar1 < 0xc0)) &&\n                       ((uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2 && (uVar2 < 0xc0)))) {\n                        uVar5 = uVar2 & 0x3f | (uVar1 & 0x3f) << 6 | (uVar5 & 0xf) << 0xc;\n                        if ((0x7ff < uVar5) && (0x7ff < uVar5 - 0xd800)) {\n                            return uVar5;\n                        }\n                    }\n                }\n                else if ((((((uVar1 < 0xf8) && (3 < iVar7)) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                          ((uVar1 < 0xc0 && (uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2)))) &&\n                         ((uVar2 < 0xc0 && ((uVar3 = *(in_RAX + 3 + unaff_RBX),  0x7f < uVar3 && (uVar3 < 0xc0)))))) &&\n                        (uVar5 = uVar3 & 0x3f | (uVar5 & 7) << 0x12 | (uVar1 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6, \n                        uVar5 - 0x10000 < 0x100000)) {\n                    return uVar5;\n                }\n            }\n            return 0xfffd;\n        }\n        fcn.0045ca40(0);\n    }\n    fcn.0045cb00(unaff_RBX);\n    pcVar4 = swi(3);\n    uVar6 = (*pcVar4)();\n    return uVar6;\n}\n",
        "token_count": 801
    },
    "00456ca0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00456ca0(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x00456dec;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x00456d40;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.0045ca40(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x00456d40:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.0045ca40(unaff_RBX);\n    }\n    fcn.0045ca40(unaff_RBX);\ncode_r0x00456dec:\n    fcn.0045ca40(unaff_RBX);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 596
    },
    "00457d60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00457d60(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (unaff_RBX < 4) {\n        if (unaff_RBX == 0) {\ncode_r0x00457df6:\n            uVar1 = 4;\n            goto code_r0x00457e32;\n        }\n        if (((unaff_RBX == 3) && (*in_RAX == 0x6c61)) && (*(in_RAX + 2) == 'l')) {\n            uVar1 = 6;\n            goto code_r0x00457e32;\n        }\n    }\n    else if (unaff_RBX == 4) {\n        if (*in_RAX == 0x656e6f6e) {\n            uVar1 = 0;\n            goto code_r0x00457e32;\n        }\n    }\n    else if (unaff_RBX == 5) {\n        if ((*in_RAX == 0x73617263) && (*(in_RAX + 1) == 'h')) {\n            uVar1 = 0xb;\n            goto code_r0x00457e32;\n        }\n    }\n    else if (unaff_RBX == 6) {\n        if ((*in_RAX == 0x676e6973) && (*(in_RAX + 1) == 0x656c)) goto code_r0x00457df6;\n        if ((*in_RAX == 0x74737973) && (*(in_RAX + 1) == 0x6d65)) {\n            uVar1 = 10;\n            goto code_r0x00457e32;\n        }\n    }\n    uVar3 = fcn.004494e0();\n    if ((unaff_RBX == '\\0') || (uVar3 != (uVar3 & 0xffffffff))) {\n        uVar1 = 2;\n    }\n    else {\n        uVar1 = uVar3 << 2 | 2;\n    }\ncode_r0x00457e32:\n    if ((*0x5d3b2e != '\\0') || (*0x5d3b2c != '\\0')) {\n        uVar1 = uVar1 | 1;\n    }\n    uVar2 = *0x564468;\n    *0x564468 = uVar1 | *0x5d3b98;\n    return uVar2;\n}\n",
        "token_count": 613
    },
    "00464d60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00464d60(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint8_t *in_RAX;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    \n    if (unaff_RBX == 0) {\n        return 0xfffd;\n    }\n    uVar2 = *(*in_RAX + 0x568b60);\n    uVar5 = *in_RAX;\n    if (0xef < uVar2) {\n        uVar6 = (uVar2 << 0x1f) >> 0x1f;\n        return ~uVar6 & uVar5 | uVar6 & 0xfffd;\n    }\n    uVar4 = uVar2 & 7;\n    iVar1 = (uVar2 >> 4) * 2;\n    if (unaff_RBX < uVar4) {\n        return 0xfffd;\n    }\n    if (1 < unaff_RBX) {\n        uVar2 = in_RAX[1];\n        if ((uVar2 < *(iVar1 + 0x5653a0)) || (*(iVar1 + 0x5653a1) < uVar2)) {\n            return 0xfffd;\n        }\n        uVar6 = uVar2;\n        if (uVar4 < 3) {\n            return (uVar5 & 0x1f) << 6 | uVar6 & 0x3f;\n        }\n        uVar2 = in_RAX[2];\n        if (uVar2 + 0x80 < 0x40) {\n            if (uVar4 < 4) {\n                return (uVar5 & 0xf) << 0xc | (uVar6 & 0x3f) << 6 | uVar2 & 0x3f;\n            }\n            if (0x3f < in_RAX[3] + 0x80) {\n                return 0xfffd;\n            }\n            return in_RAX[3] & 0x3f | (uVar5 & 7) << 0x12 | (uVar6 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6;\n        }\n        return 0xfffd;\n    }\n    fcn.0045ca40(unaff_RBX);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 575
    },
    "00464f20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00464f20(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint8_t *in_RAX;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    \n    if (unaff_RBX == 0) {\n        return 0xfffd;\n    }\n    uVar2 = *(*in_RAX + 0x568b60);\n    uVar5 = *in_RAX;\n    if (0xef < uVar2) {\n        uVar6 = (uVar2 << 0x1f) >> 0x1f;\n        return ~uVar6 & uVar5 | uVar6 & 0xfffd;\n    }\n    uVar4 = uVar2 & 7;\n    iVar1 = (uVar2 >> 4) * 2;\n    if (unaff_RBX < uVar4) {\n        return 0xfffd;\n    }\n    if (1 < unaff_RBX) {\n        uVar2 = in_RAX[1];\n        if ((uVar2 < *(iVar1 + 0x5653a0)) || (*(iVar1 + 0x5653a1) < uVar2)) {\n            return 0xfffd;\n        }\n        uVar6 = uVar2;\n        if (uVar4 < 3) {\n            return (uVar5 & 0x1f) << 6 | uVar6 & 0x3f;\n        }\n        uVar2 = in_RAX[2];\n        if (uVar2 + 0x80 < 0x40) {\n            if (uVar4 < 4) {\n                return (uVar5 & 0xf) << 0xc | (uVar6 & 0x3f) << 6 | uVar2 & 0x3f;\n            }\n            if (0x3f < in_RAX[3] + 0x80) {\n                return 0xfffd;\n            }\n            return in_RAX[3] & 0x3f | (uVar5 & 7) << 0x12 | (uVar6 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6;\n        }\n        return 0xfffd;\n    }\n    fcn.0045ca40(unaff_RBX);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 575
    },
    "004650e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004650e0(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x0046522c;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x00465180;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.0045ca40(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x00465180:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.0045ca40(unaff_RBX);\n    }\n    fcn.0045ca40(unaff_RBX);\ncode_r0x0046522c:\n    fcn.0045ca40(unaff_RBX);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 596
    },
    "00465240": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00465240(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar6 = 0;\n    iVar4 = 0;\n    do {\n        if (unaff_RBX <= uVar6) {\n            return iVar4;\n        }\n        if (unaff_RBX <= uVar6) goto code_r0x00465393;\n        if (*(in_RAX + uVar6) < 0x80) {\n            uVar6 = uVar6 + 1;\n        }\n        else {\n            uVar2 = *(*(in_RAX + uVar6) + 0x568b60);\n            if (uVar2 == 0xf1) {\n                uVar6 = uVar6 + 1;\n            }\n            else {\n                uVar5 = uVar2 & 7;\n                if (unaff_RBX < uVar5 + uVar6) {\n                    uVar6 = uVar6 + 1;\n                }\n                else {\n                    iVar1 = (uVar2 >> 4) * 2;\n                    if (unaff_RBX <= uVar6 + 1) {\ncode_r0x00465388:\n                        fcn.0045ca40(unaff_RBX);\ncode_r0x00465393:\n                        fcn.0045ca40(unaff_RBX);\n                        pcVar3 = swi(3);\n                        iVar4 = (*pcVar3)();\n                        return iVar4;\n                    }\n                    uVar2 = *(uVar6 + 1 + in_RAX);\n                    if ((uVar2 < *(iVar1 + 0x5653a0)) || (*(iVar1 + 0x5653a1) < uVar2)) {\n                        uVar5 = 1;\n                    }\n                    else if (uVar5 != 2) {\n                        if (unaff_RBX <= uVar6 + 2) {\ncode_r0x0046537d:\n                            fcn.0045ca40(unaff_RBX);\n                            goto code_r0x00465388;\n                        }\n                        if (*(uVar6 + 2 + in_RAX) + 0x80U < 0x40) {\n                            if (uVar5 != 3) {\n                                if (unaff_RBX <= uVar6 + 3) {\n                                    fcn.0045ca40(unaff_RBX);\n                                    goto code_r0x0046537d;\n                                }\n                                if (0x3f < *(uVar6 + 3 + in_RAX) + 0x80U) {\n                                    uVar5 = 1;\n                                }\n                            }\n                        }\n                        else {\n                            uVar5 = 1;\n                        }\n                    }\n                    uVar6 = uVar5 + uVar6;\n                }\n            }\n        }\n        iVar4 = iVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 669
    },
    "004653a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.004653a0(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar6 = 0;\n    iVar4 = 0;\n    do {\n        if (unaff_RBX <= uVar6) {\n            return iVar4;\n        }\n        if (unaff_RBX <= uVar6) goto code_r0x004654f3;\n        if (*(in_RAX + uVar6) < 0x80) {\n            uVar6 = uVar6 + 1;\n        }\n        else {\n            uVar2 = *(*(in_RAX + uVar6) + 0x568b60);\n            if (uVar2 == 0xf1) {\n                uVar6 = uVar6 + 1;\n            }\n            else {\n                uVar5 = uVar2 & 7;\n                if (unaff_RBX < uVar5 + uVar6) {\n                    uVar6 = uVar6 + 1;\n                }\n                else {\n                    iVar1 = (uVar2 >> 4) * 2;\n                    if (unaff_RBX <= uVar6 + 1) {\ncode_r0x004654e8:\n                        fcn.0045ca40(unaff_RBX);\ncode_r0x004654f3:\n                        fcn.0045ca40(unaff_RBX);\n                        pcVar3 = swi(3);\n                        iVar4 = (*pcVar3)();\n                        return iVar4;\n                    }\n                    uVar2 = *(uVar6 + 1 + in_RAX);\n                    if ((uVar2 < *(iVar1 + 0x5653a0)) || (*(iVar1 + 0x5653a1) < uVar2)) {\n                        uVar5 = 1;\n                    }\n                    else if (uVar5 != 2) {\n                        if (unaff_RBX <= uVar6 + 2) {\ncode_r0x004654dd:\n                            fcn.0045ca40(unaff_RBX);\n                            goto code_r0x004654e8;\n                        }\n                        if (*(uVar6 + 2 + in_RAX) + 0x80U < 0x40) {\n                            if (uVar5 != 3) {\n                                if (unaff_RBX <= uVar6 + 3) {\n                                    fcn.0045ca40(unaff_RBX);\n                                    goto code_r0x004654dd;\n                                }\n                                if (0x3f < *(uVar6 + 3 + in_RAX) + 0x80U) {\n                                    uVar5 = 1;\n                                }\n                            }\n                        }\n                        else {\n                            uVar5 = 1;\n                        }\n                    }\n                    uVar6 = uVar5 + uVar6;\n                }\n            }\n        }\n        iVar4 = iVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 672
    },
    "004659c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.004659c0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    ulong uVar3;\n    char cVar4;\n    char *in_RAX;\n    ulong *puVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint8_t uVar8;\n    char *pcVar9;\n    uint64_t uVar10;\n    uint64_t unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint64_t uVar12;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    int64_t unaff_R14;\n    uint8_t uVar15;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                *(*0x20 + -0x48) = 0x465ba7;\n                puVar5 = fcn.0040c440();\n                puVar5[1] = 9;\n                *puVar5 = 0x4c8755;\n                uVar6 = *(*0x20 + 0x10);\n                puVar5[3] = uVar6;\n                if (*0x5d3dd0 == 0) {\n                    puVar5[2] = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x465be5;\n                    puVar5 = fcn.0045c6c0(uVar6, *(*0x20 + 8), in_R8, in_R9);\n                }\n                uVar3 = *0x57f948;\n                puVar5[4] = *0x57f940;\n                if (*0x5d3dd0 == 0) {\n                    puVar5[5] = uVar3;\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x465c11;\n                    fcn.0045c6c0(uVar6, uVar3, in_R8, in_R9);\n                }\n                return 0;\n            }\n            pcVar9 = in_RAX;\n            uVar12 = arg1;\n            in_R9 = unaff_RBX;\n            if (0x22 < arg1 - 2) {\n                if (arg1 != 0) {\n                    *(*0x20 + -0x48) = 0x465b85;\n                    fcn.004656c0(in_RAX);\n                    return 0;\n                }\n                if (*in_RAX == '0') {\n                    if (unaff_RBX < 3) {\ncode_r0x00465a7d:\n                        in_R8 = -(unaff_RBX - 1) >> 0x3f & 1;\n                        pcVar9 = in_RAX + in_R8;\n                        uVar12 = 8;\n                        in_R9 = unaff_RBX - 1;\n                    }\n                    else {\n                        uVar8 = in_RAX[1] | 0x20;\n                        if (uVar8 == 0x62) {\n                            in_R8 = unaff_RBX - 2;\n                            pcVar9 = in_RAX + 2;\n                            uVar12 = 2;\n                            in_R9 = in_R8;\n                        }\n                        else {\n                            if (unaff_RBX < 3) goto code_r0x00465a7d;\n                            if (uVar8 == 0x6f) {\n                                in_R8 = unaff_RBX - 2;\n                                pcVar9 = in_RAX + 2;\n                                uVar12 = 8;\n                                in_R9 = in_R8;\n                            }\n                            else {\n                                if ((unaff_RBX < 3) || (uVar8 != 0x78)) goto code_r0x00465a7d;\n                                in_R8 = unaff_RBX - 2;\n                                pcVar9 = in_RAX + 2;\n                                uVar12 = 0x10;\n                                in_R9 = in_R8;\n                            }\n                        }\n                    }\n                }\n                else {\n                    uVar12 = 10;\n                }\n            }\n            if (unaff_RDI == 0) {\n                unaff_RDI = 0x40;\n            }\n            else if (0x40 < unaff_RDI) {\n                *(*0x20 + -0x48) = 0x465b50;\n                fcn.00465840(in_RAX);\n                return 0;\n            }\n            if (uVar12 == 10) {\n                uVar10 = 0x199999999999999a;\n                goto code_r0x00465b06;\n            }\n            if (uVar12 == 0x10) {\n                uVar10 = 0x1000000000000000;\n                goto code_r0x00465b06;\n            }\n            if (uVar12 != 0) {\n                uVar10 = SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(uVar12), 0) + 1;\ncode_r0x00465b06:\n                uVar1 = (1 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40)) - 1;\n                *(*0x20 + -0x10) = uVar1;\n                iVar7 = 0;\n                bVar2 = false;\n                uVar14 = 0;\n                do {\n                    if (in_R9 <= iVar7) {\n                        if (bVar2) {\n                            *(*0x20 + -0x18) = uVar14;\n                            *(*0x20 + -0x48) = 0x465ef2;\n                            cVar4 = fcn.00466400();\n                            if (cVar4 == '\\0') {\n                                *(*0x20 + -0x48) = 0x465f18;\n                                puVar5 = fcn.0040c440();\n                                puVar5[1] = 9;\n                                *puVar5 = 0x4c8755;\n                                uVar6 = *(*0x20 + 0x10);\n                                puVar5[3] = uVar6;\n                                if (*0x5d3dd0 == 0) {\n                                    puVar5[2] = *(*0x20 + 8);\n                                }\n                                else {\n                                    *(*0x20 + -0x48) = 0x465f55;\n                                    puVar5 = fcn.0045c6c0(uVar6, *(*0x20 + 8), in_RAX, in_R9);\n                                }\n                                uVar3 = *0x57f948;\n                                puVar5[4] = *0x57f940;\n                                if (*0x5d3dd0 == 0) {\n                                    puVar5[5] = uVar3;\n                                }\n                                else {\n                                    *(*0x20 + -0x48) = 0x465f7f;\n                                    fcn.0045c6c0(uVar6, uVar3, in_RAX, in_R9);\n                                }\n                                return 0;\n                            }\n                            uVar14 = *(*0x20 + -0x18);\n                        }\n                        return uVar14;\n                    }\n                    uVar8 = pcVar9[iVar7];\n                    if ((uVar8 == 0x5f) && (arg1 == 0)) {\n                        bVar2 = true;\n                    }\n                    else {\n                        uVar15 = uVar8 - 0x30;\n                        if (9 < uVar15) {\n                            uVar8 = uVar8 | 0x20;\n                            if ((uVar8 < 0x61) || (0x7a < uVar8)) {\n                                *(*0x20 + -0x48) = 0x465e5f;\n                                puVar5 = fcn.0040c440();\n                                puVar5[1] = 9;\n                                *puVar5 = 0x4c8755;\n                                uVar6 = *(*0x20 + 0x10);\n                                puVar5[3] = uVar6;\n                                if (*0x5d3dd0 == 0) {\n                                    puVar5[2] = *(*0x20 + 8);\n                                }\n                                else {\n                                    *(*0x20 + -0x48) = 0x465e9c;\n                                    puVar5 = fcn.0045c6c0(uVar6, *(*0x20 + 8), in_RAX, in_R9);\n                                }\n                                uVar3 = *0x57f948;\n                                puVar5[4] = *0x57f940;\n                                if (*0x5d3dd0 == 0) {\n                                    puVar5[5] = uVar3;\n                                }\n                                else {\n                                    *(*0x20 + -0x48) = 0x465ec6;\n                                    fcn.0045c6c0(uVar6, uVar3, in_RAX, in_R9);\n                                }\n                                return 0;\n                            }\n                            uVar15 = uVar8 + 0xa9;\n                        }\n                        if (uVar12 <= uVar15) {\n                            *(*0x20 + -0x48) = 0x465dd6;\n                            puVar5 = fcn.0040c440();\n                            puVar5[1] = 9;\n                            *puVar5 = 0x4c8755;\n                            uVar6 = *(*0x20 + 0x10);\n                            puVar5[3] = uVar6;\n                            if (*0x5d3dd0 == 0) {\n                                puVar5[2] = *(*0x20 + 8);\n                            }\n                            else {\n                                *(*0x20 + -0x48) = 0x465e13;\n                                puVar5 = fcn.0045c6c0(uVar6, *(*0x20 + 8), in_RAX, in_R9);\n                            }\n                            uVar3 = *0x57f948;\n                            puVar5[4] = *0x57f940;\n                            if (*0x5d3dd0 == 0) {\n                                puVar5[5] = uVar3;\n                            }\n                            else {\n                                *(*0x20 + -0x48) = 0x465e3d;\n                                fcn.0045c6c0(uVar6, uVar3, in_RAX, in_R9);\n                            }\n                            return 0;\n                        }\n                        if (uVar10 <= uVar14) {\n                            *(*0x20 + -0x48) = 0x465d4a;\n                            puVar5 = fcn.0040c440();\n                            puVar5[1] = 9;\n                            *puVar5 = 0x4c8755;\n                            uVar6 = *(*0x20 + 0x10);\n                            puVar5[3] = uVar6;\n                            if (*0x5d3dd0 == 0) {\n                                puVar5[2] = *(*0x20 + 8);\n                            }\n                            else {\n                                *(*0x20 + -0x48) = 0x465d87;\n                                puVar5 = fcn.0045c6c0(uVar6, *(*0x20 + 8), in_RAX, in_R9);\n                            }\n                            uVar3 = *0x57f938;\n                            puVar5[4] = *0x57f930;\n                            if (*0x5d3dd0 == 0) {\n                                puVar5[5] = uVar3;\n                            }\n                            else {\n                                *(*0x20 + -0x48) = 0x465db1;\n                                fcn.0045c6c0(uVar6, uVar3, in_RAX, in_R9);\n                            }\n                            return *(*0x20 + -0x10);\n                        }\n                        uVar13 = uVar14 * uVar12;\n                        uVar14 = uVar15 + uVar13;\n                        if ((uVar14 <= uVar13 && uVar13 - uVar14 != 0) || (uVar1 < uVar14)) {\n                            *(*0x20 + -0x48) = 0x465cba;\n                            puVar5 = fcn.0040c440();\n                            puVar5[1] = 9;\n                            *puVar5 = 0x4c8755;\n                            uVar6 = *(*0x20 + 0x10);\n                            puVar5[3] = uVar6;\n                            if (*0x5d3dd0 == 0) {\n                                puVar5[2] = *(*0x20 + 8);\n                            }\n                            else {\n                                *(*0x20 + -0x48) = 0x465cf7;\n                                puVar5 = fcn.0045c6c0(uVar6, *(*0x20 + 8), in_RAX, in_R9);\n                            }\n                            uVar3 = *0x57f938;\n                            puVar5[4] = *0x57f930;\n                            if (*0x5d3dd0 == 0) {\n                                puVar5[5] = uVar3;\n                            }\n                            else {\n                                *(*0x20 + -0x48) = 0x465d25;\n                                fcn.0045c6c0(uVar6, uVar3, in_RAX, in_R9);\n                            }\n                            return *(*0x20 + -0x10);\n                        }\n                    }\n                    iVar7 = iVar7 + 1;\n                } while( true );\n            }\n            *(*0x20 + -0x48) = 0x465f9a;\n            in_RAX = fcn.00431720();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + 0x18) = arg1;\n        *(puVar11 + 0x20) = unaff_RDI;\n        *(puVar11 + -8) = 0x465fb4;\n        fcn.0045a360();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        arg1 = *(puVar11 + 0x18);\n        unaff_RDI = *(puVar11 + 0x20);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 3335
    },
    "00470bc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00470bc0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    uint32_t *puVar6;\n    int64_t iVar7;\n    uint *puVar8;\n    int64_t unaff_RBX;\n    int64_t iVar9;\n    uchar *puVar10;\n    ulong unaff_RBP;\n    uint *puVar11;\n    uint32_t *puVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint32_t uVar15;\n    int64_t iVar16;\n    uint *puVar17;\n    uint64_t uVar18;\n    uint64_t uVar19;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x120 && *0x20 + -0x120 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1a0;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 0xc0) = in_RAX;\n            *(*0x20 + 200) = unaff_RBX;\n            *(*0x20 + 8) = in_XMM15;\n            *(*0x20 + -0x1b0) = *0x20 + -8;\n            *(*0x20 + -0x1a8) = 0x470c2f;\n            fcn.0045cccf();\n            unaff_RBP = *(*0x20 + -0x1b0);\n            *(*0x20 + -0x1a8) = 0x470c3f;\n            uVar4 = fcn.0040c440();\n            *(*0x20 + -0xb0) = uVar4;\n            *(*0x20 + -0x15a) = 0;\n            *(*0x20 + -0x50) = in_XMM15;\n            *(*0x20 + -0x48) = in_XMM15;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            unaff_RBX = *(*0x20 + 200);\n            if (unaff_RBX == 0) {\n                puVar11 = NULL;\ncode_r0x00470df7:\n                iVar5 = *(*0x20 + 0xc0);\n                if ((*(iVar5 + 0x14) & 1) == 0) {\n                    iVar7 = 0x38;\n                }\n                else {\n                    iVar7 = 0x48;\n                }\n                puVar13 = *(iVar5 + 0x30);\n                if (*(iVar5 + 0x30) == 0) {\n                    iVar7 = 0;\n                    puVar17 = NULL;\ncode_r0x00470e3f:\n                    *(*0x20 + -0x150) = puVar17;\n                    *(*0x20 + -0xb8) = iVar7;\n                    iVar9 = 0;\n                    puVar13 = puVar11;\ncode_r0x00470e79:\n                    *(*0x20 + -0x138) = puVar13;\n                    if (puVar17 <= iVar9) {\n                        iVar7 = *(*0x20 + -0x20);\n                        *(*0x20 + -0x15c) = 0;\n                        *(*0x20 + -0x98) = in_XMM15;\n                        *(*0x20 + -0x90) = in_XMM15;\n                        *(*0x20 + -0x80) = in_XMM15;\n                        *(*0x20 + -0x70) = in_XMM15;\n                        *(*0x20 + -0x60) = in_XMM15;\n                        puVar11 = iVar7 + 7U & 0xfffffffffffffff8;\n                        *(*0x20 + -0x68) = puVar11;\n                        if ((*(iVar5 + 0x14) & 1) == 0) {\n                            iVar9 = 0x38;\n                        }\n                        else {\n                            iVar9 = 0x48;\n                        }\n                        uVar15 = *(iVar5 + 0x32) & 0x7fff;\n                        puVar17 = uVar15;\n                        if (uVar15 == 0) {\n                            iVar16 = 0;\n                            iVar5 = 0;\ncode_r0x00471040:\n                            *(*0x20 + -0x140) = iVar7;\n                            *(*0x20 + -0x148) = puVar11;\n                            *(*0x20 + -0x158) = iVar16;\n                            *(*0x20 + -0xc0) = iVar5;\n                            iVar9 = 0;\n                            do {\n                                if (iVar16 <= iVar9) {\n                                    *(*0x20 + -0x68) = *(*0x20 + -0x68) - puVar11;\n                                    *(*0x20 + 8) = in_XMM15;\n                                    *(*0x20 + -0x1b0) = unaff_RBP;\n                                    *(*0x20 + -0x1a8) = 0x4711af;\n                                    uVar4 = fcn.0045cccf();\n                                    *(*0x20 + 8) = *(*0x20 + -0x50);\n                                    *(*0x20 + 0x10) = *(*0x20 + -0x48);\n                                    *(*0x20 + 0x14) = *(*0x20 + -0x44);\n                                    *(*0x20 + 0x18) = *(*0x20 + -0x40);\n                                    *(*0x20 + 0x1c) = *(*0x20 + -0x3c);\n                                    *(*0x20 + 0x20) = *(*0x20 + -0x38);\n                                    *(*0x20 + 0x24) = *(*0x20 + -0x34);\n                                    *(*0x20 + 0x28) = *(*0x20 + -0x30);\n                                    *(*0x20 + 0x2c) = *(*0x20 + -0x2c);\n                                    *(*0x20 + 0x30) = *(*0x20 + -0x28);\n                                    *(*0x20 + 0x34) = *(*0x20 + -0x24);\n                                    *(*0x20 + 0x38) = *(*0x20 + -0x20);\n                                    *(*0x20 + 0x3c) = *(*0x20 + -0x1c);\n                                    *(*0x20 + 0x40) = *(*0x20 + -0x18);\n                                    *(*0x20 + 0x44) = *(*0x20 + -0x14);\n                                    *(*0x20 + 0x48) = *(*0x20 + -0x10);\n                                    *(*0x20 + 0x4c) = *(*0x20 + -0xc);\n                                    *(*0x20 + 0x50) = *(*0x20 + -0x98);\n                                    *(*0x20 + 0x58) = *(*0x20 + -0x90);\n                                    *(*0x20 + 0x5c) = *(*0x20 + -0x8c);\n                                    *(*0x20 + 0x60) = *(*0x20 + -0x88);\n                                    *(*0x20 + 100) = *(*0x20 + -0x84);\n                                    *(*0x20 + 0x68) = *(*0x20 + -0x80);\n                                    *(*0x20 + 0x6c) = *(*0x20 + -0x7c);\n                                    *(*0x20 + 0x70) = *(*0x20 + -0x78);\n                                    *(*0x20 + 0x74) = *(*0x20 + -0x74);\n                                    *(*0x20 + 0x78) = *(*0x20 + -0x70);\n                                    *(*0x20 + 0x7c) = *(*0x20 + -0x6c);\n                                    *(*0x20 + 0x80) = *(*0x20 + -0x68);\n                                    *(*0x20 + 0x84) = *(*0x20 + -100);\n                                    *(*0x20 + 0x88) = *(*0x20 + -0x60);\n                                    *(*0x20 + 0x8c) = *(*0x20 + -0x5c);\n                                    *(*0x20 + 0x90) = *(*0x20 + -0x58);\n                                    *(*0x20 + 0x94) = *(*0x20 + -0x54);\n                                    *(*0x20 + 0x98) = iVar7;\n                                    *(*0x20 + 0xa0) = puVar11;\n                                    *(*0x20 + 0xa8) = puVar13 + 7U & 0xfffffffffffffff8;\n                                    *(*0x20 + 0xb0) = uVar4;\n                                    *(*0x20 + 0xb8) = *(*0x20 + -0x15a);\n                                    *(*0x20 + 0xba) = *(*0x20 + -0x15c);\n                                    return;\n                                }\n                                *(*0x20 + -0x130) = iVar9;\n                                *(*0x20 + -0xa8) = *(iVar5 + iVar9 * 8);\n                                *(*0x20 + -0x1a8) = 0x4710b2;\n                                iVar5 = fcn.0046fce0();\n                                if (iVar5 == 0) {\n                                    puVar13 = *(*0x20 + -0x78);\n                                    puVar8 = *(*0x20 + -0x130);\n                                    if (puVar13 <= puVar8) goto code_r0x00471385;\n                                    puVar11 = *(*(*0x20 + -0x80) + puVar8 * 8);\n                                    if (puVar8 == puVar13 - 1U) {\n                                        puVar13 = *(*0x20 + -0x90);\n                                    }\n                                    else {\n                                        puVar17 = puVar8 + 1;\n                                        if (puVar13 <= puVar17) goto code_r0x00471378;\n                                        puVar13 = *(*(*0x20 + -0x80) + 8 + puVar8 * 8);\n                                    }\n                                    puVar8 = *(*0x20 + -0x88);\n                                    puVar17 = *(*0x20 + -0x98);\n                                    if (puVar8 < puVar13) goto code_r0x00471370;\n                                    if (puVar13 < puVar11) goto code_r0x00471365;\n                                    puVar13 = puVar13 - puVar11;\n                                    puVar8 = puVar17 + (puVar11 - puVar8 >> 0x3f & puVar11 * 0x30);\n                                    if (puVar13 != NULL) {\n                                        iVar5 = 0;\n                                        do {\n                                            uVar1 = puVar8[1];\n                                            uVar2 = puVar8[2];\n                                            uVar3 = puVar8[3];\n                                            *(*0x20 + -0x120) = *puVar8;\n                                            *(*0x20 + -0x11c) = uVar1;\n                                            *(*0x20 + -0x118) = uVar2;\n                                            *(*0x20 + -0x114) = uVar3;\n                                            uVar1 = puVar8[5];\n                                            uVar2 = puVar8[6];\n                                            uVar3 = puVar8[7];\n                                            *(*0x20 + -0x110) = puVar8[4];\n                                            *(*0x20 + -0x10c) = uVar1;\n                                            *(*0x20 + -0x108) = uVar2;\n                                            *(*0x20 + -0x104) = uVar3;\n                                            uVar1 = puVar8[9];\n                                            uVar2 = puVar8[10];\n                                            uVar3 = puVar8[0xb];\n                                            *(*0x20 + -0x100) = puVar8[8];\n                                            *(*0x20 + -0xfc) = uVar1;\n                                            *(*0x20 + -0xf8) = uVar2;\n                                            *(*0x20 + -0xf4) = uVar3;\n                                            if (*(*0x20 + -0x120) == 3) {\n                                                puVar17 = *(*0x20 + -0x100);\n                                                puVar14 = ((puVar17 >> 0x3f) >> 0x3d) + puVar17 >> 3;\n                                                puVar11 = puVar14;\n                                                if (puVar14 < 0x2) {\n                                                    puVar11 = puVar14 * 8;\n                                                    puVar17 = puVar17 + puVar14 * -2;\n                                                    if (-1 < puVar17) {\n                                                        (*0x20 + -0x15c)[puVar14] =\n                                                             (*0x20 + -0x15c)[puVar14] |\n                                                             1 << (puVar17 & 0x1f) & -(puVar17 < 0x20);\n                                                        goto code_r0x00471335;\n                                                    }\n                                                    *(*0x20 + -0x1a8) = 0x471353;\n                                                    fcn.004316c0();\n                                                }\n                                                *(*0x20 + -0x1a8) = 0x471365;\n                                                fcn.0045ca40(2);\n                                                goto code_r0x00471365;\n                                            }\ncode_r0x00471335:\n                                            iVar5 = iVar5 + 1;\n                                            if (puVar13 <= iVar5) break;\n                                            puVar8 = puVar8 + 0xc;\n                                        } while( true );\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x1a8) = 0x47116b;\n                                    fcn.00472f40(*(*0x20 + -0xa8));\n                                }\n                                puVar17 = *(*0x20 + -0x130);\n                                iVar9 = puVar17 + 1;\n                                puVar13 = *(*0x20 + -0x138);\n                                iVar7 = *(*0x20 + -0x140);\n                                iVar5 = *(*0x20 + -0xc0);\n                                puVar11 = *(*0x20 + -0x148);\n                                iVar16 = *(*0x20 + -0x158);\n                            } while( true );\n                        }\n                        puVar8 = *(iVar5 + 0x30);\n                        puVar17 = uVar15 + *(iVar5 + 0x30) & 0xffff;\n                        if (puVar8 <= puVar17) {\n                            iVar16 = puVar17 - puVar8;\n                            puVar17 = -iVar16 >> 0x3f;\n                            iVar5 = iVar5 + iVar9 + (puVar8 << 3 & puVar17);\n                            goto code_r0x00471040;\n                        }\n                        goto code_r0x0047138a;\n                    }\n                    *(*0x20 + -0x128) = iVar9;\n                    *(*0x20 + -0xa0) = *(iVar7 + iVar9 * 8);\n                    *(*0x20 + -0x1a8) = 0x470ea7;\n                    iVar5 = fcn.0046fce0();\n                    if (iVar5 != 0) {\n                        *(*0x20 + -0x1a8) = 0x470f89;\n                        fcn.00472f40(*(*0x20 + -0xa0));\n                        puVar13 = *(*0x20 + -0x138);\n                        goto code_r0x00470e50;\n                    }\n                    uVar18 = *(*(*0x20 + -0xa0) + 0x15);\n                    puVar13 = (-uVar18 & (*(*0x20 + -0x138) + uVar18) - 1) + **(*0x20 + -0xa0);\n                    puVar11 = *(*0x20 + -0x30);\n                    puVar17 = *(*0x20 + -0x128);\n                    if (puVar17 < puVar11) {\n                        puVar8 = *(*(*0x20 + -0x38) + puVar17 * 8);\n                        if (puVar17 == puVar11 - 1U) {\n                            puVar11 = *(*0x20 + -0x48);\n                        }\n                        else {\n                            if (puVar11 <= puVar17 + 1U) goto code_r0x00471465;\n                            puVar11 = *(*(*0x20 + -0x38) + 8 + puVar17 * 8);\n                        }\n                        puVar17 = *(*0x20 + -0x40);\n                        if (puVar11 <= puVar17) {\n                            if (puVar8 <= puVar11) {\n                                puVar11 = puVar11 - puVar8;\n                                puVar17 = *(*0x20 + -0x50) + (puVar8 - puVar17 >> 0x3f & puVar8 * 0x30);\n                                if (puVar11 != NULL) {\n                                    iVar5 = 0;\n                                    do {\n                                        uVar1 = puVar17[1];\n                                        uVar2 = puVar17[2];\n                                        uVar3 = puVar17[3];\n                                        *(*0x20 + -0xf0) = *puVar17;\n                                        *(*0x20 + -0xec) = uVar1;\n                                        *(*0x20 + -0xe8) = uVar2;\n                                        *(*0x20 + -0xe4) = uVar3;\n                                        uVar1 = puVar17[5];\n                                        uVar2 = puVar17[6];\n                                        uVar3 = puVar17[7];\n                                        *(*0x20 + -0xe0) = puVar17[4];\n                                        *(*0x20 + -0xdc) = uVar1;\n                                        *(*0x20 + -0xd8) = uVar2;\n                                        *(*0x20 + -0xd4) = uVar3;\n                                        uVar1 = puVar17[9];\n                                        uVar2 = puVar17[10];\n                                        uVar3 = puVar17[0xb];\n                                        *(*0x20 + -0xd0) = puVar17[8];\n                                        *(*0x20 + -0xcc) = uVar1;\n                                        *(*0x20 + -200) = uVar2;\n                                        *(*0x20 + -0xc4) = uVar3;\n                                        if (*(*0x20 + -0xf0) == 3) {\n                                            iVar7 = *(*0x20 + -0xd0);\n                                            uVar18 = ((iVar7 >> 0x3f) >> 0x3d) + iVar7 >> 3;\n                                            if (uVar18 < 2) {\n                                                uVar19 = iVar7 + uVar18 * -8;\n                                                if (-1 < uVar19) {\n                                                    *(*0x20 + (uVar18 - 0x15a)) =\n                                                         *(*0x20 + (uVar18 - 0x15a)) |\n                                                         1 << (uVar19 & 0x1f) & -(uVar19 < 0x20);\n                                                    goto code_r0x0047142d;\n                                                }\n                                                *(*0x20 + -0x1a8) = 0x471445;\n                                                fcn.004316c0();\n                                            }\n                                            *(*0x20 + -0x1a8) = 0x471452;\n                                            fcn.0045ca40(2);\n                                            goto code_r0x00471452;\n                                        }\ncode_r0x0047142d:\n                                        iVar5 = iVar5 + 1;\n                                        if (puVar11 <= iVar5) break;\n                                        puVar17 = puVar17 + 0xc;\n                                    } while( true );\n                                }\n                                goto code_r0x00470e50;\n                            }\ncode_r0x00471452:\n                            *(*0x20 + -0x1a8) = 0x47145d;\n                            fcn.0045cb00(puVar11);\n                        }\n                        *(*0x20 + -0x1a8) = 0x471465;\n                        fcn.0045cac0(puVar11, puVar17);\ncode_r0x00471465:\n                        *(*0x20 + -0x1a8) = 0x47146d;\n                        fcn.0045ca40(puVar11);\n                    }\n                    *(*0x20 + -0x1a8) = 0x471472;\n                    fcn.0045ca40(puVar11);\n                }\n                else {\n                    iVar7 = iVar7 + iVar5;\n                    puVar17 = puVar13;\n                    if (puVar13 < 0x100001) goto code_r0x00470e3f;\n                }\n                unaff_RBX = 0x100000;\n                *(*0x20 + -0x1a8) = 0x47147f;\n                fcn.0045cb40(puVar11, puVar13 & 0xffffffff);\ncode_r0x00471480:\n                *(*0x20 + -0x1a8) = 0x471485;\n                fcn.0045ca40(puVar11);\n            }\n            else {\n                *(*0x20 + -0x1a8) = 0x470c9c;\n                iVar5 = fcn.0046ffe0();\n                if (iVar5 == 0) {\n                    puVar11 = 0x8;\n                    goto code_r0x00470df7;\n                }\n                if (unaff_RBX == '\\0') {\n                    puVar12 = *(*0x20 + -0xb0);\n                    uVar18 = *puVar12;\n                    puVar6 = puVar12;\n                    if ((*puVar12 & 7) == 0) {\n                        iVar5 = *(puVar12 + 4);\n                        iVar7 = *(puVar12 + 2);\n                        unaff_RBX = iVar7;\n                        if (*(puVar12 + 6) < iVar5 + 1U) {\n                            *(*0x20 + -0x1a8) = 0x470d91;\n                            unaff_RBX = fcn.00444c60(iVar5);\n                            puVar6 = *(*0x20 + -0xb0);\n                            *(puVar6 + 6) = iVar5;\n                            if (*0x5d3dd0 == 0) {\n                                *(puVar6 + 2) = unaff_RBX;\n                                iVar5 = iVar7;\n                            }\n                            else {\n                                *(*0x20 + -0x1a8) = 0x470db5;\n                                unaff_RBX = fcn.0045c5a0(iVar5, puVar6, puVar12, uVar18);\n                                iVar5 = iVar7;\n                            }\n                        }\n                        *(puVar6 + 4) = iVar5 + 1;\n                        *(unaff_RBX + iVar5) = 0;\n                    }\n                    puVar11 = *(puVar6 + 4);\n                    if (*puVar6 >> 3 < puVar11) {\n                        *puVar6 = *puVar6 + 1;\n                        goto code_r0x00470de0;\n                    }\n                    goto code_r0x00471480;\n                }\n                puVar12 = *(*0x20 + -0xb0);\n                uVar18 = *puVar12;\n                puVar6 = puVar12;\n                if ((*puVar12 & 7) == 0) {\n                    iVar5 = *(puVar12 + 4);\n                    iVar7 = *(puVar12 + 2);\n                    unaff_RBX = iVar7;\n                    if (*(puVar12 + 6) < iVar5 + 1U) {\n                        *(*0x20 + -0x1a8) = 0x470cea;\n                        unaff_RBX = fcn.00444c60(iVar5);\n                        puVar6 = *(*0x20 + -0xb0);\n                        *(puVar6 + 6) = iVar5;\n                        if (*0x5d3dd0 == 0) {\n                            *(puVar6 + 2) = unaff_RBX;\n                            iVar5 = iVar7;\n                        }\n                        else {\n                            *(*0x20 + -0x1a8) = 0x470d0e;\n                            unaff_RBX = fcn.0045c5a0(iVar5, puVar6, puVar12, uVar18);\n                            iVar5 = iVar7;\n                        }\n                    }\n                    *(puVar6 + 4) = iVar5 + 1;\n                    *(unaff_RBX + iVar5) = 0;\n                }\n                puVar11 = *(puVar6 + 4);\n                puVar13 = *puVar6 >> 3;\n                if (puVar13 < puVar11) {\n                    *(*(puVar6 + 2) + puVar13) = *(*(puVar6 + 2) + puVar13) | 1 << (*puVar6 & 7);\n                    *puVar6 = *puVar6 + 1;\ncode_r0x00470de0:\n                    puVar11 = NULL;\n                    goto code_r0x00470df7;\n                }\n            }\n            *(*0x20 + -0x1a8) = 0x47148a;\n            in_RAX = fcn.0045ca40(puVar11);\n        }\n        *(puVar10 + 0xc0) = in_RAX;\n        *(puVar10 + 200) = unaff_RBX;\n        *(puVar10 + -8) = 0x4714a5;\n        fcn.0045a360();\n        in_RAX = *(puVar10 + 0xc0);\n        unaff_RBX = *(puVar10 + 200);\n        *0x20 = puVar10;\n    } while( true );\ncode_r0x00471365:\n    *(*0x20 + -0x1a8) = 0x471370;\n    fcn.0045cb00(puVar13);\ncode_r0x00471370:\n    *(*0x20 + -0x1a8) = 0x471378;\n    fcn.0045cac0(puVar13, puVar8);\ncode_r0x00471378:\n    *(*0x20 + -0x1a8) = 0x471385;\n    fcn.0045ca40(puVar13);\ncode_r0x00471385:\n    *(*0x20 + -0x1a8) = 0x47138a;\n    fcn.0045ca40(puVar13);\ncode_r0x0047138a:\n    puVar13 = puVar11;\n    *(*0x20 + -0x1a8) = 0x471395;\n    fcn.0045cb80(puVar17);\ncode_r0x00470e50:\n    iVar9 = *(*0x20 + -0x128) + 1;\n    iVar5 = *(*0x20 + 0xc0);\n    puVar17 = *(*0x20 + -0x150);\n    iVar7 = *(*0x20 + -0xb8);\n    goto code_r0x00470e79;\n}\n",
        "token_count": 6098
    },
    "00473b20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00473b20(ulong arg1)\n\n{\n    int64_t *piVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t in_RAX;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong *puVar10;\n    ulong *arg1_00;\n    uint64_t unaff_RBX;\n    ulong *arg1_01;\n    uchar *puVar11;\n    ulong unaff_RBP;\n    ulong *puVar12;\n    ulong *unaff_RDI;\n    ulong *arg3;\n    ulong arg3_00;\n    ulong arg4;\n    uint64_t uVar13;\n    ulong *arg2;\n    ulong *puVar14;\n    ulong *puVar15;\n    int64_t iVar16;\n    ulong *puVar17;\n    int64_t unaff_R14;\n    uint64_t uVar18;\n    ulong *arg2_00;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x590 && *0x20 + -0x590 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x610;\n            *(*0x20 + -8) = unaff_RBP;\n            piVar1 = *(unaff_R14 + 0x20);\n            if ((piVar1 != NULL) && (*piVar1 == *0x20 + 8)) {\n                *piVar1 = *0x20 + -0x610;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            uVar6 = *(in_RAX + 0x30);\n            *(*0x20 + -0x348) = uVar6;\n            uVar7 = *(in_RAX + 0x28);\n            *(*0x20 + -0x350) = uVar7;\n            *(*0x20 + -0x520) = *(in_RAX + 0x38);\n            arg3_00 = *(in_RAX + 0x20);\n            *(*0x20 + -0x618) = 0x473bb5;\n            arg4 = uVar7;\n            uVar6 = fcn.00473820(uVar7, uVar6, arg3_00);\n            *(*0x20 + -0x380) = uVar6;\n            *(*0x20 + -0x388) = 4;\n            *(*0x20 + -0x360) = uVar7;\n            *(*0x20 + -0x1d0) = in_XMM15;\n            *(*0x20 + -0x620) = *0x20 + -8;\n            *(*0x20 + -0x618) = 0x473bf1;\n            fcn.0045cccf();\n            uVar6 = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x473bff;\n            fcn.00472820();\n            *(*0x20 + -0x1d0) = *(*0x20 + -0x610);\n            *(*0x20 + -0x620) = uVar6;\n            *(*0x20 + -0x618) = 0x473c2f;\n            fcn.0045d006();\n            *(*0x20 + -0x340) = *(*0x20 + -0x1d0);\n            *(*0x20 + -0x620) = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x473c6f;\n            fcn.0045d006();\n            *(*0x20 + -0x1d0) = in_XMM15;\n            *(*0x20 + -0x620) = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x473c97;\n            fcn.0045cccf();\n            uVar6 = *(*0x20 + -0x620);\n            arg1_01 = *(*0x20 + -0x380);\n            *(*0x20 + -0x618) = 0x473cb0;\n            uVar7 = fcn.00472820();\n            *(*0x20 + -0x378) = uVar7;\n            *(*0x20 + -0x370) = arg1_01;\n            *(*0x20 + -0x1d0) = *(*0x20 + -0x610);\n            *(*0x20 + -0x620) = uVar6;\n            *(*0x20 + -0x618) = 0x473cef;\n            fcn.0045d006();\n            *(*0x20 + -0x288) = *(*0x20 + -0x1d0);\n            unaff_RDI = *0x20 + -0x280;\n            *(*0x20 + -0x620) = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x473d2f;\n            fcn.0045d006();\n            unaff_RBP = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x473d3b;\n            iVar8 = fcn.00463a40();\n            unaff_RBX = 0x4b4940;\n            if (iVar8 == 0x4b4940) {\n                unaff_RDI = *0x20 + -0x148;\n                *(*0x20 + -0x620) = unaff_RBP;\n                *(*0x20 + -0x618) = 0x473d6f;\n                fcn.0045ccab();\n                unaff_RBP = *(*0x20 + -0x620);\n                puVar2 = *(*0x20 + -0x288);\n                puVar15 = *(*0x20 + -0x280);\n                if (puVar15 != NULL) {\n                    uVar3 = puVar2[1];\n                    uVar4 = puVar2[2];\n                    uVar5 = puVar2[3];\n                    *(*0x20 + -0x488) = *puVar2;\n                    *(*0x20 + -0x484) = uVar3;\n                    *(*0x20 + -0x480) = uVar4;\n                    *(*0x20 + -0x47c) = uVar5;\n                    uVar3 = puVar2[5];\n                    uVar4 = puVar2[6];\n                    uVar5 = puVar2[7];\n                    *(*0x20 + -0x478) = puVar2[4];\n                    *(*0x20 + -0x474) = uVar3;\n                    *(*0x20 + -0x470) = uVar4;\n                    *(*0x20 + -0x46c) = uVar5;\n                    uVar3 = puVar2[9];\n                    uVar4 = puVar2[10];\n                    uVar5 = puVar2[0xb];\n                    *(*0x20 + -0x468) = puVar2[8];\n                    *(*0x20 + -0x464) = uVar3;\n                    *(*0x20 + -0x460) = uVar4;\n                    *(*0x20 + -0x45c) = uVar5;\n                    if (*(*0x20 + -0x488) == 1) {\n                        if ((*(*(*0x20 + -0x350) + 0x17) & 0x1f) == 0x14) {\n                            if (*0x5d3dd0 == 0) {\n                                *arg1_01 = *(*(*0x20 + -0x348) + 8);\n                            }\n                            else {\n                                *(*0x20 + -0x618) = 0x473e10;\n                                fcn.0045c5a0(puVar15, unaff_RBX, arg3_00, arg4);\n                                unaff_RDI = arg1_01;\n                            }\n                        }\n                        else if (((*(*0x20 + -0x520) >> 7 & 1) == 0) || ((*(*(*0x20 + -0x350) + 0x17) & 0x20) == 0)) {\n                            if (*0x5d3dd0 == 0) {\n                                *arg1_01 = *(*0x20 + -0x348);\n                            }\n                            else {\n                                *(*0x20 + -0x618) = 0x473e85;\n                                fcn.0045c5a0(puVar15, unaff_RBX, arg3_00, arg4);\n                                unaff_RDI = arg1_01;\n                            }\n                        }\n                        else if (*0x5d3dd0 == 0) {\n                            *arg1_01 = **(*0x20 + -0x348);\n                        }\n                        else {\n                            *(*0x20 + -0x618) = 0x473e55;\n                            fcn.0045c5a0(puVar15, unaff_RBX, arg3_00, arg4);\n                            unaff_RDI = arg1_01;\n                        }\n                    }\n                    else if ((*(*(*0x20 + -0x350) + 0x17) & 0x1f) == 0x14) {\n                        *(*0x20 + -0x118) = *(*(*0x20 + -0x348) + 8);\n                    }\n                    else if (((*(*0x20 + -0x520) >> 7 & 1) == 0) || ((*(*(*0x20 + -0x350) + 0x17) & 0x20) == 0)) {\n                        *(*0x20 + -0x118) = *(*0x20 + -0x348);\n                    }\n                    else {\n                        *(*0x20 + -0x118) = **(*0x20 + -0x348);\n                    }\n                    iVar8 = *(*0x20 + -0x388);\n                    if ((*(iVar8 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    arg3 = *(iVar8 + 0x30);\n                    if (*(iVar8 + 0x30) == 0) {\n                        arg3 = NULL;\n                        arg1_00 = NULL;\ncode_r0x00473f3e:\n                        *(*0x20 + -0x368) = arg1_01;\n                        *(*0x20 + -0x390) = arg1_00;\n                        *(*0x20 + -0x538) = arg3;\n                        puVar10 = NULL;\ncode_r0x00473f63:\n                        do {\n                            if (arg3 <= puVar10) {\n                                iVar8 = **(*0x20 + -0x378);\n                                *(*0x20 + -0x10) = *(*0x20 + -0x1d6);\n                                *(*0x20 + -0x618) = 0x4742b4;\n                                fcn.0045eaa0(arg1_01, *(*0x20 + -0x1d6), \n                                             (iVar8 + 7U & 0xfffffffffffffff8) + *(*0x20 + -0x1e8), *0x20 + -0x118);\n                                if (*(*0x20 + 0x20) != 0) {\n                                    if (*0x5d3dd0 == 0) {\n                                        *(*0x20 + -0x620) = unaff_RBP;\n                                        *(*0x20 + -0x618) = 0x4742ef;\n                                        fcn.0045cfb2();\n                                    }\n                                    else {\n                                        *(*0x20 + -0x618) = 0x47430c;\n                                        fcn.00411220(*0x20 + -0x118);\n                                    }\n                                }\n                                iVar8 = **(*0x20 + -0x378);\n                                if (iVar8 - *(*0x20 + -0x1f0) != 0) {\n                                    *(*0x20 + -0x618) = 0x474355;\n                                    fcn.004583e0(iVar8 - *(*0x20 + -0x1f0));\n                                }\n                                **(*0x20 + 0x18) = 1;\n                                *(*0x20 + -0x618) = 0x474375;\n                                fcn.00457280();\n                                *(*0x20 + -0x618) = 0x474391;\n                                fcn.00463960(*(*0x20 + -0x368));\n                                return;\n                            }\n                            puVar12 = arg1_00[puVar10];\n                            puVar15 = *(*0x20 + -800);\n                            if (puVar15 <= puVar10) goto code_r0x004749af;\n                            puVar17 = *(*(*0x20 + -0x328) + puVar10 * 8);\n                            if (puVar10 == puVar15 + -1) {\n                                puVar15 = *(*0x20 + -0x338);\n                            }\n                            else {\n                                if (puVar15 <= puVar10 + 1U) goto code_r0x004749a7;\n                                puVar15 = *(*(*0x20 + -0x328) + 8 + puVar10 * 8);\n                            }\n                            iVar8 = *(*0x20 + -0x340);\n                            arg2 = *(*0x20 + -0x330);\n                            puVar14 = arg3;\n                            if (arg2 < puVar15) goto code_r0x0047499c;\n                            if (puVar15 < puVar17) goto code_r0x00474991;\n                            puVar14 = puVar10 + 1;\n                            puVar15 = puVar15 - puVar17;\n                            uVar18 = puVar17 - arg2 >> 0x3f & puVar17 * 0x30;\n                            arg2 = iVar8 + uVar18;\n                            puVar17 = *(*0x20 + -0x268);\n                            if (puVar17 <= puVar14) goto code_r0x00474986;\n                            *(*0x20 + -0x540) = puVar15;\n                            *(*0x20 + -0x398) = arg2;\n                            arg2 = *(*(*0x20 + -0x270) + 8 + puVar10 * 8);\n                            if (puVar17 - 1U == puVar14) {\n                                puVar15 = *(*0x20 + -0x280);\n                            }\n                            else {\n                                puVar15 = puVar10 + 2;\n                                if (puVar17 <= puVar15) goto code_r0x0047497b;\n                                puVar15 = *(*(*0x20 + -0x270) + 0x10 + puVar10 * 8);\n                            }\n                            puVar17 = *(*0x20 + -0x288);\n                            arg2_00 = *(*0x20 + -0x278);\n                            if (arg2_00 < puVar15) goto code_r0x00474970;\n                            if (puVar15 < arg2) goto code_r0x00474965;\n                            puVar15 = puVar15 - arg2;\n                            uVar13 = arg2 - arg2_00 >> 0x3f & arg2 * 0x30;\n                            arg2_00 = uVar13 + puVar17;\n                            arg2 = *(*0x20 + -0x540);\n                            unaff_RDI = arg3;\n                            if (arg2 != NULL) {\n                                *(*0x20 + -0x530) = puVar14;\n                                puVar2 = *(*0x20 + -0x398);\n                                uVar3 = puVar2[1];\n                                uVar4 = puVar2[2];\n                                uVar5 = puVar2[3];\n                                *(*0x20 + -0x4b8) = *puVar2;\n                                *(*0x20 + -0x4b4) = uVar3;\n                                *(*0x20 + -0x4b0) = uVar4;\n                                *(*0x20 + -0x4ac) = uVar5;\n                                iVar9 = iVar8 + uVar18;\n                                uVar3 = *(iVar9 + 0x14);\n                                uVar4 = *(iVar9 + 0x18);\n                                uVar5 = *(iVar9 + 0x1c);\n                                *(*0x20 + -0x4a8) = *(iVar9 + 0x10);\n                                *(*0x20 + -0x4a4) = uVar3;\n                                *(*0x20 + -0x4a0) = uVar4;\n                                *(*0x20 + -0x49c) = uVar5;\n                                iVar8 = iVar8 + uVar18;\n                                puVar14 = iVar8 + 0x20;\n                                uVar3 = *(iVar8 + 0x24);\n                                uVar4 = *(iVar8 + 0x28);\n                                uVar5 = *(iVar8 + 0x2c);\n                                *(*0x20 + -0x498) = *puVar14;\n                                *(*0x20 + -0x494) = uVar3;\n                                *(*0x20 + -0x490) = uVar4;\n                                *(*0x20 + -0x48c) = uVar5;\n                                if (*(*0x20 + -0x4b8) == 1) {\n                                    if (puVar15 == NULL) {\ncode_r0x00474945:\n                                        *(*0x20 + -0x618) = 0x47494f;\n                                        fcn.0045ca40(puVar15);\n                                        break;\n                                    }\n                                    uVar3 = *(arg2_00 + 4);\n                                    uVar4 = *(arg2_00 + 1);\n                                    uVar5 = *(arg2_00 + 0xc);\n                                    *(*0x20 + -0x3c8) = *arg2_00;\n                                    *(*0x20 + -0x3c4) = uVar3;\n                                    *(*0x20 + -0x3c0) = uVar4;\n                                    *(*0x20 + -0x3bc) = uVar5;\n                                    uVar3 = *(puVar17 + uVar13 + 0x14);\n                                    uVar4 = *(puVar17 + uVar13 + 0x18);\n                                    uVar5 = *(puVar17 + uVar13 + 0x1c);\n                                    *(*0x20 + -0x3b8) = *(puVar17 + uVar13 + 0x10);\n                                    *(*0x20 + -0x3b4) = uVar3;\n                                    *(*0x20 + -0x3b0) = uVar4;\n                                    *(*0x20 + -0x3ac) = uVar5;\n                                    arg2 = puVar17 + uVar13 + 0x20;\n                                    uVar3 = *(puVar17 + uVar13 + 0x24);\n                                    uVar4 = *(puVar17 + uVar13 + 0x28);\n                                    uVar5 = *(puVar17 + uVar13 + 0x2c);\n                                    *(*0x20 + -0x3a8) = *arg2;\n                                    *(*0x20 + -0x3a4) = uVar3;\n                                    *(*0x20 + -0x3a0) = uVar4;\n                                    *(*0x20 + -0x39c) = uVar5;\n                                    if (*(*0x20 + -0x3c8) != 1) {\n                                        *(*0x20 + -0x548) = puVar15;\n                                        arg2 = *(*0x20 + 0x10);\n                                        puVar10 = NULL;\n                                        puVar12 = arg2_00;\n                                        goto code_r0x0047477f;\n                                    }\n                                    if (*(*0x20 + -0x3b8) == *(*0x20 + -0x4a8)) {\n                                        *(*0x20 + -0x618) = 0x4741a9;\n                                        fcn.00457220(*(*0x20 + -0x4a0) + *(*0x20 + 0x10));\n                                        arg1_00 = *(*0x20 + -0x390);\n                                        unaff_RBX = 0x4b4940;\n                                        arg1_01 = *(*0x20 + -0x368);\n                                        arg3 = *(*0x20 + -0x538);\n                                        puVar10 = *(*0x20 + -0x530);\n                                        unaff_RDI = arg3;\n                                        goto code_r0x00473f63;\n                                    }\n                                }\n                                else {\n                                    if (puVar15 != NULL) {\n                                        uVar3 = *(arg2_00 + 4);\n                                        uVar4 = *(arg2_00 + 1);\n                                        uVar5 = *(arg2_00 + 0xc);\n                                        *(*0x20 + -0x428) = *arg2_00;\n                                        *(*0x20 + -0x424) = uVar3;\n                                        *(*0x20 + -0x420) = uVar4;\n                                        *(*0x20 + -0x41c) = uVar5;\n                                        uVar3 = *(puVar17 + uVar13 + 0x14);\n                                        uVar4 = *(puVar17 + uVar13 + 0x18);\n                                        uVar5 = *(puVar17 + uVar13 + 0x1c);\n                                        *(*0x20 + -0x418) = *(puVar17 + uVar13 + 0x10);\n                                        *(*0x20 + -0x414) = uVar3;\n                                        *(*0x20 + -0x410) = uVar4;\n                                        *(*0x20 + -0x40c) = uVar5;\n                                        puVar14 = puVar17 + uVar13 + 0x20;\n                                        uVar3 = *(puVar17 + uVar13 + 0x24);\n                                        uVar4 = *(puVar17 + uVar13 + 0x28);\n                                        uVar5 = *(puVar17 + uVar13 + 0x2c);\n                                        *(*0x20 + -0x408) = *puVar14;\n                                        *(*0x20 + -0x404) = uVar3;\n                                        *(*0x20 + -0x400) = uVar4;\n                                        *(*0x20 + -0x3fc) = uVar5;\n                                        if (*(*0x20 + -0x428) != 1) {\n                                            if (puVar15 != arg2) {\ncode_r0x00474565:\n                                                arg1_01 = 0x4f9d08;\n                                                *(*0x20 + -0x618) = 0x474578;\n                                                iVar8 = fcn.00432920();\n                                                puVar12 = puVar15;\n                                                goto code_r0x00474578;\n                                            }\n                                            iVar9 = *(*0x20 + 0x20);\n                                            puVar14 = *(*0x20 + -0x398);\n                                            iVar8 = 0;\n                                            do {\n                                                uVar3 = *(puVar14 + 4);\n                                                uVar4 = *(puVar14 + 1);\n                                                uVar5 = *(puVar14 + 0xc);\n                                                *(*0x20 + -0x518) = *puVar14;\n                                                *(*0x20 + -0x514) = uVar3;\n                                                *(*0x20 + -0x510) = uVar4;\n                                                *(*0x20 + -0x50c) = uVar5;\n                                                uVar3 = *(puVar14 + 0x14);\n                                                uVar4 = *(puVar14 + 3);\n                                                uVar5 = *(puVar14 + 0x1c);\n                                                *(*0x20 + -0x508) = *(puVar14 + 2);\n                                                *(*0x20 + -0x504) = uVar3;\n                                                *(*0x20 + -0x500) = uVar4;\n                                                *(*0x20 + -0x4fc) = uVar5;\n                                                uVar3 = *(puVar14 + 0x24);\n                                                uVar4 = *(puVar14 + 5);\n                                                uVar5 = *(puVar14 + 0x2c);\n                                                *(*0x20 + -0x4f8) = *(puVar14 + 4);\n                                                *(*0x20 + -0x4f4) = uVar3;\n                                                *(*0x20 + -0x4f0) = uVar4;\n                                                *(*0x20 + -0x4ec) = uVar5;\n                                                iVar16 = iVar8 * 0x30;\n                                                puVar15 = arg2_00 + iVar8 * 6;\n                                                uVar3 = *(puVar15 + 4);\n                                                uVar4 = *(puVar15 + 1);\n                                                uVar5 = *(puVar15 + 0xc);\n                                                *(*0x20 + -0x458) = *puVar15;\n                                                *(*0x20 + -0x454) = uVar3;\n                                                *(*0x20 + -0x450) = uVar4;\n                                                *(*0x20 + -0x44c) = uVar5;\n                                                uVar3 = *(arg2_00 + iVar16 + 0x14);\n                                                uVar4 = *(arg2_00 + iVar8 * 6 + 3);\n                                                uVar5 = *(arg2_00 + iVar16 + 0x1c);\n                                                *(*0x20 + -0x448) = *(arg2_00 + iVar8 * 6 + 2);\n                                                *(*0x20 + -0x444) = uVar3;\n                                                *(*0x20 + -0x440) = uVar4;\n                                                *(*0x20 + -0x43c) = uVar5;\n                                                uVar3 = *(arg2_00 + iVar16 + 0x24);\n                                                uVar4 = *(arg2_00 + iVar8 * 6 + 5);\n                                                uVar5 = *(arg2_00 + iVar16 + 0x2c);\n                                                *(*0x20 + -0x438) = *(arg2_00 + iVar8 * 6 + 4);\n                                                *(*0x20 + -0x434) = uVar3;\n                                                *(*0x20 + -0x430) = uVar4;\n                                                *(*0x20 + -0x42c) = uVar5;\n                                                puVar15 = *(*0x20 + -0x518);\n                                                if (*(*0x20 + -0x458) != puVar15) {\ncode_r0x00474552:\n                                                    *(*0x20 + -0x618) = 0x474565;\n                                                    fcn.00432920();\n                                                    goto code_r0x00474565;\n                                                }\n                                                if (puVar15 != 0x2) {\n                                                    if (puVar15 != 0x3) {\n                                                        if (puVar15 == 0x4) {\n                                                            puVar15 = *(*0x20 + -0x4f0);\n                                                            if (puVar15 < 0xf) {\n                                                                puVar15 = *(iVar9 + 0x48 + puVar15 * 8);\n                                                                if (*(*0x20 + -0x430) < 0xf) {\n                                                                    *(*0x20 + *(*0x20 + -0x430) * 8 + -0xd0) = puVar15;\n                                                                    goto code_r0x004744d7;\n                                                                }\n                                                                *(*0x20 + -0x618) = 0x4744fb;\n                                                                fcn.0045ca40(0xf);\n                                                            }\n                                                            *(*0x20 + -0x618) = 0x474508;\n                                                            fcn.0045ca40(0xf);\n                                                        }\n                                                        *(*0x20 + -0x618) = 0x47451b;\n                                                        fcn.00432920();\ncode_r0x0047451b:\n                                                        *(*0x20 + -0x618) = 0x474528;\n                                                        fcn.0045ca40(9);\n                                                        goto code_r0x00474528;\n                                                    }\n                                                    puVar15 = *(*0x20 + -0x4f8);\n                                                    if (puVar15 < 0x9) {\n                                                        puVar15 = *(iVar9 + 0xc0 + puVar15 * 8);\n                                                        if (*(*0x20 + -0x438) < 9) {\n                                                            *(*0x20 + *(*0x20 + -0x438) * 8 + -0x58) = puVar15;\n                                                            goto code_r0x00474472;\n                                                        }\n                                                        goto code_r0x00474535;\n                                                    }\ncode_r0x00474545:\n                                                    arg1_00 = 0x9;\n                                                    *(*0x20 + -0x618) = 0x474552;\n                                                    fcn.0045ca40(9);\n                                                    goto code_r0x00474552;\n                                                }\ncode_r0x00474472:\n                                                puVar15 = *(*0x20 + -0x4f8);\n                                                if (0x8 < puVar15) {\ncode_r0x00474528:\n                                                    *(*0x20 + -0x618) = 0x474535;\n                                                    fcn.0045ca40(9);\ncode_r0x00474535:\n                                                    *(*0x20 + -0x618) = 0x474545;\n                                                    fcn.0045ca40(9);\n                                                    goto code_r0x00474545;\n                                                }\n                                                puVar15 = *(iVar9 + puVar15 * 8);\n                                                if (8 < *(*0x20 + -0x438)) goto code_r0x0047451b;\n                                                *(*0x20 + *(*0x20 + -0x438) * 8 + -0x118) = puVar15;\ncode_r0x004744d7:\n                                                iVar8 = iVar8 + 1;\n                                                if (arg2 <= iVar8) goto code_r0x00474256;\n                                                puVar14 = puVar14 + 6;\n                                            } while( true );\n                                        }\n                                        iVar8 = *(*0x20 + 0x20);\n                                        puVar14 = *(*0x20 + -0x398);\n                                        puVar12 = NULL;\n                                        do {\n                                            uVar3 = *(puVar14 + 4);\n                                            uVar4 = *(puVar14 + 1);\n                                            uVar5 = *(puVar14 + 0xc);\n                                            *(*0x20 + -0x4e8) = *puVar14;\n                                            *(*0x20 + -0x4e4) = uVar3;\n                                            *(*0x20 + -0x4e0) = uVar4;\n                                            *(*0x20 + -0x4dc) = uVar5;\n                                            uVar3 = *(puVar14 + 0x14);\n                                            uVar4 = *(puVar14 + 3);\n                                            uVar5 = *(puVar14 + 0x1c);\n                                            *(*0x20 + -0x4d8) = *(puVar14 + 2);\n                                            *(*0x20 + -0x4d4) = uVar3;\n                                            *(*0x20 + -0x4d0) = uVar4;\n                                            *(*0x20 + -0x4cc) = uVar5;\n                                            uVar3 = *(puVar14 + 0x24);\n                                            uVar4 = *(puVar14 + 5);\n                                            uVar5 = *(puVar14 + 0x2c);\n                                            *(*0x20 + -0x4c8) = *(puVar14 + 4);\n                                            *(*0x20 + -0x4c4) = uVar3;\n                                            *(*0x20 + -0x4c0) = uVar4;\n                                            *(*0x20 + -0x4bc) = uVar5;\n                                            puVar15 = *(*0x20 + -0x4e0) + *(*0x20 + -0x410);\n                                            iVar9 = *(*0x20 + -0x4e8);\n                                            if (iVar9 != 2) {\n                                                if (iVar9 == 3) {\n                                                    if (*(*0x20 + -0x4c8) < 9) {\n                                                        if (*0x5d3dd0 == 0) {\n                                                            *(arg1_01 + puVar15) =\n                                                                 *(iVar8 + 0xc0 + *(*0x20 + -0x4c8) * 8);\n                                                        }\n                                                        else {\n                                                            *(*0x20 + -0x618) = 0x474613;\n                                                            iVar8 = fcn.0045c740(arg1_00, unaff_RBX, arg3);\n                                                        }\n                                                        goto code_r0x004746f1;\n                                                    }\n                                                }\n                                                else {\n                                                    if (iVar9 == 4) {\n                                                        uVar18 = *(*0x20 + -0x4c0);\n                                                        if (*(*0x20 + -0x4d8) == 4) {\n                                                            if (uVar18 < 0xf) {\n                                                                *(arg1_01 + puVar15) = *(iVar8 + 0x48 + uVar18 * 8);\n                                                                goto code_r0x004746f1;\n                                                            }\n                                                        }\n                                                        else {\n                                                            if (*(*0x20 + -0x4d8) == 8) {\n                                                                if (uVar18 < 0xf) {\n                                                                    *(arg1_01 + puVar15) = *(iVar8 + 0x48 + uVar18 * 8);\n                                                                    goto code_r0x004746f1;\n                                                                }\n                                                                *(*0x20 + -0x618) = 0x474718;\n                                                                fcn.0045ca40(0xf);\n                                                            }\n                                                            *(*0x20 + -0x618) = 0x47472b;\n                                                            fcn.00432920();\n                                                        }\n                                                        *(*0x20 + -0x618) = 0x474738;\n                                                        fcn.0045ca40(0xf);\n                                                    }\n                                                    *(*0x20 + -0x618) = 0x47474b;\n                                                    fcn.00432920();\n                                                }\n                                                *(*0x20 + -0x618) = 0x474758;\n                                                fcn.0045ca40(9);\n                                                break;\n                                            }\n                                            *(*0x20 + -0x528) = puVar12;\n                                            *(*0x20 + -0x358) = puVar14;\n                                            *(*0x20 + -0x618) = 0x4746b2;\n                                            fcn.004714c0(*(*0x20 + -0x4d8));\n                                            iVar8 = *(*0x20 + 0x20);\n                                            arg1_00 = *(*0x20 + -0x390);\n                                            unaff_RBX = 0x4b4940;\n                                            arg1_01 = *(*0x20 + -0x368);\n                                            puVar12 = *(*0x20 + -0x528);\n                                            arg3 = *(*0x20 + -0x538);\n                                            arg2 = *(*0x20 + -0x540);\n                                            puVar14 = *(*0x20 + -0x358);\ncode_r0x004746f1:\n                                            puVar12 = puVar12 + 1;\n                                            if (arg2 <= puVar12) goto code_r0x004746fe;\ncode_r0x00474578:\n                                            puVar14 = puVar14 + 6;\n                                        } while( true );\n                                    }\n                                    *(*0x20 + -0x618) = 0x474765;\n                                    arg1_00 = puVar15;\n                                    fcn.0045ca40(puVar15);\n                                }\n                                arg1_01 = 0x4f9cd8;\n                                *(*0x20 + -0x618) = 0x474778;\n                                fcn.00432920();\n                                puVar10 = puVar14;\n                                do {\n                                    puVar12 = puVar12 + 6;\ncode_r0x0047477f:\n                                    *(*0x20 + -0x528) = puVar10;\n                                    *(*0x20 + -0x358) = puVar12;\n                                    uVar3 = *(puVar12 + 4);\n                                    uVar4 = *(puVar12 + 1);\n                                    uVar5 = *(puVar12 + 0xc);\n                                    *(*0x20 + -0x3f8) = *puVar12;\n                                    *(*0x20 + -0x3f4) = uVar3;\n                                    *(*0x20 + -0x3f0) = uVar4;\n                                    *(*0x20 + -0x3ec) = uVar5;\n                                    uVar3 = *(puVar12 + 0x14);\n                                    uVar4 = *(puVar12 + 3);\n                                    uVar5 = *(puVar12 + 0x1c);\n                                    *(*0x20 + -1000) = *(puVar12 + 2);\n                                    *(*0x20 + -0x3e4) = uVar3;\n                                    *(*0x20 + -0x3e0) = uVar4;\n                                    *(*0x20 + -0x3dc) = uVar5;\n                                    uVar3 = *(puVar12 + 0x24);\n                                    uVar4 = *(puVar12 + 5);\n                                    uVar5 = *(puVar12 + 0x2c);\n                                    *(*0x20 + -0x3d8) = *(puVar12 + 4);\n                                    *(*0x20 + -0x3d4) = uVar3;\n                                    *(*0x20 + -0x3d0) = uVar4;\n                                    *(*0x20 + -0x3cc) = uVar5;\n                                    puVar14 = *(*0x20 + -0x3f0) + *(*0x20 + -0x4a0);\n                                    puVar17 = *(*0x20 + -0x3f8);\n                                    arg2_00 = puVar14 + arg2;\n                                    if (puVar17 == 0x2) {\ncode_r0x00474875:\n                                        *(*0x20 + -0x618) = 0x474895;\n                                        fcn.00471560(*(*0x20 + -1000));\n                                        puVar10 = *(*0x20 + -0x528);\n                                        arg1_00 = *(*0x20 + -0x390);\n                                        unaff_RBX = 0x4b4940;\n                                        arg1_01 = *(*0x20 + -0x368);\n                                        puVar12 = *(*0x20 + -0x358);\n                                        arg3 = *(*0x20 + -0x538);\n                                        arg2 = *(*0x20 + 0x10);\n                                        puVar15 = *(*0x20 + -0x548);\n                                    }\n                                    else {\n                                        if (puVar17 == 0x3) {\n                                            if (8 < *(*0x20 + -0x3d8)) {\n                                                *(*0x20 + -0x618) = 0x474905;\n                                                fcn.0045ca40(9);\ncode_r0x00474905:\n                                                *(*0x20 + -0x618) = 0x474912;\n                                                fcn.0045ca40(0xf);\ncode_r0x00474912:\n                                                *(*0x20 + -0x618) = 0x474925;\n                                                fcn.00432920();\ncode_r0x00474925:\n                                                *(*0x20 + -0x618) = 0x474932;\n                                                fcn.0045ca40(0xf);\n                                                goto code_r0x00474932;\n                                            }\n                                            *(*0x20 + *(*0x20 + -0x3d8) * 8 + -0x58) = *(arg2 + puVar14);\n                                            goto code_r0x00474875;\n                                        }\n                                        if (puVar17 != 0x4) {\ncode_r0x00474932:\n                                            *(*0x20 + -0x618) = 0x474945;\n                                            fcn.00432920();\n                                            goto code_r0x00474945;\n                                        }\n                                        puVar17 = *(*0x20 + -0x3d0);\n                                        arg2_00 = *(*0x20 + -1000);\n                                        if (arg2_00 == 0x4) {\n                                            if (0xe < puVar17) goto code_r0x00474925;\n                                            *(*0x20 + puVar17 * 8 + -0xd0) = *(arg2 + puVar14);\n                                        }\n                                        else {\n                                            if (arg2_00 != 0x8) goto code_r0x00474912;\n                                            puVar14 = *(arg2 + puVar14);\n                                            if (0xe < puVar17) goto code_r0x00474905;\n                                            *(*0x20 + puVar17 * 8 + -0xd0) = puVar14;\n                                        }\n                                    }\n                                    puVar10 = puVar10 + 1;\n                                } while (puVar10 < puVar15);\n                                puVar10 = *(*0x20 + -0x530);\n                                unaff_RDI = arg3;\n                                goto code_r0x00473f63;\n                            }\n                            puVar10 = puVar14;\n                        } while (puVar15 == NULL);\n                        *(*0x20 + -0x618) = 0x474965;\n                        fcn.00432920();\ncode_r0x00474965:\n                        *(*0x20 + -0x618) = 0x474970;\n                        fcn.0045cb00(puVar15);\ncode_r0x00474970:\n                        *(*0x20 + -0x618) = 0x47497b;\n                        fcn.0045cac0(puVar15, arg2_00);\ncode_r0x0047497b:\n                        *(*0x20 + -0x618) = 0x474986;\n                        fcn.0045ca40(puVar17);\ncode_r0x00474986:\n                        *(*0x20 + -0x618) = 0x474991;\n                        fcn.0045ca40(puVar17);\n                        unaff_RDI = arg3;\ncode_r0x00474991:\n                        *(*0x20 + -0x618) = 0x47499c;\n                        fcn.0045cb00(puVar15);\ncode_r0x0047499c:\n                        *(*0x20 + -0x618) = 0x4749a7;\n                        fcn.0045cac0(puVar15, arg2);\n                        arg3 = puVar14;\ncode_r0x004749a7:\n                        *(*0x20 + -0x618) = 0x4749af;\n                        fcn.0045ca40(puVar15);\ncode_r0x004749af:\n                        *(*0x20 + -0x618) = 0x4749b4;\n                        fcn.0045ca40(puVar15);\n                    }\n                    else {\n                        arg1_00 = iVar8 + iVar9;\n                        if (arg3 < 0x100001) goto code_r0x00473f3e;\n                    }\n                    unaff_RBX = arg3 & 0xffffffff;\n                    *(*0x20 + -0x618) = 0x4749c5;\n                    fcn.0045cb40(puVar15, unaff_RBX);\n                }\n                *(*0x20 + -0x618) = 0x4749cc;\n                fcn.0045ca40(puVar15);\n            }\n            arg1 = 0x4b6b60;\n            *(*0x20 + -0x618) = 0x4749db;\n            in_RAX = fcn.004099e0(0x4b6b60);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + 0x18) = arg1;\n        *(puVar11 + 0x20) = unaff_RDI;\n        *(puVar11 + -8) = 0x4749f5;\n        fcn.0045a360();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        arg1 = *(puVar11 + 0x18);\n        unaff_RDI = *(puVar11 + 0x20);\n        *0x20 = puVar11;\n    } while( true );\ncode_r0x00474256:\n    puVar10 = *(*0x20 + -0x530);\n    goto code_r0x00473f63;\ncode_r0x004746fe:\n    puVar10 = *(*0x20 + -0x530);\n    unaff_RDI = arg3;\n    goto code_r0x00473f63;\n}\n",
        "token_count": 10043
    },
    "00476e60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00476e60(int64_t arg1, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t in_R10;\n    uint32_t uVar7;\n    int64_t iStack0000000000000038;\n    \n    uVar4 = unaff_RBX >> 2;\n    for (uVar6 = 0; iStack0000000000000038 = arg4,  uVar6 < uVar4; uVar6 = uVar6 + 1) {\n        uVar5 = uVar6 * 4;\n        arg1_00 = unaff_RBX;\n        if (unaff_RBX < uVar5) goto code_r0x00477177;\n        arg1_00 = unaff_RBX + uVar6 * -4;\n        if (arg1_00 < 4) goto code_r0x0047716a;\n        uVar7 = *(in_RAX + (uVar5 & uVar5 - arg1 >> 0x3f));\n        arg1_00 = uVar7;\n        if (unaff_RSI <= uVar6) goto code_r0x0047715f;\n        *(unaff_RDI + uVar6 * 4) = uVar7 >> 0x18 | (uVar7 & 0xff0000) >> 8 | (uVar7 & 0xff00) << 8 | uVar7 << 0x18;\n    }\n    do {\n        if (unaff_RSI <= uVar6) {\n            if (arg4 == 0) {\n                return;\n            }\n            iVar2 = 0;\n            do {\n                if (unaff_RSI <= iVar2) {\n                    return;\n                }\n                for (unaff_RBX = 0; unaff_RBX < 4; unaff_RBX = unaff_RBX + 1) {\n                    uVar6 = (unaff_RBX + (unaff_RSI - iVar2)) - 4;\n                    uVar4 = unaff_RSI;\n                    if (unaff_RSI <= uVar6) {\ncode_r0x00477128:\n                        fcn.0045ca40(uVar4);\n                        unaff_RSI = unaff_RSI - iVar2;\n                        goto code_r0x00477130;\n                    }\n                    uVar7 = *(unaff_RDI + uVar6 * 4);\n                    if ((0 < iVar2) && (iVar2 + 4 < unaff_RSI)) {\n                        uVar7 = *(str.cw[uVar7 >> 0x18] * 4 + 0x56e2a0) ^ *(str.cw[uVar7 >> 0x10 & 0xff] * 4 + 0x56e6a0)\n                                ^ *(str.cw[uVar7 >> 8 & 0xff] * 4 + 0x56eaa0) ^ *(str.cw[uVar7 & 0xff] * 4 + 0x56eea0);\n                    }\n                    if (in_R10 <= unaff_RBX + iVar2) {\n                        fcn.0045ca40(in_R10);\n                        uVar4 = in_R10;\n                        goto code_r0x00477128;\n                    }\n                    *(arg4 + (unaff_RBX + iVar2) * 4) = uVar7;\n                }\n                iVar2 = iVar2 + 4;\n            } while( true );\n        }\n        arg1_00 = unaff_RBX;\n        if (unaff_RSI <= uVar6 - 1) goto code_r0x00477157;\n        uVar7 = *(unaff_RDI + -4 + uVar6 * 4);\n        unaff_RBX = uVar7;\n        if (uVar4 == 0) goto code_r0x00477152;\n        if (uVar4 == 0xffffffffffffffff) {\n            iVar2 = -uVar6;\n            iVar3 = 0;\n        }\n        else {\n            iVar2 = uVar6 / uVar4;\n            iVar3 = uVar6 % uVar4;\n        }\n        if (iVar3 == 0) {\n            unaff_RBX = iVar2 - 1;\n            if (0xf < unaff_RBX) goto code_r0x00477145;\n            uVar7 = *(iVar2 + 0x5649bf) << 0x18 ^\n                    (str.cw[uVar7 >> 0x18] |\n                    str.cw[(uVar7 << 8) >> 0x10 & 0xff] << 0x10 | str.cw[(uVar7 << 8) >> 0x18] << 0x18 |\n                    str.cw[uVar7 & 0xff] << 8);\n        }\n        else if ((6 < uVar4) && (iVar3 == 4)) {\n            uVar7 = str.cw[uVar7 >> 0x18] << 0x18 | str.cw[uVar7 >> 0x10 & 0xff] << 0x10 |\n                    str.cw[uVar7 >> 8 & 0xff] << 8 | str.cw[unaff_RBX & 0xff];\n        }\n        unaff_RBX = 0x5649c0;\n        if (unaff_RSI <= uVar6 - uVar4) goto code_r0x0047713b;\n        if (unaff_RSI <= uVar6) break;\n        *(unaff_RDI + uVar6 * 4) = uVar7 ^ *(unaff_RDI + (uVar6 - uVar4) * 4);\n        uVar6 = uVar6 + 1;\n    } while( true );\ncode_r0x00477130:\n    fcn.0045ca40(unaff_RSI);\ncode_r0x0047713b:\n    fcn.0045ca40(unaff_RSI);\ncode_r0x00477145:\n    fcn.0045ca40(0x10);\ncode_r0x00477152:\n    fcn.00431720();\n    arg1_00 = unaff_RBX;\ncode_r0x00477157:\n    fcn.0045ca40(unaff_RSI);\ncode_r0x0047715f:\n    fcn.0045ca40(unaff_RSI);\ncode_r0x0047716a:\n    fcn.0045ca40(arg1_00);\ncode_r0x00477177:\n    fcn.0045cb00(arg1_00);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1547
    },
    "00478040": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00478040(uint64_t arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint8_t *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t uVar5;\n    uint64_t arg1_00;\n    uint64_t in_R10;\n    uint64_t in_R11;\n    uint32_t unaff_R12D;\n    int64_t unaff_R14;\n    \ncode_r0x00478040:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x38;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x24) = 0;\n        uVar3 = 0;\n        do {\n            if (3 < uVar3) {\n                uVar3 = 4;\n                unaff_RSI = 0;\n                unaff_RDI = 0;\n                goto code_r0x004781a5;\n            }\n            if (arg3 == in_R10) {\n                if (uVar3 == 0) {\n                    return in_R10;\n                }\n                if ((uVar3 != 1) && (*(in_RAX + 0x140) == -1)) {\n                    unaff_RSI = 0;\n                    unaff_RDI = 0;\n                    goto code_r0x004781a5;\n                }\n                *(*0x20 + -0x10) = in_R10;\n                *(*0x20 + -0x40) = 0x478168;\n                fcn.00409d20();\n                return *(*0x20 + -0x10);\n            }\n            if (arg3 <= in_R10) goto code_r0x00478417;\n            uVar1 = *(in_R10 + unaff_RSI);\n            arg4 = uVar1;\n            in_R11 = in_R10 + 1;\n            uVar2 = *(in_RAX + 0x40 + arg4);\n            unaff_R12D = uVar2;\n            if (uVar2 == 0xff) {\n                if ((uVar1 != 10) && (uVar1 != 0xd)) {\n                    *(*0x20 + -0x10) = in_R11;\n                    unaff_R12D = *(in_RAX + 0x140);\n                    if (unaff_R12D != uVar1) {\n                        *(*0x20 + -0x40) = 0x478129;\n                        fcn.00409d20();\n                        return *(*0x20 + -0x10);\n                    }\n                    if (uVar3 < 2) {\n                        *(*0x20 + -0x40) = 0x478105;\n                        fcn.00409d20();\n                        return *(*0x20 + -0x10);\n                    }\n                    arg1_00 = arg1;\n                    if (uVar3 == 2) goto code_r0x00478373;\n                    goto code_r0x004782f3;\n                }\n                uVar3 = uVar3 - 1;\n            }\n            else {\n                if (3 < uVar3) goto code_r0x0047840a;\n                *(*0x20 + (uVar3 - 0x24)) = uVar2;\n            }\n            uVar3 = uVar3 + 1;\n            in_R10 = in_R11;\n        } while( true );\n    }\n    goto code_r0x00478426;\ncode_r0x004782f3:\n    arg1_00 = arg3;\n    if (arg1_00 <= in_R11) {\ncode_r0x00478357:\n        unaff_RSI = 0;\n        unaff_RDI = 0;\n        in_R10 = in_R11;\ncode_r0x004781a5:\n        *(*0x20 + -0x10) = in_R10;\n        uVar5 = *(*0x20 + -0x24) << 0x12 | *(*0x20 + -0x23) << 0xc;\n        uVar1 = *(*0x20 + -0x22);\n        arg1_00 = *(*0x20 + -0x21) | uVar1 << 6 | uVar5;\n        *(*0x20 + -0x22) = arg1_00;\n        *(*0x20 + -0x23) = (uVar1 << 6 | uVar5) >> 8;\n        arg4 = uVar5 >> 0x10;\n        *(*0x20 + -0x24) = uVar5 >> 0x10;\n        if (uVar3 == 2) {\ncode_r0x00478272:\n            arg1_00 = *(*0x20 + -0x24);\n            if (arg1 != 0) {\n                *unaff_RBX = *(*0x20 + -0x24);\n                if ((*(in_RAX + 0x144) != '\\0') && ((*(*0x20 + -0x23) != '\\0' || (*(*0x20 + -0x22) != '\\0')))) {\n                    *(*0x20 + -0x40) = 0x4782a5;\n                    fcn.00409d20();\n                    return *(*0x20 + -0x10);\n                }\n                return in_R10;\n            }\n            *(*0x20 + -0x40) = 0x4782dc;\n            fcn.0045ca40(0);\ncode_r0x004782dc:\n            *(*0x20 + -0x40) = 0x4782e6;\n            fcn.0045ca40(arg1);\n        }\n        else {\n            if (uVar3 == 3) {\ncode_r0x00478223:\n                arg1_00 = *(*0x20 + -0x23);\n                if (1 < arg1) {\n                    unaff_RBX[1] = *(*0x20 + -0x23);\n                    if ((*(in_RAX + 0x144) != '\\0') && (*(*0x20 + -0x22) != '\\0')) {\n                        *(*0x20 + -0x40) = 0x478252;\n                        fcn.00409d20();\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x23) = 0;\n                    goto code_r0x00478272;\n                }\n                goto code_r0x004782dc;\n            }\n            if (uVar3 != 4) {\n                return in_R10;\n            }\n            if (2 < arg1) {\n                unaff_RBX[2] = arg1_00;\n                *(*0x20 + -0x22) = 0;\n                goto code_r0x00478223;\n            }\n        }\n        *(*0x20 + -0x40) = 0x4782f0;\n        in_RAX = fcn.0045ca40(arg1);\ncode_r0x004782f0:\n        in_R11 = in_R11 + 1;\n        arg3 = arg1_00;\n        goto code_r0x004782f3;\n    }\n    if (in_R11 < arg1_00) {\n        uVar1 = *(in_R11 + unaff_RSI);\n        arg4 = uVar1;\n        if ((uVar1 != 10) && (uVar1 != 0xd)) {\n            if (arg1_00 <= in_R11) goto code_r0x00478357;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = uVar3;\n            *(*0x20 + -0x18) = in_R11;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x40) = 0x478332;\n            unaff_RDI = fcn.00409d20();\n            arg1 = *(*0x20 + 0x18);\n            uVar3 = *(*0x20 + -0x20);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_R11 = *(*0x20 + -0x18);\n            unaff_RSI = 0x4fa0b8;\n            in_RAX = *(*0x20 + 8);\n            in_R10 = in_R11;\n            goto code_r0x004781a5;\n        }\n        goto code_r0x004782f0;\n    }\n    *(*0x20 + -0x40) = 0x478370;\n    arg3 = arg1_00;\n    in_RAX = fcn.0045ca40(arg1_00);\n    do {\n        in_R11 = in_R11 + 1;\ncode_r0x00478373:\n        if (arg3 <= in_R11) break;\n        if (arg3 <= in_R11) goto code_r0x004783ff;\n        uVar1 = *(in_R11 + unaff_RSI);\n        arg4 = uVar1;\n    } while ((uVar1 == 10) || (uVar1 == 0xd));\n    *(*0x20 + -0x10) = in_R11;\n    if (arg3 == in_R11) {\n        *(*0x20 + -0x40) = 0x4783d9;\n        fcn.00409d20();\n        return *(*0x20 + -0x10);\n    }\n    if (arg3 <= in_R11) goto code_r0x004783f4;\n    arg4 = *(unaff_RSI + in_R11);\n    if (unaff_R12D != *(unaff_RSI + in_R11)) {\n        *(*0x20 + -0x40) = 0x4783b6;\n        fcn.00409d20();\n        return *(*0x20 + -0x10);\n    }\n    in_R11 = in_R11 + 1;\n    arg1 = arg1_00;\n    goto code_r0x004782f3;\ncode_r0x004783f4:\n    *(*0x20 + -0x40) = 0x4783ff;\n    fcn.0045ca40(arg3);\ncode_r0x004783ff:\n    *(*0x20 + -0x40) = 0x47840a;\n    fcn.0045ca40(arg3);\ncode_r0x0047840a:\n    *(*0x20 + -0x40) = 0x478417;\n    fcn.0045ca40(4);\ncode_r0x00478417:\n    arg1 = arg3;\n    *(*0x20 + -0x40) = 0x478425;\n    arg3 = arg1;\n    in_RAX = fcn.0045ca40(arg1);\ncode_r0x00478426:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + 0x18) = arg1;\n    *(puVar4 + 0x20) = unaff_RDI;\n    *(puVar4 + 0x28) = unaff_RSI;\n    *(puVar4 + 0x30) = arg3;\n    *(puVar4 + 0x38) = arg4;\n    *(puVar4 + 0x40) = in_R10;\n    *(puVar4 + -8) = 0x478453;\n    fcn.0045a360();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    arg1 = *(puVar4 + 0x18);\n    unaff_RDI = *(puVar4 + 0x20);\n    unaff_RSI = *(puVar4 + 0x28);\n    arg3 = *(puVar4 + 0x30);\n    arg4 = *(puVar4 + 0x38);\n    in_R10 = *(puVar4 + 0x40);\n    *0x20 = puVar4;\n    goto code_r0x00478040;\n}\n",
        "token_count": 2840
    },
    "00479dc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047a325)\n// WARNING: Removing unreachable block (ram,0x0047a23e)\n// WARNING: Removing unreachable block (ram,0x0047a24f)\n// WARNING: Removing unreachable block (ram,0x0047a358)\n// WARNING: Removing unreachable block (ram,0x0047a314)\n// WARNING: Removing unreachable block (ram,0x0047a36a)\n\nint64_t fcn.00479dc0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    char cVar3;\n    uchar uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    ulong uVar9;\n    ulong uVar10;\n    ulong *puVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    ulong *unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    double dVar15;\n    double dVar16;\n    double dVar17;\n    double dVar18;\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x90 && *0x20 + -0x90 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0x110;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x90) = arg3;\n            *(*0x20 + -0x30) = unaff_RSI;\n            *(*0x20 + -0x38) = unaff_RDI;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x98) = arg1;\n            *(*0x20 + -0x118) = 0x479e3b;\n            uVar5 = fcn.00475d80(arg1);\n            *(*0x20 + -0x50) = uVar5;\n            *(*0x20 + -0x58) = unaff_RBX;\n            uVar5 = *(*0x20 + -0x30);\n            *(*0x20 + -0x118) = 0x479e68;\n            iVar6 = fcn.00475d80(*(*0x20 + -0x90));\n            if (iVar6 != *(*0x20 + -0x50)) {\n                return -1;\n            }\n            *(*0x20 + -0x118) = 0x479e8c;\n            cVar3 = fcn.00403040(uVar5);\n            if (cVar3 == '\\0') {\n                return -1;\n            }\n            uVar5 = *(*0x20 + -0x98);\n            uVar8 = uVar5 & 0x1f;\n            if (0x11 < uVar8) {\n                if (uVar8 < 0x17) {\n                    if (uVar8 == 0x12) {\n                        uVar9 = *(*0x20 + -0x40);\n                        *(*0x20 + -0x118) = 0x47a68b;\n                        iVar6 = fcn.0047ac00(uVar5, uVar5, *(*0x20 + -0x90));\n                        if (uVar9 != '\\0') {\n                            return iVar6;\n                        }\n                        *(*0x20 + -0x118) = 0x47a6ad;\n                        uVar5 = fcn.00475840(*(*0x20 + -0x98));\n                        *(*0x20 + -0xb8) = uVar5;\n                        *(*0x20 + -0x118) = 0x47a6cf;\n                        uVar8 = fcn.00475840(*(*0x20 + -0x90));\n                        if (uVar8 <= *(*0x20 + -0xb8)) {\n                            if (uVar8 < *(*0x20 + -0xb8)) {\n                                return 1;\n                            }\n                            return 0;\n                        }\n                        return -1;\n                    }\n                    if (uVar8 == 0x14) {\n                        uVar9 = *(*0x20 + -0x40);\n                        uVar7 = *(*0x20 + -0x90);\n                        *(*0x20 + -0x118) = 0x47a41f;\n                        iVar6 = fcn.0047ac00(uVar5, uVar5, uVar7);\n                        if (uVar9 != '\\0') {\n                            return iVar6;\n                        }\n                        uVar9 = *(*0x20 + -0x40);\n                        uVar10 = *(*0x20 + -0x98);\n                        *(*0x20 + -0x118) = 0x47a445;\n                        fcn.00474a40(uVar10);\n                        *(*0x20 + -0x118) = 0x47a44a;\n                        iVar6 = fcn.00475d80(uVar10);\n                        if (iVar6 != 0) {\n                            iVar6 = *(iVar6 + 8);\n                        }\n                        if (iVar6 == 0) {\n                            iVar6 = 0;\n                            uVar9 = 0;\n                            uVar8 = 0;\n                        }\n                        else {\n                            uVar2 = *0x57fc40;\n                            if ((*0x57fc30 != '\\0') && (*0x57fc38 = iVar6,  uVar2 = uVar9,  *0x5d3dd0 != 0)) {\n                                *(*0x20 + -0x118) = 0x47a487;\n                                iVar6 = fcn.0045c6e0(uVar10, uVar5, uVar7, in_R9);\n                                uVar2 = *0x57fc40;\n                            }\n                            *0x57fc40 = uVar2;\n                            *(*0x20 + -0x18) = iVar6;\n                            *(*0x20 + -0x10) = uVar9;\n                            iVar6 = *(*0x20 + -0x18);\n                            if (iVar6 == 0) {\n                                iVar6 = 0;\n                                uVar9 = 0;\n                                uVar8 = 0;\n                            }\n                            else {\n                                uVar8 = *(iVar6 + 0x17) & 0x1f;\n                                if ((*(iVar6 + 0x17) & 0x20) == 0) {\n                                    uVar8 = uVar8 | 0x80;\n                                }\n                            }\n                        }\n                        *(*0x20 + -0x80) = uVar9;\n                        *(*0x20 + -0x88) = iVar6;\n                        *(*0x20 + -0xd8) = uVar8;\n                        uVar5 = *(*0x20 + -0x90);\n                        uVar9 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x118) = 0x47a505;\n                        fcn.00474a40(uVar5);\n                        *(*0x20 + -0x118) = 0x47a50a;\n                        iVar12 = fcn.00475d80(uVar5);\n                        if (iVar12 != 0) {\n                            iVar12 = *(iVar12 + 8);\n                        }\n                        if (iVar12 == 0) {\n                            iVar6 = 0;\n                            uVar8 = 0;\n                        }\n                        else {\n                            uVar7 = *0x57fc40;\n                            if ((*0x57fc30 != '\\0') && (*0x57fc38 = iVar12,  uVar7 = uVar9,  *0x5d3dd0 != 0)) {\n                                *(*0x20 + -0x118) = 0x47a547;\n                                iVar12 = fcn.0045c6e0(uVar5, iVar6, uVar8, in_R9);\n                                uVar7 = *0x57fc40;\n                            }\n                            *0x57fc40 = uVar7;\n                            *(*0x20 + -0x28) = iVar12;\n                            *(*0x20 + -0x20) = uVar9;\n                            iVar6 = *(*0x20 + -0x28);\n                            if (iVar6 == 0) {\n                                iVar6 = 0;\n                                uVar8 = 0;\n                            }\n                            else {\n                                uVar8 = *(iVar6 + 0x17) & 0x1f;\n                                if ((*(iVar6 + 0x17) & 0x20) == 0) {\n                                    uVar8 = uVar8 | 0x80;\n                                }\n                            }\n                        }\n                        *(*0x20 + -0x118) = 0x47a5b7;\n                        iVar12 = fcn.00479dc0(*(*0x20 + -0xd8), iVar6, uVar8);\n                        if (iVar12 != 0) {\n                            return iVar12;\n                        }\n                        uVar5 = *(*0x20 + -0x40);\n                        uVar9 = *(*0x20 + -0x98);\n                        *(*0x20 + -0x118) = 0x47a5e6;\n                        uVar7 = fcn.00474a40(uVar9);\n                        *(*0x20 + -0x48) = uVar7;\n                        *(*0x20 + -0x40) = uVar5;\n                        *(*0x20 + -0x98) = uVar9;\n                        uVar5 = *(*0x20 + -0x90);\n                        *(*0x20 + -0x118) = 0x47a618;\n                        fcn.00474a40(uVar5);\n                        *(*0x20 + -0x118) = 0x47a63b;\n                        iVar6 = fcn.00479dc0(*(*0x20 + -0x98), iVar6, uVar5);\n                        return iVar6;\n                    }\n                    if (uVar8 == 0x16) {\ncode_r0x0047a74f:\n                        *(*0x20 + -0x118) = 0x47a767;\n                        uVar5 = fcn.00475840(uVar5);\n                        *(*0x20 + -0xa8) = uVar5;\n                        *(*0x20 + -0x118) = 0x47a789;\n                        uVar8 = fcn.00475840(*(*0x20 + -0x90));\n                        if (*(*0x20 + -0xa8) < uVar8) {\n                            return -1;\n                        }\n                        if (uVar8 < *(*0x20 + -0xa8)) {\n                            return 1;\n                        }\n                        return 0;\n                    }\n                }\n                else {\n                    if (uVar8 == 0x18) {\n                        uVar9 = *(*0x20 + -0x40);\n                        *(*0x20 + -0x118) = 0x47a7eb;\n                        uVar5 = fcn.00475ca0(uVar5);\n                        *(*0x20 + -0x70) = uVar5;\n                        *(*0x20 + -0xb0) = uVar9;\n                        uVar5 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x118) = 0x47a815;\n                        uVar9 = fcn.00475ca0(*(*0x20 + -0x90));\n                        *(*0x20 + -0x78) = uVar9;\n                        *(*0x20 + -0xc0) = uVar5;\n                        *(*0x20 + -0x118) = 0x47a83a;\n                        iVar6 = fcn.00402060(uVar9);\n                        if (iVar6 < 0) {\n                            return -1;\n                        }\n                        *(*0x20 + -0x118) = 0x47a85e;\n                        iVar6 = fcn.00402060(*(*0x20 + -0x78));\n                        if (0 < iVar6) {\n                            return 1;\n                        }\n                        return 0;\n                    }\n                    if (uVar8 == 0x19) {\n                        iVar6 = 0;\n                        goto code_r0x0047a913;\n                    }\n                    if (uVar8 == 0x1a) goto code_r0x0047a74f;\n                }\ncode_r0x0047a8ba:\n                pcVar1 = *(*(*0x20 + -0x50) + 0xf8);\n                *(*0x20 + -0x118) = 0x47a8d3;\n                (*pcVar1)();\n                *(*0x20 + -0x118) = 0x47a8ec;\n                fcn.00448620(0x15);\n                *(*0x20 + -0x118) = 0x47a8f1;\n                fcn.00409da0();\n                *(*0x20 + -0x118) = 0x47a905;\n                fcn.00432920();\n                while( true ) {\n                    iVar6 = *(*0x20 + -200) + 1;\n                    uVar5 = *(*0x20 + -0x98);\ncode_r0x0047a913:\n                    *(*0x20 + -200) = iVar6;\n                    *(*0x20 + -0x118) = 0x47a930;\n                    iVar6 = fcn.00475760(uVar5);\n                    if (iVar6 <= *(*0x20 + -200)) break;\n                    uVar9 = *(*0x20 + -0x40);\n                    uVar7 = *(*0x20 + -0x98);\n                    *(*0x20 + -0x118) = 0x47a958;\n                    uVar10 = fcn.00474c20(uVar7);\n                    *(*0x20 + -0x60) = uVar10;\n                    *(*0x20 + -0x68) = uVar9;\n                    *(*0x20 + -0xa0) = uVar7;\n                    uVar9 = *(*0x20 + -0x90);\n                    *(*0x20 + -0x118) = 0x47a98f;\n                    fcn.00474c20(uVar9);\n                    *(*0x20 + -0x118) = 0x47a9b2;\n                    iVar6 = fcn.00479dc0(*(*0x20 + -0xa0), uVar5, uVar9);\n                    if (iVar6 != 0) {\n                        return iVar6;\n                    }\n                }\n                return 0;\n            }\n            if (uVar8 < 0xd) {\n                if (uVar8 == 1) {\n                    *(*0x20 + -0x118) = 0x47a159;\n                    uVar4 = fcn.00473640(uVar5);\n                    *(*0x20 + -0xd9) = uVar4;\n                    *(*0x20 + -0x118) = 0x47a17a;\n                    cVar3 = fcn.00473640(*(*0x20 + -0x90));\n                    if (cVar3 == *(*0x20 + -0xd9)) {\n                        return 0;\n                    }\n                    if (*(*0x20 + -0xd9) != '\\0') {\n                        return 1;\n                    }\n                    return -1;\n                }\n                if (4 < uVar8 - 2) {\n                    if (uVar8 < 7) goto code_r0x0047a8ba;\n                    if (uVar8 < 10) {\n                        if (uVar8 == 7) {\n                            uVar8 = **(*0x20 + -0x40);\n                        }\n                        else if (uVar8 == 8) {\n                            uVar8 = **(*0x20 + -0x40);\n                        }\n                        else {\n                            uVar8 = **(*0x20 + -0x40);\n                        }\n                    }\n                    else if (uVar8 == 10) {\n                        uVar8 = **(*0x20 + -0x40);\n                    }\n                    else if (uVar8 == 0xb) {\n                        uVar8 = **(*0x20 + -0x40);\n                    }\n                    else {\n                        uVar8 = **(*0x20 + -0x40);\n                    }\n                    uVar13 = *(*0x20 + -0x90) & 0x1f;\n                    *(*0x20 + -0x90) = uVar13;\n                    if (uVar13 < 10) {\n                        if (uVar13 == 7) {\n                            uVar13 = **(*0x20 + -0x30);\ncode_r0x0047a0fa:\n                            if (uVar8 < uVar13) {\n                                return -1;\n                            }\n                            if (uVar13 < uVar8) {\n                                return 1;\n                            }\n                            return 0;\n                        }\n                        if (uVar13 == 8) {\n                            uVar13 = **(*0x20 + -0x30);\n                            goto code_r0x0047a0fa;\n                        }\n                        if (uVar13 == 9) {\n                            uVar13 = **(*0x20 + -0x30);\n                            goto code_r0x0047a0fa;\n                        }\n                    }\n                    else {\n                        if (uVar13 == 10) {\n                            uVar13 = **(*0x20 + -0x30);\n                            goto code_r0x0047a0fa;\n                        }\n                        if (uVar13 == 0xb) {\n                            uVar13 = **(*0x20 + -0x30);\n                            goto code_r0x0047a0fa;\n                        }\n                        if (uVar13 == 0xc) {\n                            uVar13 = **(*0x20 + -0x30);\n                            goto code_r0x0047a0fa;\n                        }\n                    }\n                    goto code_r0x0047ab37;\n                }\n                if (uVar8 < 4) {\n                    if (uVar8 == 2) {\n                        iVar6 = **(*0x20 + -0x40);\n                    }\n                    else {\n                        iVar6 = **(*0x20 + -0x40);\n                    }\n                }\n                else if (uVar8 == 4) {\n                    iVar6 = **(*0x20 + -0x40);\n                }\n                else if (uVar8 == 5) {\n                    iVar6 = **(*0x20 + -0x40);\n                }\n                else {\n                    iVar6 = **(*0x20 + -0x40);\n                }\n                uVar8 = *(*0x20 + -0x90) & 0x1f;\n                *(*0x20 + -0x90) = uVar8;\n                if (uVar8 < 4) {\n                    if (uVar8 == 2) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x00479fa8;\n                    }\n                    if (uVar8 == 3) {\n                        iVar12 = **(*0x20 + -0x30);\ncode_r0x00479fa8:\n                        if (iVar6 < iVar12) {\n                            return -1;\n                        }\n                        if (iVar12 < iVar6) {\n                            return 1;\n                        }\n                        return 0;\n                    }\n                }\n                else {\n                    if (uVar8 == 4) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x00479fa8;\n                    }\n                    if (uVar8 == 5) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x00479fa8;\n                    }\n                    if (uVar8 == 6) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x00479fa8;\n                    }\n                }\n            }\n            else {\n                if (uVar8 < 0xf) {\n                    if (uVar8 == 0xd) {\n                        dVar15 = **(*0x20 + -0x40);\n                    }\n                    else {\n                        dVar15 = **(*0x20 + -0x40);\n                    }\n                    uVar8 = *(*0x20 + -0x90) & 0x1f;\n                    if (uVar8 == 0xd) {\n                        dVar16 = **(*0x20 + -0x30);\ncode_r0x0047a236:\n                        if (dVar16 <= dVar15) {\n                            if (dVar15 <= dVar16) {\n                                iVar6 = 0;\n                            }\n                            else {\n                                iVar6 = 1;\n                            }\n                        }\n                        else {\n                            iVar6 = -1;\n                        }\n                        return iVar6;\n                    }\n                    if (uVar8 == 0xe) {\n                        dVar16 = **(*0x20 + -0x30);\n                        goto code_r0x0047a236;\n                    }\n                }\n                else {\n                    unaff_RSI = uVar8 - 0xf;\n                    if (1 < unaff_RSI) {\n                        if (uVar8 == 0x11) {\n                            iVar6 = 0;\n                            while( true ) {\n                                *(*0x20 + -0xd0) = iVar6;\n                                *(*0x20 + -0x118) = 0x47aa08;\n                                iVar6 = fcn.004750a0(uVar5);\n                                if (iVar6 <= *(*0x20 + -0xd0)) {\n                                    return 0;\n                                }\n                                uVar9 = *(*0x20 + -0x40);\n                                uVar7 = *(*0x20 + -0x98);\n                                *(*0x20 + -0x118) = 0x47aa30;\n                                uVar10 = fcn.00474d60(uVar7);\n                                *(*0x20 + -0x60) = uVar10;\n                                *(*0x20 + -0x68) = uVar9;\n                                *(*0x20 + -0xa0) = uVar7;\n                                uVar9 = *(*0x20 + -0x90);\n                                *(*0x20 + -0x118) = 0x47aa67;\n                                fcn.00474d60(uVar9);\n                                *(*0x20 + -0x118) = 0x47aa8a;\n                                iVar6 = fcn.00479dc0(*(*0x20 + -0xa0), uVar5, uVar9);\n                                if (iVar6 != 0) break;\n                                iVar6 = *(*0x20 + -0xd0) + 1;\n                                uVar5 = *(*0x20 + -0x98);\n                            }\n                            return iVar6;\n                        }\n                        goto code_r0x0047a8ba;\n                    }\n                    if (uVar8 == 0xf) {\n                        dVar15 = **(*0x20 + -0x40);\n                        dVar16 = (*(*0x20 + -0x40))[1];\n                    }\n                    else {\n                        dVar15 = **(*0x20 + -0x40);\n                        dVar16 = (*(*0x20 + -0x40))[1];\n                    }\n                    uVar8 = *(*0x20 + -0x90) & 0x1f;\n                    if (uVar8 == 0xf) {\n                        dVar17 = **(*0x20 + -0x30);\n                        dVar18 = (*(*0x20 + -0x30))[1];\ncode_r0x0047a30c:\n                        if (dVar17 <= dVar15) {\n                            if (dVar15 <= dVar17) {\n                                iVar6 = 0;\n                            }\n                            else {\n                                iVar6 = 1;\n                            }\n                        }\n                        else {\n                            iVar6 = -1;\n                        }\n                        if (iVar6 == 0) {\n                            if (dVar18 <= dVar16) {\n                                if (dVar16 <= dVar18) {\n                                    iVar6 = 0;\n                                }\n                                else {\n                                    iVar6 = 1;\n                                }\n                            }\n                            else {\n                                iVar6 = -1;\n                            }\n                            return iVar6;\n                        }\n                        return iVar6;\n                    }\n                    if (uVar8 == 0x10) {\n                        dVar17 = **(*0x20 + -0x30);\n                        dVar18 = (*(*0x20 + -0x30))[1];\n                        goto code_r0x0047a30c;\n                    }\n                    *(*0x20 + -0x90) = uVar8;\n                    *(*0x20 + -0x118) = 0x47aac9;\n                    puVar11 = fcn.0040c440();\n                    puVar11[1] = 0x15;\n                    *puVar11 = 0x4ccdd2;\n                    uVar8 = *(*0x20 + -0x90);\n                    puVar11[2] = uVar8;\n                    *(*0x20 + -0x118) = 0x47aaf6;\n                    fcn.00432920();\n                }\n                *(*0x20 + -0x90) = uVar8;\n                *(*0x20 + -0x118) = 0x47ab0a;\n                puVar11 = fcn.0040c440();\n                puVar11[1] = 0x13;\n                *puVar11 = 0x4cc0e8;\n                puVar11[2] = *(*0x20 + -0x90);\n                *(*0x20 + -0x118) = 0x47ab37;\n                fcn.00432920();\ncode_r0x0047ab37:\n                *(*0x20 + -0x118) = 0x47ab45;\n                puVar11 = fcn.0040c440();\n                puVar11[1] = 0x12;\n                *puVar11 = 0x4cb9d4;\n                puVar11[2] = *(*0x20 + -0x90);\n                *(*0x20 + -0x118) = 0x47ab72;\n                fcn.00432920();\n            }\n            *(*0x20 + -0x118) = 0x47ab7e;\n            unaff_RBX = fcn.0040c440();\n            unaff_RBX[1] = 0x11;\n            *unaff_RBX = 0x4cb329;\n            arg1 = *(*0x20 + -0x90);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x118) = 0x47abab;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + 0x20) = unaff_RDI;\n        *(puVar14 + 0x28) = unaff_RSI;\n        *(puVar14 + 0x30) = arg3;\n        *(puVar14 + -8) = 0x47abcf;\n        fcn.0045a360();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        unaff_RDI = *(puVar14 + 0x20);\n        unaff_RSI = *(puVar14 + 0x28);\n        arg3 = *(puVar14 + 0x30);\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 6280
    },
    "004846c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004846c0(uint *arg1)\n\n{\n    bool bVar1;\n    uint *in_RAX;\n    uint *noname_1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong arg1_00;\n    int64_t *unaff_RBX;\n    uint *puVar4;\n    char unaff_DIL;\n    code *in_R8;\n    uint *in_R9;\n    int64_t unaff_R14;\n    uint uStack48;\n    uint uStack44;\n    ulong uStack40;\n    uint *puStack32;\n    ulong uStack24;\n    uint *puStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x57f6b0 != 0) {\n        return 0;\n    }\n    if (arg1 < 5) {\n        if (arg1 == 0x2) {\n            if (*unaff_RBX != 0x7069) goto code_r0x00484cfa;\n            goto code_r0x00484a9c;\n        }\n        if (arg1 == 0x3) {\n            iVar2 = fcn.00402060(0x4c7a9f);\n            if (iVar2 < 1) {\n                if ((*unaff_RBX == 0x6964) && (*(unaff_RBX + 2) == 'r')) {\n                    *(in_RAX + 0x88) = 3;\n                    goto code_r0x00484aa3;\n                }\n                if ((*unaff_RBX != 0x7069) || (*(unaff_RBX + 2) != '4')) goto code_r0x00484cfa;\n            }\n            else if (((*unaff_RBX != 0x7069) || (*(unaff_RBX + 2) != '6')) &&\n                    (((*unaff_RBX != 0x6374 || (*(unaff_RBX + 2) != 'p')) &&\n                     ((*unaff_RBX != 0x6475 || (*(unaff_RBX + 2) != 'p')))))) goto code_r0x00484cfa;\n            goto code_r0x00484a9c;\n        }\n        if (arg1 != 0x4) goto code_r0x00484cfa;\n        iVar2 = fcn.00402060(0x4c7bf7);\n        if (0 < iVar2) {\n            iVar2 = fcn.00402060(0x4c7bff);\n            if (iVar2 < 1) {\n                if ((*unaff_RBX != 0x36706374) && (*unaff_RBX != 0x34706475)) goto code_r0x00484cfa;\n            }\n            else if ((*unaff_RBX != 0x36706475) && (*unaff_RBX != 0x78696e75)) goto code_r0x00484cfa;\n            goto code_r0x00484a9c;\n        }\n        if (*unaff_RBX == 0x656c6966) {\n            *(in_RAX + 0x88) = 1;\n        }\n        else {\n            if (*unaff_RBX != 0x65706970) {\n                if (*unaff_RBX != 0x34706374) goto code_r0x00484cfa;\n                goto code_r0x00484a9c;\n            }\n            *(in_RAX + 0x88) = 4;\n        }\n    }\n    else {\n        if (arg1 == 0x7) {\n            if (((*unaff_RBX != 0x736e6f63) || (*(unaff_RBX + 4) != 0x6c6f)) || (*(unaff_RBX + 6) != 'e'))\n            goto code_r0x00484cfa;\n            *(in_RAX + 0x88) = 2;\n            goto code_r0x00484aa3;\n        }\n        if (arg1 == 0x8) {\n            if (*unaff_RBX != 0x6d61726778696e75) {\ncode_r0x00484cfa:\n                arg1_00 = 0x25;\n                uStack24 = fcn.00448620(0x25);\n                uStack40 = 0x4d17c0;\n                puVar3 = fcn.0040c440();\n                puVar3[1] = uStack40;\n                if (*0x5d3dd0 == 0) {\n                    *puVar3 = uStack24;\n                }\n                else {\n                    fcn.0045c6c0(arg1_00, uStack24, in_R8, in_R9);\n                }\n                return 0;\n            }\n        }\n        else if (((arg1 != 0xa) || (*unaff_RBX != 0x6b63617078696e75)) || (*(unaff_RBX + 1) != 0x7465))\n        goto code_r0x00484cfa;\ncode_r0x00484a9c:\n        *(in_RAX + 0x88) = 0;\n    }\ncode_r0x00484aa3:\n    *(in_RAX + 0x21f) = *(in_RAX + 0x88) != '\\0';\n    if (unaff_DIL == '\\0') {\n        noname_1 = NULL;\n        puVar4 = NULL;\n    }\n    else {\n        noname_1 = fcn.00484400(in_RAX + 0x6e);\n        puVar4 = in_RAX;\n    }\n    if (*0x57ed40 != NULL) {\n        in_R8 = **0x57ed40;\n        in_R9 = in_RAX;\n        puStack32 = noname_1;\n        puStack16 = puVar4;\n        (*in_R8)(in_RAX, *0x57ed40);\n        noname_1 = puStack32;\n    }\n    if (noname_1 != NULL) {\n        return 0;\n    }\n    if ((unaff_DIL != '\\0') && (*0x5d3b22 != '\\0')) {\n        if ((arg1 == 0x3) && ((*unaff_RBX == 0x6374 && (*(unaff_RBX + 2) == 'p')))) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n        iVar2 = fcn.0047cf20(*(in_RAX + 4));\n        noname_1 = in_RAX;\n        if ((iVar2 == 0) && (bVar1)) {\n            *(in_RAX + 0x87) = 1;\n        }\n    }\n    if (arg1 == 0x3) {\n        if ((*unaff_RBX != 0x6475) || (*(unaff_RBX + 2) != 'p')) goto code_r0x00484c7e;\n    }\n    else if ((arg1 != 0x4) || ((*unaff_RBX != 0x34706475 && (*unaff_RBX != 0x36706475)))) goto code_r0x00484c7e;\n    uStack48 = 0;\n    uStack44 = 0;\n    noname_1 = *(in_RAX + 4);\n    arg1 = &uStack44;\n    in_R8 = NULL;\n    in_R9 = &uStack48;\n    iVar2 = fcn.0047d140(arg1, noname_1, 0, in_R9);\n    if (iVar2 != 0) {\n        return 0x4c8570;\n    }\ncode_r0x00484c7e:\n    in_RAX[0x10] = 0x72;\n    in_RAX[0x44] = 0x77;\n    if (*0x5d3dd0 == 0) {\n        *(in_RAX + 0x14) = in_RAX;\n        *(in_RAX + 0x48) = in_RAX;\n    }\n    else {\n        fcn.0045c5a0(arg1, noname_1, in_R8, in_R9);\n        in_RAX = fcn.0045c5a0(arg1, noname_1, in_R8, in_R9);\n    }\n    *(in_RAX + 0xe) = *(in_RAX + 0x6e);\n    *(in_RAX + 0x42) = *(in_RAX + 0x6e);\n    return 0;\n}\n",
        "token_count": 1928
    },
    "00484dc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00484dc0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*(in_RAX + 0x10) != -1) {\n        if (*(in_RAX + 0x1b8) != 0) {\n            fcn.00457680();\n            *(in_RAX + 0x1b8) = 0;\n        }\n        if (*(in_RAX + 0x220) == '\\0') {\n            uVar1 = (***0x5762a8)();\n        }\n        else if (*(in_RAX + 0x220) == '\\x03') {\n            uVar1 = fcn.0047c700(*(in_RAX + 0x10));\n        }\n        else {\n            uVar1 = fcn.0047c620(*(in_RAX + 0x10));\n        }\n        *(in_RAX + 0x10) = 0xffffffffffffffff;\n        fcn.004581e0(in_RAX + 0x218);\n        return uVar1;\n    }\n    return 0x4fa138;\n}\n",
        "token_count": 301
    },
    "00485960": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00485960(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    int64_t unaff_RSI;\n    int32_t *unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((unaff_RSI == 4) && (*unaff_RDI == 0x656c6966)) {\n        iVar2 = fcn.0047ca00();\n        if (iVar2 == 0) {\n            unaff_RSI = 7;\n        }\n        iVar1 = fcn.0047cc20();\n        if ((*0x20 == 0x24) && (iVar1 == 3)) {\n            unaff_RSI = 4;\n        }\n    }\n    piVar3 = fcn.0040c440();\n    iVar2 = fcn.0040c440();\n    *(iVar2 + 0x10) = in_RAX;\n    *(iVar2 + 0x21d) = 0x101;\n    *(iVar2 + 0x230) = arg1;\n    if (*0x5d3dd0 == 0) {\n        *(iVar2 + 0x228) = unaff_RBX;\n        *piVar3 = iVar2;\n    }\n    else {\n        fcn.0045c6c0(arg1, unaff_RBX, in_R8, in_R9);\n        fcn.0045c5a0(arg1, unaff_RBX, in_R8, in_R9);\n    }\n    fcn.00416340(0x4b5800);\n    fcn.004846c0(unaff_RSI);\n    return piVar3;\n}\n",
        "token_count": 452
    },
    "0048bc80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.0048bc80(uint64_t *arg1, ulong noname_1, uint64_t **arg3)\n\n{\n    ulong uVar1;\n    uint64_t *puVar2;\n    char cVar3;\n    uint64_t *in_RAX;\n    ulong uVar4;\n    ulong *puVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    ulong *puVar15;\n    uint64_t **ppuVar16;\n    uint32_t uVar17;\n    uint64_t **arg1_00;\n    uint64_t uVar18;\n    uint8_t *puVar19;\n    uint64_t *puVar20;\n    uchar uVar21;\n    uint64_t uVar22;\n    int64_t *piVar23;\n    int64_t *piVar24;\n    int64_t *piVar25;\n    code *pcVar26;\n    uint64_t *unaff_RBX;\n    uchar *puVar27;\n    uchar *unaff_RBP;\n    uint64_t **unaff_RSI;\n    uint64_t **unaff_RDI;\n    uint64_t **ppuVar28;\n    uint8_t *puVar29;\n    uint64_t **in_R9;\n    uint64_t **ppuVar30;\n    int64_t unaff_R14;\n    bool bVar31;\n    \n    while (uVar17 = unaff_RSI,  puVar27 = *0x20, \n          *0x20 + -0x160 < *(unaff_R14 + 0x10) || *0x20 + -0x160 == *(unaff_R14 + 0x10)) {\ncode_r0x0048da5e:\n        *(puVar27 + 8) = in_RAX;\n        *(puVar27 + 0x10) = unaff_RBX;\n        *(puVar27 + 0x18) = arg1;\n        *(puVar27 + 0x20) = unaff_RDI;\n        *(puVar27 + 0x28) = unaff_RSI;\n        *(puVar27 + 0x30) = arg3;\n        *(puVar27 + -8) = 0x48da85;\n        fcn.0045a360();\n        in_RAX = *(puVar27 + 8);\n        unaff_RBX = *(puVar27 + 0x10);\n        arg1 = *(puVar27 + 0x18);\n        unaff_RDI = *(puVar27 + 0x20);\n        unaff_RSI = *(puVar27 + 0x28);\n        arg3 = *(puVar27 + 0x30);\n        *0x20 = puVar27;\n    }\n    puVar27 = *0x20 + -0x1e0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + 0x28) = uVar17;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0xe0) = unaff_RDI;\n    *(*0x20 + -0x78) = arg1;\n    *(*0x20 + -0x80) = unaff_RBX;\n    if (((0 < arg3) && (unaff_RDI != NULL)) && ((unaff_RDI & 0x60) == 0)) {\n        *(*0x20 + -0x1e8) = 0x48bd25;\n        uVar4 = fcn.00474f20(unaff_RDI);\n        iVar13 = *(*0x20 + 8);\n        *(iVar13 + 0x18) = uVar4;\n        if (*0x5d3dd0 == 0) {\n            *(iVar13 + 0x20) = arg1;\n        }\n        else {\n            *(*0x20 + -0x1e8) = 0x48bd4b;\n            fcn.0045c6e0(unaff_RDI, iVar13, arg3, in_R9);\n        }\n        *(*0x20 + -0x1e8) = 0x48bd5a;\n        cVar3 = fcn.0048ac80();\n        if (cVar3 != '\\0') {\n            return;\n        }\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + -0x78);\n        unaff_RBX = *(*0x20 + -0x80);\n        uVar17 = *(*0x20 + 0x28);\n        unaff_RDI = *(*0x20 + -0xe0);\n        arg3 = *(*0x20 + 0x30);\n    }\n    in_RAX[3] = 0;\n    if (*0x5d3dd0 == 0) {\n        in_RAX[4] = 0;\n    }\n    else {\n        *(*0x20 + -0x1e8) = 0x48bdcf;\n        in_RAX = fcn.0045c720(arg1, in_RAX + 4, 0, unaff_RDI);\n        in_R9 = unaff_RDI;\n    }\n    in_RAX[7] = unaff_RDI;\n    if (*0x5d3dd0 == 0) {\n        in_RAX[5] = unaff_RBX;\n        in_RAX[6] = arg1;\n    }\n    else {\n        *(*0x20 + -0x1e8) = 0x48bdfb;\n        fcn.0045c6e0(arg1, in_RAX + 5, arg3, unaff_RDI);\n        *(*0x20 + -0x1e8) = 0x48be05;\n        in_RAX = fcn.0045c6a0();\n        in_R9 = unaff_RDI;\n    }\n    uVar22 = unaff_RDI & 0x1f;\n    if (uVar22 < 0x11) {\n        if (0xc < uVar22) {\n            if (0xe < uVar22) {\n                if (uVar22 == 0xf) {\n                    *(*0x20 + -0x1e8) = 0x48ce5c;\n                    fcn.004898c0(uVar17);\n                    return;\n                }\n                *(*0x20 + -0x1e8) = 0x48ce73;\n                fcn.004898c0(uVar17);\n                return;\n            }\n            if (uVar22 == 0xd) {\n                *(*0x20 + -0x1e8) = 0x48ce25;\n                fcn.004897c0(uVar17);\n                return;\n            }\n            *(*0x20 + -0x1e8) = 0x48ce37;\n            fcn.004897c0(uVar17);\n            return;\n        }\n        if (1 < uVar22) {\n            if (uVar22 < 7) {\n                if (uVar22 < 4) {\n                    if (uVar22 == 2) {\n                        uVar22 = *arg1;\n                    }\n                    else {\n                        uVar22 = *arg1;\n                    }\n                }\n                else if (uVar22 == 4) {\n                    uVar22 = *arg1;\n                }\n                else if (uVar22 == 5) {\n                    uVar22 = *arg1;\n                }\n                else {\n                    uVar22 = *arg1;\n                }\n                *(*0x20 + -0x1e8) = 0x48cdab;\n                fcn.004895c0(1, uVar22);\n                return;\n            }\n            if (uVar22 < 10) {\n                if (uVar22 == 7) {\n                    uVar22 = *arg1;\n                }\n                else if (uVar22 == 8) {\n                    uVar22 = *arg1;\n                }\n                else {\n                    uVar22 = *arg1;\n                }\n            }\n            else if (uVar22 == 10) {\n                uVar22 = *arg1;\n            }\n            else if (uVar22 == 0xb) {\n                uVar22 = *arg1;\n            }\n            else {\n                uVar22 = *arg1;\n            }\n            *(*0x20 + -0x1e8) = 0x48cdfa;\n            fcn.004895c0(0, uVar22);\n            return;\n        }\n        if (uVar22 == 0) {\n            if (arg3 == NULL) {\n                uVar22 = in_RAX[1];\n                *(*0x20 + -0xe8) = uVar22 + 0x17;\n                uVar9 = *in_RAX;\n                uVar6 = in_RAX[2];\n                if (in_RAX[2] < uVar22 + 0x17) {\n                    *(*0x20 + -0xf0) = uVar22;\n                    *(*0x20 + -0x1e8) = 0x48cc1a;\n                    uVar9 = fcn.00444c60(uVar22);\n                    uVar6 = uVar22;\n                }\n                *(*0x20 + -0xf0) = uVar6;\n                *(*0x20 + -0x88) = uVar9;\n                uVar7 = 0x17;\n                *(*0x20 + -0x1e8) = 0x48cc4d;\n                fcn.0045d380(0x17);\n                puVar15 = *(*0x20 + 8);\n                puVar15[1] = *(*0x20 + -0xe8);\n                uVar4 = *(*0x20 + -0xf0);\n                puVar15[2] = uVar4;\n                if (*0x5d3dd0 == 0) {\n                    *puVar15 = *(*0x20 + -0x88);\n                    return;\n                }\n                *(*0x20 + -0x1e8) = 0x48cc93;\n                fcn.0045c5a0(uVar7, uVar4, arg3, in_R9);\n                return;\n            }\n            if (uVar17 != 0x76) {\n                *(*0x20 + -0x1e8) = 0x48cd31;\n                fcn.00488fc0(arg1, unaff_RDI, arg3);\n                return;\n            }\n            uVar9 = in_RAX[1];\n            uVar22 = uVar9 + 5;\n            uVar6 = *in_RAX;\n            uVar8 = uVar9;\n            uVar18 = in_RAX[2];\n            if (in_RAX[2] < uVar22) {\n                *(*0x20 + -0xe8) = uVar22;\n                *(*0x20 + -0xf0) = uVar9;\n                *(*0x20 + -0x1e8) = 0x48ccda;\n                uVar6 = fcn.00444c60(uVar9);\n                uVar22 = *(*0x20 + -0xe8);\n                in_RAX = *(*0x20 + 8);\n                uVar8 = *(*0x20 + -0xf0);\n                uVar18 = uVar9;\n            }\n            *(uVar6 + uVar8) = 0x6c696e3c;\n            *(uVar6 + 4 + uVar8) = 0x3e;\n            in_RAX[1] = uVar22;\n            in_RAX[2] = uVar18;\n            if (*0x5d3dd0 == 0) {\n                *in_RAX = uVar6;\n                return;\n            }\n            *(*0x20 + -0x1e8) = 0x48cd25;\n            fcn.0045c6e0(uVar8, unaff_RDI, arg3, in_R9);\n            return;\n        }\n        *(*0x20 + -0x1e8) = 0x48cd45;\n        fcn.00473640(unaff_RDI);\n        *(*0x20 + -0x1e8) = 0x48cd5b;\n        fcn.004894c0(*(*0x20 + 0x28));\n        return;\n    }\n    if (uVar22 < 0x16) {\n        if (0x13 < uVar22) {\n            if (uVar22 == 0x14) {\n                *(*0x20 + -0x1e8) = 0x48c18a;\n                fcn.00474a40(unaff_RDI);\n                if (unaff_RDI != NULL) {\n                    *(*0x20 + -0x1e8) = 0x48c3dd;\n                    fcn.0048bc80(arg1, *(*0x20 + 0x30), *(*0x20 + 0x30) + 1);\n                    return;\n                }\n                piVar24 = *(*0x20 + 8);\n                if (*(piVar24 + 10) == '\\0') {\n                    uVar9 = piVar24[1];\n                    uVar22 = uVar9 + 5;\n                    iVar13 = *piVar24;\n                    uVar6 = uVar9;\n                    uVar8 = piVar24[2];\n                    if (piVar24[2] < uVar22) {\n                        *(*0x20 + -0xe8) = uVar9;\n                        *(*0x20 + -0xf0) = uVar22;\n                        *(*0x20 + -0x1e8) = 0x48c1da;\n                        iVar13 = fcn.00444c60(uVar9);\n                        uVar22 = *(*0x20 + -0xf0);\n                        piVar24 = *(*0x20 + 8);\n                        uVar6 = *(*0x20 + -0xe8);\n                        uVar8 = uVar9;\n                    }\n                    *(iVar13 + uVar6) = 0x6c696e3c;\n                    *(iVar13 + 4 + uVar6) = 0x3e;\n                    piVar24[1] = uVar22;\n                    piVar24[2] = uVar8;\n                    if (*0x5d3dd0 == 0) {\n                        *piVar24 = iVar13;\n                        return;\n                    }\n                    *(*0x20 + -0x1e8) = 0x48c225;\n                    fcn.0045c6e0(uVar6, uVar8, arg3, in_R9);\n                    return;\n                }\n                iVar13 = *(*0x20 + -0x78);\n                *(*0x20 + -0x1e8) = 0x48c247;\n                iVar11 = fcn.00475d80(*(*0x20 + -0xe0));\n                pcVar26 = *(iVar11 + 0xf8);\n                *(*0x20 + -0x1e8) = 0x48c253;\n                uVar7 = (*pcVar26)();\n                *(*0x20 + -0x158) = iVar13;\n                puVar15 = *(*0x20 + 8);\n                uVar22 = puVar15[1];\n                *(*0x20 + -0xe8) = uVar22;\n                *(*0x20 + -0xf0) = uVar22 + iVar13;\n                uVar4 = *puVar15;\n                uVar9 = puVar15[2];\n                if (puVar15[2] < uVar22 + iVar13) {\n                    *(*0x20 + -0xc0) = uVar7;\n                    *(*0x20 + -0x1e8) = 0x48c29e;\n                    uVar4 = fcn.00444c60(uVar22);\n                    iVar13 = *(*0x20 + -0x158);\n                    uVar9 = uVar22;\n                }\n                *(*0x20 + -0xf8) = uVar9;\n                *(*0x20 + -0x88) = uVar4;\n                *(*0x20 + -0x1e8) = 0x48c2e5;\n                fcn.0045d380(iVar13);\n                uVar9 = *(*0x20 + -0xf0);\n                piVar24 = *(*0x20 + 8);\n                piVar24[1] = uVar9;\n                uVar6 = *(*0x20 + -0xf8);\n                piVar24[2] = uVar6;\n                iVar11 = *(*0x20 + -0xe8);\n                uVar22 = iVar11 + *(*0x20 + -0x158) + 5;\n                if (*0x5d3dd0 == 0) {\n                    iVar14 = *(*0x20 + -0x88);\n                    *piVar24 = iVar14;\n                }\n                else {\n                    iVar14 = *(*0x20 + -0x88);\n                    *(*0x20 + -0x1e8) = 0x48c345;\n                    fcn.0045c6e0(uVar9, uVar6, iVar11, iVar13);\n                }\n                uVar8 = uVar9;\n                if (uVar6 < uVar22) {\n                    *(*0x20 + -0xe8) = uVar22;\n                    *(*0x20 + -0x1e8) = 0x48c365;\n                    iVar14 = fcn.00444c60(uVar9);\n                    uVar22 = *(*0x20 + -0xe8);\n                    piVar24 = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0xf0);\n                    uVar6 = uVar9;\n                }\n                *(iVar14 + uVar8) = 0x6c696e28;\n                *(iVar14 + 4 + uVar8) = 0x29;\n                piVar24[1] = uVar22;\n                piVar24[2] = uVar6;\n                if (*0x5d3dd0 == 0) {\n                    *piVar24 = iVar14;\n                    return;\n                }\n                *(*0x20 + -0x1e8) = 0x48c3af;\n                fcn.0045c6e0(uVar8, uVar6, iVar11, iVar13);\n                return;\n            }\n            if (*(in_RAX + 10) == '\\0') {\n                arg1_00 = in_RAX[1];\n                ppuVar16 = arg1_00 + 4;\n                in_R9 = *in_RAX;\n                ppuVar28 = in_RAX[2];\n                ppuVar30 = arg1_00;\n                if (in_RAX[2] < ppuVar16) {\n                    *(*0x20 + -0xe8) = arg1_00;\n                    *(*0x20 + -0xf0) = ppuVar16;\n                    *(*0x20 + -0x1e8) = 0x48be8e;\n                    in_R9 = fcn.00444c60(arg1_00);\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    arg3 = *(*0x20 + 0x30);\n                    ppuVar30 = *(*0x20 + -0xe8);\n                    ppuVar16 = *(*0x20 + -0xf0);\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + -0x78);\n                    ppuVar28 = arg1_00;\n                }\n                *(in_R9 + ppuVar30) = 0x5b70616d;\n                in_RAX[1] = ppuVar16;\n                in_RAX[2] = ppuVar28;\n                if (*0x5d3dd0 == 0) {\n                    *in_RAX = in_R9;\n                    in_R9 = ppuVar30;\n                }\n                else {\n                    *(*0x20 + -0x1e8) = 0x48beff;\n                    fcn.0045c740(arg1, unaff_RDI, arg3);\n                }\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x48bf13;\n                iVar13 = fcn.00475d80(unaff_RDI);\n                pcVar26 = *(iVar13 + 0xf8);\n                *(*0x20 + -0x1e8) = 0x48bf1f;\n                uVar7 = (*pcVar26)();\n                *(*0x20 + -0x148) = arg1;\n                puVar15 = *(*0x20 + 8);\n                puVar19 = puVar15[1];\n                *(*0x20 + -0xe8) = puVar19;\n                *(*0x20 + -0xf0) = puVar19 + arg1;\n                uVar4 = *puVar15;\n                puVar29 = puVar15[2];\n                if (puVar15[2] < puVar19 + arg1) {\n                    *(*0x20 + -0xb0) = uVar7;\n                    *(*0x20 + -0x1e8) = 0x48bf6a;\n                    uVar4 = fcn.00444c60(puVar19);\n                    arg1 = *(*0x20 + -0x148);\n                    puVar29 = puVar19;\n                }\n                *(*0x20 + -0xf8) = puVar29;\n                *(*0x20 + -0x88) = uVar4;\n                *(*0x20 + -0x1e8) = 0x48bfb0;\n                fcn.0045d380(arg1);\n                uVar22 = *(*0x20 + -0xf0);\n                puVar20 = *(*0x20 + 8);\n                puVar20[1] = uVar22;\n                uVar9 = *(*0x20 + -0xf8);\n                puVar20[2] = uVar9;\n                if (*0x5d3dd0 == 0) {\n                    uVar6 = *(*0x20 + -0x88);\n                    *puVar20 = uVar6;\n                }\n                else {\n                    uVar6 = *(*0x20 + -0x88);\n                    *(*0x20 + -0x1e8) = 0x48bff3;\n                    fcn.0045c6e0(uVar22, uVar9, uVar4, arg1);\n                }\n                unaff_RDI = *(*0x20 + -0xe0);\n                if ((unaff_RDI >> 9 & 1) == 0) {\n                    if ((unaff_RDI >> 7 & 1) == 0) {\n                        in_R9 = *(*0x20 + -0x78);\n                        ppuVar16 = in_R9;\n                    }\n                    else {\n                        in_R9 = *(*0x20 + -0x78);\n                        ppuVar16 = *in_R9;\n                    }\n                    if (ppuVar16 == NULL) {\n                        iVar13 = *(*0x20 + -0x148);\n                        iVar11 = *(*0x20 + -0xe8);\n                        uVar8 = iVar11 + iVar13 + 5;\n                        uVar18 = uVar22;\n                        if (uVar9 < uVar8) {\n                            *(*0x20 + -0xe8) = uVar8;\n                            *(*0x20 + -0x1e8) = 0x48c125;\n                            uVar6 = fcn.00444c60(uVar22);\n                            uVar8 = *(*0x20 + -0xe8);\n                            puVar20 = *(*0x20 + 8);\n                            uVar18 = *(*0x20 + -0xf0);\n                            uVar9 = uVar22;\n                        }\n                        *(uVar6 + uVar18) = 0x6c696e28;\n                        *(uVar6 + 4 + uVar18) = 0x29;\n                        puVar20[1] = uVar8;\n                        puVar20[2] = uVar9;\n                        if (*0x5d3dd0 == 0) {\n                            *puVar20 = uVar6;\n                        }\n                        else {\n                            *(*0x20 + -0x1e8) = 0x48c16c;\n                            fcn.0045c6e0(uVar18, uVar9, iVar13, iVar11);\n                        }\n                        return;\n                    }\n                }\n                else {\n                    in_R9 = *(*0x20 + -0x78);\n                }\n                uVar8 = uVar6;\n                if (uVar9 < *(*0x20 + -0xe8) + *(*0x20 + -0x148) + 1U) {\n                    *(*0x20 + -0x1e8) = 0x48c065;\n                    uVar8 = fcn.00444c60(uVar22);\n                    puVar20 = *(*0x20 + 8);\n                    puVar20[2] = uVar22;\n                    if (*0x5d3dd0 == 0) {\n                        *puVar20 = uVar8;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x48c085;\n                        uVar8 = fcn.0045c5a0(uVar22, uVar9, unaff_RDI, in_R9);\n                    }\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    in_R9 = *(*0x20 + -0x78);\n                    uVar22 = uVar6;\n                }\n                puVar20[1] = uVar22 + 1;\n                *(uVar8 + uVar22) = 0x7b;\n                arg3 = unaff_RDI;\n            }\n            *(*0x20 + -0x1e8) = 0x48c0c5;\n            puVar5 = fcn.00479a00(unaff_RDI);\n            ppuVar16 = puVar5[1];\n            puVar15 = *puVar5;\n            if (ppuVar16 != NULL) {\n                *(*0x20 + -0xe8) = ppuVar16;\n                *(*0x20 + -0xd0) = puVar5;\n                iVar13 = 0;\n                while( true ) {\n                    *(*0x20 + -0x98) = puVar15;\n                    *(*0x20 + -0x118) = iVar13;\n                    uVar4 = puVar15[1];\n                    uVar7 = puVar15[2];\n                    uVar1 = *puVar15;\n                    if (0 < iVar13) {\n                        *(*0x20 + -0xe0) = uVar7;\n                        *(*0x20 + -0x78) = uVar4;\n                        *(*0x20 + -0x80) = uVar1;\n                        piVar24 = *(*0x20 + 8);\n                        if (*(piVar24 + 10) == '\\0') {\n                            iVar13 = piVar24[1];\n                            iVar11 = *piVar24;\n                            iVar14 = iVar11;\n                            if (piVar24[2] < iVar13 + 1U) {\n                                *(*0x20 + -0x1e8) = 0x48d8f1;\n                                iVar14 = fcn.00444c60(iVar13);\n                                piVar24 = *(*0x20 + 8);\n                                piVar24[2] = iVar13;\n                                if (*0x5d3dd0 == 0) {\n                                    *piVar24 = iVar14;\n                                }\n                                else {\n                                    *(*0x20 + -0x1e8) = 0x48d910;\n                                    iVar14 = fcn.0045c5a0(iVar13, ppuVar16, arg3, uVar4);\n                                }\n                                uVar4 = *(*0x20 + -0x78);\n                                piVar24 = *(*0x20 + 8);\n                                iVar13 = iVar11;\n                            }\n                            piVar24[1] = iVar13 + 1;\n                            *(iVar14 + iVar13) = 0x20;\n                        }\n                        else {\n                            uVar9 = piVar24[1];\n                            uVar22 = uVar9 + 2;\n                            iVar11 = *piVar24;\n                            uVar6 = uVar9;\n                            uVar8 = piVar24[2];\n                            if (piVar24[2] < uVar22) {\n                                *(*0x20 + -0xf0) = uVar9;\n                                *(*0x20 + -0xf8) = uVar22;\n                                *(*0x20 + -0x1e8) = 0x48d831;\n                                iVar11 = fcn.00444c60(uVar9);\n                                uVar7 = *(*0x20 + -0xe0);\n                                uVar4 = *(*0x20 + -0x78);\n                                piVar24 = *(*0x20 + 8);\n                                uVar6 = *(*0x20 + -0xf0);\n                                uVar22 = *(*0x20 + -0xf8);\n                                iVar13 = *(*0x20 + -0x118);\n                                uVar8 = uVar9;\n                            }\n                            *(iVar11 + uVar6) = 0x202c;\n                            piVar24[1] = uVar22;\n                            piVar24[2] = uVar8;\n                            if (*0x5d3dd0 == 0) {\n                                *piVar24 = iVar11;\n                            }\n                            else {\n                                *(*0x20 + -0x1e8) = 0x48d8b8;\n                                fcn.0045c6c0(iVar13, iVar11, uVar7, uVar4);\n                            }\n                        }\n                    }\n                    iVar13 = *(*0x20 + 0x30);\n                    arg3 = iVar13 + 1;\n                    *(*0x20 + -0xf0) = arg3;\n                    *(*0x20 + -0x1e8) = 0x48d994;\n                    fcn.0048bc80(uVar4, iVar13, arg3);\n                    ppuVar16 = *(*0x20 + 8);\n                    puVar20 = ppuVar16[1];\n                    unaff_RSI = puVar20 + 1;\n                    puVar2 = *ppuVar16;\n                    unaff_RBX = puVar2;\n                    unaff_RDI = ppuVar16[2];\n                    if (ppuVar16[2] < unaff_RSI) {\n                        *(*0x20 + -0x1e8) = 0x48d9bd;\n                        unaff_RBX = fcn.00444c60(puVar20);\n                        ppuVar16 = *(*0x20 + 8);\n                        ppuVar16[2] = puVar20;\n                        unaff_RDI = ppuVar16;\n                        if (*0x5d3dd0 == 0) {\n                            *ppuVar16 = unaff_RBX;\n                            puVar20 = puVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x1e8) = 0x48d9dc;\n                            unaff_RBX = fcn.0045c5a0(puVar20, iVar13, arg3, uVar4);\n                            puVar20 = puVar2;\n                        }\n                    }\n                    ppuVar16[1] = puVar20 + 1;\n                    *(unaff_RBX + puVar20) = 0x3a;\n                    in_R9 = *(*(*0x20 + -0xd0) + 0x18);\n                    arg1 = *(*(*0x20 + -0xd0) + 0x20);\n                    puVar20 = *(*0x20 + -0x118);\n                    if (arg1 <= puVar20) break;\n                    puVar2 = in_R9[puVar20 * 3 + 1];\n                    arg3 = *(*0x20 + -0xf0);\n                    *(*0x20 + -0x1e8) = 0x48da34;\n                    fcn.0048bc80(puVar2, puVar20 * 3, arg3);\n                    iVar13 = *(*0x20 + -0x118) + 1;\n                    ppuVar16 = *(*0x20 + -0xe8);\n                    in_R9 = ppuVar16;\n                    if (ppuVar16 <= iVar13) goto code_r0x0048d6c5;\n                    puVar15 = *(*0x20 + -0x98) + 0x18;\n                }\n                *(*0x20 + -0x1e8) = 0x48da5d;\n                in_RAX = fcn.0045ca40(arg1);\n                goto code_r0x0048da5e;\n            }\ncode_r0x0048d6c5:\n            piVar24 = *(*0x20 + 8);\n            if (*(piVar24 + 10) != '\\0') {\n                iVar13 = piVar24[1];\n                iVar11 = *piVar24;\n                piVar23 = piVar24;\n                iVar14 = iVar11;\n                if (piVar24[2] < iVar13 + 1U) {\n                    *(*0x20 + -0x1e8) = 0x48d6f4;\n                    iVar14 = fcn.00444c60(iVar13);\n                    piVar23 = *(*0x20 + 8);\n                    piVar23[2] = iVar13;\n                    if (*0x5d3dd0 == 0) {\n                        *piVar23 = iVar14;\n                        iVar13 = iVar11;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x48d713;\n                        iVar14 = fcn.0045c5a0(iVar13, piVar24, arg3, in_R9);\n                        iVar13 = iVar11;\n                    }\n                }\n                piVar23[1] = iVar13 + 1;\n                *(iVar14 + iVar13) = 0x7d;\n                return;\n            }\n            iVar13 = piVar24[1];\n            iVar11 = *piVar24;\n            piVar23 = piVar24;\n            iVar14 = iVar11;\n            if (piVar24[2] < iVar13 + 1U) {\n                *(*0x20 + -0x1e8) = 0x48d751;\n                iVar14 = fcn.00444c60(iVar13);\n                piVar23 = *(*0x20 + 8);\n                piVar23[2] = iVar13;\n                if (*0x5d3dd0 == 0) {\n                    *piVar23 = iVar14;\n                    iVar13 = iVar11;\n                }\n                else {\n                    *(*0x20 + -0x1e8) = 0x48d770;\n                    iVar14 = fcn.0045c5a0(iVar13, piVar24, arg3, in_R9);\n                    iVar13 = iVar11;\n                }\n            }\n            piVar23[1] = iVar13 + 1;\n            *(iVar14 + iVar13) = 0x5d;\n            return;\n        }\n        if (uVar22 != 0x11) goto code_r0x0048cb6f;\n    }\n    else {\n        if (0x17 < uVar22) {\n            if (uVar22 == 0x18) {\n                *(*0x20 + -0x1e8) = 0x48cb98;\n                fcn.00475ca0(unaff_RDI);\n                *(*0x20 + -0x1e8) = 0x48cbb2;\n                fcn.00489ac0(arg1, unaff_RDI);\n                return;\n            }\n            if (uVar22 == 0x19) {\n                if (*(in_RAX + 10) != '\\0') {\n                    *(*0x20 + -0x1e8) = 0x48c9d4;\n                    iVar13 = fcn.00475d80(unaff_RDI);\n                    pcVar26 = *(iVar13 + 0xf8);\n                    *(*0x20 + -0x1e8) = 0x48c9e2;\n                    uVar7 = (*pcVar26)();\n                    puVar15 = *(*0x20 + 8);\n                    puVar19 = puVar15[1];\n                    *(*0x20 + -0xe8) = arg1 + puVar19;\n                    uVar4 = *puVar15;\n                    puVar29 = puVar15[2];\n                    if (puVar15[2] < arg1 + puVar19) {\n                        *(*0x20 + -0xf0) = puVar19;\n                        *(*0x20 + -0x150) = arg1;\n                        *(*0x20 + -0xb8) = uVar7;\n                        *(*0x20 + -0x1e8) = 0x48ca2d;\n                        uVar4 = fcn.00444c60(puVar19);\n                        arg1 = *(*0x20 + -0x150);\n                        puVar29 = puVar19;\n                    }\n                    *(*0x20 + -0x88) = uVar4;\n                    *(*0x20 + -0xf0) = puVar29;\n                    *(*0x20 + -0x1e8) = 0x48ca6d;\n                    fcn.0045d380(arg1);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[1] = *(*0x20 + -0xe8);\n                    in_RAX[2] = *(*0x20 + -0xf0);\n                    if (*0x5d3dd0 == 0) {\n                        *in_RAX = *(*0x20 + -0x88);\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x48cab0;\n                        fcn.0045c6c0(arg1, *(*0x20 + -0x88), uVar4, in_R9);\n                    }\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    arg3 = *(*0x20 + 0x30);\n                }\n                uVar9 = in_RAX[1];\n                uVar22 = *in_RAX;\n                uVar6 = uVar22;\n                if (in_RAX[2] < uVar9 + 1) {\n                    *(*0x20 + -0x1e8) = 0x48cb05;\n                    uVar8 = uVar9;\n                    uVar6 = fcn.00444c60(uVar9);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[2] = uVar9;\n                    if (*0x5d3dd0 == 0) {\n                        *in_RAX = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x48cb25;\n                        uVar6 = fcn.0045c5a0(uVar9, unaff_RDI, arg3, uVar8);\n                    }\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    arg3 = *(*0x20 + 0x30);\n                    uVar9 = uVar22;\n                }\n                in_RAX[1] = uVar9 + 1;\n                *(uVar6 + uVar9) = 0x7b;\n                iVar13 = 0;\n                while( true ) {\n                    *(*0x20 + -0x120) = iVar13;\n                    *(*0x20 + -0x1e8) = 0x48cf08;\n                    iVar13 = fcn.00475760(unaff_RDI);\n                    if (iVar13 <= *(*0x20 + -0x120)) break;\n                    if (*(*0x20 + -0x120) < 1) {\n                        piVar24 = *(*0x20 + 8);\n                    }\n                    else {\n                        piVar23 = *(*0x20 + 8);\n                        piVar24 = piVar23;\n                        if (*(piVar23 + 10) == '\\0') {\n                            iVar13 = piVar23[1];\n                            iVar11 = *piVar23;\n                            uVar22 = piVar23[2];\n                            iVar14 = iVar11;\n                            if (uVar22 < iVar13 + 1U) {\n                                *(*0x20 + -0x1e8) = 0x48cfe5;\n                                iVar14 = fcn.00444c60(iVar13);\n                                piVar24 = *(*0x20 + 8);\n                                piVar24[2] = iVar13;\n                                if (*0x5d3dd0 == 0) {\n                                    *piVar24 = iVar14;\n                                    iVar13 = iVar11;\n                                }\n                                else {\n                                    *(*0x20 + -0x1e8) = 0x48d005;\n                                    iVar14 = fcn.0045c5a0(iVar13, piVar23, uVar22, uVar9);\n                                    iVar13 = iVar11;\n                                }\n                            }\n                            piVar24[1] = iVar13 + 1;\n                            *(iVar14 + iVar13) = 0x20;\n                        }\n                        else {\n                            uVar6 = piVar23[1];\n                            uVar22 = uVar6 + 2;\n                            iVar13 = *piVar23;\n                            uVar8 = uVar6;\n                            uVar18 = piVar23[2];\n                            if (piVar23[2] < uVar22) {\n                                *(*0x20 + -0xe8) = uVar6;\n                                *(*0x20 + -0xf0) = uVar22;\n                                *(*0x20 + -0x1e8) = 0x48cf6f;\n                                iVar13 = fcn.00444c60(uVar6);\n                                piVar24 = *(*0x20 + 8);\n                                uVar22 = *(*0x20 + -0xf0);\n                                uVar8 = *(*0x20 + -0xe8);\n                                uVar18 = uVar6;\n                            }\n                            *(iVar13 + uVar8) = 0x202c;\n                            piVar24[1] = uVar22;\n                            piVar24[2] = uVar18;\n                            if (*0x5d3dd0 == 0) {\n                                *piVar24 = iVar13;\n                            }\n                            else {\n                                *(*0x20 + -0x1e8) = 0x48cfbc;\n                                fcn.0045c6e0(uVar8, piVar24, uVar18, uVar9);\n                            }\n                        }\n                    }\n                    if ((*(piVar24 + 0x4f) != '\\0') || (*(piVar24 + 10) != '\\0')) {\n                        *(*0x20 + -0x1e8) = 0x48d059;\n                        iVar13 = fcn.00475d80(*(*0x20 + -0xe0));\n                        pcVar26 = *(iVar13 + 0x50);\n                        *(*0x20 + -0x1e8) = 0x48d06a;\n                        (*pcVar26)();\n                        *(*0x20 + -0x70) = *(*0x20 + -0x1e0);\n                        *(*0x20 + -0x1f0) = unaff_RBP;\n                        *(*0x20 + -0x1e8) = 0x48d092;\n                        fcn.0045d04c();\n                        unaff_RBP = *(*0x20 + -0x1f0);\n                        iVar13 = *(*0x20 + -0x68);\n                        if (iVar13 != 0) {\n                            *(*0x20 + -0x140) = iVar13;\n                            puVar20 = *(*0x20 + 8);\n                            uVar22 = puVar20[1];\n                            *(*0x20 + -0xe8) = uVar22;\n                            *(*0x20 + -0xf0) = iVar13 + uVar22;\n                            uVar9 = *puVar20;\n                            uVar6 = puVar20[2];\n                            if (puVar20[2] < iVar13 + uVar22) {\n                                *(*0x20 + -0xa8) = *(*0x20 + -0x70);\n                                *(*0x20 + -0x1e8) = 0x48d0ff;\n                                uVar9 = fcn.00444c60(uVar22);\n                                iVar13 = *(*0x20 + -0x140);\n                                uVar6 = uVar22;\n                            }\n                            *(*0x20 + -0x88) = uVar9;\n                            *(*0x20 + -0xf8) = uVar6;\n                            *(*0x20 + -0x1e8) = 0x48d136;\n                            fcn.0045d380(iVar13);\n                            iVar11 = *(*0x20 + -0xf0);\n                            piVar24 = *(*0x20 + 8);\n                            piVar24[1] = iVar11;\n                            uVar22 = *(*0x20 + -0xf8);\n                            piVar24[2] = uVar22;\n                            iVar14 = *(*0x20 + -0x140);\n                            iVar13 = iVar14 + *(*0x20 + -0xe8);\n                            if (*0x5d3dd0 == 0) {\n                                iVar12 = *(*0x20 + -0x88);\n                                *piVar24 = iVar12;\n                            }\n                            else {\n                                iVar12 = *(*0x20 + -0x88);\n                                *(*0x20 + -0x1e8) = 0x48d191;\n                                fcn.0045c6e0(iVar11, uVar22, iVar14, uVar9);\n                            }\n                            iVar10 = iVar12;\n                            if (uVar22 < iVar13 + 1U) {\n                                *(*0x20 + -0x1e8) = 0x48d1a5;\n                                iVar10 = fcn.00444c60(iVar11);\n                                piVar24 = *(*0x20 + 8);\n                                piVar24[2] = iVar11;\n                                if (*0x5d3dd0 == 0) {\n                                    *piVar24 = iVar10;\n                                    iVar11 = iVar12;\n                                }\n                                else {\n                                    *(*0x20 + -0x1e8) = 0x48d1c5;\n                                    iVar10 = fcn.0045c5a0(iVar11, uVar22, iVar14, uVar9);\n                                    iVar11 = iVar12;\n                                }\n                            }\n                            piVar24[1] = iVar11 + 1;\n                            *(iVar10 + iVar11) = 0x3a;\n                        }\n                    }\n                    uVar4 = *(*0x20 + -0x78);\n                    *(*0x20 + -0x1e8) = 0x48cea5;\n                    fcn.00488c60(*(*0x20 + -0xe0));\n                    arg3 = *(*0x20 + 0x30) + 1;\n                    *(*0x20 + -0x1e8) = 0x48cece;\n                    fcn.0048bc80(uVar4, *(*0x20 + 0x30), arg3);\n                    iVar13 = *(*0x20 + -0x120) + 1;\n                    unaff_RDI = *(*0x20 + -0xe0);\n                }\n                piVar24 = *(*0x20 + 8);\n                iVar13 = piVar24[1];\n                iVar11 = *piVar24;\n                piVar23 = piVar24;\n                iVar14 = iVar11;\n                if (piVar24[2] < iVar13 + 1U) {\n                    *(*0x20 + -0x1e8) = 0x48d216;\n                    iVar14 = fcn.00444c60(iVar13);\n                    piVar23 = *(*0x20 + 8);\n                    piVar23[2] = iVar13;\n                    if (*0x5d3dd0 == 0) {\n                        *piVar23 = iVar14;\n                        iVar13 = iVar11;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x48d235;\n                        iVar14 = fcn.0045c5a0(iVar13, piVar24, arg3, uVar9);\n                        iVar13 = iVar11;\n                    }\n                }\n                piVar23[1] = iVar13 + 1;\n                *(iVar14 + iVar13) = 0x7d;\n                return;\n            }\n            if (uVar22 != 0x1a) {\n                *(*0x20 + -0x1e8) = 0x48cb85;\n                fcn.00488d00(arg1, unaff_RDI, arg3, in_R9);\n                return;\n            }\ncode_r0x0048cb6f:\n            *(*0x20 + -0x1e8) = 0x48cb77;\n            fcn.0048a2c0(arg1);\n            return;\n        }\n        if (uVar22 == 0x16) {\n            if (arg3 == NULL) {\n                *(*0x20 + -0x1e8) = 0x48c831;\n                iVar13 = fcn.00475840(unaff_RDI);\n                bVar31 = iVar13 != 0;\n                arg1 = *(*0x20 + -0x78);\n                arg3 = *(*0x20 + 0x30);\n                unaff_RDI = *(*0x20 + -0xe0);\n            }\n            else {\n                bVar31 = false;\n            }\n            if (bVar31) {\n                *(*0x20 + -0x1e8) = 0x48c87f;\n                uVar4 = fcn.00474a40(unaff_RDI);\n                uVar17 = unaff_RDI & 0x1f;\n                if (uVar17 < 0x16) {\n                    if ((uVar17 == 0x11) || (uVar17 == 0x15)) {\ncode_r0x0048c8b1:\n                        piVar24 = *(*0x20 + 8);\n                        iVar13 = piVar24[1];\n                        iVar11 = *piVar24;\n                        piVar23 = piVar24;\n                        iVar14 = iVar11;\n                        if (piVar24[2] < iVar13 + 1U) {\n                            *(*0x20 + -0x78) = arg1;\n                            *(*0x20 + -0x80) = uVar4;\n                            *(*0x20 + -0xe0) = unaff_RDI;\n                            *(*0x20 + -0x1e8) = 0x48c8f7;\n                            iVar12 = iVar11;\n                            iVar14 = fcn.00444c60(iVar13);\n                            piVar23 = *(*0x20 + 8);\n                            piVar23[2] = iVar13;\n                            if (*0x5d3dd0 == 0) {\n                                *piVar23 = iVar14;\n                            }\n                            else {\n                                *(*0x20 + -0x1e8) = 0x48c916;\n                                iVar14 = fcn.0045c5a0(iVar13, piVar24, arg3, iVar12);\n                            }\n                            arg1 = *(*0x20 + -0x78);\n                            iVar13 = iVar11;\n                        }\n                        piVar23[1] = iVar13 + 1;\n                        *(iVar14 + iVar13) = 0x26;\n                        *(*0x20 + -0x1e8) = 0x48c965;\n                        fcn.0048bc80(arg1, piVar23, *(*0x20 + 0x30) + 1);\n                        return;\n                    }\n                }\n                else if ((uVar17 == 0x17) || (uVar17 == 0x19)) goto code_r0x0048c8b1;\n                arg1 = *(*0x20 + -0x78);\n            }\n            goto code_r0x0048cb6f;\n        }\n    }\n    *(*0x20 + -0x100) = uVar22;\n    if (uVar17 < 0x72) {\n        if ((uVar17 != 0x58) && (uVar17 != 0x71)) goto code_r0x0048c563;\n    }\n    else if ((uVar17 != 0x73) && (uVar17 != 0x78)) goto code_r0x0048c563;\n    *(*0x20 + -0x1e8) = 0x48c437;\n    iVar13 = fcn.00475d80(unaff_RDI);\n    *(*0x20 + -0x168) = iVar13;\n    *(*0x20 + -0xd8) = arg1;\n    pcVar26 = *(iVar13 + 0x48);\n    *(*0x20 + -0x1e8) = 0x48c44d;\n    iVar13 = (*pcVar26)();\n    pcVar26 = *(iVar13 + 0x98);\n    *(*0x20 + -0x1e8) = 0x48c459;\n    iVar13 = (*pcVar26)();\n    if (iVar13 == 8) {\n        if (*(*0x20 + -0x100) == 0x17) {\n            iVar11 = *(*0x20 + -0x78);\n            iVar13 = *(*0x20 + -0xe0);\n            *(*0x20 + -0x1e8) = 0x48c527;\n            iVar14 = fcn.00473720(iVar13);\n        }\n        else {\n            uVar4 = *(*0x20 + -0xe0);\n            if ((uVar4 >> 8 & 1) == 0) {\n                *(*0x20 + -0x1e8) = 0x48c49f;\n                uVar4 = fcn.004750a0(uVar4);\n                *(*0x20 + -0x110) = uVar4;\n                *(*0x20 + -0x1e8) = 0x48c4b9;\n                iVar14 = fcn.00444b80(uVar4);\n                *(*0x20 + -0x90) = iVar14;\n                for (iVar12 = 0; iVar13 = *(*0x20 + -0x110),  iVar11 = iVar13,  iVar12 < iVar13; iVar12 = iVar12 + 1) {\n                    *(*0x20 + -0x128) = iVar12;\n                    puVar15 = *(*0x20 + -0x78);\n                    uVar4 = *(*0x20 + -0xe0);\n                    *(*0x20 + -0x1e8) = 0x48d611;\n                    fcn.00474d60(uVar4);\n                    uVar22 = uVar4 & 0x1f;\n                    *(*0x20 + -0x100) = uVar22;\n                    if (uVar22 < 10) {\n                        if (uVar22 == 7) {\n                            uVar21 = *puVar15;\n                        }\n                        else if (uVar22 == 8) {\n                            uVar21 = *puVar15;\n                        }\n                        else {\n                            if (uVar22 != 9) {\ncode_r0x0048d687:\n                                *(*0x20 + -0x1e8) = 0x48d693;\n                                puVar15 = fcn.0040c440();\n                                puVar15[1] = 0x12;\n                                *puVar15 = 0x4cb9d4;\n                                puVar15[2] = *(*0x20 + -0x100);\n                                *(*0x20 + -0x1e8) = 0x48d6c5;\n                                fcn.00432920();\n                                goto code_r0x0048d6c5;\n                            }\n                            uVar21 = *puVar15;\n                        }\n                    }\n                    else if (uVar22 == 10) {\n                        uVar21 = *puVar15;\n                    }\n                    else if (uVar22 == 0xb) {\n                        uVar21 = *puVar15;\n                    }\n                    else {\n                        if (uVar22 != 0xc) goto code_r0x0048d687;\n                        uVar21 = *puVar15;\n                    }\n                    iVar12 = *(*0x20 + -0x128);\n                    iVar14 = *(*0x20 + -0x90);\n                    *(iVar14 + iVar12) = uVar21;\n                }\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x48c4dd;\n                fcn.004750a0(uVar4);\n                iVar11 = *(*0x20 + -0x78);\n                iVar13 = *(*0x20 + -0xe0);\n                *(*0x20 + -0x1e8) = 0x48c4ff;\n                fcn.00475a00(iVar13);\n                *(*0x20 + -0x1e8) = 0x48c505;\n                iVar14 = fcn.00473720(iVar13);\n            }\n        }\n        *(*0x20 + -0x108) = iVar13;\n        *(*0x20 + -0x110) = iVar11;\n        *(*0x20 + -0xa0) = iVar14;\n        pcVar26 = *(*(*0x20 + -0x168) + 0xf8);\n        *(*0x20 + -0x1e8) = 0x48d57a;\n        uVar4 = (*pcVar26)();\n        *(*0x20 + -0x1e8) = 0x48d5ac;\n        fcn.00489bc0(*(*0x20 + -0x110), pcVar26, uVar4, iVar11);\n        return;\n    }\n    in_RAX = *(*0x20 + 8);\n    arg1 = *(*0x20 + -0x78);\n    unaff_RDI = *(*0x20 + -0xe0);\n    arg3 = *(*0x20 + 0x30);\ncode_r0x0048c563:\n    if (*(in_RAX + 10) == '\\0') {\n        uVar22 = in_RAX[1];\n        uVar9 = *in_RAX;\n        uVar6 = uVar9;\n        if (in_RAX[2] < uVar22 + 1) {\n            *(*0x20 + -0x1e8) = 0x48c59a;\n            uVar8 = uVar22;\n            uVar6 = fcn.00444c60(uVar22);\n            in_RAX = *(*0x20 + 8);\n            in_RAX[2] = uVar22;\n            if (*0x5d3dd0 == 0) {\n                *in_RAX = uVar6;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x48c5b9;\n                uVar6 = fcn.0045c5a0(uVar22, unaff_RDI, arg3, uVar8);\n            }\n            unaff_RDI = *(*0x20 + -0xe0);\n            arg3 = *(*0x20 + 0x30);\n            uVar22 = uVar9;\n        }\n        in_RAX[1] = uVar22 + 1;\n        *(uVar6 + uVar22) = 0x5b;\n        iVar13 = 0;\n        while( true ) {\n            *(*0x20 + -0x138) = iVar13;\n            *(*0x20 + -0x1e8) = 0x48d468;\n            iVar13 = fcn.004750a0(unaff_RDI);\n            if (iVar13 <= *(*0x20 + -0x138)) break;\n            if (0 < *(*0x20 + -0x138)) {\n                piVar24 = *(*0x20 + 8);\n                iVar13 = piVar24[1];\n                iVar11 = *piVar24;\n                uVar9 = piVar24[2];\n                piVar23 = piVar24;\n                iVar14 = iVar11;\n                if (uVar9 < iVar13 + 1U) {\n                    *(*0x20 + -0x1e8) = 0x48d4a9;\n                    iVar14 = fcn.00444c60(iVar13);\n                    piVar23 = *(*0x20 + 8);\n                    piVar23[2] = iVar13;\n                    if (*0x5d3dd0 == 0) {\n                        *piVar23 = iVar14;\n                        iVar13 = iVar11;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x48d4c8;\n                        iVar14 = fcn.0045c5a0(iVar13, piVar24, uVar9, uVar22);\n                        iVar13 = iVar11;\n                    }\n                }\n                piVar23[1] = iVar13 + 1;\n                *(iVar14 + iVar13) = 0x20;\n            }\n            uVar4 = *(*0x20 + -0x78);\n            *(*0x20 + -0x1e8) = 0x48d405;\n            fcn.00474d60(*(*0x20 + -0xe0));\n            arg3 = *(*0x20 + 0x30) + 1;\n            *(*0x20 + -0x1e8) = 0x48d42e;\n            fcn.0048bc80(uVar4, *(*0x20 + 0x30), arg3);\n            iVar13 = *(*0x20 + -0x138) + 1;\n            unaff_RDI = *(*0x20 + -0xe0);\n        }\n        piVar24 = *(*0x20 + 8);\n        iVar13 = piVar24[1];\n        iVar11 = *piVar24;\n        piVar23 = piVar24;\n        iVar14 = iVar11;\n        if (piVar24[2] < iVar13 + 1U) {\n            *(*0x20 + -0x1e8) = 0x48d513;\n            iVar14 = fcn.00444c60(iVar13);\n            piVar23 = *(*0x20 + 8);\n            piVar23[2] = iVar13;\n            if (*0x5d3dd0 == 0) {\n                *piVar23 = iVar14;\n                iVar13 = iVar11;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x48d532;\n                iVar14 = fcn.0045c5a0(iVar13, piVar24, arg3, uVar22);\n                iVar13 = iVar11;\n            }\n        }\n        piVar23[1] = iVar13 + 1;\n        *(iVar14 + iVar13) = 0x5d;\n        return;\n    }\n    *(*0x20 + -0x1e8) = 0x48c60b;\n    iVar13 = fcn.00475d80(unaff_RDI);\n    pcVar26 = *(iVar13 + 0xf8);\n    *(*0x20 + -0x1e8) = 0x48c617;\n    uVar7 = (*pcVar26)();\n    *(*0x20 + -0x160) = arg1;\n    puVar15 = *(*0x20 + 8);\n    puVar19 = puVar15[1];\n    *(*0x20 + -0xe8) = puVar19;\n    *(*0x20 + -0xf0) = arg1 + puVar19;\n    uVar4 = *puVar15;\n    puVar29 = puVar15[2];\n    if (puVar15[2] < arg1 + puVar19) {\n        *(*0x20 + -200) = uVar7;\n        *(*0x20 + -0x1e8) = 0x48c665;\n        uVar4 = fcn.00444c60(puVar19);\n        arg1 = *(*0x20 + -0x160);\n        puVar29 = puVar19;\n    }\n    *(*0x20 + -0xf8) = puVar29;\n    *(*0x20 + -0x88) = uVar4;\n    *(*0x20 + -0x1e8) = 0x48c6ab;\n    fcn.0045d380(arg1);\n    uVar22 = *(*0x20 + -0xf0);\n    puVar20 = *(*0x20 + 8);\n    puVar20[1] = uVar22;\n    uVar9 = *(*0x20 + -0xf8);\n    puVar20[2] = uVar9;\n    if (*0x5d3dd0 == 0) {\n        uVar6 = *(*0x20 + -0x88);\n        *puVar20 = uVar6;\n    }\n    else {\n        uVar6 = *(*0x20 + -0x88);\n        *(*0x20 + -0x1e8) = 0x48c6ef;\n        fcn.0045c6e0(uVar22, uVar9, uVar4, arg1);\n    }\n    if (*(*0x20 + -0x100) == 0x17) {\n        piVar24 = *(*0x20 + -0x78);\n        if (*piVar24 == 0) {\n            iVar13 = *(*0x20 + -0xe8);\n            iVar11 = *(*0x20 + -0x160);\n            uVar8 = iVar11 + iVar13 + 5;\n            uVar18 = uVar22;\n            if (uVar9 < uVar8) {\n                *(*0x20 + -0xe8) = uVar8;\n                *(*0x20 + -0x1e8) = 0x48c751;\n                uVar6 = fcn.00444c60(uVar22);\n                uVar8 = *(*0x20 + -0xe8);\n                puVar20 = *(*0x20 + 8);\n                uVar18 = *(*0x20 + -0xf0);\n                uVar9 = uVar22;\n            }\n            *(uVar6 + uVar18) = 0x6c696e28;\n            *(uVar6 + 4 + uVar18) = 0x29;\n            puVar20[1] = uVar8;\n            puVar20[2] = uVar9;\n            if (*0x5d3dd0 == 0) {\n                *puVar20 = uVar6;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x48c796;\n                fcn.0045c6e0(uVar18, uVar9, iVar13, iVar11);\n            }\n            return;\n        }\n    }\n    else {\n        piVar24 = *(*0x20 + -0x78);\n    }\n    iVar13 = *(*0x20 + -0xe8);\n    uVar8 = uVar6;\n    if (uVar9 < *(*0x20 + -0x160) + iVar13 + 1U) {\n        *(*0x20 + -0x1e8) = 0x48c7da;\n        uVar8 = fcn.00444c60(uVar22);\n        puVar20 = *(*0x20 + 8);\n        puVar20[2] = uVar22;\n        if (*0x5d3dd0 == 0) {\n            *puVar20 = uVar8;\n        }\n        else {\n            *(*0x20 + -0x1e8) = 0x48c7f9;\n            uVar8 = fcn.0045c5a0(uVar22, uVar9, piVar24, iVar13);\n        }\n        piVar24 = *(*0x20 + -0x78);\n        uVar22 = uVar6;\n    }\n    puVar20[1] = uVar22 + 1;\n    *(uVar8 + uVar22) = 0x7b;\n    iVar11 = 0;\n    while( true ) {\n        *(*0x20 + -0x130) = iVar11;\n        *(*0x20 + -0x1e8) = 0x48d2c9;\n        iVar11 = fcn.004750a0(*(*0x20 + -0xe0));\n        if (iVar11 <= *(*0x20 + -0x130)) break;\n        if (0 < *(*0x20 + -0x130)) {\n            piVar24 = *(*0x20 + 8);\n            uVar9 = piVar24[1];\n            uVar22 = uVar9 + 2;\n            iVar11 = *piVar24;\n            uVar6 = uVar9;\n            uVar8 = piVar24[2];\n            if (piVar24[2] < uVar22) {\n                *(*0x20 + -0xe8) = uVar9;\n                *(*0x20 + -0xf0) = uVar22;\n                *(*0x20 + -0x1e8) = 0x48d325;\n                iVar11 = fcn.00444c60(uVar9);\n                piVar24 = *(*0x20 + 8);\n                uVar22 = *(*0x20 + -0xf0);\n                uVar6 = *(*0x20 + -0xe8);\n                uVar8 = uVar9;\n            }\n            *(iVar11 + uVar6) = 0x202c;\n            piVar24[1] = uVar22;\n            piVar24[2] = uVar8;\n            if (*0x5d3dd0 == 0) {\n                *piVar24 = iVar11;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x48d375;\n                fcn.0045c6e0(uVar6, piVar24, uVar8, iVar13);\n            }\n        }\n        uVar4 = *(*0x20 + -0x78);\n        *(*0x20 + -0x1e8) = 0x48d26c;\n        fcn.00474d60(*(*0x20 + -0xe0));\n        *(*0x20 + -0x1e8) = 0x48d295;\n        fcn.0048bc80(uVar4, *(*0x20 + 0x30), *(*0x20 + 0x30) + 1);\n        iVar11 = *(*0x20 + -0x130) + 1;\n        piVar24 = *(*0x20 + -0x78);\n    }\n    piVar23 = *(*0x20 + 8);\n    iVar11 = piVar23[1];\n    iVar14 = *piVar23;\n    piVar25 = piVar23;\n    iVar12 = iVar14;\n    if (piVar23[2] < iVar11 + 1U) {\n        *(*0x20 + -0x1e8) = 0x48d3a6;\n        iVar12 = fcn.00444c60(iVar11);\n        piVar25 = *(*0x20 + 8);\n        piVar25[2] = iVar11;\n        if (*0x5d3dd0 == 0) {\n            *piVar25 = iVar12;\n            iVar11 = iVar14;\n        }\n        else {\n            *(*0x20 + -0x1e8) = 0x48d3c7;\n            iVar12 = fcn.0045c5a0(iVar11, piVar23, piVar24, iVar13);\n            iVar11 = iVar14;\n        }\n    }\n    piVar25[1] = iVar11 + 1;\n    *(iVar12 + iVar11) = 0x7d;\n    return;\n}\n",
        "token_count": 16095
    },
    "0048dac0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0048dac0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t *noname_2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX <= unaff_RDI) {\n                return 0;\n            }\n            if (unaff_RDI < unaff_RBX) {\n                iVar1 = *(in_RAX + unaff_RDI * 0x10);\n                noname_2 = *(in_RAX + 8 + unaff_RDI * 0x10);\n                if (iVar1 == 0x4b4080) {\n                    uVar4 = *noname_2;\n                }\n                else {\n                    uVar4 = 0;\n                    if (iVar1 == 0) {\n                        noname_2 = NULL;\n                        uVar5 = 0;\n                    }\n                    else {\n                        puVar2 = *0x57fc40;\n                        if ((*0x57fc30 != '\\0') && (*0x57fc38 = iVar1,  puVar2 = noname_2,  *0x5d3dd0 != 0)) {\n                            *(*0x20 + -0x30) = 0x48db5a;\n                            fcn.0045c720(arg1, unaff_RDI, noname_2, 0x4b4080);\n                            puVar2 = *0x57fc40;\n                        }\n                        *0x57fc40 = puVar2;\n                        *(*0x20 + -0x18) = iVar1;\n                        *(*0x20 + -0x10) = noname_2;\n                        if (*(*0x20 + -0x18) == 0) {\n                            uVar5 = 0;\n                            noname_2 = NULL;\n                        }\n                        else {\n                            uVar5 = *(*(*0x20 + -0x18) + 0x17) & 0x1f;\n                        }\n                    }\n                    uVar6 = uVar5;\n                    if (uVar6 - 2 < 5) {\n                        if (uVar6 < 4) {\n                            if (uVar6 == 2) {\n                                uVar4 = *noname_2;\n                            }\n                            else {\n                                uVar4 = *noname_2;\n                            }\n                        }\n                        else if (uVar6 == 4) {\n                            uVar4 = *noname_2;\n                        }\n                        else if (uVar6 == 5) {\n                            uVar4 = *noname_2;\n                        }\n                        else {\n                            uVar4 = *noname_2;\n                        }\n                    }\n                    else if (uVar6 - 7 < 6) {\n                        if (uVar6 < 10) {\n                            if (uVar6 == 7) {\n                                uVar6 = *noname_2;\n                            }\n                            else if (uVar6 == 8) {\n                                uVar6 = *noname_2;\n                            }\n                            else {\n                                uVar6 = *noname_2;\n                            }\n                        }\n                        else if (uVar6 == 10) {\n                            uVar6 = *noname_2;\n                        }\n                        else if (uVar6 == 0xb) {\n                            uVar6 = *noname_2;\n                        }\n                        else {\n                            uVar6 = *noname_2;\n                        }\n                        if (-1 < uVar6) {\n                            uVar4 = uVar6;\n                        }\n                    }\n                }\n                if (2000000 < uVar4 + 1000000) {\n                    uVar4 = 0;\n                }\n                return uVar4;\n            }\n            *(*0x20 + -0x30) = 0x48dc94;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045ca40(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x48dcae;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1188
    },
    "0048dce0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0048dce0(void)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (unaff_RBX < 3) {\n        return 0;\n    }\n    iVar3 = 1;\n    while( true ) {\n        if (unaff_RBX <= iVar3) {\n            return 0;\n        }\n        if (*(in_RAX + iVar3) == ']') break;\n        iVar3 = iVar3 + 1;\n    }\n    if (iVar3 < 2) {\n        bVar2 = false;\n        iVar5 = 0;\n        iVar4 = iVar3;\n    }\n    else {\n        bVar2 = false;\n        iVar5 = 0;\n        for (iVar4 = 1; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n            uVar1 = *(in_RAX + iVar4);\n            if ((uVar1 < 0x30) || (0x39 < uVar1)) break;\n            if (2000000 < iVar5 + 1000000U) {\n                bVar2 = false;\n                iVar5 = 0;\n                iVar4 = iVar3;\n                break;\n            }\n            iVar5 = (uVar1 - 0x30 & 0xff) + iVar5 * 10;\n            bVar2 = true;\n        }\n    }\n    if ((bVar2) && (iVar4 == iVar3)) {\n        return iVar5 + -1;\n    }\n    return 0;\n}\n",
        "token_count": 369
    },
    "0048f440": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0048f440(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    ulong uVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    ulong *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint64_t uVar9;\n    uint64_t arg1;\n    uint64_t arg2;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint64_t unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uchar uVar13;\n    uint64_t uVar14;\n    int32_t iVar15;\n    uint64_t uVar16;\n    int32_t iVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    uint64_t uVar20;\n    uint64_t in_R11;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uint64_t uVar8;\n    \ncode_r0x0048f440:\n    puVar12 = *0x20;\n    uVar18 = in_R11;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n        puVar12 = *0x20 + -0x88;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x40) = unaff_RBX & 0xffffffff;\n        *(*0x20 + -0x90) = 0x48f48c;\n        iVar4 = fcn.00444b80(unaff_RBX & 0xffffffff);\n        *(*0x20 + -0x20) = iVar4;\n        arg1 = *(*0x20 + 0x10);\n        uVar14 = (arg1 & 0xffffffff) / 5;\n        *(*0x20 + -0x28) = uVar14;\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = 0;\n        uVar9 = 0;\n        uVar16 = 0;\n        while( true ) {\n            *(*0x20 + -0x58) = uVar16;\n            uVar6 = uVar14;\n            if (uVar6 <= unaff_RBX) break;\n            *(*0x20 + -0x4c) = unaff_RBX;\n            uVar8 = 0;\n            iVar19 = 0;\n            uVar18 = in_R11;\n            while (uVar3 = *0x57d438,  iVar19 < 5) {\n                uVar18 = uVar9;\n                if (arg1 <= uVar9) goto code_r0x0048f954;\n                cVar2 = *(arg2 + uVar9);\n                if (((cVar2 - 10U < 2) || (cVar2 == '\\r')) || (cVar2 == ' ')) {\n                    uVar20 = iVar19 - 1;\n                    in_R11 = uVar9 + 1;\n                }\n                else {\n                    *(*0x20 + -0x38) = iVar19;\n                    *(*0x20 + -0x30) = uVar9;\n                    *(*0x20 + -0x54) = uVar9;\n                    *(*0x20 + -0x44) = uVar8;\n                    *(*0x20 + -0x5d) = cVar2;\n                    *(*0x20 + -0x90) = 0x48f85f;\n                    puVar5 = fcn.0040d400(*0x20 + -0x5d);\n                    if (uVar3 == '\\0') {\n                        *(*0x20 + -0x5d) = *(*(*0x20 + 8) + *(*0x20 + -0x30));\n                        *(*0x20 + -0x18) = in_XMM15;\n                        *(*0x20 + -0x18) = 0x4b48c0;\n                        *(*0x20 + -0x10) = *(*0x20 + -0x5d) * 8 + 0x571340;\n                        *(*0x20 + -0x90) = 0x48f905;\n                        fcn.00486120(*0x20 + -0x18);\n                        return *(*0x20 + -0x20);\n                    }\n                    uVar8 = *(*0x20 + -0x44) * 0x55 + *puVar5;\n                    in_R11 = *(*0x20 + -0x54) + 1;\n                    iVar4 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + 0x10);\n                    arg2 = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + -0x4c);\n                    uVar14 = *(*0x20 + -0x28);\n                    uVar16 = *(*0x20 + -0x58);\n                    uVar20 = *(*0x20 + -0x38);\n                }\ncode_r0x0048f7e5:\n                uVar9 = in_R11 & 0xffffffff;\n                uVar18 = in_R11;\n                iVar19 = uVar20 + 1;\n            }\n            uVar20 = *(*0x20 + -0x40);\n            if (uVar20 <= uVar16) goto code_r0x0048f949;\n            in_R11 = uVar8 & 0xffffffff;\n            *(iVar4 + uVar16) = uVar8 >> 0x18;\n            iVar15 = uVar16;\n            uVar18 = in_R11;\n            if (uVar20 <= iVar15 + 1) goto code_r0x0048f93e;\n            *(iVar4 + iVar15 + 1) = in_R11 >> 0x10;\n            uVar18 = in_R11 >> 0x10;\n            if (uVar20 <= iVar15 + 2) goto code_r0x0048f933;\n            *(iVar4 + iVar15 + 2) = in_R11 >> 8;\n            if (uVar20 <= iVar15 + 3) goto code_r0x0048f928;\n            *(iVar4 + iVar15 + 3) = in_R11;\n            unaff_RBX = unaff_RBX + 1;\n            uVar16 = iVar15 + 4;\n        }\n        uVar18 = uVar6 * 5;\n        uVar6 = arg1 + uVar6 * -5;\n        uVar8 = uVar6;\n        if (uVar6 == 0) goto code_r0x0048f55d;\n        *(*0x20 + -0x5c) = uVar6;\n        unaff_RBX = 0;\n        uVar14 = 0;\n        do {\n            uVar3 = *0x57d438;\n            iVar15 = uVar9;\n            uVar6 = uVar14;\n            uVar10 = unaff_RBX;\n            uVar7 = uVar8;\n            if (uVar10 < 5) {\n                if (uVar10 < uVar7) {\n                    uVar20 = uVar9;\n                    if (arg1 <= uVar9) goto code_r0x0048f7d5;\n                    uVar1 = *(arg2 + uVar9);\n                    in_R11 = uVar1;\n                    if (((uVar1 - 10 < 2) || (uVar1 == 0xd)) || (uVar1 == 0x20)) {\n                        iVar11 = uVar10 - 1;\n                        uVar18 = iVar15 + 1;\n                        goto code_r0x0048f589;\n                    }\n                    *(*0x20 + -0x50) = uVar10;\n                    *(*0x20 + -0x30) = uVar9;\n                    *(*0x20 + -0x48) = uVar6;\n                    *(*0x20 + -0x54) = iVar15;\n                    *(*0x20 + -0x5d) = uVar1;\n                    *(*0x20 + -0x90) = 0x48f605;\n                    puVar5 = fcn.0040d400(*0x20 + -0x5d);\n                    iVar17 = *puVar5;\n                    if (uVar3 == '\\0') {\n                        *(*0x20 + -0x5d) = *(*(*0x20 + 8) + *(*0x20 + -0x30));\n                        *(*0x20 + -0x18) = in_XMM15;\n                        *(*0x20 + -0x18) = 0x4b48c0;\n                        *(*0x20 + -0x10) = *(*0x20 + -0x5d) * 8 + 0x571340;\n                        *(*0x20 + -0x90) = 0x48f6ad;\n                        fcn.00486120(*0x20 + -0x18);\n                        return *(*0x20 + -0x20);\n                    }\n                    iVar4 = *(*0x20 + -0x20);\n                    uVar8 = *(*0x20 + -0x5c);\n                    unaff_RBX = *(*0x20 + -0x50);\n                    uVar6 = *(*0x20 + -0x48);\n                    iVar15 = *(*0x20 + -0x54);\n                    uVar16 = *(*0x20 + -0x58);\n                    arg1 = *(*0x20 + 0x10);\n                    arg2 = *(*0x20 + 8);\n                }\n                else {\n                    iVar17 = 0x7e;\n                }\n                iVar11 = unaff_RBX;\n                in_R11 = uVar6 * 0x55;\n                uVar14 = iVar17 + uVar6 * 0x55;\n                uVar18 = iVar15 + 1;\n            }\n            else {\n                iVar15 = uVar16;\n                uVar13 = uVar14 >> 0x18;\n                uVar20 = uVar18;\n                if (uVar7 == 2) {\n                    uVar9 = *(*0x20 + -0x40);\n                    if (uVar16 < uVar9) {\n                        uVar20 = uVar14 & 0xffffffff;\n                        uVar14 = uVar6 >> 0x18;\n                        *(iVar4 + uVar16) = uVar13;\n                        uVar16 = iVar15 + 1;\n                        if (uVar16 < uVar9) {\n                            uVar18 = uVar20 >> 0x10;\n                            *(iVar4 + uVar16) = uVar20 >> 0x10;\n                            goto code_r0x0048f55d;\n                        }\ncode_r0x0048f7c5:\n                        *(*0x20 + -0x90) = 0x48f7cd;\n                        fcn.0045ca40(uVar9);\n                    }\n                    *(*0x20 + -0x90) = 0x48f7d5;\n                    fcn.0045ca40(uVar9);\ncode_r0x0048f7d5:\n                    *(*0x20 + -0x90) = 0x48f7e5;\n                    uVar8 = arg1;\n                    iVar4 = fcn.0045ca40(arg1);\n                    goto code_r0x0048f7e5;\n                }\n                if (uVar7 == 3) {\n                    uVar9 = *(*0x20 + -0x40);\n                    if (uVar9 <= uVar16) {\ncode_r0x0048f7bd:\n                        *(*0x20 + -0x90) = 0x48f7c5;\n                        fcn.0045ca40(uVar9);\n                        goto code_r0x0048f7c5;\n                    }\n                    uVar8 = uVar14 & 0xffffffff;\n                    uVar14 = uVar6 >> 0x18;\n                    *(iVar4 + uVar16) = uVar13;\n                    arg1 = iVar15 + 1;\n                    uVar18 = uVar8;\n                    if (uVar9 <= arg1) goto code_r0x0048f7b5;\n                    uVar18 = uVar8 >> 0x10;\n                    *(iVar4 + arg1) = uVar8 >> 0x10;\n                    uVar16 = iVar15 + 2;\n                }\n                else if (uVar7 == 4) {\n                    uVar9 = *(*0x20 + -0x40);\n                    if (uVar16 < uVar9) {\n                        uVar8 = uVar14 & 0xffffffff;\n                        uVar14 = uVar6 >> 0x18;\n                        *(iVar4 + uVar16) = uVar13;\n                        arg1 = iVar15 + 1;\n                        uVar18 = uVar8;\n                        if (arg1 < uVar9) {\n                            *(iVar4 + arg1) = uVar8 >> 0x10;\n                            uVar18 = iVar15 + 2;\n                            if (uVar18 < uVar9) {\n                                in_R11 = uVar8 >> 8;\n                                *(iVar4 + uVar18) = uVar8 >> 8;\n                                uVar16 = iVar15 + 3;\n                                goto code_r0x0048f55d;\n                            }\n                            *(*0x20 + -0x90) = 0x48f7a5;\n                            fcn.0045ca40(uVar9);\n                            in_R11 = uVar8;\n                        }\n                        *(*0x20 + -0x90) = 0x48f7ad;\n                        fcn.0045ca40(uVar9);\n                    }\n                    *(*0x20 + -0x90) = 0x48f7b5;\n                    fcn.0045ca40(uVar9);\ncode_r0x0048f7b5:\n                    *(*0x20 + -0x90) = 0x48f7bd;\n                    fcn.0045ca40(uVar9);\n                    uVar20 = uVar18;\n                    goto code_r0x0048f7bd;\n                }\ncode_r0x0048f55d:\n                iVar11 = unaff_RBX;\n                arg2 = *(*0x20 + -0x40);\n                if (uVar16 <= arg2) {\n                    return iVar4;\n                }\n                uVar8 = uVar16 & 0xffffffff;\n                *(*0x20 + -0x90) = 0x48f589;\n                iVar4 = fcn.0045cac0(uVar8, arg2);\n            }\ncode_r0x0048f589:\n            unaff_RBX = iVar11 + 1;\n            uVar9 = uVar18 & 0xffffffff;\n        } while( true );\n    }\n    goto code_r0x0048f95d;\ncode_r0x0048f928:\n    *(*0x20 + -0x90) = 0x48f933;\n    fcn.0045ca40(uVar20);\n    uVar18 = in_R11;\ncode_r0x0048f933:\n    *(*0x20 + -0x90) = 0x48f93e;\n    fcn.0045ca40(uVar20);\ncode_r0x0048f93e:\n    *(*0x20 + -0x90) = 0x48f949;\n    fcn.0045ca40(uVar20);\ncode_r0x0048f949:\n    arg1 = uVar20;\n    *(*0x20 + -0x90) = 0x48f954;\n    fcn.0045ca40(arg1);\ncode_r0x0048f954:\n    *(*0x20 + -0x90) = 0x48f95c;\n    in_RAX = fcn.0045ca40(arg1);\ncode_r0x0048f95d:\n    *(puVar12 + 8) = in_RAX;\n    *(puVar12 + 0x10) = unaff_RBX;\n    *(puVar12 + -8) = 0x48f96c;\n    fcn.0045a360();\n    in_RAX = *(puVar12 + 8);\n    unaff_RBX = *(puVar12 + 0x10);\n    *0x20 = puVar12;\n    in_R11 = uVar18;\n    goto code_r0x0048f440;\n}\n",
        "token_count": 3690
    },
    "00491e60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00491e60(int64_t arg1)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong in_RAX;\n    ulong uVar6;\n    ulong in_RDX;\n    ulong *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 < 8) {\n                if (3 < arg1) {\n                    if (5 < arg1) {\n                        if (arg1 == 6) {\n                            uVar6 = *unaff_RBX;\n                            uVar1 = unaff_RBX[3];\n                            uVar2 = unaff_RBX[4];\n                            *(*0x20 + -0xc0) = 0x492133;\n                            uVar6 = fcn.00458da0(uVar6, uVar6, uVar1, uVar2);\n                            *(*0x20 + -0x10) = uVar6;\n                            *(*0x20 + -0x18) = 6;\n                            *(*0x20 + -0xc0) = 0x49214b;\n                            fcn.00409d20();\n                            return *(*0x20 + -0x10);\n                        }\n                        uVar6 = *unaff_RBX;\n                        uVar1 = unaff_RBX[3];\n                        uVar2 = unaff_RBX[4];\n                        *(*0x20 + -0xb8) = in_XMM15;\n                        *(*0x20 + -0xc0) = 0x4921a5;\n                        uVar6 = fcn.00458e00(uVar6, uVar6, uVar1, uVar2);\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x18) = arg1;\n                        *(*0x20 + -0xc0) = 0x4921bd;\n                        fcn.00409d20();\n                        return *(*0x20 + -0x10);\n                    }\n                    if (arg1 == 4) {\n                        uVar6 = *unaff_RBX;\n                        uVar1 = unaff_RBX[3];\n                        *(*0x20 + -0xc0) = 0x49205b;\n                        uVar6 = fcn.00458da0(uVar6, uVar6, uVar1, 0);\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x18) = 4;\n                        *(*0x20 + -0xc0) = 0x492073;\n                        fcn.00409d20();\n                        return *(*0x20 + -0x10);\n                    }\n                    uVar6 = *unaff_RBX;\n                    uVar1 = unaff_RBX[3];\n                    uVar2 = unaff_RBX[4];\n                    *(*0x20 + -0xc0) = 0x4920c5;\n                    uVar6 = fcn.00458da0(uVar6, uVar6, uVar1, uVar2);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0xc0) = 0x4920dd;\n                    fcn.00409d20();\n                    return *(*0x20 + -0x10);\n                }\n                if (1 < arg1) {\n                    if (arg1 == 2) {\n                        uVar6 = *unaff_RBX;\n                        *(*0x20 + -0xc0) = 0x491f86;\n                        uVar6 = fcn.00458d40(uVar6);\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x18) = 2;\n                        *(*0x20 + -0xc0) = 0x491f9e;\n                        fcn.00409d20();\n                        return *(*0x20 + -0x10);\n                    }\n                    uVar6 = *unaff_RBX;\n                    *(*0x20 + -0xc0) = 0x491fe5;\n                    uVar6 = fcn.00458d40(uVar6);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0xc0) = 0x491ffd;\n                    fcn.00409d20();\n                    return *(*0x20 + -0x10);\n                }\n                if (arg1 == 0) {\n                    *(*0x20 + -0xc0) = 0x491ecd;\n                    uVar6 = fcn.00458d40(0);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = 0;\n                    *(*0x20 + -0xc0) = 0x491ee5;\n                    fcn.00409d20();\n                    return *(*0x20 + -0x10);\n                }\n                uVar6 = *unaff_RBX;\n                *(*0x20 + -0xc0) = 0x491f26;\n                uVar6 = fcn.00458d40(uVar6);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = arg1;\n                *(*0x20 + -0xc0) = 0x491f3e;\n                fcn.00409d20();\n                return *(*0x20 + -0x10);\n            }\n            if (arg1 < 0xc) {\n                if (9 < arg1) {\n                    if (arg1 == 10) {\n                        uVar6 = *unaff_RBX;\n                        uVar1 = unaff_RBX[3];\n                        uVar2 = unaff_RBX[4];\n                        uVar3 = unaff_RBX[8];\n                        uVar4 = unaff_RBX[9];\n                        *(*0x20 + -0xb8) = unaff_RBX[7];\n                        *(*0x20 + -0xb0) = uVar3;\n                        *(*0x20 + -0xa8) = uVar4;\n                        *(*0x20 + -0xa0) = in_XMM15;\n                        *(*0x20 + -0xc0) = 0x49235b;\n                        uVar6 = fcn.00458ea0(uVar6, uVar6, uVar1, uVar2);\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x18) = 10;\n                        *(*0x20 + -0xc0) = 0x492373;\n                        fcn.00409d20();\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x10) = *unaff_RBX;\n                    uVar6 = unaff_RBX[3];\n                    uVar1 = unaff_RBX[4];\n                    uVar2 = unaff_RBX[8];\n                    uVar3 = unaff_RBX[9];\n                    uVar4 = unaff_RBX[10];\n                    *(*0x20 + -0xb8) = unaff_RBX[7];\n                    *(*0x20 + -0xb0) = uVar2;\n                    *(*0x20 + -0xa8) = uVar3;\n                    *(*0x20 + -0xa0) = uVar4;\n                    *(*0x20 + -0x98) = 0;\n                    *(*0x20 + -0xc0) = 0x492405;\n                    uVar6 = fcn.00458ea0(*(*0x20 + -0x10), uVar4, uVar6, uVar1);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0xc0) = 0x49241d;\n                    fcn.00409d20();\n                    return *(*0x20 + -0x10);\n                }\n                if (arg1 == 8) {\n                    uVar6 = *unaff_RBX;\n                    uVar1 = unaff_RBX[3];\n                    uVar2 = unaff_RBX[4];\n                    *(*0x20 + -0xb8) = unaff_RBX[7];\n                    *(*0x20 + -0xb0) = 0;\n                    *(*0x20 + -0xc0) = 0x492245;\n                    uVar6 = fcn.00458e00(uVar6, uVar6, uVar1, uVar2);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = 8;\n                    *(*0x20 + -0xc0) = 0x49225d;\n                    fcn.00409d20();\n                    return *(*0x20 + -0x10);\n                }\n                uVar6 = *unaff_RBX;\n                uVar1 = unaff_RBX[3];\n                uVar2 = unaff_RBX[4];\n                uVar3 = unaff_RBX[8];\n                *(*0x20 + -0xb8) = unaff_RBX[7];\n                *(*0x20 + -0xb0) = uVar3;\n                *(*0x20 + -0xc0) = 0x4922c5;\n                uVar6 = fcn.00458e00(uVar6, uVar6, uVar1, uVar2);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = arg1;\n                *(*0x20 + -0xc0) = 0x4922dd;\n                fcn.00409d20();\n                return *(*0x20 + -0x10);\n            }\n            if (arg1 < 0xe) {\n                if (arg1 == 0xc) {\n                    *(*0x20 + -0x10) = *unaff_RBX;\n                    uVar6 = unaff_RBX[3];\n                    uVar1 = unaff_RBX[4];\n                    uVar2 = unaff_RBX[7];\n                    uVar3 = unaff_RBX[8];\n                    uVar4 = unaff_RBX[9];\n                    *(*0x20 + -0x18) = unaff_RBX[10];\n                    uVar5 = unaff_RBX[0xb];\n                    *(*0x20 + -0xb8) = uVar2;\n                    *(*0x20 + -0xb0) = uVar3;\n                    *(*0x20 + -0xa8) = uVar4;\n                    *(*0x20 + -0xa0) = *(*0x20 + -0x18);\n                    *(*0x20 + -0x98) = uVar5;\n                    *(*0x20 + -0xc0) = 0x4924ce;\n                    uVar6 = fcn.00458ea0(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = 0xc;\n                    *(*0x20 + -0xc0) = 0x4924e6;\n                    fcn.00409d20();\n                    return *(*0x20 + -0x10);\n                }\n                *(*0x20 + -0x10) = *unaff_RBX;\n                uVar6 = unaff_RBX[3];\n                uVar1 = unaff_RBX[4];\n                uVar2 = unaff_RBX[7];\n                uVar3 = unaff_RBX[8];\n                uVar4 = unaff_RBX[9];\n                *(*0x20 + -0x18) = unaff_RBX[10];\n                *(*0x20 + -0x20) = unaff_RBX[0xb];\n                uVar5 = unaff_RBX[0xc];\n                *(*0x20 + -0xb8) = uVar2;\n                *(*0x20 + -0xb0) = uVar3;\n                *(*0x20 + -0xa8) = uVar4;\n                *(*0x20 + -0xa0) = *(*0x20 + -0x18);\n                *(*0x20 + -0x98) = *(*0x20 + -0x20);\n                *(*0x20 + -0x90) = uVar5;\n                *(*0x20 + -0x88) = in_XMM15;\n                *(*0x20 + -0xc0) = 0x4925a5;\n                uVar6 = fcn.00458f60(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = arg1;\n                *(*0x20 + -0xc0) = 0x4925bd;\n                fcn.00409d20();\n                return *(*0x20 + -0x10);\n            }\n            if (arg1 == 0xe) {\n                *(*0x20 + -0x10) = *unaff_RBX;\n                uVar6 = unaff_RBX[3];\n                uVar1 = unaff_RBX[4];\n                uVar2 = unaff_RBX[7];\n                uVar3 = unaff_RBX[8];\n                uVar4 = unaff_RBX[9];\n                *(*0x20 + -0x18) = unaff_RBX[10];\n                *(*0x20 + -0x20) = unaff_RBX[0xb];\n                *(*0x20 + -0x28) = unaff_RBX[0xc];\n                uVar5 = unaff_RBX[0xd];\n                *(*0x20 + -0xb8) = uVar2;\n                *(*0x20 + -0xb0) = uVar3;\n                *(*0x20 + -0xa8) = uVar4;\n                *(*0x20 + -0xa0) = *(*0x20 + -0x18);\n                *(*0x20 + -0x98) = *(*0x20 + -0x20);\n                *(*0x20 + -0x90) = *(*0x20 + -0x28);\n                *(*0x20 + -0x88) = uVar5;\n                *(*0x20 + -0x80) = 0;\n                *(*0x20 + -0xc0) = 0x4927a9;\n                uVar6 = fcn.00458f60(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = 0xe;\n                *(*0x20 + -0xc0) = 0x4927c5;\n                fcn.00409d20();\n                return *(*0x20 + -0x10);\n            }\n            if (arg1 == 0xf) {\n                *(*0x20 + -0x10) = *unaff_RBX;\n                uVar6 = unaff_RBX[3];\n                uVar1 = unaff_RBX[4];\n                uVar2 = unaff_RBX[7];\n                uVar3 = unaff_RBX[8];\n                uVar4 = unaff_RBX[9];\n                *(*0x20 + -0x18) = unaff_RBX[10];\n                *(*0x20 + -0x20) = unaff_RBX[0xb];\n                *(*0x20 + -0x28) = unaff_RBX[0xc];\n                *(*0x20 + -0x30) = unaff_RBX[0xd];\n                uVar5 = unaff_RBX[0xe];\n                *(*0x20 + -0xb8) = uVar2;\n                *(*0x20 + -0xb0) = uVar3;\n                *(*0x20 + -0xa8) = uVar4;\n                *(*0x20 + -0xa0) = *(*0x20 + -0x18);\n                *(*0x20 + -0x98) = *(*0x20 + -0x20);\n                *(*0x20 + -0x90) = *(*0x20 + -0x28);\n                *(*0x20 + -0x88) = *(*0x20 + -0x30);\n                *(*0x20 + -0x80) = uVar5;\n                *(*0x20 + -0xc0) = 0x4926b9;\n                uVar6 = fcn.00458f60(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = 0xf;\n                *(*0x20 + -0xc0) = 0x4926d1;\n                fcn.00409d20();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0xc0) = 0x4927ff;\n            fcn.00493160();\n            unaff_RDI = *(*(*0x20 + 8) + 8);\n            *(*0x20 + -0xb8) = 0x4c790d;\n            *(*0x20 + -0xb0) = 1;\n            arg1 = 5;\n            *(*0x20 + -0xc0) = 0x492849;\n            fcn.004488a0(5, in_RDX, 0x4ce1de, 0x19);\n            *(*0x20 + -0xc0) = 0x49284e;\n            unaff_RBX = fcn.00409da0();\n            *(*0x20 + -0xc0) = 0x49285d;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + -8) = 0x492877;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 4368
    },
    "00401640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004019db)\n\nvoid fcn.00401640(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    ulong arg2_00;\n    int64_t unaff_R14;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint64_t arg2;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040c440();\n    iVar1 = fcn.0045cefc();\n    if (*0x5d3dd0 == 0) {\n        *(iVar1 + 0x10) = 0x5d4341;\n        *(iVar1 + 0x30) = 0x5d4340;\n        *(iVar1 + 0x50) = 0x5d4342;\n        *(iVar1 + 0x70) = 0x5d4343;\n        *(iVar1 + 0x90) = 0x5d4344;\n        *(iVar1 + 0xb0) = 0x5d4345;\n        *(iVar1 + 0xd0) = 0x5d4346;\n        *(iVar1 + 0xf0) = 0x5d4347;\n        *(iVar1 + 0x110) = 0x5d4349;\n        *(iVar1 + 0x130) = 0x5d434a;\n        *(iVar1 + 0x150) = 0x5d434b;\n        *(iVar1 + 0x170) = 0x5d434c;\n        *(iVar1 + 400) = 0x5d434e;\n        *(iVar1 + 0x1b0) = 0x5d434f;\n        uVar2 = 0x5d434d;\n        *(iVar1 + 0x1d0) = 0x5d434d;\n    }\n    else {\n        fcn.0045c6a0(0x5d4341);\n        fcn.0045c6a0(0x5d4340);\n        fcn.0045c6a0(0x5d4342);\n        fcn.0045c6a0(0x5d4343);\n        fcn.0045c6a0(0x5d4344);\n        fcn.0045c6a0(0x5d4345);\n        fcn.0045c6a0(0x5d4346);\n        fcn.0045c6a0(0x5d4347);\n        fcn.0045c6a0(0x5d4349);\n        fcn.0045c6a0(0x5d434a);\n        fcn.0045c6a0(0x5d434b);\n        fcn.0045c6a0(0x5d434c);\n        fcn.0045c6a0(0x5d434e);\n        fcn.0045c6a0(0x5d434f);\n        uVar2 = 0x5d434d;\n        iVar1 = fcn.0045c6a0();\n    }\n    *0x57faf8 = 0xf;\n    *0x57fb00 = 0xf;\n    if (*0x5d3dd0 != 0) {\n        fcn.0045c5a0(uVar2, param_2, param_3, param_4);\n        iVar1 = *0x57faf0;\n    }\n    *0x57faf0 = iVar1;\n    fcn.00401b20(uVar2, param_2);\n    if (uStack40 != 0) {\n        fcn.00401b20(uVar2, param_2);\n        *0x5d3b3c = uStack40;\n        fcn.00401b20(uVar2, param_2);\n        *0x5d434c = (uStack32 & 1) != 0;\n        *0x5d4349 = (uStack32 >> 1 & 1) != 0;\n        *0x5d434d = (uStack32 >> 9 & 1) != 0;\n        *0x5d434e = (uStack32 >> 0x13 & 1) != 0;\n        *0x5d434f = (uStack32 >> 0x14 & 1) != 0;\n        *0x5d434a = (uStack32 >> 0x17 & 1) != 0;\n        *0x5d4340 = (uStack32 >> 0x19 & 1) != 0;\n        *0x5d4348 = (uStack32 >> 0x1b & 1) != 0;\n        uVar2 = uVar2 & 0xffffffffffffff00 | *0x5d4348;\n        uVar3 = (param_2 & 0xffffff00 | (uStack32 >> 0xc & 1) != 0) & uVar2;\n        arg2 = uVar3;\n        *0x5d4347 = uVar3;\n        if ((uStack32 >> 0x1b & 1) != 0) {\n            fcn.00401b40(uVar2, arg2);\n        }\n        uVar2 = 0;\n        *0x5d4342 = 0;\n        if (6 < uStack40) {\n            fcn.00401b20(0, arg2);\n            *0x5d4344 = (uStack36 >> 3 & 1) != 0;\n            uVar2 = uVar2 & 0xffffffffffffff00 | (uStack36 >> 5 & 1) != 0;\n            arg2_00 = 0;\n            *0x5d4343 = 0;\n            *0x5d4345 = (uStack36 >> 8 & 1) != 0;\n            *0x5d4346 = (uStack36 >> 9 & 1) != 0;\n            *0x5d4341 = (uStack36 >> 0x13 & 1) != 0;\n            fcn.00401b20(uVar2, 0);\n            if (uStack40 < 0x80000001) {\n                return;\n            }\n            fcn.00401b20(uVar2, arg2_00);\n            *0x5d434b = (uStack28 >> 0x1b & 1) != 0;\n            return;\n        }\n        *0x5d4342 = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 1572
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00402060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00402060(uchar (*arg1) [32])\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uchar (*in_RAX) [32];\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uchar auVar6 [16];\n    uint8_t uVar7;\n    uchar auVar8 [32];\n    uchar auVar9 [32];\n    uchar auVar10 [32];\n    uchar auVar11 [32];\n    \n    if (in_RAX != arg1) {\n        uVar5 = unaff_RDI;\n        if (unaff_RBX < unaff_RDI) {\n            uVar5 = unaff_RBX;\n        }\n        if (uVar5 < 8) {\n            if (uVar5 * -8 != 0) {\n                uVar7 = uVar5 * -8;\n                if (in_RAX < 0xf9) {\n                    uVar3 = **in_RAX;\n                }\n                else {\n                    uVar3 = *(in_RAX[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar3 = uVar3 << (uVar7 & 0x3f);\n                if (arg1 < 0xf9) {\n                    uVar5 = **arg1;\n                }\n                else {\n                    uVar5 = *(arg1[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar5 = uVar5 << (uVar7 & 0x3f);\n                uVar3 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                        (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                        (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n                uVar5 = (uVar5 >> 0x38 | (uVar5 & 0xff000000000000) >> 0x28 | (uVar5 & 0xff0000000000) >> 0x18 |\n                         (uVar5 & 0xff00000000) >> 8 | (uVar5 & 0xff000000) << 8 | (uVar5 & 0xff0000) << 0x18 |\n                         (uVar5 & 0xff00) << 0x28 | uVar5 << 0x38) ^ uVar3;\n                if (uVar5 != 0) {\n                    iVar1 = 0x3f;\n                    if (uVar5 != 0) {\n                        for (; uVar5 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                        }\n                    }\n                    return (uVar3 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n                }\n            }\n            goto code_r0x00401f4b;\n        }\n        if (0x3f < uVar5) {\n            if (*0x5d4343 == '\\x01') {\n                do {\n                    auVar8 = vmovdqu_avx(*in_RAX);\n                    auVar9 = vmovdqu_avx(*arg1);\n                    auVar10 = vmovdqu_avx(in_RAX[1]);\n                    auVar11 = vmovdqu_avx(arg1[1]);\n                    auVar8 = vpcmpeqb_avx2(auVar9, auVar8);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x00401e9d;\n                    }\n                    auVar8 = vpcmpeqb_avx2(auVar11, auVar10);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x00401e8b;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x3f < uVar5);\n                vzeroupper_avx();\n            }\n            else {\n                do {\n                    uVar7 = -((*arg1)[0xf] == (*in_RAX)[0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == (*in_RAX)[0xe]), \n                                                        CONCAT113(-((*arg1)[0xd] == (*in_RAX)[0xd]), \n                                                                  CONCAT112(-((*arg1)[0xc] == (*in_RAX)[0xc]), \n                                                                            CONCAT111(-((*arg1)[0xb] == (*in_RAX)[0xb])\n                                                                                      , CONCAT110(-((*arg1)[10] ==\n                                                                                                   (*in_RAX)[10]), \n                                                                                                  CONCAT19(-((*arg1)[9]\n                                                                                                            == (*in_RAX)\n                                                            [9]), CONCAT18(-((*arg1)[8] == (*in_RAX)[8]), \n                                                                           CONCAT17(-((*arg1)[7] == (*in_RAX)[7]), \n                                                                                    CONCAT16(-((*arg1)[6] ==\n                                                                                              (*in_RAX)[6]), \n                                                                                             CONCAT15(-((*arg1)[5] ==\n                                                                                                       (*in_RAX)[5]), \n                                                                                                      CONCAT14(-((*arg1)\n                                                            [4] == (*in_RAX)[4]), \n                                                            CONCAT13(-((*arg1)[3] == (*in_RAX)[3]), \n                                                                     CONCAT12(-((*arg1)[2] == (*in_RAX)[2]), \n                                                                              CONCAT11(-((*arg1)[1] == (*in_RAX)[1]), \n                                                                                       -((*arg1)[0] == (*in_RAX)[0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x00401e9d;\n                    uVar7 = -((*arg1)[0x1f] == (*in_RAX)[0x1f]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0x1e] == (*in_RAX)[0x1e]), \n                                                        CONCAT113(-((*arg1)[0x1d] == (*in_RAX)[0x1d]), \n                                                                  CONCAT112(-((*arg1)[0x1c] == (*in_RAX)[0x1c]), \n                                                                            CONCAT111(-((*arg1)[0x1b] == (*in_RAX)[0x1b]\n                                                                                       ), CONCAT110(-((*arg1)[0x1a] ==\n                                                                                                     (*in_RAX)[0x1a]), \n                                                                                                    CONCAT19(-((*arg1)[\n                                                            0x19] == (*in_RAX)[0x19]), \n                                                            CONCAT18(-((*arg1)[0x18] == (*in_RAX)[0x18]), \n                                                                     CONCAT17(-((*arg1)[0x17] == (*in_RAX)[0x17]), \n                                                                              CONCAT16(-((*arg1)[0x16] ==\n                                                                                        (*in_RAX)[0x16]), \n                                                                                       CONCAT15(-((*arg1)[0x15] ==\n                                                                                                 (*in_RAX)[0x15]), \n                                                                                                CONCAT14(-((*arg1)[0x14]\n                                                                                                          == (*in_RAX)[\n                                                            0x14]), CONCAT13(-((*arg1)[0x13] == (*in_RAX)[0x13]), \n                                                                             CONCAT12(-((*arg1)[0x12] == (*in_RAX)[0x12]\n                                                                                       ), CONCAT11(-((*arg1)[0x11] ==\n                                                                                                    (*in_RAX)[0x11]), \n                                                                                                   -((*arg1)[0x10] ==\n                                                                                                    (*in_RAX)[0x10])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = *in_RAX + 0x10;\n                        arg1 = *arg1 + 0x10;\n                        goto code_r0x00401e9d;\n                    }\n                    uVar7 = -(arg1[1][0xf] == in_RAX[1][0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0xe] == in_RAX[1][0xe]), \n                                                        CONCAT113(-(arg1[1][0xd] == in_RAX[1][0xd]), \n                                                                  CONCAT112(-(arg1[1][0xc] == in_RAX[1][0xc]), \n                                                                            CONCAT111(-(arg1[1][0xb] == in_RAX[1][0xb])\n                                                                                      , CONCAT110(-(arg1[1][10] ==\n                                                                                                   in_RAX[1][10]), \n                                                                                                  CONCAT19(-(arg1[1][9]\n                                                                                                            == in_RAX[1]\n                                                            [9]), CONCAT18(-(arg1[1][8] == in_RAX[1][8]), \n                                                                           CONCAT17(-(arg1[1][7] == in_RAX[1][7]), \n                                                                                    CONCAT16(-(arg1[1][6] ==\n                                                                                              in_RAX[1][6]), \n                                                                                             CONCAT15(-(arg1[1][5] ==\n                                                                                                       in_RAX[1][5]), \n                                                                                                      CONCAT14(-(arg1[1]\n                                                            [4] == in_RAX[1][4]), \n                                                            CONCAT13(-(arg1[1][3] == in_RAX[1][3]), \n                                                                     CONCAT12(-(arg1[1][2] == in_RAX[1][2]), \n                                                                              CONCAT11(-(arg1[1][1] == in_RAX[1][1]), \n                                                                                       -(arg1[1][0] == in_RAX[1][0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x00401e8b;\n                    auVar6 = *(in_RAX[1] + 0x10);\n                    uVar7 = -(arg1[1][0x1f] == SUB161(auVar6 >> 0x78, 0));\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0x1e] == SUB161(auVar6 >> 0x70, 0)), \n                                                        CONCAT113(-(arg1[1][0x1d] == SUB161(auVar6 >> 0x68, 0)), \n                                                                  CONCAT112(-(arg1[1][0x1c] == SUB161(auVar6 >> 0x60, 0)\n                                                                             ), CONCAT111(-(arg1[1][0x1b] ==\n                                                                                           SUB161(auVar6 >> 0x58, 0)), \n                                                                                          CONCAT110(-(arg1[1][0x1a] ==\n                                                                                                     SUB161(auVar6 >> \n                                                            0x50, 0)), \n                                                            CONCAT19(-(arg1[1][0x19] == SUB161(auVar6 >> 0x48, 0)), \n                                                                     CONCAT18(-(arg1[1][0x18] ==\n                                                                               SUB161(auVar6 >> 0x40, 0)), \n                                                                              CONCAT17(-(arg1[1][0x17] ==\n                                                                                        SUB161(auVar6 >> 0x38, 0)), \n                                                                                       CONCAT16(-(arg1[1][0x16] ==\n                                                                                                 SUB161(auVar6 >> 0x30, \n                                                                                                        0)), \n                                                                                                CONCAT15(-(arg1[1][0x15]\n                                                                                                          == SUB161(\n                                                            auVar6 >> 0x28, 0)), \n                                                            CONCAT14(-(arg1[1][0x14] == SUB161(auVar6 >> 0x20, 0)), \n                                                                     CONCAT13(-(arg1[1][0x13] ==\n                                                                               SUB161(auVar6 >> 0x18, 0)), \n                                                                              CONCAT12(-(arg1[1][0x12] ==\n                                                                                        SUB161(auVar6 >> 0x10, 0)), \n                                                                                       CONCAT11(-(arg1[1][0x11] ==\n                                                                                                 SUB161(auVar6 >> 8, 0))\n                                                                                                , -(arg1[1][0x10] ==\n                                                                                                   SUB161(auVar6, 0)))))\n                                                                    ))))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = in_RAX[1] + 0x10;\n                        arg1 = arg1[1] + 0x10;\n                        goto code_r0x00401e9d;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x40 < uVar5);\n            }\n        }\n        for (; 0x10 < uVar5; uVar5 = uVar5 - 0x10) {\n            auVar6 = **in_RAX;\n            uVar7 = -((*arg1)[0xf] == SUB161(auVar6 >> 0x78, 0));\n            auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == SUB161(auVar6 >> 0x70, 0)), \n                                                CONCAT113(-((*arg1)[0xd] == SUB161(auVar6 >> 0x68, 0)), \n                                                          CONCAT112(-((*arg1)[0xc] == SUB161(auVar6 >> 0x60, 0)), \n                                                                    CONCAT111(-((*arg1)[0xb] ==\n                                                                               SUB161(auVar6 >> 0x58, 0)), \n                                                                              CONCAT110(-((*arg1)[10] ==\n                                                                                         SUB161(auVar6 >> 0x50, 0)), \n                                                                                        CONCAT19(-((*arg1)[9] ==\n                                                                                                  SUB161(auVar6 >> 0x48\n                                                                                                         , 0)), \n                                                                                                 CONCAT18(-((*arg1)[8]\n                                                                                                           == SUB161(\n                                                            auVar6 >> 0x40, 0)), \n                                                            CONCAT17(-((*arg1)[7] == SUB161(auVar6 >> 0x38, 0)), \n                                                                     CONCAT16(-((*arg1)[6] == SUB161(auVar6 >> 0x30, 0))\n                                                                              , CONCAT15(-((*arg1)[5] ==\n                                                                                          SUB161(auVar6 >> 0x28, 0)), \n                                                                                         CONCAT14(-((*arg1)[4] ==\n                                                                                                   SUB161(auVar6 >> 0x20\n                                                                                                          , 0)), \n                                                                                                  CONCAT13(-((*arg1)[3]\n                                                                                                            == SUB161(\n                                                            auVar6 >> 0x18, 0)), \n                                                            CONCAT12(-((*arg1)[2] == SUB161(auVar6 >> 0x10, 0)), \n                                                                     CONCAT11(-((*arg1)[1] == SUB161(auVar6 >> 8, 0)), \n                                                                              -((*arg1)[0] == SUB161(auVar6, 0))))))))))\n                                                            )))))));\n            uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n            if (uVar3 != 0) goto code_r0x00401e9d;\n            in_RAX = *in_RAX + 0x10;\n            arg1 = *arg1 + 0x10;\n        }\n        if (8 < uVar5) {\n            uVar3 = **in_RAX;\n            uVar4 = **arg1;\n            if (uVar3 != uVar4) goto code_r0x00401ed6;\n        }\n        uVar3 = *(in_RAX[-1] + uVar5 + 0x18);\n        uVar4 = *(arg1[-1] + uVar5 + 0x18);\n        if (uVar3 != uVar4) {\ncode_r0x00401ed6:\n            uVar5 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                    (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                    (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n            uVar3 = (uVar4 >> 0x38 | (uVar4 & 0xff000000000000) >> 0x28 | (uVar4 & 0xff0000000000) >> 0x18 |\n                     (uVar4 & 0xff00000000) >> 8 | (uVar4 & 0xff000000) << 8 | (uVar4 & 0xff0000) << 0x18 |\n                     (uVar4 & 0xff00) << 0x28 | uVar4 << 0x38) ^ uVar5;\n            iVar1 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            return (uVar5 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n        }\n    }\ncode_r0x00401f4b:\n    return ((unaff_RBX == unaff_RDI) - 1) + (unaff_RBX != unaff_RDI && unaff_RDI <= unaff_RBX) * 2;\ncode_r0x00401e8b:\n    in_RAX = in_RAX[1];\n    arg1 = arg1[1];\ncode_r0x00401e9d:\n    iVar1 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    return ((*arg1)[iVar1] <= (*in_RAX)[iVar1] && (*in_RAX)[iVar1] != (*arg1)[iVar1]) * 2 + -1;\n}\n",
        "token_count": 7688
    },
    "004021c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004021c0(uint64_t arg1, ulong arg2)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar (*in_RAX) [32];\n    uint8_t uVar5;\n    uchar (*unaff_RBX) [32];\n    uchar (*pauVar6) [32];\n    uint64_t uVar7;\n    uint64_t uVar8;\n    bool bVar9;\n    uchar auVar10 [16];\n    uchar auVar11 [32];\n    uchar auVar12 [32];\n    uchar auVar13 [32];\n    uchar auVar14 [32];\n    \n    if (in_RAX == unaff_RBX) {\n        return 1;\n    }\n    if (7 < arg1) {\n        pauVar6 = in_RAX;\n        if (0x3f < arg1) {\n            if (*0x5d4343 == '\\x01') {\n                while (0x3f < arg1) {\n                    auVar11 = vmovdqu_avx(*pauVar6);\n                    auVar12 = vmovdqu_avx(*unaff_RBX);\n                    auVar13 = vmovdqu_avx(pauVar6[1]);\n                    auVar14 = vmovdqu_avx(unaff_RBX[1]);\n                    auVar11 = vpcmpeqb_avx2(auVar11, auVar12);\n                    auVar12 = vpcmpeqb_avx2(auVar14, auVar13);\n                    auVar11 = vpand_avx2(auVar12, auVar11);\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB321(auVar11 >> 7, 0) & 1 | (SUB321(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB321(auVar11 >> 0x17, 0) & 1) << 2 | (SUB321(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB321(auVar11 >> 0x27, 0) & 1) << 4 | (SUB321(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB321(auVar11 >> 0x37, 0) & 1) << 6 | (SUB321(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB321(auVar11 >> 0x47, 0) & 1) << 8 | (SUB321(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB321(auVar11 >> 0x57, 0) & 1) << 10 | (SUB321(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB321(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB321(auVar11 >> 0x77, 0) & 1) << 0xe | SUB321(auVar11 >> 0x7f, 0) << 0xf |\n                         (SUB321(auVar11 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar11 >> 0x8f, 0) & 1) << 0x11 |\n                         (SUB321(auVar11 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar11 >> 0x9f, 0) & 1) << 0x13 |\n                         (SUB321(auVar11 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar11 >> 0xaf, 0) & 1) << 0x15 |\n                         (SUB321(auVar11 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar11 >> 0xbf, 0) << 0x17 |\n                         (SUB321(auVar11 >> 199, 0) & 1) << 0x18 | (SUB321(auVar11 >> 0xcf, 0) & 1) << 0x19 |\n                         (SUB321(auVar11 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar11 >> 0xdf, 0) & 1) << 0x1b |\n                         (SUB321(auVar11 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar11 >> 0xef, 0) & 1) << 0x1d |\n                         (SUB321(auVar11 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar11 >> 0xff, 0) << 0x1f) != 0xffffffff) {\n                        vzeroupper_avx();\n                        return 0;\n                    }\n                }\n                vzeroupper_avx();\n            }\n            else {\n                while (0x3f < arg1) {\n                    auVar10 = **unaff_RBX;\n                    auVar1 = *(*unaff_RBX + 0x10);\n                    auVar2 = *unaff_RBX[1];\n                    auVar10 = CONCAT115(-((*pauVar6)[0xf] == SUB161(auVar10 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0xe] == SUB161(auVar10 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0xd] == SUB161(auVar10 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0xc] == SUB161(auVar10 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0xb] ==\n                                                                                 SUB161(auVar10 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[10] ==\n                                                                                           SUB161(auVar10 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[9] ==\n                                                                                                    SUB161(auVar10 >>\n                                                                                                           0x48, 0)), \n                                                                                                   CONCAT18(-((*pauVar6)\n                                                                                                              [8] == \n                                                            SUB161(auVar10 >> 0x40, 0)), \n                                                            CONCAT17(-((*pauVar6)[7] == SUB161(auVar10 >> 0x38, 0)), \n                                                                     CONCAT16(-((*pauVar6)[6] ==\n                                                                               SUB161(auVar10 >> 0x30, 0)), \n                                                                              CONCAT15(-((*pauVar6)[5] ==\n                                                                                        SUB161(auVar10 >> 0x28, 0)), \n                                                                                       CONCAT14(-((*pauVar6)[4] ==\n                                                                                                 SUB161(auVar10 >> 0x20\n                                                                                                        , 0)), \n                                                                                                CONCAT13(-((*pauVar6)[3]\n                                                                                                          == SUB161(\n                                                            auVar10 >> 0x18, 0)), \n                                                            CONCAT12(-((*pauVar6)[2] == SUB161(auVar10 >> 0x10, 0)), \n                                                                     CONCAT11(-((*pauVar6)[1] == SUB161(auVar10 >> 8, 0)\n                                                                               ), -((*pauVar6)[0] == SUB161(auVar10, 0))\n                                                                             ))))))))))))))) &\n                              CONCAT115(-((*pauVar6)[0x1f] == SUB161(auVar1 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0x1e] == SUB161(auVar1 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0x1d] == SUB161(auVar1 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0x1c] == SUB161(auVar1 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0x1b] ==\n                                                                                 SUB161(auVar1 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[0x1a] ==\n                                                                                           SUB161(auVar1 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[0x19] ==\n                                                                                                    SUB161(auVar1 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-((*pauVar6)[0x18] == SUB161(auVar1 >> 0x40, 0)), \n                                                                     CONCAT17(-((*pauVar6)[0x17] ==\n                                                                               SUB161(auVar1 >> 0x38, 0)), \n                                                                              CONCAT16(-((*pauVar6)[0x16] ==\n                                                                                        SUB161(auVar1 >> 0x30, 0)), \n                                                                                       CONCAT15(-((*pauVar6)[0x15] ==\n                                                                                                 SUB161(auVar1 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-((*pauVar6)\n                                                                                                           [0x14] ==\n                                                                                                          SUB161(auVar1 \n                                                            >> 0x20, 0)), \n                                                            CONCAT13(-((*pauVar6)[0x13] == SUB161(auVar1 >> 0x18, 0)), \n                                                                     CONCAT12(-((*pauVar6)[0x12] ==\n                                                                               SUB161(auVar1 >> 0x10, 0)), \n                                                                              CONCAT11(-((*pauVar6)[0x11] ==\n                                                                                        SUB161(auVar1 >> 8, 0)), \n                                                                                       -((*pauVar6)[0x10] ==\n                                                                                        SUB161(auVar1, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0xf] == SUB161(auVar2 >> 0x78, 0)), \n                                        CONCAT114(-(pauVar6[1][0xe] == SUB161(auVar2 >> 0x70, 0)), \n                                                  CONCAT113(-(pauVar6[1][0xd] == SUB161(auVar2 >> 0x68, 0)), \n                                                            CONCAT112(-(pauVar6[1][0xc] == SUB161(auVar2 >> 0x60, 0)), \n                                                                      CONCAT111(-(pauVar6[1][0xb] ==\n                                                                                 SUB161(auVar2 >> 0x58, 0)), \n                                                                                CONCAT110(-(pauVar6[1][10] ==\n                                                                                           SUB161(auVar2 >> 0x50, 0)), \n                                                                                          CONCAT19(-(pauVar6[1][9] ==\n                                                                                                    SUB161(auVar2 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-(pauVar6[1][8] == SUB161(auVar2 >> 0x40, 0)), \n                                                                     CONCAT17(-(pauVar6[1][7] ==\n                                                                               SUB161(auVar2 >> 0x38, 0)), \n                                                                              CONCAT16(-(pauVar6[1][6] ==\n                                                                                        SUB161(auVar2 >> 0x30, 0)), \n                                                                                       CONCAT15(-(pauVar6[1][5] ==\n                                                                                                 SUB161(auVar2 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-(pauVar6[1][4]\n                                                                                                          == SUB161(\n                                                            auVar2 >> 0x20, 0)), \n                                                            CONCAT13(-(pauVar6[1][3] == SUB161(auVar2 >> 0x18, 0)), \n                                                                     CONCAT12(-(pauVar6[1][2] ==\n                                                                               SUB161(auVar2 >> 0x10, 0)), \n                                                                              CONCAT11(-(pauVar6[1][1] ==\n                                                                                        SUB161(auVar2 >> 8, 0)), \n                                                                                       -(pauVar6[1][0] ==\n                                                                                        SUB161(auVar2, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0x1f] == unaff_RBX[1][0x1f]), \n                                        CONCAT114(-(pauVar6[1][0x1e] == unaff_RBX[1][0x1e]), \n                                                  CONCAT113(-(pauVar6[1][0x1d] == unaff_RBX[1][0x1d]), \n                                                            CONCAT112(-(pauVar6[1][0x1c] == unaff_RBX[1][0x1c]), \n                                                                      CONCAT111(-(pauVar6[1][0x1b] == unaff_RBX[1][0x1b]\n                                                                                 ), CONCAT110(-(pauVar6[1][0x1a] ==\n                                                                                               unaff_RBX[1][0x1a]), \n                                                                                              CONCAT19(-(pauVar6[1]\n                                                                                                         [0x19] ==\n                                                                                                        unaff_RBX[1]\n                                                                                                        [0x19]), \n                                                                                                       CONCAT18(-(\n                                                            pauVar6[1][0x18] == unaff_RBX[1][0x18]), \n                                                            CONCAT17(-(pauVar6[1][0x17] == unaff_RBX[1][0x17]), \n                                                                     CONCAT16(-(pauVar6[1][0x16] == unaff_RBX[1][0x16])\n                                                                              , CONCAT15(-(pauVar6[1][0x15] ==\n                                                                                          unaff_RBX[1][0x15]), \n                                                                                         CONCAT14(-(pauVar6[1][0x14] ==\n                                                                                                   unaff_RBX[1][0x14]), \n                                                                                                  CONCAT13(-(pauVar6[1]\n                                                                                                             [0x13] ==\n                                                                                                            unaff_RBX[1]\n                                                                                                            [0x13]), \n                                                                                                           CONCAT12(-(\n                                                            pauVar6[1][0x12] == unaff_RBX[1][0x12]), \n                                                            CONCAT11(-(pauVar6[1][0x11] == unaff_RBX[1][0x11]), \n                                                                     -(pauVar6[1][0x10] == unaff_RBX[1][0x10])))))))))))\n                                                            )))));\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB161(auVar10 >> 7, 0) & 1 | (SUB161(auVar10 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar10 >> 0x17, 0) & 1) << 2 | (SUB161(auVar10 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar10 >> 0x27, 0) & 1) << 4 | (SUB161(auVar10 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar10 >> 0x37, 0) & 1) << 6 | (SUB161(auVar10 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar10 >> 0x47, 0) & 1) << 8 | (SUB161(auVar10 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar10 >> 0x57, 0) & 1) << 10 | (SUB161(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar10 >> 0x77, 0) & 1) << 0xe | SUB161(auVar10 >> 0x7f, 0) << 0xf) != 0xffff) {\n                        return 0;\n                    }\n                }\n            }\n        }\n        do {\n            if (arg1 < 9) {\n                return in_RAX & 0xffffffffffffff00 | *(pauVar6[-1] + arg1 + 0x18) == *(unaff_RBX[-1] + arg1 + 0x18);\n            }\n            puVar3 = *pauVar6;\n            puVar4 = *unaff_RBX;\n            pauVar6 = *pauVar6 + 8;\n            unaff_RBX = *unaff_RBX + 8;\n            arg1 = arg1 - 8;\n        } while (*puVar3 == *puVar4);\n        return 0;\n    }\n    bVar9 = arg1 == 0;\n    if (!bVar9) {\n        uVar5 = arg1 * -8;\n        if (in_RAX < 0xf9) {\n            uVar7 = **in_RAX;\n        }\n        else {\n            uVar7 = *(in_RAX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        if (unaff_RBX < 0xf9) {\n            uVar8 = **unaff_RBX;\n        }\n        else {\n            uVar8 = *(unaff_RBX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        bVar9 = (arg1 * -8 & 0x3f) != 0;\n        bVar9 = !bVar9 && uVar8 - uVar7 == 0 || bVar9 && uVar8 - uVar7 << (uVar5 & 0x3f) == 0;\n    }\n    return in_RAX & 0xffffffffffffff00 | bVar9;\n}\n",
        "token_count": 4147
    },
    "00402320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402320(ulong noname_0, ulong arg2)\n\n{\n    uchar (*pauVar1) [32];\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint64_t in_RAX;\n    uint32_t uVar5;\n    bool bVar6;\n    uchar auVar7 [16];\n    uint8_t uVar9;\n    uchar auVar8 [32];\n    uchar auVar10 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uint8_t uStackX24;\n    \n    if (uStackX16 < 0x10) {\n        if (uStackX16 != 0) {\n            if ((*pauStackX8 + 0x10 & 0xff0) == 0) {\n                puVar2 = pauStackX8[-1] + uStackX16 + 0x10;\n                auVar7 = CONCAT115(-(puVar2[0xf] == uStackX24), \n                                   CONCAT114(-(puVar2[0xe] == uStackX24), \n                                             CONCAT113(-(puVar2[0xd] == uStackX24), \n                                                       CONCAT112(-(puVar2[0xc] == uStackX24), \n                                                                 CONCAT111(-(puVar2[0xb] == uStackX24), \n                                                                           CONCAT110(-(puVar2[10] == uStackX24), \n                                                                                     CONCAT19(-(puVar2[9] == uStackX24)\n                                                                                              , CONCAT18(-(puVar2[8] ==\n                                                                                                          uStackX24), \n                                                                                                         CONCAT17(-(\n                                                            puVar2[7] == uStackX24), \n                                                            CONCAT16(-(puVar2[6] == uStackX24), \n                                                                     CONCAT15(-(puVar2[5] == uStackX24), \n                                                                              CONCAT14(-(puVar2[4] == uStackX24), \n                                                                                       CONCAT13(-(puVar2[3] == uStackX24\n                                                                                                 ), CONCAT12(-(puVar2[2]\n                                                                                                              == \n                                                            uStackX24), \n                                                            CONCAT11(-(puVar2[1] == uStackX24), -(*puVar2 == uStackX24))\n                                                            ))))))))))))));\n                uVar5 = ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                          (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                          (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                          (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                          (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                          (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                          (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                          (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (-(puVar2[0xf] == uStackX24) >> 7) << 0xf) <<\n                        (uStackX16 & 0x1f)) >> 0x10;\n                iVar3 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                if (uVar5 != 0) {\n                    return;\n                }\n            }\n            else {\n                uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n                auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                    CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                              CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                        CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                                  CONCAT110(-((*pauStackX8)[10] ==\n                                                                                             uStackX24), \n                                                                                            CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n                uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n                uVar5 = 0;\n                if (uVar4 != 0) {\n                    for (; (uVar4 >> uVar5 & 1) == 0; uVar5 = uVar5 + 1) {\n                    }\n                }\n                if ((uVar4 != 0) && (uVar5 < uStackX16)) {\n                    return;\n                }\n            }\n        }\n    }\n    else {\n        if ((0x20 < uStackX16) && (bVar6 = *0x5d4343 == '\\x01',  bVar6)) {\n            pauVar1 = pauStackX8[-1] + uStackX16;\n            auVar8 = vpbroadcastb_avx2(ZEXT816(in_RAX & 0xffffffffffffff00 | uStackX24));\n            do {\n                auVar10 = vmovdqu_avx(*pauStackX8);\n                auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n                vptest_avx(auVar10, auVar10);\n                if (!bVar6) goto code_r0x00402303;\n                pauStackX8 = pauStackX8[1];\n                bVar6 = pauStackX8 == pauVar1;\n            } while (pauStackX8 < pauVar1);\n            auVar10 = vmovdqu_avx(*pauVar1);\n            auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n            vptest_avx(auVar10, auVar10);\n            if (bVar6) {\n                vzeroupper_avx();\n                return;\n            }\ncode_r0x00402303:\n            uVar5 = SUB321(auVar10 >> 7, 0) & 1 | (SUB321(auVar10 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar10 >> 0x17, 0) & 1) << 2 | (SUB321(auVar10 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar10 >> 0x27, 0) & 1) << 4 | (SUB321(auVar10 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar10 >> 0x37, 0) & 1) << 6 | (SUB321(auVar10 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar10 >> 0x47, 0) & 1) << 8 | (SUB321(auVar10 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar10 >> 0x57, 0) & 1) << 10 | (SUB321(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar10 >> 0x77, 0) & 1) << 0xe | SUB321(auVar10 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar10 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar10 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar10 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar10 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar10 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar10 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar10 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar10 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar10 >> 199, 0) & 1) << 0x18 | (SUB321(auVar10 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar10 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar10 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar10 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar10 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar10 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar10 >> 0xff, 0) << 0x1f;\n            iVar3 = 0;\n            if (uVar5 != 0) {\n                for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            vzeroupper_avx();\n            return;\n        }\n        pauVar1 = pauStackX8[-1] + uStackX16 + 0x10;\n        for (; pauStackX8 < pauVar1; pauStackX8 = *pauStackX8 + 0x10) {\n            uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n            iVar3 = 0;\n            if (uVar4 != 0) {\n                for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            if (uVar4 != 0) {\n                return;\n            }\n        }\n        uVar9 = -((*pauVar1)[0xf] == uStackX24);\n        auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauVar1)[0xe] == uStackX24), \n                                            CONCAT113(-((*pauVar1)[0xd] == uStackX24), \n                                                      CONCAT112(-((*pauVar1)[0xc] == uStackX24), \n                                                                CONCAT111(-((*pauVar1)[0xb] == uStackX24), \n                                                                          CONCAT110(-((*pauVar1)[10] == uStackX24), \n                                                                                    CONCAT19(-((*pauVar1)[9] ==\n                                                                                              uStackX24), \n                                                                                             CONCAT18(-((*pauVar1)[8] ==\n                                                                                                       uStackX24), \n                                                                                                      CONCAT17(-((*\n                                                            pauVar1)[7] == uStackX24), \n                                                            CONCAT16(-((*pauVar1)[6] == uStackX24), \n                                                                     CONCAT15(-((*pauVar1)[5] == uStackX24), \n                                                                              CONCAT14(-((*pauVar1)[4] == uStackX24), \n                                                                                       CONCAT13(-((*pauVar1)[3] ==\n                                                                                                 uStackX24), \n                                                                                                CONCAT12(-((*pauVar1)[2]\n                                                                                                          == uStackX24)\n                                                                                                         , CONCAT11(-((*\n                                                            pauVar1)[1] == uStackX24), -((*pauVar1)[0] == uStackX24)))))\n                                                            )))))))))));\n        uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n        iVar3 = 0;\n        if (uVar4 != 0) {\n            for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n            }\n        }\n        if (uVar4 != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 4617
    },
    "00402780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00402780(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX == 0) {\n                return unaff_RBX;\n            }\n            iVar1 = *(*in_RAX + 8);\n            if (*(iVar1 + 0x18) != 0) {\n                if ((*(iVar1 + 0x17) & 0x20) != 0) {\n                    *(*0x20 + -0x38) = 0x4027d6;\n                    iVar1 = fcn.004029c0(unaff_RBX ^ 0x756ea16a56a621);\n                    return iVar1 * 0x52ef6bbb8f63bf;\n                }\n                *(*0x20 + -0x38) = 0x40280a;\n                iVar1 = fcn.004029c0(unaff_RBX ^ 0x756ea16a56a621);\n                return iVar1 * 0x52ef6bbb8f63bf;\n            }\n            *(*0x20 + -0x38) = 0x402837;\n            fcn.00454b20();\n            *(*0x20 + -0x38) = 0x402850;\n            fcn.00448620(0x18);\n            *(*0x20 + -0x38) = 0x402855;\n            unaff_RBX = fcn.00409da0();\n            *(*0x20 + -0x38) = 0x402865;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x402875;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 581
    },
    "004028a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004028a0(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *in_RAX;\n            if (iVar1 == 0) {\n                return unaff_RBX;\n            }\n            if (*(iVar1 + 0x18) != 0) {\n                if ((*(iVar1 + 0x17) & 0x20) != 0) {\n                    *(*0x20 + -0x38) = 0x4028f2;\n                    iVar1 = fcn.004029c0(unaff_RBX ^ 0x756ea16a56a621);\n                    return iVar1 * 0x52ef6bbb8f63bf;\n                }\n                *(*0x20 + -0x38) = 0x402926;\n                iVar1 = fcn.004029c0(unaff_RBX ^ 0x756ea16a56a621);\n                return iVar1 * 0x52ef6bbb8f63bf;\n            }\n            *(*0x20 + -0x38) = 0x402953;\n            fcn.00454b20();\n            *(*0x20 + -0x38) = 0x40296c;\n            fcn.00448620(0x18);\n            *(*0x20 + -0x38) = 0x402971;\n            unaff_RBX = fcn.00409da0();\n            *(*0x20 + -0x38) = 0x402985;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x402995;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 578
    },
    "004029c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004029c0(ulong arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uint64_t uVar6;\n    ulong *puVar7;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((*(in_RAX + 0x14) & 8) != 0) {\n        iVar1 = *in_RAX;\n        if (iVar1 == 4) {\n            uVar3 = fcn.0045c4a0();\n            return uVar3;\n        }\n        if (iVar1 == 8) {\n            uVar3 = fcn.0045c4e0();\n            return uVar3;\n        }\n        uVar3 = fcn.0045c460(iVar1);\n        return uVar3;\n    }\n    uVar5 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar5 < 0x11) {\n        if (0xe < uVar5) {\n            if (uVar5 == 0xf) {\n                uVar3 = fcn.004026c0();\n                return uVar3;\n            }\n            uVar3 = fcn.00402720();\n            return uVar3;\n        }\n        if (uVar5 == 0xd) {\n            uVar3 = fcn.004024c0();\n            return uVar3;\n        }\n        if (uVar5 == 0xe) {\n            uVar3 = fcn.004025c0();\n            return uVar3;\n        }\n    }\n    else if (uVar5 < 0x15) {\n        if (uVar5 == 0x11) {\n            for (uVar6 = 0; uVar6 <= in_RAX[8] && in_RAX[8] != uVar6; uVar6 = uVar6 + 1) {\n                arg1 = fcn.004029c0(arg1);\n            }\n            return arg1;\n        }\n        if (uVar5 == 0x14) {\n            if (in_RAX[8] == 0) {\n                uVar3 = fcn.004028a0();\n                return uVar3;\n            }\n            uVar3 = fcn.00402780();\n            return uVar3;\n        }\n    }\n    else {\n        if (uVar5 == 0x18) {\n            uVar3 = fcn.0045c480();\n            return uVar3;\n        }\n        if (uVar5 == 0x19) {\n            iVar1 = in_RAX[8];\n            puVar7 = in_RAX[7];\n            if (iVar1 == 0) {\n                return arg1;\n            }\n            iVar4 = 0;\n            while( true ) {\n                cVar2 = fcn.00455780(arg1, *puVar7, in_R8);\n                if (cVar2 == '\\0') {\n                    arg1 = fcn.004029c0(arg1);\n                }\n                iVar4 = iVar4 + 1;\n                if (iVar1 <= iVar4) break;\n                puVar7 = puVar7 + 3;\n            }\n            return arg1;\n        }\n    }\n    fcn.00454b20();\n    uVar3 = 0x18;\n    fcn.00448620(0x18);\n    fcn.00409da0();\n    fcn.00432920();\n    return uVar3;\n}\n",
        "token_count": 838
    },
    "00403120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403120(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (((*0x5d4340 != '\\0') && (*0x5d434d != '\\0')) && (*0x5d434e != '\\0')) {\n        *0x5d3b32 = 1;\n        fcn.0042ebc0(0x80);\n        return;\n    }\n    fcn.0042ebc0(0x20);\n    *0x5d3e00 = *0x5d3e00 | 1;\n    *0x5d3e08 = *0x5d3e08 | 1;\n    *0x5d3e10 = *0x5d3e10 | 1;\n    *0x5d3e18 = *0x5d3e18 | 1;\n    return;\n}\n",
        "token_count": 245
    },
    "00403240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403240(void)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    \n    if (*0x5d3dd0 != '\\0') {\n        fcn.004031e0();\n    }\n    *in_RAX = unaff_RBX;\n    return;\n}\n",
        "token_count": 67
    },
    "00403b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403b60(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    cVar2 = fcn.00403a80();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    cVar2 = fcn.00403a80();\n    if (cVar2 != '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30);\n    if ((*piVar1 != unaff_R14) && (piVar1[10] != unaff_R14)) {\n        puVar3 = *0x5d3cc0;\n        if (*(piVar1 + 0x18) != 0) {\n            return;\n        }\n        while( true ) {\n            if (puVar3 == NULL) {\n                fcn.0045a220();\n                return;\n            }\n            if ((puVar3 <= in_RAX) && (in_RAX < puVar3 + 0x8000)) break;\n            puVar3 = *puVar3;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "00403d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403d20(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00403a80();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403a80();\n        if (cVar1 != '\\0') {\n            return;\n        }\n        fcn.00403e80(unaff_RDI);\n        return;\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00403dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403dc0(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00403a80();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403a80();\n        if (cVar1 == '\\0') {\n            for (iVar2 = 0; iVar2 < unaff_RDI; iVar2 = iVar2 + 1) {\n                fcn.00403e80(0);\n            }\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00404540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404540(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint64_t *puVar1;\n    ulong *puVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t arg1;\n    ulong uVar5;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar1 = *(in_RAX + 0x30);\n            uVar4 = *puVar1;\n            if (uVar4 < 0x10000) {\n                if (*(puVar1 + 0x15) < 9) {\n                    *(*0x20 + -0x18) = puVar1;\n                    auVar3 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n                    uVar4 = SUB168(auVar3, 0);\n                    if (((SUB168(auVar3 >> 0x40, 0) == 0) && (uVar4 < 0xffffffffffa1)) && (-1 < unaff_RBX)) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (uVar4 == 0) {\n                            *(*0x20 + -0x40) = 0x40465d;\n                            arg1 = fcn.0040ba40(1);\n                            if (*0x5d3dd0 == 0) {\n                                *(arg1 + 0x10) = arg1 + 0x10;\n                            }\n                            else {\n                                *(*0x20 + -0x40) = 0x40467a;\n                                arg1 = fcn.0045c6a0(arg1 + 0x10);\n                            }\n                        }\n                        else {\n                            arg2 = *(*0x20 + -0x18);\n                            if (*(arg2 + 8) == 0) {\n                                uVar5 = 1;\n                                *(*0x20 + -0x40) = 0x4045d3;\n                                arg1 = fcn.0040ba40();\n                                if (*0x5d3dd0 == 0) {\n                                    *(arg1 + 0x10) = arg1 + 0x60;\n                                }\n                                else {\n                                    *(*0x20 + -0x40) = 0x4045f4;\n                                    arg1 = fcn.0045c6c0(uVar5, arg1 + 0x60, param_3, param_4);\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x20) = uVar4;\n                                *(*0x20 + -0x40) = 0x40460a;\n                                uVar5 = fcn.0040c440();\n                                *(*0x20 + -0x10) = uVar5;\n                                *(*0x20 + -0x40) = 0x404625;\n                                uVar5 = fcn.0040ba40(1);\n                                if (*0x5d3dd0 == 0) {\n                                    arg1 = *(*0x20 + -0x10);\n                                    *(arg1 + 0x10) = uVar5;\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x10);\n                                    *(*0x20 + -0x40) = 0x404647;\n                                    fcn.0045c5a0(arg1, arg2, param_3, param_4);\n                                }\n                            }\n                        }\n                        puVar2 = *(*0x20 + -0x18);\n                        *(arg1 + 0x18) = *puVar2;\n                        if (*0x5d3dd0 == 0) {\n                            *(arg1 + 0x20) = puVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40469e;\n                            arg1 = fcn.0045c6a0();\n                        }\n                        *(arg1 + 8) = *(*0x20 + 0x10);\n                        return;\n                    }\n                    *(*0x20 + -0x40) = 0x4046c5;\n                    fcn.00432920();\n                }\n                *(*0x20 + -0x40) = 0x4046d6;\n                fcn.004330a0();\n            }\n            unaff_RBX = 0x26;\n            *(*0x20 + -0x40) = 0x4046e7;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x4046f7;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1228
    },
    "00404760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00404760(uint64_t *param_1, uint64_t param_2, uint64_t param_3, uint64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t iVar4;\n    char cVar5;\n    uint64_t *puVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    uint64_t arg4;\n    uint64_t arg4_00;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                puVar3 = 0x4;\n                *(*0x20 + -0x88) = 0x404865;\n                fcn.004359e0();\n                *(*0x20 + -0x88) = 0x404876;\n                fcn.004330a0();\n                param_1 = puVar3;\ncode_r0x00404879:\n                do {\n                    piVar9 = puVar3[7];\n                    if (piVar9 == NULL) {\n                        piVar9 = NULL;\n                        break;\n                    }\n                    puVar6 = puVar3 + 7;\n                    uVar7 = piVar9[1];\n                    if (uVar7 == 0) {\n                        if (*0x5d3dd0 == 0) {\n                            *(puVar3 + 7) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            uVar8 = 0;\n                            *(*0x20 + -0x88) = 0x4048f7;\n                            fcn.0045c720(param_1, piVar9, 0, param_4);\n                            *(*0x20 + -0x88) = 0x404905;\n                            puVar3 = fcn.0045c720(param_1, piVar9, uVar8, param_4);\n                        }\n                    }\n                    else if (*0x5d3dd0 == 0) {\n                        *(uVar7 + 0x10) = 0;\n                        puVar3[7] = uVar7;\n                        piVar9[1] = 0;\n                    }\n                    else {\n                        iVar4 = uVar7 + 0x10;\n                        uVar8 = 0;\n                        *(*0x20 + -0x88) = 0x4048c9;\n                        fcn.0045c6c0(puVar6, 0, uVar7, iVar4);\n                        *(*0x20 + -0x88) = 0x4048d1;\n                        fcn.0045c720(puVar6, uVar8, uVar7, iVar4);\n                        *(*0x20 + -0x88) = 0x4048da;\n                        puVar3 = fcn.0045c6c0(puVar6, uVar8, uVar7, iVar4);\n                    }\n                    if (*(piVar9 + 0x34) == '\\0') {\n                        param_3 = 0;\n                    }\n                    else {\n                        iVar4 = *piVar9;\n                        LOCK();\n                        piVar1 = iVar4 + 0x178;\n                        bVar13 = *piVar1 == 0;\n                        if (bVar13) {\n                            *piVar1 = 1;\n                        }\n                        param_3 = (iVar4 & 0xffffff00 | bVar13) ^ 1;\n                    }\n                    param_4 = 1;\n                    param_1 = puVar3;\n                } while (param_3 != '\\0');\n                if (piVar9 != NULL) {\n                    *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x18) = 0x404dc0;\n                    *(*0x20 + -0x10) = puVar3;\n                    *(*0x20 + -0x88) = 0x404d05;\n                    fcn.00404e00(*(*0x20 + 0x10));\n                    return 1;\n                }\n                if (*puVar3 <= puVar3[1] && puVar3[1] != *puVar3) {\n                    *(*0x20 + -0x88) = 0x404c89;\n                    fcn.00411220(*(*0x20 + 0x10));\n                    piVar9 = *(*0x20 + 8);\n                    iVar4 = piVar9[5];\n                    piVar9[5] = iVar4 + 1;\n                    if (piVar9[1] == iVar4 + 1) {\n                        piVar9[5] = 0;\n                    }\n                    *piVar9 = *piVar9 + 1;\n                    *(*0x20 + -0x88) = 0x404cbd;\n                    fcn.0040a580();\n                    return 1;\n                }\n                if (*(*0x20 + 0x18) == '\\0') {\n                    *(*0x20 + -0x88) = 0x404985;\n                    fcn.0040a580();\n                    return 0;\n                }\n                *(*0x20 + -0x38) = unaff_R14;\n                *(*0x20 + -0x88) = 0x40499b;\n                puVar3 = fcn.00435c00();\n                puVar3[5] = 0;\n                iVar4 = *(*0x20 + -0x50);\n                if (iVar4 != 0) {\n                    puVar3[5] = 0xffffffffffffffff;\n                }\n                if (*0x5d3dd0 == 0) {\n                    uVar7 = *(*0x20 + 0x10);\n                    puVar3[3] = uVar7;\n                    puVar3[8] = 0;\n                    param_3 = *(*0x20 + -0x38);\n                    *puVar3 = param_3;\n                }\n                else {\n                    uVar7 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x88) = 0x4049ed;\n                    fcn.0045c6c0(iVar4, uVar7, param_3, param_4);\n                    uVar8 = 0;\n                    *(*0x20 + -0x88) = 0x4049f9;\n                    fcn.0045c720(iVar4, uVar7, 0, param_4);\n                    param_3 = *(*0x20 + -0x38);\n                    *(*0x20 + -0x88) = 0x404a06;\n                    puVar3 = fcn.0045c740(iVar4, uVar7, uVar8);\n                }\n                *(puVar3 + 0x34) = 0;\n                puVar6 = puVar3 + 10;\n                if (*0x5d3dd0 == 0) {\n                    arg4 = *(*0x20 + 8);\n                    puVar3[10] = arg4;\n                }\n                else {\n                    arg4 = *(*0x20 + 8);\n                    *(*0x20 + -0x88) = 0x404a35;\n                    puVar3 = fcn.0045c740(iVar4, uVar7, param_3);\n                }\n                iVar11 = param_3 + 0x148;\n                iVar12 = param_3 + 0x88;\n                if (*0x5d3dd0 == 0) {\n                    *(param_3 + 0x148) = puVar3;\n                    *(param_3 + 0x88) = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404a6e;\n                    fcn.0045c5a0(iVar4, uVar7, param_3, arg4);\n                    *(*0x20 + -0x88) = 0x404a7b;\n                    puVar3 = fcn.0045c6c0(iVar4, 0, param_3, arg4);\n                }\n                if (*0x5d3dd0 == 0) {\n                    puVar3[1] = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404aa9;\n                    puVar3 = fcn.0045c6c0(iVar4, 0, param_3, arg4);\n                }\n                *(*0x20 + -0x48) = puVar3;\n                *(*0x20 + -0x20) = puVar6;\n                *(*0x20 + -0x28) = iVar11;\n                *(*0x20 + -0x30) = iVar12;\n                arg4_00 = *(arg4 + 0x50);\n                if (arg4_00 == 0) {\n                    if (*0x5d3dd0 == 0) {\n                        puVar3[2] = 0;\n                        *(arg4 + 0x48) = puVar3;\n                        *(arg4 + 0x50) = puVar3;\n                    }\n                    else {\n                        uVar8 = 0;\n                        *(*0x20 + -0x88) = 0x404b45;\n                        fcn.0045c6c0(iVar4, 0, param_3, arg4);\n                        *(*0x20 + -0x88) = 0x404b4e;\n                        fcn.0045c5a0(iVar4, uVar8, param_3, arg4);\n                        *(*0x20 + -0x88) = 0x404b56;\n                        fcn.0045c5a0(iVar4, uVar8, param_3, arg4);\n                    }\n                }\n                else if (*0x5d3dd0 == 0) {\n                    puVar3[2] = arg4_00;\n                    *(arg4_00 + 8) = puVar3;\n                    *(arg4 + 0x50) = puVar3;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404afc;\n                    fcn.0045c740(iVar4, uVar7, param_3);\n                    *(*0x20 + -0x88) = 0x404b05;\n                    fcn.0045c5a0(iVar4, uVar7, param_3, arg4_00);\n                    *(*0x20 + -0x88) = 0x404b0d;\n                    fcn.0045c5a0(iVar4, uVar7, param_3, arg4_00);\n                }\n                uVar2 = *(param_3 + 0xb9);\n                *(param_3 + 0xb9) = 1;\n                param_4 = uVar2;\n                param_1 = 0xf;\n                unaff_RDI = 0x16;\n                *(*0x20 + -0x88) = 0x404b8c;\n                fcn.004359e0();\n                iVar4 = *(*0x20 + -0x48);\n                param_2 = *(*0x20 + -0x38);\n                if (*(param_2 + 0x148) == iVar4) {\n                    if (*0x5d3dd0 == 0) {\n                        *(param_2 + 0x148) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x28);\n                        *(*0x20 + -0x88) = 0x404bcf;\n                        iVar4 = fcn.0045c6a0();\n                    }\n                    *(param_2 + 0xb8) = 0;\n                    uVar7 = *(iVar4 + 0x35);\n                    if (*0x5d3dd0 == 0) {\n                        *(param_2 + 0x88) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x30);\n                        *(*0x20 + -0x88) = 0x404bfc;\n                        iVar4 = fcn.0045c6c0(uVar7, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x51) = uVar7;\n                    param_2 = *(iVar4 + 0x28);\n                    if (0 < param_2) {\n                        param_2 = param_2 - *(*0x20 + -0x50);\n                        *(*0x20 + -0x88) = 0x404c1e;\n                        fcn.0042a8a0();\n                        iVar4 = *(*0x20 + -0x48);\n                        uVar7 = *(*0x20 + -0x51);\n                    }\n                    if (*0x5d3dd0 == 0) {\n                        *(iVar4 + 0x50) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x20);\n                        param_2 = 0;\n                        *(*0x20 + -0x88) = 0x404c47;\n                        fcn.0045c6c0(uVar7, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x88) = 0x404c4c;\n                    fcn.00435f00();\n                    if (*(*0x20 + -0x51) != '\\0') {\n                        return 1;\n                    }\n                    param_1 = *(*0x20 + 8);\n                    if (*(param_1 + 0x1c) == 0) {\n                        *(*0x20 + -0x88) = 0x404d33;\n                        fcn.004330a0();\n                    }\n                    *(*0x20 + -0x88) = 0x404d46;\n                    fcn.00432920();\n                }\n                *(*0x20 + -0x88) = 0x404d57;\n                fcn.004330a0();\n            }\n            else {\n                if ((cVar5 == '\\0') && (*(in_RAX + 0x1c) == 0)) {\n                    uVar7 = in_RAX[1];\n                    if (uVar7 == 0) {\n                        param_2 = in_RAX[7] == 0;\n                    }\n                    else {\n                        param_2 = uVar7 & 0xffffffffffffff00 | *in_RAX == uVar7;\n                    }\n                    if (param_2 != '\\0') {\n                        return 0;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x5d3c08 == 0) {\n                    param_2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4047e7;\n                    fcn.0045c420(param_1, param_2);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    param_2 = *(*0x20 + -0x80);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x50) = param_2;\n                param_1 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = param_1;\n                *(*0x20 + -0x88) = 0x404825;\n                fcn.0040a360();\n                puVar3 = *(*0x20 + 8);\n                if (*(puVar3 + 0x1c) == 0) goto code_r0x00404879;\n            }\n            *(*0x20 + -0x88) = 0x404d65;\n            fcn.0040a580();\n            unaff_RBX = 0x4f9e08;\n            *(*0x20 + -0x88) = 0x404d78;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        puVar10[0x18] = param_1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x404d91;\n        fcn.0045a360();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        param_1 = puVar10[0x18];\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 4053
    },
    "00404e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404e00(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *unaff_RBX;\n    ulong unaff_RSI;\n    code **unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    int64_t iStack40;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    piVar2 = unaff_RBX;\n    if (unaff_RBX[3] != 0) {\n        fcn.00404f40(arg1);\n        if (*0x5d3dd0 == 0) {\n            unaff_RBX[3] = 0;\n        }\n        else {\n            piVar2 = fcn.0045c6a0(0);\n        }\n    }\n    iVar1 = *piVar2;\n    (**unaff_RDI)();\n    piVar2 = unaff_RBX;\n    if (*0x5d3dd0 == 0) {\n        *(iVar1 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.0045c6a0();\n    }\n    *(piVar2 + 0x35) = 1;\n    if (piVar2[5] != 0) {\n        fcn.0045c420(piVar2, unaff_RDI);\n        unaff_RBX[5] = iStack40;\n    }\n    fcn.00435b20(uStack0000000000000028);\n    return;\n}\n",
        "token_count": 393
    },
    "00405040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405040(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    ulong arg3;\n    int64_t unaff_R14;\n    bool bVar5;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = in_RAX + 0x58;\n                *(*0x20 + -0x40) = 0x405085;\n                fcn.0040a360();\n                iVar1 = *(*0x20 + 8);\n                if (*(iVar1 + 0x1c) == 0) break;\n                *(*0x20 + -0x40) = 0x405409;\n                fcn.0040a580();\n                *(*0x20 + -0x40) = 0x40541c;\n                fcn.00432920();\n            }\n            *(*0x20 + -0x40) = 0x40542f;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x40543a;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n    *(iVar1 + 0x1c) = 1;\n    *(*0x20 + -0x28) = 0;\ncode_r0x0040518c:\n    piVar2 = *(iVar1 + 0x38);\n    if (piVar2 != NULL) goto code_r0x00405199;\n    piVar2 = NULL;\n    goto code_r0x004050cd;\ncode_r0x00405199:\n    iVar4 = piVar2[1];\n    if (iVar4 == 0) {\n        if (*0x5d3dd0 == 0) {\n            *(iVar1 + 0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405205;\n            fcn.0045c700(iVar1, piVar2, param_3, param_4);\n            *(*0x20 + -0x40) = 0x40520e;\n            fcn.0045c700(iVar1, piVar2, param_3, param_4);\n        }\n    }\n    else if (*0x5d3dd0 == 0) {\n        *(iVar4 + 0x10) = 0;\n        *(iVar1 + 0x38) = iVar4;\n        piVar2[1] = 0;\n    }\n    else {\n        iVar4 = iVar4 + 0x10;\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x4051d7;\n        fcn.0045c740(iVar1, piVar2, iVar4);\n        *(*0x20 + -0x40) = 0x4051df;\n        fcn.0045c700(iVar1, piVar2, iVar4, param_4);\n        *(*0x20 + -0x40) = 0x4051e8;\n        fcn.0045c740(iVar1, piVar2, iVar4);\n    }\n    if (*(piVar2 + 0x34) == '\\0') {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(*piVar2 + 0x178) == 0;\n        if (bVar5) {\n            *(*piVar2 + 0x178) = 1;\n        }\n        bVar5 = !bVar5;\n    }\n    param_3 = 1;\n    if (!bVar5) {\ncode_r0x004050cd:\n        arg3 = 1;\n        if (piVar2 != NULL) {\n            *(*0x20 + -0x18) = piVar2;\n            if (piVar2[3] != 0) {\n                *(*0x20 + -0x40) = 0x4050ee;\n                fcn.004114c0();\n                if (*0x5d3dd0 == 0) {\n                    *(*(*0x20 + -0x18) + 0x18) = 0;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x405116;\n                    fcn.0045c6c0(*(*0x20 + -0x18), 0, arg3, param_4);\n                }\n                iVar1 = *(*0x20 + 8);\n                piVar2 = *(*0x20 + -0x18);\n            }\n            if (piVar2[5] != 0) {\n                *(*0x20 + -0x40) = 0x405132;\n                fcn.0045c420(iVar1, piVar2);\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                piVar2 = *(*0x20 + -0x18);\n                piVar2[5] = *(*0x20 + -0x38);\n                iVar1 = *(*0x20 + 8);\n            }\n            param_3 = 1;\n            iVar4 = *piVar2;\n            if (*0x5d3dd0 == 0) {\n                *(iVar4 + 0x88) = piVar2;\n            }\n            else {\n                *(*0x20 + -0x40) = 0x405187;\n                fcn.0045c6c0(iVar1, piVar2, 1, param_4);\n            }\n            *(piVar2 + 0x35) = 0;\n            *(iVar4 + 0xa0) = *(*0x20 + -0x28);\n            *(*0x20 + -0x28) = iVar4;\n            goto code_r0x0040518c;\n        }\n        goto code_r0x004052ff;\n    }\n    goto code_r0x0040518c;\ncode_r0x004052ff:\n    piVar2 = *(iVar1 + 0x48);\n    if (piVar2 != NULL) goto code_r0x0040530c;\n    piVar2 = NULL;\n    goto code_r0x0040526c;\ncode_r0x0040530c:\n    iVar4 = piVar2[1];\n    if (iVar4 == 0) {\n        if (*0x5d3dd0 == 0) {\n            *(iVar1 + 0x48) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405374;\n            fcn.0045c6e0(iVar1, piVar2, arg3, param_4);\n            *(*0x20 + -0x40) = 0x40537d;\n            fcn.0045c6e0(iVar1, piVar2, arg3, param_4);\n        }\n    }\n    else if (*0x5d3dd0 == 0) {\n        *(iVar4 + 0x10) = 0;\n        *(iVar1 + 0x48) = iVar4;\n        piVar2[1] = 0;\n    }\n    else {\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x40534a;\n        fcn.0045c740(iVar1, piVar2, arg3);\n        *(*0x20 + -0x40) = 0x405352;\n        fcn.0045c6e0(iVar1, piVar2, arg3, param_4);\n        *(*0x20 + -0x40) = 0x40535b;\n        fcn.0045c740(iVar1, piVar2, arg3);\n    }\n    if (*(piVar2 + 0x34) == '\\0') {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(*piVar2 + 0x178) == 0;\n        if (bVar5) {\n            *(*piVar2 + 0x178) = arg3;\n        }\n        bVar5 = !bVar5;\n    }\n    if (!bVar5) {\ncode_r0x0040526c:\n        if (piVar2 == NULL) {\n            *(*0x20 + -0x40) = 0x4053b9;\n            fcn.0040a580();\n            while (iVar1 = *(*0x20 + -0x28),  iVar1 != 0) {\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x28) = *(iVar1 + 0xa0);\n                }\n                *(iVar1 + 0xa0) = 0;\n                *(*0x20 + -0x40) = 0x4053d0;\n                fcn.00435b20();\n            }\n            return;\n        }\n        if (*0x5d3dd0 == 0) {\n            piVar2[3] = 0;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405293;\n            fcn.0045c6e0(iVar1, piVar2, arg3, param_4);\n        }\n        if (piVar2[5] != 0) {\n            *(*0x20 + -0x20) = piVar2;\n            *(*0x20 + -0x40) = 0x4052a5;\n            fcn.0045c420(iVar1, piVar2);\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            piVar2 = *(*0x20 + -0x20);\n            piVar2[5] = *(*0x20 + -0x38);\n            arg3 = 1;\n            iVar1 = *(*0x20 + 8);\n        }\n        iVar4 = *piVar2;\n        if (*0x5d3dd0 == 0) {\n            *(iVar4 + 0x88) = piVar2;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x4052fa;\n            fcn.0045c6c0(iVar1, piVar2, arg3, param_4);\n        }\n        *(piVar2 + 0x35) = 0;\n        *(iVar4 + 0xa0) = *(*0x20 + -0x28);\n        *(*0x20 + -0x28) = iVar4;\n    }\n    goto code_r0x004052ff;\n}\n",
        "token_count": 2664
    },
    "004054a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004054a0(uint64_t param_1, uint64_t param_2, uint8_t *param_3, uint64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int64_t *in_RAX;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    char cVar5;\n    int64_t *arg1;\n    uint64_t uVar6;\n    ulong uVar7;\n    int64_t *arg2;\n    int64_t arg2_00;\n    int64_t noname_1;\n    int64_t unaff_RBX;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t arg4;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                piVar3 = 0x3;\n                *(*0x20 + -0x90) = 0x405646;\n                fcn.004359e0();\n                *(*0x20 + -0x90) = 0x405657;\n                fcn.004330a0();\n                piVar4 = piVar3;\n            }\n            else {\n                if (cVar5 == '\\0') {\n                    if (in_RAX[1] == 0) {\n                        uVar6 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n                    }\n                    else {\n                        uVar6 = param_2 & 0xffffffffffffff00 | *in_RAX == 0;\n                    }\n                }\n                else {\n                    uVar6 = 0;\n                }\n                if (uVar6 != '\\0') {\n                    if (*(in_RAX + 0x1c) == 0) {\n                        return 0;\n                    }\n                    if (in_RAX[1] == 0) {\n                        uVar6 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n                    }\n                    else {\n                        uVar6 = *(in_RAX + 0x1c) & 0xffffff00 | *in_RAX == 0;\n                    }\n                    if (uVar6 != '\\0') {\n                        if (unaff_RBX != 0) {\n                            *(*0x20 + -0x90) = 0x40552e;\n                            fcn.004114c0();\n                        }\n                        return 1;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x5d3c08 == 0) {\n                    uVar7 = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x405585;\n                    fcn.0045c420(param_1, uVar6);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    uVar7 = *(*0x20 + -0x88);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x58) = uVar7;\n                piVar4 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = piVar4;\n                *(*0x20 + -0x90) = 0x4055bf;\n                fcn.0040a360();\n                piVar3 = *(*0x20 + 8);\n                if ((*(piVar3 + 0x1c) != 0) && (*piVar3 == 0)) {\n                    *(*0x20 + -0x90) = 0x4055df;\n                    fcn.0040a580();\n                    if (*(*0x20 + 0x10) != 0) {\n                        *(*0x20 + -0x90) = 0x4055fd;\n                        fcn.004114c0();\n                    }\n                    return 1;\n                }\n            }\n            do {\n                arg2 = piVar3[9];\n                if (arg2 == NULL) {\n                    arg2 = NULL;\n                    break;\n                }\n                arg1 = piVar3 + 9;\n                iVar8 = arg2[1];\n                if (iVar8 == 0) {\n                    if (*0x5d3dd0 == 0) {\n                        *(piVar3 + 9) =\n                             CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    }\n                    else {\n                        uVar7 = 0;\n                        *(*0x20 + -0x90) = 0x4056d7;\n                        fcn.0045c720(piVar4, arg2, 0, param_4);\n                        *(*0x20 + -0x90) = 0x4056e5;\n                        piVar3 = fcn.0045c720(piVar4, arg2, uVar7, param_4);\n                    }\n                }\n                else if (*0x5d3dd0 == 0) {\n                    *(iVar8 + 0x10) = 0;\n                    piVar3[9] = iVar8;\n                    arg2[1] = 0;\n                }\n                else {\n                    iVar10 = iVar8 + 0x10;\n                    uVar7 = 0;\n                    *(*0x20 + -0x90) = 0x4056a9;\n                    fcn.0045c6c0(arg1, 0, iVar8, iVar10);\n                    *(*0x20 + -0x90) = 0x4056b1;\n                    fcn.0045c720(arg1, uVar7, iVar8, iVar10);\n                    *(*0x20 + -0x90) = 0x4056ba;\n                    piVar3 = fcn.0045c6c0(arg1, uVar7, iVar8, iVar10);\n                }\n                if (*(arg2 + 0x34) == '\\0') {\n                    param_3 = NULL;\n                }\n                else {\n                    iVar8 = *arg2;\n                    LOCK();\n                    piVar1 = iVar8 + 0x178;\n                    bVar11 = *piVar1 == 0;\n                    if (bVar11) {\n                        *piVar1 = 1;\n                    }\n                    param_3 = (iVar8 & 0xffffff00 | bVar11) ^ 1;\n                }\n                param_4 = 1;\n                piVar4 = piVar3;\n            } while (param_3 != '\\0');\n            if (arg2 != NULL) {\n                *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x18) = 0x405b80;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x90) = 0x405b13;\n                fcn.00405bc0(*(*0x20 + 0x10));\n                return 1;\n            }\n            if (*piVar3 != 0) {\n                iVar8 = piVar3[6] * *(piVar3 + 3) + piVar3[2];\n                if (*(*0x20 + 0x10) != 0) {\n                    *(*0x20 + -0x50) = iVar8;\n                    *(*0x20 + -0x90) = 0x40577c;\n                    fcn.00411220(iVar8);\n                }\n                *(*0x20 + -0x90) = 0x405792;\n                fcn.004114c0();\n                piVar4 = *(*0x20 + 8);\n                iVar8 = piVar4[6];\n                piVar4[6] = iVar8 + 1;\n                if (piVar4[1] == iVar8 + 1) {\n                    piVar4[6] = 0;\n                }\n                *piVar4 = *piVar4 + -1;\n                *(*0x20 + -0x90) = 0x4057c5;\n                fcn.0040a580();\n                return 1;\n            }\n            if (*(*0x20 + 0x18) == '\\0') {\n                *(*0x20 + -0x90) = 0x4057f4;\n                fcn.0040a580();\n                return 0;\n            }\n            *(*0x20 + -0x38) = unaff_R14;\n            *(*0x20 + -0x90) = 0x405812;\n            piVar4 = fcn.00435c00();\n            piVar4[5] = 0;\n            iVar8 = *(*0x20 + -0x58);\n            if (iVar8 != 0) {\n                piVar4[5] = -1;\n            }\n            if (*0x5d3dd0 == 0) {\n                piVar4[3] = *(*0x20 + 0x10);\n                piVar4[8] = 0;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x40585d;\n                fcn.0045c6c0(iVar8, *(*0x20 + 0x10), param_3, param_4);\n                *(*0x20 + -0x90) = 0x405868;\n                piVar4 = fcn.0045c6c0(iVar8, 0, param_3, param_4);\n            }\n            arg2_00 = *(*0x20 + -0x38);\n            iVar10 = arg2_00 + 0x148;\n            if (*0x5d3dd0 == 0) {\n                *(arg2_00 + 0x148) = piVar4;\n                *piVar4 = arg2_00;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x405890;\n                fcn.0045c5a0(iVar8, arg2_00, param_3, param_4);\n                *(*0x20 + -0x90) = 0x40589b;\n                piVar4 = fcn.0045c6c0(iVar8, arg2_00, param_3, param_4);\n            }\n            *(piVar4 + 0x34) = 0;\n            piVar3 = piVar4 + 10;\n            arg4 = arg2_00 + 0x88;\n            if (*0x5d3dd0 == 0) {\n                noname_1 = *(*0x20 + 8);\n                piVar4[10] = noname_1;\n                *(arg2_00 + 0x88) = 0;\n            }\n            else {\n                noname_1 = *(*0x20 + 8);\n                *(*0x20 + -0x90) = 0x4058e5;\n                fcn.0045c6c0(iVar8, noname_1, piVar3, arg4);\n                *(*0x20 + -0x90) = 0x4058f3;\n                piVar4 = fcn.0045c720(iVar8, noname_1, 0, arg4);\n            }\n            if (*0x5d3dd0 == 0) {\n                piVar4[1] = 0;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x405928;\n                piVar4 = fcn.0045c720(iVar8, arg2_00, 0, arg4);\n            }\n            *(*0x20 + -0x48) = piVar4;\n            *(*0x20 + -0x20) = iVar10;\n            *(*0x20 + -0x28) = piVar3;\n            *(*0x20 + -0x30) = arg4;\n            iVar10 = *(noname_1 + 0x40);\n            if (iVar10 == 0) {\n                if (*0x5d3dd0 == 0) {\n                    piVar4[2] = 0;\n                    *(noname_1 + 0x38) = piVar4;\n                    *(noname_1 + 0x40) = piVar4;\n                }\n                else {\n                    uVar7 = 0;\n                    *(*0x20 + -0x90) = 0x4059c5;\n                    fcn.0045c720(iVar8, arg2_00, 0, arg4);\n                    *(*0x20 + -0x90) = 0x4059ce;\n                    fcn.0045c5a0(iVar8, arg2_00, uVar7, arg4);\n                    *(*0x20 + -0x90) = 0x4059d6;\n                    fcn.0045c5a0(iVar8, arg2_00, uVar7, arg4);\n                }\n            }\n            else if (*0x5d3dd0 == 0) {\n                piVar4[2] = iVar10;\n                *(iVar10 + 8) = piVar4;\n                *(noname_1 + 0x40) = piVar4;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x40597c;\n                fcn.0045c720(iVar8, arg2_00, iVar10, arg4);\n                *(*0x20 + -0x90) = 0x405985;\n                fcn.0045c5a0(iVar8, arg2_00, iVar10, arg4);\n                *(*0x20 + -0x90) = 0x40598d;\n                fcn.0045c5a0(iVar8, arg2_00, iVar10, arg4);\n            }\n            param_3 = arg2_00 + 0xb9;\n            uVar2 = *param_3;\n            *param_3 = 1;\n            param_4 = uVar2;\n            param_1 = 0xe;\n            *(*0x20 + -0x90) = 0x405a0c;\n            fcn.004359e0();\n            iVar8 = *(*0x20 + -0x48);\n            param_2 = *(*0x20 + -0x38);\n            if (*(param_2 + 0x148) == iVar8) {\n                if (*0x5d3dd0 == 0) {\n                    *(param_2 + 0x148) = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x405a4f;\n                    iVar8 = fcn.0045c6a0(0);\n                }\n                *(param_2 + 0xb8) = 0;\n                if (0 < *(iVar8 + 0x28)) {\n                    *(*0x20 + -0x90) = 0x405a74;\n                    fcn.0042a8a0();\n                    iVar8 = *(*0x20 + -0x48);\n                    param_2 = *(*0x20 + -0x38);\n                }\n                uVar6 = *(iVar8 + 0x35);\n                *(*0x20 + -0x59) = *(iVar8 + 0x35);\n                if (*0x5d3dd0 == 0) {\n                    *(param_2 + 0x88) = 0;\n                    *(iVar8 + 0x50) = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x405ab0;\n                    fcn.0045c6c0(uVar6, 0, param_3, param_4);\n                    *(*0x20 + -0x90) = 0x405abc;\n                    fcn.0045c6c0(uVar6, 0, param_3, param_4);\n                }\n                *(*0x20 + -0x90) = 0x405ac5;\n                fcn.00435f00();\n                return 1;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x90) = 0x405b3b;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        puVar9[0x18] = param_1;\n        *(puVar9 + -8) = 0x405b4f;\n        fcn.0045a360();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        param_1 = puVar9[0x18];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 4016
    },
    "00405bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405bc0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t in_RDX;\n    int64_t *unaff_RBX;\n    ulong unaff_RSI;\n    int64_t iVar2;\n    code **unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    int64_t iStack48;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*(in_RAX + 8) == 0) {\n        in_RAX = in_RDX;\n        if (arg1 != 0) {\n            fcn.00404fc0(arg1);\n            in_RAX = in_RDX;\n        }\n    }\n    else {\n        if (arg1 != 0) {\n            fcn.00411220(*(in_RAX + 0x30) * *(in_RAX + 0x18) + *(in_RAX + 0x10));\n        }\n        fcn.00411220(unaff_RBX[3]);\n        iVar2 = *(in_RAX + 0x30) + 1;\n        *(in_RAX + 0x30) = iVar2;\n        if (*(in_RAX + 8) == iVar2) {\n            *(in_RAX + 0x30) = 0;\n        }\n        *(in_RAX + 0x28) = *(in_RAX + 0x30);\n    }\n    if (*0x5d3dd0 == 0) {\n        unaff_RBX[3] = 0;\n    }\n    else {\n        fcn.0045c720(unaff_RDI, in_RAX, 0, in_R9);\n    }\n    iVar2 = *unaff_RBX;\n    (**unaff_RDI)();\n    piVar1 = unaff_RBX;\n    if (*0x5d3dd0 == 0) {\n        *(iVar2 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.0045c6a0();\n    }\n    *(piVar1 + 0x35) = 1;\n    if (piVar1[5] != 0) {\n        fcn.0045c420(piVar1, unaff_RDI);\n        unaff_RBX[5] = iStack48;\n    }\n    fcn.00435b20(uStack0000000000000028);\n    return;\n}\n",
        "token_count": 601
    },
    "00408bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00408bc0(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    ulong uStack168;\n    uchar auStack136 [128];\n    \n    while (auStack136 < *(unaff_R14 + 0x10) || auStack136 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = fcn.00444b80(1);\n    iVar2 = fcn.00453a80(1);\n    if (0 < iVar2) {\n        puVar3 = fcn.0040c440();\n        puVar3[1] = 1;\n        puVar3[2] = 1;\n        if (*0x5d3dd0 == 0) {\n            *puVar3 = uVar1;\n        }\n        else {\n            puVar3 = fcn.0045c6a0(uVar1);\n        }\n        puVar3[4] = 0;\n        puVar3[5] = 2;\n        if (*0x5d3dd0 == 0) {\n            puVar3[3] = puVar3 + 6;\n        }\n        else {\n            fcn.0045c6a0();\n        }\n        fcn.0045ccf0();\n        fcn.004498e0();\n        fcn.0045d05a();\n        fcn.0045d05a();\n        return uStack168;\n    }\n    return 0;\n}\n",
        "token_count": 348
    },
    "00409040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00409040(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uint32_t *noname_1;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            noname_1 = *(in_RAX + 0x38);\n            if (*(in_RAX + 0x40) != 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if ((*(unaff_RBX + 0x14) & 1) == 0) {\n                    if (param_1 != '\\0') {\n                        return 0;\n                    }\n                    uVar1 = *noname_1;\n                    *(*0x20 + -0x48) = 0x40925c;\n                    fcn.00454d00();\n                    *(*0x20 + -0x48) = 0x409265;\n                    uVar3 = fcn.00455460(param_1, noname_1, param_3, param_4);\n                    *(*0x20 + -0x18) = uVar3;\n                    *(*0x20 + -0x28) = uVar1;\n                    *(*0x20 + -0x48) = 0x40927b;\n                    iVar4 = fcn.0040c440();\n                    if (*0x5d3dd0 == 0) {\n                        *(iVar4 + 8) = *(*0x20 + 0x10);\n                        *(iVar4 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x4092e5;\n                        fcn.0045c6a0(*(*0x20 + 0x10));\n                        *(*0x20 + -0x48) = 0x4092f3;\n                        iVar4 = fcn.0045c6a0(*(*0x20 + 8));\n                    }\n                    *(iVar4 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x5d3dd0 != 0) goto code_r0x004092c5;\n                    *(iVar4 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x4092c5;\n                        fcn.00432920();\ncode_r0x004092c5:\n                        *(*0x20 + -0x48) = 0x4092d3;\n                        fcn.0045c6a0(*(*0x20 + -0x18));\n                    } while( true );\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + -0x48) = 0x4090ad;\n                iVar4 = fcn.00409340(unaff_RBX);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x48) = 0x4090c5;\n                    fcn.0040a360();\n                    in_RAX = *(*0x20 + 8);\n                    *(*0x20 + -0x48) = 0x4090db;\n                    iVar4 = fcn.00409340(*(*0x20 + 0x10));\n                    if (iVar4 == 0) {\n                        in_RAX = 0;\n                        *(*0x20 + -0x48) = 0x409127;\n                        puVar2 = fcn.0040c7a0(0x5d5900);\n                        if (*0x5d3dd0 == 0) {\n                            *puVar2 = *(*0x20 + 8);\n                            puVar2[1] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            uVar3 = *(*0x20 + 8);\n                            *(*0x20 + -0x48) = 0x409152;\n                            iVar4 = fcn.0045c6a0();\n                            in_RAX = *(*0x20 + 0x10);\n                            *(*0x20 + -0x48) = 0x409165;\n                            puVar2 = fcn.0045c6e0(uVar3, iVar4 + 8, param_3, param_4);\n                        }\n                        *(*0x20 + -0x10) = puVar2;\n                        *(puVar2 + 2) = 0;\n                        *(*0x20 + -0x48) = 0x409176;\n                        fcn.00409540();\n                        *(*0x20 + -0x48) = 0x409185;\n                        fcn.004093a0();\n                        *(*0x20 + -0x48) = 0x409193;\n                        fcn.0040a580();\n                        iVar4 = *(*0x20 + -0x10);\n                    }\n                    else {\n                        *(*0x20 + -0x20) = iVar4;\n                        *(*0x20 + -0x48) = 0x4090f8;\n                        fcn.0040a580();\n                        iVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                if (*(iVar4 + 0x18) == 0) {\n                    if (*(*0x20 + 0x18) != '\\0') {\n                        return 0;\n                    }\n                    *(*0x20 + -0x48) = 0x4091c5;\n                    uVar3 = fcn.00409540();\n                    *(*0x20 + -0x18) = uVar3;\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x48) = 0x4091db;\n                    iVar4 = fcn.0040c440();\n                    if (*0x5d3dd0 == 0) {\n                        *(iVar4 + 8) = *(*0x20 + 0x10);\n                        *(iVar4 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x409245;\n                        fcn.0045c6a0(*(*0x20 + 0x10));\n                        *(*0x20 + -0x48) = 0x409253;\n                        iVar4 = fcn.0045c6a0(*(*0x20 + 8));\n                    }\n                    *(iVar4 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x5d3dd0 != 0) goto code_r0x00409225;\n                    *(iVar4 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x409225;\n                        fcn.00432920();\ncode_r0x00409225:\n                        *(*0x20 + -0x48) = 0x409233;\n                        fcn.0045c6a0(*(*0x20 + -0x18));\n                    } while( true );\n                }\n                return iVar4;\n            }\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x48) = 0x409306;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        puVar5[0x18] = param_1;\n        *(puVar5 + -8) = 0x40931a;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        param_1 = puVar5[0x18];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1917
    },
    "004093a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004093a0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xc0) == 0) {\n                uVar1 = **0x5762b8;\n                puVar2 = *0x5762b8;\n                if ((*0x5762b8)[1] < (uVar1 >> 2) * 3) goto code_r0x0040948a;\n                *(*0x20 + -0x30) = *0x5762b8;\n                *(*0x20 + -0x20) = in_RAX;\n                *(*0x20 + -0x50) = 0x40940d;\n                piVar3 = fcn.0040ba40(1, *0x5762b8, uVar1);\n                *(*0x20 + -0x28) = piVar3;\n                *piVar3 = **(*0x20 + -0x30) << 1;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x45ecc0;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x50) = 0x409445;\n                fcn.0040a040();\n                if (*(*(*0x20 + -0x30) + 8) == (*(*0x20 + -0x28))[1]) {\n                    puVar2 = *(*0x20 + -0x28);\n                    if (*0x5d3dd0 != '\\0') {\n                        *(*0x20 + -0x50) = 0x40946f;\n                        fcn.004031e0();\n                        puVar2 = *(*0x20 + -0x28);\n                    }\ncode_r0x0040948a:\n                    *0x5762b8 = puVar2;\n                    *(*0x20 + -0x50) = 0x409495;\n                    fcn.004094e0();\n                    return;\n                }\n                *(*0x20 + -0x50) = 0x4094b0;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x50) = 0x4094c5;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4094d0;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 754
    },
    "00409540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00409540(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    ulong *in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong arg4;\n    ulong uVar6;\n    int64_t iVar7;\n    uint64_t arg1;\n    int64_t iVar8;\n    uint32_t *noname_0;\n    uint64_t arg1_00;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t noname_2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *in_RAX;\n            *(*0x20 + -0x40) = in_RAX[1];\n            *(*0x20 + -0xb0) = 0x409587;\n            iVar3 = fcn.00454bc0();\n            arg1_00 = *(*0x20 + -0x30);\n            uVar9 = *(arg1_00 + 0x40);\n            uVar10 = *(iVar3 + 4);\n            uVar1 = *(iVar3 + 8);\n            if (uVar10 < 0x10001) {\n                if (uVar9 < 0x10001) {\n                    *(*0x20 + -0x48) = iVar3;\n                    *(*0x20 + -0x50) = uVar1 + iVar3;\n                    *(*0x20 + -0x90) = uVar9;\n                    *(*0x20 + -0x60) = uVar10;\n                    uVar10 = 0;\n                    uVar6 = 0;\n                    arg4 = 0;\ncode_r0x00409600:\n                    if (uVar9 <= uVar10) {\n                        *(*(*0x20 + 8) + 0x18) = arg4;\n                        return 0;\n                    }\n                    uVar4 = *(arg1_00 + 0x38);\n                    arg1_00 = *(arg1_00 + 0x40);\n                    if (uVar10 < arg1_00) {\n                        *(*0x20 + -0x88) = uVar10;\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0x80) = uVar6;\n                        *(*0x20 + -0x20) = arg4;\n                        *(*0x20 + -0xb0) = 0x409645;\n                        uVar4 = fcn.00454fa0();\n                        *(*0x20 + -0x58) = uVar4;\n                        iVar3 = *(*0x20 + -0x88);\n                        iVar8 = *(*0x20 + -0x10);\n                        uVar9 = *(iVar8 + iVar3 * 8);\n                        *(*0x20 + -0xb0) = 0x409665;\n                        uVar4 = fcn.00454d00();\n                        *(*0x20 + -0x18) = uVar4;\n                        *(*0x20 + -0xb0) = 0x409672;\n                        uVar4 = fcn.00455460(iVar3, iVar8, uVar6, arg4);\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0x70) = uVar9;\n                        *(*0x20 + -0xb0) = 0x40968c;\n                        uVar5 = fcn.00455620(iVar3, iVar8, uVar6, arg4);\n                        uVar4 = arg4;\n                        if (uVar9 == 0) {\n                            *(*0x20 + -0xb0) = 0x40969f;\n                            uVar5 = fcn.00455460(*(*0x20 + -0x30), iVar8, uVar6, arg4);\n                            uVar4 = arg4;\n                        }\n                        *(*0x20 + -0x38) = uVar5;\n                        *(*0x20 + -0x78) = uVar9;\n                        uVar9 = *(*0x20 + -0x40);\n                        arg1 = *(*0x20 + -0x60);\n                        uVar10 = *(*0x20 + -0x80);\n                        do {\n                            if (arg1 <= uVar10) {\n                                *(*(*0x20 + 8) + 0x18) = 0;\n                                return *(*0x20 + -0x28);\n                            }\n                            if (arg1 <= uVar10) {\n                                *(*0x20 + -0xb0) = 0x4098b1;\n                                fcn.0045ca40(arg1);\n                                break;\n                            }\n                            *(*0x20 + -0x80) = uVar10;\n                            noname_2 = uVar10 << 4;\n                            *(*0x20 + -0x68) = noname_2;\n                            *(*0x20 + -0xb0) = 0x409794;\n                            uVar6 = fcn.00454d00();\n                            *(*0x20 + -0x18) = uVar6;\n                            iVar3 = *(*0x20 + -0x50);\n                            uVar10 = *(iVar3 + 4 + *(*0x20 + -0x68));\n                            *(*0x20 + -0xb0) = 0x4097b4;\n                            iVar7 = fcn.00454fa0();\n                            iVar8 = *(*0x20 + -0x58);\n                            uVar9 = uVar10;\n                            if (iVar7 == iVar8) {\n                                *(*0x20 + -0xb0) = 0x4097cf;\n                                fcn.00455460(iVar8, iVar3, noname_2, uVar4);\n                                if (*(*0x20 + -0x70) == uVar10) {\n                                    uVar9 = *(*0x20 + -0x28);\n                                    *(*0x20 + -0xb0) = 0x4097ed;\n                                    cVar2 = fcn.004021c0(uVar10, iVar3);\n                                }\n                                else {\n                                    cVar2 = '\\0';\n                                }\n                                iVar8 = *(*0x20 + -0x58);\n                            }\n                            else {\n                                cVar2 = '\\0';\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x40980c;\n                                fcn.00455620(iVar8, iVar3, noname_2, uVar4);\n                                if (uVar9 == 0) {\n                                    noname_0 = *(*0x20 + -0x48);\n                                    uVar9 = *noname_0;\n                                    *(*0x20 + -0xb0) = 0x409825;\n                                    fcn.00454d00();\n                                    *(*0x20 + -0xb0) = 0x40982a;\n                                    fcn.00455460(noname_0, iVar3, noname_2, uVar4);\n                                }\n                                if ((**(*0x20 + -0x18) & 1) == 0) {\n                                    if (*(*0x20 + -0x78) == uVar9) {\n                                        *(*0x20 + -0xb0) = 0x409865;\n                                        cVar2 = fcn.004021c0(uVar9, *(*0x20 + -0x78));\n                                    }\n                                    else {\n                                        cVar2 = '\\0';\n                                    }\n                                }\n                                else {\n                                    cVar2 = '\\x01';\n                                }\n                                if (cVar2 != '\\0') goto code_r0x004096c5;\n                            }\n                            uVar10 = *(*0x20 + -0x80) + 1;\n                            uVar9 = *(*0x20 + -0x40);\n                            arg1 = *(*0x20 + -0x60);\n                        } while( true );\n                    }\n                    *(*0x20 + -0xb0) = 0x4098bc;\n                    fcn.0045ca40(arg1_00);\n                }\n                uVar10 = 0x10000;\n                *(*0x20 + -0xb0) = 0x4098c6;\n                fcn.0045cb40(arg1_00, uVar9);\n            }\n            *(*0x20 + -0xb0) = 0x4098d3;\n            in_RAX = fcn.0045cb40(arg1_00, uVar10);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x4098de;\n        fcn.0045a360();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\ncode_r0x004096c5:\n    *(*0x20 + -0xb0) = 0x4096dd;\n    arg4 = fcn.00455260();\n    iVar3 = *(*0x20 + -0x88);\n    if (iVar3 != 0) {\n        if (*0x5d3dd0 == 0) {\n            *(*(*0x20 + 8) + 0x18 + iVar3 * 8) = arg4;\n        }\n        else {\n            *(*0x20 + -0xb0) = 0x409719;\n            fcn.0045c5a0(iVar3, *(*0x20 + 8), noname_2, uVar4);\n        }\n        arg4 = *(*0x20 + -0x20);\n    }\n    uVar10 = iVar3 + 1;\n    uVar9 = *(*0x20 + -0x90);\n    arg1_00 = *(*0x20 + -0x30);\n    uVar6 = *(*0x20 + -0x80);\n    goto code_r0x00409600;\n}\n",
        "token_count": 2320
    },
    "004099e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004099e0(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    puVar1 = fcn.0040c440();\n    if (*0x5d3dd0 != 0) goto code_r0x00409a4a;\n    *puVar1 = arg1;\n    puVar1[1] = in_RAX;\n    puVar1[2] = unaff_RBX;\n    do {\n        *(puVar1 + 3) = in_XMM15;\n        fcn.00432920();\ncode_r0x00409a4a:\n        iVar2 = fcn.0045c6a0(arg1);\n        fcn.0045c6c0(iVar2 + 8, in_RAX, in_R8, in_R9);\n        puVar1 = fcn.0045c6a0(unaff_RBX);\n    } while( true );\n}\n",
        "token_count": 299
    },
    "00409ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409ac0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong noname_1;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (in_RAX == 0) {\n        noname_1 = 0;\n    }\n    else {\n        noname_1 = *(in_RAX + 8);\n    }\n    puVar1 = fcn.0040c440();\n    if (*0x5d3dd0 != 0) goto code_r0x00409b3c;\n    *puVar1 = arg1;\n    puVar1[1] = noname_1;\n    puVar1[2] = unaff_RBX;\n    do {\n        *(puVar1 + 3) = in_XMM15;\n        fcn.00432920();\ncode_r0x00409b3c:\n        iVar2 = fcn.0045c6a0(arg1);\n        fcn.0045c6c0(iVar2 + 8, noname_1, in_R8, in_R9);\n        puVar1 = fcn.0045c6a0(unaff_RBX);\n    } while( true );\n}\n",
        "token_count": 351
    },
    "00409da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00409da0(void)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (unaff_RBX == 0) {\n        puVar1 = 0x5d4c80;\n    }\n    else {\n        puVar1 = fcn.0040ba40(1);\n        puVar1[1] = unaff_RBX;\n        if (*0x5d3dd0 == 0) {\n            *puVar1 = in_RAX;\n        }\n        else {\n            puVar1 = fcn.0045c6a0(in_RAX);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 210
    },
    "00409e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00409e40(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    ulong arg1_00;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (in_RAX == 0) {\n        piVar1 = 0x5d4c80;\n    }\n    else {\n        arg1_00 = 1;\n        piVar1 = fcn.0040ba40();\n        piVar1[1] = unaff_RBX;\n        piVar1[2] = arg1;\n        if (*0x5d3dd0 == 0) {\n            *piVar1 = in_RAX;\n        }\n        else {\n            piVar1 = fcn.0045c6c0(arg1_00, in_RAX, in_R8, in_R9);\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 269
    },
    "00409f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409f00(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (unaff_RBX != 0) {\n        fcn.00409040(0);\n        return;\n    }\n    iVar1 = fcn.0040c440();\n    if (*0x5d3dd0 != 0) goto code_r0x00409f6d;\n    *(iVar1 + 0x10) = in_RAX;\n    do {\n        *(iVar1 + 0x18) = in_XMM15;\n        fcn.00432920();\ncode_r0x00409f6d:\n        iVar1 = fcn.0045c6a0();\n    } while( true );\n}\n",
        "token_count": 237
    },
    "0040a360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a360(void)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n            if (-1 < iVar1) {\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + 1;\n                LOCK();\n                bVar9 = *in_RAX == 0;\n                *in_RAX = *in_RAX ^ bVar9 * (*in_RAX ^ 1);\n                if (bVar9) {\n                    return !bVar9 * *in_RAX;\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x48) = 0x40a3bb;\n                fcn.0042fa40();\n                iVar4 = 0;\n                if (1 < *0x5d3b74) {\n                    iVar4 = 4;\n                }\n                *(*0x20 + -0x30) = iVar4;\n                iVar5 = *(*0x20 + -0x18);\n                puVar6 = *(*0x20 + -0x10);\n                iVar3 = 0;\n                do {\n                    uVar8 = *puVar6;\n                    if ((uVar8 & 1) == 0) {\n                        *(*0x20 + -0x20) = uVar8;\n                        LOCK();\n                        bVar9 = uVar8 == *puVar6;\n                        *puVar6 = *puVar6 ^ bVar9 * (*puVar6 ^ (uVar8 | 1));\n                        if (bVar9) {\n                            return uVar8 ^ !bVar9 * (uVar8 ^ *puVar6);\n                        }\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar3 = 0;\n                    }\n                    *(*0x20 + -0x28) = iVar3;\n                    if (iVar3 < iVar4) {\n                        *(*0x20 + -0x40) = 0x1e;\n                        *(*0x20 + -0x48) = 0x40a476;\n                        fcn.0045c140();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else if (iVar3 < iVar4 + 1) {\n                        *(*0x20 + -0x40) = 0x4d5e58;\n                        *(*0x20 + -0x48) = 0x40a44f;\n                        fcn.0045a220();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else {\n                        do {\n                            *(*(iVar5 + 0x30) + 0x240) = uVar8 & 0xfffffffffffffffe;\n                            LOCK();\n                            uVar2 = *puVar6;\n                            *puVar6 = *puVar6 ^ (uVar8 == uVar2) * (*puVar6 ^ (*(iVar5 + 0x30) | 1));\n                            if (uVar8 == uVar2) {\n                                if ((uVar8 & 1) != 0) {\n                                    *(*0x20 + -0x48) = 0x40a4f8;\n                                    fcn.0042f520();\n                                    iVar3 = 0;\n                                }\n                                break;\n                            }\n                            uVar8 = *puVar6;\n                        } while ((uVar8 & 1) != 0);\n                    }\n                    iVar3 = iVar3 + 1;\n                    iVar4 = *(*0x20 + -0x30);\n                    iVar5 = *(*0x20 + -0x18);\n                    puVar6 = *(*0x20 + -0x10);\n                } while( true );\n            }\n            *(*0x20 + -0x48) = 0x40a525;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x40a530;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1122
    },
    "0040a580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a580(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t *in_RAX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            do {\n                while (uVar5 = *in_RAX,  uVar5 == 1) {\n                    LOCK();\n                    bVar7 = *in_RAX == 1;\n                    *in_RAX = *in_RAX ^ bVar7 * *in_RAX;\n                    uVar5 = !bVar7 * (*in_RAX ^ 1) ^ 1;\n                    if (bVar7) goto code_r0x0040a5f6;\n                }\n                LOCK();\n                uVar3 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar5 == uVar3) * (*in_RAX ^ *((uVar5 & 0xfffffffffffffffe) + 0x240));\n            } while (uVar5 != uVar3);\n            *(*0x20 + -0x28) = 0x40a5f6;\n            uVar5 = fcn.0042f8c0();\ncode_r0x0040a5f6:\n            iVar4 = *(*0x20 + -0x10);\n            piVar1 = *(iVar4 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = *(*(iVar4 + 0x30) + 0xd8);\n            if (-1 < iVar2) {\n                if ((iVar2 == 0) && (*(iVar4 + 0xb1) != '\\0')) {\n                    *(iVar4 + 0x10) = 0xfffffffffffffade;\n                }\n                return uVar5;\n            }\n            *(*0x20 + -0x28) = 0x40a645;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x40a650;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 653
    },
    "0040a660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a660(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar3;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                LOCK();\n                bVar3 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar3 * (*in_RAX ^ 1);\n            } while (!bVar3);\n            if (uVar1 == 0) {\n                return uVar1 ^ !bVar3 * (uVar1 ^ *in_RAX);\n            }\n            if (uVar1 != 1) {\n                *(*0x20 + -0x20) = 0x40a6ae;\n                uVar1 = fcn.0042f8c0();\n                return uVar1;\n            }\n            *(*0x20 + -0x20) = 0x40a6c9;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x40a6d4;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 412
    },
    "0040a6e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040a6e0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x30) = 0x40a71b;\n                fcn.0042fa40();\n                iVar1 = *(*0x20 + -0x10);\n                puVar2 = *(*0x20 + 8);\n                LOCK();\n                bVar4 = *puVar2 == 0;\n                *puVar2 = *puVar2 ^ bVar4 * (*puVar2 ^ *(iVar1 + 0x30));\n                if (bVar4) {\n                    *(*(iVar1 + 0x30) + 0xe5) = 1;\n                    if (**0x5762b0 == 0) {\n                        *(*0x20 + -0x30) = 0x40a765;\n                        fcn.0042f520();\n                    }\n                    else {\n                        while (*puVar2 == 0) {\n                            *(*0x20 + -0x30) = 0x40a7ac;\n                            fcn.0042f520(iVar1);\n                            *(*0x20 + -0x28) = **0x5762b0;\n                            *(*0x20 + -0x20) = 0;\n                            *(*0x20 + -0x30) = 0x40a7c8;\n                            fcn.0045c180();\n                            iVar1 = *(*0x20 + -0x10);\n                            puVar2 = *(*0x20 + 8);\n                        }\n                    }\n                }\n                else {\n                    if (*puVar2 == 1) {\n                        return !bVar4 * *puVar2;\n                    }\n                    *(*0x20 + -0x30) = 0x40a788;\n                    fcn.004330a0();\n                }\n                iVar1 = *(*(*0x20 + -0x10) + 0x30);\n                *(iVar1 + 0xe5) = 0;\n                return iVar1;\n            }\n            *(*0x20 + -0x30) = 0x40a805;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x40a810;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 736
    },
    "0040a820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0040a820(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint64_t *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    int64_t iStack32;\n    uint64_t *puStack24;\n    int64_t in_stack_fffffffffffffff0;\n    \n    LOCK();\n    uVar1 = *in_RAX;\n    *in_RAX = *in_RAX ^ (uVar1 == 0) * (*in_RAX ^ *(unaff_R14 + 0x30));\n    if (uVar1 == 0) {\n        if (unaff_RBX < 0) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n            if (**0x5762b0 == 0) {\n                fcn.0042f520();\n            }\n            else {\n                while (iVar4 = fcn.0042f520(),  iVar4 < 0) {\n                    fcn.0045c180();\n                }\n            }\n            goto code_r0x0040aa50;\n        }\n        fcn.0045e320();\n        iStack32 = iStack56 + unaff_RBX;\n        puStack24 = in_RAX;\n    }\n    else {\n        if (*in_RAX == 1) {\n            return 1;\n        }\n        fcn.004330a0();\n        unaff_R14 = in_stack_fffffffffffffff0;\n    }\n    do {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042f520();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        iVar2 = **0x5762b0;\n        if (iVar2 != 0) {\n            fcn.0045c180();\n            iStack56 = iVar2;\n        }\n        *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n        fcn.0045e320();\n    } while (0 < iStack32 - iStack56);\n    while( true ) {\n        uVar1 = *puStack24;\n        if (uVar1 != *(unaff_R14 + 0x30)) break;\n        LOCK();\n        uVar3 = *puStack24;\n        *puStack24 = *puStack24 ^ (uVar1 == uVar3) * *puStack24;\n        if (uVar1 == uVar3) {\n            return 0;\n        }\n    }\n    if (uVar1 == 1) {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042f520();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        fcn.004330a0();\n    }\n    fcn.004330a0();\ncode_r0x0040aa50:\n    *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n    return 1;\n}\n",
        "token_count": 759
    },
    "0040ad00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ad00(void)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x567a24 == 0x10) {\n                for (iVar1 = 0; iVar1 < 0x44; iVar1 = iVar1 + 1) {\n                    *(iVar1 * 0x18 + 0x5d6930) = *(iVar1 * 2 + 0x567a20);\n                }\n                if (*0x5d3cd8 != 0) {\n                    if (*0x5d3cd8 < 0x80001) {\n                        if (0xfff < *0x5d3cd8) {\n                            if ((*0x5d3cd8 & *0x5d3cd8 - 1) == 0) {\n                                if ((*0x5d3cd0 & *0x5d3cd0 - 1) == 0) {\n                                    if (0x400000 < *0x5d3cd0) {\n                                        *0x5d3cd0 = 0;\n                                    }\n                                    if (*0x5d3cd0 != 0) {\n                                        while (*0x5d3cd0 != (1 << (*0x5d3cc8 & 0x3f) & -(*0x5d3cc8 < 0x40))) {\n                                            *0x5d3cc8 = *0x5d3cc8 + 1;\n                                        }\n                                    }\n                                    *(*0x20 + -0x28) = 0x40adca;\n                                    fcn.00423940();\n                                    *(*0x20 + -0x28) = 0x40adcf;\n                                    *0x5d3c90 = fcn.004140c0();\n                                    for (iVar1 = 0x7f; -1 < iVar1; iVar1 = iVar1 + -1) {\n                                        *(*0x20 + -0x10) = iVar1;\n                                        *(*0x20 + -0x28) = 0x40adee;\n                                        puVar2 = fcn.00416b60();\n                                        iVar1 = *(*0x20 + -0x10);\n                                        *puVar2 = iVar1 << 0x28 | 0xc000000000;\n                                        puVar2[2] = *0x5a61b0;\n                                        *0x5a61b0 = puVar2;\n                                    }\n                                    return;\n                                }\n                                *(*0x20 + -0x28) = 0x40ae6a;\n                                fcn.00434840();\n                                *(*0x20 + -0x28) = 0x40ae7b;\n                                fcn.00435140();\n                                *(*0x20 + -0x28) = 0x40ae87;\n                                fcn.00434e40();\n                                *(*0x20 + -0x28) = 0x40ae98;\n                                fcn.00435140();\n                                *(*0x20 + -0x28) = 0x40ae9d;\n                                fcn.004348c0();\n                                *(*0x20 + -0x28) = 0x40aeae;\n                                fcn.004330a0();\n                            }\n                            *(*0x20 + -0x28) = 0x40aeb3;\n                            fcn.00434840();\n                            *(*0x20 + -0x28) = 0x40aec5;\n                            fcn.00435140();\n                            *(*0x20 + -0x28) = 0x40aed1;\n                            fcn.00434e40();\n                            *(*0x20 + -0x28) = 0x40aee5;\n                            fcn.00435140();\n                            *(*0x20 + -0x28) = 0x40aeea;\n                            fcn.004348c0();\n                            *(*0x20 + -0x28) = 0x40aefb;\n                            fcn.004330a0();\n                        }\n                        *(*0x20 + -0x28) = 0x40af05;\n                        fcn.00434840();\n                        *(*0x20 + -0x28) = 0x40af16;\n                        fcn.00435140();\n                        *(*0x20 + -0x28) = 0x40af25;\n                        fcn.00434e40();\n                        *(*0x20 + -0x28) = 0x40af36;\n                        fcn.00435140();\n                        *(*0x20 + -0x28) = 0x40af45;\n                        fcn.00434f40();\n                        *(*0x20 + -0x28) = 0x40af56;\n                        fcn.00435140();\n                        *(*0x20 + -0x28) = 0x40af5b;\n                        fcn.004348c0();\n                        *(*0x20 + -0x28) = 0x40af6c;\n                        fcn.004330a0();\n                    }\n                    *(*0x20 + -0x28) = 0x40af71;\n                    fcn.00434840();\n                    *(*0x20 + -0x28) = 0x40af85;\n                    fcn.00435140();\n                    *(*0x20 + -0x28) = 0x40af91;\n                    fcn.00434e40();\n                    *(*0x20 + -0x28) = 0x40afa5;\n                    fcn.00435140();\n                    *(*0x20 + -0x28) = 0x40afaf;\n                    fcn.00434f40();\n                    *(*0x20 + -0x28) = 0x40afc5;\n                    fcn.00435140();\n                    *(*0x20 + -0x28) = 0x40afca;\n                    fcn.004348c0();\n                    *(*0x20 + -0x28) = 0x40afdb;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x28) = 0x40afec;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x28) = 0x40affd;\n            fcn.004330a0();\n        }\n        *(puVar3 + -8) = 0x40b005;\n        fcn.0045a360();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1549
    },
    "0040ba40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0040ba40(uint64_t param_1)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t *puVar9;\n    bool bVar10;\n    uint64_t in_RAX;\n    int64_t iVar11;\n    uchar (*pauVar12) [16];\n    uchar uVar13;\n    ulong uVar14;\n    int64_t unaff_RBX;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    int64_t iVar16;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    uint8_t uVar19;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint8_t uVar20;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar15 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar15 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5d3b6c != 2) {\n                if (in_RAX == 0) {\n                    return 0x5d3d58;\n                }\n                if (*0x5d4020 != '\\0') {\n                    if (*0x5d402c != 0) {\n                        *(*0x20 + -0x78) = 0x40bad9;\n                        iVar11 = fcn.0040c7a0(0x5d5900);\n                        return iVar11;\n                    }\n                    if ((*0x5d3e20 != '\\0') && (*(unaff_R14 + 0x98) == *0x5d3e28)) {\n                        *0x5d3e30 = *0x5d3e30 + 1;\n                    }\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x5d3b64 == 0) {\n                    uVar18 = 0;\n                }\n                else {\n                    uVar18 = *(*(unaff_R14 + 0x30) + 0x90);\n                    if (uVar18 == 0) {\n                        *(*0x20 + -0x18) = unaff_R14;\n                        uVar18 = *(*0x20 + -0x18);\n                    }\n                    iVar11 = *(uVar18 + 0x180) - in_RAX;\n                    *(uVar18 + 0x180) = iVar11;\n                    if (iVar11 < 0) {\n                        *(*0x20 + -0x10) = uVar18;\n                        *(*0x20 + -0x78) = 0x40bb5f;\n                        fcn.0041acc0();\n                        in_RAX = *(*0x20 + 8);\n                        param_1 = *(*0x20 + 0x18);\n                        uVar18 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                }\n                piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar2 = *piVar2 + 1;\n                iVar11 = *(unaff_R14 + 0x30);\n                if (*(iVar11 + 0xc0) == 0) {\n                    if (*(iVar11 + 0x50) != unaff_R14) {\n                        *(iVar11 + 0xc0) = 1;\n                        iVar16 = *0x5d3c90;\n                        if (*(iVar11 + 0xa0) != 0) {\n                            iVar16 = *(*(iVar11 + 0xa0) + 0x40);\n                        }\n                        if (iVar16 != 0) {\n                            if (unaff_RBX == 0) {\n                                uVar20 = true;\n                            }\n                            else {\n                                uVar20 = *(unaff_RBX + 8) == 0;\n                            }\n                            *(*0x20 + -0x28) = iVar11;\n                            *(*0x20 + -0x38) = iVar16;\n                            *(*0x20 + -0x4a) = uVar20;\n                            *(*0x20 + -0x18) = uVar18;\n                            if (in_RAX < 0x8001) {\n                                if ((uVar20 != false) && (in_RAX < 0x10)) {\n                                    uVar17 = *(iVar16 + 0x18);\n                                    if ((in_RAX & 7) == 0) {\n                                        uVar17 = uVar17 + 7 & 0xfffffffffffffff8;\n                                    }\n                                    else if ((in_RAX & 3) == 0) {\n                                        uVar17 = uVar17 + 3 & 0xfffffffffffffffc;\n                                    }\n                                    else if ((in_RAX & 1) == 0) {\n                                        uVar17 = uVar17 + 1 & 0xfffffffffffffffe;\n                                    }\n                                    if ((in_RAX + uVar17 < 0x11) && (iVar7 = *(iVar16 + 0x10),  iVar7 != 0)) {\n                                        *(iVar16 + 0x18) = in_RAX + uVar17;\n                                        *(iVar16 + 0x20) = *(iVar16 + 0x20) + 1;\n                                        *(iVar11 + 0xc0) = 0;\n                                        iVar6 = *(iVar11 + 0xd8);\n                                        *(iVar11 + 0xd8) = iVar6 + -1;\n                                        if ((iVar6 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                        }\n                                        return iVar7 + uVar17;\n                                    }\n                                    uVar17 = *(iVar16 + 0x50);\n                                    uVar8 = *(uVar17 + 0x40);\n                                    iVar11 = 0;\n                                    if (uVar8 != 0) {\n                                        for (; (uVar8 >> iVar11 & 1) == 0; iVar11 = iVar11 + 1) {\n                                        }\n                                    }\n                                    if (uVar8 == 0) {\n                                        iVar11 = 0x40;\n                                    }\n                                    if (iVar11 < 0x40) {\n                                        uVar4 = *(uVar17 + 0x30) + iVar11;\n                                        if (*(uVar17 + 0x38) <= uVar4) goto code_r0x0040bd52;\n                                        uVar1 = *(uVar17 + 0x30) + iVar11 + 1;\n                                        if (((uVar1 & 0x3f) == 0) && (*(uVar17 + 0x38) != uVar1)) {\n                                            pauVar12 = NULL;\n                                        }\n                                        else {\n                                            uVar18 = iVar11 + 1;\n                                            *(uVar17 + 0x40) = uVar8 >> (uVar18 & 0x3f) & -(uVar18 < 0x40);\n                                            *(uVar17 + 0x30) = uVar1;\n                                            *(uVar17 + 0x60) = *(uVar17 + 0x60) + 1;\n                                            pauVar12 = *(uVar17 + 0x68) * uVar4 + *(uVar17 + 0x18);\n                                        }\n                                    }\n                                    else {\ncode_r0x0040bd52:\n                                        pauVar12 = NULL;\n                                    }\n                                    uVar13 = uVar18;\n                                    if (pauVar12 == NULL) {\n                                        *(*0x20 + -0x78) = 0x40bd6f;\n                                        pauVar12 = fcn.0040b820();\n                                        iVar16 = *(*0x20 + -0x38);\n                                        uVar20 = *(*0x20 + -0x4a);\n                                        uVar17 = 5;\n                                        in_RAX = *(*0x20 + 8);\n                                    }\n                                    else {\n                                        uVar13 = 0;\n                                    }\n                                    *pauVar12 = CONCAT412(in_XMM15_Dd, \n                                                          CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    if ((in_RAX <= *(iVar16 + 0x18) && *(iVar16 + 0x18) != in_RAX) ||\n                                       (*(iVar16 + 0x10) == 0)) {\n                                        *(iVar16 + 0x10) = pauVar12;\n                                        *(iVar16 + 0x18) = in_RAX;\n                                    }\n                                    uVar14 = 0x10;\ncode_r0x0040bfcb:\n                                    uVar19 = 0;\n                                    goto code_r0x0040c07e;\n                                }\n                                if (0x3f8 < in_RAX) {\n                                    uVar18 = in_RAX - 0x381 >> 7;\n                                    if (uVar18 < 0xf9) {\n                                        uVar19 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                                 [uVar18];\n                                        goto code_r0x0040be20;\n                                    }\n                                    goto code_r0x0040c2e7;\n                                }\n                                uVar18 = in_RAX + 7 >> 3;\n                                if (uVar18 < 0x81) {\n                                    uVar19 = *(uVar18 + 0x5678e0);\ncode_r0x0040be20:\n                                    if (uVar19 < 0x44) {\n                                        uVar5 = *(uVar19 * 2 + 0x567a20);\n                                        uVar18 = uVar19 << 1 & 0xff | uVar20;\n                                        if (uVar18 < 0x88) {\n                                            uVar17 = *(iVar16 + 0x28 + uVar18 * 8);\n                                            uVar18 = *(uVar17 + 0x40);\n                                            iVar11 = 0;\n                                            if (uVar18 != 0) {\n                                                for (; (uVar18 >> iVar11 & 1) == 0; iVar11 = iVar11 + 1) {\n                                                }\n                                            }\n                                            if (uVar18 == 0) {\n                                                iVar11 = 0x40;\n                                            }\n                                            if (iVar11 < 0x40) {\n                                                uVar8 = *(uVar17 + 0x30) + iVar11;\n                                                if (*(uVar17 + 0x38) <= uVar8) {\n                                                    iVar16 = *(*0x20 + -0x38);\n                                                    goto code_r0x0040bf05;\n                                                }\n                                                uVar4 = *(uVar17 + 0x30) + iVar11 + 1;\n                                                if (((uVar4 & 0x3f) == 0) && (*(uVar17 + 0x38) != uVar4)) {\n                                                    iVar16 = *(*0x20 + -0x38);\n                                                    pauVar12 = NULL;\n                                                }\n                                                else {\n                                                    *(uVar17 + 0x40) =\n                                                         uVar18 >> (iVar11 + 1U & 0x3f) & -(iVar11 + 1U < 0x40);\n                                                    *(uVar17 + 0x30) = uVar4;\n                                                    *(uVar17 + 0x60) = *(uVar17 + 0x60) + 1;\n                                                    pauVar12 = *(uVar17 + 0x68) * uVar8 + *(uVar17 + 0x18);\n                                                    param_1 = *(*0x20 + 0x18);\n                                                    iVar16 = *(*0x20 + -0x38);\n                                                }\n                                            }\n                                            else {\ncode_r0x0040bf05:\n                                                pauVar12 = NULL;\n                                            }\n                                            *(*0x20 + -0x30) = uVar5;\n                                            if (pauVar12 == NULL) {\n                                                uVar17 = uVar19 << 1 | uVar20;\n                                                *(*0x20 + -0x78) = 0x40bf25;\n                                                pauVar12 = fcn.0040b820(param_1, 0, iVar16);\n                                                iVar16 = *(*0x20 + -0x38);\n                                                uVar20 = *(*0x20 + -0x4a);\n                                                uVar13 = param_1;\n                                                in_RAX = *(*0x20 + 8);\n                                                param_1 = *(*0x20 + 0x18);\n                                            }\n                                            else {\n                                                uVar13 = 0;\n                                            }\n                                            if ((param_1 != '\\0') && (*(uVar17 + 100) != '\\0')) {\n                                                *(*0x20 + -0x20) = pauVar12;\n                                                *(*0x20 + -0x4b) = uVar13;\n                                                *(*0x20 + -0x48) = uVar17;\n                                                *(*0x20 + -0x78) = 0x40bf86;\n                                                fcn.0045d0c0(param_1, pauVar12, iVar16);\n                                                in_RAX = *(*0x20 + 8);\n                                                pauVar12 = *(*0x20 + -0x20);\n                                                uVar20 = *(*0x20 + -0x4a);\n                                                uVar13 = *(*0x20 + -0x4b);\n                                                uVar17 = *(*0x20 + -0x48);\n                                            }\n                                            uVar14 = *(*0x20 + -0x30);\n                                            goto code_r0x0040bfcb;\n                                        }\n                                        goto code_r0x0040c2cd;\n                                    }\n                                    goto code_r0x0040c2da;\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x78) = 0x40bfe5;\n                                uVar17 = fcn.00414580();\n                                *(uVar17 + 0x30) = 1;\n                                *(uVar17 + 0x60) = 1;\n                                uVar14 = *(uVar17 + 0x68);\n                                pauVar12 = *(uVar17 + 0x18);\n                                if ((*(*0x20 + 0x18) == '\\0') || (*(uVar17 + 100) == '\\0')) {\n                                    uVar19 = 0;\n                                    uVar20 = *(*0x20 + -0x4a);\n                                }\n                                else {\n                                    uVar19 = *(*0x20 + -0x4a);\n                                    uVar20 = uVar19;\n                                    if (uVar19 == 0) {\n                                        *(*0x20 + -0x48) = uVar17;\n                                        *(*0x20 + -0x30) = uVar14;\n                                        *(*0x20 + -0x20) = pauVar12;\n                                        *(*0x20 + -0x78) = 0x40c02f;\n                                        fcn.0045d0c0();\n                                        uVar17 = *(*0x20 + -0x48);\n                                        pauVar12 = *(*0x20 + -0x20);\n                                        uVar14 = *(*0x20 + -0x30);\n                                        uVar19 = *(*0x20 + -0x4a);\n                                        uVar20 = uVar19;\n                                    }\n                                }\n                                uVar13 = 1;\n                                in_RAX = *(*0x20 + 8);\ncode_r0x0040c07e:\n                                *(*0x20 + -0x20) = pauVar12;\n                                *(*0x20 + -0x30) = uVar14;\n                                *(*0x20 + -0x4b) = uVar13;\n                                *(*0x20 + -0x49) = uVar19;\n                                *(*0x20 + -0x48) = uVar17;\n                                if (uVar20 == 0) {\n                                    *(*0x20 + -0x78) = 0x40c0b3;\n                                    fcn.00412860(in_RAX);\n                                    puVar9 = *(*0x20 + 0x10);\n                                    if (*puVar9 < *(*0x20 + 8)) {\n                                        uVar18 = 0;\n                                        if (puVar9[1] != 0) {\n                                            uVar18 = (*(*0x20 + 8) - *puVar9) + puVar9[1];\n                                        }\n                                    }\n                                    else {\n                                        uVar18 = puVar9[1];\n                                    }\n                                    *(*(*0x20 + -0x38) + 8) = *(*(*0x20 + -0x38) + 8) + uVar18;\n                                }\n                                else {\n                                    uVar18 = 0;\n                                }\n                                *(*0x20 + -0x40) = uVar18;\n                                *(*0x20 + -0x78) = 0x40c105;\n                                fcn.0045c160();\n                                in_XMM15_Da = 0;\n                                in_XMM15_Db = 0;\n                                in_XMM15_Dc = 0;\n                                in_XMM15_Dd = 0;\n                                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                                if (*0x5d3b6c != 0) {\n                                    *(*0x20 + -0x78) = 0x40c13b;\n                                    fcn.0041d560(*(*0x20 + -0x30));\n                                }\n                                if (*0x5d3bd8 < 1) {\n                                    uVar18 = *(*0x20 + -0x30);\n                                }\n                                else {\n                                    if (*0x5d3bd8 == 1) {\n                                        uVar18 = *(*0x20 + -0x30);\n                                    }\n                                    else {\n                                        uVar17 = **(*0x20 + -0x38);\n                                        uVar18 = *(*0x20 + -0x30);\n                                        if (uVar18 < uVar17) {\n                                            **(*0x20 + -0x38) = uVar17 - uVar18;\n                                            goto code_r0x0040c187;\n                                        }\n                                    }\n                                    *(*0x20 + -0x78) = 0x40c17b;\n                                    fcn.0040c560(uVar18);\n                                    uVar18 = *(*0x20 + -0x30);\n                                }\ncode_r0x0040c187:\n                                iVar11 = *(*0x20 + -0x28);\n                                *(iVar11 + 0xc0) = 0;\n                                iVar6 = *(iVar11 + 0xd8);\n                                *(iVar11 + 0xd8) = iVar6 + -1;\n                                if ((iVar6 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                if (*(*0x20 + -0x49) == '\\0') {\ncode_r0x0040c1ea:\n                                    if (*0x5d4020 != '\\0') {\n                                        if (*0x5d4024 != 0) {\n                                            *(*0x20 + -0x78) = 0x40c211;\n                                            fcn.0042ab80(*(*0x20 + 0x10));\n                                            uVar18 = *(*0x20 + -0x30);\n                                        }\n                                        if ((*0x5d3e20 != '\\0') && (*(unaff_R14 + 0x98) == *0x5d3e28)) {\n                                            *0x5d3e38 = *0x5d3e38 + uVar18;\n                                        }\n                                    }\n                                    if (*(*0x20 + -0x18) != 0) {\n                                        piVar3 = *(*0x20 + -0x18) + 0x180;\n                                        *piVar3 = *piVar3 - (uVar18 - *(*0x20 + 8));\n                                    }\n                                    if (*(*0x20 + -0x4b) != '\\0') {\n                                        if (((*0x5d6928 == '\\0') || (*0x5d3b88 != 0)) || (*0x5d3b6c != 0)) {\n                                            bVar10 = false;\n                                        }\n                                        else {\n                                            bVar10 = *0x5d44d8 <= *0x5d4538;\n                                        }\n                                        if (bVar10) {\n                                            *(*0x20 + -0x78) = 0x40c29c;\n                                            fcn.00417020(0);\n                                        }\n                                    }\n                                    return *(*0x20 + -0x20);\n                                }\n                                if (*(*0x20 + -0x4a) != '\\0') {\n                                    *(*0x20 + -0x78) = 0x40c1e5;\n                                    fcn.0040c380();\n                                    uVar18 = *(*0x20 + -0x30);\n                                    goto code_r0x0040c1ea;\n                                }\n                                *(*0x20 + -0x78) = 0x40c2cd;\n                                fcn.004330a0();\ncode_r0x0040c2cd:\n                                *(*0x20 + -0x78) = 0x40c2da;\n                                fcn.0045ca40(0x88);\ncode_r0x0040c2da:\n                                *(*0x20 + -0x78) = 0x40c2e7;\n                                fcn.0045ca40(0x44);\ncode_r0x0040c2e7:\n                                *(*0x20 + -0x78) = 0x40c2f4;\n                                fcn.0045ca60(0xf9);\n                            }\n                            param_1 = 0x81;\n                            *(*0x20 + -0x78) = 0x40c305;\n                            fcn.0045ca60(0x81);\n                        }\n                        *(*0x20 + -0x78) = 0x40c316;\n                        fcn.004330a0();\n                    }\n                    *(*0x20 + -0x78) = 0x40c327;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x78) = 0x40c338;\n                fcn.004330a0();\n            }\n            unaff_RBX = 0x32;\n            *(*0x20 + -0x78) = 0x40c349;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar15 + 8) = in_RAX;\n        *(puVar15 + 0x10) = unaff_RBX;\n        puVar15[0x18] = param_1;\n        *(puVar15 + -8) = 0x40c35d;\n        fcn.0045a360();\n        in_RAX = *(puVar15 + 8);\n        unaff_RBX = *(puVar15 + 0x10);\n        param_1 = puVar15[0x18];\n        *0x20 = puVar15;\n    } while( true );\n}\n",
        "token_count": 5274
    },
    "0040c380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040c380(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = unaff_RBX + in_RAX;\n    for (; unaff_RBX < uVar1; unaff_RBX = unaff_RBX + 0x40000) {\n        if (*(unaff_R14 + 0xb1) != '\\0') {\n            fcn.0045a1a0();\n        }\n        uVar2 = uVar1 - unaff_RBX;\n        if (0x40000 < uVar2) {\n            uVar2 = 0x40000;\n        }\n        fcn.0045d0c0(uVar2);\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "0040c4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040c4a0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 1) {\n                uVar1 = *in_RAX;\n                *(*0x20 + -0x28) = 0x40c50f;\n                fcn.0040ba40(1, uVar1);\n                return;\n            }\n            if (((SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX) >> 0x40, 0) == 0) &&\n                (SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX), 0) < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                *(*0x20 + -0x28) = 0x40c4f2;\n                fcn.0040ba40(1);\n                return;\n            }\n            unaff_RBX = 0x4f9e38;\n            *(*0x20 + -0x28) = 0x40c52c;\n            in_RAX = fcn.00432920(in_RAX);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40c53c;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 493
    },
    "0040c560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040c560(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar3 = *0x5d3c90;\n            if (*(in_RAX + 0xa0) != 0) {\n                piVar3 = *(*(in_RAX + 0xa0) + 0x40);\n            }\n            if (piVar3 != NULL) {\n                if (*0x5d3bd8 == 1) {\n                    iVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar3;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x38) = 0x40c5be;\n                    iVar1 = fcn.0040c640();\n                    iVar2 = iVar1;\n                    piVar3 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x18);\n                }\n                *piVar3 = iVar2;\n                *(*0x20 + -0x38) = 0x40c5e5;\n                fcn.0042a5e0(arg1);\n                return;\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x38) = 0x40c605;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40c61a;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 607
    },
    "0040c8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040c8c0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint64_t in_RAX;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t **ppuVar7;\n    uint64_t *puVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                if (unaff_RBX == 0) {\n                    unaff_RBX = 8;\ncode_r0x0040c913:\n                    if (0xffff < in_RAX) {\n                        *(*0x20 + -0x48) = 0x40c9ed;\n                        iVar5 = fcn.00415420();\n                        return iVar5;\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    iVar5 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x20) = iVar5;\n                    if ((iVar5 == 0) || (*(iVar5 + 0xa0) == 0)) {\n                        *(*0x20 + -0x48) = 0x40c96c;\n                        fcn.0040a360();\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x20);\n                        unaff_RBX = *(*0x20 + -0x30);\n                        ppuVar7 = 0x5d3de8;\n                    }\n                    else {\n                        ppuVar7 = *(iVar5 + 0xa0) + 0x11f0;\n                    }\n                    *(*0x20 + -0x18) = ppuVar7;\n                    puVar8 = ppuVar7[1];\n                    *(*0x20 + -0x28) = -unaff_RBX;\n                    puVar8 = puVar8 + (unaff_RBX - 1) & -unaff_RBX;\n                    ppuVar7[1] = puVar8;\n                    if ((0x40000 < puVar8 + in_RAX) || (*ppuVar7 == NULL)) {\n                        *(*0x20 + -0x48) = 0x40c9ca;\n                        puVar8 = fcn.00415420();\n                        ppuVar7 = *(*0x20 + -0x18);\n                        *ppuVar7 = puVar8;\n                        if (*ppuVar7 == NULL) {\n                            if (ppuVar7 == 0x5d3de8) goto code_r0x0040cb11;\n                            do {\n                                *(*0x20 + -0x48) = 0x40cb0f;\n                                fcn.004330a0();\ncode_r0x0040cb11:\n                                *(*0x20 + -0x48) = 0x40cb1d;\n                                fcn.0040a580();\n                            } while( true );\n                        }\n                        do {\n                            uVar4 = *0x5d3cc0;\n                            **ppuVar7 = *0x5d3cc0;\n                            LOCK();\n                            bVar9 = uVar4 == *0x5d3cc0;\n                            *0x5d3cc0 = *0x5d3cc0 ^ bVar9 * (*0x5d3cc0 ^ *ppuVar7);\n                        } while (!bVar9);\n                        ppuVar7[1] = *(*0x20 + -0x30) + 7U & *(*0x20 + -0x28);\n                        in_RAX = *(*0x20 + 8);\n                        iVar5 = *(*0x20 + -0x20);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    puVar8 = *ppuVar7;\n                    puVar3 = ppuVar7[1];\n                    ppuVar7[1] = in_RAX + puVar3;\n                    iVar2 = *(iVar5 + 0xd8);\n                    *(iVar5 + 0xd8) = iVar2 + -1;\n                    iVar5 = puVar8 + puVar3;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    *(*0x20 + -0x10) = iVar5;\n                    if (ppuVar7 == 0x5d3de8) {\n                        *(*0x20 + -0x48) = 0x40ca57;\n                        fcn.0040a580();\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    if (arg1 != 0x5d5900) {\n                        *(*0x20 + -0x48) = 0x40ca7d;\n                        fcn.0042c400();\n                        *(*0x20 + -0x48) = 0x40ca91;\n                        fcn.0042c400();\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    return iVar5;\n                }\n                if ((unaff_RBX & unaff_RBX - 1) == 0) {\n                    if (unaff_RBX < 0x2001) goto code_r0x0040c913;\n                    *(*0x20 + -0x48) = 0x40cb30;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x48) = 0x40cb45;\n                fcn.004330a0();\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x48) = 0x40cb56;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x40cb6b;\n        fcn.0045ea60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1639
    },
    "0040cb80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040cb80(int64_t arg1)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = (arg1 + *in_RAX) - 1 & -arg1;\n    uVar2 = uVar1 + unaff_RBX;\n    if (uVar2 <= in_RAX[2]) {\n        *in_RAX = uVar2;\n        uVar2 = -*0x5d3cd8 & (uVar2 + *0x5d3cd8) - 2;\n        if (in_RAX[1] < uVar2) {\n            if (*(in_RAX + 3) != '\\0') {\n                fcn.00415b20(unaff_RDI);\n                fcn.00415680();\n            }\n            in_RAX[1] = uVar2;\n        }\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 289
    },
    "0040cc80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0040cc80(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t *arg3;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uint8_t uVar9;\n    int64_t *in_R8;\n    uint64_t in_R9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar6 = *(in_RAX + 0x28);\n    iVar4 = in_RAX;\n    uVar7 = arg1;\n    if ((iVar6 == 0) || (arg3 = *(iVar6 + 0x10),  in_R8 = arg3,  arg3 == NULL)) {\n        arg3 = fcn.0040ba40(1);\n    }\n    else {\n        in_R9 = *(unaff_RBX + 0x52);\n        piVar8 = arg3 + (in_R9 - 8);\n        if (*piVar8 == 0) {\n            in_R8 = arg3 + in_R9;\n            if (*0x5d3dd0 == 0) {\n                *(iVar6 + 0x10) = in_R8;\n            }\n            else {\n                iVar4 = fcn.0045c720(arg1, iVar6, in_R8, in_R9);\n            }\n        }\n        else {\n            if (*0x5d3dd0 == 0) {\n                *piVar8 = 0;\n            }\n            else {\n                piVar8 = arg3;\n                iVar4 = fcn.0045c6c0(arg1, 0, arg3, in_R9);\n                in_R8 = arg3;\n                arg3 = piVar8;\n            }\n            if (*0x5d3dd0 == 0) {\n                *(*(iVar4 + 0x28) + 0x10) = 0;\n            }\n            else {\n                iVar4 = fcn.0045c6c0(uVar7, 0, in_R8, in_R9);\n            }\n        }\n    }\n    uVar9 = *(iVar4 + 9);\n    if (uVar9 < 0x10) {\n        *(iVar4 + 10) = *(iVar4 + 10) + 1;\n        uVar10 = uVar7;\n    }\n    else {\n        uVar10 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar3 = ZEXT816(uVar10) * ZEXT816(uVar10 ^ 0xe7037ed1a0b428db);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar10;\n        uVar1 = uVar9 - 0xf;\n        uVar10 = uVar1;\n        uVar9 = uVar1;\n        uVar1 = -(uVar9 < 0x20);\n        in_R9 = uVar1;\n        uVar1 = (1 << (uVar9 & 0x1f) & uVar1) - 1;\n        in_R8 = uVar1;\n        if ((uVar1 & (SUB164(auVar3, 0) ^ SUB164(auVar3 >> 0x40, 0))) == 0) {\n            *(iVar4 + 10) = *(iVar4 + 10) + 1;\n        }\n    }\n    iVar6 = *(unaff_RBX + 0x40);\n    if (*(iVar6 + 8) == 0) {\n        if (*(iVar4 + 0x28) == 0) {\n            uVar5 = fcn.0040c440();\n            if (*0x5d3dd0 == 0) {\n                *(in_RAX + 0x28) = uVar5;\n                iVar4 = in_RAX;\n                uVar7 = arg1;\n            }\n            else {\n                iVar4 = in_RAX;\n                fcn.0045c5a0(uVar10, in_RAX, in_R8, in_R9);\n                uVar7 = arg1;\n            }\n        }\n        piVar8 = *(iVar4 + 0x28);\n        if (*piVar8 == 0) {\n            uVar5 = fcn.0040c440();\n            if (*0x5d3dd0 == 0) {\n                **(in_RAX + 0x28) = uVar5;\n                iVar4 = in_RAX;\n                uVar7 = arg1;\n            }\n            else {\n                fcn.0045c5a0(in_RAX, piVar8, in_R8, in_R9);\n                iVar4 = in_RAX;\n                uVar7 = arg1;\n            }\n        }\n        in_R8 = **(iVar4 + 0x28);\n        iVar4 = in_R8[1];\n        iVar2 = *in_R8;\n        in_R9 = in_R8[2];\n        iVar6 = iVar2;\n        if (in_R9 < iVar4 + 1U) {\n            arg2 = iVar2;\n            piVar8 = in_R8;\n            iVar6 = fcn.00444c60(iVar4);\n            in_R8[2] = iVar4;\n            if (*0x5d3dd0 == 0) {\n                *in_R8 = iVar6;\n                iVar4 = iVar2;\n                uVar7 = arg1;\n            }\n            else {\n                iVar6 = fcn.0045c5a0(iVar4, arg2, piVar8, in_R9);\n                iVar4 = iVar2;\n                uVar7 = arg1;\n            }\n        }\n        in_R8[1] = iVar4 + 1;\n        if (*0x5d3dd0 == 0) {\n            *(iVar6 + iVar4 * 8) = arg3;\n        }\n        else {\n            uVar7 = fcn.0045c6a0();\n        }\n    }\n    if (*0x5d3dd0 == 0) {\n        *(uVar7 + *(unaff_RBX + 0x52) + -8) = arg3;\n    }\n    else {\n        fcn.0045c5a0(*(unaff_RBX + 0x52), iVar6, in_R8, in_R9);\n    }\n    return arg3;\n}\n",
        "token_count": 1519
    },
    "0040d000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040d000(int64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    auVar1 = ZEXT816(**(in_RAX + 0x40)) * ZEXT816(unaff_RBX);\n    if ((SUB168(auVar1 >> 0x40, 0) != 0) || (0x1000000000000 < SUB168(auVar1, 0))) {\n        unaff_RBX = 0;\n    }\n    if (arg1 == 0) {\n        arg1 = fcn.0040c440();\n    }\n    uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n    auVar1 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    *(arg1 + 0xc) = SUB164(auVar1 >> 0x40, 0) ^ SUB164(auVar1, 0);\n    uVar3 = 0;\n    while ((uVar2 = uVar3,  8 < unaff_RBX &&\n           (uVar4 = 1 << (uVar2 & 0x3f),  uVar7 = uVar4 >> 1,  in_R8 = uVar7 + (uVar4 & 0xfffffffffffffffe), \n           uVar7 + in_R8 * 4 < unaff_RBX))) {\n        uVar3 = uVar3 + 1;\n    }\n    *(arg1 + 9) = uVar2;\n    iVar6 = arg1;\n    if (uVar2 != 0) {\n        uVar4 = uVar3;\n        arg2 = arg1;\n        uVar5 = fcn.0040d1a0(0);\n        if (*0x5d3dd0 == 0) {\n            *(arg1 + 0x10) = uVar5;\n        }\n        else {\n            fcn.0045c5a0(arg1, arg2, in_R8, in_R9);\n        }\n        if (uVar4 != 0) {\n            iVar6 = fcn.0040c440();\n            if (*0x5d3dd0 == 0) {\n                *(arg1 + 0x28) = iVar6;\n                *(iVar6 + 0x10) = uVar4;\n                iVar6 = arg1;\n            }\n            else {\n                fcn.0045c5a0(arg1, arg2, in_R8, in_R9);\n                fcn.0045c6c0(arg1, uVar4, in_R8, in_R9);\n                iVar6 = arg1;\n            }\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 786
    },
    "0040d1a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d1a0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t arg2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = 1 << (unaff_BL & 0x3f);\n            uVar7 = uVar6;\n            if (unaff_BL < 4) goto code_r0x0040d2d2;\n            in_R9 = (1 << (unaff_BL - 4 & 0x3f)) + uVar6;\n            uVar1 = **(in_RAX + 0x40);\n            in_R8 = in_R9 * uVar1;\n            if (in_R8 < 0x8000) {\n                if (0x3f8 < in_R8) {\n                    uVar7 = in_R8 - 0x381 >> 7;\n                    if (uVar7 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar7] < 0x44) {\n                            uVar4 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar7] * 2 + 0x567a20);\n                            goto code_r0x0040d2a0;\n                        }\n                        goto code_r0x0040d38c;\n                    }\n                    goto code_r0x0040d399;\n                }\n                uVar7 = in_R8 + 7 >> 3;\n                if (uVar7 < 0x81) {\n                    uVar7 = *(uVar7 + 0x5678e0);\n                    if (uVar7 < 0x44) {\n                        uVar4 = *(uVar7 * 2 + 0x567a20);\n                        goto code_r0x0040d2a0;\n                    }\n                    goto code_r0x0040d3a6;\n                }\n            }\n            else {\n                uVar4 = in_R8;\n                if (in_R8 < in_R8 + 0x2000 || in_R8 - (in_R8 + 0x2000) == 0) {\n                    uVar4 = in_R8 + 0x1fff & 0xffffffffffffe000;\n                }\ncode_r0x0040d2a0:\n                uVar7 = in_R9;\n                if (uVar4 == in_R8) goto code_r0x0040d2d2;\n                if (uVar1 != 0) {\n                    uVar7 = uVar4 / uVar1;\ncode_r0x0040d2d2:\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x20) = uVar6;\n                    *(*0x20 + -0x28) = uVar7;\n                    if (arg1 == 0) {\n                        uVar2 = *(in_RAX + 0x40);\n                        *(*0x20 + -0x40) = 0x40d32e;\n                        iVar3 = fcn.0040c4a0(uVar2, uVar7);\n                    }\n                    else {\n                        *(*0x20 + -0x18) = arg1;\n                        if (*(*(in_RAX + 0x40) + 8) == 0) {\n                            *(*0x20 + -0x40) = 0x40d315;\n                            fcn.0045d0c0();\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40d308;\n                            fcn.00411520();\n                        }\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    arg2 = *(*0x20 + -0x20);\n                    if (*(*0x20 + -0x28) != arg2) {\n                        uVar7 = *(*(*0x20 + -0x10) + 0x52);\n                        if (*0x5d3dd0 == 0) {\n                            *((*(*0x20 + -0x28) + -1) * uVar7 + iVar3 + uVar7 + -8) = iVar3;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40d376;\n                            fcn.0045c5a0(iVar3 + uVar7 * arg2, arg2, in_R8, in_R9);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x40d38c;\n                fcn.00431720();\ncode_r0x0040d38c:\n                *(*0x20 + -0x40) = 0x40d399;\n                fcn.0045ca40(0x44);\ncode_r0x0040d399:\n                *(*0x20 + -0x40) = 0x40d3a6;\n                fcn.0045ca60(0xf9);\ncode_r0x0040d3a6:\n                *(*0x20 + -0x40) = 0x40d3b3;\n                fcn.0045ca40(0x44);\n            }\n            arg1 = 0x81;\n            *(*0x20 + -0x40) = 0x40d3c5;\n            in_RAX = fcn.0045ca60(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40d3d9;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1611
    },
    "0040d840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0040d840(int64_t **arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t arg2;\n    uint8_t uVar7;\n    ulong uVar8;\n    uint64_t arg1_00;\n    int64_t arg1_01;\n    int64_t *piVar9;\n    ulong uVar10;\n    int64_t unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t in_R8;\n    int64_t iVar12;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x0040d840:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (unaff_RBX != 0) {\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar2 = **(in_RAX + 0x48);\n                *(*0x20 + -0x80) = 0x40d89e;\n                uVar4 = (*pcVar2)();\n                *(*0x20 + -0x50) = uVar4;\n                piVar9 = *(*0x20 + 0x10);\n                *(piVar9 + 1) = *(piVar9 + 1) ^ 4;\n                if (piVar9[2] == 0) {\n                    uVar10 = *(*0x20 + 8);\n                    uVar8 = 1;\n                    *(*0x20 + -0x80) = 0x40d8d5;\n                    iVar5 = fcn.0040ba40();\n                    if (*0x5d3dd0 == 0) {\n                        piVar9 = *(*0x20 + 0x10);\n                        piVar9[2] = iVar5;\n                    }\n                    else {\n                        piVar9 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x80) = 0x40d8fd;\n                        fcn.0045c5a0(uVar8, uVar10, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x50);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    arg1_00 = (1 << (*(piVar9 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar9[3] != 0) {\n                        *(*0x20 + -0x48) = arg1_00;\n                        *(*0x20 + -0x80) = 0x40d95b;\n                        fcn.0040e6e0(arg1_00);\n                        uVar4 = *(*0x20 + -0x50);\n                        arg1_00 = *(*0x20 + -0x48);\n                        piVar9 = *(*0x20 + 0x10);\n                        iVar5 = *(*0x20 + 8);\n                    }\n                    uVar1 = *(iVar5 + 0x52);\n                    iVar12 = piVar9[2];\n                    uVar6 = uVar4 >> 0x38;\n                    if (uVar4 >> 0x38 < 5) {\n                        uVar6 = (uVar4 >> 0x38) + 5;\n                    }\n                    *(*0x20 + -0x59) = uVar6;\n                    arg2 = 0;\n                    in_R8 = 0;\n                    in_R9 = 0;\n                    iVar12 = arg1_00 * uVar1 + iVar12;\n                    do {\n                        arg1_01 = iVar12;\n                        *(*0x20 + -0x20) = arg1_01;\n                        for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                            uVar7 = *(arg1_01 + uVar4);\n                            if (uVar6 == uVar7) {\n                                *(*0x20 + -0x58) = uVar4;\n                                *(*0x20 + -0x28) = in_R9;\n                                *(*0x20 + -0x38) = in_R8;\n                                *(*0x20 + -0x30) = arg2;\n                                piVar9 = *(iVar5 + 0x50) * uVar4 + arg1_01 + 8;\n                                if ((*(iVar5 + 0x54) & 1) != 0) {\n                                    piVar9 = *piVar9;\n                                }\n                                *(*0x20 + -0x40) = piVar9;\n                                pcVar2 = **(*(iVar5 + 0x30) + 0x18);\n                                *(*0x20 + -0x80) = 0x40db02;\n                                cVar3 = (*pcVar2)();\n                                if (cVar3 != '\\0') {\n                                    iVar5 = *(*0x20 + 8);\n                                    if ((*(iVar5 + 0x54) >> 3 & 1) != 0) {\n                                        *(*0x20 + -0x80) = 0x40db65;\n                                        fcn.00411220(*(*0x20 + -0x10));\n                                        iVar5 = *(*0x20 + 8);\n                                    }\n                                    arg1 = *(*0x20 + -0x20) + *(iVar5 + 0x51) * *(*0x20 + -0x58) + *(iVar5 + 0x50) * 8 +\n                                           8;\n                                    goto code_r0x0040dcc1;\n                                }\n                                uVar6 = *(*0x20 + -0x59);\n                                arg1_01 = *(*0x20 + -0x20);\n                                piVar9 = *(*0x20 + 0x10);\n                                iVar5 = *(*0x20 + 8);\n                                uVar4 = *(*0x20 + -0x58);\n                                arg2 = *(*0x20 + -0x30);\n                                in_R8 = *(*0x20 + -0x38);\n                                in_R9 = *(*0x20 + -0x28);\n                            }\n                            else {\n                                if ((uVar7 < 2) && (arg2 == 0)) {\n                                    in_R8 = uVar4 * *(iVar5 + 0x50) + arg1_01 + 8;\n                                    in_R9 = *(iVar5 + 0x51) * uVar4 + *(iVar5 + 0x50) * 8 + arg1_01 + 8;\n                                    arg2 = arg1_01 + uVar4;\n                                }\n                                if (uVar7 == 0) goto code_r0x0040d9a8;\n                            }\n                        }\n                        iVar12 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n                    } while (iVar12 != 0);\ncode_r0x0040d9a8:\n                    if (piVar9[3] != 0) goto code_r0x0040db97;\n                    uVar7 = *(piVar9 + 9);\n                    if ((*piVar9 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar9 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar9 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x0040db97;\n                    }\n                    *(*0x20 + -0x80) = 0x40d914;\n                    fcn.0040e500();\n                    piVar9 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x50);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040dd05;\n        }\n        goto code_r0x0040dd16;\n    }\n    goto code_r0x0040dd2a;\ncode_r0x0040db97:\n    iVar12 = in_R8;\n    if (arg2 == 0) {\n        *(*0x20 + -0x80) = 0x40dbaa;\n        arg2 = fcn.0040cc80(arg1_01);\n        iVar5 = *(*0x20 + 8);\n        iVar12 = arg2 + 8;\n        in_R9 = arg2 + *(iVar5 + 0x50) * 8 + 8;\n    }\n    *(*0x20 + -0x28) = in_R9;\n    *(*0x20 + -0x30) = arg2;\n    in_R8 = iVar12;\n    if ((*(iVar5 + 0x54) & 1) != 0) {\n        *(*0x20 + -0x18) = iVar12;\n        uVar10 = 1;\n        *(*0x20 + -0x80) = 0x40dc05;\n        in_R8 = fcn.0040ba40();\n        if (*0x5d3dd0 == 0) {\n            **(*0x20 + -0x18) = in_R8;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x40dc1f;\n            in_R8 = fcn.0045c5a0(uVar10, arg2, iVar12, in_R9);\n        }\n        arg2 = *(*0x20 + -0x30);\n        iVar5 = *(*0x20 + 8);\n        in_R9 = *(*0x20 + -0x28);\n    }\n    if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n        *(*0x20 + -0x38) = in_R8;\n        uVar8 = 1;\n        *(*0x20 + -0x80) = 0x40dc65;\n        uVar10 = fcn.0040ba40();\n        if (*0x5d3dd0 == 0) {\n            **(*0x20 + -0x28) = uVar10;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x40dc7f;\n            fcn.0045c5a0(uVar8, arg2, in_R8, in_R9);\n        }\n        in_R8 = *(*0x20 + -0x38);\n    }\n    *(*0x20 + -0x80) = 0x40dc9d;\n    fcn.00411220(*(*0x20 + -0x10));\n    **(*0x20 + -0x30) = *(*0x20 + -0x59);\n    **(*0x20 + 0x10) = **(*0x20 + 0x10) + 1;\n    iVar5 = *(*0x20 + 8);\n    arg1 = *(*0x20 + -0x28);\ncode_r0x0040dcc1:\n    uVar7 = *(*(*0x20 + 0x10) + 8);\n    if ((uVar7 & 4) != 0) {\n        *(*(*0x20 + 0x10) + 8) = uVar7 & 0xfb;\n        if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n            arg1 = *arg1;\n        }\n        return arg1;\n    }\n    *(*0x20 + -0x80) = 0x40dd05;\n    fcn.004330a0();\ncode_r0x0040dd05:\n    *(*0x20 + -0x80) = 0x40dd16;\n    fcn.004330a0();\ncode_r0x0040dd16:\n    unaff_RBX = 0x4f9e48;\n    *(*0x20 + -0x80) = 0x40dd29;\n    in_RAX = fcn.00432920();\ncode_r0x0040dd2a:\n    *(puVar11 + 8) = in_RAX;\n    *(puVar11 + 0x10) = unaff_RBX;\n    *(puVar11 + 0x18) = arg1;\n    *(puVar11 + -8) = 0x40dd3e;\n    fcn.0045a360();\n    in_RAX = *(puVar11 + 8);\n    unaff_RBX = *(puVar11 + 0x10);\n    arg1 = *(puVar11 + 0x18);\n    *0x20 = puVar11;\n    goto code_r0x0040d840;\n}\n",
        "token_count": 3001
    },
    "0040e500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040e500(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int32_t iVar2;\n    ulong arg1;\n    int64_t *arg1_00;\n    int64_t *arg2;\n    int64_t *unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    uint64_t arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*unaff_RBX + 1U < 9) ||\n               (uVar5 = 1 << (*(unaff_RBX + 9) & 0x3f), \n               *unaff_RBX + 1U <= (uVar5 >> 1) * 5 + (uVar5 & 0xfffffffffffffffe) * 4)) {\n                *(unaff_RBX + 1) = *(unaff_RBX + 1) | 8;\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = 1;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x19) = iVar2;\n            *(*0x20 + -0x18) = unaff_RBX[2];\n            uVar5 = *(unaff_RBX + 9) + iVar2;\n            *(*0x20 + -0x40) = 0x40e579;\n            iVar1 = fcn.0040d1a0(0);\n            arg2 = *(*0x20 + 0x10);\n            uVar4 = *(arg2 + 1) & 0xfc;\n            if ((*(arg2 + 1) & 1) != 0) {\n                uVar4 = uVar4 | 2;\n            }\n            arg3 = *(*0x20 + -0x19);\n            *(arg2 + 9) = *(arg2 + 9) + *(*0x20 + -0x19);\n            *(arg2 + 1) = uVar4;\n            if (*0x5d3dd0 == 0) {\n                arg2[3] = *(*0x20 + -0x18);\n                arg2[2] = iVar1;\n            }\n            else {\n                arg1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x40) = 0x40e5ca;\n                fcn.0045c6a0();\n                *(*0x20 + -0x40) = 0x40e5d3;\n                fcn.0045c5a0(arg1, arg2, arg3, in_R9);\n            }\n            arg2[4] = 0;\n            *(arg2 + 10) = 0;\n            arg1_00 = arg2[5];\n            if ((arg1_00 == NULL) || (*arg1_00 == 0)) goto code_r0x0040e634;\n            if (arg1_00[1] == 0) {\n                if (*0x5d3dd0 == 0) {\n                    arg1_00[1] = *arg1_00;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x40e615;\n                    fcn.0045c700(arg1_00, arg2, arg3, in_R9);\n                }\n                if (*0x5d3dd0 == 0) {\n                    *arg2[5] = 0;\n                }\n                else {\n                    arg1_00 = NULL;\n                    *(*0x20 + -0x40) = 0x40e634;\n                    fcn.0045c6a0();\n                }\ncode_r0x0040e634:\n                if (uVar5 != 0) {\n                    if (arg2[5] == 0) {\n                        *(*0x20 + -0x10) = uVar5;\n                        *(*0x20 + -0x40) = 0x40e653;\n                        iVar1 = fcn.0040c440();\n                        if (*0x5d3dd0 == 0) {\n                            arg1_00 = *(*0x20 + 0x10);\n                            arg1_00[5] = iVar1;\n                        }\n                        else {\n                            arg1_00 = *(*0x20 + 0x10);\n                            *(*0x20 + -0x40) = 0x40e675;\n                            fcn.0045c5a0(arg1_00, arg2, arg3, in_R9);\n                        }\n                        uVar5 = *(*0x20 + -0x10);\n                        arg2 = arg1_00;\n                    }\n                    if (*0x5d3dd0 == 0) {\n                        *(arg2[5] + 0x10) = uVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x40) = 0x40e69b;\n                        fcn.0045c6e0(arg1_00, arg2, arg3, in_R9);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x40) = 0x40e6b6;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x40e6c6;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1386
    },
    "0040e6e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040e6e0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040e780((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040e780(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0040f160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040f160(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    ulong arg1_00;\n    uint64_t uVar8;\n    int64_t arg1_01;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x0040f160:\n    puVar10 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar10 = *0x20 + -0x30;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        if (unaff_RBX != 0) {\n            arg1._0_4_ = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x38) = 0x40f1b4;\n                uVar4 = (*pcVar1)();\n                *(*0x20 + -0x18) = uVar4;\n                piVar9 = *(*0x20 + 0x10);\n                *(piVar9 + 1) = *(piVar9 + 1) ^ 4;\n                if (piVar9[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_00 = 1;\n                    *(*0x20 + -0x38) = 0x40f1e5;\n                    iVar5 = fcn.0040ba40();\n                    if (*0x5d3dd0 == 0) {\n                        piVar9 = *(*0x20 + 0x10);\n                        piVar9[2] = iVar5;\n                    }\n                    else {\n                        piVar9 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x38) = 0x40f207;\n                        fcn.0045c5a0(arg1_00, arg2, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    uVar8 = (1 << (*(piVar9 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar9[3] != 0) {\n                        *(*0x20 + -0x10) = uVar8;\n                        *(*0x20 + -0x38) = 0x40f259;\n                        fcn.0040f460(uVar8);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar8 = *(*0x20 + -0x10);\n                        iVar5 = *(*0x20 + 8);\n                        piVar9 = *(*0x20 + 0x10);\n                    }\n                    uVar3 = uVar4 >> 0x38;\n                    iVar6 = 0;\n                    in_R8 = 0;\n                    iVar2 = uVar8 * *(iVar5 + 0x52) + piVar9[2];\n                    do {\n                        arg1_01 = iVar2;\n                        for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                            if (*(arg1_01 + uVar4) < 2) {\n                                uVar8 = uVar4;\n                                iVar2 = arg1_01;\n                                if (iVar6 != 0) {\n                                    uVar8 = in_R8;\n                                    iVar2 = iVar6;\n                                }\n                                iVar6 = iVar2;\n                                in_R8 = uVar8;\n                                if (*(arg1_01 + uVar4) == 0) goto code_r0x0040f28b;\n                            }\n                            else {\n                                in_R9 = uVar4;\n                                if (*(*0x20 + 0x18) == *(arg1_01 + uVar4 * 4 + 8)) goto code_r0x0040f3da;\n                            }\n                        }\n                        iVar2 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n                    } while (iVar2 != 0);\ncode_r0x0040f28b:\n                    if (piVar9[3] != 0) goto code_r0x0040f382;\n                    uVar7 = *(piVar9 + 9);\n                    if ((*piVar9 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar9 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar9 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x0040f382;\n                    }\n                    *(*0x20 + -0x38) = 0x40f21b;\n                    fcn.0040e500();\n                    piVar9 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040f414;\n        }\n        goto code_r0x0040f425;\n    }\n    goto code_r0x0040f439;\ncode_r0x0040f382:\n    uVar4 = in_R8;\n    if (iVar6 == 0) {\n        *(*0x20 + -0x38) = 0x40f395;\n        iVar6 = fcn.0040cc80(arg1_01);\n        iVar5 = *(*0x20 + 8);\n        piVar9 = *(*0x20 + 0x10);\n        uVar4 = 0;\n        uVar3 = *(*0x20 + -0x18) >> 0x38;\n    }\n    arg1_01 = iVar6;\n    if (uVar3 < 5) {\n        uVar3 = uVar3 + 5;\n    }\n    in_R9 = uVar4 & 7;\n    *(arg1_01 + in_R9) = uVar3;\n    in_R8 = *(*0x20 + 0x18);\n    *(arg1_01 + uVar4 * 4 + 8) = *(*0x20 + 0x18);\n    *piVar9 = *piVar9 + 1;\ncode_r0x0040f3da:\n    uVar3 = *(iVar5 + 0x51);\n    if ((*(piVar9 + 1) & 4) != 0) {\n        *(piVar9 + 1) = *(piVar9 + 1) & 0xfb;\n        return uVar4 * uVar3 + arg1_01 + 0x28;\n    }\n    *(*0x20 + -0x38) = 0x40f414;\n    fcn.004330a0();\n    arg1._0_4_ = arg1_01;\ncode_r0x0040f414:\n    *(*0x20 + -0x38) = 0x40f425;\n    fcn.004330a0();\ncode_r0x0040f425:\n    unaff_RBX = 0x4f9e48;\n    *(*0x20 + -0x38) = 0x40f438;\n    in_RAX = fcn.00432920();\ncode_r0x0040f439:\n    *(puVar10 + 8) = in_RAX;\n    *(puVar10 + 0x10) = unaff_RBX;\n    *(puVar10 + 0x18) = arg1;\n    *(puVar10 + -8) = 0x40f44c;\n    fcn.0045a360();\n    in_RAX = *(puVar10 + 8);\n    unaff_RBX = *(puVar10 + 0x10);\n    arg1._0_4_ = *(puVar10 + 0x18);\n    *0x20 = puVar10;\n    goto code_r0x0040f160;\n}\n",
        "token_count": 2021
    },
    "0040f460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040f460(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040f500((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040f500(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0040fa60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040fa60(uint64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint8_t uVar7;\n    ulong arg1_00;\n    uint64_t uVar8;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x0040fa60:\n    puVar10 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar10 = *0x20 + -0x30;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        if (unaff_RBX != 0) {\n            arg1 = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x38) = 0x40fab4;\n                uVar4 = (*pcVar1)();\n                *(*0x20 + -0x18) = uVar4;\n                piVar9 = *(*0x20 + 0x10);\n                *(piVar9 + 1) = *(piVar9 + 1) ^ 4;\n                if (piVar9[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_00 = 1;\n                    *(*0x20 + -0x38) = 0x40fae5;\n                    iVar5 = fcn.0040ba40();\n                    if (*0x5d3dd0 == 0) {\n                        piVar9 = *(*0x20 + 0x10);\n                        piVar9[2] = iVar5;\n                    }\n                    else {\n                        piVar9 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x38) = 0x40fb07;\n                        fcn.0045c5a0(arg1_00, arg2, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    uVar8 = (1 << (*(piVar9 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar9[3] != 0) {\n                        *(*0x20 + -0x10) = uVar8;\n                        *(*0x20 + -0x38) = 0x40fb59;\n                        fcn.004100a0(uVar8);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar8 = *(*0x20 + -0x10);\n                        iVar5 = *(*0x20 + 8);\n                        piVar9 = *(*0x20 + 0x10);\n                    }\n                    uVar3 = uVar4 >> 0x38;\n                    uVar6 = 0;\n                    in_R8 = 0;\n                    uVar4 = uVar8 * *(iVar5 + 0x52) + piVar9[2];\n                    do {\n                        arg1 = uVar4;\n                        for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                            if (*(arg1 + uVar4) < 2) {\n                                uVar8 = uVar4;\n                                uVar2 = arg1;\n                                if (uVar6 != 0) {\n                                    uVar8 = in_R8;\n                                    uVar2 = uVar6;\n                                }\n                                uVar6 = uVar2;\n                                in_R8 = uVar8;\n                                if (*(arg1 + uVar4) == 0) goto code_r0x0040fb8b;\n                            }\n                            else {\n                                in_R9 = uVar4;\n                                if (*(*0x20 + 0x18) == *(arg1 + uVar4 * 8 + 8)) goto code_r0x0040fcda;\n                            }\n                        }\n                        uVar4 = *(arg1 + *(iVar5 + 0x52) + -8);\n                    } while (uVar4 != 0);\ncode_r0x0040fb8b:\n                    if (piVar9[3] != 0) goto code_r0x0040fc82;\n                    uVar7 = *(piVar9 + 9);\n                    if ((*piVar9 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar9 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar9 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x0040fc82;\n                    }\n                    *(*0x20 + -0x38) = 0x40fb1b;\n                    fcn.0040e500();\n                    piVar9 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040fd14;\n        }\n        goto code_r0x0040fd25;\n    }\n    goto code_r0x0040fd39;\ncode_r0x0040fc82:\n    uVar4 = in_R8;\n    if (uVar6 == 0) {\n        *(*0x20 + -0x38) = 0x40fc95;\n        uVar6 = fcn.0040cc80(arg1);\n        iVar5 = *(*0x20 + 8);\n        piVar9 = *(*0x20 + 0x10);\n        uVar4 = 0;\n        uVar3 = *(*0x20 + -0x18) >> 0x38;\n    }\n    arg1 = uVar6;\n    if (uVar3 < 5) {\n        uVar3 = uVar3 + 5;\n    }\n    in_R9 = uVar4 & 7;\n    *(arg1 + in_R9) = uVar3;\n    in_R8 = *(*0x20 + 0x18);\n    *(arg1 + uVar4 * 8 + 8) = in_R8;\n    *piVar9 = *piVar9 + 1;\ncode_r0x0040fcda:\n    uVar3 = *(iVar5 + 0x51);\n    if ((*(piVar9 + 1) & 4) != 0) {\n        *(piVar9 + 1) = *(piVar9 + 1) & 0xfb;\n        return uVar4 * uVar3 + arg1 + 0x48;\n    }\n    *(*0x20 + -0x38) = 0x40fd14;\n    fcn.004330a0();\ncode_r0x0040fd14:\n    *(*0x20 + -0x38) = 0x40fd25;\n    fcn.004330a0();\ncode_r0x0040fd25:\n    unaff_RBX = 0x4f9e48;\n    *(*0x20 + -0x38) = 0x40fd38;\n    in_RAX = fcn.00432920();\ncode_r0x0040fd39:\n    *(puVar10 + 8) = in_RAX;\n    *(puVar10 + 0x10) = unaff_RBX;\n    *(puVar10 + 0x18) = arg1;\n    *(puVar10 + -8) = 0x40fd4d;\n    fcn.0045a360();\n    in_RAX = *(puVar10 + 8);\n    unaff_RBX = *(puVar10 + 0x10);\n    arg1 = *(puVar10 + 0x18);\n    *0x20 = puVar10;\n    goto code_r0x0040fa60;\n}\n",
        "token_count": 1972
    },
    "0040fd80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040fd80(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    ulong arg1_00;\n    uint64_t arg1_01;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t arg1_02;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x0040fd80:\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x30;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        if (unaff_RBX != 0) {\n            arg1 = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x38) = 0x40fdd4;\n                uVar4 = (*pcVar1)();\n                *(*0x20 + -0x18) = uVar4;\n                piVar8 = *(*0x20 + 0x10);\n                *(piVar8 + 1) = *(piVar8 + 1) ^ 4;\n                if (piVar8[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_00 = 1;\n                    *(*0x20 + -0x38) = 0x40fe05;\n                    iVar5 = fcn.0040ba40();\n                    if (*0x5d3dd0 == 0) {\n                        piVar8 = *(*0x20 + 0x10);\n                        piVar8[2] = iVar5;\n                    }\n                    else {\n                        piVar8 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x38) = 0x40fe27;\n                        fcn.0045c5a0(arg1_00, arg2, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    arg1_01 = (1 << (*(piVar8 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar8[3] != 0) {\n                        *(*0x20 + -0x10) = arg1_01;\n                        *(*0x20 + -0x38) = 0x40fe79;\n                        fcn.004100a0(arg1_01);\n                        uVar4 = *(*0x20 + -0x18);\n                        arg1_01 = *(*0x20 + -0x10);\n                        iVar5 = *(*0x20 + 8);\n                        piVar8 = *(*0x20 + 0x10);\n                    }\n                    uVar3 = uVar4 >> 0x38;\n                    iVar6 = 0;\n                    in_R8 = 0;\n                    iVar2 = arg1_01 * *(iVar5 + 0x52) + piVar8[2];\n                    do {\n                        arg1_02 = iVar2;\n                        for (arg1 = 0; arg1 < 8; arg1 = arg1 + 1) {\n                            if (*(arg1_02 + arg1) < 2) {\n                                uVar4 = arg1;\n                                iVar2 = arg1_02;\n                                if (iVar6 != 0) {\n                                    uVar4 = in_R8;\n                                    iVar2 = iVar6;\n                                }\n                                iVar6 = iVar2;\n                                in_R8 = uVar4;\n                                if (*(arg1_02 + arg1) == 0) goto code_r0x0040feab;\n                            }\n                            else {\n                                in_R9 = arg1;\n                                if (*(*0x20 + 0x18) == *(arg1_02 + arg1 * 8 + 8)) goto code_r0x00410011;\n                            }\n                        }\n                        iVar2 = *(arg1_02 + *(iVar5 + 0x52) + -8);\n                    } while (iVar2 != 0);\ncode_r0x0040feab:\n                    if (piVar8[3] != 0) goto code_r0x0040ffa8;\n                    uVar7 = *(piVar8 + 9);\n                    if ((*piVar8 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar8 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar8 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x0040ffa8;\n                    }\n                    *(*0x20 + -0x38) = 0x40fe3b;\n                    fcn.0040e500();\n                    piVar8 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0041004b;\n        }\n        goto code_r0x0041005c;\n    }\n    goto code_r0x00410070;\ncode_r0x0040ffa8:\n    arg1 = in_R8;\n    if (iVar6 == 0) {\n        *(*0x20 + -0x38) = 0x40ffbb;\n        iVar6 = fcn.0040cc80(arg1_02);\n        iVar5 = *(*0x20 + 8);\n        piVar8 = *(*0x20 + 0x10);\n        arg1 = 0;\n        uVar3 = *(*0x20 + -0x18) >> 0x38;\n    }\n    arg1_02 = iVar6;\n    if (uVar3 < 5) {\n        uVar3 = uVar3 + 5;\n    }\n    in_R9 = arg1 & 7;\n    *(arg1_02 + in_R9) = uVar3;\n    in_R8 = *(*0x20 + 0x18);\n    if (*0x5d3dd0 == 0) {\n        *(arg1_02 + arg1 * 8 + 8) = in_R8;\n    }\n    else {\n        *(*0x20 + -0x38) = 0x41000e;\n        fcn.0045c720(arg1, iVar5, in_R8, in_R9);\n    }\n    *piVar8 = *piVar8 + 1;\ncode_r0x00410011:\n    arg1 = arg1 * *(iVar5 + 0x51);\n    if ((*(piVar8 + 1) & 4) != 0) {\n        *(piVar8 + 1) = *(piVar8 + 1) & 0xfb;\n        return arg1 + arg1_02 + 0x48;\n    }\n    *(*0x20 + -0x38) = 0x41004b;\n    fcn.004330a0();\ncode_r0x0041004b:\n    *(*0x20 + -0x38) = 0x41005c;\n    fcn.004330a0();\ncode_r0x0041005c:\n    unaff_RBX = 0x4f9e48;\n    *(*0x20 + -0x38) = 0x41006f;\n    in_RAX = fcn.00432920();\ncode_r0x00410070:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    *(puVar9 + 0x18) = arg1;\n    *(puVar9 + -8) = 0x410085;\n    fcn.0045a360();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    arg1 = *(puVar9 + 0x18);\n    *0x20 = puVar9;\n    goto code_r0x0040fd80;\n}\n",
        "token_count": 2032
    },
    "004100a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004100a0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.00410140((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.00410140(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "00410960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00410960(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int64_t *arg1_00;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint8_t uVar8;\n    ulong arg1_01;\n    uint64_t arg1_02;\n    int64_t **ppiVar9;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t **unaff_RDI;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    int64_t **ppiVar12;\n    int64_t **ppiVar13;\n    int64_t unaff_R14;\n    \ncode_r0x00410960:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x20) = unaff_RDI;\n        if (unaff_RBX != 0) {\n            arg1 = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar2 = **(in_RAX + 0x48);\n                *(*0x20 + -0x68) = 0x4109b9;\n                uVar5 = (*pcVar2)();\n                *(*0x20 + -0x38) = uVar5;\n                piVar10 = *(*0x20 + 0x10);\n                *(piVar10 + 1) = *(piVar10 + 1) ^ 4;\n                if (piVar10[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_01 = 1;\n                    *(*0x20 + -0x68) = 0x4109ea;\n                    iVar6 = fcn.0040ba40();\n                    if (*0x5d3dd0 == 0) {\n                        piVar10 = *(*0x20 + 0x10);\n                        piVar10[2] = iVar6;\n                    }\n                    else {\n                        piVar10 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x68) = 0x410a0c;\n                        fcn.0045c5a0(arg1_01, arg2, in_R8, in_R9);\n                    }\n                    uVar5 = *(*0x20 + -0x38);\n                }\n                iVar6 = *(*0x20 + 8);\n                do {\n                    arg1_02 = (1 << (*(piVar10 + 9) & 0x3f)) - 1U & uVar5;\n                    if (piVar10[3] != 0) {\n                        *(*0x20 + -0x30) = arg1_02;\n                        *(*0x20 + -0x68) = 0x410a65;\n                        fcn.00410d60(arg1_02);\n                        uVar5 = *(*0x20 + -0x38);\n                        arg1_02 = *(*0x20 + -0x30);\n                        iVar6 = *(*0x20 + 8);\n                        piVar10 = *(*0x20 + 0x10);\n                    }\n                    uVar1 = *(iVar6 + 0x52);\n                    iVar3 = piVar10[2];\n                    uVar7 = uVar5 >> 0x38;\n                    if (uVar5 >> 0x38 < 5) {\n                        uVar7 = (uVar5 >> 0x38) + 5;\n                    }\n                    *(*0x20 + -0x41) = uVar7;\n                    unaff_RDI = NULL;\n                    in_R8 = NULL;\n                    ppiVar12 = arg1_02 * uVar1 + iVar3;\n                    do {\n                        ppiVar9 = ppiVar12;\n                        *(*0x20 + -0x10) = ppiVar9;\n                        for (ppiVar12 = NULL; uVar4 = uVar7,  ppiVar12 < 0x8; ppiVar12 = ppiVar12 + 1) {\n                            uVar8 = *(ppiVar9 + ppiVar12);\n                            if (uVar4 == uVar8) {\n                                ppiVar13 = ppiVar9 + ppiVar12 * 2 + 1;\n                                if (ppiVar9[ppiVar12 * 2 + 2] == *(*0x20 + 0x20)) {\n                                    if (*(*0x20 + 0x18) == *ppiVar13) {\n                                        uVar4 = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x28) = ppiVar12;\n                                        *(*0x20 + -0x20) = ppiVar13;\n                                        *(*0x20 + -0x40) = in_R8;\n                                        *(*0x20 + -0x18) = unaff_RDI;\n                                        *(*0x20 + -0x68) = 0x410bd3;\n                                        uVar4 = fcn.004021c0(*(*0x20 + 0x20), iVar6);\n                                        uVar4 = uVar4 ^ 1;\n                                        iVar6 = *(*0x20 + 8);\n                                        piVar10 = *(*0x20 + 0x10);\n                                        unaff_RDI = *(*0x20 + -0x18);\n                                        in_R8 = *(*0x20 + -0x40);\n                                        ppiVar13 = *(*0x20 + -0x20);\n                                        ppiVar12 = *(*0x20 + -0x28);\n                                        ppiVar9 = *(*0x20 + -0x10);\n                                        uVar7 = *(*0x20 + -0x41);\n                                    }\n                                    if (uVar4 == 0) {\n                                        in_R9 = ppiVar13;\n                                        if (*0x5d3dd0 == 0) {\n                                            *ppiVar13 = *(*0x20 + 0x18);\n                                        }\n                                        else {\n                                            *(*0x20 + -0x68) = 0x410c32;\n                                            fcn.0045c6a0();\n                                            unaff_RDI = ppiVar13;\n                                        }\n                                        goto code_r0x00410cae;\n                                    }\n                                }\n                            }\n                            else {\n                                if ((uVar8 < 2) && (unaff_RDI == NULL)) {\n                                    unaff_RDI = ppiVar9;\n                                    in_R8 = ppiVar12;\n                                }\n                                if (uVar8 == 0) goto code_r0x00410aa8;\n                            }\n                        }\n                        ppiVar12 = *(ppiVar9 + (*(iVar6 + 0x52) - 8));\n                    } while (ppiVar12 != NULL);\ncode_r0x00410aa8:\n                    if (piVar10[3] != 0) goto code_r0x00410c37;\n                    uVar8 = *(piVar10 + 9);\n                    if ((*piVar10 + 1U < 9) ||\n                       (uVar5 = 1 << (uVar8 & 0x3f), \n                       *piVar10 + 1U <= (uVar5 >> 1) * 5 + (uVar5 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar8) {\n                            uVar8 = 0xf;\n                        }\n                        if (*(piVar10 + 10) < 1 << (uVar8 & 0xf)) goto code_r0x00410c37;\n                    }\n                    *(*0x20 + -0x68) = 0x410a25;\n                    fcn.0040e500();\n                    piVar10 = *(*0x20 + 0x10);\n                    uVar5 = *(*0x20 + -0x38);\n                    iVar6 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x00410ceb;\n        }\n        goto code_r0x00410cfc;\n    }\n    goto code_r0x00410d10;\ncode_r0x00410c37:\n    ppiVar12 = in_R8;\n    if (unaff_RDI == NULL) {\n        *(*0x20 + -0x68) = 0x410c4a;\n        unaff_RDI = fcn.0040cc80(ppiVar9);\n        iVar6 = *(*0x20 + 8);\n        piVar10 = *(*0x20 + 0x10);\n        ppiVar12 = NULL;\n        uVar4 = *(*0x20 + -0x41);\n    }\n    *(unaff_RDI + (ppiVar12 & 7)) = uVar4;\n    ppiVar9 = unaff_RDI + ppiVar12 * 2 + 1;\n    arg1_00 = *(*0x20 + 0x20);\n    in_R9 = *(*0x20 + 0x18);\n    unaff_RDI[ppiVar12 * 2 + 2] = arg1_00;\n    if (*0x5d3dd0 == 0) {\n        *ppiVar9 = in_R9;\n        in_R8 = unaff_RDI;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x410ca5;\n        fcn.0045c740(arg1_00, iVar6, unaff_RDI);\n        in_R8 = unaff_RDI;\n    }\n    *piVar10 = *piVar10 + 1;\n    unaff_RDI = ppiVar9;\n    ppiVar9 = in_R8;\ncode_r0x00410cae:\n    uVar4 = *(iVar6 + 0x51);\n    uVar8 = *(piVar10 + 1);\n    arg1 = uVar8;\n    if ((uVar8 & 4) != 0) {\n        *(piVar10 + 1) = uVar8 & 0xfb;\n        return ppiVar9 + ppiVar12 * uVar4 + 0x88;\n    }\n    *(*0x20 + -0x68) = 0x410ceb;\n    fcn.004330a0();\ncode_r0x00410ceb:\n    *(*0x20 + -0x68) = 0x410cfc;\n    fcn.004330a0();\ncode_r0x00410cfc:\n    unaff_RBX = 0x4f9e48;\n    *(*0x20 + -0x68) = 0x410d0f;\n    in_RAX = fcn.00432920();\ncode_r0x00410d10:\n    *(puVar11 + 8) = in_RAX;\n    *(puVar11 + 0x10) = unaff_RBX;\n    *(puVar11 + 0x18) = arg1;\n    *(puVar11 + 0x20) = unaff_RDI;\n    *(puVar11 + -8) = 0x410d29;\n    fcn.0045a360();\n    in_RAX = *(puVar11 + 8);\n    unaff_RBX = *(puVar11 + 0x10);\n    arg1 = *(puVar11 + 0x18);\n    unaff_RDI = *(puVar11 + 0x20);\n    *0x20 = puVar11;\n    goto code_r0x00410960;\n}\n",
        "token_count": 2686
    },
    "00410d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410d60(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.00410e00((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.00410e00(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00411220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411220(int64_t arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != arg1) {\n        if ((*0x5d3dd4 != '\\0') && (in_RAX[1] != 0)) {\n            fcn.00411ca0(in_RAX[1]);\n        }\n        fcn.0045d380(*in_RAX);\n        if (*0x5d3dd5 != '\\0') {\n            fcn.00403d20(arg1);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "004112c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004112c0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint32_t uVar4;\n    \n    if ((((*0x5d3dd4 != '\\0') && (in_RAX != 0)) && (*(in_RAX + 8) != 0)) && (7 < unaff_RDI)) {\n        fcn.00411ca0(unaff_RDI);\n    }\n    fcn.0045d380(unaff_RDI);\n    iVar2 = 0;\n    while( true ) {\n        if (8 < iVar2) {\n            return;\n        }\n        uVar3 = iVar2 >> 3;\n        if (1 < uVar3) break;\n        arg1_00 = iVar2 + uVar3 * -8;\n        if (arg1_00 < 0) {\n            fcn.004316c0();\n            break;\n        }\n        uVar4 = 1 << (arg1_00 & 0x1f) & -(arg1_00 < 0x20);\n        if ((uVar4 & *(unaff_RSI + 0x108 + uVar3)) != 0) {\n            if (*0x5d3dd0 == 0) {\n                *(unaff_RSI + 0xc0 + iVar2 * 8) = *(unaff_RSI + iVar2 * 8);\n            }\n            else {\n                fcn.0045c6e0(arg1_00, unaff_RSI, -(arg1_00 < 0x20), uVar4);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0045ca40(2);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 439
    },
    "004113e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004113e0(int64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    if (unaff_RSI < arg1) {\n        arg1 = unaff_RSI;\n    }\n    if (arg1 == 0) {\n        return 0;\n    }\n    if (*0x5d3dd5 != '\\0') {\n        fcn.00403dc0(unaff_RDI);\n    }\n    if (unaff_RDI != unaff_RBX) {\n        arg1_00 = arg1 * *in_RAX;\n        if (*0x5d3dd4 != '\\0') {\n            fcn.00411ca0((arg1_00 - *in_RAX) + in_RAX[1]);\n        }\n        fcn.0045d380(arg1_00);\n        return arg1;\n    }\n    return arg1;\n}\n",
        "token_count": 231
    },
    "004114c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004114c0(void)\n\n{\n    ulong *in_RAX;\n    \n    if ((*0x5d3dd4 != '\\0') && (in_RAX[1] != 0)) {\n        fcn.00411ca0(in_RAX[1]);\n    }\n    fcn.0045d0c0(*in_RAX);\n    return;\n}\n",
        "token_count": 82
    },
    "004116e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004116e0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00434840();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.004348c0();\n    if (in_RAX != 0) {\n        if (*(in_RAX + 99) == '\\x01') {\n            fcn.00434840();\n            fcn.00435140();\n            fcn.004348c0();\n        }\n        else {\n            fcn.00434840();\n            fcn.00435140();\n            fcn.004348c0();\n        }\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434fa0();\n        fcn.00435140();\n        fcn.00434fa0();\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.004348c0();\n    }\n    fcn.00434840();\n    fcn.00434aa0();\n    fcn.004348c0();\n    if (arg1 != 0) goto code_r0x00411830;\n    do {\n        *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n        fcn.004330a0();\ncode_r0x00411830:\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434fa0();\n        fcn.00435140();\n        fcn.00434fa0();\n        fcn.00435140();\n        fcn.004348c0();\n        fcn.0041d120(arg1);\n    } while( true );\n}\n",
        "token_count": 441
    },
    "00411920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00411920(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x5a5f90);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 != 0) {\n        if (((*(iVar2 + 99) == '\\x01') && (uVar1 = *(iVar2 + 0x18),  uVar1 <= in_RAX)) &&\n           (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n            return *(iVar2 + 0x68) * (*(iVar2 + 0x5c) * (in_RAX - uVar1) >> 0x20) + uVar1;\n        }\n        if (*(iVar2 + 99) != '\\x02') {\n            if (*0x5d4000 != 0) {\n                fcn.004116e0(unaff_RBX);\n            }\n            return 0;\n        }\n        return 0;\n    }\n    if ((in_RAX == 0xdeaddeaddeaddead) && (*0x5d4000 != 0)) {\n        fcn.004116e0(unaff_RBX);\n    }\n    return 0;\n}\n",
        "token_count": 467
    },
    "00412320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412320(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    uint64_t unaff_RDI;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t iVar8;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    uVar7 = 1 << (unaff_RDI >> 3 & 7);\n    puVar5 = unaff_RSI + (unaff_RDI >> 6);\n    uVar4 = 0;\n    iVar8 = unaff_RBX;\n    do {\n        if (arg1 <= uVar4) {\n            return;\n        }\n        if (uVar7 == '\\0') {\n            if (puVar5[1] != 0) {\n                uVar7 = 1;\n                puVar5 = puVar5 + 1;\n                goto code_r0x004123a9;\n            }\n            uVar4 = uVar4 + 0x38;\n            puVar5 = puVar5 + 1;\n        }\n        else {\ncode_r0x004123a9:\n            if ((*puVar5 & uVar7) != 0) {\n                if (unaff_RBX == 0) {\n                    puVar2 = *(iVar1 + 0x1260);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = 0;\n                    iVar6 = *(iVar1 + 0x1260) + 0x10;\n                    *(iVar1 + 0x1260) = iVar6;\n                    if (*(iVar1 + 0x1268) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042c700();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n                else {\n                    puVar2 = *(iVar1 + 0x1260);\n                    uVar3 = *(uVar4 + unaff_RBX);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = uVar3;\n                    iVar6 = *(iVar1 + 0x1260) + 0x10;\n                    *(iVar1 + 0x1260) = iVar6;\n                    if (*(iVar1 + 0x1268) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042c700();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n            }\n            uVar7 = uVar7 << 1;\n        }\n        uVar4 = uVar4 + 8;\n    } while( true );\n}\n",
        "token_count": 670
    },
    "004124c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004124c0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint8_t *puVar5;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t iVar9;\n    \n    if (in_RAX != NULL) {\n        if (*in_RAX == unaff_RDI) {\n            if ((*(in_RAX + 0x17) & 0x40) == 0) {\n                if (*0x5d3dd4 != '\\0') {\n                    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    puVar5 = in_RAX[4];\n                    uVar7 = 0;\n                    iVar9 = unaff_RBX;\n                    for (uVar6 = 0; uVar6 <= in_RAX[1] && in_RAX[1] != uVar6; uVar6 = uVar6 + 8) {\n                        if ((uVar6 & 0x3f) == 0) {\n                            uVar7 = *puVar5;\n                            puVar5 = puVar5 + 1;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 1;\n                        }\n                        if ((uVar7 & 1) != 0) {\n                            puVar2 = *(iVar1 + 0x1260);\n                            uVar3 = *(uVar6 + arg1);\n                            *puVar2 = *(uVar6 + unaff_RBX);\n                            puVar2[1] = uVar3;\n                            iVar8 = *(iVar1 + 0x1260) + 0x10;\n                            *(iVar1 + 0x1260) = iVar8;\n                            if (*(iVar1 + 0x1268) == iVar8) {\n                                unaff_RBX = iVar9;\n                                fcn.0042c700();\n                                iVar9 = unaff_RBX;\n                            }\n                        }\n                    }\n                    return;\n                }\n                return;\n            }\n            fcn.00454b20();\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.004348c0();\n            fcn.004330a0();\n        }\n        fcn.00454b20();\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00435140();\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.00434aa0();\n        fcn.004348c0();\n        fcn.004330a0();\n    }\n    fcn.004330a0();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 686
    },
    "00413500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00413500(ulong arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint unaff_EBX;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong unaff_RDI;\n    uint64_t uVar6;\n    uint64_t in_R10;\n    ulong in_R11;\n    uint64_t unaff_R12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        uVar4 = unaff_RSI;\n        uVar6 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            if ((in_R10 & 0x1f) == 0) {\n                *(*0x20 + 0x38) = in_R10;\n                *(*0x20 + 0x20) = unaff_RSI;\n                *(*0x20 + -0x10) = in_RAX;\n                if (arg4 == arg3) {\n                    unaff_RDI = 2;\n                    *(*0x20 + -0x70) = 0x4135cc;\n                    arg3 = fcn.004139a0(in_RAX);\n                    uVar4 = *(*0x20 + 0x20);\n                    if (uVar4 != arg3 * 8) {\n                        *(*0x20 + -0x40) = arg3;\n                        *(*0x20 + -0x70) = 0x413628;\n                        fcn.00434840();\n                        *(*0x20 + -0x70) = 0x413639;\n                        fcn.00435140();\n                        *(*0x20 + -0x70) = 0x413645;\n                        fcn.00434e40();\n                        *(*0x20 + -0x70) = 0x413656;\n                        fcn.00435140();\n                        *(*0x20 + -0x70) = 0x413665;\n                        fcn.00434e40();\n                        *(*0x20 + -0x70) = 0x41366a;\n                        fcn.00434aa0();\n                        *(*0x20 + -0x70) = 0x41366f;\n                        fcn.004348c0();\n                        uVar2 = 0x2b;\n                        *(*0x20 + -0x70) = 0x413685;\n                        uVar1 = fcn.004330a0();\n                        goto code_r0x00413685;\n                    }\ncode_r0x004135e5:\n                    *(*0x20 + -0x70) = 0x413614;\n                    fcn.0045d0c0(*(*0x20 + -0x10) + (arg3 + 3 >> 2), *(*0x20 + 0x38) >> 5);\n                    return;\n                }\n                if (arg3 != 0) {\n                    uVar1 = arg4 / arg3;\n                    *(*0x20 + -0x38) = in_XMM15;\n                    *(*0x20 + -0x30) = in_XMM15;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    unaff_R12 = arg3 >> 3;\n                    uVar4 = unaff_RSI >> 3;\n                    uVar6 = unaff_R12 - uVar4;\n                    arg4 = unaff_RSI;\n                    if (uVar6 == 0) {\n                        uVar2 = 0;\n                        goto code_r0x00413685;\n                    }\n                    *(*0x20 + -0x38) = 1;\n                    if (uVar6 < 2) {\n                        uVar2 = 2;\n                        goto code_r0x00413685;\n                    }\n                    *(*0x20 + -0x36) = 0x81;\n                    uVar4 = uVar6 - 1;\n                    uVar2 = 3;\ncode_r0x004137d0:\n                    if (0x7f < uVar4) {\n                        if (0x27 < uVar2) goto code_r0x00413805;\ncode_r0x004137b9:\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4 | 0x80;\n                        uVar4 = uVar4 >> 7;\n                        uVar2 = uVar2 + 1;\n                        uVar6 = uVar4;\n                        goto code_r0x004137d0;\n                    }\n                    if (uVar2 < 0x28) {\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4;\n                        uVar2 = uVar2 + 1;\ncode_r0x00413685:\n                        if (uVar2 < 0x28) {\n                            *(*0x20 + (uVar2 - 0x38)) = 0x80;\n                            uVar6 = uVar2;\n                            while( true ) {\n                                uVar4 = uVar6 + 1;\n                                if (unaff_R12 < 0x80) break;\n                                if (0x27 < uVar4) goto code_r0x0041379f;\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12 | 0x80;\n                                unaff_R12 = unaff_R12 >> 7;\n                                uVar6 = uVar4;\n                            }\n                            if (uVar4 < 0x28) {\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12;\n                                uVar6 = uVar1 - 1;\n                                uVar5 = uVar4;\n                                while( true ) {\n                                    uVar4 = uVar5 + 1;\n                                    if (uVar6 < 0x80) break;\n                                    if (0x27 < uVar4) goto code_r0x00413785;\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6 | 0x80;\n                                    uVar6 = uVar6 >> 7;\n                                    unaff_R12 = uVar6;\n                                    uVar5 = uVar4;\n                                }\n                                if (uVar4 < 0x28) {\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6;\n                                    if (uVar5 + 2 < 0x28) {\n                                        *(*0x20 + -0x40) = arg3;\n                                        *(*0x20 + -0x48) = uVar1 - 1;\n                                        *(*0x20 + (uVar5 - 0x36)) = 0;\n                                        *(*0x20 + -0x70) = 0x413747;\n                                        fcn.004139a0(in_RAX);\n                                        arg3 = *(*0x20 + -0x40) * *(*0x20 + -0x48) + *(*0x20 + 0x20) >> 3;\n                                        goto code_r0x004135e5;\n                                    }\n                                    *(*0x20 + -0x70) = 0x413776;\n                                    fcn.0045ca40(0x28);\n                                }\n                                *(*0x20 + -0x70) = 0x413785;\n                                fcn.0045ca40(0x28);\ncode_r0x00413785:\n                                *(*0x20 + -0x70) = 0x413792;\n                                fcn.0045ca40(0x28);\n                            }\n                            *(*0x20 + -0x70) = 0x41379f;\n                            fcn.0045ca40(0x28);\ncode_r0x0041379f:\n                            *(*0x20 + -0x70) = 0x4137ac;\n                            fcn.0045ca40(0x28);\n                        }\n                        in_RAX = 0x28;\n                        *(*0x20 + -0x70) = 0x4137b9;\n                        uVar1 = fcn.0045ca40(0x28);\n                        goto code_r0x004137b9;\n                    }\n                    *(*0x20 + -0x70) = 0x413805;\n                    fcn.0045ca40(0x28);\ncode_r0x00413805:\n                    arg1._0_4_ = 0x28;\n                    *(*0x20 + -0x70) = 0x413812;\n                    fcn.0045ca40(0x28);\n                }\n                *(*0x20 + -0x70) = 0x413817;\n                fcn.00431720();\n            }\n            unaff_EBX = 0x27;\n            *(*0x20 + -0x70) = 0x413828;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = uVar4;\n        *(puVar3 + 0x28) = uVar6;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + 0x40) = in_R11;\n        *(puVar3 + -8) = 0x413859;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        in_R11 = *(puVar3 + 0x40);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 2419
    },
    "004139a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t * fcn.004139a0(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    uint8_t *puVar2;\n    uint64_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint8_t *unaff_RBX;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int64_t unaff_RDI;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint64_t uVar13;\n    int64_t iVar14;\n    uint8_t *puVar15;\n    uint8_t *puVar16;\n    \n    puVar11 = NULL;\n    puVar7 = arg1;\n    puVar8 = arg1;\n    puVar6 = NULL;\ncode_r0x00413b72:\n    while( true ) {\n        while( true ) {\n            for (; 0x7 < puVar6; puVar6 = puVar6 + -8) {\n                if (unaff_RDI == 1) {\n                    *puVar7 = puVar11;\n                    puVar7 = puVar7 + 1;\n                }\n                else {\n                    *puVar7 = puVar11 & 0xf | 0xf0;\n                    puVar7[1] = puVar11 >> 4 & 0xf | 0xf0;\n                    puVar7 = puVar7 + 2;\n                }\n                puVar11 = puVar11 >> 8;\n            }\n            uVar1 = *in_RAX;\n            puVar15 = uVar1 & 0x7f;\n            in_RAX = in_RAX + 1;\n            uVar4 = puVar6;\n            if (uVar1 < '\\0') break;\n            if (puVar15 == NULL) {\n                if (unaff_RBX == NULL) {\n                    if (unaff_RDI == 1) {\n                        iVar14 = (puVar7 - puVar8) * 8;\n                        for (puVar8 = puVar6 + (-puVar6 & 7); puVar8 != NULL; puVar8 = puVar8 + -8) {\n                            *puVar7 = puVar11;\n                            puVar11 = puVar11 >> 8;\n                            puVar7 = puVar7 + 1;\n                        }\n                    }\n                    else {\n                        iVar14 = (puVar7 - puVar8) * 4;\n                        for (puVar8 = puVar6 + (-puVar6 & 3); puVar8 != NULL; puVar8 = puVar8 + -4) {\n                            *puVar7 = puVar11 & 0xf | 0xf0;\n                            puVar11 = puVar11 >> 4;\n                            puVar7 = puVar7 + 1;\n                        }\n                    }\n                    return puVar6 + iVar14;\n                }\n                in_RAX = unaff_RBX;\n                unaff_RBX = NULL;\n            }\n            else {\n                for (uVar3 = 0; uVar3 < (uVar1 & 0x7f) >> 3; uVar3 = uVar3 + 1) {\n                    uVar13 = puVar11 | *in_RAX << (uVar4 & 0x3f);\n                    if (unaff_RDI == 1) {\n                        *puVar7 = uVar13;\n                        puVar7 = puVar7 + 1;\n                    }\n                    else {\n                        *puVar7 = uVar13 & 0xf | 0xf0;\n                        puVar7[1] = uVar13 >> 4 & 0xf | 0xf0;\n                        puVar7 = puVar7 + 2;\n                    }\n                    puVar11 = uVar13 >> 8;\n                    in_RAX = in_RAX + 1;\n                }\n                if ((uVar1 & 7) != 0) {\n                    puVar11 = puVar11 | *in_RAX << (uVar4 & 0x3f);\n                    puVar6 = puVar6 + (uVar1 & 7);\n                    in_RAX = in_RAX + 1;\n                }\n            }\n        }\n        if (puVar15 == NULL) {\n            uVar3 = 0;\n            while( true ) {\n                uVar1 = *in_RAX;\n                puVar15 = puVar15 | (uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40);\n                in_RAX = in_RAX + 1;\n                if (-1 < uVar1) break;\n                uVar3 = uVar3 + 7;\n            }\n        }\n        uVar13 = 0;\n        uVar3 = 0;\n        while( true ) {\n            uVar1 = *in_RAX;\n            uVar13 = uVar13 | -(uVar3 < 0x40) & (uVar1 & 0x7f) << (uVar3 & 0x3f);\n            in_RAX = in_RAX + 1;\n            if (-1 < uVar1) break;\n            uVar3 = uVar3 + 7;\n        }\n        puVar2 = uVar13 * puVar15;\n        if (puVar15 < 0x3a) break;\n        iVar14 = puVar15 - puVar6;\n        if (unaff_RDI == 1) {\n            uVar3 = iVar14 & 7;\n            puVar15 = puVar7 + -(iVar14 + 7U >> 3);\n            if (uVar3 != 0) {\n                puVar11 = puVar11 | (*puVar15 >> (-(uVar3 - 8) & 0x3f) & -(-(uVar3 - 8) < 0x40)) << (uVar4 & 0x3f);\n                puVar6 = puVar6 + uVar3;\n                puVar2 = puVar2 + -uVar3;\n                puVar15 = puVar15 + 1;\n                puVar8 = arg1;\n            }\n            for (uVar3 = puVar2 >> 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n                uVar13 = puVar11 | *puVar15 << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                *puVar7 = uVar13;\n                puVar11 = uVar13 >> 8;\n                puVar15 = puVar15 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            uVar5 = puVar2 & 7;\n            if (uVar5 != 0) {\n                puVar11 = puVar11 | ((1 << uVar5) - 1U & *puVar15) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                puVar6 = puVar6 + uVar5;\n            }\n        }\n        else {\n            uVar3 = iVar14 & 3;\n            puVar15 = puVar7 + -(iVar14 + 3U >> 2);\n            if (uVar3 != 0) {\n                puVar11 = puVar11 | ((*puVar15 & 0xf) >> (-(uVar3 - 4) & 0x3f) & -(-(uVar3 - 4) < 0x40)) <<\n                                    (uVar4 & 0x3f);\n                puVar6 = puVar6 + uVar3;\n                puVar2 = puVar2 + -uVar3;\n                puVar15 = puVar15 + 1;\n                puVar8 = arg1;\n            }\n            for (uVar3 = puVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n                uVar13 = puVar11 | (*puVar15 & 0xf) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                *puVar7 = uVar13 & 0xf | 0xf0;\n                puVar11 = uVar13 >> 4;\n                puVar15 = puVar15 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            uVar5 = puVar2 & 3;\n            if (uVar5 != 0) {\n                puVar11 = puVar11 | ((1 << uVar5) - 1U & *puVar15) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                puVar6 = puVar6 + uVar5;\n            }\n        }\n    }\n    puVar10 = puVar6;\n    puVar12 = puVar11;\n    puVar16 = puVar7;\n    if (unaff_RDI != 1) {\n        do {\n            puVar16 = puVar16 + -1;\n            puVar9 = puVar6;\n            if (puVar15 <= puVar10) goto code_r0x00413d25;\n            puVar10 = puVar10 + 4;\n            puVar12 = puVar12 << 4 | *puVar16 & 0xf;\n        } while( true );\n    }\n    do {\n        puVar16 = puVar16 + -1;\n        puVar9 = puVar6;\n        if (puVar15 <= puVar10) {\ncode_r0x00413d25:\n            puVar6 = puVar10;\n            if (puVar15 < puVar10) {\n                puVar16 = -(puVar10 - puVar15 < 0x40);\n                puVar12 = puVar12 >> (puVar10 - puVar15 & 0x3f) & puVar16;\n                puVar6 = puVar15;\n            }\n            if (puVar6 == 0x1) {\n                puVar6 = puVar2;\n                if (puVar12 == 0x1) {\n                    puVar12 = 0x1ffffffffffffff;\n                    puVar6 = 0x39;\n                }\n                goto code_r0x00413d8e;\n            }\n            puVar10 = puVar6 * 2;\n            puVar15 = puVar6;\n            if (0x39 < puVar10) goto code_r0x00413d8e;\n            for (; puVar15 < 0x41; puVar15 = puVar15 * 2) {\n                puVar10 = puVar12;\n                puVar12 = puVar12 << (puVar15 & 0x3f) & -(puVar15 < 0x40) | puVar12;\n                puVar16 = puVar6;\n            }\n            if (puVar6 != NULL) break;\n            puVar2 = fcn.00431720();\n        }\n        puVar10 = puVar10 + 8;\n        puVar12 = puVar12 << 8 | *puVar16;\n    } while( true );\n    puVar6 = puVar6 * SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x39)) / ZEXT816(puVar6), 0);\n    puVar12 = puVar12 & (1 << (puVar6 & 0x3f) & -(puVar6 < 0x40)) - 1;\ncode_r0x00413d8e:\n    while (puVar6 <= puVar2) {\n        puVar11 = puVar11 | puVar12 << (puVar9 & 0x3f) & -(puVar9 < 0x40);\n        puVar9 = puVar6 + puVar9;\n        if (unaff_RDI == 1) {\n            for (; 0x7 < puVar9; puVar9 = puVar9 + -8) {\n                *puVar7 = puVar11;\n                puVar11 = puVar11 >> 8;\n                puVar7 = puVar7 + 1;\n            }\n        }\n        else {\n            for (; 0x3 < puVar9; puVar9 = puVar9 + -4) {\n                *puVar7 = puVar11 & 0xf | 0xf0;\n                puVar11 = puVar11 >> 4;\n                puVar7 = puVar7 + 1;\n            }\n        }\n        puVar2 = puVar2 + -puVar6;\n    }\n    puVar6 = puVar9;\n    if (puVar2 != NULL) {\n        puVar11 = puVar11 | (puVar12 & (1 << (puVar2 & 0x3f) & -(puVar2 < 0x40)) - 1) << (puVar9 & 0x3f) &\n                            -(puVar9 < 0x40);\n        puVar6 = puVar9 + puVar2;\n    }\n    goto code_r0x00413b72;\n}\n",
        "token_count": 2905
    },
    "004140c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.004140c0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    piStack32 = NULL;\n    auStack24 = CONCAT88(&piStack32, 0x4141a0);\n    fcn.0045a220();\n    for (iVar2 = 0; iVar2 < 0x88; iVar2 = iVar2 + 1) {\n        piStack32[iVar2 + 5] = 0x5d41c0;\n    }\n    if (*0x5d3bd8 == 1) {\n        iVar2 = 0;\n    }\n    else {\n        iVar1 = fcn.0040c640();\n        iVar2 = iVar1;\n    }\n    *piStack32 = iVar2;\n    return piStack32;\n}\n",
        "token_count": 252
    },
    "00414a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00414ba6)\n\nint64_t fcn.00414a80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t *in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint64_t noname_1;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX >> 1 < 0x44) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x414ac6;\n                fcn.00422620();\n                if (*0x585d30 != '\\0') {\n                    *(*0x20 + -0x58) = 0x414ad4;\n                    fcn.00450100();\n                }\n                *(*0x20 + -0x30) = 0;\n                *(*0x20 + -0x2c) = 0;\n                uVar5 = *0x5a5f30 >> 1 & 1;\n                *(*0x20 + -0x3c) = uVar5;\n                *(*0x20 + -0x10) = uVar5 * 5;\n                *(*0x20 + -0x58) = 0x414b0b;\n                iVar1 = fcn.0042c000();\n                if (iVar1 != 0) {\n                    cVar4 = '\\0';\n                    goto code_r0x00414b14;\n                }\ncode_r0x00414b89:\n                uVar5 = *0x57fe7c & 0x80000000;\n                if (uVar5 == 0) {\n                    *0x57fe7c = *0x57fe7c + 1;\n                    LOCK();\n                }\n                *(*0x20 + -0x30) = *0x5a5f30;\n                *(*0x20 + -0x2c) = uVar5 == 0;\n                if (uVar5 == 0) {\n                    uVar5 = *(*0x20 + -0x3c);\n                    iVar1 = 100;\n                    while (noname_1 = uVar5,  -1 < iVar1) {\n                        if (1 < -(uVar5 - 1)) goto code_r0x00414db6;\n                        *(*0x20 + -0x38) = iVar1;\n                        *(*0x20 + -0x58) = 0x414c25;\n                        iVar1 = fcn.0042c000();\n                        if (iVar1 == 0) {\n                            iVar1 = *(*0x20 + -0x38);\n                            noname_1 = *(*0x20 + -0x3c);\n                            break;\n                        }\n                        *(*0x20 + -0x18) = iVar1;\n                        *(*0x20 + -0x58) = 0x414c3c;\n                        uVar2 = fcn.004212a0();\n                        *(*0x20 + -0x20) = uVar2;\n                        if (iVar1 != '\\0') {\n                            *(*0x20 + -0x58) = 0x414c54;\n                            fcn.00421760();\n                            *(*0x20 + -0x58) = 0x414c69;\n                            fcn.00420e60();\n                            cVar4 = '\\0';\n                            iVar1 = *(*0x20 + -0x18);\n                            goto code_r0x00414b14;\n                        }\n                        uVar5 = *(*0x20 + -0x3c);\n                        iVar1 = *(*0x20 + -0x38) + -1;\n                    }\n                    do {\n                        if (iVar1 < 0) goto code_r0x00414d5b;\n                        uVar6 = -(noname_1 + -1);\n                        if (1 < uVar6) {\n                            *(*0x20 + -0x58) = 0x414db6;\n                            fcn.0045ca40(2);\ncode_r0x00414db6:\n                            *(*0x20 + -0x58) = 0x414dc5;\n                            fcn.0045ca40(2);\n                            goto code_r0x00414dc5;\n                        }\n                        *(*0x20 + -0x38) = iVar1;\n                        iVar1 = uVar6 * 5;\n                        *(*0x20 + -0x58) = 0x414cce;\n                        iVar3 = fcn.0042c000();\n                        if (iVar3 == 0) goto code_r0x00414d5b;\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0x58) = 0x414ce9;\n                        uVar2 = fcn.004212a0();\n                        *(*0x20 + -0x28) = uVar2;\n                        if (iVar3 == '\\0') goto code_r0x00414c85;\n                        *(*0x20 + -0x58) = 0x414d05;\n                        fcn.00421760();\n                        *(*0x20 + -0x58) = 0x414d0f;\n                        iVar1 = fcn.00411580(iVar1, noname_1, param_3, param_4);\n                        if (*(*(*0x20 + -0x28) + 0x38) != iVar1) {\n                            *(*(*0x20 + -0x28) + 0x30) = iVar1;\n                            *(*0x20 + -0x58) = 0x414d4f;\n                            fcn.00420e60();\n                            cVar4 = '\\0';\n                            iVar1 = *(*0x20 + -0x18);\n                            goto code_r0x00414b14;\n                        }\n                        *(*0x20 + -0x58) = 0x414d31;\n                        fcn.0042be60();\ncode_r0x00414c85:\n                        iVar1 = *(*0x20 + -0x38) + -1;\n                        noname_1 = *(*0x20 + -0x3c);\n                    } while( true );\n                }\n                goto code_r0x00414d70;\n            }\ncode_r0x00414dc5:\n            *(*0x20 + -0x58) = 0x414dd2;\n            in_RAX = fcn.0045ca40(0x44);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x414ddd;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\ncode_r0x00414d5b:\n    *(*0x20 + -0x58) = 0x414d70;\n    fcn.00420e60();\ncode_r0x00414d70:\n    *(*0x20 + -0x3d) = *0x585d30;\n    if (*0x585d30 != '\\0') {\n        *(*0x20 + -0x58) = 0x414d85;\n        fcn.00450200();\n    }\n    *(*0x20 + -0x58) = 0x414d8f;\n    iVar1 = fcn.00414f00();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    cVar4 = *(*0x20 + -0x3d);\ncode_r0x00414b14:\n    *(*0x20 + -0x18) = iVar1;\n    if ((*0x585d30 != '\\0') && (cVar4 == '\\0')) {\n        *(*0x20 + -0x58) = 0x414b2b;\n        fcn.00450200();\n        iVar1 = *(*0x20 + -0x18);\n    }\n    if ((*(iVar1 + 0x38) != *(iVar1 + 0x60)) && (*(iVar1 + 0x30) != *(iVar1 + 0x38))) {\n        *(*0x20 + -0x58) = 0x414b53;\n        fcn.00411560();\n        iVar1 = *(*0x20 + -0x18);\n        *(iVar1 + 0x40) = *(iVar1 + 0x40) >> (*(iVar1 + 0x30) & 0x3f);\n        return iVar1;\n    }\n    *(*0x20 + -0x58) = 0x414b88;\n    fcn.004330a0();\n    goto code_r0x00414b89;\n}\n",
        "token_count": 2063
    },
    "00414e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00414e00(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = *0x5a5f30;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_RBX + 0x60) != 0) {\n                if (*(unaff_RBX + 0x58) == *0x5a5f30 + 1) {\n                    *(unaff_RBX + 0x58) = *0x5a5f30 - 1;\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x28) = 0x414ea9;\n                    fcn.00421760();\n                }\n                else {\n                    *(unaff_RBX + 0x58) = *0x5a5f30;\n                    if (*(unaff_RBX + 0x38) - *(unaff_RBX + 0x60) < 1) {\n                        *(*0x20 + -0x28) = 0x414e8d;\n                        fcn.0042be60((uVar1 >> 1 & 1) * 5);\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x414e73;\n                        fcn.0042be60((uVar1 >> 1 & 1) * 5);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x28) = 0x414ec5;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x414ed5;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 600
    },
    "004154a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004154a0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x38) = 0x4000;\n            *(*0x20 + -0x58) = 0x4154e5;\n            fcn.004304e0();\n            if (*(*0x20 + -0x30) != 0) {\n                return;\n            }\n            iVar1 = *(*0x20 + 8);\n            uVar2 = *(*0x20 + 0x10);\n            while( true ) {\n                if (uVar2 == 0) {\n                    return;\n                }\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x10) = iVar1;\n                uVar3 = uVar2;\n                while( true ) {\n                    *(*0x20 + -0x18) = uVar3;\n                    if (uVar3 < 0x1000) {\n                        bVar5 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0x40) = uVar3;\n                        *(*0x20 + -0x38) = 0x4000;\n                        *(*0x20 + -0x58) = 0x415590;\n                        fcn.004304e0();\n                        bVar5 = *(*0x20 + -0x30) == 0;\n                        uVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x18);\n                        iVar1 = *(*0x20 + -0x10);\n                    }\n                    if (!bVar5) break;\n                    uVar3 = uVar3 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar3 < 0x1000) break;\n                uVar2 = uVar2 - uVar3;\n                iVar1 = iVar1 + uVar3;\n            }\n            *(*0x20 + -0x58) = 0x4155ce;\n            fcn.0045dec0();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x20) = *(*0x20 + -0x50);\n            *(*0x20 + -0x58) = 0x4155ef;\n            fcn.00434840();\n            *(*0x20 + -0x58) = 0x415605;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x41560f;\n            fcn.00434e40();\n            *(*0x20 + -0x58) = 0x415625;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x41562f;\n            fcn.00434e40();\n            *(*0x20 + -0x58) = 0x415634;\n            fcn.00434aa0();\n            *(*0x20 + -0x58) = 0x415639;\n            fcn.004348c0();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x58) = 0x41564a;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x41565a;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1113
    },
    "00415680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00415680(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n            *(*0x20 + -0x50) = in_RAX;\n            *(*0x20 + -0x48) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x1000;\n            *(*0x20 + -0x38) = 4;\n            *(*0x20 + -0x60) = 0x4156ce;\n            fcn.00430560();\n            uVar3 = *(*0x20 + 8);\n            if (*(*0x20 + -0x30) == uVar3) {\n                return uVar3;\n            }\n            uVar2 = *(*0x20 + 0x10);\n            uVar4 = uVar2;\n            while( true ) {\n                if (uVar4 == 0) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar3;\n                uVar5 = uVar4;\n                while( true ) {\n                    *(*0x20 + -0x20) = uVar5;\n                    if (uVar5 < 0x1000) {\n                        bVar7 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n                        *(*0x20 + -0x50) = uVar3;\n                        *(*0x20 + -0x48) = uVar5;\n                        *(*0x20 + -0x40) = 0x1000;\n                        *(*0x20 + -0x38) = 4;\n                        *(*0x20 + -0x60) = 0x415785;\n                        fcn.00430560();\n                        bVar7 = *(*0x20 + -0x30) == 0;\n                        uVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar5 = *(*0x20 + -0x20);\n                        uVar2 = *(*0x20 + 0x10);\n                    }\n                    if (!bVar7) break;\n                    uVar5 = uVar5 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar5 < 0x1000) break;\n                uVar4 = uVar4 - uVar5;\n                uVar3 = uVar3 + uVar5;\n            }\n            *(*0x20 + -0x60) = 0x4157d3;\n            fcn.0045dec0();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar1 = *(*0x20 + -0x58);\n            *(*0x20 + -0x24) = iVar1;\n            if (iVar1 != 8) goto code_r0x00415849;\n            do {\n                *(*0x20 + -0x60) = 0x4157f8;\n                fcn.00434840();\n                *(*0x20 + -0x60) = 0x415809;\n                fcn.00435140();\n                *(*0x20 + -0x60) = 0x415813;\n                fcn.00434e40();\n                *(*0x20 + -0x60) = 0x415825;\n                fcn.00435140();\n                *(*0x20 + -0x60) = 0x41582e;\n                fcn.00434e40();\n                *(*0x20 + -0x60) = 0x415833;\n                fcn.00434aa0();\n                *(*0x20 + -0x60) = 0x415838;\n                fcn.004348c0();\n                *(*0x20 + -0x60) = 0x415849;\n                iVar1 = fcn.004330a0();\ncode_r0x00415849:\n            } while (iVar1 == 0x5af);\n            *(*0x20 + -0x60) = 0x415855;\n            fcn.00434840();\n            *(*0x20 + -0x60) = 0x415866;\n            fcn.00435140();\n            *(*0x20 + -0x60) = 0x415870;\n            fcn.00434e40();\n            *(*0x20 + -0x60) = 0x415885;\n            fcn.00435140();\n            *(*0x20 + -0x60) = 0x41588e;\n            fcn.00434e40();\n            *(*0x20 + -0x60) = 0x415893;\n            fcn.00434aa0();\n            *(*0x20 + -0x60) = 0x415898;\n            fcn.004348c0();\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x60) = 0x4158a9;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x4158b9;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1464
    },
    "004158e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004158e0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iStack24;\n    \n    fcn.0042c400();\n    fcn.004304e0();\n    if (iStack24 != 0) {\n        return;\n    }\n    fcn.0045dec0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434e40();\n    fcn.00435140();\n    fcn.00434e40();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.004330a0();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 163
    },
    "00415b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415b80(ulong arg1)\n\n{\n    ulong *puVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \ncode_r0x00415b80:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x5d3b6c == 0) {\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = 0x415bcd;\n            fcn.0040a360();\n            if ((*0x5d3c60 != NULL) && (*(*0x5d3c60 + 2) != 0x65)) goto code_r0x00415c4f;\n            if (*0x5d3c50 != NULL) goto code_r0x00415c2b;\n            *(*0x20 + -0x28) = 0x415bfc;\n            *0x5d3c50 = fcn.0040c7a0(0x5d58f8);\n            **0x5d3c50 = *0x5d3be0;\n            *0x5d3be0 = *0x5d3c50;\n            if (*0x5d3f40 != '\\0') goto code_r0x00415c2b;\n            iVar3 = 0;\n            do {\n                if (iVar3 < 0x40) {\n                    uVar2 = iVar3 + (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar3) >> 0x40, 0) + iVar3 >> 2) * -5\n                    ;\n                    if (4 < uVar2) goto code_r0x00415d86;\n                }\n                else {\ncode_r0x00415c2b:\n                    puVar1 = *0x5d3c50;\n                    puVar4 = *0x5d3c50 + 1;\n                    *0x5d3c50 = (*0x5d3c50)[1];\n                    *puVar4 = *0x5d3c60;\n                    *0x5d3c60 = puVar1;\ncode_r0x00415c4f:\n                    puVar4 = *0x5d3c60;\n                    uVar2 = *(*0x5d3c60 + 2);\n                    if (uVar2 < 0x65) {\n                        LOCK();\n                        *(*0x5d3c60 + 2) = *(*0x5d3c60 + 2) + 1;\n                        iVar3 = uVar2 * 5;\n                        if (*0x5d3dd0 == 0) {\n                            puVar4[uVar2 * 5 + 3] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x415cb8;\n                            fcn.0045c740(iVar3, puVar4, puVar4 + uVar2 * 5 + 4);\n                        }\n                        puVar4[iVar3 + 5] = *(*0x20 + 0x18);\n                        if (*0x5d3dd0 == 0) {\n                            puVar4[iVar3 + 6] = *(*0x20 + 0x20);\n                            puVar4[iVar3 + 7] = *(*0x20 + 0x28);\n                            puVar4[iVar3 + 4] = *(*0x20 + 8);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x415cf8;\n                            fcn.0045c6a0(*(*0x20 + 0x20));\n                            *(*0x20 + -0x28) = 0x415d05;\n                            fcn.0045c6a0(*(*0x20 + 0x28));\n                            *(*0x20 + -0x28) = 0x415d12;\n                            fcn.0045c6a0(*(*0x20 + 8));\n                        }\n                        *0x5d3b29 = 1;\n                        *(*0x20 + -0x28) = 0x415d27;\n                        fcn.0040a580();\n                        return;\n                    }\n                    iVar3 = 0x65;\n                    *(*0x20 + -0x28) = 0x415d3b;\n                    uVar2 = fcn.0045ca40(0x65);\n                }\n                unaff_RSI = 0x5d3f40;\n                *(iVar3 + 0x5d3f40) = *(uVar2 + 0x564470);\n                iVar3 = iVar3 + 1;\n            } while( true );\n        }\n        goto code_r0x00415d90;\n    }\n    goto code_r0x00415da6;\ncode_r0x00415d86:\n    arg1 = 5;\n    *(*0x20 + -0x28) = 0x415d90;\n    fcn.0045ca40(5);\ncode_r0x00415d90:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x28) = 0x415da5;\n    in_RAX = fcn.004330a0();\ncode_r0x00415da6:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x415dc5;\n    fcn.0045a360();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x00415b80;\n}\n",
        "token_count": 1590
    },
    "00415e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00415e00(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    if ((*0x5d3b28 == '\\0') || (*0x5d3b29 == '\\0')) {\n        uVar1 = 0;\n    }\n    else {\n        *0x5d3b28 = '\\0';\n        *0x5d3b29 = '\\0';\n        uVar1 = *0x57efa8;\n    }\n    fcn.0040a580();\n    return uVar1;\n}\n",
        "token_count": 181
    },
    "00415e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415eac)\n\nvoid fcn.00415e80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x5d3b58 == 0) {\n        LOCK();\n        *0x5d3b58 = 1;\n        fcn.0043da80();\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00416340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041677c)\n\nvoid fcn.00416340(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint64_t arg1_00;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    ulong unaff_RBX;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t iVar11;\n    int64_t iVar12;\n    ulong unaff_RDI;\n    uint8_t uVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if (*0x5d402c != 0) {\n                return;\n            }\n            iVar4 = *(*0x20 + 8);\n            if (iVar4 != 0) {\n                uVar8 = *(iVar4 + 0x17) & 0x1f;\n                uVar3 = uVar8;\n                if (uVar8 == '\\x16') {\n                    if (*(iVar4 + 0x30) != 0) {\n                        *(*0x20 + -0x58) = iVar4;\n                        uVar5 = 0;\n                        *(*0x20 + -0xd8) = 0x4163d8;\n                        uVar3 = fcn.00411920(0);\n                        if (uVar3 != 0) {\n                            uVar7 = *(*0x20 + 0x10);\n                            if (uVar3 == uVar7) {\n                                iVar4 = *(*0x20 + -0x58);\n                            }\n                            else {\n                                iVar4 = *(*0x20 + -0x58);\n                                puVar1 = *(iVar4 + 0x30);\n                                if (((puVar1 == NULL) || (puVar1[1] != 0)) || (0xf < *puVar1)) goto code_r0x0041687d;\n                            }\n                            iVar11 = *(*0x20 + 0x18);\n                            if (iVar11 == 0) {\n                                *(*0x20 + -0x48) =\n                                     CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                *(*0x20 + -0x48) = 0x416a00;\n                                *(*0x20 + -0x40) = *0x20 + 8;\n                                *(*0x20 + -0xd0) = *0x20 + -0x48;\n                                *(*0x20 + -0xd8) = 0x416605;\n                                fcn.0045a220();\n                                return;\n                            }\n                            if ((*(iVar11 + 0x17) & 0x1f) == 0x13) {\n                                *(*0x20 + -0x68) = iVar11;\n                                if ((*(iVar11 + 0x32) & 0x8000) == 0) {\n                                    if (*(iVar11 + 0x30) == 1) {\n                                        if ((*(iVar11 + 0x14) & 1) == 0) {\n                                            uVar3 = 0x38;\n                                        }\n                                        else {\n                                            uVar3 = 0x48;\n                                        }\n                                        iVar9 = *(iVar11 + uVar3);\n                                        *(*0x20 + -0x60) = iVar9;\n                                        if (iVar9 != iVar4) {\n                                            uVar13 = *(iVar9 + 0x17) & 0x1f;\n                                            if (uVar13 == 0x16) {\n                                                *(*0x20 + -0xd8) = 0x41652a;\n                                                iVar4 = fcn.00454bc0();\n                                                if (iVar4 == 0) {\n                                                    bVar14 = true;\n                                                }\n                                                else {\n                                                    *(*0x20 + -0xd8) = 0x416545;\n                                                    iVar4 = fcn.00454bc0();\n                                                    bVar14 = iVar4 == 0;\n                                                }\n                                                if (!bVar14) goto code_r0x0041671a;\n                                                uVar7 = *(*0x20 + -0x60);\n                                                uVar3 = *(uVar7 + 0x30);\n                                                if (*(*(*0x20 + -0x58) + 0x30) != uVar3) goto code_r0x0041671a;\n                                                iVar11 = *(*0x20 + -0x68);\n                                            }\n                                            else {\n                                                if (uVar13 != 0x14) goto code_r0x0041671a;\n                                                if (*(iVar9 + 0x40) != 0) {\n                                                    uVar3 = *(*0x20 + 8);\n                                                    *(*0x20 + -0xd8) = 0x416508;\n                                                    iVar4 = fcn.00409fa0(uVar7);\n                                                    if (iVar4 == 0) goto code_r0x0041671a;\n                                                    iVar11 = *(*0x20 + -0x68);\n                                                }\n                                            }\n                                        }\n                                        if ((*(iVar11 + 0x14) & 1) == 0) {\n                                            iVar4 = 0x38;\n                                        }\n                                        else {\n                                            iVar4 = 0x48;\n                                        }\n                                        uVar3 = *(iVar11 + 0x30);\n                                        uVar7 = (*(iVar11 + 0x32) & 0x7fff) + *(iVar11 + 0x30);\n                                        arg1_00 = uVar7 & 0xffff;\n                                        if (uVar3 <= arg1_00) {\n                                            iVar12 = 0;\n                                            for (iVar9 = 0; iVar9 < arg1_00 - uVar3; iVar9 = iVar9 + 1) {\n                                                piVar2 = *(iVar11 + iVar4 + (uVar3 << 3 & uVar3 - 0x100000 >> 0x3f) +\n                                                          iVar9 * 8);\n                                                uVar7 = *(piVar2 + 0x15);\n                                                iVar12 = ((iVar12 + uVar7) - 1 & -uVar7) + *piVar2;\n                                            }\n                                            *(*0x20 + -0x78) = iVar12;\n                                            *(*0x20 + -0xd8) = 0x416665;\n                                            fcn.00415e80();\n                                            *(*0x20 + -0x38) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x28) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x18) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x38) = 0x4169a0;\n                                            *(*0x20 + -0x30) = *0x20 + 8;\n                                            *(*0x20 + -0x28) = *0x20 + 0x18;\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x58);\n                                            *(*0x20 + -0xd0) = *0x20 + -0x38;\n                                            *(*0x20 + -0xd8) = 0x4166ef;\n                                            fcn.0045a220();\n                                            return;\n                                        }\n                                        *(*0x20 + -0xd8) = 0x41671a;\n                                        fcn.0045cb00(arg1_00);\ncode_r0x0041671a:\n                                        do {\n                                            *(*0x20 + -0xd8) = 0x41671f;\n                                            uVar5 = fcn.00454b20();\n                                            *(*0x20 + -0x50) = uVar5;\n                                            *(*0x20 + -0x70) = uVar3;\n                                            *(*0x20 + -0xd8) = 0x416736;\n                                            fcn.00454b20();\n                                            uVar3 = 0x4d0ffa;\n                                            *(*0x20 + -0xd8) = 0x416769;\n                                            fcn.004487a0(0x22, uVar7, 0x4c9d0d, 0xe);\n                                            *(*0x20 + -0xd8) = 0x41676e;\n                                            fcn.004330a0();\n                                        } while( true );\n                                    }\n                                    *(*0x20 + -0xd8) = 0x41678a;\n                                    uVar5 = fcn.00454b20();\n                                    *(*0x20 + -0x50) = uVar5;\n                                    *(*0x20 + -0x70) = 0;\n                                    *(*0x20 + -0xd8) = 0x4167a5;\n                                    fcn.00454b20();\n                                    uVar5 = 0x4d0ffa;\n                                    *(*0x20 + -0xd8) = 0x4167d8;\n                                    fcn.004487a0(0x22, uVar7, 0x4c9d0d, 0xe);\n                                    *(*0x20 + -0xd8) = 0x4167dd;\n                                    fcn.004330a0();\n                                }\n                                *(*0x20 + -0xd8) = 0x4167e5;\n                                uVar6 = fcn.00454b20();\n                                *(*0x20 + -0x50) = uVar6;\n                                *(*0x20 + -0x70) = uVar5;\n                                *(*0x20 + -0xd8) = 0x4167fc;\n                                fcn.00454b20();\n                                *(*0x20 + -0xd0) = 0x4cb4a0;\n                                *(*0x20 + -200) = 0x12;\n                                *(*0x20 + -0xd8) = 0x416845;\n                                fcn.004488a0(0x22, uVar7, 0x4c9d0d, 0xe);\n                                *(*0x20 + -0xd8) = 0x41684a;\n                                fcn.004330a0();\n                            }\n                            *(*0x20 + -0xd8) = 0x416852;\n                            fcn.00454b20();\n                            *(*0x20 + -0xd8) = 0x416878;\n                            fcn.004486c0(0x29, uVar7, 0x4ca850, 0x10);\n                            *(*0x20 + -0xd8) = 0x41687d;\n                            fcn.004330a0();\ncode_r0x0041687d:\n                            *(*0x20 + -0xd8) = 0x41688e;\n                            iVar4 = fcn.004330a0();\n                            goto code_r0x0041688e;\n                        }\n                        uVar7 = *(*0x20 + 0x10);\n                        if (uVar7 == 0x5d3d58) {\n                            return;\n                        }\n                        uVar3 = 0x5d3d58;\n                        for (iVar4 = 0x56a3e0; iVar4 != 0; iVar4 = *(iVar4 + 0x220)) {\n                            if (((((*(iVar4 + 0xc0) < uVar7 || *(iVar4 + 0xc0) == uVar7) &&\n                                  (uVar7 <= *(iVar4 + 200) && *(iVar4 + 200) != uVar7)) ||\n                                 ((*(iVar4 + 0xd0) < uVar7 || *(iVar4 + 0xd0) == uVar7 &&\n                                  (uVar7 <= *(iVar4 + 0xd8) && *(iVar4 + 0xd8) != uVar7)))) ||\n                                ((*(iVar4 + 0xe0) < uVar7 || *(iVar4 + 0xe0) == uVar7 &&\n                                 (uVar7 <= *(iVar4 + 0xe8) && *(iVar4 + 0xe8) != uVar7)))) ||\n                               ((*(iVar4 + 0xf0) < uVar7 || *(iVar4 + 0xf0) == uVar7 &&\n                                (uVar7 <= *(iVar4 + 0xf8) && *(iVar4 + 0xf8) != uVar7)))) {\n                                return;\n                            }\ncode_r0x0041688e:\n                            uVar3 = uVar7;\n                        }\n                        *(*0x20 + -0xd8) = 0x416913;\n                        fcn.004330a0();\n                    }\n                    *(*0x20 + -0xd8) = 0x416925;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0xd8) = 0x41692a;\n                unaff_RDI = fcn.00454b20();\n                arg1 = 0x28;\n                *(*0x20 + -0xd8) = 0x416950;\n                fcn.004486c0(0x28, uVar3, 0x4c98de, 0xd);\n                *(*0x20 + -0xd8) = 0x416955;\n                fcn.004330a0();\n            }\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0xd8) = 0x416966;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x416985;\n        fcn.0045a360();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3492
    },
    "00416a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416a40(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t *arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 0x4001) {\n                if (unaff_RBX < 8) {\n                    unaff_RBX = 8;\n                }\n                *in_RAX = unaff_RBX;\n                if (*0x5d3dd0 == 0) {\n                    in_RAX[1] = arg1;\n                    in_RAX[2] = unaff_RDI;\n                }\n                else {\n                    arg2 = in_RAX + 1;\n                    *(*0x20 + -0x20) = 0x416a9f;\n                    in_R8 = unaff_RDI;\n                    iVar2 = fcn.0045c6a0();\n                    unaff_RDI = iVar2 + 0x10;\n                    *(*0x20 + -0x20) = 0x416aa8;\n                    in_RAX = fcn.0045c720(arg1, arg2, in_R8, in_R9);\n                }\n                *(in_RAX + 3) = in_XMM15;\n                *(in_RAX + 5) = 0;\n                if (unaff_RBX != 0) {\n                    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x4000);\n                    *(in_RAX + 0x2c) = SUB164(auVar1 / ZEXT816(unaff_RBX), 0) * unaff_RBX;\n                    in_RAX[6] = 0;\n                    if (*0x5d3dd0 == 0) {\n                        in_RAX[7] = unaff_RSI;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x416aed;\n                        fcn.0045c700(in_RAX, SUB168(auVar1 % ZEXT816(unaff_RBX), 0), in_R8, in_R9);\n                    }\n                    *(in_RAX + 8) = 1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x416b05;\n                fcn.00431720();\n            }\n            unaff_RBX = 0x20;\n            *(*0x20 + -0x20) = 0x416b16;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x416b35;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 920
    },
    "00416b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t * fcn.00416b60(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *in_RAX;\n            if (uVar3 != 0) {\n                puVar4 = in_RAX[3];\n                if (puVar4 != NULL) {\n                    in_RAX[3] = *puVar4;\n                    in_RAX[6] = in_RAX[6] + *in_RAX;\n                    if (*(in_RAX + 8) != '\\0') {\n                        *(*0x20 + -0x18) = puVar4;\n                        *(*0x20 + -0x38) = 0x416bb6;\n                        fcn.0045d0c0();\n                        puVar4 = *(*0x20 + -0x18);\n                    }\n                    return puVar4;\n                }\n                *(*0x20 + 8) = in_RAX;\n                if (*(in_RAX + 5) < uVar3) {\n                    uVar3 = in_RAX[7];\n                    *(*0x20 + -0x38) = 0x416be6;\n                    uVar3 = fcn.0040c7a0(uVar3);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[4] = uVar3;\n                    *(in_RAX + 5) = *(in_RAX + 0x2c);\n                }\n                puVar4 = in_RAX[4];\n                ppcVar1 = in_RAX[1];\n                if (ppcVar1 != NULL) {\n                    *(*0x20 + -0x10) = puVar4;\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x38) = 0x416c16;\n                    (*pcVar2)();\n                    in_RAX = *(*0x20 + 8);\n                    puVar4 = *(*0x20 + -0x10);\n                }\n                in_RAX[4] = in_RAX[4] + *in_RAX;\n                *(in_RAX + 5) = *(in_RAX + 5) - *in_RAX;\n                in_RAX[6] = in_RAX[6] + *in_RAX;\n                return puVar4;\n            }\n            *(*0x20 + -0x38) = 0x416c46;\n            fcn.00434840();\n            *(*0x20 + -0x38) = 0x416c57;\n            fcn.00435140();\n            *(*0x20 + -0x38) = 0x416c5c;\n            fcn.004348c0();\n            *(*0x20 + -0x38) = 0x416c6d;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x416c78;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 837
    },
    "00416d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416d60(void)\n\n{\n    ulong uVar1;\n    ulong *puVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = fcn.00404540();\n    puVar2 = fcn.0040c440();\n    *puVar2 = 0x416ec0;\n    if (*0x5d3dd0 == 0) {\n        puVar2[1] = uVar1;\n    }\n    else {\n        fcn.0045c6a0(uVar1);\n    }\n    fcn.0043da80();\n    puVar2 = fcn.0040c440();\n    *puVar2 = 0x416e60;\n    if (*0x5d3dd0 == 0) {\n        puVar2[1] = uVar1;\n    }\n    else {\n        fcn.0045c6a0(uVar1);\n    }\n    fcn.0043da80();\n    fcn.00405460();\n    fcn.00405460();\n    *0x5d6928 = 1;\n    return;\n}\n",
        "token_count": 292
    },
    "00417020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004174fa)\n// WARNING: Removing unreachable block (ram,0x00417511)\n\nvoid fcn.00417020(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            piVar3 = *(unaff_R14 + 0x30);\n            if (((*piVar3 == unaff_R14) || (iVar2 = *(piVar3 + 0x1b),  1 < iVar2)) || (piVar3[0x1a] != 0)) {\n                iVar2 = *(piVar3 + 0x1b);\n                *(piVar3 + 0x1b) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(piVar3 + 0x1b) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x38) = unaff_RBX;\n            *(*0x20 + -0x4c) = arg1;\n            while( true ) {\n                if (((*0x5d6928 == '\\0') || (*0x5d3b88 != 0)) || (*0x5d3b6c != 0)) {\n                    bVar7 = false;\n                }\n                else if (in_RAX == 0) {\n                    bVar7 = *0x5d44d8 <= *0x5d4538;\n                }\n                else if (in_RAX == 1) {\n                    if (*0x5d44c0 < 0) {\n                        bVar7 = false;\n                    }\n                    else if (*0x5d6f98 == 0) {\n                        bVar7 = false;\n                    }\n                    else {\n                        bVar7 = *0x564568 < unaff_RBX - *0x5d6f98;\n                    }\n                }\n                else if (in_RAX == 2) {\n                    bVar7 = 0 < arg1 - *0x580258;\n                }\n                else {\n                    bVar7 = true;\n                }\n                if (bVar7) {\n                    *(*0x20 + -0x80) = 0x41719a;\n                    iVar5 = fcn.004213a0();\n                    bVar7 = iVar5 != -1;\n                    arg1._0_4_ = *(*0x20 + -0x4c);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    in_RAX = *(*0x20 + -0x30);\n                }\n                else {\n                    bVar7 = false;\n                }\n                if (!bVar7) break;\n                *0x57fe74 = *0x57fe74 + 1;\n            }\n            *(*0x20 + -0x80) = 0x4171cc;\n            fcn.004430a0(0);\n            if (((*0x5d6928 == '\\0') || (*0x5d3b88 != 0)) || (*0x5d3b6c != 0)) {\n                iVar5 = *(*0x20 + -0x30);\n                bVar7 = false;\n            }\n            else {\n                iVar5 = *(*0x20 + -0x30);\n                if (iVar5 == 0) {\n                    bVar7 = *0x5d44d8 <= *0x5d4538;\n                }\n                else if (iVar5 == 1) {\n                    if (*0x5d44c0 < 0) {\n                        bVar7 = false;\n                    }\n                    else if (*0x5d6f98 == 0) {\n                        bVar7 = false;\n                    }\n                    else {\n                        bVar7 = *0x564568 < *(*0x20 + -0x38) - *0x5d6f98;\n                    }\n                }\n                else if (iVar5 == 2) {\n                    bVar7 = 0 < *(*0x20 + -0x4c) - *0x580258;\n                }\n                else {\n                    bVar7 = true;\n                }\n            }\n            if (!bVar7) {\n                *(*0x20 + -0x80) = 0x41733e;\n                fcn.004433e0(0);\n                return;\n            }\n            *0x580218 = iVar5 == 2;\n            if (*0x5d3ff8 == 1) {\n                uVar4 = 1;\n            }\n            else {\n                uVar4 = 0;\n                if (*0x5d3ff8 == 2) {\n                    uVar4 = 2;\n                }\n            }\n            *(*0x20 + -0x40) = uVar4;\n            *(*0x20 + -0x80) = 0x4172c5;\n            fcn.004430a0(0);\n            *(*0x20 + -0x80) = 0x4172d8;\n            fcn.004430a0(0);\n            if (*0x585d30 != '\\0') {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x28) = *0x585d60;\n                *(*0x20 + -0x80) = 0x417314;\n                fcn.0044f180(*0x20 + -0x28);\n                *0x585d60 = *0x585d60 + 1;\n            }\n            iVar5 = 0;\n            while( true ) {\n                if (*0x57fc98 <= iVar5) {\n                    *(*0x20 + -0x80) = 0x417372;\n                    fcn.00418c80();\n                    *(*0x20 + -0x78) = 0x4d5cb0;\n                    *(*0x20 + -0x80) = 0x417385;\n                    fcn.0045a220();\n                    *0x58025c = *0x5d3b70;\n                    *0x580260 = *0x5d3b70;\n                    if (*0x5d3b74 < *0x5d3b70) {\n                        *0x58025c = *0x5d3b74;\n                    }\n                    *0x580298 = *0x5d4538;\n                    *0x580288 = 0;\n                    *0x580210 = *(*0x20 + -0x40);\n                    *(*0x20 + -0x80) = 0x4173e5;\n                    fcn.0045e320();\n                    *0x580268 = *(*0x20 + -0x78);\n                    *(*0x20 + -0x48) = *0x580268;\n                    *0x580290 = *0x580268;\n                    if (*0x585d30 != '\\0') {\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0x28) = 1;\n                        *(*0x20 + -0x80) = 0x41744a;\n                        fcn.0044f180(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x78) = 0x4d5e38;\n                    *(*0x20 + -0x80) = 0x41745a;\n                    fcn.0045a220();\n                    *(*0x20 + -0x78) = 0x4d5cb8;\n                    *(*0x20 + -0x80) = 0x41747e;\n                    fcn.0045a220();\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    uVar10 = 0;\n                    uVar11 = 0;\n                    iVar5 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x80) = 0x417497;\n                    fcn.00419b00();\n                    *0x580258 = *0x580258 + 1;\n                    *(*0x20 + -0x80) = 0x4174b5;\n                    fcn.0041d760(*0x5d3b70);\n                    *0x5802b0 = *0x5d4528;\n                    if (*(*0x20 + -0x40) != 0) {\n                        *(*0x20 + -0x80) = 0x4174d4;\n                        fcn.00440f00();\n                    }\n                    *0x5d3b6c = 1;\n                    *0x5d3dd4 = 1;\n                    *0x5d3dd0 = 1;\n                    *0x580190 = 0xffffffff;\n                    *0x5801a0 = 0xffffffff;\n                    *(*0x20 + -0x80) = 0x417538;\n                    fcn.00419e60();\n                    *(*0x20 + -0x80) = 0x41753d;\n                    fcn.0041d680();\n                    *0x5d3b64 = 1;\n                    piVar1 = *(iVar5 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x20) = *(iVar5 + 0x30);\n                    *(*0x20 + -0x18) = CONCAT412(uVar11, CONCAT48(uVar10, CONCAT44(uVar9, uVar8)));\n                    *(*0x20 + -0x18) = 0x4176e0;\n                    *(*0x20 + -0x10) = *0x20 + -0x48;\n                    *(*0x20 + -0x78) = *0x20 + -0x18;\n                    *(*0x20 + -0x80) = 0x417589;\n                    fcn.0045a220();\n                    iVar5 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x80) = 0x4175ae;\n                    fcn.004433e0(0);\n                    iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                    *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                    if (iVar2 == 1) {\n                        if (*(iVar5 + 0xb1) == '\\0') {\n                            bVar7 = *(*0x20 + -0x40) == 0;\n                        }\n                        else {\n                            *(iVar5 + 0x10) = 0xfffffffffffffade;\n                            bVar7 = *(*0x20 + -0x40) == 0;\n                        }\n                    }\n                    else {\n                        bVar7 = *(*0x20 + -0x40) == 0;\n                    }\n                    if (!bVar7) {\n                        *(*0x20 + -0x80) = 0x417605;\n                        fcn.0045a1a0();\n                    }\n                    *(*0x20 + -0x80) = 0x417616;\n                    fcn.004433e0(0);\n                    return;\n                }\n                piVar1 = *(*0x57fc90 + iVar5 * 8);\n                iVar2 = *(*(piVar1 + 0x10) + 0x488);\n                if (iVar2 != *0x5a5f30) break;\n                iVar5 = iVar5 + 1;\n            }\n            *(*0x20 + -0x50) = iVar2;\n            *(*0x20 + -0x4c) = *0x5a5f30;\n            *(*0x20 + -0x38) = *piVar1;\n            *(*0x20 + -0x80) = 0x417636;\n            iVar5 = *0x57fc98;\n            fcn.00434840();\n            arg1._0_4_ = iVar5;\n            *(*0x20 + -0x80) = 0x417647;\n            fcn.00435140();\n            *(*0x20 + -0x80) = 0x417651;\n            fcn.00434f40();\n            *(*0x20 + -0x80) = 0x417665;\n            fcn.00435140();\n            *(*0x20 + -0x80) = 0x417670;\n            fcn.00434e40();\n            *(*0x20 + -0x80) = 0x417685;\n            fcn.00435140();\n            *(*0x20 + -0x80) = 0x41768e;\n            fcn.00434e40();\n            *(*0x20 + -0x80) = 0x417693;\n            fcn.00434aa0();\n            *(*0x20 + -0x80) = 0x417698;\n            fcn.004348c0();\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x80) = 0x4176a9;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x4176bd;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_4_ = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3357
    },
    "00417a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00417a40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong uVar3;\n    uchar *arg1;\n    ulong arg2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    char cStack41;\n    ulong uStack40;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004430a0(0);\n    while ((*0x5d3b6c == 1 && (*0x580190 == *0x5801a0))) {\n        if (*0x580100 == 0) {\n            if (*0x580188 < *0x58018c) {\n                bVar2 = true;\n            }\n            else {\n                bVar2 = false;\n            }\n        }\n        else {\n            bVar2 = true;\n        }\n        if (bVar2) break;\n        fcn.004430a0(0);\n        *0x5d3b68 = 0;\n        fcn.0045a220();\n        if (*0x5d3b68 == 0) {\n            fcn.0045e320();\n            uVar3 = 0x4d5c78;\n            *0x580278 = 0x4d5c78;\n            *0x580290 = 0x4d5c78;\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 5;\n            if (*0x5d3dd0 == 0) {\n                arg2 = 0x4c7d0b;\n                *(iVar1 + 200) = 0x4c7d0b;\n            }\n            else {\n                arg2 = 0x4c7d0b;\n                uVar3 = fcn.0045c6c0(iVar1, 0x4c7d0b, param_3, param_4);\n            }\n            uStack40 = uVar3;\n            if (*0x585d30 != '\\0') {\n                uStack32 = 0;\n                fcn.0044f180(&uStack32);\n            }\n            fcn.0045a220();\n            cStack41 = '\\0';\n            auStack24 = CONCAT88(&cStack41, 0x417d40);\n            arg1 = auStack24;\n            fcn.0045a220();\n            if (cStack41 == '\\0') {\n                *0x5d3b64 = 0;\n                fcn.0041b2c0();\n                fcn.004433e0(0);\n                fcn.00440f00();\n                fcn.0041dba0(*0x5d3b70);\n                fcn.00417fa0();\n                return;\n            }\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 0;\n            if (*0x5d3dd0 == 0) {\n                *(iVar1 + 200) = 0;\n            }\n            else {\n                fcn.0045c5a0(arg1, arg2, param_3, param_4);\n            }\n            fcn.0045a220();\n            fcn.004433e0(0);\n        }\n        else {\n            fcn.004433e0(0);\n        }\n    }\n    fcn.004433e0(0);\n    return;\n}\n",
        "token_count": 843
    },
    "00419380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419380(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0 < *0x5d4024) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x78) = 0x4193ac;\n                fcn.0042afc0();\n                in_RAX = *(*0x20 + 8);\n            }\n            if (*0x5d3b6c == 2) {\n                *(*0x20 + -0x20) = *0x580100;\n                *0x580198 = in_RAX;\n                if ((*0x580100 == 0) && (*0x58018c <= *0x580188)) {\n                    if (0 < *0x5d3fec) {\n                        *(*0x20 + -0x78) = 0x4193fa;\n                        fcn.0041a060();\n                    }\n                    if (*0x580100 == 0) {\n                        *0x5801e8 = in_XMM15;\n                        if (*0x5d3dd0 == 0) {\n                            *0x5801e0 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x78) = 0x419434;\n                            fcn.0045c6a0(0);\n                        }\n                        *(*0x20 + -0x10) = *0x57fc90;\n                        *(*0x20 + -0x28) = *0x57fc98;\n                        iVar3 = 0;\n                        iVar4 = *0x57fc90;\n                        iVar5 = *0x57fc98;\n                        while( true ) {\n                            iVar2 = *0x57fc98;\n                            iVar1 = *0x57fc90;\n                            if (iVar5 <= iVar3) {\n                                for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n                                    iVar4 = *(*(iVar1 + iVar3 * 8) + 0x40);\n                                    if (iVar4 != 0) {\n                                        *(iVar4 + 8) = 0;\n                                    }\n                                }\n                                *(*0x20 + -0x78) = 0x419515;\n                                fcn.0041e3a0();\n                                return;\n                            }\n                            *(*0x20 + -0x30) = iVar3;\n                            *(*0x20 + -0x18) = *(iVar4 + iVar3 * 8);\n                            if (*0x5d3fec < 1) {\n                                *(*0x20 + -0x78) = 0x4194a5;\n                                fcn.0042c640();\n                            }\n                            else {\n                                *(*0x20 + -0x78) = 0x419493;\n                                fcn.0042c7c0();\n                            }\n                            iVar3 = *(*(*0x20 + -0x18) + 0x1238);\n                            if ((iVar3 != 0) &&\n                               ((*(iVar3 + 0x10) != 0 || (*(*(*(*0x20 + -0x18) + 0x1240) + 0x10) != 0)))) break;\n                            *(*0x20 + -0x78) = 0x41945c;\n                            fcn.00422c80();\n                            iVar3 = *(*0x20 + -0x30) + 1;\n                            iVar4 = *(*0x20 + -0x10);\n                            iVar5 = *(*0x20 + -0x28);\n                        }\n                        *(*0x20 + -0x78) = 0x419525;\n                        fcn.00434840();\n                        *(*0x20 + -0x38) = **(*0x20 + -0x18);\n                        *(*0x20 + -0x59) = *(*(*0x20 + -0x18) + 0x496);\n                        *(*0x20 + -0x78) = 0x419545;\n                        fcn.00434840();\n                        *(*0x20 + -0x78) = 0x419556;\n                        fcn.00435140();\n                        *(*0x20 + -0x78) = 0x419565;\n                        fcn.00434f40();\n                        *(*0x20 + -0x78) = 0x419576;\n                        fcn.00435140();\n                        *(*0x20 + -0x78) = 0x419585;\n                        fcn.00434ae0();\n                        *(*0x20 + -0x78) = 0x41958a;\n                        fcn.004348c0();\n                        if (*(*(*0x20 + -0x18) + 0x1238) == 0) {\n                            *(*0x20 + -0x78) = 0x419651;\n                            fcn.00434840();\n                            *(*0x20 + -0x78) = 0x419665;\n                            fcn.00435140();\n                            *(*0x20 + -0x78) = 0x41966a;\n                            fcn.004348c0();\n                        }\n                        else {\n                            *(*0x20 + -0x28) = *(*(*(*0x20 + -0x18) + 0x1238) + 0x10);\n                            *(*0x20 + -0x78) = 0x4195ad;\n                            fcn.00434840();\n                            *(*0x20 + -0x78) = 0x4195be;\n                            fcn.00435140();\n                            *(*0x20 + -0x78) = 0x4195c8;\n                            fcn.00434f40();\n                            *(*0x20 + -0x78) = 0x4195cd;\n                            fcn.004348c0();\n                        }\n                        if (*(*(*0x20 + -0x18) + 0x1240) == 0) goto code_r0x0041962c;\n                        *(*0x20 + -0x28) = *(*(*(*0x20 + -0x18) + 0x1240) + 0x10);\n                        *(*0x20 + -0x78) = 0x4195ec;\n                        fcn.00434840();\n                        *(*0x20 + -0x78) = 0x4195fd;\n                        fcn.00435140();\n                        *(*0x20 + -0x78) = 0x419607;\n                        fcn.00434f40();\n                        *(*0x20 + -0x78) = 0x41960c;\n                        fcn.004348c0();\n                        do {\n                            *(*0x20 + -0x78) = 0x419611;\n                            fcn.00434840();\n                            *(*0x20 + -0x78) = 0x419616;\n                            fcn.00434aa0();\n                            *(*0x20 + -0x78) = 0x41961b;\n                            fcn.004348c0();\n                            *(*0x20 + -0x78) = 0x41962c;\n                            fcn.004330a0();\ncode_r0x0041962c:\n                            *(*0x20 + -0x78) = 0x419631;\n                            fcn.00434840();\n                            *(*0x20 + -0x78) = 0x419645;\n                            fcn.00435140();\n                            *(*0x20 + -0x78) = 0x41964a;\n                            fcn.004348c0();\n                        } while( true );\n                    }\n                    *(*0x20 + -0x78) = 0x419685;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x40) = *0x580188;\n                *(*0x20 + -0x48) = *0x58018c;\n                *(*0x20 + -0x28) = *0x5801a8;\n                *(*0x20 + -0x30) = *0x5801b0;\n                *(*0x20 + -0x50) = *0x5801b8;\n                *(*0x20 + -0x58) = *0x5801c0;\n                *(*0x20 + -0x78) = 0x4196d0;\n                fcn.00434840();\n                *(*0x20 + -0x78) = 0x4196e5;\n                fcn.00435140();\n                *(*0x20 + -0x78) = 0x4196ef;\n                fcn.00434fa0();\n                *(*0x20 + -0x78) = 0x419705;\n                fcn.00435140();\n                *(*0x20 + -0x78) = 0x41970f;\n                fcn.00434e40();\n                *(*0x20 + -0x78) = 0x419725;\n                fcn.00435140();\n                *(*0x20 + -0x78) = 0x41972f;\n                fcn.00434e40();\n                *(*0x20 + -0x78) = 0x419745;\n                fcn.00435140();\n                *(*0x20 + -0x78) = 0x41974f;\n                fcn.00434f40();\n                *(*0x20 + -0x78) = 0x419765;\n                fcn.00435140();\n                *(*0x20 + -0x78) = 0x41976f;\n                fcn.00434f40();\n                *(*0x20 + -0x78) = 0x419785;\n                fcn.00435140();\n                *(*0x20 + -0x78) = 0x41978f;\n                fcn.00434f40();\n                *(*0x20 + -0x78) = 0x4197a5;\n                fcn.00435140();\n                *(*0x20 + -0x78) = 0x4197af;\n                fcn.00434f40();\n                *(*0x20 + -0x78) = 0x4197b4;\n                fcn.00434aa0();\n                *(*0x20 + -0x78) = 0x4197b9;\n                fcn.004348c0();\n                *(*0x20 + -0x78) = 0x4197cc;\n                fcn.00432920();\n            }\n            *(*0x20 + -0x78) = 0x4197dd;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x4197e8;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2575
    },
    "00419800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419800(void)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5d3b6c == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x419839;\n                fcn.0040a360();\n                *0x5a5f30 = *0x5a5f30 + 2;\n                *0x57fe7c = 0;\n                *0x5a5f58 = 0;\n                *0x5a61f8 = *0x5a61e0;\n                *0x5a6200 = *0x5a61e8;\n                if (*0x5d3dd0 == 0) {\n                    *0x5a61f0 = *0x5a61d8;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x41989b;\n                    fcn.0045c6a0();\n                }\n                *0x5a5f80 = 0;\n                *0x5a5f88 = 0;\n                *(*0x20 + -0x28) = 0x4198c5;\n                fcn.0040a580();\n                *0x57fe80 = 0;\n                if (*(*0x20 + 8) == 2) {\n                    *(*0x20 + -0x28) = 0x4198ea;\n                    fcn.0040a360();\n                    *0x5a5f70 = 0;\n                    *(*0x20 + -0x28) = 0x419905;\n                    fcn.0040a580();\n                    while( true ) {\n                        *(*0x20 + -0x28) = 0x41995b;\n                        iVar2 = fcn.004213a0();\n                        if (iVar2 == -1) break;\n                        *0x57fe78 = *0x57fe78 + 1;\n                    }\n                    *(*0x20 + -0x28) = 0x41996b;\n                    fcn.004233a0();\n                    do {\n                        *(*0x20 + -0x28) = 0x419972;\n                        cVar1 = fcn.004234a0();\n                    } while (cVar1 != '\\0');\n                    *(*0x20 + -0x28) = 0x41997b;\n                    fcn.0042a420();\n                    *(*0x20 + -0x28) = 0x419985;\n                    fcn.0042a4a0();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x419915;\n                fcn.0040a360();\n                if (*0x57fe70 != '\\0') {\n                    *0x57fe70 = '\\0';\n                    *(*0x20 + -0x28) = 0x419938;\n                    fcn.00436ca0(1);\n                }\n                *(*0x20 + -0x28) = 0x419946;\n                fcn.0040a580();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x4199a5;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4199b0;\n        fcn.0045ea60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 933
    },
    "00419b00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419b00(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x57efd0 != NULL) {\n        (***0x57efd0)();\n    }\n    fcn.0040a360();\n    iVar2 = *0x580760;\n    while (iVar2 != 0) {\n        iVar1 = *(iVar2 + 8);\n        if (*0x5d3dd0 == 0) {\n            *(iVar2 + 8) = 0;\n            iVar2 = iVar1;\n        }\n        else {\n            iVar2 = iVar1;\n            fcn.0045c6a0(0);\n        }\n    }\n    if (*0x5d3dd0 == 0) {\n        *0x580760 = 0;\n    }\n    else {\n        fcn.0045c6a0(0);\n    }\n    fcn.0040a580();\n    fcn.0040a360();\n    iVar2 = *0x580770;\n    while (iVar2 != 0) {\n        iVar1 = *(iVar2 + 0x28);\n        if (*0x5d3dd0 == 0) {\n            *(iVar2 + 0x28) = 0;\n            iVar2 = iVar1;\n        }\n        else {\n            iVar2 = iVar1;\n            fcn.0045c6a0(0);\n        }\n    }\n    if (*0x5d3dd0 == 0) {\n        *0x580770 = 0;\n    }\n    else {\n        fcn.0045c6a0(0);\n    }\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 428
    },
    "00419c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * fcn.00419c40(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uint64_t arg1_00;\n    uint64_t unaff_RDI;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack24 [16];\n    \n    if (unaff_RDI < 10000000) {\n        uVar9 = (unaff_RDI >> 1) / 500;\n        if (uVar9 == 0) {\n            if (unaff_RBX != 0) {\n                *in_RAX = 0x30;\n                if (arg1 != 0) {\n                    return in_RAX;\n                }\n                fcn.0045cac0(1, 0);\n                uVar9 = arg1;\n            }\n            arg1 = unaff_RBX;\n            iVar6 = fcn.0045ca40(unaff_RBX);\n            goto code_r0x00419cdc;\n        }\n        iVar6 = 3;\n        for (; 99 < uVar9; uVar9 = uVar9 / 10) {\ncode_r0x00419cdc:\n            iVar6 = iVar6 + -1;\n        }\n        arg1_00 = unaff_RBX - iVar6;\n        uVar7 = arg1_00 - 1;\n        uVar10 = unaff_RBX - 1;\ncode_r0x00419d0d:\n        uVar12 = uVar10;\n        if ((uVar9 < 10) && (uVar12 < uVar7)) {\n            if (uVar12 < unaff_RBX) {\n                in_RAX[uVar12] = uVar9 + '0';\n                return in_RAX + (-(arg1 - uVar12) >> 0x3f & uVar12);\n            }\n            fcn.0045ca40(unaff_RBX);\n            goto code_r0x00419d9e;\n        }\n        uVar10 = uVar9 / 10;\n        arg1_00 = uVar9 % 10;\n        uVar9 = uVar10;\n        if (uVar12 < unaff_RBX) goto code_r0x00419d3b;\n        goto code_r0x00419da6;\n    }\n    uVar9 = unaff_RDI / 1000000;\n    uVar7 = unaff_RBX - 1;\n    arg1_00 = unaff_RBX;\n    uVar10 = uVar7;\ncode_r0x00419db7:\n    uVar12 = uVar10;\n    cVar2 = uVar9;\n    if ((uVar9 < 10) && (uVar12 < uVar7)) {\n        if (uVar12 < arg1_00) {\n            in_RAX[uVar12] = cVar2 + '0';\n            return in_RAX + (-(arg1 - uVar12) >> 0x3f & uVar12);\n        }\n        fcn.0045ca40(arg1_00);\n        goto code_r0x00419e4c;\n    }\n    uVar9 = uVar9 / 10;\n    if (uVar12 < arg1_00) goto code_r0x00419deb;\n    goto code_r0x00419e54;\ncode_r0x00419d3b:\n    in_RAX[uVar12] = arg1_00 + '0';\n    uVar10 = uVar12 - 1;\n    if (uVar10 != uVar7) goto code_r0x00419d0d;\n    if (uVar10 < unaff_RBX) {\n        in_RAX[uVar12 - 1] = 0x2e;\n        uVar10 = uVar12 - 2;\n        goto code_r0x00419d0d;\n    }\ncode_r0x00419d9e:\n    fcn.0045ca40(unaff_RBX);\ncode_r0x00419da6:\n    arg1 = unaff_RBX;\n    uVar7 = arg1;\n    uVar10 = fcn.0045ca40(arg1);\n    goto code_r0x00419db7;\ncode_r0x00419deb:\n    in_RAX[uVar12] = cVar2 + uVar9 * -10 + '0';\n    uVar10 = uVar12 - 1;\n    if (uVar10 == uVar7) {\n        if (arg1_00 <= uVar10) {\ncode_r0x00419e4c:\n            fcn.0045ca40(arg1_00);\ncode_r0x00419e54:\n            fcn.0045ca40(arg1_00);\n            while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n                fcn.0045a360();\n            }\n            if (*0x57efb8 == NULL) {\n                iVar8 = 0;\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = **0x57efb8;\n                iVar8 = (*0x57efb8)[1];\n            }\n            *0x5801a8 = in_XMM15;\n            for (iVar11 = 0; iVar11 < iVar8; iVar11 = iVar11 + 1) {\n                iVar1 = *(iVar6 + iVar11 * 8);\n                uVar9 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n                if (*0x5801a8 < uVar9) {\n                    *0x5801a8 = CONCAT88(*0x5801b0, uVar9);\n                }\n            }\n            if (*0x57efb8 == NULL) {\n                iVar8 = 0;\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = **0x57efb8;\n                iVar8 = (*0x57efb8)[1];\n            }\n            for (iVar11 = 0; iVar11 < iVar8; iVar11 = iVar11 + 1) {\n                iVar1 = *(iVar6 + iVar11 * 8);\n                uVar9 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n                if (*0x5801b0 < uVar9) {\n                    *0x5801a8 = CONCAT88(uVar9, *0x5801a8);\n                }\n            }\n            *0x5a6210 = *0x5a61e0;\n            *0x5a6218 = *0x5a61e0;\n            if (*0x5d3dd0 == 0) {\n                *0x5a6208 = *0x5a61d8;\n                *0x5801b8 = *0x5a61e0;\n            }\n            else {\n                *0x5801b8 = fcn.0045c6a0();\n            }\n            *0x5801e8 = *0x57fc78;\n            *0x5801f0 = *0x57fc78;\n            if (*0x5d3dd0 == 0) {\n                *0x5801e0 = *0x57fc70;\n                *0x5801c0 = *0x57fc78;\n            }\n            else {\n                *0x5801c0 = fcn.0045c6a0();\n            }\n            iVar4 = SUB164(*0x5801a8, 0);\n            iVar5 = SUB164(*0x5801a8 >> 0x40, 0);\n            iVar3 = *0x5801b8;\n            *0x5801d8 = *0x5801c0 + iVar4 + iVar5 + iVar3 + 2;\n            *0x580188 = 0;\n            *0x58018c = iVar4 + iVar5 + iVar3 + *0x5801c0 + 2;\n            *0x5801c8 = 2;\n            *0x5801cc = iVar4 + 2;\n            *0x5801d0 = iVar5 + iVar4 + 2;\n            *0x5801d4 = iVar3 + iVar4 + iVar5 + 2;\n            return *0x5801d8;\n        }\n        in_RAX[uVar12 - 1] = 0x2e;\n        uVar10 = uVar12 - 2;\n    }\n    goto code_r0x00419db7;\n}\n",
        "token_count": 1996
    },
    "00419e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419e60(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x57efb8 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x57efb8;\n        iVar5 = (*0x57efb8)[1];\n    }\n    *0x5801a8 = in_XMM15;\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n        if (*0x5801a8 < uVar8) {\n            *0x5801a8 = CONCAT88(*0x5801b0, uVar8);\n        }\n    }\n    if (*0x57efb8 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x57efb8;\n        iVar5 = (*0x57efb8)[1];\n    }\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n        if (*0x5801b0 < uVar8) {\n            *0x5801a8 = CONCAT88(uVar8, *0x5801a8);\n        }\n    }\n    *0x5a6210 = *0x5a61e0;\n    *0x5a6218 = *0x5a61e0;\n    if (*0x5d3dd0 == 0) {\n        *0x5a6208 = *0x5a61d8;\n        *0x5801b8 = *0x5a61e0;\n    }\n    else {\n        *0x5801b8 = fcn.0045c6a0();\n    }\n    *0x5801e8 = *0x57fc78;\n    *0x5801f0 = *0x57fc78;\n    if (*0x5d3dd0 == 0) {\n        *0x5801e0 = *0x57fc70;\n        *0x5801c0 = *0x57fc78;\n    }\n    else {\n        *0x5801c0 = fcn.0045c6a0();\n    }\n    iVar3 = SUB164(*0x5801a8, 0);\n    iVar4 = SUB164(*0x5801a8 >> 0x40, 0);\n    iVar2 = *0x5801b8;\n    *0x580188 = 0;\n    *0x58018c = iVar3 + iVar4 + iVar2 + *0x5801c0 + 2;\n    *0x5801c8 = 2;\n    *0x5801cc = iVar3 + 2;\n    *0x5801d0 = iVar4 + iVar3 + 2;\n    *0x5801d4 = iVar2 + iVar3 + iVar4 + 2;\n    *0x5801d8 = *0x5801c0 + iVar3 + iVar4 + iVar2 + 2;\n    return;\n}\n",
        "token_count": 910
    },
    "0041aa00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041aa00(void)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong *puVar7;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint8_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = *0x5a6210;\n            if (unaff_RBX < *0x5a6210) {\n                uVar5 = *(*0x5a6208 + unaff_RBX * 8);\n                unaff_RBX = uVar5 >> 0x14;\n                if (unaff_RBX < 0x40) {\n                    *(*0x20 + -0x48) = *0x5a5f30;\n                    *(*0x20 + -0x10) = in_RAX;\n                    unaff_RBX = *(*(unaff_RBX * 8 + 0x5a5f90) + (uVar5 & 0xfffff) * 8);\n                    *(*0x20 + -0x28) = unaff_RBX;\n                    iVar4 = 0;\n                    uVar6 = *0x5a5f30;\n                    do {\n                        if (0x3f < iVar4) {\n                            return;\n                        }\n                        uVar9 = *(unaff_RBX + iVar4 + 0x21080);\n                        if (uVar9 != 0) {\n                            *(*0x20 + -0x30) = iVar4;\n                            *(*0x20 + -0x4a) = uVar9;\n                            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                                if ((uVar9 & 1 << (uVar5 & 0x1f)) != 0) {\n                                    uVar1 = uVar5 + iVar4 * 8;\n                                    if (uVar1 < 0x200) {\n                                        iVar4 = *(unaff_RBX + 0x20000 + uVar1 * 8);\n                                        in_R10 = in_R10 & 0xffffffffffffff00 | *(iVar4 + 99);\n                                        if (*(iVar4 + 99) == 1) {\n                                            *(*0x20 + -0x20) = uVar5;\n                                            if (*0x5d3b33 == '\\0') {\n                                                uVar3 = *(iVar4 + 0x58);\n                                                in_R10 = uVar3;\n                                                if ((uVar3 != uVar6) && (uVar3 != uVar6 + 3)) {\ncode_r0x0041abd7:\n                                                    *(*0x20 + -0x44) = in_R10;\n                                                    *(*0x20 + -0x80) = 0x41abe5;\n                                                    fcn.00434840();\n                                                    *(*0x20 + -0x80) = 0x41abf6;\n                                                    fcn.00435140();\n                                                    *(*0x20 + -0x80) = 0x41abff;\n                                                    fcn.00434e40();\n                                                    *(*0x20 + -0x80) = 0x41ac05;\n                                                    fcn.00434a60();\n                                                    *(*0x20 + -0x80) = 0x41ac0e;\n                                                    fcn.00434e40();\n                                                    *(*0x20 + -0x80) = 0x41ac13;\n                                                    fcn.00434aa0();\n                                                    *(*0x20 + -0x80) = 0x41ac18;\n                                                    fcn.004348c0();\n                                                    *(*0x20 + -0x80) = 0x41ac29;\n                                                    fcn.004330a0();\n                                                    goto code_r0x0041ac29;\n                                                }\n                                            }\n                                            *(*0x20 + -0x38) = iVar4;\n                                            *(*0x20 + -0x18) = iVar4 + 0x78;\n                                            *(*0x20 + -0x80) = 0x41ab29;\n                                            fcn.0040a360();\n                                            iVar4 = *(*0x20 + -0x38);\n                                            for (puVar7 = *(iVar4 + 0x80); puVar7 != NULL; puVar7 = *puVar7) {\n                                                if (*(puVar7 + 10) == '\\x01') {\n                                                    uVar2 = *(puVar7 + 1);\n                                                    uVar5 = *(iVar4 + 0x68);\n                                                    if (uVar5 == 0) {\n                                                        *(*0x20 + -0x80) = 0x41abd7;\n                                                        fcn.00431720();\n                                                        goto code_r0x0041abd7;\n                                                    }\n                                                    *(*0x20 + -0x40) = puVar7;\n                                                    *(*0x20 + -0x80) = 0x41aba5;\n                                                    fcn.0041c7c0(iVar4, uVar2 % uVar5);\n                                                    *(*0x20 + -0x80) = 0x41abc6;\n                                                    fcn.0041c620(0x564460);\n                                                    iVar4 = *(*0x20 + -0x38);\n                                                    puVar7 = *(*0x20 + -0x40);\n                                                }\n                                            }\n                                            *(*0x20 + -0x80) = 0x41ab45;\n                                            fcn.0040a580();\n                                            uVar5 = *(*0x20 + -0x20);\n                                            uVar6 = *(*0x20 + -0x48);\n                                            unaff_RBX = *(*0x20 + -0x28);\n                                            uVar9 = *(*0x20 + -0x4a);\n                                            iVar4 = *(*0x20 + -0x30);\n                                            goto code_r0x0041aaa9;\n                                        }\ncode_r0x0041ac29:\n                                        *(*0x20 + -0x49) = in_R10;\n                                        *(*0x20 + -0x80) = 0x41ac33;\n                                        fcn.00434840();\n                                        *(*0x20 + -0x80) = 0x41ac45;\n                                        fcn.00435140();\n                                        *(*0x20 + -0x80) = 0x41ac52;\n                                        fcn.00434e40();\n                                        *(*0x20 + -0x80) = 0x41ac57;\n                                        fcn.00434aa0();\n                                        *(*0x20 + -0x80) = 0x41ac5c;\n                                        fcn.004348c0();\n                                        unaff_RBX = 0x2b;\n                                        *(*0x20 + -0x80) = 0x41ac6d;\n                                        fcn.004330a0();\n                                    }\n                                    *(*0x20 + -0x80) = 0x41ac7a;\n                                    fcn.0045ca60(0x200);\n                                    goto code_r0x0041ac7a;\n                                }\ncode_r0x0041aaa9:\n                            }\n                        }\n                        iVar4 = iVar4 + 1;\n                    } while( true );\n                }\ncode_r0x0041ac7a:\n                uVar5 = 0x40;\n                *(*0x20 + -0x80) = 0x41ac87;\n                fcn.0045ca60(0x40);\n            }\n            *(*0x20 + -0x80) = 0x41ac8f;\n            in_RAX = fcn.0045ca40(uVar5);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41ac9f;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1902
    },
    "0041acc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041acc0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (**(in_RAX + 0x30) == unaff_R14) {\n        return;\n    }\n    if ((0 < *(*(unaff_R14 + 0x30) + 0xd8)) || (*(*(unaff_R14 + 0x30) + 0xd0) != 0)) {\n        return;\n    }\n    bVar1 = false;\n    do {\n        while( true ) {\n            iVar4 = *0x5d4588;\n            iVar5 = -*(in_RAX + 0x180) * *0x5d45c0;\n            iVar3 = -*(in_RAX + 0x180);\n            if (iVar5 < 0x10000) {\n                iVar3 = *0x4f9a48 * *0x5d45c8;\n            }\n            arg3 = 0x10000;\n            if (iVar5 < 0x10000) {\n                iVar5 = 0x10000;\n            }\n            if (0 < *0x5d4588) {\n                if (*0x5d4588 < iVar5) {\n                    *(in_RAX + 0x180) = *0x5d4588 * *0x5d45c8 + *(in_RAX + 0x180) + 1;\n                    iVar3 = iVar4;\n                }\n                else {\n                    *(in_RAX + 0x180) = *(in_RAX + 0x180) + iVar3;\n                    iVar3 = iVar5;\n                }\n                LOCK();\n                *0x5d4588 = *0x5d4588 - iVar3;\n                if (iVar5 == iVar3) {\n                    if (bVar1) {\n                        fcn.0044f180(0);\n                    }\n                    return;\n                }\n            }\n            if ((*0x585d30 != '\\0') && (!bVar1)) {\n                fcn.0044f180(0);\n                bVar1 = true;\n            }\n            fcn.0045a220();\n            iVar4 = *(in_RAX + 0x88);\n            if (*0x5d3dd0 == 0) {\n                *(in_RAX + 0x88) = 0;\n                iVar3 = in_RAX;\n            }\n            else {\n                iVar3 = fcn.0045c6c0(iVar4, 0, arg3, iVar3);\n            }\n            if (iVar4 != 0) {\n                fcn.00417a40();\n                iVar3 = in_RAX;\n            }\n            if (-1 < *(iVar3 + 0x180)) goto code_r0x0041af11;\n            if (*(iVar3 + 0xb1) == '\\0') break;\n            fcn.0045a1a0();\n        }\n        cVar2 = fcn.0041b340();\n    } while (cVar2 == '\\0');\ncode_r0x0041af11:\n    if (bVar1) {\n        fcn.0044f180(0);\n    }\n    return;\n}\n",
        "token_count": 785
    },
    "0041afa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041afa0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    double dVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    double dVar10;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar9 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = in_RAX + 0x88;\n            if (*0x5d3dd0 == 0) {\n                *(in_RAX + 0x88) = 0;\n            }\n            else {\n                *(*0x20 + -0x50) = 0x41afde;\n                in_RAX = fcn.0045c6a0();\n            }\n            if (*0x5d3b64 == 0) {\n                *(in_RAX + 0x180) = 0;\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x41b012;\n            fcn.0045e320();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            LOCK();\n            iVar2 = *0x5801a0 + -1;\n            uVar6 = *0x5801a0 - 1;\n            uVar8 = *0x580190;\n            *0x5801a0 = iVar2;\n            if (*0x580190 != uVar6) {\n                *(*0x20 + -0x28) = *(*0x20 + -0x48);\n                *(*0x20 + -0x50) = 0x41b065;\n                fcn.00437400(4);\n                *(*(*0x20 + 8) + 0xb0) = 1;\n                *(*0x20 + -0x50) = 0x41b08f;\n                uVar5 = fcn.0041c400();\n                *(*0x20 + -0x20) = uVar5;\n                uVar5 = 2;\n                *(*0x20 + -0x50) = 0x41b0a8;\n                fcn.00437400(2);\n                dVar4 = *0x5d45c8;\n                dVar10 = *(*0x20 + -0x20) * *0x5d45c8;\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x180) = dVar10 + *(iVar1 + 0x180) + 1;\n                LOCK();\n                iVar2 = *0x5801a0 + 1;\n                uVar8 = *0x5801a0 + 1;\n                *0x5801a0 = iVar2;\n                if (uVar8 <= *0x580190) {\n                    if (*0x580190 == uVar8) {\n                        if (*0x580100 == 0) {\n                            if (*0x580188 < *0x58018c) {\n                                bVar3 = true;\n                            }\n                            else {\n                                bVar3 = false;\n                            }\n                        }\n                        else {\n                            bVar3 = true;\n                        }\n                        if (!bVar3) {\n                            if (*0x5d3dd0 == 0) {\n                                *(iVar1 + 0x88) = iVar1;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x41b158;\n                                fcn.0045c700(uVar5, uVar8, param_3, param_4);\n                            }\n                        }\n                    }\n                    *(*0x20 + -0x50) = 0x41b15d;\n                    fcn.0045e320();\n                    iVar1 = *(*(*(*0x20 + 8) + 0x30) + 0xa0);\n                    iVar7 = (*(*0x20 + -0x48) - *(*0x20 + -0x28)) + *(iVar1 + 0x1218);\n                    *(iVar1 + 0x1218) = iVar7;\n                    if (5000 < iVar7) {\n                        LOCK();\n                        *0x5d4590 = *0x5d4590 + iVar7;\n                        *(iVar1 + 0x1218) = 0;\n                    }\n                    return;\n                }\n                *(*0x20 + -0x34) = uVar8;\n                *(*0x20 + -0x2c) = *0x580190;\n                *(*0x20 + -0x50) = 0x41b1d7;\n                fcn.00434840(dVar10, dVar4);\n                uVar6 = uVar5;\n                *(*0x20 + -0x50) = 0x41b1e8;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x41b1f1;\n                fcn.00434e40();\n                *(*0x20 + -0x50) = 0x41b205;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x41b20e;\n                fcn.00434e40();\n                *(*0x20 + -0x50) = 0x41b213;\n                fcn.00434aa0();\n                *(*0x20 + -0x50) = 0x41b218;\n                fcn.004348c0();\n                uVar8 = 0x17;\n                *(*0x20 + -0x50) = 0x41b229;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x30) = uVar6;\n            *(*0x20 + -0x2c) = uVar8;\n            *(*0x20 + -0x50) = 0x41b236;\n            fcn.00434840();\n            *(*0x20 + -0x50) = 0x41b247;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x41b250;\n            fcn.00434e40();\n            *(*0x20 + -0x50) = 0x41b265;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x41b26e;\n            fcn.00434e40();\n            *(*0x20 + -0x50) = 0x41b273;\n            fcn.00434aa0();\n            *(*0x20 + -0x50) = 0x41b278;\n            fcn.004348c0();\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x50) = 0x41b289;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + -8) = 0x41b299;\n        fcn.0045ea60();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1808
    },
    "0041b480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041b480(void)\n\n{\n    double dVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (dVar1 = *0x5d45c8,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x580238 == 0) {\n        LOCK();\n        iVar2 = *0x5d4588;\n        *0x5d4588 = *0x5d4588 + in_RAX;\n        return iVar2;\n    }\n    fcn.0040a360();\n    iVar2 = dVar1 * in_RAX;\n    while( true ) {\n        iVar3 = *0x580238;\n        if ((*0x580238 == 0) || (iVar2 < 1)) goto code_r0x0041b5a9;\n        if ((*0x580238 != 0) && (*0x580238 = *(*0x580238 + 0xa0),  *0x580238 == 0)) {\n            *0x580240 = 0;\n        }\n        iVar2 = *(iVar3 + 0x180) + iVar2;\n        if (iVar2 < 0) break;\n        *(iVar3 + 0x180) = 0;\n        fcn.00436ca0(0);\n    }\n    *(iVar3 + 0x180) = iVar2;\n    *(iVar3 + 0xa0) = 0;\n    iVar2 = iVar3;\n    if (*0x580240 != 0) {\n        *(*0x580240 + 0xa0) = iVar3;\n        iVar2 = *0x580238;\n    }\n    *0x580238 = iVar2;\n    *0x580240 = iVar3;\n    iVar2 = 0;\ncode_r0x0041b5a9:\n    iVar3 = iVar2;\n    if (0 < iVar2) {\n        LOCK();\n        iVar3 = *0x5d4588;\n        *0x5d4588 = *0x5d4588 + iVar2 * *0x5d45c0;\n    }\n    iVar2 = fcn.0040a580(iVar3);\n    return iVar2;\n}\n",
        "token_count": 540
    },
    "0041b620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0041b620(void)\n\n{\n    uint64_t uVar1;\n    int64_t *in_RAX;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    int64_t *piVar8;\n    char cVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t *unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (unaff_R14[3] <= *0x20 + -0x180 && *0x20 + -0x180 != unaff_R14[3]) {\n            puVar10 = *0x20 + -0x200;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x12) >> 0xc & 1) != 0) {\n                uVar6 = *(in_RAX + 0x12) & 0xffffefff;\n                if (uVar6 < 3) {\n                    if (uVar6 == 1) goto code_r0x0041b689;\n                }\n                else {\n                    if (4 < uVar6) {\n                        if (uVar6 == 6) {\n                            return 0;\n                        }\ncode_r0x0041b80a:\n                        *(*0x20 + -0x1a8) = *(in_RAX + 0x12);\n                        puVar7 = in_RAX[0x13];\n                        *(*0x20 + -0x188) = puVar7;\n                        *(*0x20 + -0x208) = 0x41b825;\n                        fcn.00434840();\n                        *(*0x20 + -0x208) = 0x41b836;\n                        fcn.00435140();\n                        *(*0x20 + -0x208) = 0x41b845;\n                        fcn.004350c0();\n                        *(*0x20 + -0x208) = 0x41b856;\n                        fcn.00435140();\n                        *(*0x20 + -0x208) = 0x41b865;\n                        fcn.00434f40();\n                        *(*0x20 + -0x208) = 0x41b876;\n                        fcn.00435140();\n                        *(*0x20 + -0x208) = 0x41b885;\n                        fcn.00434e40();\n                        *(*0x20 + -0x208) = 0x41b88a;\n                        fcn.00434aa0();\n                        *(*0x20 + -0x208) = 0x41b88f;\n                        fcn.004348c0();\n                        *(*0x20 + -0x208) = 0x41b8a5;\n                        fcn.004330a0();\n                        while( true ) {\n                            *(*0x20 + -0x30) = *(*(*0x20 + -0x30) + 0x28);\ncode_r0x0041b8b9:\n                            if (*(*0x20 + -0x30) == 0) break;\n                            if (*(*(*0x20 + -0x30) + 0x18) != 0) {\n                                *(*0x20 + -0x208) = 0x41b8f6;\n                                fcn.0041c620(0x564460);\n                                puVar7 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x30) + 0x28) != 0) {\n                                *(*0x20 + -0x208) = 0x41b932;\n                                fcn.0041c620(0x564460);\n                                puVar7 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x30) + 1) != '\\0') {\n                                *(*0x20 + -0x208) = 0x41b976;\n                                fcn.0041c620(0x564460);\n                                puVar7 = *(*0x20 + 8);\n                            }\n                        }\n                        if (*(puVar7 + 8) != 0) {\n                            *(*0x20 + -0x208) = 0x41b99d;\n                            fcn.00420760(0);\n                        }\n                        iVar5 = 0;\n                        *(*0x20 + -0x208) = 0x41b9b5;\n                        uVar3 = fcn.00420b80(*(*0x20 + -0x40));\n                        *(*0x20 + -0x38) = uVar3;\n                        do {\n                            do {\n                                *(*0x20 + -0x208) = 0x41b9ca;\n                                iVar4 = fcn.004208a0();\n                                if (iVar4 == 0) {\n                                    while (iVar5 = *(*0x20 + -0x50),  iVar5 != 0) {\n                                        *(*0x20 + -0x50) = *(iVar5 + 0x18);\n                                        *(iVar5 + 0x10) = 0;\n                                        *(*0x20 + -0x208) = 0x41ba28;\n                                        fcn.00423180();\n                                    }\n                                    if (((*(*0x20 + -0x68) == 0) && (*(*0x20 + -0x58) == 0)) && (*(*0x20 + -0x60) == 0))\n                                    {\n                                        return *(*0x20 + -0x198);\n                                    }\n                                    iVar5 = 0x19;\n                                    *(*0x20 + -0x208) = 0x41ba7e;\n                                    iVar4 = fcn.004330a0();\n                                }\n                                else {\n                                    iVar4 = iVar4 - *(*0x20 + -0x80);\n                                    puVar7 = *(*0x20 + -0x38);\n                                }\n                                while (cVar9 = iVar5,  puVar7 != NULL) {\n                                    if (iVar4 < *puVar7) {\n                                        puVar7 = *(puVar7 + 4);\n                                    }\n                                    else {\n                                        if (iVar4 < *puVar7 + puVar7[1]) goto code_r0x0041b9e9;\n                                        puVar7 = *(puVar7 + 6);\n                                    }\n                                }\n                                puVar7 = NULL;\ncode_r0x0041b9e9:\n                            } while ((puVar7 == NULL) || (uVar1 = *(puVar7 + 2),  uVar1 == 0));\n                            *(puVar7 + 2) = 0;\n                            for (iVar5 = 0x56a3e0; iVar5 != 0; iVar5 = *(iVar5 + 0x220)) {\n                                if ((*(iVar5 + 0x130) < uVar1 || *(iVar5 + 0x130) == uVar1) &&\n                                   (uVar1 <= *(iVar5 + 0x100) && *(iVar5 + 0x100) != uVar1)) goto code_r0x0041bad6;\n                            }\n                            iVar5 = 0;\ncode_r0x0041bad6:\n                            iVar5 = *(uVar1 + 0xc) + *(iVar5 + 0x128);\n                            if (*(uVar1 + 8) < 0) {\n                                *(*0x20 + -0x1ad) = cVar9;\n                                *(*0x20 + -0x1a0) = puVar7;\n                                *(*0x20 + -0x28) = uVar1;\n                                *(*0x20 + -0x208) = 0x41bb0d;\n                                iVar4 = fcn.00414020();\n                                iVar5 = *(iVar4 + 0x18);\n                                puVar7 = *(*0x20 + -0x1a0);\n                                cVar9 = *(*0x20 + -0x1ad);\n                            }\n                            else {\n                                iVar4 = 0;\n                            }\n                            *(*0x20 + -400) = iVar4;\n                            puVar7 = *puVar7 + *(*0x20 + -0x80);\n                            if (cVar9 == '\\0') {\n                                *(*0x20 + -0x208) = 0x41bb9c;\n                                fcn.0041c620(iVar5);\n                            }\n                            else {\n                                *(*0x20 + -0x208) = 0x41bb68;\n                                fcn.0041cb40(iVar5);\n                            }\n                            iVar5 = *(*0x20 + -400);\n                            if (iVar5 != 0) {\n                                *(*0x20 + -0x208) = 0x41bbbc;\n                                fcn.00425020(2);\n                            }\n                        } while( true );\n                    }\ncode_r0x0041b689:\n                    if (unaff_R14 != in_RAX) {\n                        if (in_RAX[0xe] == 0) {\n                            if (*(in_RAX + 0xb4) == '\\0') {\n                                bVar11 = *(in_RAX + 0xb9) == '\\0';\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        *(*0x20 + -0x198) = in_RAX[1] - *in_RAX;\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (bVar11) {\n                            *(*0x20 + -0x208) = 0x41b6e7;\n                            fcn.00447860();\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(in_RAX + 0xb3) = 1;\n                        }\n                        *(*0x20 + -0x210) = unaff_RBP;\n                        *(*0x20 + -0x208) = 0x41b717;\n                        puVar2 = fcn.0045cc94();\n                        uVar3 = puVar2[1];\n                        *(*0x20 + -0x80) = *puVar2;\n                        *(*0x20 + -0x78) = uVar3;\n                        if (puVar2[10] != 0) {\n                            *(*0x20 + -0x208) = 0x41b75c;\n                            fcn.0041c620(0x564460);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(*0x20 + -0x20) = in_XMM15;\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x20) = 0x41bd40;\n                        *(*0x20 + -0x18) = *0x20 + -0x180;\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x200) = 0;\n                        *(*0x20 + -0x208) = 0x41b7da;\n                        fcn.00450a40(0, *0x20 + -0x180, 0, 0x7fffffff);\n                        puVar7 = *(*0x20 + 8);\n                        *(*0x20 + -0x30) = *(puVar7 + 10);\n                        goto code_r0x0041b8b9;\n                    }\n                    *(*0x20 + -0x208) = 0x41bbd6;\n                    piVar8 = unaff_R14;\n                    in_RAX = fcn.004330a0();\n                    uVar6 = piVar8;\n                }\n                if (uVar6 != 2) goto code_r0x0041b80a;\n                *(*0x20 + -0x1ac) = *(in_RAX + 0x12);\n                *(*0x20 + -0x188) = in_RAX[0x13];\n                *(*0x20 + -0x208) = 0x41bbfa;\n                fcn.00434840();\n                *(*0x20 + -0x208) = 0x41bc0b;\n                fcn.00435140();\n                *(*0x20 + -0x208) = 0x41bc18;\n                fcn.004350c0();\n                *(*0x20 + -0x208) = 0x41bc29;\n                fcn.00435140();\n                *(*0x20 + -0x208) = 0x41bc33;\n                fcn.00434f40();\n                *(*0x20 + -0x208) = 0x41bc45;\n                fcn.00435140();\n                *(*0x20 + -0x208) = 0x41bc50;\n                fcn.00434e40();\n                *(*0x20 + -0x208) = 0x41bc55;\n                fcn.00434aa0();\n                *(*0x20 + -0x208) = 0x41bc5a;\n                fcn.004348c0();\n                *(*0x20 + -0x208) = 0x41bc6b;\n                in_RAX = fcn.004330a0();\n            }\n            *(*0x20 + -0x1a4) = *(in_RAX + 0x12);\n            *(*0x20 + -0x188) = in_RAX[0x13];\n            *(*0x20 + -0x208) = 0x41bc86;\n            fcn.00434840();\n            *(*0x20 + -0x208) = 0x41bc97;\n            fcn.00435140();\n            *(*0x20 + -0x208) = 0x41bca5;\n            fcn.004350c0();\n            *(*0x20 + -0x208) = 0x41bcb6;\n            fcn.00435140();\n            *(*0x20 + -0x208) = 0x41bcc5;\n            fcn.00434f40();\n            *(*0x20 + -0x208) = 0x41bcd6;\n            fcn.00435140();\n            *(*0x20 + -0x208) = 0x41bce5;\n            fcn.00434fa0();\n            *(*0x20 + -0x208) = 0x41bcea;\n            fcn.00434aa0();\n            *(*0x20 + -0x208) = 0x41bcef;\n            fcn.004348c0();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x208) = 0x41bd05;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x41bd15;\n        fcn.0045ea60();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3444
    },
    "0041bfe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041bfe0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint32_t uVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5d3dd4 != '\\0') break;\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x60) = 0x41c3c5;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x41c3d5;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n    iVar5 = *(*(unaff_R14 + 0x30) + 0x90);\n    iVar4 = in_RAX[3];\n    if ((unaff_RBX & 0xc) == 0) {\n        iVar9 = 0x7fffffffffffffff;\n        uVar8 = 0;\n    }\n    else {\n        if ((unaff_RBX >> 2 & 1) == 0) {\n            uVar8 = 0;\n            if ((unaff_RBX & 8) != 0) {\n                uVar8 = 0x4d5da0;\n            }\n        }\n        else {\n            uVar8 = 0x4d5da8;\n        }\n        iVar9 = iVar4 + 100000;\n    }\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x18) = iVar5;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x10) = uVar8;\n    if (*0x58018c <= *0x580188) goto code_r0x0041c0af;\n    *(*0x20 + -0x40) = iVar4;\n    *(*0x20 + -0x38) = iVar9;\n    *(*0x20 + -0x41) = (unaff_RBX >> 1 & 1) != 0;\ncode_r0x0041c322:\n    if (*(iVar5 + 0xb1) == '\\0') {\n        bVar10 = false;\n    }\n    else if ((unaff_RBX & 1) == 0) {\n        bVar10 = *0x580780 != 0;\n    }\n    else {\n        bVar10 = true;\n    }\n    if (bVar10) {\ncode_r0x0041c0af:\n        do {\n            uVar7 = unaff_RBX;\n            if (*(iVar5 + 0xb1) == '\\0') {\n                bVar10 = false;\n            }\n            else if ((unaff_RBX & 1) == 0) {\n                bVar10 = *0x580780 != 0;\n            }\n            else {\n                bVar10 = true;\n            }\n            if (bVar10) {\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041c2ad;\n            }\n            *(*0x20 + -0x20) = iVar4;\n            *(*0x20 + -0x38) = iVar9;\n            if (*0x580100 == 0) {\n                *(*0x20 + -0x60) = 0x41c105;\n                fcn.00422d80();\n                in_RAX = *(*0x20 + 8);\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                iVar4 = 0;\n            }\n            else {\n                iVar1 = *(iVar4 + 0x10);\n                if (iVar1 == 0) {\n                    iVar4 = 0;\n                }\n                else {\n                    *(iVar4 + 0x10) = iVar1 - 1U;\n                    if (0xfc < iVar1 - 1U) goto code_r0x0041c2ef;\n                    iVar4 = *(iVar4 + 0x10 + iVar1 * 8);\n                }\n            }\n            if (iVar4 == 0) {\n                *(*0x20 + -0x60) = 0x41c165;\n                iVar4 = fcn.00422ba0(0, iVar5, iVar9);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x60) = 0x41c173;\n                    fcn.0042c700();\n                    *(*0x20 + -0x60) = 0x41c17d;\n                    iVar4 = fcn.00422ba0();\n                }\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            if (iVar4 == 0) {\n                iVar4 = *(*0x20 + -0x20);\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041c2ad;\n            }\n            *(*0x20 + -0x60) = 0x41c1b4;\n            fcn.0041c7c0(iVar4, iVar5, iVar9);\n            iVar5 = *(*0x20 + 8);\n            if (*(iVar5 + 0x18) < 2000) {\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n                iVar4 = *(*0x20 + -0x20);\n            }\n            else {\n                LOCK();\n                *0x5d4570 = *0x5d4570 + *(iVar5 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                if ((unaff_RBX >> 1 & 1) == 0) {\n                    iVar4 = *(*0x20 + -0x20);\n                }\n                else {\n                    *(*0x20 + -0x60) = 0x41c1fd;\n                    fcn.0041b480();\n                    iVar5 = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar4 = 0;\n                }\n                iVar9 = *(iVar5 + 0x18);\n                *(iVar5 + 0x18) = 0;\n                iVar9 = *(*0x20 + -0x38) - iVar9;\n                if (iVar9 < 1) {\n                    if (*(*0x20 + -0x10) == NULL) {\n                        cVar3 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x28) = iVar9;\n                        *(*0x20 + -0x30) = iVar4;\n                        pcVar2 = **(*0x20 + -0x10);\n                        *(*0x20 + -0x60) = 0x41c242;\n                        cVar3 = (*pcVar2)();\n                        iVar5 = *(*0x20 + 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        iVar9 = *(*0x20 + -0x28);\n                        iVar4 = *(*0x20 + -0x30);\n                    }\n                    uVar7 = unaff_RBX;\n                    if (cVar3 != '\\0') goto code_r0x0041c2ad;\n                    iVar9 = iVar9 + 100000;\n                }\n            }\n            iVar5 = *(*0x20 + -0x18);\n            in_RAX = *(*0x20 + 8);\n        } while( true );\n    }\n    LOCK();\n    uVar7 = *0x580188 + 1;\n    bVar10 = *0x58018c <= *0x580188;\n    *0x580188 = uVar7;\n    if (bVar10) goto code_r0x0041c0af;\n    *(*0x20 + -0x60) = 0x41c37f;\n    fcn.0041a260();\n    if (*(*0x20 + -0x10) == NULL) {\n        cVar3 = '\\0';\n    }\n    else {\n        pcVar2 = **(*0x20 + -0x10);\n        *(*0x20 + -0x60) = 0x41c392;\n        cVar3 = (*pcVar2)();\n    }\n    if (cVar3 != '\\0') {\n        iVar5 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + -0x40);\ncode_r0x0041c2ad:\n        if (0 < *(iVar5 + 0x18)) {\n            LOCK();\n            *0x5d4570 = *0x5d4570 + *(iVar5 + 0x18);\n            if ((uVar7 >> 1 & 1) != 0) {\n                iVar5 = *(iVar5 + 0x18);\n                *(*0x20 + -0x60) = 0x41c2d8;\n                fcn.0041b480(iVar5 - iVar4);\n                iVar5 = *(*0x20 + 8);\n            }\n            *(iVar5 + 0x18) = 0;\n        }\n        return;\n    }\n    goto code_r0x0041c2fc;\ncode_r0x0041c2ef:\n    *(*0x20 + -0x60) = 0x41c2fc;\n    fcn.0045ca40(0xfd);\ncode_r0x0041c2fc:\n    in_RAX = *(*0x20 + 8);\n    unaff_RBX = *(*0x20 + 0x10);\n    iVar5 = *(*0x20 + -0x18);\n    iVar4 = *(*0x20 + -0x40);\n    iVar9 = *(*0x20 + -0x38);\n    goto code_r0x0041c322;\n}\n",
        "token_count": 2470
    },
    "0041c400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041c400(void)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \ncode_r0x0041c400:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar4 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x5d3dd4 != '\\0') {\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar5 = -in_RAX[3];\n            iVar3 = *(*(unaff_R14 + 0x30) + 0x90);\n            *(*0x20 + -0x10) = iVar3;\n            do {\n                if ((*(iVar3 + 0xb1) != '\\0') || (unaff_RBX <= in_RAX[3] + iVar5)) goto code_r0x0041c5ba;\n                *(*0x20 + -0x18) = iVar5;\n                if (*0x580100 == 0) {\n                    *(*0x20 + -0x30) = 0x41c48a;\n                    fcn.00422d80();\n                    in_RAX = *(*0x20 + 8);\n                    iVar5 = *(*0x20 + -0x18);\n                }\n                iVar3 = *in_RAX;\n                if (iVar3 == 0) {\n                    iVar3 = 0;\n                }\n                else {\n                    iVar1 = *(iVar3 + 0x10);\n                    if (iVar1 == 0) {\n                        iVar3 = 0;\n                    }\n                    else {\n                        *(iVar3 + 0x10) = iVar1 - 1U;\n                        if (0xfc < iVar1 - 1U) goto code_r0x0041c5cc;\n                        iVar3 = *(iVar3 + 0x10 + iVar1 * 8);\n                    }\n                }\n                if (iVar3 == 0) {\n                    *(*0x20 + -0x30) = 0x41c4e5;\n                    iVar3 = fcn.00422ba0();\n                    if (iVar3 == 0) {\n                        *(*0x20 + -0x30) = 0x41c4f3;\n                        fcn.0042c700();\n                        *(*0x20 + -0x30) = 0x41c4fd;\n                        iVar3 = fcn.00422ba0();\n                    }\n                    iVar5 = *(*0x20 + -0x18);\n                    in_RAX = *(*0x20 + 8);\n                }\n                if (iVar3 == 0) {\n                    if (*0x58018c <= *0x580188) {\ncode_r0x0041c5ba:\n                        return iVar5 + in_RAX[3];\n                    }\n                    LOCK();\n                    uVar2 = *0x580188 + 1;\n                    bVar6 = *0x58018c <= *0x580188;\n                    *0x580188 = uVar2;\n                    if (bVar6) goto code_r0x0041c5ba;\n                    *(*0x20 + -0x30) = 0x41c552;\n                    iVar5 = fcn.0041a260(0);\n                    iVar5 = *(*0x20 + -0x18) + iVar5;\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x41c572;\n                    fcn.0041c7c0();\n                    in_RAX = *(*0x20 + 8);\n                    if (in_RAX[3] < 2000) {\n                        iVar5 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        LOCK();\n                        *0x5d4570 = *0x5d4570 + in_RAX[3];\n                        iVar5 = in_RAX[3];\n                        in_RAX[3] = 0;\n                        iVar5 = *(*0x20 + -0x18) + iVar5;\n                    }\n                }\n                iVar3 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + 0x10);\n            } while( true );\n        }\n        goto code_r0x0041c5d9;\n    }\n    goto code_r0x0041c5eb;\ncode_r0x0041c5cc:\n    *(*0x20 + -0x30) = 0x41c5d9;\n    fcn.0045ca40(0xfd);\ncode_r0x0041c5d9:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x30) = 0x41c5ea;\n    in_RAX = fcn.004330a0();\ncode_r0x0041c5eb:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + -8) = 0x41c5fa;\n    fcn.0045ea60();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    *0x20 = puVar4;\n    goto code_r0x0041c400;\n}\n",
        "token_count": 1304
    },
    "0041ce00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041ce00(ulong arg1, ulong noname_1, uint8_t *arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t unaff_RDI;\n    uint8_t *puVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX & 7) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                iVar1 = *(unaff_RDI + 0x50);\n                puVar8 = arg3 >> 3;\n                if (*0x5d3b33 == '\\0') {\n                    uVar6 = 1 << (arg3 & 7);\n                    if (((*0x5d3fec < 1) || (arg3 <= *(unaff_RDI + 0x30) && *(unaff_RDI + 0x30) != arg3)) ||\n                       (arg3 = puVar8,  (puVar8[*(unaff_RDI + 0x48)] & uVar6) != 0)) {\n                        if ((uVar6 & puVar8[iVar1]) != 0) {\n                            return;\n                        }\n                        LOCK();\n                        puVar8[iVar1] = puVar8[iVar1] | uVar6;\n                        uVar2 = *(unaff_RDI + 0x18);\n                        arg3 = uVar2 + 0x800000000000;\n                        if (arg3 >> 0x2a < 0x40) {\n                            iVar1 = *(*((arg3 >> 0x2a) * 8 + 0x5a5f90) + (arg3 >> 0x16 & 0xfffff) * 8);\n                            uVar5 = uVar2 >> 0x10 & 0x3f;\n                            arg3 = iVar1 + uVar5 + 0x21040;\n                            uVar6 = 1 << (uVar2 >> 0xd & 7);\n                            if ((uVar6 & *(iVar1 + 0x21040 + uVar5)) == 0) {\n                                LOCK();\n                                *arg3 = *arg3 | uVar6;\n                            }\n                            if ((*(unaff_RDI + 0x62) & 1) != 0) {\n                                unaff_RSI[2] = unaff_RSI[2] + *(unaff_RDI + 0x68);\n                                return;\n                            }\n                            goto code_r0x0041cf76;\n                        }\n                        goto code_r0x0041cfd4;\n                    }\n                }\n                else {\n                    *(*0x20 + 0x28) = unaff_RSI;\n                    *(*0x20 + -0x50) = 0x41cf65;\n                    cVar4 = fcn.00415220(arg1, iVar1, arg3);\n                    if (cVar4 != '\\0') {\n                        return;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RSI = *(*0x20 + 0x28);\ncode_r0x0041cf76:\n                    iVar1 = *unaff_RSI;\n                    if (iVar1 == 0) {\n                        bVar3 = false;\ncode_r0x0041cfa4:\n                        if (!bVar3) {\n                            *(*0x20 + -0x50) = 0x41cfb3;\n                            fcn.00422880();\n                        }\n                        return;\n                    }\n                    uVar2 = *(iVar1 + 0x10);\n                    if (uVar2 == 0xfd) {\n                        bVar3 = false;\n                        goto code_r0x0041cfa4;\n                    }\n                    if (uVar2 < 0xfd) {\n                        *(iVar1 + 0x18 + uVar2 * 8) = in_RAX;\n                        *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                        bVar3 = true;\n                        goto code_r0x0041cfa4;\n                    }\n                    *(*0x20 + -0x50) = 0x41cfd4;\n                    fcn.0045ca40(0xfd);\ncode_r0x0041cfd4:\n                    *(*0x20 + -0x50) = 0x41cfe5;\n                    fcn.0045ca60(0x40);\n                }\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x41cff4;\n                fcn.00434840();\n                *(*0x20 + -0x50) = 0x41d005;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x41d00f;\n                fcn.00434fa0();\n                *(*0x20 + -0x50) = 0x41d025;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x41d02f;\n                fcn.00434fa0();\n                *(*0x20 + -0x50) = 0x41d045;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x41d04f;\n                fcn.00434fa0();\n                *(*0x20 + -0x50) = 0x41d065;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x41d06a;\n                fcn.004348c0();\n                *(*0x20 + -0x50) = 0x41d085;\n                fcn.0041d120(*(*0x20 + -0x18));\n                arg1 = *(*0x20 + 8);\n                unaff_RDI = -1;\n                *(*0x20 + -0x50) = 0x41d0a5;\n                fcn.0041d120(arg1);\n                *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n                *(*0x20 + -0x50) = 0x41d0c5;\n                fcn.004330a0();\n            }\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x50) = 0x41d0d6;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + 0x30) = arg3;\n        *(puVar7 + -8) = 0x41d0fa;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        arg3 = *(puVar7 + 0x30);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1828
    },
    "0041d120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041d120(uint64_t arg1)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar2 = arg1 + 0x800000000000 >> 0x2a;\n    if (uVar2 < 0x40) {\n        iVar3 = *(uVar2 * 8 + 0x5a5f90);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(iVar3 + (arg1 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar3 == 0) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = *(iVar3 + 0x20000 + (arg1 >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.004348c0();\n    if (iVar3 == 0) {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.004348c0();\n        return;\n    }\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00435140();\n    fcn.00434e40();\n    fcn.00435140();\n    fcn.00434e40();\n    fcn.00435140();\n    fcn.004348c0();\n    if (*(iVar3 + 99) < *0x576d88) {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434aa0();\n        fcn.004348c0();\n    }\n    else {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.00435140();\n        fcn.004348c0();\n    }\n    uVar2 = *(iVar3 + 0x68);\n    if ((*(iVar3 + 99) == '\\x02') && (uVar2 == 0)) {\n        uVar2 = unaff_RDI + 8;\n    }\n    bVar1 = false;\n    for (uVar4 = 0; uVar4 < uVar2; uVar4 = uVar4 + 8) {\n        if ((uVar4 < 0x400) || ((unaff_RDI - 0x80 < uVar4 && (uVar4 < unaff_RDI + 0x80)))) {\n            if (bVar1) {\n                fcn.00434840();\n                fcn.00435140();\n                fcn.004348c0();\n            }\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00434e40();\n            fcn.00435140();\n            fcn.00434fa0();\n            fcn.004348c0();\n            if (unaff_RDI == uVar4) {\n                fcn.00434840();\n                fcn.00435140();\n                fcn.004348c0();\n            }\n            fcn.00434840();\n            fcn.00434aa0();\n            fcn.004348c0();\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.004348c0();\n    }\n    return;\n}\n",
        "token_count": 936
    },
    "0041d560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d560(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t *puVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    if (*0x5d3b33 == '\\0') {\n        uVar7 = (unaff_RBX - *(in_RAX + 0x18)) * *(in_RAX + 0x5c);\n        puVar6 = (uVar7 >> 0x23) + *(in_RAX + 0x50);\n        LOCK();\n        *puVar6 = *puVar6 | 1 << (uVar7 >> 0x20 & 7);\n        uVar7 = *(in_RAX + 0x18);\n        uVar5 = uVar7 + 0x800000000000 >> 0x2a;\n        if (uVar5 < 0x40) {\n            iVar2 = *(*(uVar5 * 8 + 0x5a5f90) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            uVar5 = uVar7 >> 0x10 & 0x3f;\n            puVar6 = iVar2 + uVar5 + 0x21040;\n            uVar4 = 1 << (uVar7 >> 0xd & 7);\n            if ((uVar4 & *(iVar2 + 0x21040 + uVar5)) == 0) {\n                LOCK();\n                *puVar6 = *puVar6 | uVar4;\n            }\n            piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x1248;\n            *piVar1 = *piVar1 + arg1;\n            return;\n        }\n        fcn.0045ca60(0x40);\n    }\n    fcn.004330a0();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 501
    },
    "0041d760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d760(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong noname_0;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong arg2;\n    ulong unaff_RBX;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    double dVar5;\n    double dVar6;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    *(in_RAX + 0xb0) = 0;\n    *(in_RAX + 0xb8) = 0;\n    *(in_RAX + 0xc0) = 0;\n    *(in_RAX + 200) = in_XMM15;\n    *(in_RAX + 0xd8) = in_XMM15;\n    *(in_RAX + 0xe8) = 0;\n    *(in_RAX + 0xf0) = unaff_RBX;\n    *(in_RAX + 0x90) = *(in_RAX + 0x98);\n    uVar2 = *(in_RAX + 0x78) + 0x10000;\n    if (*(in_RAX + 0x68) < uVar2) {\n        *(in_RAX + 0x68) = uVar2;\n    }\n    dVar5 = *0x4f99d0 * arg1;\n    iVar3 = *0x4f99e0 + dVar5;\n    *(in_RAX + 0xf8) = iVar3;\n    dVar6 = iVar3 / dVar5 - *0x4f9a00;\n    if ((dVar6 < str.333333._0_8_) || (*0x4f99d8 < dVar6)) {\n        if (dVar5 < iVar3) {\n            *(in_RAX + 0xf8) = iVar3 + -1;\n        }\n        *(in_RAX + 0x110) = (dVar5 - *(in_RAX + 0xf8)) / arg1;\n    }\n    else {\n        *(in_RAX + 0x110) = 0;\n    }\n    if (0 < *0x5d3ff8) {\n        *(in_RAX + 0xf8) = arg1;\n        *(in_RAX + 0x110) = 0;\n    }\n    iVar1 = *0x57fc98;\n    iVar3 = *0x57fc90;\n    for (iVar4 = 0; iVar4 < iVar1; iVar4 = iVar4 + 1) {\n        *(*(iVar3 + iVar4 * 8) + 0x1218) = in_XMM15;\n    }\n    fcn.0041da40();\n    if (0 < *0x5d3ff0) {\n        noname_0 = *(in_RAX + 0x100);\n        arg2 = *0x5d4540;\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434b40(noname_0, arg2);\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.00435140();\n        fcn.00434f40();\n        fcn.00435140();\n        fcn.00434b40(noname_0, arg2);\n        fcn.00434aa0();\n        fcn.004348c0();\n    }\n    return;\n}\n",
        "token_count": 845
    },
    "0041dba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0041dba0(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong noname_0;\n    uint64_t uVar2;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    ulong extraout_XMM0_Qa;\n    double dVar4;\n    double dVar5;\n    double dVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    *0x5d4530 = *0x5d4528;\n    iVar3 = unaff_RBX - *(in_RAX + 0xf0);\n    dVar5 = *0x4f99d0;\n    if (0 < iVar3) {\n        dVar5 = *0x4f99d0 + *(in_RAX + 0xd0) / (iVar3 * arg1);\n    }\n    if (*(in_RAX + 0x78) <= *(in_RAX + 0x18)) {\n        *0x5d4530 = *0x5d4528;\n        return 0;\n    }\n    if (iVar3 < 1) {\n        dVar4 = 0.0;\n    }\n    else {\n        dVar4 = *(in_RAX + 0xe8) / (iVar3 * arg1);\n    }\n    uVar2 = *(in_RAX + 0x78) - *(in_RAX + 0x18);\n    if (uVar2 < 0) {\n        dVar6 = uVar2 >> 1 | uVar2 & 1;\n        dVar6 = dVar6 + dVar6;\n    }\n    else {\n        dVar6 = uVar2;\n    }\n    cVar1 = fcn.0041e940(*(in_RAX + 0x20), \n                         ((dVar4 + dVar5) * dVar6) /\n                         ((*0x4f9a00 - dVar5) * (*(in_RAX + 0xb0) + *(in_RAX + 0xb8) + *(in_RAX + 0xc0))), *0x4f9a00, \n                         in_RAX + 0x28);\n    *(in_RAX + 0x20) = extraout_XMM0_Qa;\n    if (cVar1 == '\\0') {\n        *(in_RAX + 0x20) = 0;\n    }\n    if (0 < *0x5d3ff0) {\n        fcn.00434840();\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434f40(dVar5 * *0x4f9a38);\n        fcn.00435140();\n        fcn.00434f40();\n        fcn.00435140();\n        fcn.004348c0();\n        fcn.00434840();\n        fcn.00434f40();\n        fcn.00435140();\n        fcn.00434f40();\n        fcn.00435140();\n        fcn.00434f40();\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.00435140();\n        fcn.004348c0();\n        arg2 = *(in_RAX + 0x78);\n        noname_0 = *(in_RAX + 0x68);\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.00435140();\n        fcn.00434f40();\n        fcn.00435140();\n        fcn.00434b40(noname_0, arg2);\n        fcn.00435140();\n        fcn.004348c0();\n        if (cVar1 == '\\0') {\n            fcn.00434840();\n            fcn.00435140();\n            fcn.004348c0();\n        }\n        fcn.00434840();\n        fcn.00434aa0();\n        fcn.004348c0();\n        cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n        *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n        if (cVar1 == '\\x01') {\n            fcn.0040a580();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1035
    },
    "0041dfc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041dfc0(void)\n\n{\n    int32_t *piVar1;\n    uchar auVar2 [16];\n    char cVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0xf8) < 1) {\n                return;\n            }\n            if (*0x5d3b70 < 2) {\n                return;\n            }\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) ||\n               (piVar1 = *(*(unaff_R14 + 0x30) + 0xa0),  piVar1 == NULL)) {\n                return;\n            }\n            iVar5 = *piVar1;\n            *(*0x20 + -0x14) = iVar5;\n            iVar4 = 0;\n            while( true ) {\n                iVar6 = *0x5d3b70;\n                if (4 < iVar4) {\n                    return;\n                }\n                uVar8 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar2 = ZEXT816(uVar8) * ZEXT816(uVar8 ^ 0xe7037ed1a0b428db);\n                *(*(unaff_R14 + 0x30) + 0xf0) = uVar8;\n                iVar6 = (SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) * (iVar6 - 1) >> 0x20;\n                if (iVar5 <= iVar6) {\n                    iVar6 = iVar6 + 1;\n                }\n                if (*0x57fc98 <= iVar6) break;\n                if (*(*(*0x57fc90 + iVar6 * 8) + 4) == 1) {\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x30) = 0x41e0d0;\n                    cVar3 = fcn.004404e0();\n                    if (cVar3 != '\\0') {\n                        return;\n                    }\n                    iVar4 = *(*0x20 + -0x10);\n                    iVar5 = *(*0x20 + -0x14);\n                }\n                iVar4 = iVar4 + 1;\n            }\n            *(*0x20 + -0x30) = 0x41e109;\n            in_RAX = fcn.0045ca40(*0x57fc98);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x41e114;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 779
    },
    "0041e120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e1b2)\n\nulong fcn.0041e120(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5d3b64 != 0) break;\n            unaff_RBX = 0x36;\n            *(*0x20 + -0x38) = 0x41e37c;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41e38c;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n    if (((unaff_RBX == 0) || (*(unaff_RBX + 0x1238) == 0)) ||\n       ((*(*(unaff_RBX + 0x1238) + 0x10) == 0 && (*(*(unaff_RBX + 0x1240) + 0x10) == 0)))) {\n        if (*0x580100 == 0) {\n            if (*0x580188 < *0x58018c) {\n                bVar4 = true;\n            }\n            else {\n                bVar4 = false;\n            }\n        }\n        else {\n            bVar4 = true;\n        }\n    }\n    else {\n        bVar4 = true;\n    }\n    if (!bVar4) {\n        return 0;\n    }\n    if (*0x5d3c68 == 0) {\n        piVar6 = NULL;\n    }\n    else {\n        piVar6 = (*0x5d3c68 >> 0x13) << 3;\n        *0x5d3c68 = *piVar6;\n        LOCK();\n    }\n    if (piVar6 == NULL) {\n        return 0;\n    }\n    do {\n        uVar2 = *(in_RAX + 0xf8);\n        if (uVar2 < 1) break;\n        LOCK();\n        puVar1 = in_RAX + 0xf8;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * (*puVar1 ^ uVar2 - 1);\n    } while (uVar2 != uVar3);\n    if (uVar2 < 1) {\n        if (*(in_RAX + 0x110) == 0.0) {\n            *(*0x20 + -0x38) = 0x41e316;\n            fcn.0040a100(in_RAX, piVar6, 0x5d3c68);\n            return 0;\n        }\n        *(*0x20 + -0x10) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = piVar6;\n        *(*0x20 + -0x38) = 0x41e27a;\n        fcn.0045e320();\n        iVar5 = *(*0x20 + -0x30) - *(*(*0x20 + -0x10) + 0xf0);\n        if (iVar5 < 1) {\n            iVar7 = *(*0x20 + 0x10);\n        }\n        else {\n            iVar7 = *(*0x20 + 0x10);\n            if (*(*(*0x20 + -0x10) + 0x110) < *(iVar7 + 0x1220) / iVar5) {\n                *(*0x20 + -0x38) = 0x41e2e6;\n                fcn.0040a100();\n                return 0;\n            }\n        }\n        *(iVar7 + 0x1228) = 2;\n        piVar6 = *(*0x20 + -0x20);\n    }\n    else {\n        *(unaff_RBX + 0x1228) = 1;\n    }\n    *(*0x20 + -0x18) = piVar6[2];\n    *(*0x20 + -0x38) = 0x41e347;\n    fcn.00437400(1);\n    if (*0x585d30 != '\\0') {\n        *(*0x20 + -0x38) = 0x41e35c;\n        fcn.004505e0();\n    }\n    return *(*0x20 + -0x18);\n}\n",
        "token_count": 1209
    },
    "0041e3a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e3a0(void)\n\n{\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    *(in_RAX + 0xa8) = unaff_RBX;\n    *(in_RAX + 0x78) = unaff_RBX;\n    *(in_RAX + 0x80) = *(in_RAX + 0xb0);\n    *(in_RAX + 0x88) = *(in_RAX + 0xb0);\n    if (*0x585d30 != '\\0') {\n        uStack16 = *0x5d4538;\n        fcn.0044f180(&uStack16);\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0041e500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e500(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (unaff_RBX != 0) {\n        LOCK();\n        *0x5d4538 = *0x5d4538 + unaff_RBX;\n        if (*0x585d30 != '\\0') {\n            fcn.00450880();\n        }\n    }\n    if ((*0x5d3b64 == 0) && (arg1 != 0)) {\n        LOCK();\n        iVar1 = *0x5d4540 + arg1;\n        arg1 = *0x5d4540;\n        *0x5d4540 = iVar1;\n    }\n    if (*0x5d3b64 != 0) {\n        fcn.0041da40(arg1);\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "0041e5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e5c0(void)\n\n{\n    int64_t iVar1;\n    int32_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    double dVar7;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*in_RAX < 0) {\n        uVar2 = 0xffffffffffffffff;\n    }\n    else {\n        uVar2 = ((*(in_RAX + 0x24) + *(in_RAX + 0x2a) + *(in_RAX + 0x28)) * *in_RAX >> 1) / 0x32 + *(in_RAX + 0x2a);\n    }\n    uVar4 = *(in_RAX + 2);\n    if ((*0x57fe7c != -0x80000000) && (uVar4 < *(in_RAX + 0x1e) + 0x100000U)) {\n        uVar4 = *(in_RAX + 0x1e) + 0x100000U;\n    }\n    iVar1 = *(in_RAX + 0x2a);\n    uVar3 = uVar2 - iVar1;\n    if (uVar3 < 0) {\n        dVar7 = uVar3 & 1 | uVar3 >> 1;\n        dVar7 = dVar7 + dVar7;\n    }\n    else {\n        dVar7 = uVar3;\n    }\n    dVar7 = dVar7 * *0x4f99e8;\n    if (*0x4f9a58 <= dVar7) {\n        uVar5 = dVar7 - *0x4f9a58 | 0x8000000000000000;\n    }\n    else {\n        uVar5 = dVar7;\n    }\n    if (uVar4 < uVar5 + iVar1) {\n        uVar4 = uVar5 + iVar1;\n    }\n    if (uVar3 < 0) {\n        dVar7 = uVar3 & 1 | uVar3 >> 1;\n        dVar7 = dVar7 + dVar7;\n    }\n    else {\n        dVar7 = uVar3;\n    }\n    dVar7 = dVar7 * *0x4f99f8;\n    if (*0x4f9a58 <= dVar7) {\n        uVar3 = dVar7 - *0x4f9a58 | 0x8000000000000000;\n    }\n    else {\n        uVar3 = dVar7;\n    }\n    uVar5 = uVar2 - *(in_RAX + 2);\n    if ((*(in_RAX + 2) < uVar2) && (uVar3 < uVar5)) {\n        uVar3 = uVar5;\n    }\n    uVar5 = uVar3 + iVar1;\n    if (uVar3 + iVar1 < uVar4) {\n        uVar5 = uVar4;\n    }\n    uVar3 = *(in_RAX + 0x22) + *(in_RAX + 0x24) + *(in_RAX + 0x28);\n    if (uVar3 < 0) {\n        dVar7 = uVar3 & 1 | uVar3 >> 1;\n        dVar7 = dVar7 + dVar7;\n    }\n    else {\n        dVar7 = uVar3;\n    }\n    dVar7 = dVar7 * *0x4f9a18 * *0x4f99f0 * *(in_RAX + 8);\n    if (*0x4f9a58 <= dVar7) {\n        uVar3 = dVar7 - *0x4f9a58 | 0x8000000000000000;\n    }\n    else {\n        uVar3 = dVar7;\n    }\n    uVar6 = uVar2 - uVar3;\n    if (uVar2 < uVar3) {\n        uVar6 = uVar4;\n    }\n    if (uVar6 < uVar4) {\n        uVar6 = uVar4;\n    }\n    if (uVar5 < uVar6) {\n        uVar6 = uVar5;\n    }\n    *(in_RAX + 6) = uVar6;\n    if (uVar2 < uVar6) {\n        uVar2 = uVar6;\n    }\n    *(in_RAX + 0x1a) = uVar2;\n    if (*0x585d30 != '\\0') {\n        fcn.004508e0();\n    }\n    if (*0x5d3b6c != 0) {\n        fcn.0041da40(in_RAX);\n    }\n    return;\n}\n",
        "token_count": 1116
    },
    "0041eba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041eba0(void)\n\n{\n    uint uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    uVar1 = *0x57fe40;\n    if (*0x57fe30 != '\\0') {\n        *0x57fe40 = 0;\n        fcn.0044cf80(uVar1);\n        *0x57fe30 = '\\0';\n        *(*0x57fe28 + 0xa0) = 0;\n        fcn.0043b580();\n    }\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 184
    },
    "0041ed80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041ed80(ulong param_1, uint64_t param_2, ulong param_3, ulong param_4)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    double extraout_XMM0_Qa;\n    double dVar7;\n    double dVar8;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            iVar3 = unaff_R14;\n            iVar2 = unaff_R14;\n            if (*0x5d3dd0 != 0) {\n                *(*0x20 + -0xa8) = 0x41edd2;\n                fcn.0045c6a0();\n                iVar2 = *0x57fe28;\n            }\n            *0x57fe28 = iVar2;\n            *(*0x20 + -0xa8) = 0x41ede5;\n            fcn.0040a360();\n            *0x57fe30 = 1;\n            *(*0x20 + -0xa8) = 0x41edf8;\n            iVar2 = fcn.0040c440();\n            if (*0x5d3dd0 == 0) {\n                *0x57fe38 = iVar2;\n                *(iVar2 + 0x18) = 0x4d5bc8;\n            }\n            else {\n                *(*0x20 + -0xa8) = 0x41ee25;\n                fcn.0045c5a0(iVar3, param_2, param_3, param_4);\n                *(*0x20 + -0xa8) = 0x41ee35;\n                fcn.0045c6a0(0x4d5bc8);\n            }\n            *(*0x20 + -0xa8) = 0x41ee49;\n            fcn.00404720();\n            *(*0x20 + -0xa8) = 0x41ee6c;\n            fcn.004359e0(0xd);\n            *(*0x20 + -0x48) = 0x3fd599999999999a;\n            *(*0x20 + -0x40) = 0x41486a0000000000;\n            *(*0x20 + -0x38) = 0x41cdcd6500000000;\n            *(*0x20 + -0x30) = 0x3f50624dd2f1a9fc;\n            *(*0x20 + -0x28) = 0x408f400000000000;\n            *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            iVar3 = 0;\n            dVar7 = *0x4f99c0;\ncode_r0x0041eeca:\n            *(*0x20 + -0x58) = iVar3;\n            *(*0x20 + -0x68) = dVar7;\n            dVar8 = 0.0;\n            uVar5 = 0;\n            while( true ) {\n                if ((*0x4f9a50 <= dVar8) || (param_2 = *0x5d5890 - *0x5d58a0,  param_2 <= *0x5a5f78))\n                goto code_r0x0041eef5;\n                *(*0x20 + -0x60) = dVar8;\n                *(*0x20 + -0x78) = uVar5;\n                *(*0x20 + -0xa8) = 0x41f087;\n                fcn.0045e320();\n                *(*0x20 + -0x80) = *(*0x20 + -0xa0);\n                *(*0x20 + -0xa8) = 0x41f0b5;\n                iVar3 = fcn.0041f1c0();\n                *(*0x20 + -0x70) = iVar3;\n                LOCK();\n                *0x5a5f00 = *0x5a5f00 + iVar3;\n                *(*0x20 + -0xa8) = 0x41f0cc;\n                fcn.0045e320();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                if (*(*0x20 + -0x80) < *(*0x20 + -0xa0)) {\n                    dVar8 = (*(*0x20 + -0xa0) - *(*0x20 + -0x80)) + *(*0x20 + -0x60);\n                    uVar5 = *(*0x20 + -0x70);\n                }\n                else {\n                    if (*0x5d3cd8 == 0) goto code_r0x0041f1a0;\n                    uVar5 = *(*0x20 + -0x70);\n                    uVar4 = SUB168(ZEXT816(uVar5) / ZEXT816(*0x5d3cd8), 0);\n                    param_2 = uVar5 % *0x5d3cd8;\n                    if (uVar4 < 0) {\n                        dVar7 = uVar4 >> 1 | SUB164(ZEXT816(uVar5) / ZEXT816(*0x5d3cd8), 0) & 1;\n                        dVar7 = dVar7 + dVar7;\n                    }\n                    else {\n                        dVar7 = uVar4;\n                    }\n                    dVar8 = *(*0x20 + -0x60) + dVar7 * *0x4f9a40;\n                }\n                uVar5 = *(*0x20 + -0x78) + uVar5;\n                if (*0x5d3c40 != 0) break;\n                dVar7 = *(*0x20 + -0x68);\n            }\n            dVar7 = *(*0x20 + -0x68);\ncode_r0x0041eef5:\n            if (uVar5 == 0) {\n                *(*0x20 + -0xa8) = 0x41eff6;\n                fcn.0040a360();\n                *0x57fe30 = 1;\n                *(*0x20 + -0xa8) = 0x41f025;\n                fcn.004359e0();\n                dVar7 = *(*0x20 + -0x68);\n                iVar3 = *(*0x20 + -0x58);\n                goto code_r0x0041eeca;\n            }\n            if (*0x5d3cd8 <= uVar5) {\n                if (dVar8 < *0x4f9a50) {\n                    dVar8 = *0x4f9a50;\n                }\n                *(*0x20 + -0x50) = dVar8;\n                *(*0x20 + -0xa8) = 0x41ef2f;\n                iVar3 = fcn.0041ec40(dVar7, dVar8 / dVar7);\n                iVar2 = *(*0x20 + -0x58);\n                if (iVar2 < 1) {\n                    *(*0x20 + -0xa8) = 0x41ef9e;\n                    cVar1 = fcn.0041e940(*(*0x20 + -0x50) / (*0x5d3b70 * (iVar3 + *(*0x20 + -0x50))));\n                    if (cVar1 == '\\0') {\n                        *(*0x20 + -0xa8) = 0x41efbc;\n                        fcn.0040a360();\n                        *0x57fe44 = 1;\n                        *(*0x20 + -0xa8) = 0x41efd1;\n                        fcn.0040a580();\n                        iVar3 = 5000000000;\n                        dVar7 = *0x4f99c0;\n                    }\n                    else {\n                        iVar3 = *(*0x20 + -0x58);\n                        dVar7 = extraout_XMM0_Qa;\n                    }\n                }\n                else {\n                    param_2 = *(*0x20 + -0x50) + iVar3;\n                    iVar3 = iVar2 - param_2;\n                    if (iVar2 < param_2) {\n                        iVar3 = 0;\n                    }\n                    dVar7 = *(*0x20 + -0x68);\n                }\n                goto code_r0x0041eeca;\n            }\n            *(*0x20 + -0xa8) = 0x41f19c;\n            fcn.004330a0();\ncode_r0x0041f1a0:\n            *(*0x20 + -0xa8) = 0x41f1a5;\n            in_RAX = fcn.00431720();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x41f1b0;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2246
    },
    "0041f3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f3c0(uchar param_1)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + -0x30) = 0x41f3ea;\n            fcn.00434840();\n            unaff_RBX = *0x5d58a0;\n            if (*0x5d5890 - *0x5d58a0 != 0) {\n                *(*0x20 + -0x10) = *0x5d58a0;\n                *(*0x20 + -0x18) = (*0x5d5898 * 100) / (*0x5d5890 - *0x5d58a0);\n                *(*0x20 + -0x30) = 0x41f42d;\n                fcn.00434840();\n                *(*0x20 + -0x30) = 0x41f43e;\n                fcn.00435140();\n                *(*0x20 + -0x30) = 0x41f449;\n                fcn.00434e40();\n                *(*0x20 + -0x30) = 0x41f44e;\n                fcn.00434a60();\n                *(*0x20 + -0x30) = 0x41f45c;\n                fcn.00434e40();\n                *(*0x20 + -0x30) = 0x41f46d;\n                fcn.00435140();\n                *(*0x20 + -0x30) = 0x41f47b;\n                fcn.00434e40();\n                *(*0x20 + -0x30) = 0x41f48c;\n                fcn.00435140();\n                *(*0x20 + -0x30) = 0x41f496;\n                fcn.00434e40();\n                *(*0x20 + -0x30) = 0x41f4a7;\n                fcn.00435140();\n                *(*0x20 + -0x30) = 0x41f4ac;\n                fcn.004348c0();\n                if (*(*0x20 + 0x18) == '\\0') {\n                    if (*0x57fe44 != '\\0') {\n                        *(*0x20 + -0x30) = 0x41f4c5;\n                        fcn.00434840();\n                        *(*0x20 + -0x30) = 0x41f4d6;\n                        fcn.00435140();\n                        *(*0x20 + -0x30) = 0x41f4db;\n                        fcn.004348c0();\n                        *0x57fe44 = '\\0';\n                    }\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x41f4e9;\n                    fcn.00434840();\n                    *(*0x20 + -0x30) = 0x41f4fa;\n                    fcn.00435140();\n                    *(*0x20 + -0x30) = 0x41f4ff;\n                    fcn.004348c0();\n                }\n                *(*0x20 + -0x30) = 0x41f505;\n                fcn.00434840();\n                *(*0x20 + -0x30) = 0x41f50a;\n                fcn.00434aa0();\n                *(*0x20 + -0x30) = 0x41f50f;\n                fcn.004348c0();\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n                *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n                if (cVar1 == '\\x01') {\n                    *(*0x20 + -0x30) = 0x41f537;\n                    fcn.0040a580();\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x41f546;\n            iVar2 = *0x5d5898;\n            in_EAX = fcn.00431720();\n            param_1 = iVar2;\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x41f559;\n        fcn.0045a360();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1241
    },
    "0041f580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f580(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045ea60();\n    }\n    fcn.0040a360();\n    if (0 < *0x5d4008) {\n        fcn.0041f3c0(0);\n    }\n    fcn.0042bd80();\n    fcn.0042bb40();\n    *(in_RAX + 0x100f0) = (*(in_RAX + 0x100a8) + 0x3fffffU & 0xffffffffffc00000) >> 6;\n    *(in_RAX + 0x100e8) = *(in_RAX + 0x100e8) + 1;\n    *(in_RAX + 0x100f8) = 0;\n    *(in_RAX + 0x10108) = *0x5645a8;\n    *(in_RAX + 0x10100) = *0x564588;\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 280
    },
    "0041f900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041f9fc)\n\nint64_t fcn.0041f900(int64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        iVar2 = arg1;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000 < arg1 + 0x800000000000U) {\n                iVar2 = arg1 - unaff_RBX;\n            }\n            else {\n                iVar2 = 0;\n            }\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if ((unaff_RBX & 0x3fffff) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                uVar3 = *0x5d3cd8 >> 0xd;\n                if (uVar3 == 0) {\n                    uVar3 = 1;\n                }\n                *(*0x20 + -0x48) = uVar3;\n                uVar3 = unaff_RDI >> 0xd;\n                if ((unaff_RDI & 0x1fff) != 0) {\n                    uVar3 = (unaff_RDI >> 0xd) + 1;\n                }\n                *(*0x20 + -0x40) = uVar3;\n                *(*0x20 + -0x80) = 0x41f9a5;\n                iVar2 = fcn.0041fd40(arg1);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n                *(*0x20 + -0x28) = unaff_RBX;\n                *(*0x20 + -0x20) = in_XMM15;\n                *(*0x20 + -0x10) = 0;\n                *(*0x20 + -0x20) = 0x41fbc0;\n                *(*0x20 + -0x18) = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + -0x48);\n                *(*0x20 + -0x10) = unaff_RDI;\n                if (unaff_RBX + 0x800000000000 < arg1 + 0x800000000000U) {\n                    iVar2 = arg1 - unaff_RBX;\n                }\n                else {\n                    iVar2 = 0;\n                }\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x80) = 0x41fa7b;\n                uVar1 = (**(*0x20 + -0x20))(*(*0x20 + -0x20), *0x20 + -0x20);\n                if (arg1 == '\\0') {\n                    return 0;\n                }\n                *(*0x20 + -0x38) = uVar1;\n                *(*0x20 + -0x80) = 0x41faa5;\n                fcn.0040a360();\n                if (*(*0x20 + -0x38) >> 0xd < 0x2000) {\n                    *(*0x20 + -0x80) = 0x41faef;\n                    uVar1 = fcn.00420420(*(*0x20 + -0x48));\n                    *(*0x20 + -0x50) = 0x1ff;\n                    *(*0x20 + -0x80) = 0x41fb15;\n                    uVar1 = fcn.0041ff20(uVar1);\n                    *(*0x20 + -0x30) = uVar1;\n                    *(*0x20 + -0x80) = 0x41fb32;\n                    fcn.0040a580();\n                    return *(*0x20 + -0x50) << 0xd;\n                }\n                iVar2 = 0x2000;\n                *(*0x20 + -0x80) = 0x41fb70;\n                fcn.0045ca60(0x2000);\n            }\n            unaff_RBX = 0x2d;\n            *(*0x20 + -0x80) = 0x41fb85;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = iVar2;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x41fb9f;\n        fcn.0045ea60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1249
    },
    "0041ff20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0041ff20(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = unaff_RBX * 0x400000 + arg1 * 0x2000;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x28) = iVar3 + -0x800000000000;\n            *(*0x20 + -0x50) = 0x41ff7a;\n            arg1 = unaff_RDI;\n            iVar3 = fcn.00426e80(unaff_RDI);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x50) = 0x41ff9b;\n                fcn.0040a580();\n                *(*0x20 + -0x10) = *(*0x20 + 8) + 0x100b8;\n                *(*0x20 + -0x50) = 0x41ffb2;\n                fcn.0040a360();\n                if (*(*0x20 + -0x18) < *(*(*0x20 + 8) + 0x10100) + 0x800000000000U) {\n                    *(*(*0x20 + 8) + 0x10100) = *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x50) = 0x41ffea;\n                fcn.0040a580();\n                if (*(*(*0x20 + 8) + 0x10120) == '\\0') {\n                    *(*0x20 + -0x50) = 0x42000b;\n                    fcn.004154a0();\n                    iVar3 = *0x5d58a0;\n                    *(*0x20 + -0x20) = *(*0x20 + 0x20) * 0x2000;\n                    LOCK();\n                    *0x5d58a0 = *0x5d58a0 + *(*0x20 + 0x20) * 0x2000;\n                    *(*0x20 + -0x50) = 0x420031;\n                    piVar4 = fcn.0042c4c0(iVar3);\n                    iVar3 = *(*0x20 + -0x20);\n                    LOCK();\n                    iVar1 = *piVar4;\n                    *piVar4 = *piVar4 - iVar3;\n                    LOCK();\n                    piVar4 = piVar4 + 1;\n                    iVar2 = *piVar4;\n                    *piVar4 = *piVar4 + iVar3;\n                    *(*0x20 + -0x50) = 0x420053;\n                    fcn.0042c5a0(iVar1, iVar2);\n                }\n                *(*0x20 + -0x50) = 0x420065;\n                fcn.0040a360();\n                unaff_RDI = 1;\n                *(*0x20 + -0x50) = 0x42007e;\n                fcn.00428340(*(*0x20 + 0x20));\n                if (*(*0x20 + 0x10) >> 0xd < 0x2000) {\n                    *(*0x20 + -0x50) = 0x4200bf;\n                    fcn.004295e0(*(*0x20 + 0x20));\n                    return *(*0x20 + -0x28);\n                }\n                arg1 = 0x2000;\n                *(*0x20 + -0x50) = 0x4200d8;\n                fcn.0045ca60(0x2000);\n            }\n            unaff_RBX = 0xf;\n            *(*0x20 + -0x50) = 0x4200e9;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x420105;\n        fcn.0045ea60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1241
    },
    "00420120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00420120(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 5) {\n                if (unaff_RBX == 1) {\n                    return in_RAX;\n                }\n                if (unaff_RBX == 2) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x5555555555555555) + 0x5555555555555555 | 0x5555555555555555);\n                    goto code_r0x00420266;\n                }\n                if (unaff_RBX == 4) {\n                    uVar2 = ~((in_RAX & 0x7777777777777777) + 0x7777777777777777 | in_RAX | 0x7777777777777777);\ncode_r0x00420266:\n                    return ~(uVar2 - (-(unaff_RBX - 1 < 0x40) & uVar2 >> (unaff_RBX - 1 & 0x3f)) | uVar2);\n                }\n            }\n            else if (unaff_RBX < 0x11) {\n                if (unaff_RBX == 8) {\n                    uVar2 = ~((in_RAX & 0x7f7f7f7f7f7f7f7f) + 0x7f7f7f7f7f7f7f7f | in_RAX | 0x7f7f7f7f7f7f7f7f);\n                    goto code_r0x00420266;\n                }\n                if (unaff_RBX == 0x10) {\n                    uVar2 = ~((in_RAX & 0x7fff7fff7fff7fff) + 0x7fff7fff7fff7fff | in_RAX | 0x7fff7fff7fff7fff);\n                    goto code_r0x00420266;\n                }\n            }\n            else {\n                if (unaff_RBX == 0x20) {\n                    uVar2 = ~((in_RAX & 0x7fffffff7fffffff) + 0x7fffffff7fffffff | in_RAX | 0x7fffffff7fffffff);\n                    goto code_r0x00420266;\n                }\n                if (unaff_RBX == 0x40) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x7fffffffffffffff) + 0x7fffffffffffffff | 0x7fffffffffffffff);\n                    goto code_r0x00420266;\n                }\n            }\n            unaff_RBX = 0xb;\n            *(*0x20 + -0x20) = 0x4202a5;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x4202b5;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 853
    },
    "004208a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.004208a0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004208a0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x18) = in_RAX + 0x118;\n        iVar3 = in_RAX + 0x128;\n        *(*0x20 + -0x20) = iVar3;\n        *(*0x20 + -0x10) = iVar3;\n        iVar2 = 0;\n        do {\n            if (1 < iVar2) {\n                iVar2 = *(in_RAX + 0x120);\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x50) = 0x420998;\n                    fcn.00423180(iVar2, iVar3);\n                    *(*(*0x20 + 8) + 0x120) = 0;\n                }\n                return 0;\n            }\n            piVar5 = *(*0x20 + iVar2 * 8 + -0x18);\n            iVar6 = *piVar5;\n            if (iVar6 != 0) {\n                if (*(iVar6 + 0x10) != 0) goto code_r0x0042095b;\n                if (*(in_RAX + 0x120) != 0) {\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x28) = piVar5;\n                    *(*0x20 + -0x38) = iVar6;\n                    *(*0x20 + -0x50) = 0x42092f;\n                    fcn.00423180(iVar2, iVar3);\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    iVar3 = *(*0x20 + -0x20);\n                    piVar5 = *(*0x20 + -0x28);\n                    iVar6 = *(*0x20 + -0x38);\n                }\n                *(in_RAX + 0x120) = iVar6;\n                iVar6 = *(iVar6 + 0x18);\n                *piVar5 = iVar6;\n                if (iVar6 != 0) goto code_r0x0042095b;\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x004209c6;\ncode_r0x0042095b:\n    iVar3 = *(iVar6 + 0x10);\n    uVar1 = iVar3 - 1;\n    *(iVar6 + 0x10) = uVar1;\n    if (uVar1 < 0xfc) {\n        return *(iVar6 + 0x18 + iVar3 * 8);\n    }\n    *(*0x20 + -0x50) = 0x4209c5;\n    in_RAX = fcn.0045ca40(0xfc);\ncode_r0x004209c6:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x4209d0;\n    fcn.0045a360();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x004208a0;\n}\n",
        "token_count": 910
    },
    "00420ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420dd6)\n// WARNING: Removing unreachable block (ram,0x00420da3)\n\nint64_t fcn.00420ca0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x10130);\n            *(*0x20 + -0x10) = uVar2;\n            uVar3 = *0x57fe80;\ncode_r0x00420ce1:\n            if (0x10f < uVar3) {\n                if (*0x57fe80 != 0xffffffff) {\n                    LOCK();\n                    *0x57fe80 = 0xffffffff;\n                }\n                return 0;\n            }\n            if (0x87 < (uVar3 >> 1 & 0xff)) goto code_r0x00420e26;\n            *(*0x20 + -0xc) = uVar3;\n            if ((uVar3 & 1) == 0) {\n                if (1 < -((uVar2 >> 1 & 1) - 1)) goto code_r0x00420e1a;\n                *(*0x20 + -0x28) = 0x420d4a;\n                iVar1 = fcn.0042c000();\ncode_r0x00420d80:\n                if (iVar1 != 0) {\n                    if (*0x57fe80 < *(*0x20 + -0xc)) {\n                        LOCK();\n                        *0x57fe80 = *(*0x20 + -0xc);\n                    }\n                    return iVar1;\n                }\n                uVar3 = *(*0x20 + -0xc) + 1;\n                uVar2 = *(*0x20 + -0x10);\n                goto code_r0x00420ce1;\n            }\n            if (-((uVar2 >> 1 & 1) - 1) < 2) {\n                *(*0x20 + -0x28) = 0x420d77;\n                iVar1 = fcn.0042c000();\n                goto code_r0x00420d80;\n            }\n            *(*0x20 + -0x28) = 0x420e1a;\n            fcn.0045ca40(2);\ncode_r0x00420e1a:\n            *(*0x20 + -0x28) = 0x420e26;\n            fcn.0045ca40(2);\ncode_r0x00420e26:\n            *(*0x20 + -0x28) = 0x420e33;\n            in_RAX = fcn.0045ca40(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x420e3e;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 805
    },
    "00420e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00420e60(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_RAX;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    ulong noname_0;\n    ulong arg2;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5a5f30 == unaff_EBX) {\n                while( true ) {\n                    uVar1 = *in_RAX;\n                    uVar2 = uVar1;\n                    uVar3 = (uVar1 & 0x7fffffff) - 1;\n                    param_1 = uVar3;\n                    if (0x7fffffff < uVar3) break;\n                    LOCK();\n                    if (uVar1 == *in_RAX) {\n                        *in_RAX = uVar1 - 1;\n                        if (uVar1 == 0x80000000) {\n                            if (0 < *0x5d3ff0) {\n                                *(*0x20 + -0x28) = *0x5a5f58;\n                                *(*0x20 + -0x10) = *0x5d4538;\n                                *(*0x20 + -0x18) = *0x5a5f68;\n                                *(*0x20 + -0x20) = *0x5a5f70;\n                                *(*0x20 + -0x40) = 0x420f10;\n                                arg2 = *0x5a5f68;\n                                fcn.00434840();\n                                *(*0x20 + -0x40) = 0x420f25;\n                                fcn.00435140();\n                                *(*0x20 + -0x40) = 0x420f33;\n                                fcn.00434e40();\n                                *(*0x20 + -0x40) = 0x420f45;\n                                fcn.00435140();\n                                noname_0 = *(*0x20 + -0x18);\n                                *(*0x20 + -0x40) = 0x420f5b;\n                                fcn.00434e40();\n                                *(*0x20 + -0x40) = 0x420f6c;\n                                fcn.00435140();\n                                *(*0x20 + -0x40) = 0x420f76;\n                                fcn.00434e40();\n                                *(*0x20 + -0x40) = 0x420f87;\n                                fcn.00435140();\n                                *(*0x20 + -0x40) = 0x420f92;\n                                fcn.00434b40(noname_0, arg2);\n                                *(*0x20 + -0x40) = 0x420fa5;\n                                fcn.00435140();\n                                *(*0x20 + -0x40) = 0x420faa;\n                                uVar2 = fcn.004348c0();\n                            }\n                            return uVar2;\n                        }\n                        return uVar2;\n                    }\n                }\n                *(*0x20 + -0x40) = 0x420fcf;\n                fcn.004330a0();\n            }\n            unaff_EBX = 0x31;\n            *(*0x20 + -0x40) = 0x420fe5;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        puVar4[0x14] = param_1;\n        *(puVar4 + -8) = 0x420ff8;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x14];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 986
    },
    "00421020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00421020(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                *(*0x20 + -0x40) = 0x421045;\n                iVar2 = fcn.004213a0();\n                if (iVar2 == -1) break;\n                *0x57fe78 = *0x57fe78 + 1;\n            }\n            if ((*0x57fe7c & 0x7fffffff) == 0) {\n                *(*0x20 + -0x24) = *0x5a5f30;\n                iVar2 = 0;\n                uVar1 = *0x5a5f30;\n                while( true ) {\n                    if (0x87 < iVar2) {\n                        *(*0x20 + -0x40) = 0x4210ed;\n                        fcn.0041eba0();\n                        *(*0x20 + -0x40) = 0x4210f2;\n                        fcn.00426340();\n                        return;\n                    }\n                    uVar3 = -((uVar1 >> 1 & 1) - 1);\n                    if (1 < uVar3) break;\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x10) = iVar2 * 0xc0;\n                    *(*0x20 + -0x18) = uVar3 * 5;\n                    *(*0x20 + -0x40) = 0x42109a;\n                    fcn.0042c140(0x5a6238);\n                    *(*0x20 + -0x40) = 0x4210bc;\n                    fcn.0042c140(*(*0x20 + -0x10) + 0x5a6290);\n                    iVar2 = *(*0x20 + -0x20) + 1;\n                    uVar1 = *(*0x20 + -0x24);\n                }\n                *(*0x20 + -0x40) = 0x421108;\n                fcn.0045ca40(2);\n            }\n            *(*0x20 + -0x40) = 0x421119;\n            fcn.004330a0();\n        }\n        *(puVar4 + -8) = 0x42111f;\n        fcn.0045a360();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 666
    },
    "00421140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421140(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar2 = unaff_R14;\n    if (*0x5d3dd0 != 0) {\n        fcn.0045c6a0();\n        iVar2 = *0x57fe68;\n    }\n    *0x57fe68 = iVar2;\n    fcn.0040a360();\n    *0x57fe70 = 1;\n    fcn.00404720();\n    fcn.004359e0();\n    do {\n        while (iVar2 = fcn.004213a0(),  iVar2 != -1) {\n            *0x57fe74 = *0x57fe74 + 1;\n            fcn.0045a1a0();\n        }\n        while (cVar1 = fcn.004234a0(),  cVar1 != '\\0') {\n            fcn.0045a1a0();\n        }\n        fcn.0040a360();\n        if (*0x57fe7c == -0x80000000) {\n            *0x57fe70 = 1;\n            fcn.004359e0();\n        }\n        else {\n            fcn.0040a580();\n        }\n    } while( true );\n}\n",
        "token_count": 340
    },
    "004212a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004212a0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 1) != '\\0') {\n                iVar1 = *in_RAX + -2;\n                if (*(unaff_RBX + 0x58) != iVar1) {\n                    return 0;\n                }\n                LOCK();\n                if (iVar1 != *(unaff_RBX + 0x58)) {\n                    return 0;\n                }\n                *(unaff_RBX + 0x58) = *in_RAX + -1;\n                return unaff_RBX;\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x20) = 0x421314;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x421325;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 414
    },
    "004213a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004213e5)\n// WARNING: Removing unreachable block (ram,0x004214d6)\n\nulong fcn.004213a0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            uVar7 = *0x57fe7c & 0x80000000;\n            if (uVar7 == 0) {\n                *0x57fe7c = *0x57fe7c + 1;\n                LOCK();\n            }\n            *(*0x20 + -0x28) = *0x5a5f30;\n            *(*0x20 + -0x24) = uVar7 == 0;\n            if (uVar7 != 0) {\n                *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                return 0xffffffffffffffff;\n            }\ncode_r0x00421431:\n            do {\n                *(*0x20 + -0x50) = 0x42143d;\n                iVar5 = fcn.00420ca0();\n                if (iVar5 == 0) {\n                    uVar7 = *0x57fe7c & 0x80000000;\n                    if (uVar7 == 0) {\n                        *0x57fe7c = *0x57fe7c | 0x80000000;\n                        LOCK();\n                    }\n                    bVar9 = uVar7 == 0;\n                    iVar5 = -1;\ncode_r0x004214f1:\n                    *(*0x20 + -0x32) = bVar9;\n                    *(*0x20 + -0x18) = iVar5;\n                    *(*0x20 + -0x50) = 0x42150f;\n                    fcn.00420e60(*(*0x20 + -0x24));\n                    if (*(*0x20 + -0x32) != '\\0') {\n                        *(*0x20 + -0x48) = 0x4d5e50;\n                        *(*0x20 + -0x50) = 0x421528;\n                        fcn.0045a220();\n                        *0x57fe40 = 1;\n                    }\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                    return *(*0x20 + -0x18);\n                }\n                if (*(iVar5 + 99) == '\\x01') {\n                    *(*0x20 + -0x50) = 0x421472;\n                    iVar6 = fcn.004212a0();\n                    *(*0x20 + -0x20) = iVar6;\n                    if (iVar5 != '\\0') {\n                        *(*0x20 + -0x18) = *(iVar6 + 0x20);\n                        *(*0x20 + -0x50) = 0x421490;\n                        cVar4 = fcn.00421760();\n                        if (cVar4 == '\\0') {\n                            iVar5 = 0;\n                        }\n                        else {\n                            iVar5 = *(*0x20 + -0x18);\n                            LOCK();\n                            *0x5a5f88 = *0x5a5f88 + iVar5;\n                        }\n                        bVar9 = false;\n                        goto code_r0x004214f1;\n                    }\n                    goto code_r0x00421431;\n                }\n                iVar2 = *(iVar5 + 0x58);\n                iVar3 = *(*0x20 + -0x28);\n            } while ((iVar3 == iVar2) || (iVar2 == iVar3 + 3));\n            *(*0x20 + -0x31) = *(iVar5 + 99);\n            *(*0x20 + -0x2c) = iVar2;\n            *(*0x20 + -0x30) = iVar3;\n            *(*0x20 + -0x50) = 0x42157a;\n            fcn.00434840();\n            *(*0x20 + -0x50) = 0x42158b;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x421598;\n            fcn.00434e40();\n            *(*0x20 + -0x50) = 0x4215a9;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x4215b2;\n            fcn.00434e40();\n            *(*0x20 + -0x50) = 0x4215c5;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x4215ce;\n            fcn.00434e40();\n            *(*0x20 + -0x50) = 0x4215d3;\n            fcn.00434aa0();\n            *(*0x20 + -0x50) = 0x4215d8;\n            fcn.004348c0();\n            *(*0x20 + -0x50) = 0x4215e9;\n            fcn.004330a0();\n        }\n        *(puVar8 + -8) = 0x4215ef;\n        fcn.0045a360();\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1439
    },
    "00421600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042163c)\n\nvoid fcn.00421600(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30);\n            if (((*(piVar1 + 0x1b) != 0) || (*(piVar1 + 0x18) != 0)) || (*piVar1 == unaff_R14)) {\n                uVar3 = *0x57fe7c & 0x80000000;\n                if (uVar3 == 0) {\n                    *0x57fe7c = *0x57fe7c + 1;\n                    LOCK();\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = *0x5a5f30;\n                *(*0x20 + -0x1c) = uVar3 == 0;\n                if (uVar3 == 0) {\n                    *(*0x20 + -0x38) = 0x42169d;\n                    uVar2 = fcn.004212a0();\n                    *(*0x20 + -0x18) = uVar2;\n                    if (in_RAX != '\\0') {\n                        *(*0x20 + -0x38) = 0x4216ce;\n                        fcn.00421760();\n                        *(*0x20 + -0x38) = 0x4216e5;\n                        fcn.00420e60(*(*0x20 + -0x1c));\n                        return;\n                    }\n                    *(*0x20 + -0x38) = 0x4216bb;\n                    fcn.00420e60();\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                while( true ) {\n                    if ((*(in_RAX + 0x58) == *(*0x20 + -0x20)) || (*(in_RAX + 0x58) == *(*0x20 + -0x20) + 3)) break;\n                    *(*0x20 + -0x30) = 0x4d5e58;\n                    *(*0x20 + -0x38) = 0x4216ff;\n                    fcn.0045a220();\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                return;\n            }\n            *(*0x20 + -0x38) = 0x421748;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x421753;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 768
    },
    "00422620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422620(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    double extraout_XMM0_Qa;\n    double dVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x5a5f70 == 0.0) {\n        return;\n    }\n    if (*0x585d30 != '\\0') {\n        fcn.00450100();\n    }\n    do {\n        iVar1 = *0x5a5f60;\n        uVar3 = (*0x5d4538 - *0x5a5f68) + in_RAX;\n        if (uVar3 < 0) {\n            dVar5 = uVar3 >> 1 | uVar3 & 1;\n            dVar5 = dVar5 + dVar5;\n        }\n        else {\n            dVar5 = uVar3;\n        }\n        dVar5 = *0x5a5f70 * dVar5;\n        iVar4 = dVar5;\n        do {\n            if (iVar4 - unaff_RBX <= *0x5a5f58 - iVar1) {\ncode_r0x00422739:\n                if (*0x585d30 != '\\0') {\n                    fcn.00450200();\n                }\n                return;\n            }\n            iVar2 = fcn.004213a0(dVar5, 0);\n            if (iVar2 == -1) {\n                *0x5a5f70 = 0.0;\n                goto code_r0x00422739;\n            }\n            dVar5 = extraout_XMM0_Qa;\n        } while (*0x5a5f60 == iVar1);\n    } while( true );\n}\n",
        "token_count": 456
    },
    "00422880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00422880(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar1 = *in_RAX;\n            if (iVar1 == 0) {\n                *(*0x20 + -0x28) = 0x422915;\n                fcn.00422820();\n                iVar2 = **(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                bVar4 = false;\n            }\n            else if (*(iVar1 + 0x10) == 0xfd) {\n                iVar2 = in_RAX[1];\n                *in_RAX = iVar2;\n                in_RAX[1] = iVar1;\n                bVar4 = *(iVar2 + 0x10) == 0xfd;\n                if (bVar4) {\n                    *(*0x20 + -0x10) = 0xfd;\n                    *(*0x20 + -0x28) = 0x4228d9;\n                    fcn.004231e0();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x28) = 0x4228e7;\n                    iVar2 = fcn.00422f00();\n                    **(*0x20 + 8) = iVar2;\n                    bVar4 = *(*0x20 + -0x10) == 0xfd;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n            }\n            else {\n                bVar4 = false;\n                iVar2 = iVar1;\n            }\n            if (*(iVar2 + 0x10) < 0xfd) {\n                *(iVar2 + 0x18 + *(iVar2 + 0x10) * 8) = unaff_RBX;\n                *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                if ((bVar4) && (*0x5d3b6c == 1)) {\n                    *(*0x20 + -0x28) = 0x422953;\n                    fcn.0041dfc0();\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x422967;\n            in_RAX = fcn.0045ca40(0xfd);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x422977;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 789
    },
    "004229a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004229a0(uint64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char cVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x58) = 0x4229e6;\n                fcn.00422820();\n                iVar4 = **(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n            }\n            cVar6 = '\\0';\n            while( true ) {\n                if (arg1 == 0) {\n                    if ((cVar6 != '\\0') && (*0x5d3b6c == 1)) {\n                        *(*0x20 + -0x58) = 0x422ae5;\n                        fcn.0041dfc0();\n                    }\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1;\n                while (uVar2 = *(iVar4 + 0x10),  uVar2 == 0xfd) {\n                    *(*0x20 + -0x58) = 0x422af7;\n                    fcn.004231e0();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x58) = 0x422b05;\n                    iVar3 = fcn.00422f00();\n                    piVar1 = *(*0x20 + 8);\n                    iVar4 = piVar1[1];\n                    *piVar1 = iVar4;\n                    piVar1[1] = iVar3;\n                    arg1 = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    cVar6 = '\\x01';\n                }\n                if (0xfd < uVar2) goto code_r0x00422b46;\n                iVar3 = uVar2 - 0xfd;\n                uVar7 = -iVar3;\n                if (SBORROW8(arg1, -iVar3) != arg1 + iVar3 < 0) {\n                    uVar7 = arg1;\n                }\n                if (unaff_RBX != iVar4 + (uVar2 << 3 & iVar3 >> 0x3f) + 0x18) {\n                    *(*0x20 + -0x30) = iVar4;\n                    *(*0x20 + -0x28) = uVar7;\n                    *(*0x20 + -0x31) = cVar6;\n                    *(*0x20 + -0x58) = 0x422a98;\n                    fcn.0045d380(uVar7 << 3);\n                    arg1 = *(*0x20 + -0x20);\n                    iVar4 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    cVar6 = *(*0x20 + -0x31);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    uVar7 = *(*0x20 + -0x28);\n                }\n                *(iVar4 + 0x10) = *(iVar4 + 0x10) + uVar7;\n                if (arg1 < uVar7) break;\n                unaff_RDI = unaff_RDI - uVar7;\n                arg1 = arg1 - uVar7;\n                unaff_RBX = unaff_RBX + (-unaff_RDI >> 0x3f & uVar7 << 3);\n            }\n            *(*0x20 + -0x58) = 0x422b46;\n            fcn.0045cb00(arg1);\ncode_r0x00422b46:\n            arg1 = 0xfd;\n            *(*0x20 + -0x58) = 0x422b53;\n            in_RAX = fcn.0045cb00(0xfd);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x422b6d;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1377
    },
    "00422ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00422ba0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = *in_RAX;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x30) = 0x422bca;\n                fcn.00422820();\n                in_RAX = *(*0x20 + 8);\n                iVar3 = *in_RAX;\n            }\n            if (*(iVar3 + 0x10) == 0) {\n                iVar3 = in_RAX[1];\n                iVar2 = *in_RAX;\n                *in_RAX = iVar3;\n                in_RAX[1] = iVar2;\n                if (*(iVar3 + 0x10) == 0) {\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x30) = 0x422bfb;\n                    iVar3 = fcn.00423240();\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x30) = 0x422c14;\n                    fcn.00423180();\n                    iVar3 = *(*0x20 + -0x18);\n                    **(*0x20 + 8) = iVar3;\n                }\n            }\n            iVar2 = *(iVar3 + 0x10);\n            uVar1 = iVar2 - 1;\n            *(iVar3 + 0x10) = uVar1;\n            if (uVar1 < 0xfd) {\n                return *(iVar3 + 0x10 + iVar2 * 8);\n            }\n            *(*0x20 + -0x30) = 0x422c65;\n            in_RAX = fcn.0045ca40(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x422c70;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 629
    },
    "00422c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00422c80(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*in_RAX != 0) {\n        if (*(*in_RAX + 0x10) == 0) {\n            fcn.00423180();\n        }\n        else {\n            fcn.004231e0();\n            *(in_RAX + 4) = 1;\n        }\n        *in_RAX = 0;\n        if (*(in_RAX[1] + 0x10) == 0) {\n            fcn.00423180();\n        }\n        else {\n            fcn.004231e0();\n            *(in_RAX + 4) = 1;\n        }\n        in_RAX[1] = 0;\n    }\n    if (in_RAX[2] != 0) {\n        LOCK();\n        *0x580180 = *0x580180 + in_RAX[2];\n        in_RAX[2] = 0;\n    }\n    iVar1 = *0x5d4570;\n    iVar2 = in_RAX[3];\n    if (iVar2 != 0) {\n        LOCK();\n        *0x5d4570 = *0x5d4570 + iVar2;\n        in_RAX[3] = 0;\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 369
    },
    "00422d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422d80(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*in_RAX != 0) {\n        if (*(in_RAX[1] + 0x10) == 0) {\n            if (*(*in_RAX + 0x10) < 5) {\n                return;\n            }\n            iVar1 = fcn.004232e0();\n            *in_RAX = iVar1;\n            *(in_RAX + 4) = 1;\n        }\n        else {\n            fcn.004231e0();\n            *(in_RAX + 4) = 1;\n            iVar1 = fcn.00422f00();\n            in_RAX[1] = iVar1;\n        }\n        if (*0x5d3b6c == 1) {\n            fcn.0041dfc0();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "00422e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422e40(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) != 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x422e76;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x422e85;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 264
    },
    "00422ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422ea0(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x422ed6;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x422ee5;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 264
    },
    "00422f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422f00(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    int64_t iStack72;\n    uint64_t uStack64;\n    int64_t *piStack56;\n    int64_t *piStack48;\n    uint64_t uStack40;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x580108 == 0) {\n        piVar1 = NULL;\n        goto code_r0x00422f29;\n    }\n    while( true ) {\n        if (*0x580108 == 0) {\n            piVar1 = NULL;\n        }\n        else {\n            piVar1 = (*0x580108 >> 0x13) << 3;\n            *0x580108 = *piVar1;\n            LOCK();\n        }\n        if (piVar1 != NULL) {\n            piStack32 = piVar1;\n            fcn.00422ea0();\n            piVar1 = piStack32;\n        }\ncode_r0x00422f29:\n        if (piVar1 != NULL) {\n            return;\n        }\n        iStack72 = 0;\n        piStack56 = piVar1;\n        if (*0x580158 != 0) {\n            fcn.0040a360();\n            iStack72 = *0x580158;\n            if (*0x580158 != 0) {\n                fcn.00425440();\n                fcn.004255c0();\n            }\n            fcn.0040a580();\n        }\n        if (iStack72 != 0) goto code_r0x0042301e;\n        auStack24 = CONCAT88(&iStack72, 0x423120);\n        fcn.0045a220();\n        if (iStack72 != 0) break;\n        fcn.004330a0();\n    }\n    fcn.0040a360();\n    fcn.004255c0();\n    fcn.0040a580();\ncode_r0x0042301e:\n    uStack40 = 0;\n    piVar1 = piStack56;\n    while (uStack40 + 0x800 < 0x8001) {\n        piStack32 = *(iStack72 + 0x18) + uStack40;\n        piStack32[2] = 0;\n        uStack64 = uStack40;\n        piStack48 = piVar1;\n        uStack40 = uStack40 + 0x800;\n        fcn.0040a260();\n        piVar1 = piStack32;\n        if (uStack64 != 0) {\n            fcn.00423180();\n            piVar1 = piStack48;\n        }\n    }\n    return;\n}\n",
        "token_count": 649
    },
    "004233a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004233a0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4233c5;\n            fcn.0040a360();\n            if (*0x580100 == 0) {\n                *0x580108 = 0;\n                if (*0x580168 != NULL) {\n                    for (; *0x580168 != NULL; *0x580168 = **0x580168) {\n                        (*0x580168)[2] = 0x580158;\n                    }\n                    if (*0x580158 == 0) {\n                        *0x580158 = *0x580168;\n                        *0x580160 = *0x580170;\n                        *0x580168 = in_XMM15;\n                    }\n                    else {\n                        **0x580170 = *0x580158;\n                        *(*0x580158 + 8) = *0x580170;\n                        *0x580158 = *0x580168;\n                        *0x580168 = in_XMM15;\n                    }\n                }\n                *(*0x20 + -0x20) = 0x4233f8;\n                fcn.0040a580();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42348b;\n            fcn.004330a0();\n        }\n        *(puVar1 + -8) = 0x423491;\n        fcn.0045a360();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 463
    },
    "004234a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004234a0(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    if ((*0x5d3b6c == 0) && (*0x580158 != 0)) {\n        fcn.0045a220();\n        uVar1 = *0x580158;\n        fcn.0040a580();\n        return uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    fcn.0040a580();\n    return 0;\n}\n",
        "token_count": 179
    },
    "00423801": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00423801(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x5a5f90);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if ((iVar2 != 0) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) {\n        if (*(iVar2 + 99) - 1U < 2) {\n            return in_RAX & 0xffffffffffffff00 | (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX);\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 337
    },
    "004238a1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004238a1(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x5a5f90);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 354
    },
    "00423aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423aa0(void)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    uint64_t uVar5;\n    bool bVar6;\n    int64_t in_RAX;\n    uint64_t uVar7;\n    int64_t noname_1;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (0x7fffffffffffffff < *(in_RAX + 0x10180)) {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar4 = *(unaff_R14 + 0x30);\n    if (*0x585d30 != '\\0') {\n        fcn.00450100();\n    }\n    arg1 = *(in_RAX + 0x103f8);\n    bVar6 = false;\ncode_r0x00423b4d:\n    do {\n        if (unaff_RBX == 0) {\ncode_r0x00423c58:\n            if (bVar6) {\n                fcn.0040a580();\n            }\n            if (*0x585d30 != '\\0') {\n                fcn.00450200();\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            return;\n        }\n        uVar7 = *(in_RAX + 0x10188);\n        if (uVar7 != 0) {\n            uVar8 = uVar7;\n            if (unaff_RBX < uVar7) {\n                uVar8 = unaff_RBX;\n            }\n            LOCK();\n            puVar2 = in_RAX + 0x10188;\n            uVar5 = *puVar2;\n            *puVar2 = *puVar2 ^ (uVar7 == uVar5) * (*puVar2 ^ uVar7 - uVar8);\n            if (uVar7 == uVar5) {\n                unaff_RBX = unaff_RBX - uVar8;\n            }\n            goto code_r0x00423b4d;\n        }\n        LOCK();\n        puVar2 = in_RAX + 0x10180;\n        uVar7 = *puVar2;\n        *puVar2 = *puVar2 + 0x200;\n        if (arg1 <= uVar7 >> 9) {\n            *(in_RAX + 0x10180) = 0x8000000000000000;\n            goto code_r0x00423c58;\n        }\n        noname_1 = iVar4;\n        if (!bVar6) {\n            fcn.0040a360();\n        }\n        uVar7 = fcn.00423ce0(arg1, noname_1, 0x200);\n        if (unaff_RBX < uVar7) {\n            LOCK();\n            *(in_RAX + 0x10188) = *(in_RAX + 0x10188) + (uVar7 - unaff_RBX);\n            unaff_RBX = 0;\n        }\n        else {\n            unaff_RBX = unaff_RBX - uVar7;\n        }\n        bVar6 = true;\n    } while( true );\n}\n",
        "token_count": 854
    },
    "00423ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00423d12)\n\nulong fcn.00423ce0(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uchar uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar8;\n    uint64_t unaff_RDI;\n    uint64_t uVar9;\n    uint8_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        uVar8 = unaff_RSI;\n        uVar11 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar6 = *0x57fe7c & 0x80000000;\n            if (uVar6 == 0) {\n                *0x57fe7c = *0x57fe7c + 1;\n                LOCK();\n            }\n            *(*0x20 + -0x88) = *0x5a5f30;\n            *(*0x20 + -0x84) = uVar6 == 0;\n            if (uVar6 != 0) {\n                return 0;\n            }\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar4 = 0;\n            while( true ) {\n                if (arg3 == 0) {\n                    *(*0x20 + -0x70) = iVar4;\n                    *(*0x20 + -0xa8) = 0x423e90;\n                    fcn.00420e60(*(*0x20 + -0x84));\n                    if (*0x585d30 != '\\0') {\n                        *(*0x20 + -0xa8) = 0x423ea5;\n                        fcn.0040a580();\n                        *(*0x20 + -0xa8) = 0x423ebe;\n                        fcn.00450160(*(*0x20 + -0x70));\n                        *(*0x20 + -0xa8) = 0x423eca;\n                        fcn.0040a360();\n                    }\n                    return *(*0x20 + -0x70);\n                }\n                uVar8 = unaff_RSI >> 9;\n                unaff_RDI = unaff_RSI;\n                uVar11 = arg3;\n                if (arg1 <= uVar8) goto code_r0x0042409f;\n                uVar9 = *(unaff_RBX + uVar8 * 8);\n                uVar8 = uVar9 >> 0x14;\n                if (0x3f < uVar8) goto code_r0x00424092;\n                uVar8 = *(*(in_RAX + 0x10190 + uVar8 * 8) + (uVar9 & 0xfffff) * 8);\n                uVar6 = unaff_RSI & 0x1ff;\n                uVar9 = uVar6;\n                unaff_RDI = uVar6 >> 3;\n                if (0x40 < unaff_RDI) break;\n                iVar1 = unaff_RDI - 0x40;\n                uVar11 = iVar1 >> 0x3f & unaff_RDI;\n                unaff_RDI = uVar8 + uVar11 + 0x21000;\n                iVar12 = uVar8 + uVar11 + 0x21040;\n                uVar11 = arg3 >> 3;\n                if (-iVar1 < uVar11 || -uVar11 == iVar1) {\n                    uVar11 = -iVar1;\n                }\n                *(*0x20 + -0x30) = arg3;\n                *(*0x20 + -0x68) = uVar11;\n                *(*0x20 + -0x58) = uVar8;\n                *(*0x20 + -0x38) = uVar9;\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x20) = iVar12;\n                *(*0x20 + -0x40) = unaff_RSI;\n                for (uVar13 = 0; uVar13 < uVar11; uVar13 = uVar13 + 1) {\n                    *(*0x20 + -0x10) = unaff_RDI + uVar13;\n                    if (uVar11 <= uVar13) {\ncode_r0x0042407a:\n                        *(*0x20 + -0xa8) = 0x424085;\n                        fcn.0045ca40(uVar11);\n                        goto code_r0x00424085;\n                    }\n                    uVar10 = *(unaff_RDI + uVar13) & ~*(uVar13 + iVar12);\n                    if (uVar10 != 0) {\n                        *(*0x20 + -0x60) = uVar13;\n                        for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                            if ((1 << (uVar5 & 0x1f) & uVar10) != 0) {\n                                uVar9 = uVar9 + uVar13 * 8 + uVar5;\n                                if (0x1ff < uVar9) {\n                                    *(*0x20 + -0xa8) = 0x42407a;\n                                    fcn.0045ca60(0x200);\n                                    goto code_r0x0042407a;\n                                }\n                                *(*0x20 + -0x48) = uVar5;\n                                *(*0x20 + -0x50) = iVar4;\n                                *(*0x20 + -0x8a) = uVar10;\n                                uVar2 = *(uVar8 + 0x20000 + uVar9 * 8);\n                                *(*0x20 + -0xa8) = 0x423f8e;\n                                iVar4 = fcn.004212a0();\n                                *(*0x20 + -0x80) = iVar4;\n                                if (uVar2 == '\\0') {\n                                    uVar10 = *(*0x20 + -0x8a);\n                                    iVar4 = *(*0x20 + -0x50);\n                                }\n                                else {\n                                    *(*0x20 + -0x78) = *(iVar4 + 0x20);\n                                    *(*0x20 + -0xa8) = 0x423fce;\n                                    fcn.0040a580();\n                                    *(*0x20 + -0xa8) = 0x423fda;\n                                    uVar3 = fcn.00421760();\n                                    *(*0x20 + -0x89) = uVar3;\n                                    *(*0x20 + -0xa8) = 0x423fea;\n                                    fcn.0040a360();\n                                    iVar4 = *(*0x20 + -0x50);\n                                    if (*(*0x20 + -0x89) != '\\0') {\n                                        iVar4 = *(*0x20 + -0x78) + *(*0x20 + -0x50);\n                                    }\n                                    uVar10 = ~*(*(*0x20 + -0x60) + *(*0x20 + -0x20)) & **(*0x20 + -0x10);\n                                }\n                                uVar5 = *(*0x20 + -0x48);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                unaff_RDI = *(*0x20 + -0x18);\n                                uVar11 = *(*0x20 + -0x68);\n                                uVar9 = *(*0x20 + -0x38);\n                                iVar12 = *(*0x20 + -0x20);\n                                uVar13 = *(*0x20 + -0x60);\n                                uVar8 = *(*0x20 + -0x58);\n                            }\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RSI = *(*0x20 + -0x40);\n                        }\n                    }\n                    in_RAX = *(*0x20 + -0x28);\n                    arg3 = *(*0x20 + -0x30);\n                }\n                unaff_RSI = unaff_RSI + uVar11 * 8;\n                arg3 = arg3 + uVar11 * -8;\n            }\ncode_r0x00424085:\n            *(*0x20 + -0xa8) = 0x424092;\n            fcn.0045cb20(0x40);\ncode_r0x00424092:\n            arg1 = 0x40;\n            *(*0x20 + -0xa8) = 0x42409f;\n            fcn.0045ca60(0x40);\ncode_r0x0042409f:\n            *(*0x20 + -0xa8) = 0x4240a7;\n            in_RAX = fcn.0045ca60(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = uVar8;\n        *(puVar7 + 0x30) = uVar11;\n        *(puVar7 + -8) = 0x4240cb;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        arg3 = *(puVar7 + 0x30);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2395
    },
    "00424500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00424500(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045ea60();\n        iStackX8 = in_RAX;\n    }\n    iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0xdc8) != 0) goto code_r0x00424557;\n        iVar4 = 0;\n        iStackX8 = in_RAX;\n        iStack16 = iVar2;\n        do {\n            iVar2 = iStackX8;\n            if (0x3f < iVar4) {\n                *(iStack16 + 0xdc8) = 0x40;\n                iVar2 = iStack16;\ncode_r0x00424557:\n                uVar1 = *(iVar2 + 0xdc8) - 1;\n                if (uVar1 < 0x80) {\n                    uVar3 = *(iVar2 + 0xdc8 + *(iVar2 + 0xdc8) * 8);\n                    *(iVar2 + 0xdc8) = uVar1;\n                    return uVar3;\n                }\n                iVar4 = 0x80;\n                iVar2 = fcn.0045ca40(0x80);\n            }\n            uVar3 = fcn.00416b60(iVar2 + 0x16a38);\n            *(iStack16 + 0xdd0 + iVar4 * 8) = uVar3;\n            iVar4 = iVar4 + 1;\n        } while( true );\n    }\n    uVar3 = fcn.00416b60();\n    return uVar3;\n}\n",
        "token_count": 460
    },
    "004255c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004255c0(void)\n\n{\n    int64_t *piVar1;\n    int64_t **in_RAX;\n    int64_t **unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *unaff_RBX;\n            *(*0x20 + -0x10) = piVar1;\n            if (((piVar1 == NULL) && (unaff_RBX[1] == NULL)) && (unaff_RBX[2] == NULL)) {\n                *unaff_RBX = *in_RAX;\n                if (*in_RAX == NULL) {\n                    in_RAX[1] = unaff_RBX;\n                }\n                else {\n                    (*in_RAX)[1] = unaff_RBX;\n                }\n                *in_RAX = unaff_RBX;\n                unaff_RBX[2] = in_RAX;\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RBX[1];\n            *(*0x20 + -0x20) = unaff_RBX[2];\n            *(*0x20 + -0x38) = 0x42563d;\n            fcn.00434840();\n            *(*0x20 + -0x38) = 0x42564e;\n            fcn.00435140();\n            *(*0x20 + -0x38) = 0x425658;\n            fcn.00435100();\n            *(*0x20 + -0x38) = 0x42565d;\n            fcn.00434a60();\n            *(*0x20 + -0x38) = 0x425667;\n            fcn.00435100();\n            *(*0x20 + -0x38) = 0x42566c;\n            fcn.00434a60();\n            *(*0x20 + -0x38) = 0x425676;\n            fcn.00435100();\n            *(*0x20 + -0x38) = 0x42567b;\n            fcn.00434a60();\n            *(*0x20 + -0x38) = 0x425685;\n            fcn.00435100();\n            *(*0x20 + -0x38) = 0x42568a;\n            fcn.00434aa0();\n            *(*0x20 + -0x38) = 0x42568f;\n            fcn.004348c0();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x4256a5;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4256b5;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 807
    },
    "004256e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004256e0(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t **ppiVar5;\n    ulong in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t **ppiVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x48) = 0x425707;\n            iVar6 = fcn.004238a0();\n            if (iVar6 != 0) {\n                *(*0x20 + -0x28) = iVar6;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x42572e;\n                fcn.00421600();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x28) + 0x18);\n                *(*0x20 + -0x29) = *(*(*0x20 + 0x10) + 10);\n                *(*0x20 + -0x10) = *(*0x20 + -0x28) + 0x78;\n                *(*0x20 + -0x48) = 0x42575e;\n                fcn.0040a360();\n                iVar6 = *(*0x20 + -0x28);\n                uVar3 = *(*0x20 + -0x29);\n                uVar7 = *(*0x20 + -0x20);\n                ppiVar5 = iVar6 + 0x80;\n                while (ppiVar9 = ppiVar5,  ppiVar5 = *ppiVar9,  ppiVar5 != NULL) {\n                    uVar10 = *(ppiVar5 + 1);\n                    if ((uVar10 == uVar7) && (*(ppiVar5 + 10) == uVar3)) {\n                        *(*0x20 + -0x48) = 0x4257b3;\n                        fcn.0040a580();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 0;\n                    }\n                    if ((uVar7 < uVar10) ||\n                       ((uVar10 == uVar7 && (uVar3 <= *(ppiVar5 + 10) && *(ppiVar5 + 10) != uVar3)))) break;\n                }\n                ppiVar5 = *(*0x20 + 0x10);\n                *(ppiVar5 + 1) = uVar7;\n                *ppiVar5 = *ppiVar9;\n                *ppiVar9 = ppiVar5;\n                uVar7 = *(iVar6 + 0x18);\n                uVar10 = uVar7 + 0x800000000000;\n                uVar11 = uVar10 >> 0x2a;\n                if (uVar11 < 0x40) {\n                    uVar7 = uVar7 >> 0xd;\n                    uVar8 = (uVar7 & 0x1ff) >> 3;\n                    if (uVar8 < 0x40) {\n                        puVar2 = *(*(uVar11 * 8 + 0x5a5f90) + (uVar10 >> 0x16 & 0xfffff) * 8) + uVar8 + 0x21080;\n                        LOCK();\n                        *puVar2 = *puVar2 | 1 << (uVar7 & 7);\n                        *(*0x20 + -0x48) = 0x425885;\n                        fcn.0040a580();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 1;\n                    }\n                    *(*0x20 + -0x48) = 0x4258cb;\n                    fcn.0045ca60(0x40);\n                }\n                *(*0x20 + -0x48) = 0x4258d8;\n                fcn.0045ca60(0x40);\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x48) = 0x4258e9;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x4258f9;\n        fcn.0045a360();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1420
    },
    "00425920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00425920(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t *piVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x48) = 0x425946;\n            iVar4 = fcn.004238a0();\n            if (iVar4 != 0) {\n                *(*0x20 + -0x30) = iVar4;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x42596d;\n                fcn.00421600();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x30) + 0x18);\n                *(*0x20 + -0x10) = *(*0x20 + -0x30) + 0x78;\n                *(*0x20 + -0x48) = 0x42598f;\n                fcn.0040a360();\n                iVar4 = *(*0x20 + -0x30);\n                piVar11 = iVar4 + 0x80;\n                do {\n                    piVar7 = piVar11;\n                    piVar11 = *piVar7;\n                    if (piVar11 == NULL) {\n                        piVar11 = NULL;\n                        goto code_r0x004259d0;\n                    }\n                } while ((*(piVar11 + 1) != *(*0x20 + -0x20)) || (*(piVar11 + 10) != *(*0x20 + 0x10)));\n                *piVar7 = *piVar11;\ncode_r0x004259d0:\n                *(*0x20 + -0x28) = piVar11;\n                if (*(iVar4 + 0x80) != 0) goto code_r0x00425a59;\n                uVar8 = *(iVar4 + 0x18) + 0x800000000000;\n                uVar9 = uVar8 >> 0x2a;\n                if (uVar9 < 0x40) {\n                    uVar5 = *(iVar4 + 0x18) >> 0xd;\n                    uVar6 = (uVar5 & 0x1ff) >> 3;\n                    if (uVar6 < 0x40) {\n                        puVar2 = *(*(uVar9 * 8 + 0x5a5f90) + (uVar8 >> 0x16 & 0xfffff) * 8) + uVar6 + 0x21080;\n                        LOCK();\n                        *puVar2 = *puVar2 & ~(1 << (uVar5 & 7));\ncode_r0x00425a59:\n                        *(*0x20 + -0x48) = 0x425a65;\n                        fcn.0040a580();\n                        iVar3 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x48) = 0x425aab;\n                    fcn.0045ca60(0x40);\n                }\n                *(*0x20 + -0x48) = 0x425ab8;\n                fcn.0045ca60(0x40);\n            }\n            unaff_BL = 0x20;\n            *(*0x20 + -0x48) = 0x425ac9;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + -8) = 0x425ad8;\n        fcn.0045a360();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1205
    },
    "00425b00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00425b00(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    ulong *puVar5;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    puVar5 = fcn.00416b60();\n    fcn.0040a580();\n    *(puVar5 + 10) = 1;\n    if (*0x5d3dd0 == 0) {\n        puVar5[2] = unaff_RBX;\n    }\n    else {\n        fcn.0045c6a0(unaff_RBX);\n    }\n    puVar5[3] = arg1;\n    if (*0x5d3dd0 == 0) {\n        puVar5[4] = unaff_RDI;\n        puVar5[5] = uStack0000000000000028;\n    }\n    else {\n        fcn.0045c6c0(puVar5 + 4, unaff_RDI, in_R8, in_R9);\n        fcn.0045c6a0(uStack0000000000000028);\n    }\n    cVar4 = fcn.004256e0();\n    if (cVar4 != '\\0') {\n        if (*0x5d3b6c != 0) {\n            fcn.00411920(0);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            fcn.0041c7c0();\n            fcn.0041c620(0x564460);\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        return 1;\n    }\n    fcn.0040a360();\n    *0x5ac8f8 = *0x5ac8f8 - *0x5ac8c8;\n    *puVar5 = *0x5ac8e0;\n    *0x5ac8e0 = puVar5;\n    fcn.0040a580();\n    return 0;\n}\n",
        "token_count": 667
    },
    "004264c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004264c0(ulong arg1)\n\n{\n    ulong arg1_00;\n    int64_t in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x565ac0 < 0x16) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                if (*0x5d3dd0 == 0) {\n                    *(in_RAX + 0x10118) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x42650f;\n                    in_RAX = fcn.0045c6a0();\n                }\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x426526;\n                fcn.0042b280();\n                *(*0x20 + -0x28) = 0x426530;\n                fcn.004287c0();\n                arg1_00 = *0x564590;\n                arg2 = *(*0x20 + 8);\n                *(arg2 + 0x10078) = *0x564590;\n                if (*0x5d3dd0 == 0) {\n                    *(arg2 + 0x10110) = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x42656b;\n                    fcn.0045c5a0(arg1_00, arg2, in_R8, in_R9);\n                }\n                *(arg2 + 0x10100) = *0x564590;\n                return;\n            }\n            *(*0x20 + -0x10) = *0x565ac0;\n            *(*0x20 + -0x28) = 0x42658d;\n            fcn.00434840();\n            *(*0x20 + -0x28) = 0x42659e;\n            fcn.00435140();\n            arg1 = *(*0x20 + -0x10);\n            *(*0x20 + -0x28) = 0x4265ba;\n            fcn.00434f40(arg1, 1 << (arg1 & 0x3f));\n            *(*0x20 + -0x28) = 0x4265bf;\n            fcn.00434aa0();\n            *(*0x20 + -0x28) = 0x4265c5;\n            fcn.004348c0();\n            *(*0x20 + -0x28) = 0x4265ca;\n            fcn.00434840();\n            *(*0x20 + -0x28) = 0x4265db;\n            fcn.00435140();\n            *(*0x20 + -0x28) = 0x4265e5;\n            fcn.00434f40();\n            *(*0x20 + -0x28) = 0x4265ea;\n            fcn.00434aa0();\n            *(*0x20 + -0x28) = 0x4265ef;\n            fcn.004348c0();\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0x28) = 0x426605;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x42661a;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1003
    },
    "00427240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00427240(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10120) != '\\0') goto code_r0x004272b2;\n            uVar2 = unaff_RBX + 0x800000000000U >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar1 = *(uVar2 * 8 + 0x5a5f90);\n                if ((iVar1 != 0) && (*(iVar1 + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8) != 0)) {\n                    return unaff_RBX;\n                }\ncode_r0x004272b2:\n                *(*0x20 + -0x20) = 0x4272bd;\n                iVar1 = fcn.0042b440();\n                if (unaff_RBX != '\\0') {\n                    return iVar1;\n                }\n                return *0x564588;\n            }\n            *(*0x20 + -0x20) = 0x4272ec;\n            in_RAX = fcn.0045ca60(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x4272fc;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 516
    },
    "00428080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00428080(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(in_RAX + 0x10078);\n            uVar1 = iVar2 + 0x800000000000;\n            uVar4 = uVar1 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar4 || *(in_RAX + 0x10088) == uVar4) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            arg1 = (iVar2 & 0x3fffff) >> 0xd;\n            if (-(arg1 - 0x200) < unaff_RBX) goto code_r0x00428199;\n            uVar5 = *(in_RAX + 0x68);\n            if (uVar4 < uVar5) {\n                uVar5 = *(*(in_RAX + 0x60) + uVar4 * 8);\n                if (uVar5 < 0) {\n                    uVar5 = 0x200000;\n                }\n                else {\n                    uVar5 = uVar5 >> 0x15 & 0x1fffff;\n                }\n                if (uVar5 < unaff_RBX) {\ncode_r0x00428199:\n                    *(*0x20 + -0x40) = 0x42819e;\n                    iVar2 = fcn.00427320();\n                    if (iVar2 == 0) {\n                        if (*(*0x20 + 0x10) == 1) {\n                            *(*(*0x20 + 8) + 0x10078) = *0x564590;\n                        }\n                        return 0;\n                    }\ncode_r0x004281d8:\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x40) = 0x4281f4;\n                    fcn.00426e80(*(*0x20 + 0x10));\n                    if (*(*(*0x20 + 8) + 0x10078) + 0x800000000000U < *(*0x20 + -0x18) + 0x800000000000U) {\n                        *(*(*0x20 + 8) + 0x10078) = *(*0x20 + -0x18);\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                if (uVar1 >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0x20) = uVar5;\n                    *(*0x20 + -0x40) = 0x428165;\n                    iVar2 = fcn.00429c20(arg1);\n                    if (iVar2 != -1) {\n                        iVar2 = iVar2 * 0x2000 + *(*0x20 + -0x10) * 0x400000 + -0x800000000000;\n                        unaff_RBX = (*(*0x20 + -0x10) * 0x400000 + unaff_RBX * 0x2000) - 0x800000000000;\n                        goto code_r0x004281d8;\n                    }\n                    *(*0x20 + -0x40) = 0x428247;\n                    fcn.00434840();\n                    *(*0x20 + -0x40) = 0x428258;\n                    fcn.00435140();\n                    *(*0x20 + -0x40) = 0x428265;\n                    fcn.00434e40();\n                    *(*0x20 + -0x40) = 0x428276;\n                    fcn.00435140();\n                    *(*0x20 + -0x40) = 0x428285;\n                    fcn.00434e40();\n                    *(*0x20 + -0x40) = 0x42828a;\n                    fcn.00434aa0();\n                    *(*0x20 + -0x40) = 0x42828f;\n                    fcn.004348c0();\n                    *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x40) = 0x4282a5;\n                    fcn.00434840();\n                    *(*0x20 + -0x40) = 0x4282b6;\n                    fcn.00435140();\n                    *(*0x20 + -0x40) = 0x4282c9;\n                    fcn.00434e40();\n                    *(*0x20 + -0x40) = 0x4282da;\n                    fcn.00435140();\n                    *(*0x20 + -0x40) = 0x4282e5;\n                    fcn.00434fa0();\n                    *(*0x20 + -0x40) = 0x4282ea;\n                    fcn.00434aa0();\n                    *(*0x20 + -0x40) = 0x4282ef;\n                    fcn.004348c0();\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x40) = 0x428305;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x40) = 0x428312;\n                fcn.0045ca60(0x2000);\n            }\n            *(*0x20 + -0x40) = 0x42831d;\n            in_RAX = fcn.0045ca60(uVar5);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x42832d;\n        fcn.0045ea60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1551
    },
    "00428340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00428340(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    char unaff_DIL;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar7 = unaff_RBX + 0x800000000000;\n            if (uVar7 < *(in_RAX + 0x10078) + 0x800000000000U) {\n                *(in_RAX + 0x10078) = unaff_RBX;\n            }\n            iVar1 = unaff_RBX + arg1 * 0x2000;\n            iVar3 = arg1 * 0x2000 + unaff_RBX + -1;\n            if ((unaff_DIL == '\\0') && (*(in_RAX + 0x10108) + 0x800000000000U < iVar1 + 0x7fffffffffffU)) {\n                *(in_RAX + 0x10108) = iVar3;\n            }\n            if (arg1 == 1) break;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar9 = uVar7 >> 0x16;\n            uVar5 = iVar1 + 0x7fffffffffff;\n            uVar8 = uVar5 >> 0x16;\n            unaff_RBX = (unaff_RBX & 0x3fffff) >> 0xd;\n            uVar10 = (iVar3 & 0x3fffff) >> 0xd;\n            if (uVar8 == uVar9) {\n                uVar7 = uVar7 >> 0x23;\n                if (uVar7 < 0x2000) {\n                    *(*0x20 + -0x58) = 0x4284b4;\n                    fcn.004296e0((uVar10 - unaff_RBX) + 1);\n                    goto code_r0x00428549;\n                }\n                *(*0x20 + -0x58) = 0x428567;\n                fcn.0045ca60(0x2000);\n                uVar5 = uVar9;\ncode_r0x0042856b:\n                while( true ) {\n                    uVar10 = uVar5 + 1;\n                    if (uVar8 <= uVar10) {\n                        if (0x1fff < *(*0x20 + -0x18) >> 0x23) {\n                            *(*0x20 + -0x58) = 0x4285e5;\n                            iVar3 = fcn.0045ca60(0x2000);\n                            goto code_r0x004285e5;\n                        }\n                        *(*0x20 + -0x58) = 0x4285d1;\n                        fcn.004296e0(*(*0x20 + -0x28) + 1);\n                        goto code_r0x00428549;\n                    }\n                    if (0x1fff < uVar10 >> 0xd) break;\n                    uVar5 = (uVar10 & 0x1fff) * 0x80 + *(uVar7 + 0x78 + (uVar10 >> 0xd) * 8);\n                    uVar9 = uVar10;\n                    for (iVar3 = 0; uVar10 = uVar5,  uVar5 = uVar9,  iVar3 < 8; iVar3 = iVar3 + 1) {\ncode_r0x004285e5:\n                        *(uVar10 + iVar3 * 8) = 0;\n                        uVar5 = uVar10;\n                    }\n                }\n                *(*0x20 + -0x58) = 0x428605;\n                fcn.0045ca60(0x2000);\n            }\n            else if (uVar7 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x18) = uVar5;\n                *(*0x20 + -0x20) = uVar8;\n                *(*0x20 + -0x28) = uVar10;\n                *(*0x20 + -0x30) = uVar9;\n                uVar9 = (uVar9 & 0x1fff) << 7;\n                *(*0x20 + -0x58) = 0x428468;\n                fcn.004296e0(-(unaff_RBX - 0x200));\n                uVar7 = *(*0x20 + 8);\n                uVar8 = *(*0x20 + -0x20);\n                uVar5 = *(*0x20 + -0x30);\n                goto code_r0x0042856b;\n            }\n            unaff_DIL = uVar8;\n            arg1 = 0x2000;\n            *(*0x20 + -0x58) = 0x428612;\n            in_RAX = fcn.0045ca60(0x2000);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        puVar6[0x20] = unaff_DIL;\n        *(puVar6 + -8) = 0x42862c;\n        fcn.0045ea60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_DIL = puVar6[0x20];\n        *0x20 = puVar6;\n    } while( true );\n    if (uVar7 >> 0x23 < 0x2000) {\n        uVar4 = unaff_RBX & 0x3fffff;\n        uVar5 = uVar4 >> 0x13;\n        if (uVar5 < 8) {\n            puVar2 = (uVar7 >> 0x16 & 0x1fff) * 0x80 + *(in_RAX + 0x78 + (uVar7 >> 0x23) * 8) + uVar5 * 8;\n            *puVar2 = *puVar2 & ~(1 << (uVar4 >> 0xd & 0x3f));\n            goto code_r0x00428515;\n        }\n        *(*0x20 + -0x58) = 0x42853c;\n        fcn.0045ca60(8);\n    }\n    *(*0x20 + -0x58) = 0x428549;\n    fcn.0045ca60(0x2000);\ncode_r0x00428549:\n    arg1 = *(*0x20 + -0x10);\ncode_r0x00428515:\n    *(*0x20 + -0x58) = 0x428525;\n    fcn.004268a0(arg1);\n    return;\n}\n",
        "token_count": 1736
    },
    "004287c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004287c0(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong noname_1;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t arg1;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *0x565b00;\n            *(*0x20 + -0x28) = *0x565b08;\n            *(*0x20 + -0x24) = *0x565b0c;\n            *(*0x20 + -0x20) = *0x565b10;\n            *(*0x20 + -0x1c) = *0x565b14;\n            *(*0x20 + -0x18) = *0x565b18;\n            *(*0x20 + -0x14) = *0x565b1c;\n            *(*0x20 + -0x10) = *0x565b20;\n            *(*0x20 + -0xc) = *0x565b24;\n            iVar3 = 0;\n            while( true ) {\n                if (4 < iVar3) {\n                    return;\n                }\n                *(*0x20 + -0x58) = iVar3;\n                arg1 = -(*(*0x20 + iVar3 * 8 + -0x30) + -0x30);\n                uVar5 = 1 << (arg1 & 0x3f) & -(arg1 < 0x40);\n                *(*0x20 + -0x50) = uVar5;\n                *(*0x20 + -0x70) = 0x42885d;\n                iVar3 = fcn.00415a20(arg1, *0x5d3cd8 + uVar5 * 8 + -1);\n                if (iVar3 == 0) break;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = 0;\n                *(*0x20 + -0x48) = iVar3;\n                *(*0x20 + -0x40) = 0;\n                uVar1 = *(*0x20 + -0x50);\n                *(*0x20 + -0x38) = uVar1;\n                iVar2 = *(*0x20 + 8);\n                iVar3 = *(*0x20 + -0x58);\n                noname_1 = *(*0x20 + -0x48);\n                *(iVar2 + 8 + iVar3 * 0x18) = 0;\n                *(iVar2 + 0x10 + iVar3 * 0x18) = uVar1;\n                if (*0x5d3dd0 == 0) {\n                    *(iVar2 + iVar3 * 0x18) = noname_1;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x4288cd;\n                    fcn.0045c6c0(arg1, noname_1, iVar3, iVar3 * 3);\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *(*0x20 + -0x70) = 0x4288ed;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4288f8;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 933
    },
    "00428ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00428ee0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = in_RAX[1];\n    if (uVar1 != 0) {\n        if (unaff_RBX == 1) {\n            uVar2 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            uVar4 = ~(1 << (uVar2 & 0x3f) & -(uVar2 < 0x40));\n            in_RAX[1] = uVar1 & uVar4;\n            in_RAX[2] = in_RAX[2] & uVar4;\n            return uVar2 * 0x2000 + *in_RAX;\n        }\n        iVar3 = fcn.00428fa0();\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 317
    },
    "004290e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004290e0(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uchar (*pauVar3) [16];\n    int64_t *in_RAX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004290e0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar6 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (in_RAX[1] == 0) {\n            return;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        iVar2 = *in_RAX;\n        uVar8 = iVar2 + 0x800000000000;\n        *(*0x20 + -0x10) = uVar8;\n        uVar7 = uVar8 >> 0x16;\n        *(*0x20 + -0x18) = uVar7;\n        uVar5 = (iVar2 & 0x3fffff) >> 0xd;\n        *(*0x20 + -0x20) = uVar5;\n        uVar4 = 0;\n        do {\n            if (0x3f < uVar4) {\n                if (*in_RAX + 0x800000000000U < *(unaff_RBX + 0x10078) + 0x800000000000U) {\n                    *(unaff_RBX + 0x10078) = *in_RAX;\n                }\n                *(*0x20 + -0x50) = 0x42928c;\n                fcn.004268a0(0x40);\n                pauVar3 = *(*0x20 + 8);\n                *pauVar3 = in_XMM15;\n                *pauVar3[1] = 0;\n                return;\n            }\n            if ((in_RAX[1] >> (uVar4 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar8 >> 0x23) goto code_r0x004292c5;\n                uVar9 = uVar5 + uVar4 >> 6;\n                if (7 < uVar9) goto code_r0x004292b4;\n                puVar1 = (uVar7 & 0x1fff) * 0x80 + *(unaff_RBX + 0x78 + (uVar8 >> 0x23) * 8) + uVar9 * 8;\n                *puVar1 = *puVar1 & ~(1 << (uVar5 + uVar4 & 0x3f));\n            }\n            if ((in_RAX[2] >> (uVar4 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar8 >> 0x23) goto code_r0x004292a7;\n                *(*0x20 + -0x28) = uVar4;\n                *(*0x20 + -0x50) = 0x42922b;\n                fcn.004295e0(1);\n                in_RAX = *(*0x20 + 8);\n                uVar5 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar4 = *(*0x20 + -0x28);\n                uVar8 = *(*0x20 + -0x10);\n                uVar7 = *(*0x20 + -0x18);\n            }\n            uVar4 = uVar4 + 1;\n        } while( true );\n    }\n    goto code_r0x004292d3;\ncode_r0x004292a7:\n    *(*0x20 + -0x50) = 0x4292b4;\n    fcn.0045ca60(0x2000);\ncode_r0x004292b4:\n    *(*0x20 + -0x50) = 0x4292c5;\n    fcn.0045ca60(8);\ncode_r0x004292c5:\n    *(*0x20 + -0x50) = 0x4292d2;\n    in_RAX = fcn.0045ca60(0x2000);\ncode_r0x004292d3:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + -8) = 0x4292e5;\n    fcn.0045ea60();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    *0x20 = puVar6;\n    goto code_r0x004290e0;\n}\n",
        "token_count": 1198
    },
    "004295e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004295e0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar6 = unaff_RBX >> 6;\n    if (uVar6 < 8) {\n        uVar5 = unaff_RBX;\n        if (arg1 == 1) {\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 | 1 << (uVar5 & 0x3f);\n            return;\n        }\n        uVar7 = (arg1 + unaff_RBX) - 1;\n        uVar8 = uVar7 >> 6;\n        if (uVar8 == uVar6) {\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 | (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (uVar5 & 0x3f);\n            return;\n        }\n        if (uVar8 < 8) {\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 | -1 << (uVar5 & 0x3f);\n            while (uVar6 = uVar6 + 1,  uVar6 < uVar8) {\n                *(in_RAX + uVar6 * 8) = 0xffffffffffffffff;\n            }\n            uVar1 = (uVar7 & 0x3f) + 1;\n            puVar2 = in_RAX + uVar8 * 8;\n            *puVar2 = *puVar2 | (1 << (uVar1 & 0x3f) & -(uVar1 < 0x40)) - 1;\n            return;\n        }\n        fcn.0045ca60(8);\n    }\n    uVar8 = 8;\n    iVar4 = fcn.0045ca60(8);\n    uVar7 = unaff_RBX >> 0xc;\n    if (uVar7 < 8) {\n        uVar5 = uVar6;\n        if (uVar8 == 1) {\n            puVar2 = iVar4 + uVar7 * 8;\n            *puVar2 = *puVar2 & ~(1 << (uVar5 & 0x3f));\n            return;\n        }\n        uVar6 = (uVar8 + uVar6) - 1;\n        uVar9 = uVar6 >> 6;\n        if (uVar9 == uVar7) {\n            puVar2 = iVar4 + uVar7 * 8;\n            *puVar2 = *puVar2 & ~((1 << (uVar8 & 0x3f) & -(uVar8 < 0x40)) - 1 << (uVar5 & 0x3f));\n            return;\n        }\n        if (uVar9 < 8) {\n            puVar2 = iVar4 + uVar7 * 8;\n            *puVar2 = *puVar2 & ~(-1 << (uVar5 & 0x3f));\n            while (uVar7 = uVar7 + 1,  uVar7 < uVar9) {\n                *(iVar4 + uVar7 * 8) = 0;\n            }\n            uVar1 = (uVar6 & 0x3f) + 1;\n            puVar2 = iVar4 + uVar9 * 8;\n            *puVar2 = *puVar2 & -(1 << (uVar1 & 0x3f) & -(uVar1 < 0x40));\n            return;\n        }\n        fcn.0045ca60(8);\n    }\n    fcn.0045ca60(8);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 938
    },
    "004296e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004296e0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    code *pcVar4;\n    int64_t in_RAX;\n    uint8_t uVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar6 = unaff_RBX >> 6;\n    if (uVar6 < 8) {\n        uVar5 = unaff_RBX;\n        if (arg1 == 1) {\n            puVar3 = in_RAX + uVar6 * 8;\n            *puVar3 = *puVar3 & ~(1 << (uVar5 & 0x3f));\n            return;\n        }\n        uVar2 = (arg1 + unaff_RBX) - 1;\n        uVar7 = uVar2 >> 6;\n        if (uVar7 == uVar6) {\n            puVar3 = in_RAX + uVar6 * 8;\n            *puVar3 = *puVar3 & ~((1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (uVar5 & 0x3f));\n            return;\n        }\n        if (uVar7 < 8) {\n            puVar3 = in_RAX + uVar6 * 8;\n            *puVar3 = *puVar3 & ~(-1 << (uVar5 & 0x3f));\n            while (uVar6 = uVar6 + 1,  uVar6 < uVar7) {\n                *(in_RAX + uVar6 * 8) = 0;\n            }\n            uVar1 = (uVar2 & 0x3f) + 1;\n            puVar3 = in_RAX + uVar7 * 8;\n            *puVar3 = *puVar3 & -(1 << (uVar1 & 0x3f) & -(uVar1 < 0x40));\n            return;\n        }\n        fcn.0045ca60(8);\n    }\n    fcn.0045ca60(8);\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 510
    },
    "00429800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00429800(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint8_t uVar2;\n    int64_t iVar3;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t in_R8;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar4 = unaff_RBX;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX;\n            if (arg1 == 1) {\n                uVar4 = unaff_RBX >> 6;\n                if (uVar4 < 8) {\n                    return *(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f) & 1;\n                }\n                *(*0x20 + -0x40) = 0x429947;\n                in_RAX = fcn.0045ca60(8);\n                goto code_r0x00429947;\n            }\n            uVar4 = unaff_RBX >> 6;\n            if (uVar4 < 8) {\n                unaff_RDI = (arg1 + unaff_RBX) - 1;\n                unaff_RSI = unaff_RDI >> 6;\n                if (unaff_RSI == uVar4) {\n                    if (*0x5d3b37 == 0) {\n                        *(*0x20 + -0x40) = 0x429905;\n                        uVar4 = fcn.00401d00();\n                    }\n                    else {\n                        uVar4 = popcnt(*(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f) &\n                                       (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1);\n                    }\n                    return uVar4;\n                }\n                if (unaff_RSI < 8) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    *(*0x20 + -0x18) = unaff_RSI;\n                    if (*0x5d3b37 == 0) {\n                        *(*0x20 + -0x20) = uVar4;\n                        *(*0x20 + -0x40) = 0x429898;\n                        in_R8 = fcn.00401d00();\n                        uVar4 = *(*0x20 + -0x20);\n                        unaff_RSI = *(*0x20 + -0x18);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    else {\n                        in_R8 = popcnt(*(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f));\n                    }\n                    in_RDX = *0x5d3b37;\n                    while( true ) {\n                        uVar4 = uVar4 + 1;\n                        *(*0x20 + -0x20) = in_R8;\n                        if (unaff_RSI <= uVar4) break;\n                        if (in_RDX == 0) {\n                            *(*0x20 + -0x28) = uVar4;\n                            *(*0x20 + -0x40) = 0x429973;\n                            in_R9 = fcn.00401d00();\n                            in_RDX = *0x5d3b37;\n                            uVar4 = *(*0x20 + -0x28);\n                            unaff_RSI = *(*0x20 + -0x18);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            in_R8 = *(*0x20 + -0x20);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        else {\n                            in_R9 = popcnt(*(in_RAX + uVar4 * 8));\n                        }\ncode_r0x00429947:\n                        in_R8 = in_R8 + in_R9;\n                    }\n                    uVar1 = (unaff_RDI & 0x3f) + 1;\n                    if (in_RDX == 0) {\n                        *(*0x20 + -0x40) = 0x4299ce;\n                        iVar3 = fcn.00401d00();\n                        in_R8 = *(*0x20 + -0x20);\n                    }\n                    else {\n                        iVar3 = popcnt((-(uVar1 < 0x40) & 1 << (uVar1 & 0x3f)) - 1 & *(in_RAX + unaff_RSI * 8));\n                    }\n                    return iVar3 + in_R8;\n                }\n                *(*0x20 + -0x40) = 0x4299f1;\n                fcn.0045ca60(8);\n            }\n            arg1 = 8;\n            *(*0x20 + -0x40) = 0x4299fe;\n            in_RAX = fcn.0045ca60(8);\n            in_RDX = unaff_RBX;\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = uVar4;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x429a13;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1387
    },
    "00429c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00429c20(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (unaff_RBX == 1) {\n        arg1 = arg1 >> 6;\n        while( true ) {\n            if (7 < arg1) {\n                return -1;\n            }\n            uVar2 = ~*(in_RAX + arg1 * 8);\n            if (uVar2 != 0) break;\n            arg1 = arg1 + 1;\n        }\n        iVar1 = 0;\n        if (uVar2 != 0) {\n            for (; (uVar2 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        return arg1 * 0x40 + iVar1;\n    }\n    if (0x40 < unaff_RBX) {\n        iVar1 = fcn.00429de0(arg1);\n        return iVar1;\n    }\n    iVar1 = fcn.00429ce0(arg1);\n    return iVar1;\n}\n",
        "token_count": 311
    },
    "00429fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429fa0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (in_RAX == 1) {\n                iVar1 = unaff_RBX * 8 + 0xb0;\n                goto code_r0x00429fe3;\n            }\n            if (in_RAX - 2U < 2) {\n                iVar1 = unaff_RBX * 8 + 0x40;\ncode_r0x00429fe3:\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x429ff9;\n                iVar1 = fcn.0040c7a0(0x5d58e0);\n                *0x5d3c10 = *0x5d3c10 + *(*0x20 + -0x10);\n                *(iVar1 + 0x10) = *(*0x20 + 8);\n                *(iVar1 + 0x28) = *(*0x20 + 0x10);\n                return;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x30) = 0x42a032;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42a045;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 546
    },
    "0042a060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0042a060(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 1) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x42a0a5;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42a0b0;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 292
    },
    "0042a4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042a4a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    if (*0x5d3c84 == '\\0') {\n        fcn.0042a500();\n        *0x5d3c84 = '\\x01';\n    }\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 133
    },
    "0042a980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042a980(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    double *pdVar2;\n    int64_t iVar3;\n    ulong in_RDX;\n    uchar *unaff_RBX;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe8 && *0x20 + -0xe8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x168;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x178) = *0x20 + -8;\n            *(*0x20 + -0x170) = 0x42a9d5;\n            fcn.0045ccb4();\n            unaff_RBP = *(*0x20 + -0x178);\n            unaff_RDI = *(*(unaff_R14 + 0x30) + 0x90);\n            if ((unaff_RDI == 0) || (unaff_R14 == unaff_RDI)) {\n                unaff_RBX = *0x20 + -0x108;\n                unaff_RDI = 0x20;\n                *(*0x20 + -0x170) = 0x42aa37;\n                uVar1 = fcn.00453a80(0x20);\n            }\n            else {\n                *(*0x20 + -0x168) = 0;\n                unaff_RBX = 0xffffffffffffffff;\n                *(*0x20 + -0x170) = 0x42aa1f;\n                uVar1 = fcn.00450a40(0, in_RDX, *0x20 + -0x108, 0x20);\n            }\n            *(*0x20 + -0x118) = uVar1;\n            *(*0x20 + -0x170) = 0x42aa4a;\n            fcn.0040a360();\n            arg1 = *(*0x20 + -0x118);\n            if (arg1 < 0x21) break;\n            in_RDX = 0x20;\n            *(*0x20 + -0x170) = 0x42ab46;\n            in_RAX = fcn.0045ca80(arg1, 0x20);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x42ab65;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n    *(*0x20 + -0x170) = 0x42aa7b;\n    uVar1 = fcn.0042a120(*0x20 + -0x108);\n    *(*0x20 + -0x110) = uVar1;\n    if (*(*0x20 + 0x20) == 2) {\n        if (*(*0x20 + 8) < *(*0x20 + 0x10)) {\n            *(*0x20 + -0x170) = 0x42aaaa;\n            pdVar2 = fcn.0042a0c0();\n            *pdVar2 = *(*0x20 + 0x10) / *(*0x20 + 8) + *pdVar2;\n            *(*0x20 + -0x170) = 0x42aae5;\n            iVar3 = fcn.0042a0c0();\n            *(iVar3 + 8) = *(iVar3 + 8) + *(*0x20 + 0x10);\n            goto code_r0x0042ab20;\n        }\n    }\n    *(*0x20 + -0x170) = 0x42aaf8;\n    pdVar2 = fcn.0042a0c0();\n    *pdVar2 = *0x4f9a00 + *pdVar2;\n    *(*0x20 + -0x170) = 0x42ab12;\n    iVar3 = fcn.0042a0c0();\n    *(iVar3 + 8) = *(iVar3 + 8) + *(*0x20 + 8);\ncode_r0x0042ab20:\n    *(*0x20 + -0x170) = 0x42ab2c;\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 1171
    },
    "0042b280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042b280(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong arg1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    in_RAX[1] = 0;\n    in_RAX[2] = 0x10;\n    arg1 = unaff_RBX;\n    uVar1 = fcn.0040c7a0(unaff_RBX);\n    *in_RAX = uVar1;\n    if (*0x5d3dd0 == 0) {\n        in_RAX[4] = unaff_RBX;\n    }\n    else {\n        fcn.0045c5a0(arg1, in_RAX, param_3, param_4);\n    }\n    in_RAX[3] = 0;\n    return;\n}\n",
        "token_count": 250
    },
    "0042c640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042c640(void)\n\n{\n    int64_t *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = in_RAX + 2;\n            if (*0x5d3dd5 == '\\0') {\n                in_RAX[1] = in_RAX + 0x202;\n            }\n            else {\n                in_RAX[1] = in_RAX + 4;\n            }\n            if ((in_RAX[1] - *in_RAX & 0xfU) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42c6a5;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42c6b0;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 344
    },
    "0042c700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042c700(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (0 < *(*(unaff_R14 + 0x30) + 0xdc)) {\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(iVar1 + 0x1260) = iVar1 + 0x1270;\n        return;\n    }\n    if ((*0x5d3dd5 != '\\0') && (in_RAX != 0)) {\n        fcn.00403b60();\n        if (*0x5d3dd4 == '\\0') {\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(iVar1 + 0x1260) = iVar1 + 0x1270;\n            return;\n        }\n    }\n    fcn.0045a220();\n    return;\n}\n",
        "token_count": 219
    },
    "0042c7c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042c7c0(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint8_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = *(in_RAX + 0x1260) - (in_RAX + 0x1270) >> 3;\n            if (uVar4 < 0x201) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = uVar4;\n                *(in_RAX + 0x1260) = 0;\n                if (*0x5d3b33 != '\\0') {\n                    iVar3 = 0;\n                    while (iVar3 < uVar4) {\n                        *(*0x20 + -0x18) = iVar3;\n                        uVar1 = *(in_RAX + 0x1270 + iVar3 * 8);\n                        *(*0x20 + -0x48) = 0x42c83b;\n                        fcn.0041cd80(uVar1);\n                        in_RAX = *(*0x20 + 8);\n                        uVar4 = *(*0x20 + -0x10);\n                        iVar3 = *(*0x20 + -0x18) + 1;\n                    }\n                    *(*0x20 + -0x48) = 0x42c85e;\n                    fcn.0042c640();\n                    return;\n                }\n                arg1 = 0;\n                for (iVar3 = 0; iVar3 < uVar4; iVar3 = iVar3 + 1) {\n                    uVar6 = arg1;\n                    if (0xfff < *(in_RAX + 0x1270 + iVar3 * 8)) {\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0x20) = arg1;\n                        uVar4 = 0;\n                        *(*0x20 + -0x48) = 0x42c8a5;\n                        iVar3 = fcn.00411920(0);\n                        if (iVar3 == 0) {\n                            in_RAX = *(*0x20 + 8);\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar6 = *(*0x20 + -0x20);\n                            uVar4 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            puVar5 = (uVar4 >> 3) + *0x50;\n                            uVar8 = 1 << (uVar4 & 7);\n                            if ((uVar8 & *puVar5) == 0) {\n                                LOCK();\n                                *puVar5 = *puVar5 | uVar8;\n                                uVar4 = *0x18 + 0x800000000000 >> 0x2a;\n                                if (0x3f < uVar4) goto code_r0x0042ca4d;\n                                iVar2 = *(*(uVar4 * 8 + 0x5a5f90) + (*0x18 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                                uVar4 = *0x18 >> 0x10 & 0x3f;\n                                puVar5 = iVar2 + uVar4 + 0x21040;\n                                uVar8 = 1 << (*0x18 >> 0xd & 7);\n                                if ((uVar8 & *(iVar2 + 0x21040 + uVar4)) == 0) {\n                                    LOCK();\n                                    *puVar5 = *puVar5 | uVar8;\n                                }\n                                if ((*0x62 & 1) == 0) {\n                                    uVar6 = *(*0x20 + -0x20);\n                                    arg1 = *(*0x20 + -0x10);\n                                    if (arg1 <= uVar6) goto code_r0x0042ca45;\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x1270 + uVar6 * 8) = iVar3;\n                                    uVar6 = uVar6 + 1;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar4 = arg1;\n                                }\n                                else {\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x1248) = *(in_RAX + 0x1248) + *0x68;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar6 = *(*0x20 + -0x20);\n                                    uVar4 = *(*0x20 + -0x10);\n                                }\n                            }\n                            else {\n                                in_RAX = *(*0x20 + 8);\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x20);\n                                uVar4 = *(*0x20 + -0x10);\n                            }\n                        }\n                    }\n                    arg1 = uVar6;\n                }\n                if (arg1 < 0x201) {\n                    *(*0x20 + -0x48) = 0x42ca1c;\n                    fcn.004229a0(arg1);\n                    *(*0x20 + -0x48) = 0x42ca2d;\n                    fcn.0042c640();\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x42ca45;\n                fcn.0045cac0(arg1, 0x200);\ncode_r0x0042ca45:\n                *(*0x20 + -0x48) = 0x42ca4d;\n                fcn.0045ca40(arg1);\ncode_r0x0042ca4d:\n                uVar4 = 0x40;\n                *(*0x20 + -0x48) = 0x42ca5a;\n                fcn.0045ca60(0x40);\n            }\n            *(*0x20 + -0x48) = 0x42ca65;\n            in_RAX = fcn.0045caa0(uVar4, 0x200);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42ca70;\n        fcn.0045ea60();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1581
    },
    "0042ca80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042ca80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x5d3b78 == 0) {\n        fcn.0040a360();\n        if (*0x5d3b78 == 0) {\n            fcn.0042cd40();\n            *0x5d3b78 = 1;\n        }\n        fcn.0040a580();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0042cb80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042cb80(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    \n    if ((arg1 == 0x72) || (arg1 == 0xe9)) {\n        do {\n            uVar4 = *(unaff_RBX + 0x18);\n            if (uVar4 == 1) {\n                uVar4 = 0;\n                goto code_r0x0042cb96;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x18;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar4 == uVar3) * (*puVar1 ^ 1);\n        } while (uVar4 != uVar3);\n        if (uVar4 == 2) {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\ncode_r0x0042cb96:\n    if ((arg1 == 0x77) || (arg1 == 0xe9)) {\n        do {\n            uVar3 = *(unaff_RBX + 0x20);\n            if (uVar3 == 1) {\n                uVar3 = 0;\n                goto code_r0x0042cbae;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x20;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar3 == uVar2) * (*puVar1 ^ 1);\n        } while (uVar3 != uVar2);\n        if (uVar3 == 2) {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\ncode_r0x0042cbae:\n    if (uVar4 != 0) {\n        *(uVar4 + 0xa0) = *in_RAX;\n        *in_RAX = uVar4;\n    }\n    if (uVar3 != 0) {\n        *(uVar3 + 0xa0) = *in_RAX;\n        *in_RAX = uVar3;\n    }\n    return;\n}\n",
        "token_count": 525
    },
    "0042cc80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0042cc80(void)\n\n{\n    ulong *puVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    if (*(in_RAX + 8) == 0) {\n        iVar2 = fcn.0040c7a0(0x5d5900);\n        for (uVar3 = 0; uVar3 < 0x11; uVar3 = uVar3 + 1) {\n            *(iVar2 + uVar3 * 0xf0) = *(in_RAX + 8);\n            *(in_RAX + 8) = uVar3 * 0xf0 + iVar2;\n        }\n    }\n    puVar1 = *(in_RAX + 8);\n    *(in_RAX + 8) = *puVar1;\n    fcn.0040a580();\n    return puVar1;\n}\n",
        "token_count": 269
    },
    "0042ce40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042ce40(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (uVar1 = _sym.imp.kernel32.dll_CreateIoCompletionPort, \n          *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00430560();\n    if (iStack16 == 0) {\n        fcn.0045dec0();\n        return uVar1 & 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 151
    },
    "0042cf00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042cf00(void)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*0x5d3b80 != 0) {\n                return *0x5d3b80;\n            }\n            *0x5d3b80 = 1;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_PostQueuedCompletionStatus;\n            *(*0x20 + -0x38) = *0x564578;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x48) = 0x42cf5c;\n            uVar1 = fcn.00430560();\n            if (*(*0x20 + -0x18) != 0) {\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x42cf87;\n            fcn.0045dec0();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42cfa8;\n            fcn.00434840();\n            *(*0x20 + -0x48) = 0x42cfb9;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x42cfc5;\n            fcn.00434e40();\n            *(*0x20 + -0x48) = 0x42cfd6;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x42cfdb;\n            fcn.004348c0();\n            *(*0x20 + -0x48) = 0x42cfec;\n            fcn.004330a0();\n        }\n        *(puVar2 + -8) = 0x42cff2;\n        fcn.0045a360();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 713
    },
    "0042d000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042d000(void)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    ulong *puVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x800 && *0x20 + -0x800 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x880;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar9 = *0x20 + -0x808;\n            for (iVar4 = 0x100; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar9 = 0;\n                puVar9 = puVar9 + 1;\n            }\n            *(*0x20 + -0x83c) = 0;\n            *(*0x20 + -0x830) = 0;\n            *(*0x20 + -0x838) = 0;\n            *(*0x20 + -0x828) = 0;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (*0x564578 == -1) {\n                return 0;\n            }\n            if (in_RAX < 0) {\n                uVar5 = 0xffffffff;\n            }\n            else if (in_RAX == 0) {\n                uVar5 = 0;\n            }\n            else if (in_RAX < 1000000) {\n                uVar5 = 1;\n            }\n            else if (in_RAX < 1000000000000000) {\n                uVar5 = in_RAX / 1000000 + (in_RAX >> 0x3f);\n            }\n            else {\n                uVar5 = 1000000000;\n            }\n            iVar8 = *0x5d3b70;\n            if (iVar8 != 0) {\n                if (iVar8 == -1) {\n                    uVar2 = 0xffffffc0;\n                }\n                else {\n                    uVar2 = SUB164((SEXT816(0x40) & 0xffffffffffffffff | ZEXT816(0x40)) / SEXT816(iVar8), 0);\n                }\n                *(*0x20 + -0x838) = uVar2;\n                if (uVar2 < 8) {\n                    *(*0x20 + -0x838) = 8;\n                }\n                *(*0x20 + -0x820) = in_RAX;\n                *(*0x20 + -0x810) = iVar4;\n                if (in_RAX != 0) {\n                    *(iVar4 + 0xe5) = 1;\n                }\n                puVar6 = *0x20 + -0x808;\n                *(*0x20 + -0x880) = _sym.imp.kernel32.dll_GetQueuedCompletionStatusEx;\n                *(*0x20 + -0x878) = *0x564578;\n                *(*0x20 + -0x870) = puVar6;\n                *(*0x20 + -0x868) = *(*0x20 + -0x838);\n                *(*0x20 + -0x860) = *0x20 + -0x838;\n                *(*0x20 + -0x858) = uVar5;\n                *(*0x20 + -0x850) = 0;\n                *(*0x20 + -0x888) = 0x42d167;\n                fcn.00430660();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                if (*(*0x20 + -0x848) == 0) {\n                    *(*(*0x20 + -0x810) + 0xe5) = 0;\n                    *(*0x20 + -0x888) = 0x42d1ac;\n                    fcn.0045dec0();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x880) != 0x102) {\n                        *(*0x20 + -0x82c) = *(*0x20 + -0x880);\n                        *(*0x20 + -0x888) = 0x42d1f7;\n                        fcn.00434840();\n                        *(*0x20 + -0x888) = 0x42d208;\n                        fcn.00435140();\n                        *(*0x20 + -0x888) = 0x42d214;\n                        fcn.00434f40();\n                        *(*0x20 + -0x888) = 0x42d225;\n                        fcn.00435140();\n                        *(*0x20 + -0x888) = 0x42d22a;\n                        fcn.004348c0();\n                        uVar5 = 0x17;\n                        *(*0x20 + -0x888) = 0x42d23b;\n                        fcn.004330a0();\n                        goto code_r0x0042d23b;\n                    }\n                    return 0;\n                }\n                *(*(*0x20 + -0x810) + 0xe5) = 0;\n                puVar6 = *(*0x20 + -0x820);\n                uVar3 = 0;\n                while( true ) {\n                    uVar5 = uVar3;\n                    if (*(*0x20 + -0x838) < uVar5 || *(*0x20 + -0x838) == uVar5) {\n                        return *(*0x20 + -0x828);\n                    }\n                    if (0x3f < uVar3) break;\n                    *(*0x20 + -0x834) = uVar5;\n                    iVar4 = *(*0x20 + uVar3 * 0x20 + -0x800);\n                    if (iVar4 == 0) {\n                        *0x5d3b80 = 0;\n                        if (puVar6 == NULL) {\n                            *(*0x20 + -0x888) = 0x42d285;\n                            fcn.0042cf00();\n                            puVar6 = *(*0x20 + -0x820);\n                            uVar5 = *(*0x20 + -0x834);\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x818) = iVar4;\n                        *(*0x20 + -0x83c) = 0;\n                        uVar1 = *(*(iVar4 + 0x20) + 8);\n                        *(*0x20 + -0x880) = *0x57ef58;\n                        *(*0x20 + -0x878) = uVar1;\n                        *(*0x20 + -0x870) = iVar4;\n                        *(*0x20 + -0x868) = *0x20 + -0x83c;\n                        *(*0x20 + -0x860) = 0;\n                        *(*0x20 + -0x858) = *0x20 + -0x830;\n                        *(*0x20 + -0x888) = 0x42d2e5;\n                        fcn.004305e0();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        if (*(*0x20 + -0x850) == 0) {\n                            *(*0x20 + -0x888) = 0x42d30b;\n                            fcn.0045dec0();\n                            unaff_R14 = **(in_GS_OFFSET + 0x28);\n                            uVar5 = *(*0x20 + -0x880);\n                        }\n                        else {\n                            uVar5 = 0;\n                        }\n                        *(*0x20 + -0x888) = 0x42d337;\n                        fcn.0042d3a0(uVar5);\n                        puVar6 = *(*0x20 + -0x820);\n                        uVar5 = *(*0x20 + -0x834);\n                    }\ncode_r0x0042d23b:\n                    uVar3 = uVar5 + 1;\n                }\n                *(*0x20 + -0x888) = 0x42d36b;\n                fcn.0045ca40(0x40);\n            }\n            *(*0x20 + -0x888) = 0x42d370;\n            in_RAX = fcn.00431720();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42d37b;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2011
    },
    "0042d520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042d520(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = unaff_RBX;\n            if (*0x5d3d28 == 0) {\n                arg1 = 0x5d43a0;\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_GetSystemDirectoryA;\n                *(*0x20 + -0x40) = 0x5d43a0;\n                *(*0x20 + -0x38) = 0x104;\n                *(*0x20 + -0x50) = 0x42d571;\n                fcn.00430460();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                uVar1 = *(*0x20 + -0x30);\n                if ((uVar1 != 0) && (uVar1 < 0x105)) {\n                    *(uVar1 + 0x5d43a0) = 0x5c;\n                    *0x5d3d28 = uVar1 + 1;\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x10);\n                    goto code_r0x0042d5bf;\n                }\n            }\n            else {\ncode_r0x0042d5bf:\n                if (*0x5d3b34 == '\\0') {\n                    uVar1 = *0x5d3d28;\n                    if (*0x5d3d28 < 0x106) {\n                        *(*0x20 + -0x20) = *0x5d3d28 + arg1;\n                        if (*0x5d3d28 + arg1 < 0x106) {\n                            uVar2 = 0x5d43a0;\n                        }\n                        else {\n                            *(*0x20 + -0x18) = *0x5d3d28;\n                            *(*0x20 + -0x50) = 0x42d66f;\n                            uVar2 = fcn.00444c60(*0x5d3d28);\n                            arg1 = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        *(*0x20 + -0x10) = uVar2;\n                        *(*0x20 + -0x50) = 0x42d698;\n                        fcn.0045d380(arg1);\n                        uVar1 = *(*0x20 + -0x20);\n                        if (uVar1 != 0) {\n                            *(*0x20 + -0x48) = _sym.imp.kernel32.dll_LoadLibraryA;\n                            *(*0x20 + -0x40) = *(*0x20 + -0x10);\n                            *(*0x20 + -0x50) = 0x42d6bf;\n                            fcn.004303e0();\n                            return *(*0x20 + -0x38);\n                        }\n                        *(*0x20 + -0x50) = 0x42d6e9;\n                        fcn.0045ca40(0);\n                        arg1 = in_RAX;\n                    }\n                    *(*0x20 + -0x50) = 0x42d6f3;\n                    fcn.0045caa0(uVar1, 0x105);\n                }\n                else if (arg1 != 0) {\n                    *(*0x20 + -0x48) = *0x57ef18;\n                    *(*0x20 + -0x40) = in_RAX;\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x30) = 0x800;\n                    *(*0x20 + -0x50) = 0x42d5f8;\n                    fcn.004304e0();\n                    return *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x50) = 0x42d6fd;\n                fcn.0045ca40(arg1);\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x50) = 0x42d70e;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x42d725;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1254
    },
    "0042d740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042d740(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xd8 && *0x20 + -0xd8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x158;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0xf4) = 0x32336c656e72656b;\n            *(*0x20 + -0xef) = 0x6c6c642e32336c;\n            *(*0x20 + -0x158) = _sym.imp.kernel32.dll_LoadLibraryA;\n            *(*0x20 + -0x150) = *0x20 + -0xf4;\n            *(*0x20 + -0x160) = 0x42d7a5;\n            fcn.004303e0();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if (*(*0x20 + -0x148) != 0) {\n                *(*0x20 + -0x128) = *(*0x20 + -0x148);\n                *(*0x20 + -0xab) = 0x69446c6c44646441;\n                uVar4 = 0x79726f74636572;\n                *(*0x20 + -0xa3) = 0x79726f74636572;\n                uVar3 = 0x10;\n                *(*0x20 + -0x160) = 0x42d807;\n                iVar1 = fcn.0042d460(0x10);\n                if (*0x5d3dd0 != 0) {\n                    *(*0x20 + -0x160) = 0x42d825;\n                    fcn.0045c5a0(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x57ef00;\n                }\n                *0x57ef00 = iVar1;\n                *(*0x20 + -0x23) = 0x6f74636556646441;\n                *(*0x20 + -0x1b) = 0x69746e6f43646572;\n                *(*0x20 + -0x18) = 0x65756e69746e6f43;\n                uVar5 = 0x72656c646e6148;\n                *(*0x20 + -0x10) = 0x72656c646e6148;\n                uVar4 = 0x1b;\n                *(*0x20 + -0x160) = 0x42d887;\n                uVar3 = fcn.0042d460(0x1b);\n                if (*0x5d3dd0 != 0) {\n                    *(*0x20 + -0x160) = 0x42d8a5;\n                    fcn.0045c5a0(uVar4, uVar5, param_3, param_4);\n                    uVar3 = *0x57ef08;\n                }\n                *0x57ef08 = uVar3;\n                uVar4 = 0x7262694c64616f4c;\n                *(*0x20 + -0xca) = 0x7262694c64616f4c;\n                *(*0x20 + -0xc3) = 0x41784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42d8e5;\n                iVar1 = fcn.0042d460(0xf);\n                if (*0x5d3dd0 != 0) {\n                    *(*0x20 + -0x160) = 0x42d905;\n                    fcn.0045c5a0(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x57ef18;\n                }\n                *0x57ef18 = iVar1;\n                *(*0x20 + -0xd9) = 0x7262694c64616f4c;\n                uVar4 = 0x57784579726172;\n                *(*0x20 + -0xd2) = 0x57784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42d93d;\n                iVar2 = fcn.0042d460(0xf);\n                iVar1 = iVar2;\n                if (*0x5d3dd0 != 0) {\n                    *(*0x20 + -0x160) = 0x42d95b;\n                    iVar2 = fcn.0045c5a0(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x57ef20;\n                }\n                *0x57ef20 = iVar1;\n                if ((iVar2 == 0) || (*0x57ef18 == 0)) {\n                    *0x5d3b34 = false;\n                }\n                else {\n                    *0x5d3b34 = *0x57ef00 != 0;\n                }\n                *(*0x20 + -0x101) = 0x3233697061766461;\n                *(*0x20 + -0xfc) = 0x6c6c642e323369;\n                *(*0x20 + -0x160) = 0x42d9b4;\n                iVar1 = fcn.0042d520(0xd);\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x79) = 0x75466d6574737953;\n                    *(*0x20 + -0x77) = 0x636e75466d657473;\n                    uVar5 = 0x3633306e6f6974;\n                    *(*0x20 + -0x6f) = 0x3633306e6f6974;\n                    uVar4 = 0x12;\n                    *(*0x20 + -0x160) = 0x42da08;\n                    uVar3 = fcn.0042d460(0x12);\n                    if (*0x5d3dd0 != 0) {\n                        *(*0x20 + -0x160) = 0x42da26;\n                        fcn.0045c5a0(uVar4, uVar5, param_3, param_4);\n                        uVar3 = *0x57ef40;\n                    }\n                    *0x57ef40 = uVar3;\n                    *(*0x20 + -0x116) = 0x6c642e6c6c64746e;\n                    *(*0x20 + -0x10e) = 0x6c;\n                    *(*0x20 + -0x160) = 0x42da4e;\n                    iVar1 = fcn.0042d520(10);\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x138) = iVar1;\n                        *(*0x20 + -0x67) = 0x6f4674696157744e;\n                        *(*0x20 + -0x61) = 0x6c676e6953726f46;\n                        uVar5 = 0x7463656a624f65;\n                        *(*0x20 + -0x59) = 0x7463656a624f65;\n                        uVar4 = 0x16;\n                        *(*0x20 + -0x160) = 0x42daa7;\n                        uVar3 = fcn.0042d460(0x16);\n                        if (*0x5d3dd0 != 0) {\n                            *(*0x20 + -0x160) = 0x42dac5;\n                            fcn.0045c5a0(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x57ef28;\n                        }\n                        *0x57ef28 = uVar3;\n                        *(*0x20 + -0x8a) = 0x75437465476c7452;\n                        *(*0x20 + -0x89) = 0x7275437465476c74;\n                        uVar5 = 0x626550746e6572;\n                        *(*0x20 + -0x81) = 0x626550746e6572;\n                        uVar4 = 0x11;\n                        *(*0x20 + -0x160) = 0x42db15;\n                        uVar3 = fcn.0042d460(0x11);\n                        if (*0x5d3dd0 != 0) {\n                            *(*0x20 + -0x160) = 0x42db33;\n                            fcn.0045c5a0(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x57ef48;\n                        }\n                        *0x57ef48 = uVar3;\n                        *(*0x20 + -0x3a) = 0x744e7465476c7452;\n                        *(*0x20 + -0x33) = 0x6e6f697372655674;\n                        uVar5 = 0x737265626d754e;\n                        *(*0x20 + -0x2b) = 0x737265626d754e;\n                        uVar4 = 0x17;\n                        *(*0x20 + -0x160) = 0x42db85;\n                        uVar3 = fcn.0042d460(0x17);\n                        if (*0x5d3dd0 != 0) {\n                            *(*0x20 + -0x160) = 0x42dba5;\n                            fcn.0045c5a0(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x57ef50;\n                        }\n                        *0x57ef50 = uVar3;\n                        *(*0x20 + -0x120) = 0x6c642e6d6d6e6977;\n                        *(*0x20 + -0x118) = 0x6c;\n                        *(*0x20 + -0x160) = 0x42dbcd;\n                        iVar1 = fcn.0042d520(10);\n                        if (iVar1 != 0) {\n                            *(*0x20 + -0x130) = iVar1;\n                            *(*0x20 + -0xbb) = 0x69676542656d6974;\n                            uVar4 = 0x646f697265506e;\n                            *(*0x20 + -0xb3) = 0x646f697265506e;\n                            uVar3 = 0x10;\n                            *(*0x20 + -0x160) = 0x42dc14;\n                            iVar1 = fcn.0042d460(0x10);\n                            if (*0x5d3dd0 != 0) {\n                                *(*0x20 + -0x160) = 0x42dc32;\n                                fcn.0045c5a0(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x57ef60;\n                            }\n                            *0x57ef60 = iVar1;\n                            *(*0x20 + -0xe7) = 0x50646e45656d6974;\n                            uVar4 = 0x646f6972655064;\n                            *(*0x20 + -0xe1) = 0x646f6972655064;\n                            uVar3 = 0xe;\n                            *(*0x20 + -0x160) = 0x42dc67;\n                            iVar2 = fcn.0042d460(0xe);\n                            iVar1 = iVar2;\n                            if (*0x5d3dd0 != 0) {\n                                *(*0x20 + -0x160) = 0x42dc85;\n                                iVar2 = fcn.0045c5a0(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x57ef68;\n                            }\n                            *0x57ef68 = iVar1;\n                            if ((*0x57ef60 != 0) && (iVar2 != 0)) {\n                                *(*0x20 + -0x10c) = 0x642e32335f327377;\n                                *(*0x20 + -0x109) = 0x6c6c642e32335f;\n                                *(*0x20 + -0x160) = 0x42dccc;\n                                iVar1 = fcn.0042d520(0xb);\n                                if (iVar1 != 0) {\n                                    *(*0x20 + -0x51) = 0x764f746547415357;\n                                    *(*0x20 + -0x4a) = 0x657070616c726576;\n                                    uVar4 = 0x746c7573655264;\n                                    *(*0x20 + -0x42) = 0x746c7573655264;\n                                    uVar3 = 0x17;\n                                    *(*0x20 + -0x160) = 0x42dd25;\n                                    iVar2 = fcn.0042d460(0x17);\n                                    iVar1 = iVar2;\n                                    if (*0x5d3dd0 != 0) {\n                                        *(*0x20 + -0x160) = 0x42dd45;\n                                        iVar2 = fcn.0045c5a0(uVar3, uVar4, param_3, param_4);\n                                        iVar1 = *0x57ef58;\n                                    }\n                                    *0x57ef58 = iVar1;\n                                    if (iVar2 != 0) {\n                                        *(*0x20 + -0x9b) = 0x7465675f656e6977;\n                                        *(*0x20 + -0x9a) = 0x5f7465675f656e69;\n                                        *(*0x20 + -0x92) = 0x6e6f6973726576;\n                                        *(*0x20 + -0x160) = 0x42dd9a;\n                                        iVar1 = fcn.0042d460(0x11);\n                                        if (iVar1 != 0) {\n                                            *(*0x20 + -0x160) = 0x42dda9;\n                                            fcn.0042e8e0();\n                                        }\n                                        return;\n                                    }\n                                    *(*0x20 + -0x160) = 0x42ddca;\n                                    fcn.004330a0();\n                                }\n                                *(*0x20 + -0x160) = 0x42dddb;\n                                fcn.004330a0();\n                            }\n                            *(*0x20 + -0x160) = 0x42ddec;\n                            fcn.004330a0();\n                        }\n                        *(*0x20 + -0x160) = 0x42ddfd;\n                        fcn.004330a0();\n                    }\n                    *(*0x20 + -0x160) = 0x42de0e;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x160) = 0x42de1f;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x160) = 0x42de30;\n            fcn.004330a0();\n        }\n        *(puVar6 + -8) = 0x42de36;\n        fcn.0045a360();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3588
    },
    "0042e060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042e141)\n// WARNING: Removing unreachable block (ram,0x0042e156)\n\nulong fcn.0042e060(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    int64_t iStack80;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004304e0();\n    if (iStack80 != 0) {\n        for (iVar1 = 0; iVar1 < 0x40; iVar1 = iVar1 + 1) {\n        }\n    }\n    fcn.004303e0();\n    return 0;\n}\n",
        "token_count": 182
    },
    "0042e180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042e180(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x5d3b2a == '\\0') {\n        if (in_AL != '\\0') {\n            fcn.004303e0();\n            return uStack16;\n        }\n        fcn.004303e0();\n        return uStack16;\n    }\n    return 0;\n}\n",
        "token_count": 146
    },
    "0042e8e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042e8e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x60) = in_RAX;\n            *(*0x20 + -0x3a) = 0x6574737953746547;\n            *(*0x20 + -0x32) = 0x467341656d69546d;\n            uVar4 = 0x656d6954656c69;\n            *(*0x20 + -0x2a) = 0x656d6954656c69;\n            uVar3 = 0x18;\n            *(*0x20 + -0x98) = 0x42e94a;\n            iVar1 = fcn.0042d460(0x18);\n            iVar2 = iVar1;\n            if (*0x5d3dd0 != 0) {\n                *(*0x20 + -0x98) = 0x42e968;\n                iVar1 = fcn.0045c5a0(uVar3, uVar4, param_3, param_4);\n                iVar2 = *0x57ef10;\n            }\n            *0x57ef10 = iVar2;\n            if (iVar1 != 0) {\n                uVar4 = 0x7265507972657551;\n                *(*0x20 + -0x52) = 0x7265507972657551;\n                *(*0x20 + -0x4a) = 0x65636e616d726f66;\n                param_3 = 0x7265746e756f43;\n                *(*0x20 + -0x42) = 0x7265746e756f43;\n                uVar3 = 0x18;\n                *(*0x20 + -0x98) = 0x42e9b5;\n                iVar2 = fcn.0042d460(0x18);\n                if (*0x5d3dd0 != 0) {\n                    *(*0x20 + -0x98) = 0x42e9d3;\n                    fcn.0045c5a0(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x57ef30;\n                }\n                *0x57ef30 = iVar2;\n                *(*0x20 + -0x22) = 0x7265507972657551;\n                *(*0x20 + -0x1a) = 0x65636e616d726f66;\n                *(*0x20 + -0x18) = 0x724665636e616d72;\n                uVar4 = 0x79636e65757165;\n                *(*0x20 + -0x10) = 0x79636e65757165;\n                uVar3 = 0x1a;\n                *(*0x20 + -0x98) = 0x42ea29;\n                iVar1 = fcn.0042d460(0x1a);\n                iVar2 = iVar1;\n                if (*0x5d3dd0 != 0) {\n                    *(*0x20 + -0x98) = 0x42ea47;\n                    iVar1 = fcn.0045c5a0(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x57ef38;\n                }\n                *0x57ef38 = iVar2;\n                if ((*0x57ef30 != 0) && (iVar1 != 0)) {\n                    *(*0x20 + -0x70) = 0;\n                    *(*0x20 + -0x90) = *0x57ef38;\n                    *(*0x20 + -0x88) = *0x20 + -0x70;\n                    *(*0x20 + -0x98) = 0x42ea85;\n                    fcn.004303e0();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar2 = *(*0x20 + -0x70);\n                    if (iVar2 != 0) {\n                        if (iVar2 < 0x80000000) {\n                            *(*0x20 + -0x68) = iVar2;\n                            *(*0x20 + -0x90) = *0x57ef30;\n                            *(*0x20 + -0x88) = 0x5d3d00;\n                            *(*0x20 + -0x98) = 0x42ead6;\n                            fcn.004303e0();\n                            uVar7 = 0;\n                            iVar1 = 1000000000;\n                            for (iVar2 = 0x1e; -1 < iVar2; iVar2 = iVar2 + -1) {\n                                iVar6 = *(*0x20 + -0x68) << (iVar2 & 0x3f);\n                                if (iVar6 <= iVar1) {\n                                    iVar1 = iVar1 - iVar6;\n                                    uVar7 = uVar7 | 1 << (iVar2 & 0x1f);\n                                }\n                            }\n                            if (*(*0x20 + -0x68) <= iVar1) {\n                                uVar7 = 0x7fffffff;\n                            }\n                            *0x5d3b35 = 1;\n                            *0x5d3cf8 = uVar7;\n                            return;\n                        }\n                        *(*0x20 + -0x98) = 0x42eb65;\n                        fcn.004330a0();\n                    }\n                    *(*0x20 + -0x98) = 0x42eb76;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x98) = 0x42eb87;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x98) = 0x42eb98;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42eba5;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1569
    },
    "0042ec60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042ec60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int16_t *piVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x0042ec60:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x68) = 0x42ec85;\n        iVar1 = fcn.00430380();\n        uVar6 = 0;\n        iVar7 = 0;\n        for (uVar4 = 0; uVar4 < 0x1000000; uVar4 = uVar4 + 1) {\n            if (*(iVar1 + uVar4 * 2) == 0) {\n                if (uVar6 == uVar4) {\n                    *(*0x20 + -0x28) = iVar1;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x68) = 0x42eccf;\n                    iVar1 = fcn.00444b80(iVar7);\n                    uVar6 = *(*0x20 + -0x38);\n                    *0x57fcb8 = uVar6;\n                    *0x57fcc0 = uVar6;\n                    if (*0x5d3dd0 != 0) {\n                        *(*0x20 + -0x68) = 0x42ed05;\n                        fcn.0045c5a0(iVar7, uVar6, param_3, param_4);\n                        iVar1 = *0x57fcb0;\n                    }\n                    *0x57fcb0 = iVar1;\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar1 = 0;\n                    uVar4 = 0x1000000;\n                    iVar5 = iVar7;\n                    goto code_r0x0042ed3a;\n                }\n                uVar6 = uVar4 + 1;\n                iVar7 = iVar7 + 1;\n            }\n        }\n        goto code_r0x0042ee8f;\n    }\n    goto code_r0x0042eea0;\ncode_r0x0042ed3a:\n    if (uVar6 <= iVar1) {\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_FreeEnvironmentStringsW;\n        *(*0x20 + -0x58) = iVar5;\n        *(*0x20 + -0x68) = 0x42edc5;\n        fcn.004303e0();\n        *(*0x20 + -0x18) = 0x4b5ce0;\n        *(*0x20 + -0x10) = 0x4d5bf8;\n        *(*0x20 + -0x68) = 0x42ee05;\n        uVar2 = fcn.00458440(1);\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_SetConsoleCtrlHandler;\n        *(*0x20 + -0x58) = uVar2;\n        *(*0x20 + -0x50) = 1;\n        *(*0x20 + -0x68) = 0x42ee25;\n        fcn.00430460();\n        *(*0x20 + -0x68) = 0x42ee3e;\n        fcn.0042dec0();\n        return;\n    }\n    if (uVar4 == 0) goto code_r0x0042ee85;\n    *(*0x20 + -0x30) = iVar1;\n    *(*0x20 + -0x40) = uVar4;\n    *(*0x20 + -0x20) = iVar7;\n    *(*0x20 + -0x68) = 0x42ed5d;\n    uVar2 = fcn.00449680();\n    iVar7 = *0x57fcb0;\n    uVar4 = *(*0x20 + -0x30);\n    uVar6 = *0x57fcb8;\n    if (*0x57fcb8 <= uVar4) goto code_r0x0042ee7a;\n    *(*0x57fcb0 + 8 + uVar4 * 0x10) = iVar1;\n    if (*0x5d3dd0 == 0) {\n        *(iVar7 + uVar4 * 0x10) = uVar2;\n        uVar6 = uVar4;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x42ed9d;\n        fcn.0045c5a0(iVar7, uVar4, param_3, param_4);\n        uVar6 = uVar4;\n    }\n    piVar3 = *(*0x20 + -0x20);\n    uVar4 = *(*0x20 + -0x40);\n    while( true ) {\n        if (uVar4 == 0) {\n            *(*0x20 + -0x68) = 0x42ee7a;\n            fcn.0045ca40(0);\n            goto code_r0x0042ee7a;\n        }\n        if (*piVar3 == 0) break;\n        uVar4 = uVar4 - 1;\n        piVar3 = piVar3 + (-uVar4 >> 0x3f & 2);\n    }\n    iVar1 = uVar6 + 1;\n    uVar4 = uVar4 - 1;\n    iVar7 = piVar3 + (-uVar4 >> 0x3f & 2);\n    uVar6 = *(*0x20 + -0x38);\n    iVar5 = *(*0x20 + -0x28);\n    goto code_r0x0042ed3a;\ncode_r0x0042ee7a:\n    *(*0x20 + -0x68) = 0x42ee85;\n    fcn.0045ca40(uVar6);\ncode_r0x0042ee85:\n    *(*0x20 + -0x68) = 0x42ee8f;\n    fcn.0045ca40(uVar4);\ncode_r0x0042ee8f:\n    *(*0x20 + -0x68) = 0x42ee9c;\n    fcn.0045ca40(0x1000000);\ncode_r0x0042eea0:\n    *(puVar8 + -8) = 0x42eea5;\n    fcn.0045a360();\n    *0x20 = puVar8;\n    goto code_r0x0042ec60;\n}\n",
        "token_count": 1592
    },
    "0042ef40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042ef40(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t arg1_00;\n    int64_t iStack56;\n    \n    if (in_RAX == 1) {\n        fcn.004303e0();\n    }\n    else if (in_RAX == 2) {\n        fcn.004303e0();\n    }\n    arg1_00 = arg1;\n    if (0x40000000 < arg1_00) {\n        fcn.0045ca80(arg1_00, 0x40000000);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = 0;\n    do {\n        if (arg1_00 <= iVar3) {\ncode_r0x0042f07b:\n            fcn.004305e0();\n            return 0;\n        }\n        if (0x7f < *(unaff_RBX + iVar3)) {\n            fcn.00430460();\n            if (iStack56 != 0) {\n                uVar2 = fcn.0042f100(arg1);\n                return uVar2;\n            }\n            goto code_r0x0042f07b;\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 326
    },
    "0042f520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042f520(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iStack96;\n    uint64_t uStack72;\n    uint64_t uStack56;\n    \n    if (in_RAX < 0) {\n        fcn.00430460();\n        uStack56 = uStack72;\n    }\n    else {\n        fcn.0045e320();\n        iVar2 = 0;\n        while( true ) {\n            iVar1 = _sym.imp.kernel32.dll_WaitForMultipleObjects;\n            iVar2 = in_RAX - iVar2;\n            for (iVar3 = 0x1e; -1 < iVar3; iVar3 = iVar3 + -1) {\n                iVar4 = 1000000 << (iVar3 & 0x3f);\n                if (iVar4 <= iVar2) {\n                    iVar2 = iVar2 - iVar4;\n                }\n            }\n            fcn.00430560();\n            if (uStack56 != 1) break;\n            fcn.0045e320();\n            iVar2 = iVar1 - iStack96;\n            if (in_RAX <= iVar2) {\n                return 0xffffffff;\n            }\n        }\n    }\n    if (uStack56 < 0x81) {\n        if (uStack56 == 0) {\n            return 0;\n        }\n        if (uStack56 == 0x80) {\n            fcn.0045a220();\n            return 0xffffffff;\n        }\n    }\n    else {\n        if (uStack56 == 0x102) {\n            return 0xffffffff;\n        }\n        if (uStack56 == 0xffffffff) {\n            fcn.0045a220();\n            return 0xffffffff;\n        }\n    }\n    fcn.0045a220();\n    return 0xffffffff;\n}\n",
        "token_count": 423
    },
    "0042f8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f8c0(void)\n\n{\n    int64_t iStack16;\n    \n    fcn.004303e0();\n    if (iStack16 == 0) {\n        fcn.0045a220();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "0042fa40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042fa40(void)\n\n{\n    int64_t in_RAX;\n    int64_t iStack16;\n    \n    if (*(in_RAX + 0x318) == 0) {\n        fcn.00430560();\n        *(in_RAX + 0x318) = iStack16;\n        if (iStack16 == 0) {\n            fcn.0045a220();\n        }\n        fcn.00430560();\n        *(in_RAX + 800) = iStack16;\n        if (iStack16 == 0) {\n            fcn.0045a220();\n            fcn.004303e0();\n            *(in_RAX + 0x318) = 0;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "0042fd40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042fd40(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint uVar6;\n    uint in_XMM15_Db;\n    uint uVar7;\n    uint in_XMM15_Dc;\n    uint uVar8;\n    uint in_XMM15_Dd;\n    uint uVar9;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x68) = 0;\n            *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_DuplicateHandle;\n            *(*0x20 + -0xa8) = 0xffffffffffffffff;\n            *(*0x20 + -0xa0) = 0xfffffffffffffffe;\n            *(*0x20 + -0x98) = 0xffffffffffffffff;\n            *(*0x20 + -0x90) = *0x20 + -0x68;\n            *(*0x20 + -0x88) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x78) = 2;\n            *(*0x20 + -0xb8) = 0x42fdb3;\n            fcn.004306e0();\n            uVar6 = 0;\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            if (*(*0x20 + -0x70) != 0) {\n                iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x10) = iVar2 + 0x308;\n                *(*0x20 + -0xb8) = 0x42fdf6;\n                fcn.0040a360();\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x310) = *(*0x20 + -0x68);\n                if ((*(iVar2 + 0x328) == 0) && (*0x5d3b2a != '\\0')) {\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_CreateWaitableTimerExW;\n                    *(*0x20 + -0xa8) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x98) = 2;\n                    *(*0x20 + -0x90) = 0x100003;\n                    *(*0x20 + -0xb8) = 0x42fe45;\n                    fcn.00430560();\n                    uVar6 = 0;\n                    uVar7 = 0;\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    iVar2 = *(*0x20 + -0x88);\n                    *(*(*0x20 + -0x18) + 0x328) = iVar2;\n                    if (iVar2 != 0) goto code_r0x0042fe78;\n                }\n                else {\ncode_r0x0042fe78:\n                    *(*0x20 + -0xb8) = 0x42fe85;\n                    fcn.0040a580();\n                    *(*0x20 + -0x48) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x38) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x28) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_VirtualQuery;\n                    *(*0x20 + -0xa8) = *0x20 + -0x48;\n                    *(*0x20 + -0xa0) = *0x20 + -0x48;\n                    *(*0x20 + -0x98) = 0x30;\n                    *(*0x20 + -0xb8) = 0x42fec5;\n                    fcn.004304e0();\n                    puVar3 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x90) != 0) {\n                        iVar2 = *(*0x20 + -0x40);\n                        uVar1 = iVar2 + 0x4000;\n                        *(*0x20 + -0x60) = uVar1;\n                        uVar4 = puVar3[1];\n                        *(*0x20 + -0x50) = uVar4;\n                        if ((uVar1 <= uVar4) && ((uVar4 - iVar2) - 0x4000 < 0x4000001)) {\n                            *puVar3 = uVar1;\n                            puVar3[2] = iVar2 + 0x53a0U;\n                            puVar3[3] = iVar2 + 0x53a0U;\n                            *(*0x20 + -0xb8) = 0x42ff2e;\n                            fcn.0045c3e0();\n                            return;\n                        }\n                        *(*0x20 + -0xb8) = 0x42ff57;\n                        fcn.00434840();\n                        *(*0x20 + -0xb8) = 0x42ff68;\n                        fcn.00435140();\n                        *(*0x20 + -0xb8) = 0x42ff72;\n                        fcn.00434fa0();\n                        *(*0x20 + -0xb8) = 0x42ff85;\n                        fcn.00435140();\n                        *(*0x20 + -0xb8) = 0x42ff8f;\n                        fcn.00434fa0();\n                        *(*0x20 + -0xb8) = 0x42ffa5;\n                        fcn.00435140();\n                        *(*0x20 + -0xb8) = 0x42ffaa;\n                        fcn.004348c0();\n                        *(*0x20 + -0xb8) = 0x42ffbb;\n                        fcn.004330a0();\n                    }\n                    *(*0x20 + -0xb8) = 0x42ffc5;\n                    fcn.0045dec0();\n                    *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                    *(*0x20 + -0xb8) = 0x42ffe6;\n                    fcn.00434840();\n                    *(*0x20 + -0xb8) = 0x42fff7;\n                    fcn.00435140();\n                    *(*0x20 + -0xb8) = 0x430005;\n                    fcn.00434e40();\n                    *(*0x20 + -0xb8) = 0x43000a;\n                    fcn.00434aa0();\n                    *(*0x20 + -0xb8) = 0x43000f;\n                    fcn.004348c0();\n                    *(*0x20 + -0xb8) = 0x430025;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0xb8) = 0x43002a;\n                fcn.0045dec0();\n                *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                *(*0x20 + -0xb8) = 0x43004b;\n                fcn.00434840();\n                *(*0x20 + -0xb8) = 0x43005c;\n                fcn.00435140();\n                *(*0x20 + -0xb8) = 0x430066;\n                fcn.00434e40();\n                *(*0x20 + -0xb8) = 0x43006b;\n                fcn.00434aa0();\n                *(*0x20 + -0xb8) = 0x430070;\n                fcn.004348c0();\n                *(*0x20 + -0xb8) = 0x430085;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0xb8) = 0x43008a;\n            fcn.0045dec0();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n            *(*0x20 + -0xb8) = 0x4300ab;\n            fcn.00434840();\n            *(*0x20 + -0xb8) = 0x4300bc;\n            fcn.00435140();\n            *(*0x20 + -0xb8) = 0x4300c6;\n            fcn.00434e40();\n            *(*0x20 + -0xb8) = 0x4300cb;\n            fcn.00434aa0();\n            *(*0x20 + -0xb8) = 0x4300d0;\n            fcn.004348c0();\n            *(*0x20 + -0xb8) = 0x4300e5;\n            fcn.004330a0();\n        }\n        *(puVar5 + -8) = 0x4300eb;\n        fcn.0045a360();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2305
    },
    "004302a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004302a0(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x278) = in_RAX;\n    if ((*(iVar1 + 0xe0) == 0) || (*(iVar1 + 0x2b0) != 0)) {\n        bVar2 = false;\n    }\n    else {\n        *(iVar1 + 0x2b8) = unaff_R14;\n        *(iVar1 + 0x2a8) = in_stack_00000000;\n        *(iVar1 + 0x2b0) = auStackX8;\n        bVar2 = true;\n    }\n    fcn.0045c180();\n    if (bVar2) {\n        *(iVar1 + 0x2b0) = 0;\n    }\n    return *(iVar1 + 0x290);\n}\n",
        "token_count": 246
    },
    "004309c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004309c0(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    ulong arg1;\n    char cVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    ulong *puVar8;\n    uint64_t **ppuVar9;\n    uint64_t *puVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar12;\n    uint in_XMM15_Da;\n    uint uVar13;\n    uint in_XMM15_Db;\n    uint uVar14;\n    uint in_XMM15_Dc;\n    uint uVar15;\n    uint in_XMM15_Dd;\n    uint uVar16;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x4d8 && *0x20 + -0x4d8 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x558;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_R14 + 0x30) != in_RAX) {\n                LOCK();\n                if (*(in_RAX + 0x330) != 0) {\n                    LOCK();\n                    puVar2 = in_RAX + 0x300;\n                    uVar3 = *puVar2;\n                    *puVar2 = *puVar2 + 1;\n                    return uVar3;\n                }\n                *(in_RAX + 0x330) = 1;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = in_RAX + 0x308;\n                *(*0x20 + -0x560) = 0x430a2d;\n                fcn.0040a360();\n                if (*(*(*0x20 + -0x10) + 0x310) == 0) {\n                    *(*0x20 + -0x560) = 0x430a4e;\n                    uVar6 = fcn.0040a580();\n                    iVar7 = *(*0x20 + -0x10);\n                    *(iVar7 + 0x330) = 0;\n                    LOCK();\n                    piVar1 = iVar7 + 0x300;\n                    *piVar1 = *piVar1 + 1;\n                    return uVar6;\n                }\n                *(*0x20 + -0x510) = 0;\n                uVar4 = *(*(*0x20 + -0x10) + 0x310);\n                *(*0x20 + -0x558) = _sym.imp.kernel32.dll_DuplicateHandle;\n                *(*0x20 + -0x550) = 0xffffffffffffffff;\n                *(*0x20 + -0x548) = uVar4;\n                *(*0x20 + -0x540) = 0xffffffffffffffff;\n                *(*0x20 + -0x538) = *0x20 + -0x510;\n                *(*0x20 + -0x530) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x520) = 2;\n                *(*0x20 + -0x560) = 0x430acb;\n                fcn.004306e0();\n                uVar13 = 0;\n                uVar14 = 0;\n                uVar15 = 0;\n                uVar16 = 0;\n                if (*(*0x20 + -0x518) != 0) break;\n                *(*0x20 + -0x560) = 0x430e0d;\n                fcn.0045dec0();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x508) = *(*0x20 + -0x558);\n                *(*0x20 + -0x560) = 0x430e2e;\n                fcn.00434840();\n                *(*0x20 + -0x560) = 0x430e3f;\n                fcn.00435140();\n                *(*0x20 + -0x560) = 0x430e49;\n                fcn.00434e40();\n                *(*0x20 + -0x560) = 0x430e4e;\n                fcn.00434aa0();\n                *(*0x20 + -0x560) = 0x430e53;\n                fcn.004348c0();\n                *(*0x20 + -0x560) = 0x430e65;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x560) = 0x430e76;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x430e85;\n        fcn.0045a360();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n    *(*0x20 + -0x560) = 0x430afa;\n    fcn.0040a580();\n    *(*0x20 + -0x4ff) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n    puVar8 = *0x20 + -0x4f0;\n    for (iVar7 = 0x9a; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *(*0x20 + -0x18) = *0x20 + -0x4f0 & 0xfffffffffffffff0;\n    *((*0x20 + -0x4f0 & 0xfffffffffffffff0) + 0x30) = 0x100001;\n    *(*0x20 + -0x560) = 0x430b35;\n    fcn.0040a360();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SuspendThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x430b4f;\n    fcn.004303e0();\n    if (*(*0x20 + -0x548) == -1) {\n        *(*0x20 + -0x560) = 0x430d90;\n        fcn.0040a580();\n        *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n        *(*0x20 + -0x550) = *(*0x20 + -0x510);\n        *(*0x20 + -0x560) = 0x430daa;\n        uVar6 = fcn.004303e0();\n        iVar7 = *(*0x20 + -0x10);\n        *(iVar7 + 0x330) = 0;\n        LOCK();\n        piVar1 = iVar7 + 0x300;\n        *piVar1 = *piVar1 + 1;\n        return uVar6;\n    }\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_GetThreadContext;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x548) = *(*0x20 + -0x18);\n    *(*0x20 + -0x560) = 0x430b98;\n    fcn.00430460();\n    *(*0x20 + -0x560) = 0x430bba;\n    fcn.0040a580();\n    iVar7 = *(*0x20 + -0x18);\n    uVar6 = *(iVar7 + 0x98);\n    ppuVar9 = *(*0x20 + -0x10);\n    puVar10 = *ppuVar9;\n    if (((((puVar10 == NULL) || (uVar6 <= *puVar10)) || (puVar10[1] < uVar6 || puVar10[1] == uVar6)) &&\n        (((puVar10 = ppuVar9[10],  puVar10 == NULL || (uVar6 <= *puVar10)) ||\n         (puVar10[1] < uVar6 || puVar10[1] == uVar6)))) &&\n       (((puVar10 = ppuVar9[0x12],  puVar10 == NULL || (uVar6 <= *puVar10)) ||\n        (puVar10[1] < uVar6 || puVar10[1] == uVar6)))) {\n        puVar10 = NULL;\n    }\n    if (puVar10 == NULL) {\n        bVar12 = false;\n        goto code_r0x00430c68;\n    }\n    if (*(puVar10 + 0xb1) == '\\0') {\n        if (*(puVar10[6] + 0xa0) == 0) {\n            bVar12 = false;\n            goto code_r0x00430c68;\n        }\n        if (*(*(puVar10[6] + 0xa0) + 0x22b0) == '\\0') {\n            bVar12 = false;\n            goto code_r0x00430c68;\n        }\n    }\n    bVar12 = (*(puVar10 + 0x12) & 0xffffefff) == 2;\ncode_r0x00430c68:\n    if (bVar12) {\n        uVar4 = *(iVar7 + 0xf8);\n        arg1 = *(iVar7 + 0x98);\n        *(*0x20 + -0x560) = 0x430c8c;\n        cVar5 = fcn.00434300(arg1);\n        if (cVar5 != '\\0') {\n            iVar7 = *(*0x20 + -0x18);\n            puVar8 = *(iVar7 + 0x98) + -8;\n            *puVar8 = uVar4;\n            *(iVar7 + 0x98) = puVar8;\n            *(iVar7 + 0xf8) = fcn.0045da40;\n            *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SetThreadContext;\n            *(*0x20 + -0x550) = *(*0x20 + -0x510);\n            *(*0x20 + -0x548) = iVar7;\n            *(*0x20 + -0x560) = 0x430ce5;\n            fcn.00430460();\n        }\n        ppuVar9 = *(*0x20 + -0x10);\n    }\n    *(ppuVar9 + 0x66) = 0;\n    LOCK();\n    *(ppuVar9 + 0x60) = *(ppuVar9 + 0x60) + 1;\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_ResumeThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x430d30;\n    fcn.004303e0();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x430d5e;\n    uVar6 = fcn.004303e0();\n    return uVar6;\n}\n",
        "token_count": 2723
    },
    "00430ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00430ea0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t *piVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x430ec7;\n            fcn.0044b1a0();\n            *(*0x20 + -0x20) = 0x430ecc;\n            piVar1 = fcn.0044b920();\n            if ((unaff_RBX < 8) || (arg1 = 0x2e656d69746e7572,  *piVar1 != 0x2e656d69746e7572)) {\n                if ((unaff_R14 == 0) || ((arg1 = *(unaff_R14 + 0x30),  arg1 == 0 || (*(arg1 + 0xc0) == 0)))) {\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x430f18;\n                fcn.004330a0();\n            }\n            unaff_RBX = *(*0x20 + 0x18);\n            *(*0x20 + -0x20) = 0x430f27;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x430f3c;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 566
    },
    "00430f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00430f60(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) || (*(*(unaff_R14 + 0x30) + 0xc0) == 0)) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x430fa6;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x430fb6;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 350
    },
    "00431820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00431820(uint64_t arg1, uint64_t arg2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar8 = *(unaff_R14 + 0x30);\n    uVar7 = *(iVar8 + 0xa0);\n    uVar9 = uVar7;\n    if (*(uVar7 + 0x70) != 0) goto code_r0x0043188f;\n    if (*0x580770 == 0) goto code_r0x0043188f;\n    fcn.0040a360();\n    arg2 = uVar7 + 0x68;\n    iStack40 = iVar8;\n    uStack24 = arg2;\n    uStack16 = uVar7;\n    while( true ) {\n        while ((iVar8 = *0x580770,  *(uVar7 + 0x70) < *(uVar7 + 0x78) >> 1 && (*0x580770 != 0))) {\n            if (*0x5d3dd0 == 0) {\n                puVar1 = *0x580770 + 0x28;\n                *0x580770 = *(*0x580770 + 0x28);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.0045c740(uVar7, arg2, *0x580770);\n                arg2 = fcn.0045c6c0(uVar7, 0, iVar8, iVar8 + 0x28);\n            }\n            iVar6 = *(uVar7 + 0x70);\n            iVar4 = *(uVar7 + 0x68);\n            iVar5 = iVar4;\n            if (*(uVar7 + 0x78) < iVar6 + 1U) {\n                arg3 = iVar8;\n                arg4 = iVar6;\n                iVar5 = fcn.00444c60(iVar6);\n                *(uStack16 + 0x78) = iVar6;\n                uVar7 = uStack16;\n                arg2 = uStack24;\n                if (*0x5d3dd0 == 0) {\n                    *(uStack16 + 0x68) = iVar5;\n                    iVar6 = iVar4;\n                }\n                else {\n                    iVar5 = fcn.0045c5a0(iVar6, uStack16, arg3, arg4);\n                    iVar6 = iVar4;\n                }\n            }\n            *(uVar7 + 0x70) = iVar6 + 1;\n            if (*0x5d3dd0 == 0) {\n                *(iVar5 + iVar6 * 8) = iVar8;\n            }\n            else {\n                fcn.0045c720(uVar7, arg2, iVar8, iVar6);\n            }\n        }\n        fcn.0040a580();\n        arg1 = uVar7;\n        iVar8 = iStack40;\n        uVar9 = uStack16;\ncode_r0x0043188f:\n        iVar6 = *(uVar9 + 0x70);\n        if (iVar6 == 0) {\n            iVar4 = 0;\n            goto code_r0x004318dc;\n        }\n        iVar4 = *(*(uVar9 + 0x68) + -8 + iVar6 * 8);\n        if (*0x5d3dd0 == 0) {\n            *(*(uVar9 + 0x68) + -8 + iVar6 * 8) = 0;\n        }\n        else {\n            fcn.0045c740(arg1, arg2, iVar6);\n        }\n        uVar7 = iVar6 - 1;\n        arg2 = *(uVar9 + 0x78);\n        if (uVar7 <= arg2) break;\n        fcn.0045cac0(uVar7, arg2);\n    }\n    *(uVar9 + 0x70) = uVar7;\ncode_r0x004318dc:\n    iVar3 = *(iVar8 + 0xd8);\n    *(iVar8 + 0xd8) = iVar3 + -1;\n    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    if (iVar4 == 0) {\n        iVar4 = fcn.0040c440();\n    }\n    *(iVar4 + 1) = 1;\n    return iVar4;\n}\n",
        "token_count": 1172
    },
    "00431a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431a60(ulong arg1, ulong arg2)\n\n{\n    uint64_t arg1_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uchar (*in_RAX) [16];\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_01;\n    int64_t arg2_00;\n    int64_t arg2_01;\n    int64_t arg3;\n    int64_t iVar7;\n    ulong in_R9;\n    int64_t iVar8;\n    uint64_t arg1_02;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    if (*0x5d3dd0 == 0) {\n        *(in_RAX[2] + 8) = 0;\n    }\n    else {\n        in_RAX = fcn.0045c720(arg1, arg2, 0, in_R9);\n    }\n    if (*in_RAX[2] != 0) {\n        fcn.00431d20();\n    }\n    if (*(in_RAX[1] + 8) != 0) {\n        fcn.00431d60();\n    }\n    if ((*in_RAX)[1] == '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg3 = *(unaff_R14 + 0x30);\n    arg2_00 = *(arg3 + 0xa0);\n    if (*(arg2_00 + 0x70) == *(arg2_00 + 0x78)) {\n        iVar5 = 0;\n        iVar6 = 0;\n        iVar7 = arg3;\n        iVar4 = arg2_00;\n        while( true ) {\n            arg1_02 = *(iVar4 + 0x70);\n            if (arg1_02 <= *(iVar4 + 0x78) >> 1) break;\n            arg1_00 = arg1_02 - 1;\n            if (arg1_02 <= arg1_00) {\ncode_r0x00431d05:\n                fcn.0045ca40(arg1_02);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar8 = *(*(iVar4 + 0x68) + -8 + arg1_02 * 8);\n            if (*0x5d3dd0 == 0) {\n                *(*(iVar4 + 0x68) + -8 + arg1_02 * 8) = 0;\n                arg1_01 = iVar5;\n                arg2_01 = iVar6;\n                iVar5 = iVar8;\n            }\n            else {\n                fcn.0045c6e0(iVar5, iVar6, iVar7, iVar4);\n                arg1_01 = iVar5;\n                arg2_01 = iVar6;\n                iVar5 = iVar8;\n            }\n            if (*(iVar4 + 0x78) < arg1_00) {\n                fcn.0045cac0(arg1_00, *(iVar4 + 0x78));\n                goto code_r0x00431d05;\n            }\n            *(iVar4 + 0x70) = arg1_00;\n            iVar6 = iVar5;\n            if (arg2_01 != 0) {\n                if (*0x5d3dd0 == 0) {\n                    *(arg1_01 + 0x28) = iVar5;\n                    iVar6 = arg2_01;\n                }\n                else {\n                    fcn.0045c6e0(arg1_01, arg2_01, iVar7, iVar4);\n                    iVar6 = arg2_01;\n                }\n            }\n        }\n        fcn.0040a360();\n        if (*0x5d3dd0 == 0) {\n            *(iVar5 + 0x28) = *0x580770;\n            *0x580770 = iVar6;\n        }\n        else {\n            fcn.0045c6c0(iVar5, *0x580770, iVar7, iVar4);\n            fcn.0045c6a0(iVar6);\n        }\n        fcn.0040a580();\n    }\n    if (*0x5d3dd0 == 0) {\n        *in_RAX = in_XMM15;\n        *(*in_RAX + 8) = in_XMM15;\n        *(in_RAX[1] + 8) = in_XMM15;\n        *(in_RAX[2] + 8) = in_XMM15;\n        *(in_RAX[3] + 8) = in_XMM15;\n    }\n    else {\n        fcn.004114c0();\n    }\n    iVar6 = *(arg2_00 + 0x70);\n    iVar7 = *(arg2_00 + 0x68);\n    iVar4 = iVar7;\n    if (*(arg2_00 + 0x78) < iVar6 + 1U) {\n        iVar5 = arg3;\n        iVar8 = arg2_00;\n        iVar4 = fcn.00444c60(iVar6);\n        *(arg2_00 + 0x78) = iVar6;\n        if (*0x5d3dd0 == 0) {\n            *(arg2_00 + 0x68) = iVar4;\n            iVar6 = iVar7;\n        }\n        else {\n            iVar4 = fcn.0045c5a0(iVar6, arg2_00, iVar5, iVar8);\n            iVar6 = iVar7;\n        }\n    }\n    *(arg2_00 + 0x70) = iVar6 + 1;\n    if (*0x5d3dd0 == 0) {\n        *(iVar4 + iVar6 * 8) = in_RAX;\n    }\n    else {\n        fcn.0045c5a0(iVar6, iVar6 + 1, arg3, arg2_00);\n    }\n    iVar2 = *(arg3 + 0xd8);\n    *(arg3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 1433
    },
    "00431da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431da0(ulong param_1, ulong param_2, int64_t param_3, ulong param_4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t noname_0;\n    ulong uVar4;\n    uchar *noname_1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = unaff_R14;\n            noname_0 = *(*0x20 + -0x28);\n            while( true ) {\n                iVar3 = *(noname_0 + 0x28);\n                if (iVar3 == 0) {\n                    return;\n                }\n                noname_1 = *0x20 + 8;\n                if (*(iVar3 + 8) != noname_1) {\n                    return;\n                }\n                arg3 = noname_0 + 0x28;\n                if (*(iVar3 + 2) != '\\0') break;\n                uVar4 = *(iVar3 + 0x18);\n                if (*0x5d3dd0 == 0) {\n                    *(iVar3 + 0x18) = 0;\n                }\n                else {\n                    param_4 = 0;\n                    *(*0x20 + -0x40) = 0x431e2b;\n                    iVar3 = fcn.0045c740(noname_0, noname_1, arg3);\n                    param_3 = arg3;\n                }\n                *(*0x20 + -0x20) = uVar4;\n                if (*0x5d3dd0 == 0) {\n                    *(noname_0 + 0x28) = *(iVar3 + 0x28);\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x431e50;\n                    fcn.0045c700(noname_0, noname_1, param_3, param_4);\n                }\n                *(*0x20 + -0x40) = 0x431dc9;\n                fcn.00431a60(noname_0, noname_1);\n                pcVar1 = **(*0x20 + -0x20);\n                *(*0x20 + -0x40) = 0x431dd3;\n                (*pcVar1)();\n                noname_0 = *(*0x20 + -0x28);\n            }\n            *(*0x20 + -0x10) = arg3;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x40) = 0x431e6a;\n            cVar2 = fcn.00432540(noname_0, noname_1, param_3, param_4);\n            if (cVar2 != '\\0') {\n                uVar4 = *(*(*0x20 + -0x18) + 0x28);\n                if (*0x5d3dd0 == 0) {\n                    noname_1 = *(*0x20 + -0x28);\n                    *(noname_1 + 0x28) = uVar4;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x431e97;\n                    fcn.0045c6a0();\n                }\n                *(*0x20 + -0x40) = 0x431e9c;\n                fcn.00431a60(uVar4, noname_1);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x431ecb;\n            fcn.004330a0();\n        }\n        *(puVar5 + -8) = 0x431ed1;\n        fcn.0045a360();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 957
    },
    "00431f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431f40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    for (; in_RAX != 0; in_RAX = *(in_RAX + 0x18)) {\n        uVar2 = *(in_RAX + 0x10);\n        if (*(in_RAX + 8) != 0) {\n            iVar1 = fcn.00409fa0(uVar2);\n            if (iVar1 == 0) {\n                iVar1 = fcn.00409fa0(uVar2);\n                if (iVar1 != 0) {\n                    (**(iVar1 + 0x18))();\n                    uVar2 = fcn.00409da0();\n                    *(in_RAX + 8) = 0x4b4740;\n                    if (*0x5d3dd0 == 0) {\n                        *(in_RAX + 0x10) = uVar2;\n                    }\n                    else {\n                        fcn.0045c5a0(0x4b4740, in_RAX, param_3, param_4);\n                    }\n                }\n            }\n            else {\n                (**(iVar1 + 0x18))();\n                uVar2 = fcn.00409da0();\n                *(in_RAX + 8) = 0x4b4740;\n                if (*0x5d3dd0 == 0) {\n                    *(in_RAX + 0x10) = uVar2;\n                }\n                else {\n                    fcn.0045c5a0(0x4b4740, in_RAX, param_3, param_4);\n                }\n            }\n        }\n    }\n    fcn.00431ee0();\n    return;\n}\n",
        "token_count": 462
    },
    "004320a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004320a0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((*(in_RAX + 0x18) != 0) && (fcn.004320a0(),  *(*(in_RAX + 0x18) + 0x32) == '\\0')) {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.004348c0();\n    }\n    if (*(in_RAX + 0x32) != '\\0') {\n        return;\n    }\n    fcn.00434840();\n    fcn.00435140();\n    fcn.004348c0();\n    fcn.00407b20(*(in_RAX + 8));\n    if (*(in_RAX + 0x30) != '\\0') {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.004348c0();\n    }\n    fcn.00434840();\n    fcn.00434aa0();\n    fcn.004348c0();\n    return;\n}\n",
        "token_count": 290
    },
    "00432540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00432540(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t *noname_1_00;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    int64_t unaff_R14;\n    \ncode_r0x00432540:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x40;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        noname_1_00 = *(unaff_RBX + 0x30);\n        iVar7 = 0;\n        uVar9 = 0;\n        do {\n            uVar1 = *noname_1_00;\n            noname_1_00 = noname_1_00 + 1;\n            if (uVar1 < 0x80) {\n                if (uVar9 < 0) goto code_r0x004327ea;\n                uVar8 = (uVar1 << (uVar9 & 0x1f) & -(uVar9 < 0x20)) + iVar7;\n                uVar3 = uVar8;\n                iVar7 = 0;\n                uVar9 = 0;\n                goto code_r0x004325c4;\n            }\n            if (uVar9 < 0) goto code_r0x00432805;\n            iVar7 = ((uVar1 & 0xffffff7f) << (uVar9 & 0x1f) & -(uVar9 < 0x20)) + iVar7;\n            uVar9 = uVar9 + 7;\n        } while (uVar9 < 0x1d);\n        goto code_r0x004327ef;\n    }\n    goto code_r0x0043280b;\n    while( true ) {\n        if (uVar9 < 0) goto code_r0x004327e5;\n        iVar7 = ((uVar1 & 0xffffff7f) << (uVar9 & 0x1f) & -(uVar9 < 0x20)) + iVar7;\n        uVar9 = uVar9 + 7;\n        if (0x1c < uVar9) break;\ncode_r0x004325c4:\n        uVar1 = *noname_1_00;\n        noname_1_00 = noname_1_00 + 1;\n        if (uVar1 < 0x80) {\n            if (uVar9 < 0) goto code_r0x004327cc;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x2c) = uVar8;\n            uVar8 = *(*(unaff_RBX + 0x38) - uVar3);\n            uVar9 = (uVar1 << (uVar9 & 0x1f) & -(uVar9 < 0x20)) + iVar7;\n            goto code_r0x00432635;\n        }\n    }\ncode_r0x004327d1:\n    *(*0x20 + -0x48) = 0x4327e5;\n    fcn.00432920();\ncode_r0x004327e5:\n    *(*0x20 + -0x48) = 0x4327ea;\n    fcn.004316c0();\ncode_r0x004327ea:\n    *(*0x20 + -0x48) = 0x4327ef;\n    fcn.004316c0();\ncode_r0x004327ef:\n    unaff_RBX = 0x4f9e68;\n    *(*0x20 + -0x48) = 0x432805;\n    fcn.00432920();\ncode_r0x00432805:\n    *(*0x20 + -0x48) = 0x43280a;\n    in_RAX = fcn.004316c0();\ncode_r0x0043280b:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + -8) = 0x43281a;\n    fcn.0045a360();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    *0x20 = puVar6;\n    goto code_r0x00432540;\ncode_r0x004327af:\n    *(*0x20 + -0x48) = 0x4327b4;\n    fcn.004316c0();\ncode_r0x004327b4:\n    *(*0x20 + -0x48) = 0x4327c7;\n    fcn.00432920();\ncode_r0x004327c7:\n    *(*0x20 + -0x48) = 0x4327cc;\n    fcn.004316c0();\ncode_r0x004327cc:\n    *(*0x20 + -0x48) = 0x4327d1;\n    fcn.004316c0();\n    goto code_r0x004327d1;\ncode_r0x00432635:\n    do {\n        uVar9 = uVar9 - 1;\n        if (uVar9 < 0) {\n            return 1;\n        }\n        iVar7 = 0;\n        uVar4 = 0;\n        while( true ) {\n            uVar1 = *noname_1_00;\n            noname_1_00 = noname_1_00 + 1;\n            if (uVar1 < 0x80) break;\n            if (uVar4 < 0) goto code_r0x004327c7;\n            iVar7 = ((uVar1 & 0xffffff7f) << (uVar4 & 0x1f) & -(uVar4 < 0x20)) + iVar7;\n            uVar4 = uVar4 + 7;\n            if (0x1c < uVar4) goto code_r0x004327b4;\n        }\n        if (uVar4 < 0) goto code_r0x004327af;\n        uVar10 = 1 << (uVar9 & 0x1f) & -(uVar9 < 0x20);\n    } while ((uVar10 & uVar8) == 0);\n    *(*0x20 + -0x28) = uVar9;\n    *(*0x20 + -0x18) = noname_1_00;\n    uVar2 = *(*(unaff_RBX + 0x38) - ((uVar1 << (uVar4 & 0x1f) & -(uVar4 < 0x20)) + iVar7));\n    *(*0x20 + -0x10) = unaff_RBX + 0x18;\n    uVar4 = uVar8 & ~uVar10;\n    if (*0x5d3dd0 == 0) {\n        *(unaff_RBX + 0x18) = uVar2;\n    }\n    else {\n        *(*0x20 + -0x48) = 0x4326bc;\n        fcn.0045c6a0();\n    }\n    *(*0x20 + -0x2d) = uVar4;\n    *(*(unaff_RBX + 0x38) - uVar3) = uVar4;\n    *(*0x20 + -0x20) = *(unaff_RBX + 0x20);\n    uVar2 = *(unaff_RBX + 0x18);\n    *(*0x20 + -0x48) = 0x4326e5;\n    uVar3 = fcn.00432840(uVar2, noname_1_00, uVar9, uVar4);\n    iVar5 = *(*0x20 + -0x20);\n    if ((iVar5 == 0) || (*(iVar5 + 0x31) == '\\0')) {\n        if (*0x5d3dd0 == 0) {\n            iVar5 = *(*0x20 + 0x10);\n            *(iVar5 + 0x18) = 0;\n        }\n        else {\n            *(*0x20 + -0x48) = 0x43271d;\n            uVar3 = fcn.0045c6c0(iVar5, 0, uVar9, uVar4);\n            iVar5 = *(*0x20 + 0x10);\n        }\n        if ((*(iVar5 + 0x20) == 0) || (*(*(iVar5 + 0x20) + 0x30) == '\\0')) {\n            noname_1_00 = *(*0x20 + -0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            uVar3 = *(*0x20 + -0x2c);\n            uVar9 = *(*0x20 + -0x28);\n            uVar8 = *(*0x20 + -0x2d);\n            goto code_r0x00432635;\n        }\n        uVar9 = uVar3 & 0xffffffffffffff00 | *(*0x20 + -0x2d) == '\\0';\n    }\n    else {\n        uVar9 = 1;\n    }\n    return uVar9;\n}\n",
        "token_count": 2199
    },
    "00432840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432840(ulong *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong *arg1_00;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    ulong *puStackX8;\n    code **ppcStackX16;\n    \n    puStackX8 = in_RAX;\n    ppcStackX16 = unaff_RBX;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    arg1_00 = arg1;\n    if (puStackX8 != NULL) {\n        uVar1 = fcn.00433040();\n        arg1_00 = puStackX8;\n        if (*0x5d3dd0 == 0) {\n            *puStackX8 = uVar1;\n        }\n        else {\n            fcn.0045c5a0(arg1, noname_1, arg3, arg4);\n        }\n        arg1_00[4] = in_stack_00000000;\n        if (*0x5d3dd0 == 0) {\n            arg1_00[5] = &puStackX8;\n        }\n        else {\n            fcn.0045c5a0(arg1_00, noname_1, arg3, arg4);\n        }\n    }\n    (**ppcStackX16)();\n    if (puStackX8 != NULL) {\n        puStackX8[4] = 0;\n        if (*0x5d3dd0 == 0) {\n            puStackX8[5] = 0;\n        }\n        else {\n            fcn.0045c5a0(arg1_00, ppcStackX16, arg3, arg4);\n        }\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "00432920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432920(ulong param_1, ulong param_2, ulong param_3, char *param_4)\n\n{\n    code *pcVar1;\n    ulong noname_1;\n    char cVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint64_t arg2;\n    uint64_t arg2_00;\n    uint64_t uVar7;\n    int64_t iVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    char *pcVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar3 = *(unaff_R14 + 0x30);\n            if (*(iVar3 + 0x90) == unaff_R14) {\n                if (*(iVar3 + 0xc0) == 0) {\n                    *(*0x20 + -0x48) = unaff_R14;\n                    if (*(iVar3 + 0xd0) == 0) {\n                        if (*(iVar3 + 0xd8) == 0) {\n                            *(*0x20 + -0x40) = in_XMM15;\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            *(*0x20 + -0x38) = in_RAX;\n                            *(*0x20 + -0x30) = unaff_RBX;\n                            *(*0x20 + -0x28) = *(unaff_R14 + 0x20);\n                            *(*0x20 + -0x50) = unaff_R14 + 0x20;\n                            if (*0x5d3dd0 == 0) {\n                                *(unaff_R14 + 0x20) = *0x20 + -0x40;\n                            }\n                            else {\n                                *(*0x20 + -0xc0) = 0x4329fe;\n                                fcn.0045c6c0(param_1, *0x20 + -0x40, param_3, param_4);\n                            }\n                            LOCK();\n                            arg2 = *0x5d3b90;\n                            *(*0x20 + -0xc0) = 0x432a26;\n                            *0x5d3b90 = *0x5d3b90 + 1;\n                            fcn.004321a0(*0x20 + 8);\ncode_r0x00432a26:\n                            do {\n                                iVar3 = *(*0x20 + -0x48);\n                                pcVar10 = *(iVar3 + 0x28);\n                                if (pcVar10 == NULL) {\n                                    uVar4 = *(iVar3 + 0x20);\n                                    *(*0x20 + -0xc0) = 0x432ca9;\n                                    fcn.00431f40(uVar4);\n                                    *(*0x20 + -0xc0) = 0x432cb7;\n                                    fcn.00433440();\n                                    _pe_dos_header = 0;\n                                    return;\n                                }\n                                arg2_00 = iVar3 + 0x28;\n                                if (*pcVar10 != '\\0') {\n                                    if (*(pcVar10 + 0x20) != 0) {\n                                        *(*(pcVar10 + 0x20) + 0x31) = 1;\n                                    }\n                                    if (*0x5d3dd0 == 0) {\n                                        *(pcVar10 + 0x20) = 0;\n                                        uVar7 = arg2;\n                                        arg2 = arg2_00;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x432a77;\n                                        iVar3 = fcn.0045c700(pcVar10 + 0x20, arg2_00, param_3, param_4);\n                                        uVar7 = arg2_00;\n                                        arg2 = arg2_00;\n                                    }\n                                    arg2_00 = arg2;\n                                    if (pcVar10[2] == '\\0') {\n                                        if (*0x5d3dd0 == 0) {\n                                            *(pcVar10 + 0x18) = 0;\n                                            arg2 = uVar7;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x432aa6;\n                                            iVar3 = fcn.0045c700(pcVar10 + 0x18, arg2, param_3, param_4);\n                                        }\n                                        uVar4 = *(pcVar10 + 0x28);\n                                        if (*0x5d3dd0 == 0) {\n                                            *(iVar3 + 0x28) = uVar4;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x432ac5;\n                                            fcn.0045c6a0();\n                                        }\n                                        *(*0x20 + -0xc0) = 0x432acd;\n                                        fcn.00431a60(uVar4, arg2);\n                                        goto code_r0x00432a26;\n                                    }\n                                }\n                                *pcVar10 = '\\x01';\n                                pcVar6 = pcVar10 + 0x20;\n                                if (*0x5d3dd0 == 0) {\n                                    *(pcVar10 + 0x20) = *0x20 + -0x40;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x432b05;\n                                    fcn.0045c700(pcVar6, arg2_00, param_3, param_4);\n                                }\n                                *(*0x20 + -0x58) = arg2_00;\n                                *(*0x20 + -0x70) = pcVar10;\n                                *(*0x20 + -0x60) = pcVar6;\n                                if (pcVar10[2] == '\\0') {\n                                    *(*0x20 + -0xc0) = 0x432b65;\n                                    uVar4 = fcn.00433040();\n                                    *(*0x20 + -0x40) = uVar4;\n                                    pcVar1 = **(*(*0x20 + -0x70) + 0x18);\n                                    *(*0x20 + -0xc0) = 0x432b78;\n                                    (*pcVar1)();\n                                    arg2 = *(*0x20 + -0x70);\n                                    cVar2 = '\\x01';\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x432b27;\n                                    cVar2 = fcn.00432540(pcVar6, *0x20 + -0x40, param_3, param_4);\n                                    if (cVar2 == '\\0') {\n                                        arg2 = *(*0x20 + -0x70);\n                                    }\n                                    else {\n                                        arg2 = *(*0x20 + -0x70);\n                                        if (*(*(arg2 + 0x20) + 0x30) == '\\0') {\n                                            *(*0x20 + -0x9a) = cVar2;\n                                            *(*0x20 + -0xc0) = 0x432b4c;\n                                            fcn.004321a0(0);\n                                            cVar2 = *(*0x20 + -0x9a);\n                                            arg2 = *(*0x20 + -0x70);\n                                        }\n                                    }\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                iVar3 = *(*0x20 + -0x48);\n                                if (*(iVar3 + 0x28) != arg2) goto code_r0x00432e3e;\n                                if (*0x5d3dd0 == 0) {\n                                    *(arg2 + 0x20) = 0;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x432bb9;\n                                    cVar2 = fcn.0045c700(iVar3, arg2, param_3, param_4);\n                                }\n                                uVar4 = *(arg2 + 0x10);\n                                *(*0x20 + -0x98) = uVar4;\n                                param_3 = *(arg2 + 8);\n                                *(*0x20 + -0x88) = param_3;\n                                if (cVar2 != '\\0') {\n                                    if (*0x5d3dd0 == 0) {\n                                        *(arg2 + 0x18) = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x432bed;\n                                        cVar2 = fcn.0045c6e0(iVar3, arg2, param_3, param_4);\n                                    }\n                                    *(*0x20 + -0x99) = cVar2;\n                                    if (*0x5d3dd0 == 0) {\n                                        *(iVar3 + 0x28) = *(arg2 + 0x28);\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x432c0e;\n                                        fcn.0045c6e0(iVar3, arg2, param_3, param_4);\n                                    }\n                                    *(*0x20 + -0xc0) = 0x432c16;\n                                    fcn.00431a60(iVar3, arg2);\n                                    cVar2 = *(*0x20 + -0x99);\n                                    iVar3 = *(*0x20 + -0x48);\n                                    uVar4 = *(*0x20 + -0x98);\n                                    param_3 = *(*0x20 + -0x88);\n                                }\n                            } while (*(*0x20 + -0x10) == '\\0');\n                            iVar8 = *(*0x20 + -0x28);\n                            if (*0x5d3dd0 == 0) {\n                                *(iVar3 + 0x20) = iVar8;\n                                pcVar10 = *(*0x20 + -0x50);\n                            }\n                            else {\n                                pcVar10 = *(*0x20 + -0x50);\n                                *(*0x20 + -0xc0) = 0x432c5e;\n                                cVar2 = fcn.0045c6c0(iVar3, iVar8, param_3, param_4);\n                            }\n                            if (((iVar8 == 0) || (*(iVar8 + 0x32) == '\\0')) || (*(iVar8 + 0x31) == '\\0')) {\n                                LOCK();\n                                *0x5d3b90 = *0x5d3b90 - 1;\n                                pcVar6 = *(iVar3 + 0x28);\n                                if (cVar2 == '\\0') {\n                                    pcVar5 = pcVar6;\n                                    pcVar6 = *(pcVar6 + 0x28);\n                                }\n                                else {\n                                    pcVar5 = NULL;\n                                }\n                                while ((pcVar6 != NULL && (*pcVar6 == '\\0'))) {\n                                    if (pcVar6[2] == '\\0') {\n                                        pcVar5 = pcVar6;\n                                        pcVar6 = *(pcVar6 + 0x28);\n                                    }\n                                    else {\n                                        *(*0x20 + -0x80) = pcVar5;\n                                        if (pcVar5 == NULL) {\n                                            if (*0x5d3dd0 == 0) {\n                                                *(iVar3 + 0x28) = *(pcVar6 + 0x28);\n                                                param_4 = *(*0x20 + -0x50);\n                                            }\n                                            else {\n                                                *(*0x20 + -0xc0) = 0x432d54;\n                                                fcn.0045c6e0(iVar3, pcVar6, param_3, pcVar10);\n                                                param_4 = pcVar10;\n                                            }\n                                        }\n                                        else if (*0x5d3dd0 == 0) {\n                                            *(pcVar5 + 0x28) = *(pcVar6 + 0x28);\n                                        }\n                                        else {\n                                            param_4 = pcVar5 + 0x28;\n                                            *(*0x20 + -0xc0) = 0x432d25;\n                                            fcn.0045c6e0(iVar3, pcVar6, param_3, param_4);\n                                        }\n                                        uVar4 = *(pcVar6 + 0x28);\n                                        *(*0x20 + -0x78) = uVar4;\n                                        *(*0x20 + -0xc0) = 0x432d65;\n                                        fcn.00431a60(uVar4, pcVar6);\n                                        iVar3 = *(*0x20 + -0x48);\n                                        uVar4 = *(*0x20 + -0x98);\n                                        pcVar10 = *(*0x20 + -0x50);\n                                        param_3 = *(*0x20 + -0x88);\n                                        pcVar6 = *(*0x20 + -0x78);\n                                        pcVar5 = *(*0x20 + -0x80);\n                                    }\n                                }\n                                if (*0x5d3dd0 == 0) {\n                                    *(iVar3 + 0x20) = *(*0x20 + -0x28);\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x432da5;\n                                    fcn.0045c6c0(iVar3, *(*0x20 + -0x28), param_3, param_4);\n                                }\n                                while( true ) {\n                                    iVar8 = *(iVar3 + 0x20);\n                                    if (iVar8 == 0) goto code_r0x00432dff;\n                                    if (*(iVar8 + 0x31) == '\\0') break;\n                                    noname_1 = *(iVar8 + 0x18);\n                                    if (*0x5d3dd0 == 0) {\n                                        *(iVar3 + 0x20) = noname_1;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x432dcd;\n                                        fcn.0045c6c0(iVar3, noname_1, param_3, param_4);\n                                    }\n                                }\n                                if (iVar8 == 0) goto code_r0x00432dff;\n                                do {\n                                    *(iVar3 + 0x110) = param_3;\n                                    *(iVar3 + 0x118) = uVar4;\n                                    *(*0x20 + -0xc0) = 0x432dee;\n                                    fcn.0045a1a0();\n                                    *(*0x20 + -0xc0) = 0x432dff;\n                                    fcn.004330a0();\ncode_r0x00432dff:\n                                    *(iVar3 + 0xf0) = 0;\n                                } while( true );\n                            }\n                            *(iVar3 + 0x110) = *(iVar8 + 0x28);\n                            *(iVar3 + 0x118) = *(iVar8 + 0x20);\n                            *(*0x20 + -0xc0) = 0x432e2d;\n                            fcn.0045a1a0();\n                            *(*0x20 + -0xc0) = 0x432e3e;\n                            fcn.004330a0();\ncode_r0x00432e3e:\n                            *(*0x20 + -0xc0) = 0x432e4f;\n                            fcn.004330a0();\n                        }\n                        *(*0x20 + -0xc0) = 0x432e54;\n                        fcn.00434840();\n                        *(*0x20 + -0xc0) = 0x432e65;\n                        fcn.00435140();\n                        *(*0x20 + -0xc0) = 0x432e6a;\n                        fcn.004348c0();\n                        *(*0x20 + -0xc0) = 0x432e7f;\n                        fcn.00407b20();\n                        *(*0x20 + -0xc0) = 0x432e85;\n                        fcn.00434840();\n                        *(*0x20 + -0xc0) = 0x432e8a;\n                        fcn.00434aa0();\n                        *(*0x20 + -0xc0) = 0x432e8f;\n                        fcn.004348c0();\n                        *(*0x20 + -0xc0) = 0x432ea5;\n                        fcn.004330a0();\n                    }\n                    *(*0x20 + -0xc0) = 0x432eaa;\n                    fcn.00434840();\n                    *(*0x20 + -0xc0) = 0x432ebb;\n                    fcn.00435140();\n                    *(*0x20 + -0xc0) = 0x432ec5;\n                    fcn.004348c0();\n                    *(*0x20 + -0xc0) = 0x432eda;\n                    fcn.00407b20();\n                    *(*0x20 + -0xc0) = 0x432edf;\n                    fcn.00434840();\n                    *(*0x20 + -0xc0) = 0x432ee5;\n                    fcn.00434aa0();\n                    *(*0x20 + -0xc0) = 0x432eea;\n                    fcn.004348c0();\n                    *(*0x20 + -0xc0) = 0x432eef;\n                    fcn.00434840();\n                    *(*0x20 + -0xc0) = 0x432f05;\n                    fcn.00435140();\n                    *(*0x20 + -0xc0) = 0x432f0a;\n                    fcn.004348c0();\n                    iVar3 = *(*(*0x20 + -0x48) + 0x30);\n                    param_1 = *(iVar3 + 200);\n                    *(*0x20 + -0x68) = param_1;\n                    *(*0x20 + -0x90) = *(iVar3 + 0xd0);\n                    *(*0x20 + -0xc0) = 0x432f30;\n                    fcn.00434840();\n                    *(*0x20 + -0xc0) = 0x432f3f;\n                    fcn.00435140();\n                    *(*0x20 + -0xc0) = 0x432f45;\n                    fcn.004348c0();\n                    *(*0x20 + -0xc0) = 0x432f4a;\n                    fcn.00434840();\n                    *(*0x20 + -0xc0) = 0x432f4f;\n                    fcn.00434aa0();\n                    *(*0x20 + -0xc0) = 0x432f54;\n                    fcn.004348c0();\n                    *(*0x20 + -0xc0) = 0x432f65;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0xc0) = 0x432f6a;\n                fcn.00434840();\n                *(*0x20 + -0xc0) = 0x432f7b;\n                fcn.00435140();\n                *(*0x20 + -0xc0) = 0x432f85;\n                fcn.004348c0();\n                *(*0x20 + -0xc0) = 0x432f9a;\n                fcn.00407b20();\n                *(*0x20 + -0xc0) = 0x432f9f;\n                fcn.00434840();\n                *(*0x20 + -0xc0) = 0x432fa5;\n                fcn.00434aa0();\n                *(*0x20 + -0xc0) = 0x432faa;\n                fcn.004348c0();\n                *(*0x20 + -0xc0) = 0x432fbb;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0xc0) = 0x432fc5;\n            fcn.00434840();\n            *(*0x20 + -0xc0) = 0x432fd6;\n            fcn.00435140();\n            *(*0x20 + -0xc0) = 0x432fdb;\n            fcn.004348c0();\n            *(*0x20 + -0xc0) = 0x432ff0;\n            fcn.00407b20();\n            *(*0x20 + -0xc0) = 0x432ff5;\n            fcn.00434840();\n            *(*0x20 + -0xc0) = 0x432ffa;\n            fcn.00434aa0();\n            *(*0x20 + -0xc0) = 0x432fff;\n            fcn.004348c0();\n            unaff_RBX = 0x15;\n            *(*0x20 + -0xc0) = 0x433010;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + -8) = 0x433025;\n        fcn.0045a360();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 4869
    },
    "00433060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00433060(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    piVar1 = *(unaff_R14 + 0x20);\n    if ((((piVar1 != NULL) && (*(piVar1 + 0x32) == '\\0')) && (*(piVar1 + 6) == '\\0')) && (in_RAX == *piVar1)) {\n        *(piVar1 + 6) = 1;\n        return piVar1[1];\n    }\n    return 0;\n}\n",
        "token_count": 134
    },
    "004330a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004330a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    fcn.0045a220();\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    if (*(iVar1 + 0xc4) == 0) {\n        *(iVar1 + 0xc4) = 1;\n    }\n    fcn.00433300();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 114
    },
    "004335c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004335c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x5ac880 == 0) {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.004348c0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xc0;\n    *piVar1 = *piVar1 + 1;\n    if (*(*(unaff_R14 + 0x30) + 0xd8) < 0) {\n        *(*(unaff_R14 + 0x30) + 0xd8) = 1;\n    }\n    iVar3 = *(unaff_R14 + 0x30);\n    iVar2 = *(iVar3 + 0xdc);\n    if (iVar2 != 0) {\n        if (iVar2 != 1) {\n            if (iVar2 == 2) {\n                *(iVar3 + 0xdc) = 3;\n                fcn.00434840();\n                fcn.00435140();\n                fcn.004348c0();\n                fcn.0042eec0();\n            }\n            fcn.0042eec0();\n            return 0;\n        }\n        *(iVar3 + 0xdc) = 2;\n        fcn.00434840();\n        fcn.00435140();\n        fcn.004348c0();\n        return 0;\n    }\n    *(iVar3 + 0xdc) = 1;\n    iVar2 = *0x5d3b88;\n    LOCK();\n    *0x5d3b88 = *0x5d3b88 + 1;\n    fcn.0040a320(iVar2);\n    if ((0 < *0x5d4010) || (0 < *0x5d400c)) {\n        fcn.00440700();\n    }\n    fcn.00436ec0();\n    return 1;\n}\n",
        "token_count": 499
    },
    "00433740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00433740(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*(in_RAX + 0xf0) != 0) {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434fa0();\n        fcn.004348c0();\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434fa0();\n        fcn.00435140();\n        fcn.00434fa0();\n        fcn.00435140();\n        fcn.00434fa0();\n        fcn.00435140();\n        fcn.004348c0();\n    }\n    uVar4 = *0x564468;\n    if (*(*(unaff_R14 + 0x30) + 0xc4) < 1) {\n        bVar6 = (*0x564468 >> 1 & 1) != 0;\n    }\n    else {\n        bVar6 = true;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    uVar5 = *0x564468 >> 2;\n    if (uVar1 != 0) {\n        uVar5 = uVar1;\n    }\n    if (uVar5 != 0) {\n        iVar2 = (*(in_RAX + 0x30))[0x12];\n        if (**(in_RAX + 0x30) == in_RAX) {\n            if ((1 < uVar5) || (uVar5 = *(unaff_R14 + 0x30),  0 < *(uVar5 + 0xc4))) {\n                fcn.00434840(arg1, uVar5, *0x564468);\n                fcn.00435140();\n                fcn.004348c0();\n                fcn.004531a0(0);\n            }\n        }\n        else {\n            fcn.00434840(arg1, uVar5, *0x564468);\n            fcn.00434aa0();\n            fcn.004348c0();\n            fcn.00453f40();\n            fcn.004531a0(0);\n        }\n        if ((*0x5d3b26 == '\\0') && (iVar2 != in_RAX | bVar6)) {\n            *0x5d3b26 = '\\x01';\n            fcn.00454180();\n        }\n    }\n    fcn.0040a580();\n    LOCK();\n    iVar3 = *0x5d3b88 + -1;\n    bVar6 = *0x5d3b88 != 1;\n    *0x5d3b88 = iVar3;\n    if (bVar6) {\n        fcn.0040a360();\n        fcn.0040a360();\n    }\n    return uVar4 & 1;\n}\n",
        "token_count": 754
    },
    "004339e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004339e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    if ((in_RAX == 0) || (*(iVar1 + 0x90) != in_RAX)) {\n        return 0;\n    }\n    if ((((*(iVar1 + 0xd8) == 0) && (*(iVar1 + 0xc0) == 0)) && (*(iVar1 + 0xc4) == 0)) &&\n       ((*(iVar1 + 0xd0) == 0 && (*(iVar1 + 0xdc) == 0)))) {\n        if (((*(in_RAX + 0x90) & 0xffffefff) == 2) && (*(in_RAX + 0x70) == 0)) {\n            if (*(iVar1 + 0x2b0) != 0) {\n                return 0;\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 243
    },
    "00433a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00433a60(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.0044b1a0();\n    if (uVar1 != 0) {\n        return uVar1 & 0xffffffffffffff00 | *(uVar1 + 0x24) == '\\x01';\n    }\n    return 0;\n}\n",
        "token_count": 84
    },
    "00434000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00434000(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int64_t in_RAX;\n    char unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_BL != '\\0') {\n                return;\n            }\n            *(*0x20 + -0x29) = param_1;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = *(in_RAX + 0x90);\n            if ((uVar1 == 0x1001) || (uVar1 - 0x1003 < 2)) {\n                *(*0x20 + -0x50) = 0x434054;\n                fcn.00436f60(uVar1 & 0xffffefff);\n                if (*(*0x20 + -0x29) != '\\0') {\n                    *(*0x20 + -0x50) = 0x43406e;\n                    fcn.00436ca0(1);\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x24) = *(in_RAX + 0x90);\n            *(*0x20 + -0x20) = *(in_RAX + 0x98);\n            *(*0x20 + -0x50) = 0x4340a5;\n            fcn.00434840();\n            *(*0x20 + -0x50) = 0x4340b6;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x4340c5;\n            fcn.004350c0();\n            *(*0x20 + -0x50) = 0x4340d6;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x4340e5;\n            fcn.00434f40();\n            *(*0x20 + -0x50) = 0x4340f6;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x434105;\n            fcn.00434e40();\n            *(*0x20 + -0x50) = 0x43410a;\n            fcn.00434aa0();\n            *(*0x20 + -0x50) = 0x43410f;\n            fcn.004348c0();\n            uVar2 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar2;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x50) = 0x43412f;\n            fcn.00434840();\n            *(*0x20 + -0x50) = 0x434145;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x43414f;\n            fcn.004350c0();\n            *(*0x20 + -0x50) = 0x434165;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x43416f;\n            fcn.00434f40();\n            *(*0x20 + -0x50) = 0x434185;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x434190;\n            fcn.00434e40();\n            *(*0x20 + -0x50) = 0x434195;\n            fcn.00434aa0();\n            *(*0x20 + -0x50) = 0x43419a;\n            fcn.004348c0();\n            unaff_BL = '\\x13';\n            *(*0x20 + -0x50) = 0x4341ab;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        puVar3[0x11] = param_1;\n        *(puVar3 + -8) = 0x4341be;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        param_1 = puVar3[0x11];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1158
    },
    "0045e700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e700(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    iVar1 = **(in_GS_OFFSET + 0x28);\n    *(iVar1 + 0xb4) = 1;\n    if (*(iVar1 + 0xb2) == '\\0') {\n        fcn.0045a1a0();\n    }\n    else {\n        fcn.0045a1a0();\n    }\n    *(iVar1 + 0xb4) = 0;\n    return;\n}\n",
        "token_count": 122
    },
    "004348c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004348c0(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n    *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n    if (cVar1 == '\\x01') {\n        fcn.0040a580();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00434920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00434920(uint64_t arg1)\n\n{\n    uint64_t arg2;\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x43495d;\n            fcn.004346c0(arg1);\n            if (unaff_R14 == 0) {\ncode_r0x004349fd:\n                *(*0x20 + -0x38) = 0x434a11;\n                fcn.00456e00(*(*0x20 + 0x18));\n                return;\n            }\n            if ((*(unaff_R14 + 0xf8) == 0) || (0 < *(*(unaff_R14 + 0x30) + 0xdc))) goto code_r0x004349fd;\n            iVar1 = *(unaff_R14 + 0x108) - *(unaff_R14 + 0x100);\n            arg1_00 = iVar1;\n            if (*(*0x20 + 0x10) < iVar1) {\n                arg1_00 = *(*0x20 + 0x10);\n            }\n            iVar2 = unaff_R14;\n            if (*(*0x20 + 8) != *(unaff_R14 + 0xf8) + (*(unaff_R14 + 0x100) & -iVar1 >> 0x3f)) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = 0x4349cc;\n                fcn.0045d380(arg1_00);\n                arg1_00 = *(*0x20 + -0x18);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            arg2 = *(iVar2 + 0x108);\n            unaff_RBX = *(iVar2 + 0x100);\n            arg1 = arg1_00 + unaff_RBX;\n            if (arg1 <= arg2) {\n                *(iVar2 + 0x100) = arg1;\n                return;\n            }\n            *(*0x20 + -0x38) = 0x434a2d;\n            in_RAX = fcn.0045cac0(arg1, arg2);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x434a45;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 865
    },
    "004359e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004359e0(uint64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uchar unaff_DIL;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg2 = *(unaff_R14 + 0x30);\n            arg3 = *(arg2 + 0x90);\n            if ((*(arg3 + 0x90) == 2) || (*(arg3 + 0x90) == 0x1002)) {\n                if (*0x5d3dd0 == 0) {\n                    *(arg2 + 0x250) = unaff_RBX;\n                    *(arg2 + 0x248) = in_RAX;\n                }\n                else {\n                    arg4 = arg2 + 0x250;\n                    *(*0x20 + -0x20) = 0x435a5e;\n                    fcn.0045c6e0(param_1, arg2, arg3, arg4);\n                    *(*0x20 + -0x20) = 0x435a6a;\n                    fcn.0045c5a0(param_1, arg2, arg3, arg4);\n                }\n                *(arg3 + 0xb0) = param_1;\n                *(arg2 + 600) = unaff_DIL;\n                *(arg2 + 0x260) = unaff_RSI;\n                iVar2 = *(arg2 + 0xd8);\n                *(arg2 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                *(*0x20 + -0x20) = 0x435ab6;\n                fcn.0045a1a0();\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x435ad2;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        puVar3[0x19] = unaff_DIL;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x435af0;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        unaff_DIL = puVar3[0x19];\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 842
    },
    "00435c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00435c00(ulong param_1, uint64_t param_2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t arg4;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t arg4_00;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar9 = *(unaff_R14 + 0x30);\n    uVar7 = *(iVar9 + 0xa0);\n    uVar8 = uVar7;\n    if (*(uVar7 + 0x9b8) != 0) goto code_r0x00435c65;\n    arg4 = unaff_R14;\n    fcn.0040a360();\n    param_2 = uVar7 + 0x9b0;\n    iStack40 = iVar9;\n    uStack24 = param_2;\n    uStack16 = uVar7;\n    do {\n        while ((uVar8 = *0x580760,  uVar10 = *(uVar7 + 0x9c0) >> 1,  *(uVar7 + 0x9b8) < uVar10 &&\n               (uVar10 = *0x580760,  *0x580760 != 0))) {\n            if (*0x5d3dd0 == 0) {\n                puVar1 = *0x580760 + 8;\n                *0x580760 = *(*0x580760 + 8);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.0045c740(uVar7, param_2, *0x580760);\n                fcn.0045c740(uVar7, param_2, uVar8);\n            }\n            arg4 = *(uVar7 + 0x9b8);\n            iVar9 = *(uVar7 + 0x9b0);\n            iVar4 = iVar9;\n            if (*(uVar7 + 0x9c0) < arg4 + 1U) {\n                uVar10 = uVar8;\n                arg4_00 = arg4;\n                iVar4 = fcn.00444c60(arg4);\n                *(uStack16 + 0x9c0) = arg4;\n                uVar7 = uStack16;\n                param_2 = uStack24;\n                if (*0x5d3dd0 == 0) {\n                    *(uStack16 + 0x9b0) = iVar4;\n                    arg4 = iVar9;\n                }\n                else {\n                    iVar4 = fcn.0045c5a0(arg4, uStack16, uVar10, arg4_00);\n                    arg4 = iVar9;\n                }\n            }\n            *(uVar7 + 0x9b8) = arg4 + 1;\n            if (*0x5d3dd0 == 0) {\n                *(iVar4 + arg4 * 8) = uVar8;\n            }\n            else {\n                fcn.0045c720(uVar7, param_2, uVar8, arg4);\n            }\n        }\n        fcn.0040a580();\n        iVar9 = iStack40;\n        uVar8 = uStack16;\n        if (*(uStack16 + 0x9b8) == 0) {\n            uVar5 = fcn.0040c440();\n            param_2 = *(uStack16 + 0x9b8);\n            uVar7 = *(uStack16 + 0x9b0);\n            uVar6 = uVar7;\n            if (*(uStack16 + 0x9c0) < param_2 + 1) {\n                uVar6 = fcn.00444c60(param_2);\n                *(uStack16 + 0x9c0) = param_2;\n                if (*0x5d3dd0 == 0) {\n                    *(uStack16 + 0x9b0) = uVar6;\n                    param_2 = uVar7;\n                }\n                else {\n                    uVar6 = fcn.0045c5a0(param_2, uStack16, uVar10, arg4);\n                    param_2 = uVar7;\n                }\n            }\n            *(uVar8 + 0x9b8) = param_2 + 1;\n            if (*0x5d3dd0 == 0) {\n                *(uVar6 + param_2 * 8) = uVar5;\n            }\n            else {\n                fcn.0045c5a0(uVar8, param_2, uVar10, arg4);\n            }\n        }\ncode_r0x00435c65:\n        uVar7 = *(uVar8 + 0x9b8);\n        arg4 = *(uVar8 + 0x9b0);\n        uVar10 = uVar7 - 1;\n        if (uVar10 < uVar7) {\n            iVar4 = *(arg4 + -8 + uVar7 * 8);\n            if (*0x5d3dd0 == 0) {\n                *(arg4 + -8 + uVar7 * 8) = 0;\n            }\n            else {\n                arg4 = 0;\n                uVar10 = fcn.0045c740(uVar7, param_2, uVar8);\n            }\n            param_2 = *(uVar8 + 0x9c0);\n            if (uVar10 <= param_2) {\n                *(uVar8 + 0x9b8) = uVar10;\n                if (*(iVar4 + 0x18) == 0) {\n                    iVar3 = *(iVar9 + 0xd8);\n                    *(iVar9 + 0xd8) = iVar3 + -1;\n                    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return iVar4;\n                }\n                uVar10 = fcn.004330a0();\n            }\n            fcn.0045cac0(uVar10, param_2);\n            uVar7 = uVar10;\n        }\n        fcn.0045ca40(uVar7);\n    } while( true );\n}\n",
        "token_count": 1488
    },
    "00435f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00435f00(void)\n\n{\n    uint64_t arg1;\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_00;\n    int64_t arg2;\n    int64_t arg2_00;\n    int64_t arg3;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    \n    if (*(in_RAX + 0x18) == 0) {\n        if (*(in_RAX + 0x34) == '\\0') {\n            if (*(in_RAX + 8) == 0) {\n                if (*(in_RAX + 0x10) == 0) {\n                    if (*(in_RAX + 0x40) == 0) {\n                        if (*(in_RAX + 0x50) == 0) {\n                            if (*(unaff_R14 + 0x88) == 0) {\n                                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                                *piVar1 = *piVar1 + 1;\n                                arg3 = *(unaff_R14 + 0x30);\n                                arg2 = *(arg3 + 0xa0);\n                                if (*(arg2 + 0x9b8) == *(arg2 + 0x9c0)) {\n                                    iVar5 = 0;\n                                    iVar6 = 0;\n                                    iVar7 = arg3;\n                                    iVar4 = arg2;\n                                    while( true ) {\n                                        arg1_01 = *(iVar4 + 0x9b8);\n                                        if (arg1_01 <= *(iVar4 + 0x9c0) >> 1) break;\n                                        arg1 = arg1_01 - 1;\n                                        if (arg1_01 <= arg1) {\ncode_r0x004361b1:\n                                            fcn.0045ca40(arg1_01);\n                                            goto code_r0x004361bc;\n                                        }\n                                        iVar8 = *(*(iVar4 + 0x9b0) + -8 + arg1_01 * 8);\n                                        if (*0x5d3dd0 == 0) {\n                                            *(*(iVar4 + 0x9b0) + -8 + arg1_01 * 8) = 0;\n                                            arg1_00 = iVar5;\n                                            arg2_00 = iVar6;\n                                            iVar5 = iVar8;\n                                        }\n                                        else {\n                                            fcn.0045c6e0(iVar5, iVar6, iVar7, iVar4);\n                                            arg1_00 = iVar5;\n                                            arg2_00 = iVar6;\n                                            iVar5 = iVar8;\n                                        }\n                                        if (*(iVar4 + 0x9c0) < arg1) {\n                                            fcn.0045cac0(arg1, *(iVar4 + 0x9c0));\n                                            goto code_r0x004361b1;\n                                        }\n                                        *(iVar4 + 0x9b8) = arg1;\n                                        iVar6 = iVar5;\n                                        if (arg2_00 != 0) {\n                                            if (*0x5d3dd0 == 0) {\n                                                *(arg1_00 + 8) = iVar5;\n                                                iVar6 = arg2_00;\n                                            }\n                                            else {\n                                                fcn.0045c6e0(arg1_00, arg2_00, iVar7, iVar4);\n                                                iVar6 = arg2_00;\n                                            }\n                                        }\n                                    }\n                                    fcn.0040a360();\n                                    if (*0x5d3dd0 == 0) {\n                                        *(iVar5 + 8) = *0x580760;\n                                        *0x580760 = iVar6;\n                                    }\n                                    else {\n                                        fcn.0045c6c0(iVar5, *0x580760, iVar7, iVar4);\n                                        fcn.0045c6a0(iVar6);\n                                    }\n                                    fcn.0040a580();\n                                }\n                                iVar6 = *(arg2 + 0x9b8);\n                                iVar7 = *(arg2 + 0x9b0);\n                                iVar4 = iVar7;\n                                if (*(arg2 + 0x9c0) < iVar6 + 1U) {\n                                    iVar5 = arg3;\n                                    iVar8 = arg2;\n                                    iVar4 = fcn.00444c60(iVar6);\n                                    *(arg2 + 0x9c0) = iVar6;\n                                    if (*0x5d3dd0 == 0) {\n                                        *(arg2 + 0x9b0) = iVar4;\n                                        iVar6 = iVar7;\n                                    }\n                                    else {\n                                        iVar4 = fcn.0045c5a0(iVar6, arg2, iVar5, iVar8);\n                                        iVar6 = iVar7;\n                                    }\n                                }\n                                *(arg2 + 0x9b8) = iVar6 + 1;\n                                if (*0x5d3dd0 == 0) {\n                                    *(iVar4 + iVar6 * 8) = in_RAX;\n                                }\n                                else {\n                                    fcn.0045c5a0(iVar6, iVar6 + 1, arg3, arg2);\n                                }\n                                iVar2 = *(arg3 + 0xd8);\n                                *(arg3 + 0xd8) = iVar2 + -1;\n                                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                return;\n                            }\ncode_r0x004361bc:\n                            fcn.004330a0();\n                        }\n                        fcn.004330a0();\n                    }\n                    fcn.004330a0();\n                }\n                fcn.004330a0();\n            }\n            fcn.004330a0();\n        }\n        fcn.004330a0();\n    }\n    fcn.004330a0();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1361
    },
    "004363a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004363a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t arg1;\n    uint64_t arg1_00;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x90) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x4363db;\n                fcn.0040a360();\n                uVar2 = *0x57fc70;\n                arg1_00 = *0x57fc78;\n                uVar3 = *0x57fc70;\n                if (*0x57fc80 < *0x57fc78 + 1) {\n                    *(*0x20 + -0x58) = 0x436405;\n                    arg1 = *0x57fc78;\n                    uVar3 = fcn.00444c60(*0x57fc78);\n                    arg1_00 = uVar2;\n                    uVar2 = uVar3;\n                    *0x57fc80 = arg1;\n                    if (*0x5d3dd0 != 0) {\n                        *(*0x20 + -0x58) = 0x43642a;\n                        uVar3 = fcn.0045c5a0(arg1, param_2, param_3, param_4);\n                        uVar2 = *0x57fc70;\n                    }\n                }\n                *0x57fc70 = uVar2;\n                *0x57fc78 = arg1_00 + 1;\n                if (*0x5d3dd0 == 0) {\n                    param_2 = *(*0x20 + 8);\n                    *(uVar3 + arg1_00 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(*0x20 + 8);\n                    *(*0x20 + -0x58) = 0x43645d;\n                    fcn.0045c6c0(arg1_00, param_2, param_3, param_4);\n                }\n                if (*0x57fc78 != 0) {\n                    uVar2 = *0x57ef70;\n                    if ((*0x57ef70 != *0x57fc70) && (uVar2 = *0x57fc70,  *0x5d3dd0 != '\\0')) {\n                        *(*0x20 + -0x10) = *0x57fc70;\n                        *(*0x20 + -0x58) = 0x436494;\n                        fcn.004031e0();\n                        uVar2 = *(*0x20 + -0x10);\n                    }\n                    *0x57ef70 = uVar2;\n                    uVar1 = *0x5d3be8;\n                    *0x5d3be8 = *0x57fc78;\n                    *(*0x20 + -0x58) = 0x4364c5;\n                    fcn.0040a580(uVar1);\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x4364d6;\n                fcn.0045ca40(0);\n            }\n            *(*0x20 + -0x58) = 0x4364e7;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4364f2;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 959
    },
    "00436aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436aa0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t arg2;\n    uint64_t arg2_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (**(unaff_R14 + 0x30) != unaff_R14) {\n        fcn.00453a80(0x20);\n    }\n    fcn.0040a360();\n    if (unaff_RBX < 0) {\n        uVar4 = fcn.00436a40();\n        *(in_RAX + 0xb8) = uVar4;\n    }\n    else {\n        *(in_RAX + 0xb8) = unaff_RBX;\n    }\n    uVar4 = *(in_RAX + 0xb8);\n    arg2 = in_RAX;\n    uVar2 = fcn.0045c4e0();\n    fcn.0045c420(uVar4, arg2);\n    uVar3 = fcn.0045c4e0();\n    if ((uVar2 | uVar3) == 0) {\n        uVar3 = 1;\n    }\n    arg2_00 = uVar2;\n    *(in_RAX + 0xf0) = CONCAT44(uVar3, uVar2);\n    piVar1 = *(in_RAX + 0x50);\n    if (piVar1 != NULL) {\n        arg2_00 = *piVar1 + 0x13a0;\n        piVar1[3] = arg2_00;\n    }\n    if (*0x5d3dd0 == 0) {\n        *(in_RAX + 0x120) = *0x57ef78;\n    }\n    else {\n        fcn.0045c6a0();\n    }\n    if (*0x5d3dd0 != '\\0') {\n        fcn.004031e0();\n    }\n    *0x57ef78 = in_RAX;\n    fcn.0040a580();\n    uVar4 = fcn.0040c440();\n    if (*0x5d3dd0 == 0) {\n        *(in_RAX + 0x110) = uVar4;\n    }\n    else {\n        fcn.0045c5a0(in_RAX, arg2_00, param_3, param_4);\n    }\n    return;\n}\n",
        "token_count": 627
    },
    "00436ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436ca0(uchar param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x31) = param_1;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x585d30 != '\\0') {\n                *(*0x20 + -0x58) = 0x436ccf;\n                fcn.004505e0();\n                in_RAX = *(*0x20 + 8);\n            }\n            uVar2 = *(in_RAX + 0x90);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            uVar5 = *(unaff_R14 + 0x30);\n            if ((uVar2 & 0xffffefff) == 4) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x58) = 0x436d11;\n                fcn.00437400(1);\n                *(*0x20 + -0x58) = 0x436d30;\n                fcn.00441520(*(*0x20 + -0x31));\n                *(*0x20 + -0x58) = 0x436d35;\n                fcn.00439d00();\n                iVar3 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x2c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x58) = 0x436d8c;\n            fcn.00434840();\n            *(*0x20 + -0x58) = 0x436d9d;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x436da7;\n            fcn.004350c0();\n            *(*0x20 + -0x58) = 0x436db8;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x436dc5;\n            fcn.00434f40();\n            *(*0x20 + -0x58) = 0x436dd6;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x436de5;\n            fcn.00434e40();\n            *(*0x20 + -0x58) = 0x436dea;\n            fcn.00434aa0();\n            *(*0x20 + -0x58) = 0x436def;\n            fcn.004348c0();\n            uVar4 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar4;\n            *(*0x20 + -0x30) = uVar4;\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x58) = 0x436e0f;\n            fcn.00434840();\n            *(*0x20 + -0x58) = 0x436e25;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x436e2f;\n            fcn.004350c0();\n            *(*0x20 + -0x58) = 0x436e45;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x436e4f;\n            fcn.00434f40();\n            *(*0x20 + -0x58) = 0x436e65;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x436e70;\n            fcn.00434e40();\n            *(*0x20 + -0x58) = 0x436e75;\n            fcn.00434aa0();\n            *(*0x20 + -0x58) = 0x436e7a;\n            fcn.004348c0();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x58) = 0x436e8b;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = param_1;\n        *(puVar6 + -8) = 0x436e9f;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        param_1 = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1396
    },
    "00437400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.00437400(ulong arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    uint32_t unaff_EBX;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    ulong uStack64;\n    int64_t *piStack40;\n    int64_t iStack32;\n    uchar auStack24 [16];\n    \n    if ((((unaff_EBX >> 0xc & 1) != 0) || ((arg1 >> 0xc & 1) != 0)) || (unaff_EBX == arg1)) {\n        auStack24 = CONCAT412(arg1, CONCAT48(unaff_EBX, 0x4377a0));\n        uStack64 = auStack24;\n        fcn.0045a220();\n    }\n    iVar9 = 0;\n    piVar6 = NULL;\n    while( true ) {\n        LOCK();\n        puVar1 = in_RAX + 0x90;\n        uVar2 = *puVar1;\n        if (unaff_EBX == uVar2) {\n            *puVar1 = arg1;\n            uVar4 = unaff_EBX;\n        }\n        else {\n            uVar4 = *puVar1;\n        }\n        piVar5 = uVar4;\n        if (unaff_EBX == uVar2) break;\n        if ((unaff_EBX == 4) && (*(in_RAX + 0x90) == 1)) {\n            fcn.004330a0();\n            pcVar3 = swi(3);\n            piVar6 = (*pcVar3)();\n            return piVar6;\n        }\n        if (iVar9 == 0) {\n            fcn.0045e320();\n            piVar6 = uStack64 + 0x271;\n        }\n        fcn.0045e320();\n        piStack40 = piVar6;\n        iStack32 = iVar9;\n        if (uStack64 < piVar6) {\n            iVar9 = 0;\n            while ((piVar6 = piStack40,  iVar9 < 10 && (*(in_RAX + 0x90) != unaff_EBX))) {\ncode_r0x0043770d:\n                uStack64 = CONCAT44(uStack64._4_4_, 1);\n                fcn.0045c140();\n                iVar9 = iVar9 + 1;\n            }\n        }\n        else {\n            uStack64 = 0x4d5e58;\n            fcn.0045a220();\n            fcn.0045e320();\n            piVar6 = 0x4d681c;\n        }\n        iVar9 = iStack32 + 1;\n    }\n    if (unaff_EBX == 2) {\n        if ((*(in_RAX + 0xbd) & 7) == 0) {\n            *(in_RAX + 0xbc) = 1;\n        }\n        *(in_RAX + 0xbd) = *(in_RAX + 0xbd) + '\\x01';\n    }\n    if (*(in_RAX + 0xbc) != '\\0') {\n        if (unaff_EBX == 1) {\n            fcn.0045e320();\n            piVar5 = uStack64 - *(in_RAX + 0xc0);\n            *(in_RAX + 200) = *(in_RAX + 200) + piVar5;\n            *(in_RAX + 0xc0) = 0;\n        }\n        if (arg1 == 1) {\n            fcn.0045e320();\n            *(in_RAX + 0xc0) = uStack64;\n            piVar5 = uStack64;\n        }\n        else if (arg1 == 2) {\n            *(in_RAX + 0xbc) = 0;\n            uVar8 = *(in_RAX + 200);\n            if (uVar8 < 0) {\n                LOCK();\n                piVar5 = *0x581e58;\n                *0x581e58 = *0x581e58 + 1;\n            }\n            else {\n                if (uVar8 < 0x10) {\n                    iVar9 = 0;\n                }\n                else {\n                    iVar7 = 0x3f;\n                    if (uVar8 != 0) {\n                        for (; uVar8 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                        }\n                    }\n                    if (uVar8 == 0) {\n                        iVar7 = -1;\n                    }\n                    iVar9 = iVar7 + -3;\n                    if (iVar9 * 0x10 < 0x2d0) {\n                        iVar7 = uVar8 >> ((iVar7 - 4U | ~-(iVar7 - 4U < 0x40)) & 0x3f);\n                        uVar8 = iVar7 + (((iVar7 >> 0x3f) >> 0x3c) + iVar7 >> 4) * -0x10;\n                    }\n                    else {\n                        iVar9 = 0x2c;\n                        uVar8 = 0xf;\n                    }\n                }\n                uVar8 = iVar9 * 0x10 + uVar8;\n                if (0x2cf < uVar8) {\n                    iVar9 = 0x2d0;\n                    fcn.0045ca60(0x2d0);\n                    goto code_r0x0043770d;\n                }\n                piVar5 = uVar8 * 8 + 0x5807d8;\n                LOCK();\n                *piVar5 = *piVar5 + 1;\n            }\n            *(in_RAX + 200) = 0;\n        }\n    }\n    return piVar5;\n}\n",
        "token_count": 1312
    },
    "00437840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00437840(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 2) && (arg1 == 0x1009)) {\n                do {\n                    LOCK();\n                } while (*(in_RAX + 0x90) != 2);\n                *(in_RAX + 0x90) = 0x1009;\n                return 2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x4378a5;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x4378b8;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 404
    },
    "00437960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437960(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t arg2;\n    ulong in_RAX;\n    ulong arg1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    arg1 = 0;\n    fcn.004430a0(0);\n    arg2 = *(unaff_R14 + 0x30);\n    *(arg2 + 0xd0) = unaff_RBX;\n    if (*0x5d3dd0 == 0) {\n        *(arg2 + 200) = in_RAX;\n    }\n    else {\n        fcn.0045c5a0(arg1, arg2, param_3, param_4);\n    }\n    fcn.0045a220();\n    return;\n}\n",
        "token_count": 233
    },
    "00437ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437ae0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t arg1;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0045a220();\n    arg1 = **(in_GS_OFFSET + 0x28);\n    piVar1 = *(arg1 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(arg1 + 0x30);\n    *(iVar3 + 0xd0) = 0;\n    if (*0x5d3dd0 == 0) {\n        *(iVar3 + 200) = 0;\n    }\n    else {\n        fcn.0045c6c0(arg1, 0, param_3, param_4);\n    }\n    fcn.004433e0(0);\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(arg1 + 0xb1) != '\\0')) {\n        *(arg1 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "00437f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00437f00(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar in_AL;\n    ulong uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x00437f00:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x58;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_AL;\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n        if (*0x5d3b78 != 0) {\n            *(*0x20 + -0x60) = 0x437f45;\n            uVar4 = fcn.0042d000();\n            *(*0x20 + -0x28) = uVar4;\n            *(*0x20 + -0x60) = 0x437f54;\n            fcn.0043b580();\n        }\n        *(*0x20 + -0x60) = 0x437f65;\n        fcn.0040a360();\n        if (*0x5d3b84 != 0) {\n            *0x5d3b84 = 0;\n        }\n        *(*0x20 + -0x60) = 0x437f8b;\n        uVar4 = fcn.0043ede0();\n        *(*0x20 + -0x18) = uVar4;\n        *0x580780 = 0;\n        if (*0x580790 != 0) {\n            *0x580790 = 0;\n            *(*0x20 + -0x60) = 0x437fb9;\n            fcn.0040a660();\n        }\n        *(*0x20 + -0x60) = 0x437fc7;\n        fcn.0040a580();\n        iVar5 = *(*0x20 + -0x18);\n        do {\n            if (iVar5 == 0) {\n                *(*0x20 + -0x60) = 0x438035;\n                fcn.0045e320();\n                iVar5 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x30) = *(*0x20 + -0x58);\n                if (*(*0x20 + 8) != '\\0') {\n                    *(*0x20 + -0x60) = 0x438074;\n                    fcn.0044f180(0);\n                }\n                *(*0x20 + -0x60) = 0x438079;\n                fcn.00439d00();\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(iVar5 + 0xb1) != '\\0')) {\n                    *(iVar5 + 0x10) = 0xfffffffffffffade;\n                }\n                return *(*0x20 + -0x30);\n            }\n            iVar3 = *(iVar5 + 0x38);\n            *(*0x20 + -0x10) = *(iVar5 + 8);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x60) = 0x43802d;\n                fcn.00439180(0xffffffffffffffff);\n            }\n            else {\n                *(iVar5 + 0x38) = 0;\n                if (*(iVar3 + 0xa8) != 0) goto code_r0x004380b4;\n                *(iVar3 + 0xa8) = iVar5;\n                *(*0x20 + -0x60) = 0x43801a;\n                fcn.0040a660();\n            }\n            iVar5 = *(*0x20 + -0x10);\n        } while( true );\n    }\n    goto code_r0x004380c6;\ncode_r0x004380b4:\n    *(*0x20 + -0x60) = 0x4380c5;\n    in_AL = fcn.004330a0();\ncode_r0x004380c6:\n    puVar6[8] = in_AL;\n    *(puVar6 + -8) = 0x4380cf;\n    fcn.0045a360();\n    in_AL = puVar6[8];\n    *0x20 = puVar6;\n    goto code_r0x00437f00;\n}\n",
        "token_count": 1130
    },
    "00438280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438280(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x5d3b25 == '\\0') {\n        *0x5d3b25 = '\\x01';\n        fcn.00438dc0();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00438320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438320(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uchar in_AL;\n    int64_t *piVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (iVar4 != 0x5802c0) {\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x30) = 0x43835a;\n                fcn.00430100();\n                if (*(*(*0x20 + -0x18) + 0x50) != 0) {\n                    *(*0x20 + -0x30) = 0x438374;\n                    fcn.00445cc0();\n                    if (*0x5d3dd0 == 0) {\n                        *(*(*0x20 + -0x18) + 0x50) = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x43839c;\n                        fcn.0045c6c0(*(*0x20 + -0x18), 0, param_3, param_4);\n                    }\n                }\n                *(*0x20 + -0x30) = 0x4383a9;\n                fcn.0040a360();\n                iVar4 = *(*0x20 + -0x18);\n                piVar3 = 0x57ef78;\n                while (iVar2 = *piVar3,  iVar2 != 0) {\n                    if (iVar2 == iVar4) {\n                        iVar2 = *(iVar4 + 0x120);\n                        if (*0x5d3dd0 == 0) {\n                            *piVar3 = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x4383ec;\n                            fcn.0045c6c0(iVar4, iVar2, param_3, param_4);\n                        }\n                        uVar1 = *(*0x20 + 8);\n                        if (uVar1 == 0) {\n                            *(iVar4 + 0xec) = 1;\n                            if (*0x5d3dd0 == 0) {\n                                *(iVar4 + 0x270) = *0x580778;\n                                *0x580778 = iVar4;\n                            }\n                            else {\n                                *(*0x20 + -0x30) = 0x43842e;\n                                fcn.0045c6e0(iVar4, uVar1, param_3, param_4);\n                                *(*0x20 + -0x30) = 0x43843a;\n                                fcn.0045c6a0();\n                            }\n                        }\n                        *(*0x20 + -0x30) = 0x438448;\n                        fcn.0040a580();\n                        iVar4 = *0x5d3ca8;\n                        LOCK();\n                        *0x5d3ca8 = *0x5d3ca8 + *(*(*0x20 + -0x18) + 0x100);\n                        *(*0x20 + -0x30) = 0x438465;\n                        fcn.0043f7a0(*(*0x20 + -0x18), iVar4);\n                        *(*0x20 + -0x30) = 0x43846a;\n                        fcn.00439a20();\n                        *(*0x20 + -0x30) = 0x438478;\n                        fcn.0040a360();\n                        *0x5806e0 = *0x5806e0 + 1;\n                        *(*0x20 + -0x30) = 0x438485;\n                        fcn.0043f960();\n                        *(*0x20 + -0x30) = 0x438493;\n                        fcn.0040a580();\n                        *(*0x20 + -0x30) = 0x43849d;\n                        fcn.004301a0();\n                        if (*(*0x20 + 8) != '\\0') {\n                            return;\n                        }\n                        *(*0x20 + -0x30) = 0x4384c5;\n                        fcn.0042fd00(*(*0x20 + -0x18));\n                        return;\n                    }\n                    piVar3 = iVar2 + 0x120;\n                }\n                *(*0x20 + -0x30) = 0x4384e5;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x30) = 0x4384ea;\n            fcn.0043f7a0();\n            *(*0x20 + -0x30) = 0x4384ef;\n            fcn.00439a20();\n            *(*0x20 + -0x30) = 0x4384fd;\n            fcn.0040a360();\n            *0x5806e0 = *0x5806e0 + 1;\n            *(*0x20 + -0x30) = 0x438509;\n            fcn.0043f960();\n            *(*0x20 + -0x30) = 0x438517;\n            fcn.0040a580();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x30) = 0x43852e;\n            fcn.0040a6e0();\n            *(*(*(*0x20 + -0x10) + 0x30) + 0x118) = 0;\n            *(*0x20 + -0x30) = 0x438553;\n            in_AL = fcn.004330a0();\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x43855d;\n        fcn.0045a360();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1474
    },
    "00438580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438580(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    char cVar7;\n    ulong in_RAX;\n    int64_t iVar8;\n    ulong arg1;\n    int64_t iVar9;\n    ulong arg2;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar11 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            arg2 = *(*(*0x20 + -0x28) + 0x30);\n            *(*0x20 + -0x38) = arg2;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x68) = 0x4385d9;\n            fcn.0040a360();\n            if (*0x5807a8 == 0) {\n                *0x5807a8 = *0x5d3b70 + -1;\n                if (*0x5d3dd0 == 0) {\n                    *0x5807a0 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x43861c;\n                    fcn.0045c5a0(arg1, arg2, param_3, param_4);\n                }\n                iVar10 = *0x57fc98;\n                iVar9 = *0x57fc90;\n                iVar8 = *(*0x20 + -0x10);\n                for (iVar12 = 0; iVar12 < iVar10; iVar12 = iVar12 + 1) {\n                    iVar5 = *(iVar9 + iVar12 * 8);\n                    if (iVar8 != iVar5) {\n                        puVar2 = iVar5 + 0x2270;\n                        uVar3 = *puVar2;\n                        *puVar2 = 1;\n                        param_3 = uVar3;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x43865b;\n                fcn.00440440();\n                for (iVar8 = *0x5806f0; iVar8 != 0; iVar8 = *(iVar8 + 8)) {\n                    LOCK();\n                    if (*(iVar8 + 0x2270) == 1) {\n                        *(iVar8 + 0x2270) = 0;\n                        *(*0x20 + -0x18) = iVar8;\n                        pcVar6 = **(*0x20 + 8);\n                        *(*0x20 + -0x68) = 0x43869a;\n                        (*pcVar6)();\n                        *0x5807a8 = *0x5807a8 + -1;\n                        iVar8 = *(*0x20 + -0x18);\n                    }\n                }\n                *(*0x20 + -0x4c) = *0x5807a8;\n                *(*0x20 + -0x68) = 0x4386c5;\n                fcn.0040a580();\n                pcVar6 = **(*0x20 + 8);\n                *(*0x20 + -0x68) = 0x4386d4;\n                (*pcVar6)();\n                *(*0x20 + -0x20) = *0x57fc90;\n                *(*0x20 + -0x40) = *0x57fc98;\n                iVar9 = *0x57fc90;\n                iVar10 = *0x57fc98;\n                for (iVar8 = 0; iVar8 < iVar10; iVar8 = iVar8 + 1) {\n                    iVar12 = *(iVar9 + iVar8 * 8);\n                    if (*(iVar12 + 4) == 2) {\n                        if (*(iVar12 + 0x2270) == 1) {\n                            LOCK();\n                            bVar13 = *(iVar12 + 4) == 2;\n                            if (bVar13) {\n                                *(iVar12 + 4) = 0;\n                            }\n                        }\n                        else {\n                            bVar13 = false;\n                        }\n                    }\n                    else {\n                        bVar13 = false;\n                    }\n                    if (bVar13) {\n                        *(*0x20 + -0x48) = iVar8;\n                        if (*0x585d30 != '\\0') {\n                            *(*0x20 + -0x30) = iVar12;\n                            *(*0x20 + -0x68) = 0x438758;\n                            fcn.004507c0();\n                            *(*0x20 + -0x68) = 0x438765;\n                            fcn.00450040();\n                            iVar12 = *(*0x20 + -0x30);\n                        }\n                        *(iVar12 + 0x14) = *(iVar12 + 0x14) + 1;\n                        *(*0x20 + -0x68) = 0x438775;\n                        fcn.00439a20();\n                        iVar9 = *(*0x20 + -0x20);\n                        iVar10 = *(*0x20 + -0x40);\n                        iVar8 = *(*0x20 + -0x48);\n                    }\n                    param_3 = 0;\n                }\n                if (0 < *(*0x20 + -0x4c)) {\n                    while( true ) {\n                        *(*0x20 + -0x68) = 0x4387ac;\n                        cVar7 = fcn.0040aac0();\n                        if (cVar7 != '\\0') break;\n                        *(*0x20 + -0x68) = 0x43879b;\n                        fcn.00440440();\n                    }\n                    *0x5807b0 = 0;\n                }\n                if (*0x5807a8 == 0) {\n                    iVar8 = 0;\n                    while( true ) {\n                        if (*0x57fc98 <= iVar8) {\n                            *(*0x20 + -0x68) = 0x438805;\n                            fcn.0040a360();\n                            if (*0x5d3dd0 == 0) {\n                                *0x5807a0 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x438829;\n                                fcn.0045c6a0(0);\n                            }\n                            *(*0x20 + -0x68) = 0x438837;\n                            fcn.0040a580();\n                            iVar4 = *(*(*0x20 + -0x38) + 0xd8);\n                            *(*(*0x20 + -0x38) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        if (*(*(*0x57fc90 + iVar8 * 8) + 0x2270) != 0) break;\n                        iVar8 = iVar8 + 1;\n                    }\n                    *(*0x20 + -0x68) = 0x43887e;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x68) = 0x43888f;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x68) = 0x4388a5;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x4388b0;\n        fcn.0045ea60();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1944
    },
    "004388c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004388c0(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    LOCK();\n    puVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x2270;\n    if (*puVar1 != 1) {\n        return *puVar1;\n    }\n    *puVar1 = 0;\n    (***0x5807a0)();\n    fcn.0040a360();\n    iVar3 = *0x5807a8 + -1;\n    bVar4 = *0x5807a8 == 1;\n    *0x5807a8 = iVar3;\n    if (bVar4) {\n        fcn.0040a660();\n    }\n    uVar2 = fcn.0040a580();\n    return uVar2;\n}\n",
        "token_count": 264
    },
    "00438980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00438980(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t arg2;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00442de0();\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg2 = unaff_R14;\n    iVar5 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0xa0) == 0) {\n        fcn.0043f620();\n    }\n    if (*0x580778 != 0) {\n        fcn.0040a360();\n        iStack48 = *0x580778;\n        iVar4 = 0;\n        while (iStack48 != 0) {\n            if (*(iStack48 + 0xec) == 0) {\n                fcn.0045a220();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iStack48 = *(iStack48 + 0x270);\n            }\n            else {\n                arg2 = *(iStack48 + 0x270);\n                if (*0x5d3dd0 == 0) {\n                    *(iStack48 + 0x270) = iVar4;\n                    iVar4 = iStack48;\n                    iStack48 = arg2;\n                }\n                else {\n                    fcn.0045c5a0(iStack48, arg2, in_R8, in_R9);\n                    iVar4 = iStack48;\n                    iStack48 = arg2;\n                }\n            }\n        }\n        if (*0x5d3dd0 != 0) {\n            fcn.0045c5a0(0, arg2, in_R8, in_R9);\n            iVar4 = *0x580778;\n        }\n        *0x580778 = iVar4;\n        fcn.0040a580();\n    }\n    piVar3 = fcn.0040c440();\n    if (*0x5d3dd0 == 0) {\n        piVar3[0x11] = unaff_RBX;\n    }\n    else {\n        piVar3 = fcn.0045c6a0();\n    }\n    fcn.00436aa0();\n    iVar4 = fcn.0043d920();\n    if (*0x5d3dd0 == 0) {\n        *piVar3 = iVar4;\n    }\n    else {\n        iVar4 = fcn.0045c5a0(unaff_RBX, arg2, in_R8, in_R9);\n    }\n    if (*0x5d3dd0 == 0) {\n        *(iVar4 + 0x30) = piVar3;\n    }\n    else {\n        fcn.0045c6a0();\n    }\n    if (in_RAX == *(*(iVar5 + 0x30) + 0xa0)) {\n        fcn.0043f7a0();\n    }\n    iVar2 = *(*(iVar5 + 0x30) + 0xd8);\n    *(*(iVar5 + 0x30) + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    fcn.00442f20();\n    return piVar3;\n}\n",
        "token_count": 900
    },
    "00438e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438e40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar2 = fcn.00438980(0xffffffffffffffff);\n    iVar3 = fcn.0043d920();\n    *(iVar3 + 0x40) = 0x45c561;\n    iVar5 = *(iVar3 + 8) + -0x20;\n    *(iVar3 + 0x38) = iVar5;\n    *(iVar3 + 0x60) = 0;\n    *(iVar3 + 0x48) = iVar3;\n    *(iVar3 + 0x78) = *(iVar3 + 0x40);\n    *(iVar3 + 0x70) = iVar5;\n    uVar4 = *(iVar3 + 0x38);\n    *(iVar3 + 0x80) = uVar4;\n    fcn.00437400(6);\n    iVar5 = iVar2;\n    if (*0x5d3dd0 == 0) {\n        *(iVar3 + 0x30) = iVar2;\n    }\n    else {\n        iVar3 = fcn.0045c6a0();\n    }\n    if (*0x5d3dd0 == 0) {\n        *(iVar5 + 0x90) = iVar3;\n    }\n    else {\n        iVar3 = fcn.0045c5a0(iVar5, uVar4, param_3, param_4);\n    }\n    *(iVar5 + 0x23c) = *(iVar5 + 0x23c) + 1;\n    *(iVar5 + 0x130) = iVar3;\n    *(iVar3 + 0xe8) = iVar5;\n    LOCK();\n    iVar5 = *0x5806a0 + 1;\n    *0x5806a0 = *0x5806a0 + 1;\n    *(iVar3 + 0x98) = iVar5;\n    fcn.004363a0();\n    iVar1 = *0x5806e8;\n    LOCK();\n    *0x5806e8 = *0x5806e8 + 1;\n    uVar4 = fcn.00439080(iVar1);\n    *(iVar2 + 0x128) = uVar4;\n    *0x5d3b50 = *0x5d3b50 + 1;\n    *0x5d3c38 = iVar2;\n    return;\n}\n",
        "token_count": 640
    },
    "00439080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00439120)\n\nuint64_t fcn.00439080(void)\n\n{\n    bool bVar1;\n    char in_AL;\n    uint64_t uVar2;\n    \n    bVar1 = false;\n    while( true ) {\n        while (*0x5d3c38 == 1) {\n            fcn.0045e300();\n        }\n        if ((*0x5d3c38 != 0) || (in_AL != '\\0')) break;\n        if (!bVar1) {\n            LOCK();\n            *0x5d3b54 = *0x5d3b54 + 1;\n        }\n        fcn.0045e220();\n        bVar1 = true;\n    }\n    LOCK();\n    uVar2 = *0x5d3c38;\n    *0x5d3c38 = *0x5d3c38 ^ *0x5d3c38 ^ 1;\n    return uVar2;\n}\n",
        "token_count": 219
    },
    "00439180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439180(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x30) = 0x4391bb;\n            iVar3 = fcn.00438980(arg1);\n            *(iVar3 + 0xa8) = *(*0x20 + 0x10);\n            if (((unaff_R14 == 0) || (arg1 = *(unaff_R14 + 0x30),  arg1 == 0)) ||\n               ((*(*0x20 + -0x10) = iVar3,  *(arg1 + 0x238) == 0 && (*(arg1 + 0xe8) == '\\0')))) {\n                *(*0x20 + -0x30) = 0x4392a6;\n                fcn.00439320();\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x439214;\n            fcn.0040a360();\n            if (*0x5d3ea0 != 0) {\n                iVar3 = *(*0x20 + -0x10);\n                *(iVar3 + 0x128) = *0x5d3e88;\n                *0x5d3e88 = iVar3;\n                if (*0x5d3e90 != '\\0') {\n                    *0x5d3e90 = '\\0';\n                    *(*0x20 + -0x30) = 0x43925d;\n                    fcn.0040a660();\n                }\n                *(*0x20 + -0x30) = 0x43926b;\n                fcn.0040a580();\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            unaff_RBX = 0x2a;\n            *(*0x20 + -0x30) = 0x4392eb;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x439305;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 935
    },
    "00439320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439320(void)\n\n{\n    ulong *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5d3b2d == '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x40) = 0x4393e5;\n                fcn.00442de0();\n                *(*0x20 + -0x40) = 0x4393ef;\n                fcn.0042fba0();\n                *(*0x20 + -0x40) = 0x4393fb;\n                fcn.00442f20();\n                return;\n            }\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            if (*0x57d3f0 != 0) {\n                *(*0x20 + -0x20) = *in_RAX;\n                *(*0x20 + -0x18) = in_RAX + 0xb;\n                *(*0x20 + -0x10) = fcn.0045a160;\n                *(*0x20 + -0x40) = 0x43938f;\n                fcn.00442de0();\n                *(*0x20 + -0x38) = *0x57d3f0;\n                *(*0x20 + -0x30) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x4393a9;\n                fcn.0045c180();\n                *(*0x20 + -0x40) = 0x4393c9;\n                fcn.00442f20();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x439416;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x439425;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 660
    },
    "00439440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439440(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (*0x5d3ea0 != 0) {\n        iVar2 = *(iVar3 + 0xd8);\n        *(iVar3 + 0xd8) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        return;\n    }\n    *0x5d3ea0 = 1;\n    fcn.00439180(0xffffffffffffffff);\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "00439620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439620(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            if (*(iVar1 + 0xd8) == 0) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    if (*(iVar1 + 0xe4) == '\\0') {\n                        *(*0x20 + -0x10) = unaff_R14;\n                        *(*0x20 + -0x30) = 0x439679;\n                        fcn.0040a360();\n                        *(*0x20 + -0x30) = 0x439687;\n                        fcn.00441040();\n                        *(*0x20 + -0x30) = 0x439695;\n                        fcn.0040a580();\n                        *(*0x20 + -0x18) = unaff_R14;\n                        *(*0x20 + -0x30) = 0x4396ad;\n                        fcn.0040a6e0();\n                        *(*(*(*0x20 + -0x18) + 0x30) + 0x118) = 0;\n                        *(*0x20 + -0x30) = 0x4396d6;\n                        fcn.0043f620();\n                        *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x439705;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x30) = 0x439716;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x30) = 0x439727;\n            fcn.004330a0();\n        }\n        *(puVar2 + -8) = 0x43972d;\n        fcn.0045a360();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 565
    },
    "00439760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439760(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    uint32_t uVar7;\n    uchar unaff_BL;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint64_t uVar8;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n            *(*0x20 + -0x48) = 0x4397a5;\n            fcn.0040a360();\n            iVar5 = *(*0x20 + 8);\n            if (iVar5 == 0) {\n                *(*0x20 + -0x48) = 0x4397b4;\n                iVar5 = fcn.00441400();\n                if (iVar5 == 0) {\n                    *(*0x20 + -0x48) = 0x4398c5;\n                    fcn.0040a580();\n                    if (*(*0x20 + 0x10) == '\\0') {\ncode_r0x004398e5:\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    LOCK();\n                    iVar2 = *0x5806fc + -1;\n                    uVar7 = *0x5806fc - 1;\n                    uVar8 = uVar7;\n                    *0x5806fc = iVar2;\n                    if (-1 < uVar7) goto code_r0x004398e5;\n                    *(*0x20 + -0x48) = 0x43992b;\n                    cVar4 = fcn.004330a0();\n                    goto code_r0x0043992b;\n                }\n            }\n            iVar3 = *0x5806c0;\n            if (*0x5806c0 != 0) {\n                *0x5806c0 = *(*0x5806c0 + 0x128);\n                *0x5806c8 = *0x5806c8 + -1;\n            }\n            *(*0x20 + -0x18) = iVar5;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x48) = 0x4397f0;\n                uVar6 = fcn.00436a40();\n                *(*0x20 + -0x28) = uVar6;\n                *(*0x20 + -0x48) = 0x439805;\n                fcn.0040a580();\n                *(*0x20 + -0x48) = 0x43982f;\n                fcn.00439180(*(*0x20 + -0x28));\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x10) = iVar3;\n            *(*0x20 + -0x48) = 0x439878;\n            fcn.0040a580();\n            uVar8 = *(*0x20 + -0x10);\n            if (*(uVar8 + 0xe4) == '\\0') {\n                if (*(uVar8 + 0xa8) == 0) {\n                    cVar4 = *(*0x20 + 0x10);\n                    if (cVar4 == '\\0') {\n                        cVar4 = '\\0';\ncode_r0x0043992b:\n                        *(uVar8 + 0xe4) = cVar4;\n                        *(uVar8 + 0xa8) = *(*0x20 + -0x18);\n                        *(*0x20 + -0x48) = 0x439949;\n                        fcn.0040a660();\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    iVar5 = *(*0x20 + -0x18);\n                    do {\n                    } while (*(iVar5 + 0x194) != *(iVar5 + 0x194));\n                    if ((*(iVar5 + 0x194) == *(iVar5 + 400)) && (*(iVar5 + 0x998) == 0)) goto code_r0x0043992b;\n                    *(*0x20 + -0x48) = 0x4399c7;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x48) = 0x4399d8;\n                fcn.004330a0();\n            }\n            unaff_BL = 0x15;\n            *(*0x20 + -0x48) = 0x4399e9;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        puVar9[0x10] = unaff_BL;\n        *(puVar9 + -8) = 0x4399f8;\n        fcn.0045a360();\n        in_RAX = *(puVar9 + 8);\n        unaff_BL = puVar9[0x10];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1543
    },
    "00439a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439a20(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    do {\n    } while (*(in_RAX + 0x194) != *(in_RAX + 0x194));\n    if (((*(in_RAX + 0x194) != *(in_RAX + 400)) || (*(in_RAX + 0x998) != 0)) || (*0x580710 != 0)) {\n        fcn.00439760();\n        return;\n    }\n    if (*0x5d3b64 != 0) {\n        if ((*(in_RAX + 0x1238) == 0) || ((*(*(in_RAX + 0x1238) + 0x10) == 0 && (*(*(in_RAX + 0x1240) + 0x10) == 0)))) {\n            if (*0x580100 == 0) {\n                if (*0x580188 < *0x58018c) {\n                    bVar5 = true;\n                }\n                else {\n                    bVar5 = false;\n                }\n            }\n            else {\n                bVar5 = true;\n            }\n        }\n        else {\n            bVar5 = true;\n        }\n        if (bVar5) {\n            fcn.00439760();\n            return;\n        }\n    }\n    uVar2 = *0x5806fc + *0x5806f8;\n    if ((*0x5806fc + *0x5806f8 == 0) && (LOCK(),  uVar2 = in_RAX,  *0x5806fc == 0)) {\n        *0x5806fc = 1;\n        fcn.00439760();\n        return;\n    }\n    fcn.0040a360(uVar2);\n    if (*0x580780 != 0) {\n        *(in_RAX + 4) = 3;\n        iVar3 = *0x580784 + -1;\n        bVar5 = *0x580784 == 1;\n        *0x580784 = iVar3;\n        if (bVar5) {\n            fcn.0040a660();\n        }\n        fcn.0040a580();\n        return;\n    }\n    if (*(in_RAX + 0x2270) == 0) {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(in_RAX + 0x2270) == 1;\n        if (bVar5) {\n            *(in_RAX + 0x2270) = 0;\n        }\n    }\n    if (bVar5) {\n        (***0x5807a0)();\n        iVar3 = *0x5807a8 + -1;\n        bVar5 = *0x5807a8 == 1;\n        *0x5807a8 = iVar3;\n        if (bVar5) {\n            fcn.0040a660();\n        }\n    }\n    if (*0x580710 == 0) {\n        if ((*0x5806f8 == *0x5d3b70 + -1) && (*0x5806a8 != 0)) {\n            fcn.0040a580();\n            fcn.00439760();\n            return;\n        }\n        iVar1 = *(in_RAX + 0x1208);\n        iVar4 = *(in_RAX + 0x1210);\n        if ((iVar1 != 0) && ((iVar4 == 0 || (iVar1 <= iVar4)))) {\n            iVar4 = iVar1;\n        }\n        fcn.004412e0();\n        fcn.0040a580();\n        if (iVar4 != 0) {\n            fcn.0043b4a0();\n        }\n        return;\n    }\n    fcn.0040a580();\n    fcn.00439760();\n    return;\n}\n",
        "token_count": 938
    },
    "00439d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439d80(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(unaff_R14 + 0x30);\n            if ((*(iVar2 + 0x130) != 0) && (*(*(iVar2 + 0x130) + 0xe8) == iVar2)) {\n                *(*0x20 + -0x18) = unaff_R14;\n                if (*(iVar2 + 0xa0) != 0) {\n                    *(*0x20 + -0x50) = 0x439dd0;\n                    fcn.0043f7a0();\n                    *(*0x20 + -0x50) = 0x439dd5;\n                    fcn.00439a20();\n                }\n                *(*0x20 + -0x50) = 0x439ddf;\n                fcn.0043f900();\n                *(*0x20 + -0x50) = 0x439de5;\n                fcn.004382c0();\n                uVar1 = *(*(*(*(*0x20 + -0x18) + 0x30) + 0x130) + 0x90);\n                if ((uVar1 & 0xffffefff) == 1) {\n                    *(*0x20 + -0x50) = 0x439e16;\n                    fcn.0043f620();\n                    *(*(*(*0x20 + -0x18) + 0x30) + 0xa8) = 0;\n                    return;\n                }\n                *(*0x20 + -0x2c) = uVar1;\n                *(*0x20 + -0x50) = 0x439e3d;\n                fcn.00434840();\n                *(*0x20 + -0x50) = 0x439e4e;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x439e59;\n                fcn.00434e40();\n                *(*0x20 + -0x50) = 0x439e6a;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x439e6f;\n                fcn.004348c0();\n                iVar2 = *(*(*(*0x20 + -0x18) + 0x30) + 0x130);\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = unaff_R14;\n                *(*0x20 + -0x30) = *(iVar2 + 0x90);\n                *(*0x20 + -0x28) = *(iVar2 + 0x98);\n                *(*0x20 + -0x50) = 0x439ea5;\n                fcn.00434840();\n                *(*0x20 + -0x50) = 0x439eb6;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x439ec5;\n                fcn.004350c0();\n                *(*0x20 + -0x50) = 0x439ed6;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x439ee5;\n                fcn.00434f40();\n                *(*0x20 + -0x50) = 0x439ef6;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x439f05;\n                fcn.00434e40();\n                *(*0x20 + -0x50) = 0x439f0a;\n                fcn.00434aa0();\n                *(*0x20 + -0x50) = 0x439f0f;\n                fcn.004348c0();\n                *(*0x20 + -0x34) = *(*(*0x20 + -0x20) + 0x90);\n                *(*0x20 + -0x28) = *(*(*0x20 + -0x20) + 0x98);\n                *(*0x20 + -0x50) = 0x439f2f;\n                fcn.00434840();\n                *(*0x20 + -0x50) = 0x439f45;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x439f4f;\n                fcn.004350c0();\n                *(*0x20 + -0x50) = 0x439f65;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x439f6f;\n                fcn.00434f40();\n                *(*0x20 + -0x50) = 0x439f85;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x439f90;\n                fcn.00434e40();\n                *(*0x20 + -0x50) = 0x439f95;\n                fcn.00434aa0();\n                *(*0x20 + -0x50) = 0x439f9a;\n                fcn.004348c0();\n                *(*0x20 + -0x50) = 0x439fab;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x50) = 0x439fbc;\n            fcn.004330a0();\n        }\n        *(puVar3 + -8) = 0x439fc5;\n        fcn.0045a360();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1384
    },
    "00439fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439fe0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0xe8);\n            if (*(unaff_R14 + 0x30) != iVar1) {\n                if (*(iVar1 + 0xa8) == 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x28) = 0x43a01f;\n                    fcn.0043f900();\n                    *(*0x20 + -0x28) = 0x43a025;\n                    uVar2 = fcn.0043f7a0();\n                    *(*(*0x20 + -0x10) + 0xa8) = uVar2;\n                    *(*0x20 + -0x28) = 0x43a03e;\n                    fcn.0040a660();\n                    *(*0x20 + -0x28) = 0x43a045;\n                    fcn.00439620();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x43a065;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x28) = 0x43a076;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43a085;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 495
    },
    "0043a0a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a0a0(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x580780 != 0) {\n                if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\ncode_r0x0043a0f0:\n                    *(*0x20 + -0x28) = 0x43a0f5;\n                    uVar2 = fcn.0043f7a0();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x43a108;\n                    fcn.0040a360();\n                    *(*(*0x20 + -0x10) + 4) = 3;\n                    iVar1 = *0x580784 + -1;\n                    bVar5 = *0x580784 == 1;\n                    *0x580784 = iVar1;\n                    if (bVar5) {\n                        *(*0x20 + -0x28) = 0x43a134;\n                        fcn.0040a660();\n                    }\n                    *(*0x20 + -0x28) = 0x43a145;\n                    fcn.0040a580();\n                    *(*0x20 + -0x28) = 0x43a14a;\n                    fcn.00439620();\n                    return;\n                }\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                iVar1 = *0x5806fc + -1;\n                iVar3 = *0x5806fc + -1;\n                *0x5806fc = iVar1;\n                if (-1 < iVar3) goto code_r0x0043a0f0;\n                *(*0x20 + -0x28) = 0x43a165;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x28) = 0x43a176;\n            fcn.004330a0();\n        }\n        *(puVar4 + -8) = 0x43a17c;\n        fcn.0045a360();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 631
    },
    "0043a1a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a1a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int64_t *in_RAX;\n    char unaff_BL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x5d3dd0 == 0) {\n        *(*(unaff_R14 + 0x30) + 0x90) = in_RAX;\n    }\n    else {\n        in_RAX = fcn.0045c5a0(arg1, *(unaff_R14 + 0x30), arg3, arg4);\n    }\n    if (*0x5d3dd0 == 0) {\n        in_RAX[6] = *(unaff_R14 + 0x30);\n    }\n    else {\n        in_RAX = fcn.0045c700(arg1, unaff_R14, arg3, arg4);\n    }\n    fcn.00437400(2);\n    in_RAX[0x15] = 0;\n    *(in_RAX + 0xb1) = 0;\n    in_RAX[2] = *in_RAX + 0x13a0;\n    if (unaff_BL == '\\0') {\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x10;\n        *piVar1 = *piVar1 + 1;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0xe0) != *0x5807b8) {\n        fcn.004308e0();\n    }\n    if (*0x585d30 != '\\0') {\n        if ((in_RAX[0xe] != 0) && (*(in_RAX + 0xbb) != '\\0')) {\n            fcn.00450700();\n        }\n        fcn.004503a0();\n    }\n    fcn.0045a180();\n    return;\n}\n",
        "token_count": 490
    },
    "0043a320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043a558)\n// WARNING: Removing unreachable block (ram,0x0043a55d)\n\nuint64_t fcn.0043a320(void)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    ulong arg3;\n    ulong noname_2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint32_t uVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    int64_t iStack232;\n    uint64_t uStack104;\n    ulong uStack96;\n    uint64_t uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    uint64_t uStack64;\n    uint64_t uStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    \n    while (&uStack104 < *(unaff_R14 + 0x10) || &uStack104 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\ncode_r0x0043a34e:\n    while (uVar2 = *(*(unaff_R14 + 0x30) + 0xa0),  *0x580780 != 0) {\n        fcn.0043a0a0();\n    }\n    if (*(uVar2 + 0x2270) != 0) {\n        fcn.004388c0();\n    }\n    uVar3 = fcn.0043bca0();\n    if (((*0x5d3b28 != '\\0') && (*0x5d3b29 != '\\0')) && (iVar4 = fcn.00415e00(),  iVar4 != 0)) {\n        fcn.00436ca0(1);\n    }\n    iVar4 = **0x5762b0;\n    if (iVar4 != 0) {\n        fcn.0045c180();\n        iStack232 = iVar4;\n    }\n    uVar5 = fcn.00441960();\n    if (uVar5 != 0) {\n        return uVar5;\n    }\n    if (*0x580710 != 0) {\n        fcn.0040a360();\n        uStack56 = fcn.004410a0();\n        fcn.0040a580();\n        if (uStack56 != 0) {\n            return uStack56;\n        }\n    }\n    if (*0x5d3b78 == 0) {\n        bVar12 = false;\n    }\n    else if (*0x5d3b7c == 0) {\n        bVar12 = false;\n    }\n    else {\n        bVar12 = *0x5806a8 != 0;\n    }\n    if ((bVar12) && (uVar5 = fcn.0042d000(),  uVar5 != 0)) {\n        fcn.0043b580();\n        fcn.00437400(1);\n        if (*0x585d30 != '\\0') {\n            fcn.004505e0();\n        }\n        return uVar5;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n        uVar11 = *0x5d3b70 - *0x5806f8;\n        bVar12 = *0x5806fc << 1 < uVar11;\n    }\n    else {\n        bVar12 = true;\n        uVar11 = *0x5d3b70;\n    }\n    uVar5 = uVar11;\n    if (bVar12) goto code_r0x0043a508;\n    uVar5 = 0;\n    goto code_r0x0043a567;\ncode_r0x0043a508:\n    uVar3 = *(unaff_R14 + 0x30);\n    if (*(uVar3 + 0xe4) == '\\0') {\n        *(uVar3 + 0xe4) = 1;\n        LOCK();\n        uVar3 = *0x5806fc;\n        *0x5806fc = *0x5806fc + 1;\n    }\n    uVar9 = fcn.0043adc0();\n    if (uVar9 != 0) {\n        return uVar9;\n    }\n    if (!bVar12) {\n        if (uVar5 == 0) {\n            uVar5 = 0;\n        }\ncode_r0x0043a567:\n        if (*0x5d3b64 == 0) {\n            bVar12 = false;\n        }\n        else if ((*(uVar2 + 0x1238) == 0) || ((*(*(uVar2 + 0x1238) + 0x10) == 0 && (*(*(uVar2 + 0x1240) + 0x10) == 0))))\n        {\n            if (*0x580100 == 0) {\n                if (*0x580188 < *0x58018c) {\n                    bVar12 = true;\n                }\n                else {\n                    bVar12 = false;\n                }\n            }\n            else {\n                bVar12 = true;\n            }\n        }\n        else {\n            bVar12 = true;\n        }\n        uVar9 = uVar2;\n        if (!bVar12) goto code_r0x0043a5ec;\n        while( true ) {\n            if (*0x5d3c68 == 0) {\n                piVar10 = NULL;\n            }\n            else {\n                piVar10 = (*0x5d3c68 >> 0x13) << 3;\n                *0x5d3c68 = *piVar10;\n                LOCK();\n            }\n            if (piVar10 != NULL) {\n                *(uVar9 + 0x1228) = 3;\n                uVar2 = piVar10[2];\n                fcn.00437400(1);\n                if (*0x585d30 != '\\0') {\n                    fcn.004505e0();\n                }\n                return uVar2;\n            }\ncode_r0x0043a5ec:\n            noname_2 = *0x57fd40;\n            arg3 = *0x57fd00;\n            uStack48 = *0x57fc90;\n            uStack104 = *0x57fc98;\n            uStack96 = *0x57fca0;\n            uStack72 = *0x57fcf0;\n            uStack80 = *0x57fd30;\n            uVar9 = *0x57fc98;\n            fcn.0040a360();\n            if ((*0x580780 != 0) || (*(uVar2 + 0x2270) != 0)) break;\n            if (*0x580710 != 0) {\n                uStack64 = fcn.004410a0();\n                fcn.0040a580();\n                return uStack64;\n            }\n            uVar6 = fcn.0043f7a0();\n            if (uVar6 == uVar2) {\n                fcn.004412e0();\n                fcn.0040a580();\n                uVar6 = uStack104;\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe4);\n                uVar7 = uVar5;\n                if (cVar1 == '\\0') {\ncode_r0x0043a7e3:\n                    iVar4 = *0x5806a8;\n                    if (*0x5d3b78 == 0) {\n                        bVar12 = false;\n                    }\n                    else if ((*0x5d3b7c == 0) && (uVar7 == 0)) {\n                        bVar12 = false;\n                    }\n                    else {\n                        *0x5806a8 = 0;\n                        bVar12 = iVar4 != 0;\n                    }\n                    if (!bVar12) {\n                        if ((uVar7 != 0 && *0x5d3b78 != 0) && ((*0x5806b0 == 0 || (uVar7 < *0x5806b0)))) {\n                            fcn.0042cf00();\n                        }\ncode_r0x0043aba0:\n                        fcn.00439620();\n                        goto code_r0x0043a34e;\n                    }\n                    uVar9 = 0x5806b0;\n                    *0x5806b0 = uVar7;\n                    if (*(*(unaff_R14 + 0x30) + 0xa0) == 0) {\n                        if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n                            if ((uVar7 != 0) && (uVar3 == 0)) {\n                                uStack88 = uVar7;\n                                fcn.0045e320();\n                            }\n                            uVar3 = fcn.0042d000(unaff_R14, 0x5806b0);\n                            uVar2 = *0x5806b0;\n                            *0x5806b0 = 0;\n                            fcn.0045e320(uVar2);\n                            iVar4 = *0x5806a8;\n                            *0x5806a8 = iStack232;\n                            if ((*0x5d3c40 == 0) || (uVar3 != 0)) {\n                                fcn.0040a360(iVar4);\n                                iStack40 = fcn.00441400();\n                                fcn.0040a580();\n                                if (iStack40 == 0) {\n                                    fcn.0043b580();\n                                    goto code_r0x0043aba0;\n                                }\n                                fcn.0043f620();\n                                if (uVar3 != 0) {\n                                    fcn.0043b580();\n                                    fcn.00437400(1);\n                                    if (*0x585d30 != '\\0') {\n                                        fcn.004505e0();\n                                    }\n                                    return uVar3;\n                                }\n                                if (cVar1 != '\\0') {\n                                    *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                    LOCK();\n                                    *0x5806fc = *0x5806fc + 1;\n                                }\n                            }\n                            else {\n                                fcn.00439620();\n                            }\n                            goto code_r0x0043a34e;\n                        }\n                        fcn.004330a0();\n                    }\n                    fcn.004330a0();\n                }\n                else {\n                    *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                    LOCK();\n                    uVar11 = *0x5806fc - 1;\n                    uVar8 = *0x5806fc - 1;\n                    uVar9 = uVar8;\n                    *0x5806fc = uVar11;\n                    if (-1 < uVar8) {\n                        iVar4 = fcn.0043b140(uStack96, uVar9, arg3);\n                        if (iVar4 == 0) {\n                            iVar4 = fcn.0043b320();\n                            if (iVar4 != 0) {\n                                iStack40 = iVar4;\n                                fcn.0043f620();\n                                *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                LOCK();\n                                *0x5806fc = *0x5806fc + 1;\n                                *(iStack40 + 0x1228) = 3;\n                                fcn.00437400(1);\n                                if (*0x585d30 != '\\0') {\n                                    fcn.004505e0();\n                                }\n                                return uVar6;\n                            }\n                            uVar7 = fcn.0043b280(uStack96, uVar9, noname_2, uVar5);\n                            goto code_r0x0043a7e3;\n                        }\n                        fcn.0043f620();\n                        *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                        LOCK();\n                        *0x5806fc = *0x5806fc + 1;\n                        goto code_r0x0043a34e;\n                    }\n                }\n                fcn.004330a0();\n            }\n            fcn.004330a0();\n        }\n        fcn.0040a580();\n    }\n    goto code_r0x0043a34e;\n}\n",
        "token_count": 2769
    },
    "0043b320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043b3f9)\n\nint64_t fcn.0043b320(void)\n\n{\n    bool bVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x5d3b64 == 0) {\n        return 0;\n    }\n    if (*0x580100 == 0) {\n        if (*0x580188 < *0x58018c) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.0040a360();\n        iVar2 = fcn.00441400();\n        if (iVar2 == 0) {\n            fcn.0040a580();\n            return 0;\n        }\n        if (*0x5d3b64 != 0) {\n            if (*0x5d3c68 == 0) {\n                piVar3 = NULL;\n            }\n            else {\n                piVar3 = (*0x5d3c68 >> 0x13) << 3;\n                *0x5d3c68 = *piVar3;\n                LOCK();\n            }\n            if (piVar3 == NULL) {\n                fcn.004412e0();\n                fcn.0040a580();\n                return 0;\n            }\n            fcn.0040a580();\n            return iVar2;\n        }\n        fcn.004412e0();\n        fcn.0040a580();\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 417
    },
    "0043b500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043b500(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xe4) != '\\0') {\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                if (-1 < *0x5806fc + -1) {\n                    *(*0x20 + -0x20) = 0x43b545;\n                    *0x5806fc = *0x5806fc + -1;\n                    fcn.00439d00();\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x43b565;\n                *0x5806fc = *0x5806fc + -1;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x20) = 0x43b576;\n            fcn.004330a0();\n        }\n        *(puVar1 + -8) = 0x43b57c;\n        fcn.0045a360();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 370
    },
    "0043b580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.0043b580(void)\n\n{\n    int64_t *in_RAX;\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t arg1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack64;\n    uchar auStack48 [40];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar2 = *in_RAX;\n    if (iVar2 == 0) {\n        return in_RAX;\n    }\n    if (*0x585d30 != '\\0') {\n        for (; iVar2 != 0; iVar2 = *(iVar2 + 0xa0)) {\n            fcn.004505e0();\n        }\n    }\n    arg1 = 0;\n    iStack64 = *in_RAX;\n    iVar2 = iStack64;\n    iVar3 = 0;\n    while (iVar4 = iVar2,  iVar4 != 0) {\n        fcn.00437400(1);\n        arg1 = arg1 + 1;\n        iVar3 = iVar4;\n        iVar2 = *(iVar4 + 0xa0);\n    }\n    *in_RAX = 0;\n    piVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (piVar1 == NULL) {\n        fcn.0040a360();\n        iVar2 = *0x580700;\n        iVar4 = *0x580708;\n        if ((iVar3 != 0) && (*(iVar3 + 0xa0) = 0,  iVar2 = iStack64,  iVar4 = iVar3,  *0x580708 != 0)) {\n            *(*0x580708 + 0xa0) = iStack64;\n            iVar2 = *0x580700;\n        }\n        *0x580708 = iVar4;\n        *0x580700 = iVar2;\n        *0x580710 = *0x580710 + arg1;\n        piVar1 = fcn.0040a580();\n        while ((arg1 != 0 && (*0x5806f8 != 0))) {\n            piVar1 = fcn.00439760();\n            arg1 = arg1 + -1;\n        }\n        return piVar1;\n    }\n    uVar5 = *0x5806f8;\n    iVar2 = 0;\n    auStack48._0_16_ = in_XMM15;\n    while( true ) {\n        iVar3 = iStack64;\n        if ((uVar5 <= iVar2) || (iStack64 == 0)) break;\n        if (iStack64 != 0) {\n            iStack64 = *(iStack64 + 0xa0);\n        }\n        *(iVar3 + 0xa0) = 0;\n        if (auStack48._8_8_ == 0) {\n            auStack48._0_8_ = iVar3;\n        }\n        else {\n            *(auStack48._8_8_ + 0xa0) = iVar3;\n        }\n        auStack48._0_16_ = CONCAT88(iVar3, auStack48._0_8_);\n        iVar2 = iVar2 + 1;\n    }\n    if (0 < iVar2) {\n        fcn.0040a360();\n        if (auStack48._8_8_ != 0) {\n            *(auStack48._8_8_ + 0xa0) = 0;\n            if (*0x580708 == 0) {\n                *0x580700 = auStack48._0_8_;\n            }\n            else {\n                *(*0x580708 + 0xa0) = auStack48._0_8_;\n            }\n            *0x580708 = auStack48._8_8_;\n        }\n        *0x580710 = *0x580710 + iVar2;\n        fcn.0040a580();\n        iVar3 = iVar2;\n        while ((iVar3 != 0 && (*0x5806f8 != 0))) {\n            fcn.00439760();\n            iVar3 = iVar3 + -1;\n        }\n        arg1 = arg1 - iVar2;\n    }\n    if (iStack64 != 0) {\n        piVar1 = fcn.00441820(arg1);\n    }\n    return piVar1;\n}\n",
        "token_count": 1027
    },
    "0043b8a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043b8a0(ulong param_1, uint64_t param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uchar uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar3 = *(unaff_R14 + 0x30);\n            if (*(iVar3 + 0xd8) == 0) {\n                *(*0x20 + -0x20) = unaff_R14;\n                if (*(iVar3 + 0x130) != 0) {\n                    *(*0x20 + -0x48) = 0x43b8dd;\n                    fcn.00439d80();\n                    uVar4 = *(*(*(*0x20 + -0x20) + 0x30) + 0x130);\n                    *(*0x20 + -0x48) = 0x43b8f7;\n                    fcn.0043a1a0(uVar4, param_2, param_3, param_4);\n                }\n                uVar5 = *(*0x20 + -0x20);\n                param_2 = *(uVar5 + 0x30);\n                if (*(param_2 + 0xe8) == '\\0') {\n                    while( true ) {\n                        while( true ) {\n                            iVar3 = *(*(uVar5 + 0x30) + 0xa0);\n                            *(iVar3 + 0x22b0) = 0;\n                            if (*0x580780 == 0) break;\n                            *(*0x20 + -0x48) = 0x43bc3a;\n                            fcn.0043a0a0();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        if (*(iVar3 + 0x2270) != 0) {\n                            *(*0x20 + -0x10) = iVar3;\n                            *(*0x20 + -0x48) = 0x43b94c;\n                            fcn.004388c0();\n                            iVar3 = *(*0x20 + -0x10);\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        param_2 = *(uVar5 + 0x30);\n                        if ((*(param_2 + 0xe4) != '\\0') &&\n                           ((*(iVar3 + 0x998) != 0 || (param_2 = *(iVar3 + 400),  *(iVar3 + 0x194) != *(iVar3 + 400)))))\n                        break;\n                        *(*0x20 + -0x48) = 0x43b993;\n                        fcn.0043bca0();\n                        if ((*0x585d30 == '\\0') && (*0x585d31 == '\\0')) {\n                            iVar3 = 0;\n                            uVar5 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x43b9aa;\n                            iVar3 = fcn.0044f000();\n                            bVar9 = iVar3 == 0;\n                            if (!bVar9) {\n                                *(*0x20 + -0x28) = iVar3;\n                                uVar5 = 0;\n                                *(*0x20 + -0x48) = 0x43b9c5;\n                                fcn.00437400(1);\n                                *(*0x20 + -0x48) = 0x43b9d1;\n                                fcn.004505e0();\n                                iVar3 = *(*0x20 + -0x28);\n                                bVar9 = iVar3 == 0;\n                            }\n                            uVar5 = uVar5 & 0xffffffffffffff00 | !bVar9;\n                        }\n                        uVar7 = 0;\n                        if ((iVar3 == 0) && (*0x5d3b64 != 0)) {\n                            *(*0x20 + -0x2b) = uVar5;\n                            iVar6 = *(*0x20 + -0x20);\n                            uVar7 = *(*(iVar6 + 0x30) + 0xa0);\n                            *(*0x20 + -0x48) = 0x43ba14;\n                            iVar3 = fcn.0041e120();\n                            uVar5 = iVar6 & 0xffffff00 | iVar3 != 0 | *(*0x20 + -0x2b);\n                        }\n                        *(*0x20 + -0x29) = uVar5;\n                        if (iVar3 == 0) {\n                            iVar6 = *(*0x20 + -0x20);\n                            if ((*(*(*(iVar6 + 0x30) + 0xa0) + 0x10) * -0x3ef368eb < 0x4325c54) && (0 < *0x580710)) {\n                                *(*0x20 + -0x48) = 0x43ba69;\n                                fcn.0040a360();\n                                uVar7 = 1;\n                                *(*0x20 + -0x48) = 0x43ba85;\n                                uVar4 = fcn.004410a0();\n                                *(*0x20 + -0x18) = uVar4;\n                                *(*0x20 + -0x48) = 0x43ba98;\n                                fcn.0040a580();\n                                uVar5 = *(*0x20 + -0x29);\n                                iVar6 = *(*0x20 + -0x20);\n                                iVar3 = *(*0x20 + -0x18);\n                            }\n                        }\n                        else {\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        if (iVar3 == 0) {\n                            *(*0x20 + -0x48) = 0x43bac5;\n                            iVar3 = fcn.00441960();\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        else {\n                            uVar7 = 0;\n                        }\n                        if (iVar3 == 0) {\n                            *(*0x20 + -0x48) = 0x43bad9;\n                            iVar3 = fcn.0043a320();\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        *(*0x20 + -0x2a) = uVar7;\n                        *(*0x20 + -0x18) = iVar3;\n                        if (*(*(iVar6 + 0x30) + 0xe4) != '\\0') {\n                            *(*0x20 + -0x48) = 0x43bafe;\n                            fcn.0043b500();\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        if (*0x580718 == '\\0') {\n                            uVar1 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x43bb29;\n                            uVar1 = fcn.004545c0();\n                            uVar1 = uVar1 ^ 1;\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                            iVar3 = *(*0x20 + -0x18);\n                        }\n                        if (uVar1 == 0) {\ncode_r0x0043bbfb:\n                            if (uVar5 != '\\0') {\n                                *(*0x20 + -0x48) = 0x43bc05;\n                                fcn.00439d00();\n                                iVar3 = *(*0x20 + -0x18);\n                                iVar6 = *(*0x20 + -0x20);\n                            }\n                            if (*(iVar3 + 0xe8) == 0) {\n                                *(*0x20 + -0x48) = 0x43bc2b;\n                                fcn.0043a1a0(uVar5, iVar6, param_3, param_4);\n                                return;\n                            }\n                            *(*0x20 + -0x48) = 0x43b913;\n                            fcn.00439fe0();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x43bb59;\n                            fcn.0040a360();\n                            if (*0x580718 == '\\0') {\n                                cVar2 = '\\x01';\n                            }\n                            else {\n                                *(*0x20 + -0x48) = 0x43bb78;\n                                cVar2 = fcn.004545c0();\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0x48) = 0x43bbe7;\n                                fcn.0040a580();\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar5 = *(*0x20 + -0x29);\n                                iVar6 = *(*0x20 + -0x20);\n                                goto code_r0x0043bbfb;\n                            }\n                            iVar3 = *(*0x20 + -0x18);\n                            *(iVar3 + 0xa0) = 0;\n                            iVar6 = iVar3;\n                            if (*0x580728 != 0) {\n                                *(*0x580728 + 0xa0) = iVar3;\n                                iVar6 = *0x580720;\n                            }\n                            *0x580720 = iVar6;\n                            *0x580730 = *0x580730 + 1;\n                            *(*0x20 + -0x48) = 0x43bbcf;\n                            *0x580728 = iVar3;\n                            fcn.0040a580();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x43bc58;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x48) = 0x43bc69;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x48) = 0x43bc7a;\n            fcn.004330a0();\n        }\n        *(puVar8 + -8) = 0x43bc85;\n        fcn.0045a360();\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2458
    },
    "0043bca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043bca0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar1 = *(in_RAX + 0x1208);\n    iVar2 = *(in_RAX + 0x1210);\n    if ((iVar1 != 0) && ((iVar2 == 0 || (iVar1 <= iVar2)))) {\n        iVar2 = iVar1;\n    }\n    if (iVar2 == 0) {\n        return unaff_RBX;\n    }\n    if (unaff_RBX == 0) {\n        fcn.0045e320();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        unaff_RBX = iStack64;\n    }\n    if ((unaff_RBX < iVar2) &&\n       ((in_RAX != *(*(unaff_R14 + 0x30) + 0xa0) || (*(in_RAX + 0x229c) <= *(in_RAX + 0x2298) >> 2)))) {\n        return unaff_RBX;\n    }\n    fcn.0040a360();\n    if (*(in_RAX + 0x2288) != 0) {\n        fcn.0044dd80();\n        do {\n            if (*(in_RAX + 0x2288) == 0) break;\n            iVar1 = fcn.0044e1c0();\n        } while (iVar1 == 0);\n    }\n    if ((in_RAX == *(*(unaff_R14 + 0x30) + 0xa0)) && (*(in_RAX + 0x2288) >> 2 < *(in_RAX + 0x229c))) {\n        fcn.0044e620();\n    }\n    fcn.0040a580();\n    return unaff_RBX;\n}\n",
        "token_count": 493
    },
    "0043c060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043c060(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(*0x20 + -0x38) = 0x43c09f;\n                fcn.00437400(1);\n                *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                *(*0x20 + -0x38) = 0x43c0ce;\n                fcn.0040a360();\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0xa0) = 0;\n                iVar2 = iVar1;\n                if (*0x580708 != 0) {\n                    *(*0x580708 + 0xa0) = iVar1;\n                    iVar2 = *0x580700;\n                }\n                *0x580700 = iVar2;\n                *0x580710 = *0x580710 + 1;\n                *(*0x20 + -0x38) = 0x43c11f;\n                *0x580708 = iVar1;\n                fcn.0040a580();\n                *(*0x20 + -0x38) = 0x43c125;\n                fcn.0043b8a0();\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x1c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = *(in_RAX + 0x98);\n            *(*0x20 + -0x38) = 0x43c150;\n            fcn.00434840();\n            *(*0x20 + -0x38) = 0x43c165;\n            fcn.00435140();\n            *(*0x20 + -0x38) = 0x43c16f;\n            fcn.004350c0();\n            *(*0x20 + -0x38) = 0x43c185;\n            fcn.00435140();\n            *(*0x20 + -0x38) = 0x43c18f;\n            fcn.00434f40();\n            *(*0x20 + -0x38) = 0x43c1a5;\n            fcn.00435140();\n            *(*0x20 + -0x38) = 0x43c1b0;\n            fcn.00434e40();\n            *(*0x20 + -0x38) = 0x43c1b5;\n            fcn.00434aa0();\n            *(*0x20 + -0x38) = 0x43c1ba;\n            fcn.004348c0();\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x18) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x38) = 0x43c1da;\n            fcn.00434840();\n            *(*0x20 + -0x38) = 0x43c1eb;\n            fcn.00435140();\n            *(*0x20 + -0x38) = 0x43c1f5;\n            fcn.004350c0();\n            *(*0x20 + -0x38) = 0x43c206;\n            fcn.00435140();\n            *(*0x20 + -0x38) = 0x43c210;\n            fcn.00434f40();\n            *(*0x20 + -0x38) = 0x43c225;\n            fcn.00435140();\n            *(*0x20 + -0x38) = 0x43c230;\n            fcn.00434e40();\n            *(*0x20 + -0x38) = 0x43c235;\n            fcn.00434aa0();\n            *(*0x20 + -0x38) = 0x43c23a;\n            fcn.004348c0();\n            *(*0x20 + -0x38) = 0x43c24b;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43c256;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1210
    },
    "0043c3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c3c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x585d30 != '\\0') {\n        *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n        fcn.0044f180(0);\n    }\n    fcn.0043c060();\n    return;\n}\n",
        "token_count": 141
    },
    "0043c440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c440(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x585d30 != '\\0') {\n                unaff_RBX = 0;\n                *(*0x20 + -0x48) = 0x43c472;\n                fcn.00450560();\n                in_RAX = *(*0x20 + 8);\n            }\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(in_RAX + 0xb0) = 0x19;\n                if (*(in_RAX + 0xb4) == '\\0') goto code_r0x0043c4be;\n                *(*0x20 + -0x48) = 0x43c4a7;\n                iVar1 = fcn.0044b1a0();\n                if (iVar1 != 0) {\n                    if ((*(iVar1 + 0x25) & 2) == 0) {\ncode_r0x0043c4be:\n                        *(*0x20 + -0x48) = 0x43c4cd;\n                        fcn.00437840(0x1009);\n                        *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                        *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                        *(*0x20 + -0x48) = 0x43c505;\n                        fcn.00436f60(9);\n                        *(*0x20 + -0x48) = 0x43c50a;\n                        fcn.0043b8a0();\n                        return;\n                    }\n                    *(*0x20 + -0x48) = 0x43c519;\n                    uVar2 = fcn.0044b920();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x48) = 0x43c528;\n                    fcn.00434840();\n                    *(*0x20 + -0x48) = 0x43c539;\n                    fcn.00435140();\n                    *(*0x20 + -0x48) = 0x43c548;\n                    fcn.00435140();\n                    *(*0x20 + -0x48) = 0x43c559;\n                    fcn.00435140();\n                    *(*0x20 + -0x48) = 0x43c55e;\n                    fcn.004348c0();\n                    *(*0x20 + -0x48) = 0x43c56f;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x48) = 0x43c585;\n                in_RAX = fcn.004330a0();\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x2c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x48) = 0x43c5a6;\n            fcn.00434840();\n            *(*0x20 + -0x48) = 0x43c5b7;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x43c5c5;\n            fcn.004350c0();\n            *(*0x20 + -0x48) = 0x43c5d6;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x43c5e5;\n            fcn.00434f40();\n            *(*0x20 + -0x48) = 0x43c5f6;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x43c605;\n            fcn.00434e40();\n            *(*0x20 + -0x48) = 0x43c60a;\n            fcn.00434aa0();\n            *(*0x20 + -0x48) = 0x43c60f;\n            fcn.004348c0();\n            *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x48) = 0x43c62f;\n            fcn.00434840();\n            *(*0x20 + -0x48) = 0x43c645;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x43c64f;\n            fcn.004350c0();\n            *(*0x20 + -0x48) = 0x43c665;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x43c66f;\n            fcn.00434f40();\n            *(*0x20 + -0x48) = 0x43c685;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x43c690;\n            fcn.00434e40();\n            *(*0x20 + -0x48) = 0x43c695;\n            fcn.00434aa0();\n            *(*0x20 + -0x48) = 0x43c69a;\n            fcn.004348c0();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x48) = 0x43c6ab;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43c6b6;\n        fcn.0045ea60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1550
    },
    "0043cb20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043cb20(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    if ((**(unaff_R14 + 0x30) != unaff_R14) && ((*(unaff_R14 + 0x30))[10] != unaff_R14)) {\n        *(unaff_R14 + 0x40) = in_RAX;\n        *(unaff_R14 + 0x38) = unaff_RBX;\n        *(unaff_R14 + 0x58) = in_XMM15_Da;\n        *(unaff_R14 + 0x5c) = in_XMM15_Db;\n        *(unaff_R14 + 0x60) = in_XMM15_Dc;\n        *(unaff_R14 + 100) = in_XMM15_Dd;\n        if (*(unaff_R14 + 0x50) != 0) {\n            fcn.00436380();\n        }\n        return;\n    }\n    fcn.004330a0();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 294
    },
    "0043cb80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043cb80(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14 + 0xb7) = 1;\n    fcn.0043cb20();\n    unaff_R14[0xe] = unaff_RBX;\n    unaff_R14[0xf] = in_RAX;\n    fcn.00437400(3);\n    uVar1 = unaff_R14[0xe];\n    if ((uVar1 <= *unaff_R14 && *unaff_R14 != uVar1) || (unaff_R14[1] < uVar1)) {\n        fcn.0045a220();\n    }\n    if (*0x585d30 != '\\0') {\n        fcn.0045a220();\n        fcn.0043cb20();\n    }\n    if (*0x580790 != 0) {\n        fcn.0045a220();\n        fcn.0043cb20();\n    }\n    if (*(*(unaff_R14[6] + 0xa0) + 0x2270) != 0) {\n        fcn.0045a220();\n        fcn.0043cb20();\n    }\n    *(unaff_R14[6] + 0x26c) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    iVar2 = *(unaff_R14[6] + 0xa0);\n    *(iVar2 + 0x38) = 0;\n    *(unaff_R14[6] + 0xb0) = iVar2;\n    *(unaff_R14[6] + 0xa0) = 0;\n    *(iVar2 + 4) = 2;\n    if (*0x580780 != 0) {\n        fcn.0045a220();\n        fcn.0043cb20();\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 549
    },
    "0043d440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043d519)\n\nulong fcn.0043d440(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*0x580784 == 0x7fffffff) {\n        return 0;\n    }\n    if ((in_RAX != 0) && (*(in_RAX + 4) == 2)) {\n        LOCK();\n        if (*(in_RAX + 4) == 2) {\n            *(in_RAX + 4) = 0;\n            fcn.0043f680();\n            fcn.0043d600();\n            return 1;\n        }\n    }\n    if (*0x5806f0 != 0) {\n        fcn.0045a220();\n    }\n    return 0;\n}\n",
        "token_count": 172
    },
    "0043d600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d600(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    \n    if (*(*(*(unaff_R14 + 0x30) + 0xa0) + 0x14) != *(*(unaff_R14 + 0x30) + 0x26c)) {\n        if (*0x585d30 != '\\0') {\n            fcn.0045a220();\n        }\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0043dba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0043dba0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar auVar4 [16];\n    char cVar5;\n    uint8_t uVar6;\n    int64_t in_RAX;\n    int64_t iVar7;\n    ulong uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t iVar13;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                *(*0x20 + -0x28) = unaff_R14;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x18) = arg1;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(*(unaff_R14 + 0x30) + 0xa0);\n                *(*0x20 + -0x50) = 0x43dbfd;\n                iVar7 = fcn.0043e420();\n                if (iVar7 == 0) {\n                    *(*0x20 + -0x50) = 0x43dc0f;\n                    uVar8 = fcn.0043d920();\n                    *(*0x20 + -0x30) = uVar8;\n                    *(*0x20 + -0x50) = 0x43dc25;\n                    fcn.00437400(6);\n                    *(*0x20 + -0x50) = 0x43dc2f;\n                    fcn.004363a0();\n                    iVar7 = *(*0x20 + -0x30);\n                }\n                if (*(iVar7 + 8) != 0) {\n                    if (*(iVar7 + 0x90) == 6) {\n                        *(*0x20 + -0x30) = iVar7;\n                        *(*0x20 + -0x38) = *(iVar7 + 8);\n                        *(*0x20 + -0x20) = iVar7 + 0x38;\n                        *(*0x20 + -0x50) = 0x43dc72;\n                        fcn.0045d0c0();\n                        iVar7 = *(*0x20 + -0x38);\n                        iVar11 = *(*0x20 + -0x30);\n                        *(iVar11 + 0x38) = iVar7 + -0x20;\n                        *(iVar11 + 0x80) = iVar7 + -0x20;\n                        *(iVar11 + 0x40) = 0x45c561;\n                        *(iVar11 + 0x48) = iVar11;\n                        *(*0x20 + -0x50) = 0x43dcaf;\n                        fcn.004477e0(iVar11, iVar11, in_R8, in_R9);\n                        iVar7 = *(*0x20 + -0x30);\n                        *(iVar7 + 0x128) = *(*0x20 + 0x18);\n                        *(*0x20 + -0x50) = 0x43dcca;\n                        uVar8 = fcn.0043df60();\n                        if (*0x5d3dd0 == 0) {\n                            iVar11 = *(*0x20 + -0x30);\n                            *(iVar11 + 0x130) = uVar8;\n                        }\n                        else {\n                            iVar11 = *(*0x20 + -0x30);\n                            *(*0x20 + -0x50) = 0x43dcf3;\n                            fcn.0045c5a0(iVar11, iVar7, in_R8, in_R9);\n                        }\n                        *(iVar11 + 0x138) = **(*0x20 + 8);\n                        *(*0x20 + -0x50) = 0x43dd0c;\n                        cVar5 = fcn.004545c0();\n                        if (cVar5 == '\\0') {\n                            iVar7 = *(*(*(*0x20 + -0x28) + 0x30) + 0x90);\n                            if (iVar7 == 0) {\n                                iVar13 = *(*0x20 + -0x30);\n                            }\n                            else if (*0x5d3dd0 == 0) {\n                                iVar13 = *(*0x20 + -0x30);\n                                *(iVar13 + 0x168) = *(iVar7 + 0x168);\n                            }\n                            else {\n                                iVar13 = *(*0x20 + -0x30);\n                                *(*0x20 + -0x50) = 0x43dd74;\n                                fcn.0045c700(iVar11, *(*0x20 + -0x28), iVar13, in_R9);\n                            }\n                        }\n                        else {\n                            LOCK();\n                            *0x5806e8 = *0x5806e8 + 1;\n                            iVar13 = *(*0x20 + -0x30);\n                        }\n                        uVar9 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                        auVar4 = ZEXT816(uVar9) * ZEXT816(uVar9 ^ 0xe7037ed1a0b428db);\n                        *(*(unaff_R14 + 0x30) + 0xf0) = uVar9;\n                        uVar6 = SUB161(auVar4, 0) ^ SUB161(auVar4 >> 0x40, 0);\n                        *(iVar13 + 0xbd) = uVar6;\n                        if ((uVar6 & 7) == 0) {\n                            *(iVar13 + 0xbc) = 1;\n                        }\n                        *(*0x20 + -0x50) = 0x43ddd3;\n                        fcn.00437400(1);\n                        piVar10 = *(*0x20 + -0x30);\n                        iVar11 = piVar10[1] - *piVar10;\n                        iVar7 = *(*0x20 + -0x18);\n                        if (iVar7 == 0) {\n                            LOCK();\n                            *0x5d4558 = *0x5d4558 + iVar11;\n                        }\n                        else {\n                            iVar3 = *(iVar7 + 0x22a8);\n                            iVar13 = iVar3 + iVar11;\n                            *(iVar7 + 0x22a8) = iVar13;\n                            if (0x3ffe < iVar3 + iVar11 + 0x1fffU) {\n                                LOCK();\n                                *0x5d4558 = *0x5d4558 + iVar13;\n                                *(iVar7 + 0x22a8) = 0;\n                            }\n                        }\n                        iVar11 = *0x5806a0;\n                        if (*(iVar7 + 0x188) == *(iVar7 + 0x180)) {\n                            LOCK();\n                            iVar13 = *0x5806a0 + 1;\n                            *0x5806a0 = *0x5806a0 + 0x10;\n                            *(iVar7 + 0x180) = iVar13;\n                            *(iVar7 + 0x188) = iVar11 + 0x11;\n                        }\n                        piVar10[0x13] = *(iVar7 + 0x180);\n                        *(iVar7 + 0x180) = *(iVar7 + 0x180) + 1;\n                        if (*0x585d30 != '\\0') {\n                            *(*0x20 + -0x50) = 0x43de9a;\n                            fcn.004502c0();\n                            piVar10 = *(*0x20 + -0x30);\n                        }\n                        iVar2 = *(*(*(*0x20 + -0x28) + 0x30) + 0xd8);\n                        *(*(*(*0x20 + -0x28) + 0x30) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return piVar10;\n                    }\n                    *(*0x20 + -0x50) = 0x43dee9;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x50) = 0x43defa;\n                fcn.004330a0();\n            }\n            arg1 = *(unaff_R14 + 0x30);\n            *(arg1 + 0xc4) = 0xffffffff;\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x50) = 0x43df19;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + -8) = 0x43df2e;\n        fcn.0045a360();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1 = *(puVar12 + 0x18);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 2249
    },
    "0043df60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0043df60(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    uchar *puVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    uint64_t noname_1;\n    uchar *unaff_RBP;\n    ulong uVar8;\n    int32_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x350 && *0x20 + -0x350 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x3d0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x5d4014 < 1) || (*(in_RAX + 0x98) == 0)) {\n                return NULL;\n            }\n            *(*0x20 + 8) = in_RAX;\n            puVar6 = *(in_RAX + 0x130);\n            if (puVar6 == NULL) {\n                uVar8 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *puVar6;\n                uVar8 = puVar6[1];\n            }\n            *(*0x20 + -0x378) = uVar8;\n            *(*0x20 + -0x48) = uVar4;\n            iVar9 = uVar8 + 1;\n            if (*0x5d4014 < iVar9) {\n                iVar9 = *0x5d4014;\n            }\n            *(*0x20 + -0x370) = iVar9;\n            *(*0x20 + -0x3d8) = 0x43e005;\n            uVar4 = fcn.00444b80(iVar9);\n            if (*(*0x20 + -0x370) != 0) {\n                *(*0x20 + -0x38) = uVar4;\n                iVar10 = *(*0x20 + -0x370) + -1;\n                noname_1 = -iVar10 >> 0x3f & 0x28;\n                *(*0x20 + -0x3d8) = 0x43e04d;\n                fcn.004113e0(iVar10);\n                *(*0x20 + -0x3e0) = unaff_RBP;\n                *(*0x20 + -0x3d8) = 0x43e06f;\n                fcn.0045cbee();\n                *(*0x20 + -0x3d0) = 0;\n                *(*0x20 + -0x3d8) = 0x43e0a7;\n                uVar4 = fcn.00450a40(0, noname_1, *0x20 + -0x368, 100);\n                *(*0x20 + -0x380) = uVar4;\n                *(*0x20 + -0x3d8) = 0x43e0be;\n                puVar5 = fcn.00444b80(uVar4);\n                iVar10 = *(*0x20 + -0x380);\n                iVar7 = iVar10;\n                if (100 < iVar10) {\n                    iVar7 = 100;\n                }\n                if (puVar5 != *0x20 + -0x368) {\n                    *(*0x20 + -0x40) = puVar5;\n                    *(*0x20 + -0x3d8) = 0x43e0ee;\n                    fcn.0045d380(iVar7 << 3);\n                    puVar5 = *(*0x20 + -0x40);\n                    iVar10 = *(*0x20 + -0x380);\n                }\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x30) = puVar5;\n                *(*0x20 + -0x28) = iVar10;\n                *(*0x20 + -0x20) = iVar10;\n                *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x128);\n                if (*0x5d3dd0 == 0) {\n                    puVar6 = *(*0x20 + -0x38);\n                    *puVar6 = *(*0x20 + -0x30);\n                    uVar1 = *(*0x20 + -0x24);\n                    uVar2 = *(*0x20 + -0x20);\n                    uVar3 = *(*0x20 + -0x1c);\n                    *(puVar6 + 1) = *(*0x20 + -0x28);\n                    *(puVar6 + 0xc) = uVar1;\n                    *(puVar6 + 2) = uVar2;\n                    *(puVar6 + 0x14) = uVar3;\n                    uVar1 = *(*0x20 + -0x14);\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar3 = *(*0x20 + -0xc);\n                    *(puVar6 + 3) = *(*0x20 + -0x18);\n                    *(puVar6 + 0x1c) = uVar1;\n                    *(puVar6 + 4) = uVar2;\n                    *(puVar6 + 0x24) = uVar3;\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43e1a6;\n                    fcn.00411220(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x3d8) = 0x43e1b2;\n                puVar6 = fcn.0040c440();\n                uVar4 = *(*0x20 + -0x370);\n                puVar6[1] = uVar4;\n                puVar6[2] = uVar4;\n                if (*0x5d3dd0 == 0) {\n                    *puVar6 = *(*0x20 + -0x38);\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43e1e5;\n                    puVar6 = fcn.0045c6a0(*(*0x20 + -0x38));\n                }\n                return puVar6;\n            }\n            *(*0x20 + -0x3d8) = 0x43e1ff;\n            in_RAX = fcn.0045cb00(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x43e20a;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1638
    },
    "0043e220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043e220(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar (*unaff_RBX) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX[9] == 6) {\n                if (*(*unaff_RBX + 8) - **unaff_RBX != 0x2000) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + -0x68) = 0x43e274;\n                    fcn.00445cc0();\n                    unaff_RBX = *(*0x20 + 0x10);\n                    *unaff_RBX = in_XMM15;\n                    *unaff_RBX[1] = 0;\n                    in_RAX = *(*0x20 + 8);\n                }\n                *unaff_RBX[10] = *(in_RAX + 0x9a0);\n                *(in_RAX + 0x9a0) = unaff_RBX;\n                iVar2 = *(in_RAX + 0x9a8) + 1;\n                *(in_RAX + 0x9a8) = iVar2;\n                if (0x3f < iVar2) {\n                    *(*0x20 + -0x48) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    iVar2 = 0;\n                    while (0x1f < *(in_RAX + 0x9a8)) {\n                        piVar1 = *(in_RAX + 0x9a0);\n                        if (piVar1 != NULL) {\n                            *(in_RAX + 0x9a0) = piVar1[0x14];\n                        }\n                        *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n                        if (*piVar1 == 0) {\n                            piVar1[0x14] = *(*0x20 + -0x18);\n                            *(*0x20 + -0x18) = piVar1;\n                            if (*(*0x20 + -0x10) == 0) {\n                                *(*0x20 + -0x10) = piVar1;\n                            }\n                        }\n                        else {\n                            piVar1[0x14] = *(*0x20 + -0x48);\n                            *(*0x20 + -0x48) = piVar1;\n                            if (*(*0x20 + -0x40) == 0) {\n                                *(*0x20 + -0x40) = piVar1;\n                            }\n                        }\n                        iVar2 = iVar2 + 1;\n                    }\n                    *(*0x20 + -0x4c) = iVar2;\n                    *(*0x20 + -0x68) = 0x43e365;\n                    fcn.0040a360();\n                    *(*0x20 + -0x28) = *(*0x20 + -0x18);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x18) != 0) {\n                        *(*(*0x20 + -0x10) + 0xa0) = *0x580748;\n                        *0x580748 = *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x38) = *(*0x20 + -0x48);\n                    *(*0x20 + -0x30) = *(*0x20 + -0x40);\n                    if (*(*0x20 + -0x48) != 0) {\n                        *(*(*0x20 + -0x40) + 0xa0) = *0x580740;\n                        *0x580740 = *(*0x20 + -0x38);\n                    }\n                    *0x580750 = *0x580750 + *(*0x20 + -0x4c);\n                    *(*0x20 + -0x68) = 0x43e3e5;\n                    fcn.0040a580();\n                }\n                return;\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x68) = 0x43e3fb;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x43e40b;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1205
    },
    "0043e420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0043e420(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    do {\n        piVar1 = *(in_RAX + 0x9a0);\n        if ((piVar1 != NULL) || ((*0x580740 == 0 && (*0x580748 == 0)))) {\n            if (piVar1 != NULL) {\n                *(in_RAX + 0x9a0) = piVar1[0x14];\n                *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n                if (*piVar1 == 0) {\n                    fcn.0045a220();\n                    piVar1[2] = *piVar1 + 0x13a0;\n                }\n                return piVar1;\n            }\n            return NULL;\n        }\n        fcn.0040a360();\n        while (*(in_RAX + 0x9a8) < 0x20) {\n            if (*0x580740 == 0) {\n                if (*0x580748 == 0) break;\n                iVar2 = *0x580748;\n                *0x580748 = *(*0x580748 + 0xa0);\n            }\n            else {\n                iVar2 = *0x580740;\n                *0x580740 = *(*0x580740 + 0xa0);\n            }\n            *0x580750 = *0x580750 + -1;\n            *(iVar2 + 0xa0) = *(in_RAX + 0x9a0);\n            *(in_RAX + 0x9a0) = iVar2;\n            *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + 1;\n        }\n        fcn.0040a580();\n    } while( true );\n}\n",
        "token_count": 485
    },
    "0043e620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043e620(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack72 [48];\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar2 = 0;\n    auStack72._0_16_ = in_XMM15;\n    auStack24 = in_XMM15;\n    while( true ) {\n        piVar1 = *(in_RAX + 0x9a0);\n        if (piVar1 == NULL) break;\n        if (piVar1 != NULL) {\n            *(in_RAX + 0x9a0) = piVar1[0x14];\n        }\n        *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n        if (*piVar1 == 0) {\n            piVar1[0x14] = auStack24._0_8_;\n            auStack24 = CONCAT88(auStack24._8_8_, piVar1);\n            if (auStack24._8_8_ == 0) {\n                auStack24 = CONCAT88(piVar1, piVar1);\n            }\n        }\n        else {\n            piVar1[0x14] = auStack72._0_8_;\n            auStack72._0_16_ = CONCAT88(auStack72._8_8_, piVar1);\n            if (auStack72._8_8_ == 0) {\n                auStack72._0_16_ = CONCAT88(piVar1, piVar1);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0040a360();\n    if (auStack24._0_8_ != 0) {\n        *(auStack24._8_8_ + 0xa0) = *0x580748;\n        *0x580748 = auStack24._0_8_;\n    }\n    if (auStack72._0_8_ != 0) {\n        *(auStack72._8_8_ + 0xa0) = *0x580740;\n        *0x580740 = auStack72._0_8_;\n    }\n    *0x580750 = *0x580750 + iVar2;\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 590
    },
    "0043e780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043e780(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iVar2;\n    \n    iVar2 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0x23c) == 0) {\n        fcn.0045a220();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    }\n    piVar1 = *(iVar2 + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + -1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if ((*(iVar2 + 0x23c) == 0) && (*(iVar2 + 0x238) == 0)) {\n        *(iVar2 + 0x130) = 0;\n        *(unaff_R14 + 0xe8) = 0;\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "0043e860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043e860(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t arg1;\n    uint *in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint unaff_EBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = unaff_EBX;\n            in_RAX[1] = 3;\n            *(in_RAX + 0x26e) = 0;\n            *(in_RAX + 0x270) = 0x80;\n            if (*0x5d3dd0 == 0) {\n                *(in_RAX + 0x26c) = in_RAX + 0x272;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43e8bc;\n                in_RAX = fcn.0045c6a0();\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(in_RAX + 0x1c) = 0;\n            *(in_RAX + 0x1e) = 0x20;\n            if (*0x5d3dd0 == 0) {\n                *(in_RAX + 0x1a) = in_RAX + 0x20;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43e8f1;\n                in_RAX = fcn.0045c6a0();\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x43e905;\n            fcn.0042c640(in_RAX + 0x498);\n            if (*(*(*0x20 + 8) + 0x40) == 0) {\n                iVar5 = *(*0x20 + 0x10);\n                if (iVar5 != 0) {\n                    *(*0x20 + -0x20) = 0x43e93a;\n                    uVar2 = fcn.004140c0();\n                    *(*(*0x20 + 8) + 0x40) = uVar2;\n                    iVar5 = *(*0x20 + 0x10);\n                    goto code_r0x0043e947;\n                }\n                if (*0x5d3c90 != 0) {\n                    *(*(*0x20 + 8) + 0x40) = *0x5d3c90;\n                    goto code_r0x0043e947;\n                }\n            }\n            else {\n                iVar5 = *(*0x20 + 0x10);\ncode_r0x0043e947:\n                arg1 = *0x57fd38;\n                iVar6 = ((iVar5 >> 0x1f) >> 0x1b) + iVar5 >> 5;\n                uVar4 = iVar5 + iVar6 * -0x20;\n                if (-1 < uVar4) {\n                    uVar4 = 1 << (uVar4 & 0x1f) & -(uVar4 < 0x20);\n                    uVar3 = iVar6;\n                    if (uVar3 < *0x57fd38) {\n                        puVar1 = *0x57fd30 + uVar3 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | uVar4;\n                        if (uVar3 < *0x57fcf8) {\n                            puVar1 = *0x57fcf0 + uVar3 * 4;\n                            LOCK();\n                            *puVar1 = *puVar1 & ~uVar4;\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x43e9bf;\n                        fcn.0045ca40(*0x57fcf8);\n                    }\n                    *(*0x20 + -0x20) = 0x43e9c7;\n                    fcn.0045ca40(arg1);\n                }\n                *(*0x20 + -0x20) = 0x43e9cc;\n                fcn.004316c0();\n            }\n            unaff_EBX = 0xf;\n            *(*0x20 + -0x20) = 0x43e9dd;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_EBX;\n        *(puVar7 + -8) = 0x43e9ec;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_EBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1188
    },
    "0043ea00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ea00(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    while (*(in_RAX + 400) != *(in_RAX + 0x194)) {\n        uVar1 = *(in_RAX + 0x194) - 1;\n        *(in_RAX + 0x194) = uVar1;\n        iVar2 = *(in_RAX + 0x198 + (uVar1 & 0xff) * 8);\n        *(iVar2 + 0xa0) = *0x580700;\n        if (*0x580708 == 0) {\n            *0x580708 = iVar2;\n        }\n        *0x580710 = *0x580710 + 1;\n        *0x580700 = iVar2;\n    }\n    iVar2 = *(in_RAX + 0x998);\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = *0x580700;\n        if (*0x580708 == 0) {\n            *0x580708 = iVar2;\n        }\n        *0x580710 = *0x580710 + 1;\n        *0x580700 = iVar2;\n        *(in_RAX + 0x998) = 0;\n    }\n    if (*(in_RAX + 0x2288) != 0) {\n        fcn.0040a360();\n        fcn.0040a360();\n        fcn.0044db20(*(in_RAX + 0x2288));\n        *(in_RAX + 0x2288) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        iVar2 = in_RAX;\n        if (*0x5d3dd0 == 0) {\n            *(in_RAX + 0x2280) = 0;\n        }\n        else {\n            fcn.0045c6c0(in_RAX, 0, param_3, param_4);\n        }\n        *(iVar2 + 0x2298) = 0;\n        *(iVar2 + 0x1208) = 0;\n        fcn.0040a580();\n        fcn.0040a580();\n    }\n    if (*0x5d3b6c != 0) {\n        fcn.0042c7c0();\n        fcn.00422c80(in_RAX);\n    }\n    fcn.00411520(in_RAX + 0x9c8);\n    *(in_RAX + 0x9b8) = 0;\n    *(in_RAX + 0x9c0) = 0x80;\n    if (*0x5d3dd0 == 0) {\n        *(in_RAX + 0x9b0) = in_RAX + 0x9c8;\n    }\n    else {\n        fcn.0045c6c0(in_RAX, in_RAX + 0x9c8, param_3, param_4);\n    }\n    fcn.00411520();\n    *(in_RAX + 0x70) = 0;\n    *(in_RAX + 0x78) = 0x20;\n    if (*0x5d3dd0 == 0) {\n        *(in_RAX + 0x68) = in_RAX + 0x80;\n    }\n    else {\n        fcn.0045c6c0(in_RAX, in_RAX + 0x80, param_3, param_4);\n    }\n    fcn.0045a220();\n    fcn.00414220(*(in_RAX + 0x40));\n    *(in_RAX + 0x40) = 0;\n    fcn.0043e620();\n    fcn.0044f0c0();\n    *(in_RAX + 0x1218) = 0;\n    *(in_RAX + 4) = 4;\n    return;\n}\n",
        "token_count": 1012
    },
    "0043ede0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ede0(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int32_t in_EAX;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int64_t *piVar15;\n    int64_t *unaff_RBX;\n    int64_t *piVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    uint32_t uVar18;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint64_t arg4;\n    \n    do {\n        puVar17 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar17 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((-1 < *0x5d3b70) && (0 < in_EAX)) {\n                *(*0x20 + -0x68) = *0x5d3b70;\n                *(*0x20 + 8) = in_EAX;\n                if (*0x585d30 != '\\0') {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = in_EAX;\n                    unaff_RBX = 0x1;\n                    unaff_RSI = 0x1;\n                    *(*0x20 + -0xb0) = 0x43ee5c;\n                    fcn.0044f180(*0x20 + -0x38);\n                }\n                *(*0x20 + -0xb0) = 0x43ee65;\n                fcn.0045e320();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar6 = *(*0x20 + -0xa8);\n                if (*0x5807c0 == 0) {\n                    uVar13 = *(*0x20 + -0x68);\n                }\n                else {\n                    uVar13 = *(*0x20 + -0x68);\n                    *0x5807c8 = *0x5807c8 + uVar13 * (iVar6 - *0x5807c0);\n                }\n                uVar14 = *(*0x20 + 8);\n                uVar7 = uVar14;\n                uVar18 = ((uVar14 + 0x1f >> 0x1f) >> 0x1b) + uVar14 + 0x1f >> 5;\n                arg4 = uVar18;\n                *(*0x20 + -100) = uVar18;\n                *0x5807c0 = iVar6;\n                if (*0x57fc98 < uVar14) {\n                    *(*0x20 + -0xb0) = 0x43eef7;\n                    fcn.0040a360();\n                    iVar1 = *(*0x20 + 8);\n                    if (*0x57fca0 < iVar1) {\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0xb0) = 0x43ef3c;\n                        uVar5 = fcn.00444b80(iVar1);\n                        *(*0x20 + -0x10) = uVar5;\n                        uVar5 = *(*0x20 + -0x48);\n                        *(*0x20 + -0xb0) = 0x43ef66;\n                        fcn.004113e0(uVar5);\n                        *0x57fc98 = *(*0x20 + -0x48);\n                        *0x57fca0 = *0x57fc98;\n                        if (*0x5d3dd0 == 0) {\n                            *0x57fc90 = *(*0x20 + -0x10);\n                            piVar16 = *0x57fc98;\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x43efa7;\n                            fcn.0045c700(uVar5, *0x57fc98, uVar7, arg4);\n                            piVar16 = *0x57fc98;\n                        }\ncode_r0x0043efae:\n                        *0x57fc98 = piVar16;\n                        unaff_RSI = *0x57fcf8;\n                        uVar13 = *(*0x20 + -100);\n                        uVar7 = uVar13;\n                        if (*0x57fd00 < uVar13) {\n                            *(*0x20 + -0x50) = uVar13;\n                            *(*0x20 + -0xb0) = 0x43f013;\n                            uVar5 = fcn.00444a20(*0x57fcf8);\n                            unaff_RBX = *(*0x20 + -0x50);\n                            piVar16 = unaff_RBX;\n                            piVar15 = unaff_RBX;\n                            if (*0x5d3dd0 != 0) {\n                                *(*0x20 + -0xb0) = 0x43f045;\n                                piVar16 = *0x57fcf8;\n                                *0x57fcf8 = unaff_RBX;\n                                piVar15 = *0x57fd00;\n                                *0x57fd00 = unaff_RBX;\n                                fcn.0045c5a0(piVar16, piVar15, uVar7, arg4);\n                                uVar5 = *0x57fcf0;\n                                piVar16 = *0x57fcf8;\n                                piVar15 = *0x57fd00;\n                            }\n                            *0x57fd00 = piVar15;\n                            *0x57fcf8 = piVar16;\n                            *0x57fcf0 = uVar5;\n                            *(*0x20 + -0xb0) = 0x43f05f;\n                            uVar5 = fcn.00444a20(*0x57fd38);\n                            *0x57fd40 = *(*0x20 + -0x50);\n                            piVar16 = *0x57fd40;\n                            if (*0x5d3dd0 != 0) {\n                                *(*0x20 + -0xb0) = 0x43f090;\n                                piVar16 = *0x57fd38;\n                                *0x57fd38 = *0x57fd40;\n                                fcn.0045c5a0(piVar16, *0x57fd40, uVar7, arg4);\n                                uVar5 = *0x57fd30;\n                                piVar16 = *0x57fd38;\n                            }\ncode_r0x0043f092:\n                            *0x57fd38 = piVar16;\n                            *0x57fd30 = uVar5;\n                            *(*0x20 + -0xb0) = 0x43f09e;\n                            fcn.0040a580();\n                            uVar13 = *(*0x20 + -0x68);\n                            uVar7 = *(*0x20 + 8);\n                            arg4 = *(*0x20 + -100);\n                            goto code_r0x0043f0e0;\n                        }\n                        unaff_RBX = uVar13;\n                        piVar15 = *0x57fd00;\n                        if (unaff_RBX <= *0x57fd00) {\n                            piVar15 = *0x57fd40;\n                            *0x57fcf8 = unaff_RBX;\n                            uVar5 = *0x57fd30;\n                            piVar16 = unaff_RBX;\n                            if (unaff_RBX <= *0x57fd40) goto code_r0x0043f092;\n                            goto code_r0x0043f5d9;\n                        }\n                        goto code_r0x0043f5e5;\n                    }\n                    unaff_RSI = iVar1;\n                    piVar15 = *0x57fca0;\n                    piVar16 = unaff_RSI;\n                    if (unaff_RSI <= *0x57fca0) goto code_r0x0043efae;\n                }\n                else {\ncode_r0x0043f0e0:\n                    while( true ) {\n                        piVar16 = uVar13;\n                        if (uVar7 <= uVar13) break;\n                        unaff_RSI = uVar13;\n                        piVar12 = *0x57fc98;\n                        piVar15 = piVar16;\n                        if (*0x57fc98 <= unaff_RSI) goto code_r0x0043f5d1;\n                        *(*0x20 + -0x58) = uVar13;\n                        *(*0x20 + -0x40) = unaff_RSI;\n                        iVar6 = (*0x57fc90)[unaff_RSI];\n                        if (iVar6 == 0) {\n                            *(*0x20 + -0xb0) = 0x43f127;\n                            iVar6 = fcn.0040c440();\n                            piVar16 = *(*0x20 + -0x58);\n                        }\n                        *(*0x20 + -0x28) = iVar6;\n                        *(*0x20 + -0xb0) = 0x43f145;\n                        fcn.0043e860();\n                        piVar12 = *0x57fc98;\n                        piVar15 = *0x57fc90;\n                        if (*0x57fc98 <= *(*0x20 + -0x40)) goto code_r0x0043f5cc;\n                        piVar15 = *0x57fc90 + *(*0x20 + -0x40);\n                        if (*0x5d3dd0 != '\\0') {\n                            *(*0x20 + -0x18) = piVar15;\n                            piVar16 = *(*0x20 + -0x28);\n                            *(*0x20 + -0xb0) = 0x43f18f;\n                            fcn.004031e0();\n                            piVar15 = *(*0x20 + -0x18);\n                        }\n                        *piVar15 = *(*0x20 + -0x28);\n                        uVar13 = *(*0x20 + -0x58) + 1;\n                        uVar7 = *(*0x20 + 8);\n                        arg4 = *(*0x20 + -100);\n                        unaff_RBX = piVar16;\n                    }\n                    *(*0x20 + -0x20) = unaff_R14;\n                    piVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    if (piVar2 == NULL) {\ncode_r0x0043f258:\n                        piVar15 = *(*0x20 + -0x20);\ncode_r0x0043f260:\n                        *(piVar15[6] + 0xa0) = 0;\n                        piVar16 = *0x57fc90;\n                        piVar12 = *0x57fc98;\n                        if (*0x57fc98 != NULL) {\n                            iVar6 = **0x57fc90;\n                            *(iVar6 + 0x38) = 0;\n                            *(iVar6 + 4) = 0;\n                            *(*0x20 + -0xb0) = 0x43f2a5;\n                            fcn.0043f620();\n                            if (*0x585d30 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x43f2b3;\n                                fcn.004503a0();\n                            }\n                            goto code_r0x0043f2b3;\n                        }\n                    }\n                    else {\n                        if (uVar7 <= *piVar2) {\n                            if (piVar2 == NULL) goto code_r0x0043f258;\n                            if (*0x585d30 != '\\0') {\n                                *(unaff_R14 + 0xe0) = piVar2;\n                                unaff_RSI = NULL;\n                                *(*0x20 + -0xb0) = 0x43f1f5;\n                                fcn.0044f180(0);\n                                *(*0x20 + -0xb0) = 0x43f20d;\n                                fcn.00450040();\n                                arg4 = *(*0x20 + -100);\n                            }\n                            piVar15 = *(*0x20 + -0x20);\n                            *(*(piVar15[6] + 0xa0) + 0x38) = 0;\n                            goto code_r0x0043f260;\n                        }\n                        piVar2[1] = 1;\n                        *(*0x20 + -0xb0) = 0x43f256;\n                        fcn.004149a0();\n                        piVar16 = unaff_RBX;\ncode_r0x0043f2b3:\n                        *0x5d3c90 = 0;\n                        uVar14 = *(*0x20 + -0x68);\n                        uVar13 = *(*0x20 + 8);\n                        uVar18 = uVar13;\n                        while (piVar12 = *0x57fc98,  piVar15 = uVar14,  uVar13 < uVar14) {\n                            piVar16 = uVar13;\n                            unaff_RSI = *0x57fc98;\n                            if (*0x57fc98 <= piVar16) goto code_r0x0043f5b8;\n                            *(*0x20 + -0x5c) = uVar13;\n                            *(*0x20 + -0xb0) = 0x43f2da;\n                            fcn.0043ea00();\n                            uVar18 = *(*0x20 + 8);\n                            uVar14 = *(*0x20 + -0x68);\n                            unaff_RSI = piVar12;\n                            uVar13 = *(*0x20 + -0x5c) + 1;\n                        }\n                        if (uVar18 == *0x57fc98) {\ncode_r0x0043f3a5:\n                            uVar9 = uVar18;\n                            iVar6 = *(*0x20 + -0x20);\n                            uVar7 = 0;\n                            while( true ) {\n                                uVar18 = uVar18 - 1;\n                                piVar12 = uVar18;\n                                *(*0x20 + -0x30) = uVar7;\n                                if (uVar18 < 0) {\n                                    *0x57fdc0 = uVar9;\n                                    *0x57fdd0 = 0;\n                                    for (uVar13 = 1; uVar7 = *0x57fdc8,  uVar11 = uVar9,  uVar14 = uVar13, \n                                        uVar13 <= uVar9; uVar13 = uVar13 + 1) {\n                                        while (uVar18 = uVar11,  uVar18 != 0) {\n                                            uVar11 = uVar14 % uVar11;\n                                            uVar14 = uVar18;\n                                        }\n                                        if (uVar14 == 1) {\n                                            uVar11 = *0x57fdd0 + 1;\n                                            uVar10 = *0x57fdd0;\n                                            uVar8 = *0x57fdc8;\n                                            if (*0x57fdd8 < uVar11) {\n                                                *(*0x20 + -0x54) = uVar13;\n                                                *(*0x20 + -0xb0) = 0x43f4de;\n                                                uVar9 = *0x57fdd0;\n                                                uVar10 = *0x57fdc8;\n                                                uVar8 = fcn.00444c60(*0x57fdd0);\n                                                uVar4 = uVar8;\n                                                *0x57fdd8 = uVar9;\n                                                if (*0x5d3dd0 != 0) {\n                                                    *(*0x20 + -0xb0) = 0x43f505;\n                                                    uVar8 = fcn.0045c5a0(uVar9, uVar11, uVar10, arg4);\n                                                    uVar4 = *0x57fdc8;\n                                                }\n                                                *0x57fdc8 = uVar4;\n                                                uVar9 = *(*0x20 + 8);\n                                                uVar13 = *(*0x20 + -0x54);\n                                                uVar10 = uVar7;\n                                            }\n                                            *0x57fdd0 = uVar10 + 1;\n                                            *(uVar8 + uVar10 * 4) = uVar13;\n                                        }\n                                    }\n                                    *0x5d3b70 = uVar9;\n                                    return;\n                                }\n                                if (*0x57fc98 <= uVar18) break;\n                                uVar11 = (*0x57fc90)[uVar18];\n                                arg4 = uVar7;\n                                if (*(*(iVar6 + 0x30) + 0xa0) != uVar11) {\n                                    *(uVar11 + 4) = 0;\n                                    iVar3 = *0x5806c0;\n                                    do {\n                                    } while (*(uVar11 + 0x194) != *(uVar11 + 0x194));\n                                    if ((*(uVar11 + 0x194) == *(uVar11 + 400)) && (*(uVar11 + 0x998) == 0)) {\n                                        *(*0x20 + -0x60) = uVar18;\n                                        *(*0x20 + -0xb0) = 0x43f425;\n                                        fcn.004412e0();\n                                        uVar9 = *(*0x20 + 8);\n                                        uVar18 = *(*0x20 + -0x60);\n                                        iVar6 = *(*0x20 + -0x20);\n                                        uVar7 = *(*0x20 + -0x30);\n                                        arg4 = *(*0x20 + -0x30);\n                                    }\n                                    else {\n                                        if (*0x5806c0 != 0) {\n                                            *0x5806c0 = *(*0x5806c0 + 0x128);\n                                            *0x5806c8 = *0x5806c8 + -1;\n                                        }\n                                        *(uVar11 + 0x38) = iVar3;\n                                        *(uVar11 + 8) = uVar7;\n                                        uVar7 = uVar11;\n                                        arg4 = uVar11;\n                                    }\n                                }\n                            }\n                            *(*0x20 + -0xb0) = 0x43f59a;\n                            fcn.0045ca40(*0x57fc98);\ncode_r0x0043f59a:\n                            *(*0x20 + -0xb0) = 0x43f5a5;\n                            fcn.0045cac0(piVar16, piVar12);\ncode_r0x0043f5a5:\n                            *(*0x20 + -0xb0) = 0x43f5ad;\n                            fcn.0045cac0(piVar16, piVar12);\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x43f32c;\n                            fcn.0040a360();\n                            piVar15 = *(*0x20 + 8);\n                            piVar12 = piVar15;\n                            piVar16 = *0x57fca0;\n                            if (piVar15 <= *0x57fca0) {\n                                piVar16 = *(*0x20 + -100);\n                                piVar12 = *0x57fd00;\n                                *0x57fc98 = piVar15;\n                                if (piVar16 <= *0x57fd00) {\n                                    piVar12 = *0x57fd40;\n                                    *0x57fcf8 = piVar16;\n                                    if (piVar16 <= *0x57fd40) {\n                                        *(*0x20 + -0xb0) = 0x43f39e;\n                                        *0x57fd38 = piVar16;\n                                        fcn.0040a580();\n                                        uVar18 = *(*0x20 + 8);\n                                        goto code_r0x0043f3a5;\n                                    }\n                                    goto code_r0x0043f59a;\n                                }\n                                goto code_r0x0043f5a5;\n                            }\n                        }\n                        *(*0x20 + -0xb0) = 0x43f5b8;\n                        piVar15 = piVar16;\n                        fcn.0045cac0(piVar12, piVar16);\ncode_r0x0043f5b8:\n                        *(*0x20 + -0xb0) = 0x43f5c5;\n                        piVar12 = unaff_RSI;\n                        fcn.0045ca40(unaff_RSI);\n                    }\n                    *(*0x20 + -0xb0) = 0x43f5cc;\n                    fcn.0045ca40(piVar12);\ncode_r0x0043f5cc:\n                    *(*0x20 + -0xb0) = 0x43f5d1;\n                    fcn.0045ca40(piVar12);\n                    unaff_RBX = piVar16;\ncode_r0x0043f5d1:\n                    *(*0x20 + -0xb0) = 0x43f5d9;\n                    fcn.0045ca40(piVar12);\ncode_r0x0043f5d9:\n                    *(*0x20 + -0xb0) = 0x43f5e5;\n                    fcn.0045cac0(unaff_RBX, piVar15);\ncode_r0x0043f5e5:\n                    *(*0x20 + -0xb0) = 0x43f5ed;\n                    fcn.0045cac0(unaff_RBX, piVar15);\n                }\n                *(*0x20 + -0xb0) = 0x43f5f5;\n                fcn.0045cac0(unaff_RSI, piVar15);\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0xb0) = 0x43f606;\n            in_EAX = fcn.004330a0();\n        }\n        *(puVar17 + 8) = in_EAX;\n        *(puVar17 + -8) = 0x43f610;\n        fcn.0045a360();\n        in_EAX = *(puVar17 + 8);\n        *0x20 = puVar17;\n    } while( true );\n}\n",
        "token_count": 5026
    },
    "0043f620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f620(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0043f680();\n    fcn.004149a0();\n    if (*0x585d30 != '\\0') {\n        fcn.0044ffe0();\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0043f680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f680(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0xa0) != 0) {\n        fcn.004330a0();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((*(in_RAX + 0x38) == 0) && (*(in_RAX + 4) == 0)) {\n        *(*(unaff_R14 + 0x30) + 0xa0) = in_RAX;\n        *(in_RAX + 0x38) = *(unaff_R14 + 0x30);\n        *(in_RAX + 4) = 1;\n        return;\n    }\n    do {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.00435140();\n        fcn.00434f40();\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.00434aa0();\n        fcn.004348c0();\n        fcn.004330a0();\n    } while( true );\n}\n",
        "token_count": 284
    },
    "0043f7a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043f7a0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            iVar3 = *(iVar1 + 0xa0);\n            if (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x18) = iVar3;\n                iVar2 = *(iVar3 + 0x38);\n                *(*0x20 + -0x30) = iVar2;\n                if ((iVar2 == iVar1) && (*(iVar3 + 4) == 1)) {\n                    *(*0x20 + -0x20) = unaff_R14;\n                    if (*0x585d30 != '\\0') {\n                        *(*0x20 + -0x48) = 0x43f7fe;\n                        fcn.00450040();\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    *(*(*(*0x20 + -0x20) + 0x30) + 0xa0) = 0;\n                    *(iVar3 + 0x38) = 0;\n                    *(iVar3 + 4) = 0;\n                    return;\n                }\n                *(*0x20 + -0x28) = *(iVar3 + 4);\n                *(*0x20 + -0x48) = 0x43f83d;\n                fcn.00434840();\n                *(*0x20 + -0x48) = 0x43f84e;\n                fcn.00435140();\n                *(*0x20 + -0x48) = 0x43f858;\n                fcn.004350c0();\n                *(*0x20 + -0x48) = 0x43f869;\n                fcn.00435140();\n                *(*0x20 + -0x48) = 0x43f873;\n                fcn.004350c0();\n                *(*0x20 + -0x48) = 0x43f885;\n                fcn.00435140();\n                *(*0x20 + -0x48) = 0x43f88f;\n                fcn.00434fa0();\n                *(*0x20 + -0x48) = 0x43f8a5;\n                fcn.00435140();\n                *(*0x20 + -0x48) = 0x43f8af;\n                fcn.00434e40();\n                *(*0x20 + -0x48) = 0x43f8b4;\n                fcn.00434aa0();\n                *(*0x20 + -0x48) = 0x43f8b9;\n                fcn.004348c0();\n                *(*0x20 + -0x48) = 0x43f8ca;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x48) = 0x43f8db;\n            fcn.004330a0();\n        }\n        *(puVar4 + -8) = 0x43f8e5;\n        fcn.0045a360();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 844
    },
    "0043f960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f960(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x5d3b2e != '\\0') || (*0x5d3b2c != '\\0')) {\n                return;\n            }\n            if (*0x5d3b88 != 0) {\n                return;\n            }\n            if ((*0x5d3b2d == '\\0') && (*0x5d3b25 != '\\0')) {\n                *(*0x20 + -0x50) = 0x43f9c6;\n                *0x5d3c38 = fcn.00439080();\n                uVar5 = *0x5d3b50 != 0;\n            }\n            else {\n                uVar5 = 0;\n            }\n            iVar1 = *0x5806cc;\n            uVar6 = *0x5806c8;\n            iVar8 = *0x5806d0 - *0x5806e0;\n            uVar12 = *0x5806dc;\n            uVar7 = ((iVar8 - *0x5806c8) - *0x5806cc) - *0x5806dc;\n            uVar9 = uVar7;\n            if (uVar5 < uVar7) {\n                return;\n            }\n            uVar5 = *0x5806c8;\n            uVar11 = *0x5806dc;\n            if (-1 < uVar7) {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x43fc40;\n                *(*0x20 + -0x10) = *0x20 + -0x28;\n                *(*0x20 + -0x50) = 0x43fa4e;\n                fcn.00436500();\n                uVar11 = uVar12;\n                uVar5 = uVar6;\n                if (*(*0x20 + -0x28) != 0) {\n                    if (*0x5d3c40 == 0) {\ncode_r0x0043fa7e:\n                        uVar6 = *0x57fc98;\n                        iVar2 = 0;\n                        while( true ) {\n                            if (*0x57fc98 <= iVar2) {\n                                uVar4 = *(unaff_R14 + 0x30);\n                                *(uVar4 + 0xc4) = 0xffffffff;\n                                *(*0x20 + -0x50) = 0x43fadb;\n                                fcn.0040a580();\n                                uVar9 = 0x25;\n                                *(*0x20 + -0x50) = 0x43faec;\n                                fcn.004330a0();\n                                goto code_r0x0043faec;\n                            }\n                            if (*(*(*0x57fc90 + iVar2 * 8) + 0x2288) != 0) break;\n                            iVar2 = iVar2 + 1;\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x43fa69;\n                    iVar2 = fcn.0044eac0();\n                    if (uVar9 == 0) goto code_r0x0043fa7e;\n                    puVar3 = 0x5806f0;\n                    *0x5d3c40 = iVar2;\n                    while( true ) {\n                        uVar11 = uVar12;\n                        uVar4 = *puVar3;\n                        if (uVar4 == 0) break;\n                        if (uVar9 == uVar4) {\n                            *puVar3 = *(uVar9 + 8);\n                            break;\n                        }\ncode_r0x0043faec:\n                        puVar3 = uVar4 + 8;\n                    }\n                    uVar12 = *0x5806c0;\n                    if (*0x5806c0 != 0) {\n                        uVar6 = *(*0x5806c0 + 0x128);\n                        *0x5806c8 = *0x5806c8 - 1;\n                        *0x5806c0 = uVar6;\n                    }\n                    uVar5 = uVar6;\n                    if (uVar12 != 0) {\n                        *(uVar12 + 0xa8) = uVar9;\n                        *(*0x20 + -0x50) = 0x43fb45;\n                        fcn.0040a660();\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x43fb65;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x50) = 0x43fb73;\n                fcn.0040a580();\n                *(*0x20 + -0x50) = 0x43fb85;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x20) = iVar8;\n            *(*0x20 + -0x2c) = uVar5;\n            *(*0x20 + -0x30) = iVar1;\n            *(*0x20 + -0x34) = uVar11;\n            *(*0x20 + -0x50) = 0x43fb9c;\n            fcn.00434840();\n            *(*0x20 + -0x50) = 0x43fbad;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x43fbb9;\n            fcn.00434f40();\n            *(*0x20 + -0x50) = 0x43fbca;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x43fbd6;\n            fcn.00434f40();\n            *(*0x20 + -0x50) = 0x43fbe7;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x43fbf4;\n            fcn.00434f40();\n            *(*0x20 + -0x50) = 0x43fc05;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x43fc11;\n            fcn.00434f40();\n            *(*0x20 + -0x50) = 0x43fc16;\n            fcn.00434aa0();\n            *(*0x20 + -0x50) = 0x43fc1b;\n            fcn.004348c0();\n            *(*0x20 + -0x50) = 0x43fc2c;\n            fcn.004330a0();\n        }\n        *(puVar10 + -8) = 0x43fc32;\n        fcn.0045a360();\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1739
    },
    "00440200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00440200(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    iVar4 = 0;\n    for (iVar3 = 0; iVar3 < *0x57fc98; iVar3 = iVar3 + 1) {\n        iVar2 = *(*0x57fc90 + iVar3 * 8);\n        if (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            if ((iVar1 == 1) || (iVar1 == 2)) {\n                if (*(iVar2 + 0x18) == *(iVar2 + 0x10)) {\n                    iVar5 = *(iVar2 + 0x20) + 10000000;\n                    if (iVar5 <= in_RAX) {\n                        fcn.004404e0();\n                    }\n                    bVar6 = iVar5 <= in_RAX;\n                }\n                else {\n                    *(iVar2 + 0x18) = *(iVar2 + 0x10);\n                    *(iVar2 + 0x20) = in_RAX;\n                    bVar6 = false;\n                }\n            }\n            else {\n                bVar6 = false;\n            }\n            if (iVar1 == 2) {\n                if ((bVar6) || (*(iVar2 + 0x28) == *(iVar2 + 0x14))) {\n                    do {\n                    } while (*(iVar2 + 0x194) != *(iVar2 + 0x194));\n                    if (*(iVar2 + 0x194) == *(iVar2 + 400)) {\n                        if (*(iVar2 + 0x998) == 0) {\n                            bVar6 = *0x5806fc + *0x5806f8 != 0;\n                        }\n                        else {\n                            bVar6 = false;\n                        }\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                    if ((!bVar6) || (*(iVar2 + 0x30) + 10000000 <= in_RAX)) {\n                        fcn.0040a580();\n                        fcn.0043f900();\n                        LOCK();\n                        if (*(iVar2 + 4) == 2) {\n                            *(iVar2 + 4) = 0;\n                            if (*0x585d30 != '\\0') {\n                                fcn.004507c0();\n                                fcn.00450040();\n                            }\n                            *(iVar2 + 0x14) = *(iVar2 + 0x14) + 1;\n                            fcn.00439a20();\n                            iVar4 = iVar4 + 1;\n                        }\n                        fcn.0043f900();\n                        fcn.0040a360();\n                    }\n                }\n                else {\n                    *(iVar2 + 0x28) = *(iVar2 + 0x14);\n                    *(iVar2 + 0x30) = in_RAX;\n                }\n            }\n        }\n    }\n    fcn.0040a580();\n    return iVar4;\n}\n",
        "token_count": 743
    },
    "00440440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00440440(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x57fc98,  iVar1 = *0x57fc90,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar5 = 0;\n    for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n        if (*(*(iVar1 + iVar4 * 8) + 4) == 1) {\n            uVar3 = fcn.004404e0();\n            uVar5 = uVar5 & 0xff | uVar3;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 226
    },
    "004404e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004404e0(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    piVar1 = *(in_RAX + 0x38);\n    if ((piVar1 != NULL) && (*(unaff_R14 + 0x30) != piVar1)) {\n        iVar2 = piVar1[0x12];\n        if ((iVar2 != 0) && (*piVar1 != iVar2)) {\n            *(iVar2 + 0xb1) = 1;\n            *(iVar2 + 0x10) = 0xfffffffffffffade;\n            if (*0x5d4018 == 0) {\n                *(in_RAX + 0x22b0) = 1;\n                fcn.004309c0();\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 259
    },
    "00440700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440700(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char in_AL;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStack184;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    int64_t iStack16;\n    \n    while (&uStack56 < *(unaff_R14 + 0x10) || &uStack56 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0045e320();\n    if (*0x5d3d18 == 0) {\n        *0x5d3d18 = iStack184;\n    }\n    fcn.0040a360();\n    iStack40 = *0x5d3d18;\n    uStack48 = *0x5806f8;\n    uStack56 = *0x5806fc;\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434f40(iStack184 - iStack40 >> 0x3f, (iStack184 - iStack40) / 1000000);\n    fcn.00435140();\n    fcn.00434f40();\n    fcn.00435140();\n    fcn.00434e40();\n    fcn.00435140();\n    fcn.00434f40();\n    fcn.00435140();\n    fcn.00434e40();\n    fcn.00435140();\n    fcn.00434f40();\n    fcn.00435140();\n    fcn.00434f40();\n    fcn.004348c0();\n    if (in_AL != '\\0') {\n        uStack48 = *0x580780;\n        iStack40 = *0x5806cc;\n        uStack56 = *0x580790;\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.00435140();\n        fcn.00434f40();\n        fcn.00435140();\n        fcn.00434f40();\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.00434aa0();\n        fcn.004348c0();\n    }\n    iVar3 = *0x57fc98;\n    iStack16 = *0x57fc90;\n    for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n        iVar2 = *(iStack16 + iVar4 * 8);\n        uVar1 = *(iVar2 + 400);\n        if (in_AL == '\\0') {\n            fcn.00434840();\n            fcn.00434a60();\n            fcn.004348c0();\n            if (iVar4 == 0) {\n                fcn.00434840();\n                fcn.00435140();\n                fcn.004348c0();\n            }\n            fcn.00434840();\n            fcn.00434e40(uVar1);\n            fcn.004348c0();\n            if (iVar4 == *0x57fc98 + -1) {\n                fcn.00434840();\n                fcn.00435140();\n                fcn.004348c0();\n            }\n        }\n        else {\n            uStack48 = *(iVar2 + 4);\n            uStack56 = *(iVar2 + 0x10);\n            iStack40 = *(iVar2 + 0x9a8);\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00434f40();\n            fcn.00435140();\n            fcn.00434e40();\n            fcn.00435140();\n            fcn.00434e40();\n            fcn.00435140();\n            fcn.00434e40();\n            fcn.00435140();\n            fcn.00434f40();\n            fcn.00435140();\n            fcn.00434e40(uVar1);\n            fcn.00435140();\n            fcn.00434f40();\n            fcn.00435140();\n            fcn.00434f40();\n            fcn.00434aa0();\n            fcn.004348c0();\n        }\n    }\n    iVar4 = *0x57ef78;\n    if (in_AL != '\\0') {\n        while (iVar4 != 0) {\n            iStack40 = *(iVar4 + 0xb8);\n            uStack24 = *(iVar4 + 200);\n            iStack32 = iVar4;\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00434f40();\n            fcn.00435140();\n            fcn.00434f40();\n            fcn.00435140();\n            fcn.00434f40();\n            fcn.00435140();\n            fcn.00434f40();\n            fcn.00435140();\n            fcn.00434f40();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00434f40();\n            fcn.00435140();\n            fcn.00434f40();\n            fcn.00435140();\n            fcn.00434ae0();\n            fcn.00435140();\n            fcn.00434ae0();\n            fcn.00435140();\n            fcn.00434f40();\n            fcn.00434aa0();\n            fcn.004348c0();\n            iVar4 = *(iStack32 + 0x120);\n        }\n        fcn.00436500();\n        fcn.0040a540();\n        return;\n    }\n    fcn.0040a540();\n    return;\n}\n",
        "token_count": 1311
    },
    "00440f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440f00(void)\n\n{\n    uint8_t in_AL;\n    uint8_t uVar1;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    iVar2 = *0x580730;\n    uVar1 = in_AL ^ 1;\n    if (*0x580718 != uVar1) {\n        *0x580718 = uVar1;\n        if (in_AL == 0) {\n            fcn.0040a580();\n        }\n        else {\n            *0x580730 = 0;\n            if (*0x580728 != 0) {\n                *(*0x580728 + 0xa0) = 0;\n                if (*0x580708 == 0) {\n                    *0x580700 = *0x580720;\n                }\n                else {\n                    *(*0x580708 + 0xa0) = *0x580720;\n                }\n                *0x580708 = *0x580728;\n            }\n            *0x580710 = *0x580710 + iVar2;\n            *0x580720 = in_XMM15;\n            fcn.0040a580();\n            while ((iVar2 != 0 && (*0x5806f8 != 0))) {\n                fcn.00439760();\n                iVar2 = iVar2 + -1;\n            }\n        }\n        return;\n    }\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 380
    },
    "00441820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00441820(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    uchar (*unaff_RBX) [16];\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar1 = *(in_RAX + 400);\n    iVar7 = 0;\n    for (iVar6 = *(in_RAX + 0x194); (iVar2 = **unaff_RBX,  iVar2 != 0 && (iVar6 - iVar1 < 0x100)); iVar6 = iVar6 + 1) {\n        if ((iVar2 != 0) && (iVar3 = *(iVar2 + 0xa0),  **unaff_RBX = iVar3,  iVar3 == 0)) {\n            *(*unaff_RBX + 8) = 0;\n        }\n        *(in_RAX + 0x198 + iVar6 * 8) = iVar2;\n        iVar7 = iVar7 + 1;\n    }\n    *(in_RAX + 0x194) = iVar6;\n    if (**unaff_RBX != 0) {\n        fcn.0040a360();\n        iVar2 = *(*unaff_RBX + 8);\n        uVar4 = **unaff_RBX;\n        uVar5 = *0x580700;\n        iVar3 = *0x580708;\n        if ((iVar2 != 0) && (*(iVar2 + 0xa0) = 0,  uVar5 = uVar4,  iVar3 = iVar2,  *0x580708 != 0)) {\n            *(*0x580708 + 0xa0) = uVar4;\n            uVar5 = *0x580700;\n        }\n        *0x580708 = iVar3;\n        *0x580700 = uVar5;\n        *0x580710 = *0x580710 + (arg1 - iVar7);\n        *unaff_RBX = in_XMM15;\n        fcn.0040a580();\n    }\n    return;\n}\n",
        "token_count": 539
    },
    "00441b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00441b20(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    \n    while (uVar5 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n        arg1 = arg1 & 0xffffffff;\n    }\n    do {\n        while( true ) {\n            iVar2 = *(in_RAX + 400);\n            uVar6 = *(in_RAX + 0x194) - iVar2;\n            uVar6 = uVar6 - (uVar6 >> 1);\n            if (uVar6 == 0) break;\n            if (uVar6 < 0x81) {\n                for (uVar7 = 0; uVar7 < uVar6; uVar7 = uVar7 + 1) {\n                    *(unaff_RBX + (uVar7 + uVar5 & 0xff) * 8) = *(in_RAX + 0x198 + (uVar7 + iVar2 & 0xff) * 8);\n                }\n                LOCK();\n                if (iVar2 == *(in_RAX + 400)) {\n                    *(in_RAX + 400) = uVar6 + iVar2;\n                    return uVar6;\n                }\n            }\n        }\n        if ((unaff_DIL == '\\0') || (uVar3 = *(in_RAX + 0x998),  uVar3 == 0)) {\n            return 0;\n        }\n        if (*(in_RAX + 4) == 1) {\n            fcn.0045a220();\n            uVar5 = arg1 & 0xffffffff;\n        }\n        LOCK();\n        puVar1 = in_RAX + 0x998;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n    } while (uVar3 != uVar4);\n    *(unaff_RBX + (uVar5 & 0xff) * 8) = uVar3;\n    return 1;\n}\n",
        "token_count": 564
    },
    "00441cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00441cc0(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x194);\n            *(*0x20 + -0xc) = uVar2;\n            *(*0x20 + -0x30) = 0x441cfd;\n            iVar5 = fcn.00441b20(uVar2);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            iVar1 = iVar5 + *(*0x20 + -0xc) + -1;\n            iVar3 = *(*0x20 + 8);\n            uVar4 = *(iVar3 + 0x198 + iVar1 * 8);\n            if (iVar5 == 1) {\n                return uVar4;\n            }\n            uVar2 = ((*(*0x20 + -0xc) - *(iVar3 + 400)) + iVar5) - 1;\n            arg1._0_1_ = uVar2;\n            if (uVar2 < 0x100) {\n                *(iVar3 + 0x194) = iVar1;\n                return uVar4;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x30) = 0x441d7a;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = arg1;\n        *(puVar6 + -8) = 0x441d8e;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_1_ = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 607
    },
    "00441dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00441dc0(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 1) {\n                if (*in_RAX == 2) {\n                    return;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *in_RAX = 1;\n                uVar5 = 0;\n                while (uVar5 <= in_RAX[1] && in_RAX[1] != uVar5) {\n                    *(*0x20 + -0xe8) = uVar5;\n                    *(*0x20 + -0x130) = 0x441e31;\n                    fcn.00441dc0();\n                    in_RAX = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0xe8) + 1;\n                }\n                if (in_RAX[2] == 0) {\n                    *in_RAX = 2;\n                    return;\n                }\n                if (*0x5d3e20 == '\\0') {\n                    uVar3 = 0;\n                    uVar4 = 0;\n                    uVar7 = 0;\n                }\n                else {\n                    *(*0x20 + -0x130) = 0x441e65;\n                    fcn.0045e320();\n                    uVar3 = *(*0x20 + -0x128);\n                    in_RAX = *(*0x20 + 8);\n                    uVar4 = *0x5d3e38;\n                    uVar7 = *0x5d3e30;\n                }\n                *(*0x20 + -0xe0) = uVar4;\n                *(*0x20 + -0xd8) = uVar7;\n                *(*0x20 + -0x100) = uVar3;\n                *(*0x20 + -0x18) = in_RAX + in_RAX[1] + 3;\n                uVar5 = 0;\n                while (uVar5 <= in_RAX[2] && in_RAX[2] != uVar5) {\n                    *(*0x20 + -0xf0) = uVar5;\n                    pcVar1 = *(uVar5 * 8 + *(*0x20 + -0x18));\n                    *(*0x20 + -0x130) = 0x441eed;\n                    (*pcVar1)(uVar4);\n                    in_RAX = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0xe0);\n                    uVar3 = *(*0x20 + -0x100);\n                    uVar5 = *(*0x20 + -0xf0) + 1;\n                }\n                if (*0x5d3e20 == '\\0') goto code_r0x004420c2;\n                *(*0x20 + -0x130) = 0x441f2c;\n                fcn.0045e320(uVar4, uVar3);\n                uVar9 = 0;\n                uVar10 = 0;\n                uVar11 = 0;\n                uVar12 = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0xc0) = *0x5d3e30;\n                *(*0x20 + -200) = *0x5d3e38;\n                uVar4 = *(*0x20 + -0x128);\n                *(*0x20 + -0x108) = uVar4;\n                *(*0x20 + -0x130) = 0x441f71;\n                fcn.0044b1a0();\n                *(*0x20 + -0x130) = 0x441f76;\n                uVar3 = fcn.0044b9e0();\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0xf8) = uVar4;\n                *(*0x20 + -0xb8) = CONCAT412(uVar12, CONCAT48(uVar11, CONCAT44(uVar10, uVar9)));\n                *(*0x20 + -0xb0) = CONCAT412(uVar12, CONCAT48(uVar11, CONCAT44(uVar10, uVar9)));\n                *(*0x20 + -0x130) = 0x441f94;\n                fcn.00434840();\n                *(*0x20 + -0x130) = 0x441fa5;\n                fcn.00435140();\n                *(*0x20 + -0x130) = 0x441fb7;\n                fcn.00435140();\n                *(*0x20 + -0x130) = 0x441fc8;\n                fcn.00435140();\n                *(*0x20 + -0x130) = 0x441fcd;\n                fcn.004348c0();\n                *(*0x20 + -0x130) = 0x441fee;\n                uVar4 = fcn.00419c40(0x18);\n                *(*0x20 + -0x130) = 0x442005;\n                uVar3 = fcn.004489c0(0x18);\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + -0xd0) = uVar4;\n                *(*0x20 + -0x130) = 0x442017;\n                fcn.00434840();\n                *(*0x20 + -0x130) = 0x442029;\n                fcn.00435140();\n                *(*0x20 + -0x130) = 0x44203a;\n                fcn.00435140();\n                *(*0x20 + -0x130) = 0x44203f;\n                fcn.004348c0();\n                *(*0x20 + -0x130) = 0x44205e;\n                uVar4 = fcn.00419c40(0x18);\n                *(*0x20 + -0x130) = 0x442071;\n                uVar3 = fcn.004489c0(0x18);\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + -0xd0) = uVar4;\n                *(*0x20 + -0x130) = 0x442085;\n                fcn.00434840();\n                *(*0x20 + -0x130) = 0x442097;\n                fcn.00435140();\n                *(*0x20 + -0x130) = 0x4420a8;\n                fcn.00435140();\n                *(*0x20 + -0x130) = 0x4420ad;\n                fcn.004348c0();\n                uVar5 = *(*0x20 + -200) - *(*0x20 + -0xe0);\n                uVar6 = 0x17;\n                while (cVar2 = uVar5,  9 < uVar5) {\n                    uVar5 = uVar5 / 10;\n                    if (0x17 < uVar6) goto code_r0x004422a5;\n                    *(*0x20 + (uVar6 - 0xb8)) = cVar2 + uVar5 * -10 + '0';\n                    uVar6 = uVar6 - 1;\n                }\n                if (uVar6 < 0x18) {\n                    *(*0x20 + (uVar6 - 0xb8)) = cVar2 + '0';\n                    *(*0x20 + -0x130) = 0x442158;\n                    uVar4 = fcn.004489c0(-(uVar6 - 0x18));\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0xd0) = *0x20 + ((uVar6 & uVar6 - 0x18 >> 0x3f) - 0xb8);\n                    *(*0x20 + -0x130) = 0x44216a;\n                    fcn.00434840();\n                    *(*0x20 + -0x130) = 0x44217c;\n                    fcn.00435140();\n                    *(*0x20 + -0x130) = 0x44218d;\n                    fcn.00435140();\n                    *(*0x20 + -0x130) = 0x442192;\n                    fcn.004348c0();\n                    uVar6 = *(*0x20 + -0xc0) - *(*0x20 + -0xd8);\n                    uVar5 = 0x17;\n                    while (cVar2 = uVar6,  9 < uVar6) {\n                        uVar6 = uVar6 / 10;\n                        if (0x17 < uVar5) goto code_r0x00442286;\n                        *(*0x20 + (uVar5 - 0xb8)) = cVar2 + uVar6 * -10 + '0';\n                        uVar5 = uVar5 - 1;\n                    }\n                    if (uVar5 < 0x18) {\n                        *(*0x20 + (uVar5 - 0xb8)) = cVar2 + '0';\n                        *(*0x20 + -0x130) = 0x442225;\n                        uVar4 = fcn.004489c0(-(uVar5 - 0x18));\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0xd0) = *0x20 + ((uVar5 & uVar5 - 0x18 >> 0x3f) - 0xb8);\n                        *(*0x20 + -0x130) = 0x442237;\n                        fcn.00434840();\n                        *(*0x20 + -0x130) = 0x442249;\n                        fcn.00435140();\n                        *(*0x20 + -0x130) = 0x44225a;\n                        fcn.00435140();\n                        *(*0x20 + -0x130) = 0x44225f;\n                        fcn.004348c0();\n                        *(*0x20 + -0x130) = 0x442265;\n                        fcn.00434840();\n                        *(*0x20 + -0x130) = 0x44226a;\n                        fcn.00434aa0();\n                        *(*0x20 + -0x130) = 0x44226f;\n                        fcn.004348c0();\n                        in_RAX = *(*0x20 + 8);\ncode_r0x004420c2:\n                        *in_RAX = 2;\n                        return;\n                    }\n                    *(*0x20 + -0x130) = 0x442286;\n                    fcn.0045ca40(0x18);\ncode_r0x00442286:\n                    *(*0x20 + -0x130) = 0x442293;\n                    fcn.0045ca40(0x18);\n                }\n                *(*0x20 + -0x130) = 0x4422a5;\n                fcn.0045ca40(0x18);\ncode_r0x004422a5:\n                *(*0x20 + -0x130) = 0x4422b2;\n                fcn.0045ca40(0x18);\n            }\n            *(*0x20 + -0x130) = 0x4422c5;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x4422d0;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2814
    },
    "004422e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004422e0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint in_EAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = unaff_RBX;\n    *0x5d3b44 = in_EAX;\n    if (*0x5d3dd0 != 0) {\n        fcn.0045c6e0(arg1, arg2, arg3, arg4);\n        uVar1 = *0x57ef80;\n    }\n    *0x57ef80 = uVar1;\n    return;\n}\n",
        "token_count": 194
    },
    "00442340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044247a)\n// WARNING: Removing unreachable block (ram,0x0044248b)\n// WARNING: Removing unreachable block (ram,0x0044249c)\n// WARNING: Removing unreachable block (ram,0x004424ad)\n// WARNING: Removing unreachable block (ram,0x004424be)\n// WARNING: Removing unreachable block (ram,0x004424cf)\n// WARNING: Removing unreachable block (ram,0x004424e5)\n// WARNING: Removing unreachable block (ram,0x004424f6)\n// WARNING: Removing unreachable block (ram,0x00442507)\n// WARNING: Removing unreachable block (ram,0x00442518)\n\nulong fcn.00442340(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    LOCK();\n    LOCK();\n    LOCK();\n    *0x5d3d30 = 0x2a;\n    *0x5d3d38 = 0x30000000003;\n    return 0x2a;\n}\n",
        "token_count": 275
    },
    "00442f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00442f20(void)\n\n{\n    int32_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            piVar1 = in_RAX + 0x28;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = iVar2 + -1;\n            if (-1 < iVar2) goto code_r0x00442f96;\n            if ((iVar2 != -1) && (iVar2 != -0x40000001)) {\n                LOCK();\n                piVar1 = in_RAX + 0x2c;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar2 == 1) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x20) = 0x442f70;\n                    fcn.0040a360();\n                    if (*(*(*0x20 + 8) + 0x20) != 0) {\n                        *(*0x20 + -0x20) = 0x442f8a;\n                        fcn.0040a660();\n                    }\n                    *(*0x20 + -0x20) = 0x442f96;\n                    fcn.0040a580();\n                }\ncode_r0x00442f96:\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = 0x442fdb;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x442fe6;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 633
    },
    "00443000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00443000(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong in_RDX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*(in_RAX + 0x28) != 0) {\n        fcn.0045c420(arg1, in_RDX);\n        *(in_RAX + 0x28) = uStack32;\n    }\n    fcn.00435b20();\n    return;\n}\n",
        "token_count": 154
    },
    "004430a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004430a0(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar11;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) break;\n            unaff_BL = 0x1d;\n            *(*0x20 + -0x68) = 0x44339b;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x4433b4;\n        fcn.0045a360();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    while( true ) {\n        uVar4 = *in_RAX;\n        if (uVar4 == 0) break;\n        LOCK();\n        if (uVar4 == *in_RAX) {\n            *in_RAX = uVar4 - 1;\n            return uVar4;\n        }\n    }\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + -0x39) = unaff_BL;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x68) = 0x443112;\n    iVar5 = fcn.00435c00();\n    *(*0x20 + -0x18) = iVar5;\n    uVar6 = *(*0x20 + 8);\n    *(iVar5 + 0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    *(iVar5 + 0x30) = 0;\n    uVar6 = uVar6 >> 3;\n    uVar8 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar6) >> 0x40, 0);\n    uVar8 = (uVar8 + uVar6 >> 1 | CARRY8(uVar8, uVar6) << 0x3f) >> 7;\n    iVar7 = uVar6 + uVar8 * -0xfb;\n    *(*0x20 + -0x28) = iVar7;\n    uVar4 = *(*0x20 + 0x18);\n    if (((*(*0x20 + 0x18) & 1) == 0) || (*0x5d3c08 == 0)) {\n        iVar9 = 0;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x443176;\n        fcn.0045c420(iVar7, uVar8);\n        iVar9 = *(*0x20 + -0x60);\n        *(*(*0x20 + -0x18) + 0x28) = 0xffffffffffffffff;\n        iVar7 = *(*0x20 + -0x28);\n        iVar5 = *(*0x20 + -0x18);\n        uVar4 = *(*0x20 + 0x18);\n    }\n    if (((uVar4 >> 1 & 1) != 0) && (*0x5d3ca0 != 0)) {\n        if (iVar9 == 0) {\n            *(*0x20 + -0x68) = 0x4431d0;\n            fcn.0045c420(iVar7, 0);\n            iVar9 = *(*0x20 + -0x60);\n            iVar7 = *(*0x20 + -0x28);\n            iVar5 = *(*0x20 + -0x18);\n        }\n        *(iVar5 + 0x20) = iVar9;\n    }\n    *(*0x20 + -0x38) = iVar9;\n    iVar7 = iVar7 * 0x40;\n    *(*0x20 + -0x30) = iVar7;\n    *(*0x20 + -0x20) = iVar7 + 0x581e60;\n    do {\n        *(*0x20 + -0x10) = iVar7 + 0x581e60;\n        *(*0x20 + -0x68) = 0x443235;\n        fcn.0040a360();\n        piVar1 = *(*0x20 + -0x30) + 0x581e70;\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        piVar3 = *(*0x20 + 8);\n        do {\n            iVar2 = *piVar3;\n            if (iVar2 == 0) goto code_r0x00443263;\n            LOCK();\n        } while (iVar2 != *piVar3);\n        *piVar3 = iVar2 + -1;\ncode_r0x00443263:\n        if (iVar2 != 0) {\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            *(*0x20 + -0x68) = 0x443325;\n            fcn.0040a580(iVar2);\ncode_r0x00443325:\n            iVar5 = *(*(*0x20 + -0x18) + 0x28);\n            if (0 < iVar5) {\n                *(*0x20 + -0x68) = 0x44334f;\n                fcn.0042a8a0(iVar5 - *(*0x20 + -0x38), *(*0x20 + 0x20));\n            }\n            *(*0x20 + -0x68) = 0x443359;\n            uVar6 = fcn.00435f00();\n            return uVar6;\n        }\n        *(*0x20 + -0x68) = 0x443285;\n        fcn.00443600(*(*0x20 + -0x18));\n        *(*0x20 + -0x68) = 0x4432ac;\n        fcn.004359e0(0x12);\n        if (*(*(*0x20 + -0x18) + 0x30) == 0) {\n            piVar1 = *(*0x20 + 8);\n            do {\n                iVar2 = *piVar1;\n                if (iVar2 == 0) goto code_r0x004432d7;\n                LOCK();\n            } while (iVar2 != *piVar1);\n            *piVar1 = iVar2 + -1;\ncode_r0x004432d7:\n            bVar11 = iVar2 != 0;\n        }\n        else {\n            bVar11 = true;\n        }\n        if (bVar11) goto code_r0x00443325;\n        iVar7 = *(*0x20 + -0x30);\n    } while( true );\n}\n",
        "token_count": 1849
    },
    "004433e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004433e0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    uchar unaff_BL;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            *in_RAX = *in_RAX + 1;\n            uVar3 = in_RAX >> 3;\n            uVar5 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar3) >> 0x40, 0);\n            iVar7 = (uVar3 + ((uVar5 + uVar3 >> 1 | CARRY8(uVar5, uVar3) << 0x3f) >> 7) * -0xfb) * 0x40;\n            if (*(iVar7 + 0x581e70) == 0) {\n                return SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar3), 0);\n            }\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = iVar7 + 0x581e70;\n            *(*0x20 + -0x30) = iVar7;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x20) = iVar7 + 0x581e60;\n            *(*0x20 + -0x50) = 0x443474;\n            fcn.0040a360();\n            if (**(*0x20 + -0x10) == 0) {\n                *(*0x20 + -0x50) = 0x443526;\n                uVar4 = fcn.0040a580();\n                return uVar4;\n            }\n            uVar4 = *(*0x20 + -0x18);\n            *(*0x20 + -0x50) = 0x4434a5;\n            iVar7 = fcn.004439a0(*(*0x20 + -0x30));\n            *(*0x20 + -0x28) = iVar7;\n            *(*0x20 + -0x38) = uVar4;\n            if (iVar7 != 0) {\n                LOCK();\n                **(*0x20 + -0x10) = **(*0x20 + -0x10) + -1;\n            }\n            *(*0x20 + -0x50) = 0x4434ce;\n            fcn.0040a580();\n            iVar7 = *(*0x20 + -0x28);\n            if (iVar7 == 0) {\n                return 0;\n            }\n            arg1 = *(iVar7 + 0x20);\n            if (arg1 != 0) {\n                arg1 = *(*0x20 + 0x18);\n                *(*0x20 + -0x50) = 0x4434fb;\n                fcn.004573c0();\n                iVar7 = *(*0x20 + -0x28);\n            }\n            if (*(iVar7 + 0x30) == 0) break;\n            unaff_BL = 0x1a;\n            *(*0x20 + -0x50) = 0x4435c5;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x4435d9;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n    if (*(*0x20 + 0x10) != '\\0') {\n        piVar2 = *(*0x20 + -0x18);\n        do {\n            iVar1 = *piVar2;\n            if (iVar1 == 0) goto code_r0x004435a0;\n            LOCK();\n        } while (iVar1 != *piVar2);\n        *piVar2 = iVar1 + -1;\ncode_r0x004435a0:\n        if (iVar1 != 0) {\n            *(iVar7 + 0x30) = 1;\n        }\n    }\n    *(*0x20 + -0x50) = 0x443552;\n    uVar4 = fcn.00443000(*(*0x20 + 0x18));\n    if ((*(*(*0x20 + -0x28) + 0x30) == 1) && (*(*(unaff_R14 + 0x30) + 0xd8) == 0)) {\n        *(*0x20 + -0x50) = 0x443577;\n        uVar4 = fcn.0045a1a0();\n    }\n    return uVar4;\n}\n",
        "token_count": 1274
    },
    "00443600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00443600(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t *piVar4;\n    int64_t **unaff_RDI;\n    int64_t **arg3;\n    int64_t *arg4;\n    uint64_t uVar5;\n    int64_t *noname_1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00443600:\n    puVar3 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar3 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar4 = arg1 + 1;\n        if (*0x5d3dd0 == 0) {\n            *arg1 = unaff_R14;\n            arg1[3] = unaff_RBX;\n            *(arg1 + 1) = in_XMM15;\n        }\n        else {\n            uVar5 = unaff_RDI & 0xffffffff;\n            *(*0x20 + -0x28) = 0x44364a;\n            fcn.0045c740(arg1, piVar4, uVar5);\n            *(*0x20 + -0x28) = 0x443656;\n            fcn.0045c6e0(arg1, piVar4, uVar5, arg1 + 3);\n            *(*0x20 + -0x28) = 0x443665;\n            fcn.0045c740(arg1, piVar4, uVar5);\n            *(*0x20 + -0x28) = 0x44366d;\n            in_RAX = fcn.0045c740(arg1, piVar4, uVar5);\n            unaff_RDI = uVar5 & 0xffffffff;\n        }\n        arg3 = in_RAX + 8;\n        piVar1 = *(in_RAX + 8);\n        noname_1 = NULL;\n        while (arg4 = piVar1,  arg4 != NULL) {\n            if (unaff_RBX == arg4[3]) {\n                if (unaff_RDI == '\\0') {\n                    if (arg4[9] == 0) {\n                        if (*0x5d3dd0 == 0) {\n                            arg4[8] = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44384b;\n                            fcn.0045c6a0();\n                        }\n                    }\n                    else if (*0x5d3dd0 == 0) {\n                        *(arg4[9] + 0x40) = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x443831;\n                        fcn.0045c6a0();\n                    }\n                    if (*0x5d3dd0 == 0) {\n                        arg4[9] = arg1;\n                        arg1[8] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44386b;\n                        fcn.0045c6a0();\n                        *(*0x20 + -0x28) = 0x443876;\n                        fcn.0045c5a0(arg1, piVar4, arg3, arg4);\n                    }\n                }\n                else {\n                    if (*0x5d3dd0 == 0) {\n                        *arg3 = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x4436d1;\n                        fcn.0045c6a0();\n                    }\n                    *(arg1 + 6) = *(arg4 + 6);\n                    arg1[4] = arg4[4];\n                    if (*0x5d3dd0 == 0) {\n                        arg1[7] = arg4[7];\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x4436fc;\n                        fcn.0045c5a0(arg1, piVar4, arg3, arg4);\n                    }\n                    iVar2 = arg4[2];\n                    if (*0x5d3dd0 == 0) {\n                        arg1[2] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x443717;\n                        iVar2 = fcn.0045c5a0(arg1, piVar4, arg3, arg4);\n                    }\n                    if (*0x5d3dd0 == 0) {\n                        arg1[1] = arg4[1];\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x443732;\n                        iVar2 = fcn.0045c6e0(arg1, piVar4, arg3, arg4);\n                    }\n                    if (iVar2 != 0) {\n                        if (*0x5d3dd0 == 0) {\n                            *(iVar2 + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x443751;\n                            fcn.0045c6a0();\n                        }\n                    }\n                    if (arg1[1] != 0) {\n                        if (*0x5d3dd0 == 0) {\n                            *(arg1[1] + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x443772;\n                            fcn.0045c6a0();\n                        }\n                    }\n                    if (*0x5d3dd0 == 0) {\n                        arg1[8] = arg4;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44378b;\n                        fcn.0045c740(arg1, piVar4, arg3);\n                    }\n                    iVar2 = arg4[9];\n                    if (*0x5d3dd0 == 0) {\n                        arg1[9] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x4437a7;\n                        iVar2 = fcn.0045c5a0(arg1, piVar4, arg3, arg4);\n                    }\n                    if (iVar2 == 0) {\n                        if (*0x5d3dd0 == 0) {\n                            arg1[9] = arg4;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x4437c5;\n                            fcn.0045c740(arg1, piVar4, arg3);\n                        }\n                    }\n                    if (*0x5d3dd0 == 0) {\n                        arg4[7] = 0;\n                        *(arg4 + 1) = in_XMM15;\n                        arg4[9] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x4437f3;\n                        fcn.0045c5a0(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x4437fc;\n                        fcn.0045c5a0(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x443805;\n                        fcn.0045c5a0(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x44380e;\n                        fcn.0045c5a0(arg1, piVar4, arg3, arg4);\n                    }\n                }\n                return;\n            }\n            if (unaff_RBX < arg4[3]) {\n                arg3 = arg4 + 2;\n            }\n            else {\n                arg3 = arg4 + 1;\n            }\n            noname_1 = arg4;\n            piVar1 = *arg3;\n        }\n        unaff_RDI = *(unaff_R14 + 0x30);\n        piVar4 = unaff_RDI[0x1e] + 0xa0761d6478bd642f;\n        uVar5 = piVar4 ^ 0xe7037ed1a0b428db;\n        unaff_RDI[0x1e] = piVar4;\n        *(arg1 + 6) = SUB164(ZEXT816(piVar4) * ZEXT816(uVar5), 0) ^ SUB164(ZEXT816(piVar4) * ZEXT816(uVar5) >> 0x40, 0)\n                      | 1;\n        if (*0x5d3dd0 == 0) {\n            arg1[7] = noname_1;\n            *arg3 = arg1;\n        }\n        else {\n            *(*0x20 + -0x28) = 0x4438dd;\n            unaff_RDI = arg3;\n            fcn.0045c6c0(arg1, noname_1, arg3, uVar5);\n            *(*0x20 + -0x28) = 0x4438e5;\n            arg3 = unaff_RDI;\n            fcn.0045c6a0();\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = in_RAX;\n        do {\n            iVar2 = arg1[7];\n            if ((iVar2 == 0) || (*(iVar2 + 0x30) <= *(arg1 + 6))) {\n                return;\n            }\n            if (*(iVar2 + 0x10) == arg1) {\n                *(*0x20 + -0x28) = 0x443932;\n                fcn.00443e20(arg1, iVar2, arg3, uVar5);\n            }\n            else {\n                if (*(iVar2 + 8) != arg1) goto code_r0x0044393e;\n                *(*0x20 + -0x28) = 0x443925;\n                fcn.00443ce0(arg1, iVar2, arg3, uVar5);\n            }\n            arg1 = *(*0x20 + 0x18);\n        } while( true );\n    }\n    goto code_r0x00443952;\ncode_r0x0044393e:\n    unaff_RBX = 0x4f9e88;\n    *(*0x20 + -0x28) = 0x443951;\n    in_RAX = fcn.00432920();\ncode_r0x00443952:\n    *(puVar3 + 8) = in_RAX;\n    *(puVar3 + 0x10) = unaff_RBX;\n    *(puVar3 + 0x18) = arg1;\n    puVar3[0x20] = unaff_RDI;\n    *(puVar3 + -8) = 0x44396b;\n    fcn.0045a360();\n    in_RAX = *(puVar3 + 8);\n    unaff_RBX = *(puVar3 + 0x10);\n    arg1 = *(puVar3 + 0x18);\n    unaff_RDI = puVar3[0x20];\n    *0x20 = puVar3;\n    goto code_r0x00443600;\n}\n",
        "token_count": 2588
    },
    "004439a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004439a0(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int64_t *arg2;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t *piVar4;\n    int64_t noname_0;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    arg2 = in_RAX + 8;\n    noname_0 = *(in_RAX + 8);\n    piVar4 = arg2;\n    while( true ) {\n        if (noname_0 == 0) {\n            return 0;\n        }\n        if (unaff_RBX == *(noname_0 + 0x18)) break;\n        if (unaff_RBX < *(noname_0 + 0x18)) {\n            piVar4 = noname_0 + 0x10;\n        }\n        else {\n            piVar4 = noname_0 + 8;\n        }\n        noname_0 = *piVar4;\n        param_3 = unaff_RBX;\n    }\n    if (*(noname_0 + 0x20) == 0) {\n        uStack56 = 0;\n    }\n    else {\n        fcn.0045c420(noname_0, arg2);\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n    }\n    iVar3 = *(noname_0 + 0x40);\n    if (iVar3 == 0) {\n        while( true ) {\n            while (*(noname_0 + 8) != 0) {\n                if ((*(noname_0 + 0x10) != 0) &&\n                   (uVar2 = *(*(noname_0 + 0x10) + 0x30),  puVar1 = *(noname_0 + 8) + 0x30, \n                   uVar2 <= *puVar1 && *puVar1 != uVar2)) goto code_r0x00443c27;\n                fcn.00443ce0(noname_0, arg2, param_3, param_4);\n            }\n            if (*(noname_0 + 0x10) == 0) break;\ncode_r0x00443c27:\n            fcn.00443e20(noname_0, arg2, param_3, param_4);\n        }\n        iVar3 = *(noname_0 + 0x38);\n        if (iVar3 == 0) {\n            if (*0x5d3dd0 == 0) {\n                *(in_RAX + 8) = 0;\n            }\n            else {\n                fcn.0045c6c0(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*(iVar3 + 0x10) == noname_0) {\n            if (*0x5d3dd0 == 0) {\n                *(iVar3 + 0x10) = 0;\n            }\n            else {\n                fcn.0045c6c0(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x5d3dd0 == 0) {\n            *(iVar3 + 8) = 0;\n        }\n        else {\n            fcn.0045c6c0(noname_0, 0, param_3, param_4);\n        }\n    }\n    else {\n        if (*0x5d3dd0 == 0) {\n            *piVar4 = iVar3;\n        }\n        else {\n            fcn.0045c700(noname_0, arg2, param_3, param_4);\n        }\n        *(iVar3 + 0x30) = *(noname_0 + 0x30);\n        if (*0x5d3dd0 == 0) {\n            *(iVar3 + 0x38) = *(noname_0 + 0x38);\n        }\n        else {\n            fcn.0045c6c0(noname_0, *(noname_0 + 0x38), param_3, param_4);\n        }\n        iVar5 = *(noname_0 + 0x10);\n        if (*0x5d3dd0 == 0) {\n            *(iVar3 + 0x10) = iVar5;\n        }\n        else {\n            fcn.0045c6c0(noname_0, iVar5, param_3, param_4);\n        }\n        if (iVar5 != 0) {\n            if (*0x5d3dd0 == 0) {\n                *(iVar5 + 0x38) = iVar3;\n            }\n            else {\n                fcn.0045c700(noname_0, iVar5, param_3, param_4);\n            }\n        }\n        iVar5 = *(noname_0 + 8);\n        if (*0x5d3dd0 == 0) {\n            *(iVar3 + 8) = iVar5;\n        }\n        else {\n            fcn.0045c6c0(noname_0, iVar5, param_3, param_4);\n        }\n        if (iVar5 != 0) {\n            if (*0x5d3dd0 == 0) {\n                *(iVar5 + 0x38) = iVar3;\n            }\n            else {\n                fcn.0045c700(noname_0, iVar5, param_3, param_4);\n            }\n        }\n        if (*(iVar3 + 0x40) == 0) {\n            if (*0x5d3dd0 == 0) {\n                *(iVar3 + 0x48) = 0;\n            }\n            else {\n                fcn.0045c6c0(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x5d3dd0 == 0) {\n            *(iVar3 + 0x48) = *(noname_0 + 0x48);\n        }\n        else {\n            fcn.0045c6c0(noname_0, *(noname_0 + 0x48), param_3, param_4);\n        }\n        *(iVar3 + 0x20) = uStack56;\n        if (*0x5d3dd0 == 0) {\n            *(noname_0 + 0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            uVar6 = 0;\n            fcn.0045c6c0(noname_0, 0, param_3, param_4);\n            fcn.0045c6c0(noname_0, uVar6, param_3, param_4);\n        }\n    }\n    if (*0x5d3dd0 == 0) {\n        *(noname_0 + 0x38) = 0;\n        *(noname_0 + 0x18) = 0;\n        *(noname_0 + 8) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    }\n    else {\n        uVar6 = 0;\n        fcn.0045c6c0(noname_0, 0, param_3, param_4);\n        fcn.0045c700(noname_0, uVar6, param_3, param_4);\n        fcn.0045c6c0(noname_0, uVar6, param_3, param_4);\n        fcn.0045c6c0(noname_0, uVar6, param_3, param_4);\n    }\n    *(noname_0 + 0x30) = 0;\n    return noname_0;\n}\n",
        "token_count": 1908
    },
    "00443ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00443ce0(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1 = *(unaff_RBX + 8);\n            arg2 = *(unaff_RBX + 0x38);\n            iVar1 = *(arg1 + 0x10);\n            if (*0x5d3dd0 == 0) {\n                *(arg1 + 0x10) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg1;\n                *(unaff_RBX + 8) = iVar1;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x443d25;\n                fcn.0045c6e0(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x443d2e;\n                fcn.0045c6a0();\n                *(*0x20 + -0x20) = 0x443d37;\n                in_RAX = fcn.0045c700(arg1, arg2, arg3, arg4);\n            }\n            if (iVar1 != 0) {\n                if (*0x5d3dd0 == 0) {\n                    *(iVar1 + 0x38) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x443d54;\n                    in_RAX = fcn.0045c6e0(arg1, arg2, arg3, arg4);\n                }\n            }\n            if (*0x5d3dd0 == 0) {\n                *(arg1 + 0x38) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x443d6c;\n                in_RAX = fcn.0045c6c0(arg1, arg2, arg3, arg4);\n            }\n            if (arg2 == 0) {\n                if (*0x5d3dd0 == 0) {\n                    *(in_RAX + 8) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x443dcd;\n                fcn.0045c6a0();\n                return;\n            }\n            if (*(arg2 + 0x10) == unaff_RBX) {\n                if (*0x5d3dd0 == 0) {\n                    *(arg2 + 0x10) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x443d91;\n                fcn.0045c6a0();\n                return;\n            }\n            if (*(arg2 + 8) == unaff_RBX) {\n                if (*0x5d3dd0 == 0) {\n                    *(arg2 + 8) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x443db1;\n                    fcn.0045c6a0();\n                }\n                return;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x20) = 0x443de8;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x443df8;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 986
    },
    "00443e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00443e20(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1 = *(unaff_RBX + 0x10);\n            arg2 = *(unaff_RBX + 0x38);\n            iVar1 = *(arg1 + 8);\n            if (*0x5d3dd0 == 0) {\n                *(arg1 + 8) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg1;\n                *(unaff_RBX + 0x10) = iVar1;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x443e65;\n                fcn.0045c6e0(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x443e6e;\n                fcn.0045c6a0();\n                *(*0x20 + -0x20) = 0x443e77;\n                in_RAX = fcn.0045c700(arg1, arg2, arg3, arg4);\n            }\n            if (iVar1 != 0) {\n                if (*0x5d3dd0 == 0) {\n                    *(iVar1 + 0x38) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x443e94;\n                    in_RAX = fcn.0045c6e0(arg1, arg2, arg3, arg4);\n                }\n            }\n            if (*0x5d3dd0 == 0) {\n                *(arg1 + 0x38) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x443eac;\n                in_RAX = fcn.0045c6c0(arg1, arg2, arg3, arg4);\n            }\n            if (arg2 == 0) {\n                if (*0x5d3dd0 == 0) {\n                    *(in_RAX + 8) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x443f0d;\n                fcn.0045c6a0();\n                return;\n            }\n            if (*(arg2 + 0x10) == unaff_RBX) {\n                if (*0x5d3dd0 == 0) {\n                    *(arg2 + 0x10) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x443ed1;\n                fcn.0045c6a0();\n                return;\n            }\n            if (*(arg2 + 8) == unaff_RBX) {\n                if (*0x5d3dd0 == 0) {\n                    *(arg2 + 8) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x443ef1;\n                    fcn.0045c6a0();\n                }\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x443f28;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x443f38;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 986
    },
    "00444120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00444120(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_RBX;\n    \n    if (*(unaff_RBX + 0xf8) < *0x56a490) {\n        return 0;\n    }\n    if (*(unaff_RBX + 0xf8) <= *0x56a498) {\n        uVar1 = *in_RAX;\n        if (uVar1 < 0xc000008f) {\n            if (uVar1 < 0xc0000006) {\n                if ((uVar1 != 0x80000003) && (uVar1 != 0xc0000005)) {\n                    return 0;\n                }\n            }\n            else if (((uVar1 != 0xc000001d) && (uVar1 != 0xc000008d)) && (uVar1 != 0xc000008e)) {\n                return 0;\n            }\n        }\n        else if (uVar1 < 0xc0000092) {\n            if ((uVar1 != 0xc000008f) && (uVar1 != 0xc0000091)) {\n                return 0;\n            }\n        }\n        else if (((uVar1 != 0xc0000093) && (uVar1 != 0xc0000094)) && (uVar1 != 0xc0000095)) {\n            return 0;\n        }\n        if ((*(arg1 + 0xb7) != '\\0') || (cVar2 = fcn.00433a60(),  cVar2 != '\\0')) {\n            fcn.00444400(arg1);\n        }\n        *(arg1 + 0xf0) = *in_RAX;\n        *(arg1 + 0x110) = *(in_RAX + 8);\n        *(arg1 + 0x118) = *(in_RAX + 10);\n        *(arg1 + 0x120) = *(unaff_RBX + 0xf8);\n        if ((*(unaff_RBX + 0xf8) != NULL) && (*(unaff_RBX + 0xf8) != fcn.0045da40)) {\n            puVar3 = *(unaff_RBX + 0x98) + -8;\n            *(unaff_RBX + 0x98) = puVar3;\n            *puVar3 = *(unaff_RBX + 0xf8);\n        }\n        *(unaff_RBX + 0xf8) = 0x45c580;\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 592
    },
    "004443a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004443a0(ulong arg1)\n\n{\n    if ((*0x5d3b2e == '\\0') && (*0x5d3b2c == '\\0')) {\n        if (*0x5d3b30 != '\\0') {\n            return 0;\n        }\n        fcn.00444400(arg1);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 90
    },
    "00444400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00444400(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    ulong *unaff_R14;\n    ulong *puVar3;\n    \n    puVar3 = unaff_R14;\n    if (*0x5d3b88 != 0) {\n        fcn.0042eec0();\n    }\n    *0x5d3b88 = 1;\n    *puVar3 = 0;\n    puVar3[2] = 0x13a0;\n    puVar3[3] = 0x13a0;\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434a60();\n    fcn.00434fa0();\n    fcn.00434a60();\n    fcn.00434fa0();\n    fcn.00434a60();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    piVar1 = puVar3[6];\n    if (((*(piVar1 + 0x1d) != '\\0') && (*piVar1 == arg1)) && (piVar1[0x12] != 0)) {\n        if (*0x5d3b2d != '\\0') {\n            fcn.00434840();\n            fcn.00435140();\n            fcn.004348c0();\n        }\n        arg1 = *(puVar3[6] + 0x90);\n    }\n    fcn.00434840();\n    fcn.00434aa0();\n    fcn.004348c0();\n    *(puVar3[6] + 0xc4) = 1;\n    *(puVar3[6] + 0x98) = arg1;\n    uVar2 = *0x564468 >> 2;\n    if (*(unaff_R14[6] + 0xf9) != 0) {\n        uVar2 = *(unaff_R14[6] + 0xf9);\n    }\n    if (uVar2 != 0) {\n        fcn.00453200(0);\n        fcn.00454180();\n        fcn.004069c0();\n    }\n    fcn.0042eec0();\n    return;\n}\n",
        "token_count": 562
    },
    "00444a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00444a20(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= arg1) {\n                uVar2 = *in_RAX * unaff_RBX;\n                uVar4 = uVar2;\n                goto code_r0x00444a8a;\n            }\n            uVar4 = *in_RAX;\n            *(*0x20 + -0x18) = uVar4;\n            auVar1 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n            uVar2 = SUB168(auVar1, 0);\n            if (((SUB168(auVar1 >> 0x40, 0) == 0) && (uVar2 < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                uVar4 = arg1 * *(*0x20 + -0x18);\ncode_r0x00444a8a:\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + -0x20) = uVar4;\n                if (in_RAX[1] == 0) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x48) = 0x444aa9;\n                    iVar3 = fcn.0040ba40(0);\n                    uVar4 = *(*0x20 + -0x20);\n                    if (uVar4 < *(*0x20 + -0x28)) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x444acc;\n                        fcn.0045d0c0(uVar4, iVar3 + uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x444ae5;\n                    iVar3 = fcn.0040ba40(1);\n                    uVar4 = *(*0x20 + -0x20);\n                    if ((uVar4 != 0) && (*0x5d3dd0 != '\\0')) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x444b07;\n                        fcn.00412120(uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x48) = 0x444b25;\n                fcn.0045d380(uVar4);\n                return *(*0x20 + -0x10);\n            }\n            unaff_RBX = 0x4f9e98;\n            *(*0x20 + -0x48) = 0x444b48;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x444b65;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1019
    },
    "00444c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00444c60(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    uint64_t uVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t arg1_00;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t *piVar10;\n    int64_t *unaff_RDI;\n    char *pcVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (unaff_RDI <= unaff_RSI) break;\n            unaff_RBX = 0x4f9d78;\n            *(*0x20 + -0x68) = 0x4452f8;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + 0x28) = unaff_RSI;\n        *(puVar9 + -8) = 0x445317;\n        fcn.0045a360();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        unaff_RSI = *(puVar9 + 0x28);\n        *0x20 = puVar9;\n    } while( true );\n    piVar6 = *in_RAX;\n    if (piVar6 == NULL) {\n        return 0x5d3d58;\n    }\n    pcVar11 = unaff_RDI * 2;\n    piVar7 = unaff_RSI;\n    if ((unaff_RSI <= pcVar11) && (piVar7 = pcVar11,  0xff < unaff_RDI)) {\n        for (; 0 < unaff_RDI; unaff_RDI = unaff_RDI + (unaff_RDI + ((unaff_RDI + 0x60 >> 0x3f) >> 0x3e) + 0x300 >> 2)) {\n            if (unaff_RSI <= unaff_RDI) {\n                piVar7 = unaff_RDI;\n                pcVar11 = unaff_RDI;\n                if (0 < unaff_RDI) goto code_r0x00444cce;\n                break;\n            }\n        }\n        piVar7 = unaff_RSI;\n        pcVar11 = unaff_RSI;\n    }\ncode_r0x00444cce:\n    do {\n        piVar8 = piVar7;\n        if (piVar6 == 0x1) {\n            if (0x7fff < piVar8) {\n                piVar6 = piVar8;\n                if (piVar8 <= piVar8 + 0x400) {\n                    piVar6 = piVar8 + 0x1fffU & 0xffffffffffffe000;\n                }\ncode_r0x00444d99:\n                bVar12 = 0x1000000000000 < piVar8;\n                pcVar11 = arg1;\n                piVar7 = piVar6;\n                goto code_r0x004450c9;\n            }\n            if (0x3f8 < piVar8) {\n                piVar6 = piVar8 - 0x381U >> 7;\n                if (piVar6 < 0xf9) {\n                    pcVar11 = \n                    \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                    ;\n                    piVar6 = *(piVar6 + 0xad10c);\n                    if (piVar6 < 0x44) {\n                        piVar6 = *(piVar6 * 2 + 0x567a20);\n                        goto code_r0x00444d99;\n                    }\n                    goto code_r0x00445259;\n                }\n                goto code_r0x00445266;\n            }\n            piVar6 = piVar8 + 7U >> 3;\n            if (piVar6 < 0x81) {\n                pcVar11 = 0x5678e0;\n                piVar6 = *(piVar6 + 0xacf1c);\n                if (piVar6 < 0x44) {\n                    piVar6 = *(piVar6 * 2 + 0x567a20);\n                    goto code_r0x00444d99;\n                }\n                goto code_r0x00445273;\n            }\n        }\n        else {\n            if (piVar6 == 0x8) {\n                piVar6 = piVar8 * 8;\n                if (0x7fff < piVar6) {\n                    if (piVar6 <= piVar6 + 0x400) {\n                        piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                    }\ncode_r0x00444e74:\n                    bVar12 = 0x200000000000 < piVar8;\n                    pcVar11 = arg1 << 3;\n                    unaff_RSI = unaff_RSI << 3;\n                    piVar7 = piVar6 >> 3;\n                    goto code_r0x004450c9;\n                }\n                if (0x3f8 < piVar6) {\n                    piVar10 = piVar6 - 0x381U >> 7;\n                    if (piVar10 < 0xf9) {\n                        pcVar11 = \n                        \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        ;\n                        piVar10 = *(piVar10 + 0xad10c);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x567a20);\n                            goto code_r0x00444e74;\n                        }\n                        goto code_r0x00445225;\n                    }\n                    goto code_r0x00445232;\n                }\n                piVar10 = piVar6 + 7U >> 3;\n                piVar6 = piVar8;\n                if (piVar10 < 0x81) {\n                    pcVar11 = 0x5678e0;\n                    piVar10 = *(piVar10 + 0xacf1c);\n                    if (piVar10 < 0x44) {\n                        piVar6 = *(piVar10 * 2 + 0x567a20);\n                        goto code_r0x00444e74;\n                    }\n                    goto code_r0x0044523f;\n                }\n            }\n            else {\n                if ((piVar6 & piVar6 - 1U) == 0) {\n                    piVar7 = NULL;\n                    if (piVar6 != NULL) {\n                        for (; (piVar6 >> piVar7 & 1) == 0; piVar7 = piVar7 + 1) {\n                        }\n                    }\n                    uVar5 = piVar7;\n                    pcVar11 = arg1 << (uVar5 & 0x3f);\n                    unaff_RSI = unaff_RSI << (uVar5 & 0x3f);\n                    piVar6 = piVar8 << (uVar5 & 0x3f);\n                    if (0x7fff < piVar6) {\n                        if (piVar6 <= piVar6 + 0x400) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x00444f94:\n                        bVar12 = 0x1000000000000U >> (uVar5 & 0x3f) < piVar8;\n                        piVar7 = piVar6 >> (uVar5 & 0x3f);\ncode_r0x004450c9:\n                        piVar10 = 0x1000000000000;\n                        if ((!bVar12) && (piVar6 < 0x1000000000001)) {\n                            *(*0x20 + -0x10) = unaff_RBX;\n                            *(*0x20 + -0x38) = pcVar11;\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x40) = piVar7;\n                            if (in_RAX[1] == 0) {\n                                *(*0x20 + -0x30) = piVar6;\n                                *(*0x20 + -0x48) = unaff_RSI;\n                                *(*0x20 + -0x68) = 0x44510c;\n                                uVar4 = fcn.0040ba40(0);\n                                *(*0x20 + -0x18) = uVar4;\n                                *(*0x20 + -0x68) = 0x445129;\n                                fcn.0045d0c0();\n                                arg1_00 = *(*0x20 + -0x38);\n                                uVar4 = *(*0x20 + -0x18);\n                            }\n                            else {\n                                *(*0x20 + 8) = in_RAX;\n                                *(*0x20 + -0x68) = 0x44514a;\n                                uVar4 = fcn.0040ba40(1);\n                                arg1_00 = *(*0x20 + -0x38);\n                                if ((arg1_00 != 0) && (*0x5d3dd0 != '\\0')) {\n                                    *(*0x20 + -0x18) = uVar4;\n                                    iVar1 = **(*0x20 + 8);\n                                    iVar2 = (*(*0x20 + 8))[1];\n                                    *(*0x20 + -0x68) = 0x44517b;\n                                    fcn.00412120((arg1_00 - iVar1) + iVar2);\n                                    uVar4 = *(*0x20 + -0x18);\n                                    arg1_00 = *(*0x20 + -0x38);\n                                }\n                            }\n                            *(*0x20 + -0x18) = uVar4;\n                            *(*0x20 + -0x68) = 0x445194;\n                            fcn.0045d380(arg1_00);\n                            return *(*0x20 + -0x18);\n                        }\n                        unaff_RBX = 0x4f9d78;\n                        *(*0x20 + -0x68) = 0x4451c5;\n                        fcn.00432920();\n                        piVar7 = piVar6;\n                        piVar8 = arg1;\n                        in_RAX = piVar10;\ncode_r0x004451c5:\n                        *(*0x20 + -0x68) = 0x4451cf;\n                        fcn.0045ca40(0x44);\ncode_r0x004451cf:\n                        *(*0x20 + -0x68) = 0x4451d9;\n                        fcn.0045ca60(0xf9);\ncode_r0x004451d9:\n                        *(*0x20 + -0x68) = 0x4451e5;\n                        fcn.0045ca40(0x44);\n                        piVar10 = piVar8;\n                        goto code_r0x004451e5;\n                    }\n                    if (0x3f8 < piVar6) {\n                        piVar10 = piVar6 - 0x381U >> 7;\n                        if (piVar10 < 0xf9) {\n                            piVar10 = *(piVar10 + 0xad10c);\n                            if (piVar10 < 0x44) {\n                                piVar6 = *(piVar10 * 2 + 0x567a20);\n                                goto code_r0x00444f94;\n                            }\n                            goto code_r0x004451ef;\n                        }\n                        goto code_r0x004451fc;\n                    }\n                    piVar10 = piVar6 + 7U >> 3;\n                    if (piVar10 < 0x81) {\n                        piVar10 = *(piVar10 + 0xacf1c);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x567a20);\n                            goto code_r0x00444f94;\n                        }\n                        goto code_r0x00445209;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar6;\n                    piVar6 = piVar8 * piVar6;\n                    piVar7 = *(*0x20 + -0x20);\n                    pcVar11 = arg1 * piVar7;\n                    unaff_RSI = unaff_RSI * piVar7;\n                    if (0x7fff < piVar6) {\n                        if (piVar6 < piVar6 + 0x400 || piVar6 - (piVar6 + 0x400) == 0) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x00445095:\n                        *(*0x20 + -0x20) = piVar6 / piVar7;\n                        bVar12 = SUB168(ZEXT816(piVar8) * ZEXT816(piVar7) >> 0x40, 0) != 0;\n                        piVar7 = *(*0x20 + -0x20);\n                        goto code_r0x004450c9;\n                    }\n                    if (0x3f8 < piVar6) {\n                        uVar3 = piVar6 - 0x381U >> 7;\n                        if (uVar3 < 0xf9) {\n                            if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                [uVar3] < 0x44) {\n                                piVar6 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                           [uVar3] * 2 + 0x567a20);\n                                goto code_r0x00445095;\n                            }\n                            goto code_r0x004451c5;\n                        }\n                        goto code_r0x004451cf;\n                    }\n                    uVar3 = piVar6 + 7U >> 3;\n                    piVar10 = piVar8;\n                    if (uVar3 < 0x81) {\n                        uVar3 = *(uVar3 + 0x5678e0);\n                        if (uVar3 < 0x44) {\n                            piVar6 = *(uVar3 * 2 + 0x567a20);\n                            goto code_r0x00445095;\n                        }\n                        goto code_r0x004451d9;\n                    }\ncode_r0x004451e5:\n                    pcVar11 = in_RAX;\n                    *(*0x20 + -0x68) = 0x4451ef;\n                    fcn.0045ca60(0x81);\ncode_r0x004451ef:\n                    *(*0x20 + -0x68) = 0x4451fc;\n                    fcn.0045ca40(0x44);\ncode_r0x004451fc:\n                    *(*0x20 + -0x68) = 0x445209;\n                    fcn.0045ca60(0xf9);\ncode_r0x00445209:\n                    *(*0x20 + -0x68) = 0x445216;\n                    fcn.0045ca40(0x44);\n                }\n                *(*0x20 + -0x68) = 0x445225;\n                fcn.0045ca60(0x81);\n                piVar8 = piVar7;\ncode_r0x00445225:\n                *(*0x20 + -0x68) = 0x445232;\n                fcn.0045ca40(0x44);\ncode_r0x00445232:\n                *(*0x20 + -0x68) = 0x44523f;\n                fcn.0045ca60(0xf9);\ncode_r0x0044523f:\n                *(*0x20 + -0x68) = 0x44524c;\n                fcn.0045ca40(0x44);\n                piVar6 = piVar8;\n            }\n            *(*0x20 + -0x68) = 0x445259;\n            fcn.0045ca60(0x81);\n            piVar8 = piVar10;\ncode_r0x00445259:\n            *(*0x20 + -0x68) = 0x445266;\n            fcn.0045ca40(0x44);\ncode_r0x00445266:\n            *(*0x20 + -0x68) = 0x445273;\n            fcn.0045ca60(0xf9);\ncode_r0x00445273:\n            *(*0x20 + -0x68) = 0x445285;\n            fcn.0045ca40(0x44);\n        }\n        arg1 = 0x81;\n        *(*0x20 + -0x68) = 0x445292;\n        in_RAX = fcn.0045ca60(0x81);\n        piVar7 = pcVar11;\n        unaff_RSI = piVar8;\n    } while( true );\n}\n",
        "token_count": 4193
    },
    "00445340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong * fcn.00445340(void)\n\n{\n    uint8_t in_AL;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_AL < 2) {\n                iVar3 = in_AL * 0x40;\n                iVar1 = *(iVar3 + 0x5d4148);\n                if (iVar1 != 0) goto code_r0x004453de;\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar3 + 0x5d4148;\n                *(*0x20 + -0x40) = 0x4453a6;\n                iVar1 = fcn.00424240();\n                if (iVar1 != 0) {\n                    if (*(iVar1 + 0x60) == 0) {\n                        if (*(iVar1 + 0x28) == 0) {\n                            *(iVar1 + 0x68) = 0x2000 << (*(*0x20 + 8) & 0x3f);\n                            puVar2 = NULL;\n                            do {\n                                if (0x7fff < puVar2) {\n                                    *(*0x20 + -0x20) = iVar1;\n                                    *(*0x20 + -0x40) = 0x44546f;\n                                    fcn.004255c0();\n                                    iVar1 = *(*0x20 + -0x20);\ncode_r0x004453de:\n                                    puVar2 = *(iVar1 + 0x28);\n                                    if (puVar2 != NULL) {\n                                        *(iVar1 + 0x28) = *puVar2;\n                                        *(iVar1 + 0x60) = *(iVar1 + 0x60) + 1;\n                                        if (*(iVar1 + 0x28) == 0) {\n                                            *(*0x20 + -0x10) = puVar2;\n                                            *(*0x20 + -0x40) = 0x445415;\n                                            fcn.00425440();\n                                            puVar2 = *(*0x20 + -0x10);\n                                        }\n                                        return puVar2;\n                                    }\n                                    *(*0x20 + -0x40) = 0x445438;\n                                    iVar1 = fcn.004330a0();\n                                }\n                                puVar4 = *(iVar1 + 0x18) + puVar2;\n                                *puVar4 = *(iVar1 + 0x28);\n                                *(iVar1 + 0x28) = puVar4;\n                                puVar2 = puVar2 + *(iVar1 + 0x68);\n                            } while( true );\n                        }\n                        *(*0x20 + -0x40) = 0x44548f;\n                        fcn.004330a0();\n                    }\n                    *(*0x20 + -0x40) = 0x4454a5;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x40) = 0x4454b6;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x40) = 0x4454c5;\n            in_AL = fcn.0045ca40(2);\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x4454cf;\n        fcn.0045a360();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 897
    },
    "004454e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004454e0(void)\n\n{\n    int16_t iVar1;\n    ulong *in_RAX;\n    uint64_t uVar2;\n    uint8_t unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = in_RAX + 0x100000000000 >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar4 = *(*(*(uVar2 * 8 + 0x5a5f90) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n                         (in_RAX >> 0xd & 0x1ff) * 8);\n                if (*(iVar4 + 99) == '\\x02') {\n                    *(*0x20 + -0x18) = iVar4;\n                    if (*(iVar4 + 0x28) == 0) {\n                        if (unaff_BL < 2) {\n                            *(*0x20 + 0x10) = unaff_BL;\n                            *(*0x20 + -0x10) = in_RAX;\n                            *(*0x20 + -0x38) = 0x445596;\n                            fcn.004255c0(0x5d4140);\n                            unaff_BL = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + -0x10);\n                            iVar4 = *(*0x20 + -0x18);\n                            goto code_r0x004455a5;\n                        }\n                    }\n                    else {\ncode_r0x004455a5:\n                        *in_RAX = *(iVar4 + 0x28);\n                        *(iVar4 + 0x28) = in_RAX;\n                        iVar1 = *(iVar4 + 0x60);\n                        *(iVar4 + 0x60) = iVar1 + -1;\n                        if (*0x5d3b6c != 0) {\n                            return;\n                        }\n                        if (iVar1 != 1) {\n                            return;\n                        }\n                        if (unaff_BL < 2) {\n                            *(*0x20 + -0x38) = 0x4455f3;\n                            fcn.00425440(0x5d4140);\n                            *(*(*0x20 + -0x18) + 0x28) = 0;\n                            *(*0x20 + -0x38) = 0x445611;\n                            fcn.00425020(1);\n                            return;\n                        }\n                        *(*0x20 + -0x38) = 0x445625;\n                        fcn.0045ca40(2);\n                    }\n                    *(*0x20 + -0x38) = 0x44562f;\n                    fcn.0045ca40(2);\n                }\n                unaff_BL = 0x21;\n                *(*0x20 + -0x38) = 0x445645;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x38) = 0x445652;\n            in_RAX = fcn.0045ca60(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        *(puVar3 + -8) = 0x445665;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 906
    },
    "00445680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00445680(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = unaff_BL;\n            if (uVar4 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x10) = uVar4 * 0x40 + 0x5d4140;\n                *(*0x20 + -0x40) = 0x4456d1;\n                fcn.0040a360();\n                uVar4 = 0;\n                puVar3 = NULL;\n                while( true ) {\n                    *(*0x20 + -0x28) = uVar4;\n                    *(*0x20 + -0x20) = puVar3;\n                    if (0x3fff < uVar4) break;\n                    *(*0x20 + -0x40) = 0x4456e5;\n                    puVar3 = fcn.00445340();\n                    *puVar3 = *(*0x20 + -0x20);\n                    uVar4 = (0x2000 << (*(*0x20 + 0x10) & 0x3f)) + *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = 0x445734;\n                fcn.0040a580();\n                iVar1 = *(*0x20 + 8);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar1 + 0x468 + iVar2 * 0x10) = *(*0x20 + -0x20);\n                *(iVar1 + 0x470 + iVar2 * 0x10) = *(*0x20 + -0x28);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x445775;\n            in_RAX = fcn.0045ca40(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x445785;\n        fcn.0045ea60();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 700
    },
    "004457a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004457a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_BL;\n            if (uVar2 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_BL;\n                iVar4 = uVar2 * 0x10;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x28) = *(in_RAX + 0x468 + iVar4);\n                *(*0x20 + -0x20) = *(in_RAX + 0x470 + iVar4);\n                *(*0x20 + -0x10) = uVar2 * 0x40 + 0x5d4140;\n                *(*0x20 + -0x40) = 0x445814;\n                fcn.0040a360();\n                puVar3 = *(*0x20 + -0x28);\n                uVar2 = *(*0x20 + -0x20);\n                while (*(*0x20 + -0x20) = uVar2,  0x4000 < uVar2) {\n                    *(*0x20 + -0x28) = *puVar3;\n                    *(*0x20 + -0x40) = 0x445837;\n                    fcn.004454e0();\n                    puVar3 = *(*0x20 + -0x28);\n                    uVar2 = *(*0x20 + -0x20) - (0x2000 << (*(*0x20 + 0x10) & 0x3f));\n                }\n                *(*0x20 + -0x28) = puVar3;\n                *(*0x20 + -0x40) = 0x44586f;\n                fcn.0040a580();\n                iVar4 = *(*0x20 + -0x18);\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x468 + iVar4) = *(*0x20 + -0x28);\n                *(iVar1 + 0x470 + iVar4) = *(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x4458aa;\n            in_RAX = fcn.0045ca40(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x4458b9;\n        fcn.0045ea60();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 777
    },
    "004458e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004458e0(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045ea60();\n    }\n    for (uVar1 = 0; uVar1 < 2; uVar1 = uVar1 + 1) {\n        fcn.0040a360();\n        iVar2 = uVar1 * 0x10;\n        puVar3 = *(in_RAX + 0x468 + iVar2);\n        while (puVar3 != NULL) {\n            puVar3 = *puVar3;\n            fcn.004454e0();\n        }\n        *(in_RAX + 0x468 + iVar2) = 0;\n        *(in_RAX + 0x470 + iVar2) = 0;\n        fcn.0040a580();\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "004459e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.004459e0(void)\n\n{\n    uint32_t uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = in_RAX;\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar12 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar8 = *(unaff_R14 + 0x30);\n            if (*piVar8 == unaff_R14) {\n                uVar7 = uVar1 - 1;\n                if ((uVar1 - 1 & uVar1) == 0) {\n                    if (*0x5d3fe8 != 0) {\n                        uVar6 = -*0x5d3cd8;\n                        piVar8 = (*0x5d3cd8 + (in_RAX & 0xffffffff)) - 1 & uVar6;\n                        *(*0x20 + -0x18) = piVar8 & 0xffffffff;\n                        *(*0x20 + -0x78) = 0x445a6c;\n                        puVar2 = fcn.00415420();\n                        if (puVar2 != NULL) {\n                            return puVar2;\n                        }\n                        uVar11 = 0x1a;\n                        *(*0x20 + -0x78) = 0x445a95;\n                        fcn.004330a0();\n                        goto code_r0x00445a95;\n                    }\n                    *(*0x20 + 8) = uVar1;\n                    if (0x7fff < uVar1) {\n                        piVar8 = in_RAX & 0xffffffff;\n                        uVar7 = 0;\n                        uVar6 = piVar8 >> 0xd;\n                        uVar11 = uVar6;\n                        for (; 1 < uVar6; uVar6 = uVar6 >> 1) {\ncode_r0x00445a95:\n                            uVar7 = uVar7 + 1;\n                        }\n                        *(*0x20 + -0x18) = uVar11;\n                        *(*0x20 + -0x20) = piVar8;\n                        *(*0x20 + -0x40) = uVar7;\n                        *(*0x20 + -0x78) = 0x445ac5;\n                        fcn.0040a360();\n                        if (*(*0x20 + -0x40) < 0x23) {\n                            iVar3 = *(*(*0x20 + -0x40) * 0x10 + 0x5d4a48);\n                            if (iVar3 == 0) {\n                                uVar4 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x28) = iVar3;\n                                *(*0x20 + -0x78) = 0x445af9;\n                                fcn.00425440();\n                                uVar4 = *(*0x20 + -0x28);\n                            }\n                            *(*0x20 + -0x48) = uVar4;\n                            *(*0x20 + -0x78) = 0x445b11;\n                            fcn.0040a580();\n                            iVar3 = *(*0x20 + -0x48);\n                            if (iVar3 == 0) {\n                                *(*0x20 + -0x78) = 0x445b31;\n                                iVar3 = fcn.00424240(1);\n                                if (iVar3 == 0) {\n                                    uVar11 = 0xd;\n                                    *(*0x20 + -0x78) = 0x445b6e;\n                                    fcn.004330a0();\n                                    goto code_r0x00445b6e;\n                                }\n                                *(iVar3 + 0x68) = *(*0x20 + -0x20);\n                            }\n                            return *(iVar3 + 0x18);\n                        }\ncode_r0x00445b6e:\n                        uVar10 = uVar11;\n                        uVar7 = 0x23;\n                        *(*0x20 + -0x78) = 0x445b78;\n                        uVar1 = fcn.0045ca40(0x23);\n                        goto code_r0x00445b78;\n                    }\n                    uVar7 = in_RAX & 0xffffffff;\n                    uVar10 = 0;\n                    while( true ) {\n                        uVar5 = uVar7;\n                        uVar1 = in_RAX;\n                        if (uVar1 < 0x2001) break;\ncode_r0x00445b78:\n                        uVar10 = uVar10 + 1;\n                        in_RAX = uVar1 >> 1;\n                    }\n                    if ((piVar8[0x14] == 0) || (piVar8[0x1a] != 0)) {\n                        if ((uVar10 & 0xff) < 2) {\n                            *(*0x20 + -0x51) = uVar10;\n                            *(*0x20 + -0x10) = (uVar10 & 0xff) * 0x40 + 0x5d4140;\n                            *(*0x20 + -0x78) = 0x445bc7;\n                            fcn.0040a360();\n                            *(*0x20 + -0x78) = 0x445bd1;\n                            uVar4 = fcn.00445340();\n                            *(*0x20 + -0x50) = uVar4;\n                            *(*0x20 + -0x78) = 0x445be5;\n                            fcn.0040a580();\n                            return *(*0x20 + -0x50);\n                        }\n                    }\n                    else {\n                        iVar3 = *(piVar8[0x14] + 0x40);\n                        if ((uVar10 & 0xff) < 2) {\n                            iVar9 = (uVar10 & 0xff) * 0x10;\n                            puVar2 = *(iVar3 + 0x468 + iVar9);\n                            if (puVar2 == NULL) {\n                                *(*0x20 + -0x38) = iVar3;\n                                *(*0x20 + -0x30) = iVar9;\n                                *(*0x20 + -0x78) = 0x445c25;\n                                fcn.00445680();\n                                iVar9 = *(*0x20 + -0x30);\n                                iVar3 = *(*0x20 + -0x38);\n                                puVar2 = *(iVar3 + 0x468 + iVar9);\n                                uVar5 = *(*0x20 + 8);\n                            }\n                            *(iVar3 + 0x468 + iVar9) = *puVar2;\n                            piVar8 = iVar3 + 0x470 + iVar9;\n                            *piVar8 = *piVar8 - uVar5;\n                            return puVar2;\n                        }\n                        *(*0x20 + -0x78) = 0x445c72;\n                        fcn.0045ca40(2);\n                    }\n                    *(*0x20 + -0x78) = 0x445c7c;\n                    fcn.0045ca40(2);\n                }\n                *(*0x20 + -0x78) = 0x445c8d;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x78) = 0x445c9e;\n            uVar1 = fcn.004330a0();\n        }\n        *(puVar12 + 8) = uVar1;\n        *(puVar12 + -8) = 0x445ca8;\n        fcn.0045ea60();\n        in_RAX = *(puVar12 + 8);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1845
    },
    "00445cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00445cc0(void)\n\n{\n    int64_t *piVar1;\n    ulong *in_RAX;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar8 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = unaff_RBX - in_RAX;\n            if ((uVar6 & uVar6 - 1) == 0) {\n                if (*0x5d3fe8 != 0) {\n                    *(*0x20 + -0x80) = 0x445d9d;\n                    fcn.004154a0();\n                    return;\n                }\n                puVar5 = in_RAX;\n                uVar7 = uVar6;\n                if (0x7fff < uVar6) {\n                    uVar6 = in_RAX + 0x100000000000 >> 0x2a;\n                    if (uVar6 < 0x40) {\n                        uVar4 = in_RAX >> 0xd;\n                        iVar9 = *(*(*(uVar6 * 8 + 0x5a5f90) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x20000\n                                 + (uVar4 & 0x1ff) * 8);\n                        puVar5 = uVar4 & 0x100 | *(iVar9 + 99);\n                        if (*(iVar9 + 99) == 2) {\n                            if (*0x5d3b6c == 0) {\n                                *(*0x20 + -0x80) = 0x445d95;\n                                fcn.00425020(1);\n                                return;\n                            }\n                            iVar10 = 0;\n                            for (uVar6 = *(iVar9 + 0x20); 1 < uVar6; uVar6 = uVar6 >> 1) {\n                                iVar10 = iVar10 + 1;\n                            }\n                            *(*0x20 + -0x50) = iVar9;\n                            *(*0x20 + -0x48) = iVar10;\n                            *(*0x20 + -0x80) = 0x445dd5;\n                            fcn.0040a360();\n                            if (*(*0x20 + -0x48) < 0x23) {\n                                *(*0x20 + -0x80) = 0x445dfe;\n                                fcn.004255c0(0x5d4a48);\n                                *(*0x20 + -0x80) = 0x445e0c;\n                                fcn.0040a580();\n                                return;\n                            }\n                            *(*0x20 + -0x80) = 0x445e18;\n                            in_RAX = fcn.0045ca40(0x23);\n                        }\n                        *(*0x20 + -0x20) = in_RAX;\n                        *(*0x20 + -0x58) = *(iVar9 + 0x18);\n                        *(*0x20 + -0x80) = 0x445e2b;\n                        fcn.00434840();\n                        *(*0x20 + -0x80) = 0x445e35;\n                        fcn.00434fa0();\n                        *(*0x20 + -0x80) = 0x445e3a;\n                        fcn.00434a60();\n                        *(*0x20 + -0x80) = 0x445e45;\n                        fcn.004350c0();\n                        *(*0x20 + -0x80) = 0x445e4a;\n                        fcn.00434aa0();\n                        *(*0x20 + -0x80) = 0x445e4f;\n                        fcn.004348c0();\n                        uVar7 = 0xe;\n                        *(*0x20 + -0x80) = 0x445e65;\n                        fcn.004330a0();\n                    }\n                    iVar2 = 0x40;\n                    *(*0x20 + -0x80) = 0x445e72;\n                    uVar6 = fcn.0045ca60(0x40);\n                    goto code_r0x00445e72;\n                }\n                *(*0x20 + -0x10) = unaff_R14;\n                uVar3 = 0;\n                for (; iVar2 = uVar3,  0x2000 < uVar7; uVar7 = uVar7 >> 1) {\ncode_r0x00445e72:\n                    uVar3 = iVar2 + 1;\n                }\n                *(*0x20 + -0x28) = puVar5;\n                iVar9 = *(*(*(*0x20 + -0x10) + 0x30) + 0xa0);\n                if ((iVar9 == 0) || (*(*(*(*0x20 + -0x10) + 0x30) + 0xd0) != 0)) {\n                    if ((uVar3 & 0xff) < 2) {\n                        *(*0x20 + -0x59) = uVar3;\n                        *(*0x20 + -0x18) = (uVar3 & 0xff) * 0x40 + 0x5d4140;\n                        *(*0x20 + -0x80) = 0x445ed9;\n                        fcn.0040a360();\n                        *(*0x20 + -0x80) = 0x445ee8;\n                        fcn.004454e0();\n                        *(*0x20 + -0x80) = 0x445ef4;\n                        fcn.0040a580();\n                        return;\n                    }\n                }\n                else {\n                    iVar9 = *(iVar9 + 0x40);\n                    if ((uVar3 & 0xff) < 2) {\n                        iVar10 = (uVar3 & 0xff) * 0x10;\n                        if (0x7fff < *(iVar9 + 0x470 + iVar10)) {\n                            *(*0x20 + -0x30) = uVar6;\n                            *(*0x20 + -0x40) = iVar9;\n                            *(*0x20 + -0x38) = iVar10;\n                            *(*0x20 + -0x80) = 0x445f36;\n                            fcn.004457a0();\n                            uVar6 = *(*0x20 + -0x30);\n                            puVar5 = *(*0x20 + -0x28);\n                            iVar9 = *(*0x20 + -0x40);\n                            iVar10 = *(*0x20 + -0x38);\n                        }\n                        *puVar5 = *(iVar9 + 0x468 + iVar10);\n                        *(iVar9 + 0x468 + iVar10) = puVar5;\n                        piVar1 = iVar9 + 0x470 + iVar10;\n                        *piVar1 = *piVar1 + uVar6;\n                        return;\n                    }\n                    *(*0x20 + -0x80) = 0x445f7a;\n                    fcn.0045ca40(2);\n                }\n                *(*0x20 + -0x80) = 0x445f85;\n                fcn.0045ca40(2);\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x80) = 0x445f96;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x445fa6;\n        fcn.0045ea60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1894
    },
    "00445fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00445fc0(uint64_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t in_RAX;\n    uint64_t uVar8;\n    ulong uVar9;\n    int32_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    while (puVar10 = *0x20,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x00446191:\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + -8) = 0x4461af;\n        fcn.0045a360();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        *0x20 = puVar10;\n    }\n    puVar10 = *0x20 + -0x60;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x28) = unaff_RSI;\n    *(*0x20 + -0x10) = unaff_RSI;\n    uVar3 = *arg1;\n    uVar4 = arg1[1];\n    uVar5 = arg1[2];\n    uVar11 = *unaff_RBX;\n    *(*0x20 + -0x28) = uVar11;\n    *(*0x20 + -0x30) = in_RAX;\n    uVar6 = arg1[0x23];\n    uVar13 = 0;\n    uVar8 = in_RAX;\n    do {\n        if (uVar11 <= uVar13) {\n            return;\n        }\n        *(*0x20 + -0x40) = uVar13;\n        uVar12 = *((uVar13 >> 3) + *(unaff_RBX + 2));\n        while (uVar12 != '\\0') {\n            uVar7 = 0;\n            if (uVar12 != 0) {\n                for (; (uVar12 >> uVar7 & 1) == 0; uVar7 = uVar7 + 1) {\n                }\n            }\n            uVar12 = uVar12 & uVar12 - 1;\n            *(*0x20 + -0x49) = uVar12;\n            iVar1 = uVar7 + uVar13;\n            puVar2 = in_RAX + iVar1 * 8;\n            while( true ) {\n                uVar13 = *(in_RAX + iVar1 * 8);\n                *(*0x20 + -0x48) = uVar13;\n                if (unaff_RDI != 0) {\n                    if (uVar13 - 1 < 0xfff) {\n                        if (*0x5d4000 != 0) {\n                            *(*0x20 + -0x20) = puVar2;\n                            arg1 = *(unaff_R14 + 0x30);\n                            *(arg1 + 0xf9) = 2;\n                            *(*0x20 + -0x68) = 0x446110;\n                            uVar9 = fcn.0044b920();\n                            *(*0x20 + -0x18) = uVar9;\n                            *(*0x20 + -0x38) = unaff_RSI;\n                            *(*0x20 + -0x68) = 0x44611f;\n                            fcn.00434840();\n                            *(*0x20 + -0x68) = 0x446130;\n                            fcn.00435140();\n                            *(*0x20 + -0x68) = 0x44613f;\n                            fcn.00435140();\n                            *(*0x20 + -0x68) = 0x446150;\n                            fcn.00435140();\n                            *(*0x20 + -0x68) = 0x44615a;\n                            fcn.004350c0();\n                            *(*0x20 + -0x68) = 0x44616b;\n                            fcn.00435140();\n                            *(*0x20 + -0x68) = 0x446175;\n                            fcn.00434fa0();\n                            *(*0x20 + -0x68) = 0x44617a;\n                            fcn.00434aa0();\n                            *(*0x20 + -0x68) = 0x44617f;\n                            fcn.004348c0();\n                            unaff_RBX = 0x1e;\n                            *(*0x20 + -0x68) = 0x446190;\n                            in_RAX = fcn.004330a0();\n                            goto code_r0x00446191;\n                        }\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                    else {\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                }\n                if ((uVar13 < uVar3) || (uVar4 <= uVar13)) goto code_r0x0044603e;\n                if (uVar6 <= uVar8) {\n                    *(in_RAX + iVar1 * 8) = uVar13 + uVar5;\n                    goto code_r0x0044603e;\n                }\n                LOCK();\n                uVar11 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar13 == uVar11) * (*puVar2 ^ *(*0x20 + -0x48) + uVar5);\n                if (uVar13 == uVar11) break;\n                uVar8 = *(*0x20 + -0x30);\n                unaff_RSI = *(*0x20 + -0x10);\n            }\n            uVar8 = *(*0x20 + -0x30);\n            unaff_RSI = *(*0x20 + -0x10);\ncode_r0x0044603e:\n            uVar13 = *(*0x20 + -0x40);\n            uVar11 = *(*0x20 + -0x28);\n        }\n        uVar13 = uVar13 + 8;\n    } while( true );\n}\n",
        "token_count": 1591
    },
    "004467c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004467c0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *in_RAX;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x130 && *0x20 + -0x130 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1b0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX[0xe] == 0) {\n                iVar8 = in_RAX[1];\n                iVar1 = *in_RAX;\n                if (iVar1 != 0) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x130) = iVar8;\n                    *(*0x20 + -0x138) = iVar1;\n                    iVar2 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x160) = iVar8 - in_RAX[7];\n                    iVar2 = *(iVar2 + 0xa0);\n                    *(*0x20 + -0x140) = iVar8 - iVar1;\n                    iVar8 = unaff_RBX - (iVar8 - iVar1);\n                    if (iVar2 == 0) {\n                        LOCK();\n                        uVar9 = *0x5d4558;\n                        *0x5d4558 = *0x5d4558 + iVar8;\n                    }\n                    else {\n                        iVar3 = *(iVar2 + 0x22a8);\n                        iVar1 = iVar3 + iVar8;\n                        *(iVar2 + 0x22a8) = iVar1;\n                        uVar9 = iVar3 + iVar8 + 0x1fff;\n                        if (0x3ffe < uVar9) {\n                            LOCK();\n                            *0x5d4558 = *0x5d4558 + iVar1;\n                            *(iVar2 + 0x22a8) = 0;\n                            uVar9 = 0x5d4558;\n                        }\n                    }\n                    *(*0x20 + -0x148) = unaff_RBX;\n                    *(*0x20 + -0x1b8) = 0x4468a6;\n                    uVar5 = fcn.004459e0();\n                    *(*0x20 + -0x150) = uVar5;\n                    *(*0x20 + -0x158) = uVar9;\n                    *(*0x20 + -0x1c0) = unaff_RBP;\n                    *(*0x20 + -0x1b8) = 0x4468cf;\n                    fcn.0045cca6();\n                    uVar6 = *(*0x20 + -0x138);\n                    *(*0x20 + -0x128) = uVar6;\n                    uVar7 = *(*0x20 + -0x130);\n                    *(*0x20 + -0x120) = uVar7;\n                    *(*0x20 + -0x118) = uVar9 - uVar7;\n                    iVar8 = *(*0x20 + 8);\n                    if (*(iVar8 + 0xb8) == '\\0') {\n                        uVar9 = *(*0x20 + -0x140);\n                        if ((*(*0x20 + -0x148) < uVar9) &&\n                           (uVar11 = *(*0x20 + -0x148) & 0xffffffffffffff00 | *(iVar8 + 0xb9),  *(iVar8 + 0xb9) != 0)) {\n                            *(*0x20 + -0x1b8) = 0x446ae8;\n                            fcn.004330a0();\n                            goto code_r0x00446ae8;\n                        }\n                        for (iVar8 = *(iVar8 + 0x148); iVar8 != 0; iVar8 = *(iVar8 + 0x40)) {\n                            uVar9 = *(iVar8 + 0x18);\n                            if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                               (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                                *(iVar8 + 0x18) = uVar9 + *(*0x20 + -0x118);\n                            }\n                        }\n                        iVar8 = *(*0x20 + -0x160);\n                    }\n                    else {\n                        uVar9 = 0;\n                        for (uVar11 = *(iVar8 + 0x148); uVar11 != 0; uVar11 = *(uVar11 + 0x40)) {\n                            uVar12 = *(*(uVar11 + 0x50) + 0x18) + *(uVar11 + 0x18);\n                            if (((uVar6 <= uVar12) && (uVar12 < uVar7)) && (uVar9 < uVar12)) {\n                                uVar9 = uVar12;\n                            }\ncode_r0x00446ae8:\n                        }\n                        *(*0x20 + -0x10) = uVar9;\n                        *(*0x20 + -0x1b8) = 0x446b32;\n                        iVar8 = fcn.00446640(*0x20 + -0x128);\n                        iVar8 = *(*0x20 + -0x160) - iVar8;\n                    }\n                    *(*0x20 + -0x1b8) = 0x446994;\n                    fcn.0045d380(iVar8);\n                    iVar8 = *(*0x20 + 8);\n                    uVar9 = *(iVar8 + 0x50);\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        *(iVar8 + 0x50) = *(*0x20 + -0x118) + uVar9;\n                    }\n                    uVar9 = *(iVar8 + 0x68);\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        *(iVar8 + 0x68) = uVar9 + *(*0x20 + -0x118);\n                    }\n                    *(*0x20 + -0x1b8) = 0x4469fa;\n                    fcn.00446540();\n                    piVar4 = *(*0x20 + 8);\n                    uVar9 = piVar4[4];\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        piVar4[4] = *(*0x20 + -0x118) + uVar9;\n                    }\n                    if (*(*0x20 + -0x10) != 0) {\n                        *(*0x20 + -0x10) = *(*0x20 + -0x10) + *(*0x20 + -0x118);\n                    }\n                    iVar8 = *(*0x20 + -0x150);\n                    *piVar4 = iVar8;\n                    iVar1 = *(*0x20 + -0x158);\n                    piVar4[1] = iVar1;\n                    piVar4[2] = iVar8 + 0x13a0;\n                    piVar4[7] = iVar1 - *(*0x20 + -0x160);\n                    iVar8 = *(*0x20 + -0x118);\n                    piVar4[0x10] = piVar4[0x10] + iVar8;\n                    *(*0x20 + -0x1b0) = 0;\n                    *(*0x20 + -0x1b8) = 0x446ab5;\n                    fcn.00450a40(0, iVar8, 0, 0x7fffffff);\n                    *(*0x20 + -0x1b8) = 0x446ac7;\n                    fcn.00445cc0();\n                    return;\n                }\n                *(*0x20 + -0x1b8) = 0x446b5d;\n                fcn.004330a0();\n            }\n            unaff_RBX = 0x27;\n            *(*0x20 + -0x1b8) = 0x446b6e;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x446b7e;\n        fcn.0045a360();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2195
    },
    "004477e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004477e0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t *arg3;\n    int64_t **in_RAX;\n    int64_t *arg1;\n    int64_t **arg2;\n    int64_t **unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (unaff_RBX == NULL) {\n        arg1 = 0x4477c0;\n    }\n    else {\n        arg1 = *unaff_RBX;\n    }\n    arg2 = *in_RAX + -1;\n    arg3 = in_RAX[1];\n    *arg2 = arg3;\n    *in_RAX = arg2;\n    in_RAX[1] = arg1;\n    if (*0x5d3dd0 == 0) {\n        in_RAX[3] = unaff_RBX;\n    }\n    else {\n        fcn.0045c6e0(arg1, arg2, arg3, arg4);\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "00447860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00447860(void)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 0) {\n                if (((*(in_RAX + 0x12) >> 0xc & 1) != 0) ||\n                   (((in_RAX == *(unaff_R14[6] + 0x90) && (unaff_R14 != *(unaff_R14[6] + 0x90))) &&\n                    (*(in_RAX + 0x12) == 2)))) {\n                    if (in_RAX[0xe] == 0) {\n                        if (*(in_RAX + 0xb4) == '\\0') {\n                            bVar5 = *(in_RAX + 0xb9) == '\\0';\n                        }\n                        else {\n                            bVar5 = false;\n                        }\n                    }\n                    else {\n                        bVar5 = false;\n                    }\n                    if (bVar5) {\n                        if ((*(unaff_R14[6] + 0x90) != in_RAX) || (*(in_RAX[6] + 0x2b0) == 0)) {\n                            if (0 < *0x5d3ff4) {\n                                return;\n                            }\n                            *(*0x20 + 8) = in_RAX;\n                            iVar2 = in_RAX[0x27];\n                            *(*0x20 + -0x20) = 0x447929;\n                            iVar2 = fcn.0044b1a0(iVar2);\n                            if ((iVar2 != 0) && (*(iVar2 + 0x24) == '\\x06')) {\n                                return;\n                            }\n                            piVar1 = *(*0x20 + 8);\n                            uVar3 = piVar1[1] - *piVar1;\n                            if (uVar3 >> 1 < 0x2000) {\n                                return;\n                            }\n                            if (uVar3 >> 2 <= (piVar1[1] - piVar1[7]) + 800U) {\n                                return;\n                            }\n                            *(*0x20 + -0x20) = 0x447986;\n                            fcn.004467c0();\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x4479b5;\n                        fcn.004330a0();\n                    }\n                    *(*0x20 + -0x20) = 0x4479c6;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x20) = 0x4479d7;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x20) = 0x4479e8;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4479f3;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 816
    },
    "00447ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00447ba0(uchar param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong *in_RAX;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    ulong unaff_RBX;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int32_t iVar10;\n    int32_t *piVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            iVar6 = in_RAX[3];\n            if (iVar6 == 0) {\n                return 0;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = iVar6;\n            *(*0x20 + -0x28) = unaff_RBX;\n            *(*0x20 + -0x30) = *in_RAX;\n            *(*0x20 + -0x38) = in_RAX[1];\n            *(*0x20 + -0xb8) = 0x447c1c;\n            iVar4 = fcn.0044acc0();\n            iVar6 = *(*0x20 + -0x80);\n            if (iVar4 == iVar6) {\n                iVar3 = -1;\n            }\n            else {\n                *(*0x20 + -0x80) = iVar6 + -1;\n                *(*0x20 + -0xb8) = 0x447c55;\n                iVar3 = fcn.0044bfc0(1);\n                iVar6 = *(*0x20 + -0x80);\n            }\n            *(*0x20 + -0x80) = iVar6;\n            if (iVar3 == -1) {\n                iVar3 = 0;\n            }\n            *(*0x20 + -0x84) = iVar3;\n            iVar6 = *(*0x20 + 8);\n            iVar4 = *(iVar6 + 0x38) - *(iVar6 + 0x28);\n            if (iVar4 == 0) {\n                iVar8 = *(*0x20 + -0x38);\n                iVar12 = *(*0x20 + -0x30);\n                iVar10 = 0;\n                goto code_r0x00447d51;\n            }\n            iVar12 = *(*0x20 + -0x30);\n            if (*(iVar12 + 0x27) < 2) {\n                iVar8 = *(*0x20 + -0x38);\n                piVar11 = NULL;\n            }\n            else {\n                uVar2 = *(iVar12 + *(iVar12 + 0x1c) * 4 + 0x2c);\n                iVar8 = *(*0x20 + -0x38);\n                piVar11 = uVar2 + *(iVar8 + 0x130) & (uVar2 == 0xffffffff) - 1;\n            }\n            *(*0x20 + -0x78) = iVar4;\n            if ((piVar11 != NULL) && (iVar1 = *piVar11,  0 < iVar1)) {\n                iVar10 = piVar11[1];\n                if (iVar10 < 1) {\n                    iVar10 = 0;\ncode_r0x00447d51:\n                    if ((*(iVar6 + 0x48) == 0) || (*(iVar6 + 0x50) != 0)) {\ncode_r0x00447e30:\n                        if (*(iVar6 + 0x50) == 0) {\n                            if (*(iVar12 + 0x27) < 3) {\n                                puVar7 = NULL;\n                            }\n                            else {\n                                uVar2 = *(iVar12 + *(iVar12 + 0x1c) * 4 + 0x30);\n                                puVar7 = uVar2 + *(iVar8 + 0x130) & (uVar2 == 0xffffffff) - 1;\n                            }\n                            if (puVar7 != NULL) {\n                                uVar5 = *puVar7;\n                                *(*0x20 + -0x20) = puVar7 + 1;\n                                *(*0x20 + -0x18) = uVar5;\n                                *(*0x20 + -0x10) = uVar5;\n                            }\n                        }\n                        else {\n                            *(*0x20 + -0x20) = 0x5d3db0;\n                            *(*0x20 + -0x18) = 1;\n                            *(*0x20 + -0x10) = 1;\n                        }\n                        return iVar10;\n                    }\n                    if (*(iVar12 + 0x27) == '\\0') {\n                        piVar11 = NULL;\n                    }\n                    else {\n                        uVar2 = *(iVar12 + *(iVar12 + 0x1c) * 4 + 0x28);\n                        piVar11 = *(iVar8 + 0x130) + uVar2 & (uVar2 == 0xffffffff) - 1;\n                    }\n                    if ((piVar11 != NULL) && (iVar1 = *piVar11,  0 < iVar1)) {\n                        *(*0x20 + -0x50) = piVar11;\n                        if ((-1 < iVar3) && (iVar3 < iVar1)) goto code_r0x00447e30;\n                        *(*0x20 + -0xb8) = 0x447f29;\n                        uVar5 = fcn.0044b920();\n                        *(*0x20 + -0x40) = uVar5;\n                        *(*0x20 + -0x58) = iVar8;\n                        *(*0x20 + -0x60) = **(*0x20 + -0x50);\n                        *(*0x20 + -0xb8) = 0x447f45;\n                        fcn.00434840();\n                        *(*0x20 + -0xb8) = 0x447f56;\n                        fcn.00435140();\n                        *(*0x20 + -0xb8) = 0x447f65;\n                        fcn.00434f40(*(*0x20 + -0x84));\n                        *(*0x20 + -0xb8) = 0x447f76;\n                        fcn.00435140();\n                        *(*0x20 + -0xb8) = 0x447f85;\n                        fcn.00434f40();\n                        *(*0x20 + -0xb8) = 0x447f96;\n                        fcn.00435140();\n                        *(*0x20 + -0xb8) = 0x447fa5;\n                        fcn.00435140();\n                        *(*0x20 + -0xb8) = 0x447fb6;\n                        fcn.00435140();\n                        *(*0x20 + -0xb8) = 0x447fc5;\n                        fcn.00434fa0();\n                        *(*0x20 + -0xb8) = 0x447fd6;\n                        fcn.00435140();\n                        *(*0x20 + -0xb8) = 0x447fdb;\n                        fcn.004348c0();\n                        iVar8 = 0x10;\n                        *(*0x20 + -0xb8) = 0x447fec;\n                        fcn.004330a0();\n                    }\n                    *(*0x20 + -0xb8) = 0x447ff4;\n                    uVar5 = fcn.0044b920();\n                    *(*0x20 + -0x40) = uVar5;\n                    *(*0x20 + -0x58) = iVar8;\n                    *(*0x20 + -0x68) = *(*(*0x20 + 8) + 0x40);\n                    *(*0x20 + -0x70) = *(*(*0x20 + 8) + 0x48);\n                    *(*0x20 + -0xb8) = 0x44801d;\n                    fcn.00434840();\n                    *(*0x20 + -0xb8) = 0x44802e;\n                    fcn.00435140();\n                    *(*0x20 + -0xb8) = 0x44803d;\n                    fcn.00435140();\n                    *(*0x20 + -0xb8) = 0x44804e;\n                    fcn.00435140();\n                    *(*0x20 + -0xb8) = 0x448058;\n                    fcn.00434fa0();\n                    *(*0x20 + -0xb8) = 0x448069;\n                    fcn.00435140();\n                    *(*0x20 + -0xb8) = 0x448073;\n                    fcn.00434fa0();\n                    *(*0x20 + -0xb8) = 0x448078;\n                    fcn.00434aa0();\n                    *(*0x20 + -0xb8) = 0x44807d;\n                    fcn.004348c0();\n                    iVar8 = 0x10;\n                    *(*0x20 + -0xb8) = 0x44808e;\n                    fcn.004330a0();\n                }\n                else {\n                    *(*0x20 + -0x48) = piVar11;\n                    if ((-1 < iVar3) && (iVar3 < iVar1)) goto code_r0x00447d51;\n                }\n                *(*0x20 + -0xb8) = 0x448096;\n                uVar5 = fcn.0044b920();\n                *(*0x20 + -0x40) = uVar5;\n                *(*0x20 + -0x58) = iVar8;\n                *(*0x20 + -0x60) = **(*0x20 + -0x48);\n                *(*0x20 + -0xb8) = 0x4480b2;\n                fcn.00434840();\n                *(*0x20 + -0xb8) = 0x4480c5;\n                fcn.00435140();\n                *(*0x20 + -0xb8) = 0x4480d1;\n                fcn.00434f40(*(*0x20 + -0x84));\n                *(*0x20 + -0xb8) = 0x4480e5;\n                fcn.00435140();\n                *(*0x20 + -0xb8) = 0x4480ef;\n                fcn.00434f40();\n                *(*0x20 + -0xb8) = 0x448105;\n                fcn.00435140();\n                *(*0x20 + -0xb8) = 0x448114;\n                fcn.00435140();\n                *(*0x20 + -0xb8) = 0x448125;\n                fcn.00435140();\n                *(*0x20 + -0xb8) = 0x44812f;\n                fcn.00434fa0();\n                *(*0x20 + -0xb8) = 0x448145;\n                fcn.00435140();\n                *(*0x20 + -0xb8) = 0x44814a;\n                fcn.004348c0();\n                iVar8 = 0x10;\n                *(*0x20 + -0xb8) = 0x44815b;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0xb8) = 0x448165;\n            uVar5 = fcn.0044b920();\n            *(*0x20 + -0x40) = uVar5;\n            *(*0x20 + -0x58) = iVar8;\n            *(*0x20 + -0x68) = *(*(*0x20 + 8) + 0x38);\n            *(*0x20 + -0xb8) = 0x448185;\n            fcn.00434840();\n            *(*0x20 + -0xb8) = 0x448196;\n            fcn.00435140();\n            *(*0x20 + -0xb8) = 0x4481a5;\n            fcn.00435140();\n            *(*0x20 + -0xb8) = 0x4481b6;\n            fcn.00435140();\n            param_1 = *(*0x20 + -0x78);\n            *(*0x20 + -0xb8) = 0x4481c8;\n            fcn.00434fa0();\n            *(*0x20 + -0xb8) = 0x4481d9;\n            fcn.00435140();\n            *(*0x20 + -0xb8) = 0x4481e5;\n            fcn.00434fa0();\n            *(*0x20 + -0xb8) = 0x4481ea;\n            fcn.00434aa0();\n            *(*0x20 + -0xb8) = 0x4481ef;\n            fcn.004348c0();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0xb8) = 0x448205;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        puVar9[0x18] = param_1;\n        *(puVar9 + -8) = 0x448219;\n        fcn.0045a360();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        param_1 = puVar9[0x18];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 3164
    },
    "00448380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00448380(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *unaff_RBX;\n    int64_t *piVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t *unaff_RDI;\n    int64_t *piVar9;\n    int64_t *in_R8;\n    int64_t *piVar10;\n    int64_t *in_R9;\n    uint64_t *unaff_R14;\n    bool bVar11;\n    \ncode_r0x00448380:\n    puVar5 = *0x20;\n    piVar10 = in_R9;\n    if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n        puVar5 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (arg1 == NULL) {\n            piVar7 = NULL;\n            piVar8 = NULL;\n            piVar9 = NULL;\n            piVar10 = in_R8;\n            goto code_r0x004483c0;\n        }\n        in_R9 = NULL;\n        unaff_RDI = NULL;\n        piVar7 = NULL;\n        piVar10 = NULL;\n        piVar4 = unaff_RBX;\n        do {\n            if (piVar4[1] != 0) {\n                in_R8 = piVar10 + piVar4[1];\n                if (in_R8 < piVar10) goto code_r0x004485c5;\n                unaff_RDI = unaff_RDI + 1;\n                piVar7 = in_R9;\n                piVar10 = in_R8;\n            }\n            in_R9 = in_R9 + 1;\n            piVar8 = unaff_RDI;\n            piVar9 = piVar10;\n            if (arg1 <= in_R9) {\ncode_r0x004483c0:\n                unaff_RDI = piVar9;\n                piVar4 = unaff_RBX;\n                unaff_RBX = piVar8;\n                if (unaff_RBX == NULL) {\n                    return 0;\n                }\n                if (unaff_RBX == 0x1) {\n                    if (in_RAX != 0) {\n                        piVar8 = 0x1;\n                        goto code_r0x00448427;\n                    }\n                    if (piVar7 < arg1) {\n                        iVar2 = piVar4[piVar7 * 2 + 1];\n                        *(*0x20 + -0x18) = piVar4[piVar7 * 2];\n                        *(*0x20 + -0x10) = iVar2;\n                        uVar1 = *(*0x20 + -0x18);\n                        if (*unaff_R14 < uVar1 || *unaff_R14 == uVar1) {\n                            uVar6 = uVar1 & 0xffffff00 | uVar1 < unaff_R14[1];\n                        }\n                        else {\n                            uVar6 = 0;\n                        }\n                        piVar8 = uVar6 ^ 1;\n                        goto code_r0x00448427;\n                    }\n                }\n                else {\n                    piVar8 = NULL;\ncode_r0x00448427:\n                    if (piVar8 != '\\0') {\n                        if (arg1 <= piVar7) {\n                            *(*0x20 + -0x78) = 0x44849b;\n                            iVar2 = fcn.0045ca40(arg1);\n                            return iVar2;\n                        }\n                        return piVar4[piVar7 * 2];\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 0x10) = piVar4;\n                    *(*0x20 + -0x78) = 0x448445;\n                    iVar2 = fcn.00448ac0();\n                    unaff_RBX = *(*0x20 + 0x18);\n                    if (unaff_RBX == NULL) {\n                        return iVar2;\n                    }\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x50) = unaff_RDI;\n                    piVar10 = *(*0x20 + 0x10);\n                    in_R9 = NULL;\n                    piVar4 = unaff_RDI;\n                    while( true ) {\n                        piVar7 = piVar10[1];\n                        piVar9 = unaff_RDI;\n                        if (piVar7 < unaff_RDI) {\n                            piVar9 = piVar7;\n                        }\n                        if (arg1 == *piVar10) {\n                            bVar11 = unaff_RDI < piVar7;\n                            piVar3 = arg1;\n                            arg1 = unaff_RDI;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x38) = in_R9;\n                            *(*0x20 + -0x20) = piVar10;\n                            *(*0x20 + -0x40) = unaff_RDI;\n                            *(*0x20 + -0x48) = piVar8;\n                            *(*0x20 + -0x58) = piVar7;\n                            *(*0x20 + -0x78) = 0x4484fc;\n                            fcn.0045d380(piVar9);\n                            arg1 = *(*0x20 + -0x40);\n                            piVar7 = *(*0x20 + -0x58);\n                            bVar11 = arg1 < piVar7;\n                            unaff_RBX = *(*0x20 + 0x18);\n                            piVar4 = *(*0x20 + -0x50);\n                            piVar8 = *(*0x20 + -0x48);\n                            piVar10 = *(*0x20 + -0x20);\n                            in_R9 = *(*0x20 + -0x38);\n                            iVar2 = *(*0x20 + -0x30);\n                            piVar3 = *(*0x20 + -0x28);\n                        }\n                        if (bVar11) break;\n                        in_R9 = in_R9 + 1;\n                        piVar8 = piVar8 - piVar7;\n                        unaff_RDI = arg1 - piVar7;\n                        arg1 = piVar3 + (piVar7 & -piVar8 >> 0x3f);\n                        if (unaff_RBX <= in_R9) {\n                            return iVar2;\n                        }\n                        piVar10 = piVar10 + 2;\n                    }\n                    *(*0x20 + -0x78) = 0x448570;\n                    fcn.0045cb00(arg1);\n                    piVar7 = piVar8;\n                    unaff_RDI = piVar9;\n                }\n                *(*0x20 + -0x78) = 0x448578;\n                in_RAX = fcn.0045ca40(arg1);\n            }\n            piVar4 = piVar4 + 2;\n        } while( true );\n    }\n    goto code_r0x004485d7;\ncode_r0x004485c5:\n    unaff_RBX = 0x1d;\n    *(*0x20 + -0x78) = 0x4485d6;\n    in_RAX = fcn.004330a0();\ncode_r0x004485d7:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + -8) = 0x4485f0;\n    fcn.0045a360();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    *0x20 = puVar5;\n    in_R9 = piVar10;\n    goto code_r0x00448380;\n}\n",
        "token_count": 1876
    },
    "004489c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004489c0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint8_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (arg1 != 0) {\n        if (arg1 != 1) {\n            if ((in_RAX == 0) || (0x20 < arg1)) {\n                in_RAX = fcn.0040ba40(0);\n            }\n            fcn.0045d380(arg1);\n            return in_RAX;\n        }\n        return *unaff_RBX * 8 + 0x571340;\n    }\n    return 0;\n}\n",
        "token_count": 194
    },
    "00449fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.00449fc0(void)\n\n{\n    uint64_t uVar1;\n    ulong in_RAX;\n    uint64_t arg1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack136;\n    ulong uStack128;\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    ulong uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    \n    while (auStack120 < *(unaff_R14 + 0x10) || auStack120 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iStack136 = SUB168(in_XMM15, 0);\n    uStack128 = SUB168(in_XMM15 >> 0x40, 0);\n    auStack120 = in_XMM15;\n    auStack104 = in_XMM15;\n    fcn.004549c0();\n    if ((iStack136 == 0) && (auStack120._0_8_ == 0)) {\n        return 0;\n    }\n    arg1 = 0;\n    uVar5 = 0;\n    iVar4 = 0;\n    while( true ) {\n        uVar2 = fcn.00458340();\n        fcn.00458340(iStack136);\n        uStack56 = fcn.0045ccf0();\n        uStack64 = auStack120._0_8_;\n        uStack48 = auStack120._0_8_;\n        uStack40 = uStack128;\n        uStack32 = auStack120._8_8_;\n        uVar1 = arg1 + 1;\n        uStack72 = uVar2;\n        if (uVar5 < arg1 + 1) {\n            iVar3 = fcn.00444c60(arg1);\n            uVar1 = iVar4 + 1;\n            iVar4 = iVar3;\n            uVar5 = arg1;\n        }\n        arg1 = uVar1;\n        if (*0x5d3dd0 == 0) {\n            fcn.0045d05a(in_RAX, uVar5, arg1);\n        }\n        else {\n            fcn.00411220(auStack88);\n        }\n        if (auStack104._0_8_ == 0) break;\n        fcn.004549c0();\n    }\n    fcn.004549c0();\n    return iVar4;\n}\n",
        "token_count": 602
    },
    "0044a240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0044a240(ulong param_1, ulong param_2, int64_t *param_3, ulong param_4)\n\n{\n    uint uVar1;\n    int64_t **ppiVar2;\n    int64_t *piVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *arg2;\n    int64_t iVar8;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x70) = 0x44a265;\n            ppiVar2 = fcn.0040c440();\n            *(*0x20 + -0x18) = ppiVar2;\n            for (iVar5 = 0x56a3e0; iVar5 != 0; iVar5 = *(iVar5 + 0x220)) {\n                if (*(iVar5 + 0x218) == '\\0') {\n                    *(*0x20 + -0x10) = iVar5;\n                    piVar6 = ppiVar2[1];\n                    piVar7 = *ppiVar2;\n                    piVar3 = piVar7;\n                    if (ppiVar2[2] < piVar6 + 1U) {\n                        *(*0x20 + -0x70) = 0x44a2ba;\n                        arg2 = piVar6;\n                        piVar3 = fcn.00444c60(piVar6);\n                        ppiVar2 = *(*0x20 + -0x18);\n                        ppiVar2[2] = piVar6;\n                        if (*0x5d3dd0 == 0) {\n                            *ppiVar2 = piVar3;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x44a2d6;\n                            piVar3 = fcn.0045c5a0(piVar6, arg2, param_3, param_4);\n                        }\n                        iVar5 = *(*0x20 + -0x10);\n                        piVar6 = piVar7;\n                    }\n                    param_3 = piVar6 + 1;\n                    ppiVar2[1] = param_3;\n                    if (*0x5d3dd0 == 0) {\n                        piVar3[piVar6] = iVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x70) = 0x44a305;\n                        ppiVar2 = fcn.0045c6a0();\n                    }\n                    if ((*(iVar5 + 0x1f0) == 0) && (*(iVar5 + 0x1f8) == 0)) {\n                        iVar8 = *(iVar5 + 0xd8) - *(iVar5 + 0xd0);\n                        *(*0x20 + -0x28) = iVar8;\n                        *(*0x20 + -0x70) = 0x44a345;\n                        uVar1 = fcn.004138a0();\n                        iVar5 = *(*0x20 + -0x10);\n                        *(iVar5 + 0x1f0) = uVar1;\n                        if (*0x5d3dd0 == 0) {\n                            *(iVar5 + 0x1f8) = iVar8;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x44a36e;\n                            fcn.0045c6e0(iVar5, piVar6, param_3, param_4);\n                        }\n                        iVar9 = *(iVar5 + 0xe8) - *(iVar5 + 0xe0);\n                        *(*0x20 + -0x20) = iVar9;\n                        *(*0x20 + -0x70) = 0x44a38d;\n                        uVar1 = fcn.004138a0();\n                        iVar5 = *(*0x20 + -0x10);\n                        *(iVar5 + 0x200) = uVar1;\n                        iVar8 = *(*0x20 + -0x20) + *(*0x20 + -0x28);\n                        if (*0x5d3dd0 == 0) {\n                            *(iVar5 + 0x208) = iVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x44a3c5;\n                            fcn.0045c6e0(iVar5, iVar8, param_3, param_4);\n                        }\n                        param_3 = 0x5d4560;\n                        LOCK();\n                        *0x5d4560 = *0x5d4560 + iVar8;\n                        ppiVar2 = *(*0x20 + -0x18);\n                    }\n                }\n            }\n            piVar6 = ppiVar2[1];\n            piVar7 = NULL;\n            while( true ) {\n                if (piVar6 <= piVar7) goto code_r0x0044a446;\n                iVar5 = (*ppiVar2)[piVar7];\n                if (*(iVar5 + 0x1e8) != '\\0') break;\n                piVar7 = piVar7 + 1;\n            }\n            if (*0x5d3dd0 == 0) {\n                **ppiVar2 = iVar5;\n            }\n            else {\n                *(*0x20 + -0x70) = 0x44a40e;\n                ppiVar2 = fcn.0045c700(piVar7, piVar6, param_3, param_4);\n            }\n            piVar6 = ppiVar2[1];\n            if (piVar7 < piVar6) {\n                if (*0x5d3dd0 == 0) {\n                    (*ppiVar2)[piVar7] = 0x56a3e0;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x44a445;\n                    ppiVar2 = fcn.0045c6a0(0x56a3e0);\n                }\ncode_r0x0044a446:\n                if (*0x5d3dd0 != '\\0') {\n                    *(*0x20 + -0x70) = 0x44a45e;\n                    fcn.004031e0();\n                    ppiVar2 = *(*0x20 + -0x18);\n                }\n                uVar4 = *0x57efb8;\n                *0x57efb8 = ppiVar2;\n                return uVar4;\n            }\n            *(*0x20 + -0x70) = 0x44a485;\n            fcn.0045ca40(piVar6);\n        }\n        *(puVar10 + -8) = 0x44a48b;\n        fcn.0045a360();\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1618
    },
    "0044a4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044a4a0(void)\n\n{\n    ulong *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char cVar6;\n    uint32_t **in_RAX;\n    uint32_t **ppuVar7;\n    int64_t iVar8;\n    ulong *arg1;\n    ulong *puVar9;\n    ulong uVar10;\n    int64_t iVar11;\n    ulong *puVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    ulong *puVar14;\n    ulong *arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar9 = *in_RAX;\n            uVar2 = *puVar9;\n            *(*0x20 + -0xdc) = uVar2;\n            if (((((uVar2 == 0xfffffff0) && (*(puVar9 + 4) == '\\0')) && (*(puVar9 + 5) == '\\0')) &&\n                ((*(puVar9 + 6) == '\\x01' && (*(puVar9 + 7) == '\\b')))) &&\n               (puVar14 = puVar9[3],  in_RAX[0x16] == puVar14)) {\n                *(*0x20 + 8) = in_RAX;\n                arg1 = in_RAX[0x11];\n                puVar9 = in_RAX[0x10];\n                arg1_00 = arg1 + -1;\n                puVar1 = NULL;\n                do {\n                    puVar12 = puVar1;\n                    if (arg1_00 <= puVar12) {\n                        if (arg1 == NULL) goto code_r0x0044a9f5;\n                        *(*0x20 + -0xd8) = arg1_00;\n                        *(*0x20 + -0x60) = arg1;\n                        puVar12 = *puVar9;\n                        *(*0x20 + -0x100) = 0x44a746;\n                        uVar10 = fcn.0044acc0();\n                        arg1 = *(*(*0x20 + 8) + 0x88);\n                        arg1_00 = *(*(*0x20 + 8) + 0x80);\n                        puVar14 = *(*0x20 + -0xd8);\n                        if (arg1 <= puVar14) goto code_r0x0044a9ea;\n                        *(*0x20 + -0xd0) = uVar10;\n                        *(*0x20 + -0x100) = 0x44a785;\n                        iVar8 = fcn.0044acc0();\n                        *(*0x20 + -200) = iVar8;\n                        iVar11 = *(*0x20 + 8);\n                        arg1 = *(iVar11 + 0xa0);\n                        *(*0x20 + -0x80) = arg1;\n                        arg1_00 = *(*0x20 + -0xd0);\n                        if ((arg1_00 != arg1) || (*(iVar11 + 0xa8) != iVar8)) goto code_r0x0044a945;\n                        iVar8 = *(iVar11 + 0x1d8);\n                        arg1_00 = *(iVar11 + 0x1d0);\n                        if (iVar8 == 0) {\n                            return;\n                        }\n                        *(*0x20 + -0x60) = iVar8;\n                        iVar11 = 0;\n                        goto code_r0x0044a80a;\n                    }\n                    puVar14 = *(puVar9 + puVar12);\n                    puVar1 = puVar12 + 1;\n                    if (arg1 <= puVar1) goto code_r0x0044ab2d;\n                } while (*(puVar9 + puVar12) <= *(puVar9 + puVar12 + 1));\n                arg1 = in_RAX[0xe];\n                puVar3 = in_RAX[0xd];\n                puVar14 = *(puVar9 + puVar12 * 8 + 4);\n                if (puVar14 < arg1) {\n                    puVar9 = *(puVar9 + puVar12 * 8 + 0xc);\n                    if (puVar9 < arg1) {\n                        *(*0x20 + -0xb8) = puVar12;\n                        *(*0x20 + -0x60) = puVar1;\n                        if (puVar1 < arg1_00) {\n                            *(*0x20 + -0x38) = puVar14 + puVar3;\n                            *(*0x20 + -0x100) = 0x44a5c6;\n                            uVar10 = fcn.0044b920(puVar9 + puVar3);\n                            ppuVar7 = *(*0x20 + 8);\n                        }\n                        else {\n                            uVar10 = 0x4c7a87;\n                            ppuVar7 = in_RAX;\n                            in_RAX = 0x3;\n                        }\n                        *(*0x20 + -0x58) = uVar10;\n                        *(*0x20 + -0xb0) = in_RAX;\n                        *(*0x20 + -0x100) = 0x44a5f4;\n                        uVar10 = fcn.0044b920();\n                        iVar11 = *(*0x20 + 8);\n                        arg1 = *(iVar11 + 0x88);\n                        iVar8 = *(iVar11 + 0x80);\n                        puVar9 = *(*0x20 + -0xb8);\n                        if (puVar9 < arg1) {\n                            if (*(*0x20 + -0x60) < arg1) {\n                                *(*0x20 + -0x68) = *(iVar8 + puVar9 * 8);\n                                *(*0x20 + -0x60) = ppuVar7;\n                                *(*0x20 + -0x40) = uVar10;\n                                *(*0x20 + -0x70) = *(iVar8 + 8 + puVar9 * 8);\n                                *(*0x20 + -0x48) = *(iVar11 + 0x198);\n                                *(*0x20 + -0x78) = *(iVar11 + 0x1a0);\n                                *(*0x20 + -0x100) = 0x44a674;\n                                fcn.00434840();\n                                *(*0x20 + -0x100) = 0x44a685;\n                                fcn.00435140();\n                                *(*0x20 + -0x100) = 0x44a692;\n                                fcn.00434fa0();\n                                *(*0x20 + -0x100) = 0x44a697;\n                                fcn.00434a60();\n                                *(*0x20 + -0x100) = 0x44a6ac;\n                                fcn.00435140();\n                                *(*0x20 + -0x100) = 0x44a6bd;\n                                fcn.00435140();\n                                *(*0x20 + -0x100) = 0x44a6ca;\n                                fcn.00434fa0();\n                                *(*0x20 + -0x100) = 0x44a6cf;\n                                fcn.00434a60();\n                                *(*0x20 + -0x100) = 0x44a6e5;\n                                fcn.00435140();\n                                *(*0x20 + -0x100) = 0x44a6f6;\n                                fcn.00435140();\n                                *(*0x20 + -0x100) = 0x44a70b;\n                                fcn.00435140();\n                                *(*0x20 + -0x100) = 0x44a710;\n                                fcn.00434aa0();\n                                *(*0x20 + -0x100) = 0x44a715;\n                                fcn.004348c0();\n                                iVar11 = *(*0x20 + -0xb8);\n                                puVar12 = *(*0x20 + 8);\n                                arg1 = NULL;\n                                while (arg1 <= iVar11) {\n                                    arg1_00 = puVar12[0xe];\n                                    puVar9 = puVar12[0x11];\n                                    if (puVar9 <= arg1) {\ncode_r0x0044aae9:\n                                        *(*0x20 + -0x100) = 0x44aaf4;\n                                        fcn.0045ca40(puVar9);\n                                        break;\n                                    }\n                                    puVar9 = *(puVar12[0x10] + 4 + arg1 * 8);\n                                    if (arg1_00 <= puVar9) {\ncode_r0x0044aade:\n                                        *(*0x20 + -0x100) = 0x44aae9;\n                                        fcn.0045ca40(arg1_00);\n                                        goto code_r0x0044aae9;\n                                    }\n                                    *(*0x20 + -0xc0) = arg1;\n                                    *(*0x20 + -0x100) = 0x44aaaf;\n                                    uVar10 = fcn.0044b920();\n                                    arg1 = *(*(*0x20 + 8) + 0x88);\n                                    arg1_00 = *(*(*0x20 + 8) + 0x80);\n                                    puVar14 = *(*0x20 + -0xc0);\n                                    if (arg1 <= puVar14) {\n                                        *(*0x20 + -0x100) = 0x44aade;\n                                        fcn.0045ca40(arg1);\n                                        goto code_r0x0044aade;\n                                    }\ncode_r0x0044a9fc:\n                                    *(*0x20 + -0x60) = puVar12;\n                                    *(*0x20 + -0x40) = uVar10;\n                                    *(*0x20 + -0x68) = *(arg1_00 + puVar14);\n                                    *(*0x20 + -0x100) = 0x44aa1c;\n                                    fcn.00434840();\n                                    *(*0x20 + -0x100) = 0x44aa2d;\n                                    fcn.00435140();\n                                    *(*0x20 + -0x100) = 0x44aa3a;\n                                    fcn.00434fa0();\n                                    *(*0x20 + -0x100) = 0x44aa3f;\n                                    fcn.00434a60();\n                                    *(*0x20 + -0x100) = 0x44aa54;\n                                    fcn.00435140();\n                                    *(*0x20 + -0x100) = 0x44aa59;\n                                    fcn.00434aa0();\n                                    *(*0x20 + -0x100) = 0x44aa5e;\n                                    fcn.004348c0();\n                                    iVar11 = *(*0x20 + -0xb8);\n                                    puVar12 = *(*0x20 + 8);\n                                    arg1 = *(*0x20 + -0xc0) + 1;\n                                }\n                                *(*0x20 + -0x100) = 0x44ab05;\n                                fcn.004330a0();\n                            }\n                            *(*0x20 + -0x100) = 0x44ab10;\n                            fcn.0045ca40(arg1);\n                        }\n                        *(*0x20 + -0x100) = 0x44ab1b;\n                        puVar9 = arg1;\n                        fcn.0045ca40(arg1);\n                    }\n                    *(*0x20 + -0x100) = 0x44ab25;\n                    fcn.0045ca40(arg1);\n                }\n                *(*0x20 + -0x100) = 0x44ab2d;\n                fcn.0045ca40(arg1);\ncode_r0x0044ab2d:\n                *(*0x20 + -0x100) = 0x44ab35;\n                in_RAX = fcn.0045ca40(arg1);\n            }\n            *(*0x20 + -0x90) = *(puVar9 + 4);\n            *(*0x20 + -0x98) = *(puVar9 + 5);\n            *(*0x20 + -0xa0) = *(puVar9 + 6);\n            *(*0x20 + -0xa8) = *(puVar9 + 7);\n            *(*0x20 + -0x80) = puVar9[3];\n            *(*0x20 + -0x88) = in_RAX[0x16];\n            *(*0x20 + -0x40) = in_RAX[0x33];\n            *(*0x20 + -0x60) = in_RAX[0x34];\n            *(*0x20 + -0x100) = 0x44ab91;\n            fcn.00434840();\n            *(*0x20 + -0x100) = 0x44aba5;\n            fcn.00435140();\n            *(*0x20 + -0x100) = 0x44abae;\n            fcn.00434fa0();\n            *(*0x20 + -0x100) = 0x44abbf;\n            fcn.00435140();\n            *(*0x20 + -0x100) = 0x44abc9;\n            fcn.00434e40();\n            *(*0x20 + -0x100) = 0x44abda;\n            fcn.00435140();\n            *(*0x20 + -0x100) = 0x44abe5;\n            fcn.00434e40();\n            *(*0x20 + -0x100) = 0x44abf6;\n            fcn.00435140();\n            *(*0x20 + -0x100) = 0x44ac05;\n            fcn.00434e40();\n            *(*0x20 + -0x100) = 0x44ac16;\n            fcn.00435140();\n            *(*0x20 + -0x100) = 0x44ac25;\n            fcn.00434e40();\n            *(*0x20 + -0x100) = 0x44ac36;\n            fcn.00435140();\n            *(*0x20 + -0x100) = 0x44ac45;\n            fcn.00434fa0();\n            *(*0x20 + -0x100) = 0x44ac56;\n            fcn.00435140();\n            *(*0x20 + -0x100) = 0x44ac65;\n            fcn.00434fa0();\n            *(*0x20 + -0x100) = 0x44ac76;\n            fcn.00435140();\n            *(*0x20 + -0x100) = 0x44ac8b;\n            fcn.00435140();\n            *(*0x20 + -0x100) = 0x44ac90;\n            fcn.00434aa0();\n            *(*0x20 + -0x100) = 0x44ac95;\n            fcn.004348c0();\n            *(*0x20 + -0x100) = 0x44aca6;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + -8) = 0x44acb1;\n        fcn.0045a360();\n        in_RAX = *(puVar13 + 8);\n        *0x20 = puVar13;\n    } while( true );\ncode_r0x0044a80a:\n    *(*0x20 + -0x30) = *arg1_00;\n    uVar2 = *(arg1_00 + 0xc);\n    uVar4 = *(arg1_00 + 2);\n    uVar5 = *(arg1_00 + 0x14);\n    *(*0x20 + -0x28) = *(arg1_00 + 1);\n    *(*0x20 + -0x24) = uVar2;\n    *(*0x20 + -0x20) = uVar4;\n    *(*0x20 + -0x1c) = uVar5;\n    uVar2 = *(arg1_00 + 0x1c);\n    uVar4 = *(arg1_00 + 4);\n    uVar5 = *(arg1_00 + 0x24);\n    *(*0x20 + -0x18) = *(arg1_00 + 3);\n    *(*0x20 + -0x14) = uVar2;\n    *(*0x20 + -0x10) = uVar4;\n    *(*0x20 + -0xc) = uVar5;\n    puVar14 = *(*0x20 + -0x10);\n    if (puVar14[1] != *(*0x20 + -0x18)) {\ncode_r0x0044a88e:\n        iVar11 = *(*(*0x20 + 8) + 0x1c0);\n        *(*0x20 + -0x40) = iVar11;\n        *(*0x20 + -0x60) = *(*(*0x20 + 8) + 0x1c8);\n        arg1 = *(*0x20 + -0x30);\n        *(*0x20 + -0x48) = arg1;\n        *(*0x20 + -0x78) = *(*0x20 + -0x28);\n        *(*0x20 + -0x100) = 0x44a8d9;\n        fcn.00434840();\n        *(*0x20 + -0x100) = 0x44a8ea;\n        fcn.00435140();\n        *(*0x20 + -0x100) = 0x44a8ff;\n        fcn.00435140();\n        *(*0x20 + -0x100) = 0x44a910;\n        fcn.00435140();\n        *(*0x20 + -0x100) = 0x44a925;\n        fcn.00435140();\n        *(*0x20 + -0x100) = 0x44a92a;\n        fcn.00434aa0();\n        *(*0x20 + -0x100) = 0x44a92f;\n        fcn.004348c0();\n        *(*0x20 + -0x100) = 0x44a945;\n        fcn.004330a0();\ncode_r0x0044a945:\n        *(*0x20 + -0x88) = *(iVar11 + 0xa8);\n        *(*0x20 + -0x100) = 0x44a956;\n        fcn.00434840();\n        *(*0x20 + -0x100) = 0x44a967;\n        fcn.00435140();\n        *(*0x20 + -0x100) = 0x44a971;\n        fcn.00434fa0();\n        *(*0x20 + -0x100) = 0x44a985;\n        fcn.00435140();\n        *(*0x20 + -0x100) = 0x44a98f;\n        fcn.00434fa0();\n        *(*0x20 + -0x100) = 0x44a9a5;\n        fcn.00435140();\n        *(*0x20 + -0x100) = 0x44a9af;\n        fcn.00434fa0();\n        *(*0x20 + -0x100) = 0x44a9c5;\n        fcn.00435140();\n        *(*0x20 + -0x100) = 0x44a9cf;\n        fcn.00434fa0();\n        *(*0x20 + -0x100) = 0x44a9d4;\n        fcn.00434aa0();\n        *(*0x20 + -0x100) = 0x44a9d9;\n        fcn.004348c0();\n        puVar12 = 0x16;\n        *(*0x20 + -0x100) = 0x44a9ea;\n        fcn.004330a0();\ncode_r0x0044a9ea:\n        *(*0x20 + -0x100) = 0x44a9f5;\n        fcn.0045ca40(arg1);\ncode_r0x0044a9f5:\n        *(*0x20 + -0x100) = 0x44a9fc;\n        uVar10 = fcn.0045ca40(arg1);\n        goto code_r0x0044a9fc;\n    }\n    *(*0x20 + -0x78) = iVar11;\n    *(*0x20 + -0x50) = arg1_00;\n    *(*0x20 + -0x100) = 0x44a869;\n    cVar6 = fcn.004021c0(*(*0x20 + -0x18), iVar8);\n    if (cVar6 == '\\0') goto code_r0x0044a88e;\n    iVar11 = *(*0x20 + -0x78) + 1;\n    if (*(*0x20 + -0x60) <= iVar11) {\n        return;\n    }\n    arg1_00 = *(*0x20 + -0x50) + 0x28;\n    iVar8 = *(*0x20 + -0x60);\n    goto code_r0x0044a80a;\n}\n",
        "token_count": 4843
    },
    "0044acc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0044acc0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t *puVar5;\n    int64_t iVar6;\n    \n    uVar4 = unaff_RBX & 0xffffffff;\n    uVar3 = *(in_RAX + 0xb0) + uVar4;\n    iVar1 = *(in_RAX + 0x140);\n    puVar5 = *(in_RAX + 0x138);\n    if (1 < iVar1) {\n        iVar6 = 0;\n        while( true ) {\n            if (((*puVar5 <= uVar4) && (uVar4 < puVar5[1])) || ((iVar6 == iVar1 + -1 && (puVar5[1] == uVar4)))) break;\n            iVar6 = iVar6 + 1;\n            if (iVar1 <= iVar6) goto code_r0x0044ad3b;\n            puVar5 = puVar5 + 3;\n        }\n        uVar3 = (puVar5[2] + uVar4) - *puVar5;\ncode_r0x0044ad3b:\n        if (*(in_RAX + 0xb8) < uVar3) {\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00434fa0();\n            fcn.00435140();\n            fcn.00434fa0();\n            fcn.00435140();\n            fcn.00434fa0();\n            fcn.00434aa0();\n            fcn.004348c0();\n            fcn.004330a0();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 430
    },
    "0044b1a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044b1a0(void)\n\n{\n    uint32_t uVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t *arg1;\n    int64_t *piVar6;\n    int64_t *in_R9;\n    \n    for (iVar4 = 0x56a3e0; iVar4 != 0; iVar4 = *(iVar4 + 0x220)) {\n        if ((*(iVar4 + 0xa0) < in_RAX || *(iVar4 + 0xa0) == in_RAX) &&\n           (in_RAX <= *(iVar4 + 0xa8) && *(iVar4 + 0xa8) != in_RAX)) goto code_r0x0044b1e0;\n    }\n    iVar4 = 0;\ncode_r0x0044b1e0:\n    if (iVar4 == 0) {\n        return 0;\n    }\n    arg1 = *(iVar4 + 0xb0);\n    iVar2 = in_RAX - arg1;\n    uVar1 = iVar2;\n    uVar5 = *(iVar4 + 0x140);\n    piVar6 = *(iVar4 + 0x138);\n    if (uVar5 < 2) goto code_r0x0044b21c;\n    in_R9 = NULL;\n    do {\n        uVar1 = iVar2;\n        piVar3 = piVar6[2];\n        if (in_RAX < piVar3) {\n            return 0;\n        }\n        if (in_RAX < (piVar6[1] - *piVar6) + piVar3) {\n            uVar1 = *piVar6 + (in_RAX - piVar3);\n            in_R9 = piVar3;\ncode_r0x0044b21c:\n            uVar5 = arg1 + (uVar1 - *(iVar4 + 0xa0));\n            arg1 = (uVar5 >> 0xc) * 0x14 + *(iVar4 + 0x98);\n            in_RAX = (uVar5 & 0xfff) >> 8;\n            uVar5 = *arg1;\n            if (in_RAX < 0x10) {\n                piVar6 = *(arg1 + 4 + in_RAX) + *arg1;\n                do {\n                    arg1 = piVar6;\n                    in_RAX = *(iVar4 + 0x88);\n                    uVar5 = *(iVar4 + 0x80);\n                    piVar6 = arg1 + 1;\n                    if (in_RAX <= piVar6) goto code_r0x0044b2b8;\n                    in_R9 = uVar5 + piVar6 * 8;\n                } while (*in_R9 < uVar1 || *in_R9 == uVar1);\n                if (arg1 < in_RAX) {\n                    piVar3 = *(uVar5 + 4 + arg1 * 8);\n                    arg1 = *(iVar4 + 0x70);\n                    in_RAX = *(iVar4 + 0x68);\n                    if (piVar3 < arg1) {\n                        return piVar3 + in_RAX;\n                    }\n                    fcn.0045ca40(arg1);\n                }\n                fcn.0045ca40(in_RAX);\ncode_r0x0044b2b8:\n                fcn.0045ca40(in_RAX);\n            }\n            iVar4 = 0x10;\n            iVar2 = fcn.0045ca60(0x10);\n        }\n        else {\n            in_R9 = in_R9 + 1;\n            if (uVar5 <= in_R9) goto code_r0x0044b21c;\n        }\n        piVar6 = piVar6 + 3;\n    } while( true );\n}\n",
        "token_count": 865
    },
    "0044b320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044b5ec)\n// WARNING: Removing unreachable block (ram,0x0044b5f9)\n// WARNING: Removing unreachable block (ram,0x0044b770)\n// WARNING: Removing unreachable block (ram,0x0044b609)\n// WARNING: Removing unreachable block (ram,0x0044b70f)\n// WARNING: Removing unreachable block (ram,0x0044b801)\n// WARNING: Removing unreachable block (ram,0x0044b85b)\n// WARNING: Removing unreachable block (ram,0x0044b787)\n// WARNING: Removing unreachable block (ram,0x0044b86c)\n\nuint fcn.0044b320(uint64_t arg1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int32_t iVar5;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t in_R8;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    int32_t iStackX24;\n    uint64_t uStackX32;\n    int64_t in_stack_00000028;\n    uint uStack140;\n    uint64_t uStack128;\n    uint64_t uStack64;\n    int64_t iStack56;\n    uint64_t uStack32;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    while (iVar5 = arg1,  &uStack64 < *(unaff_R14 + 0x10) || &uStack64 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n        arg1 = arg1 & 0xffffffff;\n        in_R8 = in_R8 & 0xff;\n        iStackX24 = iVar5;\n        uStackX32 = unaff_RDI;\n        in_stack_00000028 = unaff_RSI;\n    }\n    if (iVar5 == 0) {\n        return 0xffffffff;\n    }\n    if (unaff_RSI == 0) goto code_r0x0044b389;\n    uVar6 = unaff_RDI >> 3 & 1;\n    uVar8 = 0;\n    do {\n        if (uVar8 < 8) {\n            iVar7 = uVar6 * 0x80 + unaff_RSI;\n            iVar9 = uVar8 * 0x10;\n            if ((*(iVar7 + 8 + iVar9) == arg1) && (*(iVar7 + iVar9) == unaff_RDI)) {\n                return *(iVar7 + 0xc + iVar9);\n            }\n        }\n        else {\ncode_r0x0044b389:\n            if (in_RAX == 0) {\n                if ((in_R8 == '\\0') || (*0x5d3b88 != 0)) {\n                    return 0xffffffff;\n                }\n                fcn.0044b140();\n                fcn.00434840();\n                fcn.00435140();\n                fcn.00434fa0();\n                fcn.00434aa0();\n                fcn.004348c0();\n                iVar7 = fcn.004330a0();\ncode_r0x0044b4b6:\n                do {\n                    iStack56 = iVar7;\n                    fcn.0044b140();\n                    iVar7 = fcn.0044c1a0(arg1);\n                } while (uStack128 <= uStackX32);\n                if (in_stack_00000028 == 0) {\n                    return uStack140;\n                }\n                unaff_RBX = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar3 = ZEXT816(unaff_RBX) * ZEXT816(unaff_RBX ^ 0xe7037ed1a0b428db);\n                arg1 = SUB168(auVar3 >> 0x40, 0);\n                *(*(unaff_R14 + 0x30) + 0xf0) = unaff_RBX;\n                unaff_RSI = (uStackX32 >> 3 & 1) * 0x80;\n                in_R8 = in_stack_00000028 + unaff_RSI;\n                uVar1 = *(in_stack_00000028 + 8 + unaff_RSI);\n                uVar2 = *(in_stack_00000028 + 0xc + unaff_RSI);\n                uVar6 = uVar2;\n                uVar8 = *(in_stack_00000028 + unaff_RSI);\n                uVar4 = ((SUB164(auVar3, 0) ^ SUB164(auVar3 >> 0x40, 0)) << 3) >> 0x20;\n                if (uVar4 < 8) {\n                    iVar7 = uVar4 * 0x10;\n                    *(in_R8 + iVar7) = uVar8;\n                    *(in_R8 + 8 + iVar7) = uVar1;\n                    *(in_R8 + 0xc + iVar7) = uVar2;\n                    *(in_stack_00000028 + unaff_RSI) = uStackX32;\n                    *(in_stack_00000028 + 8 + unaff_RSI) = iStackX24;\n                    *(in_stack_00000028 + 0xc + unaff_RSI) = uStack140;\n                    return uStack140;\n                }\n                fcn.0045ca40(8);\n            }\n            else {\n                uVar6 = *(unaff_RBX + 0x60);\n                iVar5 = arg1;\n                uVar8 = arg1 & 0xffffffff;\n                arg1 = *(unaff_RBX + 0x58);\n                if (uVar8 <= *(unaff_RBX + 0x58)) {\n                    uStack64 = uVar8;\n                    uStack32 = unaff_RBX;\n                    iStack24 = in_RAX;\n                    iStack16 = *(unaff_RBX + 0x50);\n                    uStack128 = fcn.0044b140();\n                    uStack140 = 0xffffffff;\n                    arg1 = uVar6 - uStack64;\n                    iVar7 = (-arg1 >> 0x3f & uStack64) + iStack16;\n                    iStackX24 = iVar5;\n                    uStackX32 = unaff_RDI;\n                    in_stack_00000028 = unaff_RSI;\n                    goto code_r0x0044b4b6;\n                }\n            }\n            unaff_RDI = arg1;\n            in_RAX = fcn.0045cb00(arg1);\n        }\n        uVar8 = uVar8 + 1;\n    } while( true );\n}\n",
        "token_count": 1536
    },
    "0044c340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044c340(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    bool bVar7;\n    char cVar8;\n    ulong *in_RAX;\n    int64_t iVar9;\n    ulong arg1;\n    int64_t iVar10;\n    uint64_t *unaff_RBX;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uint8_t uVar13;\n    int64_t *piVar14;\n    int64_t *piVar15;\n    int64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX < 9) {\n                uVar13 = *(unaff_RBX + 0x17) & 0x1f;\n                if ((uVar13 != 0xd) && (uVar13 != 0xe)) {\n                    if (*unaff_RBX != 0) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x10) = *in_RAX;\n                        *(*0x20 + -0x48) = in_RAX[1];\n                        *(*0x20 + -0x40) = in_RAX[2];\n                        arg1 = 0;\n                        *(*0x20 + -0x90) = 0x44c3ce;\n                        cVar8 = fcn.0044c620(0);\n                        if (cVar8 == '\\0') {\n                            piVar14 = *(*0x20 + 8);\n                            piVar14[1] = *(*0x20 + -0x48);\n                            piVar14[2] = *(*0x20 + -0x40);\n                            if (*0x5d3dd0 == 0) {\n                                *piVar14 = *(*0x20 + -0x10);\n                            }\n                            else {\n                                *(*0x20 + -0x90) = 0x44c445;\n                                fcn.0045c6c0(arg1, *(*0x20 + -0x10), param_3, param_4);\n                            }\n                            piVar15 = *(*0x20 + 0x10);\n                            piVar14[4] = -*(piVar15 + 0x15) & (*(piVar15 + 0x15) + piVar14[4]) - 1;\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x30) = in_XMM15;\n                            *(*0x20 + -0x20) = in_XMM15;\n                            *(*0x20 + -0x38) = 1;\n                            iVar9 = piVar14[3];\n                            *(*0x20 + -0x30) = iVar9;\n                            arg4 = piVar14[4];\n                            *(*0x20 + -0x28) = arg4;\n                            iVar10 = *piVar15;\n                            *(*0x20 + -0x18) = iVar10;\n                            iVar1 = *piVar14;\n                            iVar2 = piVar14[1];\n                            if (iVar2 == 0) {\n                                bVar7 = true;\n                            }\n                            else {\n                                if (*(iVar1 + -0x28 + iVar2 * 0x28) == 1) {\n                                    iVar3 = *(iVar1 + -8 + iVar2 * 0x28);\n                                    if ((iVar9 == *(iVar1 + -0x20 + iVar2 * 0x28) + iVar3) &&\n                                       (arg4 == *(iVar1 + -0x18 + iVar2 * 0x28) + iVar3)) {\n                                        *(iVar1 + -8 + iVar2 * 0x28) = iVar3 + iVar10;\n                                        uVar13 = 1;\n                                    }\n                                    else {\n                                        uVar13 = 0;\n                                    }\n                                }\n                                else {\n                                    uVar13 = 0;\n                                }\n                                bVar7 = uVar13 ^ 1;\n                            }\n                            if (bVar7) {\n                                iVar10 = piVar14[1];\n                                iVar1 = *piVar14;\n                                uVar11 = piVar14[2];\n                                iVar9 = iVar1;\n                                if (uVar11 < iVar10 + 1U) {\n                                    *(*0x20 + -0x90) = 0x44c52b;\n                                    iVar9 = fcn.00444c60(iVar10);\n                                    piVar14 = *(*0x20 + 8);\n                                    piVar14[2] = iVar10;\n                                    if (*0x5d3dd0 == 0) {\n                                        *piVar14 = iVar9;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x90) = 0x44c54c;\n                                        iVar9 = fcn.0045c5a0(iVar10, uVar11, piVar15, arg4);\n                                    }\n                                    piVar15 = *(*0x20 + 0x10);\n                                    iVar10 = iVar1;\n                                }\n                                piVar14[1] = iVar10 + 1;\n                                *(iVar9 + iVar10 * 0x28) = *(*0x20 + -0x38);\n                                iVar9 = iVar9 + iVar10 * 0x28;\n                                uVar4 = *(*0x20 + -0x2c);\n                                uVar5 = *(*0x20 + -0x28);\n                                uVar6 = *(*0x20 + -0x24);\n                                *(iVar9 + 8) = *(*0x20 + -0x30);\n                                *(iVar9 + 0xc) = uVar4;\n                                *(iVar9 + 0x10) = uVar5;\n                                *(iVar9 + 0x14) = uVar6;\n                                uVar4 = *(*0x20 + -0x1c);\n                                uVar5 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x14);\n                                *(iVar9 + 0x18) = *(*0x20 + -0x20);\n                                *(iVar9 + 0x1c) = uVar4;\n                                *(iVar9 + 0x20) = uVar5;\n                                *(iVar9 + 0x24) = uVar6;\n                            }\n                            piVar14[4] = piVar14[4] + *piVar15;\n                        }\n                        else {\n                            piVar14 = *(*0x20 + 8);\n                            piVar15 = *(*0x20 + 0x10);\n                            uVar11 = *(piVar15 + 0x15);\n                            uVar11 = -uVar11 & (piVar14[5] + uVar11) - 1;\n                            piVar14[5] = uVar11;\n                            piVar14[5] = *piVar15 + uVar11;\n                        }\n                        piVar14[3] = piVar14[3] + 8;\n                        return;\n                    }\n                    in_RAX[4] = -*(unaff_RBX + 0x15) & (in_RAX[4] + *(unaff_RBX + 0x15)) - 1;\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x44c5e5;\n                fcn.00432920();\n            }\n            unaff_RBX = 0x4f9d88;\n            *(*0x20 + -0x90) = 0x44c5f8;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x44c608;\n        fcn.0045a360();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1925
    },
    "0044c620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0044c620(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    int64_t *in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint8_t uVar10;\n    uint32_t uVar11;\n    ulong uVar12;\n    int64_t iVar13;\n    ulong *unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    int64_t iVar15;\n    int64_t unaff_R14;\n    bool bVar16;\n    bool bVar17;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar11 = *(unaff_RBX + 0x17) & 0x1f;\n            uVar6 = uVar11;\n            uVar10 = uVar11;\n            if (uVar10 < 0xc) {\n                if (uVar10 < 7) {\n                    if (4 < uVar10 - 1) {\n                        if (uVar10 == 6) {\ncode_r0x0044c812:\n                            uVar12 = *unaff_RBX;\n                            iVar13 = in_RAX[6];\n                            bVar17 = SBORROW8(*0x564570, iVar13);\n                            iVar7 = *0x564570 - iVar13;\n                            bVar16 = *0x564570 == iVar13;\n                            if (iVar13 < *0x564570) {\n                                *(*0x20 + -0x58) = in_XMM15;\n                                *(*0x20 + -0x50) = in_XMM15;\n                                *(*0x20 + -0x40) = in_XMM15;\n                                *(*0x20 + -0x58) = 2;\n                                *(*0x20 + -0x50) = in_RAX[3] + arg1;\n                                *(*0x20 + -0x40) = in_RAX[6];\n                                *(*0x20 + -0x38) = uVar12;\n                                iVar8 = in_RAX[1];\n                                iVar1 = *in_RAX;\n                                iVar7 = iVar1;\n                                iVar15 = *0x564570;\n                                if (in_RAX[2] < iVar8 + 1U) {\n                                    *(*0x20 + -0x60) = iVar13;\n                                    *(*0x20 + -0x68) = *0x564570;\n                                    *(*0x20 + -0xb8) = 0x44c888;\n                                    iVar7 = fcn.00444c60(iVar8);\n                                    in_RAX = *(*0x20 + 8);\n                                    in_RAX[2] = iVar8;\n                                    if (*0x5d3dd0 == 0) {\n                                        *in_RAX = iVar7;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xb8) = 0x44c8a7;\n                                        iVar7 = fcn.0045c5a0(iVar8, uVar12, iVar13, iVar15);\n                                    }\n                                    iVar13 = *(*0x20 + -0x60);\n                                    iVar15 = *(*0x20 + -0x68);\n                                    iVar8 = iVar1;\n                                }\n                                in_RAX[1] = iVar8 + 1;\n                                *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x58);\n                                iVar7 = iVar7 + iVar8 * 0x28;\n                                uVar2 = *(*0x20 + -0x4c);\n                                uVar3 = *(*0x20 + -0x48);\n                                uVar4 = *(*0x20 + -0x44);\n                                *(iVar7 + 8) = *(*0x20 + -0x50);\n                                *(iVar7 + 0xc) = uVar2;\n                                *(iVar7 + 0x10) = uVar3;\n                                *(iVar7 + 0x14) = uVar4;\n                                uVar2 = *(*0x20 + -0x3c);\n                                uVar3 = *(*0x20 + -0x38);\n                                uVar4 = *(*0x20 + -0x34);\n                                *(iVar7 + 0x18) = *(*0x20 + -0x40);\n                                *(iVar7 + 0x1c) = uVar2;\n                                *(iVar7 + 0x20) = uVar3;\n                                *(iVar7 + 0x24) = uVar4;\n                                in_RAX[6] = in_RAX[6] + 1;\n                                bVar17 = SBORROW8(iVar15, iVar13);\n                                iVar7 = iVar15 - iVar13;\n                                bVar16 = iVar15 == iVar13;\n                            }\n                            return in_RAX & 0xffffffffffffff00 | (!bVar16 && bVar17 == iVar7 < 0);\n                        }\ncode_r0x0044c902:\n                        *(*0x20 + -0xb8) = 0x44c90a;\n                        fcn.00454b20();\n                        *(*0x20 + -0xb8) = 0x44c930;\n                        fcn.004486c0(0x16, uVar6, 0x4d371a, 0x37);\n                        *(*0x20 + -0xb8) = 0x44c935;\n                        fcn.00409da0();\n                        *(*0x20 + -0xb8) = 0x44c945;\n                        fcn.00432920();\n                        goto code_r0x0044c945;\n                    }\n                }\n                else if (10 < uVar10) {\n                    if (uVar10 == 0xb) goto code_r0x0044c812;\n                    goto code_r0x0044c902;\n                }\ncode_r0x0044c6f7:\n                uVar12 = *unaff_RBX;\n                iVar13 = in_RAX[6];\n                bVar17 = SBORROW8(*0x564570, iVar13);\n                iVar7 = *0x564570 - iVar13;\n                bVar16 = *0x564570 == iVar13;\n                if (iVar13 < *0x564570) {\n                    *(*0x20 + -0x30) = in_XMM15;\n                    *(*0x20 + -0x28) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x30) = 2;\n                    *(*0x20 + -0x28) = in_RAX[3] + arg1;\n                    *(*0x20 + -0x18) = in_RAX[6];\n                    *(*0x20 + -0x10) = uVar12;\n                    iVar8 = in_RAX[1];\n                    iVar1 = *in_RAX;\n                    iVar7 = iVar1;\n                    iVar15 = *0x564570;\n                    if (in_RAX[2] < iVar8 + 1U) {\n                        *(*0x20 + -0x60) = iVar13;\n                        *(*0x20 + -0x68) = *0x564570;\n                        *(*0x20 + -0xb8) = 0x44c785;\n                        iVar7 = fcn.00444c60(iVar8);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[2] = iVar8;\n                        if (*0x5d3dd0 == 0) {\n                            *in_RAX = iVar7;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x44c7a5;\n                            iVar7 = fcn.0045c5a0(iVar8, uVar12, iVar13, iVar15);\n                        }\n                        iVar13 = *(*0x20 + -0x60);\n                        iVar15 = *(*0x20 + -0x68);\n                        iVar8 = iVar1;\n                    }\n                    in_RAX[1] = iVar8 + 1;\n                    *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x30);\n                    iVar7 = iVar7 + iVar8 * 0x28;\n                    uVar2 = *(*0x20 + -0x24);\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar4 = *(*0x20 + -0x1c);\n                    *(iVar7 + 8) = *(*0x20 + -0x28);\n                    *(iVar7 + 0xc) = uVar2;\n                    *(iVar7 + 0x10) = uVar3;\n                    *(iVar7 + 0x14) = uVar4;\n                    uVar2 = *(*0x20 + -0x14);\n                    uVar3 = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0xc);\n                    *(iVar7 + 0x18) = *(*0x20 + -0x18);\n                    *(iVar7 + 0x1c) = uVar2;\n                    *(iVar7 + 0x20) = uVar3;\n                    *(iVar7 + 0x24) = uVar4;\n                    in_RAX[6] = in_RAX[6] + 1;\n                    bVar17 = SBORROW8(iVar15, iVar13);\n                    iVar7 = iVar15 - iVar13;\n                    bVar16 = iVar15 == iVar13;\n                }\n                return in_RAX & 0xffffffffffffff00 | (!bVar16 && bVar17 == iVar7 < 0);\n            }\n            if (uVar10 < 0x12) {\n                if (uVar10 != 0xc) {\n                    if ((uVar10 == 0x11) && (unaff_RBX[8] == 1)) {\n                        *(*0x20 + -0xb8) = 0x44c6bd;\n                        uVar6 = fcn.0044c620(arg1);\n                        return uVar6;\n                    }\n                    goto code_r0x0044c902;\n                }\n                goto code_r0x0044c6f7;\n            }\n            if (uVar10 == 0x16) goto code_r0x0044c6f7;\n            if (uVar10 != 0x19) {\n                if (uVar10 != 0x1a) goto code_r0x0044c902;\n                goto code_r0x0044c6f7;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar13 = unaff_RBX[8];\n            *(*0x20 + -0x60) = iVar13;\n            uVar6 = 0;\n            uVar9 = arg1;\n            while( true ) {\n                if (iVar13 <= uVar6) {\n                    return 1;\n                }\n                iVar13 = unaff_RBX[7];\n                arg1 = unaff_RBX[8];\n                if (arg1 <= uVar6) break;\n                *(*0x20 + -0x70) = uVar6;\n                uVar6 = *(iVar13 + 0x10 + uVar6 * 0x18);\n                *(*0x20 + -0xb8) = 0x44c99e;\n                cVar5 = fcn.0044c620((uVar6 >> 1) + uVar9);\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\ncode_r0x0044c945:\n                uVar6 = *(*0x20 + -0x70) + 1;\n                iVar13 = *(*0x20 + -0x60);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar9 = *(*0x20 + 0x18);\n            }\n            *(*0x20 + -0xb8) = 0x44c9d6;\n            in_RAX = fcn.0045ca40(arg1);\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + -8) = 0x44c9eb;\n        fcn.0045a360();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 2926
    },
    "0044cde0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0044cde0(int64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t arg3_00;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x5d3b78 == 0) {\n                *(*0x20 + -0x58) = 0x44ce10;\n                fcn.0042ca80();\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            if (*unaff_RBX == 0) {\n                *unaff_RBX = in_RAX;\n                iVar4 = *(in_RAX + 0x2288);\n                arg3_00 = *(in_RAX + 0x2280);\n                arg4 = *(in_RAX + 0x2290);\n                if (arg4 < iVar4 + 1U) {\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x58) = 0x44ce6c;\n                    arg3 = arg3_00;\n                    iVar3 = fcn.00444c60(iVar4);\n                    in_RAX = *(*0x20 + 8);\n                    *(in_RAX + 0x2290) = iVar4;\n                    if (*0x5d3dd0 == 0) {\n                        *(in_RAX + 0x2280) = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = 0x44ce97;\n                        iVar3 = fcn.0045c5a0(iVar4, in_RAX, arg3, arg4);\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    param_1 = iVar4;\n                    iVar4 = arg3_00;\n                    arg3_00 = iVar3;\n                }\n                *(in_RAX + 0x2288) = iVar4 + 1;\n                if (*0x5d3dd0 == 0) {\n                    *(arg3_00 + iVar4 * 8) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x44cecd;\n                    fcn.0045c6e0(param_1, in_RAX, arg3_00, arg4);\n                }\n                arg1 = *(in_RAX + 0x2290);\n                *(*0x20 + -0x58) = 0x44ceed;\n                fcn.0044eba0(arg1, in_RAX, arg3_00, arg4);\n                iVar4 = *(*0x20 + 8);\n                param_1 = *(iVar4 + 0x2288);\n                if (param_1 != 0) {\n                    if (**(iVar4 + 0x2280) == *(*0x20 + 0x10)) {\n                        *(iVar4 + 0x1208) = *(*(*0x20 + 0x10) + 8);\n                    }\n                    LOCK();\n                    piVar1 = iVar4 + 0x2298;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    return iVar2;\n                }\n                *(*0x20 + -0x58) = 0x44cf38;\n                fcn.0045ca40(0);\n            }\n            unaff_RBX = 0x22;\n            *(*0x20 + -0x58) = 0x44cf49;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x44cf59;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1099
    },
    "0044cf80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0044cf80(void)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    do {\n        while( true ) {\n            while (uVar2 = *(in_RAX + 8),  5 < uVar2) {\n                if (uVar2 < 8) {\n                    if (uVar2 == 6) {\n                        fcn.0045a220();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    }\n                    else {\n                        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                        *piVar1 = *piVar1 + 1;\n                        iVar4 = *(unaff_R14 + 0x30);\n                        LOCK();\n                        if (uVar2 == *(in_RAX + 8)) {\n                            *(in_RAX + 8) = 6;\n                            iVar5 = *in_RAX;\n                            LOCK();\n                            if (*(in_RAX + 8) == 6) {\n                                *(in_RAX + 8) = 3;\n                            }\n                            else {\n                                fcn.0044ef40();\n                            }\n                            iVar3 = *(iVar4 + 0xd8);\n                            *(iVar4 + 0xd8) = iVar3 + -1;\n                            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            LOCK();\n                            *(iVar5 + 0x229c) = *(iVar5 + 0x229c) + 1;\n                            return 1;\n                        }\n                        iVar3 = *(iVar4 + 0xd8);\n                        *(iVar4 + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                    }\n                }\n                else {\n                    if (uVar2 == 8) goto code_r0x0044d070;\n                    if (uVar2 == 9) goto code_r0x0044d0d8;\n                    fcn.0044ef40();\n                }\n            }\n            if (1 < uVar2) break;\n            if (uVar2 == 0) {\n                return 0;\n            }\ncode_r0x0044d070:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar4 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (uVar2 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                iVar5 = *in_RAX;\n                LOCK();\n                if (*(in_RAX + 8) == 6) {\n                    *(in_RAX + 8) = 3;\n                }\n                else {\n                    fcn.0044ef40();\n                }\n                iVar3 = *(iVar4 + 0xd8);\n                *(iVar4 + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                LOCK();\n                *(iVar5 + 0x229c) = *(iVar5 + 0x229c) + 1;\n                return 1;\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        if (uVar2 != 2) {\n            return 0;\n        }\ncode_r0x0044d0d8:\n        fcn.0045a220();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    } while( true );\n}\n",
        "token_count": 1035
    },
    "0044d240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044d240(ulong noname_0, uint64_t arg2)\n\n{\n    int64_t *piVar1;\n    ulong arg1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *(in_RAX + 0x2288);\n            if (unaff_RBX < uVar3) {\n                piVar1 = *(*(in_RAX + 0x2280) + unaff_RBX * 8);\n                if (in_RAX == *piVar1) {\n                    *piVar1 = 0;\n                    uVar3 = *(in_RAX + 0x2288);\n                    arg3 = uVar3 - 1;\n                    if (unaff_RBX == arg3) {\ncode_r0x0044d2d6:\n                        arg4 = *(in_RAX + 0x2288);\n                        if (arg3 < arg4) {\n                            if (*0x5d3dd0 == 0) {\n                                *(*(in_RAX + 0x2280) + -8 + uVar3 * 8) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x44d310;\n                                in_RAX = fcn.0045c700(uVar3, arg2, arg3, arg4);\n                            }\n                            arg2 = *(in_RAX + 0x2290);\n                            if (arg3 <= arg2) {\n                                *(in_RAX + 0x2288) = arg3;\n                                uVar3 = unaff_RBX;\n                                if (unaff_RBX != arg3) {\n                                    *(*0x20 + 8) = in_RAX;\n                                    *(*0x20 + 0x10) = unaff_RBX;\n                                    uVar2 = *(in_RAX + 0x2280);\n                                    arg1 = *(in_RAX + 0x2290);\n                                    *(*0x20 + -0x38) = 0x44d365;\n                                    uVar2 = fcn.0044eba0(arg1, uVar2, arg3, arg4);\n                                    *(*0x20 + -0x10) = uVar2;\n                                    uVar2 = *(*(*0x20 + 8) + 0x2290);\n                                    *(*0x20 + -0x38) = 0x44d391;\n                                    fcn.0044ed20(uVar2);\n                                    in_RAX = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + 0x10);\n                                    uVar3 = *(*0x20 + -0x10);\n                                }\n                                if (unaff_RBX == 0) {\n                                    if (*(in_RAX + 0x2288) == 0) {\n                                        *(in_RAX + 0x1208) = 0;\n                                    }\n                                    else {\n                                        *(in_RAX + 0x1208) = *(**(in_RAX + 0x2280) + 8);\n                                    }\n                                }\n                                LOCK();\n                                *(in_RAX + 0x2298) = *(in_RAX + 0x2298) + -1;\n                                return uVar3;\n                            }\n                            *(*0x20 + -0x38) = 0x44d3f2;\n                            fcn.0045cac0(arg3, arg2);\n                        }\n                        uVar3 = arg4;\n                        *(*0x20 + -0x38) = 0x44d3fd;\n                        fcn.0045ca40(uVar3);\ncode_r0x0044d3fd:\n                        *(*0x20 + -0x38) = 0x44d405;\n                        fcn.0045ca40(uVar3);\n                    }\n                    else if (arg3 < uVar3) {\n                        if (unaff_RBX < uVar3) {\n                            if (*0x5d3dd0 == 0) {\n                                *(*(in_RAX + 0x2280) + unaff_RBX * 8) = *(*(in_RAX + 0x2280) + -8 + uVar3 * 8);\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x44d2d6;\n                                in_RAX = fcn.0045c740(uVar3, arg2, arg3);\n                            }\n                            goto code_r0x0044d2d6;\n                        }\n                        goto code_r0x0044d3fd;\n                    }\n                    *(*0x20 + -0x38) = 0x44d40d;\n                    fcn.0045ca40(uVar3);\n                }\n                unaff_RBX = 0x13;\n                *(*0x20 + -0x38) = 0x44d41e;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x38) = 0x44d426;\n            in_RAX = fcn.0045ca40(uVar3);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44d436;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1355
    },
    "0044d460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044d460(ulong noname_0, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t arg3;\n    int64_t in_RAX;\n    uint64_t arg1;\n    uint64_t arg4;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg4 = *(in_RAX + 0x2288);\n            if (arg4 != 0) {\n                if (in_RAX == ***(in_RAX + 0x2280)) {\n                    ***(in_RAX + 0x2280) = 0;\n                    iVar1 = *(in_RAX + 0x2288);\n                    arg1 = iVar1 - 1;\n                    if (0 < arg1) {\n                        uVar2 = (*(in_RAX + 0x2280))[iVar1 + -1];\n                        if (*0x5d3dd0 == 0) {\n                            **(in_RAX + 0x2280) = uVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44d4df;\n                            in_RAX = fcn.0045c720(arg1, arg2, uVar2, in_R9);\n                        }\n                    }\n                    arg3 = *(in_RAX + 0x2280);\n                    arg4 = *(in_RAX + 0x2288);\n                    if (arg1 < arg4) {\n                        if (*0x5d3dd0 == 0) {\n                            *(arg3 + -8 + iVar1 * 8) = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44d519;\n                            in_RAX = fcn.0045c700(arg1, arg2, arg3, arg4);\n                        }\n                        arg2 = *(in_RAX + 0x2290);\n                        if (arg1 <= arg2) {\n                            *(in_RAX + 0x2288) = arg1;\n                            if (0 < arg1) {\n                                *(*0x20 + 8) = in_RAX;\n                                uVar2 = *(in_RAX + 0x2290);\n                                *(*0x20 + -0x30) = 0x44d554;\n                                fcn.0044ed20(uVar2);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            if (*(in_RAX + 0x2288) == 0) {\n                                *(in_RAX + 0x1208) = 0;\n                            }\n                            else {\n                                *(in_RAX + 0x1208) = *(**(in_RAX + 0x2280) + 8);\n                            }\n                            LOCK();\n                            *(in_RAX + 0x2298) = *(in_RAX + 0x2298) + -1;\n                            return;\n                        }\n                        *(*0x20 + -0x30) = 0x44d5a5;\n                        fcn.0045cac0(arg1, arg2);\n                    }\n                    *(*0x20 + -0x30) = 0x44d5b0;\n                    in_R9 = arg4;\n                    fcn.0045ca40(arg4);\n                }\n                *(*0x20 + -0x30) = 0x44d5c5;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x30) = 0x44d5cc;\n            in_RAX = fcn.0045ca40(arg4);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x44d5d7;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 972
    },
    "0044e480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044e480(int64_t arg1)\n\n{\n    code **arg2;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045ea60();\n    }\n    arg2 = *(unaff_RBX + 0x18);\n    uVar1 = *(unaff_RBX + 0x30);\n    iVar2 = *(unaff_RBX + 0x10);\n    if (iVar2 < 1) {\n        fcn.0044d460(arg1, arg2);\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 0;\n        }\n        else {\n            fcn.0044ef40();\n        }\n    }\n    else {\n        iVar2 = iVar2 * ((arg1 - *(unaff_RBX + 8)) / iVar2 + 1) + *(unaff_RBX + 8);\n        *(unaff_RBX + 8) = iVar2;\n        if (iVar2 < 0) {\n            *(unaff_RBX + 8) = 0x7fffffffffffffff;\n        }\n        fcn.0044ed20(*(in_RAX + 0x2290));\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 1;\n        }\n        else {\n            fcn.0044ef40();\n        }\n        if (*(in_RAX + 0x2288) == 0) {\n            *(in_RAX + 0x1208) = 0;\n        }\n        else {\n            *(in_RAX + 0x1208) = *(**(in_RAX + 0x2280) + 8);\n        }\n    }\n    fcn.0040a580();\n    (**arg2)(uVar1);\n    fcn.0040a360();\n    return;\n}\n",
        "token_count": 493
    },
    "0044eba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044eba0(uint64_t arg1, ulong noname_1, uint64_t arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar4;\n    bool bVar5;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar4 = unaff_RBX < unaff_RDI;\n            bVar5 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44ebd1;\n                fcn.0044ef40();\n                arg1 = *(*0x20 + 0x10);\n                bVar4 = arg1 < *(*0x20 + 0x20);\n                bVar5 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar4 && !bVar5) {\n                iVar2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (iVar2 < 1) {\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x28) = 0x44ec08;\n                    fcn.0044ef40();\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                while (0 < unaff_RDI) {\n                    arg3 = unaff_RDI - 1 >> 2;\n                    if (unaff_RBX <= arg3) goto code_r0x0044ecba;\n                    arg4 = *(in_RAX + arg3 * 8);\n                    if (*(arg4 + 8) == iVar2 || *(arg4 + 8) < iVar2) break;\n                    if (unaff_RBX <= unaff_RDI) goto code_r0x0044ecaf;\n                    if (*0x5d3dd0 == 0) {\n                        *(in_RAX + unaff_RDI * 8) = arg4;\n                        unaff_RDI = arg3;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44ec66;\n                        unaff_RDI = arg3;\n                        in_RAX = fcn.0045c740(arg1, iVar2, arg3);\n                        arg3 = unaff_RDI;\n                    }\n                }\n                if (unaff_RDI < unaff_RBX) {\n                    iVar2 = *(in_RAX + unaff_RDI * 8);\n                    if (iVar2 != iVar1) {\n                        if (*0x5d3dd0 == 0) {\n                            *(in_RAX + unaff_RDI * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44ec94;\n                            unaff_RDI = fcn.0045c700(iVar2, in_RAX + unaff_RDI * 8, arg3, arg4);\n                        }\n                    }\n                    return unaff_RDI;\n                }\n                *(*0x20 + -0x28) = 0x44ecaf;\n                fcn.0045ca40(unaff_RBX);\ncode_r0x0044ecaf:\n                *(*0x20 + -0x28) = 0x44ecba;\n                fcn.0045ca40(unaff_RBX);\ncode_r0x0044ecba:\n                *(*0x20 + -0x28) = 0x44ecc5;\n                fcn.0045ca40(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44ecd0;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045ca40(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x44ecea;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1277
    },
    "0044ed20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044ed20(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar8 = unaff_RBX < unaff_RDI;\n            bVar9 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44ed51;\n                fcn.0044ef40();\n                arg1 = *(*0x20 + 0x10);\n                bVar8 = arg1 < *(*0x20 + 0x20);\n                bVar9 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar8 && !bVar9) {\n                arg2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (arg2 < 1) {\n                    *(*0x20 + -0x10) = arg2;\n                    *(*0x20 + -0x28) = 0x44ed88;\n                    fcn.0044ef40();\n                    in_RAX = *(*0x20 + 8);\n                    arg2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                arg3 = unaff_RDI;\n                while( true ) {\n                    unaff_RDI = arg3 * 4;\n                    arg4 = unaff_RDI + 1;\n                    if (unaff_RBX <= arg4) break;\n                    if (unaff_RBX <= arg4) goto code_r0x0044eee7;\n                    iVar4 = *(*(in_RAX + 8 + arg3 * 0x20) + 8);\n                    uVar5 = unaff_RDI + 2;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x0044eedc;\n                        iVar7 = *(*(in_RAX + 0x10 + arg3 * 0x20) + 8);\n                        if (iVar7 < iVar4) {\n                            arg4 = uVar5;\n                            iVar4 = iVar7;\n                        }\n                    }\n                    uVar5 = unaff_RDI + 3;\n                    uVar6 = arg4;\n                    iVar7 = iVar4;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x0044eed1;\n                        iVar7 = *(*(in_RAX + 0x18 + arg3 * 0x20) + 8);\n                        uVar6 = unaff_RDI + 4;\n                        if (uVar6 < unaff_RBX) {\n                            if (unaff_RBX <= uVar6) goto code_r0x0044eec6;\n                            iVar2 = *(*(in_RAX + 0x20 + arg3 * 0x20) + 8);\n                            if (iVar2 < iVar7) {\n                                uVar5 = uVar6;\n                                iVar7 = iVar2;\n                            }\n                        }\n                        uVar6 = uVar5;\n                        if (iVar4 <= iVar7) {\n                            uVar6 = arg4;\n                            iVar7 = iVar4;\n                        }\n                    }\n                    if (arg2 <= iVar7) break;\n                    if (unaff_RBX <= uVar6) goto code_r0x0044eebb;\n                    if (unaff_RBX <= arg3) goto code_r0x0044eeb0;\n                    if (*0x5d3dd0 == 0) {\n                        *(in_RAX + arg3 * 8) = *(in_RAX + uVar6 * 8);\n                        arg3 = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44ee70;\n                        in_RAX = fcn.0045c740(arg1, arg2, arg3);\n                        arg3 = uVar6;\n                    }\n                }\n                if (arg3 < unaff_RBX) {\n                    iVar4 = *(in_RAX + arg3 * 8);\n                    if (iVar4 != iVar1) {\n                        if (*0x5d3dd0 == 0) {\n                            *(in_RAX + arg3 * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44ee9b;\n                            fcn.0045c700(iVar4, arg2, arg3, arg4);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x44eeb0;\n                fcn.0045ca40(unaff_RBX);\ncode_r0x0044eeb0:\n                *(*0x20 + -0x28) = 0x44eebb;\n                fcn.0045ca40(unaff_RBX);\ncode_r0x0044eebb:\n                *(*0x20 + -0x28) = 0x44eec6;\n                fcn.0045ca40(unaff_RBX);\ncode_r0x0044eec6:\n                *(*0x20 + -0x28) = 0x44eed1;\n                fcn.0045ca40(unaff_RBX);\ncode_r0x0044eed1:\n                *(*0x20 + -0x28) = 0x44eedc;\n                fcn.0045ca40(unaff_RBX);\ncode_r0x0044eedc:\n                *(*0x20 + -0x28) = 0x44eee7;\n                fcn.0045ca40(unaff_RBX);\ncode_r0x0044eee7:\n                *(*0x20 + -0x28) = 0x44eef2;\n                fcn.0045ca40(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44eefd;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045ca40(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x44ef17;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1826
    },
    "0044f000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0044f000(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((*0x585d88 != 0) && ((*0x585d78 != 0 || (*0x585d31 != '\\0')))) {\n        fcn.0040a360();\n        iVar1 = *0x585d88;\n        if ((*0x585d88 != 0) && ((*0x585d78 != 0 || (*0x585d31 != '\\0')))) {\n            *0x585d88 = 0;\n            fcn.0040a580();\n            return iVar1;\n        }\n        fcn.0040a580();\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 217
    },
    "0044f0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044f0c0(void)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    puVar1 = *(in_RAX + 0x11d0);\n    *(in_RAX + 0x11d0) = 0;\n    if (puVar1 == NULL) {\n        return;\n    }\n    fcn.0040a360();\n    *puVar1 = 0;\n    puVar2 = puVar1;\n    if (*0x585d78 != NULL) {\n        **0x585d80 = puVar1;\n        puVar2 = *0x585d78;\n    }\n    *0x585d78 = puVar2;\n    *0x585d80 = puVar1;\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 244
    },
    "0044f180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044f180(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar1 = fcn.0044f840();\n    if ((*0x585d30 == '\\0') && (*(iVar1 + 0x268) == '\\0')) {\n        fcn.0044f8c0();\n        return;\n    }\n    noname_1 = unaff_RBX;\n    if ((0 < unaff_RBX) && (*(iVar1 + 0x90) == unaff_R14)) {\n        noname_1 = unaff_RBX + 1;\n    }\n    fcn.0044f280(unaff_RBX & 0xffffffff, noname_1, noname_1, arg1);\n    fcn.0044f8c0();\n    return;\n}\n",
        "token_count": 251
    },
    "0044f720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044f720(uint64_t arg1)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x10) = unaff_RBX;\n            iVar2 = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = iVar2;\n            if (unaff_R14 == iVar2) {\n                *(*0x20 + -0x48) = 0x44f7a5;\n                arg1 = fcn.00453a80(arg1);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x18);\n            }\n            else if (iVar2 == 0) {\n                arg1 = 0;\n            }\n            else {\n                *(*0x20 + -0x48) = 0x44f785;\n                arg1 = fcn.00453c00(unaff_RBX, unaff_RBX);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x18);\n            }\n            unaff_RSI = arg1 - 1;\n            if (0 < arg1) {\n                arg1 = unaff_RSI;\n            }\n            if ((0 < arg1) && (*(iVar2 + 0x98) == 1)) {\n                arg1 = arg1 - 1;\n            }\n            if (arg1 <= unaff_RDI) {\n                *(*0x20 + -0x48) = 0x44f7e5;\n                uVar1 = fcn.0044fbc0(arg1);\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x44f7f9;\n            in_RAX = fcn.0045cac0(arg1, unaff_RDI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x44f818;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 831
    },
    "0044f8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044f8c0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (in_EAX == -1) {\n        fcn.0040a580();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n    *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + -1;\n    if ((iVar1 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "0044f940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0044f940(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint unaff_EBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x585d28 == 0) {\n                uVar6 = 1;\n            }\n            else {\n                uVar6 = *0x585d28 & 0xffffffffffffff00 | *(*(unaff_R14 + 0x30) + 0x90) != *0x585d28;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x19) = uVar6;\n            if (uVar6 != '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x38) = 0x44f999;\n                fcn.0040a360();\n                in_RAX = *(*0x20 + 8);\n                uVar6 = *(*0x20 + -0x19);\n            }\n            puVar3 = *0x585d78;\n            puVar2 = *0x585d80;\n            if ((in_RAX != NULL) && (*in_RAX = 0,  puVar3 = in_RAX,  puVar2 = in_RAX,  *0x585d78 != NULL)) {\n                **0x585d80 = in_RAX;\n                puVar3 = *0x585d78;\n                puVar2 = in_RAX;\n            }\n            *0x585d80 = puVar2;\n            *0x585d78 = puVar3;\n            if (*0x585d70 == NULL) {\n                *(*0x20 + -0x38) = 0x44fa08;\n                puVar3 = fcn.00415420();\n                if (puVar3 != NULL) goto code_r0x0044fa11;\n            }\n            else {\n                puVar3 = *0x585d70;\n                *0x585d70 = **0x585d70;\ncode_r0x0044fa11:\n                *(*0x20 + -0x18) = puVar3;\n                *(*0x20 + -0x10) = puVar3;\n                *puVar3 = 0;\n                puVar3[2] = 0;\n                *(*0x20 + -0x38) = 0x44fa2d;\n                fcn.0045c420(uVar6, 0);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar1 = *(*0x20 + -0x10);\n                uVar6 = *(*0x20 + -0x30) >> 6;\n                if (*(iVar1 + 8) == *(*0x20 + -0x30) >> 6) {\n                    uVar6 = *(iVar1 + 8) + 1;\n                }\n                *(iVar1 + 8) = uVar6;\n                if (*(iVar1 + 0x10) < 0xfbe8) {\n                    *(iVar1 + 0x418 + *(iVar1 + 0x10)) = 0x41;\n                    uVar4 = *(iVar1 + 0x10) + 1;\n                    *(iVar1 + 0x10) = uVar4;\n                    for (uVar5 = *(*0x20 + 0x10); 0x7f < uVar5; uVar5 = uVar5 >> 7) {\n                        if (0xfbe7 < uVar4) goto code_r0x0044fb72;\n                        *(iVar1 + 0x418 + uVar4) = uVar5 | 0x80;\n                        uVar4 = uVar4 + 1;\n                    }\n                    if (uVar4 < 0xfbe8) {\n                        *(iVar1 + 0x418 + uVar4) = uVar5;\n                        uVar4 = uVar4 + 1;\n                        *(iVar1 + 0x10) = uVar4;\n                        for (; 0x7f < uVar6; uVar6 = uVar6 >> 7) {\n                            if (0xfbe7 < uVar4) goto code_r0x0044fb55;\n                            *(iVar1 + 0x418 + uVar4) = uVar6 | 0x80;\n                            uVar4 = uVar4 + 1;\n                        }\n                        if (uVar4 < 0xfbe8) {\n                            *(iVar1 + 0x418 + uVar4) = uVar6;\n                            *(iVar1 + 0x10) = uVar4 + 1;\n                            if (*(*0x20 + -0x19) != '\\0') {\n                                *(*0x20 + -0x38) = 0x44fb39;\n                                fcn.0040a580();\n                            }\n                            return *(*0x20 + -0x18);\n                        }\n                        *(*0x20 + -0x38) = 0x44fb55;\n                        fcn.0045ca40(0xfbe8);\ncode_r0x0044fb55:\n                        *(*0x20 + -0x38) = 0x44fb65;\n                        fcn.0045ca40(0xfbe8);\n                    }\n                    *(*0x20 + -0x38) = 0x44fb72;\n                    fcn.0045ca40(0xfbe8);\ncode_r0x0044fb72:\n                    *(*0x20 + -0x38) = 0x44fb7f;\n                    fcn.0045ca40(0xfbe8);\n                }\n                *(*0x20 + -0x38) = 0x44fb8c;\n                fcn.0045ca40(0xfbe8);\n            }\n            unaff_EBX = 0x14;\n            *(*0x20 + -0x38) = 0x44fb9d;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_EBX;\n        *(puVar7 + -8) = 0x44fbac;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_EBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1587
    },
    "0044fec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0044fec0(void)\n\n{\n    int64_t **in_RAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX + 7U & 0xfffffffffffffff8;\n            if ((*in_RAX == NULL) || (0xfff8 < in_RAX[1] + uVar2)) {\n                if (uVar2 < 0xfff9) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x44ff28;\n                    piVar1 = fcn.00415420();\n                    if (piVar1 != NULL) {\n                        in_RAX = *(*0x20 + 8);\n                        *piVar1 = *in_RAX;\n                        *in_RAX = piVar1;\n                        in_RAX[1] = NULL;\n                        uVar2 = *(*0x20 + -0x10);\n                        goto code_r0x0044ff4c;\n                    }\n                    goto code_r0x0044ff85;\n                }\n            }\n            else {\ncode_r0x0044ff4c:\n                piVar1 = in_RAX[1];\n                if (piVar1 < 0xfff8) {\n                    in_RAX[1] = piVar1 + uVar2;\n                    return *in_RAX + piVar1 + 8;\n                }\n                *(*0x20 + -0x28) = 0x44ff85;\n                fcn.0045ca60(0xfff8);\ncode_r0x0044ff85:\n                *(*0x20 + -0x28) = 0x44ff96;\n                fcn.004330a0();\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x28) = 0x44ffa7;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x44ffb7;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 674
    },
    "00450040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00450040(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044f180(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "00450100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450100(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x11d8) == '\\0') {\n                *(iVar1 + 0x11d8) = 1;\n                *(iVar1 + 0x11e0) = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x450154;\n            fcn.004330a0();\n        }\n        *(puVar2 + -8) = 0x45015a;\n        fcn.0045a360();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 296
    },
    "00450160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450160(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (*(iVar1 + 0x11d8) != '\\0') {\n        if (*(iVar1 + 0x11e0) == 0) {\n            fcn.0044f180(0);\n        }\n        *(iVar1 + 0x11e0) = *(iVar1 + 0x11e0) + in_RAX;\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00450200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450200(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x11d8) != '\\0') {\n                if (*(iVar1 + 0x11e0) != 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    *(*0x20 + -0x20) = *(iVar1 + 0x11e0);\n                    *(*0x20 + -0x18) = *(iVar1 + 0x11e8);\n                    *(*0x20 + -0x50) = 0x450279;\n                    fcn.0044f180(*0x20 + -0x20);\n                    iVar1 = *(*0x20 + -0x10);\n                }\n                *(iVar1 + 0x11d8) = 0;\n                return;\n            }\n            *(*0x20 + -0x50) = 0x4502a5;\n            fcn.004330a0();\n        }\n        *(puVar2 + -8) = 0x4502ab;\n        fcn.0045a360();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 428
    },
    "004503a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004503a0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n            iVar2 = *(*(iVar1 + 0x30) + 0xa0);\n            *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n            if (*(iVar2 + 0x1228) == 0) {\n                if (*(iVar1 + 0xe0) == iVar2) {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = *(iVar1 + 0x98);\n                    *(*0x20 + -0x68) = 0x450489;\n                    fcn.0044f180(*0x20 + -0x38);\n                    return;\n                }\n                *(iVar1 + 0xe0) = iVar2;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x30) = *(iVar1 + 0x98);\n                *(*0x20 + -0x28) = *(iVar1 + 0xd8);\n                *(*0x20 + -0x68) = 0x4504ce;\n                fcn.0044f180(*0x20 + -0x30);\n                return;\n            }\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x20) = *(iVar1 + 0x98);\n            *(*0x20 + -0x18) = *(iVar1 + 0xd8);\n            if (*(iVar2 + 0x1228) < 4) {\n                *(*0x20 + -0x10) = *(*(iVar2 + 0x1228) * 8 + 0x595dc8);\n                *(*0x20 + -0x68) = 0x450448;\n                fcn.0044f180(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x68) = 0x4504e5;\n            fcn.0045ca40(4);\n        }\n        *(puVar3 + -8) = 0x4504eb;\n        fcn.0045a360();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 688
    },
    "004507c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004507c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044f180(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "00452580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00452580(ulong arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uint uVar4;\n    int64_t in_RAX;\n    char cVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uchar uVar8;\n    int64_t unaff_RDI;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar1 = *(in_RAX + 0x27);\n            if (uVar1 < 6) {\n                uVar6 = 0;\n            }\n            else {\n                uVar2 = *(in_RAX + 0x27 + *(in_RAX + 0x1c) * 4 + 0x15);\n                uVar6 = uVar2 + *(unaff_RBX + 0x130) & (uVar2 == 0xffffffff) - 1;\n            }\n            if (uVar6 == 0) {\n                return;\n            }\n            *(*0x20 + -0x40) = uVar6;\n            *(*0x20 + 0x18) = arg1;\n            if (uVar1 < 7) {\n                uVar6 = 0;\n            }\n            else {\n                uVar2 = *(in_RAX + 0x27 + *(in_RAX + 0x1c) * 4 + 0x19);\n                uVar6 = uVar2 + *(unaff_RBX + 0x130) & (uVar2 == 0xffffffff) - 1;\n            }\n            *(*0x20 + -0x48) = uVar6;\n            *(*0x20 + -0x90) = 0x452658;\n            uVar4 = fcn.0044bfc0(3);\n            puVar3 = *(*0x20 + -0x48);\n            if (puVar3 == NULL) {\n                uVar8 = 0xff;\n            }\n            else {\n                uVar8 = *puVar3;\n            }\n            *(*0x20 + -0x5c) = uVar8;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0xc) = 0;\n            *(*0x20 + -0x20) = 0x452a80;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x10) = uVar4;\n            *(*0x20 + -0xc) = uVar8;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x38) = 0x4529a0;\n            *(*0x20 + -0x30) = *(*0x20 + 0x18);\n            *(*0x20 + -0x28) = *0x20 + -0x20;\n            *(*0x20 + -0x5b) = 1;\n            unaff_RDI = *(*0x20 + -0x40);\n            uVar6 = 0;\n            cVar5 = '\\0';\n            while (uVar6 < 0xab) {\n                *(*0x20 + -0x5a) = cVar5;\n                uVar1 = *(unaff_RDI + uVar6);\n                uVar9 = uVar6 + 1;\n                *(*0x20 + -0x58) = uVar9;\n                if (uVar1 < 0xfd) {\n                    if (uVar1 == 0xfb) {\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x45273d;\n                            fcn.00434840();\n                            *(*0x20 + -0x90) = 0x45274e;\n                            fcn.00435140();\n                            *(*0x20 + -0x90) = 0x452753;\n                            fcn.004348c0();\n                        }\n                        *(*0x20 + -0x90) = 0x452758;\n                        fcn.00434840();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x90) = 0x452769;\n                        fcn.00435140();\n                        *(*0x20 + -0x90) = 0x45276e;\n                        fcn.004348c0();\n                        uVar6 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                    }\n                    else if (uVar1 == 0xfc) {\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x45279c;\n                            fcn.00434840();\n                            *(*0x20 + -0x90) = 0x4527ad;\n                            fcn.00435140();\n                            *(*0x20 + -0x90) = 0x4527b2;\n                            fcn.004348c0();\n                        }\n                        *(*0x20 + -0x90) = 0x4527b7;\n                        fcn.00434840();\n                        unaff_RBX = 3;\n                        *(*0x20 + -0x90) = 0x4527c8;\n                        fcn.00435140();\n                        *(*0x20 + -0x90) = 0x4527cd;\n                        fcn.004348c0();\n                        uVar6 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                    }\n                    else {\ncode_r0x0045285e:\n                        *(*0x20 + -0x59) = uVar1;\n                        *(*0x20 + -0x50) = uVar6;\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x452875;\n                            fcn.00434840();\n                            unaff_RBX = 2;\n                            *(*0x20 + -0x90) = 0x452886;\n                            fcn.00435140();\n                            *(*0x20 + -0x90) = 0x45288b;\n                            fcn.004348c0();\n                            uVar6 = *(*0x20 + -0x50);\n                            unaff_RDI = *(*0x20 + -0x40);\n                            uVar9 = *(*0x20 + -0x58);\n                        }\n                        if (0xaa < uVar9) {\n                            *(*0x20 + -0x90) = 0x452945;\n                            fcn.0045ca40(0xab);\n                            break;\n                        }\n                        unaff_RBX = *(uVar6 + 1 + unaff_RDI);\n                        *(*0x20 + -0x90) = 0x4528cb;\n                        (**(*0x20 + -0x38))();\n                        if (*(*0x20 + -0x59) < *(*0x20 + -0x5c)) {\n                            cVar5 = *(*0x20 + -0x5a);\n                        }\n                        else {\n                            cVar5 = *(*0x20 + -0x5a) + '\\x01';\n                        }\n                        uVar6 = *(*0x20 + -0x50) + 2;\n                    }\ncode_r0x0045291e:\n                    *(*0x20 + -0x5b) = 0;\n                }\n                else {\n                    if (uVar1 == 0xfd) {\n                        *(*0x20 + -0x90) = 0x4528f9;\n                        fcn.00434840();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x90) = 0x45290a;\n                        fcn.00435140();\n                        *(*0x20 + -0x90) = 0x45290f;\n                        fcn.004348c0();\n                        uVar6 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                        goto code_r0x0045291e;\n                    }\n                    if (uVar1 != 0xfe) {\n                        if (uVar1 == 0xff) {\n                            return;\n                        }\n                        goto code_r0x0045285e;\n                    }\n                    if (*(*0x20 + -0x5b) == '\\0') {\n                        *(*0x20 + -0x90) = 0x452805;\n                        fcn.00434840();\n                        *(*0x20 + -0x90) = 0x452816;\n                        fcn.00435140();\n                        *(*0x20 + -0x90) = 0x45281b;\n                        fcn.004348c0();\n                    }\n                    *(*0x20 + -0x90) = 0x452825;\n                    fcn.00434840();\n                    unaff_RBX = 1;\n                    *(*0x20 + -0x90) = 0x452836;\n                    fcn.00435140();\n                    *(*0x20 + -0x90) = 0x45283b;\n                    fcn.004348c0();\n                    *(*0x20 + -0x5b) = 1;\n                    uVar6 = *(*0x20 + -0x58);\n                    cVar5 = *(*0x20 + -0x5a);\n                }\n                unaff_RDI = *(*0x20 + -0x40);\n            }\n            arg1 = 0xab;\n            *(*0x20 + -0x90) = 0x45294f;\n            in_RAX = fcn.0045ca40(0xab);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + -8) = 0x452969;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2524
    },
    "00452f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00452f40(ulong param_1, ulong param_2)\n\n{\n    ulong arg1;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    arg1 = *(in_RAX + 0x128);\n    iVar2 = fcn.0044b1a0();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00453ca0(in_RAX, param_2, 0);\n    }\n    if ((cVar1 != '\\0') && (*(in_RAX + 0x98) != 1)) {\n        iVar2 = fcn.00452fe0(arg1);\n    }\n    return iVar2;\n}\n",
        "token_count": 230
    },
    "00453600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00453600(ulong arg1)\n\n{\n    ulong arg1_00;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434f40();\n    fcn.00435140();\n    fcn.004348c0();\n    for (uVar3 = 0; uVar3 < unaff_RBX; uVar3 = uVar3 + 1) {\n        arg1_00 = *(in_RAX + uVar3 * 8);\n        uVar4 = uVar3;\n        fcn.0044b1a0();\n        cVar1 = fcn.00453d60(uVar4 & 0xffffff00 | uVar3 == 0);\n        if (cVar1 != '\\0') {\n            fcn.004537c0(arg1_00);\n        }\n    }\n    if (unaff_RBX == 100) {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.004348c0();\n    }\n    iVar2 = fcn.0044b1a0();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00453d60();\n    }\n    if ((cVar1 != '\\0') && (unaff_RDI != 1)) {\n        iVar2 = fcn.00452fe0(uStack0000000000000028);\n    }\n    return iVar2;\n}\n",
        "token_count": 475
    },
    "00453ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00453ca0(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n        unaff_EDI = unaff_EDI & 0xff;\n    }\n    iVar1 = *(unaff_R14 + 0x30);\n    if (((0 < *(iVar1 + 0xc4)) && (arg1 != 0)) && ((*(iVar1 + 0x90) == arg1 || (arg1 == *(iVar1 + 0x98))))) {\n        return 1;\n    }\n    uVar2 = fcn.00453d60(unaff_EDI);\n    return uVar2;\n}\n",
        "token_count": 218
    },
    "00453d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00453d60(uint64_t param_1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t *piVar2;\n    uint64_t noname_0;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    char unaff_SIL;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    bool bVar3;\n    int64_t iStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n        param_1 = param_1 & 0xff;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    arg2 = *0x564468 >> 2;\n    if (uVar1 != 0) {\n        arg2 = uVar1;\n    }\n    if (1 < arg2) {\n        return true;\n    }\n    if (in_RAX == 0) {\n        return false;\n    }\n    if ((((unaff_DIL == '\\x15') && (unaff_SIL != '\\t')) && (unaff_SIL != '\\x12')) && (unaff_SIL != '\\x0e')) {\n        return false;\n    }\n    noname_0 = param_1;\n    piVar2 = fcn.0044b920();\n    if ((((unaff_RBX == 0xf) && (noname_0 = 0x2e656d69746e7572,  *piVar2 == 0x2e656d69746e7572)) &&\n        ((*(piVar2 + 1) == 0x61706f67 && ((*(piVar2 + 0xc) == 0x696e && (*(piVar2 + 0xe) == 'c')))))) &&\n       (arg2 = param_1 & 0xff,  param_1 == '\\0')) {\n        return true;\n    }\n    fcn.00402320(noname_0, arg2);\n    if (iStack32 < 0) {\n        bVar3 = false;\n    }\n    else {\n        if (unaff_RBX < 8) {\n            bVar3 = false;\n        }\n        else {\n            bVar3 = *piVar2 == 0x2e656d69746e7572;\n        }\n        if (bVar3) {\n            if (((unaff_RBX < 9) || (*piVar2 != 0x2e656d69746e7572)) || (*(piVar2 + 1) < 0x41)) {\n                bVar3 = false;\n            }\n            else {\n                bVar3 = *(piVar2 + 1) < 0x5b;\n            }\n        }\n        else {\n            bVar3 = true;\n        }\n    }\n    return bVar3;\n}\n",
        "token_count": 658
    },
    "004546a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004546a0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x57ef98 != 0) {\n        uStack64 = SUB168(in_XMM15, 0);\n        uStack48 = SUB168(in_XMM15 >> 0x40, 0);\n        uStack56 = uStack64;\n        for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n            fcn.004547c0(&uStack64);\n        }\n        uStack64 = 0;\n        fcn.004549c0();\n        return;\n    }\n    for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434fa0();\n        fcn.00434aa0();\n        fcn.004348c0();\n    }\n    return;\n}\n",
        "token_count": 340
    },
    "004547c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004547c0(ulong *arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    *arg1 = in_RAX;\n    iVar1 = 0;\n    do {\n        if (unaff_RBX < iVar1) {\n            return iVar1;\n        }\n        fcn.004549c0();\n        if (arg1[3] == 0) {\n            fcn.00434840();\n            fcn.00435140();\n            fcn.004348c0();\n        }\n        else {\n            fcn.004495c0();\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00434aa0();\n            fcn.004348c0();\n        }\n        fcn.00434840();\n        fcn.00435140();\n        fcn.004348c0();\n        if (arg1[1] != 0) {\n            fcn.004495c0();\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00434e40();\n            fcn.00434a60();\n            fcn.004348c0();\n        }\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434fa0();\n        fcn.00434aa0();\n        fcn.004348c0();\n        iVar1 = iVar1 + 1;\n    } while (arg1[5] != 0);\n    return iVar1;\n}\n",
        "token_count": 404
    },
    "004549c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004549c0(void)\n\n{\n    code *pcVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((*0x5d3b88 == 0) && (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n        pcVar1 = vtable.Ld_M_fL.0;\n    }\n    else {\n        pcVar1 = 0x4d5bb0;\n    }\n    (**pcVar1)(pcVar1, pcVar1);\n    return;\n}\n",
        "token_count": 170
    },
    "00454a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00454a40(int64_t arg1)\n\n{\n    ulong in_RAX;\n    code *pcVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x57efa0 == 0) {\n                return;\n            }\n            if ((*0x5d3b88 == 0) && (unaff_RDI = unaff_R14,  *(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n                pcVar1 = vtable.Ld_M_fL.0;\n            }\n            else {\n                pcVar1 = 0x4d5bb0;\n            }\n            if (arg1 != 0) {\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x28) = in_RAX;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = *pcVar1;\n                *(*0x20 + -0x40) = 0x454aca;\n                (*pcVar1)();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x454ae5;\n            in_RAX = fcn.0045ca40(0);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x454aff;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 626
    },
    "00454b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00454b20(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar2 = param_1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x28);\n            *(*0x20 + -0x20) = 0x454b45;\n            fcn.00454d00();\n            *(*0x20 + -0x20) = 0x454b4a;\n            iVar1 = fcn.00455460(param_1, param_2, param_3, param_4);\n            if ((*(*(*0x20 + 8) + 0x14) & 2) == 0) {\n                return iVar1;\n            }\n            if (uVar2 != 0) {\n                return iVar1 + (-(uVar2 - 1) >> 0x3f & 1);\n            }\n            *(*0x20 + -0x20) = 0x454b95;\n            in_RAX = fcn.0045cb00(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x454ba5;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        param_1 = uVar2;\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 473
    },
    "00455780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00455780(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar4 = 0;\n    iVar5 = 0;\n    while( true ) {\n        uVar1 = *(in_RAX + iVar4 + 1);\n        uVar3 = iVar4 * 7;\n        if (uVar3 < 0) {\n            fcn.004316c0();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        iVar5 = iVar5 + ((uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((uVar1 & 0x80) == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    if (iVar5 == 1) {\n        uVar3 = uVar3 & 0xffffffffffffff00 | *(in_RAX + 2) == '_';\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 320
    },
    "00455820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00455820(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    ulong *puVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    int64_t *piVar16;\n    int64_t iVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    int64_t arg4;\n    int64_t iVar20;\n    int64_t iVar21;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar15 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x238 && *0x20 + -0x238 != *(unaff_R14 + 0x10)) {\n            puVar15 = *0x20 + -0x2b8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x56a600 == 0) {\n                return in_RAX;\n            }\n            *(*0x20 + -0x1b8) = in_XMM15;\n            *(*0x20 + -0x1a8) = in_XMM15;\n            *(*0x20 + -0x198) = in_XMM15;\n            if (*0x56a538 < 9) {\n                *(*0x20 + -0x2c8) = unaff_RBP;\n                *(*0x20 + -0x2c0) = 0x45589a;\n                fcn.0045ccb8();\n                unaff_RBP = *(*0x20 + -0x2c8);\n                *(*0x20 + -0x1a8) = *0x20 + -0xf8;\n            }\n            *(*0x20 + -0x2c0) = 0x4558c5;\n            uVar5 = fcn.0040d000(*0x20 + -0x1b8);\n            if (*0x57efb8 == NULL) {\n                piVar16 = NULL;\n                piVar7 = NULL;\n                piVar12 = NULL;\n            }\n            else {\n                piVar7 = **0x57efb8;\n                piVar16 = (*0x57efb8)[1];\n                piVar12 = (*0x57efb8)[2];\n            }\n            if (piVar16 != NULL) {\n                *(*0x20 + -0x238) = uVar5;\n                iVar19 = *piVar7;\n                iVar13 = (-(piVar12 + -1) >> 0x3f & 8) + piVar7;\n                *(*0x20 + -0x1f0) = iVar13;\n                iVar21 = piVar16 + -1;\n                *(*0x20 + -0x240) = iVar21;\n                iVar9 = 0;\n                do {\n                    if (iVar21 <= iVar9) {\n                        return uVar5;\n                    }\n                    *(*0x20 + -0x248) = iVar9;\n                    *(*0x20 + -0x218) = iVar19;\n                    iVar17 = *(iVar13 + iVar9 * 8);\n                    *(*0x20 + -0x1f8) = iVar17;\n                    arg4 = *(iVar19 + 0x150);\n                    *(*0x20 + -0x200) = arg4;\n                    iVar20 = *(iVar19 + 0x158);\n                    *(*0x20 + -0x250) = iVar20;\n                    iVar14 = 0;\n                    while (iVar14 < iVar20) {\n                        *(*0x20 + -600) = iVar14;\n                        uVar1 = *(arg4 + iVar14 * 4);\n                        if (*(iVar19 + 0x210) == 0) {\n                            iVar21 = uVar1 + *(iVar19 + 0x118);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x455b1c;\n                            piVar7 = fcn.0040ee20(uVar1);\n                            iVar21 = *piVar7;\n                        }\n                        *(*0x20 + -0x220) = iVar21;\n                        uVar1 = *(iVar21 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x455b45;\n                        piVar7 = fcn.0040ee20(uVar1);\n                        uVar11 = piVar7[1];\n                        iVar21 = *piVar7;\n                        iVar9 = *(*0x20 + -0x220);\n                        for (iVar13 = 0; iVar13 < uVar11; iVar13 = iVar13 + 1) {\n                            if (*(iVar21 + iVar13 * 8) == iVar9) goto code_r0x00455a9e;\n                        }\n                        uVar10 = uVar11 + 1;\n                        uVar6 = uVar11;\n                        iVar13 = iVar21;\n                        uVar18 = piVar7[2];\n                        if (piVar7[2] < uVar10) {\n                            *(*0x20 + -0x270) = uVar11;\n                            *(*0x20 + -0x2c0) = 0x455b79;\n                            iVar13 = fcn.00444c60(uVar11);\n                            uVar10 = iVar21 + 1;\n                            iVar9 = *(*0x20 + -0x220);\n                            uVar6 = *(*0x20 + -0x270);\n                            uVar18 = uVar11;\n                        }\n                        *(*0x20 + -0x210) = iVar13;\n                        *(*0x20 + -0x260) = uVar10;\n                        *(*0x20 + -0x268) = uVar18;\n                        iVar21 = iVar13 + uVar6 * 8;\n                        if (*0x5d3dd0 == 0) {\n                            *(iVar13 + uVar6 * 8) = iVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x455bbd;\n                            fcn.0045c6c0(uVar6, iVar9, iVar21, arg4);\n                        }\n                        uVar11 = *(iVar9 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x455bd4;\n                        puVar8 = fcn.0040f160(uVar11);\n                        puVar8[1] = *(*0x20 + -0x260);\n                        puVar8[2] = *(*0x20 + -0x268);\n                        if (*0x5d3dd0 == 0) {\n                            *puVar8 = *(*0x20 + -0x210);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x455c0f;\n                            fcn.0045c6c0(uVar11, *(*0x20 + -0x210), iVar21, arg4);\n                        }\ncode_r0x00455a9e:\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar13 = *(*0x20 + -0x1f0);\n                        iVar21 = *(*0x20 + -0x240);\n                        iVar17 = *(*0x20 + -0x1f8);\n                        iVar19 = *(*0x20 + -0x218);\n                        arg4 = *(*0x20 + -0x200);\n                        iVar20 = *(*0x20 + -0x250);\n                        iVar14 = *(*0x20 + -600) + 1;\n                    }\n                    if (*(iVar17 + 0x210) == 0) {\n                        *(*0x20 + -0x2c0) = 0x455997;\n                        uVar5 = fcn.0040d000(0);\n                        uVar11 = *0x57fd10;\n                        uVar10 = *0x57fd18;\n                        uVar6 = *0x57fd10;\n                        if (*0x57fd20 < *0x57fd18 + 1) {\n                            *(*0x20 + -0x230) = uVar5;\n                            *(*0x20 + -0x2c0) = 0x4559c9;\n                            uVar6 = fcn.00444c60(*0x57fd18);\n                            uVar18 = uVar6;\n                            *0x57fd20 = uVar10;\n                            if (*0x5d3dd0 != 0) {\n                                *(*0x20 + -0x2c0) = 0x4559ee;\n                                uVar6 = fcn.0045c5a0(uVar10, iVar13, iVar19, arg4);\n                                uVar18 = *0x57fd10;\n                            }\n                            *0x57fd10 = uVar18;\n                            uVar5 = *(*0x20 + -0x230);\n                            uVar10 = uVar11;\n                        }\n                        *0x57fd18 = uVar10 + 1;\n                        if (*0x5d3dd0 == 0) {\n                            *(uVar6 + uVar10 * 8) = uVar5;\n                            iVar21 = *(*0x20 + -0x1f8);\n                            *(iVar21 + 0x210) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x455a2e;\n                            fcn.0045c5a0(uVar10, *0x57fd18, iVar19, arg4);\n                            iVar21 = *(*0x20 + -0x1f8);\n                            *(*0x20 + -0x2c0) = 0x455a45;\n                            fcn.0045c5a0(uVar10, iVar21, iVar19, arg4);\n                        }\n                        iVar13 = *(iVar21 + 0x150);\n                        *(*0x20 + -0x200) = iVar13;\n                        iVar19 = *(iVar21 + 0x158);\n                        *(*0x20 + -0x250) = iVar19;\n                        iVar9 = 0;\n                        while (iVar9 < iVar19) {\n                            *(*0x20 + -600) = iVar9;\n                            iVar2 = *(iVar13 + iVar9 * 4);\n                            *(*0x20 + -0x274) = iVar2;\n                            iVar19 = iVar2 + *(iVar21 + 0x118);\n                            *(*0x20 + -0x208) = iVar19;\n                            uVar1 = *(iVar19 + 0x10);\n                            *(*0x20 + -0x2c0) = 0x455c71;\n                            piVar7 = fcn.0040ee20(uVar1);\n                            iVar9 = *piVar7;\n                            *(*0x20 + -0x210) = iVar9;\n                            iVar13 = piVar7[1];\n                            *(*0x20 + -0x260) = iVar13;\n                            iVar21 = 0;\n                            while (iVar21 < iVar13) {\n                                *(*0x20 + -0x268) = iVar21;\n                                *(*0x20 + -0x228) = *(iVar9 + iVar21 * 8);\n                                *(*0x20 + -0x1e8) = in_XMM15;\n                                *(*0x20 + -0x1d8) = in_XMM15;\n                                *(*0x20 + -0x1c8) = in_XMM15;\n                                *(*0x20 + -0x2c8) = unaff_RBP;\n                                *(*0x20 + -0x2c0) = 0x455d6f;\n                                fcn.0045ccd9();\n                                unaff_RBP = *(*0x20 + -0x2c8);\n                                *(*0x20 + -0x1d8) = *0x20 + -0x188;\n                                *(*0x20 + -0x2c0) = 0x455d88;\n                                uVar4 = fcn.004498a0();\n                                *(*0x20 + -0x1dc) = uVar4;\n                                *(*0x20 + -0x2c0) = 0x455dac;\n                                cVar3 = fcn.00455e00(*0x20 + -0x1e8);\n                                if (cVar3 != '\\0') {\n                                    uVar5 = *(*0x20 + -0x228);\n                                    goto code_r0x00455c9e;\n                                }\n                                iVar19 = *(*0x20 + -0x268);\n                                iVar9 = *(*0x20 + -0x210);\n                                iVar13 = *(*0x20 + -0x260);\n                                iVar21 = iVar19 + 1;\n                            }\n                            uVar5 = *(*0x20 + -0x208);\ncode_r0x00455c9e:\n                            *(*0x20 + -0x228) = uVar5;\n                            uVar11 = *(*0x20 + -0x274);\n                            *(*0x20 + -0x2c0) = 0x455cc5;\n                            puVar8 = fcn.0040f160(uVar11);\n                            if (*0x5d3dd0 == 0) {\n                                *puVar8 = *(*0x20 + -0x228);\n                            }\n                            else {\n                                *(*0x20 + -0x2c0) = 0x455cf5;\n                                fcn.0045c6c0(uVar11, *(*0x20 + -0x228), iVar19, arg4);\n                            }\n                            iVar21 = *(*0x20 + -0x1f8);\n                            iVar13 = *(*0x20 + -0x200);\n                            iVar19 = *(*0x20 + -0x250);\n                            iVar9 = *(*0x20 + -600) + 1;\n                        }\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar13 = *(*0x20 + -0x1f0);\n                        iVar21 = *(*0x20 + -0x240);\n                        iVar17 = *(*0x20 + -0x1f8);\n                    }\n                    iVar9 = iVar9 + 1;\n                    iVar19 = iVar17;\n                } while( true );\n            }\n            *(*0x20 + -0x2c0) = 0x455de5;\n            fcn.0045ca40(0);\n        }\n        *(puVar15 + -8) = 0x455deb;\n        in_RAX = fcn.0045a360();\n        *0x20 = puVar15;\n    } while( true );\n}\n",
        "token_count": 3342
    },
    "00456fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00456fe0(void)\n\n{\n    if (*0x5d3dd0 != '\\0') {\n        fcn.004031e0();\n    }\n    fcn.004621c0();\n    return;\n}\n",
        "token_count": 51
    },
    "00457040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457040(ulong arg1)\n\n{\n    if (*0x5d3dd0 != '\\0') {\n        fcn.004031e0();\n    }\n    fcn.00462180(arg1);\n    return;\n}\n",
        "token_count": 54
    },
    "00457360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457360(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = in_RAX;\n    if (*0x5d3dd0 != 0) {\n        fcn.0045c5a0(arg1, arg2, arg3, arg4);\n        uVar1 = *0x57efd0;\n    }\n    *0x57efd0 = uVar1;\n    return;\n}\n",
        "token_count": 171
    },
    "004574c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004574c0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x4574e9;\n            iVar3 = fcn.0042cc80();\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x10) = iVar3 + 0x28;\n            *(*0x20 + -0x38) = 0x457505;\n            fcn.0040a360();\n            iVar3 = *(*0x20 + -0x18);\n            if ((*(iVar3 + 0x20) == 0) || (*(iVar3 + 0x20) == 1)) {\n                if ((*(iVar3 + 0x18) == 0) || (*(iVar3 + 0x18) == 1)) {\n                    *(iVar3 + 8) = *(*0x20 + 8);\n                    *(iVar3 + 0x30) = 0;\n                    uVar4 = *(iVar3 + 0x10);\n                    while( true ) {\n                        if ((uVar4 >> 1 & 1) == 0) {\n                            bVar6 = false;\n                        }\n                        else {\n                            LOCK();\n                            bVar6 = uVar4 == *(iVar3 + 0x10);\n                            if (bVar6) {\n                                *(iVar3 + 0x10) = uVar4 ^ 2;\n                            }\n                            bVar6 = !bVar6;\n                        }\n                        if (!bVar6) break;\n                        uVar4 = *(iVar3 + 0x10);\n                    }\n                    *(iVar3 + 0x38) = *(iVar3 + 0x38) + 1;\n                    *(iVar3 + 0x18) = 0;\n                    *(iVar3 + 0x88) = 0;\n                    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n                    *(iVar3 + 0x20) = 0;\n                    *(iVar3 + 0xe0) = 0;\n                    *(iVar3 + 0xe8) = iVar3;\n                    uVar4 = *(iVar3 + 0x10);\n                    uVar1 = *(iVar3 + 0x30);\n                    if (*(iVar3 + 0x88) < 0) {\n                        uVar1 = *(iVar3 + 0x30) | 4;\n                    }\n                    while( true ) {\n                        LOCK();\n                        if (uVar4 == *(iVar3 + 0x10)) break;\n                        uVar4 = *(iVar3 + 0x10);\n                    }\n                    *(iVar3 + 0x10) = uVar4 & 2 | uVar1;\n                    *(*0x20 + -0x38) = 0x4575e5;\n                    fcn.0040a580();\n                    *(*0x20 + -0x38) = 0x4575f4;\n                    iVar2 = fcn.0042ce40();\n                    if (iVar2 != 0) {\n                        *(*0x20 + -0x1c) = iVar2;\n                        *(*0x20 + -0x38) = 0x45760d;\n                        fcn.0042cb00();\n                        return 0;\n                    }\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x457645;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x38) = 0x457656;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x457665;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1037
    },
    "00457680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457680(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x30) != '\\0') {\n                if ((*(in_RAX + 0x20) == 0) || (*(in_RAX + 0x20) == 1)) {\n                    if ((*(in_RAX + 0x18) == 0) || (*(in_RAX + 0x18) == 1)) {\n                        *(*0x20 + -0x20) = 0x4576cd;\n                        fcn.0042cb00();\n                        return;\n                    }\n                    *(*0x20 + -0x20) = 0x4576e8;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x20) = 0x4576f9;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x20) = 0x45770a;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x457715;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 418
    },
    "00457720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457720(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t in_RAX;\n    int64_t arg1;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint64_t arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x28;\n            *(*0x20 + -0x38) = 0x457751;\n            fcn.0040a360();\n            arg1 = *(*0x20 + 8);\n            if (*(arg1 + 0x30) == '\\0') break;\n            *(*0x20 + -0x38) = 0x457945;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x457950;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n    *(arg1 + 0x30) = 1;\n    *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n    *(arg1 + 0x90) = *(arg1 + 0x90) + 1;\n    uVar8 = *(arg1 + 0x10);\n    uVar4 = *(arg1 + 0x30);\n    if (*(arg1 + 0x88) < 0) {\n        uVar4 = *(arg1 + 0x30) | 4;\n    }\n    arg3 = uVar4 | 8;\n    if (*(arg1 + 0xe0) < 0) {\n        uVar4 = uVar4 | 8;\n    }\n    while( true ) {\n        LOCK();\n        if (uVar8 == *(arg1 + 0x10)) break;\n        uVar8 = *(arg1 + 0x10);\n    }\n    *(arg1 + 0x10) = uVar8 & 2 | uVar4;\n    do {\n        uVar5 = *(arg1 + 0x18);\n        if (uVar5 == 1) {\n            uVar5 = 0;\n            goto code_r0x004577fd;\n        }\n        if (uVar5 == 0) {\n            uVar5 = 0;\n            goto code_r0x004577fd;\n        }\n        LOCK();\n        puVar1 = arg1 + 0x18;\n        uVar7 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar5 == uVar7) * *puVar1;\n    } while (uVar5 != uVar7);\n    if (uVar5 == 2) {\n        uVar5 = 0;\n    }\ncode_r0x004577fd:\n    do {\n        uVar7 = *(arg1 + 0x20);\n        if (uVar7 == 1) {\n            uVar7 = 0;\n            goto code_r0x0045782e;\n        }\n        if (uVar7 == 0) {\n            uVar7 = 0;\n            goto code_r0x0045782e;\n        }\n        LOCK();\n        puVar1 = arg1 + 0x20;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar7 == uVar2) * *puVar1;\n        if (uVar7 == uVar2) {\n            if (uVar7 == 2) {\n                uVar7 = 0;\n            }\ncode_r0x0045782e:\n            *(*0x20 + -0x18) = uVar5;\n            *(*0x20 + -0x20) = uVar7;\n            if (*(arg1 + 0x58) != 0) {\n                *(*0x20 + -0x38) = 0x457848;\n                fcn.0044cf80();\n                if (*0x5d3dd0 == 0) {\n                    arg1 = *(*0x20 + 8);\n                    *(arg1 + 0x58) = 0;\n                }\n                else {\n                    arg1 = *(*0x20 + 8);\n                    *(*0x20 + -0x38) = 0x457872;\n                    fcn.0045c6c0(arg1, 0, arg3, in_R9);\n                }\n            }\n            if (*(arg1 + 0xb0) != 0) {\n                *(*0x20 + -0x38) = 0x457892;\n                fcn.0044cf80();\n                if (*0x5d3dd0 == 0) {\n                    *(*(*0x20 + 8) + 0xb0) = 0;\n                }\n                else {\n                    *(*0x20 + -0x38) = 0x4578c5;\n                    fcn.0045c6a0(0);\n                }\n            }\n            *(*0x20 + -0x38) = 0x4578d1;\n            fcn.0040a580();\n            iVar3 = *0x5d3b7c;\n            if (*(*0x20 + -0x18) != 0) {\n                LOCK();\n                *0x5d3b7c = *0x5d3b7c + -1;\n                *(*0x20 + -0x38) = 0x4578f6;\n                fcn.00435b20(iVar3);\n            }\n            iVar3 = *0x5d3b7c;\n            if (*(*0x20 + -0x20) != 0) {\n                LOCK();\n                *0x5d3b7c = *0x5d3b7c + -1;\n                *(*0x20 + -0x38) = 0x457925;\n                fcn.00435b20(iVar3);\n            }\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1507
    },
    "004579e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.004579e0(ulong param_1, int64_t param_2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    int64_t *piVar5;\n    int64_t *unaff_R14;\n    uchar auStackX8 [32];\n    int64_t iStack40;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    if (unaff_R14[0xe] < auStackX8) {\n        fcn.004330a0();\n        iVar2 = unaff_R14[6];\n        piVar1 = iVar2 + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        return **(iVar2 + 0xa0);\n    }\n    unaff_R14[0x15] = 0;\n    iVar2 = *(unaff_R14[6] + 0xb0);\n    *(unaff_R14[6] + 0xb0) = 0;\n    cVar4 = fcn.0043d440();\n    if (cVar4 != '\\0') {\n        if (*0x585d30 != '\\0') {\n            iVar3 = *(unaff_R14[6] + 0xa0);\n            if ((iVar3 != iVar2) || (*(iVar3 + 0x14) != *(unaff_R14[6] + 0x26c))) {\n                fcn.0045a220();\n            }\n        }\n        piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n        fcn.00437400(2);\n        unaff_R14[0xe] = 0;\n        *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n        if (*(unaff_R14 + 0xb1) == '\\0') {\n            unaff_R14[2] = *unaff_R14 + 0x13a0;\n        }\n        else {\n            unaff_R14[2] = -0x522;\n        }\n        *(unaff_R14 + 0xb7) = 0;\n        if ((*0x580718 != '\\0') && (unaff_R14 = fcn.004545c0(),  unaff_R14 == '\\0')) {\n            unaff_R14 = fcn.004359a0();\n        }\n        return unaff_R14;\n    }\n    unaff_R14[0x1a] = 0;\n    if (*0x585d30 != '\\0') {\n        while ((iVar2 != 0 && (param_2 = unaff_R14[6],  *(param_2 + 0x26c) == *(iVar2 + 0x14)))) {\n            iStack40 = 0x4d5e58;\n            fcn.0045a220();\n        }\n        fcn.0045c420(unaff_R14, param_2);\n        unaff_R14[0x1a] = iStack40;\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    piVar5 = fcn.0045a1a0();\n    unaff_R14[0xe] = 0;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    *(unaff_R14 + 0xb7) = 0;\n    return piVar5;\n}\n",
        "token_count": 850
    },
    "00457ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00457ca0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (((3 < in_RAX) || (*0x5d3b74 < 2)) || (*0x5d3b70 <= *0x5806f8 + *0x5806fc + 1)) {\n        return 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    do {\n    } while (*(iVar1 + 0x194) != *(iVar1 + 0x194));\n    if ((*(iVar1 + 0x194) == *(iVar1 + 400)) && (*(iVar1 + 0x998) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 190
    },
    "00457f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00457f80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t *puVar5;\n    ulong *puVar6;\n    uint64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    if (*0x57fdb0 == 0) {\n        iVar3 = fcn.0040cf80();\n        if (*0x5d3dd0 != 0) {\n            fcn.0045c5a0(param_1, param_2, param_3, param_4);\n            iVar3 = *0x57fdb0;\n        }\n        *0x57fdb0 = iVar3;\n        uVar4 = fcn.0040cf80();\n        if (*0x5d3dd0 != 0) {\n            fcn.0045c5a0(param_1, param_2, param_3, param_4);\n            uVar4 = *0x57fdb8;\n        }\n        *0x57fdb8 = uVar4;\n        *0x57fda8 = 0xffffffff;\n    }\n    uVar4 = *0x57fdb8;\n    puVar5 = fcn.0040f8c0(in_RAX);\n    uVar2 = *0x57fda8;\n    uVar1 = *puVar5;\n    if (uVar4 == '\\0') {\n        arg1 = *0x57fda8;\n        *0x57fda8 = *0x57fda8 - 1;\n        puVar6 = fcn.0040f160(arg1);\n        if (*0x5d3dd0 == 0) {\n            *puVar6 = in_RAX;\n        }\n        else {\n            fcn.0045c6a0();\n        }\n        puVar5 = fcn.0040fd80(in_RAX);\n        *puVar5 = uVar2;\n        uVar1 = uVar2;\n    }\n    fcn.0040a580();\n    return uVar1;\n}\n",
        "token_count": 549
    },
    "00458440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00458440(uchar param_1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int64_t in_RAX;\n    int64_t **ppiVar3;\n    ulong uVar4;\n    ulong *puVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    int64_t *arg1;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    ulong uVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    bool bVar13;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX != 0) && ((*(in_RAX + 0x17) & 0x1f) == 0x13)) {\n                *(*0x20 + -0x98) = in_XMM15;\n                *(*0x20 + -0x88) = in_XMM15;\n                *(*0x20 + -0x78) = in_XMM15;\n                *(*0x20 + -0x68) = in_XMM15;\n                if ((*(in_RAX + 0x14) & 1) == 0) {\n                    iVar8 = 0x38;\n                }\n                else {\n                    iVar8 = 0x48;\n                }\n                arg1_00 = *(in_RAX + 0x30);\n                if (arg1_00 < 0x100001) {\n                    *(*0x20 + -0xb0) = in_RAX;\n                    *(*0x20 + -0xc0) = iVar8 + in_RAX;\n                    *(*0x20 + -0xb8) = unaff_RBX;\n                    *(*0x20 + -200) = arg1_00;\n                    iVar8 = 0;\n                    while (iVar8 < arg1_00) {\n                        *(*0x20 + -0xd0) = iVar8;\n                        *(*0x20 + -0x100) = 0x458505;\n                        fcn.0044c340();\n                        in_RAX = *(*0x20 + -0xb0);\n                        arg1_00 = *(*0x20 + -200);\n                        iVar8 = *(*0x20 + -0xd0) + 1;\n                    }\n                    arg2 = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x60) = arg2;\n                    uVar1 = *(in_RAX + 0x14);\n                    arg1_00 = uVar1;\n                    uVar2 = *(in_RAX + 0x30);\n                    piVar12 = uVar2;\n                    arg1 = (*(in_RAX + 0x32) & 0x7fff) + uVar2 & 0xffff;\n                    if (piVar12 <= arg1) {\n                        arg4 = uVar2;\n                        arg3 = piVar12 << 3;\n                        uVar11 = piVar12 + -0x20000 >> 0x3f & arg3;\n                        arg1 = arg1 - arg4;\n                        if (arg1 == 0x1) {\n                            if ((uVar1 & 1) == 0) {\n                                iVar8 = 0x38;\n                            }\n                            else {\n                                iVar8 = 0x48;\n                            }\n                            arg1 = *(iVar8 + in_RAX + uVar11);\n                            if (*arg1 == 8) {\n                                if ((uVar1 & 1) == 0) {\n                                    iVar8 = 0x38;\n                                }\n                                else {\n                                    iVar8 = 0x48;\n                                }\n                                uVar7 = *(*(iVar8 + in_RAX + uVar11) + 0x17) & 0x1f;\n                                arg1 = uVar7;\n                                cVar6 = uVar7;\n                                if ((cVar6 != '\\r') && (cVar6 != '\\x0e')) {\n                                    if (*0x564570 == 0) {\n                                        *(*0x20 + -0x78) = arg2 + 8;\n                                    }\n                                    arg1 = (*(*0x20 + -0x78) + 7U & 0xfffffffffffffff8) + *(*0x20 + -0x70);\n                                    if (arg1 < 0x201) {\n                                        *(*0x20 + -0x100) = 0x45863b;\n                                        fcn.0040a360();\n                                        iVar8 = *0x5d3b08;\n                                        *(*0x20 + -0xa8) = *(*0x20 + -0xb8);\n                                        *(*0x20 + -0xa0) = 0;\n                                        *(*0x20 + -0x100) = 0x458665;\n                                        ppiVar3 = fcn.0040d400(*0x20 + -0xa8);\n                                        arg1 = *ppiVar3;\n                                        if (iVar8 != '\\0') {\n                                            *(*0x20 + -0xd8) = arg1;\n                                            *(*0x20 + -0x100) = 0x4587fd;\n                                            fcn.0040a580();\n                                            *(*0x20 + -0x100) = 0x458807;\n                                            fcn.0044ca00();\n                                            return;\n                                        }\n                                        iVar8 = *0x5d3b08;\n                                        if (*0x5d3b08 == 0) {\n                                            *(*0x20 + -0x100) = 0x45867f;\n                                            iVar8 = fcn.0040cf80();\n                                            if (*0x5d3dd0 != 0) {\n                                                *(*0x20 + -0x100) = 0x45869d;\n                                                fcn.0045c5a0(arg1, arg2, arg3, arg4);\n                                                iVar8 = *0x5d3b08;\n                                            }\n                                        }\n                                        *0x5d3b08 = iVar8;\n                                        bVar13 = *0x5d3b10 < 2000;\n                                        if (*0x5d3b10 < 2000) {\n                                            *(*0x20 + -0x108) = unaff_RBP;\n                                            *(*0x20 + -0x100) = 0x4586cf;\n                                            uVar4 = fcn.0045ccf0();\n                                            unaff_RBP = *(*0x20 + -0x108);\n                                            uVar9 = *(*0x20 + -0xb8);\n                                            *(*0x20 + -0x58) = uVar9;\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x98);\n                                            *(*0x20 + -0x44) = *(*0x20 + -0x94);\n                                            *(*0x20 + -0x40) = *(*0x20 + -0x90);\n                                            *(*0x20 + -0x3c) = *(*0x20 + -0x8c);\n                                            *(*0x20 + -0x38) = *(*0x20 + -0x88);\n                                            *(*0x20 + -0x34) = *(*0x20 + -0x84);\n                                            *(*0x20 + -0x30) = *(*0x20 + -0x80);\n                                            *(*0x20 + -0x2c) = *(*0x20 + -0x7c);\n                                            *(*0x20 + -0x28) = *(*0x20 + -0x78);\n                                            *(*0x20 + -0x24) = *(*0x20 + -0x74);\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x1c) = *(*0x20 + -0x6c);\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x68);\n                                            *(*0x20 + -0x14) = *(*0x20 + -100);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0xc) = *(*0x20 + -0x5c);\n                                            if (bVar13) {\n                                                *(*0x20 + -0xe0) = uVar4;\n                                                if (*0x5d3dd0 == 0) {\n                                                    *(*0x20 + -0x108) = unaff_RBP;\n                                                    *(*0x20 + -0x100) = 0x45876f;\n                                                    fcn.0045d05a();\n                                                }\n                                                else {\n                                                    *(*0x20 + -0x100) = 0x45878c;\n                                                    fcn.00411220(*0x20 + -0x58);\n                                                    uVar9 = *(*0x20 + -0xb8);\n                                                }\n                                                *(*0x20 + -0xa8) = uVar9;\n                                                *(*0x20 + -0xa0) = 0;\n                                                *(*0x20 + -0x100) = 0x4587b3;\n                                                puVar5 = fcn.0040d840(*0x20 + -0xa8);\n                                                *puVar5 = *(*0x20 + -0xe0);\n                                                *0x5d3b10 = *0x5d3b10 + 1;\n                                                *(*0x20 + -0x100) = 0x4587d0;\n                                                fcn.0040a580();\n                                                *(*0x20 + -0x100) = 0x4587da;\n                                                fcn.0044ca00();\n                                                return;\n                                            }\n                                            arg1 = 0x7d0;\n                                            *(*0x20 + -0x100) = 0x458825;\n                                            fcn.0045ca40(2000);\n                                        }\n                                        *(*0x20 + -0x100) = 0x458833;\n                                        fcn.0040a580();\n                                        *(*0x20 + -0x100) = 0x458845;\n                                        fcn.004330a0();\n                                    }\n                                    *(*0x20 + -0x100) = 0x458858;\n                                    fcn.00432920();\n                                }\n                                *(*0x20 + -0x100) = 0x45886b;\n                                fcn.00432920();\n                            }\n                            *(*0x20 + -0x100) = 0x45887e;\n                            fcn.00432920();\n                        }\n                        *(*0x20 + -0x100) = 0x458891;\n                        fcn.00432920();\n                    }\n                    *(*0x20 + -0x100) = 0x458899;\n                    fcn.0045cb00(arg1);\n                }\n                *(*0x20 + -0x100) = 0x4588a6;\n                fcn.0045ca80(arg1_00, 0x100000);\n                param_1 = arg1_00;\n            }\n            unaff_RBX = 0x4f9da8;\n            *(*0x20 + -0x100) = 0x4588b9;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        puVar10[0x18] = param_1;\n        *(puVar10 + -8) = 0x4588cd;\n        fcn.0045a360();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        param_1 = puVar10[0x18];\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2785
    },
    "00458900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00458900(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uint64_t uStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    ulong uStackX32;\n    uchar auStack32 [16];\n    uint uStack16;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    if (*0x5d3b34 == '\\0') {\n        *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_LoadLibraryW;\n        *(iVar2 + 0x2c8) = 1;\n        *(iVar2 + 0x2d0) = auStackX16;\n    }\n    else {\n        *(iVar2 + 0x2c0) = *0x57ef20;\n        *(iVar2 + 0x2c8) = 3;\n        auStack32 = ZEXT816(uStackX8);\n        uStack16 = 0x800;\n        *(iVar2 + 0x2d0) = auStack32;\n    }\n    fcn.00403280();\n    iStackX24 = *(iVar2 + 0x2d8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043e780();\n    return;\n}\n",
        "token_count": 450
    },
    "00459200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00459200(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (in_RAX < 1) {\n        return;\n    }\n    arg1 = *(unaff_R14 + 0x170);\n    if (arg1 == 0) {\n        arg1 = fcn.0040c440();\n        if (*0x5d3dd0 == 0) {\n            *(unaff_R14 + 0x170) = arg1;\n        }\n        else {\n            arg1 = fcn.0045c5a0(unaff_R14, noname_1, arg3, in_R9);\n        }\n    }\n    if (*0x5d3dd0 == 0) {\n        *(arg1 + 0x18) = 0x4d5cd0;\n    }\n    else {\n        fcn.0045c6c0(arg1, 0x4d5cd0, arg3, in_R9);\n    }\n    *(arg1 + 0x20) = 0x4b1cc0;\n    if (*0x5d3dd0 == 0) {\n        *(arg1 + 0x28) = unaff_R14;\n    }\n    else {\n        fcn.0045c6c0(arg1, unaff_R14, arg3, in_R9);\n    }\n    fcn.0045e320();\n    *(arg1 + 0x38) = iStack56 + in_RAX;\n    if (iStack56 + in_RAX < 0) {\n        *(arg1 + 0x38) = 0x7fffffffffffffff;\n    }\n    fcn.004359e0(0x13);\n    return;\n}\n",
        "token_count": 469
    },
    "0045c180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045c180(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t in_GS_OFFSET;\n    code *pcStackX8;\n    ulong uStackX16;\n    \n    piVar5 = *(in_GS_OFFSET + 0x28);\n    iVar1 = *piVar5;\n    if (((iVar1 != 0) && (iVar1 != (*(iVar1 + 0x30))[10])) && (iVar2 = **(iVar1 + 0x30),  iVar1 != iVar2)) {\n        pcVar4 = fcn.00459400();\n        *piVar5 = iVar2;\n        uVar6 = *(iVar2 + 0x38) - 0x40U & 0xfffffffffffffff0;\n        *(uVar6 + 0x30) = iVar1;\n        *(uVar6 + 0x28) = *(iVar1 + 8) - *0x20;\n        *(uVar6 - 8) = 0x45c1e9;\n        uVar3 = (*pcVar4)(uStackX16);\n        iVar1 = *(*(uVar6 + 0x30) + 8);\n        iVar2 = *(uVar6 + 0x28);\n        **(in_GS_OFFSET + 0x28) = *(uVar6 + 0x30);\n        *((iVar1 - iVar2) + 0x18) = uVar3;\n        return;\n    }\n    uVar3 = (*pcStackX8)(uStackX16);\n    *(*0x20 + 0x18) = uVar3;\n    return;\n}\n",
        "token_count": 393
    },
    "0045c420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045c420(ulong noname_0, ulong arg2)\n\n{\n    if (*0x5d434b == '\\x01') {\n        rdtscp();\n    }\n    else {\n        rdtsc();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "0045c460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045c460(uint64_t arg1)\n\n{\n    uchar (*in_RAX) [16];\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    uchar auVar9 [16];\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    uchar auVar12 [16];\n    uchar auVar13 [16];\n    \n    if (*0x5d3b32 == '\\0') {\n        uVar1 = unaff_RBX ^ *0x5d3e00 ^ 0xa0761d6478bd642f;\n        if (arg1 == 0) {\n            return uVar1;\n        }\n        if (arg1 < 4) {\n            uVar2 = CONCAT12(in_RAX[-1][arg1 + 0xf], CONCAT11((*in_RAX)[arg1 >> 1], (*in_RAX)[0]));\n            uVar3 = 0;\n        }\n        else if (arg1 == 4) {\n            uVar2 = **in_RAX;\n            uVar3 = **in_RAX;\n        }\n        else if (arg1 < 8) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 0xc);\n        }\n        else if (arg1 == 8) {\n            uVar2 = **in_RAX;\n            uVar3 = uVar2;\n        }\n        else if (arg1 < 0x11) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 8);\n        }\n        else {\n            uVar3 = arg1;\n            uVar2 = uVar1;\n            uVar4 = uVar1;\n            if (0x30 < arg1) {\n                for (; 0x30 < uVar3; uVar3 = uVar3 - 0x30) {\n                    auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                    auVar6 = ZEXT816(*(in_RAX[1] + 8) ^ uVar2) * ZEXT816(*in_RAX[1] ^ 0x8ebc6af09c88c6e3);\n                    auVar7 = ZEXT816(*(in_RAX[2] + 8) ^ uVar4) * ZEXT816(*in_RAX[2] ^ 0x589965cc75374cc3);\n                    uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                    in_RAX = in_RAX[3];\n                    uVar2 = SUB168(auVar6, 0) ^ SUB168(auVar6 >> 0x40, 0);\n                    uVar4 = SUB168(auVar7, 0) ^ SUB168(auVar7 >> 0x40, 0);\n                }\n                uVar1 = uVar1 ^ uVar2 ^ uVar4;\n            }\n            for (; 0x10 < uVar3; uVar3 = uVar3 - 0x10) {\n                auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                in_RAX = in_RAX[1];\n            }\n            uVar2 = *(in_RAX[-1] + uVar3);\n            uVar3 = *(in_RAX[-1] + uVar3 + 8);\n        }\n        auVar5 = ZEXT816(uVar3 ^ uVar1) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n        auVar5 = ZEXT816(SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n        return SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n    }\n    auVar5 = pinsrw(ZEXT816(unaff_RBX), arg1, 4);\n    auVar5 = pshufhw(auVar5, auVar5, 0);\n    auVar6 = aesenc(auVar5 ^ *0x5d40c0, auVar5 ^ *0x5d40c0);\n    if (arg1 < 0x10) {\n        if (arg1 == 0) {\n            auVar5 = aesenc(auVar6, auVar6);\n            return SUB168(auVar5, 0);\n        }\n        if ((in_RAX[1] & 0xff0) == 0) {\n            auVar5 = pshufb(*(in_RAX[-1] + arg1), *(arg1 * 0x10 + 0x4fa4c0));\n        }\n        else {\n            auVar5 = *in_RAX & *(arg1 * 0x10 + 0x4fa3c0);\n        }\n    }\n    else {\n        if (arg1 != 0x10) {\n            if (arg1 < 0x21) {\n                auVar5 = aesenc(auVar5 ^ *0x5d40d0, auVar5 ^ *0x5d40d0);\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                return SUB168(auVar5, 0) ^ SUB168(auVar6, 0);\n            }\n            if (arg1 < 0x41) {\n                auVar7 = aesenc(auVar5 ^ *0x5d40d0, auVar5 ^ *0x5d40d0);\n                auVar8 = aesenc(auVar5 ^ *0x5d40e0, auVar5 ^ *0x5d40e0);\n                auVar5 = aesenc(auVar5 ^ *0x5d40f0, auVar5 ^ *0x5d40f0);\n                auVar8 = *(in_RAX[-2] + arg1) ^ auVar8;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                return SUB168(auVar5, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar8, 0);\n            }\n            if (arg1 < 0x81) {\n                auVar7 = aesenc(auVar5 ^ *0x5d40d0, auVar5 ^ *0x5d40d0);\n                auVar8 = aesenc(auVar5 ^ *0x5d40e0, auVar5 ^ *0x5d40e0);\n                auVar9 = aesenc(auVar5 ^ *0x5d40f0, auVar5 ^ *0x5d40f0);\n                auVar10 = aesenc(auVar5 ^ *0x5d4100, auVar5 ^ *0x5d4100);\n                auVar11 = aesenc(auVar5 ^ *0x5d4110, auVar5 ^ *0x5d4110);\n                auVar12 = aesenc(auVar5 ^ *0x5d4120, auVar5 ^ *0x5d4120);\n                auVar5 = aesenc(auVar5 ^ *0x5d4130, auVar5 ^ *0x5d4130);\n                auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n                auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n                auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(in_RAX[2] ^ auVar8, in_RAX[2] ^ auVar8);\n                auVar9 = aesenc(in_RAX[3] ^ auVar9, in_RAX[3] ^ auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar13 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar9 = aesenc(auVar10, auVar10);\n                auVar10 = aesenc(auVar11, auVar11);\n                auVar11 = aesenc(auVar12, auVar12);\n                auVar12 = aesenc(auVar13, auVar13);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                       SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n            }\n            auVar7 = aesenc(auVar5 ^ *0x5d40d0, auVar5 ^ *0x5d40d0);\n            auVar8 = aesenc(auVar5 ^ *0x5d40e0, auVar5 ^ *0x5d40e0);\n            auVar9 = aesenc(auVar5 ^ *0x5d40f0, auVar5 ^ *0x5d40f0);\n            auVar10 = aesenc(auVar5 ^ *0x5d4100, auVar5 ^ *0x5d4100);\n            auVar11 = aesenc(auVar5 ^ *0x5d4110, auVar5 ^ *0x5d4110);\n            auVar12 = aesenc(auVar5 ^ *0x5d4120, auVar5 ^ *0x5d4120);\n            auVar5 = aesenc(auVar5 ^ *0x5d4130, auVar5 ^ *0x5d4130);\n            auVar6 = *(in_RAX[-8] + arg1) ^ auVar6;\n            auVar7 = *(in_RAX[-7] + arg1) ^ auVar7;\n            auVar8 = *(in_RAX[-6] + arg1) ^ auVar8;\n            auVar9 = *(in_RAX[-5] + arg1) ^ auVar9;\n            auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n            auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n            auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n            auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n            uVar1 = arg1 - 1 >> 7;\n            do {\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, *in_RAX);\n                auVar7 = aesenc(auVar7, in_RAX[1]);\n                auVar8 = aesenc(auVar8, in_RAX[2]);\n                auVar9 = aesenc(auVar9, in_RAX[3]);\n                auVar10 = aesenc(auVar10, in_RAX[4]);\n                auVar11 = aesenc(auVar11, in_RAX[5]);\n                auVar12 = aesenc(auVar12, in_RAX[6]);\n                auVar5 = aesenc(auVar5, in_RAX[7]);\n                in_RAX = in_RAX[8];\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            auVar13 = aesenc(auVar5, auVar5);\n            auVar5 = aesenc(auVar6, auVar6);\n            auVar6 = aesenc(auVar7, auVar7);\n            auVar7 = aesenc(auVar8, auVar8);\n            auVar8 = aesenc(auVar9, auVar9);\n            auVar9 = aesenc(auVar10, auVar10);\n            auVar10 = aesenc(auVar11, auVar11);\n            auVar11 = aesenc(auVar12, auVar12);\n            auVar12 = aesenc(auVar13, auVar13);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                   SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n        }\n        auVar5 = *in_RAX;\n    }\n    auVar5 = aesenc(auVar5 ^ auVar6, auVar5 ^ auVar6);\n    auVar5 = aesenc(auVar5, auVar5);\n    auVar5 = aesenc(auVar5, auVar5);\n    return SUB168(auVar5, 0);\n}\n",
        "token_count": 4009
    },
    "0045c480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045c480(void)\n\n{\n    uchar (*pauVar1) [16];\n    uchar (*pauVar2) [16];\n    uchar (**in_RAX) [16];\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auVar4 [16];\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    uchar auVar9 [16];\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    uchar auVar12 [16];\n    \n    if (*0x5d3b32 == '\\0') {\n        while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n            fcn.0045a360();\n        }\n        uVar3 = fcn.00408d80(in_RAX[1]);\n        return uVar3;\n    }\n    pauVar1 = in_RAX[1];\n    pauVar2 = *in_RAX;\n    auVar4 = pinsrw(ZEXT816(unaff_RBX), pauVar1, 4);\n    auVar4 = pshufhw(auVar4, auVar4, 0);\n    auVar5 = aesenc(auVar4 ^ *0x5d40c0, auVar4 ^ *0x5d40c0);\n    if (pauVar1 < 0x10) {\n        if (pauVar1 == NULL) {\n            auVar4 = aesenc(auVar5, auVar5);\n            return SUB168(auVar4, 0);\n        }\n        if ((pauVar2[1] & 0xff0) == 0) {\n            auVar4 = pshufb(*(*pauVar1 + pauVar2[-1]), *(pauVar1 * 0x10 + 0x4fa4c0));\n        }\n        else {\n            auVar4 = *pauVar2 & *(pauVar1 * 0x10 + 0x4fa3c0);\n        }\n    }\n    else {\n        if (pauVar1 != 0x10) {\n            if (pauVar1 < 0x21) {\n                auVar4 = aesenc(auVar4 ^ *0x5d40d0, auVar4 ^ *0x5d40d0);\n                auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n                auVar5 = aesenc(*pauVar2 ^ auVar5, *pauVar2 ^ auVar5);\n                auVar6 = aesenc(auVar4, auVar4);\n                auVar4 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, auVar5);\n                return SUB168(auVar4, 0) ^ SUB168(auVar5, 0);\n            }\n            if (pauVar1 < 0x41) {\n                auVar6 = aesenc(auVar4 ^ *0x5d40d0, auVar4 ^ *0x5d40d0);\n                auVar7 = aesenc(auVar4 ^ *0x5d40e0, auVar4 ^ *0x5d40e0);\n                auVar4 = aesenc(auVar4 ^ *0x5d40f0, auVar4 ^ *0x5d40f0);\n                auVar7 = *(*pauVar1 + pauVar2[-2]) ^ auVar7;\n                auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n                auVar5 = aesenc(*pauVar2 ^ auVar5, *pauVar2 ^ auVar5);\n                auVar6 = aesenc(pauVar2[1] ^ auVar6, pauVar2[1] ^ auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar4, auVar4);\n                auVar4 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                return SUB168(auVar4, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar5, 0) ^ SUB168(auVar7, 0);\n            }\n            if (pauVar1 <= pe_nt_image_headers64) {\n                auVar6 = aesenc(auVar4 ^ *0x5d40d0, auVar4 ^ *0x5d40d0);\n                auVar7 = aesenc(auVar4 ^ *0x5d40e0, auVar4 ^ *0x5d40e0);\n                auVar8 = aesenc(auVar4 ^ *0x5d40f0, auVar4 ^ *0x5d40f0);\n                auVar9 = aesenc(auVar4 ^ *0x5d4100, auVar4 ^ *0x5d4100);\n                auVar10 = aesenc(auVar4 ^ *0x5d4110, auVar4 ^ *0x5d4110);\n                auVar11 = aesenc(auVar4 ^ *0x5d4120, auVar4 ^ *0x5d4120);\n                auVar4 = aesenc(auVar4 ^ *0x5d4130, auVar4 ^ *0x5d4130);\n                auVar9 = *(*pauVar1 + pauVar2[-4]) ^ auVar9;\n                auVar10 = *(*pauVar1 + pauVar2[-3]) ^ auVar10;\n                auVar11 = *(*pauVar1 + pauVar2[-2]) ^ auVar11;\n                auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n                auVar5 = aesenc(*pauVar2 ^ auVar5, *pauVar2 ^ auVar5);\n                auVar6 = aesenc(pauVar2[1] ^ auVar6, pauVar2[1] ^ auVar6);\n                auVar7 = aesenc(pauVar2[2] ^ auVar7, pauVar2[2] ^ auVar7);\n                auVar8 = aesenc(pauVar2[3] ^ auVar8, pauVar2[3] ^ auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar4, auVar4);\n                auVar4 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar9 = aesenc(auVar10, auVar10);\n                auVar10 = aesenc(auVar11, auVar11);\n                auVar11 = aesenc(auVar12, auVar12);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                return SUB168(auVar4, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^\n                       SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0);\n            }\n            auVar6 = aesenc(auVar4 ^ *0x5d40d0, auVar4 ^ *0x5d40d0);\n            auVar7 = aesenc(auVar4 ^ *0x5d40e0, auVar4 ^ *0x5d40e0);\n            auVar8 = aesenc(auVar4 ^ *0x5d40f0, auVar4 ^ *0x5d40f0);\n            auVar9 = aesenc(auVar4 ^ *0x5d4100, auVar4 ^ *0x5d4100);\n            auVar10 = aesenc(auVar4 ^ *0x5d4110, auVar4 ^ *0x5d4110);\n            auVar11 = aesenc(auVar4 ^ *0x5d4120, auVar4 ^ *0x5d4120);\n            auVar4 = aesenc(auVar4 ^ *0x5d4130, auVar4 ^ *0x5d4130);\n            auVar5 = *(*pauVar1 + pauVar2[-8]) ^ auVar5;\n            auVar6 = *(*pauVar1 + pauVar2[-7]) ^ auVar6;\n            auVar7 = *(*pauVar1 + pauVar2[-6]) ^ auVar7;\n            auVar8 = *(*pauVar1 + pauVar2[-5]) ^ auVar8;\n            auVar9 = *(*pauVar1 + pauVar2[-4]) ^ auVar9;\n            auVar10 = *(*pauVar1 + pauVar2[-3]) ^ auVar10;\n            auVar11 = *(*pauVar1 + pauVar2[-2]) ^ auVar11;\n            auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n            uVar3 = pauVar1[-1] + 0xf >> 7;\n            do {\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, *pauVar2);\n                auVar6 = aesenc(auVar6, pauVar2[1]);\n                auVar7 = aesenc(auVar7, pauVar2[2]);\n                auVar8 = aesenc(auVar8, pauVar2[3]);\n                auVar9 = aesenc(auVar9, pauVar2[4]);\n                auVar10 = aesenc(auVar10, pauVar2[5]);\n                auVar11 = aesenc(auVar11, pauVar2[6]);\n                auVar4 = aesenc(auVar4, pauVar2[7]);\n                pauVar2 = pauVar2[8];\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar4, auVar4);\n            auVar4 = aesenc(auVar5, auVar5);\n            auVar5 = aesenc(auVar6, auVar6);\n            auVar6 = aesenc(auVar7, auVar7);\n            auVar7 = aesenc(auVar8, auVar8);\n            auVar8 = aesenc(auVar9, auVar9);\n            auVar9 = aesenc(auVar10, auVar10);\n            auVar10 = aesenc(auVar11, auVar11);\n            auVar11 = aesenc(auVar12, auVar12);\n            auVar4 = aesenc(auVar4, auVar4);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            return SUB168(auVar4, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^\n                   SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0);\n        }\n        auVar4 = *pauVar2;\n    }\n    auVar4 = aesenc(auVar4 ^ auVar5, auVar4 ^ auVar5);\n    auVar4 = aesenc(auVar4, auVar4);\n    auVar4 = aesenc(auVar4, auVar4);\n    return SUB168(auVar4, 0);\n}\n",
        "token_count": 3286
    },
    "0045c4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045c4a0(void)\n\n{\n    uint32_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar auVar1 [16];\n    \n    if (*0x5d3b32 != '\\0') {\n        auVar1 = pinsrd(ZEXT816(unaff_RBX), *in_RAX, 2);\n        auVar1 = aesenc(auVar1, *0x5d40c0);\n        auVar1 = aesenc(auVar1, *0x5d40d0);\n        auVar1 = aesenc(auVar1, *0x5d40e0);\n        return SUB168(auVar1, 0);\n    }\n    auVar1 = ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db) * ZEXT816(*in_RAX ^ unaff_RBX ^ *0x5d3e00 ^ 0xa0761d6478bd642f);\n    auVar1 = ZEXT816(0x1d8e4e27c47d124b) * ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0));\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 303
    },
    "0045c4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045c4e0(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar auVar1 [16];\n    \n    if (*0x5d3b32 != '\\0') {\n        auVar1 = pinsrq(ZEXT816(unaff_RBX), *in_RAX, 1);\n        auVar1 = aesenc(auVar1, *0x5d40c0);\n        auVar1 = aesenc(auVar1, *0x5d40d0);\n        auVar1 = aesenc(auVar1, *0x5d40e0);\n        return SUB168(auVar1, 0);\n    }\n    auVar1 = ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db) * ZEXT816(*in_RAX ^ unaff_RBX ^ *0x5d3e00 ^ 0xa0761d6478bd642f);\n    auVar1 = ZEXT816(0x1d8e4e27c47d1247) * ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0));\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 303
    },
    "0045d0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045d0c0(void)\n\n{\n    uint *puVar1;\n    uchar auVar2 [32];\n    uchar (*in_RAX) [32];\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar (*pauVar5) [32];\n    uchar (*pauVar6) [32];\n    uchar in_YMM0 [32];\n    uchar auVar7 [32];\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while( true ) {\n        if (unaff_RBX == 0) {\n            return;\n        }\n        if (unaff_RBX < 3) {\n            (*in_RAX)[0] = 0;\n            in_RAX[-1][unaff_RBX + 0x1f] = 0;\n            return;\n        }\n        if (unaff_RBX < 5) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x1e) = 0;\n            return;\n        }\n        if (unaff_RBX < 8) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x1c) = 0;\n            return;\n        }\n        if (unaff_RBX == 8) {\n            **in_RAX = 0;\n            return;\n        }\n        if (unaff_RBX < 0x11) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x18) = 0;\n            return;\n        }\n        if (unaff_RBX < 0x21) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (unaff_RBX < 0x41) break;\n        if (unaff_RBX < 0x81) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (unaff_RBX < 0x101) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            puVar1 = in_RAX[-4] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-4] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-3] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-3] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (*0x5d4343 == '\\x01') {\n            auVar7 = vpxor_avx2(in_YMM0, in_YMM0);\n            if (0x1ffffff < unaff_RBX) {\n                auVar2 = vmovdqu_avx(auVar7);\n                *in_RAX = auVar2;\n                uVar3 = in_RAX + (unaff_RBX - (in_RAX[1] & 0xffffffffffffffe0));\n                pauVar5 = in_RAX[1] & 0xffffffffffffffe0;\n                do {\n                    pauVar6 = pauVar5;\n                    uVar4 = uVar3;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    *pauVar6 = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[1] = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[2] = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[3] = auVar2;\n                    uVar3 = uVar4 - 0x80;\n                    pauVar5 = pauVar6[4];\n                } while (0x7f < uVar4 - 0x80);\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-1] + uVar4) = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-2] + uVar4) = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-3] + uVar4) = auVar2;\n                auVar7 = vmovdqu_avx(auVar7);\n                *(pauVar6[-4] + uVar4) = auVar7;\n                vzeroupper_avx();\n                return;\n            }\n            do {\n                pauVar5 = in_RAX;\n                uVar3 = unaff_RBX;\n                auVar2 = vmovdqu_avx(auVar7);\n                *pauVar5 = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[1] = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[2] = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[3] = auVar2;\n                unaff_RBX = uVar3 - 0x80;\n                in_RAX = pauVar5[4];\n            } while (0x7f < uVar3 - 0x80);\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-1] + uVar3) = auVar2;\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-2] + uVar3) = auVar2;\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-3] + uVar3) = auVar2;\n            auVar7 = vmovdqu_avx(auVar7);\n            *(pauVar5[-4] + uVar3) = auVar7;\n            vzeroupper_avx();\n            return;\n        }\n        do {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[4] = in_XMM15_Da;\n            *(in_RAX[4] + 4) = in_XMM15_Db;\n            *(in_RAX[4] + 8) = in_XMM15_Dc;\n            *(in_RAX[4] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[4] + 0x10) = in_XMM15_Da;\n            *(in_RAX[4] + 0x14) = in_XMM15_Db;\n            *(in_RAX[4] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[4] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[5] = in_XMM15_Da;\n            *(in_RAX[5] + 4) = in_XMM15_Db;\n            *(in_RAX[5] + 8) = in_XMM15_Dc;\n            *(in_RAX[5] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[5] + 0x10) = in_XMM15_Da;\n            *(in_RAX[5] + 0x14) = in_XMM15_Db;\n            *(in_RAX[5] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[5] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[6] = in_XMM15_Da;\n            *(in_RAX[6] + 4) = in_XMM15_Db;\n            *(in_RAX[6] + 8) = in_XMM15_Dc;\n            *(in_RAX[6] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[6] + 0x10) = in_XMM15_Da;\n            *(in_RAX[6] + 0x14) = in_XMM15_Db;\n            *(in_RAX[6] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[6] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[7] = in_XMM15_Da;\n            *(in_RAX[7] + 4) = in_XMM15_Db;\n            *(in_RAX[7] + 8) = in_XMM15_Dc;\n            *(in_RAX[7] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[7] + 0x10) = in_XMM15_Da;\n            *(in_RAX[7] + 0x14) = in_XMM15_Db;\n            *(in_RAX[7] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[7] + 0x1c) = in_XMM15_Dd;\n            unaff_RBX = unaff_RBX - 0x100;\n            in_RAX = in_RAX[8];\n        } while (0xff < unaff_RBX);\n    }\n    **in_RAX = in_XMM15_Da;\n    *(*in_RAX + 4) = in_XMM15_Db;\n    *(*in_RAX + 8) = in_XMM15_Dc;\n    *(*in_RAX + 0xc) = in_XMM15_Dd;\n    *(*in_RAX + 0x10) = in_XMM15_Da;\n    *(*in_RAX + 0x14) = in_XMM15_Db;\n    *(*in_RAX + 0x18) = in_XMM15_Dc;\n    *(*in_RAX + 0x1c) = in_XMM15_Dd;\n    puVar1 = in_RAX[-1] + unaff_RBX;\n    *puVar1 = in_XMM15_Da;\n    puVar1[1] = in_XMM15_Db;\n    puVar1[2] = in_XMM15_Dc;\n    puVar1[3] = in_XMM15_Dd;\n    puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n    *puVar1 = in_XMM15_Da;\n    puVar1[1] = in_XMM15_Db;\n    puVar1[2] = in_XMM15_Dc;\n    puVar1[3] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4869
    },
    "0045d380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045d380(uint64_t arg1)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    ulong uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    uint uVar32;\n    uint uVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uint uVar37;\n    uint uVar38;\n    uint uVar39;\n    uint uVar40;\n    uint uVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint uVar45;\n    uint uVar46;\n    uint uVar47;\n    uint uVar48;\n    uint uVar49;\n    uint uVar50;\n    uint uVar51;\n    uint uVar52;\n    uint uVar53;\n    uint uVar54;\n    uint uVar55;\n    uint uVar56;\n    uint uVar57;\n    uint uVar58;\n    uint uVar59;\n    uint uVar60;\n    uint uVar61;\n    uint uVar62;\n    uint uVar63;\n    uint uVar64;\n    uint uVar65;\n    uint uVar66;\n    uchar (*in_RAX) [32];\n    uint64_t uVar67;\n    uchar (*unaff_RBX) [32];\n    uint64_t uVar68;\n    int64_t iVar69;\n    ulong *puVar70;\n    uchar (*pauVar71) [32];\n    ulong *puVar72;\n    uchar (*pauVar73) [32];\n    uchar (*pauVar74) [32];\n    uchar *puVar75;\n    bool bVar76;\n    uchar auVar77 [32];\n    uchar auVar78 [32];\n    uchar auVar79 [32];\n    uchar auVar80 [32];\n    uchar auVar81 [32];\n    \n    while( true ) {\n        if (arg1 == 0) {\n            return;\n        }\n        if (arg1 < 3) {\n            uVar2 = unaff_RBX[-1][arg1 + 0x1f];\n            (*in_RAX)[0] = (*unaff_RBX)[0];\n            in_RAX[-1][arg1 + 0x1f] = uVar2;\n            return;\n        }\n        if (arg1 < 4) {\n            uVar2 = (*unaff_RBX)[2];\n            **in_RAX = **unaff_RBX;\n            (*in_RAX)[2] = uVar2;\n            return;\n        }\n        if (arg1 < 5) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 8) {\n            uVar3 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x1c) = uVar3;\n            return;\n        }\n        if (arg1 == 8) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 0x11) {\n            uVar4 = *(unaff_RBX[-1] + arg1 + 0x18);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x18) = uVar4;\n            return;\n        }\n        if (arg1 < 0x21) break;\n        if (arg1 < 0x41) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar11 = *puVar1;\n            uVar12 = puVar1[1];\n            uVar13 = puVar1[2];\n            uVar14 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar15 = *puVar1;\n            uVar16 = puVar1[1];\n            uVar17 = puVar1[2];\n            uVar18 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar11;\n            puVar1[1] = uVar12;\n            puVar1[2] = uVar13;\n            puVar1[3] = uVar14;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar15;\n            puVar1[1] = uVar16;\n            puVar1[2] = uVar17;\n            puVar1[3] = uVar18;\n            return;\n        }\n        if (arg1 < 0x81) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar19 = *puVar1;\n            uVar20 = puVar1[1];\n            uVar21 = puVar1[2];\n            uVar22 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar23 = *puVar1;\n            uVar24 = puVar1[1];\n            uVar25 = puVar1[2];\n            uVar26 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar27 = *puVar1;\n            uVar28 = puVar1[1];\n            uVar29 = puVar1[2];\n            uVar30 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar31 = *puVar1;\n            uVar32 = puVar1[1];\n            uVar33 = puVar1[2];\n            uVar34 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar19;\n            puVar1[1] = uVar20;\n            puVar1[2] = uVar21;\n            puVar1[3] = uVar22;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar23;\n            puVar1[1] = uVar24;\n            puVar1[2] = uVar25;\n            puVar1[3] = uVar26;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar27;\n            puVar1[1] = uVar28;\n            puVar1[2] = uVar29;\n            puVar1[3] = uVar30;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar31;\n            puVar1[1] = uVar32;\n            puVar1[2] = uVar33;\n            puVar1[3] = uVar34;\n            return;\n        }\n        if (arg1 < 0x101) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            uVar19 = *unaff_RBX[2];\n            uVar20 = *(unaff_RBX[2] + 4);\n            uVar21 = *(unaff_RBX[2] + 8);\n            uVar22 = *(unaff_RBX[2] + 0xc);\n            uVar23 = *(unaff_RBX[2] + 0x10);\n            uVar24 = *(unaff_RBX[2] + 0x14);\n            uVar25 = *(unaff_RBX[2] + 0x18);\n            uVar26 = *(unaff_RBX[2] + 0x1c);\n            uVar27 = *unaff_RBX[3];\n            uVar28 = *(unaff_RBX[3] + 4);\n            uVar29 = *(unaff_RBX[3] + 8);\n            uVar30 = *(unaff_RBX[3] + 0xc);\n            uVar31 = *(unaff_RBX[3] + 0x10);\n            uVar32 = *(unaff_RBX[3] + 0x14);\n            uVar33 = *(unaff_RBX[3] + 0x18);\n            uVar34 = *(unaff_RBX[3] + 0x1c);\n            puVar1 = unaff_RBX[-4] + arg1;\n            uVar35 = *puVar1;\n            uVar36 = puVar1[1];\n            uVar37 = puVar1[2];\n            uVar38 = puVar1[3];\n            puVar1 = unaff_RBX[-4] + arg1 + 0x10;\n            uVar39 = *puVar1;\n            uVar40 = puVar1[1];\n            uVar41 = puVar1[2];\n            uVar42 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1;\n            uVar43 = *puVar1;\n            uVar44 = puVar1[1];\n            uVar45 = puVar1[2];\n            uVar46 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1 + 0x10;\n            uVar47 = *puVar1;\n            uVar48 = puVar1[1];\n            uVar49 = puVar1[2];\n            uVar50 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar51 = *puVar1;\n            uVar52 = puVar1[1];\n            uVar53 = puVar1[2];\n            uVar54 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar55 = *puVar1;\n            uVar56 = puVar1[1];\n            uVar57 = puVar1[2];\n            uVar58 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar59 = *puVar1;\n            uVar60 = puVar1[1];\n            uVar61 = puVar1[2];\n            uVar62 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar63 = *puVar1;\n            uVar64 = puVar1[1];\n            uVar65 = puVar1[2];\n            uVar66 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            *in_RAX[2] = uVar19;\n            *(in_RAX[2] + 4) = uVar20;\n            *(in_RAX[2] + 8) = uVar21;\n            *(in_RAX[2] + 0xc) = uVar22;\n            *(in_RAX[2] + 0x10) = uVar23;\n            *(in_RAX[2] + 0x14) = uVar24;\n            *(in_RAX[2] + 0x18) = uVar25;\n            *(in_RAX[2] + 0x1c) = uVar26;\n            *in_RAX[3] = uVar27;\n            *(in_RAX[3] + 4) = uVar28;\n            *(in_RAX[3] + 8) = uVar29;\n            *(in_RAX[3] + 0xc) = uVar30;\n            *(in_RAX[3] + 0x10) = uVar31;\n            *(in_RAX[3] + 0x14) = uVar32;\n            *(in_RAX[3] + 0x18) = uVar33;\n            *(in_RAX[3] + 0x1c) = uVar34;\n            puVar1 = in_RAX[-4] + arg1;\n            *puVar1 = uVar35;\n            puVar1[1] = uVar36;\n            puVar1[2] = uVar37;\n            puVar1[3] = uVar38;\n            puVar1 = in_RAX[-4] + arg1 + 0x10;\n            *puVar1 = uVar39;\n            puVar1[1] = uVar40;\n            puVar1[2] = uVar41;\n            puVar1[3] = uVar42;\n            puVar1 = in_RAX[-3] + arg1;\n            *puVar1 = uVar43;\n            puVar1[1] = uVar44;\n            puVar1[2] = uVar45;\n            puVar1[3] = uVar46;\n            puVar1 = in_RAX[-3] + arg1 + 0x10;\n            *puVar1 = uVar47;\n            puVar1[1] = uVar48;\n            puVar1[2] = uVar49;\n            puVar1[3] = uVar50;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar51;\n            puVar1[1] = uVar52;\n            puVar1[2] = uVar53;\n            puVar1[3] = uVar54;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar55;\n            puVar1[1] = uVar56;\n            puVar1[2] = uVar57;\n            puVar1[3] = uVar58;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar59;\n            puVar1[1] = uVar60;\n            puVar1[2] = uVar61;\n            puVar1[3] = uVar62;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar63;\n            puVar1[1] = uVar64;\n            puVar1[2] = uVar65;\n            puVar1[3] = uVar66;\n            return;\n        }\n        if ((*0x5d3b31 & 1) != 0) {\n            if (in_RAX - unaff_RBX < arg1) {\n                uVar3 = **unaff_RBX;\n                uVar5 = *(*unaff_RBX + 4);\n                uVar6 = *(*unaff_RBX + 8);\n                uVar7 = *(*unaff_RBX + 0xc);\n                uVar8 = *(*unaff_RBX + 0x10);\n                uVar9 = *(*unaff_RBX + 0x14);\n                uVar10 = *(*unaff_RBX + 0x18);\n                uVar11 = *(*unaff_RBX + 0x1c);\n                puVar75 = *in_RAX + arg1;\n                uVar12 = *unaff_RBX[1];\n                uVar13 = *(unaff_RBX[1] + 4);\n                uVar14 = *(unaff_RBX[1] + 8);\n                uVar15 = *(unaff_RBX[1] + 0xc);\n                uVar16 = *(unaff_RBX[1] + 0x10);\n                uVar17 = *(unaff_RBX[1] + 0x14);\n                uVar18 = *(unaff_RBX[1] + 0x18);\n                uVar19 = *(unaff_RBX[1] + 0x1c);\n                uVar20 = *unaff_RBX[2];\n                uVar21 = *(unaff_RBX[2] + 4);\n                uVar22 = *(unaff_RBX[2] + 8);\n                uVar23 = *(unaff_RBX[2] + 0xc);\n                uVar24 = *(unaff_RBX[2] + 0x10);\n                uVar25 = *(unaff_RBX[2] + 0x14);\n                uVar26 = *(unaff_RBX[2] + 0x18);\n                uVar27 = *(unaff_RBX[2] + 0x1c);\n                uVar68 = puVar75 & 0x1f;\n                uVar28 = *unaff_RBX[3];\n                uVar29 = *(unaff_RBX[3] + 4);\n                uVar30 = *(unaff_RBX[3] + 8);\n                uVar31 = *(unaff_RBX[3] + 0xc);\n                uVar32 = *(unaff_RBX[3] + 0x10);\n                uVar33 = *(unaff_RBX[3] + 0x14);\n                uVar34 = *(unaff_RBX[3] + 0x18);\n                uVar35 = *(unaff_RBX[3] + 0x1c);\n                uVar67 = puVar75 ^ uVar68;\n                auVar81 = vmovdqu_avx(*(unaff_RBX[-1] + arg1));\n                iVar69 = unaff_RBX + (arg1 - uVar68);\n                arg1 = arg1 - uVar68;\n                if (0x100000 < arg1) {\n                    arg1 = arg1 - 0x80;\n                    do {\n                        auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                        auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                        auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                        auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                        iVar69 = iVar69 + -0x80;\n                        auVar77 = vmovntdq_avx(auVar77);\n                        *(uVar67 - 0x20) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar78);\n                        *(uVar67 - 0x40) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar79);\n                        *(uVar67 - 0x60) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar80);\n                        *(uVar67 - 0x80) = auVar77;\n                        uVar67 = uVar67 - 0x80;\n                        bVar76 = 0x7f < arg1;\n                        arg1 = arg1 - 0x80;\n                    } while (bVar76 && arg1 != 0);\n                    auVar81 = vmovdqu_avx(auVar81);\n                    *(puVar75 + -0x20) = auVar81;\n                    vzeroupper_avx();\n                    **in_RAX = uVar3;\n                    *(*in_RAX + 4) = uVar5;\n                    *(*in_RAX + 8) = uVar6;\n                    *(*in_RAX + 0xc) = uVar7;\n                    *(*in_RAX + 0x10) = uVar8;\n                    *(*in_RAX + 0x14) = uVar9;\n                    *(*in_RAX + 0x18) = uVar10;\n                    *(*in_RAX + 0x1c) = uVar11;\n                    *in_RAX[1] = uVar12;\n                    *(in_RAX[1] + 4) = uVar13;\n                    *(in_RAX[1] + 8) = uVar14;\n                    *(in_RAX[1] + 0xc) = uVar15;\n                    *(in_RAX[1] + 0x10) = uVar16;\n                    *(in_RAX[1] + 0x14) = uVar17;\n                    *(in_RAX[1] + 0x18) = uVar18;\n                    *(in_RAX[1] + 0x1c) = uVar19;\n                    *in_RAX[2] = uVar20;\n                    *(in_RAX[2] + 4) = uVar21;\n                    *(in_RAX[2] + 8) = uVar22;\n                    *(in_RAX[2] + 0xc) = uVar23;\n                    *(in_RAX[2] + 0x10) = uVar24;\n                    *(in_RAX[2] + 0x14) = uVar25;\n                    *(in_RAX[2] + 0x18) = uVar26;\n                    *(in_RAX[2] + 0x1c) = uVar27;\n                    *in_RAX[3] = uVar28;\n                    *(in_RAX[3] + 4) = uVar29;\n                    *(in_RAX[3] + 8) = uVar30;\n                    *(in_RAX[3] + 0xc) = uVar31;\n                    *(in_RAX[3] + 0x10) = uVar32;\n                    *(in_RAX[3] + 0x14) = uVar33;\n                    *(in_RAX[3] + 0x18) = uVar34;\n                    *(in_RAX[3] + 0x1c) = uVar35;\n                    return;\n                }\n                arg1 = arg1 - 0x80;\n                do {\n                    auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                    auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                    auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                    auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                    iVar69 = iVar69 + -0x80;\n                    *(uVar67 - 0x20) = auVar77;\n                    *(uVar67 - 0x40) = auVar78;\n                    *(uVar67 - 0x60) = auVar79;\n                    *(uVar67 - 0x80) = auVar80;\n                    uVar67 = uVar67 - 0x80;\n                    bVar76 = 0x7f < arg1;\n                    arg1 = arg1 - 0x80;\n                } while (bVar76 && arg1 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *(puVar75 + -0x20) = auVar81;\n                vzeroupper_avx();\n                **in_RAX = uVar3;\n                *(*in_RAX + 4) = uVar5;\n                *(*in_RAX + 8) = uVar6;\n                *(*in_RAX + 0xc) = uVar7;\n                *(*in_RAX + 0x10) = uVar8;\n                *(*in_RAX + 0x14) = uVar9;\n                *(*in_RAX + 0x18) = uVar10;\n                *(*in_RAX + 0x1c) = uVar11;\n                *in_RAX[1] = uVar12;\n                *(in_RAX[1] + 4) = uVar13;\n                *(in_RAX[1] + 8) = uVar14;\n                *(in_RAX[1] + 0xc) = uVar15;\n                *(in_RAX[1] + 0x10) = uVar16;\n                *(in_RAX[1] + 0x14) = uVar17;\n                *(in_RAX[1] + 0x18) = uVar18;\n                *(in_RAX[1] + 0x1c) = uVar19;\n                *in_RAX[2] = uVar20;\n                *(in_RAX[2] + 4) = uVar21;\n                *(in_RAX[2] + 8) = uVar22;\n                *(in_RAX[2] + 0xc) = uVar23;\n                *(in_RAX[2] + 0x10) = uVar24;\n                *(in_RAX[2] + 0x14) = uVar25;\n                *(in_RAX[2] + 0x18) = uVar26;\n                *(in_RAX[2] + 0x1c) = uVar27;\n                *in_RAX[3] = uVar28;\n                *(in_RAX[3] + 4) = uVar29;\n                *(in_RAX[3] + 8) = uVar30;\n                *(in_RAX[3] + 0xc) = uVar31;\n                *(in_RAX[3] + 0x10) = uVar32;\n                *(in_RAX[3] + 0x14) = uVar33;\n                *(in_RAX[3] + 0x18) = uVar34;\n                *(in_RAX[3] + 0x1c) = uVar35;\n                return;\n            }\n            if (0xfffff < arg1) {\n                puVar1 = unaff_RBX[-4] + arg1;\n                uVar3 = *puVar1;\n                uVar5 = puVar1[1];\n                uVar6 = puVar1[2];\n                uVar7 = puVar1[3];\n                uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n                uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n                uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n                uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n                uVar12 = *(unaff_RBX[-3] + arg1);\n                uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n                uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n                uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n                uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n                uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n                uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n                uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n                uVar20 = *(unaff_RBX[-2] + arg1);\n                uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n                uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n                uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n                uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n                uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n                uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n                uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n                uVar28 = *(unaff_RBX[-1] + arg1);\n                uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n                uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n                uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n                uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n                uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n                uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n                uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n                auVar81 = vmovdqu_avx(*unaff_RBX);\n                pauVar74 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n                iVar69 = arg1 - (pauVar74 - in_RAX);\n                pauVar73 = unaff_RBX + (pauVar74 - in_RAX);\n                uVar67 = iVar69 - 0x80;\n                pauVar71 = pauVar74;\n                do {\n                    auVar77 = vmovdqu_avx(*pauVar73);\n                    auVar78 = vmovdqu_avx(pauVar73[1]);\n                    auVar79 = vmovdqu_avx(pauVar73[2]);\n                    auVar80 = vmovdqu_avx(pauVar73[3]);\n                    pauVar73 = pauVar73[4];\n                    auVar77 = vmovntdq_avx(auVar77);\n                    *pauVar71 = auVar77;\n                    auVar77 = vmovntdq_avx(auVar78);\n                    pauVar71[1] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar79);\n                    pauVar71[2] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar80);\n                    pauVar71[3] = auVar77;\n                    pauVar71 = pauVar71[4];\n                    bVar76 = 0x7f < uVar67;\n                    uVar67 = uVar67 - 0x80;\n                } while (bVar76 && uVar67 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *in_RAX = auVar81;\n                vzeroupper_avx();\n                *(pauVar74 + iVar69 + -0x80) = uVar3;\n                *(pauVar74 + iVar69 + -0x7c) = uVar5;\n                *(pauVar74 + iVar69 + -0x78) = uVar6;\n                *(pauVar74 + iVar69 + -0x74) = uVar7;\n                *(pauVar74 + iVar69 + -0x70) = uVar8;\n                *(pauVar74 + iVar69 + -0x6c) = uVar9;\n                *(pauVar74 + iVar69 + -0x68) = uVar10;\n                *(pauVar74 + iVar69 + -100) = uVar11;\n                *(pauVar74 + iVar69 + -0x60) = uVar12;\n                *(pauVar74 + iVar69 + -0x5c) = uVar13;\n                *(pauVar74 + iVar69 + -0x58) = uVar14;\n                *(pauVar74 + iVar69 + -0x54) = uVar15;\n                *(pauVar74 + iVar69 + -0x50) = uVar16;\n                *(pauVar74 + iVar69 + -0x4c) = uVar17;\n                *(pauVar74 + iVar69 + -0x48) = uVar18;\n                *(pauVar74 + iVar69 + -0x44) = uVar19;\n                *(pauVar74 + iVar69 + -0x40) = uVar20;\n                *(pauVar74 + iVar69 + -0x3c) = uVar21;\n                *(pauVar74 + iVar69 + -0x38) = uVar22;\n                *(pauVar74 + iVar69 + -0x34) = uVar23;\n                *(pauVar74 + iVar69 + -0x30) = uVar24;\n                *(pauVar74 + iVar69 + -0x2c) = uVar25;\n                *(pauVar74 + iVar69 + -0x28) = uVar26;\n                *(pauVar74 + iVar69 + -0x24) = uVar27;\n                *(pauVar74 + iVar69 + -0x20) = uVar28;\n                *(pauVar74 + iVar69 + -0x1c) = uVar29;\n                *(pauVar74 + iVar69 + -0x18) = uVar30;\n                *(pauVar74 + iVar69 + -0x14) = uVar31;\n                *(pauVar74 + iVar69 + -0x10) = uVar32;\n                *(pauVar74 + iVar69 + -0xc) = uVar33;\n                *(pauVar74 + iVar69 + -8) = uVar34;\n                *(pauVar74 + iVar69 + -4) = uVar35;\n                return;\n            }\n            uVar3 = *(unaff_RBX[-4] + arg1);\n            uVar5 = *(unaff_RBX[-4] + arg1 + 4);\n            uVar6 = *(unaff_RBX[-4] + arg1 + 8);\n            uVar7 = *(unaff_RBX[-4] + arg1 + 0xc);\n            uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n            uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n            uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n            uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n            pauVar73 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n            uVar12 = *(unaff_RBX[-3] + arg1);\n            uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n            uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n            uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n            uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n            uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n            uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n            uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n            uVar20 = *(unaff_RBX[-2] + arg1);\n            uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n            uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n            uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n            uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n            uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n            uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n            uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n            uVar28 = *(unaff_RBX[-1] + arg1);\n            uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n            uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n            uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n            uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n            uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n            uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n            uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            auVar81 = vmovdqu_avx(*unaff_RBX);\n            pauVar71 = unaff_RBX + (pauVar73 - in_RAX);\n            uVar67 = (arg1 - (pauVar73 - in_RAX)) - 0x80;\n            do {\n                uVar68 = uVar67;\n                auVar77 = vmovdqu_avx(*pauVar71);\n                auVar78 = vmovdqu_avx(pauVar71[1]);\n                auVar79 = vmovdqu_avx(pauVar71[2]);\n                auVar80 = vmovdqu_avx(pauVar71[3]);\n                pauVar71 = pauVar71[4];\n                *pauVar73 = auVar77;\n                pauVar73[1] = auVar78;\n                pauVar73[2] = auVar79;\n                pauVar73[3] = auVar80;\n                pauVar73 = pauVar73[4];\n                uVar67 = uVar68 - 0x80;\n            } while (0x7f < uVar68 && uVar68 - 0x80 != 0);\n            auVar81 = vmovdqu_avx(auVar81);\n            *in_RAX = auVar81;\n            vzeroupper_avx();\n            *(pauVar73[-4] + uVar68) = uVar3;\n            *(pauVar73[-4] + uVar68 + 4) = uVar5;\n            *(pauVar73[-4] + uVar68 + 8) = uVar6;\n            *(pauVar73[-4] + uVar68 + 0xc) = uVar7;\n            *(pauVar73[-4] + uVar68 + 0x10) = uVar8;\n            *(pauVar73[-4] + uVar68 + 0x14) = uVar9;\n            *(pauVar73[-4] + uVar68 + 0x18) = uVar10;\n            *(pauVar73[-4] + uVar68 + 0x1c) = uVar11;\n            *(pauVar73[-3] + uVar68) = uVar12;\n            *(pauVar73[-3] + uVar68 + 4) = uVar13;\n            *(pauVar73[-3] + uVar68 + 8) = uVar14;\n            *(pauVar73[-3] + uVar68 + 0xc) = uVar15;\n            *(pauVar73[-3] + uVar68 + 0x10) = uVar16;\n            *(pauVar73[-3] + uVar68 + 0x14) = uVar17;\n            *(pauVar73[-3] + uVar68 + 0x18) = uVar18;\n            *(pauVar73[-3] + uVar68 + 0x1c) = uVar19;\n            *(pauVar73[-2] + uVar68) = uVar20;\n            *(pauVar73[-2] + uVar68 + 4) = uVar21;\n            *(pauVar73[-2] + uVar68 + 8) = uVar22;\n            *(pauVar73[-2] + uVar68 + 0xc) = uVar23;\n            *(pauVar73[-2] + uVar68 + 0x10) = uVar24;\n            *(pauVar73[-2] + uVar68 + 0x14) = uVar25;\n            *(pauVar73[-2] + uVar68 + 0x18) = uVar26;\n            *(pauVar73[-2] + uVar68 + 0x1c) = uVar27;\n            *(pauVar73[-1] + uVar68) = uVar28;\n            *(pauVar73[-1] + uVar68 + 4) = uVar29;\n            *(pauVar73[-1] + uVar68 + 8) = uVar30;\n            *(pauVar73[-1] + uVar68 + 0xc) = uVar31;\n            *(pauVar73[-1] + uVar68 + 0x10) = uVar32;\n            *(pauVar73[-1] + uVar68 + 0x14) = uVar33;\n            *(pauVar73[-1] + uVar68 + 0x18) = uVar34;\n            *(pauVar73[-1] + uVar68 + 0x1c) = uVar35;\n            return;\n        }\n        if ((in_RAX < unaff_RBX) || (*unaff_RBX + arg1 <= in_RAX)) {\n            if (arg1 < 0x801) {\n                do {\n                    arg1 = arg1 - 0x100;\n                    uVar48 = *(*unaff_RBX + 4);\n                    uVar49 = *(*unaff_RBX + 8);\n                    uVar50 = *(*unaff_RBX + 0xc);\n                    uVar51 = *(*unaff_RBX + 0x10);\n                    uVar52 = *(*unaff_RBX + 0x14);\n                    uVar53 = *(*unaff_RBX + 0x18);\n                    uVar54 = *(*unaff_RBX + 0x1c);\n                    uVar55 = *unaff_RBX[1];\n                    uVar56 = *(unaff_RBX[1] + 4);\n                    uVar57 = *(unaff_RBX[1] + 8);\n                    uVar58 = *(unaff_RBX[1] + 0xc);\n                    uVar59 = *(unaff_RBX[1] + 0x10);\n                    uVar60 = *(unaff_RBX[1] + 0x14);\n                    uVar61 = *(unaff_RBX[1] + 0x18);\n                    uVar62 = *(unaff_RBX[1] + 0x1c);\n                    uVar63 = *unaff_RBX[2];\n                    uVar64 = *(unaff_RBX[2] + 4);\n                    uVar65 = *(unaff_RBX[2] + 8);\n                    uVar66 = *(unaff_RBX[2] + 0xc);\n                    uVar3 = *(unaff_RBX[2] + 0x10);\n                    uVar5 = *(unaff_RBX[2] + 0x14);\n                    uVar6 = *(unaff_RBX[2] + 0x18);\n                    uVar7 = *(unaff_RBX[2] + 0x1c);\n                    uVar8 = *unaff_RBX[3];\n                    uVar9 = *(unaff_RBX[3] + 4);\n                    uVar10 = *(unaff_RBX[3] + 8);\n                    uVar11 = *(unaff_RBX[3] + 0xc);\n                    uVar12 = *(unaff_RBX[3] + 0x10);\n                    uVar13 = *(unaff_RBX[3] + 0x14);\n                    uVar14 = *(unaff_RBX[3] + 0x18);\n                    uVar15 = *(unaff_RBX[3] + 0x1c);\n                    uVar16 = *unaff_RBX[4];\n                    uVar17 = *(unaff_RBX[4] + 4);\n                    uVar18 = *(unaff_RBX[4] + 8);\n                    uVar19 = *(unaff_RBX[4] + 0xc);\n                    uVar20 = *(unaff_RBX[4] + 0x10);\n                    uVar21 = *(unaff_RBX[4] + 0x14);\n                    uVar22 = *(unaff_RBX[4] + 0x18);\n                    uVar23 = *(unaff_RBX[4] + 0x1c);\n                    uVar24 = *unaff_RBX[5];\n                    uVar25 = *(unaff_RBX[5] + 4);\n                    uVar26 = *(unaff_RBX[5] + 8);\n                    uVar27 = *(unaff_RBX[5] + 0xc);\n                    uVar28 = *(unaff_RBX[5] + 0x10);\n                    uVar29 = *(unaff_RBX[5] + 0x14);\n                    uVar30 = *(unaff_RBX[5] + 0x18);\n                    uVar31 = *(unaff_RBX[5] + 0x1c);\n                    uVar32 = *unaff_RBX[6];\n                    uVar33 = *(unaff_RBX[6] + 4);\n                    uVar34 = *(unaff_RBX[6] + 8);\n                    uVar35 = *(unaff_RBX[6] + 0xc);\n                    uVar36 = *(unaff_RBX[6] + 0x10);\n                    uVar37 = *(unaff_RBX[6] + 0x14);\n                    uVar38 = *(unaff_RBX[6] + 0x18);\n                    uVar39 = *(unaff_RBX[6] + 0x1c);\n                    uVar40 = *unaff_RBX[7];\n                    uVar41 = *(unaff_RBX[7] + 4);\n                    uVar42 = *(unaff_RBX[7] + 8);\n                    uVar43 = *(unaff_RBX[7] + 0xc);\n                    uVar44 = *(unaff_RBX[7] + 0x10);\n                    uVar45 = *(unaff_RBX[7] + 0x14);\n                    uVar46 = *(unaff_RBX[7] + 0x18);\n                    uVar47 = *(unaff_RBX[7] + 0x1c);\n                    **in_RAX = **unaff_RBX;\n                    *(*in_RAX + 4) = uVar48;\n                    *(*in_RAX + 8) = uVar49;\n                    *(*in_RAX + 0xc) = uVar50;\n                    *(*in_RAX + 0x10) = uVar51;\n                    *(*in_RAX + 0x14) = uVar52;\n                    *(*in_RAX + 0x18) = uVar53;\n                    *(*in_RAX + 0x1c) = uVar54;\n                    *in_RAX[1] = uVar55;\n                    *(in_RAX[1] + 4) = uVar56;\n                    *(in_RAX[1] + 8) = uVar57;\n                    *(in_RAX[1] + 0xc) = uVar58;\n                    *(in_RAX[1] + 0x10) = uVar59;\n                    *(in_RAX[1] + 0x14) = uVar60;\n                    *(in_RAX[1] + 0x18) = uVar61;\n                    *(in_RAX[1] + 0x1c) = uVar62;\n                    *in_RAX[2] = uVar63;\n                    *(in_RAX[2] + 4) = uVar64;\n                    *(in_RAX[2] + 8) = uVar65;\n                    *(in_RAX[2] + 0xc) = uVar66;\n                    *(in_RAX[2] + 0x10) = uVar3;\n                    *(in_RAX[2] + 0x14) = uVar5;\n                    *(in_RAX[2] + 0x18) = uVar6;\n                    *(in_RAX[2] + 0x1c) = uVar7;\n                    *in_RAX[3] = uVar8;\n                    *(in_RAX[3] + 4) = uVar9;\n                    *(in_RAX[3] + 8) = uVar10;\n                    *(in_RAX[3] + 0xc) = uVar11;\n                    *(in_RAX[3] + 0x10) = uVar12;\n                    *(in_RAX[3] + 0x14) = uVar13;\n                    *(in_RAX[3] + 0x18) = uVar14;\n                    *(in_RAX[3] + 0x1c) = uVar15;\n                    *in_RAX[4] = uVar16;\n                    *(in_RAX[4] + 4) = uVar17;\n                    *(in_RAX[4] + 8) = uVar18;\n                    *(in_RAX[4] + 0xc) = uVar19;\n                    *(in_RAX[4] + 0x10) = uVar20;\n                    *(in_RAX[4] + 0x14) = uVar21;\n                    *(in_RAX[4] + 0x18) = uVar22;\n                    *(in_RAX[4] + 0x1c) = uVar23;\n                    *in_RAX[5] = uVar24;\n                    *(in_RAX[5] + 4) = uVar25;\n                    *(in_RAX[5] + 8) = uVar26;\n                    *(in_RAX[5] + 0xc) = uVar27;\n                    *(in_RAX[5] + 0x10) = uVar28;\n                    *(in_RAX[5] + 0x14) = uVar29;\n                    *(in_RAX[5] + 0x18) = uVar30;\n                    *(in_RAX[5] + 0x1c) = uVar31;\n                    *in_RAX[6] = uVar32;\n                    *(in_RAX[6] + 4) = uVar33;\n                    *(in_RAX[6] + 8) = uVar34;\n                    *(in_RAX[6] + 0xc) = uVar35;\n                    *(in_RAX[6] + 0x10) = uVar36;\n                    *(in_RAX[6] + 0x14) = uVar37;\n                    *(in_RAX[6] + 0x18) = uVar38;\n                    *(in_RAX[6] + 0x1c) = uVar39;\n                    *in_RAX[7] = uVar40;\n                    *(in_RAX[7] + 4) = uVar41;\n                    *(in_RAX[7] + 8) = uVar42;\n                    *(in_RAX[7] + 0xc) = uVar43;\n                    *(in_RAX[7] + 0x10) = uVar44;\n                    *(in_RAX[7] + 0x14) = uVar45;\n                    *(in_RAX[7] + 0x18) = uVar46;\n                    *(in_RAX[7] + 0x1c) = uVar47;\n                    unaff_RBX = unaff_RBX[8];\n                    in_RAX = in_RAX[8];\n                } while (0xff < arg1);\n            }\n            else {\n                if ((*0x5d4346 == '\\x01') && (((unaff_RBX | in_RAX) & 7) != 0)) {\n                    for (; arg1 != 0; arg1 = arg1 - 1) {\n                        (*in_RAX)[0] = (*unaff_RBX)[0];\n                        unaff_RBX = *unaff_RBX + 1;\n                        in_RAX = *in_RAX + 1;\n                    }\n                    return;\n                }\n                uVar68 = arg1 & 7;\n                for (uVar67 = arg1 >> 3; arg1 = uVar68,  uVar67 != 0; uVar67 = uVar67 - 1) {\n                    **in_RAX = **unaff_RBX;\n                    unaff_RBX = *unaff_RBX + 8;\n                    in_RAX = *in_RAX + 8;\n                }\n            }\n        }\n        else {\n            uVar67 = arg1 >> 3;\n            uVar68 = arg1 & 7;\n            puVar70 = *unaff_RBX + arg1;\n            puVar72 = *in_RAX + arg1;\n            while( true ) {\n                if (uVar67 == 0) break;\n                uVar67 = uVar67 - 1;\n                puVar72[-1] = puVar70[-1];\n                puVar70 = puVar70 + -1;\n                puVar72 = puVar72 + -1;\n            }\n            in_RAX = puVar72 - uVar68;\n            unaff_RBX = puVar70 - uVar68;\n            arg1 = uVar68;\n        }\n    }\n    uVar3 = *(*unaff_RBX + 4);\n    uVar5 = *(*unaff_RBX + 8);\n    uVar6 = *(*unaff_RBX + 0xc);\n    puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n    uVar7 = *puVar1;\n    uVar8 = puVar1[1];\n    uVar9 = puVar1[2];\n    uVar10 = puVar1[3];\n    **in_RAX = **unaff_RBX;\n    *(*in_RAX + 4) = uVar3;\n    *(*in_RAX + 8) = uVar5;\n    *(*in_RAX + 0xc) = uVar6;\n    puVar1 = in_RAX[-1] + arg1 + 0x10;\n    *puVar1 = uVar7;\n    puVar1[1] = uVar8;\n    puVar1[2] = uVar9;\n    puVar1[3] = uVar10;\n    return;\n}\n",
        "token_count": 13220
    },
    "0045e320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e320(void)\n\n{\n    if (*0x5d3b35 == '\\0') {\n        return;\n    }\n    fcn.0042e760();\n    return;\n}\n",
        "token_count": 45
    },
    "0045e380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0045e380(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    if (*0x5d3b35 == '\\0') {\n        return (*0x7ffe0014 + -0x19db1ded53e8000) * 0x5fca6af2bd215e5c;\n    }\n    iVar1 = fcn.0042e7e0();\n    return iVar1;\n}\n",
        "token_count": 106
    },
    "0045e620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e620(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    ulong in_R9;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    uVar7 = 0;\n    uVar8 = 0;\n    uVar9 = 0;\n    uVar10 = 0;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar5 = *0x20;\n    do {\n        puVar1 = iVar2 + 0x10;\n        puVar6 = puVar5;\n        if (*puVar1 <= puVar5 && puVar5 != *puVar1) {\n            puVar6 = puVar5 + -0x60;\n            *(puVar5 + -8) = unaff_RBP;\n            unaff_RBP = puVar5 + -8;\n            if (*0x5d3dd0 == 0) {\n                *0x57ef88 = 0x45ddc0;\n            }\n            else {\n                *(puVar5 + -0x68) = 0x42e605;\n                fcn.0045c6c0(arg1, 0x45ddc0, arg3, in_R9);\n            }\n            arg1_00 = 0;\n            while( true ) {\n                if (0x35 < arg1_00) {\n                    *(puVar5 + -0x68) = 0x42e675;\n                    fcn.0042d740();\n                    *(puVar5 + -0x68) = 0x42e67a;\n                    fcn.00443f60();\n                    *(puVar5 + -0x68) = 0x42e67f;\n                    fcn.00444000();\n                    *(puVar5 + -0x68) = 0x42e685;\n                    fcn.0042e240();\n                    *(puVar5 + -0x68) = 0x42e68c;\n                    *0x5d3b94 = fcn.0042e180();\n                    *(puVar5 + -0x68) = 0x42e697;\n                    fcn.0042e300();\n                    *(puVar5 + -0x68) = 0x42e69c;\n                    *0x5d3b74 = fcn.0042e060();\n                    *(puVar5 + -0x38) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x28) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x18) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x60) = _sym.imp.kernel32.dll_GetSystemInfo;\n                    *(puVar5 + -0x58) = puVar5 + -0x38;\n                    *(puVar5 + -0x68) = 0x42e6ce;\n                    fcn.004303e0();\n                    *0x5d3cd8 = *(puVar5 + -0x34);\n                    *(puVar5 + -0x60) = _sym.imp.kernel32.dll_SetProcessPriorityBoost;\n                    *(puVar5 + -0x58) = 0xffffffffffffffff;\n                    *(puVar5 + -0x50) = 1;\n                    *(puVar5 + -0x68) = 0x42e70f;\n                    fcn.00430460();\n                    return;\n                }\n                uVar3 = *(arg1_00 + 0x4d36e4);\n                if (uVar3 < 0x80) {\n                    uVar4 = arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(puVar5 + -0x40) = arg1_00;\n                    *(puVar5 + -0x68) = 0x42e654;\n                    uVar3 = fcn.00456ac0(arg1_00);\n                    arg1_00 = 0x36;\n                    uVar4 = *(puVar5 + -0x40);\n                }\n                if (99 < uVar4) break;\n                arg3 = 0x5d4040;\n                *(uVar4 + 0x5d4040) = uVar3;\n                *0x5d3b48 = *0x5d3b48 + 1;\n            }\n            arg1 = 100;\n            *(puVar5 + -0x68) = 0x42e737;\n            fcn.0045ca40(100);\n        }\n        *(puVar6 + -8) = 0x42e73d;\n        fcn.0045a360();\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1177
    },
    "0045e800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00436844)\n\nvoid fcn.0045e800(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1;\n    uchar *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar4 = *0x20;\n    do {\n        puVar5 = puVar4;\n        if (*(iVar2 + 0x10) <= puVar4 && puVar4 != *(iVar2 + 0x10)) {\n            puVar5 = puVar4 + -0x50;\n            *(puVar4 + -8) = unaff_RBP;\n            unaff_RBP = puVar4 + -8;\n            *(puVar4 + -0x18) = iVar2;\n            *0x5806d8 = 10000;\n            iVar2 = 0x56a3e0;\n            while (iVar2 != 0) {\n                *(puVar4 + -0x20) = iVar2;\n                *(puVar4 + -0x58) = 0x4366fa;\n                fcn.0044a4a0();\n                iVar2 = *(*(puVar4 + -0x20) + 0x220);\n            }\n            for (iVar2 = 0; iVar2 < 2; iVar2 = iVar2 + 1) {\n                param_2 = 0x5d4140;\n                *(iVar2 * 0x40 + 0x5d4148) = 0;\n                *(iVar2 * 0x40 + 0x5d4150) = 0;\n            }\n            for (iVar2 = 0; iVar2 < 0x23; iVar2 = iVar2 + 1) {\n                param_2 = 0x5d4a48;\n                *(iVar2 * 0x10 + 0x5d4a48) = 0;\n                *(iVar2 * 0x10 + 0x5d4a50) = 0;\n            }\n            *(puVar4 + -0x58) = 0x43676b;\n            fcn.0040ad00();\n            *(puVar4 + -0x58) = 0x436770;\n            fcn.00436660();\n            *(puVar4 + -0x58) = 0x436775;\n            fcn.00403120();\n            *(puVar4 + -0x58) = 0x43678a;\n            fcn.0042ebc0(8);\n            uVar1 = *(*(puVar4 + -0x18) + 0x30);\n            *(puVar4 + -0x58) = 0x4367a5;\n            fcn.00436aa0(uVar1);\n            *(puVar4 + -0x58) = 0x4367aa;\n            fcn.0044a240();\n            *(puVar4 + -0x58) = 0x4367af;\n            fcn.00455820();\n            *(puVar4 + -0x58) = 0x4367b4;\n            fcn.00409900();\n            *(puVar4 + -0x58) = 0x4367b9;\n            fcn.00448240();\n            *(puVar4 + -0x58) = 0x4367c9;\n            fcn.0042ec60();\n            *(puVar4 + -0x58) = 0x4367ce;\n            fcn.00442940();\n            *(puVar4 + -0x58) = 0x4367d3;\n            fcn.00416ca0();\n            *(puVar4 + -0x58) = 0x4367e5;\n            fcn.0040a360();\n            *(puVar4 + -0x58) = 0x4367ea;\n            fcn.0045e320();\n            iVar2 = **(in_GS_OFFSET + 0x28);\n            *0x5806a8 = *(puVar4 + -0x50);\n            *(puVar4 + -0x34) = *0x5d3b74;\n            *(puVar4 + -0x58) = 0x436825;\n            fcn.00406f00();\n            *(puVar4 + -0x58) = 0x43682a;\n            fcn.004494e0();\n            arg1 = *(puVar4 + -0x34);\n            *(puVar4 + -0x58) = 0x436853;\n            iVar3 = fcn.0043ede0();\n            if (iVar3 == 0) {\n                *(puVar4 + -0x58) = 0x43686a;\n                fcn.0040a580();\n                if (1 < *0x5d3fe0) {\n                    *0x5d3dd5 = 1;\n                    *0x5d3dd0 = CONCAT31(*0x5d3dd1, 1);\n                    *(puVar4 + -0x10) = *0x57fc90;\n                    *(puVar4 + -0x28) = *0x57fc98;\n                    iVar2 = 0;\n                    arg1 = *0x57fc90;\n                    param_2 = *0x57fc98;\n                    while (iVar2 < param_2) {\n                        *(puVar4 + -0x30) = iVar2;\n                        iVar2 = *(arg1 + iVar2 * 8);\n                        *(puVar4 + -0x58) = 0x436945;\n                        fcn.0042c640(arg1, iVar2 + 0x1260);\n                        arg1 = *(puVar4 + -0x10);\n                        param_2 = *(puVar4 + -0x28);\n                        iVar2 = *(puVar4 + -0x30) + 1;\n                    }\n                }\n                if (*0x576bc8 == 0) {\n                    *0x576bc8 = 7;\n                    if (*0x5d3dd0 == 0) {\n                        *0x576bc0 = 0x4c8222;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x4368e6;\n                        fcn.0045c5a0(arg1, param_2, param_3, param_4);\n                    }\n                }\n                if (*0x576c18 == 1) {\n                    *0x576c18 = 0;\n                    if (*0x5d3dd0 == 0) {\n                        *0x576c10 = 0;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x43691f;\n                        fcn.0045c5a0(arg1, param_2, param_3, param_4);\n                    }\n                }\n                return;\n            }\n            *(puVar4 + -0x58) = 0x436976;\n            fcn.004330a0();\n        }\n        *(puVar5 + -8) = 0x43697c;\n        fcn.0045a360();\n        puVar4 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1657
    },
    "0045e820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e820(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int64_t iStack24;\n    int64_t *piStack16;\n    \n    piStack16 = **(in_GS_OFFSET + 0x28);\n    if (*piStack16 == 0) {\n        iStack24 = piStack16[1];\n        if (iStack24 == 0) {\n            iStack24 = 0x2000;\n        }\n        piStack16[1] = &iStack24;\n        *piStack16 = &stack0x000003e8 + -iStack24;\n    }\n    piStack16[2] = *piStack16 + 0x13a0;\n    piStack16[3] = *piStack16 + 0x13a0;\n    fcn.00438180();\n    fcn.00438320();\n    return;\n}\n",
        "token_count": 197
    },
    "0045e900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00442746)\n// WARNING: Removing unreachable block (ram,0x00442748)\n// WARNING: Removing unreachable block (ram,0x0044274e)\n// WARNING: Removing unreachable block (ram,0x00442769)\n// WARNING: Removing unreachable block (ram,0x0044276f)\n// WARNING: Removing unreachable block (ram,0x00442771)\n// WARNING: Removing unreachable block (ram,0x00442777)\n// WARNING: Removing unreachable block (ram,0x0044278a)\n// WARNING: Removing unreachable block (ram,0x00442790)\n// WARNING: Removing unreachable block (ram,0x004427a9)\n// WARNING: Removing unreachable block (ram,0x004427ab)\n// WARNING: Removing unreachable block (ram,0x004427b7)\n// WARNING: Removing unreachable block (ram,0x004427d1)\n// WARNING: Removing unreachable block (ram,0x004427d3)\n// WARNING: Removing unreachable block (ram,0x004427f2)\n// WARNING: Removing unreachable block (ram,0x004427fc)\n// WARNING: Removing unreachable block (ram,0x0044280d)\n// WARNING: Removing unreachable block (ram,0x004427b4)\n// WARNING: Removing unreachable block (ram,0x0044281e)\n// WARNING: Removing unreachable block (ram,0x0044282f)\n// WARNING: Removing unreachable block (ram,0x00442845)\n// WARNING: Removing unreachable block (ram,0x00442856)\n// WARNING: Removing unreachable block (ram,0x00442867)\n\nvoid fcn.0045e900(void)\n\n{\n    uint64_t *puVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t in_GS_OFFSET;\n    \n    iVar4 = **(in_GS_OFFSET + 0x28);\n    puVar8 = *0x20;\n    do {\n        puVar1 = iVar4 + 0x10;\n        puVar9 = puVar8;\n        if (*puVar1 <= puVar8 && puVar8 != *puVar1) {\n            puVar9 = puVar8 + -0x40;\n            *(puVar8 + -8) = unaff_RBP;\n            unaff_RBP = puVar8 + -8;\n            *(puVar8 + -0x1c) = 0;\n            *(puVar8 + -0x20) = 0;\n            *(puVar8 + -0x24) = 0;\n            *(puVar8 + -0x10) = 0;\n            *(puVar8 + -0x18) = 0;\n            *(puVar8 + -0x28) = 0;\n            uVar5 = 0;\n            iVar7 = 0xb3a4b57ce31;\n            for (iVar6 = 0x1e; -1 < iVar6; iVar6 = iVar6 + -1) {\n                iVar10 = 1000000000 << (iVar6 & 0x3f);\n                if (iVar10 <= iVar7) {\n                    iVar7 = iVar7 - iVar10;\n                    uVar5 = uVar5 | 1 << (iVar6 & 0x1f);\n                }\n            }\n            if (iVar7 < 1000000000) {\n                *(puVar8 + -0x1c) = iVar7;\n            }\n            else {\n                *(puVar8 + -0x1c) = 0;\n                uVar5 = 0x7fffffff;\n            }\n            if ((uVar5 == 0x3039) && (*(puVar8 + -0x1c) == 0xd431)) {\n                *(puVar8 + -0x2c) = 0;\n                *(puVar8 + -0x2c) = 1;\n                piVar2 = puVar8 + -0x2c;\n                LOCK();\n                if (*piVar2 == 1) {\n                    *piVar2 = 2;\n                    if (*(puVar8 + -0x2c) == 2) {\n                        *(puVar8 + -0x2c) = 4;\n                        LOCK();\n                        if (*piVar2 == 5) {\n                            *piVar2 = 6;\n                        }\n                        else {\n                            if (*(puVar8 + -0x2c) == 4) {\n                                *(puVar8 + -0x2c) = 0xffffffff;\n                                LOCK();\n                                if (*piVar2 == -1) {\n                                    *piVar2 = -2;\n                                    if (*(puVar8 + -0x2c) == -2) {\n                                        *(puVar8 + -0x28) = 0;\n                                        *(puVar8 + -0x28) = 0x1010101;\n                                        puVar3 = puVar8 + -0x27;\n                                        LOCK();\n                                        *puVar3 = *puVar3 | 0xf0;\n                                        if ((((puVar8[-0x28] == '\\x01') && (puVar8[-0x27] == -0xf)) &&\n                                            (puVar8[-0x26] == '\\x01')) && (puVar8[-0x25] == '\\x01')) {\n                                            *(puVar8 + -0x28) = 0;\n                                            *(puVar8 + -0x28) = 0xffffffff;\n                                            LOCK();\n                                            *puVar3 = *puVar3 & 1;\n                                            if (((puVar8[-0x28] == -1) && (puVar8[-0x27] == '\\x01')) &&\n                                               ((puVar8[-0x26] == -1 && (puVar8[-0x25] == -1)))) {\n                                                *(puVar8 + -0x10) = 0xffffffffffffffff;\n                                                *(puVar8 + -0x48) = 0x442889;\n                                                fcn.004330a0();\n                                            }\n                                            *(puVar8 + -0x48) = 0x44289a;\n                                            fcn.004330a0();\n                                        }\n                                        *(puVar8 + -0x48) = 0x4428ab;\n                                        fcn.004330a0();\n                                    }\n                                    *(puVar8 + -0x48) = 0x4428bc;\n                                    fcn.004330a0();\n                                }\n                                *(puVar8 + -0x48) = 0x4428cd;\n                                fcn.004330a0();\n                            }\n                            *(puVar8 + -0x48) = 0x4428de;\n                            fcn.004330a0();\n                        }\n                        *(puVar8 + -0x48) = 0x4428ef;\n                        fcn.004330a0();\n                    }\n                    *(puVar8 + -0x48) = 0x442905;\n                    fcn.004330a0();\n                }\n                *(puVar8 + -0x48) = 0x442916;\n                fcn.004330a0();\n            }\n            *(puVar8 + -0x48) = 0x442927;\n            fcn.004330a0();\n        }\n        *(puVar9 + -8) = 0x44292d;\n        fcn.0045a360();\n        puVar8 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1681
    },
    "0045ea40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045ea40(void)\n\n{\n    uint uVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t **ppuVar4;\n    int64_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t *puVar10;\n    ulong uVar11;\n    uint64_t uVar12;\n    ulong *puVar13;\n    ulong uVar14;\n    uint64_t uVar15;\n    ulong unaff_RBX;\n    uchar *puVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar9 = **(in_GS_OFFSET + 0x28);\n    puVar16 = *0x20;\n    do {\n        puVar17 = puVar16;\n        if (*(iVar9 + 0x10) <= puVar16 + -0x130 && puVar16 + -0x130 != *(iVar9 + 0x10)) {\n            puVar17 = puVar16 + -0x1b0;\n            *(puVar16 + -8) = unaff_RBP;\n            unaff_RBP = puVar16 + -8;\n            puVar13 = *(iVar9 + 0x30);\n            puVar2 = puVar13[3];\n            if (puVar2[2] != 0xfffffffffffffb2e) {\n                *(puVar16 + -0xf8) = iVar9;\n                puVar10 = puVar13[0x12];\n                *(puVar16 + -0xb8) = puVar10;\n                if (puVar2 == puVar10) break;\n                *(puVar16 + -0xd8) = puVar13;\n                *(puVar16 + -0x158) = puVar2;\n                *(puVar16 + -0xe0) = *puVar13;\n                *(puVar16 + -0xe8) = puVar13[10];\n                *(puVar16 + -0x1b8) = 0x44767b;\n                fcn.00434840();\n                *(puVar16 + -0x1b8) = 0x44768c;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x447696;\n                fcn.00434fa0();\n                *(puVar16 + -0x1b8) = 0x4476a7;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x4476b4;\n                fcn.004350c0();\n                *(puVar16 + -0x1b8) = 0x4476c5;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x4476d2;\n                fcn.004350c0();\n                *(puVar16 + -0x1b8) = 0x4476e5;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x4476f2;\n                fcn.004350c0();\n                *(puVar16 + -0x1b8) = 0x447705;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x447712;\n                fcn.004350c0();\n                *(puVar16 + -0x1b8) = 0x447717;\n                fcn.00434aa0();\n                *(puVar16 + -0x1b8) = 0x44771c;\n                fcn.004348c0();\n                iVar5 = *(*(puVar16 + -0xf8) + 0x30);\n                *(puVar16 + -0x40) = *(iVar5 + 8);\n                uVar1 = *(iVar5 + 0x14);\n                uVar6 = *(iVar5 + 0x18);\n                uVar7 = *(iVar5 + 0x1c);\n                *(puVar16 + -0x38) = *(iVar5 + 0x10);\n                *(puVar16 + -0x34) = uVar1;\n                *(puVar16 + -0x30) = uVar6;\n                *(puVar16 + -0x2c) = uVar7;\n                uVar1 = *(iVar5 + 0x24);\n                uVar6 = *(iVar5 + 0x28);\n                uVar7 = *(iVar5 + 0x2c);\n                *(puVar16 + -0x28) = *(iVar5 + 0x20);\n                *(puVar16 + -0x24) = uVar1;\n                *(puVar16 + -0x20) = uVar6;\n                *(puVar16 + -0x1c) = uVar7;\n                uVar1 = *(iVar5 + 0x34);\n                uVar6 = *(iVar5 + 0x38);\n                uVar7 = *(iVar5 + 0x3c);\n                *(puVar16 + -0x18) = *(iVar5 + 0x30);\n                *(puVar16 + -0x14) = uVar1;\n                *(puVar16 + -0x10) = uVar6;\n                *(puVar16 + -0xc) = uVar7;\n                *(puVar16 + -0x1b8) = 0x447785;\n                fcn.004532a0(*(puVar16 + -0x18));\n                *(puVar16 + -0x1b8) = 0x447796;\n                fcn.004330a0();\n            }\n            unaff_RBX = 0x17;\n            *(puVar16 + -0x1b8) = 0x4477a7;\n            fcn.004330a0();\n        }\n        *(puVar17 + -8) = 0x4477ad;\n        fcn.0045a360();\n        puVar16 = puVar17;\n    } while( true );\n    if (*(puVar10 + 0xb7) == '\\0') {\n        *(puVar16 + -0xb0) = puVar13[1];\n        uVar1 = *(puVar13 + 0x14);\n        uVar6 = *(puVar13 + 3);\n        uVar7 = *(puVar13 + 0x1c);\n        *(puVar16 + -0xa8) = *(puVar13 + 2);\n        *(puVar16 + -0xa4) = uVar1;\n        *(puVar16 + -0xa0) = uVar6;\n        *(puVar16 + -0x9c) = uVar7;\n        uVar1 = *(puVar13 + 0x24);\n        uVar6 = *(puVar13 + 5);\n        uVar7 = *(puVar13 + 0x2c);\n        *(puVar16 + -0x98) = *(puVar13 + 4);\n        *(puVar16 + -0x94) = uVar1;\n        *(puVar16 + -0x90) = uVar6;\n        *(puVar16 + -0x8c) = uVar7;\n        uVar1 = *(puVar13 + 0x34);\n        uVar6 = *(puVar13 + 7);\n        uVar7 = *(puVar13 + 0x3c);\n        *(puVar16 + -0x88) = *(puVar13 + 6);\n        *(puVar16 + -0x84) = uVar1;\n        *(puVar16 + -0x80) = uVar6;\n        *(puVar16 + -0x7c) = uVar7;\n        *(*(iVar9 + 0x30) + 0x10) = 0;\n        *(*(iVar9 + 0x30) + 0x30) = 0;\n        *(*(iVar9 + 0x30) + 8) = 0;\n        *(*(iVar9 + 0x30) + 0x18) = 0;\n        puVar13 = puVar10[2];\n        *(puVar16 + -0x100) = puVar13;\n        if ((puVar13 == 0xfffffffffffffade) &&\n           ((((iVar9 = *(iVar9 + 0x30),  *(iVar9 + 0xd8) != 0 || (*(iVar9 + 0xc0) != 0)) || (*(iVar9 + 0xd0) != 0)) ||\n            (*(*(iVar9 + 0xa0) + 4) != 1)))) {\n            puVar10[2] = *puVar10 + 0x13a0;\n            *(puVar16 + -0x1b0) = puVar10 + 7;\n            *(puVar16 + -0x1b8) = 0x446cd4;\n            fcn.0045a180();\n            puVar10 = *(puVar16 + -0xb8);\n            puVar13 = *(puVar16 + -0x100);\n        }\n        uVar15 = *puVar10;\n        if (uVar15 != 0) {\n            uVar3 = puVar10[7];\n            uVar12 = uVar3 - 8;\n            *(puVar16 + -0x180) = uVar12;\n            if (uVar12 < uVar15) {\n                *(puVar16 + -0x108) = uVar15;\n                *(puVar16 + -0x110) = uVar3;\n                *(puVar16 + -0x118) = puVar10[1];\n                *(puVar16 + -0x120) = *(puVar16 + -0xa8);\n                *(puVar16 + -0x128) = *(puVar16 + -0xb0);\n                *(puVar16 + -0x130) = *(puVar16 + -0x88);\n                *(puVar16 + -0x138) = puVar10[8];\n                *(puVar16 + -0x140) = puVar10[0xc];\n                *(puVar16 + -0xc0) = puVar10[10];\n                *(puVar16 + -0x1b8) = 0x446d8e;\n                fcn.00434840();\n                *(puVar16 + -0x1b8) = 0x446d9f;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x446da9;\n                fcn.00434fa0();\n                *(puVar16 + -0x1b8) = 0x446dba;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x446dc7;\n                fcn.00434fa0();\n                *(puVar16 + -0x1b8) = 0x446dd8;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x446de5;\n                fcn.00434fa0();\n                *(puVar16 + -0x1b8) = 0x446df6;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x446e05;\n                fcn.00434fa0();\n                *(puVar16 + -0x1b8) = 0x446e16;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x446e25;\n                fcn.00434fa0();\n                *(puVar16 + -0x1b8) = 0x446e36;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x446e45;\n                fcn.00434fa0();\n                *(puVar16 + -0x1b8) = 0x446e56;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x446e65;\n                fcn.00434fa0();\n                *(puVar16 + -0x1b8) = 0x446e76;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x446e85;\n                fcn.00434fa0();\n                *(puVar16 + -0x1b8) = 0x446e96;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x446ea5;\n                fcn.00434fa0();\n                *(puVar16 + -0x1b8) = 0x446eb6;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x446ec5;\n                fcn.004350c0();\n                *(puVar16 + -0x1b8) = 0x446ed6;\n                fcn.00435140();\n                *(puVar16 + -0x1b8) = 0x446edb;\n                fcn.004348c0();\n                puVar10 = *(puVar16 + -0xb8);\n                puVar13 = *(puVar16 + -0x100);\n                uVar12 = *(puVar16 + -0x180);\n            }\n            if (*puVar10 < uVar12 || *puVar10 == uVar12) {\n                if (puVar13 != 0xfffffffffffffade) {\ncode_r0x00446f82:\n                    uVar15 = puVar10[1];\n                    uVar12 = *puVar10;\n                    *(puVar16 + -0x168) = uVar15 - uVar12;\n                    uVar3 = puVar10[8];\n                    *(puVar16 + -0x1b8) = 0x446f9a;\n                    iVar9 = fcn.0044b1a0(uVar15 - uVar12, uVar3);\n                    uVar15 = *(puVar16 + -0x168);\n                    uVar12 = uVar15 << 1;\n                    if (iVar9 != 0) {\n                        *(puVar16 + -0x148) = uVar12;\n                        *(puVar16 + -0x1b8) = 0x446fb4;\n                        iVar8 = fcn.0044be40();\n                        for (uVar12 = *(puVar16 + -0x148);\n                            uVar12 - (*(*(puVar16 + -0xb8) + 8) - *(*(puVar16 + -0xb8) + 0x38)) < iVar8 + 0x13a0U;\n                            uVar12 = uVar12 << 1) {\n                        }\n                        uVar15 = *(puVar16 + -0x168);\n                    }\n                    if (*(puVar16 + -0x100) == -0x113) {\n                        uVar12 = uVar15;\n                    }\n                    if ((uVar12 <= *0x5645a0) && (uVar12 <= *0x564598)) {\n                        *(puVar16 + -0x160) = uVar12;\n                        *(puVar16 + -0x1b8) = 0x447029;\n                        fcn.00437400(8);\n                        *(puVar16 + -0x1b8) = 0x44703b;\n                        fcn.004467c0();\n                        *(puVar16 + -0x1b8) = 0x447052;\n                        fcn.00437400(2);\n                        *(puVar16 + -0x1b0) = *(puVar16 + -0xb8) + 0x38;\n                        *(puVar16 + -0x1b8) = 0x447067;\n                        fcn.0045a180();\n                        return;\n                    }\n                    if (*0x564598 <= *0x5645a0) goto code_r0x0044717b;\n                    *(puVar16 + -0x1b8) = 0x44709d;\n                    fcn.00434840();\n                    *(puVar16 + -0x1b8) = 0x4470ae;\n                    fcn.00435140();\n                    *(puVar16 + -0x1b8) = 0x4470ba;\n                    fcn.00434e40();\n                    *(puVar16 + -0x1b8) = 0x4470cb;\n                    fcn.00435140();\n                    *(puVar16 + -0x1b8) = 0x4470d0;\n                    fcn.004348c0();\n                    do {\n                        *(puVar16 + -0x108) = **(puVar16 + -0xb8);\n                        *(puVar16 + -0x110) = (*(puVar16 + -0xb8))[1];\n                        *(puVar16 + -0x1b8) = 0x4470f4;\n                        fcn.00434840();\n                        *(puVar16 + -0x1b8) = 0x447105;\n                        fcn.00435140();\n                        *(puVar16 + -0x1b8) = 0x44710f;\n                        fcn.00434fa0();\n                        *(puVar16 + -0x1b8) = 0x447125;\n                        fcn.00435140();\n                        *(puVar16 + -0x1b8) = 0x447132;\n                        fcn.00434fa0();\n                        *(puVar16 + -0x1b8) = 0x447145;\n                        fcn.00435140();\n                        *(puVar16 + -0x1b8) = 0x447152;\n                        fcn.00434fa0();\n                        *(puVar16 + -0x1b8) = 0x447165;\n                        fcn.00435140();\n                        *(puVar16 + -0x1b8) = 0x44716a;\n                        fcn.004348c0();\n                        *(puVar16 + -0x1b8) = 0x44717b;\n                        fcn.004330a0();\ncode_r0x0044717b:\n                        *(puVar16 + -0x1b8) = 0x447185;\n                        fcn.00434840();\n                        *(puVar16 + -0x1b8) = 0x447196;\n                        fcn.00435140();\n                        *(puVar16 + -0x1b8) = 0x4471a5;\n                        fcn.00434e40();\n                        *(puVar16 + -0x1b8) = 0x4471b6;\n                        fcn.00435140();\n                        *(puVar16 + -0x1b8) = 0x4471bb;\n                        fcn.004348c0();\n                    } while( true );\n                }\n                ppuVar4 = *(*(puVar16 + -0xf8) + 0x30);\n                if (*ppuVar4 != puVar10) {\n                    if ((ppuVar4[0x14] != NULL) || (*(ppuVar4 + 0x1b) != 0)) {\n                        if (*(puVar10 + 0xb3) != '\\0') {\n                            *(puVar10 + 0xb3) = 0;\n                            *(puVar16 + -0x1b8) = 0x446f4a;\n                            fcn.00447860();\n                            puVar10 = *(puVar16 + -0xb8);\n                            puVar13 = *(puVar16 + -0x100);\n                        }\n                        if (*(puVar10 + 0xb2) != '\\0') {\n                            *(puVar16 + -0x1b8) = 0x446f6d;\n                            fcn.0043c440(puVar13);\n                        }\n                        *(puVar16 + -0x1b8) = 0x446f7a;\n                        fcn.0043c3c0();\n                        puVar10 = *(puVar16 + -0xb8);\n                        goto code_r0x00446f82;\n                    }\n                    *(puVar16 + -0x1b8) = 0x4471f6;\n                    fcn.004330a0();\n                }\n                *(puVar16 + -0x1b8) = 0x447207;\n                puVar10 = fcn.004330a0();\n            }\n            puVar13 = *(puVar10 + 0x12);\n            *(puVar16 + -0x184) = *(puVar10 + 0x12);\n            *(puVar16 + -0x150) = puVar10[0x13];\n            *(puVar16 + -0x1b8) = 0x447225;\n            fcn.00434840();\n            *(puVar16 + -0x1b8) = 0x447236;\n            fcn.00435140();\n            *(puVar16 + -0x1b8) = 0x447245;\n            fcn.004350c0();\n            *(puVar16 + -0x1b8) = 0x447256;\n            fcn.00435140();\n            *(puVar16 + -0x1b8) = 0x447265;\n            fcn.00434f40();\n            *(puVar16 + -0x1b8) = 0x447276;\n            fcn.00435140();\n            *(puVar16 + -0x1b8) = 0x447285;\n            fcn.00434fa0();\n            *(puVar16 + -0x1b8) = 0x447296;\n            fcn.00435140();\n            *(puVar16 + -0x1b8) = 0x44729b;\n            fcn.004348c0();\n            *(puVar16 + -0x108) = **(puVar16 + -0xb8);\n            *(puVar16 + -0x1b8) = 0x4472b3;\n            fcn.00434840();\n            *(puVar16 + -0x1b8) = 0x4472c5;\n            fcn.00435140();\n            *(puVar16 + -0x1b8) = 0x4472cf;\n            fcn.00434fa0();\n            *(puVar16 + -0x1b8) = 0x4472e5;\n            fcn.00435140();\n            *(puVar16 + -0x1b8) = 0x4472f2;\n            fcn.00434fa0();\n            *(puVar16 + -0x1b8) = 0x4472f7;\n            fcn.00434aa0();\n            *(puVar16 + -0x1b8) = 0x4472fc;\n            fcn.004348c0();\n            *(puVar16 + -0x1b8) = 0x44730d;\n            fcn.004330a0();\n        }\n        unaff_RBX = 0x19;\n        *(puVar16 + -0x1b8) = 0x44731e;\n        puVar10 = fcn.004330a0();\n    }\n    *(puVar16 + -0x78) = puVar13[1];\n    uVar1 = *(puVar13 + 0x14);\n    uVar6 = *(puVar13 + 3);\n    uVar7 = *(puVar13 + 0x1c);\n    *(puVar16 + -0x70) = *(puVar13 + 2);\n    *(puVar16 + -0x6c) = uVar1;\n    *(puVar16 + -0x68) = uVar6;\n    *(puVar16 + -100) = uVar7;\n    uVar1 = *(puVar13 + 0x24);\n    uVar6 = *(puVar13 + 5);\n    uVar7 = *(puVar13 + 0x2c);\n    *(puVar16 + -0x60) = *(puVar13 + 4);\n    *(puVar16 + -0x5c) = uVar1;\n    *(puVar16 + -0x58) = uVar6;\n    *(puVar16 + -0x54) = uVar7;\n    uVar1 = *(puVar13 + 0x34);\n    uVar6 = *(puVar13 + 7);\n    uVar7 = *(puVar13 + 0x3c);\n    *(puVar16 + -0x50) = *(puVar13 + 6);\n    *(puVar16 + -0x4c) = uVar1;\n    *(puVar16 + -0x48) = uVar6;\n    *(puVar16 + -0x44) = uVar7;\n    puVar10[0xe] = *(puVar16 + -0x78);\n    puVar10[0xf] = *(puVar16 + -0x70);\n    uVar15 = puVar10[8];\n    *(puVar16 + -0x1b8) = 0x447372;\n    iVar9 = fcn.0044b1a0(uVar15);\n    if (iVar9 != 0) goto code_r0x004475f6;\n    uVar11 = 9;\n    uVar14 = 0x4c8623;\n    iVar9 = 0;\n    do {\n        *(puVar16 + -0x170) = uVar11;\n        *(puVar16 + -0xf0) = uVar14;\n        *(puVar16 + -0x178) = iVar9;\n        puVar13 = *(puVar16 + -0xb8);\n        *(puVar16 + -0x108) = *puVar13;\n        *(puVar16 + -0x110) = puVar13[1];\n        *(puVar16 + -0x118) = *(puVar16 + -0x70);\n        *(puVar16 + -0x120) = *(puVar16 + -0x78);\n        *(puVar16 + -0x128) = *(puVar16 + -0x50);\n        *(puVar16 + -0x130) = puVar13[8];\n        *(puVar16 + -0x138) = puVar13[7];\n        *(puVar16 + -0x140) = puVar13[0xc];\n        *(puVar16 + -0xc0) = puVar13[10];\n        *(puVar16 + -0x1b8) = 0x447419;\n        fcn.00434840();\n        *(puVar16 + -0x1b8) = 0x44742a;\n        fcn.00435140();\n        *(puVar16 + -0x1b8) = 0x44743c;\n        fcn.00435140();\n        *(puVar16 + -0x1b8) = 0x44744d;\n        fcn.00435140();\n        *(puVar16 + -0x1b8) = 0x447457;\n        fcn.00434fa0();\n        *(puVar16 + -0x1b8) = 0x447468;\n        fcn.00435140();\n        *(puVar16 + -0x1b8) = 0x447472;\n        fcn.00434fa0();\n        *(puVar16 + -0x1b8) = 0x447485;\n        fcn.00435140();\n        *(puVar16 + -0x1b8) = 0x447492;\n        fcn.00434fa0();\n        *(puVar16 + -0x1b8) = 0x4474a5;\n        fcn.00435140();\n        *(puVar16 + -0x1b8) = 0x4474b2;\n        fcn.00434fa0();\n        *(puVar16 + -0x1b8) = 0x4474c5;\n        fcn.00435140();\n        *(puVar16 + -0x1b8) = 0x4474d2;\n        fcn.00434fa0();\n        *(puVar16 + -0x1b8) = 0x4474e5;\n        fcn.00435140();\n        *(puVar16 + -0x1b8) = 0x4474f2;\n        fcn.00434fa0();\n        *(puVar16 + -0x1b8) = 0x447505;\n        fcn.00435140();\n        *(puVar16 + -0x1b8) = 0x447512;\n        fcn.00434fa0();\n        *(puVar16 + -0x1b8) = 0x447525;\n        fcn.00435140();\n        *(puVar16 + -0x1b8) = 0x447532;\n        fcn.00434fa0();\n        *(puVar16 + -0x1b8) = 0x447545;\n        fcn.00435140();\n        *(puVar16 + -0x1b8) = 0x44754f;\n        fcn.00434fa0();\n        *(puVar16 + -0x1b8) = 0x447565;\n        fcn.00435140();\n        *(puVar16 + -0x1b8) = 0x44756f;\n        fcn.00434fa0();\n        *(puVar16 + -0x1b8) = 0x447585;\n        fcn.00435140();\n        *(puVar16 + -0x1b8) = 0x447592;\n        fcn.004350c0();\n        *(puVar16 + -0x1b8) = 0x4475a5;\n        fcn.00435140();\n        *(puVar16 + -0x1b8) = 0x4475aa;\n        fcn.004348c0();\n        *(*(*(puVar16 + -0xf8) + 0x30) + 0xf9) = 2;\n        *(puVar16 + -0x1b8) = 0x4475e5;\n        fcn.004532a0(*(puVar16 + -0x50));\n        unaff_RBX = 0x20;\n        *(puVar16 + -0x1b8) = 0x4475f6;\n        iVar9 = fcn.004330a0();\ncode_r0x004475f6:\n        *(puVar16 + -200) = unaff_RBX;\n        *(puVar16 + -0xd0) = iVar9;\n        *(puVar16 + -0x1b8) = 0x44760b;\n        uVar11 = fcn.0044b920();\n        *(puVar16 + -0xf0) = uVar11;\n        *(puVar16 + -0x170) = unaff_RBX;\n        uVar1 = **(puVar16 + -0xd0);\n        *(puVar16 + -0x1b8) = 0x447631;\n        iVar9 = fcn.0044acc0(uVar1);\n        iVar9 = *(*(puVar16 + -0xb8) + 0x40) - iVar9;\n        uVar11 = *(puVar16 + -0x170);\n        uVar14 = *(puVar16 + -0xf0);\n    } while( true );\n}\n",
        "token_count": 7067
    },
    "00462980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00462980(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    char cVar4;\n    int32_t *in_RAX;\n    ulong *puVar5;\n    ulong uVar6;\n    int64_t *noname_1;\n    int64_t **ppiVar7;\n    uchar *puVar8;\n    int32_t *arg2;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong arg3;\n    ulong uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uStack0000000000000028;\n    uchar auStack72 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    ulong uStack24;\n    char cStack16;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar2 = *(in_RAX + 2);\n    auStack56 = in_XMM15;\n    if ((iVar2 != 0) && (iVar2 != 0x5d3b39)) {\n        auStack56 = CONCAT88(*(in_RAX + 4), iVar2);\n    }\n    uVar9 = 0x4bcae0;\n    if (auStack56._0_8_ == 0x4bcae0) {\n        uVar6 = *auStack56._8_8_;\n        cStack16 = *(auStack56._8_8_ + 1);\n    }\n    else {\n        cStack16 = 0;\n        uVar6 = 0;\n    }\n    uStack24 = uVar6;\n    auStack40._0_8_ = unaff_RBX;\n    auStack40._8_8_ = arg1;\n    fcn.0040d400(auStack40);\n    if ((uVar6 != '\\0') &&\n       (auStack40._0_8_ = fcn.00462f00(uStack0000000000000028),  auStack40._8_8_ = unaff_RDI,  unaff_RDI != '\\0')) {\n        return auStack40._0_8_;\n    }\n    LOCK();\n    if (*in_RAX == 0) {\n        *in_RAX = 1;\n    }\n    else {\n        fcn.004633a0();\n    }\n    iVar2 = *(in_RAX + 2);\n    auStack72 = in_XMM15;\n    if ((iVar2 != 0) && (iVar2 != 0x5d3b39)) {\n        auStack72 = CONCAT88(*(in_RAX + 4), iVar2);\n    }\n    if (auStack72._0_8_ == 0x4bcae0) {\n        uVar6 = *auStack72._8_8_;\n        cVar4 = *(auStack72._8_8_ + 1);\n    }\n    else {\n        cVar4 = '\\0';\n        uVar6 = 0;\n    }\n    arg3 = uVar6;\n    uStack24 = uVar6;\n    cStack16 = cVar4;\n    auStack40._8_8_ = arg1;\n    puVar5 = fcn.0040d400(auStack40);\n    uVar3 = *puVar5;\n    if (uVar6 == '\\0') {\n        uVar3 = *(in_RAX + 6);\n        auStack40._8_8_ = arg1;\n        fcn.0040d400(auStack40);\n        if (uVar3 == '\\0') {\n            if (cVar4 == '\\0') {\n                fcn.00463140();\n                cStack16 = '\\x01';\n                uStack24 = uVar6;\n                uVar6 = fcn.00409ba0();\n                fcn.00462060(uVar6);\n            }\n            auStack40 = CONCAT88(arg1, unaff_RBX);\n            puVar5 = fcn.0040c440();\n            *puVar5 = unaff_RDI;\n            uVar6 = unaff_RDI;\n            if (*0x5d3dd0 == 0) {\n                puVar5[1] = uStack0000000000000028;\n            }\n            else {\n                fcn.0045c6c0(unaff_RDI, uStack0000000000000028, arg3, uVar9);\n            }\n            noname_1 = fcn.0040c440();\n            if (*0x5d3dd0 == 0) {\n                *noname_1 = puVar5;\n            }\n            else {\n                fcn.0045c6c0(uVar6, puVar5, arg3, uVar9);\n            }\n            puVar8 = auStack40;\n            ppiVar7 = fcn.0040d840(puVar8);\n            if (*0x5d3dd0 == 0) {\n                *ppiVar7 = noname_1;\n            }\n            else {\n                fcn.0045c6c0(puVar8, noname_1, arg3, uVar9);\n            }\n        }\n        else {\n            uVar9 = fcn.00462f00(uStack0000000000000028);\n            auStack40 = CONCAT88(unaff_RDI, uVar9);\n            fcn.00463060();\n            unaff_RDI = uVar9;\n        }\n    }\n    else {\n        cVar4 = fcn.00457040(0);\n        if (cVar4 != '\\0') {\n            auStack40 = CONCAT88(arg1, unaff_RBX);\n            puVar8 = auStack40;\n            arg2 = in_RAX;\n            puVar5 = fcn.0040d840(puVar8);\n            if (*0x5d3dd0 == 0) {\n                *puVar5 = uVar3;\n            }\n            else {\n                fcn.0045c5a0(puVar8, arg2, arg3, uVar9);\n            }\n        }\n        uVar9 = fcn.00462f00(uStack0000000000000028);\n        auStack40 = CONCAT88(unaff_RDI, uVar9);\n        unaff_RDI = uVar9;\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + -1;\n    if (iVar1 != 1) {\n        fcn.004636a0();\n    }\n    return unaff_RDI;\n}\n",
        "token_count": 1499
    },
    "00462f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00462f00(ulong arg1)\n\n{\n    ulong *puVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong *puVar3;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    puVar3 = *in_RAX;\n    if (puVar3 == *0x57f000) {\n        return 0;\n    }\n    if (puVar3 != NULL) {\n        return *puVar3;\n    }\n    puVar3 = fcn.0040c440();\n    *puVar3 = unaff_RBX;\n    if (*0x5d3dd0 == 0) {\n        puVar3[1] = arg1;\n    }\n    else {\n        puVar3 = fcn.0045c6c0(unaff_RBX, arg1, in_R8, in_R9);\n    }\n    while( true ) {\n        cVar2 = fcn.00457040(puVar3);\n        if (cVar2 != '\\0') {\n            return unaff_RBX;\n        }\n        puVar1 = *in_RAX;\n        if (puVar1 == *0x57f000) break;\n        if (puVar1 != NULL) {\n            return *puVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 353
    },
    "00463060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00463060(void)\n\n{\n    int64_t in_RAX;\n    ulong arg1;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar1 = *(in_RAX + 0x20) + 1;\n    *(in_RAX + 0x20) = iVar1;\n    if (*(in_RAX + 0x18) == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = **(in_RAX + 0x18);\n    }\n    if (iVar2 <= iVar1) {\n        arg1 = fcn.00409ba0();\n        fcn.00462060(arg1);\n        if (*0x5d3dd0 == 0) {\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            in_RAX = fcn.0045c6a0(0);\n        }\n        *(in_RAX + 0x20) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "00463140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00463140(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    int64_t unaff_R14;\n    ulong uStack120;\n    ulong uStack112;\n    ulong *puStack104;\n    ulong *puStack96;\n    uchar auStack64 [56];\n    \n    while (auStack64 < *(unaff_R14 + 0x10) || auStack64 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*(in_RAX + 0x18) != 0) {\n        return;\n    }\n    uVar5 = 0;\n    uVar3 = fcn.0040d000(0);\n    if (*0x5d3dd0 == 0) {\n        *(in_RAX + 0x18) = uVar3;\n    }\n    else {\n        fcn.0045c5a0(uVar5, in_RAX, param_3, param_4);\n    }\n    fcn.0045cceb();\n    fcn.0040dd60(&puStack104, in_RAX, param_3, param_4);\n    while (puStack104 != NULL) {\n        uVar3 = *puStack96;\n        uVar5 = *puStack104;\n        uVar1 = puStack104[1];\n        cVar2 = fcn.00463320();\n        if (cVar2 == '\\0') {\n            uStack120 = uVar5;\n            uStack112 = uVar1;\n            puVar4 = fcn.0040d840(&uStack120);\n            if (*0x5d3dd0 == 0) {\n                *puVar4 = uVar3;\n            }\n            else {\n                fcn.0045c6a0(uVar3);\n            }\n        }\n        fcn.0040dfe0();\n    }\n    return;\n}\n",
        "token_count": 465
    },
    "004633a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004633a0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar7 = *in_RAX;\n    bVar3 = false;\n    bVar1 = false;\n    iVar5 = 0;\n    while( true ) {\n        while( true ) {\n            while( true ) {\n                uVar8 = uVar7 & 5;\n                if (uVar8 == 1) {\n                    cVar2 = fcn.00457ca0();\n                }\n                else {\n                    cVar2 = '\\0';\n                }\n                if (cVar2 == '\\0') break;\n                if (((!bVar1) && ((uVar7 >> 1 & 1) == 0)) && (uVar7 >> 3 != 0)) {\n                    LOCK();\n                    if (uVar7 == *in_RAX) {\n                        *in_RAX = uVar7 | 2;\n                        bVar1 = true;\n                    }\n                }\n                fcn.00457d20();\n                uVar7 = *in_RAX;\n            }\n            uVar9 = uVar7;\n            if ((uVar7 & 4) == 0) {\n                uVar9 = uVar7 | 1;\n            }\n            if (uVar8 != 0) {\n                uVar9 = uVar9 + 8;\n            }\n            if ((bVar3) && ((uVar7 & 1) != 0)) {\n                uVar9 = uVar9 | 4;\n            }\n            if (bVar1) {\n                if ((uVar9 >> 1 & 1) == 0) {\n                    fcn.00457960();\n                }\n                uVar9 = uVar9 & 0xfffffffd;\n            }\n            LOCK();\n            if (uVar7 == *in_RAX) break;\n            uVar7 = *in_RAX;\n        }\n        *in_RAX = uVar9;\n        if (uVar8 == 0) break;\n        if (iVar5 == 0) {\n            iVar5 = fcn.004582c0();\n        }\n        fcn.00458180(1);\n        if (bVar3) {\n            bVar3 = true;\n        }\n        else {\n            iVar6 = fcn.004582c0();\n            bVar3 = 1000000 < iVar6 - iVar5;\n        }\n        uVar7 = *in_RAX;\n        if ((uVar7 >> 2 & 1) != 0) {\n            if (((uVar7 & 3) != 0) || (uVar7 >> 3 == 0)) {\n                fcn.00457960();\n            }\n            if ((bVar3) && (uVar7 >> 3 != 1)) {\n                iVar4 = -7;\n            }\n            else {\n                iVar4 = -0xb;\n            }\n            LOCK();\n            uVar7 = *in_RAX;\n            *in_RAX = *in_RAX + iVar4;\n            return uVar7;\n        }\n        bVar1 = true;\n    }\n    return uVar7;\n}\n",
        "token_count": 796
    },
    "00463780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00463780(void)\n\n{\n    int32_t *in_RAX;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    bool bVar1;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    code **ppcStack24;\n    code **ppcStack16;\n    \n    while (ppcStack24 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    LOCK();\n    bVar1 = in_RAX[1] == 0;\n    if (bVar1) {\n        in_RAX[1] = 1;\n    }\n    if (!bVar1) {\n        fcn.004633a0();\n    }\n    auStack56 = CONCAT88(in_RAX + 1, 0x463900);\n    ppcStack16 = auStack56;\n    if (*in_RAX == 0) {\n        auStack40 = CONCAT88(in_RAX, 0x4638c0);\n        ppcStack24 = auStack40;\n        (**unaff_RBX)(in_RAX, unaff_RBX);\n        (**ppcStack24)();\n    }\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 313
    },
    "00463960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00463960(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (unaff_RBX == 0) {\n        return;\n    }\n    arg1_00 = arg1;\n    piVar1 = fcn.00463ce0();\n    if (*piVar1 == 0) {\n        *piVar1 = unaff_RBX;\n        if (*0x5d3dd0 == 0) {\n            piVar1[1] = arg1;\n        }\n        else {\n            fcn.0045c6c0(arg1_00, arg1, in_R8, in_R9);\n        }\n        unaff_RBX = 0;\n        arg1 = 0;\n    }\n    if (unaff_RBX != 0) {\n        fcn.00464540(arg1);\n    }\n    fcn.00457c40();\n    return;\n}\n",
        "token_count": 286
    },
    "00463a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00463a40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    piVar1 = fcn.00463ce0();\n    arg1 = *piVar1;\n    *piVar1 = 0;\n    if (*0x5d3dd0 == 0) {\n        piVar1[1] = 0;\n    }\n    else {\n        fcn.0045c700(arg1, piVar1[1], param_3, param_4);\n    }\n    if ((arg1 == 0) && (arg1 = fcn.00464720(),  arg1 == 0)) {\n        arg1 = fcn.00463b20();\n    }\n    fcn.00457c40();\n    if ((arg1 == 0) && (*(in_RAX + 0x20) != NULL)) {\n        (***(in_RAX + 0x20))();\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "00463b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00463b20(void)\n\n{\n    uint64_t uVar1;\n    ulong *in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    ulong uVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar3 = in_RAX[1];\n    uVar5 = *in_RAX;\n    for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n        if (iVar3 == -1) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (iVar4 + unaff_RBX + 1) % iVar3;\n        }\n        iVar2 = fcn.004647a0(iVar3, iVar2 << 7);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    uVar1 = in_RAX[3];\n    if (uVar1 <= unaff_RBX) {\n        return 0;\n    }\n    iVar4 = in_RAX[2];\n    iVar2 = unaff_RBX * 0x80;\n    iVar3 = *(iVar4 + iVar2);\n    if (iVar3 != 0) {\n        *(iVar4 + iVar2) = 0;\n        if (*0x5d3dd0 == 0) {\n            *(iVar4 + 8 + iVar2) = 0;\n        }\n        else {\n            fcn.0045c6a0(0, iVar4, iVar3, *(iVar4 + 8 + iVar2), uVar5);\n        }\n        return iVar3;\n    }\n    iVar4 = 0;\n    while( true ) {\n        if (uVar1 <= iVar4) {\n            in_RAX[3] = 0;\n            return 0;\n        }\n        if (uVar1 == 0xffffffffffffffff) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (iVar4 + unaff_RBX) % uVar1;\n        }\n        iVar3 = fcn.004647a0(uVar1, iVar3 << 7);\n        if (iVar3 != 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 553
    },
    "00463d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00463d60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    uint64_t arg2;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (&ppcStack16 < *(unaff_R14 + 0x10) || &ppcStack16 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    ppcStack16 = NULL;\n    fcn.00457c40();\n    LOCK();\n    if (*0x5d3d60 == 0) {\n        *0x5d3d60 = 1;\n    }\n    else {\n        fcn.004633a0();\n    }\n    auStack32 = CONCAT88(0x5d3d60, 0x464000);\n    ppcStack16 = auStack32;\n    uVar1 = fcn.00457c20();\n    uVar3 = *0x57fd50;\n    iVar4 = *in_RAX;\n    if (in_RAX[1] < uVar1 || in_RAX[1] == uVar1) {\n        if (iVar4 == 0) {\n            uVar5 = *0x57fd58;\n            uVar2 = *0x57fd50;\n            if ((*0x57fd60 < *0x57fd58 + 1) &&\n               (arg1 = *0x57fd58,  arg2 = *0x57fd58,  uVar2 = fcn.00444c60(*0x57fd58),  uVar5 = uVar3,  uVar3 = uVar2, \n               *0x57fd60 = arg1,  *0x5d3dd0 != 0)) {\n                uVar2 = fcn.0045c5a0(arg1, arg2, param_3, param_4);\n                uVar3 = *0x57fd50;\n            }\n            *0x57fd50 = uVar3;\n            *0x57fd58 = uVar5 + 1;\n            if (*0x5d3dd0 == 0) {\n                *(uVar2 + uVar5 * 8) = in_RAX;\n            }\n            else {\n                fcn.0045c6a0();\n            }\n        }\n        uVar3 = fcn.00405e60();\n        iVar4 = fcn.00444b80(uVar3);\n        if (uVar3 != 0) {\n            fcn.00456fe0();\n            in_RAX[1] = uVar3;\n            if (uVar1 < uVar3) {\n                (**ppcStack16)();\n                return uVar1 * 0x80 + iVar4;\n            }\n            fcn.0045ca40(uVar3);\n        }\n        fcn.0045ca40(uVar3);\n        fcn.00431da0();\n        return 0;\n    }\n    (**ppcStack16)();\n    return uVar1 * 0x80 + iVar4;\n}\n",
        "token_count": 747
    },
    "00464200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00464200(uint64_t arg1)\n\n{\n    int64_t arg4;\n    int64_t *in_RAX;\n    uint64_t arg1_00;\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        arg1_00 = arg1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            arg1_00 = in_RAX[2];\n            arg4 = in_RAX[1];\n            uVar1 = *in_RAX >> 0x20;\n            if (uVar1 == *in_RAX + arg1_00) {\n                return 0;\n            }\n            uVar2 = uVar1 & arg1_00 - 1;\n            if (uVar2 < arg1_00) {\n                arg2 = uVar2 * 0x10;\n                if (*(arg4 + arg2) == 0) {\n                    iVar4 = 0x4b6640;\n                    if (unaff_RBX != 0) {\n                        iVar4 = unaff_RBX;\n                    }\n                    *(arg4 + arg2) = iVar4;\n                    uVar2 = 0;\n                    if (unaff_RBX != 0) {\n                        uVar2 = arg1;\n                    }\n                    if (*0x5d3dd0 == 0) {\n                        *(arg4 + 8 + arg2) = uVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x46428f;\n                        in_RAX = fcn.0045c6e0(arg1, arg2, arg1_00 - 1, arg4);\n                    }\n                    LOCK();\n                    *in_RAX = *in_RAX + 0x100000000;\n                    return 1;\n                }\n                return 0;\n            }\n            *(*0x20 + -0x20) = 0x4642cf;\n            in_RAX = fcn.0045ca40(arg1_00);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1_00;\n        *(puVar3 + -8) = 0x4642e5;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 730
    },
    "00464300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00464300(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t arg2;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                iVar5 = uVar1 >> 0x20;\n                if (uVar1 == iVar5) {\n                    return 0;\n                }\n                uVar6 = iVar5 - 1;\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ (uVar6 << 0x20 | uVar1 & 0xffffffff));\n            } while (uVar1 != uVar2);\n            uVar1 = in_RAX[2];\n            uVar3 = uVar1 - 1U & uVar6;\n            uVar2 = in_RAX[1];\n            if (uVar3 < uVar1) {\n                iVar4 = uVar3 * 0x10;\n                arg2 = *(uVar2 + 8 + iVar4);\n                arg3 = *(uVar2 + iVar4);\n                if ((arg3 == 0x4b6640) && (arg2 == 0)) {\n                    arg3 = 0;\n                    arg2 = 0;\n                }\n                arg4 = uVar2 + iVar4 + 8;\n                if (*0x5d3dd0 == 0) {\n                    *(uVar2 + iVar4) = 0;\n                    *(uVar2 + 8 + iVar4) = 0;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x4643be;\n                    fcn.0045c700(in_RAX, arg2, arg3, arg4);\n                    *(*0x20 + -0x20) = 0x4643c6;\n                    fcn.0045c700(in_RAX, arg2, arg3, arg4);\n                }\n                return arg3;\n            }\n            *(*0x20 + -0x20) = 0x4643f3;\n            in_RAX = fcn.0045ca40(uVar1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x4643fe;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 722
    },
    "00464420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00464420(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t arg1;\n    int64_t arg2;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                uVar6 = uVar1;\n                if (uVar6 == uVar1 >> 0x20) {\n                    return 0;\n                }\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ (uVar1 & 0xffffffff00000000 | uVar6 + 1));\n            } while (uVar1 != uVar2);\n            uVar1 = in_RAX[2];\n            uVar3 = uVar1 - 1U & uVar6;\n            uVar2 = in_RAX[1];\n            if (uVar3 < uVar1) {\n                iVar4 = uVar3 * 0x10;\n                arg1 = *(uVar2 + 8 + iVar4);\n                arg2 = *(uVar2 + iVar4);\n                if ((arg2 == 0x4b6640) && (arg1 == 0)) {\n                    arg2 = 0;\n                    arg1 = 0;\n                }\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x18) = arg2;\n                if (*0x5d3dd0 == 0) {\n                    *(uVar2 + 8 + iVar4) = 0;\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x4644df;\n                    fcn.0045c6e0(arg1, arg2, uVar2 + iVar4, arg4);\n                }\n                *(*0x20 + -0x30) = 0x4644e9;\n                fcn.00456fe0();\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x30) = 0x46451a;\n            in_RAX = fcn.0045ca40(uVar1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x464525;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 720
    },
    "00464540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00464540(ulong arg1)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t noname_1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t arg1_01;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar4 = *in_RAX;\n    noname_1 = iVar4;\n    if (iVar4 == 0) {\n        noname_1 = fcn.0040c440();\n        arg1_00 = 8;\n        uVar2 = fcn.00444b80(8);\n        *(noname_1 + 0x10) = 8;\n        *(noname_1 + 0x18) = 8;\n        if (*0x5d3dd0 == 0) {\n            *(noname_1 + 8) = uVar2;\n            *in_RAX = noname_1;\n        }\n        else {\n            fcn.0045c5a0(arg1_00, iVar4, in_R8, in_R9);\n            fcn.0045c6e0(arg1_00, iVar4, in_R8, in_R9);\n        }\n        fcn.00456fe0(in_RAX);\n    }\n    cVar1 = fcn.00464200(arg1);\n    if (cVar1 == '\\0') {\n        iVar4 = *(noname_1 + 0x10);\n        iVar3 = fcn.0040c440();\n        iVar4 = iVar4 * 2;\n        if (0x3fffffff < iVar4) {\n            iVar4 = 0x40000000;\n        }\n        if (*0x5d3dd0 == 0) {\n            *(iVar3 + 0x28) = noname_1;\n        }\n        else {\n            fcn.0045c6c0(iVar4, noname_1, in_R8, in_R9);\n        }\n        arg1_01 = iVar4;\n        uVar2 = fcn.00444b80(iVar4);\n        *(iVar3 + 0x10) = iVar4;\n        *(iVar3 + 0x18) = iVar4;\n        if (*0x5d3dd0 == 0) {\n            *(iVar3 + 8) = uVar2;\n            *in_RAX = iVar3;\n        }\n        else {\n            fcn.0045c5a0(arg1_01, iVar4, in_R8, in_R9);\n            fcn.0045c6e0(arg1_01, iVar4, in_R8, in_R9);\n        }\n        fcn.00456fe0(noname_1);\n        fcn.00464200(arg1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 688
    },
    "004656c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004656c0(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong unaff_RBX;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0046a5a0();\n    uVar1 = fcn.00448620(0xd);\n    puVar2 = fcn.0040c440();\n    puVar2[1] = 0x4c9bf7;\n    if (*0x5d3dd0 == 0) {\n        *puVar2 = uVar1;\n    }\n    else {\n        fcn.0045c6a0(uVar1);\n    }\n    puVar3 = fcn.0040c440();\n    puVar3[1] = unaff_RBX;\n    if (*0x5d3dd0 == 0) {\n        *puVar3 = in_RAX;\n    }\n    else {\n        puVar3 = fcn.0045c6a0(in_RAX);\n    }\n    puVar3[3] = unaff_RDI;\n    if (*0x5d3dd0 == 0) {\n        puVar3[2] = arg1;\n    }\n    else {\n        puVar3 = fcn.0045c6a0(arg1);\n    }\n    puVar3[4] = 0x4f9fb8;\n    if (*0x5d3dd0 == 0) {\n        puVar3[5] = puVar2;\n    }\n    else {\n        fcn.0045c6a0(puVar2);\n    }\n    return;\n}\n",
        "token_count": 423
    },
    "00465840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00465840(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong unaff_RBX;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0046a5a0();\n    uVar1 = fcn.00448620(0x11);\n    puVar2 = fcn.0040c440();\n    puVar2[1] = 0x4cb2a1;\n    if (*0x5d3dd0 == 0) {\n        *puVar2 = uVar1;\n    }\n    else {\n        fcn.0045c6a0(uVar1);\n    }\n    puVar3 = fcn.0040c440();\n    puVar3[1] = unaff_RBX;\n    if (*0x5d3dd0 == 0) {\n        *puVar3 = in_RAX;\n    }\n    else {\n        puVar3 = fcn.0045c6a0(in_RAX);\n    }\n    puVar3[3] = unaff_RDI;\n    if (*0x5d3dd0 == 0) {\n        puVar3[2] = arg1;\n    }\n    else {\n        puVar3 = fcn.0045c6a0(arg1);\n    }\n    puVar3[4] = 0x4f9fb8;\n    if (*0x5d3dd0 == 0) {\n        puVar3[5] = puVar2;\n    }\n    else {\n        fcn.0045c6a0(puVar2);\n    }\n    return;\n}\n",
        "token_count": 423
    },
    "00465fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00465fe0(ulong *arg1)\n\n{\n    char cVar1;\n    ulong noname_1;\n    uint8_t uVar2;\n    char *in_RAX;\n    uint64_t uVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    ulong unaff_RDI;\n    uint64_t uVar8;\n    int64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                *(*0x20 + -0x58) = 0x46631c;\n                puVar4 = fcn.0040c440();\n                puVar4[1] = 8;\n                *puVar4 = 0x4c83b8;\n                uVar5 = *(*0x20 + 0x10);\n                puVar4[3] = uVar5;\n                if (*0x5d3dd0 == 0) {\n                    puVar4[2] = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x46635b;\n                    puVar4 = fcn.0045c6c0(uVar5, *(*0x20 + 8), in_R8, in_R9);\n                }\n                noname_1 = *0x57f948;\n                puVar4[4] = *0x57f940;\n                if (*0x5d3dd0 == 0) {\n                    puVar4[5] = noname_1;\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x466385;\n                    fcn.0045c6c0(uVar5, noname_1, in_R8, in_R9);\n                }\n                return 0;\n            }\n            cVar1 = *in_RAX;\n            if (cVar1 == '+') {\n                unaff_RBX = unaff_RBX + -1;\n                in_R9 = 0;\n            }\n            else {\n                if (cVar1 == '-') {\n                    unaff_RBX = unaff_RBX + -1;\n                }\n                in_R9 = in_R9 & 0xffffffffffffff00 | cVar1 == '-';\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x29) = in_R9;\n            *(*0x20 + -0x58) = 0x46606f;\n            in_R8 = unaff_RBX;\n            uVar3 = fcn.004659c0(arg1);\n            if (unaff_RBX == 0) {\n                uVar2 = 0;\ncode_r0x004660f3:\n                if (uVar2 == 0) {\n                    iVar7 = *(*0x20 + 0x20);\n                    if (iVar7 == 0) {\n                        iVar7 = 0x40;\n                    }\n                    uVar8 = 1 << (iVar7 - 1U & 0x3f) & -(iVar7 - 1U < 0x40);\n                    *(*0x20 + -0x20) = uVar8;\n                    if (*(*0x20 + -0x29) == '\\0') {\n                        if (uVar8 <= uVar3) {\n                            *(*0x20 + -0x58) = 0x466289;\n                            puVar4 = fcn.0040c440();\n                            puVar4[1] = 8;\n                            *puVar4 = 0x4c83b8;\n                            uVar5 = *(*0x20 + 0x10);\n                            puVar4[3] = uVar5;\n                            if (*0x5d3dd0 == 0) {\n                                puVar4[2] = *(*0x20 + 8);\n                            }\n                            else {\n                                *(*0x20 + -0x58) = 0x4662c6;\n                                puVar4 = fcn.0045c6c0(uVar5, *(*0x20 + 8), in_R8, in_R9);\n                            }\n                            uVar3 = *0x57f938;\n                            puVar4[4] = *0x57f930;\n                            if (*0x5d3dd0 == 0) {\n                                puVar4[5] = uVar3;\n                            }\n                            else {\n                                *(*0x20 + -0x58) = 0x4662f1;\n                                fcn.0045c6c0(uVar5, uVar3, in_R8, in_R9);\n                            }\n                            return *(*0x20 + -0x20) - 1;\n                        }\n                    }\n                    else if (uVar8 < uVar3) {\n                        *(*0x20 + -0x58) = 0x4661d5;\n                        puVar4 = fcn.0040c440();\n                        puVar4[1] = 8;\n                        *puVar4 = 0x4c83b8;\n                        uVar5 = *(*0x20 + 0x10);\n                        puVar4[3] = uVar5;\n                        if (*0x5d3dd0 == 0) {\n                            puVar4[2] = *(*0x20 + 8);\n                        }\n                        else {\n                            *(*0x20 + -0x58) = 0x466212;\n                            puVar4 = fcn.0045c6c0(uVar5, *(*0x20 + 8), in_R8, in_R9);\n                        }\n                        uVar3 = *0x57f938;\n                        puVar4[4] = *0x57f930;\n                        if (*0x5d3dd0 == 0) {\n                            puVar4[5] = uVar3;\n                        }\n                        else {\n                            *(*0x20 + -0x58) = 0x46623c;\n                            fcn.0045c6c0(uVar5, uVar3, in_R8, in_R9);\n                        }\n                        return -*(*0x20 + -0x20);\n                    }\n                    if (*(*0x20 + -0x29) != '\\0') {\n                        uVar3 = -uVar3;\n                    }\n                    return uVar3;\n                }\n                if (unaff_RBX == 0x4fa058) {\n                    arg1[1] = 8;\n                    if (*0x5d3dd0 == 0) {\n                        *arg1 = 0x4c83b8;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = 0x466135;\n                        fcn.0045c6c0(arg1, 0x4c83b8, in_R8, in_R9);\n                    }\n                    arg1[3] = *(*0x20 + 0x10);\n                    if (*0x5d3dd0 == 0) {\n                        arg1[2] = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x58) = 0x466165;\n                        fcn.0045c6c0(arg1, *(*0x20 + 8), in_R8, in_R9);\n                    }\n                    return 0;\n                }\n                *(*0x20 + -0x58) = 0x4663b1;\n                fcn.00409ac0(0x4b96c0);\n            }\n            else if (unaff_RBX == 0x4fa058) {\n                in_R8 = arg1[5];\n                in_R9 = *0x57f938;\n                if (*0x57f930 == arg1[4]) {\n                    *(*0x20 + -0x28) = uVar3;\n                    *(*0x20 + -0x10) = arg1;\n                    *(*0x20 + -0x18) = 0x4fa058;\n                    *(*0x20 + -0x58) = 0x4660cd;\n                    uVar2 = fcn.00403040(*0x57f938);\n                    uVar2 = uVar2 ^ 1;\n                    arg1 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + -0x18);\n                    uVar3 = *(*0x20 + -0x28);\n                }\n                else {\n                    uVar2 = 1;\n                }\n                goto code_r0x004660f3;\n            }\n            unaff_RBX = 0x4b9340;\n            arg1 = 0x4b96c0;\n            *(*0x20 + -0x58) = 0x4663c7;\n            in_RAX = fcn.00409ac0(0x4b96c0);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x4663e5;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2264
    },
    "00466400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00466400(void)\n\n{\n    code *pcVar1;\n    char *in_RAX;\n    uint64_t uVar2;\n    uint8_t uVar3;\n    uint64_t unaff_RBX;\n    int32_t iVar4;\n    bool bVar5;\n    \n    if ((0 < unaff_RBX) && ((*in_RAX == '-' || (*in_RAX == '+')))) {\n        unaff_RBX = unaff_RBX - 1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n    }\n    if (((unaff_RBX < 2) || (*in_RAX != '0')) ||\n       ((uVar3 = in_RAX[1] | 0x20,  uVar3 != 0x62 && ((uVar3 != 0x6f && (uVar3 != 0x78)))))) {\n        uVar2 = 0;\n        bVar5 = false;\n        iVar4 = 0x5e;\n    }\n    else {\n        bVar5 = uVar3 == 0x78;\n        uVar2 = 2;\n        iVar4 = 0x30;\n    }\n    while( true ) {\n        if (unaff_RBX <= uVar2) {\n            return in_RAX & 0xffffffffffffff00 | iVar4 != 0x5f;\n        }\n        if (unaff_RBX <= uVar2) break;\n        uVar3 = in_RAX[uVar2];\n        if (((0x2f < uVar3) && (uVar3 < 0x3a)) || ((bVar5 && ((0x60 < (uVar3 | 0x20) && ((uVar3 | 0x20) < 0x67)))))) {\n            iVar4 = 0x30;\n        }\n        else if (uVar3 == 0x5f) {\n            if (iVar4 != 0x30) {\n                return 0;\n            }\n            iVar4 = 0x5f;\n        }\n        else {\n            if (iVar4 == 0x5f) {\n                return 0;\n            }\n            iVar4 = 0x21;\n        }\n        uVar2 = uVar2 + 1;\n    }\n    fcn.0045ca40(unaff_RBX);\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 545
    },
    "00466a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00466a80(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*(in_RAX + 800) != 0) {\n        if (unaff_RBX < 1) {\n            if (unaff_RBX < 0) {\n                for (; unaff_RBX < -0x3c; unaff_RBX = unaff_RBX + 0x3c) {\n                    fcn.00466660();\n                }\n                fcn.00466660();\n            }\n        }\n        else {\n            for (; 0x3c < unaff_RBX; unaff_RBX = unaff_RBX + -0x3c) {\n                fcn.00466860();\n            }\n            fcn.00466860();\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00466b40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00466b40(void)\n\n{\n    code *pcVar1;\n    uchar *in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    bool bVar3;\n    \n    if ((unaff_RBX < 0) || (*(in_RAX + 800) <= unaff_RBX)) {\n        return;\n    }\n    if (799 < unaff_RBX) {\n        fcn.0045ca40(800);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((in_RAX[unaff_RBX] == 0x35) && (*(in_RAX + 800) == unaff_RBX + 1)) {\n        if (in_RAX[0x331] != '\\0') goto code_r0x00466bb1;\n        if (unaff_RBX < 1) {\n            bVar3 = false;\n        }\n        else {\n            bVar3 = in_RAX[unaff_RBX - 1] - 0x30 & 1;\n        }\n    }\n    else {\n        bVar3 = 0x34 < in_RAX[unaff_RBX];\n    }\n    if (bVar3 == false) {\n        *(in_RAX + 800) = unaff_RBX;\n        while (iVar2 = *(in_RAX + 800),  0 < iVar2) {\n            if (799 < iVar2 - 1U) {\n                iVar2 = 800;\n                in_RAX = fcn.0045ca40(800);\n                goto code_r0x00466c1e;\n            }\n            if (in_RAX[iVar2 + -1] != '0') break;\n            *(in_RAX + 800) = iVar2 - 1U;\n        }\n        if (iVar2 != 0) {\n            return;\n        }\n        *(in_RAX + 0x328) = 0;\n        return;\n    }\ncode_r0x00466bb1:\n    iVar2 = unaff_RBX - 1;\n    while( true ) {\n        if (iVar2 < 0) {\n            *in_RAX = 0x31;\n            *(in_RAX + 800) = 1;\n            *(in_RAX + 0x328) = *(in_RAX + 0x328) + 1;\n            return;\n        }\n        if (in_RAX[iVar2] < 0x39) break;\ncode_r0x00466c1e:\n        iVar2 = iVar2 + -1;\n    }\n    in_RAX[iVar2] = in_RAX[iVar2] + 1;\n    *(in_RAX + 800) = iVar2 + 1;\n    return;\n}\n",
        "token_count": 601
    },
    "00466c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00466c80(ulong arg1, ulong noname_1, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint8_t uVar6;\n    uint32_t unaff_EDI;\n    uint64_t *arg4;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    uint64_t uVar11;\n    bool bVar12;\n    uint in_XMM0_Da;\n    uint extraout_XMM0_Da;\n    uint in_XMM0_Db;\n    uint extraout_XMM0_Db;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar6 = unaff_EDI;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (arg3 == 0x20) {\n                uVar10 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n                arg4 = 0x564b90;\n                goto code_r0x00466cdf;\n            }\n            if (arg3 == 0x40) break;\n            unaff_RBX = 0x4f9ea8;\n            *(*0x20 + -0x138) = 0x46731d;\n            in_RAX = fcn.00432920();\n            in_XMM0_Da = extraout_XMM0_Da;\n            in_XMM0_Db = extraout_XMM0_Db;\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        puVar5[0x28] = uVar6;\n        *(puVar5 + 0x30) = unaff_RSI;\n        *(puVar5 + 0x38) = arg3;\n        *(puVar5 + -8) = 0x467347;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        in_XMM0_Da = *(puVar5 + 0x20);\n        in_XMM0_Db = *(puVar5 + 0x20) >> 0x20;\n        unaff_EDI = puVar5[0x28];\n        unaff_RSI = *(puVar5 + 0x30);\n        arg3 = *(puVar5 + 0x38);\n        *0x20 = puVar5;\n    } while( true );\n    uVar10 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n    arg4 = 0x564bb0;\ncode_r0x00466cdf:\n    *(*0x20 + -0xa8) = uVar10;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    uVar8 = *arg4;\n    uVar1 = arg4[1];\n    uVar4 = -(uVar1 + uVar8 < 0x40);\n    *(*0x20 + -0x90) = -(uVar1 < 0x40);\n    *(*0x20 + -0x98) = -(uVar8 < 0x40);\n    uVar7 = uVar10 >> (uVar1 + uVar8 & 0x3f);\n    uVar1 = (*(*0x20 + -0x90) & 1 << (uVar1 & 0x3f)) - 1;\n    uVar11 = uVar10 >> (uVar8 & 0x3f) & -(uVar8 < 0x40) & uVar1;\n    uVar8 = 1 << (uVar8 & 0x3f) & *(*0x20 + -0x98);\n    uVar10 = uVar8 - 1 & *(*0x20 + -0xa8);\n    if (uVar11 == uVar1) {\n        if (uVar10 == 0) {\n            if ((uVar4 & uVar7) == 0) {\n                iVar2 = 4;\n                uVar3 = 0x4c7af3;\n            }\n            else {\n                iVar2 = 4;\n                uVar3 = 0x4c7af7;\n            }\n        }\n        else {\n            iVar2 = 3;\n            uVar3 = 0x4c7a60;\n        }\n        *(*0x20 + -0x90) = unaff_RBX + iVar2;\n        uVar10 = *(*0x20 + 0x18);\n        if (*(*0x20 + 0x18) < unaff_RBX + iVar2) {\n            *(*0x20 + -200) = iVar2;\n            *(*0x20 + -0x50) = uVar3;\n            *(*0x20 + -0x138) = 0x466dfd;\n            in_RAX = fcn.00444c60(unaff_RBX);\n            iVar2 = *(*0x20 + -200);\n            uVar10 = unaff_RBX;\n        }\n        *(*0x20 + -0xa0) = uVar10;\n        *(*0x20 + -0x40) = in_RAX;\n        *(*0x20 + -0x138) = 0x466e34;\n        fcn.0045d380(iVar2);\n        return *(*0x20 + -0x40);\n    }\n    if (uVar11 == 0) {\n        uVar11 = 1;\n    }\n    else {\n        uVar10 = uVar10 | uVar8;\n    }\n    bVar12 = (uVar4 & uVar7) != 0;\n    uVar8 = bVar12;\n    uVar4 = uVar1 & 0xffffffffffffff00 | uVar8;\n    iVar2 = uVar11 + arg4[2];\n    if (uVar6 == 0x62) {\n        *(*0x20 + -0x138) = 0x4672fa;\n        uVar3 = fcn.004687e0(*(*0x20 + 0x18), uVar4, iVar2, arg4);\n        return uVar3;\n    }\n    if ((uVar6 == 0x78) || (uVar6 == 0x58)) {\n        *(*0x20 + -0x138) = 0x466eb6;\n        uVar3 = fcn.004689a0(*(*0x20 + 0x18), unaff_EDI, uVar1 & 0xffffff00 | uVar8, uVar10);\n        return uVar3;\n    }\n    if (*0x564461 == '\\0') {\n        *(*0x20 + -0x138) = 0x4672d5;\n        uVar3 = fcn.00467380(*(*0x20 + 0x18), unaff_EDI, uVar1 & 0xffffff00 | uVar8, uVar10);\n        return uVar3;\n    }\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0xc9) = bVar12;\n    *(*0x20 + 0x30) = unaff_RSI;\n    *(*0x20 + 0x28) = uVar6;\n    *(*0x20 + -0x38) = in_XMM15;\n    *(*0x20 + -0x28) = in_XMM15;\n    *(*0x20 + -0x18) = in_XMM15;\n    if (-1 < unaff_RSI) {\n        if (uVar6 == 0x66) {\n            bVar12 = false;\n        }\n        else {\n            iVar9 = unaff_RSI;\n            if (uVar6 < 0x48) {\n                if (uVar6 == 0x45) {\ncode_r0x00466f46:\n                    iVar9 = unaff_RSI + 1;\n                }\n                else if (uVar6 == 0x47) {\ncode_r0x00466f5c:\n                    if (unaff_RSI == 0) {\n                        unaff_RSI = 1;\n                        iVar9 = unaff_RSI;\n                    }\n                }\n            }\n            else {\n                if (uVar6 == 0x65) goto code_r0x00466f46;\n                if (uVar6 == 0x67) goto code_r0x00466f5c;\n            }\n            *(*0x20 + -0x48) = arg4;\n            *(*0x20 + -0xb8) = iVar2;\n            *(*0x20 + -0xc0) = uVar10;\n            *(*0x20 + -0x90) = unaff_RSI;\n            *(*0x20 + -0x88) = in_XMM15;\n            *(*0x20 + -0x80) = in_XMM15;\n            if ((arg3 == 0x20) && (iVar9 < 10)) {\n                *(*0x20 + -0x38) = *0x20 + -0x88;\n                *(*0x20 + -0x30) = 0x18;\n                *(*0x20 + -0x28) = 0x18;\n                uVar10 = *arg4;\n                *(*0x20 + -0x138) = 0x466ffc;\n                fcn.00469160(iVar2 - uVar10, uVar10, 0x20);\n                uVar4 = *(*0x20 + -0xc9);\n                unaff_RSI = *(*0x20 + -0x90);\n                unaff_EDI = *(*0x20 + 0x28);\n                uVar10 = *(*0x20 + -0xc0);\n                bVar12 = true;\n            }\n            else {\n                if (iVar9 < 0x13) {\n                    *(*0x20 + -0xb0) = iVar9;\n                    *(*0x20 + -0x38) = *0x20 + -0x88;\n                    *(*0x20 + -0x30) = 0x18;\n                    *(*0x20 + -0x28) = 0x18;\n                    uVar10 = *arg4;\n                    *(*0x20 + -0x138) = 0x46709c;\n                    fcn.00469400(iVar2 - uVar10, uVar10, arg3);\n                    iVar9 = *(*0x20 + -0xb0);\n                    uVar4 = *(*0x20 + -0xc9);\n                    unaff_RSI = *(*0x20 + -0x90);\n                    unaff_EDI = *(*0x20 + 0x28);\n                    uVar10 = *(*0x20 + -0xc0);\n                }\n                bVar12 = iVar9 < 0x13;\n            }\n        }\n        if (!bVar12) {\n            *(*0x20 + -0x138) = 0x467125;\n            uVar3 = fcn.00467380(*(*0x20 + 0x18), unaff_EDI, uVar4 & 0xffffffff, uVar10);\n            return uVar3;\n        }\n        goto code_r0x00467263;\n    }\n    *(*0x20 + -0x70) = in_XMM15;\n    *(*0x20 + -0x60) = in_XMM15;\n    *(*0x20 + -0x38) = *0x20 + -0x70;\n    *(*0x20 + -0x30) = 0x20;\n    *(*0x20 + -0x28) = 0x20;\n    uVar10 = *arg4;\n    *(*0x20 + -0x138) = 0x46718b;\n    fcn.00469980(iVar2 - uVar10, uVar10);\n    uVar6 = *(*0x20 + 0x28);\n    if (uVar6 < 0x48) {\n        if (uVar6 == 0x45) {\ncode_r0x004671cf:\n            unaff_RSI = 0;\n            if (0 < *(*0x20 + -0x20) + -1) {\n                unaff_RSI = *(*0x20 + -0x20) + -1;\n            }\n        }\n        else if (uVar6 == 0x47) {\ncode_r0x00467233:\n            unaff_RSI = *(*0x20 + -0x20);\n        }\n        else {\n            unaff_RSI = *(*0x20 + 0x30);\n        }\n    }\n    else {\n        if (uVar6 == 0x65) goto code_r0x004671cf;\n        if (uVar6 == 0x66) {\n            unaff_RSI = 0;\n            if (0 < *(*0x20 + -0x20) - *(*0x20 + -0x18)) {\n                unaff_RSI = *(*0x20 + -0x20) - *(*0x20 + -0x18);\n            }\n        }\n        else {\n            if (uVar6 == 0x67) goto code_r0x00467233;\n            unaff_RSI = *(*0x20 + 0x30);\n        }\n    }\n    uVar4 = *(*0x20 + -0xc9);\ncode_r0x00467263:\n    *(*0x20 + -0x130) = *(*0x20 + -0x38);\n    *(*0x20 + -300) = *(*0x20 + -0x34);\n    *(*0x20 + -0x128) = *(*0x20 + -0x30);\n    *(*0x20 + -0x124) = *(*0x20 + -0x2c);\n    *(*0x20 + -0x120) = *(*0x20 + -0x28);\n    *(*0x20 + -0x11c) = *(*0x20 + -0x24);\n    *(*0x20 + -0x118) = *(*0x20 + -0x20);\n    *(*0x20 + -0x114) = *(*0x20 + -0x1c);\n    *(*0x20 + -0x110) = *(*0x20 + -0x18);\n    *(*0x20 + -0x10c) = *(*0x20 + -0x14);\n    *(*0x20 + -0x108) = *(*0x20 + -0x10);\n    *(*0x20 + -0x104) = *(*0x20 + -0xc);\n    *(*0x20 + -0x138) = 0x4672a5;\n    uVar3 = fcn.004677a0(*(*0x20 + 0x18), uVar4, unaff_RSI);\n    return uVar3;\n}\n",
        "token_count": 3513
    },
    "00467a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00467a20(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    uint8_t uVar6;\n    int64_t iVar7;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    uchar *puVar9;\n    ulong unaff_RBP;\n    int64_t iVar10;\n    int64_t *unaff_RDI;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    uint8_t uVar13;\n    int64_t unaff_R14;\n    uint8_t uVar14;\n    bool bVar15;\n    uchar in_XMM15 [16];\n    \ncode_r0x00467a20:\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x618 && *0x20 + -0x618 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x698;\n        *(*0x20 + -8) = unaff_RBP;\n        if (unaff_RBX == 0) {\n            *(in_RAX + 800) = 0;\n            return;\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        iVar7 = unaff_RDI[2];\n        *(*0x20 + -0x688) = iVar7 + 1;\n        if ((iVar7 + 1 < arg1) &&\n           (iVar10 = *(in_RAX + 0x328) - *(in_RAX + 800),  iVar5 = (arg1 - *unaff_RDI) * 100, \n           iVar7 = iVar5 + iVar10 * -0x14c,  iVar7 == 0 || SBORROW8(iVar5, iVar10 * 0x14c) != iVar7 < 0)) {\n            return;\n        }\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x340) = in_XMM15;\n        *(*0x20 + -0x6a8) = *0x20 + -8;\n        *(*0x20 + -0x6a0) = 0x467adb;\n        fcn.0045cbe9();\n        uVar2 = *(*0x20 + -0x6a8);\n        *(*0x20 + -0x6a0) = 0x467af7;\n        fcn.00466520(unaff_RBX * 2 + 1);\n        *(*0x20 + -0x6a0) = 0x467b1e;\n        fcn.00466a80();\n        if ((1 << (**(*0x20 + 0x20) & 0x3f) & -(**(*0x20 + 0x20) < 0x40)) < *(*0x20 + 0x10)) {\n            iVar7 = *(*0x20 + 0x18);\n        }\n        else {\n            iVar7 = *(*0x20 + 0x18);\n            if (iVar7 != *(*0x20 + -0x688)) {\n                iVar7 = iVar7 + -1;\n            }\n        }\n        *(*0x20 + -0x680) = iVar7;\n        *(*0x20 + -0x678) = in_XMM15;\n        *(*0x20 + -0x6a8) = uVar2;\n        *(*0x20 + -0x6a0) = 0x467baf;\n        fcn.0045cbe9();\n        unaff_RBP = *(*0x20 + -0x6a8);\n        *(*0x20 + -0x6a0) = 0x467bc5;\n        fcn.00466520();\n        iVar7 = *(*0x20 + -0x680);\n        iVar5 = **(*0x20 + 0x20);\n        *(*0x20 + -0x6a0) = 0x467be5;\n        fcn.00466a80();\n        puVar3 = *(*0x20 + 8);\n        unaff_RDI = NULL;\n        uVar6 = 0;\n        unaff_RBX = (iVar7 - iVar5) - 1;\n        do {\n            iVar7 = *(*0x20 + -0x18);\n            iVar5 = *(puVar3 + 0x328);\n            uVar8 = unaff_RDI + (iVar5 - iVar7);\n            iVar10 = *(puVar3 + 800);\n            if (iVar10 <= uVar8) {\n                return;\n            }\n            uVar1 = unaff_RDI + (*(*0x20 + -0x350) - iVar7);\n            if ((uVar1 < 0) || (*(*0x20 + -0x358) == uVar1 || *(*0x20 + -0x358) < uVar1)) {\n                uVar11 = 0x30;\n            }\n            else {\n                if (799 < uVar1) goto code_r0x00467edf;\n                uVar11 = *(*0x20 + (uVar1 - 0x678));\n            }\n            if (uVar8 < 0) {\n                uVar13 = 0x30;\n            }\n            else {\n                if (799 < uVar8) goto code_r0x00467ed2;\n                uVar13 = puVar3[uVar8];\n            }\n            if (unaff_RDI < *(*0x20 + -0x20)) {\n                if (0x31f < unaff_RDI) goto code_r0x00467ec5;\n                uVar14 = (*0x20 + -0x340)[unaff_RDI];\n            }\n            else {\n                uVar14 = 0x30;\n            }\n            if (uVar11 == uVar13) {\n                uVar12 = *(*0x20 + 0x10);\n                if ((*(*0x20 + 0x10) & 1) == 0) {\n                    bVar15 = *(*0x20 + -0x358) == unaff_RDI + (*(*0x20 + -0x350) - iVar7) + 1;\n                }\n                else {\n                    bVar15 = false;\n                }\n            }\n            else {\n                uVar12 = *(*0x20 + 0x10);\n                bVar15 = true;\n            }\n            if (uVar6 == 0) {\n                if (uVar13 + 1 < uVar14) {\n                    uVar6 = 2;\n                }\n                else {\n                    if (uVar14 == uVar13) goto code_r0x00467d33;\n                    uVar6 = 1;\n                }\n            }\n            else {\ncode_r0x00467d33:\n                if ((uVar6 == 1) && ((uVar13 != 0x39 || (uVar14 != 0x30)))) {\n                    uVar6 = 2;\n                }\n            }\n            if (uVar6 == 0) {\n                bVar4 = false;\n            }\n            else if (((uVar12 & 1) == 0) || (1 < uVar6)) {\n                bVar4 = true;\n            }\n            else {\n                bVar4 = unaff_RDI + 1 < *(*0x20 + -0x20);\n            }\n            if (bVar15) {\n                if (bVar4) {\n                    *(*0x20 + -0x6a0) = 0x467dcf;\n                    fcn.00466b40();\n                    return;\n                }\n                if (bVar15) goto code_r0x00467d90;\n            }\n            if (bVar4) {\n                iVar7 = unaff_RDI + (iVar5 - iVar7) + 1;\n                if (iVar7 < 0) {\n                    return;\n                }\n                if (iVar7 < iVar10) {\n                    while( true ) {\n                        if (uVar8 < 0) {\n                            *puVar3 = 0x31;\n                            *(puVar3 + 800) = 1;\n                            *(puVar3 + 0x328) = *(puVar3 + 0x328) + 1;\n                            return;\n                        }\n                        if (799 < uVar8) break;\n                        if (puVar3[uVar8] < 0x39) {\n                            puVar3[uVar8] = puVar3[uVar8] + 1;\n                            *(puVar3 + 800) = uVar8 + 1;\n                            return;\n                        }\n                        uVar8 = uVar8 - 1;\n                    }\n                    *(*0x20 + -0x6a0) = 0x467e69;\n                    fcn.0045ca40(800);\n                    return;\n                }\n                return;\n            }\n            unaff_RDI = unaff_RDI + 1;\n            unaff_RBX = uVar8;\n        } while( true );\n    }\n    goto code_r0x00467eed;\ncode_r0x00467d90:\n    iVar7 = unaff_RDI + (iVar5 - iVar7) + 1;\n    if (iVar7 < 0) {\n        return;\n    }\n    if (iVar10 <= iVar7) {\n        return;\n    }\n    *(puVar3 + 800) = iVar7;\n    do {\n        iVar7 = *(puVar3 + 800);\n        if (iVar7 < 1) {\ncode_r0x00467ea8:\n            if (iVar7 != 0) {\n                return;\n            }\n            *(puVar3 + 0x328) = 0;\n            return;\n        }\n        if (799 < iVar7 - 1U) break;\n        uVar8 = puVar3[iVar7 + -1];\n        if (puVar3[iVar7 + -1] != 0x30) goto code_r0x00467ea8;\n        *(puVar3 + 800) = iVar7 - 1U;\n    } while( true );\n    *(*0x20 + -0x6a0) = 0x467ec5;\n    fcn.0045ca40(800);\n    unaff_RBX = uVar8;\ncode_r0x00467ec5:\n    *(*0x20 + -0x6a0) = 0x467ed2;\n    fcn.0045ca40(800);\ncode_r0x00467ed2:\n    *(*0x20 + -0x6a0) = 0x467edf;\n    fcn.0045ca40(800);\ncode_r0x00467edf:\n    arg1 = 800;\n    *(*0x20 + -0x6a0) = 0x467eec;\n    in_RAX = fcn.0045ca40(800);\ncode_r0x00467eed:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    *(puVar9 + 0x18) = arg1;\n    *(puVar9 + 0x20) = unaff_RDI;\n    *(puVar9 + -8) = 0x467f06;\n    fcn.0045a360();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    arg1 = *(puVar9 + 0x18);\n    unaff_RDI = *(puVar9 + 0x20);\n    *0x20 = puVar9;\n    goto code_r0x00467a20;\n}\n",
        "token_count": 2626
    },
    "00467f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00467f20(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    char cVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uchar in_R8B;\n    uchar uVar13;\n    int64_t unaff_R14;\n    \n    do {\n        cVar8 = unaff_RDI;\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x38) = in_RAX;\n            *(*0x20 + 0x58) = unaff_RSI;\n            *(*0x20 + 0x60) = in_R8B;\n            uVar5 = unaff_RBX;\n            if (cVar8 != '\\0') {\n                uVar5 = unaff_RBX + 1;\n                uVar2 = in_RAX;\n                uVar7 = arg1;\n                uVar6 = unaff_RBX;\n                if (arg1 < uVar5) {\n                    *(*0x20 + 0x40) = unaff_RBX;\n                    *(*0x20 + -0x90) = 0x467f8e;\n                    uVar2 = fcn.00444c60(unaff_RBX);\n                    uVar5 = in_RAX + 1;\n                    uVar6 = *(*0x20 + 0x40);\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    uVar7 = unaff_RBX;\n                    unaff_RDI = arg1;\n                }\n                *(uVar2 + uVar6) = 0x2d;\n                in_RAX = uVar2;\n                arg1 = uVar7;\n                unaff_RBX = uVar6;\n            }\n            cVar8 = unaff_RDI;\n            if (*(*0x20 + 0x20) == 0) {\n                uVar13 = 0x30;\ncode_r0x00467fe4:\n                uVar6 = uVar5 + 1;\n                uVar3 = in_RAX;\n                uVar7 = arg1;\n                uVar2 = uVar5;\n                if (arg1 < uVar6) {\n                    *(*0x20 + -0x18) = uVar5;\n                    *(*0x20 + -0x42) = uVar13;\n                    *(*0x20 + -0x90) = 0x46800f;\n                    uVar3 = fcn.00444c60(uVar5);\n                    uVar6 = in_RAX + 1;\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    uVar2 = *(*0x20 + -0x18);\n                    uVar13 = *(*0x20 + -0x42);\n                    uVar7 = uVar5;\n                    unaff_RBX = in_RAX;\n                    unaff_RDI = arg1;\n                }\n                *(uVar3 + uVar2) = uVar13;\n                uVar5 = uVar6;\n                if (unaff_RSI < 1) goto code_r0x0046816f;\n                uVar5 = uVar6 + 1;\n                uVar4 = uVar3;\n                uVar1 = uVar7;\n                uVar2 = uVar6;\n                if (uVar7 < uVar5) {\n                    *(*0x20 + -0x20) = uVar6;\n                    *(*0x20 + -0x90) = 0x468065;\n                    uVar4 = fcn.00444c60(uVar6);\n                    uVar5 = uVar3 + 1;\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    uVar2 = *(*0x20 + -0x20);\n                    uVar1 = uVar6;\n                    unaff_RBX = uVar3;\n                    unaff_RDI = uVar7;\n                }\n                uVar7 = uVar1;\n                cVar8 = unaff_RDI;\n                *(uVar4 + uVar2) = 0x2e;\n                uVar2 = unaff_RSI + 1U;\n                if (*(*0x20 + 0x20) < unaff_RSI + 1U) {\n                    uVar2 = *(*0x20 + 0x20);\n                }\n                if (uVar2 < 2) {\n                    iVar9 = 1;\n                    uVar3 = uVar4;\n                    goto code_r0x004683c0;\n                }\n                uVar3 = *(*0x20 + 0x18);\n                uVar6 = *(*0x20 + 8);\n                if (uVar2 <= uVar3) {\n                    *(*0x20 + -0x40) = uVar2;\n                    uVar1 = (uVar2 + uVar5) - 1;\n                    *(*0x20 + -0x18) = uVar1;\n                    if (uVar7 < uVar1) {\n                        *(*0x20 + -0x28) = uVar5;\n                        *(*0x20 + -0x10) = (-(uVar3 - 1) >> 0x3f & 1) + uVar6;\n                        *(*0x20 + -0x90) = 0x468114;\n                        uVar4 = fcn.00444c60(uVar5);\n                        uVar2 = *(*0x20 + -0x40);\n                        uVar7 = uVar5;\n                    }\n                    *(*0x20 + -0x20) = uVar7;\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0x90) = 0x468145;\n                    fcn.0045d380(uVar2 - 1);\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    iVar9 = *(*0x20 + -0x40);\n                    uVar7 = *(*0x20 + -0x20);\n                    uVar5 = *(*0x20 + -0x18);\n                    uVar3 = *(*0x20 + -0x10);\ncode_r0x004683c0:\n                    for (; iVar9 <= unaff_RSI; iVar9 = iVar9 + 1) {\n                        uVar2 = uVar3;\n                        uVar6 = uVar5;\n                        uVar4 = uVar5 + 1;\n                        if (uVar7 < uVar5 + 1) {\n                            *(*0x20 + -0x40) = iVar9;\n                            *(*0x20 + -0x30) = uVar5;\n                            *(*0x20 + -0x90) = 0x4683f0;\n                            uVar2 = fcn.00444c60(uVar5);\n                            iVar9 = *(*0x20 + -0x40);\n                            unaff_RSI = *(*0x20 + 0x58);\n                            in_R8B = *(*0x20 + 0x60);\n                            uVar6 = *(*0x20 + -0x30);\n                            uVar7 = uVar5;\n                            uVar4 = uVar3 + 1;\n                        }\n                        uVar5 = uVar4;\n                        *(uVar2 + uVar6) = 0x30;\n                        uVar3 = uVar2;\n                    }\ncode_r0x0046816f:\n                    uVar6 = uVar5 + 1;\n                    uVar4 = uVar3;\n                    uVar2 = uVar5;\n                    if (uVar7 < uVar6) {\n                        *(*0x20 + -0x18) = uVar5;\n                        *(*0x20 + -0x90) = 0x468192;\n                        uVar4 = fcn.00444c60(uVar5);\n                        uVar6 = uVar3 + 1;\n                        in_R8B = *(*0x20 + 0x60);\n                        uVar2 = *(*0x20 + -0x18);\n                        uVar7 = uVar5;\n                    }\n                    *(uVar4 + uVar2) = in_R8B;\n                    iVar9 = *(*0x20 + 0x28) + -1;\n                    if (*(*0x20 + 0x20) == 0) {\n                        iVar9 = 0;\n                    }\n                    if (iVar9 < 0) {\n                        iVar9 = -iVar9;\n                        uVar13 = 0x2d;\n                    }\n                    else {\n                        uVar13 = 0x2b;\n                    }\n                    *(*0x20 + -0x38) = iVar9;\n                    uVar5 = uVar6 + 1;\n                    uVar3 = uVar4;\n                    uVar2 = uVar6;\n                    if (uVar7 < uVar5) {\n                        *(*0x20 + -0x18) = uVar6;\n                        *(*0x20 + -0x42) = uVar13;\n                        *(*0x20 + -0x90) = 0x468209;\n                        uVar3 = fcn.00444c60(uVar6);\n                        uVar5 = uVar4 + 1;\n                        iVar9 = *(*0x20 + -0x38);\n                        uVar13 = *(*0x20 + -0x42);\n                        uVar2 = *(*0x20 + -0x18);\n                        uVar7 = uVar6;\n                    }\n                    *(*0x20 + -0x18) = uVar5;\n                    *(uVar3 + uVar2) = uVar13;\n                    if (iVar9 < 10) {\n                        if (uVar7 < uVar5 + 2) {\n                            *(*0x20 + -0x90) = 0x468248;\n                            uVar3 = fcn.00444c60(uVar5);\n                            iVar9 = *(*0x20 + -0x38);\n                            uVar5 = *(*0x20 + -0x18);\n                        }\n                        *(uVar3 + uVar5) = 0x30;\n                        *(uVar3 + 1 + uVar5) = iVar9 + '0';\n                    }\n                    else if (iVar9 < 100) {\n                        iVar10 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar9) >> 0x40, 0) + iVar9 >> 3;\n                        iVar9 = iVar9 + iVar10 * -10;\n                        if (uVar7 < uVar5 + 2) {\n                            *(*0x20 + -0x20) = iVar10;\n                            *(*0x20 + -0x28) = iVar9;\n                            *(*0x20 + -0x90) = 0x4682b7;\n                            uVar3 = fcn.00444c60(uVar5);\n                            iVar10 = *(*0x20 + -0x20);\n                            iVar9 = *(*0x20 + -0x28);\n                            uVar5 = *(*0x20 + -0x18);\n                        }\n                        *(uVar3 + uVar5) = iVar10 + '0';\n                        *(uVar3 + 1 + uVar5) = iVar9 + '0';\n                    }\n                    else {\n                        iVar10 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar9) >> 0x40, 0) + iVar9;\n                        iVar11 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar9) >> 0x40, 0) + iVar9 >> 3;\n                        cVar8 = iVar11 + ((iVar11 & 0xff) / 10) * -10;\n                        iVar9 = iVar9 + iVar11 * -10;\n                        if (uVar7 < uVar5 + 3) {\n                            *(*0x20 + -0x20) = iVar10;\n                            *(*0x20 + -0x28) = iVar9;\n                            *(*0x20 + -0x41) = cVar8;\n                            *(*0x20 + -0x90) = 0x468365;\n                            uVar3 = fcn.00444c60(uVar5);\n                            cVar8 = *(*0x20 + -0x41);\n                            iVar9 = *(*0x20 + -0x28);\n                            uVar5 = *(*0x20 + -0x18);\n                            iVar10 = *(*0x20 + -0x20);\n                        }\n                        *(uVar3 + uVar5) = (iVar10 >> 6) + '0';\n                        *(uVar3 + 1 + uVar5) = cVar8 + '0';\n                        *(uVar3 + 2 + uVar5) = iVar9 + '0';\n                    }\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x468425;\n                fcn.0045cac0(uVar2, uVar3);\n            }\n            else {\n                uVar6 = *(*0x20 + 0x10);\n                if (*(*0x20 + 0x10) != 0) {\n                    uVar13 = **(*0x20 + 8);\n                    goto code_r0x00467fe4;\n                }\n            }\n            arg1 = uVar6;\n            *(*0x20 + -0x90) = 0x46842f;\n            in_RAX = fcn.0045ca40(arg1);\n        }\n        *(puVar12 + 0x38) = in_RAX;\n        *(puVar12 + 0x40) = unaff_RBX;\n        *(puVar12 + 0x48) = arg1;\n        puVar12[0x50] = cVar8;\n        *(puVar12 + 0x58) = unaff_RSI;\n        puVar12[0x60] = in_R8B;\n        *(puVar12 + -8) = 0x468453;\n        fcn.0045a360();\n        in_RAX = *(puVar12 + 0x38);\n        unaff_RBX = *(puVar12 + 0x40);\n        arg1 = *(puVar12 + 0x48);\n        unaff_RDI = puVar12[0x50];\n        unaff_RSI = *(puVar12 + 0x58);\n        in_R8B = puVar12[0x60];\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 3418
    },
    "00469160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00469160(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (-1 < unaff_RDI) {\n                if (unaff_RDI < 10) {\n                    if (unaff_EBX == 0) {\n                        *(in_RAX + 0x18) = in_XMM15;\n                        return;\n                    }\n                    uVar2 = unaff_EBX * 2 + 1;\n                    iVar4 = 0x3f;\n                    if (uVar2 != 0) {\n                        for (; uVar2 >> iVar4 == 0; iVar4 = iVar4 + -1) {\n                        }\n                    }\n                    uVar2 = arg1;\n                    if (iVar4 < 0x19) {\n                        uVar1 = -(-(iVar4 + -0x19) < 0x20);\n                        arg3 = uVar1;\n                        unaff_EBX = unaff_EBX << (-(iVar4 + -0x19) & 0x1f) & uVar1;\n                        uVar2 = (iVar4 + arg1) - 0x19;\n                    }\n                    *(*0x20 + 0x20) = unaff_RDI;\n                    *(*0x20 + 8) = in_RAX;\n                    unaff_RDI = unaff_RDI - (uVar2 * 0x13441 + 0x1ce618 >> 0x12);\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    arg1 = unaff_RDI - 1;\n                    if (arg1 < 0x1c) {\n                        arg3 = arg3 & 0xffffffffffffff00 | -1 < arg1;\n                    }\n                    else {\n                        arg3 = 0;\n                    }\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0x1d) = arg3;\n                    *(*0x20 + -0x1c) = unaff_EBX;\n                    *(*0x20 + -0x48) = 0x469230;\n                    uVar1 = fcn.0046a3a0(arg1, arg1, arg3);\n                    if (uVar2 < 0) break;\n                    *(*0x20 + -0x48) = 0x4693a5;\n                    fcn.00432920();\n                }\n                *(*0x20 + -0x48) = 0x4693b8;\n                fcn.00432920();\n            }\n            unaff_EBX = 0x4f9eb8;\n            *(*0x20 + -0x48) = 0x4693cb;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x4693e5;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n    if (*(*0x20 + -0x10) + 9U < 10) {\n        if (*(*0x20 + -0x1c) != 0) {\n            uVar7 = *(*0x20 + -0x1c);\n            for (iVar4 = 0; SBORROW8(iVar4, -*(*0x20 + -0x18)) != iVar4 + *(*0x20 + -0x18) < 0; iVar4 = iVar4 + 1) {\n                if (uVar7 != (uVar7 / 5) * 5) goto code_r0x00469268;\n                uVar7 = uVar7 / 5;\n            }\n        }\n        cVar5 = '\\x01';\n        arg1 = 1;\n    }\n    else {\ncode_r0x00469268:\n        cVar5 = *(*0x20 + -0x1d);\n    }\n    uVar2 = -uVar2;\n    uVar6 = arg1 & 0xffffffff;\n    uVar8 = (1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) - 1 & uVar1;\n    if (cVar5 == '\\0') {\n        uVar2 = uVar2 - 1;\n        uVar7 = -(uVar2 < 0x20);\n        uVar1 = uVar2 & 0xffffff00 | (uVar8 >> (uVar2 & 0x1f) & -(uVar2 < 0x20)) == 1;\n        goto code_r0x00469300;\n    }\n    uVar9 = -(uVar2 - 1 < 0x20);\n    uVar7 = uVar9;\n    uVar9 = 1 << (uVar2 - 1 & 0x1f) & uVar9;\n    if (uVar9 < uVar8) {\ncode_r0x004692d1:\n        uVar1 = 1;\n    }\n    else {\n        if (uVar9 == uVar8) {\n            cVar5 = arg1 & 0xffffffff;\n            if (cVar5 == '\\0') goto code_r0x004692d1;\n            if ((uVar9 == uVar8) && (cVar5 != '\\0')) {\n                uVar1 = uVar1 >> (uVar2 & 0x1f) & -(uVar2 < 0x20) & 1;\n                goto code_r0x00469300;\n            }\n        }\n        uVar1 = 0;\n    }\ncode_r0x00469300:\n    if (uVar8 != 0) {\n        uVar6 = 0;\n    }\n    *(*0x20 + -0x48) = 0x469325;\n    fcn.004696a0(uVar6 ^ 1, uVar1, uVar7, uVar8);\n    *(*(*0x20 + 8) + 0x20) = (*(*(*0x20 + 8) + 0x20) - *(*0x20 + -0x10)) + 1;\n    return;\n}\n",
        "token_count": 1676
    },
    "00469400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00469400(uint64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char cVar6;\n    uint32_t uVar7;\n    int64_t unaff_RDI;\n    uint64_t noname_2;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RDI < 0x13) {\n                if (unaff_RBX == 0) {\n                    *(in_RAX + 0x18) = in_XMM15;\n                    return;\n                }\n                iVar3 = 0x3f;\n                if (unaff_RBX != 0) {\n                    for (; unaff_RBX >> iVar3 == 0; iVar3 = iVar3 + -1) {\n                    }\n                }\n                if (unaff_RBX == 0) {\n                    iVar3 = -1;\n                }\n                uVar4 = arg1;\n                if (iVar3 + 1 < 0x37) {\n                    unaff_RBX = unaff_RBX << (-(iVar3 + -0x36) & 0x3f) & -(-(iVar3 + -0x36) < 0x40);\n                    uVar4 = (iVar3 + arg1) - 0x36;\n                }\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 8) = in_RAX;\n                unaff_RDI = unaff_RDI - (uVar4 * 0x13441 + 0x4105b6 >> 0x12);\n                *(*0x20 + -0x10) = unaff_RDI;\n                arg1 = unaff_RDI - 1;\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x21) = arg1 < 0x38;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x4694d0;\n                uVar2 = fcn.0046a480(arg1);\n                if (uVar4 < 0) break;\n                *(*0x20 + -0x50) = 0x469645;\n                fcn.00432920();\n            }\n            unaff_RBX = 0x4f9ee8;\n            *(*0x20 + -0x50) = 0x469658;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x469672;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    if (*(*0x20 + -0x10) + 0x15U < 0x16) {\n        if (*(*0x20 + -0x18) != 0) {\n            uVar8 = *(*0x20 + -0x18);\n            for (iVar3 = 0; SBORROW8(iVar3, -*(*0x20 + -0x20)) != iVar3 + *(*0x20 + -0x20) < 0; iVar3 = iVar3 + 1) {\n                if (uVar8 != (uVar8 / 5) * 5) goto code_r0x00469505;\n                uVar8 = uVar8 / 5;\n            }\n        }\n        cVar6 = '\\x01';\n        arg1 = 1;\n    }\n    else {\ncode_r0x00469505:\n        cVar6 = *(*0x20 + -0x21);\n    }\n    uVar4 = -uVar4;\n    uVar7 = arg1 & 0xffffffff;\n    uVar8 = (1 << (uVar4 & 0x3f) & -(uVar4 < 0x40)) - 1 & uVar2;\n    if (cVar6 == '\\0') {\n        uVar4 = uVar4 - 1;\n        noname_2 = -(uVar4 < 0x40);\n        uVar1 = uVar4 & 0xffffff00 | (uVar8 >> (uVar4 & 0x3f) & noname_2) == 1;\n        goto code_r0x004695a2;\n    }\n    noname_2 = -(uVar4 - 1 < 0x40);\n    uVar9 = 1 << (uVar4 - 1 & 0x3f) & noname_2;\n    if (uVar9 < uVar8) {\ncode_r0x00469572:\n        uVar1 = 1;\n    }\n    else {\n        if (uVar9 == uVar8) {\n            cVar6 = arg1 & 0xffffffff;\n            if (cVar6 == '\\0') goto code_r0x00469572;\n            if ((uVar9 == uVar8) && (cVar6 != '\\0')) {\n                uVar1 = uVar2 >> (uVar4 & 0x3f) & -(uVar4 < 0x40) & 1;\n                goto code_r0x004695a2;\n            }\n        }\n        uVar1 = 0;\n    }\ncode_r0x004695a2:\n    if (uVar8 != 0) {\n        uVar7 = 0;\n    }\n    *(*0x20 + -0x50) = 0x4695c5;\n    fcn.004696a0(uVar7 ^ 1, uVar1, noname_2, uVar8);\n    *(*(*0x20 + 8) + 0x20) = (*(*(*0x20 + 8) + 0x20) - *(*0x20 + -0x10)) + 1;\n    return;\n}\n",
        "token_count": 1578
    },
    "00469980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00469980(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    char cVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    ulong uVar6;\n    char cVar7;\n    uint8_t uVar8;\n    uint64_t uVar9;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uint32_t uVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    uint64_t *unaff_RDI;\n    char cVar16;\n    ulong uVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    int64_t unaff_R14;\n    uint64_t uVar20;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 0) {\n                *(in_RAX + 0x18) = in_XMM15;\n                return;\n            }\n            if (arg1 < 1) {\n                iVar14 = 0;\n                if (unaff_RBX != 0) {\n                    for (; (unaff_RBX >> iVar14 & 1) == 0; iVar14 = iVar14 + 1) {\n                    }\n                }\n                uVar9 = -arg1;\n                if (SBORROW8(iVar14, uVar9) == iVar14 + arg1 < 0) {\n                    *(*0x20 + -0x98) = 0x4699e5;\n                    fcn.00469ea0(-(uVar9 < 0x40) & unaff_RBX >> (uVar9 & 0x3f), iVar14, 0);\n                    return;\n                }\n            }\n            uVar9 = *unaff_RDI;\n            if ((unaff_RBX == (1 << (uVar9 & 0x3f) & -(uVar9 < 0x40))) && (arg1 != (unaff_RDI[2] - uVar9) + 1)) {\n                iVar10 = unaff_RBX * 4;\n                iVar14 = iVar10 + 2;\n                arg1 = arg1 + -2;\n                iVar1 = iVar10;\n            }\n            else {\n                iVar10 = unaff_RBX << 1;\n                iVar14 = unaff_RBX * 2 + 1;\n                arg1 = arg1 + -1;\n                iVar1 = unaff_RBX * 2;\n            }\n            if (arg1 == 0) {\n                *(*0x20 + -0x98) = 0x469bbb;\n                fcn.00469ea0(iVar10, unaff_RBX, 0);\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = iVar1 + -1;\n            *(*0x20 + -0x18) = iVar10;\n            *(*0x20 + -0x50) = iVar14;\n            *(*0x20 + -0x38) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            iVar14 = arg1 * -0x13441 >> 0x12;\n            *(*0x20 + -0x58) = iVar14;\n            iVar14 = iVar14 + 1;\n            *(*0x20 + -0x48) = iVar14;\n            uVar17 = 0x564b90;\n            if (unaff_RDI == 0x564b90) {\n                *(*0x20 + -0x98) = 0x469ab2;\n                uVar4 = fcn.0046a3a0(iVar14, unaff_RBX, 0x564b90);\n                *(*0x20 + -0x60) = uVar4;\n                *(*0x20 + -0x62) = iVar14;\n                uVar6 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x469ace;\n                uVar4 = fcn.0046a3a0(uVar6, unaff_RBX, uVar17);\n                *(*0x20 + -0x5c) = uVar4;\n                *(*0x20 + -0x61) = uVar6;\n                iVar14 = *(*0x20 + -0x38);\n                arg1 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x469aea;\n                uVar5 = fcn.0046a3a0(arg1, unaff_RBX, uVar17);\n                uVar9 = *(*0x20 + -0x60);\n                uVar20 = *(*0x20 + -0x5c);\n                unaff_RDI = uVar5;\n                cVar3 = *(*0x20 + -0x61);\n                cVar16 = *(*0x20 + -0x62);\n            }\n            else {\n                *(*0x20 + -0x98) = 0x469b10;\n                uVar17 = fcn.0046a480(iVar14);\n                *(*0x20 + -0x28) = uVar17;\n                *(*0x20 + -0x62) = iVar14;\n                uVar17 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x469b2d;\n                uVar6 = fcn.0046a480(uVar17);\n                *(*0x20 + -0x20) = uVar6;\n                *(*0x20 + -0x61) = uVar17;\n                iVar14 = *(*0x20 + -0x38);\n                arg1 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x469b4a;\n                unaff_RDI = fcn.0046a480(arg1);\n                uVar9 = *(*0x20 + -0x28);\n                uVar20 = *(*0x20 + -0x20);\n                cVar3 = *(*0x20 + -0x61);\n                cVar16 = *(*0x20 + -0x62);\n            }\n            if (iVar14 < 0) break;\n            unaff_RBX = 0x4f9ef8;\n            *(*0x20 + -0x98) = 0x469e6c;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + 0x20) = unaff_RDI;\n        *(puVar12 + -8) = 0x469e86;\n        fcn.0045a360();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1 = *(puVar12 + 0x18);\n        unaff_RDI = *(puVar12 + 0x20);\n        *0x20 = puVar12;\n    } while( true );\n    iVar1 = *(*0x20 + -0x48);\n    if (0x37 < iVar1) {\n        arg1 = 0;\n        cVar3 = '\\0';\n        cVar16 = '\\0';\n    }\n    cVar7 = arg1;\n    if (*(*0x20 + -0x58) + 0x19U < 0x18) {\n        iVar10 = -iVar1;\n        if (*(*0x20 + -0x40) != 0) {\n            uVar15 = *(*0x20 + -0x40);\n            for (iVar19 = 0; SBORROW8(iVar19, iVar10) != iVar19 + iVar1 < 0; iVar19 = iVar19 + 1) {\n                if (uVar15 != (uVar15 / 5) * 5) goto code_r0x00469d99;\n                uVar15 = uVar15 / 5;\n            }\n        }\n        cVar16 = '\\x01';\ncode_r0x00469d99:\n        if (*(*0x20 + -0x18) != 0) {\n            uVar15 = *(*0x20 + -0x18);\n            for (iVar19 = 0; SBORROW8(iVar19, iVar10) != iVar19 + iVar1 < 0; iVar19 = iVar19 + 1) {\n                if (uVar15 != (uVar15 / 5) * 5) goto code_r0x00469df6;\n                uVar15 = uVar15 / 5;\n            }\n        }\n        cVar3 = '\\x01';\ncode_r0x00469df6:\n        if (*(*0x20 + -0x50) != 0) {\n            uVar15 = *(*0x20 + -0x50);\n            for (iVar19 = 0; SBORROW8(iVar19, iVar10) != iVar19 + iVar1 < 0; iVar19 = iVar19 + 1) {\n                if (uVar15 != (uVar15 / 5) * 5) goto code_r0x00469be1;\n                uVar15 = uVar15 / 5;\n            }\n        }\n        cVar7 = '\\x01';\n    }\ncode_r0x00469be1:\n    *(*0x20 + -0x30) = unaff_RDI;\n    uVar11 = -iVar14;\n    uVar15 = -(uVar11 < 0x40);\n    uVar8 = uVar11;\n    uVar18 = (1 << (uVar8 & 0x3f) & uVar15) - 1;\n    noname_1 = uVar9 >> (uVar8 & 0x3f) & uVar15;\n    uVar15 = uVar20 >> (uVar8 & 0x3f) & uVar15;\n    uVar20 = uVar20 & uVar18;\n    if ((cVar7 == '\\0') || ((*(*0x20 + -0x30) & uVar18) != 0)) {\n        uVar5 = *(*0x20 + -0x10);\n    }\n    else {\n        uVar5 = *(*0x20 + -0x10);\n    }\n    if (cVar3 == '\\0') {\n        uVar2 = -(uVar11 - 1 < 0x40);\n        uVar13 = uVar2 & 0xffffff00 | (uVar20 >> (uVar11 - 1 & 0x3f) & uVar2) == 1;\n    }\n    else {\n        uVar11 = 1 << (uVar11 - 1 & 0x3f) & -(uVar11 - 1 < 0x40);\n        if (uVar11 < uVar20) {\n            uVar13 = 1;\n        }\n        else if (uVar11 == uVar20) {\n            uVar13 = uVar15 & 1;\n        }\n        else {\n            uVar13 = 0;\n        }\n    }\n    if (((cVar16 == '\\0') || ((uVar18 & uVar9) != 0)) || ((uVar5 & 1) != 0)) {\n        noname_1 = noname_1 + 1;\n    }\n    *(*0x20 + -0x98) = 0x469d25;\n    fcn.00469ea0(uVar15, noname_1, uVar13);\n    *(*(*0x20 + 8) + 0x20) = (*(*(*0x20 + 8) + 0x20) - *(*0x20 + -0x58)) + -1;\n    return;\n}\n",
        "token_count": 2777
    },
    "00469ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00469ea0(char *arg1, ulong noname_1, char **arg3)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char **in_RAX;\n    char *pcVar3;\n    char cVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint64_t noname_1_00;\n    char *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    char cVar8;\n    char *unaff_RSI;\n    char **unaff_RDI;\n    char **ppcVar9;\n    uint32_t uVar10;\n    char **arg1_00;\n    int64_t unaff_R14;\n    char *unaff_R15;\n    \n    do {\n        cVar8 = unaff_RSI;\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            pcVar5 = (unaff_RBX >> 1) / 500000000;\n            unaff_RBX = unaff_RBX + pcVar5 * -1000000000;\n            pcVar6 = (arg1 >> 1) / 500000000;\n            arg1_00 = arg1 + pcVar6 * -1000000000;\n            noname_1_00 = (unaff_RDI >> 1) / 500000000;\n            if (noname_1_00 == 0) {\n                in_RAX = 0x8;\n                *(*0x20 + -0x30) = 0x469fb9;\n                fcn.0046a1a0(arg1_00, noname_1_00, arg3, 8);\n                goto code_r0x00469fb9;\n            }\n            if (pcVar5 < noname_1_00) {\n                uVar10 = arg1_00;\n                if (cVar8 == '\\0') {\n                    unaff_RSI = NULL;\n                }\n                else {\n                    unaff_RSI = uVar10 == 0;\n                }\n                if (uVar10 < 0x1dcd6501) {\n                    arg3 = (uVar10 & 0xffffff00 | uVar10 == 500000000) & arg3;\n                }\n                else {\n                    arg3 = 0x1;\n                }\n                in_RAX = 0x8;\n                *(*0x20 + -0x30) = 0x469f94;\n                arg1_00 = arg3;\n                fcn.0046a1a0(pcVar6, noname_1_00, arg3, 8);\n                *(*(*0x20 + 8) + 0x20) = *(*(*0x20 + 8) + 0x20) + 9;\n                goto code_r0x00469fb9;\n            }\n            in_RAX[3] = NULL;\n            pcVar3 = 0x9;\n            ppcVar9 = unaff_RDI >> 1;\n            unaff_RDI = arg1_00;\ncode_r0x0046a08f:\n            cVar8 = unaff_RSI;\n            if (pcVar6 != 0) {\n                cVar4 = pcVar6 + ((pcVar6 & 0xffffffff) / 10) * -10;\n                unaff_R15 = pcVar3 + -1;\n                arg1 = in_RAX[1];\n                arg1_00 = *in_RAX;\n                pcVar6 = (pcVar6 & 0xffffffff) / 10;\n                if (arg1 <= unaff_R15) goto code_r0x0046a13c;\ncode_r0x0046a07a:\n                (pcVar3 + -1)[arg1_00] = cVar4 + '0';\n                pcVar3 = unaff_R15;\n                pcVar5 = unaff_RBX;\n                ppcVar9 = unaff_RDI;\n                goto code_r0x0046a08f;\n            }\n            pcVar6 = in_RAX[1];\n            pcVar1 = *in_RAX;\n            pcVar2 = in_RAX[2];\n            if (pcVar3 <= pcVar6) {\n                in_RAX[1] = pcVar6 + -pcVar3;\n                in_RAX[2] = pcVar2 + -pcVar3;\n                if (*0x5d3dd0 == 0) {\n                    *in_RAX = pcVar1 + (-(pcVar2 + -pcVar3) >> 0x3f & pcVar3);\n                    arg1_00 = unaff_RDI;\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x46a10a;\n                    pcVar3 = fcn.0045c6c0(pcVar6 + -pcVar3, pcVar1 + (-(pcVar2 + -pcVar3) >> 0x3f & pcVar3), arg3, \n                                          in_RAX);\n                    arg1_00 = unaff_RDI;\n                }\n                in_RAX[3] = -(pcVar3 + -9);\n                in_RAX = -(pcVar3 + -9) + 8;\n                *(*0x20 + -0x30) = 0x46a12d;\n                fcn.0046a1a0(arg1_00, in_RAX, arg3, in_RAX);\ncode_r0x00469fb9:\n                unaff_RDI = *(*0x20 + 8);\n                while (pcVar6 = unaff_RDI[3],  0 < pcVar6) {\n                    pcVar5 = unaff_RDI[1];\n                    unaff_RBX = *unaff_RDI;\n                    if (pcVar5 <= pcVar6 + -1) goto code_r0x0046a075;\n                    if ((pcVar6 + -1)[unaff_RBX] != '0') break;\n                    unaff_RDI[3] = pcVar6 + -1;\n                }\ncode_r0x00469ff3:\n                pcVar6 = unaff_RDI[3];\n                if (pcVar6 < 1) {\n                    return;\n                }\n                pcVar5 = unaff_RDI[1];\n                unaff_RBX = *unaff_RDI;\n                if (pcVar5 == NULL) goto code_r0x0046a06e;\n                if (*unaff_RBX != '0') {\n                    return;\n                }\n                unaff_RDI[3] = pcVar6 + -1;\n                unaff_RDI[4] = unaff_RDI[4] + -1;\n                pcVar5 = unaff_RDI[1];\n                pcVar6 = *unaff_RDI;\n                unaff_RBX = unaff_RDI[2];\n                if (pcVar5 != NULL) {\n                    unaff_RSI = pcVar5 + -1;\n                    unaff_RDI[1] = unaff_RSI;\n                    unaff_RDI[2] = unaff_RBX + -1;\n                    if (*0x5d3dd0 == 0) {\n                        *unaff_RDI = pcVar6 + (-(unaff_RBX + -1) >> 0x3f & 1);\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x46a058;\n                        fcn.0045c6c0(pcVar5, pcVar6 + (-(unaff_RBX + -1) >> 0x3f & 1), arg3, in_RAX);\n                    }\n                    goto code_r0x00469ff3;\n                }\n                *(*0x20 + -0x30) = 0x46a06e;\n                fcn.0045cb00(0);\ncode_r0x0046a06e:\n                *(*0x20 + -0x30) = 0x46a075;\n                fcn.0045ca40(pcVar5);\ncode_r0x0046a075:\n                *(*0x20 + -0x30) = 0x46a07a;\n                pcVar3 = fcn.0045ca40(pcVar5);\n                cVar4 = pcVar5;\n                goto code_r0x0046a07a;\n            }\n            *(*0x20 + -0x30) = 0x46a13c;\n            arg1 = unaff_RBX;\n            fcn.0045cb20(pcVar6);\n            unaff_RBX = pcVar5;\n            unaff_RDI = ppcVar9;\ncode_r0x0046a13c:\n            *(*0x20 + -0x30) = 0x46a147;\n            in_RAX = fcn.0045ca60(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        puVar7[0x28] = cVar8;\n        puVar7[0x29] = arg3;\n        *(puVar7 + -8) = 0x46a16b;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = puVar7[0x28];\n        arg3 = puVar7[0x29];\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2230
    },
    "0046abc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046abc0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar6;\n    uint8_t *unaff_RDI;\n    uchar in_R8B;\n    uchar in_R9B;\n    uchar in_R10B;\n    uchar uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x30) = in_R8B;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x51) = in_R9B;\n            *(*0x20 + -0x52) = in_R10B;\n            *(*0x20 + 0x20) = unaff_RDI;\n            uVar6 = unaff_RSI;\n            if (arg1 - unaff_RBX < unaff_RSI) {\n                *(*0x20 + 8) = in_RAX;\n                iVar2 = unaff_RSI + unaff_RBX + 2;\n                *(*0x20 + -0x48) = iVar2;\n                *(*0x20 + -0xa0) = 0x46ac46;\n                in_RAX = fcn.00444b80(iVar2);\n                if (in_RAX != *(*0x20 + 8)) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0xa0) = 0x46ac68;\n                    fcn.0045d380(*(*0x20 + 0x10));\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                in_R8B = *(*0x20 + 0x30);\n                in_R9B = *(*0x20 + -0x51);\n                in_R10B = *(*0x20 + -0x52);\n                arg1 = *(*0x20 + -0x48);\n            }\n            arg1_00 = unaff_RBX + 1;\n            iVar2 = in_RAX;\n            uVar4 = unaff_RBX;\n            if (arg1 < arg1_00) {\n                *(*0x20 + -0xa0) = 0x46acc5;\n                iVar2 = fcn.00444c60(unaff_RBX);\n                arg1_00 = in_RAX + 1;\n                uVar4 = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                in_R8B = *(*0x20 + 0x30);\n                in_R9B = *(*0x20 + -0x51);\n                in_R10B = *(*0x20 + -0x52);\n                arg1 = unaff_RBX;\n            }\n            *(iVar2 + uVar4) = in_R8B;\n            while( true ) {\n                *(*0x20 + -0x28) = arg1_00;\n                if (uVar6 == 0) {\n                    if (arg1 < arg1_00 + 1) {\n                        *(*0x20 + -0xa0) = 0x46af8a;\n                        iVar2 = fcn.00444c60(arg1_00);\n                        in_R8B = *(*0x20 + 0x30);\n                        arg1_00 = *(*0x20 + -0x28);\n                    }\n                    *(iVar2 + arg1_00) = in_R8B;\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x30) = uVar6;\n                uVar1 = *unaff_RDI;\n                if (*unaff_RDI < 0x80) {\n                    unaff_RBX = 1;\n                    unaff_RSI = uVar6;\n                }\n                else {\n                    *(*0x20 + -0x38) = arg1;\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0xa0) = 0x46ad65;\n                    uVar1 = fcn.00464f20();\n                    arg1 = *(*0x20 + -0x38);\n                    unaff_RSI = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    in_R8B = *(*0x20 + 0x30);\n                    in_R9B = *(*0x20 + -0x51);\n                    in_R10B = *(*0x20 + -0x52);\n                    arg1_00 = *(*0x20 + -0x28);\n                    iVar2 = *(*0x20 + -0x20);\n                    unaff_RBX = uVar6;\n                }\n                *(*0x20 + -0x50) = unaff_RBX;\n                if ((unaff_RBX == 1) && (uVar1 == 0xfffd)) {\n                    uVar6 = arg1_00 + 2;\n                    uVar4 = arg1_00;\n                    if (arg1 < uVar6) {\n                        *(*0x20 + -0x40) = uVar6;\n                        *(*0x20 + -0xa0) = 0x46ade5;\n                        iVar2 = fcn.00444c60(arg1_00);\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar4 = *(*0x20 + -0x28);\n                        uVar6 = *(*0x20 + -0x40);\n                        arg1 = arg1_00;\n                    }\n                    *(iVar2 + uVar4) = 0x785c;\n                    arg1_01 = uVar4 + 3;\n                    uVar7 = *((*unaff_RDI >> 4) + 0x4ca870);\n                    iVar3 = iVar2;\n                    if (arg1 < arg1_01) {\n                        *(*0x20 + -0x53) = uVar7;\n                        *(*0x20 + -0xa0) = 0x46ae5f;\n                        iVar3 = fcn.00444c60(uVar6);\n                        arg1_01 = iVar2 + 1;\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar4 = *(*0x20 + -0x28);\n                        uVar7 = *(*0x20 + -0x53);\n                        arg1 = uVar6;\n                    }\n                    *(uVar4 + 2 + iVar3) = uVar7;\n                    arg1_00 = arg1_01 + 1;\n                    uVar7 = *((*unaff_RDI & 0xf) + 0x4ca870);\n                    iVar2 = iVar3;\n                    uVar6 = arg1_01;\n                    if (arg1 < arg1_00) {\n                        *(*0x20 + -0x28) = arg1_01;\n                        *(*0x20 + -0x53) = uVar7;\n                        *(*0x20 + -0xa0) = 0x46aede;\n                        iVar2 = fcn.00444c60(arg1_01);\n                        arg1_00 = iVar3 + 1;\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar6 = *(*0x20 + -0x28);\n                        uVar7 = *(*0x20 + -0x53);\n                        arg1 = arg1_01;\n                    }\n                    *(iVar2 + uVar6) = uVar7;\n                }\n                else {\n                    *(*0x20 + -0xa0) = 0x46af34;\n                    iVar2 = fcn.0046b180(arg1);\n                    unaff_RSI = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    in_R8B = *(*0x20 + 0x30);\n                    in_R9B = *(*0x20 + -0x51);\n                    in_R10B = *(*0x20 + -0x52);\n                    unaff_RBX = *(*0x20 + -0x50);\n                }\n                if (unaff_RSI < unaff_RBX) break;\n                uVar6 = unaff_RSI - unaff_RBX;\n                unaff_RDI = unaff_RDI + (unaff_RBX & -uVar6 >> 0x3f);\n            }\n            *(*0x20 + -0xa0) = 0x46afc5;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.0045cb00(unaff_RSI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        puVar5[0x30] = in_R8B;\n        puVar5[0x31] = in_R9B;\n        puVar5[0x32] = in_R10B;\n        *(puVar5 + -8) = 0x46aff3;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        in_R8B = puVar5[0x30];\n        in_R9B = puVar5[0x31];\n        in_R10B = puVar5[0x32];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2692
    },
    "0046b9a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0046b9a0(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            while( true ) {\n                if (unaff_RBX == 0) {\n                    return 1;\n                }\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x30) = 0x46b9dd;\n                iVar1 = fcn.00464f20();\n                uVar2 = *(*0x20 + -0x18);\n                if (uVar2 < unaff_RBX) break;\n                uVar2 = uVar2 - unaff_RBX;\n                in_RAX = (-uVar2 >> 0x3f & unaff_RBX) + *(*0x20 + -0x10);\n                if (unaff_RBX < 2) {\n                    if (iVar1 == 0xfffd) {\n                        return 0;\n                    }\n                    if (iVar1 < 0x20) {\n                        unaff_RBX = uVar2;\n                        if (iVar1 != 9) {\n                            return 0;\n                        }\n                    }\n                    else if ((iVar1 == 0x60) || (unaff_RBX = uVar2,  iVar1 == 0x7f)) {\n                        return 0;\n                    }\n                }\n                else {\n                    unaff_RBX = uVar2;\n                    if (iVar1 == 0xfeff) {\n                        return 0;\n                    }\n                }\n            }\n            *(*0x20 + -0x30) = 0x46ba6e;\n            in_RAX = fcn.0045cb00(uVar2);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x46ba7e;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 636
    },
    "0046fce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0046fce0(void)\n\n{\n    int64_t iVar1;\n    int64_t arg2;\n    int64_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    char cVar6;\n    ulong *in_RAX;\n    int64_t iVar7;\n    int64_t arg1;\n    int64_t *arg1_00;\n    ulong uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t *unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t **arg3_00;\n    int64_t **ppiVar12;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar8 = in_RAX[1];\n            arg1 = in_RAX[4];\n            iVar1 = in_RAX[3];\n            iVar7 = iVar1;\n            if (in_RAX[5] < arg1 + 1U) {\n                *(*0x20 + -0x88) = uVar8;\n                *(*0x20 + -0xd8) = 0x46fd45;\n                arg3 = iVar1;\n                iVar7 = fcn.00444c60(arg1);\n                arg2 = *(*0x20 + 8);\n                *(arg2 + 0x28) = arg1;\n                if (*0x5d3dd0 == 0) {\n                    *(arg2 + 0x18) = iVar7;\n                }\n                else {\n                    *(*0x20 + -0xd8) = 0x46fd6b;\n                    iVar7 = fcn.0045c5a0(arg1, arg2, arg3, in_R9);\n                }\n                uVar8 = *(*0x20 + -0x88);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                arg1 = iVar1;\n            }\n            in_RAX[4] = arg1 + 1;\n            *(iVar7 + arg1 * 8) = uVar8;\n            if (*unaff_RBX == 0) {\n                in_RAX[6] = -*(unaff_RBX + 0x15) & (*(unaff_RBX + 0x15) + in_RAX[6]) - 1;\n                return NULL;\n            }\n            *(*0x20 + -0x50) = *in_RAX;\n            uVar3 = *(in_RAX + 0xc);\n            uVar4 = *(in_RAX + 2);\n            uVar5 = *(in_RAX + 0x14);\n            *(*0x20 + -0x48) = *(in_RAX + 1);\n            *(*0x20 + -0x44) = uVar3;\n            *(*0x20 + -0x40) = uVar4;\n            *(*0x20 + -0x3c) = uVar5;\n            uVar3 = *(in_RAX + 0x1c);\n            uVar4 = *(in_RAX + 4);\n            uVar5 = *(in_RAX + 0x24);\n            *(*0x20 + -0x38) = *(in_RAX + 3);\n            *(*0x20 + -0x34) = uVar3;\n            *(*0x20 + -0x30) = uVar4;\n            *(*0x20 + -0x2c) = uVar5;\n            uVar3 = *(in_RAX + 0x2c);\n            uVar4 = *(in_RAX + 6);\n            uVar5 = *(in_RAX + 0x34);\n            *(*0x20 + -0x28) = *(in_RAX + 5);\n            *(*0x20 + -0x24) = uVar3;\n            *(*0x20 + -0x20) = uVar4;\n            *(*0x20 + -0x1c) = uVar5;\n            uVar3 = *(in_RAX + 0x3c);\n            uVar4 = *(in_RAX + 8);\n            uVar5 = *(in_RAX + 0x44);\n            *(*0x20 + -0x18) = *(in_RAX + 7);\n            *(*0x20 + -0x14) = uVar3;\n            *(*0x20 + -0x10) = uVar4;\n            *(*0x20 + -0xc) = uVar5;\n            *(*0x20 + -0xd8) = 0x46fdde;\n            cVar6 = fcn.00470240(0);\n            if (cVar6 != '\\0') {\n                return NULL;\n            }\n            if (*0x5d3dd0 == 0) {\n                arg3_00 = *(*0x20 + 8);\n                *arg3_00 = *(*0x20 + -0x50);\n                uVar3 = *(*0x20 + -0x44);\n                uVar4 = *(*0x20 + -0x40);\n                uVar5 = *(*0x20 + -0x3c);\n                *(arg3_00 + 1) = *(*0x20 + -0x48);\n                *(arg3_00 + 0xc) = uVar3;\n                *(arg3_00 + 2) = uVar4;\n                *(arg3_00 + 0x14) = uVar5;\n                uVar3 = *(*0x20 + -0x34);\n                uVar4 = *(*0x20 + -0x30);\n                uVar5 = *(*0x20 + -0x2c);\n                *(arg3_00 + 3) = *(*0x20 + -0x38);\n                *(arg3_00 + 0x1c) = uVar3;\n                *(arg3_00 + 4) = uVar4;\n                *(arg3_00 + 0x24) = uVar5;\n                uVar3 = *(*0x20 + -0x24);\n                uVar4 = *(*0x20 + -0x20);\n                uVar5 = *(*0x20 + -0x1c);\n                *(arg3_00 + 5) = *(*0x20 + -0x28);\n                *(arg3_00 + 0x2c) = uVar3;\n                *(arg3_00 + 6) = uVar4;\n                *(arg3_00 + 0x34) = uVar5;\n                uVar3 = *(*0x20 + -0x14);\n                uVar4 = *(*0x20 + -0x10);\n                uVar5 = *(*0x20 + -0xc);\n                *(arg3_00 + 7) = *(*0x20 + -0x18);\n                *(arg3_00 + 0x3c) = uVar3;\n                *(arg3_00 + 8) = uVar4;\n                *(arg3_00 + 0x44) = uVar5;\n            }\n            else {\n                *(*0x20 + -0xd8) = 0x46fe56;\n                fcn.00411220(*0x20 + -0x50);\n                arg3_00 = *(*0x20 + 8);\n            }\n            in_R9 = **(*0x20 + 0x10);\n            uVar9 = *(*(*0x20 + 0x10) + 0x15);\n            arg3_00[6] = -uVar9 & arg3_00[6] + (uVar9 - 1);\n            *(*0x20 + -0x80) = in_XMM15;\n            *(*0x20 + -0x70) = in_XMM15;\n            *(*0x20 + -0x60) = in_XMM15;\n            *(*0x20 + -0x80) = 1;\n            *(*0x20 + -0x70) = in_R9;\n            piVar10 = arg3_00[6];\n            *(*0x20 + -0x68) = piVar10;\n            arg1_00 = arg3_00[1];\n            piVar2 = *arg3_00;\n            unaff_RBX = piVar2;\n            ppiVar12 = arg3_00;\n            if (arg3_00[2] < arg1_00 + 1U) {\n                *(*0x20 + -0x90) = in_R9;\n                *(*0x20 + -0xd8) = 0x46fed6;\n                unaff_RBX = fcn.00444c60(arg1_00);\n                ppiVar12 = *(*0x20 + 8);\n                ppiVar12[2] = arg1_00;\n                if (*0x5d3dd0 == 0) {\n                    *ppiVar12 = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0xd8) = 0x46fef5;\n                    unaff_RBX = fcn.0045c5a0(arg1_00, piVar10, arg3_00, in_R9);\n                }\n                in_R9 = *(*0x20 + -0x90);\n                arg1_00 = piVar2;\n            }\n            ppiVar12[1] = arg1_00 + 1;\n            piVar10 = unaff_RBX + arg1_00 * 6;\n            uVar3 = *(*0x20 + -0x7c);\n            uVar4 = *(*0x20 + -0x78);\n            uVar5 = *(*0x20 + -0x74);\n            *piVar10 = *(*0x20 + -0x80);\n            *(piVar10 + 4) = uVar3;\n            *(piVar10 + 1) = uVar4;\n            *(piVar10 + 0xc) = uVar5;\n            uVar3 = *(*0x20 + -0x6c);\n            uVar4 = *(*0x20 + -0x68);\n            uVar5 = *(*0x20 + -100);\n            *(unaff_RBX + arg1_00 * 6 + 2) = *(*0x20 + -0x70);\n            *(unaff_RBX + arg1_00 * 0x30 + 0x14) = uVar3;\n            *(unaff_RBX + arg1_00 * 6 + 3) = uVar4;\n            *(unaff_RBX + arg1_00 * 0x30 + 0x1c) = uVar5;\n            uVar3 = *(*0x20 + -0x5c);\n            uVar4 = *(*0x20 + -0x58);\n            uVar5 = *(*0x20 + -0x54);\n            *(unaff_RBX + arg1_00 * 6 + 4) = *(*0x20 + -0x60);\n            *(unaff_RBX + arg1_00 * 0x30 + 0x24) = uVar3;\n            *(unaff_RBX + arg1_00 * 6 + 5) = uVar4;\n            *(unaff_RBX + arg1_00 * 0x30 + 0x2c) = uVar5;\n            ppiVar12[6] = ppiVar12[6] + in_R9;\n            piVar10 = ppiVar12[1];\n            if (piVar10 - 1U < piVar10) {\n                return *ppiVar12 + piVar10 * 6 + -6;\n            }\n            *(*0x20 + -0xd8) = 0x46ffaf;\n            in_RAX = fcn.0045ca40(piVar10);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + -8) = 0x46ffbf;\n        fcn.0045a360();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 2863
    },
    "0046ffe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0046ffe0(void)\n\n{\n    uint *puVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t arg2;\n    uint64_t arg1;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    char cVar7;\n    int64_t in_RAX;\n    int64_t iVar8;\n    uchar uVar9;\n    int64_t iVar10;\n    int64_t *arg2_00;\n    int64_t *piVar11;\n    int64_t unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    ulong arg3;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar10 = *(in_RAX + 0x20);\n            iVar3 = *(in_RAX + 0x18);\n            arg3 = *(in_RAX + 8);\n            iVar8 = iVar3;\n            if (*(in_RAX + 0x28) < iVar10 + 1U) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x40) = arg3;\n                *(*0x20 + -0x90) = 0x470045;\n                iVar8 = fcn.00444c60(iVar10);\n                arg2 = *(*0x20 + 8);\n                *(arg2 + 0x28) = iVar10;\n                if (*0x5d3dd0 == 0) {\n                    *(arg2 + 0x18) = iVar8;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x47006b;\n                    iVar8 = fcn.0045c5a0(iVar10, arg2, arg3, in_R9);\n                }\n                arg3 = *(*0x20 + -0x40);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar10 = iVar3;\n            }\n            in_R9 = iVar10 + 1;\n            *(in_RAX + 0x20) = in_R9;\n            *(iVar8 + iVar10 * 8) = arg3;\n            uVar2 = *(unaff_RBX + 0x17);\n            if (((uVar2 & 0x20) == 0) || (*(unaff_RBX + 8) != 0)) {\n                *(*0x20 + -0x90) = 0x4700b8;\n                cVar7 = fcn.00470980(8, uVar2, arg3);\n                uVar9 = 1;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x4700d2;\n                cVar7 = fcn.00470980(8, uVar2, arg3);\n                uVar9 = 0;\n            }\n            if (cVar7 != '\\0') {\n                return 0;\n            }\n            arg2_00 = *(*0x20 + 8);\n            arg2_00[6] = arg2_00[6] + 7U & 0xfffffffffffffff8;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x38) = 1;\n            *(*0x20 + -0x28) = 8;\n            *(*0x20 + -0x20) = arg2_00[6];\n            iVar10 = arg2_00[1];\n            iVar3 = *arg2_00;\n            piVar11 = arg2_00;\n            unaff_RBX = iVar3;\n            if (arg2_00[2] < iVar10 + 1U) {\n                *(*0x20 + -0x41) = uVar9;\n                *(*0x20 + -0x90) = 0x470149;\n                iVar8 = iVar10;\n                unaff_RBX = fcn.00444c60(iVar10);\n                piVar11 = *(*0x20 + 8);\n                piVar11[2] = iVar10;\n                if (*0x5d3dd0 == 0) {\n                    *piVar11 = unaff_RBX;\n                    iVar10 = iVar3;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x470168;\n                    unaff_RBX = fcn.0045c5a0(iVar10, arg2_00, iVar8, in_R9);\n                    iVar10 = iVar3;\n                }\n            }\n            piVar11[1] = iVar10 + 1;\n            puVar1 = unaff_RBX + iVar10 * 0x30;\n            uVar4 = *(*0x20 + -0x34);\n            uVar5 = *(*0x20 + -0x30);\n            uVar6 = *(*0x20 + -0x2c);\n            *puVar1 = *(*0x20 + -0x38);\n            puVar1[1] = uVar4;\n            puVar1[2] = uVar5;\n            puVar1[3] = uVar6;\n            iVar10 = unaff_RBX + iVar10 * 0x30;\n            uVar4 = *(*0x20 + -0x24);\n            uVar5 = *(*0x20 + -0x20);\n            uVar6 = *(*0x20 + -0x1c);\n            *(iVar10 + 0x10) = *(*0x20 + -0x28);\n            *(iVar10 + 0x14) = uVar4;\n            *(iVar10 + 0x18) = uVar5;\n            *(iVar10 + 0x1c) = uVar6;\n            uVar4 = *(*0x20 + -0x14);\n            uVar5 = *(*0x20 + -0x10);\n            uVar6 = *(*0x20 + -0xc);\n            *(iVar10 + 0x20) = *(*0x20 + -0x18);\n            *(iVar10 + 0x24) = uVar4;\n            *(iVar10 + 0x28) = uVar5;\n            *(iVar10 + 0x2c) = uVar6;\n            piVar11[6] = piVar11[6] + 8;\n            arg1 = piVar11[1];\n            if (arg1 - 1 < arg1) {\n                return arg1 * 0x30 + *piVar11 + -0x30;\n            }\n            *(*0x20 + -0x90) = 0x470205;\n            in_RAX = fcn.0045ca40(arg1);\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x470215;\n        fcn.0045a360();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1746
    },
    "00470240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00470240(int64_t arg1)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uint64_t arg2;\n    uint64_t *unaff_RBX;\n    uint64_t in_R8;\n    int64_t arg3;\n    uint *in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uint64_t *puStackX16;\n    uint64_t uStack168;\n    uint64_t uStack160;\n    ulong uStack144;\n    uchar auStack136 [8];\n    uint uStack128;\n    uint uStack124;\n    uchar auStack120 [8];\n    uint uStack112;\n    uint uStack108;\n    uchar auStack104 [8];\n    ulong uStack96;\n    uchar auStack88 [8];\n    uint uStack80;\n    uint uStack76;\n    uchar auStack72 [8];\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [8];\n    ulong uStack48;\n    uchar auStack40 [8];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [8];\n    uint uStack16;\n    uint uStack12;\n    \n    while (auStack136 < *(unaff_R14 + 0x10) || auStack136 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n        puStackX16 = unaff_RBX;\n    }\n    uVar7 = *(unaff_RBX + 0x17) & 0x1f;\n    if (0x10 < uVar7) {\n        if (uVar7 < 0x17) {\n            if (uVar7 < 0x14) {\n                if (uVar7 == 0x11) {\n                    if (unaff_RBX[8] == 0) {\n                        return 1;\n                    }\n                    if (unaff_RBX[8] == 1) {\n                        uVar4 = fcn.00470240(arg1);\n                        return uVar4;\n                    }\n                    return 0;\n                }\n            }\n            else if (uVar7 == 0x14) {\n                uVar4 = fcn.00470980(8, 0x14, in_R8);\n                return uVar4;\n            }\n        }\n        else {\n            if (uVar7 < 0x19) {\n                if (uVar7 == 0x17) {\n                    uVar4 = fcn.00470980(8, 0x17, in_R8);\n                    return uVar4;\n                }\n                uVar4 = fcn.00470980(8, uVar7, in_R8);\n                return uVar4;\n            }\n            if (uVar7 == 0x19) {\n                uStack160 = unaff_RBX[8];\n                uStack168 = 0;\n                puStackX16 = unaff_RBX;\n                goto code_r0x00470578;\n            }\n            if (uVar7 != 0x1a) goto code_r0x00470515;\n        }\n        uVar4 = fcn.00470980(*unaff_RBX, *unaff_RBX, in_R8);\n        return uVar4;\n    }\n    if (uVar7 < 0xc) {\n        if (uVar7 < 7) {\n            in_R8 = uVar7 - 1;\n            if (in_R8 < 5) goto code_r0x0047036b;\n            if (uVar7 == 6) {\ncode_r0x0047039f:\n                uVar4 = fcn.00470980(8, uVar7, in_R8);\n                return uVar4;\n            }\n        }\n        else {\n            if (uVar7 < 0xb) goto code_r0x0047036b;\n            if (uVar7 == 0xb) goto code_r0x0047039f;\n        }\ncode_r0x00470515:\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.00434aa0();\n        fcn.004348c0();\n        fcn.00432920();\n        do {\n            uStack168 = uStack168 + 1;\ncode_r0x00470578:\n            if (uStack160 <= uStack168) {\n                return 1;\n            }\n            if (puStackX16[8] <= uStack168) {\n                uVar4 = fcn.0045ca40(puStackX16[8]);\n                return uVar4;\n            }\n            cVar2 = fcn.00470240((*(puStackX16[7] + 0x10 + uStack168 * 0x18) >> 1) + arg1);\n        } while (cVar2 != '\\0');\n        return 0;\n    }\n    if (0xe < uVar7) {\n        if (uVar7 == 0xf) {\n            if ((*0x564548 < in_RAX[8] + 2) || (*0x564550 < 4)) {\n                uVar4 = 0;\n            }\n            else {\n                for (iVar9 = 0; iVar9 < 2; iVar9 = iVar9 + 1) {\n                    uStack96 = SUB168(in_XMM15 >> 0x40, 0);\n                    _auStack104 = CONCAT88(arg1 + iVar9 * 4, 4);\n                    _auStack88 = CONCAT88(uStack96, 4);\n                    _auStack72 = CONCAT88(in_RAX[8], SUB168(in_XMM15, 0));\n                    iVar6 = in_RAX[1];\n                    iVar5 = *in_RAX;\n                    iVar3 = iVar5;\n                    if (in_RAX[2] < iVar6 + 1U) {\n                        iVar10 = iVar9;\n                        iVar8 = iVar6;\n                        iVar3 = fcn.00444c60(iVar6);\n                        in_RAX[2] = iVar6;\n                        if (*0x5d3dd0 == 0) {\n                            *in_RAX = iVar3;\n                            iVar6 = iVar5;\n                        }\n                        else {\n                            iVar3 = fcn.0045c5a0(iVar6, iVar10, iVar8, in_R9);\n                            iVar6 = iVar5;\n                        }\n                    }\n                    in_RAX[1] = iVar6 + 1;\n                    in_R9 = iVar3 + iVar6 * 0x30;\n                    *in_R9 = auStack104._0_4_;\n                    in_R9[1] = auStack104._4_4_;\n                    in_R9[2] = uStack96;\n                    in_R9[3] = uStack96._4_4_;\n                    iVar3 = iVar3 + iVar6 * 0x30;\n                    *(iVar3 + 0x10) = auStack88._0_4_;\n                    *(iVar3 + 0x14) = auStack88._4_4_;\n                    *(iVar3 + 0x18) = uStack80;\n                    *(iVar3 + 0x1c) = uStack76;\n                    *(iVar3 + 0x20) = auStack72._0_4_;\n                    *(iVar3 + 0x24) = auStack72._4_4_;\n                    *(iVar3 + 0x28) = uStack64;\n                    *(iVar3 + 0x2c) = uStack60;\n                    in_RAX[8] = in_RAX[8] + 1;\n                }\n                uVar4 = 1;\n            }\n            return uVar4;\n        }\n        if ((in_RAX[8] + 2 <= *0x564548) && (7 < *0x564550)) {\n            for (iVar9 = 0; iVar9 < 2; iVar9 = iVar9 + 1) {\n                uStack144 = SUB168(in_XMM15 >> 0x40, 0);\n                iVar6 = arg1 + iVar9 * 8;\n                _auStack136 = CONCAT88(uStack144, 8);\n                _auStack120 = CONCAT88(in_RAX[8], SUB168(in_XMM15, 0));\n                iVar5 = in_RAX[1];\n                iVar10 = *in_RAX;\n                iVar3 = iVar10;\n                if (in_RAX[2] < iVar5 + 1U) {\n                    iVar8 = iVar9;\n                    arg3 = iVar5;\n                    iVar3 = fcn.00444c60(iVar5);\n                    in_RAX[2] = iVar5;\n                    if (*0x5d3dd0 == 0) {\n                        *in_RAX = iVar3;\n                        iVar5 = iVar10;\n                    }\n                    else {\n                        iVar3 = fcn.0045c5a0(iVar5, iVar8, arg3, in_R9);\n                        iVar5 = iVar10;\n                    }\n                }\n                in_RAX[1] = iVar5 + 1;\n                in_R9 = iVar3 + iVar5 * 0x30;\n                uStack144._0_4_ = iVar6;\n                uStack144._4_4_ = iVar6 >> 0x20;\n                *in_R9 = 4;\n                in_R9[1] = 0;\n                in_R9[2] = uStack144;\n                in_R9[3] = uStack144._4_4_;\n                iVar3 = iVar3 + iVar5 * 0x30;\n                *(iVar3 + 0x10) = auStack136._0_4_;\n                *(iVar3 + 0x14) = auStack136._4_4_;\n                *(iVar3 + 0x18) = uStack128;\n                *(iVar3 + 0x1c) = uStack124;\n                *(iVar3 + 0x20) = auStack120._0_4_;\n                *(iVar3 + 0x24) = auStack120._4_4_;\n                *(iVar3 + 0x28) = uStack112;\n                *(iVar3 + 0x2c) = uStack108;\n                in_RAX[8] = in_RAX[8] + 1;\n            }\n            return 1;\n        }\n        return 0;\n    }\n    if (uVar7 != 0xc) {\n        uVar7 = *unaff_RBX;\n        if ((*0x564548 < in_RAX[8] + 1) || (*0x564550 < uVar7)) {\n            uVar4 = 0;\n        }\n        else {\n            for (iVar9 = 0; iVar9 < 1; iVar9 = iVar9 + 1) {\n                uStack48 = SUB168(in_XMM15 >> 0x40, 0);\n                _auStack56 = CONCAT88(arg1 + iVar9 * uVar7, 4);\n                _auStack40 = CONCAT88(uStack48, uVar7);\n                _auStack24 = CONCAT88(in_RAX[8], SUB168(in_XMM15, 0));\n                iVar6 = in_RAX[1];\n                iVar5 = *in_RAX;\n                iVar3 = iVar5;\n                if (in_RAX[2] < iVar6 + 1U) {\n                    arg2 = uVar7;\n                    iVar10 = iVar9;\n                    iVar8 = iVar6;\n                    iVar3 = fcn.00444c60(iVar6);\n                    in_RAX[2] = iVar6;\n                    if (*0x5d3dd0 == 0) {\n                        *in_RAX = iVar3;\n                        iVar6 = iVar5;\n                    }\n                    else {\n                        iVar3 = fcn.0045c5a0(iVar6, arg2, iVar10, iVar8);\n                        iVar6 = iVar5;\n                    }\n                }\n                in_RAX[1] = iVar6 + 1;\n                puVar1 = iVar3 + iVar6 * 0x30;\n                *puVar1 = auStack56._0_4_;\n                puVar1[1] = auStack56._4_4_;\n                puVar1[2] = uStack48;\n                puVar1[3] = uStack48._4_4_;\n                iVar3 = iVar3 + iVar6 * 0x30;\n                *(iVar3 + 0x10) = auStack40._0_4_;\n                *(iVar3 + 0x14) = auStack40._4_4_;\n                *(iVar3 + 0x18) = uStack32;\n                *(iVar3 + 0x1c) = uStack28;\n                *(iVar3 + 0x20) = auStack24._0_4_;\n                *(iVar3 + 0x24) = auStack24._4_4_;\n                *(iVar3 + 0x28) = uStack16;\n                *(iVar3 + 0x2c) = uStack12;\n                in_RAX[8] = in_RAX[8] + 1;\n            }\n            uVar4 = 1;\n        }\n        return uVar4;\n    }\ncode_r0x0047036b:\n    uVar4 = fcn.00470980(*unaff_RBX, *unaff_RBX, in_R8);\n    return uVar4;\n}\n",
        "token_count": 2998
    },
    "00470980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00470980(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    uint *puVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int64_t *in_RAX;\n    int64_t iVar7;\n    int64_t arg1_00;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint64_t unaff_RDI;\n    ulong uVar9;\n    uint64_t arg3_00;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RDI < 9) {\n                if ((unaff_SIL == 0) || (arg1 == 8)) {\n                    if (in_RAX[7] + unaff_RDI <= *0x564558) {\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + 0x20) = unaff_RDI;\n                        *(*0x20 + 0x28) = unaff_SIL;\n                        *(*0x20 + 0x18) = arg1;\n                        for (arg2 = 0; arg2 < unaff_RDI; arg2 = arg2 + 1) {\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            uVar9 = 2;\n                            if ((unaff_SIL & 1 << (arg2 & 0x1f) & -(arg2 < 0x20)) != 0) {\n                                uVar9 = 3;\n                            }\n                            *(*0x20 + -0x38) = uVar9;\n                            *(*0x20 + -0x30) = unaff_RBX + arg2 * arg1;\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x18) = in_RAX[7];\n                            arg1_00 = in_RAX[1];\n                            arg3_00 = arg1_00 + 1;\n                            iVar2 = *in_RAX;\n                            iVar7 = iVar2;\n                            if (in_RAX[2] < arg3_00) {\n                                *(*0x20 + -0x40) = arg2;\n                                *(*0x20 + -0x88) = 0x470ae5;\n                                iVar7 = fcn.00444c60(arg1_00);\n                                piVar3 = *(*0x20 + 8);\n                                piVar3[2] = arg1_00;\n                                if (*0x5d3dd0 == 0) {\n                                    *piVar3 = iVar7;\n                                }\n                                else {\n                                    *(*0x20 + -0x88) = 0x470b05;\n                                    iVar7 = fcn.0045c5a0(arg1_00, arg2, arg3_00, arg1);\n                                }\n                                arg2 = *(*0x20 + -0x40);\n                                unaff_SIL = *(*0x20 + 0x28);\n                                unaff_RDI = *(*0x20 + 0x20);\n                                arg1 = *(*0x20 + 0x18);\n                                in_RAX = *(*0x20 + 8);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                arg1_00 = iVar2;\n                            }\n                            in_RAX[1] = arg1_00 + 1;\n                            puVar1 = iVar7 + arg1_00 * 0x30;\n                            uVar4 = *(*0x20 + -0x34);\n                            uVar5 = *(*0x20 + -0x30);\n                            uVar6 = *(*0x20 + -0x2c);\n                            *puVar1 = *(*0x20 + -0x38);\n                            puVar1[1] = uVar4;\n                            puVar1[2] = uVar5;\n                            puVar1[3] = uVar6;\n                            iVar7 = iVar7 + arg1_00 * 0x30;\n                            uVar4 = *(*0x20 + -0x24);\n                            uVar5 = *(*0x20 + -0x20);\n                            uVar6 = *(*0x20 + -0x1c);\n                            *(iVar7 + 0x10) = *(*0x20 + -0x28);\n                            *(iVar7 + 0x14) = uVar4;\n                            *(iVar7 + 0x18) = uVar5;\n                            *(iVar7 + 0x1c) = uVar6;\n                            uVar4 = *(*0x20 + -0x14);\n                            uVar5 = *(*0x20 + -0x10);\n                            uVar6 = *(*0x20 + -0xc);\n                            *(iVar7 + 0x20) = *(*0x20 + -0x18);\n                            *(iVar7 + 0x24) = uVar4;\n                            *(iVar7 + 0x28) = uVar5;\n                            *(iVar7 + 0x2c) = uVar6;\n                            in_RAX[7] = in_RAX[7] + 1;\n                        }\n                        return 1;\n                    }\n                    return 0;\n                }\n                *(*0x20 + -0x88) = 0x470b67;\n                fcn.00432920();\n            }\n            unaff_RBX = 0x4f9bb8;\n            *(*0x20 + -0x88) = 0x470b7a;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        puVar8[0x28] = unaff_SIL;\n        *(puVar8 + -8) = 0x470b99;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        unaff_SIL = puVar8[0x28];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1597
    },
    "00471600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00471600(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        uVar5 = unaff_RDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x200 && *0x20 + -0x200 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x280;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((unaff_RSI >> 9 & 1) != 0) {\n                *(*0x20 + -0x1a0) = unaff_RSI;\n                *(*0x20 + -0x180) = unaff_RDI;\n                *(*0x20 + -0x188) = arg1;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x1b1) = *(arg1 + 0x17);\n                *(*0x20 + -0x288) = 0x47168c;\n                iVar1 = fcn.00475d80(unaff_RSI);\n                uVar5 = *(*0x20 + -0x1b1) & 0x1f | *(*0x20 + -0x1a0) & 0x1e0;\n                if (iVar1 == 0x4fa5c0) {\n                    *(*0x20 + -0x1a8) = uVar5;\n                    *(*0x20 + -400) = unaff_RDI;\n                    *(*0x20 + -0x1b0) = 0x476000;\n                    *(*0x20 + -0xc0) = in_XMM15;\n                    *(*0x20 + -0x290) = unaff_RBP;\n                    *(*0x20 + -0x288) = 0x47170f;\n                    fcn.0045cccf();\n                    uVar3 = *(*0x20 + -0x290);\n                    *(*0x20 + -0x288) = 0x47171d;\n                    fcn.00472820();\n                    *(*0x20 + -0xc0) = *(*0x20 + -0x280);\n                    *(*0x20 + -0x290) = uVar3;\n                    *(*0x20 + -0x288) = 0x47174f;\n                    fcn.0045d006();\n                    *(*0x20 + -0x178) = *(*0x20 + -0xc0);\n                    *(*0x20 + -0x290) = *(*0x20 + -0x290);\n                    *(*0x20 + -0x288) = 0x47178f;\n                    fcn.0045d006();\n                    *(*0x20 + -0x288) = 0x47179f;\n                    puVar2 = fcn.0040c440();\n                    *puVar2 = *(*0x20 + -0x1b0);\n                    if (*0x5d3dd0 == 0) {\n                        puVar2[1] = *(*0x20 + -0xd0);\n                    }\n                    else {\n                        *(*0x20 + -0x288) = 0x4717cb;\n                        puVar2 = fcn.0045c6a0();\n                    }\n                    *(*0x20 + -0x198) = puVar2;\n                    puVar2[2] = *(*0x20 + -0xe8);\n                    uVar5 = *(*0x20 + -200);\n                    *(puVar2 + 3) = *(*0x20 + -200);\n                    iVar1 = *(*0x20 + -0x1a0) >> 10;\n                    puVar2[4] = iVar1;\n                    puVar2[7] = *(*0x20 + -0x1a8);\n                    if (*0x5d3dd0 == 0) {\n                        uVar3 = *(*0x20 + -0x188);\n                        puVar2[5] = uVar3;\n                        puVar2[6] = *(*0x20 + -0x180);\n                    }\n                    else {\n                        uVar3 = *(*0x20 + -0x188);\n                        *(*0x20 + -0x288) = 0x47183b;\n                        fcn.0045c6a0();\n                        *(*0x20 + -0x288) = 0x47184c;\n                        fcn.0045c740(uVar3, uVar5, iVar1);\n                    }\n                    *(*0x20 + -0x288) = 0x471865;\n                    fcn.00473820(uVar3, uVar5, iVar1);\n                    return;\n                }\n                arg1 = 0x4c3000;\n                *(*0x20 + -0x288) = 0x4718a9;\n                fcn.00409ac0(0x4c3000);\n            }\n            unaff_RBX = 0x4f9c78;\n            *(*0x20 + -0x288) = 0x4718bc;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = uVar5;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + -8) = 0x4718db;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1505
    },
    "00471900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00471900(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong *unaff_RBX;\n    uint64_t uVar4;\n    ulong uStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack80 = *unaff_RBX;\n    uStack72 = *(unaff_RBX + 1);\n    uStack68 = *(unaff_RBX + 0xc);\n    uStack64 = *(unaff_RBX + 2);\n    uStack60 = *(unaff_RBX + 0x14);\n    uStack56 = *(unaff_RBX + 3);\n    uStack52 = *(unaff_RBX + 0x1c);\n    uStack48 = *(unaff_RBX + 4);\n    uStack44 = *(unaff_RBX + 0x24);\n    uStack40 = *(unaff_RBX + 5);\n    uStack36 = *(unaff_RBX + 0x2c);\n    uStack32 = *(unaff_RBX + 6);\n    uStack28 = *(unaff_RBX + 0x34);\n    uStack24 = *(unaff_RBX + 7);\n    uStack20 = *(unaff_RBX + 0x3c);\n    uStack16 = *(unaff_RBX + 8);\n    uStack12 = *(unaff_RBX + 0x44);\n    iVar2 = 0;\n    while( true ) {\n        if (8 < iVar2) {\n            return;\n        }\n        uVar3 = iVar2 >> 3;\n        if (1 < uVar3) break;\n        uVar4 = iVar2 + uVar3 * -8;\n        if (uVar4 < 0) {\n            fcn.004316c0();\n            break;\n        }\n        if ((1 << (uVar4 & 0x1f) & -(uVar4 < 0x20) & *(in_RAX + 0x18 + uVar3)) == 0) {\n            unaff_RBX[iVar2 + 0x18] = 0;\n        }\n        else {\n            unaff_RBX[iVar2 + 0x18] = (&uStack80)[iVar2];\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0045ca40(2);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 659
    },
    "00472100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00472100(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar2 = param_1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x28);\n            *(*0x20 + -0x20) = 0x472125;\n            fcn.00457e80();\n            *(*0x20 + -0x20) = 0x47212a;\n            iVar1 = fcn.004719c0(param_1, param_2, param_3, param_4);\n            if ((*(*(*0x20 + 8) + 0x14) & 2) == 0) {\n                return iVar1;\n            }\n            if (uVar2 != 0) {\n                return iVar1 + (-(uVar2 - 1) >> 0x3f & 1);\n            }\n            *(*0x20 + -0x20) = 0x472175;\n            in_RAX = fcn.0045cb00(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x472185;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        param_1 = uVar2;\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 469
    },
    "00472820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00472820(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t *arg1;\n    uint uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong *puVar6;\n    uchar *arg1_00;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    uchar *puVar8;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x338 && *0x20 + -0x338 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x3b8;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_XMM15;\n            *(*0x20 + -0x3c8) = *0x20 + -8;\n            *(*0x20 + -0x3c0) = 0x47286f;\n            iVar2 = fcn.0045cccf();\n            unaff_RBP = *(*0x20 + -0x3c8);\n            arg2 = *(iVar2 + 0x17) & 0x1f;\n            if (arg2 == 0x13) {\n                if ((unaff_RBX == 0) || (arg2 = *(unaff_RBX + 0x17) & 0x1f,  arg2 != 0x14)) {\n                    *(*0x20 + 200) = unaff_RBX;\n                    *(*0x20 + 0xc0) = iVar2;\n                    *(*0x20 + -0x270) = iVar2;\n                    *(*0x20 + -0x268) = unaff_RBX;\n                    *(*0x20 + -0x280) = iVar2;\n                    *(*0x20 + -0x278) = unaff_RBX;\n                    arg1_00 = *0x20 + -0x280;\n                    *(*0x20 + -0x3c0) = 0x4728f5;\n                    fcn.004626e0(arg1_00);\n                    if (arg1_00 == '\\0') {\n                        uVar7 = *(*0x20 + 200);\n                        *(*0x20 + -0x3c0) = 0x472a1b;\n                        fcn.00470bc0();\n                        *(*0x20 + 8) = *(*0x20 + -0x3b8);\n                        *(*0x20 + -0x3c8) = unaff_RBP;\n                        *(*0x20 + -0x3c0) = 0x472a4f;\n                        fcn.0045d006();\n                        unaff_RBP = *(*0x20 + -0x3c8);\n                        *(*0x20 + -0x2f0) = *(*0x20 + 0xa0) + *(*0x20 + 0x80);\n                        *(*0x20 + -0x3c0) = 0x472a77;\n                        puVar3 = fcn.0040c440();\n                        *(puVar3 + 0x15) = 8;\n                        *puVar3 = *(*0x20 + -0x2f0) + 7U & 0xfffffffffffffff8;\n                        puVar3[1] = **(*0x20 + 0xb0) << 3;\n                        arg1 = *(*0x20 + 0xb0);\n                        if (*arg1 == 0) {\n                            bVar9 = *(*0x20 + 200) == 0;\ncode_r0x00472afd:\n                            *(*0x20 + -0x2a0) = puVar3;\n                            if (bVar9) {\n                                *(*0x20 + -0x3c0) = 0x472b8b;\n                                fcn.00472100();\n                                uVar4 = 0x4c790a;\n                                param_4 = 1;\n                                *(*0x20 + -0x3c0) = 0x472bb7;\n                                fcn.004486c0(9, arg2, 0x4c790a, 1);\n                            }\n                            else {\n                                *(*0x20 + -0x3c0) = 0x472b0f;\n                                uVar4 = fcn.00472100();\n                                *(*0x20 + -0x288) = uVar4;\n                                *(*0x20 + -0x2e8) = uVar7;\n                                *(*0x20 + -0x3c0) = 0x472b2c;\n                                fcn.00472100();\n                                *(*0x20 + -0x3b8) = 0x4c790a;\n                                *(*0x20 + -0x3b0) = 1;\n                                uVar4 = 0x4c7933;\n                                param_4 = 2;\n                                *(*0x20 + -0x3c0) = 0x472b7c;\n                                fcn.004488a0(0xb, arg2, 0x4c7933, 2);\n                            }\n                            *(*0x20 + -0x3c0) = 0x472bc5;\n                            fcn.00471b60(0, arg2);\n                            *(*0x20 + -0x3c0) = 0x472bca;\n                            uVar1 = fcn.00457f80();\n                            *(*(*0x20 + -0x2a0) + 0x28) = uVar1;\n                            *(*0x20 + -0x3c0) = 0x472be5;\n                            uVar5 = fcn.0040c440();\n                            *(*0x20 + -0x290) = uVar5;\n                            *(*0x20 + -0x3c0) = 0x472bf9;\n                            puVar6 = fcn.0040c440();\n                            *puVar6 = 0x472f00;\n                            if (*0x5d3dd0 == 0) {\n                                uVar5 = *(*0x20 + -0x2a0);\n                                puVar6[1] = uVar5;\n                                arg2 = *(*0x20 + -0x290);\n                                *(arg2 + 0x20) = puVar6;\n                            }\n                            else {\n                                uVar5 = *(*0x20 + -0x2a0);\n                                *(*0x20 + -0x3c0) = 0x472c37;\n                                fcn.0045c6a0();\n                                arg2 = *(*0x20 + -0x290);\n                                *(*0x20 + -0x3c0) = 0x472c48;\n                                fcn.0045c5a0(uVar5, arg2, uVar4, param_4);\n                            }\n                            *(*0x20 + -0x270) = *(*0x20 + 0xc0);\n                            param_3 = *(*0x20 + 200);\n                            *(*0x20 + -0x268) = param_3;\n                            *(*0x20 + -0xd0) = in_XMM15;\n                            *(*0x20 + -0x3c8) = unaff_RBP;\n                            *(*0x20 + -0x3c0) = 0x472c8f;\n                            fcn.0045cccb();\n                            *(*0x20 + -0xd0) = uVar5;\n                            *(*0x20 + -200) = arg2;\n                            *(*0x20 + -0xc0) = *(*0x20 + 8);\n                            *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x472cd2;\n                            fcn.0045d006();\n                            uVar4 = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x472cea;\n                            uVar5 = fcn.00409ba0();\n                            *(*0x20 + -0x298) = uVar5;\n                            *(*0x20 + -0x3c0) = 0x472d06;\n                            fcn.00409ba0();\n                            *(*0x20 + -0x3c0) = 0x472d2b;\n                            fcn.00462980(*(*0x20 + -0x298));\n                            *(*0x20 + -0xd0) = in_XMM15;\n                            *(*0x20 + -0x3c8) = uVar4;\n                            *(*0x20 + -0x3c0) = 0x472d4f;\n                            iVar2 = fcn.0045cccb();\n                            unaff_RBP = *(*0x20 + -0x3c8);\n                            if (iVar2 == 0x4bdc20) {\n                                *(*0x20 + -0xd0) = *0x4bbaa0;\n                                *(*0x20 + -0x3c8) = unaff_RBP;\n                                *(*0x20 + -0x3c0) = 0x472d8f;\n                                fcn.0045cff8();\n                                *(*0x20 + -0x260) = *(*0x20 + -0xd0);\n                                *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                                *(*0x20 + -0x3c0) = 0x472dcf;\n                                fcn.0045cff8();\n                                *(*0x20 + 8) = *(*0x20 + -0x250);\n                                *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                                *(*0x20 + -0x3c0) = 0x472e12;\n                                fcn.0045d006();\n                                return;\n                            }\n                            *(*0x20 + -0x3c0) = 0x472e35;\n                            fcn.004099e0(0x4b6b60);\n                        }\n                        else {\n                            arg2 = *(arg1 + 4);\n                            uVar7 = *(arg1 + 2);\n                            if (arg2 != 0) {\n                                if (*0x5d3dd0 == 0) {\n                                    puVar3[4] = uVar7;\n                                    bVar9 = *(*0x20 + 200) == 0;\n                                }\n                                else {\n                                    *(*0x20 + -0x3c0) = 0x472ae5;\n                                    puVar3 = fcn.0045c6e0(arg1, arg2, param_3, param_4);\n                                    bVar9 = *(*0x20 + 200) == 0;\n                                }\n                                goto code_r0x00472afd;\n                            }\n                        }\n                        *(*0x20 + -0x3c0) = 0x472e3f;\n                        fcn.0045ca40(arg2);\n                    }\n                    else {\n                        *(*0x20 + -0xd0) = in_XMM15;\n                        *(*0x20 + -0x3c8) = unaff_RBP;\n                        *(*0x20 + -0x3c0) = 0x47292f;\n                        iVar2 = fcn.0045cccb();\n                        unaff_RBP = *(*0x20 + -0x3c8);\n                        if (iVar2 == 0x4bdc20) {\n                            *(*0x20 + -0xd0) = *0x4bbaa0;\n                            *(*0x20 + -0x3c8) = unaff_RBP;\n                            *(*0x20 + -0x3c0) = 0x47296f;\n                            fcn.0045cff8();\n                            *(*0x20 + -0x198) = *(*0x20 + -0xd0);\n                            *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x4729af;\n                            fcn.0045cff8();\n                            *(*0x20 + 8) = *(*0x20 + -0x188);\n                            *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x4729f2;\n                            fcn.0045d006();\n                            return;\n                        }\n                    }\n                    *(*0x20 + -0x3c0) = 0x472e4e;\n                    fcn.004099e0(0x4b6b60);\n                }\n                *(*0x20 + -0x3c0) = 0x472e56;\n                fcn.00472100();\n                *(*0x20 + -0x3c0) = 0x472e6f;\n                fcn.00448620(0x2c);\n                *(*0x20 + -0x3c0) = 0x472e74;\n                fcn.00409da0();\n                *(*0x20 + -0x3c0) = 0x472e85;\n                fcn.00432920();\n            }\n            *(*0x20 + -0x3c0) = 0x472e8a;\n            fcn.00472100();\n            *(*0x20 + -0x3c0) = 0x472ea5;\n            fcn.00448620(0x25);\n            *(*0x20 + -0x3c0) = 0x472eaa;\n            unaff_RBX = fcn.00409da0();\n            *(*0x20 + -0x3c0) = 0x472eb9;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar8 + 0xc0) = in_RAX;\n        *(puVar8 + 200) = unaff_RBX;\n        *(puVar8 + -8) = 0x472ecf;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 0xc0);\n        unaff_RBX = *(puVar8 + 200);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3275
    },
    "00472f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00472f40(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar8 = unaff_RBX;\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(arg1 + 8) == 0) {\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            uVar8 = *(arg1 + 0x17) & 0x1f;\n            if (0x14 < uVar8) {\n                if (0x18 < uVar8) {\n                    if (uVar8 == 0x19) {\n                        iVar6 = *(arg1 + 0x40);\n                        *(*0x20 + -0x10) = iVar6;\n                        uVar8 = 0;\n                        while( true ) {\n                            if (iVar6 <= uVar8) {\n                                return;\n                            }\n                            iVar6 = *(arg1 + 0x38);\n                            unaff_RBX = *(arg1 + 0x40);\n                            if (unaff_RBX <= uVar8) break;\n                            *(*0x20 + -0x20) = uVar8;\n                            uVar2 = *(iVar6 + 8 + uVar8 * 0x18);\n                            *(*0x20 + -0x68) = 0x473005;\n                            fcn.00472f40(uVar2);\n                            uVar8 = *(*0x20 + -0x20) + 1;\n                            iVar6 = *(*0x20 + -0x10);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        *(*0x20 + -0x68) = 0x473051;\n                        in_RAX = fcn.0045ca40(unaff_RBX);\n                        goto code_r0x00473051;\n                    }\n                    if (uVar8 != 0x1a) {\n                        return;\n                    }\n                }\n                break;\n            }\n            if (uVar8 == 0x11) {\n                uVar8 = 0;\n                goto code_r0x004731b2;\n            }\n            if (uVar8 - 0x12 < 2) break;\n            if (uVar8 != 0x14) {\n                return;\n            }\n            while( true ) {\n                uVar1 = *in_RAX;\n                uVar8 = unaff_RBX >> 3;\n                if (uVar8 <= uVar1) break;\n                if ((uVar1 & 7) == 0) {\n                    uVar7 = *(in_RAX + 4);\n                    uVar3 = *(in_RAX + 2);\n                    uVar8 = uVar3;\n                    if (*(in_RAX + 6) < uVar7 + 1) {\n                        *(*0x20 + -0x68) = 0x4731f9;\n                        uVar8 = fcn.00444c60(uVar7);\n                        in_RAX = *(*0x20 + 8);\n                        *(in_RAX + 6) = uVar7;\n                        if (*0x5d3dd0 == 0) {\n                            *(in_RAX + 2) = uVar8;\n                        }\n                        else {\n                            *(*0x20 + -0x68) = 0x47321a;\n                            uVar8 = fcn.0045c5a0(uVar7, in_RAX, unaff_RBX, in_R9);\n                        }\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar7 = uVar3;\n                    }\n                    *(in_RAX + 4) = uVar7 + 1;\n                    *(uVar8 + uVar7) = 0;\n                }\n                arg1 = *(in_RAX + 4);\n                if (arg1 <= *in_RAX >> 3) goto code_r0x00473377;\n                *in_RAX = *in_RAX + 1;\n            }\n            if ((uVar1 & 7) == 0) {\n                uVar7 = *(in_RAX + 4);\n                uVar3 = *(in_RAX + 2);\n                uVar8 = uVar3;\n                if (*(in_RAX + 6) < uVar7 + 1) {\n                    *(*0x20 + -0x68) = 0x473278;\n                    uVar8 = fcn.00444c60(uVar7);\n                    in_RAX = *(*0x20 + 8);\n                    *(in_RAX + 6) = uVar7;\n                    if (*0x5d3dd0 == 0) {\n                        *(in_RAX + 2) = uVar8;\n                        uVar7 = uVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x473299;\n                        uVar8 = fcn.0045c5a0(uVar7, in_RAX, unaff_RBX, in_R9);\n                        uVar7 = uVar3;\n                    }\n                }\n                *(in_RAX + 4) = uVar7 + 1;\n                *(uVar8 + uVar7) = 0;\n            }\n            arg1 = *(in_RAX + 4);\n            uVar1 = *in_RAX;\n            in_R9 = uVar1;\n            uVar7 = uVar1 >> 3;\n            if (uVar7 < arg1) {\n                in_R9 = uVar1 & 7;\n                *(*(in_RAX + 2) + uVar7) = *(uVar7 + *(in_RAX + 2)) | 1 << (uVar1 & 7);\n                uVar1 = *in_RAX;\n                *in_RAX = uVar1 + 1;\n                if ((uVar1 + 1 & 7) == 0) {\n                    iVar6 = *(in_RAX + 4);\n                    iVar4 = *(in_RAX + 2);\n                    iVar5 = iVar4;\n                    if (*(in_RAX + 6) < iVar6 + 1U) {\n                        *(*0x20 + -0x68) = 0x473309;\n                        iVar5 = fcn.00444c60(iVar6);\n                        in_RAX = *(*0x20 + 8);\n                        *(in_RAX + 6) = iVar6;\n                        if (*0x5d3dd0 == 0) {\n                            *(in_RAX + 2) = iVar5;\n                            iVar6 = iVar4;\n                        }\n                        else {\n                            *(*0x20 + -0x68) = 0x47332b;\n                            iVar5 = fcn.0045c5a0(iVar6, in_RAX, uVar7, in_R9);\n                            iVar6 = iVar4;\n                        }\n                    }\n                    *(in_RAX + 4) = iVar6 + 1;\n                    *(iVar5 + iVar6) = 0;\n                }\n                arg1 = *(in_RAX + 4);\n                uVar8 = *in_RAX >> 3;\n                if (uVar8 < arg1) {\n                    *(*(in_RAX + 2) + uVar8) = *(uVar8 + *(in_RAX + 2)) | 1 << (*in_RAX & 7);\n                    *in_RAX = *in_RAX + 1;\n                    return;\n                }\n                *(*0x20 + -0x68) = 0x47336f;\n                fcn.0045ca40(arg1);\n            }\n            *(*0x20 + -0x68) = 0x473377;\n            fcn.0045ca40(arg1);\ncode_r0x00473377:\n            *(*0x20 + -0x68) = 0x47337e;\n            in_RAX = fcn.0045ca40(arg1);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = uVar8;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + -8) = 0x473393;\n        fcn.0045a360();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        *0x20 = puVar9;\n    } while( true );\ncode_r0x00473056:\n    uVar1 = *in_RAX;\n    if (unaff_RBX >> 3 <= uVar1) {\n        if ((uVar1 & 7) == 0) {\n            iVar6 = *(in_RAX + 4);\n            iVar4 = *(in_RAX + 2);\n            iVar5 = iVar4;\n            if (*(in_RAX + 6) < iVar6 + 1U) {\n                *(*0x20 + -0x68) = 0x473111;\n                iVar5 = fcn.00444c60(iVar6);\n                in_RAX = *(*0x20 + 8);\n                *(in_RAX + 6) = iVar6;\n                if (*0x5d3dd0 == 0) {\n                    *(in_RAX + 2) = iVar5;\n                    iVar6 = iVar4;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x473132;\n                    iVar5 = fcn.0045c5a0(iVar6, in_RAX, unaff_RBX, in_R9);\n                    iVar6 = iVar4;\n                }\n            }\n            *(in_RAX + 4) = iVar6 + 1;\n            *(iVar5 + iVar6) = 0;\n        }\n        uVar8 = *(in_RAX + 2);\n        arg1 = *(in_RAX + 4);\n        uVar7 = *in_RAX >> 3;\n        if (uVar7 < arg1) {\n            *(uVar8 + uVar7) = *(uVar7 + uVar8) | 1 << (*in_RAX & 7);\n            *in_RAX = *in_RAX + 1;\n        }\n        else {\n            *(*0x20 + -0x68) = 0x473176;\n            fcn.0045ca40(arg1);\ncode_r0x00473176:\n            *(*0x20 + -0x68) = 0x47317d;\n            fcn.0045ca40(arg1);\n            do {\n                *(*0x20 + -0x18) = uVar8;\n                uVar2 = *(arg1 + 0x30);\n                *(*0x20 + -0x68) = 0x47319b;\n                fcn.00472f40(uVar2);\n                uVar8 = *(*0x20 + -0x18) + 1;\n                arg1 = *(*0x20 + 0x18);\ncode_r0x004731b2:\n            } while (*(arg1 + 0x40) != uVar8 && uVar8 <= *(arg1 + 0x40));\n        }\n        return;\n    }\n    if ((uVar1 & 7) == 0) {\n        iVar6 = *(in_RAX + 4);\n        iVar4 = *(in_RAX + 2);\n        iVar5 = iVar4;\n        if (*(in_RAX + 6) < iVar6 + 1U) {\n            *(*0x20 + -0x68) = 0x473092;\n            iVar5 = fcn.00444c60(iVar6);\n            in_RAX = *(*0x20 + 8);\n            *(in_RAX + 6) = iVar6;\n            if (*0x5d3dd0 == 0) {\n                *(in_RAX + 2) = iVar5;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x4730b3;\n                iVar5 = fcn.0045c5a0(iVar6, in_RAX, unaff_RBX, in_R9);\n            }\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar6 = iVar4;\n        }\n        *(in_RAX + 4) = iVar6 + 1;\n        *(iVar5 + iVar6) = 0;\n    }\n    arg1 = *(in_RAX + 4);\n    uVar8 = *in_RAX >> 3;\n    if (arg1 <= uVar8) goto code_r0x00473176;\ncode_r0x00473051:\n    *in_RAX = *in_RAX + 1;\n    goto code_r0x00473056;\n}\n",
        "token_count": 3003
    },
    "00473640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar fcn.00473640(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong *puVar2;\n    uchar *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((arg1 & 0x1f) == 1) {\n        return *unaff_RBX;\n    }\n    uVar1 = fcn.004735e0();\n    puVar2 = fcn.0040c440();\n    puVar2[1] = unaff_RBX;\n    if (*0x5d3dd0 != 0) goto code_r0x004736cd;\n    *puVar2 = uVar1;\n    do {\n        puVar2[2] = arg1 & 0x1f;\n        fcn.00432920();\ncode_r0x004736cd:\n        puVar2 = fcn.0045c6a0(uVar1);\n    } while( true );\n}\n",
        "token_count": 252
    },
    "00473720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00473720(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    code *pcVar4;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    pcVar4 = arg1 & 0x1f;\n    if (pcVar4 == 0x17) {\n        iVar1 = fcn.004722a0();\n        pcVar4 = *(iVar1 + 0x98);\n        iVar1 = (*pcVar4)();\n        if (iVar1 == 8) {\n            return *unaff_RBX;\n        }\n        unaff_RBX = 0x4f9ca8;\n        fcn.00432920();\n    }\n    uVar2 = fcn.004735e0();\n    puVar3 = fcn.0040c440();\n    puVar3[1] = unaff_RBX;\n    if (*0x5d3dd0 != 0) goto code_r0x004737e7;\n    *puVar3 = uVar2;\n    do {\n        puVar3[2] = pcVar4;\n        fcn.00432920();\ncode_r0x004737e7:\n        puVar3 = fcn.0045c6a0(uVar2);\n    } while( true );\n}\n",
        "token_count": 343
    },
    "00473820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00473820(int64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    uint8_t *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t arg1_00;\n    uint64_t noname_1_00;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            noname_1_00 = *(arg1 + 0x17) & 0x1f;\n            if (noname_1_00 == 0x14) {\n                noname_1_00 = *(arg1 + 0x38);\n                if (arg3 <= *(arg1 + 0x40) && *(arg1 + 0x40) != arg3) {\n                    *(*0x20 + -0x20) = unaff_RDI;\n                    *(*0x20 + -0x28) = noname_1_00;\n                    *(*0x20 + -0x80) = 0x4738a5;\n                    puVar2 = fcn.00457e80();\n                    if ((*puVar2 & 1) != 0) {\n                        noname_1_00 = **(*0x20 + -0x20);\n                        if (noname_1_00 != 0) {\n                            uVar4 = *(noname_1_00 + 8);\n                            if (*(*0x20 + 0x30) < 100000) {\n                                *(*0x20 + -0x30) = noname_1_00;\n                                *(*0x20 + -0x38) = uVar4;\n                                *(*0x20 + -0x80) = 0x473909;\n                                fcn.00457ec0();\n                                return *(*0x20 + -0x38);\n                            }\n                            goto code_r0x00473a2e;\n                        }\n                        goto code_r0x00473a38;\n                    }\n                    goto code_r0x00473a7c;\n                }\n            }\n            else {\n                *(*0x20 + -0x80) = 0x473930;\n                iVar3 = fcn.004721c0();\n                if (*(*0x20 + 0x30) < unaff_RBX) {\n                    iVar5 = *(*0x20 + 0x30) * 0x10;\n                    uVar1 = *(iVar3 + 4 + iVar5);\n                    noname_1_00 = uVar1;\n                    *(*0x20 + -0x3c) = uVar1;\n                    *(*0x20 + -0x40) = *(iVar3 + 8 + iVar5);\n                    *(*0x20 + -0x80) = 0x47396a;\n                    puVar2 = fcn.00457e80();\n                    arg1_00 = *puVar2;\n                    if ((*puVar2 & 1) != 0) {\n                        *(*0x20 + -0x80) = 0x47397e;\n                        uVar4 = fcn.0040c440();\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0x80) = 0x473991;\n                        uVar4 = fcn.00457f00();\n                        if (*0x5d3dd0 == 0) {\n                            **(*0x20 + -0x10) = uVar4;\n                        }\n                        else {\n                            *(*0x20 + -0x80) = 0x4739ae;\n                            fcn.0045c5a0(arg1_00, noname_1_00, arg3, in_R9);\n                        }\n                        *(*0x20 + -0x80) = 0x4739bd;\n                        fcn.00457ec0();\n                        return *(*0x20 + -0x18);\n                    }\n                    *(*0x20 + -0x80) = 0x473a07;\n                    fcn.004486c0(9, noname_1_00, 0x4cc892, 0x15);\n                    *(*0x20 + -0x80) = 0x473a0c;\n                    fcn.00409da0();\n                    *(*0x20 + -0x80) = 0x473a1b;\n                    fcn.00432920();\n                }\n                *(*0x20 + -0x80) = 0x473a2e;\n                fcn.00432920();\ncode_r0x00473a2e:\n                *(*0x20 + -0x80) = 0x473a38;\n                fcn.0045ca40(100000);\ncode_r0x00473a38:\n                *(*0x20 + -0x80) = 0x473a68;\n                fcn.004486c0(9, noname_1_00, 0x4d0979, 0x21);\n                *(*0x20 + -0x80) = 0x473a6d;\n                fcn.00409da0();\n                *(*0x20 + -0x80) = 0x473a7c;\n                fcn.00432920();\ncode_r0x00473a7c:\n                arg1 = 9;\n                unaff_RDI = *(*0x20 + 8);\n                unaff_RSI = *(*0x20 + 0x10);\n                arg3 = 0x4cc892;\n                in_R9 = 0x15;\n                *(*0x20 + -0x80) = 0x473aac;\n                fcn.004486c0(9, noname_1_00, 0x4cc892, 0x15);\n                *(*0x20 + -0x80) = 0x473ab1;\n                fcn.00409da0();\n                *(*0x20 + -0x80) = 0x473ac5;\n                fcn.00432920();\n            }\n            unaff_RBX = 0x4f9cc8;\n            *(*0x20 + -0x80) = 0x473ad8;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + -8) = 0x473afc;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        arg3 = *(puVar6 + 0x30);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1833
    },
    "004750a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004750a0(uint64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = arg1 & 0x1f;\n            *(*0x20 + -0x10) = arg1;\n            if (arg1 < 0x13) {\n                if (arg1 == 0x11) {\n                    return in_RAX[8];\n                }\n                if (arg1 != 0x12) {\ncode_r0x00475188:\n                    *(*0x20 + -0x28) = 0x475194;\n                    puVar2 = fcn.0040c440();\n                    puVar2[1] = 0x11;\n                    *puVar2 = 0x4cb33a;\n                    arg1 = *(*0x20 + -0x10);\n                    puVar2[2] = arg1;\n                    *(*0x20 + -0x28) = 0x4751be;\n                    fcn.00432920();\n                    goto code_r0x004751be;\n                }\n                if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                    *(*0x20 + -0x28) = 0x475110;\n                    iVar1 = fcn.004570a0();\n                    return iVar1;\n                }\n            }\n            else {\n                if (arg1 != 0x15) {\n                    if (arg1 == 0x17) {\n                        return *(unaff_RBX + 8);\n                    }\n                    if (arg1 == 0x18) {\n                        return *(unaff_RBX + 8);\n                    }\n                    goto code_r0x00475188;\n                }\n                if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                    *(*0x20 + -0x28) = 0x475150;\n                    iVar1 = fcn.00457200();\n                    return iVar1;\n                }\ncode_r0x004751be:\n                *(*0x20 + -0x28) = 0x4751d1;\n                fcn.00432920();\n            }\n            unaff_RBX = 0x4f9b78;\n            *(*0x20 + -0x28) = 0x4751e5;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x4751fa;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 820
    },
    "00475220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00475220(void)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x28) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x475250;\n                arg1 = fcn.004571c0(in_RAX + 0x18);\n                if (arg1 != 0) {\n                    *(*0x20 + -0x28) = 0x47528f;\n                    fcn.004755e0(arg1);\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x4752ac;\n                fcn.00432920();\n            }\n            *(*0x20 + -0x28) = 0x4752bf;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4752ca;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 390
    },
    "004752e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004752e0(void)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x28) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x475310;\n                arg1 = fcn.004571e0(in_RAX + 0x18);\n                if (arg1 != 0) {\n                    *(*0x20 + -0x28) = 0x47534f;\n                    fcn.004755e0(arg1);\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x47536c;\n                fcn.00432920();\n            }\n            *(*0x20 + -0x28) = 0x47537f;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x47538a;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 391
    },
    "004753a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004753a0(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t *arg2;\n    int64_t **in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg2 = in_RAX[2];\n            if (arg2 != NULL) {\n                *(*0x20 + -0x10) = in_RAX + 3;\n                if (in_RAX[5] == NULL) {\n                    if ((**in_RAX == 8) && ((*in_RAX)[1] != 0)) {\n                        *(*0x20 + -0x30) = 0x475405;\n                        fcn.00457120(in_RAX + 3, arg2, arg3, arg4);\ncode_r0x0047541e:\n                        *(*0x20 + -0x30) = 0x475428;\n                        uVar2 = fcn.004571c0();\n                        return uVar2 & 0xffffffffffffff00 | uVar2 != 0;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x47540f;\n                    iVar1 = fcn.004571c0();\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x30) = 0x47541e;\n                        fcn.00457180();\n                        goto code_r0x0047541e;\n                    }\n                    *(*0x20 + -0x30) = 0x47544b;\n                    fcn.00432920();\n                }\n                *(*0x20 + -0x30) = 0x47545e;\n                fcn.00432920();\n            }\n            *(*0x20 + -0x30) = 0x475471;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x47547c;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 606
    },
    "004754a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004754a0(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar4 = arg1 & 0x1f;\n    if (uVar4 == 0x15) {\n        puVar1 = fcn.0040c440();\n        puVar1[2] = arg1;\n        if (*0x5d3dd0 == 0) {\n            *puVar1 = in_RAX;\n            puVar1[1] = unaff_RBX;\n        }\n        else {\n            iVar2 = fcn.0045c6a0(in_RAX);\n            fcn.0045c6c0(iVar2 + 8, unaff_RBX, in_R8, in_R9);\n        }\n        return;\n    }\n    uVar3 = fcn.004735e0();\n    puVar1 = fcn.0040c440();\n    puVar1[1] = unaff_RBX;\n    if (*0x5d3dd0 != 0) goto code_r0x0047558d;\n    *puVar1 = uVar3;\n    do {\n        puVar1[2] = uVar4;\n        fcn.00432920();\ncode_r0x0047558d:\n        puVar1 = fcn.0045c6a0(uVar3);\n    } while( true );\n}\n",
        "token_count": 403
    },
    "00475760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00475760(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong *puVar2;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((arg1 & 0x1f) == 0x19) {\n        return *(in_RAX + 0x40);\n    }\n    uVar1 = fcn.004735e0();\n    puVar2 = fcn.0040c440();\n    puVar2[1] = unaff_RBX;\n    if (*0x5d3dd0 != 0) goto code_r0x004757ed;\n    *puVar2 = uVar1;\n    do {\n        puVar2[2] = arg1 & 0x1f;\n        fcn.00432920();\ncode_r0x004757ed:\n        puVar2 = fcn.0045c6a0(uVar1);\n    } while( true );\n}\n",
        "token_count": 265
    },
    "00475840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00475840(uint64_t arg1)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    ulong *puVar2;\n    uint32_t uVar3;\n    ulong *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar3 = arg1;\n            arg1 = uVar3 & 0x1f;\n            *(*0x20 + -0x10) = arg1;\n            if (arg1 < 0x16) {\n                if (arg1 == 0x12) {\ncode_r0x00475926:\n                    if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                        if ((uVar3 >> 7 & 1) != 0) {\n                            unaff_RBX = *unaff_RBX;\n                        }\n                        return unaff_RBX;\n                    }\n                    *(*0x20 + -0x30) = 0x475969;\n                    fcn.00432920();\ncode_r0x00475969:\n                    *(*0x20 + -0x30) = 0x475975;\n                    puVar2 = fcn.0040c440();\n                    puVar2[1] = 0x15;\n                    *puVar2 = 0x4ccde7;\n                    arg1 = *(*0x20 + -0x10);\n                    puVar2[2] = arg1;\n                    *(*0x20 + -0x30) = 0x47599f;\n                    fcn.00432920();\n                    goto code_r0x0047599f;\n                }\n                if (arg1 != 0x13) {\n                    if (arg1 != 0x15) goto code_r0x00475969;\n                    goto code_r0x00475926;\n                }\n                if ((uVar3 >> 9 & 1) != 0) {\n                    return 0x476000;\n                }\n                if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                    if ((uVar3 >> 7 & 1) != 0) {\n                        unaff_RBX = *unaff_RBX;\n                    }\n                    if (unaff_RBX != NULL) {\n                        unaff_RBX = *unaff_RBX;\n                    }\n                    return unaff_RBX;\n                }\n            }\n            else {\n                if (arg1 != 0x16) {\n                    if (arg1 == 0x17) {\n                        return *unaff_RBX;\n                    }\n                    if (arg1 == 0x1a) goto code_r0x00475926;\n                    goto code_r0x00475969;\n                }\n                if (in_RAX[1] != 0) goto code_r0x00475926;\n                *(*0x20 + -0x18) = *unaff_RBX;\n                *(*0x20 + -0x30) = 0x4758ff;\n                cVar1 = fcn.004572c0();\n                if (cVar1 != '\\0') {\n                    return *(*0x20 + -0x18);\n                }\ncode_r0x0047599f:\n                *(*0x20 + -0x30) = 0x4759b2;\n                fcn.00432920();\n            }\n            unaff_RBX = 0x4f9b78;\n            *(*0x20 + -0x30) = 0x4759c5;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x4759da;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1043
    },
    "00475a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00475a00(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t *piVar2;\n    ulong *puVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t iVar8;\n    int64_t unaff_RDI;\n    ulong *in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = arg1;\n            uVar4 = arg1;\n            arg1 = uVar4 & 0x1f;\n            if (arg1 == 0x11) {\n                if ((uVar4 >> 8 & 1) != 0) {\n                    arg1 = *(in_RAX + 0x40);\n                    in_RAX = *(in_RAX + 0x38);\n                    puVar3 = unaff_RBX;\ncode_r0x00475a65:\n                    if (((-1 < unaff_RDI) && (unaff_RDI <= unaff_RSI)) && (unaff_RSI <= arg1)) {\n                        *(*0x20 + -0x28) = in_RAX;\n                        *(*0x20 + -0x20) = puVar3;\n                        *(*0x20 + -0x38) = arg1;\n                        *(*0x20 + -0x50) = 0x475aa5;\n                        piVar1 = fcn.0040c440();\n                        *piVar1 = 0;\n                        iVar6 = *(*0x20 + 0x20);\n                        piVar1[1] = *(*0x20 + 0x28) - iVar6;\n                        iVar5 = *(*0x20 + -0x38) - iVar6;\n                        piVar1[2] = iVar5;\n                        if (iVar5 < 1) {\n                            if (*0x5d3dd0 == 0) {\n                                *piVar1 = *(*0x20 + -0x20);\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x475b1e;\n                                fcn.0045c6c0(iVar5, *(*0x20 + -0x20), in_R8, in_R9);\n                            }\n                            iVar8 = *(*0x20 + -0x28);\n                        }\n                        else {\n                            iVar8 = *(*0x20 + -0x28);\n                            iVar6 = iVar6 * **(iVar8 + 0x30) + *(*0x20 + -0x20);\n                            if (*0x5d3dd0 == 0) {\n                                *piVar1 = iVar6;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x475afc;\n                                fcn.0045c6c0(iVar5, iVar6, *(*0x20 + -0x20), in_R9);\n                            }\n                        }\n                        return iVar8;\n                    }\n                    goto code_r0x00475c34;\n                }\n            }\n            else {\n                if (arg1 == 0x17) {\n                    puVar3 = *unaff_RBX;\n                    arg1 = unaff_RBX[2];\n                    in_R8 = puVar3;\n                    goto code_r0x00475a65;\n                }\n                if (arg1 == 0x18) {\n                    if (((-1 < unaff_RDI) && (unaff_RDI <= unaff_RSI)) && (unaff_RSI <= unaff_RBX[1])) {\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x18) = in_RAX;\n                        *(*0x20 + -0x50) = 0x475b90;\n                        piVar2 = fcn.0040c440();\n                        iVar6 = *(*0x20 + 0x20);\n                        piVar1 = *(*0x20 + -0x10) + 1;\n                        if (*piVar1 != iVar6 && iVar6 <= *piVar1) {\n                            iVar5 = **(*0x20 + -0x10);\n                            piVar2[1] = *(*0x20 + 0x28) - iVar6;\n                            iVar5 = iVar5 + iVar6;\n                            if (*0x5d3dd0 == 0) {\n                                *piVar2 = iVar5;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x475bcf;\n                                fcn.0045c6c0(iVar6, iVar5, in_R8, in_R9);\n                            }\n                        }\n                        return *(*0x20 + -0x18);\n                    }\n                    *(*0x20 + -0x50) = 0x475bf9;\n                    fcn.00432920();\n                }\n                *(*0x20 + -0x30) = arg1;\n                *(*0x20 + -0x50) = 0x475c0a;\n                puVar3 = fcn.0040c440();\n                puVar3[1] = 0x13;\n                *puVar3 = 0x4cc121;\n                arg1 = *(*0x20 + -0x30);\n                puVar3[2] = arg1;\n                *(*0x20 + -0x50) = 0x475c34;\n                fcn.00432920();\ncode_r0x00475c34:\n                *(*0x20 + -0x50) = 0x475c47;\n                fcn.00432920();\n            }\n            unaff_RBX = 0x4f9c48;\n            *(*0x20 + -0x50) = 0x475c5a;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + -8) = 0x475c79;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1673
    },
    "004772a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004772a0(ulong arg1)\n\n{\n    int64_t arg1_00;\n    uint *noname_1;\n    ulong uVar1;\n    ulong uVar2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack56 [8];\n    uint uStack48;\n    uint uStack44;\n    uchar auStack40 [12];\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    noname_1 = fcn.0040c440();\n    arg1_00 = unaff_RBX + 0x1c;\n    uVar1 = fcn.00444b80(arg1_00);\n    uVar2 = fcn.00444b80(arg1_00);\n    _auStack56 = CONCAT88(arg1_00, uVar1);\n    _auStack40 = CONCAT88(uVar2, arg1_00);\n    auStack24 = CONCAT88(arg1_00, arg1_00);\n    if (*0x5d3dd0 == 0) {\n        auStack56._0_4_ = uVar1;\n        auStack56._4_4_ = uVar1 >> 0x20;\n        uStack48 = arg1_00;\n        uStack44 = arg1_00 >> 0x20;\n        *noname_1 = auStack56._0_4_;\n        noname_1[1] = auStack56._4_4_;\n        noname_1[2] = uStack48;\n        noname_1[3] = uStack44;\n        auStack40._8_4_ = uVar2;\n        uStack28 = uVar2 >> 0x20;\n        noname_1[4] = uStack48;\n        noname_1[5] = uStack44;\n        noname_1[6] = auStack40._8_4_;\n        noname_1[7] = uStack28;\n        noname_1[8] = uStack48;\n        noname_1[9] = uStack44;\n        noname_1[10] = uStack48;\n        noname_1[0xb] = uStack44;\n    }\n    else {\n        fcn.00411220(auStack56);\n    }\n    fcn.00476e60(arg1, noname_1, *(noname_1 + 4), *(noname_1 + 6));\n    return 0x4fa158;\n}\n",
        "token_count": 608
    },
    "00477580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00477580(int64_t arg1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    ulong uVar6;\n    uint *puVar7;\n    ulong *puVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x5d3b20 == '\\0') {\n                *(*0x20 + -0x80) = 0x4777b7;\n                uVar5 = fcn.004772a0(arg1);\n                return uVar5;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = 0x4775c9;\n            uVar5 = fcn.0040c440();\n            *(*0x20 + -0x40) = uVar5;\n            *(*0x20 + -0x58) = *(*0x20 + 0x10) + 0x1c;\n            *(*0x20 + -0x80) = 0x4775ee;\n            uVar5 = fcn.00444b80(*(*0x20 + 0x10) + 0x1c);\n            *(*0x20 + -0x48) = uVar5;\n            unaff_RBX = *(*0x20 + -0x58);\n            *(*0x20 + -0x80) = 0x477607;\n            uVar6 = fcn.00444b80(unaff_RBX);\n            *(*0x20 + -0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x28) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x38) = *(*0x20 + -0x48);\n            uVar5 = *(*0x20 + -0x58);\n            *(*0x20 + -0x30) = uVar5;\n            *(*0x20 + -0x28) = uVar5;\n            *(*0x20 + -0x20) = uVar6;\n            *(*0x20 + -0x18) = uVar5;\n            *(*0x20 + -0x10) = uVar5;\n            if (*0x5d3dd0 == 0) {\n                uVar2 = *(*0x20 + -0x34);\n                uVar3 = *(*0x20 + -0x30);\n                uVar4 = *(*0x20 + -0x2c);\n                puVar8 = *(*0x20 + -0x40);\n                *puVar8 = *(*0x20 + -0x38);\n                *(puVar8 + 4) = uVar2;\n                *(puVar8 + 1) = uVar3;\n                *(puVar8 + 0xc) = uVar4;\n                uVar2 = *(*0x20 + -0x24);\n                uVar3 = *(*0x20 + -0x20);\n                uVar4 = *(*0x20 + -0x1c);\n                *(puVar8 + 2) = *(*0x20 + -0x28);\n                *(puVar8 + 0x14) = uVar2;\n                *(puVar8 + 3) = uVar3;\n                *(puVar8 + 0x1c) = uVar4;\n                uVar2 = *(*0x20 + -0x14);\n                uVar3 = *(*0x20 + -0x10);\n                uVar4 = *(*0x20 + -0xc);\n                *(puVar8 + 4) = *(*0x20 + -0x18);\n                *(puVar8 + 0x24) = uVar2;\n                *(puVar8 + 5) = uVar3;\n                *(puVar8 + 0x2c) = uVar4;\n            }\n            else {\n                unaff_RBX = *(*0x20 + -0x40);\n                *(*0x20 + -0x80) = 0x477685;\n                fcn.00411220(*0x20 + -0x38);\n                puVar8 = *(*0x20 + -0x40);\n            }\n            arg1 = *(*0x20 + 0x10);\n            if (arg1 == 0x10) {\n                uVar5 = 10;\n            }\n            else if (arg1 == 0x18) {\n                uVar5 = 0xc;\n            }\n            else if (arg1 == 0x20) {\n                uVar5 = 0xe;\n            }\n            else {\n                uVar5 = 0;\n            }\n            if (arg1 != 0) {\n                arg1 = puVar8[1];\n                unaff_RBX = *puVar8;\n                if (arg1 != 0) {\n                    arg1 = puVar8[4];\n                    uVar6 = puVar8[3];\n                    if (arg1 != 0) {\n                        *(*0x20 + -0x78) = uVar5;\n                        *(*0x20 + -0x70) = *(*0x20 + 8);\n                        *(*0x20 + -0x68) = unaff_RBX;\n                        *(*0x20 + -0x60) = uVar6;\n                        *(*0x20 + -0x80) = 0x47770a;\n                        fcn.00477c20();\n                        if ((*0x5d3b20 != '\\0') && (*0x5d3b21 != '\\0')) {\n                            *(*0x20 + -0x80) = 0x47773c;\n                            puVar7 = fcn.0040c440();\n                            if (*0x5d3dd0 == 0) {\n                                puVar1 = *(*0x20 + -0x40);\n                                uVar2 = puVar1[1];\n                                uVar3 = puVar1[2];\n                                uVar4 = puVar1[3];\n                                *puVar7 = *puVar1;\n                                puVar7[1] = uVar2;\n                                puVar7[2] = uVar3;\n                                puVar7[3] = uVar4;\n                                uVar2 = puVar1[5];\n                                uVar3 = puVar1[6];\n                                uVar4 = puVar1[7];\n                                puVar7[4] = puVar1[4];\n                                puVar7[5] = uVar2;\n                                puVar7[6] = uVar3;\n                                puVar7[7] = uVar4;\n                                uVar2 = puVar1[9];\n                                uVar3 = puVar1[10];\n                                uVar4 = puVar1[0xb];\n                                puVar7[8] = puVar1[8];\n                                puVar7[9] = uVar2;\n                                puVar7[10] = uVar3;\n                                puVar7[0xb] = uVar4;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = puVar7;\n                                *(*0x20 + -0x80) = 0x47777b;\n                                fcn.00411220(*(*0x20 + -0x40));\n                            }\n                            return 0x4fa1b8;\n                        }\n                        return 0x4fa188;\n                    }\n                    *(*0x20 + -0x80) = 0x4777c8;\n                    fcn.0045ca40(0);\n                }\n                *(*0x20 + -0x80) = 0x4777cf;\n                fcn.0045ca40(arg1);\n            }\n            *(*0x20 + -0x80) = 0x4777d6;\n            in_RAX = fcn.0045ca40(arg1);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + -8) = 0x4777eb;\n        fcn.0045a360();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2135
    },
    "004791a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004791a0(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RSI;\n    uint64_t uVar3;\n    uint64_t unaff_RDI;\n    int64_t arg1_00;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (unaff_RDI - arg1 == 1) {\n        while (uVar2 = unaff_RSI,  unaff_RDI < uVar2) {\n            uStack24 = unaff_RDI + uVar2 >> 1;\n            cVar1 = (**(in_RAX + 0x20))();\n            unaff_RSI = uStack24;\n            if (cVar1 != '\\0') {\n                unaff_RDI = uStack24 + 1;\n                unaff_RSI = uVar2;\n            }\n        }\n        while (arg1 < unaff_RDI - 1) {\n            uStack16 = arg1 + 1;\n            (**(in_RAX + 0x28))(uStack16);\n            arg1 = uStack16;\n        }\n        return;\n    }\n    uStack16 = unaff_RDI;\n    if (unaff_RSI - unaff_RDI != 1) {\n        uStack24 = unaff_RSI + arg1 >> 1;\n        iVar4 = unaff_RDI + uStack24;\n        uVar2 = unaff_RDI;\n        arg1_00 = arg1;\n        if (uStack24 < unaff_RDI) {\n            uVar2 = uStack24;\n            arg1_00 = iVar4 - unaff_RSI;\n        }\n        while (uVar3 = uVar2,  arg1_00 < uVar3) {\n            uVar2 = arg1_00 + uVar3 >> 1;\n            cVar1 = (**(in_RAX + 0x20))();\n            if (cVar1 == '\\0') {\n                arg1_00 = uVar2 + 1;\n                uVar2 = uVar3;\n            }\n        }\n        iVar4 = iVar4 - arg1_00;\n        if ((arg1_00 < uStack16) && (uStack16 < iVar4)) {\n            fcn.00479540(arg1_00);\n        }\n        if ((arg1 < arg1_00) && (arg1_00 < uStack24)) {\n            fcn.004791a0(arg1);\n        }\n        if ((uStack24 < iVar4) && (iVar4 < unaff_RSI)) {\n            fcn.004791a0(uStack24);\n        }\n        return;\n    }\n    while (uVar2 = unaff_RDI,  arg1 < uVar2) {\n        uStack24 = arg1 + uVar2 >> 1;\n        cVar1 = (**(in_RAX + 0x20))(uStack24);\n        unaff_RDI = uStack24;\n        if (cVar1 == '\\0') {\n            arg1 = uStack24 + 1;\n            unaff_RDI = uVar2;\n        }\n    }\n    for (; arg1 < uStack16; uStack16 = uStack16 - 1) {\n        (**(in_RAX + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 803
    },
    "00479a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00479a00(ulong arg1)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    ulong uVar3;\n    int64_t arg3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t noname_0;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t arg1_01;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    while (&iStack56 < *(unaff_R14 + 0x10) || &iStack56 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iStack24 = unaff_RBX;\n    uStack16 = in_RAX;\n    iVar2 = fcn.00475d80(arg1);\n    iVar2 = (**(iVar2 + 0x98))();\n    if (iVar2 != 0x15) {\n        return NULL;\n    }\n    arg1_00 = fcn.004750a0(arg1);\n    iStack32 = fcn.00444b80(arg1_00);\n    iStack40 = fcn.00444b80(arg1_00);\n    uStack48 = fcn.004754a0(arg1);\n    noname_0 = 0;\n    iVar2 = iStack40;\n    uVar9 = 0;\n    uVar7 = arg1_00;\n    iStack56 = iStack32;\n    while (uVar6 = noname_0,  cVar1 = fcn.004753a0(noname_0, arg1_00, iStack56, in_R9),  cVar1 != '\\0') {\n        uVar3 = fcn.00475220();\n        iVar4 = iStack56;\n        uVar10 = uVar9 + 1;\n        iVar8 = iVar2;\n        arg3 = iStack56;\n        if (uVar7 < uVar10) {\n            uVar7 = uVar9;\n            iStack24 = iVar2;\n            uStack16 = uVar3;\n            arg3 = fcn.00444c60(uVar9);\n            uVar10 = iVar4 + 1;\n            uVar3 = uStack16;\n            iVar8 = iStack24;\n        }\n        arg2 = uVar9 * 3;\n        *(arg3 + 0x10 + uVar9 * 0x18) = uVar6;\n        arg1_01 = arg3 + uVar9 * 0x18;\n        iVar4 = arg3 + uVar9 * 0x18 + 8;\n        iStack56 = arg3;\n        if (*0x5d3dd0 == 0) {\n            *(arg3 + uVar9 * 0x18) = uVar3;\n            *(arg3 + 8 + uVar9 * 0x18) = iVar8;\n        }\n        else {\n            fcn.0045c5a0(arg1_01, arg2, arg3, iVar4);\n            fcn.0045c6e0(arg1_01, arg2, arg3, iVar4);\n        }\n        uVar3 = fcn.004752e0();\n        uVar6 = noname_0 + 1;\n        if (arg1_00 < uVar6) {\n            arg1_00 = noname_0;\n            iStack24 = iVar8;\n            uStack16 = uVar3;\n            iVar4 = fcn.00444c60(noname_0);\n            uVar6 = iVar2 + 1;\n            uVar3 = uStack16;\n            iVar8 = iStack24;\n            iVar2 = iVar4;\n        }\n        *(iVar2 + 0x10 + noname_0 * 0x18) = arg1_01;\n        iVar4 = iVar2 + noname_0 * 0x18;\n        in_R9 = iVar2 + noname_0 * 0x18 + 8;\n        uVar9 = uVar10;\n        if (*0x5d3dd0 == 0) {\n            *(iVar2 + noname_0 * 0x18) = uVar3;\n            *(iVar2 + 8 + noname_0 * 0x18) = iVar8;\n            noname_0 = uVar6;\n        }\n        else {\n            fcn.0045c5a0(iVar4, arg1_00, iVar2, in_R9);\n            fcn.0045c6e0(iVar4, arg1_00, iVar2, in_R9);\n            noname_0 = uVar6;\n        }\n    }\n    piVar5 = fcn.0040c440();\n    piVar5[1] = uVar9;\n    piVar5[2] = uVar7;\n    if (*0x5d3dd0 == 0) {\n        *piVar5 = iStack56;\n    }\n    else {\n        piVar5 = fcn.0045c6a0(iStack56);\n    }\n    piVar5[4] = noname_0;\n    piVar5[5] = arg1_00;\n    if (*0x5d3dd0 == 0) {\n        piVar5[3] = iVar2;\n    }\n    else {\n        piVar5 = fcn.0045c6a0(iVar2);\n    }\n    fcn.00478fe0();\n    return piVar5;\n}\n",
        "token_count": 1314
    },
    "0047ac00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0047ac00(ulong arg1, ulong noname_1, uint64_t arg3)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    uint32_t uVar2;\n    ulong *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong *unaff_RSI;\n    uint64_t unaff_RDI;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    uint64_t uVar3;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            uVar2 = arg1;\n            uVar3 = uVar2 & 0x1f;\n            *(*0x20 + -0x10) = uVar3;\n            uVar5 = arg3;\n            if (uVar3 < 0x15) {\n                unaff_RDI = uVar3 - 0x12;\n                if (unaff_RDI < 2) goto code_r0x0047ac72;\n                if (uVar3 == 0x14) {\ncode_r0x0047ac5f:\n                    unaff_RBX = *unaff_RBX;\n                    goto code_r0x0047ac8b;\n                }\n            }\n            else {\n                if (0x16 < uVar3) {\n                    if (uVar3 == 0x17) goto code_r0x0047ac5f;\n                    if (uVar3 != 0x1a) goto code_r0x0047ae0f;\n                }\ncode_r0x0047ac72:\n                if ((uVar2 >> 9 & 1) != 0) {\ncode_r0x0047ad20:\n                    arg3 = uVar5 & 0x1f;\n                    *(*0x20 + -0x10) = arg3;\n                    if (arg3 < 0x15) {\n                        if (1 < arg3 - 0x12) {\n                            if (arg3 == 0x14) {\ncode_r0x0047ad54:\n                                unaff_RSI = *unaff_RSI;\n                                goto code_r0x0047ad7b;\n                            }\ncode_r0x0047ada1:\n                            *(*0x20 + -0x28) = 0x47adad;\n                            puVar1 = fcn.0040c440();\n                            puVar1[1] = 0x13;\n                            *puVar1 = 0x4cc10e;\n                            puVar1[2] = *(*0x20 + -0x10);\n                            *(*0x20 + -0x28) = 0x47add7;\n                            fcn.00432920();\n                            goto code_r0x0047add7;\n                        }\n                    }\n                    else if (0x16 < arg3) {\n                        if (arg3 == 0x17) goto code_r0x0047ad54;\n                        if (arg3 != 0x1a) goto code_r0x0047ada1;\n                    }\n                    if ((uVar5 >> 9 & 1) != 0) {\n                        return 0;\n                    }\n                    if ((uVar5 >> 7 & 1) != 0) {\n                        unaff_RSI = *unaff_RSI;\n                    }\ncode_r0x0047ad7b:\n                    if (unaff_RSI != NULL) {\n                        return 0;\n                    }\n                    return 1;\n                }\n                if ((uVar2 >> 7 & 1) != 0) {\n                    unaff_RBX = *unaff_RBX;\n                }\ncode_r0x0047ac8b:\n                if (unaff_RBX != NULL) goto code_r0x0047ad20;\n                arg3 = uVar5 & 0x1f;\n                *(*0x20 + -0x10) = arg3;\n                if (arg3 < 0x15) {\n                    if (arg3 - 0x12 < 2) goto code_r0x0047acdf;\n                    if (arg3 == 0x14) {\ncode_r0x0047accc:\n                        unaff_RSI = *unaff_RSI;\n                        goto code_r0x0047acf4;\n                    }\n                }\n                else {\n                    if (arg3 < 0x17) {\ncode_r0x0047acdf:\n                        if ((uVar5 >> 9 & 1) == 0) {\n                            if ((uVar5 >> 7 & 1) != 0) {\n                                unaff_RSI = *unaff_RSI;\n                            }\ncode_r0x0047acf4:\n                            if (unaff_RSI == NULL) {\n                                return 0;\n                            }\n                        }\n                        return 0xffffffffffffffff;\n                    }\n                    if (arg3 == 0x17) goto code_r0x0047accc;\n                    if (arg3 == 0x1a) goto code_r0x0047acdf;\n                }\ncode_r0x0047add7:\n                *(*0x20 + -0x28) = 0x47ade5;\n                puVar1 = fcn.0040c440();\n                puVar1[1] = 0x13;\n                *puVar1 = 0x4cc10e;\n                puVar1[2] = *(*0x20 + -0x10);\n                *(*0x20 + -0x28) = 0x47ae0f;\n                fcn.00432920();\n            }\ncode_r0x0047ae0f:\n            *(*0x20 + -0x28) = 0x47ae1b;\n            unaff_RBX = fcn.0040c440();\n            unaff_RBX[1] = 0x13;\n            *unaff_RBX = 0x4cc10e;\n            arg1 = *(*0x20 + -0x10);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x28) = 0x47ae45;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x47ae69;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1705
    },
    "0047b520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0047b520(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0xa8) = 0x47b55b;\n            uVar1 = fcn.0047c1e0();\n            iVar3 = *0x57eeb0;\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x0047b576;\n                }\n            }\n            else {\n                uVar1 = 0;\ncode_r0x0047b576:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0xa8) = 0x47b5aa;\n                pcVar2 = fcn.00410580(*(*0x20 + 8));\n                unaff_RBX = *0x57f950;\n                if (*pcVar2 == '\\0') {\n                    *(*0x20 + -0xa8) = 0x47b632;\n                    uVar1 = fcn.0045ebc0();\n                    goto code_r0x0047b632;\n                }\n                unaff_RDI = *(*0x20 + 8);\n                *(*0x20 + -0xa8) = 0x47b5d7;\n                fcn.00448620(*0x57f958);\n                *(*0x20 + -0xa8) = 0x47b5dc;\n                iVar3 = fcn.0047c1e0();\n                if (unaff_RDI != 0) {\n                    iVar3 = 0;\n                    goto code_r0x0047b5f6;\n                }\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\ncode_r0x0047b5f6:\n                    if (unaff_RDI != 0) {\n                        return NULL;\n                    }\n                    *(*0x20 + -0xa8) = 0x47b60b;\n                    uVar1 = fcn.0045eb60();\ncode_r0x0047b632:\n                    if (iVar3 != 0) {\n                        *(*0x20 + -0x50) = iVar3;\n                        *(*0x20 + -0xa8) = 0x47b648;\n                        uVar1 = fcn.0047c340();\n                        *(*0x20 + -0x10) = uVar1;\n                        *(*0x20 + -0x48) = iVar3;\n                        *(*0x20 + -0xa8) = 0x47b665;\n                        uVar1 = fcn.0040c440();\n                        *(*0x20 + -0x18) = uVar1;\n                        *(*0x20 + -0xa8) = 0x47b677;\n                        uVar1 = fcn.00409d20();\n                        uVar5 = 0x4fa138;\n                        puVar4 = *(*0x20 + -0x18);\n                        *puVar4 = 0x4fa138;\n                        if (*0x5d3dd0 == 0) {\n                            puVar4[1] = uVar1;\n                        }\n                        else {\n                            *(*0x20 + -0xa8) = 0x47b6a5;\n                            fcn.0045c5a0(0x4fa138, puVar4, param_3, param_4);\n                        }\n                        puVar4[3] = *(*0x20 + 0x10);\n                        if (*0x5d3dd0 == 0) {\n                            puVar4[2] = *(*0x20 + 8);\n                        }\n                        else {\n                            puVar4 = *(*0x20 + 8);\n                            *(*0x20 + -0xa8) = 0x47b6d9;\n                            fcn.0045c6c0(uVar5, puVar4, param_3, param_4);\n                        }\n                        uVar5 = 0x4c793d;\n                        arg4 = 2;\n                        *(*0x20 + -0xa8) = 0x47b709;\n                        uVar1 = fcn.004487a0(0xf, puVar4, 0x4c793d, 2);\n                        iVar3 = *(*0x20 + -0x18);\n                        *(iVar3 + 0x28) = 0x4ca3d8;\n                        if (*0x5d3dd0 == 0) {\n                            *(iVar3 + 0x20) = uVar1;\n                        }\n                        else {\n                            *(*0x20 + -0xa8) = 0x47b72d;\n                            fcn.0045c5a0(iVar3, puVar4, uVar5, arg4);\n                        }\n                        return NULL;\n                    }\n                    *(*0x20 + -0x58) = uVar1;\n                    *(*0x20 + -0xa8) = 0x47b757;\n                    puVar4 = fcn.0040c440();\n                    uVar1 = *(*0x20 + 0x10);\n                    puVar4[1] = uVar1;\n                    if (*0x5d3dd0 == 0) {\n                        *puVar4 = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0xa8) = 0x47b789;\n                        puVar4 = fcn.0045c6c0(uVar1, *(*0x20 + 8), param_3, param_4);\n                    }\n                    puVar4[2] = *(*0x20 + -0x58);\n                    return puVar4;\n                }\n                *(*0x20 + -0xa8) = 0x47b7c8;\n                fcn.0045ca40(0);\n            }\n            *(*0x20 + -0xa8) = 0x47b7d2;\n            in_RAX = fcn.0045ca40(unaff_RBX);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x47b7e5;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1690
    },
    "0047b800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0047b800(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    ulong noname_2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            for (iVar4 = 0; iVar4 < arg1; iVar4 = iVar4 + 1) {\n                if (*(unaff_RBX + iVar4) == '\\0') {\n                    arg1 = 0;\n                    iVar6 = 0x4fa138;\n                    iVar4 = 0;\n                    goto code_r0x0047b8a9;\n                }\n            }\n            *(*0x20 + -0x98) = arg1 + 1;\n            *(*0x20 + -0xc0) = 0x47b885;\n            iVar4 = fcn.00444a20(arg1);\n            unaff_RBX = *(*0x20 + 0x10);\n            arg1 = *(*0x20 + -0x98);\n            iVar6 = 0;\n            in_RAX = *(*0x20 + 8);\ncode_r0x0047b8a9:\n            if (iVar6 != 0) {\n                iVar4 = 0;\n                goto code_r0x0047b8c0;\n            }\n            if (arg1 != 0) {\n                iVar6 = 0;\ncode_r0x0047b8c0:\n                if (iVar6 != 0) {\n                    return NULL;\n                }\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -0xc0) = 0x47b8d8;\n                iVar6 = iVar4;\n                uVar1 = fcn.0045ec00();\n                if (iVar4 != 0) {\n                    *(*0x20 + -0x90) = iVar4;\n                    *(*0x20 + -0xc0) = 0x47b8f6;\n                    uVar2 = fcn.0047c340();\n                    *(*0x20 + -0x70) = uVar2;\n                    *(*0x20 + -0x80) = iVar4;\n                    *(*0x20 + -0xc0) = 0x47b90c;\n                    uVar2 = fcn.0040c440();\n                    *(*0x20 + -0x78) = uVar2;\n                    *(*0x20 + -0xc0) = 0x47b91b;\n                    uVar2 = fcn.00409d20();\n                    uVar1 = 0x4fa138;\n                    puVar3 = *(*0x20 + -0x78);\n                    *puVar3 = 0x4fa138;\n                    if (*0x5d3dd0 == 0) {\n                        puVar3[1] = uVar2;\n                    }\n                    else {\n                        *(*0x20 + -0xc0) = 0x47b945;\n                        fcn.0045c5a0(0x4fa138, puVar3, iVar6, in_R9);\n                    }\n                    uVar2 = *(*0x20 + 0x18);\n                    puVar3[3] = uVar2;\n                    if (*0x5d3dd0 == 0) {\n                        noname_2 = *(*0x20 + 0x10);\n                        puVar3[2] = noname_2;\n                    }\n                    else {\n                        noname_2 = *(*0x20 + 0x10);\n                        *(*0x20 + -0xc0) = 0x47b979;\n                        fcn.0045c720(uVar1, puVar3, noname_2, in_R9);\n                    }\n                    *(*0x20 + -200) = unaff_RBP;\n                    *(*0x20 + -0xc0) = 0x47b991;\n                    fcn.0045cceb();\n                    *(*0x20 + -0x68) = 0x4ca3c9;\n                    *(*0x20 + -0x60) = 0xf;\n                    *(*0x20 + -0x58) = noname_2;\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x48) = 0x4c9cff;\n                    *(*0x20 + -0x40) = 0xe;\n                    uVar2 = (*(*0x20 + 8))[1];\n                    *(*0x20 + -0x38) = **(*0x20 + 8);\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x28) = 0x4c793d;\n                    *(*0x20 + -0x20) = 2;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    uVar2 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xc0) = 0x47ba31;\n                    uVar1 = fcn.00448380(6);\n                    iVar4 = *(*0x20 + -0x78);\n                    *(iVar4 + 0x28) = *0x20 + -0x68;\n                    if (*0x5d3dd0 == 0) {\n                        *(iVar4 + 0x20) = uVar1;\n                    }\n                    else {\n                        *(*0x20 + -0xc0) = 0x47ba52;\n                        fcn.0045c5a0(iVar4, uVar2, noname_2, in_R9);\n                    }\n                    return NULL;\n                }\n                *(*0x20 + -0x88) = uVar1;\n                *(*0x20 + -0xc0) = 0x47ba7c;\n                puVar3 = fcn.0040c440();\n                if (*0x5d3dd0 == 0) {\n                    *puVar3 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0xc0) = 0x47baa5;\n                    puVar3 = fcn.0045c6c0(uVar2, *(*0x20 + 8), iVar6, in_R9);\n                }\n                puVar3[2] = *(*0x20 + 0x18);\n                if (*0x5d3dd0 == 0) {\n                    puVar3[1] = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0xc0) = 0x47bad9;\n                    puVar3 = fcn.0045c6c0(uVar2, *(*0x20 + 0x10), iVar6, in_R9);\n                }\n                puVar3[3] = *(*0x20 + -0x88);\n                return puVar3;\n            }\n            *(*0x20 + -0xc0) = 0x47bb18;\n            in_RAX = fcn.0045ca40(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x47bb2d;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1904
    },
    "0047bc00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0047bc00(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 2) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.004633a0();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x47bd60);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 2) == 0) {\n            iVar1 = *(in_RAX + 6);\n            fcn.0047b520();\n            if (iVar1 != 0) {\n                (**ppcStack16)();\n                return iVar1;\n            }\n            fcn.00456fe0(in_RAX + 2);\n        }\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if (bVar2) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 351
    },
    "0047bdc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0047bdc0(void)\n\n{\n    bool bVar1;\n    int32_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 8) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.004633a0();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x47bf80);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 8) == 0) {\n            iVar2 = fcn.0047bc00();\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            iVar2 = *(in_RAX + 2);\n            fcn.0047b800(*(in_RAX + 4));\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            fcn.00456fe0(in_RAX + 8);\n        }\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 395
    },
    "00482fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00482fa0(void)\n\n{\n    int16_t *in_RAX;\n    ulong uVar1;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (in_RAX != NULL) {\n        arg1 = 0;\n        for (; *in_RAX != 0; in_RAX = in_RAX + 1) {\n            arg1 = arg1 + 1;\n        }\n        fcn.0047b260(arg1);\n        uVar1 = fcn.00448e00(arg1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 183
    },
    "00484360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00484360(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while (uVar1 = *in_RAX,  (uVar1 & 0x7ffff8) != 0) {\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ uVar1 - 8);\n                if (uVar1 == uVar2) {\n                    if ((uVar1 - 8 & 0x7ffff9) != 1) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x20) = 0x4843b3;\n                    uVar3 = fcn.00484dc0();\n                    return uVar3;\n                }\n            }\n            *(*0x20 + -0x20) = 0x4843de;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4843e9;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 424
    },
    "00484ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00484ee0(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    cVar1 = fcn.00484240();\n    if (cVar1 == '\\0') {\n        uVar2 = *0x57f680;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            uVar2 = 0x4fa0f8;\n        }\n        return uVar2;\n    }\n    if (*(in_RAX + 0x220) == '\\x04') {\n        fcn.0047c520(*(in_RAX + 0x10));\n    }\n    if (*(in_RAX + 0x1b8) != 0) {\n        fcn.00457720();\n    }\n    uVar2 = fcn.00484360();\n    fcn.004580c0(in_RAX + 0x218);\n    return uVar2;\n}\n",
        "token_count": 269
    },
    "004852c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004852c0(void)\n\n{\n    uint8_t uVar1;\n    int64_t *piVar2;\n    uint8_t *in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    int64_t unaff_RBX;\n    int64_t *arg1;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint8_t uVar11;\n    int64_t *piVar12;\n    int64_t in_R11;\n    int64_t unaff_R14;\n    int64_t *piStack80;\n    int64_t iStack24;\n    uint8_t *puStack16;\n    \n    while (piVar10 = &iStack24,  piVar10 < *(unaff_R14 + 0x10) || piVar10 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    piVar5 = NULL;\n    piVar4 = NULL;\n    iVar6 = 0;\n    arg1 = NULL;\n    uVar8 = 0;\n    do {\n        if (unaff_RBX == 0) {\n            for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                piVar10 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar10) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00444c60(arg1);\n                    piVar10 = iVar6 + 1;\n                }\n                *(iVar3 + arg1) = 0x5c;\n                arg1 = piVar10;\n                iVar6 = iVar3;\n            }\n            return iVar6;\n        }\n        uVar1 = *in_RAX;\n        uVar9 = uVar8;\n        iStack24 = unaff_RBX;\n        puStack16 = in_RAX;\n        if (uVar1 < 0x21) {\n            if (((uVar1 == 9) || (uVar1 == 0x20)) && (uVar8 == 0)) {\n                for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                    piVar10 = arg1 + 1;\n                    iVar3 = iVar6;\n                    if (piVar4 < piVar10) {\n                        piVar4 = arg1;\n                        iVar3 = fcn.00444c60(arg1);\n                        piVar10 = iVar6 + 1;\n                    }\n                    *(iVar3 + arg1) = 0x5c;\n                    arg1 = piVar10;\n                    iVar6 = iVar3;\n                }\n                return iVar6;\n            }\ncode_r0x00485482:\n            for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                piVar12 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar12) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00444c60(arg1);\n                    piVar12 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                }\n                *(iVar3 + arg1) = 0x5c;\n                arg1 = piVar12;\n                iVar6 = iVar3;\n            }\n            piVar12 = arg1 + 1;\n            iVar3 = iVar6;\n            if (piVar4 < piVar12) {\n                piVar4 = arg1;\n                iVar3 = fcn.00444c60(arg1);\n                piVar12 = iVar6 + 1;\n                uVar9 = uVar8 & 0xff;\n                in_RAX = puStack16;\n                unaff_RBX = iStack24;\n            }\n            *(iVar3 + arg1) = uVar1;\n            piVar5 = NULL;\n            iVar6 = iVar3;\n        }\n        else {\n            if (uVar1 == 0x22) {\n                in_R11 = piVar5 / 2;\n                piVar2 = uVar1;\n                piVar12 = piVar5;\n                piStack80 = piVar5;\n                goto code_r0x004854ff;\n            }\n            if (uVar1 != 0x5c) goto code_r0x00485482;\n            piVar5 = piVar5 + 1;\n            piVar12 = arg1;\n        }\n        while (unaff_RBX == 0) {\n            in_RAX = fcn.0045cb00(0);\n            iVar3 = iVar6;\n            while( true ) {\n                *(iVar3 + arg1) = 0x5c;\n                in_R11 = in_R11 + -1;\n                arg1 = piVar10;\n                iVar6 = iVar3;\n                piVar2 = piVar5;\ncode_r0x004854ff:\n                piVar5 = piVar2;\n                uVar7 = uVar9;\n                if (in_R11 < 1) break;\n                piVar10 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar10) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00444c60(arg1);\n                    piVar10 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    piVar5 = uVar1;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                    piVar12 = piStack80;\n                }\n            }\n            if ((piVar12 & 1) == 0) {\n                piVar12 = arg1;\n                if (((uVar9 != '\\0') && (1 < unaff_RBX)) && (in_RAX[1] == 0x22)) {\n                    piVar12 = arg1 + 1;\n                    iVar3 = iVar6;\n                    uVar11 = piVar5;\n                    if (piVar4 < piVar12) {\n                        piVar4 = arg1;\n                        iVar3 = fcn.00444c60(arg1);\n                        piVar12 = iVar6 + 1;\n                        uVar7 = uVar8;\n                        in_RAX = puStack16;\n                        unaff_RBX = iStack24;\n                        uVar11 = uVar1;\n                    }\n                    *(iVar3 + arg1) = uVar11;\n                    in_RAX = in_RAX + 1;\n                    unaff_RBX = unaff_RBX + -1;\n                    iVar6 = iVar3;\n                }\n                uVar9 = uVar7 ^ 1;\n            }\n            else {\n                piVar12 = arg1 + 1;\n                uVar11 = piVar5;\n                if (piVar4 < piVar12) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00444c60(arg1);\n                    piVar12 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                    iVar6 = iVar3;\n                    uVar11 = uVar1;\n                }\n                *(iVar6 + arg1) = uVar11;\n            }\n            piVar5 = NULL;\n        }\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n        arg1 = piVar12;\n        uVar8 = uVar9;\n        in_R11 = unaff_RBX;\n    } while( true );\n}\n",
        "token_count": 1709
    },
    "00485700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00485700(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    ulong uVar3;\n    int64_t arg2;\n    uint64_t uVar4;\n    uint64_t arg1;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    arg1 = 0;\n    uVar4 = 0;\n    iVar6 = 0;\n    while (unaff_RBX != 0) {\n        uVar1 = *in_RAX;\n        if ((uVar1 == 0x20) || (uVar1 == 9)) {\n            in_RAX = in_RAX + (-(unaff_RBX + -1) >> 0x3f & 1);\n            unaff_RBX = unaff_RBX + -1;\n        }\n        else {\n            uVar2 = fcn.004852c0();\n            uVar3 = fcn.004489c0(unaff_RBX);\n            uVar7 = uVar4 + 1;\n            arg2 = iVar6;\n            if (arg1 < uVar7) {\n                arg1 = uVar4;\n                arg2 = fcn.00444c60(uVar4);\n                uVar7 = iVar6 + 1;\n            }\n            iVar5 = uVar4 * 0x10;\n            *(arg2 + 8 + iVar5) = uVar2;\n            in_RAX = uVar1;\n            uVar4 = uVar7;\n            unaff_RBX = iVar6;\n            if (*0x5d3dd0 == 0) {\n                *(arg2 + iVar5) = uVar3;\n                iVar6 = arg2;\n            }\n            else {\n                fcn.0045c5a0(arg1, arg2, arg2 + iVar5, in_R9);\n                iVar6 = arg2;\n            }\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 509
    },
    "00486120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00486120(ulong arg1)\n\n{\n    ulong *arg1_00;\n    ulong uVar1;\n    ulong *puVar2;\n    ulong in_RDX;\n    ulong uVar3;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    arg1_00 = fcn.004889e0();\n    *(arg1_00 + 0xb4) = 1;\n    fcn.0048e160(unaff_RBX, in_RDX, uStack0000000000000028);\n    uVar3 = *arg1_00;\n    uVar1 = fcn.004489c0(arg1_00[1]);\n    if (arg1_00[0x17] == 0) {\n        puVar2 = fcn.0040c440();\n        puVar2[1] = uVar3;\n        if (*0x5d3dd0 == 0) {\n            *puVar2 = uVar1;\n        }\n        else {\n            fcn.0045c6a0(uVar1);\n        }\n        uVar3 = 0x4f9fb8;\n    }\n    else {\n        puVar2 = fcn.0040c440();\n        puVar2[1] = uVar3;\n        if (*0x5d3dd0 == 0) {\n            *puVar2 = uVar1;\n        }\n        else {\n            puVar2 = fcn.0045c6a0(uVar1);\n        }\n        uVar3 = arg1_00[0x18];\n        puVar2[2] = arg1_00[0x17];\n        if (*0x5d3dd0 == 0) {\n            puVar2[3] = uVar3;\n        }\n        else {\n            fcn.0045c6c0(arg1_00, uVar3, uStack0000000000000028, in_R9);\n        }\n        uVar3 = 0x4f9fd8;\n    }\n    fcn.00488a80(arg1_00, uVar3, uStack0000000000000028);\n    return uVar3;\n}\n",
        "token_count": 564
    },
    "00486300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00486300(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t **in_RAX;\n    int64_t iVar3;\n    uint64_t arg1;\n    ulong arg2;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t arg2_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 1) {\n                return;\n            }\n            piVar1 = *in_RAX;\n            uVar6 = piVar1[1];\n            arg2_00 = piVar1[2];\n            iVar3 = *piVar1;\n            arg1 = unaff_RBX + uVar6;\n            if (arg2_00 < arg1) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x28) = arg1;\n                *(*0x20 + -0x20) = uVar6;\n                iVar3 = unaff_RBX + arg2_00 * 2;\n                *(*0x20 + -0x18) = iVar3;\n                *(*0x20 + -0x48) = 0x486375;\n                iVar3 = fcn.00444b80(iVar3);\n                in_RAX = *(*0x20 + 8);\n                iVar2 = (*in_RAX)[1];\n                iVar5 = *(*0x20 + -0x18);\n                if (iVar2 < *(*0x20 + -0x18)) {\n                    iVar5 = iVar2;\n                }\n                if (iVar3 != **in_RAX) {\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x48) = 0x4863a5;\n                    fcn.0045d380(iVar5);\n                    iVar3 = *(*0x20 + -0x10);\n                    in_RAX = *(*0x20 + 8);\n                }\n                arg1 = *(*0x20 + -0x28);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + -0x20);\n                arg2_00 = *(*0x20 + -0x18);\n            }\n            if (*(in_RAX + 0xe) == '\\0') {\n                arg2 = 0x20;\n            }\n            else {\n                arg2 = 0x30;\n            }\n            if (arg1 <= arg2_00) {\n                if (uVar6 <= arg1) {\n                    iVar2 = iVar3 + (uVar6 & uVar6 - arg2_00 >> 0x3f);\n                    for (iVar5 = 0; iVar5 < unaff_RBX; iVar5 = iVar5 + 1) {\n                        *(iVar2 + iVar5) = arg2;\n                    }\n                    piVar1 = *in_RAX;\n                    piVar1[1] = arg1;\n                    piVar1[2] = arg2_00;\n                    if (*0x5d3dd0 == 0) {\n                        *piVar1 = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x486433;\n                        fcn.0045c700(arg1, arg2, iVar2, arg2_00);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x486445;\n                fcn.0045cb00(arg1);\n            }\n            *(*0x20 + -0x48) = 0x48644d;\n            in_RAX = fcn.0045cac0(arg1, arg2_00);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x48645d;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1049
    },
    "00486480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00486480(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong unaff_RDI;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((*(in_RAX + 1) != '\\0') && (in_RAX[3] != 0)) {\n        fcn.00465240(unaff_RDI);\n        if (*(in_RAX + 10) == '\\0') {\n            fcn.00486300();\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00444c60(uVar4);\n                uVar5 = uVar4;\n            }\n            uVar4 = uVar5;\n            fcn.0045d380(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x5d3dd0 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045c5a0(arg1, uVar5, uVar4, in_R9);\n            }\n        }\n        else {\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00444c60(uVar4);\n                uVar5 = uVar4;\n            }\n            fcn.0045d380(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x5d3dd0 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045c6a0(uVar3);\n            }\n            fcn.00486300();\n        }\n        return;\n    }\n    puVar2 = *in_RAX;\n    uVar4 = puVar2[1];\n    uVar1 = uVar4 + arg1;\n    uVar5 = puVar2[2];\n    uVar3 = *puVar2;\n    if (uVar5 < uVar1) {\n        uVar5 = uVar4;\n        uVar3 = fcn.00444c60(uVar4);\n    }\n    arg4 = uVar3;\n    fcn.0045d380(arg1);\n    puVar2[1] = uVar1;\n    puVar2[2] = uVar5;\n    if (*0x5d3dd0 == 0) {\n        *puVar2 = uVar3;\n    }\n    else {\n        fcn.0045c5a0(arg1, uVar5, uVar4, arg4);\n    }\n    return;\n}\n",
        "token_count": 789
    },
    "00486740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00486740(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((*(in_RAX + 1) != '\\0') && (in_RAX[3] != 0)) {\n        fcn.004653a0();\n        if (*(in_RAX + 10) == '\\0') {\n            fcn.00486300();\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00444c60(uVar4);\n                uVar5 = uVar4;\n            }\n            uVar4 = uVar5;\n            fcn.0045d380(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x5d3dd0 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045c5a0(arg1, uVar5, uVar4, in_R9);\n            }\n        }\n        else {\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00444c60(uVar4);\n                uVar5 = uVar4;\n            }\n            fcn.0045d380(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x5d3dd0 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045c6a0(uVar3);\n            }\n            fcn.00486300();\n        }\n        return;\n    }\n    puVar2 = *in_RAX;\n    uVar4 = puVar2[1];\n    uVar1 = uVar4 + arg1;\n    uVar5 = puVar2[2];\n    uVar3 = *puVar2;\n    if (uVar5 < uVar1) {\n        uVar5 = uVar4;\n        uVar3 = fcn.00444c60(uVar4);\n    }\n    arg4 = uVar3;\n    fcn.0045d380(arg1);\n    puVar2[1] = uVar1;\n    puVar2[2] = uVar5;\n    if (*0x5d3dd0 == 0) {\n        *puVar2 = uVar3;\n    }\n    else {\n        fcn.0045c5a0(arg1, uVar5, uVar4, arg4);\n    }\n    return;\n}\n",
        "token_count": 779
    },
    "00486a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00486a80(void)\n\n{\n    int64_t arg1;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int32_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar2 = in_RAX + 0x28;\n            if ((*(in_RAX + 9) == '\\0') || (iVar5 = *(in_RAX + 0x20),  iVar5 < 5)) {\n                arg1_00 = 0x44;\n                iVar5 = 4;\n            }\n            else {\n                arg1 = iVar5 + 9;\n                if (arg1 < 0x45) {\n                    arg1_00 = 0x44;\n                }\n                else {\n                    *(*0x20 + -0x18) = iVar5;\n                    *(*0x20 + -0x30) = arg1;\n                    *(*0x20 + -0x60) = 0x486ae6;\n                    iVar2 = fcn.00444b80(arg1);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar5 = *(*0x20 + -0x18);\n                    arg1_00 = *(*0x20 + -0x30);\n                    in_RAX = *(*0x20 + 8);\n                }\n            }\n            *(*0x20 + -0x20) = arg1_00;\n            *(*0x20 + -0x10) = iVar2;\n            *(*0x20 + -0x28) = iVar5;\n            if (*(in_RAX + 0xc) == '\\0') {\n                cVar1 = '\\0';\n            }\n            else if (unaff_RBX < 0x110000) {\n                *(*0x20 + -0x60) = 0x486b35;\n                cVar1 = fcn.0046baa0();\n                arg1_00 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar5 = *(*0x20 + -0x28);\n                in_RAX = *(*0x20 + 8);\n            }\n            else {\n                cVar1 = '\\0';\n            }\n            arg1_01 = arg1_00;\n            if (cVar1 == '\\0') {\ncode_r0x00486c84:\n                for (; 0xf < unaff_RBX; unaff_RBX = unaff_RBX >> 4) {\n                    uVar7 = arg1_00 - 1;\n                    uVar6 = unaff_RBX & 0xf;\n                    if (arg1_01 <= uVar7) goto code_r0x00486d7f;\n                    *((arg1_00 - 1) + iVar2) = *(uVar6 + 0x4caf82);\n                    iVar5 = iVar5 + -1;\n                    arg1_00 = uVar7;\n                }\n                uVar7 = arg1_00 - 1;\n                if (uVar7 < arg1_01) {\n                    *((arg1_00 - 1) + iVar2) = *(unaff_RBX + 0x4caf82);\n                    while (iVar5 = iVar5 + -1,  0 < iVar5) {\n                        if (arg1_01 <= uVar7 - 1) goto code_r0x00486d69;\n                        *((uVar7 - 1) + iVar2) = 0x30;\n                        uVar7 = uVar7 - 1;\n                    }\n                    if (uVar7 - 1 < arg1_01) {\n                        *((uVar7 - 1) + iVar2) = 0x2b;\n                        if (uVar7 - 2 < arg1_01) {\n                            *((uVar7 - 2) + iVar2) = 0x55;\n                            *(*0x20 + -0x31) = *(in_RAX + 0xe);\n                            *(in_RAX + 0xe) = 0;\n                            *(*0x20 + -0x60) = 0x486d3c;\n                            fcn.00486480((arg1_01 - uVar7) + 2);\n                            *(*(*0x20 + 8) + 0xe) = *(*0x20 + -0x31);\n                            return;\n                        }\n                        *(*0x20 + -0x60) = 0x486d5e;\n                        fcn.0045ca40(arg1_01);\n                    }\n                    *(*0x20 + -0x60) = 0x486d69;\n                    fcn.0045ca40(arg1_01);\ncode_r0x00486d69:\n                    *(*0x20 + -0x60) = 0x486d74;\n                    fcn.0045ca40(arg1_01);\n                }\n                *(*0x20 + -0x60) = 0x486d7f;\n                fcn.0045ca40(arg1_01);\n                uVar6 = unaff_RBX;\ncode_r0x00486d7f:\n                *(*0x20 + -0x60) = 0x486d8a;\n                fcn.0045ca40(arg1_01);\ncode_r0x00486d8a:\n                *(*0x20 + -0x60) = 0x486d8f;\n                fcn.0045ca40(arg1_01);\ncode_r0x00486d8f:\n                *(*0x20 + -0x60) = 0x486d94;\n                fcn.0045ca40(arg1_01);\n                unaff_RBX = uVar6;\n                arg1_00 = uVar7;\ncode_r0x00486d94:\n                *(*0x20 + -0x60) = 0x486d9f;\n                fcn.0045cb00(arg1_00);\n            }\n            else if (arg1_00 - 1 < arg1_00) {\n                *((arg1_00 - 1) + iVar2) = 0x27;\n                iVar3 = unaff_RBX;\n                if (iVar3 < 0) {\n                    iVar5 = -1;\n                }\n                else if (iVar3 < 0x80) {\n                    iVar5 = 1;\n                }\n                else if (iVar3 < 0x800) {\n                    iVar5 = 2;\n                }\n                else if (iVar3 - 0xd800U < 0x800) {\n                    iVar5 = -1;\n                }\n                else if (iVar3 < 0x10000) {\n                    iVar5 = 3;\n                }\n                else if (iVar3 < 0x110000) {\n                    iVar5 = 4;\n                }\n                else {\n                    iVar5 = -1;\n                }\n                iVar5 = arg1_00 - iVar5;\n                if (iVar5 - 1U <= arg1_00) {\n                    *(*0x20 + -0x18) = iVar5;\n                    uVar6 = (arg1_00 - iVar5) + 1;\n                    uVar7 = -uVar6 >> 0x3f;\n                    *(*0x20 + -0x60) = 0x486c25;\n                    fcn.004650e0(uVar6, iVar2, uVar7, iVar5 - 1U & uVar7);\n                    iVar5 = *(*0x20 + -0x18);\n                    arg1_01 = *(*0x20 + -0x20);\n                    if (iVar5 - 2U < arg1_01) {\n                        iVar2 = *(*0x20 + -0x10);\n                        *(iVar5 + -2 + iVar2) = 0x27;\n                        arg1_00 = iVar5 - 3;\n                        if (arg1_00 < arg1_01) {\n                            *(iVar5 + -3 + iVar2) = 0x20;\n                            unaff_RBX = *(*0x20 + 0x10);\n                            iVar5 = *(*0x20 + -0x28);\n                            in_RAX = *(*0x20 + 8);\n                            goto code_r0x00486c84;\n                        }\n                        goto code_r0x00486d8a;\n                    }\n                    goto code_r0x00486d8f;\n                }\n                goto code_r0x00486d94;\n            }\n            *(*0x20 + -0x60) = 0x486da7;\n            in_RAX = fcn.0045ca40(arg1_00);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x486db7;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 2185
    },
    "00486de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00486de0(uint64_t arg1, uint64_t noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uchar uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint uVar7;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t arg1_00;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t unaff_R12;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    \ncode_r0x00486de0:\n    uVar7 = unaff_RSI;\n    puVar6 = *0x20;\n    arg1_00 = unaff_R12;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x28) = arg3;\n        if (unaff_RDI == '\\0') {\n            noname_1 = 0;\n        }\n        else {\n            noname_1 = noname_1 & 0xffffffffffffff00 | unaff_RBX < 0;\n        }\n        if (noname_1 != '\\0') {\n            unaff_RBX = -unaff_RBX;\n        }\n        *(*0x20 + -0x21) = noname_1;\n        *(*0x20 + 8) = in_RAX;\n        iVar3 = in_RAX + 0x28;\n        if ((*(in_RAX + 8) == '\\0') && (*(in_RAX + 9) == '\\0')) {\n            arg1_00 = 0x44;\n        }\n        else {\n            iVar9 = *(in_RAX + 0x18) + *(in_RAX + 0x20) + 3;\n            if (iVar9 < 0x45) {\n                arg1_00 = 0x44;\n            }\n            else {\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x24) = uVar7;\n                *(*0x20 + -0x20) = iVar9;\n                *(*0x20 + 0x30) = arg4;\n                *(*0x20 + 0x28) = arg3;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x486e7c;\n                iVar3 = fcn.00444b80(iVar9);\n                arg1 = *(*0x20 + 0x18);\n                noname_1 = *(*0x20 + -0x21);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RSI = *(*0x20 + 0x24);\n                arg3 = *(*0x20 + 0x28);\n                arg4 = *(*0x20 + 0x30);\n                arg1_00 = *(*0x20 + -0x20);\n                in_RAX = *(*0x20 + 8);\n            }\n        }\n        if (*(in_RAX + 9) == '\\0') {\n            if ((*(in_RAX + 0xe) == '\\0') || (*(in_RAX + 8) == '\\0')) {\n                iVar9 = 0;\n            }\n            else {\n                iVar9 = *(in_RAX + 0x18);\n                if (((noname_1 != '\\0') || (*(in_RAX + 0xb) != '\\0')) || (*(in_RAX + 0xd) != '\\0')) {\n                    iVar9 = iVar9 + -1;\n                }\n            }\n        }\n        else {\n            iVar9 = *(in_RAX + 0x20);\n            if ((iVar9 == 0) && (unaff_RBX == 0)) {\n                *(*0x20 + -0x22) = *(in_RAX + 0xe);\n                *(in_RAX + 0xe) = 0;\n                *(*0x20 + -0x50) = 0x486eda;\n                fcn.00486300();\n                *(*(*0x20 + 8) + 0xe) = *(*0x20 + -0x22);\n                return;\n            }\n        }\n        unaff_RDI = arg1_00;\n        if (8 < arg1) {\n            uVar4 = noname_1;\n            if (arg1 == 10) goto code_r0x0048726a;\n            if (arg1 != 0x10) goto code_r0x0048723c;\n            do {\n                if (unaff_RBX < 0x10) goto code_r0x00486fa0;\n                uVar4 = unaff_RBX & 0xf;\n                unaff_R12 = arg1_00;\n                if (arg4 <= uVar4) goto code_r0x00487231;\n                uVar1 = *(arg3 + uVar4);\n                noname_1 = uVar1;\n                if (arg1_00 <= unaff_RDI - 1) goto code_r0x00487226;\n                *((unaff_RDI - 1) + iVar3) = uVar1;\n                unaff_RBX = unaff_RBX >> 4;\n                noname_1 = *(*0x20 + -0x21);\n                unaff_RDI = unaff_RDI - 1;\n                unaff_R13 = unaff_RBX;\n            } while( true );\n        }\n        if (arg1 != 2) {\n            if (arg1 != 8) goto code_r0x0048723c;\n            goto code_r0x004872c5;\n        }\n        do {\n            uVar7 = unaff_RSI;\n            if (unaff_RBX < 2) {\ncode_r0x00486fa0:\n                do {\n                    uVar4 = arg1_00;\n                    if (unaff_RBX < arg4) {\n                        unaff_R13 = unaff_RDI - 1;\n                        if (unaff_R13 < arg1_00) {\n                            *((unaff_RDI - 1) + iVar3) = *(unaff_RBX + arg3);\n                            for (; (uVar4 = arg1_00,  0 < unaff_R13 &&\n                                   (uVar4 = arg1_00 - unaff_R13,  arg1_00 - unaff_R13 < iVar9));\n                                unaff_R13 = unaff_R13 - 1) {\n                                *((unaff_R13 - 1) + iVar3) = 0x30;\n                            }\n                            uVar8 = unaff_R13;\n                            if (*(in_RAX + 0xc) == '\\0') goto code_r0x004870ab;\n                            if (arg1 == 2) {\n                                arg3 = unaff_R13 - 1;\n                                if (arg3 < arg1_00) {\n                                    *((unaff_R13 - 1) + iVar3) = 0x62;\n                                    arg3 = unaff_R13 - 2;\n                                    if (arg3 < arg1_00) {\n                                        *((unaff_R13 - 2) + iVar3) = 0x30;\n                                        uVar8 = arg3;\n                                        goto code_r0x004870ab;\n                                    }\n                                    goto code_r0x004871f5;\n                                }\n                            }\n                            else {\n                                if (arg1 == 8) {\n                                    if (unaff_R13 < arg1_00) {\n                                        if (*(iVar3 + unaff_R13) == '0') {\ncode_r0x004870ab:\n                                            uVar5 = uVar8;\n                                            if (unaff_RSI == 0x4f) {\n                                                if (uVar8 - 1 < arg1_00) {\n                                                    *((uVar8 - 1) + iVar3) = 0x6f;\n                                                    if (uVar8 - 2 < arg1_00) {\n                                                        *((uVar8 - 2) + iVar3) = 0x30;\n                                                        uVar5 = uVar8 - 2;\n                                                        goto code_r0x004870e0;\n                                                    }\n                                                    goto code_r0x004871a6;\n                                                }\n                                            }\n                                            else {\ncode_r0x004870e0:\n                                                if (noname_1 == '\\0') {\n                                                    if (*(in_RAX + 0xb) == '\\0') {\n                                                        if (*(in_RAX + 0xd) == '\\0') {\ncode_r0x00487130:\n                                                            uVar2 = *(in_RAX + 0xe);\n                                                            *(in_RAX + 0xe) = 0;\n                                                            if (uVar5 <= arg1_00) {\n                                                                *(*0x20 + -0x23) = uVar2;\n                                                                *(*0x20 + -0x50) = 0x48715e;\n                                                                fcn.00486480(arg1_00 - uVar5);\n                                                                *(*(*0x20 + 8) + 0xe) = *(*0x20 + -0x23);\n                                                                return;\n                                                            }\n                                                            *(*0x20 + -0x50) = 0x487185;\n                                                            fcn.0045cb00(arg1_00);\n                                                            noname_1 = uVar5;\n                                                        }\n                                                        else {\n                                                            noname_1 = uVar5 - 1;\n                                                            if (noname_1 < arg1_00) {\n                                                                *((uVar5 - 1) + iVar3) = 0x20;\n                                                                uVar5 = noname_1;\n                                                                goto code_r0x00487130;\n                                                            }\n                                                        }\n                                                        *(*0x20 + -0x50) = 0x487190;\n                                                        fcn.0045ca40(arg1_00);\n                                                    }\n                                                    else {\n                                                        noname_1 = uVar5 - 1;\n                                                        if (noname_1 < arg1_00) {\n                                                            *((uVar5 - 1) + iVar3) = 0x2b;\n                                                            uVar5 = noname_1;\n                                                            goto code_r0x00487130;\n                                                        }\n                                                    }\n                                                    *(*0x20 + -0x50) = 0x48719b;\n                                                    fcn.0045ca40(arg1_00);\n                                                }\n                                                else {\n                                                    noname_1 = uVar5 - 1;\n                                                    if (noname_1 < arg1_00) {\n                                                        *((uVar5 - 1) + iVar3) = 0x2d;\n                                                        uVar5 = noname_1;\n                                                        goto code_r0x00487130;\n                                                    }\n                                                }\n                                                *(*0x20 + -0x50) = 0x4871a6;\n                                                fcn.0045ca40(arg1_00);\ncode_r0x004871a6:\n                                                *(*0x20 + -0x50) = 0x4871b1;\n                                                fcn.0045ca40(arg1_00);\n                                            }\n                                            *(*0x20 + -0x50) = 0x4871bc;\n                                            fcn.0045ca40(arg1_00);\ncode_r0x004871bc:\n                                            *(*0x20 + -0x50) = 0x4871c7;\n                                            fcn.0045ca40(arg1_00);\ncode_r0x004871c7:\n                                            *(*0x20 + -0x50) = 0x4871d2;\n                                            fcn.0045ca40(arg1_00);\n                                            arg3 = uVar8;\n                                            goto code_r0x004871d2;\n                                        }\n                                        arg3 = unaff_R13 - 1;\n                                        if (arg3 < arg1_00) {\n                                            *((unaff_R13 - 1) + iVar3) = 0x30;\n                                            uVar8 = arg3;\n                                            goto code_r0x004870ab;\n                                        }\n                                        goto code_r0x004871df;\n                                    }\n                                }\n                                else {\n                                    if (arg1 != 0x10) goto code_r0x004870ab;\n                                    if (0x10 < arg4) {\n                                        arg4 = unaff_R13 - 1;\n                                        uVar8 = *(arg3 + 0x10);\n                                        if (arg4 < arg1_00) {\n                                            *((unaff_R13 - 1) + iVar3) = *(arg3 + 0x10);\n                                            uVar8 = unaff_R13 - 2;\n                                            if (uVar8 < arg1_00) {\n                                                *((unaff_R13 - 2) + iVar3) = 0x30;\n                                                goto code_r0x004870ab;\n                                            }\n                                            goto code_r0x004871bc;\n                                        }\n                                        goto code_r0x004871c7;\n                                    }\ncode_r0x004871d2:\n                                    *(*0x20 + -0x50) = 0x4871df;\n                                    fcn.0045ca40(arg4);\ncode_r0x004871df:\n                                    *(*0x20 + -0x50) = 0x4871ea;\n                                    fcn.0045ca40(arg1_00);\n                                }\n                                *(*0x20 + -0x50) = 0x4871f5;\n                                fcn.0045ca40(arg1_00);\ncode_r0x004871f5:\n                                *(*0x20 + -0x50) = 0x487205;\n                                fcn.0045ca40(arg1_00);\n                            }\n                            *(*0x20 + -0x50) = 0x487210;\n                            fcn.0045ca40(arg1_00);\n                            unaff_RDI = arg1_00;\n                        }\n                        *(*0x20 + -0x50) = 0x48721b;\n                        fcn.0045ca40(uVar4);\n                    }\n                    unaff_RBX = unaff_R13;\n                    *(*0x20 + -0x50) = 0x487226;\n                    fcn.0045ca60(arg4);\n                    arg1_00 = uVar4;\ncode_r0x00487226:\n                    *(*0x20 + -0x50) = 0x487231;\n                    fcn.0045ca40(arg1_00);\n                    unaff_R12 = arg1_00;\ncode_r0x00487231:\n                    arg1 = arg4;\n                    *(*0x20 + -0x50) = 0x48723c;\n                    arg4 = arg1;\n                    fcn.0045ca60(arg1);\n                    arg1_00 = unaff_RDI;\n                    unaff_R13 = unaff_RBX;\ncode_r0x0048723c:\n                    unaff_RBX = 0x4f9b18;\n                    *(*0x20 + -0x50) = 0x48724f;\n                    uVar4 = fcn.00432920();\n                    unaff_RDI = arg1_00;\n                    arg1_00 = unaff_R12;\n                    do {\n                        *((unaff_RDI - 1) + iVar3) = unaff_RBX + '0';\n                        unaff_RSI = uVar4 & 0xffffffff;\n                        in_RAX = *(*0x20 + 8);\n                        uVar4 = *(*0x20 + -0x21);\n                        unaff_RBX = noname_1;\n                        unaff_RDI = unaff_R13;\ncode_r0x0048726a:\n                        noname_1 = uVar4;\n                        if (unaff_RBX < 10) goto code_r0x00486fa0;\n                        unaff_R13 = unaff_RDI - 1;\n                        noname_1 = unaff_RBX / 10;\n                        uVar4 = unaff_RSI & 0xffffffff;\n                        unaff_RSI = noname_1 * 10;\n                        unaff_RBX = unaff_RBX % 10;\n                    } while (unaff_R13 < arg1_00);\n                    *(*0x20 + -0x50) = 0x4872a5;\n                    arg1 = arg1_00;\n                    in_RAX = fcn.0045ca40(arg1_00);\n                    while( true ) {\n                        *(*0x20 + -0x18) = unaff_R13;\n                        unaff_R13 = (unaff_RBX & 7) + 0x30;\n                        *((unaff_RDI - 1) + iVar3) = unaff_R13;\n                        unaff_RBX = unaff_RBX >> 3;\n                        unaff_RDI = *(*0x20 + -0x18);\ncode_r0x004872c5:\n                        if (unaff_RBX < 8) break;\n                        unaff_R13 = unaff_RDI - 1;\n                        if (arg1_00 <= unaff_R13) {\n                            *(*0x20 + -0x50) = 0x4872e5;\n                            arg1 = arg1_00;\n                            in_RAX = fcn.0045ca40(arg1_00);\n                            goto code_r0x004872e5;\n                        }\n                    }\n                } while( true );\n            }\n            unaff_R13 = unaff_RDI - 1;\n            if (arg1_00 <= unaff_R13) goto code_r0x00487317;\ncode_r0x004872e5:\n            *(*0x20 + -0x18) = unaff_R13;\n            unaff_R13 = (unaff_RBX & 1) + 0x30;\n            *((unaff_RDI - 1) + iVar3) = unaff_R13;\n            unaff_RBX = unaff_RBX >> 1;\n            unaff_RDI = *(*0x20 + -0x18);\n        } while( true );\n    }\n    goto code_r0x00487326;\ncode_r0x00487317:\n    *(*0x20 + -0x50) = 0x487325;\n    arg1 = arg1_00;\n    in_RAX = fcn.0045ca40(arg1_00);\ncode_r0x00487326:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    puVar6[0x20] = unaff_RDI;\n    *(puVar6 + 0x24) = uVar7;\n    *(puVar6 + 0x28) = arg3;\n    *(puVar6 + 0x30) = arg4;\n    *(puVar6 + -8) = 0x48734d;\n    fcn.0045a360();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = puVar6[0x20];\n    unaff_RSI = *(puVar6 + 0x24);\n    arg3 = *(puVar6 + 0x28);\n    arg4 = *(puVar6 + 0x30);\n    *0x20 = puVar6;\n    unaff_R12 = arg1_00;\n    goto code_r0x00486de0;\n}\n",
        "token_count": 4338
    },
    "00487380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00487380(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1_00;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t iVar3;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 9) == '\\0') {\n                return unaff_RBX;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar3 = *(in_RAX + 0x20);\n            arg1_00 = 0;\n            while( true ) {\n                if (arg1 <= arg1_00) {\n                    return unaff_RBX;\n                }\n                iVar3 = iVar3 + -1;\n                if (iVar3 < 0) break;\n                if (arg1 <= arg1_00) goto code_r0x0048746d;\n                if (*(unaff_RBX + arg1_00) < 0x80) {\n                    iVar1 = 1;\n                }\n                else {\n                    *(*0x20 + -0x10) = arg1_00;\n                    *(*0x20 + -0x18) = iVar3;\n                    iVar1 = arg1 - arg1_00;\n                    *(*0x20 + -0x38) = 0x487429;\n                    fcn.00464d60(unaff_RDI - arg1_00);\n                    arg1_00 = *(*0x20 + -0x10);\n                    arg1 = *(*0x20 + 0x18);\n                    iVar3 = *(*0x20 + -0x18);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                arg1_00 = arg1_00 + iVar1;\n            }\n            if (arg1_00 <= unaff_RDI) {\n                return unaff_RBX;\n            }\n            *(*0x20 + -0x38) = 0x48746d;\n            fcn.0045cac0(arg1_00, unaff_RDI);\n            arg1 = arg1_00;\ncode_r0x0048746d:\n            *(*0x20 + -0x38) = 0x487472;\n            in_RAX = fcn.0045ca40(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x48748c;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 850
    },
    "004874c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004874c0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t arg2;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 9) == '\\0') {\ncode_r0x004874fa:\n                *(*0x20 + -0x38) = 0x4874ff;\n                fcn.00486740(arg1);\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar3 = *(in_RAX + 0x20);\n            arg1_00 = 0;\n            arg2 = arg1;\n            do {\n                arg1 = arg2;\n                if (arg1 <= arg1_00) goto code_r0x004874fa;\n                if (*(unaff_RBX + arg1_00) < 0x80) {\n                    arg2 = arg1;\n                    uVar1 = arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(*0x20 + -0x10) = arg1_00;\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x38) = 0x48753b;\n                    fcn.00456ac0(arg1_00);\n                    arg2 = *(*0x20 + 0x18);\n                    iVar3 = *(*0x20 + -0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar1 = *(*0x20 + -0x10);\n                    arg1_00 = arg1;\n                }\n                arg1 = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (-1 < iVar3);\n            if (arg1 <= arg2) goto code_r0x004874fa;\n            *(*0x20 + -0x38) = 0x487578;\n            in_RAX = fcn.0045ca80(arg1, arg2);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x48758d;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 767
    },
    "00487640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00487640(int64_t *arg1, ulong noname_1, int64_t *arg3, int64_t arg4)\n\n{\n    int64_t **in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *arg1_00;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t unaff_RDI;\n    uchar uVar6;\n    uint8_t uVar7;\n    int64_t *piVar8;\n    int64_t *in_R10;\n    int64_t *piVar9;\n    int64_t unaff_R14;\n    int64_t *piVar10;\n    bool bVar11;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x38) = arg4;\n            piVar4 = arg1;\n            if (unaff_RDI != 0) {\n                piVar4 = unaff_RSI;\n            }\n            if ((*(in_RAX + 9) != '\\0') && (in_RAX[4] < piVar4)) {\n                piVar4 = in_RAX[4];\n            }\n            arg3 = piVar4 << 1;\n            if (arg3 < 1) {\n                if (*(in_RAX + 1) != '\\0') {\n                    *(*0x20 + -0x90) = 0x48784c;\n                    fcn.00486300();\n                }\n                return;\n            }\n            if (*(in_RAX + 0xd) == '\\0') {\n                if (*(in_RAX + 0xc) != '\\0') {\n                    arg3 = piVar4 * 2 + 2;\n                }\n            }\n            else {\n                if (*(in_RAX + 0xc) != '\\0') {\n                    arg3 = piVar4 << 2;\n                }\n                arg3 = (arg3 + piVar4) - 1;\n            }\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x10) = piVar4;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = arg3;\n            if (((*(in_RAX + 1) != '\\0') && (arg3 < in_RAX[3])) && (*(in_RAX + 10) == '\\0')) {\n                *(*0x20 + -0x90) = 0x487746;\n                fcn.00486300();\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + -0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + -0x40);\n                arg4 = *(*0x20 + 0x38);\n                in_R10 = *(*0x20 + 0x40);\n                piVar4 = *(*0x20 + -0x10);\n            }\n            piVar10 = *in_RAX;\n            arg1_00 = piVar10[1];\n            piVar9 = piVar10[2];\n            iVar2 = *piVar10;\n            iVar1 = iVar2;\n            if (*(in_RAX + 0xc) == '\\0') {\ncode_r0x00487838:\n                piVar10 = NULL;\n                while( true ) {\n                    if (piVar4 <= piVar10) {\n                        piVar4 = *in_RAX;\n                        piVar4[1] = arg1_00;\n                        piVar4[2] = piVar9;\n                        if (*0x5d3dd0 == 0) {\n                            *piVar4 = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x90) = 0x487af0;\n                            in_RAX = fcn.0045c6a0(iVar1);\n                        }\n                        if (((*(in_RAX + 1) != '\\0') && (arg3 < in_RAX[3])) && (*(in_RAX + 10) != '\\0')) {\n                            *(*0x20 + -0x90) = 0x487b0d;\n                            fcn.00486300();\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x38) = piVar10;\n                    iVar2 = iVar1;\n                    if (*(in_RAX + 0xd) == '\\0') {\n                        bVar11 = unaff_RDI == 0;\n                    }\n                    else if (piVar10 < 1) {\n                        bVar11 = unaff_RDI == 0;\n                    }\n                    else {\n                        piVar3 = arg1_00;\n                        piVar8 = arg1_00 + 1U;\n                        if (piVar9 < arg1_00 + 1U) {\n                            *(*0x20 + -0x20) = arg1_00;\n                            *(*0x20 + -0x90) = 0x4878cc;\n                            iVar2 = fcn.00444c60(arg1_00);\n                            arg1 = *(*0x20 + -0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + 0x20);\n                            arg4 = *(*0x20 + 0x38);\n                            in_R10 = *(*0x20 + 0x40);\n                            piVar4 = *(*0x20 + -0x10);\n                            piVar10 = *(*0x20 + -0x38);\n                            in_RAX = *(*0x20 + 8);\n                            piVar3 = *(*0x20 + -0x20);\n                            piVar8 = iVar1 + 1;\n                            piVar9 = arg1_00;\n                        }\n                        arg1_00 = piVar8;\n                        *(iVar2 + piVar3) = 0x20;\n                        iVar1 = unaff_RDI;\n                        if (*(in_RAX + 0xc) != '\\0') {\n                            if (in_R10 < 0x11) goto code_r0x00487b49;\n                            uVar6 = *(arg4 + 0x10);\n                            piVar8 = arg1_00;\n                            piVar3 = arg1_00 + 2U;\n                            if (piVar9 < arg1_00 + 2U) {\n                                *(*0x20 + -0x28) = arg1_00;\n                                *(*0x20 + -0x41) = uVar6;\n                                *(*0x20 + -0x90) = 0x48796c;\n                                iVar1 = fcn.00444c60(arg1_00);\n                                piVar3 = iVar2 + 2;\n                                arg1 = *(*0x20 + -0x18);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                unaff_RSI = *(*0x20 + 0x28);\n                                unaff_RDI = *(*0x20 + 0x20);\n                                uVar6 = *(*0x20 + -0x41);\n                                in_R10 = *(*0x20 + 0x40);\n                                piVar10 = *(*0x20 + -0x38);\n                                in_RAX = *(*0x20 + 8);\n                                piVar4 = *(*0x20 + -0x10);\n                                piVar8 = *(*0x20 + -0x28);\n                                iVar2 = iVar1;\n                                piVar9 = arg1_00;\n                                iVar1 = *(*0x20 + 0x20);\n                            }\n                            arg1_00 = piVar3;\n                            *(iVar2 + piVar8) = 0x30;\n                            *(iVar2 + 1 + piVar8) = uVar6;\n                            arg4 = *(*0x20 + 0x38);\n                        }\n                        bVar11 = iVar1 == 0;\n                        arg3 = *(*0x20 + -0x40);\n                    }\n                    if (bVar11) {\n                        if (arg1 <= piVar10) goto code_r0x00487b33;\n                        uVar7 = *(unaff_RBX + piVar10);\n                        arg1 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        if (unaff_RSI <= piVar10) goto code_r0x00487b3e;\n                        uVar7 = *(unaff_RDI + piVar10);\n                    }\n                    *(*0x20 + -0x43) = uVar7;\n                    arg3 = uVar7 >> 4;\n                    if (in_R10 <= arg3) goto code_r0x00487b28;\n                    uVar7 = *(arg3 + arg4);\n                    arg3 = uVar7;\n                    arg1 = *(*0x20 + -0x43) & 0xf;\n                    if (in_R10 <= arg1) break;\n                    uVar6 = *(arg1 + arg4);\n                    piVar3 = arg1_00;\n                    piVar8 = arg1_00 + 2U;\n                    iVar1 = iVar2;\n                    if (piVar9 < arg1_00 + 2U) {\n                        *(*0x20 + -0x41) = uVar7;\n                        *(*0x20 + -0x42) = uVar6;\n                        *(*0x20 + -0x30) = arg1_00;\n                        *(*0x20 + -0x90) = 0x487a7e;\n                        iVar1 = fcn.00444c60(arg1_00);\n                        uVar6 = *(*0x20 + -0x42);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        uVar7 = *(*0x20 + -0x41);\n                        arg4 = *(*0x20 + 0x38);\n                        piVar4 = *(*0x20 + -0x10);\n                        piVar10 = *(*0x20 + -0x38);\n                        in_RAX = *(*0x20 + 8);\n                        piVar3 = *(*0x20 + -0x30);\n                        piVar8 = iVar2 + 2;\n                        piVar9 = arg1_00;\n                    }\n                    arg1_00 = piVar8;\n                    *(iVar1 + piVar3) = uVar7;\n                    *(iVar1 + 1 + piVar3) = uVar6;\n                    piVar10 = piVar10 + 1;\n                    arg1 = *(*0x20 + -0x18);\n                    arg3 = *(*0x20 + -0x40);\n                    in_R10 = *(*0x20 + 0x40);\n                }\n                *(*0x20 + -0x90) = 0x487b28;\n                fcn.0045ca40(in_R10);\ncode_r0x00487b28:\n                *(*0x20 + -0x90) = 0x487b33;\n                fcn.0045ca40(in_R10);\ncode_r0x00487b33:\n                *(*0x20 + -0x90) = 0x487b3e;\n                fcn.0045ca40(arg1);\ncode_r0x00487b3e:\n                arg1_00 = arg3;\n                *(*0x20 + -0x90) = 0x487b49;\n                fcn.0045ca40(unaff_RSI);\ncode_r0x00487b49:\n                *(*0x20 + -0x90) = 0x487b56;\n                fcn.0045ca40(in_R10);\n                arg3 = arg1_00;\n            }\n            else if (0x10 < in_R10) {\n                uVar6 = *(arg4 + 0x10);\n                piVar10 = arg1_00;\n                piVar3 = arg1_00 + 2U;\n                if (piVar9 < arg1_00 + 2U) {\n                    *(*0x20 + -0x41) = uVar6;\n                    *(*0x20 + -0x30) = arg1_00;\n                    *(*0x20 + -0x90) = 0x4877d7;\n                    iVar1 = fcn.00444c60(arg1_00);\n                    arg1 = *(*0x20 + -0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    uVar6 = *(*0x20 + -0x41);\n                    arg4 = *(*0x20 + 0x38);\n                    in_R10 = *(*0x20 + 0x40);\n                    piVar4 = *(*0x20 + -0x10);\n                    in_RAX = *(*0x20 + 8);\n                    piVar10 = *(*0x20 + -0x30);\n                    piVar9 = arg1_00;\n                    piVar3 = iVar2 + 2;\n                }\n                arg1_00 = piVar3;\n                *(iVar1 + piVar10) = 0x30;\n                *(iVar1 + 1 + piVar10) = uVar6;\n                arg3 = *(*0x20 + -0x40);\n                goto code_r0x00487838;\n            }\n            arg1 = in_R10;\n            *(*0x20 + -0x90) = 0x487b65;\n            in_R10 = arg1;\n            in_RAX = fcn.0045ca40(arg1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + 0x38) = arg4;\n        *(puVar5 + 0x40) = in_R10;\n        *(puVar5 + -8) = 0x487b93;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        arg4 = *(puVar5 + 0x38);\n        in_R10 = *(puVar5 + 0x40);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 3574
    },
    "00487be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00487be0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t in_RDX;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            arg1_00 = in_RDX;\n            if (*(in_RAX + 9) == '\\0') {\ncode_r0x00487c25:\n                if (*(in_RAX + 0xc) != '\\0') {\n                    *(*0x20 + -0x40) = arg1;\n                    *(*0x20 + -0x80) = 0x487c3b;\n                    cVar2 = fcn.0046b9a0();\n                    if (cVar2 != '\\0') {\n                        *(*0x20 + -0x80) = 0x487d11;\n                        fcn.004486c0(1, arg1_00, 0x4c7921, 1);\n                        *(*0x20 + -0x80) = 0x487d25;\n                        fcn.00486740(0x4c7921);\n                        return;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                }\n                if (*(in_RAX + 0xb) == '\\0') {\n                    *(*0x20 + -0x80) = 0x487cc8;\n                    fcn.0046abc0(0x44);\n                    *(*0x20 + -0x80) = 0x487cde;\n                    fcn.00486480(0);\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x487c8b;\n                    fcn.0046abc0(0x44);\n                    *(*0x20 + -0x80) = 0x487ca5;\n                    fcn.00486480(0);\n                }\n                return;\n            }\n            *(*0x20 + 0x18) = arg1;\n            iVar4 = *(in_RAX + 0x20);\n            arg1_00 = 0;\n            in_RDX = arg1;\n            do {\n                arg1 = in_RDX;\n                if (arg1 <= arg1_00) goto code_r0x00487c25;\n                if (*(unaff_RBX + arg1_00) < 0x80) {\n                    in_RDX = arg1;\n                    uVar1 = arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = arg1_00;\n                    *(*0x20 + -0x38) = iVar4;\n                    *(*0x20 + -0x80) = 0x487d67;\n                    fcn.00456ac0(arg1_00);\n                    in_RAX = *(*0x20 + 8);\n                    in_RDX = *(*0x20 + 0x18);\n                    iVar4 = *(*0x20 + -0x38);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar1 = *(*0x20 + -0x30);\n                    arg1_00 = arg1;\n                }\n                arg1 = uVar1;\n                iVar4 = iVar4 + -1;\n            } while (-1 < iVar4);\n            arg1_00 = arg1;\n            if (arg1 <= in_RDX) goto code_r0x00487c25;\n            *(*0x20 + -0x80) = 0x487db3;\n            in_RAX = fcn.0045ca80(arg1, in_RDX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x487dc8;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1093
    },
    "00487e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00487e80(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*(in_RAX + 0xb) == '\\0') {\n        fcn.0046b040(0x44);\n        fcn.00486480(0);\n    }\n    else {\n        fcn.0046b040(0x44);\n        fcn.00486480(0);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00487f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00487fcf)\n// WARNING: Removing unreachable block (ram,0x00487fd8)\n// WARNING: Removing unreachable block (ram,0x00487fdd)\n// WARNING: Removing unreachable block (ram,0x00487fe8)\n// WARNING: Removing unreachable block (ram,0x00487feb)\n// WARNING: Removing unreachable block (ram,0x00488000)\n// WARNING: Removing unreachable block (ram,0x00488009)\n// WARNING: Removing unreachable block (ram,0x0048800e)\n// WARNING: Removing unreachable block (ram,0x00488014)\n// WARNING: Removing unreachable block (ram,0x00488020)\n// WARNING: Removing unreachable block (ram,0x0048802a)\n// WARNING: Removing unreachable block (ram,0x00488040)\n// WARNING: Removing unreachable block (ram,0x004880de)\n// WARNING: Removing unreachable block (ram,0x004880f1)\n// WARNING: Removing unreachable block (ram,0x004880f7)\n// WARNING: Removing unreachable block (ram,0x004880fd)\n// WARNING: Removing unreachable block (ram,0x00488106)\n// WARNING: Removing unreachable block (ram,0x0048804a)\n// WARNING: Removing unreachable block (ram,0x00488054)\n// WARNING: Removing unreachable block (ram,0x0048806a)\n// WARNING: Removing unreachable block (ram,0x00488080)\n// WARNING: Removing unreachable block (ram,0x00488086)\n// WARNING: Removing unreachable block (ram,0x00488070)\n// WARNING: Removing unreachable block (ram,0x00488076)\n// WARNING: Removing unreachable block (ram,0x0048808c)\n// WARNING: Removing unreachable block (ram,0x0048809b)\n// WARNING: Removing unreachable block (ram,0x004880a0)\n// WARNING: Removing unreachable block (ram,0x0048807c)\n// WARNING: Removing unreachable block (ram,0x004880a2)\n// WARNING: Removing unreachable block (ram,0x004880a5)\n// WARNING: Removing unreachable block (ram,0x00488398)\n// WARNING: Removing unreachable block (ram,0x004885f7)\n// WARNING: Removing unreachable block (ram,0x0048860a)\n// WARNING: Removing unreachable block (ram,0x00488610)\n// WARNING: Removing unreachable block (ram,0x00488616)\n// WARNING: Removing unreachable block (ram,0x00488619)\n// WARNING: Removing unreachable block (ram,0x00488625)\n// WARNING: Removing unreachable block (ram,0x0048866d)\n// WARNING: Removing unreachable block (ram,0x00488605)\n// WARNING: Removing unreachable block (ram,0x0048867d)\n// WARNING: Removing unreachable block (ram,0x00488687)\n// WARNING: Removing unreachable block (ram,0x00488690)\n// WARNING: Removing unreachable block (ram,0x00488673)\n// WARNING: Removing unreachable block (ram,0x004886d8)\n// WARNING: Removing unreachable block (ram,0x004886e9)\n// WARNING: Removing unreachable block (ram,0x00488717)\n// WARNING: Removing unreachable block (ram,0x00488137)\n// WARNING: Removing unreachable block (ram,0x00488140)\n// WARNING: Removing unreachable block (ram,0x00488149)\n// WARNING: Removing unreachable block (ram,0x00488349)\n// WARNING: Removing unreachable block (ram,0x00488152)\n// WARNING: Removing unreachable block (ram,0x0048815c)\n// WARNING: Removing unreachable block (ram,0x00488166)\n// WARNING: Removing unreachable block (ram,0x00488328)\n// WARNING: Removing unreachable block (ram,0x00488170)\n// WARNING: Removing unreachable block (ram,0x0048817c)\n// WARNING: Removing unreachable block (ram,0x004881a6)\n// WARNING: Removing unreachable block (ram,0x004881e0)\n// WARNING: Removing unreachable block (ram,0x004881da)\n// WARNING: Removing unreachable block (ram,0x004881e5)\n// WARNING: Removing unreachable block (ram,0x00488201)\n// WARNING: Removing unreachable block (ram,0x00488275)\n// WARNING: Removing unreachable block (ram,0x004882b8)\n// WARNING: Removing unreachable block (ram,0x0048830b)\n// WARNING: Removing unreachable block (ram,0x004882fe)\n// WARNING: Removing unreachable block (ram,0x00488318)\n// WARNING: Removing unreachable block (ram,0x00488381)\n// WARNING: Removing unreachable block (ram,0x0048838b)\n// WARNING: Removing unreachable block (ram,0x004883a9)\n// WARNING: Removing unreachable block (ram,0x004883e5)\n// WARNING: Removing unreachable block (ram,0x004883ef)\n// WARNING: Removing unreachable block (ram,0x004884ef)\n// WARNING: Removing unreachable block (ram,0x0048851c)\n// WARNING: Removing unreachable block (ram,0x00488545)\n// WARNING: Removing unreachable block (ram,0x00488588)\n// WARNING: Removing unreachable block (ram,0x004883cb)\n// WARNING: Removing unreachable block (ram,0x004883d9)\n// WARNING: Removing unreachable block (ram,0x00488400)\n// WARNING: Removing unreachable block (ram,0x0048840a)\n// WARNING: Removing unreachable block (ram,0x00488414)\n// WARNING: Removing unreachable block (ram,0x0048843b)\n// WARNING: Removing unreachable block (ram,0x00488480)\n// WARNING: Removing unreachable block (ram,0x004883e0)\n// WARNING: Removing unreachable block (ram,0x004884f5)\n// WARNING: Removing unreachable block (ram,0x0048850b)\n// WARNING: Removing unreachable block (ram,0x0048850f)\n// WARNING: Removing unreachable block (ram,0x004883d1)\n// WARNING: Removing unreachable block (ram,0x00488395)\n// WARNING: Removing unreachable block (ram,0x00488758)\n// WARNING: Removing unreachable block (ram,0x00488765)\n\nvoid fcn.00487f60(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    ulong in_XMM0_Qa;\n    ulong extraout_XMM0_Qa;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x60 && *0x20 + -0x60 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0xe0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 9) != '\\0') {\n                unaff_RDI = *(in_RAX + 0x20);\n            }\n            *(*0x20 + 0x20) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = unaff_RDI;\n            unaff_RDI = arg1;\n            *(*0x20 + -0xe8) = 0x487fc5;\n            fcn.00466c80(0x44, in_RAX + 0x28, unaff_RBX);\n            unaff_RBX = 1;\n            *(*0x20 + -0xe8) = 0x48877c;\n            uVar1 = unaff_RBX;\n            in_RAX = fcn.0045ca40(1);\n            arg1._0_4_ = uVar1;\n            in_XMM0_Qa = extraout_XMM0_Qa;\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = in_XMM0_Qa;\n        *(puVar2 + 0x18) = unaff_RBX;\n        *(puVar2 + 0x20) = arg1;\n        *(puVar2 + 0x28) = unaff_RDI;\n        *(puVar2 + -8) = 0x48879b;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        in_XMM0_Qa = *(puVar2 + 0x10);\n        unaff_RBX = *(puVar2 + 0x18);\n        arg1._0_4_ = *(puVar2 + 0x20);\n        unaff_RDI = *(puVar2 + 0x28);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 2008
    },
    "004887c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004887c0(ulong param_1, ulong param_2, uint64_t param_3, int64_t param_4)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t arg2;\n    int32_t unaff_EBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t arg2_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_EBX;\n            if (unaff_EBX < 0x80) {\n                iVar4 = in_RAX[1];\n                iVar1 = *in_RAX;\n                iVar3 = iVar1;\n                if (in_RAX[2] < iVar4 + 1U) {\n                    *(*0x20 + -0x70) = 0x488825;\n                    arg2 = iVar1;\n                    iVar3 = fcn.00444c60(iVar4);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[2] = iVar4;\n                    if (*0x5d3dd0 == 0) {\n                        *in_RAX = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x70) = 0x488845;\n                        iVar3 = fcn.0045c5a0(iVar4, arg2, param_3, param_4);\n                    }\n                    unaff_EBX = *(*0x20 + 0x10);\n                    iVar4 = iVar1;\n                }\n                in_RAX[1] = iVar4 + 1;\n                *(iVar3 + iVar4) = unaff_EBX;\n                return;\n            }\n            uVar5 = in_RAX[1];\n            *(*0x20 + -0x28) = uVar5;\n            arg2_00 = in_RAX[2];\n            param_3 = uVar5;\n            param_4 = *in_RAX;\n            while( true ) {\n                uVar7 = uVar5 + 4;\n                if (uVar7 <= arg2_00) break;\n                uVar7 = param_3 + 1;\n                uVar8 = param_3;\n                iVar4 = param_4;\n                if (arg2_00 < uVar7) {\n                    *(*0x20 + -0x18) = param_3;\n                    *(*0x20 + -0x70) = 0x48889f;\n                    iVar4 = fcn.00444c60(param_3);\n                    uVar7 = param_4 + 1;\n                    unaff_EBX = *(*0x20 + 0x10);\n                    uVar8 = *(*0x20 + -0x18);\n                    uVar5 = *(*0x20 + -0x28);\n                    arg2_00 = param_3;\n                }\n                *(iVar4 + uVar8) = 0;\n                param_3 = uVar7;\n                param_4 = iVar4;\n            }\n            if (uVar7 <= arg2_00) {\n                if (uVar5 <= uVar7) {\n                    *(*0x20 + -0x20) = arg2_00;\n                    *(*0x20 + -0x10) = param_4;\n                    iVar4 = arg2_00 - uVar5;\n                    arg2_00 = -iVar4 >> 0x3f & uVar5;\n                    unaff_EBX = 4;\n                    *(*0x20 + -0x70) = 0x4888f8;\n                    iVar4 = fcn.004650e0(iVar4);\n                    uVar5 = *(*0x20 + -0x28) + iVar4;\n                    uVar8 = *(*0x20 + -0x20);\n                    if (uVar5 <= uVar8) {\n                        puVar2 = *(*0x20 + 8);\n                        puVar2[1] = uVar5;\n                        puVar2[2] = uVar8;\n                        if (*0x5d3dd0 == 0) {\n                            *puVar2 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x488936;\n                            fcn.0045c5a0(uVar5, uVar8, param_3, param_4);\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x70) = 0x488946;\n                    fcn.0045cac0(uVar5, uVar8);\n                }\n                *(*0x20 + -0x70) = 0x488951;\n                fcn.0045cb00(uVar7);\n            }\n            *(*0x20 + -0x70) = 0x48895c;\n            in_RAX = fcn.0045cac0(uVar7, arg2_00);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_EBX;\n        *(puVar6 + -8) = 0x48896b;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_EBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1329
    },
    "004889e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004889e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = 0x488a05;\n            iVar1 = fcn.00463a40();\n            if (iVar1 == 0x4c4880) {\n                *(unaff_RBX + 0xb2) = 0;\n                *(unaff_RBX + 0xb4) = 0;\n                if (*0x5d3dd0 == 0) {\n                    *(unaff_RBX + 0x40) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x488a3a;\n                    fcn.0045c6e0(0x4c4880, param_2, param_3, param_4);\n                }\n                *(unaff_RBX + 0x48) = 0;\n                *(unaff_RBX + 0x49) = 0;\n                return unaff_RBX;\n            }\n            unaff_RBX = 0x4c4880;\n            *(*0x20 + -0x28) = 0x488a67;\n            fcn.004099e0(0x4b6b60);\n        }\n        *(puVar2 + -8) = 0x488a6d;\n        fcn.0045a360();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 472
    },
    "00488a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00488a80(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*(in_RAX + 0x10) < 0x10001) {\n        *(in_RAX + 8) = 0;\n        *(in_RAX + 0x18) = 0;\n        if (*0x5d3dd0 == 0) {\n            *(in_RAX + 0x20) = 0;\n        }\n        else {\n            in_RAX = fcn.0045c6c0(arg1, 0, arg3, in_R9);\n        }\n        *(in_RAX + 0x38) = 0;\n        if (*0x5d3dd0 == 0) {\n            *(in_RAX + 0x28) = in_XMM15;\n        }\n        else {\n            fcn.0045c6c0(arg1, 0, arg3, in_R9);\n            in_RAX = fcn.0045c6c0(arg1, 0, arg3, in_R9);\n        }\n        *(in_RAX + 0xb8) = 0;\n        if (*0x5d3dd0 == 0) {\n            *(in_RAX + 0xc0) = 0;\n        }\n        else {\n            in_RAX = fcn.0045c6c0(arg1, 0, arg3, in_R9);\n        }\n        fcn.00463960(in_RAX);\n        return;\n    }\n    return;\n}\n",
        "token_count": 420
    },
    "00488c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00488c60(ulong arg1)\n\n{\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00474c20(arg1);\n    if (((arg1 & 0x1f) == 0x14) && (*unaff_RBX != 0)) {\n        fcn.00474a40(arg1);\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00488d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00488d00(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RDI;\n    uint64_t arg3_00;\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (&iStack16 < *(unaff_R14 + 0x10) || &iStack16 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (unaff_RDI == 0) {\n        uVar5 = in_RAX[1];\n        uVar6 = in_RAX[2];\n        uVar4 = *in_RAX;\n        if (uVar6 < uVar5 + 5) {\n            uVar6 = uVar5;\n            uVar4 = fcn.00444c60(uVar5);\n        }\n        *(uVar4 + uVar5) = 0x6c696e3c;\n        *(uVar4 + 4 + uVar5) = 0x3e;\n        in_RAX[1] = uVar5 + 5;\n        in_RAX[2] = uVar6;\n        if (*0x5d3dd0 == 0) {\n            *in_RAX = uVar4;\n        }\n        else {\n            fcn.0045c6e0(uVar5, arg2, arg3, arg4);\n        }\n        return;\n    }\n    uVar5 = in_RAX[1];\n    uVar6 = *in_RAX;\n    uVar4 = in_RAX[2];\n    uVar1 = uVar6;\n    if (uVar4 < uVar5 + 1) {\n        uVar3 = uVar5;\n        arg3_00 = uVar6;\n        iStack16 = arg1;\n        uVar1 = fcn.00444c60(uVar5);\n        in_RAX[2] = uVar5;\n        if (*0x5d3dd0 == 0) {\n            *in_RAX = uVar1;\n            arg1 = iStack16;\n            uVar5 = uVar6;\n        }\n        else {\n            uVar1 = fcn.0045c5a0(uVar5, uVar3, arg3_00, uVar4);\n            arg1 = iStack16;\n            uVar5 = uVar6;\n        }\n    }\n    in_RAX[1] = uVar5 + 1;\n    *(uVar1 + uVar5) = 0x3f;\n    iVar2 = fcn.00475d80(unaff_RDI);\n    (**(iVar2 + 0xf8))();\n    uVar6 = in_RAX[1];\n    uVar5 = uVar6 + arg1;\n    uVar4 = in_RAX[2];\n    uVar1 = *in_RAX;\n    if (uVar4 < uVar5) {\n        uVar4 = uVar6;\n        uVar1 = fcn.00444c60(uVar6);\n    }\n    iVar2 = arg1;\n    fcn.0045d380(arg1);\n    in_RAX[1] = uVar5;\n    in_RAX[2] = uVar4;\n    arg1 = uVar6 + arg1;\n    if (*0x5d3dd0 == 0) {\n        *in_RAX = uVar1;\n    }\n    else {\n        fcn.0045c6e0(uVar5, uVar4, uVar6, iVar2);\n    }\n    uVar3 = uVar1;\n    if (uVar4 < arg1 + 1U) {\n        uVar3 = fcn.00444c60(uVar5);\n        in_RAX[2] = uVar5;\n        if (*0x5d3dd0 == 0) {\n            *in_RAX = uVar3;\n            uVar5 = uVar1;\n        }\n        else {\n            uVar3 = fcn.0045c5a0(uVar5, uVar4, uVar6, iVar2);\n            uVar5 = uVar1;\n        }\n    }\n    in_RAX[1] = uVar5 + 1;\n    *(uVar3 + uVar5) = 0x3f;\n    return;\n}\n",
        "token_count": 1013
    },
    "00488fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00488fc0(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t *puVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    uint64_t uStack32;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    while (&uStack32 < *(unaff_R14 + 0x10) || &uStack32 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    *(in_RAX + 0xb3) = 1;\n    uVar9 = in_RAX[1];\n    uVar5 = in_RAX[2];\n    uVar2 = *in_RAX;\n    if (uVar5 < uVar9 + 2) {\n        uVar5 = uVar9;\n        uVar2 = fcn.00444c60(uVar9);\n    }\n    *(uVar2 + uVar9) = 0x2125;\n    in_RAX[1] = uVar9 + 2;\n    in_RAX[2] = uVar5;\n    if (*0x5d3dd0 == 0) {\n        *in_RAX = uVar2;\n    }\n    else {\n        fcn.0045c6c0(uVar9, uVar2, arg3, in_R9);\n    }\n    fcn.004887c0();\n    uVar9 = in_RAX[1];\n    uVar5 = *in_RAX;\n    uVar2 = in_RAX[2];\n    uVar3 = uVar5;\n    if (uVar2 < uVar9 + 1) {\n        uVar3 = fcn.00444c60(uVar9);\n        in_RAX[2] = uVar9;\n        if (*0x5d3dd0 == 0) {\n            *in_RAX = uVar3;\n            uVar9 = uVar5;\n        }\n        else {\n            uVar3 = fcn.0045c5a0(uVar9, uVar2, arg3, in_R9);\n            uVar9 = uVar5;\n        }\n    }\n    in_RAX[1] = uVar9 + 1;\n    *(uVar3 + uVar9) = 0x28;\n    uVar9 = in_RAX[3];\n    uVar5 = in_RAX[4];\n    if (uVar9 == 0) {\n        if (in_RAX[7] == 0) {\n            uVar9 = in_RAX[1];\n            uVar2 = in_RAX[2];\n            uVar3 = *in_RAX;\n            if (uVar2 < uVar9 + 5) {\n                uVar2 = uVar9;\n                uVar3 = fcn.00444c60(uVar9);\n            }\n            *(uVar3 + uVar9) = 0x6c696e3c;\n            *(uVar3 + 4 + uVar9) = 0x3e;\n            in_RAX[1] = uVar9 + 5;\n            in_RAX[2] = uVar2;\n            if (*0x5d3dd0 == 0) {\n                *in_RAX = uVar3;\n            }\n            else {\n                fcn.0045c6e0(uVar9, uVar2, uVar5, in_R9);\n            }\n        }\n        else {\n            uVar5 = in_RAX[6];\n            iVar4 = fcn.00475d80(in_RAX[7]);\n            (**(iVar4 + 0xf8))();\n            uVar2 = in_RAX[1];\n            uVar9 = uVar5 + uVar2;\n            uVar3 = in_RAX[2];\n            uVar8 = *in_RAX;\n            if (uVar3 < uVar9) {\n                uVar3 = uVar2;\n                uVar8 = fcn.00444c60(uVar2);\n            }\n            in_R9 = uVar5;\n            uStack32 = uVar8;\n            fcn.0045d380(uVar5);\n            uVar1 = uStack32;\n            in_RAX[1] = uVar9;\n            in_RAX[2] = uVar3;\n            if (*0x5d3dd0 == 0) {\n                *in_RAX = uStack32;\n                puVar6 = in_RAX;\n                uVar10 = uVar2;\n            }\n            else {\n                puVar6 = fcn.0045c6e0(uVar9, uVar3, uVar8, in_R9);\n                uVar10 = uVar3;\n            }\n            uVar7 = uVar1;\n            if (uVar3 < uVar5 + uVar2 + 1) {\n                uVar7 = fcn.00444c60(uVar9);\n                in_RAX[2] = uVar9;\n                if (*0x5d3dd0 == 0) {\n                    *in_RAX = uVar7;\n                    puVar6 = in_RAX;\n                    uVar9 = uVar1;\n                }\n                else {\n                    uVar7 = fcn.0045c5a0(uVar9, uVar10, uVar8, in_R9);\n                    puVar6 = in_RAX;\n                    uVar9 = uVar1;\n                }\n            }\n            puVar6[1] = uVar9 + 1;\n            *(uVar7 + uVar9) = 0x3d;\n            uVar5 = 0;\n            fcn.0048bc80(puVar6[6], uVar9 + 1, 0);\n        }\n    }\n    else {\n        if (uVar9 == 0) {\n            iVar4 = 0;\n            uVar2 = 0;\n        }\n        else {\n            iVar4 = 0x4fa5c0;\n            uVar2 = uVar9;\n        }\n        uStack24 = uVar9;\n        uStack16 = uVar5;\n        (**(iVar4 + 0xf8))(uVar2);\n        uVar2 = in_RAX[1];\n        uVar9 = uVar3 + uVar2;\n        uVar8 = in_RAX[2];\n        uVar5 = *in_RAX;\n        if (uVar8 < uVar9) {\n            uVar8 = uVar2;\n            uVar5 = fcn.00444c60(uVar2);\n        }\n        uStack32 = uVar5;\n        fcn.0045d380(uVar3);\n        uVar1 = uStack32;\n        in_RAX[1] = uVar9;\n        in_RAX[2] = uVar8;\n        if (*0x5d3dd0 == 0) {\n            *in_RAX = uStack32;\n            puVar6 = in_RAX;\n            uVar10 = uVar2;\n        }\n        else {\n            puVar6 = fcn.0045c6e0(uVar9, uVar8, uVar5, in_R9);\n            uVar10 = uVar8;\n        }\n        uVar7 = uVar1;\n        if (uVar8 < uVar3 + uVar2 + 1) {\n            uVar7 = fcn.00444c60(uVar9);\n            in_RAX[2] = uVar9;\n            if (*0x5d3dd0 == 0) {\n                *in_RAX = uVar7;\n                puVar6 = in_RAX;\n                uVar9 = uVar1;\n            }\n            else {\n                uVar7 = fcn.0045c5a0(uVar9, uVar10, uVar5, in_R9);\n                puVar6 = in_RAX;\n                uVar9 = uVar1;\n            }\n        }\n        puVar6[1] = uVar9 + 1;\n        *(uVar7 + uVar9) = 0x3d;\n        fcn.0048b4a0(puVar6[4]);\n    }\n    uVar9 = in_RAX[1];\n    uVar2 = *in_RAX;\n    uVar3 = in_RAX[2];\n    uVar8 = uVar2;\n    if (uVar3 < uVar9 + 1) {\n        uVar8 = fcn.00444c60(uVar9);\n        in_RAX[2] = uVar9;\n        if (*0x5d3dd0 == 0) {\n            *in_RAX = uVar8;\n            uVar9 = uVar2;\n        }\n        else {\n            uVar8 = fcn.0045c5a0(uVar9, uVar3, uVar5, in_R9);\n            uVar9 = uVar2;\n        }\n    }\n    in_RAX[1] = uVar9 + 1;\n    *(uVar8 + uVar9) = 0x29;\n    *(in_RAX + 0xb3) = 0;\n    return;\n}\n",
        "token_count": 2094
    },
    "004895c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004895c0(uint64_t arg1, ulong arg2)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EDI;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n        arg1 = arg1 & 0xff;\n    }\n    if (unaff_EDI < 100) {\n        if (unaff_EDI < 0x56) {\n            if (unaff_EDI == 0x4f) {\ncode_r0x0048969e:\n                fcn.00486de0(8, arg2, 0x4caf93, 0x11);\n                return;\n            }\n            if (unaff_EDI == 0x55) {\n                fcn.00486a80();\n                return;\n            }\n        }\n        else {\n            if (unaff_EDI == 0x58) {\n                fcn.00486de0(0x10, arg2, 0x4caf82, 0x11);\n                return;\n            }\n            if (unaff_EDI == 0x62) {\n                fcn.00486de0(2, arg2, 0x4caf93, 0x11);\n                return;\n            }\n            if (unaff_EDI == 99) {\n                fcn.00487de0();\n                return;\n            }\n        }\n    }\n    else if (unaff_EDI < 0x70) {\n        if (unaff_EDI == 100) {\n            fcn.00486de0(10, arg2, 0x4caf93, 0x11);\n            return;\n        }\n        if (unaff_EDI == 0x6f) goto code_r0x0048969e;\n    }\n    else {\n        if (unaff_EDI == 0x71) {\n            fcn.00487e80();\n            return;\n        }\n        if (unaff_EDI == 0x76) {\n            if ((*(in_RAX + 0x50) != '\\0') && (arg1 == '\\0')) {\n                fcn.00489520(1);\n                return;\n            }\n            fcn.00486de0(10, arg2, 0x4caf93, 0x11);\n            return;\n        }\n        if (unaff_EDI == 0x78) {\n            fcn.00486de0(0x10, arg2, 0x4caf93, 0x11);\n            return;\n        }\n    }\n    fcn.00488fc0(arg1, arg2, in_R8);\n    return;\n}\n",
        "token_count": 619
    },
    "004898c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004898c0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t *in_RAX;\n    int64_t arg4;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t arg1_00;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong in_R8;\n    int64_t arg3;\n    int64_t arg4_00;\n    int64_t unaff_R14;\n    \n    while (iVar3 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if (iVar3 < 99) {\n        uVar6 = iVar3 - 0x45;\n        if (((uVar6 < 3) || (iVar3 == 0x58)) || (iVar3 == 0x62)) {\ncode_r0x0048990e:\n            uVar1 = *(in_RAX + 0x4b);\n            uVar5 = uVar1;\n            arg1_00 = in_RAX[1];\n            iVar2 = *in_RAX;\n            uVar4 = arg1;\n            arg4 = iVar2;\n            if (in_RAX[2] < arg1_00 + 1U) {\n                arg3 = arg1_00;\n                arg4_00 = iVar2;\n                arg4 = fcn.00444c60(arg1_00);\n                in_RAX[2] = arg1_00;\n                if (*0x5d3dd0 == 0) {\n                    *in_RAX = arg4;\n                }\n                else {\n                    arg4 = fcn.0045c5a0(arg1_00, uVar5, arg3, arg4_00);\n                }\n                uVar4 = arg1 & 0xffffffff;\n                arg1_00 = iVar2;\n            }\n            in_RAX[1] = arg1_00 + 1;\n            *(arg4 + arg1_00) = 0x28;\n            fcn.004897c0(uVar4);\n            *(in_RAX + 0x4b) = 1;\n            fcn.004897c0(arg1 & 0xffffffff);\n            uVar4 = in_RAX[1];\n            uVar5 = in_RAX[2];\n            iVar2 = *in_RAX;\n            if (uVar5 < uVar4 + 2) {\n                uVar5 = uVar4;\n                iVar2 = fcn.00444c60(uVar4);\n            }\n            *(iVar2 + uVar4) = 0x2969;\n            in_RAX[1] = uVar4 + 2;\n            in_RAX[2] = uVar5;\n            if (*0x5d3dd0 == 0) {\n                *in_RAX = iVar2;\n            }\n            else {\n                fcn.0045c6e0(uVar4, uVar5, arg1_00, arg4);\n            }\n            *(in_RAX + 0x4b) = uVar1;\n            return;\n        }\n    }\n    else {\n        uVar6 = iVar3 - 0x65;\n        if (((uVar6 < 3) || (iVar3 == 0x76)) || (iVar3 == 0x78)) goto code_r0x0048990e;\n    }\n    fcn.00488fc0(arg1, uVar6, in_R8);\n    return;\n}\n",
        "token_count": 812
    },
    "00489ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00489ac0(ulong arg1, ulong arg2)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EDI;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (unaff_EDI < 0x72) {\n        if (unaff_EDI == 0x58) {\n            fcn.00487640(arg1, arg2, 0, 0x4caf82);\n            return;\n        }\n        if (unaff_EDI == 0x71) {\n            fcn.00487be0(arg1);\n            return;\n        }\n    }\n    else {\n        if (unaff_EDI == 0x73) {\n            fcn.004874c0(arg1);\n            return;\n        }\n        if (unaff_EDI == 0x76) {\n            if (*(in_RAX + 0x50) != '\\0') {\n                fcn.00487be0(arg1);\n                return;\n            }\n            fcn.004874c0(arg1);\n            return;\n        }\n        if (unaff_EDI == 0x78) {\n            fcn.00487640(arg1, arg2, 0, 0x4caf93);\n            return;\n        }\n    }\n    fcn.00488fc0(arg1, arg2, in_R8);\n    return;\n}\n",
        "token_count": 349
    },
    "00489bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00489bc0(int64_t arg1, ulong noname_1, ulong arg3, uint64_t arg4)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t arg1_00;\n    int64_t iVar7;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int32_t unaff_ESI;\n    ulong unaff_RDI;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    int32_t iStack0000000000000028;\n    ulong uStack0000000000000030;\n    uchar auStack48 [16];\n    uint64_t uStack32;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    iStack0000000000000028 = unaff_ESI;\n    while (uStack0000000000000030 = arg3,  auStack48 < *(unaff_R14 + 0x10) || auStack48 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n        arg3 = uStack0000000000000030;\n    }\n    if (iStack0000000000000028 < 0x72) {\n        if (iStack0000000000000028 == 0x58) {\n            fcn.00487640(0, noname_1, unaff_RDI, 0x4caf82);\n            return;\n        }\n        if (iStack0000000000000028 == 100) {\ncode_r0x00489c89:\n            if (*(in_RAX + 10) == '\\0') {\n                uVar1 = in_RAX[1];\n                uVar4 = *in_RAX;\n                uVar2 = uVar4;\n                if (in_RAX[2] < uVar1 + 1) {\n                    uVar5 = uVar1;\n                    uVar2 = fcn.00444c60(uVar1);\n                    in_RAX[2] = uVar1;\n                    if (*0x5d3dd0 == 0) {\n                        *in_RAX = uVar2;\n                        uVar1 = uVar4;\n                    }\n                    else {\n                        uVar2 = fcn.0045c5a0(uVar1, uVar5, arg3, arg4);\n                        uVar1 = uVar4;\n                    }\n                }\n                in_RAX[1] = uVar1 + 1;\n                *(uVar2 + uVar1) = 0x5b;\n                for (iVar7 = 0; iVar7 < arg1; iVar7 = iVar7 + 1) {\n                    if (0 < iVar7) {\n                        uVar1 = in_RAX[1];\n                        uVar4 = *in_RAX;\n                        uVar2 = uVar4;\n                        if (in_RAX[2] < uVar1 + 1) {\n                            arg2 = iVar7;\n                            uVar2 = fcn.00444c60(uVar1);\n                            in_RAX[2] = uVar1;\n                            if (*0x5d3dd0 == 0) {\n                                *in_RAX = uVar2;\n                                uVar1 = uVar4;\n                            }\n                            else {\n                                uVar2 = fcn.0045c5a0(uVar1, arg2, arg3, arg4);\n                                uVar1 = uVar4;\n                            }\n                        }\n                        in_RAX[1] = uVar1 + 1;\n                        *(uVar2 + uVar1) = 0x20;\n                    }\n                    arg3 = 0x4caf93;\n                    arg4 = 0x11;\n                    fcn.00486de0(10, in_RAX + 8, 0x4caf93, 0x11);\n                }\n                uVar1 = in_RAX[1];\n                uVar4 = *in_RAX;\n                uVar2 = uVar4;\n                if (in_RAX[2] < uVar1 + 1) {\n                    uVar2 = fcn.00444c60(uVar1);\n                    in_RAX[2] = uVar1;\n                    if (*0x5d3dd0 == 0) {\n                        *in_RAX = uVar2;\n                        uVar1 = uVar4;\n                    }\n                    else {\n                        uVar2 = fcn.0045c5a0(uVar1, iVar7, arg3, arg4);\n                        uVar1 = uVar4;\n                    }\n                }\n                in_RAX[1] = uVar1 + 1;\n                *(uVar2 + uVar1) = 0x5d;\n                return;\n            }\n            uVar4 = in_RAX[1];\n            uVar1 = uVar4 + arg4;\n            uVar2 = in_RAX[2];\n            uStack32 = *in_RAX;\n            if (uVar2 < uVar1) {\n                uVar2 = uVar4;\n                uStack32 = fcn.00444c60(uVar4);\n            }\n            uVar3 = uStack0000000000000030;\n            uVar8 = arg4;\n            fcn.0045d380(arg4);\n            uVar5 = uStack32;\n            in_RAX[1] = uVar1;\n            in_RAX[2] = uVar2;\n            uVar6 = uVar1;\n            if (*0x5d3dd0 == 0) {\n                *in_RAX = uStack32;\n            }\n            else {\n                fcn.0045c6e0(uVar1, uVar2, uVar3, uVar8);\n            }\n            if (unaff_RBX != 0) {\n                uVar1 = uVar5;\n                if (uVar2 < uVar4 + arg4 + 1) {\n                    iVar7 = unaff_RBX;\n                    uVar1 = fcn.00444c60(uVar6);\n                    in_RAX[2] = uVar6;\n                    if (*0x5d3dd0 == 0) {\n                        *in_RAX = uVar1;\n                        uVar6 = uVar5;\n                    }\n                    else {\n                        uVar1 = fcn.0045c5a0(uVar6, uVar2, iVar7, arg4);\n                        uVar6 = uVar5;\n                    }\n                }\n                in_RAX[1] = uVar6 + 1;\n                *(uVar1 + uVar6) = 0x7b;\n                for (iVar7 = 0; iVar7 < arg1; iVar7 = iVar7 + 1) {\n                    if (0 < iVar7) {\n                        uVar1 = in_RAX[1];\n                        arg4 = in_RAX[2];\n                        uVar4 = *in_RAX;\n                        if (arg4 < uVar1 + 2) {\n                            arg4 = uVar1;\n                            uVar4 = fcn.00444c60(uVar1);\n                        }\n                        *(uVar4 + uVar1) = 0x202c;\n                        in_RAX[1] = uVar1 + 2;\n                        in_RAX[2] = arg4;\n                        if (*0x5d3dd0 == 0) {\n                            *in_RAX = uVar4;\n                        }\n                        else {\n                            fcn.0045c700(uVar1, arg1, unaff_RBX, arg4);\n                        }\n                    }\n                    fcn.00489520(1);\n                }\n                uVar1 = in_RAX[1];\n                uVar4 = *in_RAX;\n                uVar2 = in_RAX[2];\n                uVar5 = uVar4;\n                if (uVar2 < uVar1 + 1) {\n                    uVar5 = fcn.00444c60(uVar1);\n                    in_RAX[2] = uVar1;\n                    if (*0x5d3dd0 == 0) {\n                        *in_RAX = uVar5;\n                        uVar1 = uVar4;\n                    }\n                    else {\n                        uVar5 = fcn.0045c5a0(uVar1, uVar2, unaff_RBX, arg4);\n                        uVar1 = uVar4;\n                    }\n                }\n                in_RAX[1] = uVar1 + 1;\n                *(uVar5 + uVar1) = 0x7d;\n                return;\n            }\n            uVar8 = uVar4 + arg4 + 5;\n            arg1_00 = uVar6;\n            if (uVar2 < uVar8) {\n                uVar5 = fcn.00444c60(uVar6);\n                arg1_00 = uVar1;\n                uVar2 = uVar6;\n            }\n            *(uVar5 + arg1_00) = 0x6c696e28;\n            *(uVar5 + 4 + arg1_00) = 0x29;\n            in_RAX[1] = uVar8;\n            in_RAX[2] = uVar2;\n            if (*0x5d3dd0 == 0) {\n                *in_RAX = uVar5;\n            }\n            else {\n                fcn.0045c6e0(arg1_00, uVar2, arg4, uVar4);\n            }\n            return;\n        }\n        if (iStack0000000000000028 == 0x71) {\n            fcn.004489c0(arg1);\n            fcn.00487be0(unaff_RBX);\n            return;\n        }\n    }\n    else {\n        if (iStack0000000000000028 == 0x73) {\n            fcn.004875c0(arg1);\n            return;\n        }\n        if (iStack0000000000000028 == 0x76) goto code_r0x00489c89;\n        if (iStack0000000000000028 == 0x78) {\n            fcn.00487640(0, noname_1, unaff_RDI, 0x4caf93);\n            return;\n        }\n    }\n    uStack16 = fcn.00409e40(unaff_RDI);\n    if (*0x57fc30 == '\\0') {\n        iStack24 = 0x4b37c0;\n        uVar3 = *0x57fc40;\n    }\n    else {\n        iStack24 = 0x4b37c0;\n        *0x57fc38 = 0x4b37c0;\n        uVar3 = uStack16;\n        if (*0x5d3dd0 != 0) {\n            uStack16 = fcn.0045c5a0(unaff_RDI, 0x4b37c0, arg3, arg4);\n            uVar3 = *0x57fc40;\n        }\n    }\n    *0x57fc40 = uVar3;\n    uVar3 = uStack16;\n    iVar7 = iStack24;\n    if (iStack24 == 0) {\n        uVar3 = 0;\n        iVar7 = 0;\n    }\n    fcn.0048bc80(uVar3, iVar7, 0);\n    return;\n}\n",
        "token_count": 2508
    },
    "0048a2c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0048a2c0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t arg4;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    ulong noname_0;\n    uint64_t arg4_00;\n    uint64_t uVar6;\n    uint64_t arg1_00;\n    uint64_t arg3;\n    ulong arg2;\n    int32_t unaff_ESI;\n    ulong unaff_RDI;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int32_t iStack0000000000000028;\n    uchar auStack24 [8];\n    int64_t iStack16;\n    \n    iStack0000000000000028 = unaff_ESI;\n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar7 = unaff_RDI & 0x1f;\n    uVar8 = uVar7 - 0x12;\n    if (((1 < uVar8) && (uVar8 = uVar7 - 0x15,  2 < uVar8)) && (uVar7 != 0x1a)) {\n        fcn.00488fc0(arg1, unaff_RDI, uVar8);\n        return;\n    }\n    noname_0 = unaff_RDI;\n    arg2 = unaff_RDI;\n    iStack16 = arg1;\n    arg4 = fcn.00475840(unaff_RDI);\n    if (iStack0000000000000028 < 0x65) {\n        if (((iStack0000000000000028 == 0x58) || (iStack0000000000000028 == 0x62)) || (iStack0000000000000028 == 100))\n        goto code_r0x0048a6b5;\n    }\n    else if (iStack0000000000000028 < 0x71) {\n        if (iStack0000000000000028 == 0x6f) {\ncode_r0x0048a6b5:\n            fcn.004895c0(0, arg2);\n            return;\n        }\n        if (iStack0000000000000028 == 0x70) {\n            fcn.00489520(*(in_RAX + 0x4c) ^ 1);\n            return;\n        }\n    }\n    else {\n        if (iStack0000000000000028 == 0x76) {\n            if (*(in_RAX + 10) != '\\0') {\n                iVar3 = in_RAX[1];\n                iVar1 = *in_RAX;\n                iVar2 = iVar1;\n                if (in_RAX[2] < iVar3 + 1U) {\n                    piVar4 = in_RAX;\n                    iVar2 = fcn.00444c60(iVar3);\n                    in_RAX[2] = iVar3;\n                    if (*0x5d3dd0 == 0) {\n                        *in_RAX = iVar2;\n                        iVar3 = iVar1;\n                    }\n                    else {\n                        iVar2 = fcn.0045c5a0(iVar3, piVar4, uVar8, in_R9);\n                        iVar3 = iVar1;\n                    }\n                }\n                iVar1 = iStack16;\n                in_RAX[1] = iVar3 + 1;\n                *(iVar2 + iVar3) = 0x28;\n                iVar3 = fcn.00475d80(unaff_RDI);\n                (**(iVar3 + 0xf8))();\n                uVar7 = in_RAX[1];\n                uVar8 = uVar7 + iVar1;\n                arg4_00 = in_RAX[2];\n                iVar3 = *in_RAX;\n                if (arg4_00 < uVar8) {\n                    arg4_00 = uVar7;\n                    iVar3 = fcn.00444c60(uVar7);\n                }\n                fcn.0045d380(iVar1);\n                in_RAX[1] = uVar8;\n                in_RAX[2] = arg4_00;\n                arg3 = uVar7 + iVar1 + 2;\n                uVar6 = uVar8;\n                iVar2 = iVar1;\n                if (*0x5d3dd0 == 0) {\n                    *in_RAX = iVar3;\n                    piVar4 = in_RAX;\n                }\n                else {\n                    piVar4 = fcn.0045c740(uVar8, iVar1, arg3);\n                }\n                arg1_00 = uVar6;\n                if (arg4_00 < arg3) {\n                    iVar3 = fcn.00444c60(uVar6);\n                    piVar4 = in_RAX;\n                    arg1_00 = uVar8;\n                    iVar2 = iVar1;\n                    arg4_00 = uVar6;\n                }\n                *(iVar3 + arg1_00) = 0x2829;\n                piVar4[1] = arg3;\n                piVar4[2] = arg4_00;\n                if (*0x5d3dd0 == 0) {\n                    *piVar4 = iVar3;\n                }\n                else {\n                    piVar4 = fcn.0045c6e0(arg1_00, iVar2, arg3, arg4_00);\n                }\n                if (arg4 == 0) {\n                    uVar7 = uVar7 + iVar2 + 5;\n                    if (arg4_00 < uVar7) {\n                        uVar6 = arg3;\n                        iVar3 = fcn.00444c60(arg3);\n                        piVar4 = in_RAX;\n                        arg1_00 = uVar8;\n                        arg4_00 = arg3;\n                        arg3 = uVar6;\n                    }\n                    *(arg1_00 + 2 + iVar3) = 0x696e;\n                    *(arg1_00 + 4 + iVar3) = 0x6c;\n                    piVar4[1] = uVar7;\n                    piVar4[2] = arg4_00;\n                    if (*0x5d3dd0 == 0) {\n                        *piVar4 = iVar3;\n                    }\n                    else {\n                        piVar4 = fcn.0045c6e0(arg1_00, iVar2, arg3, arg4);\n                    }\n                }\n                else {\n                    fcn.00489520(1);\n                    piVar4 = in_RAX;\n                }\n                iVar3 = piVar4[1];\n                iVar1 = *piVar4;\n                iVar5 = iVar1;\n                if (piVar4[2] < iVar3 + 1U) {\n                    iVar5 = fcn.00444c60(iVar3);\n                    in_RAX[2] = iVar3;\n                    if (*0x5d3dd0 == 0) {\n                        *in_RAX = iVar5;\n                        piVar4 = in_RAX;\n                        iVar3 = iVar1;\n                    }\n                    else {\n                        iVar5 = fcn.0045c5a0(iVar3, iVar2, arg3, arg4);\n                        piVar4 = in_RAX;\n                        iVar3 = iVar1;\n                    }\n                }\n                piVar4[1] = iVar3 + 1;\n                *(iVar5 + iVar3) = 0x29;\n                return;\n            }\n            if (arg4 == 0) {\n                fcn.00486740(5);\n                return;\n            }\n            fcn.00489520(*(in_RAX + 0x4c) ^ 1);\n            return;\n        }\n        if (iStack0000000000000028 == 0x78) goto code_r0x0048a6b5;\n    }\n    fcn.00488fc0(noname_0, arg2, uVar8);\n    return;\n}\n",
        "token_count": 1786
    },
    "0048a740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048a740(ulong arg1, ulong noname_1, ulong *arg3)\n\n{\n    uint8_t uVar1;\n    uchar uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    ulong unaff_RBX;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t *unaff_RDI;\n    int64_t iVar14;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    bool bVar15;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x6c) = unaff_RDI;\n            *(*0x20 + -0xb8) = 0x48a7aa;\n            iVar3 = fcn.00433060(arg1, *0x20 + 8);\n            if (iVar3 == 0) {\n                return;\n            }\n            iVar10 = *(*0x20 + -0x20);\n            if (iVar10 == 0) {\n                uVar9 = 0;\n                bVar15 = false;\n                arg3 = NULL;\n            }\n            else {\n                if (*0x57fc30 == '\\0') {\n                    arg3 = *(*0x20 + 0x18);\n                }\n                else {\n                    *0x57fc38 = iVar10;\n                    if (*0x5d3dd0 == 0) {\n                        arg3 = *(*0x20 + 0x18);\n                        *0x57fc40 = arg3;\n                    }\n                    else {\n                        arg3 = *(*0x20 + 0x18);\n                        *(*0x20 + -0xb8) = 0x48a808;\n                        iVar3 = fcn.0045c720(arg1, iVar10, arg3, in_R9);\n                    }\n                }\n                *(*0x20 + -0x18) = iVar10;\n                *(*0x20 + -0x10) = arg3;\n                if (*(*0x20 + -0x18) == 0) {\n                    uVar9 = 0;\n                    bVar15 = false;\n                    arg3 = NULL;\n                }\n                else {\n                    uVar1 = *(*(*0x20 + -0x18) + 0x17);\n                    in_R9 = uVar1;\n                    uVar9 = uVar1 & 0x1f;\n                    bVar15 = (uVar1 & 0x20) == 0;\n                }\n            }\n            if (uVar9 == 0x16) {\n                if (bVar15) {\n                    arg3 = *arg3;\n                }\n                if (arg3 == NULL) {\n                    piVar4 = *(*0x20 + 8);\n                    uVar6 = piVar4[1];\n                    uVar7 = uVar6 + 5;\n                    iVar3 = *piVar4;\n                    uVar8 = uVar6;\n                    uVar11 = piVar4[2];\n                    if (piVar4[2] < uVar7) {\n                        *(*0x20 + -0x48) = uVar7;\n                        *(*0x20 + -0x50) = uVar6;\n                        *(*0x20 + -0xb8) = 0x48a8be;\n                        iVar3 = fcn.00444c60(uVar6);\n                        uVar7 = *(*0x20 + -0x48);\n                        piVar4 = *(*0x20 + 8);\n                        uVar8 = *(*0x20 + -0x50);\n                        uVar11 = uVar6;\n                    }\n                    *(iVar3 + uVar8) = 0x6c696e3c;\n                    *(iVar3 + 4 + uVar8) = 0x3e;\n                    piVar4[1] = uVar7;\n                    piVar4[2] = uVar11;\n                    if (*0x5d3dd0 == 0) {\n                        *piVar4 = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x48a8fd;\n                        fcn.0045c6e0(uVar8, uVar11, arg3, in_R9);\n                    }\n                    return;\n                }\n            }\n            unaff_RDI = *(*0x20 + 8);\n            if (*(unaff_RDI + 0xb2) == '\\0') {\n                *(*0x20 + -0x68) = iVar3;\n                *(*0x20 + -0x30) = unaff_RBX;\n                uVar2 = *(unaff_RDI + 10);\n                *(*0x20 + -0x39) = unaff_RDI[9];\n                *(*0x20 + -0x31) = uVar2;\n                unaff_RDI[9] = 0;\n                *(unaff_RDI + 0x49) = 0;\n                uVar6 = unaff_RDI[1];\n                uVar7 = uVar6 + 2;\n                iVar3 = *unaff_RDI;\n                uVar8 = uVar6;\n                uVar11 = unaff_RDI[2];\n                if (unaff_RDI[2] < uVar7) {\n                    *(*0x20 + -0x48) = uVar7;\n                    *(*0x20 + -0x50) = uVar6;\n                    *(*0x20 + -0xb8) = 0x48a988;\n                    iVar3 = fcn.00444c60(uVar6);\n                    uVar7 = *(*0x20 + -0x48);\n                    unaff_RDI = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0x50);\n                    uVar11 = uVar6;\n                }\n                *(iVar3 + uVar8) = 0x2125;\n                unaff_RDI[1] = uVar7;\n                unaff_RDI[2] = uVar11;\n                if (*0x5d3dd0 == 0) {\n                    *unaff_RDI = iVar3;\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x48a9cf;\n                    fcn.0045c720(uVar8, uVar11, iVar3, in_R9);\n                }\n                *(*0x20 + -0xb8) = 0x48a9db;\n                fcn.004887c0();\n                piVar4 = *(*0x20 + 8);\n                uVar6 = piVar4[1];\n                *(*0x20 + -0x48) = uVar6;\n                uVar7 = uVar6 + 7;\n                iVar3 = *piVar4;\n                uVar8 = uVar6;\n                uVar11 = piVar4[2];\n                if (piVar4[2] < uVar7) {\n                    *(*0x20 + -0x50) = uVar7;\n                    *(*0x20 + -0xb8) = 0x48aa11;\n                    iVar3 = fcn.00444c60(uVar6);\n                    uVar7 = *(*0x20 + -0x50);\n                    piVar4 = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0x48);\n                    uVar11 = uVar6;\n                }\n                *(iVar3 + uVar8) = 0x4e415028;\n                *(iVar3 + 3 + uVar8) = 0x3d43494e;\n                piVar4[1] = uVar7;\n                piVar4[2] = uVar11;\n                iVar14 = *(*0x20 + 0x30);\n                uVar6 = uVar8 + iVar14 + 7;\n                iVar10 = uVar8 + iVar14;\n                if (*0x5d3dd0 == 0) {\n                    *piVar4 = iVar3;\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x48aa67;\n                    fcn.0045c6e0(uVar8, uVar11, iVar14, uVar6);\n                }\n                *(*0x20 + -0x50) = iVar10;\n                *(*0x20 + -0x58) = uVar6;\n                if (uVar11 < uVar6) {\n                    *(*0x20 + -0xb8) = 0x48aa8c;\n                    iVar3 = fcn.00444c60(uVar7);\n                    iVar14 = *(*0x20 + 0x30);\n                    uVar11 = uVar7;\n                }\n                *(*0x20 + -0x60) = uVar11;\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0xb8) = 0x48aac5;\n                fcn.0045d380(iVar14);\n                uVar8 = *(*0x20 + -0x58);\n                piVar4 = *(*0x20 + 8);\n                piVar4[1] = uVar8;\n                uVar11 = *(*0x20 + -0x60);\n                piVar4[2] = uVar11;\n                uVar7 = *(*0x20 + -0x48) + *(*0x20 + 0x30) + 0x10;\n                if (*0x5d3dd0 == 0) {\n                    iVar3 = *(*0x20 + -0x28);\n                    *piVar4 = iVar3;\n                }\n                else {\n                    iVar3 = *(*0x20 + -0x28);\n                    *(*0x20 + -0xb8) = 0x48ab1d;\n                    piVar4 = fcn.0045c6e0(uVar8, uVar11, iVar14, uVar6);\n                }\n                if (uVar11 < uVar7) {\n                    *(*0x20 + -0x48) = uVar7;\n                    *(*0x20 + -0xb8) = 0x48ab37;\n                    iVar3 = fcn.00444c60(uVar8);\n                    uVar7 = *(*0x20 + -0x48);\n                    piVar4 = *(*0x20 + 8);\n                    uVar11 = uVar8;\n                }\n                iVar10 = *(*0x20 + -0x50);\n                *(iVar10 + 7 + iVar3) = 0x3a646f6874656d20;\n                *(iVar10 + 0xf + iVar3) = 0x20;\n                piVar4[1] = uVar7;\n                piVar4[2] = uVar11;\n                if (*0x5d3dd0 == 0) {\n                    *piVar4 = iVar3;\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x48ab85;\n                    piVar4 = fcn.0045c6e0(uVar8, 0x3a646f6874656d20, iVar10, uVar6);\n                }\n                *(piVar4 + 0xb2) = 1;\n                *(*0x20 + -0xb8) = 0x48aba5;\n                fcn.0048b4a0(*(*0x20 + -0x30));\n                piVar4 = *(*0x20 + 8);\n                *(piVar4 + 0xb2) = 0;\n                iVar3 = piVar4[1];\n                iVar14 = *piVar4;\n                piVar12 = piVar4;\n                iVar5 = iVar14;\n                if (piVar4[2] < iVar3 + 1U) {\n                    *(*0x20 + -0xb8) = 0x48abd5;\n                    iVar5 = fcn.00444c60(iVar3);\n                    piVar12 = *(*0x20 + 8);\n                    piVar12[2] = iVar3;\n                    if (*0x5d3dd0 == 0) {\n                        *piVar12 = iVar5;\n                        iVar3 = iVar14;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x48abf4;\n                        iVar5 = fcn.0045c5a0(iVar3, piVar4, iVar10, uVar6);\n                        iVar3 = iVar14;\n                    }\n                }\n                piVar12[1] = iVar3 + 1;\n                *(iVar5 + iVar3) = 0x29;\n                uVar2 = *(*0x20 + -0x31);\n                piVar12[9] = *(*0x20 + -0x39);\n                *(piVar12 + 10) = uVar2;\n                return;\n            }\n            *(*0x20 + -0xb8) = 0x48ac2f;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        *(puVar13 + 0x18) = arg1;\n        *(puVar13 + 0x20) = unaff_RDI;\n        *(puVar13 + 0x28) = unaff_RSI;\n        *(puVar13 + 0x30) = arg3;\n        *(puVar13 + -8) = 0x48ac52;\n        fcn.0045a360();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        arg1 = *(puVar13 + 0x18);\n        unaff_RDI = *(puVar13 + 0x20);\n        unaff_RSI = *(puVar13 + 0x28);\n        arg3 = *(puVar13 + 0x30);\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 3326
    },
    "0048ac80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar fcn.0048ac80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong arg1;\n    uint64_t uVar5;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack456 [56];\n    ulong *puStack400;\n    ulong *puStack328;\n    ulong *puStack256;\n    int64_t iStack208;\n    int64_t iStack200;\n    ulong uStack192;\n    ulong uStack184;\n    ulong uStack176;\n    ulong auStack168 [2];\n    ulong uStack152;\n    uchar auStack144 [16];\n    ulong auStack128 [2];\n    ulong uStack112;\n    uchar auStack104 [16];\n    ulong auStack88 [2];\n    ulong uStack72;\n    uchar auStack64 [16];\n    ulong auStack48 [2];\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (auStack456 < *(unaff_R14 + 0x10) || auStack456 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*(in_RAX + 0xb3) != '\\0') {\n        fcn.00431da0();\n        return 0;\n    }\n    iVar4 = in_RAX;\n    if (unaff_EBX == 0x77) {\n        uVar1 = *(in_RAX + 0x18);\n        arg1 = *(in_RAX + 0x20);\n        iVar3 = fcn.00409fa0(arg1);\n        if (((iVar3 == 0) || (*(in_RAX + 0xb4) == '\\0')) || (*(in_RAX + 0xb8) != 0)) {\n            *(in_RAX + 0xb8) = 0;\n            if (*0x5d3dd0 == 0) {\n                *(in_RAX + 0xc0) = 0;\n            }\n            else {\n                arg1 = 0;\n                fcn.0045c6a0();\n            }\n            *(in_RAX + 0xb4) = 0;\n            fcn.00488fc0(arg1, in_RAX, param_3);\n            fcn.00431da0();\n            return 1;\n        }\n        *(in_RAX + 0xb8) = iVar3;\n        if (*0x5d3dd0 == 0) {\n            *(in_RAX + 0xc0) = uVar1;\n        }\n        else {\n            fcn.0045c6e0(arg1, in_RAX, param_3, param_4);\n        }\n        unaff_EBX = 0x76;\n    }\n    uStack184 = *(iVar4 + 0x18);\n    iVar4 = fcn.00409fa0(*(iVar4 + 0x20));\n    auStack24._12_4_ = SUB164(in_XMM15 >> 0x60, 0);\n    if (iVar4 != 0) {\n        uStack32 = *(in_RAX + 0x18);\n        auStack48[0] = 0x48b420;\n        puStack256 = auStack48;\n        iVar2 = fcn.00431780();\n        if (iVar2 != 0) {\n            fcn.00431da0();\n            return 1;\n        }\n        (**(iVar4 + 0x18))(in_RAX);\n        fcn.00431da0();\n        return 1;\n    }\n    if (*(in_RAX + 0x50) == '\\0') {\n        if (unaff_EBX < 0x72) {\n            if ((unaff_EBX != 0x58) && (unaff_EBX != 0x71)) goto code_r0x0048aff3;\n        }\n        else if (((unaff_EBX != 0x73) && (unaff_EBX != 0x76)) && (unaff_EBX != 0x78)) goto code_r0x0048aff3;\n        iStack208 = *(in_RAX + 0x18);\n        if (iStack208 != 0) {\n            uStack176 = *(in_RAX + 0x20);\n            iVar4 = fcn.00409fa0(*(in_RAX + 0x20));\n            if (iVar4 != 0) {\n                uStack112 = *(in_RAX + 0x18);\n                auStack128[0] = 0x48b320;\n                uVar5 = unaff_EBX;\n                auStack104 = CONCAT412(auStack24._12_4_, CONCAT48(unaff_EBX, *(in_RAX + 0x20)));\n                puStack400 = auStack128;\n                iStack200 = iStack208;\n                iVar2 = fcn.00431780();\n                if (iVar2 != 0) {\n                    fcn.00431da0();\n                    return 1;\n                }\n                (**(iVar4 + 0x18))();\n                fcn.00489ac0(auStack128, uVar5);\n                fcn.00431da0();\n                return 1;\n            }\n            iVar4 = fcn.00409fa0(uStack176);\n            if (iVar4 != 0) {\n                uStack152 = *(in_RAX + 0x18);\n                auStack168[0] = 0x48b2a0;\n                uVar5 = unaff_EBX;\n                auStack144 = CONCAT412(auStack24._12_4_, CONCAT48(unaff_EBX, *(in_RAX + 0x20)));\n                iVar2 = fcn.00431780();\n                if (iVar2 != 0) {\n                    fcn.00431da0();\n                    return 1;\n                }\n                (**(iVar4 + 0x18))();\n                fcn.00489ac0(auStack168, uVar5);\n                fcn.00431da0();\n                return 1;\n            }\n        }\n    }\n    else {\n        uStack192 = *(in_RAX + 0x18);\n        iVar4 = fcn.00409fa0(*(in_RAX + 0x20));\n        if (iVar4 != 0) {\n            uStack72 = *(in_RAX + 0x18);\n            uVar1 = *(in_RAX + 0x20);\n            auStack88[0] = 0x48b3a0;\n            auStack64 = CONCAT412(auStack24._12_4_, CONCAT48(unaff_EBX, uVar1));\n            puStack328 = auStack88;\n            iVar2 = fcn.00431780();\n            if (iVar2 != 0) {\n                fcn.00431da0();\n                return 1;\n            }\n            (**(iVar4 + 0x18))();\n            fcn.004874c0(uVar1);\n            fcn.00431da0();\n            return 1;\n        }\n    }\ncode_r0x0048aff3:\n    fcn.00431da0();\n    return 0;\n}\n",
        "token_count": 1621
    },
    "0048b4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048b4a0(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong arg1_00;\n    char cVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t arg1_01;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint32_t unaff_EDI;\n    int64_t in_R8;\n    ulong in_R9;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack24 [8];\n    int64_t iStack16;\n    \n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    *(in_RAX + 0x18) = unaff_RBX;\n    iVar4 = in_RAX + 0x20;\n    if (*0x5d3dd0 == 0) {\n        *(in_RAX + 0x20) = arg1;\n    }\n    else {\n        in_RAX = fcn.0045c6a0();\n    }\n    *(in_RAX + 0x38) = 0;\n    if (*0x5d3dd0 == 0) {\n        *(in_RAX + 0x28) = in_XMM15;\n    }\n    else {\n        fcn.0045c6c0(arg1, 0, iVar4, in_R9);\n        in_RAX = fcn.0045c6c0(arg1, 0, iVar4, in_R9);\n        in_R8 = iVar4;\n    }\n    if (unaff_RBX == 0) {\n        if ((unaff_EDI == 0x54) || (unaff_EDI == 0x76)) {\n            fcn.00486740(5);\n        }\n        else {\n            fcn.00488fc0(arg1, iVar4, in_R8);\n        }\n        return;\n    }\n    if (unaff_EDI == 0x54) {\n        if (unaff_RBX == 0) {\n            iVar5 = 0;\n            iVar4 = 0;\n        }\n        else {\n            iVar5 = 0x4fa5c0;\n            iVar4 = unaff_RBX;\n        }\n        iStack16 = arg1;\n        (**(iVar5 + 0xf8))(iVar4);\n        fcn.004874c0(unaff_RBX);\n        return;\n    }\n    if (unaff_EDI != 0x70) {\n        if (unaff_RBX != 0) {\n            uVar1 = *(unaff_RBX + 0x10);\n            if (uVar1 < 0xb0c23ed4) {\n                if (uVar1 < 0x500c1abd) {\n                    if (uVar1 < 0x2ea27ffc) {\n                        if (uVar1 == 0x13ff06c5) {\n                            if (unaff_RBX == 0x4b3a40) {\n                                fcn.004894c0(unaff_EDI);\n                                return;\n                            }\n                        }\n                        else if ((uVar1 == 0x2ea27ffb) && (unaff_RBX == 0x4b3c40)) {\n                            fcn.004897c0(unaff_EDI);\n                            return;\n                        }\n                    }\n                    else if (uVar1 == 0x382e7edf) {\n                        if (unaff_RBX == 0x4b37c0) {\n                            fcn.00489bc0(*(arg1 + 8), *(arg1 + 8), 0x4c7f30, 6);\n                            return;\n                        }\n                    }\n                    else if ((uVar1 == 0x500c1abc) && (unaff_RBX == 0x4c6cc0)) {\n                        arg1_01 = *(arg1 + 0x10);\n                        arg1_00 = *(arg1 + 8);\n                        if ((arg1_01 != 0) && ((arg1_01 & 0x60) == 0)) {\n                            arg4 = arg1_01;\n                            uVar3 = fcn.00474f20(arg1_01);\n                            *(in_RAX + 0x18) = uVar3;\n                            if (*0x5d3dd0 == 0) {\n                                *(in_RAX + 0x20) = arg1_00;\n                                iVar4 = in_RAX;\n                            }\n                            else {\n                                fcn.0045c6e0(arg1_01, in_RAX, in_R8, arg4);\n                                iVar4 = in_RAX;\n                            }\n                            cVar2 = fcn.0048ac80();\n                            if (cVar2 != '\\0') {\n                                return;\n                            }\n                        }\n                        fcn.0048bc80(arg1_00, iVar4, 0);\n                        return;\n                    }\n                }\n                else if (uVar1 < 0x7925028d) {\n                    if (uVar1 == 0x663e425f) {\n                        if (unaff_RBX == 0x4b48c0) {\n                            fcn.004895c0(0, 0x4b48c0);\n                            return;\n                        }\n                    }\n                    else if ((uVar1 == 0x7925028c) && (unaff_RBX == 0x4b3b80)) {\n                        fcn.004898c0(unaff_EDI);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0x86318d2e) {\n                    if (unaff_RBX == 0x4b4880) {\n                        fcn.004895c0(0, 0x4b4880);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0x963f9bff) {\n                    if (unaff_RBX == 0x4b4140) {\n                        fcn.004895c0(1, 0x4b4140);\n                        return;\n                    }\n                }\n                else if ((uVar1 == 0xb0c23ed3) && (unaff_RBX == 0x4b3c00)) {\n                    fcn.004897c0(unaff_EDI);\n                    return;\n                }\n            }\n            else if (uVar1 < 0xd04ae83e) {\n                if (uVar1 < 0xbbad4103) {\n                    if (uVar1 == 0xb31a546d) {\n                        if (unaff_RBX == 0x4b3b40) {\n                            fcn.004898c0(unaff_EDI);\n                            return;\n                        }\n                    }\n                    else if ((uVar1 == 0xbbad4102) && (unaff_RBX == 0x4b4100)) {\n                        fcn.004895c0(1, 0x4b4100);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0xbd4ad792) {\n                    if (unaff_RBX == 0x4b4900) {\n                        fcn.004895c0(0, 0x4b4900);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0xcc06c027) {\n                    if (unaff_RBX == 0x4b4180) {\n                        fcn.004895c0(1, 0x4b4180);\n                        return;\n                    }\n                }\n                else if ((uVar1 == 0xd04ae83d) && (unaff_RBX == 0x4b4840)) {\n                    fcn.004895c0(0, 0x4b4840);\n                    return;\n                }\n            }\n            else if (uVar1 < 0xe0ff5cb5) {\n                if (uVar1 == 0xd5b87712) {\n                    if (unaff_RBX == 0x4b47c0) {\n                        fcn.004895c0(0, 0x4b47c0);\n                        return;\n                    }\n                }\n                else if ((uVar1 == 0xe0ff5cb4) && (unaff_RBX == 0x4b4740)) {\n                    fcn.00489ac0(*(arg1 + 8), *(arg1 + 8));\n                    return;\n                }\n            }\n            else if (uVar1 == 0xecd580ce) {\n                if (unaff_RBX == 0x4b40c0) {\n                    fcn.004895c0(1, 0x4b40c0);\n                    return;\n                }\n            }\n            else if (uVar1 == 0xeff20ea0) {\n                if (unaff_RBX == 0x4b4800) {\n                    fcn.004895c0(0, 0x4b4800);\n                    return;\n                }\n            }\n            else if ((uVar1 == 0xf75371fa) && (unaff_RBX == 0x4b4080)) {\n                fcn.004895c0(1, 0x4b4080);\n                return;\n            }\n        }\n        iVar4 = arg1;\n        cVar2 = fcn.0048ac80();\n        if (cVar2 == '\\0') {\n            iVar5 = *0x57fc40;\n            if ((*0x57fc30 != '\\0') && (*0x57fc38 = unaff_RBX,  iVar5 = arg1,  *0x5d3dd0 != 0)) {\n                fcn.0045c740(iVar4, unaff_RBX, in_R8);\n                iVar5 = *0x57fc40;\n            }\n            *0x57fc40 = iVar5;\n            if (unaff_RBX == 0) {\n                unaff_RBX = 0;\n                arg1 = 0;\n            }\n            fcn.0048bc80(arg1, unaff_RBX, 0);\n        }\n        return;\n    }\n    iVar4 = *0x57fc40;\n    if ((*0x57fc30 != '\\0') && (*0x57fc38 = unaff_RBX,  iVar4 = arg1,  *0x5d3dd0 != 0)) {\n        fcn.0045c6a0();\n        iVar4 = *0x57fc40;\n    }\n    *0x57fc40 = iVar4;\n    if (unaff_RBX == 0) {\n        arg1 = 0;\n    }\n    fcn.0048a2c0(arg1);\n    return;\n}\n",
        "token_count": 2385
    },
    "0048dee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048dee0(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint64_t uVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 2) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00444c60(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x2125;\n    in_RAX[1] = uVar1 + 2;\n    in_RAX[2] = uVar3;\n    if (*0x5d3dd0 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045c6c0(uVar1, iVar2, arg3, in_R9);\n    }\n    fcn.004887c0();\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 10) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00444c60(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x45444e4944414228;\n    *(iVar2 + 8 + uVar1) = 0x2958;\n    in_RAX[1] = uVar1 + 10;\n    in_RAX[2] = uVar3;\n    if (*0x5d3dd0 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045c6e0(uVar1, uVar3, arg3, in_R9);\n    }\n    return;\n}\n",
        "token_count": 500
    },
    "0048e020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048e020(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint64_t uVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 2) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00444c60(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x2125;\n    in_RAX[1] = uVar1 + 2;\n    in_RAX[2] = uVar3;\n    if (*0x5d3dd0 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045c6c0(uVar1, iVar2, arg3, in_R9);\n    }\n    fcn.004887c0();\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 9) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00444c60(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x474e495353494d28;\n    *(iVar2 + 8 + uVar1) = 0x29;\n    in_RAX[1] = uVar1 + 9;\n    in_RAX[2] = uVar3;\n    if (*0x5d3dd0 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045c6e0(uVar1, uVar3, arg3, in_R9);\n    }\n    return;\n}\n",
        "token_count": 499
    },
    "0048e160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048e160(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint8_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    ulong *puVar4;\n    uint32_t uVar5;\n    uint64_t *in_RAX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    ulong uVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    char cVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint64_t unaff_RBX;\n    int64_t iVar16;\n    uint64_t uVar17;\n    uchar *puVar18;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t iVar19;\n    uint64_t unaff_RDI;\n    int64_t iVar20;\n    int64_t unaff_R14;\n    bool bVar21;\n    bool bVar22;\n    \n    while (puVar18 = *0x20,  *0x20 + -0x70 < *(unaff_R14 + 0x10) || *0x20 + -0x70 == *(unaff_R14 + 0x10)) {\ncode_r0x0048f11c:\n        *(puVar18 + 8) = in_RAX;\n        *(puVar18 + 0x10) = unaff_RBX;\n        *(puVar18 + 0x18) = arg1;\n        *(puVar18 + 0x20) = unaff_RDI;\n        *(puVar18 + 0x28) = unaff_RSI;\n        *(puVar18 + 0x30) = arg3;\n        *(puVar18 + -8) = 0x48f13f;\n        fcn.0045a360();\n        in_RAX = *(puVar18 + 8);\n        unaff_RBX = *(puVar18 + 0x10);\n        arg1 = *(puVar18 + 0x18);\n        unaff_RDI = *(puVar18 + 0x20);\n        unaff_RSI = *(puVar18 + 0x28);\n        arg3 = *(puVar18 + 0x30);\n        *0x20 = puVar18;\n    }\n    puVar18 = *0x20 + -0xf0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x28) = unaff_RSI;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + -0x20) = unaff_RDI;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(in_RAX + 0x16) = 0;\n    uVar13 = 0;\n    uVar17 = 0;\n    do {\n        if (arg1 <= uVar13) goto code_r0x0048e9da;\n        *(in_RAX + 0xb1) = 1;\n        uVar14 = uVar13;\ncode_r0x0048ee88:\n        if (uVar13 < arg1) {\n            if (arg1 <= uVar13) goto code_r0x0048f113;\n            if (*(unaff_RBX + uVar13) == '%') goto code_r0x0048e20b;\n            goto code_r0x0048ee85;\n        }\ncode_r0x0048e20b:\n        *(*0x20 + -0x98) = uVar17;\n        if (uVar14 < uVar13) {\n            bVar21 = uVar13 <= arg1;\n            uVar6 = arg1;\n            arg1 = uVar13;\n            if (bVar21) {\n                if (uVar14 <= uVar13) {\n                    *(*0x20 + -0xa0) = uVar13;\n                    iVar19 = uVar13 - uVar14;\n                    uVar13 = in_RAX[1];\n                    *(*0x20 + -0x58) = iVar19 + uVar13;\n                    uVar6 = *in_RAX;\n                    uVar15 = in_RAX[2];\n                    if (in_RAX[2] < iVar19 + uVar13) {\n                        *(*0x20 + -0x60) = iVar19;\n                        *(*0x20 + -0x48) = unaff_RBX + (uVar14 & -iVar19 >> 0x3f);\n                        *(*0x20 + -0x68) = uVar13;\n                        *(*0x20 + -0xf8) = 0x48e297;\n                        uVar6 = fcn.00444c60(uVar13);\n                        iVar19 = *(*0x20 + -0x60);\n                        uVar15 = uVar13;\n                    }\n                    *(*0x20 + -0x60) = uVar15;\n                    *(*0x20 + -0x38) = uVar6;\n                    *(*0x20 + -0xf8) = 0x48e2d4;\n                    fcn.0045d380(iVar19);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[1] = *(*0x20 + -0x58);\n                    in_RAX[2] = *(*0x20 + -0x60);\n                    if (*0x5d3dd0 == 0) {\n                        *in_RAX = *(*0x20 + -0x38);\n                        arg1 = *(*0x20 + 0x18);\n                        uVar13 = *(*0x20 + -0xa0);\n                        bVar22 = SBORROW8(arg1, uVar13);\n                        iVar19 = arg1 - uVar13;\n                        bVar21 = arg1 == uVar13;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48e32a;\n                        in_RAX = fcn.0045c6c0(iVar19, *(*0x20 + -0x38), uVar6, uVar17);\n                        arg1 = *(*0x20 + 0x18);\n                        uVar13 = *(*0x20 + -0xa0);\n                        bVar22 = SBORROW8(arg1, uVar13);\n                        iVar19 = arg1 - uVar13;\n                        bVar21 = arg1 == uVar13;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x20);\n                    arg3 = *(*0x20 + 0x30);\n                    uVar17 = *(*0x20 + -0x98);\n                    goto code_r0x0048e365;\n                }\n                goto code_r0x0048f0f9;\n            }\ncode_r0x0048f105:\n            *(*0x20 + -0xf8) = 0x48f113;\n            fcn.0045ca80(arg1, uVar6);\ncode_r0x0048f113:\n            *(*0x20 + -0xf8) = 0x48f11b;\n            in_RAX = fcn.0045ca40(arg1);\n            goto code_r0x0048f11c;\n        }\n        bVar22 = SBORROW8(arg1, uVar13);\n        iVar19 = arg1 - uVar13;\n        bVar21 = arg1 == uVar13;\ncode_r0x0048e365:\n        if (bVar21 || bVar22 != iVar19 < 0) goto code_r0x0048e9da;\n        in_RAX[9] = 0;\n        *(in_RAX + 0x49) = 0;\n        while (uVar13 = uVar13 + 1,  uVar13 < arg1) {\n            if (arg1 <= uVar13) goto code_r0x0048f0f1;\n            uVar1 = *(unaff_RBX + uVar13);\n            if (uVar1 < 0x24) {\n                if (uVar1 == 0x20) {\n                    *(in_RAX + 0x4d) = 1;\n                }\n                else {\n                    if (uVar1 != 0x23) {\ncode_r0x0048e385:\n                        if ((uVar1 + 0x9f < 0x1a) && (uVar17 < unaff_RSI)) {\n                            if (uVar1 == 0x76) {\n                                *(in_RAX + 10) = *(in_RAX + 0x4c);\n                                *(in_RAX + 0x4c) = 0;\n                                *(in_RAX + 0x4f) = *(in_RAX + 0x4b);\n                                *(in_RAX + 0x4b) = 0;\n                            }\n                            if (unaff_RSI <= uVar17) goto code_r0x0048f0e6;\n                            *(*0x20 + -0xa0) = uVar13;\n                            uVar9 = *(unaff_RDI + 8 + uVar17 * 0x10);\n                            *(*0x20 + -0xf8) = 0x48e3e8;\n                            fcn.0048b4a0(uVar9);\n                            uVar14 = *(*0x20 + -0x98) + 1;\n                            uVar13 = *(*0x20 + -0xa0) + 1;\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + 8);\n                            goto code_r0x0048e1cc;\n                        }\n                        break;\n                    }\n                    *(in_RAX + 0x4c) = 1;\n                }\n            }\n            else if (uVar1 == 0x2b) {\n                *(in_RAX + 0x4b) = 1;\n            }\n            else if (uVar1 == 0x2d) {\n                *(in_RAX + 0x4a) = 1;\n                *(in_RAX + 0x4e) = 0;\n            }\n            else {\n                if (uVar1 != 0x30) goto code_r0x0048e385;\n                *(in_RAX + 0x4e) = *(in_RAX + 0x4a) ^ 1;\n            }\n        }\n        *(*0x20 + -0xf8) = 0x48e42f;\n        uVar15 = uVar13;\n        arg3 = unaff_RSI;\n        uVar6 = fcn.0048ddc0(unaff_RBX, uVar13, unaff_RSI);\n        cVar12 = unaff_RBX;\n        arg1 = *(*0x20 + 0x18);\n        if (uVar17 < arg1) {\n            unaff_RSI = uVar13;\n            if (uVar17 < arg1) {\n                uVar13 = *(*0x20 + 0x10);\n                if (*(uVar13 + uVar17) != '*') goto code_r0x0048e592;\n                *(*0x20 + -0x70) = uVar17;\n                uVar9 = *(*0x20 + 0x28);\n                uVar6 = *(*0x20 + 0x30);\n                *(*0x20 + -0xf8) = 0x48e496;\n                iVar19 = fcn.0048dac0(uVar6);\n                piVar10 = *(*0x20 + 8);\n                piVar10[0xb] = iVar19;\n                *(piVar10 + 9) = uVar9;\n                if (uVar9 == '\\0') {\n                    uVar17 = piVar10[1];\n                    uVar13 = uVar17 + 0xc;\n                    iVar19 = *piVar10;\n                    uVar14 = uVar17;\n                    uVar7 = piVar10[2];\n                    if (piVar10[2] < uVar13) {\n                        *(*0x20 + -0x78) = uVar6;\n                        *(*0x20 + -0x58) = uVar13;\n                        *(*0x20 + -0x60) = uVar17;\n                        *(*0x20 + -0xf8) = 0x48e4ec;\n                        iVar19 = fcn.00444c60(uVar17);\n                        uVar13 = *(*0x20 + -0x58);\n                        piVar10 = *(*0x20 + 8);\n                        uVar14 = *(*0x20 + -0x60);\n                        uVar6 = *(*0x20 + -0x78);\n                        uVar7 = uVar17;\n                    }\n                    *(iVar19 + uVar14) = 0x4957444142282125;\n                    *(iVar19 + 8 + uVar14) = 0x29485444;\n                    piVar10[1] = uVar13;\n                    piVar10[2] = uVar7;\n                    if (*0x5d3dd0 == 0) {\n                        *piVar10 = iVar19;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48e545;\n                        fcn.0045c6e0(uVar6, uVar15, arg3, uVar14);\n                    }\n                }\n                if (piVar10[0xb] < 0) {\n                    piVar10[0xb] = -piVar10[0xb];\n                    *(piVar10 + 0x4a) = 1;\n                    *(piVar10 + 0x4e) = 0;\n                }\n                uVar7 = *(*0x20 + -0x70) + 1;\n                arg1 = *(*0x20 + 0x18);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + 0x10);\n                cVar12 = '\\0';\n                goto code_r0x0048e5d0;\n            }\ncode_r0x0048f0db:\n            uVar13 = uVar15;\n            *(*0x20 + -0xf8) = 0x48f0e6;\n            fcn.0045ca40(arg1);\n            unaff_RBX = uVar17;\n            unaff_RDI = arg1;\ncode_r0x0048f0e6:\n            *(*0x20 + -0xf8) = 0x48f0f1;\n            arg1 = unaff_RSI;\n            fcn.0045ca40(unaff_RSI);\ncode_r0x0048f0f1:\n            *(*0x20 + -0xf8) = 0x48f0f9;\n            fcn.0045ca40(arg1);\ncode_r0x0048f0f9:\n            *(*0x20 + -0xf8) = 0x48f105;\n            arg1 = uVar13;\n            fcn.0045cb00(uVar13);\n            uVar6 = uVar13;\n            goto code_r0x0048f105;\n        }\n        uVar13 = *(*0x20 + 0x10);\ncode_r0x0048e592:\n        if (uVar17 < arg1) {\n            uVar15 = 0;\n            unaff_RSI = 0;\n            for (; uVar7 = uVar17,  uVar17 < arg1; uVar17 = uVar17 + 1) {\n                if (arg1 <= uVar17) goto code_r0x0048f0d0;\n                uVar1 = *(uVar13 + uVar17);\n                if ((uVar1 < 0x30) || (0x39 < uVar1)) break;\n                if (2000000 < unaff_RSI + 1000000) {\n                    uVar15 = 0;\n                    unaff_RSI = 0;\n                    uVar7 = arg1;\n                    break;\n                }\n                unaff_RSI = (uVar1 - 0x30 & 0xff) + unaff_RSI * 10;\n                uVar15 = 1;\n            }\n        }\n        else {\n            uVar15 = 0;\n            unaff_RSI = 0;\n            uVar7 = arg1;\n        }\n        in_RAX = *(*0x20 + 8);\n        in_RAX[0xb] = unaff_RSI;\n        *(in_RAX + 9) = uVar15;\n        if ((cVar12 != '\\0') && (uVar15 != '\\0')) {\n            *(in_RAX + 0xb1) = 0;\n        }\ncode_r0x0048e5d0:\n        unaff_RSI = uVar7 + 1;\n        unaff_RBX = uVar13;\n        if (arg1 <= unaff_RSI) goto code_r0x0048e785;\n        uVar17 = uVar7;\n        if (arg1 <= uVar7) {\ncode_r0x0048f0c5:\n            *(*0x20 + -0xf8) = 0x48f0d0;\n            fcn.0045ca40(arg1);\ncode_r0x0048f0d0:\n            *(*0x20 + -0xf8) = 0x48f0db;\n            fcn.0045ca40(arg1);\n            goto code_r0x0048f0db;\n        }\n        if (*(uVar13 + uVar7) != '.') goto code_r0x0048e785;\n        if (cVar12 != '\\0') {\n            *(in_RAX + 0xb1) = 0;\n        }\n        arg3 = *(*0x20 + 0x28);\n        *(*0x20 + -0xf8) = 0x48e61a;\n        uVar14 = fcn.0048ddc0(uVar13, uVar15, arg3);\n        arg1 = *(*0x20 + 0x18);\n        uVar17 = uVar6;\n        if (uVar6 < arg1) {\n            if (arg1 <= uVar6) {\ncode_r0x0048f0b8:\n                *(*0x20 + -0xf8) = 0x48f0c5;\n                fcn.0045ca40(arg1);\n                goto code_r0x0048f0c5;\n            }\n            unaff_RBX = *(*0x20 + 0x10);\n            if (*(unaff_RBX + uVar6) == '*') {\n                *(*0x20 + -0x80) = uVar6;\n                uVar9 = *(*0x20 + 0x28);\n                uVar6 = *(*0x20 + 0x30);\n                *(*0x20 + -0xf8) = 0x48e673;\n                iVar19 = fcn.0048dac0(uVar6);\n                piVar10 = *(*0x20 + 8);\n                piVar10[0xc] = iVar19;\n                *(piVar10 + 0x49) = uVar9;\n                if (piVar10[0xc] < 0) {\n                    piVar10[0xc] = 0;\n                    *(piVar10 + 0x49) = 0;\n                }\n                if (*(piVar10 + 0x49) == '\\0') {\n                    uVar13 = piVar10[1];\n                    unaff_RSI = uVar13 + 0xb;\n                    iVar19 = *piVar10;\n                    uVar17 = uVar13;\n                    uVar14 = piVar10[2];\n                    if (piVar10[2] < unaff_RSI) {\n                        *(*0x20 + -0x88) = uVar6;\n                        *(*0x20 + -0x58) = unaff_RSI;\n                        *(*0x20 + -0x60) = uVar13;\n                        *(*0x20 + -0xf8) = 0x48e6db;\n                        iVar19 = fcn.00444c60(uVar13);\n                        unaff_RSI = *(*0x20 + -0x58);\n                        piVar10 = *(*0x20 + 8);\n                        uVar17 = *(*0x20 + -0x60);\n                        uVar6 = *(*0x20 + -0x88);\n                        uVar14 = uVar13;\n                    }\n                    *(iVar19 + uVar17) = 0x5250444142282125;\n                    *(iVar19 + 3 + uVar17) = 0x2943455250444142;\n                    piVar10[1] = unaff_RSI;\n                    piVar10[2] = uVar14;\n                    if (*0x5d3dd0 == 0) {\n                        *piVar10 = iVar19;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48e736;\n                        fcn.0045c6e0(uVar6, uVar15, arg3, uVar17);\n                    }\n                }\n                uVar7 = *(*0x20 + -0x80) + 1;\n                arg1 = *(*0x20 + 0x18);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                cVar12 = '\\0';\n                goto code_r0x0048e785;\n            }\n        }\n        else {\n            unaff_RBX = *(*0x20 + 0x10);\n        }\n        if (uVar6 < arg1) {\n            uVar15 = 0;\n            unaff_RSI = 0;\n            goto code_r0x0048f04e;\n        }\n        uVar15 = 0;\n        unaff_RSI = 0;\n        uVar6 = uVar14;\n        uVar7 = arg1;\ncode_r0x0048f083:\n        cVar12 = uVar13;\n        in_RAX = *(*0x20 + 8);\n        in_RAX[0xc] = unaff_RSI;\n        *(in_RAX + 0x49) = uVar15;\n        if (uVar15 == '\\0') {\n            in_RAX[0xc] = 0;\n            *(in_RAX + 0x49) = 1;\n        }\ncode_r0x0048e785:\n        uVar14 = uVar6;\n        uVar17 = uVar7;\n        if (cVar12 == '\\0') {\n            arg3 = *(*0x20 + 0x28);\n            *(*0x20 + -0xf8) = 0x48e7a5;\n            uVar14 = fcn.0048ddc0(unaff_RBX, uVar15, arg3);\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + 8);\n            uVar17 = uVar6;\n            unaff_RSI = uVar7;\n        }\n        *(*0x20 + -0x58) = uVar14;\n        if (arg1 <= uVar17) break;\n        if (arg1 <= uVar17) {\ncode_r0x0048f02b:\n            *(*0x20 + -0xf8) = 0x48f036;\n            uVar13 = arg1;\n            uVar6 = fcn.0045ca40(arg1);\n            do {\n                unaff_RSI = (in_RAX - 0x30U & 0xff) + unaff_RSI * 10;\n                uVar15 = 1;\n                uVar14 = uVar6;\n                uVar17 = uVar17 + 1;\ncode_r0x0048f04e:\n                uVar6 = uVar14;\n                uVar7 = uVar17;\n                if (arg1 <= uVar17) goto code_r0x0048f083;\n                if (arg1 <= uVar17) {\n                    *(*0x20 + -0xf8) = 0x48f0b8;\n                    fcn.0045ca40(arg1);\n                    goto code_r0x0048f0b8;\n                }\n                uVar1 = *(unaff_RBX + uVar17);\n                in_RAX = uVar1;\n                if ((uVar1 < 0x30) || (0x39 < uVar1)) goto code_r0x0048f083;\n            } while (unaff_RSI + 1000000 < 0x1e8481);\n            uVar15 = 0;\n            unaff_RSI = 0;\n            uVar7 = arg1;\n            goto code_r0x0048f083;\n        }\n        uVar5 = *(unaff_RBX + uVar17);\n        if (*(unaff_RBX + uVar17) < 0x80) {\n            uVar6 = 1;\n        }\n        else {\n            *(*0x20 + -0xa0) = uVar17;\n            uVar6 = arg1 - uVar17;\n            *(*0x20 + -0xf8) = 0x48e811;\n            uVar15 = uVar6;\n            uVar5 = fcn.00464f20();\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + 8);\n            uVar14 = *(*0x20 + -0x58);\n            uVar17 = *(*0x20 + -0xa0);\n        }\n        uVar13 = uVar6 + uVar17;\n        *(*0x20 + -0xa0) = uVar13;\n        if (uVar5 != 0x25) {\n            if (*(in_RAX + 0xb1) == '\\0') {\n                *(*0x20 + -0xf8) = 0x48e9b0;\n                fcn.0048dee0(uVar6, uVar15, arg3);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + -0xa0);\n                uVar14 = *(*0x20 + -0x58);\n                goto code_r0x0048e1cc;\n            }\n            uVar13 = *(*0x20 + 0x28);\n            if (uVar13 <= uVar14) {\n                *(*0x20 + -0xf8) = 0x48e977;\n                fcn.0048e020(uVar13, uVar15, arg3);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + -0xa0);\n                uVar14 = *(*0x20 + -0x58);\n                goto code_r0x0048e1cc;\n            }\n            if (uVar5 == 0x76) {\n                *(in_RAX + 10) = *(in_RAX + 0x4c);\n                *(in_RAX + 0x4c) = 0;\n                *(in_RAX + 0x4f) = *(in_RAX + 0x4b);\n                *(in_RAX + 0x4b) = 0;\n            }\n            if (uVar14 < uVar13) {\n                uVar9 = *(*(*0x20 + -0x20) + 8 + uVar14 * 0x10);\n                *(*0x20 + -0xf8) = 0x48e93e;\n                fcn.0048b4a0(uVar9);\n                uVar14 = *(*0x20 + -0x58) + 1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + -0xa0);\n                goto code_r0x0048e1cc;\n            }\n            *(*0x20 + -0xf8) = 0x48f02b;\n            fcn.0045ca40(uVar13);\n            goto code_r0x0048f02b;\n        }\n        uVar17 = in_RAX[1];\n        uVar6 = *in_RAX;\n        uVar7 = uVar6;\n        if (in_RAX[2] < uVar17 + 1) {\n            *(*0x20 + -0xf8) = 0x48e874;\n            uVar7 = fcn.00444c60(uVar17);\n            puVar2 = *(*0x20 + 8);\n            puVar2[2] = uVar17;\n            if (*0x5d3dd0 == 0) {\n                *puVar2 = uVar7;\n            }\n            else {\n                *(*0x20 + -0xf8) = 0x48e893;\n                uVar7 = fcn.0045c5a0(uVar17, uVar15, arg3, unaff_RBX);\n            }\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + 8);\n            uVar13 = *(*0x20 + -0xa0);\n            uVar14 = *(*0x20 + -0x58);\n            uVar17 = uVar6;\n        }\n        in_RAX[1] = uVar17 + 1;\n        *(uVar7 + uVar17) = 0x25;\ncode_r0x0048e1cc:\n        unaff_RSI = *(*0x20 + 0x28);\n        unaff_RDI = *(*0x20 + -0x20);\n        arg3 = *(*0x20 + 0x30);\n        uVar17 = uVar14;\n    } while( true );\n    uVar17 = in_RAX[1];\n    uVar13 = uVar17 + 10;\n    uVar14 = *in_RAX;\n    uVar6 = uVar17;\n    uVar15 = in_RAX[2];\n    if (in_RAX[2] < uVar13) {\n        *(*0x20 + -0x60) = uVar13;\n        *(*0x20 + -0x68) = uVar17;\n        *(*0x20 + -0xf8) = 0x48efa5;\n        uVar14 = fcn.00444c60(uVar17);\n        uVar13 = *(*0x20 + -0x60);\n        in_RAX = *(*0x20 + 8);\n        uVar6 = *(*0x20 + -0x68);\n        uVar15 = uVar17;\n    }\n    *(uVar14 + uVar6) = 0x5245564f4e282125;\n    *(uVar14 + 8 + uVar6) = 0x2942;\n    in_RAX[1] = uVar13;\n    in_RAX[2] = uVar15;\n    if (*0x5d3dd0 == 0) {\n        *in_RAX = uVar14;\n    }\n    else {\n        *(*0x20 + -0xf8) = 0x48effe;\n        fcn.0045c6e0(uVar6, 0x5245564f4e282125, arg3, unaff_RBX);\n    }\n    unaff_RSI = *(*0x20 + 0x28);\n    unaff_RDI = *(*0x20 + -0x20);\n    arg3 = *(*0x20 + 0x30);\n    uVar17 = *(*0x20 + -0x58);\ncode_r0x0048e9da:\n    if (*(in_RAX + 0x16) != '\\0') {\n        return;\n    }\n    if (unaff_RSI <= uVar17) {\n        return;\n    }\n    in_RAX[9] = 0;\n    *(in_RAX + 0x49) = 0;\n    uVar6 = in_RAX[1];\n    uVar13 = uVar6 + 9;\n    unaff_RBX = *in_RAX;\n    uVar15 = uVar6;\n    uVar14 = in_RAX[2];\n    if (in_RAX[2] < uVar13) {\n        *(*0x20 + -0x58) = uVar13;\n        *(*0x20 + -0x60) = uVar6;\n        *(*0x20 + -0x98) = uVar17;\n        *(*0x20 + -0xf8) = 0x48ea3d;\n        unaff_RBX = fcn.00444c60(uVar6);\n        uVar13 = *(*0x20 + -0x58);\n        unaff_RSI = *(*0x20 + 0x28);\n        unaff_RDI = *(*0x20 + -0x20);\n        arg3 = *(*0x20 + 0x30);\n        uVar17 = *(*0x20 + -0x98);\n        in_RAX = *(*0x20 + 8);\n        uVar15 = *(*0x20 + -0x60);\n        uVar14 = uVar6;\n    }\n    *(unaff_RBX + uVar15) = 0x4152545845282125;\n    *(unaff_RBX + 8 + uVar15) = 0x20;\n    in_RAX[1] = uVar13;\n    in_RAX[2] = uVar14;\n    if (*0x5d3dd0 == 0) {\n        *in_RAX = unaff_RBX;\n    }\n    else {\n        *(*0x20 + -0xf8) = 0x48eaaf;\n        in_RAX = fcn.0045c6e0(unaff_RDI, uVar13, arg3, uVar17);\n    }\n    if (uVar17 <= unaff_RSI) {\n        iVar19 = unaff_RSI - uVar17;\n        uVar13 = uVar17 - arg3 >> 0x3f & uVar17 << 4;\n        piVar10 = unaff_RDI + uVar13;\n        if (iVar19 != 0) {\n            *(*0x20 + -0x58) = iVar19;\n            arg3 = 0;\n            while( true ) {\n                *(*0x20 + -0xa8) = arg3;\n                *(*0x20 + -0x28) = piVar10;\n                iVar20 = *piVar10;\n                *(*0x20 + -0x90) = iVar20;\n                uVar13 = piVar10[1];\n                *(*0x20 + -0x40) = uVar13;\n                if (0 < arg3) {\n                    uVar14 = in_RAX[1];\n                    uVar17 = uVar14 + 2;\n                    uVar6 = *in_RAX;\n                    uVar7 = in_RAX[2];\n                    uVar15 = uVar14;\n                    if (in_RAX[2] < uVar17) {\n                        *(*0x20 + -0x60) = uVar14;\n                        *(*0x20 + -0x68) = uVar17;\n                        *(*0x20 + -0xf8) = 0x48ebb3;\n                        uVar6 = fcn.00444c60(uVar14);\n                        piVar10 = *(*0x20 + -0x28);\n                        iVar19 = *(*0x20 + -0x58);\n                        iVar20 = *(*0x20 + -0x90);\n                        uVar13 = *(*0x20 + -0x40);\n                        uVar15 = *(*0x20 + -0x60);\n                        uVar17 = *(*0x20 + -0x68);\n                        in_RAX = *(*0x20 + 8);\n                        arg3 = *(*0x20 + -0xa8);\n                        uVar7 = uVar14;\n                    }\n                    *(uVar6 + uVar15) = 0x202c;\n                    in_RAX[1] = uVar17;\n                    in_RAX[2] = uVar7;\n                    if (*0x5d3dd0 == 0) {\n                        *in_RAX = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48ec18;\n                        in_RAX = fcn.0045c6e0(arg3, piVar10, iVar20, uVar13);\n                    }\n                }\n                if (iVar20 == 0) {\n                    uVar17 = in_RAX[1];\n                    uVar13 = uVar17 + 5;\n                    uVar14 = *in_RAX;\n                    uVar15 = in_RAX[2];\n                    uVar6 = uVar17;\n                    if (in_RAX[2] < uVar13) {\n                        *(*0x20 + -0x60) = uVar17;\n                        *(*0x20 + -0x68) = uVar13;\n                        *(*0x20 + -0xf8) = 0x48ec65;\n                        uVar14 = fcn.00444c60(uVar17);\n                        piVar10 = *(*0x20 + -0x28);\n                        iVar19 = *(*0x20 + -0x58);\n                        uVar6 = *(*0x20 + -0x60);\n                        uVar13 = *(*0x20 + -0x68);\n                        in_RAX = *(*0x20 + 8);\n                        arg3 = *(*0x20 + -0xa8);\n                        uVar15 = uVar17;\n                    }\n                    *(uVar14 + uVar6) = 0x6c696e3c;\n                    *(uVar14 + 4 + uVar6) = 0x3e;\n                    in_RAX[1] = uVar13;\n                    in_RAX[2] = uVar15;\n                    if (*0x5d3dd0 == 0) {\n                        *in_RAX = uVar14;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48ecc7;\n                        in_RAX = fcn.0045c6e0(arg3, piVar10, uVar6, uVar13);\n                    }\n                }\n                else {\n                    *(*0x20 + -0x18) = iVar20;\n                    *(*0x20 + -0x10) = uVar13;\n                    iVar19 = *(*0x20 + -0x18);\n                    if (iVar19 == 0) {\n                        iVar20 = 0;\n                        iVar19 = 0;\n                    }\n                    else {\n                        iVar20 = 0x4fa5c0;\n                    }\n                    pcVar3 = *(iVar20 + 0xf8);\n                    *(*0x20 + -0xf8) = 0x48ed02;\n                    uVar8 = (*pcVar3)();\n                    *(*0x20 + -0xb0) = iVar19;\n                    puVar4 = *(*0x20 + 8);\n                    uVar17 = puVar4[1];\n                    *(*0x20 + -0x60) = uVar17;\n                    *(*0x20 + -0x68) = uVar17 + iVar19;\n                    uVar9 = *puVar4;\n                    uVar14 = puVar4[2];\n                    if (puVar4[2] < uVar17 + iVar19) {\n                        *(*0x20 + -0x50) = uVar8;\n                        *(*0x20 + -0xf8) = 0x48ed4d;\n                        uVar9 = fcn.00444c60(uVar17);\n                        iVar19 = *(*0x20 + -0xb0);\n                        uVar14 = uVar17;\n                    }\n                    *(*0x20 + -0x70) = uVar14;\n                    *(*0x20 + -0x30) = uVar9;\n                    *(*0x20 + -0xf8) = 0x48ed8a;\n                    fcn.0045d380(iVar19);\n                    iVar19 = *(*0x20 + -0x68);\n                    piVar10 = *(*0x20 + 8);\n                    piVar10[1] = iVar19;\n                    uVar17 = *(*0x20 + -0x70);\n                    piVar10[2] = uVar17;\n                    uVar14 = *(*0x20 + -0x60);\n                    iVar20 = *(*0x20 + -0xb0);\n                    if (*0x5d3dd0 == 0) {\n                        iVar16 = *(*0x20 + -0x30);\n                        *piVar10 = iVar16;\n                        uVar6 = uVar14;\n                    }\n                    else {\n                        iVar16 = *(*0x20 + -0x30);\n                        *(*0x20 + -0xf8) = 0x48ede8;\n                        piVar10 = fcn.0045c6e0(iVar19, uVar17, uVar9, uVar13);\n                        uVar6 = uVar17;\n                    }\n                    iVar11 = iVar16;\n                    if (uVar17 < iVar20 + uVar14 + 1) {\n                        *(*0x20 + -0xf8) = 0x48edfd;\n                        iVar11 = fcn.00444c60(iVar19);\n                        piVar10 = *(*0x20 + 8);\n                        piVar10[2] = iVar19;\n                        if (*0x5d3dd0 == 0) {\n                            *piVar10 = iVar11;\n                            iVar19 = iVar16;\n                        }\n                        else {\n                            *(*0x20 + -0xf8) = 0x48ee1c;\n                            iVar11 = fcn.0045c5a0(iVar19, uVar6, uVar9, uVar13);\n                            iVar19 = iVar16;\n                        }\n                    }\n                    piVar10[1] = iVar19 + 1;\n                    *(iVar11 + iVar19) = 0x3d;\n                    *(*0x20 + -0xf8) = 0x48ee48;\n                    fcn.0048b4a0(*(*0x20 + -0x40));\n                    in_RAX = *(*0x20 + 8);\n                    arg3 = *(*0x20 + -0xa8);\n                    piVar10 = *(*0x20 + -0x28);\n                    iVar19 = *(*0x20 + -0x58);\n                }\n                arg3 = arg3 + 1;\n                if (iVar19 <= arg3) break;\n                piVar10 = piVar10 + 2;\n            }\n        }\n        uVar17 = in_RAX[1];\n        uVar14 = *in_RAX;\n        uVar6 = uVar14;\n        if (in_RAX[2] < uVar17 + 1) {\n            *(*0x20 + -0xf8) = 0x48eb15;\n            uVar6 = fcn.00444c60(uVar17);\n            in_RAX = *(*0x20 + 8);\n            in_RAX[2] = uVar17;\n            if (*0x5d3dd0 == 0) {\n                *in_RAX = uVar6;\n                uVar17 = uVar14;\n            }\n            else {\n                *(*0x20 + -0xf8) = 0x48eb34;\n                uVar6 = fcn.0045c5a0(uVar17, piVar10, arg3, uVar13);\n                uVar17 = uVar14;\n            }\n        }\n        in_RAX[1] = uVar17 + 1;\n        *(uVar6 + uVar17) = 0x29;\n        return;\n    }\n    *(*0x20 + -0xf8) = 0x48ee85;\n    arg1 = unaff_RSI;\n    in_RAX = fcn.0045cb00(unaff_RSI);\ncode_r0x0048ee85:\n    uVar13 = uVar13 + 1;\n    goto code_r0x0048ee88;\n}\n",
        "token_count": 9926
    },
    "00491980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00491980(int64_t arg1)\n\n{\n    int64_t arg1_00;\n    ulong in_RAX;\n    ulong uVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = 0x4919ad;\n            fcn.00493360(arg1);\n            if (unaff_RDI != 0) goto code_r0x004919c3;\n            if (unaff_RBX != 0) {\n                unaff_RDI = 0;\ncode_r0x004919c3:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                *(*0x20 + -0x80) = 0x4919d1;\n                uVar1 = fcn.0045ebc0();\n                if (unaff_RBX == 0) {\n                    *(*0x20 + -0x30) = uVar1;\n                    *(*0x20 + -0x80) = 0x491ad9;\n                    puVar2 = fcn.0040c440();\n                    uVar1 = *(*0x20 + 0x10);\n                    puVar2[1] = uVar1;\n                    if (*0x5d3dd0 == 0) {\n                        *puVar2 = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x80) = 0x491b0b;\n                        puVar2 = fcn.0045c6c0(uVar1, *(*0x20 + 8), in_R8, in_R9);\n                    }\n                    puVar2[2] = *(*0x20 + -0x30);\n                    return puVar2;\n                }\n                *(*0x20 + -0x28) = unaff_RBX;\n                *(*0x20 + -0x80) = 0x4919e7;\n                uVar1 = fcn.0047c340();\n                *(*0x20 + -0x10) = uVar1;\n                *(*0x20 + -0x20) = unaff_RBX;\n                *(*0x20 + -0x80) = 0x4919fd;\n                uVar1 = fcn.0040c440();\n                *(*0x20 + -0x18) = uVar1;\n                *(*0x20 + -0x80) = 0x491a0c;\n                uVar1 = fcn.00409d20();\n                uVar3 = 0x4fa138;\n                puVar2 = *(*0x20 + -0x18);\n                *puVar2 = 0x4fa138;\n                if (*0x5d3dd0 == 0) {\n                    puVar2[1] = uVar1;\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x491a33;\n                    fcn.0045c5a0(0x4fa138, puVar2, in_R8, in_R9);\n                }\n                puVar2[3] = *(*0x20 + 0x10);\n                if (*0x5d3dd0 == 0) {\n                    puVar2[2] = *(*0x20 + 8);\n                }\n                else {\n                    puVar2 = *(*0x20 + 8);\n                    *(*0x20 + -0x80) = 0x491a67;\n                    fcn.0045c6c0(uVar3, puVar2, in_R8, in_R9);\n                }\n                uVar3 = 0x4c793d;\n                arg4 = 2;\n                *(*0x20 + -0x80) = 0x491a94;\n                uVar1 = fcn.004487a0(0xf, puVar2, 0x4c793d, 2);\n                arg1_00 = *(*0x20 + -0x18);\n                *(arg1_00 + 0x28) = 0x4ca3d8;\n                if (*0x5d3dd0 == 0) {\n                    *(arg1_00 + 0x20) = uVar1;\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x491ab5;\n                    fcn.0045c5a0(arg1_00, puVar2, uVar3, arg4);\n                }\n                return NULL;\n            }\n            *(*0x20 + -0x80) = 0x491b3e;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045ca40(0);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x491b4e;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1317
    },
    "00491b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00491b60(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    ulong noname_2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        iVar5 = arg1;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0xb8) = 0x491ba9;\n            iVar1 = fcn.00493280(arg1);\n            if (unaff_RDI != 0) {\n                iVar1 = 0;\n                goto code_r0x00491bc0;\n            }\n            if (arg1 != 0) {\n                unaff_RDI = 0;\ncode_r0x00491bc0:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                iVar5 = *(*0x20 + 8);\n                uVar2 = *(iVar5 + 0x10);\n                *(*0x20 + -0xb8) = 0x491be5;\n                uVar2 = fcn.0045ec00(iVar5, uVar2);\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x90) = iVar1;\n                    *(*0x20 + -0xb8) = 0x491bfb;\n                    uVar2 = fcn.0047c340();\n                    *(*0x20 + -0x70) = uVar2;\n                    *(*0x20 + -0x80) = iVar1;\n                    *(*0x20 + -0xb8) = 0x491c11;\n                    uVar2 = fcn.0040c440();\n                    *(*0x20 + -0x78) = uVar2;\n                    *(*0x20 + -0xb8) = 0x491c25;\n                    uVar2 = fcn.00409d20();\n                    uVar4 = 0x4fa138;\n                    puVar3 = *(*0x20 + -0x78);\n                    *puVar3 = 0x4fa138;\n                    if (*0x5d3dd0 == 0) {\n                        puVar3[1] = uVar2;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x491c4c;\n                        fcn.0045c5a0(0x4fa138, puVar3, in_R8, in_R9);\n                    }\n                    uVar2 = *(*0x20 + 0x18);\n                    puVar3[3] = uVar2;\n                    if (*0x5d3dd0 == 0) {\n                        noname_2 = *(*0x20 + 0x10);\n                        puVar3[2] = noname_2;\n                    }\n                    else {\n                        noname_2 = *(*0x20 + 0x10);\n                        *(*0x20 + -0xb8) = 0x491c85;\n                        fcn.0045c720(uVar4, puVar3, noname_2, in_R9);\n                    }\n                    *(*0x20 + -0xc0) = unaff_RBP;\n                    *(*0x20 + -0xb8) = 0x491caf;\n                    fcn.0045cceb();\n                    *(*0x20 + -0x68) = 0x4ca3c9;\n                    *(*0x20 + -0x60) = 0xf;\n                    *(*0x20 + -0x58) = noname_2;\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x48) = 0x4c9cff;\n                    *(*0x20 + -0x40) = 0xe;\n                    uVar2 = (*(*0x20 + 8))[1];\n                    *(*0x20 + -0x38) = **(*0x20 + 8);\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x28) = 0x4c793d;\n                    *(*0x20 + -0x20) = 2;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    uVar2 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xb8) = 0x491d4c;\n                    uVar4 = fcn.00448380(6);\n                    iVar5 = *(*0x20 + -0x78);\n                    *(iVar5 + 0x28) = *0x20 + -0x68;\n                    if (*0x5d3dd0 == 0) {\n                        *(iVar5 + 0x20) = uVar4;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x491d6d;\n                        fcn.0045c5a0(iVar5, uVar2, noname_2, in_R9);\n                    }\n                    return NULL;\n                }\n                *(*0x20 + -0x88) = uVar2;\n                *(*0x20 + -0xb8) = 0x491d97;\n                puVar3 = fcn.0040c440();\n                if (*0x5d3dd0 == 0) {\n                    *puVar3 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x491dbf;\n                    puVar3 = fcn.0045c6c0(iVar5, *(*0x20 + 8), in_R8, in_R9);\n                }\n                puVar3[2] = *(*0x20 + 0x18);\n                if (*0x5d3dd0 == 0) {\n                    puVar3[1] = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x491df3;\n                    puVar3 = fcn.0045c6c0(iVar5, *(*0x20 + 0x10), in_R8, in_R9);\n                }\n                puVar3[3] = *(*0x20 + -0x88);\n                return puVar3;\n            }\n            *(*0x20 + -0xb8) = 0x491e32;\n            in_RAX = fcn.0045ca40(0);\n            unaff_RBX = arg1;\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = iVar5;\n        *(puVar6 + -8) = 0x491e47;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1781
    },
    "004928a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint64_t * fcn.004928a0(void)\n\n{\n    int64_t *piVar1;\n    int64_t **in_RAX;\n    int64_t unaff_R14;\n    bool bVar2;\n    int64_t *piVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (piVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    ppcStack16 = NULL;\n    if (in_RAX[4] != NULL) {\n        return NULL;\n    }\n    LOCK();\n    bVar2 = *(in_RAX + 0x14) == 0;\n    if (bVar2) {\n        *(in_RAX + 0x14) = 1;\n    }\n    if (!bVar2) {\n        fcn.004633a0();\n    }\n    auStack32 = CONCAT88(in_RAX + 0x14, 0x492a80);\n    ppcStack16 = auStack32;\n    if (in_RAX[4] != NULL) {\n        (*0x492a80)();\n        return piVar3;\n    }\n    piVar1 = in_RAX[1];\n    if (((piVar1 == 0xc) && (**in_RAX == 0x32336c656e72656b)) && (*(*in_RAX + 1) == 0x6c6c642e)) {\n        fcn.00491980(in_RAX);\n    }\n    else {\n        fcn.00492ea0();\n    }\n    if (piVar1 == NULL) {\n        fcn.00456fe0(in_RAX + 4);\n        (**ppcStack16)();\n        return piVar3;\n    }\n    (**ppcStack16)();\n    return piVar1;\n}\n",
        "token_count": 459
    },
    "00492ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00492ae0(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    bool bVar2;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    ppcStack16 = NULL;\n    if (in_RAX[4] == 0) {\n        LOCK();\n        bVar2 = *(in_RAX + 2) == 0;\n        if (bVar2) {\n            *(in_RAX + 2) = 1;\n        }\n        if (!bVar2) {\n            fcn.004633a0();\n        }\n        auStack32 = CONCAT88(in_RAX + 2, 0x492ca0);\n        ppcStack16 = auStack32;\n        if (in_RAX[4] == 0) {\n            iVar1 = fcn.004928a0();\n            if (iVar1 != 0) {\n                (**ppcStack16)();\n                return iVar1;\n            }\n            iVar1 = *in_RAX;\n            fcn.00491b60(in_RAX[1]);\n            if (iVar1 != 0) {\n                (**ppcStack16)();\n                return iVar1;\n            }\n            fcn.00456fe0(in_RAX + 4);\n        }\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if (bVar2) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 413
    },
    "00492ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00492ea0(char param_1, uint64_t param_2, int64_t param_3, int64_t param_4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t arg1;\n    int32_t iVar6;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar5 = unaff_RBX;\n    if ((param_1 != '\\0') && (cVar1 = fcn.00492e40(),  cVar1 == '\\0')) {\n        iVar3 = 0;\n        do {\n            arg1 = iVar3;\n            bVar7 = unaff_RBX - arg1 < 0;\n            if (unaff_RBX <= arg1) goto code_r0x00492fcb;\n            param_2 = *(in_RAX + arg1);\n            if (*(in_RAX + arg1) < 0x80) {\n                iVar3 = arg1 + 1;\n            }\n            else {\n                uVar2 = fcn.00456ac0(arg1);\n                param_2 = uVar2;\n                iVar3 = unaff_RBX;\n            }\n            iVar6 = param_2;\n            if (iVar6 == 0x3a) {\n                bVar7 = unaff_RBX - arg1 < 0;\n                goto code_r0x00492fcb;\n            }\n            if (iVar6 == 0x2f) {\n                bVar7 = unaff_RBX - arg1 < 0;\n                goto code_r0x00492fcb;\n            }\n        } while (iVar6 != 0x5c);\n        bVar7 = unaff_RBX - arg1 < 0;\ncode_r0x00492fcb:\n        if (unaff_RBX == arg1 || SBORROW8(unaff_RBX, arg1) != bVar7) {\n            iVar5 = fcn.00493060();\n            if (arg1 != 0) {\n                return NULL;\n            }\n            param_3 = in_RAX;\n            param_4 = unaff_RBX;\n            fcn.004486c0(unaff_RBX, param_2, in_RAX, unaff_RBX);\n        }\n    }\n    iVar3 = fcn.00493780(0);\n    if (iVar5 != 0) {\n        return NULL;\n    }\n    piVar4 = fcn.0040c440();\n    piVar4[1] = unaff_RBX;\n    if (*0x5d3dd0 == 0) {\n        *piVar4 = in_RAX;\n    }\n    else {\n        piVar4 = fcn.0045c6c0(unaff_RBX, in_RAX, param_3, param_4);\n    }\n    piVar4[2] = iVar3;\n    return piVar4;\n}\n",
        "token_count": 717
    },
    "004aa520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004aa520(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            for (uVar4 = 0; uVar4 < 0x104; uVar4 = uVar4 + 1) {\n                if (*(in_RAX + 0x2c + uVar4 * 2) == 0) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x38) = 0x4aa571;\n                    uVar2 = fcn.0047c2c0(0x104);\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x18) = uVar4;\n                    *(*0x20 + -0x38) = 0x4aa587;\n                    puVar3 = fcn.0040c440();\n                    iVar1 = *(*0x20 + 8);\n                    *puVar3 = *(iVar1 + 8);\n                    puVar3[1] = *(iVar1 + 0x20);\n                    puVar3[3] = *(*0x20 + -0x18);\n                    if (*0x5d3dd0 == 0) {\n                        puVar3[2] = *(*0x20 + -0x10);\n                    }\n                    else {\n                        *(*0x20 + -0x38) = 0x4aa5c5;\n                        fcn.0045c6a0(*(*0x20 + -0x10));\n                    }\n                    return;\n                }\n            }\n            *(*0x20 + -0x38) = 0x4aa5dc;\n            in_RAX = fcn.0045ca40(0x104);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x4aa5e7;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 599
    },
    "004aa600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004aa600(void)\n\n{\n    ulong *puVar1;\n    ulong uVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t arg1;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uint *puStack88;\n    uchar auStack80 [16];\n    int64_t iStack64;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    ulong uStack24;\n    code **ppcStack16;\n    \n    while (&puStack88 < *(unaff_R14 + 0x10) || &puStack88 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    ppcStack16 = NULL;\n    iStack64 = 0;\n    puVar1 = fcn.0040c440();\n    *puVar1 = 2;\n    puVar1[1] = 0;\n    uVar2 = fcn.0047bfe0(2);\n    auStack40 = CONCAT88(*0x57df08, 0x4aa9c0);\n    ppcStack16 = auStack40;\n    uStack24 = uVar2;\n    puVar3 = fcn.0040c440();\n    *puVar3 = 0x238;\n    puStack88 = puVar3;\n    puVar1 = fcn.0040c440();\n    *puVar1 = uVar2;\n    puVar1[1] = puVar3;\n    iVar4 = fcn.0047bfe0(2);\n    if (iVar4 == 0) {\n        uVar2 = fcn.00486120(0);\n        iStack64 = 0;\n        auStack80 = CONCAT88(0x1e, uVar2);\n        (**ppcStack16)();\n        return iStack64;\n    }\n    iVar4 = fcn.00444b80(0x32);\n    uVar7 = 0x32;\n    arg1 = 0;\n    do {\n        uVar5 = fcn.004aa520();\n        uVar8 = arg1 + 1;\n        if (uVar7 < uVar8) {\n            uVar7 = arg1;\n            iVar6 = fcn.00444c60(arg1);\n            uVar8 = iVar4 + 1;\n            iVar4 = iVar6;\n        }\n        iVar6 = arg1 * 0x10;\n        *(iVar4 + iVar6) = 0x4fa1e8;\n        if (*0x5d3dd0 == 0) {\n            *(iVar4 + 8 + iVar6) = uVar5;\n        }\n        else {\n            fcn.0045c5a0(iVar6, iVar4, iVar4 + iVar6 + 8, in_R9);\n        }\n        puVar3 = puStack88;\n        puVar1 = fcn.0040c440();\n        *puVar1 = uVar2;\n        puVar1[1] = puVar3;\n        iVar6 = fcn.0047bfe0(2);\n        arg1 = uVar8;\n    } while (iVar6 != 0);\n    auStack56 = CONCAT88(uVar7, uVar8);\n    iStack64 = iVar4;\n    (**ppcStack16)();\n    return iStack64;\n}\n",
        "token_count": 771
    },
    "004aae00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004aae00(void)\n\n{\n    int64_t arg1;\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong *puVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    arg1 = in_RAX + 0x400;\n    uVar1 = fcn.00444b80(arg1);\n    puVar2 = fcn.0040c440();\n    *puVar2 = 0x4aaec0;\n    puVar2[2] = arg1;\n    puVar2[3] = arg1;\n    if (*0x5d3dd0 == 0) {\n        puVar2[1] = uVar1;\n    }\n    else {\n        fcn.0045c6a0(uVar1);\n    }\n    fcn.0043da80();\n    return uVar1;\n}\n",
        "token_count": 238
    },
    "004aaee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004aaee0(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    ulong unaff_RBX;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    \n    uStackX8 = in_RAX;\n    uStackX24 = arg1;\n    uStackX16 = unaff_RBX;\n    uStackX32 = unaff_RDI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    puVar1 = fcn.0040c440();\n    if (*0x5d3dd0 == 0) {\n        *puVar1 = uStackX8;\n        *(puVar1 + 1) = uStackX16;\n        *(puVar1 + 0xc) = uStackX16._4_4_;\n        *(puVar1 + 2) = uStackX24;\n        *(puVar1 + 0x14) = uStackX24._4_4_;\n    }\n    else {\n        fcn.00411220(&uStackX8);\n    }\n    uVar2 = fcn.00404540();\n    puVar3 = fcn.0040c440();\n    *puVar3 = 0x4ab020;\n    puVar3[1] = uStackX32;\n    if (*0x5d3dd0 == 0) {\n        puVar3[2] = puVar1;\n        puVar3[3] = uVar2;\n    }\n    else {\n        fcn.0045c6a0(puVar1);\n        fcn.0045c6a0(uVar2);\n    }\n    fcn.0043da80();\n    fcn.00405460();\n    return;\n}\n",
        "token_count": 468
    },
    "004ab880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004ab880(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    ulong *puVar6;\n    ulong uVar7;\n    ulong uVar8;\n    ulong uVar9;\n    ulong uVar10;\n    ulong in_RDX;\n    int64_t unaff_RBX;\n    int64_t unaff_RDI;\n    ulong uVar11;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uStack152;\n    ulong uStack144;\n    ulong *puStack136;\n    int64_t iStack128;\n    ulong *puStack120;\n    ulong *puStack112;\n    int64_t *piStack104;\n    ulong *puStack96;\n    ulong *puStack88;\n    int64_t iStack80;\n    ulong uStack72;\n    ulong uStack64;\n    ulong *puStack56;\n    ulong uStack48;\n    ulong uStack40;\n    int64_t *piStack32;\n    ulong *puStack24;\n    ulong uStack16;\n    \n    while (&uStack152 < *(unaff_R14 + 0x10) || &uStack152 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    piVar3 = fcn.004aa600();\n    if (unaff_RDI != 0) {\n        return;\n    }\n    if (unaff_RBX == 0) {\n        uVar7 = 0;\n        puVar6 = &uStack152;\n        goto code_r0x004ab8ed;\n    }\n    puVar6 = NULL;\n    puVar4 = &uStack152;\n    iStack128 = unaff_RBX;\n    do {\n        iVar1 = *piVar3;\n        iVar2 = piVar3[1];\n        puStack136 = puVar6;\n        iStack80 = iVar2;\n        piStack32 = piVar3;\n        piVar3 = (**(iVar1 + 0x18))();\n        if (((iVar2 == 0xc) && (in_RDX = 0x7265726f6c707865,  *piVar3 == 0x7265726f6c707865)) &&\n           (*(piVar3 + 1) == 0x6578652e)) {\n            uVar7 = (**(iVar1 + 0x28))();\n            puVar6 = puVar4;\ncode_r0x004ab8ed:\n            uVar9 = *0x576b00;\n            uVar8 = *0x576b08;\n            uVar10 = *0x576ae0;\n            uVar11 = *0x576ae8;\n            uStack40 = fcn.004487a0(*0x576b08, in_RDX, *0x576ae0, *0x576ae8);\n            uStack152 = uVar9;\n            puVar4 = fcn.0040c440();\n            puVar4[1] = uStack152;\n            if (*0x5d3dd0 == 0) {\n                *puVar4 = uStack40;\n            }\n            else {\n                puVar4 = fcn.0045c6c0(uVar8, uStack40, uVar10, uVar11);\n            }\n            *(puVar4 + 2) = 1;\n            iVar1 = *0x576a90;\n            uVar9 = *0x576a98;\n            puStack88 = puVar4;\n            uStack48 = fcn.00448620(*0x576a98);\n            puVar5 = fcn.0040c440();\n            puVar4 = puStack88;\n            if (*0x5d3dd0 == 0) {\n                puVar5[3] = puStack88;\n            }\n            else {\n                puVar5 = fcn.0045c6c0(uVar9, puStack88, uVar10, uVar11);\n            }\n            puVar5[1] = iVar1;\n            uVar8 = uStack48;\n            puStack96 = puVar5;\n            if (*0x5d3dd0 == 0) {\n                *puVar5 = uStack48;\n            }\n            else {\n                fcn.0045c720(uVar9, puVar4, uStack48, uVar11);\n            }\n            iVar1 = *0x576a90;\n            uVar9 = *0x576a98;\n            puStack56 = fcn.00448620(*0x576a98);\n            piVar3 = fcn.0040c440();\n            puVar4 = puStack88;\n            if (*0x5d3dd0 == 0) {\n                piVar3[3] = puStack88;\n            }\n            else {\n                piVar3 = fcn.0045c6c0(uVar9, puStack88, uVar8, uVar11);\n            }\n            piVar3[1] = iVar1;\n            piStack104 = piVar3;\n            if (*0x5d3dd0 == 0) {\n                *piVar3 = puStack56;\n            }\n            else {\n                puVar4 = puStack56;\n                fcn.0045c6c0(uVar9, puStack56, uVar8, uVar11);\n            }\n            uVar9 = *0x576a80;\n            uVar8 = *0x576a88;\n            uVar10 = *0x576b30;\n            uVar11 = *0x576b38;\n            uStack64 = fcn.004486c0(*0x576a88, puVar4, *0x576b30, *0x576b38);\n            puVar5 = fcn.0040c440();\n            puVar4 = puStack88;\n            if (*0x5d3dd0 == 0) {\n                puVar5[3] = puStack88;\n            }\n            else {\n                puVar5 = fcn.0045c6c0(uVar8, puStack88, uVar10, uVar11);\n            }\n            puVar5[1] = uVar9;\n            uVar9 = uStack64;\n            puStack112 = puVar5;\n            if (*0x5d3dd0 == 0) {\n                *puVar5 = uStack64;\n            }\n            else {\n                fcn.0045c720(uVar8, puVar4, uStack64, uVar11);\n            }\n            uVar8 = *0x576ad0;\n            uVar10 = *0x576ad8;\n            uStack72 = fcn.00448620(*0x576ad8);\n            puVar4 = fcn.0040c440();\n            if (*0x5d3dd0 == 0) {\n                puVar4[3] = puStack88;\n            }\n            else {\n                puVar4 = fcn.0045c6c0(uVar10, puStack88, uVar9, uVar11);\n            }\n            puVar4[1] = uVar8;\n            puStack120 = puVar4;\n            if (*0x5d3dd0 == 0) {\n                *puVar4 = uStack72;\n            }\n            else {\n                fcn.0045c6c0(uVar10, uStack72, uVar9, uVar11);\n            }\n            uVar7 = fcn.00493960(uVar7);\n            puVar4 = fcn.0040c440();\n            *puVar4 = uVar7;\n            puVar4[1] = 0;\n            puVar4[2] = unaff_RBX;\n            puVar4[3] = 0x3000;\n            puVar4[4] = 4;\n            uStack144 = fcn.00492d00(5);\n            if (unaff_RBX != 0) {\n                uStack16 = in_RAX;\n                puVar6 = fcn.0040c440();\n                *puVar6 = uVar7;\n                puVar6[1] = uStack144;\n                puVar6[2] = uStack16;\n                puVar6[3] = unaff_RBX;\n                fcn.00492d00(4);\n                puStack24 = fcn.0040c440();\n                *puStack24 = 4;\n                puVar6 = fcn.0040c440();\n                *puVar6 = uVar7;\n                puVar6[1] = uStack144;\n                puVar6[2] = unaff_RBX;\n                puVar6[3] = 0x20;\n                puVar6[4] = puStack24;\n                fcn.00492d00(5);\n                puVar6 = fcn.0040c440();\n                *puVar6 = uVar7;\n                *(puVar6 + 1) = in_XMM15;\n                puVar6[3] = uStack144;\n                *(puVar6 + 4) = in_XMM15;\n                puVar6[6] = 0;\n                fcn.00492d00(7);\n                fcn.004934a0();\n                return;\n            }\n            fcn.0045ca40(0);\n        }\n        else {\n            in_RDX = 0x7265726f6c707865;\n            puVar6 = puStack136 + 1;\n            if (iStack128 <= puVar6) {\n                uVar7 = 0;\n                goto code_r0x004ab8ed;\n            }\n        }\n        piVar3 = piStack32 + 2;\n        puVar4 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2165
    },
    "004138a0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.004138a0(void)\n\n{\n    ulong in_RAX;\n    uint64_t arg1;\n    uint64_t uVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = (unaff_RBX >> 3) + 7 >> 3;\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x28) = uVar1 + 1;\n            unaff_RBX = 1;\n            *(*0x20 + -0x50) = 0x4138eb;\n            arg1 = fcn.0040c7a0(0x5d58e0);\n            uVar1 = *(*0x20 + -0x28);\n            if (uVar1 < 0x40000001) {\n                if (*(*0x20 + -0x20) < uVar1) {\n                    *(*0x20 + -0x18) = arg1;\n                    *(*(*0x20 + -0x20) + arg1) = 0xa1;\n                    *(*0x20 + -0x50) = 0x413925;\n                    fcn.004139a0(arg1);\n                    if (*(*(*0x20 + -0x20) + *(*0x20 + -0x18)) == -0x5f) {\n                        return;\n                    }\n                    unaff_RBX = 0x1b;\n                    *(*0x20 + -0x50) = 0x413953;\n                    fcn.004330a0();\n                    uVar1 = arg1;\n                }\n                *(*0x20 + -0x50) = 0x41395b;\n                fcn.0045ca40(uVar1);\n            }\n            *(*0x20 + -0x50) = 0x413965;\n            in_RAX = fcn.0045caa0(uVar1, 0x40000000);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x413975;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 662
    },
    "00434b40": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00434c2b)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00434b40(ulong noname_0, ulong arg2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    uint uVar4;\n    uint uVar6;\n    double dVar5;\n    uchar in_XMM0 [16];\n    double dVar7;\n    uint uStack20;\n    ushort uStack16;\n    uchar uStack14;\n    uchar uStack13;\n    uchar uStack12;\n    char cStack11;\n    char cStack10;\n    char cStack9;\n    \n    while (dVar5 = SUB168(in_XMM0, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n        in_XMM0 = in_XMM0 & 0xffffffffffffffff;\n    }\n    uVar4 = SUB164(in_XMM0, 0);\n    uVar6 = SUB164(in_XMM0 >> 0x20, 0);\n    if (dVar5 == dVar5 + dVar5) {\n        if (0.0 < dVar5) {\n            fcn.00435140();\n            return;\n        }\n        if ((dVar5 == dVar5 + dVar5) && (dVar5 < 0.0)) {\n            fcn.00435140();\n            return;\n        }\n    }\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack14 = 0;\n    if (dVar5 == 0.0) {\n        iVar2 = 0;\n    }\n    else {\n        if (dVar5 < 0.0) {\n            in_XMM0 = ZEXT816(*0x4f9a68) ^ in_XMM0;\n        }\n        iVar2 = 0;\n        for (; *0x4f9a28 <= SUB168(in_XMM0, 0);\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), SUB168(in_XMM0, 0) / *0x4f9a28)) {\n            iVar2 = iVar2 + 1;\n        }\n        for (; dVar5 = SUB168(in_XMM0, 0),  dVar5 < *0x4f9a00;\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), dVar5 * *0x4f9a28)) {\n            iVar2 = iVar2 + -1;\n        }\n        dVar7 = *0x4f9a20;\n        for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n            dVar7 = dVar7 / *0x4f9a28;\n        }\n        dVar7 = dVar7 + dVar5;\n        if (*0x4f9a28 <= dVar7) {\n            iVar2 = iVar2 + 1;\n            dVar7 = dVar7 / *0x4f9a28;\n        }\n        uVar4 = SUB84(dVar7, 0);\n        uVar6 = dVar7 >> 0x20;\n    }\n    for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n        *(&uStack20 + iVar3) = CONCAT44(uVar6, uVar4) + '0';\n        dVar5 = (CONCAT44(uVar6, uVar4) - CONCAT44(uVar6, uVar4)) * *0x4f9a28;\n        uVar4 = SUB84(dVar5, 0);\n        uVar6 = dVar5 >> 0x20;\n    }\n    uStack20 = CONCAT31(uStack20._1_3_, 0x2e);\n    uStack13 = 0x65;\n    uStack12 = 0x2b;\n    if (iVar2 < 0) {\n        uStack12 = 0x2d;\n        iVar2 = -iVar2;\n    }\n    cStack11 = ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 6) - (iVar2 >> 0x3f)) + '0'\n    ;\n    iVar3 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 3) - (iVar2 >> 0x3f);\n    cVar1 = iVar3;\n    cStack10 = cVar1 + ((iVar3 & 0xff) / 10) * -10 + '0';\n    cStack9 = iVar2 + cVar1 * -10 + '0';\n    fcn.00434920(0xe);\n    return;\n}\n",
        "token_count": 1143
    },
    "00448240": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00448240(void)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb8 && *0x20 + -0xb8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x138;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x148) = *0x20 + -8;\n            *(*0x20 + -0x140) = 0x44828f;\n            fcn.0045ccab();\n            unaff_RBP = *(*0x20 + -0x148);\n            *(*0x20 + -0x128) = 0x4c0260;\n            *(*0x20 + -0x120) = *0x20 + -0x118;\n            puVar1 = *(*0x20 + -0x128);\n            if ((*(puVar1 + 0x17) & 0x40) == 0) {\n                for (iVar2 = 0x56a3e0; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n                    if ((*(iVar2 + 0x130) < 0x5d3db1) && (0x5d3db0 < *(iVar2 + 0x100))) goto code_r0x004482f6;\n                }\n                iVar2 = 0;\ncode_r0x004482f6:\n                if (iVar2 != 0) {\n                    *0x5d3db0 = -(*puVar1 + 7U & 0xfffffff8);\n                    *0x5d3db4 = *puVar1;\n                    *0x5d3db8 = puVar1[1];\n                    *0x5d3dbc = puVar1[4] - *(iVar2 + 0x128);\n                    return;\n                }\n                *(*0x20 + -0x140) = 0x448350;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x140) = 0x448365;\n            fcn.004330a0();\n        }\n        *(puVar3 + -8) = 0x44836b;\n        fcn.0045a360();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 584
    },
    "00449160": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.00449160(void)\n\n{\n    uint64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (0x7fff < in_RAX) {\n                if (in_RAX <= in_RAX + 0x2000) {\n                    in_RAX = in_RAX + 0x1fff & 0xffffffffffffe000;\n                }\n                goto code_r0x00449239;\n            }\n            if (in_RAX < 0x3f9) {\n                uVar3 = in_RAX + 7 >> 3;\n                if (uVar3 < 0x81) {\n                    uVar3 = *(uVar3 + 0x5678e0);\n                    if (0x43 < uVar3) goto code_r0x004492b7;\n                    in_RAX = *(uVar3 * 2 + 0x567a20);\ncode_r0x00449239:\n                    *(*0x20 + -0x30) = in_RAX;\n                    *(*0x20 + -0x50) = 0x44924a;\n                    uVar1 = fcn.0040ba40(0);\n                    iVar4 = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    if (iVar4 != iVar2) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x50) = 0x449270;\n                        fcn.0045d0c0(iVar2 - iVar4);\n                        uVar1 = *(*0x20 + -0x28);\n                        iVar2 = *(*0x20 + -0x30);\n                        iVar4 = *(*0x20 + 8);\n                    }\n                    *(*0x20 + -0x20) = uVar1;\n                    *(*0x20 + -0x18) = iVar4;\n                    *(*0x20 + -0x10) = iVar2;\n                    return *(*0x20 + -0x20);\n                }\n            }\n            else {\n                uVar3 = in_RAX - 0x381 >> 7;\n                if (uVar3 < 0xf9) {\n                    if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        [uVar3] < 0x44) {\n                        in_RAX = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                   [uVar3] * 2 + 0x567a20);\n                        goto code_r0x00449239;\n                    }\n                    *(*0x20 + -0x50) = 0x4492aa;\n                    fcn.0045ca40(0x44);\n                }\n                *(*0x20 + -0x50) = 0x4492b7;\n                fcn.0045ca60(0xf9);\ncode_r0x004492b7:\n                *(*0x20 + -0x50) = 0x4492c5;\n                fcn.0045ca40(0x44);\n            }\n            *(*0x20 + -0x50) = 0x4492d2;\n            in_RAX = fcn.0045ca60(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x4492dd;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1084
    },
    "00449300": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.00449300(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (in_RAX < 0x400000000001) {\n                *(*0x20 + 8) = in_RAX;\n                uVar1 = in_RAX * 4;\n                *(*0x20 + -0x30) = uVar1;\n                if (0x7fff < uVar1) {\n                    if (uVar1 <= uVar1 + 0x2000) {\n                        uVar1 = uVar1 + 0x1fff & 0xffffffffffffe000;\n                    }\n                    goto code_r0x004493f9;\n                }\n                if (uVar1 < 0x3f9) {\n                    uVar1 = uVar1 + 7 >> 3;\n                    if (uVar1 < 0x81) {\n                        uVar1 = *(uVar1 + 0x5678e0);\n                        if (0x43 < uVar1) goto code_r0x00449485;\n                        uVar1 = *(uVar1 * 2 + 0x567a20);\ncode_r0x004493f9:\n                        *(*0x20 + -0x38) = uVar1;\n                        *(*0x20 + -0x58) = 0x44940a;\n                        uVar2 = fcn.0040ba40(0);\n                        uVar1 = *(*0x20 + -0x38);\n                        if (uVar1 != *(*0x20 + -0x30)) {\n                            *(*0x20 + -0x28) = uVar2;\n                            *(*0x20 + -0x58) = 0x449435;\n                            fcn.0045d0c0(uVar1, *(*0x20 + 8));\n                            uVar2 = *(*0x20 + -0x28);\n                            uVar1 = *(*0x20 + -0x38);\n                        }\n                        *(*0x20 + -0x20) = uVar2;\n                        *(*0x20 + -0x18) = *(*0x20 + 8);\n                        *(*0x20 + -0x10) = uVar1 >> 2;\n                        return *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    uVar1 = uVar1 - 0x381 >> 7;\n                    if (uVar1 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar1] < 0x44) {\n                            uVar1 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar1] * 2 + 0x567a20);\n                            goto code_r0x004493f9;\n                        }\n                        *(*0x20 + -0x58) = 0x449473;\n                        fcn.0045ca40(0x44);\n                    }\n                    *(*0x20 + -0x58) = 0x449485;\n                    fcn.0045ca60(0xf9);\ncode_r0x00449485:\n                    *(*0x20 + -0x58) = 0x449492;\n                    fcn.0045ca40(0x44);\n                }\n                *(*0x20 + -0x58) = 0x44949f;\n                fcn.0045ca60(0x81);\n            }\n            *(*0x20 + -0x58) = 0x4494b0;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4494bb;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1140
    },
    "0044c1a0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint8_t * fcn.0044c1a0(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t unaff_RBX;\n    int32_t *unaff_RSI;\n    int64_t *unaff_RDI;\n    char in_R8B;\n    uint64_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint64_t in_R10;\n    int64_t unaff_R12;\n    \n    if (unaff_RBX != 0) {\n        uVar1 = *in_RAX;\n        uVar10 = uVar1;\n        if ((uVar1 == 0) && (in_R8B == '\\0')) {\n            return NULL;\n        }\n        if (-1 < uVar1) {\n            uVar8 = 1;\n            goto code_r0x0044c1f5;\n        }\n        uVar6 = 0;\n        uVar8 = 0;\n        iVar9 = 0;\n        while (uVar6 < unaff_RBX) {\n            puVar5 = in_RAX + uVar6;\n            uVar7 = uVar6 + 1;\n            uVar6 = uVar7;\n            uVar10 = (*puVar5 & 0x7f) << (iVar9 & 0x1f);\n            in_R10 = uVar10;\n            uVar10 = uVar8 | uVar10;\n            uVar8 = uVar10;\n            if ((*puVar5 & 0x80) == 0) {\n                uVar8 = uVar7;\n                unaff_R12 = arg1;\ncode_r0x0044c1f5:\n                uVar10 = -(uVar10 & 1) ^ uVar10 >> 1;\n                uVar6 = uVar10;\n                *unaff_RSI = *unaff_RSI + uVar10;\n                if (uVar8 <= unaff_RBX) {\n                    unaff_RBX = unaff_RBX - uVar8;\n                    uVar6 = arg1 - uVar8;\n                    uVar8 = uVar8 & -uVar6 >> 0x3f;\n                    unaff_RSI = in_RAX + uVar8;\n                    if (unaff_RBX != 0) {\n                        uVar3 = in_RAX[uVar8];\n                        if (-1 < in_RAX[uVar8]) {\n                            uVar4 = 1;\n                            goto code_r0x0044c248;\n                        }\n                        uVar10 = 0;\n                        uVar8 = 0;\n                        uVar3 = 0;\n                        while (uVar3 < unaff_RBX) {\n                            uVar4 = uVar3 + 1;\n                            iVar9 = uVar8;\n                            uVar10 = uVar10 | (*(uVar3 + unaff_RSI) & 0x7f) << (uVar8 & 0x1f);\n                            in_R10 = uVar4;\n                            if ((*(uVar3 + unaff_RSI) & 0x80) == 0) {\n                                uVar3 = uVar10;\ncode_r0x0044c248:\n                                if (uVar4 <= unaff_RBX) {\n                                    *unaff_RDI = *unaff_RDI + uVar3;\n                                    return (uVar4 & -(uVar6 - uVar4) >> 0x3f) + unaff_RSI;\n                                }\n                                uVar8 = unaff_RBX;\n                                uVar10 = fcn.0045cb00(unaff_RBX);\n                                iVar9 = uVar8;\n                            }\n                            uVar8 = iVar9 + 7;\n                            uVar3 = in_R10 & 0xffffffff;\n                        }\n                        fcn.0045ca40(unaff_RBX);\n                    }\n                    fcn.0045ca40(unaff_RBX);\n                }\n                uVar3 = unaff_RBX;\n                in_RAX = fcn.0045cb00(unaff_RBX);\n                iVar9 = uVar3;\n                arg1 = unaff_R12;\n            }\n            iVar9 = iVar9 + 7;\n        }\n        fcn.0045ca40(unaff_RBX);\n    }\n    fcn.0045ca40(unaff_RBX);\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 1020
    },
    "00450980": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.00450980(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint *puVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar2 = fcn.0044b1a0();\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0x27) < 8) {\n            puVar4 = NULL;\n        }\n        else {\n            uVar1 = *(iVar2 + *(iVar2 + 0x1c) * 4 + 0x44);\n            puVar4 = uVar1 + *(unaff_RBX + 0x130) & (uVar1 == 0xffffffff) - 1;\n        }\n        if (puVar4 != NULL) {\n            uVar3 = fcn.0044acc0(*puVar4);\n            return uVar3;\n        }\n        return in_RAX;\n    }\n    return in_RAX;\n}\n",
        "token_count": 277
    },
    "0046b180": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint64_t fcn.0046b180(uint64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint32_t unaff_EDI;\n    uint64_t in_R8;\n    uchar uVar10;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar10 = in_R9;\n        cVar1 = in_R8;\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + -0x30) = 0;\n            if ((unaff_EDI == unaff_SIL) || (unaff_EDI == 0x5c)) {\n                uVar2 = unaff_RBX + 1;\n                iVar7 = in_RAX;\n                uVar6 = unaff_RBX;\n                if (arg1 < uVar2) {\n                    *(*0x20 + -0x80) = 0x46b2ef;\n                    iVar7 = fcn.00444c60(unaff_RBX);\n                    uVar2 = in_RAX + 1;\n                    uVar6 = *(*0x20 + 0x10);\n                    unaff_EDI = *(*0x20 + 0x20);\n                    arg1 = unaff_RBX;\n                }\n                uVar10 = unaff_EDI;\n                *(iVar7 + uVar6) = 0x5c;\n                if (arg1 < uVar2 + 1) {\n                    *(*0x20 + -0x18) = uVar2;\n                    *(*0x20 + -0x80) = 0x46b32c;\n                    iVar7 = fcn.00444c60(uVar2);\n                    uVar2 = *(*0x20 + -0x18);\n                    uVar10 = *(*0x20 + 0x20);\n                }\n                *(iVar7 + uVar2) = uVar10;\n                return iVar7;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if (cVar1 != '\\0') {\n                if (unaff_EDI < 0x80) {\n                    *(*0x20 + -0x80) = 0x46b1fd;\n                    cVar1 = fcn.0046baa0();\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_EDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    cVar1 = '\\0';\n                }\n                if (cVar1 != '\\0') {\n                    if (arg1 < unaff_RBX + 1) {\n                        *(*0x20 + -0x80) = 0x46b246;\n                        in_RAX = fcn.00444c60(unaff_RBX);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_EDI = *(*0x20 + 0x20);\n                    }\n                    *(in_RAX + unaff_RBX) = unaff_EDI;\n                    return in_RAX;\n                }\n                goto code_r0x0046b423;\n            }\n            *(*0x20 + 0x26) = uVar10;\n            *(*0x20 + -0x80) = 0x46b279;\n            cVar1 = fcn.0046baa0();\n            if (cVar1 != '\\0') goto code_r0x0046b34d;\n            if (*(*0x20 + 0x26) == '\\0') {\n                unaff_EDI = *(*0x20 + 0x20);\n                goto code_r0x0046b40b;\n            }\n            unaff_EDI = *(*0x20 + 0x20);\n            if (0xffff < unaff_EDI) goto code_r0x0046b40b;\n            unaff_RBX = 0;\n            uVar2 = *0x576da8;\n            while (uVar6 = uVar2,  unaff_RBX < uVar6) {\n                iVar7 = uVar6 - unaff_RBX >> 1;\n                in_R9 = iVar7 + unaff_RBX;\n                arg1 = *0x576da8;\n                in_R8 = uVar6;\n                if (*0x576da8 <= in_R9) goto code_r0x0046b93f;\n                uVar2 = in_R9;\n                in_R8 = in_R9;\n                if (*(*0x576da0 + in_R9 * 2) < unaff_EDI) {\n                    unaff_RBX = iVar7 + unaff_RBX + 1;\n                    uVar2 = uVar6;\n                    in_R8 = uVar6;\n                }\n            }\n            if (*0x576da8 <= unaff_RBX) goto code_r0x0046b40b;\n            if (unaff_RBX < *0x576da8) {\n                if (*(*0x576da0 + unaff_RBX * 2) == unaff_EDI) {\ncode_r0x0046b34d:\n                    unaff_EDI = *(*0x20 + 0x20);\n                    *(*0x20 + -0x80) = 0x46b366;\n                    uVar2 = fcn.004650e0(4);\n                    if (uVar2 < 5) {\n                        uVar6 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x18) = uVar6 + uVar2;\n                        if (*(*0x20 + 0x18) < uVar6 + uVar2) {\n                            *(*0x20 + -0x28) = uVar2;\n                            *(*0x20 + -0x80) = 0x46b3b1;\n                            uVar3 = fcn.00444c60(uVar6);\n                            uVar2 = *(*0x20 + -0x28);\n                        }\n                        else {\n                            uVar3 = *(*0x20 + 8);\n                            uVar6 = *(*0x20 + 0x18);\n                        }\n                        *(*0x20 + -0x20) = uVar6;\n                        *(*0x20 + -0x10) = uVar3;\n                        *(*0x20 + -0x80) = 0x46b3e5;\n                        fcn.0045d380(uVar2);\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x80) = 0x46b40b;\n                    fcn.0045ca80(uVar2, 4);\n                }\ncode_r0x0046b40b:\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\ncode_r0x0046b423:\n                if (unaff_EDI < 10) {\n                    if (unaff_EDI == 7) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x46b4e8;\n                            in_RAX = fcn.00444c60(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x615c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 8) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x46b4a8;\n                            in_RAX = fcn.00444c60(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x625c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 9) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x46b46c;\n                            in_RAX = fcn.00444c60(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x745c;\n                        return in_RAX;\n                    }\n                }\n                else {\n                    if (unaff_EDI < 0xc) {\n                        if (unaff_EDI == 10) {\n                            if (arg1 < unaff_RBX + 2) {\n                                *(*0x20 + -0x18) = unaff_RBX + 2;\n                                *(*0x20 + -0x80) = 0x46b76f;\n                                in_RAX = fcn.00444c60(unaff_RBX);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            *(in_RAX + unaff_RBX) = 0x6e5c;\n                            return in_RAX;\n                        }\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x46b7a7;\n                            in_RAX = fcn.00444c60(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x765c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 0xc) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x46b732;\n                            in_RAX = fcn.00444c60(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x665c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 0xd) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x46b6f7;\n                            in_RAX = fcn.00444c60(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x725c;\n                        return in_RAX;\n                    }\n                }\n                if (unaff_EDI < 0x20) {\n                    uVar2 = unaff_RBX + 2;\n                    uVar6 = unaff_RBX;\n                    if (arg1 < uVar2) {\n                        *(*0x20 + -0x18) = uVar2;\n                        *(*0x20 + -0x80) = 0x46b609;\n                        in_RAX = fcn.00444c60(unaff_RBX);\n                        uVar6 = *(*0x20 + 0x10);\n                        uVar2 = *(*0x20 + -0x18);\n                        unaff_EDI = *(*0x20 + 0x20);\n                        arg1 = unaff_RBX;\n                    }\n                    *(in_RAX + uVar6) = 0x785c;\n                    uVar8 = uVar6 + 3;\n                    uVar10 = *((unaff_EDI >> 4) + 0x4ca870);\n                    iVar7 = in_RAX;\n                    if (arg1 < uVar8) {\n                        *(*0x20 + -0x31) = uVar10;\n                        *(*0x20 + -0x80) = 0x46b665;\n                        iVar7 = fcn.00444c60(uVar2);\n                        uVar8 = in_RAX + 1;\n                        uVar6 = *(*0x20 + 0x10);\n                        unaff_EDI = *(*0x20 + 0x20);\n                        uVar10 = *(*0x20 + -0x31);\n                        arg1 = uVar2;\n                    }\n                    *(uVar6 + 2 + iVar7) = uVar10;\n                    uVar10 = *((unaff_EDI & 0xf) + 0x4ca870);\n                    if (arg1 < uVar8 + 1) {\n                        *(*0x20 + -0x18) = uVar8;\n                        *(*0x20 + -0x31) = uVar10;\n                        *(*0x20 + -0x80) = 0x46b6bc;\n                        iVar7 = fcn.00444c60(uVar8);\n                        uVar8 = *(*0x20 + -0x18);\n                        uVar10 = *(*0x20 + -0x31);\n                    }\n                    *(iVar7 + uVar8) = uVar10;\n                }\n                else {\n                    if ((unaff_EDI < 0xd800) || (unaff_EDI - 0xe000 < 0x102000)) {\n                        if (0xffff < unaff_EDI) {\n                            uVar2 = unaff_RBX + 2;\n                            uVar6 = unaff_RBX;\n                            if (arg1 < uVar2) {\n                                *(*0x20 + -0x18) = uVar2;\n                                *(*0x20 + -0x80) = 0x46b574;\n                                in_RAX = fcn.00444c60(unaff_RBX);\n                                uVar6 = *(*0x20 + 0x10);\n                                uVar2 = *(*0x20 + -0x18);\n                                unaff_EDI = *(*0x20 + 0x20);\n                                arg1 = unaff_RBX;\n                            }\n                            *(in_RAX + uVar6) = 0x555c;\n                            for (iVar7 = 0x1c; -1 < iVar7; iVar7 = iVar7 + -4) {\n                                uVar10 = *((unaff_EDI >> (iVar7 & 0x1f) & 0xf) + 0x4ca870);\n                                iVar5 = in_RAX;\n                                uVar6 = uVar2;\n                                uVar8 = uVar2 + 1;\n                                if (arg1 < uVar2 + 1) {\n                                    *(*0x20 + -0x20) = uVar2;\n                                    *(*0x20 + -0x18) = iVar7;\n                                    *(*0x20 + -0x31) = uVar10;\n                                    *(*0x20 + -0x80) = 0x46b8b4;\n                                    iVar5 = fcn.00444c60(uVar2);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    uVar6 = *(*0x20 + -0x20);\n                                    unaff_EDI = *(*0x20 + 0x20);\n                                    uVar10 = *(*0x20 + -0x31);\n                                    arg1 = uVar2;\n                                    uVar8 = in_RAX + 1;\n                                }\n                                uVar2 = uVar8;\n                                *(iVar5 + uVar6) = uVar10;\n                                in_RAX = iVar5;\n                            }\n                            return in_RAX;\n                        }\n                    }\n                    else {\n                        unaff_EDI = 0xfffd;\n                    }\n                    *(*0x20 + -0x2c) = unaff_EDI;\n                    uVar2 = unaff_RBX + 2;\n                    uVar6 = unaff_RBX;\n                    if (arg1 < uVar2) {\n                        *(*0x20 + -0x18) = uVar2;\n                        *(*0x20 + -0x80) = 0x46b5c5;\n                        in_RAX = fcn.00444c60(unaff_RBX);\n                        uVar6 = *(*0x20 + 0x10);\n                        uVar2 = *(*0x20 + -0x18);\n                        unaff_EDI = *(*0x20 + -0x2c);\n                        arg1 = unaff_RBX;\n                    }\n                    *(in_RAX + uVar6) = 0x755c;\n                    iVar7 = in_RAX;\n                    for (iVar5 = 0xc; -1 < iVar5; iVar5 = iVar5 + -4) {\n                        uVar10 = *((unaff_EDI >> (iVar5 & 0x1f) & 0xf) + 0x4ca870);\n                        iVar4 = iVar7;\n                        uVar6 = uVar2;\n                        uVar8 = uVar2 + 1;\n                        if (arg1 < uVar2 + 1) {\n                            *(*0x20 + -0x20) = uVar2;\n                            *(*0x20 + -0x18) = iVar5;\n                            *(*0x20 + -0x31) = uVar10;\n                            *(*0x20 + -0x80) = 0x46b82c;\n                            iVar4 = fcn.00444c60(uVar2);\n                            iVar5 = *(*0x20 + -0x18);\n                            uVar6 = *(*0x20 + -0x20);\n                            unaff_EDI = *(*0x20 + -0x2c);\n                            uVar10 = *(*0x20 + -0x31);\n                            arg1 = uVar2;\n                            uVar8 = iVar7 + 1;\n                        }\n                        uVar2 = uVar8;\n                        *(iVar4 + uVar6) = uVar10;\n                        iVar7 = iVar4;\n                    }\n                }\n                return iVar7;\n            }\n            *(*0x20 + -0x80) = 0x46b93f;\n            arg1 = fcn.0045ca40(*0x576da8);\ncode_r0x0046b93f:\n            uVar10 = in_R9;\n            cVar1 = in_R8;\n            *(*0x20 + -0x80) = 0x46b94a;\n            in_RAX = fcn.0045ca40(arg1);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_EDI;\n        puVar9[0x24] = unaff_SIL;\n        puVar9[0x25] = cVar1;\n        puVar9[0x26] = uVar10;\n        *(puVar9 + -8) = 0x46b972;\n        fcn.0045a360();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_EDI = *(puVar9 + 0x20);\n        unaff_SIL = puVar9[0x24];\n        in_R8 = puVar9[0x25];\n        in_R9 = puVar9[0x26];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 4579
    },
    "00406f00": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nint64_t fcn.00406f00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    char cVar6;\n    char cVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x57fcb0 != NULL) {\n                if (*0x57fcb8 == 0) {\n                    return 0;\n                }\n                iVar2 = 0;\n                piVar3 = *0x57fcb0;\n                while( true ) {\n                    iVar1 = *piVar3;\n                    if ((unaff_RBX < piVar3[1]) && (*(unaff_RBX + iVar1) == '=')) break;\ncode_r0x00406f6e:\n                    iVar2 = iVar2 + 1;\n                    if (*0x57fcb8 <= iVar2) {\n                        return 0;\n                    }\n                    piVar3 = piVar3 + 2;\n                }\n                uVar5 = 0;\n                do {\n                    if (unaff_RBX <= uVar5) {\n                        return iVar1 + (unaff_RBX + 1 & -((piVar3[1] - unaff_RBX) + -1) >> 0x3f);\n                    }\n                    cVar6 = *(uVar5 + iVar1);\n                    if (unaff_RBX <= uVar5) {\n                        *(*0x20 + -0x20) = 0x406ff3;\n                        fcn.0045ca40(unaff_RBX);\n                        break;\n                    }\n                    cVar7 = *(uVar5 + in_RAX);\n                    if (cVar7 != cVar6) {\n                        if (cVar6 + 0xbfU < 0x1a) {\n                            cVar6 = cVar6 + ' ';\n                        }\n                        if (cVar7 + 0xbfU < 0x1a) {\n                            cVar7 = cVar7 + ' ';\n                        }\n                        if (cVar6 != cVar7) goto code_r0x00406f6e;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while( true );\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x20) = 0x407005;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x407015;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 767
    },
    "00490c40": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nint64_t fcn.00490c40(uint64_t arg1)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t arg1_00;\n    uint64_t unaff_RDI;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    \ncode_r0x00490c40:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar7 = *0x20 + -0x50;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 8) = in_RAX;\n        uVar6 = 0;\n        uVar5 = unaff_RBX;\n        do {\n            unaff_RBX = uVar5 - unaff_RDI;\n            if (unaff_RBX - 1 <= uVar6) {\n                return 0;\n            }\n            arg1 = uVar5;\n            if (uVar6 < 1) {\ncode_r0x00490cac:\n                arg1_01 = uVar6 + unaff_RDI;\n                if (uVar5 < arg1_01) goto code_r0x00490e05;\n                arg1_00 = uVar5 - arg1_01;\n                arg1 = -arg1_00 >> 0x3f & arg1_01;\n                iVar4 = in_RAX + arg1;\n                if (arg1_00 == 0) goto code_r0x00490df7;\n                puVar1 = in_RAX + arg1;\n                arg1 = *puVar1;\n                if (*puVar1 == 0x3d) {\n                    if (arg1_01 < uVar6) goto code_r0x00490dec;\n                    *(*0x20 + -0x28) = uVar6;\n                    *(*0x20 + -0x20) = arg1_00;\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x58) = 0x490d25;\n                    uVar2 = fcn.004021c0(unaff_RDI, uVar6);\n                    uVar2 = uVar2 ^ 1;\n                    uVar6 = *(*0x20 + -0x28);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    uVar5 = *(*0x20 + 0x10);\n                    arg1_00 = *(*0x20 + -0x20);\n                    iVar4 = *(*0x20 + -0x10);\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    uVar2 = 1;\n                }\n                if (uVar2 == 0) goto code_r0x00490d55;\n            }\n            else {\n                if (uVar5 <= uVar6 - 1) goto code_r0x00490e10;\n                if (*((uVar6 - 1) + in_RAX) == ',') goto code_r0x00490cac;\n            }\n            uVar6 = uVar6 + 1;\n        } while( true );\n    }\n    goto code_r0x00490e1c;\ncode_r0x00490d55:\n    uVar6 = arg1_00 - 1;\n    *(*0x20 + -0x38) = uVar6;\n    unaff_RBX = -uVar6 >> 0x3f & 1;\n    iVar4 = unaff_RBX + iVar4;\n    *(*0x20 + -0x18) = iVar4;\n    unaff_RDI = 0;\n    do {\n        if (uVar6 <= unaff_RDI) {\n            return iVar4;\n        }\n        arg1 = *(iVar4 + unaff_RDI);\n        if (*(iVar4 + unaff_RDI) < 0x80) {\n            uVar5 = unaff_RDI;\n            arg2 = uVar6;\n            unaff_RDI = unaff_RDI + 1;\n        }\n        else {\n            *(*0x20 + -0x30) = unaff_RDI;\n            *(*0x20 + -0x58) = 0x490daf;\n            uVar3 = fcn.00456ac0(unaff_RDI);\n            uVar5 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x38);\n            arg1 = uVar3;\n            iVar4 = *(*0x20 + -0x18);\n            unaff_RBX = uVar6;\n            unaff_RDI = uVar6;\n        }\n        uVar6 = arg2;\n    } while (arg1 != 0x2c);\n    if (uVar5 <= arg2) {\n        return iVar4;\n    }\n    *(*0x20 + -0x58) = 0x490dec;\n    fcn.0045ca80(uVar5, arg2);\ncode_r0x00490dec:\n    *(*0x20 + -0x58) = 0x490df7;\n    fcn.0045cb00(arg1_01);\ncode_r0x00490df7:\n    *(*0x20 + -0x58) = 0x490e05;\n    fcn.0045ca40(arg1_00);\ncode_r0x00490e05:\n    *(*0x20 + -0x58) = 0x490e10;\n    fcn.0045cb00(arg1);\ncode_r0x00490e10:\n    *(*0x20 + -0x58) = 0x490e1b;\n    in_RAX = fcn.0045ca40(arg1);\ncode_r0x00490e1c:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + 0x10) = unaff_RBX;\n    *(puVar7 + 0x18) = arg1;\n    *(puVar7 + 0x20) = unaff_RDI;\n    *(puVar7 + -8) = 0x490e35;\n    fcn.0045a360();\n    in_RAX = *(puVar7 + 8);\n    unaff_RBX = *(puVar7 + 0x10);\n    arg1 = *(puVar7 + 0x18);\n    unaff_RDI = *(puVar7 + 0x20);\n    *0x20 = puVar7;\n    goto code_r0x00490c40;\n}\n",
        "token_count": 1591
    },
    "004209e0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004209e0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar2 = *(in_RAX + 0x138);\n            iVar3 = unaff_RBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x28) = 0x420a18;\n                iVar2 = fcn.00422f00();\n                *(iVar2 + 0x18) = 0;\n                iVar3 = *(*0x20 + 8);\n                *(iVar3 + 0x130) = iVar2;\n                *(iVar3 + 0x138) = iVar2;\n                arg1 = *(*0x20 + 0x18);\n                iVar3 = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n            }\n            iVar4 = *(iVar2 + 0x10);\n            if (iVar4 < 1) {\ncode_r0x00420acb:\n                uVar1 = *(iVar2 + 0x10);\n                if (uVar1 < 0x3f) {\n                    *(iVar2 + 0x10) = uVar1 + 1;\n                    iVar4 = uVar1 * 0x20;\n                    *(iVar2 + 0x20 + iVar4) = iVar3 - *(in_RAX + 0x100);\n                    *(iVar2 + 0x24 + iVar4) = *(arg1 + 4);\n                    *(iVar2 + 0x28 + iVar4) = arg1;\n                    *(in_RAX + 0x140) = *(in_RAX + 0x140) + 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x420b1b;\n                fcn.0045ca40(0x3f);\ncode_r0x00420b1b:\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x28) = 0x420b2c;\n                fcn.004330a0();\n            }\n            else {\n                unaff_RBX = iVar3 - *(in_RAX + 0x100);\n                if (iVar4 - 1U < 0x3f) {\n                    iVar6 = (iVar4 - 1U) * 0x20;\n                    if (*(iVar2 + 0x20 + iVar6) + *(iVar2 + 0x24 + iVar6) <= unaff_RBX) {\n                        if (iVar4 == 0x3f) {\n                            *(*0x20 + -0x10) = iVar2;\n                            *(*0x20 + -0x28) = 0x420a99;\n                            iVar2 = fcn.00422f00();\n                            *(iVar2 + 0x18) = 0;\n                            *(*(*0x20 + -0x10) + 0x18) = iVar2;\n                            in_RAX = *(*0x20 + 8);\n                            *(in_RAX + 0x138) = iVar2;\n                            iVar3 = *(*0x20 + 0x10);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        goto code_r0x00420acb;\n                    }\n                    goto code_r0x00420b1b;\n                }\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x28) = 0x420b39;\n            in_RAX = fcn.0045ca40(0x3f);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x420b4e;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1120
    },
    "00420b80": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong fcn.00420b80(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            arg1_00 = arg1 / 2;\n            *(*0x20 + -0x10) = arg1_00;\n            *(*0x20 + -0x50) = 0x420bc5;\n            uVar3 = fcn.00420b80(arg1_00);\n            if (arg1_00 < 0x3f) {\n                *(*0x20 + -0x30) = uVar3;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1_00 * 0x20;\n                *(*0x20 + -0x28) = unaff_RBX + arg1_00 * 0x20 + 0x20;\n                *(*0x20 + -0x50) = 0x420c25;\n                uVar3 = fcn.00420b80((*(*0x20 + 0x18) - *(*0x20 + -0x10)) + -1);\n                iVar1 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x30 + iVar1) = *(*0x20 + -0x30);\n                *(iVar2 + 0x38 + iVar1) = uVar3;\n                return *(*0x20 + -0x28);\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x50) = 0x420c6c;\n            in_RAX = fcn.0045ca40(0x3f);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x420c85;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 700
    },
    "0042a500": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042a500(void)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x5d3c80,  iVar4 = *0x5d3c88,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    for (; iVar4 != 0; iVar4 = *(iVar4 + 8)) {\n        piVar2 = fcn.0042a060(uVar1);\n        uVar3 = uVar1 % 3;\n        *piVar2 = *piVar2 + piVar2[uVar3 * 4 + 4];\n        piVar2[1] = piVar2[1] + piVar2[uVar3 * 4 + 5];\n        piVar2[2] = piVar2[2] + piVar2[uVar3 * 4 + 6];\n        piVar2[3] = piVar2[3] + piVar2[uVar3 * 4 + 7];\n        piVar2[uVar3 * 4 + 4] = 0;\n        piVar2[uVar3 * 4 + 5] = 0;\n        piVar2[uVar3 * 4 + 6] = 0;\n        piVar2[uVar3 * 4 + 7] = 0;\n    }\n    return;\n}\n",
        "token_count": 363
    },
    "0042a5e0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042a5e0(void)\n\n{\n    int64_t *piVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *unaff_RBX;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe8 && *0x20 + -0xe8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x168;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x178) = *0x20 + -8;\n            *(*0x20 + -0x170) = 0x42a62f;\n            fcn.0045ccb4();\n            unaff_RBP = *(*0x20 + -0x178);\n            unaff_RBX = *0x20 + -0x120;\n            *(*0x20 + -0x170) = 0x42a64a;\n            uVar2 = fcn.00453a80(0x20);\n            *(*0x20 + -0x130) = uVar2;\n            *(*0x20 + -0x170) = 0x42a65d;\n            fcn.0040a360();\n            if (*(*0x20 + -0x130) < 0x21) {\n                *(*0x20 + -0x170) = 0x42a691;\n                uVar2 = fcn.0042a120(*0x20 + -0x120);\n                *(*0x20 + -0x128) = uVar2;\n                *(*0x20 + -0x134) = *0x5d3c80;\n                *(*0x20 + -0x170) = 0x42a6a5;\n                iVar3 = fcn.0042a060();\n                iVar4 = (*(*0x20 + -0x134) + ((*(*0x20 + -0x134) + 2U) / 3) * -3 + 2) * 0x20;\n                piVar1 = iVar3 + 0x20 + iVar4;\n                *piVar1 = *piVar1 + 1;\n                piVar1 = iVar3 + 0x30 + iVar4;\n                *piVar1 = *piVar1 + *(*0x20 + 0x10);\n                *(*0x20 + -0x170) = 0x42a6eb;\n                fcn.0040a580();\n                *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x10) = 0;\n                *(*0x20 + -0x20) = 0x42a7a0;\n                *(*0x20 + -0x18) = *(*0x20 + 8);\n                *(*0x20 + -0x10) = *(*0x20 + -0x128);\n                *(*0x20 + -0x168) = *0x20 + -0x20;\n                *(*0x20 + -0x170) = 0x42a73d;\n                fcn.0045a220();\n                return;\n            }\n            *(*0x20 + -0x170) = 0x42a76b;\n            in_RAX = fcn.0045ca80(*(*0x20 + -0x130), 0x20);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x42a77b;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1008
    },
    "0042a7e0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042a7e0(void)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    iVar2 = *0x5d3c80;\n    iVar3 = fcn.0042a060();\n    iVar4 = (iVar2 + ((iVar2 + 1U) / 3) * -3 + 1) * 0x20;\n    piVar1 = iVar3 + 0x28 + iVar4;\n    *piVar1 = *piVar1 + 1;\n    piVar1 = iVar3 + 0x38 + iVar4;\n    *piVar1 = *piVar1 + unaff_RBX;\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 252
    },
    "0042b560": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042b560(int64_t **arg1)\n\n{\n    ulong in_RAX;\n    int64_t **arg1_00;\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t **arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t **arg1_01;\n    int64_t iVar8;\n    int64_t **unaff_R13;\n    int64_t unaff_R14;\n    bool bVar9;\n    bool bVar10;\n    \n    do {\n        ppiVar2 = arg1;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000U < arg1 + 0x100000000000) {\n                ppiVar2 = arg1 - unaff_RBX;\n            }\n            else {\n                ppiVar2 = NULL;\n            }\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            if (ppiVar2 != NULL) {\n                *(*0x20 + -0x28) = unaff_RBX + 0x800000000000U;\n                *(*0x20 + -0x30) = arg1 + 0x100000000000;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x68) = 0x42b5c5;\n                arg1_00 = fcn.0042b340();\n                if (arg1_00 < 1) {\n                    ppiVar4 = *(*0x20 + 8);\n                    iVar7 = *(*0x20 + -0x20);\n                    bVar9 = false;\ncode_r0x0042b60e:\n                    ppiVar2 = ppiVar4[1];\n                    piVar1 = *ppiVar4;\n                    arg2 = ppiVar4[2];\n                    if (arg1_00 < ppiVar2) {\n                        if (arg1_00 < ppiVar2) {\n                            iVar8 = *(*0x20 + -0x18);\n                            bVar10 = piVar1[arg1_00 * 2] == iVar8;\n                            goto code_r0x0042b64a;\n                        }\n                    }\n                    else {\n                        iVar8 = *(*0x20 + -0x18);\n                        bVar10 = false;\ncode_r0x0042b64a:\n                        if (bVar10) {\n                            if (!bVar9) {\ncode_r0x0042b774:\n                                if (bVar10) {\n                                    if (arg1_00 < ppiVar2) {\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x0042b971;\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x38) = arg1_00;\n                                    arg1_01 = ppiVar2 + 1;\n                                    if (arg2 < arg1_01) {\n                                        *(*0x20 + -0x40) = arg2;\n                                        *(*0x20 + -0x48) = ppiVar2;\n                                        *(*0x20 + -0x10) = piVar1;\n                                        ppiVar4[1] = arg1_01;\n                                        ppiVar4[2] = arg2 << 1;\n                                        piVar1 = ppiVar4[4];\n                                        *(*0x20 + -0x68) = 0x42b86d;\n                                        piVar1 = fcn.0040c7a0(piVar1);\n                                        ppiVar4 = *(*0x20 + 8);\n                                        *ppiVar4 = piVar1;\n                                        arg2 = ppiVar4[2];\n                                        arg1_00 = *(*0x20 + -0x38);\n                                        if (arg1_00 <= arg2) {\n                                            arg2 = *(*0x20 + -0x40);\n                                            if (arg1_00 <= arg2) {\n                                                piVar5 = *(*0x20 + -0x10);\n                                                if (piVar1 != piVar5) {\n                                                    *(*0x20 + -0x68) = 0x42b8ae;\n                                                    fcn.0045d380(arg1_00 << 4);\n                                                    arg1_00 = *(*0x20 + -0x38);\n                                                    ppiVar4 = *(*0x20 + 8);\n                                                    piVar5 = *(*0x20 + -0x10);\n                                                    arg2 = *(*0x20 + -0x40);\n                                                }\n                                                arg1_01 = ppiVar4[1];\n                                                if (arg1_00 + 1U <= arg1_01) {\n                                                    iVar7 = arg1_01 + (-1 - arg1_00);\n                                                    if (*(*0x20 + -0x48) - arg1_00 < iVar7) {\n                                                        iVar7 = *(*0x20 + -0x48) - arg1_00;\n                                                    }\n                                                    if (piVar5 + (arg1_00 - arg2 >> 0x3f & arg1_00 << 4) !=\n                                                        *ppiVar4 +\n                                                        (-(ppiVar4[2] + (-1 - arg1_00)) >> 0x3f & (arg1_00 + 1U) * 0x10)\n                                                       ) {\n                                                        *(*0x20 + -0x68) = 0x42b931;\n                                                        fcn.0045d380(iVar7 << 4);\n                                                        ppiVar4 = *(*0x20 + 8);\n                                                        arg1_00 = *(*0x20 + -0x38);\n                                                    }\n                                                    iVar7 = *(*0x20 + -0x20);\n                                                    iVar8 = *(*0x20 + -0x18);\n                                                    goto code_r0x0042b94b;\n                                                }\ncode_r0x0042b992:\n                                                *(*0x20 + -0x68) = 0x42b99a;\n                                                arg1_00 = arg1_01;\n                                                fcn.0045cb00(arg1_01);\n                                            }\n                                            *(*0x20 + -0x68) = 0x42b9a5;\n                                            fcn.0045cac0(arg1_00, arg2);\n                                        }\n                                        *(*0x20 + -0x68) = 0x42b9ad;\n                                        fcn.0045cac0(arg1_00, arg2);\ncode_r0x0042b9ad:\n                                        *(*0x20 + -0x68) = 0x42b9b8;\n                                        fcn.0045cb00(arg1_01);\ncode_r0x0042b9b8:\n                                        *(*0x20 + -0x68) = 0x42b9c5;\n                                        fcn.0045cb00(arg1_01);\n                                    }\n                                    else if (arg1_01 <= arg2) {\n                                        ppiVar4[1] = arg1_01;\n                                        arg2 = *ppiVar4;\n                                        if (arg1_01 < arg1_00 + 1U) goto code_r0x0042b9b8;\n                                        iVar3 = ppiVar2 - arg1_00;\n                                        if (arg1_01 < arg1_00) goto code_r0x0042b9ad;\n                                        if (iVar3 + 1 < iVar3) {\n                                            iVar3 = iVar3 + 1;\n                                        }\n                                        if ((-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 << 4) + arg2 !=\n                                            arg2 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1U) * 0x10)) {\n                                            *(*0x20 + -0x68) = 0x42b825;\n                                            fcn.0045d380(iVar3 << 4);\n                                            ppiVar4 = *(*0x20 + 8);\n                                            arg1_00 = *(*0x20 + -0x38);\n                                            iVar7 = *(*0x20 + -0x20);\n                                            iVar8 = *(*0x20 + -0x18);\n                                        }\ncode_r0x0042b94b:\n                                        piVar1 = *ppiVar4;\n                                        ppiVar2 = ppiVar4[1];\n                                        if (ppiVar2 <= arg1_00) {\n                                            *(*0x20 + -0x68) = 0x42b992;\n                                            fcn.0045ca40(ppiVar2);\n                                            arg2 = ppiVar4;\n                                            arg1_01 = arg1_00;\n                                            goto code_r0x0042b992;\n                                        }\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        piVar1[arg1_00 * 2 + 1] = iVar8;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x0042b971;\n                                    }\n                                    ppiVar2 = arg1_01;\n                                    *(*0x20 + -0x68) = 0x42b9cd;\n                                    fcn.0045cac0(ppiVar2, arg2);\n                                }\n                                *(*0x20 + -0x68) = 0x42b9d5;\n                                fcn.0045ca40(ppiVar2);\n                                goto code_r0x0042b9d5;\n                            }\n                            if (arg1_00 < ppiVar2) {\n                                if (ppiVar2 <= arg1_00 - 1U) goto code_r0x0042b9f2;\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = piVar1[arg1_00 * 2 + 1];\n                                ppiVar2 = ppiVar4[1];\n                                if (ppiVar2 < arg1_00) goto code_r0x0042b9ea;\n                                iVar3 = ppiVar2 - arg1_00;\n                                unaff_R13 = ppiVar2;\n                                if (ppiVar2 < arg1_00 + 1) goto code_r0x0042b9df;\n                                if (iVar3 + -1 < iVar3) {\n                                    iVar3 = iVar3 + -1;\n                                }\n                                if (*ppiVar4 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1) * 0x10) !=\n                                    (-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 * 0x10) + *ppiVar4) {\n                                    *(*0x20 + -0x68) = 0x42b6fe;\n                                    fcn.0045d380(iVar3 << 4);\n                                    ppiVar4 = *(*0x20 + 8);\n                                    iVar7 = *(*0x20 + -0x20);\n                                    iVar8 = *(*0x20 + -0x18);\n                                }\n                                arg2 = ppiVar4[2];\n                                ppiVar2 = ppiVar4[1] - 1;\n                                if (arg2 < ppiVar2) goto code_r0x0042b9da;\n                                ppiVar4[1] = ppiVar2;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\ncode_r0x0042b971:\n                                if (bVar9 || bVar10) {\n                                    iVar8 = 0;\n                                }\n                                else {\n                                    iVar8 = iVar8 - iVar7;\n                                }\n                                ppiVar4[3] = ppiVar4[3] + iVar8;\n                                return;\n                            }\n                        }\n                        else {\n                            if (!bVar9) goto code_r0x0042b774;\n                            if (arg1_00 - 1U < ppiVar2) {\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = iVar8;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                goto code_r0x0042b971;\n                            }\ncode_r0x0042b9d5:\n                            *(*0x20 + -0x68) = 0x42b9da;\n                            fcn.0045ca40(ppiVar2);\ncode_r0x0042b9da:\n                            *(*0x20 + -0x68) = 0x42b9df;\n                            fcn.0045cac0(ppiVar2, arg2);\ncode_r0x0042b9df:\n                            *(*0x20 + -0x68) = 0x42b9ea;\n                            ppiVar2 = unaff_R13;\n                            fcn.0045cb00(unaff_R13);\ncode_r0x0042b9ea:\n                            *(*0x20 + -0x68) = 0x42b9f2;\n                            fcn.0045cb00(ppiVar2);\ncode_r0x0042b9f2:\n                            *(*0x20 + -0x68) = 0x42b9f7;\n                            fcn.0045ca40(ppiVar2);\n                        }\n                        *(*0x20 + -0x68) = 0x42b9ff;\n                        fcn.0045ca40(ppiVar2);\n                    }\n                    *(*0x20 + -0x68) = 0x42ba05;\n                    fcn.0045ca40(ppiVar2);\n                }\n                else {\n                    ppiVar4 = *(*0x20 + 8);\n                    ppiVar2 = ppiVar4[1];\n                    if (arg1_00 - 1U < ppiVar2) {\n                        iVar7 = *(*0x20 + -0x20);\n                        bVar9 = *(*ppiVar4 + 8 + (arg1_00 - 1U) * 0x10) == iVar7;\n                        goto code_r0x0042b60e;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x42ba0d;\n                fcn.0045ca40(ppiVar2);\n            }\n            *(*0x20 + -0x68) = 0x42ba12;\n            fcn.00434840();\n            *(*0x20 + -0x68) = 0x42ba25;\n            fcn.00435140();\n            *(*0x20 + -0x68) = 0x42ba2f;\n            fcn.00434fa0();\n            *(*0x20 + -0x68) = 0x42ba45;\n            fcn.00435140();\n            *(*0x20 + -0x68) = 0x42ba4f;\n            fcn.00434fa0();\n            *(*0x20 + -0x68) = 0x42ba65;\n            fcn.00435140();\n            *(*0x20 + -0x68) = 0x42ba6a;\n            fcn.004348c0();\n            unaff_RBX = 0x29;\n            *(*0x20 + -0x68) = 0x42ba7b;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = ppiVar2;\n        *(puVar6 + -8) = 0x42ba90;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3785
    },
    "004411e0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.004411e0(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x2298) != 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x2278;\n            *(*0x20 + -0x28) = 0x441225;\n            fcn.0040a360();\n            if ((*(*0x20 + 8))[0x8a6] != 0) goto code_r0x00441281;\n            iVar2 = **(*0x20 + 8);\n            iVar5 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar4 = iVar2 + iVar5 * -0x20;\n            if (-1 < uVar4) {\n                if (iVar5 < *0x57fd38) {\n                    puVar1 = *0x57fd30 + iVar5 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar4 & 0x1f) & -(uVar4 < 0x20));\ncode_r0x00441281:\n                    *(*0x20 + -0x28) = 0x44128b;\n                    fcn.0040a580();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x4412a7;\n                fcn.0045ca40(*0x57fd38);\n            }\n            *(*0x20 + -0x28) = 0x4412ac;\n            in_RAX = fcn.004316c0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4412b7;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 606
    },
    "004412e0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t fcn.004412e0(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t in_RAX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n            } while (*(in_RAX + 0x194) != *(in_RAX + 0x194));\n            if ((*(in_RAX + 0x194) == *(in_RAX + 400)) && (*(in_RAX + 0x998) == 0)) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x20) = 0x441333;\n                fcn.004411e0();\n                piVar2 = *(*0x20 + 8);\n                iVar3 = *piVar2;\n                iVar5 = ((iVar3 >> 0x1f) >> 0x1b) + iVar3 >> 5;\n                uVar6 = iVar3 + iVar5 * -0x20;\n                if (-1 < uVar6) {\n                    if (iVar5 < *0x57fcf8) {\n                        puVar1 = *0x57fcf0 + iVar5 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | 1 << (uVar6 & 0x1f) & -(uVar6 < 0x20);\n                        *(piVar2 + 2) = *0x5806f0;\n                        LOCK();\n                        iVar3 = *0x5806f8;\n                        *0x5806f0 = piVar2;\n                        *0x5806f8 = *0x5806f8 + 1;\n                        return iVar3;\n                    }\n                    *(*0x20 + -0x20) = 0x4413c5;\n                    fcn.0045ca40(*0x57fcf8);\n                }\n                *(*0x20 + -0x20) = 0x4413ca;\n                fcn.004316c0();\n            }\n            *(*0x20 + -0x20) = 0x4413db;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4413e6;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 681
    },
    "00441400": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00441400(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    uint64_t arg1;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    piVar4 = *0x5806f0;\n    if (*0x5806f0 == NULL) {\n        return;\n    }\n    iVar2 = **0x5806f0;\n    iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n    uVar5 = iVar2 + iVar6 * -0x20;\n    if (-1 < uVar5) {\n        arg1 = *0x57fd38;\n        if (iVar6 < *0x57fd38) {\n            puVar1 = *0x57fd30 + iVar6 * 4;\n            LOCK();\n            *puVar1 = *puVar1 | 1 << (uVar5 & 0x1f) & -(uVar5 < 0x20);\n            iVar2 = *piVar4;\n            iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar5 = iVar2 + iVar6 * -0x20;\n            arg1 = *0x57fcf8;\n            if (-1 < uVar5) {\n                if (iVar6 < *0x57fcf8) {\n                    puVar1 = *0x57fcf0 + iVar6 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar5 & 0x1f) & -(uVar5 < 0x20));\n                    LOCK();\n                    *0x5806f0 = *(piVar4 + 2);\n                    *0x5806f8 = *0x5806f8 + -1;\n                    return;\n                }\n                fcn.0045ca40(*0x57fcf8);\n            }\n            fcn.004316c0();\n        }\n        fcn.0045ca40(arg1);\n    }\n    fcn.004316c0();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 509
    },
    "00402f60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00402f60(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            if (*(in_RAX + 0x18) != NULL) {\n                if ((*(in_RAX + 0x17) & 0x20) != 0) {\n                    return in_RAX & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x402fac;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x402fca;\n            fcn.00454b20();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x402fe5;\n            fcn.00448620(0x1c);\n            *(*0x20 + -0x38) = 0x402fea;\n            unaff_RBX = fcn.00409da0();\n            *(*0x20 + -0x38) = 0x402ff9;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40300e;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 567
    },
    "00403040": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00403040(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            uVar2 = *(in_RAX + 8);\n            if (*(uVar2 + 0x18) != NULL) {\n                if ((*(uVar2 + 0x17) & 0x20) != 0) {\n                    return uVar2 & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(uVar2 + 0x18);\n                *(*0x20 + -0x38) = 0x40308f;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x4030ad;\n            fcn.00454b20();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x4030c6;\n            fcn.00448620(0x1c);\n            *(*0x20 + -0x38) = 0x4030cb;\n            unaff_RBX = fcn.00409da0();\n            *(*0x20 + -0x38) = 0x4030da;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x4030ef;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 582
    },
    "00403280": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00403280(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    uint32_t uStack32;\n    \n    if (in_RAX == 0) {\n        fcn.004330a0();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0x100) = *(iVar2 + 0x100) + 1;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + 1;\n    **(iVar2 + 0x110) = 0;\n    fcn.004579a0();\n    while( true ) {\n        LOCK();\n        if (*(iVar2 + 0x330) == 0) break;\n        fcn.0045a220();\n    }\n    *(iVar2 + 0x330) = 1;\n    *(iVar2 + 0xe8) = 1;\n    fcn.0045c180();\n    *(iVar2 + 0xe8) = 0;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + -1;\n    uVar1 = *(iVar2 + 0x330);\n    *(iVar2 + 0x330) = 0;\n    fcn.004579e0(iVar2, uVar1);\n    return uStack32;\n}\n",
        "token_count": 365
    },
    "00404f40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404f40(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004124c0(arg1);\n    fcn.0045d380(*in_RAX);\n    return;\n}\n",
        "token_count": 107
    },
    "00404fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404fc0(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004124c0(*(unaff_RBX + 0x18));\n    fcn.0045d380(*in_RAX);\n    return;\n}\n",
        "token_count": 124
    },
    "00407400": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407400(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00448620(0xf);\n    return;\n}\n",
        "token_count": 83
    },
    "00409ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00409ba0(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = fcn.0040ba40(1, *in_RAX);\n    fcn.00411220(unaff_RBX);\n    return uVar1;\n}\n",
        "token_count": 128
    },
    "00409c20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00409c20(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = fcn.0040ba40(0, *in_RAX, param_3, param_4, unaff_RBX);\n    fcn.0045d380(*in_RAX);\n    return uVar1;\n}\n",
        "token_count": 161
    },
    "00411580": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00411580(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(in_RAX + 0x30);\n            uVar3 = *(in_RAX + 0x38);\n            if (uVar3 == uVar1) {\n                return uVar1;\n            }\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + 8) = in_RAX;\n                uVar5 = *(in_RAX + 0x40);\n                iVar4 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar5 == 0) {\n                    iVar4 = 0x40;\n                }\n                while( true ) {\n                    if (iVar4 != 0x40) {\n                        uVar5 = uVar1 + iVar4;\n                        if (uVar3 <= uVar5) {\n                            *(in_RAX + 0x30) = uVar3;\n                            return uVar3;\n                        }\n                        *(in_RAX + 0x40) = *(in_RAX + 0x40) >> (iVar4 + 1U & 0x3f) & -(iVar4 + 1U < 0x40);\n                        uVar1 = uVar1 + iVar4 + 1;\n                        if (((uVar1 & 0x3f) == 0) && (uVar3 != uVar1)) {\n                            *(*0x20 + -0x10) = uVar5;\n                            *(*0x20 + -0x18) = uVar1;\n                            *(*0x20 + -0x38) = 0x411685;\n                            fcn.00411560();\n                            in_RAX = *(*0x20 + 8);\n                            uVar1 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x10);\n                        }\n                        *(in_RAX + 0x30) = uVar1;\n                        return uVar5;\n                    }\n                    uVar1 = uVar1 + 0x40 & 0xffffffffffffffc0;\n                    if (uVar3 <= uVar1) break;\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x38) = 0x4115e5;\n                    fcn.00411560();\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(in_RAX + 0x40);\n                    iVar4 = 0;\n                    if (uVar3 != 0) {\n                        for (; (uVar3 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                        }\n                    }\n                    if (uVar3 == 0) {\n                        iVar4 = 0x40;\n                    }\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar1 = *(*0x20 + -0x18);\n                }\n                *(in_RAX + 0x30) = uVar3;\n                return uVar3;\n            }\n            *(*0x20 + -0x38) = 0x4116c7;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x4116d2;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 997
    },
    "00411c00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00411c00(uint64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n        arg1 = arg1 & 0xffffffff;\n    }\n    fcn.00411b20(arg1);\n    return;\n}\n",
        "token_count": 99
    },
    "00414020": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00414020(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar1 = fcn.00424240(2, (in_RAX + 0x3fU >> 6) + 0x1fff >> 0xd);\n    fcn.004139a0(*(iVar1 + 0x18));\n    return iVar1;\n}\n",
        "token_count": 147
    },
    "00414340": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00414340(void)\n\n{\n    uint64_t *puVar1;\n    uint8_t uVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    uint8_t unaff_BL;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = unaff_BL;\n            if (uVar5 < 0x88) {\n                iVar3 = *(in_RAX + 0x28 + uVar5 * 8);\n                if (*(iVar3 + 0x38) == *(iVar3 + 0x60)) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_BL;\n                    *(*0x20 + -0x10) = uVar5;\n                    if (iVar3 == 0x5d41c0) {\ncode_r0x004143d7:\n                        *(*0x20 + -0x38) = 0x4143ef;\n                        iVar3 = fcn.00414a80();\n                        if (iVar3 != 0) {\n                            if (*(iVar3 + 0x38) != *(iVar3 + 0x60)) {\n                                *(*0x20 + -0x18) = iVar3;\n                                *(iVar3 + 0x58) = *0x5a5f30 + 3;\n                                *(*0x20 + -0x38) = 0x414427;\n                                iVar3 = fcn.0042c4c0();\n                                uVar2 = *(*0x20 + 0x10);\n                                uVar5 = uVar2;\n                                if (uVar2 >> 1 < 0x44) {\n                                    piVar4 = iVar3 + (uVar2 >> 1) * 8 + 0x48;\n                                    LOCK();\n                                    *piVar4 = *piVar4 + (*(*(*0x20 + -0x18) + 0x38) - *(*(*0x20 + -0x18) + 0x60));\n                                    if (uVar2 == 5) {\n                                        piVar4 = *(*0x20 + 8);\n                                        LOCK();\n                                        puVar1 = iVar3 + 0x30;\n                                        uVar5 = *puVar1;\n                                        *puVar1 = *puVar1 + piVar4[4];\n                                        piVar4[4] = 0;\n                                    }\n                                    *(*0x20 + -0x38) = 0x41448f;\n                                    fcn.0042c5a0(piVar4, uVar5);\n                                    arg1 = *(*(*0x20 + 8) + 8);\n                                    *(*0x20 + -0x38) = 0x4144c5;\n                                    fcn.0041e500(arg1);\n                                    iVar3 = *(*0x20 + 8);\n                                    *(iVar3 + 8) = 0;\n                                    *(iVar3 + 0x28 + *(*0x20 + -0x10) * 8) = *(*0x20 + -0x18);\n                                    return;\n                                }\n                                *(*0x20 + -0x38) = 0x4144f8;\n                                fcn.0045ca40(0x44);\n                            }\n                            *(*0x20 + -0x38) = 0x414509;\n                            fcn.004330a0();\n                        }\n                        *(*0x20 + -0x38) = 0x41451a;\n                        fcn.004330a0();\n                    }\n                    else if (*(iVar3 + 0x58) == *0x5a5f30 + 3) {\n                        *(*0x20 + -0x38) = 0x4143d2;\n                        fcn.00414e00();\n                        goto code_r0x004143d7;\n                    }\n                    *(*0x20 + -0x38) = 0x41452b;\n                    fcn.004330a0();\n                }\n                unaff_BL = 0x28;\n                *(*0x20 + -0x38) = 0x41453c;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x38) = 0x414549;\n            in_RAX = fcn.0045ca40(0x88);\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + -8) = 0x414558;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1169
    },
    "004199e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004199e0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x38) = 0x419a05;\n            fcn.00436500();\n            *(*0x20 + -0x38) = 0x419a13;\n            fcn.0040a360();\n            *(*0x20 + -0x20) = *0x5a61e0;\n            *(*0x20 + -0x10) = *0x5a61d8;\n            *(*0x20 + -0x38) = 0x419a39;\n            fcn.0040a580();\n            iVar2 = *(*0x20 + -0x20);\n            iVar3 = *(*0x20 + -0x10);\n            iVar1 = 0;\n            while( true ) {\n                if (iVar2 <= iVar1) {\n                    *0x580180 = 0;\n                    *0x580228 = *0x5d4538;\n                    return;\n                }\n                if (0x3f < *(iVar3 + iVar1 * 8) >> 0x14) break;\n                *(*0x20 + -0x18) = iVar1;\n                *(*0x20 + -0x38) = 0x419a7a;\n                fcn.0045d0c0();\n                iVar1 = *(*0x20 + -0x18) + 1;\n                iVar2 = *(*0x20 + -0x20);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x38) = 0x419ad8;\n            fcn.0045ca60(0x40);\n        }\n        *(puVar4 + -8) = 0x419ade;\n        fcn.0045ea60();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 553
    },
    "0041b340": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0041b340(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    iVar2 = *0x580240;\n    iVar1 = *0x580238;\n    if (*0x5d3b64 == 0) {\n        fcn.0040a580();\n        return 1;\n    }\n    *(unaff_R14 + 0xa0) = 0;\n    iVar3 = unaff_R14;\n    if (*0x580240 != 0) {\n        *(*0x580240 + 0xa0) = unaff_R14;\n        iVar3 = *0x580238;\n    }\n    *0x580238 = iVar3;\n    if (*0x5d4588 < 1) {\n        *0x580240 = unaff_R14;\n        fcn.004359e0(0xb);\n        return 1;\n    }\n    *0x580238 = iVar1;\n    *0x580240 = iVar2;\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = 0;\n    }\n    fcn.0040a580();\n    return 0;\n}\n",
        "token_count": 333
    },
    "00423940": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00423940(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00416a40(0x4d5dc8);\n    fcn.00416a40(0);\n    fcn.00416a40(0);\n    fcn.00416a40(0);\n    fcn.00416a40(0);\n    fcn.00416a40(0);\n    *(in_RAX + 0x16a78) = 0;\n    for (iVar1 = 0; iVar1 < 0x88; iVar1 = iVar1 + 1) {\n        *(in_RAX + 0x10438 + iVar1 * 0xc0) = iVar1;\n    }\n    fcn.004264c0(0x5d58f8);\n    return;\n}\n",
        "token_count": 246
    },
    "00425440": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00425440(void)\n\n{\n    uchar (**ppauVar1) [16];\n    uchar (**in_RAX) [16];\n    uchar (*unaff_RBX) [16];\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            ppauVar1 = *unaff_RBX[1];\n            if (in_RAX == ppauVar1) {\n                if (*in_RAX == unaff_RBX) {\n                    *in_RAX = **unaff_RBX;\n                }\n                else {\n                    **(*unaff_RBX + 8) = **unaff_RBX;\n                }\n                if (in_RAX[1] == unaff_RBX) {\n                    in_RAX[1] = *(*unaff_RBX + 8);\n                }\n                else {\n                    *(**unaff_RBX + 8) = *(*unaff_RBX + 8);\n                }\n                *unaff_RBX = in_XMM15;\n                *unaff_RBX[1] = 0;\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = ppauVar1;\n            *(*0x20 + -0x18) = *unaff_RBX[2];\n            *(*0x20 + -0x20) = *(*unaff_RBX + 8);\n            *(*0x20 + -0x38) = 0x4254d7;\n            fcn.00434840();\n            *(*0x20 + -0x38) = 0x4254e8;\n            fcn.00435140();\n            *(*0x20 + -0x38) = 0x4254f2;\n            fcn.00434e40();\n            *(*0x20 + -0x38) = 0x425505;\n            fcn.00435140();\n            *(*0x20 + -0x38) = 0x42550f;\n            fcn.00435100();\n            *(*0x20 + -0x38) = 0x425525;\n            fcn.00435140();\n            *(*0x20 + -0x38) = 0x42552f;\n            fcn.00435100();\n            *(*0x20 + -0x38) = 0x425545;\n            fcn.00435140();\n            *(*0x20 + -0x38) = 0x42554f;\n            fcn.00435100();\n            *(*0x20 + -0x38) = 0x425565;\n            fcn.00435140();\n            *(*0x20 + -0x38) = 0x42556f;\n            fcn.00435100();\n            *(*0x20 + -0x38) = 0x425574;\n            fcn.00434aa0();\n            *(*0x20 + -0x38) = 0x425579;\n            fcn.004348c0();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x42558a;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42559a;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 926
    },
    "00429f20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429f20(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004295e0(arg1);\n    fcn.004296e0(arg1);\n    return;\n}\n",
        "token_count": 98
    },
    "00430100": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00430100(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    fcn.0040a360();\n    if (*(iVar1 + 0x310) != 0) {\n        fcn.004303e0();\n        *(iVar1 + 0x310) = 0;\n    }\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 106
    },
    "00433300": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433300(void)\n\n{\n    fcn.0045a220();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 34
    },
    "004346c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004346c0(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t arg1_00;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_01;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x38) = 0x4346ec;\n            fcn.00434840();\n            if (*0x5d3b88 != 0) {\ncode_r0x00434709:\n                *(*0x20 + -0x38) = 0x43470e;\n                fcn.004348c0();\n                return;\n            }\n            arg1_00 = *(*0x20 + 0x10);\n            iVar3 = *(*0x20 + 0x18);\n            iVar5 = *(*0x20 + 8);\n            uVar1 = 0;\n            while( true ) {\n                if (arg1_00 <= uVar1) goto code_r0x00434709;\n                if (0x200 < *0x5d3ce0) goto code_r0x004347f8;\n                iVar6 = *0x5d3ce0 - 0x200;\n                if (arg1_00 < uVar1) break;\n                iVar2 = arg1_00 - uVar1;\n                arg1_01 = -iVar6;\n                if (-iVar2 != iVar6 && iVar2 <= -iVar6) {\n                    arg1_01 = iVar2;\n                }\n                unaff_RBX = iVar5 + (uVar1 - iVar3 >> 0x3f & uVar1);\n                if (unaff_RBX != (iVar6 >> 0x3f & *0x5d3ce0) + 0x5d4620) {\n                    *(*0x20 + -0x10) = uVar1;\n                    *(*0x20 + -0x18) = arg1_01;\n                    *(*0x20 + -0x38) = 0x4347ce;\n                    fcn.0045d380(arg1_01);\n                    iVar3 = *(*0x20 + 0x18);\n                    iVar5 = *(*0x20 + 8);\n                    arg1_00 = *(*0x20 + 0x10);\n                    arg1_01 = *(*0x20 + -0x18);\n                    uVar1 = *(*0x20 + -0x10);\n                }\n                iVar6 = *0x5d3ce0 + arg1_01;\n                *0x5d3ce0 = iVar6 + (((iVar6 >> 0x3f) >> 0x37) + iVar6 >> 9) * -0x200;\n                uVar1 = arg1_01 + uVar1;\n            }\n            *(*0x20 + -0x38) = 0x4347f8;\n            fcn.0045cb00(arg1_00);\ncode_r0x004347f8:\n            arg1 = 0x200;\n            *(*0x20 + -0x38) = 0x434805;\n            in_RAX = fcn.0045cb00(0x200);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x43481a;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1017
    },
    "0043da80": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043da80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0045a220();\n    return;\n}\n",
        "token_count": 82
    },
    "0044b920": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044b920(void)\n\n{\n    int32_t iVar1;\n    uint64_t arg1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX == 0) || (iVar1 = *(in_RAX + 4),  iVar1 == 0)) {\n                iVar3 = 0;\n                goto code_r0x0044b966;\n            }\n            arg1 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (iVar1 < arg1) {\n                iVar3 = unaff_RBX + iVar1;\ncode_r0x0044b966:\n                *(*0x20 + -0x20) = iVar3;\n                *(*0x20 + -0x38) = 0x44b973;\n                uVar2 = fcn.004495c0();\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar2;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44b9a5;\n            in_RAX = fcn.0045ca40(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44b9b5;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 585
    },
    "0044ba80": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044ba80(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                iVar2 = 0;\n                goto code_r0x0044babd;\n            }\n            arg1_00 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (arg1 < arg1_00) {\n                iVar2 = unaff_RBX + arg1;\ncode_r0x0044babd:\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x38) = 0x44baca;\n                uVar1 = fcn.004495c0();\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar1;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44bafc;\n            in_RAX = fcn.0045ca40(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x44bb10;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 613
    },
    "0044bb40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044bb40(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                return 0x4c7914;\n            }\n            arg1_00 = *(unaff_RBX + 0x28);\n            uVar3 = arg1 + *(in_RAX + 0x20);\n            if (uVar3 < arg1_00) {\n                uVar1 = *(*(unaff_RBX + 0x20) + uVar3 * 4);\n                if (uVar1 == 0xffffffff) {\n                    return 0x4c7914;\n                }\n                uVar3 = *(unaff_RBX + 0x40);\n                arg1_00 = *(unaff_RBX + 0x38);\n                if (uVar1 < uVar3) {\n                    *(*0x20 + -0x20) = uVar1 + arg1_00;\n                    *(*0x20 + -0x38) = 0x44bb99;\n                    uVar2 = fcn.004495c0();\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                    *(*0x20 + -0x10) = uVar2;\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x44bbf4;\n                fcn.0045ca40(uVar3);\n            }\n            *(*0x20 + -0x38) = 0x44bbfe;\n            in_RAX = fcn.0045ca40(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x44bc12;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 731
    },
    "0044e0e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0044e0e0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    for (iVar3 = 0; iVar3 < arg1; iVar3 = iVar3 + 1) {\n        iVar2 = *(unaff_RBX + iVar3 * 8);\n        fcn.0044cde0();\n        LOCK();\n        piVar1 = iVar2 + 0x40;\n        if (*piVar1 == 9) {\n            *piVar1 = 1;\n        }\n        else {\n            fcn.0044ef40();\n        }\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "00450500": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450500(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    fcn.0044f180(0);\n    return;\n}\n",
        "token_count": 114
    },
    "004531a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004531a0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004532a0(arg1);\n    return;\n}\n",
        "token_count": 87
    },
    "00453200": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00453200(ulong arg1)\n\n{\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*(*(unaff_RDI + 0x30) + 0x2b0) != 0) {\n        fcn.004532a0(0);\n        return;\n    }\n    fcn.004532a0(arg1);\n    return;\n}\n",
        "token_count": 138
    },
    "00458be0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00458be0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [16];\n    int64_t iStackX24;\n    ulong uStackX32;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_GetProcAddress;\n    *(iVar2 + 0x2c8) = 2;\n    *(iVar2 + 0x2d0) = auStackX8;\n    fcn.00403280();\n    iStackX24 = *(iVar2 + 0x2d8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043e780();\n    return;\n}\n",
        "token_count": 329
    },
    "004593c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004593c0(ulong arg1, ulong arg2)\n\n{\n    fcn.0045e580();\n    return;\n}\n",
        "token_count": 32
    },
    "0045de40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0045de40(void)\n\n{\n    (*_sym.imp.kernel32.dll_GetStdHandle)();\n    (*_sym.imp.kernel32.dll_WriteFile)();\n    fcn.0045c3c0();\n    return;\n}\n",
        "token_count": 50
    },
    "0045e220": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e220(void)\n\n{\n    int32_t iStackX8;\n    uchar auStack48 [32];\n    int64_t iStack16;\n    uchar *puStack8;\n    \n    puStack8 = auStack48;\n    iStack16 = iStackX8;\n    (**0x57ef28)(0xffffffffffffffff, 0);\n    return;\n}\n",
        "token_count": 83
    },
    "0045e300": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0045e300(void)\n\n{\n    (*_sym.imp.kernel32.dll_SwitchToThread)();\n    return;\n}\n",
        "token_count": 29
    },
    "0045e580": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e580(void)\n\n{\n    ulong uStackX24;\n    \n    fcn.004112c0(uStackX24);\n    return;\n}\n",
        "token_count": 37
    },
    "00466520": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00466520(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    char acStack33 [25];\n    \n    uVar3 = 0;\n    while (unaff_RBX != 0) {\n        if (0x17 < uVar3) goto code_r0x00466648;\n        acStack33[uVar3 + 1] = unaff_RBX + (unaff_RBX / 10) * -10 + '0';\n        uVar3 = uVar3 + 1;\n        unaff_RBX = unaff_RBX / 10;\n    }\n    *(in_RAX + 800) = 0;\n    while (uVar4 = uVar3 - 1,  -1 < uVar4) {\n        if (0x17 < uVar4) goto code_r0x0046663b;\n        if (799 < *(in_RAX + 800)) goto code_r0x0046662e;\n        *(in_RAX + *(in_RAX + 800)) = acStack33[uVar3];\n        *(in_RAX + 800) = *(in_RAX + 800) + 1;\n        uVar3 = uVar4;\n    }\n    *(in_RAX + 0x328) = *(in_RAX + 800);\n    while (iVar1 = *(in_RAX + 800),  0 < iVar1) {\n        if (799 < iVar1 - 1U) {\n            fcn.0045ca40(800);\ncode_r0x0046662e:\n            fcn.0045ca40(800);\ncode_r0x0046663b:\n            fcn.0045ca40(0x18);\ncode_r0x00466648:\n            fcn.0045ca40(0x18);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if (*(iVar1 + -1 + in_RAX) != '0') break;\n        *(in_RAX + 800) = iVar1 - 1U;\n    }\n    if (iVar1 == 0) {\n        *(in_RAX + 0x328) = 0;\n    }\n    return;\n}\n",
        "token_count": 522
    },
    "004722a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.004722a0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint8_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = *(in_RAX + 0x17) & 0x1f;\n            if (uVar2 < 0x13) {\n                if (uVar2 == 0x11) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4fa5c0;\n                    }\n                    return uVar1;\n                }\n                if (uVar2 == 0x12) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4fa5c0;\n                    }\n                    return uVar1;\n                }\n            }\n            else {\n                if (uVar2 == 0x15) {\n                    if (*(in_RAX + 0x38) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4fa5c0;\n                    }\n                    return uVar1;\n                }\n                if (uVar2 == 0x16) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4fa5c0;\n                    }\n                    return uVar1;\n                }\n                if (uVar2 == 0x17) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4fa5c0;\n                    }\n                    return uVar1;\n                }\n            }\n            *(*0x20 + -0x38) = 0x4723a5;\n            fcn.00472100();\n            *(*0x20 + -0x38) = 0x4723be;\n            fcn.00448620(0x1e);\n            *(*0x20 + -0x38) = 0x4723c5;\n            fcn.00409da0();\n            *(*0x20 + -0x38) = 0x4723d4;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4723df;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 722
    },
    "0047b0c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0047b0c0(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = unaff_RBX;\n            for (iVar2 = 0; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n                if (0xffff < *(in_RAX + iVar2 * 4)) {\n                    iVar3 = iVar3 + 1;\n                }\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x38) = 0x47b11b;\n            iVar1 = fcn.00444b80(iVar3);\n            iVar3 = *(*0x20 + 8);\n            iVar2 = *(*0x20 + -0x10);\n            arg1 = *(*0x20 + -0x18);\n            arg1_00 = 0;\n            for (unaff_RBX = 0; unaff_RBX < iVar2; unaff_RBX = unaff_RBX + 1) {\n                uVar5 = *(iVar3 + unaff_RBX * 4);\n                if ((uVar5 < 0xd800) || (uVar5 - 0xe000 < 0x2000)) {\n                    if (arg1 <= arg1_00) goto code_r0x0047b21d;\n                    *(iVar1 + arg1_00 * 2) = uVar5;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    uVar5 = uVar5 - 0x10000;\n                    if (uVar5 < 0x100000) {\n                        if (arg1 <= arg1_00) goto code_r0x0047b215;\n                        *(iVar1 + arg1_00 * 2) = (uVar5 >> 10 & 0x3ff) + 0xd800;\n                        if (arg1 <= arg1_00 + 1) goto code_r0x0047b20d;\n                        *(iVar1 + 2 + arg1_00 * 2) = (uVar5 & 0x3ff) + 0xdc00;\n                        arg1_00 = arg1_00 + 2;\n                    }\n                    else {\n                        if (arg1 <= arg1_00) goto code_r0x0047b205;\n                        *(iVar1 + arg1_00 * 2) = 0xfffd;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                }\n            }\n            if (arg1_00 <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x38) = 0x47b205;\n            fcn.0045cac0(arg1_00, arg1);\n            arg1 = arg1_00;\ncode_r0x0047b205:\n            *(*0x20 + -0x38) = 0x47b20d;\n            fcn.0045ca40(arg1);\ncode_r0x0047b20d:\n            *(*0x20 + -0x38) = 0x47b215;\n            fcn.0045ca40(arg1);\ncode_r0x0047b215:\n            *(*0x20 + -0x38) = 0x47b21d;\n            fcn.0045ca40(arg1);\ncode_r0x0047b21d:\n            *(*0x20 + -0x38) = 0x47b225;\n            in_RAX = fcn.0045ca40(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x47b23a;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1124
    },
    "00482ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00482ec0(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = in_XMM15;\n            if ((*0x57f6d0 == 0) || (*0x57f6d0 == 0x5d3b39)) {\n                *(*0x20 + -0x18) = in_XMM15;\n            }\n            else {\n                *(*0x20 + -0x18) = *0x57f6d0;\n                *(*0x20 + -0x10) = *0x57f6d8;\n            }\n            if (*(*0x20 + -0x18) == 0) {\n                iVar2 = 0;\n                goto code_r0x00482f40;\n            }\n            if (*(*0x20 + -0x18) == 0x4b15c0) {\n                iVar2 = **(*0x20 + -0x10);\ncode_r0x00482f40:\n                if (iVar2 != 0) {\n                    pcVar1 = *(iVar2 + 0x20);\n                    *(*0x20 + -0x38) = 0x482f54;\n                    (*pcVar1)(unaff_RBX);\n                }\n                return;\n            }\n            unaff_RBX = 0x4b15c0;\n            *(*0x20 + -0x38) = 0x482f70;\n            in_RAX = fcn.004099e0(0x4b6b60);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x482f85;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 604
    },
    "004875c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004875c0(ulong arg1)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00487380(arg1);\n    fcn.00486480(unaff_RBX);\n    return;\n}\n",
        "token_count": 105
    },
    "00487de0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00487de0(void)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x28;\n            unaff_RBX = 4;\n            *(*0x20 + -0x38) = 0x487e27;\n            arg1 = fcn.004650e0(0x44);\n            if (arg1 < 0x45) {\n                *(*0x20 + -0x38) = 0x487e45;\n                fcn.00486480(arg1);\n                return;\n            }\n            *(*0x20 + -0x38) = 0x487e5c;\n            in_RAX = fcn.0045cac0(arg1, 0x44);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x487e6c;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 423
    },
    "004897c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004897c0(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RDX;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (iVar1 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if (iVar1 < 0x59) {\n        if (iVar1 < 0x47) {\n            if (iVar1 == 0x45) {\ncode_r0x00489825:\n                fcn.00487f60(arg1);\n                return;\n            }\n            if (iVar1 == 0x46) {\n                fcn.00487f60(0x66);\n                return;\n            }\n        }\n        else if ((iVar1 == 0x47) || (iVar1 == 0x58)) goto code_r0x0048984a;\ncode_r0x0048985e:\n        fcn.00488fc0(arg1, in_RDX, in_R8);\n    }\n    else {\n        if (iVar1 < 0x67) {\n            if (iVar1 != 0x62) {\n                if (100 < iVar1) goto code_r0x00489825;\n                goto code_r0x0048985e;\n            }\n        }\n        else if (iVar1 != 0x67) {\n            if (iVar1 == 0x76) {\n                fcn.00487f60(0x67);\n                return;\n            }\n            if (iVar1 != 0x78) goto code_r0x0048985e;\n        }\ncode_r0x0048984a:\n        fcn.00487f60(arg1);\n    }\n    return;\n}\n",
        "token_count": 416
    },
    "00493280": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00493280(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack24;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00402320(arg1, in_RDX);\n    if (iStack24 != -1) {\n        return 0;\n    }\n    uVar1 = fcn.00444a20(unaff_RBX);\n    return uVar1;\n}\n",
        "token_count": 154
    },
    "00493780": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.00493780(int64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RDI;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x38) = 0x4937a8;\n            fcn.0047c1e0();\n            if (unaff_RDI != 0) goto code_r0x004937ba;\n            if (unaff_RBX != 0) {\n                unaff_RDI = 0;\ncode_r0x004937ba:\n                if (unaff_RDI == 0) {\n                    *(*0x20 + -0x38) = 0x4937e5;\n                    uVar1 = fcn.00493840(*(*0x20 + -0x10));\n                    return uVar1;\n                }\n                return 0;\n            }\n            *(*0x20 + -0x38) = 0x4937f9;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045ca40(0);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x493813;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 568
    },
    "00401d00": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t fcn.00401d00(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = (in_RAX & 0x5555555555555555) + (in_RAX >> 1 & 0x5555555555555555);\n    uVar1 = (uVar1 >> 2 & 0x3333333333333333) + (uVar1 & 0x3333333333333333);\n    uVar1 = (uVar1 >> 4) + uVar1 & 0xf0f0f0f0f0f0f0f;\n    uVar1 = uVar1 + (uVar1 >> 8);\n    iVar2 = (uVar1 >> 0x10) + uVar1;\n    return (iVar2 >> 0x20) + iVar2 & 0x7f;\n}\n",
        "token_count": 210
    },
    "00404220": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00404220(uint64_t arg1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int64_t unaff_RDI;\n    uint64_t uVar8;\n    \n    iVar5 = arg1 - (arg1 & 0xffffffffffffffc0);\n    uVar8 = unaff_RDI + iVar5;\n    puVar6 = unaff_RBX + (arg1 >> 6);\n    iVar4 = (arg1 & 0xffffffffffffffc0) + in_RAX;\n    uVar3 = 0;\n    uVar7 = 0;\n    do {\n        if (uVar8 <= uVar3) {\n            return;\n        }\n        if ((uVar3 & 0x3f) == 0) {\n            uVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        else {\n            uVar7 = uVar7 >> 1;\n        }\n        if (iVar5 == 0) {\n            if (((uVar7 & 1) != 0) && (cVar2 = fcn.00403a80(iVar4, *(iVar4 + uVar3)),  cVar2 != '\\0')) {\n                fcn.004330a0();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        else {\n            iVar5 = iVar5 + -8;\n        }\n        uVar3 = uVar3 + 8;\n    } while( true );\n}\n",
        "token_count": 389
    },
    "00408d80": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.00408d80(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar5 = unaff_RBX ^ *0x5d3e00 ^ 0xa0761d6478bd642f;\n    if (arg1 == 0) {\n        return uVar5;\n    }\n    if (arg1 < 4) {\n        uVar4 = CONCAT12(*(in_RAX + (arg1 - 1)), CONCAT11(*(in_RAX + (arg1 >> 1)), *in_RAX));\n        uVar6 = 0;\n    }\n    else if (arg1 == 4) {\n        uVar4 = *in_RAX;\n        uVar6 = *in_RAX;\n    }\n    else if (arg1 < 8) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 4));\n    }\n    else if (arg1 == 8) {\n        uVar4 = *in_RAX;\n        uVar6 = uVar4;\n    }\n    else if (arg1 < 0x11) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 8));\n    }\n    else {\n        uVar6 = arg1;\n        uVar4 = uVar5;\n        uVar7 = uVar5;\n        if (0x30 < arg1) {\n            for (; 0x30 < uVar6; uVar6 = uVar6 - 0x30) {\n                auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n                auVar2 = ZEXT816(in_RAX[3] ^ uVar4) * ZEXT816(in_RAX[2] ^ 0x8ebc6af09c88c6e3);\n                auVar3 = ZEXT816(in_RAX[5] ^ uVar7) * ZEXT816(in_RAX[4] ^ 0x589965cc75374cc3);\n                uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n                in_RAX = in_RAX + 6;\n                uVar4 = SUB168(auVar2, 0) ^ SUB168(auVar2 >> 0x40, 0);\n                uVar7 = SUB168(auVar3, 0) ^ SUB168(auVar3 >> 0x40, 0);\n            }\n            uVar5 = uVar5 ^ uVar4 ^ uVar7;\n        }\n        for (; 0x10 < uVar6; uVar6 = uVar6 - 0x10) {\n            auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n            uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n            in_RAX = in_RAX + 2;\n        }\n        uVar4 = *(in_RAX + (uVar6 - 0x10));\n        uVar6 = *(in_RAX + (uVar6 - 8));\n    }\n    auVar1 = ZEXT816(uVar6 ^ uVar5) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    auVar1 = ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 943
    },
    "00414580": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00414580(uchar param_1)\n\n{\n    int64_t *piVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x2000) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 0x18) = param_1;\n                uVar4 = unaff_RBX >> 0xd;\n                if ((unaff_RBX & 0x1fff) != 0) {\n                    uVar4 = (unaff_RBX >> 0xd) + 1;\n                }\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar4 << 0xd;\n                *(*0x20 + -0x50) = 0x4145e5;\n                fcn.00422620();\n                param_1 = *(*0x20 + 0x18);\n                *(*0x20 + -0x21) = param_1;\n                *(*0x20 + -0x50) = 0x414605;\n                iVar2 = fcn.00424100();\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x50) = 0x41461f;\n                    iVar2 = fcn.0042c4c0();\n                    LOCK();\n                    *(iVar2 + 0x38) = *(iVar2 + 0x38) + *(*0x20 + -0x10);\n                    LOCK();\n                    piVar1 = iVar2 + 0x40;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x50) = 0x414645;\n                    fcn.0042c5a0(iVar2);\n                    *(*0x20 + -0x50) = 0x414665;\n                    fcn.0041e500(0);\n                    if (*(*0x20 + -0x21) < 0x88) {\n                        *(*0x20 + -0x50) = 0x4146aa;\n                        fcn.0042be60(*(*0x20 + -0x21) * 0xc0 + 0x5a6290, (*0x5a5f30 >> 1 & 1) * 5);\n                        iVar2 = *(*0x20 + -0x20);\n                        *(iVar2 + 0x70) = *(iVar2 + 0x18) + *(*0x20 + 0x10);\n                        uVar4 = *(iVar2 + 0x18) + 0x800000000000;\n                        uVar3 = uVar4 >> 0x2a;\n                        if (uVar3 < 0x40) {\n                            uVar4 = uVar4 >> 0x16;\n                            if (*(*(uVar3 * 8 + 0x5a5f90) + (uVar4 & 0xfffff) * 8) == 0) {\n                                uVar4 = 0;\n                            }\n                            *(*0x20 + -0x50) = 0x414745;\n                            fcn.00412700(uVar4 & 0xffffffff);\n                            return *(*0x20 + -0x20);\n                        }\n                        *(*0x20 + -0x50) = 0x41475e;\n                        fcn.0045ca60(0x40);\n                    }\n                    param_1 = 0x88;\n                    *(*0x20 + -0x50) = 0x414768;\n                    fcn.0045ca40(0x88);\n                }\n                *(*0x20 + -0x50) = 0x414779;\n                fcn.004330a0();\n            }\n            unaff_RBX = 0xd;\n            *(*0x20 + -0x50) = 0x41478a;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        puVar5[0x18] = param_1;\n        *(puVar5 + -8) = 0x41479e;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        param_1 = puVar5[0x18];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1181
    },
    "004147c0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.004147c0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong uVar6;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004147c0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        uVar4 = *(in_RAX + 8);\n        *(*0x20 + -0x10) = uVar4;\n        *(in_RAX + 8) = 0;\n        *(*0x20 + -0x44) = *0x5a5f30;\n        iVar2 = 0;\n        uVar6 = 0;\n        do {\n            *(*0x20 + -0x28) = uVar6;\n            if (0x87 < iVar2) {\n                *(in_RAX + 0x10) = in_XMM15;\n                *(*0x20 + -0x68) = 0x41492c;\n                iVar3 = fcn.0042c4c0(uVar4);\n                iVar2 = *(*0x20 + 8);\n                LOCK();\n                piVar1 = iVar3 + 0x30;\n                iVar3 = *piVar1;\n                *piVar1 = *piVar1 + *(iVar2 + 0x20);\n                *(iVar2 + 0x20) = 0;\n                *(*0x20 + -0x68) = 0x41494f;\n                fcn.0042c5a0(iVar2, iVar3);\n                *(*0x20 + -0x68) = 0x414965;\n                fcn.0041e500(*(*0x20 + -0x10));\n                return;\n            }\n            iVar3 = *(in_RAX + 0x28 + iVar2 * 8);\n            if (iVar3 != 0x5d41c0) {\n                *(*0x20 + -0x30) = iVar2;\n                *(*0x20 + -0x40) = iVar3;\n                *(*0x20 + -0x18) = *(iVar3 + 0x38);\n                *(*0x20 + -0x20) = *(iVar3 + 0x60);\n                *(*0x20 + -0x68) = 0x41484d;\n                iVar2 = fcn.0042c4c0();\n                uVar7 = *(*0x20 + -0x30) >> 1 & 0x7f;\n                if (0x43 < uVar7) goto code_r0x0041496f;\n                *(*0x20 + -0x38) = *(*0x20 + -0x18) - *(*0x20 + -0x20);\n                piVar1 = iVar2 + uVar7 * 8 + 0x48;\n                LOCK();\n                *piVar1 = *piVar1 + (*(*0x20 + -0x20) - *(*0x20 + -0x18));\n                *(*0x20 + -0x68) = 0x414896;\n                fcn.0042c5a0();\n                if (*(*(*0x20 + -0x40) + 0x58) == *(*0x20 + -0x44) + 1) {\n                    iVar2 = *(*0x20 + -0x28);\n                }\n                else {\n                    iVar2 = *(*0x20 + -0x28) - *(*0x20 + -0x38) * *(*(*0x20 + -0x40) + 0x68);\n                }\n                *(*0x20 + -0x28) = iVar2;\n                *(*0x20 + -0x68) = 0x4148e5;\n                fcn.00414e00(*(*0x20 + -0x30), *(*0x20 + -0x30) * 0xc0);\n                iVar2 = *(*0x20 + -0x30);\n                in_RAX = *(*0x20 + 8);\n                *(in_RAX + 0x28 + iVar2 * 8) = 0x5d41c0;\n                uVar6 = *(*0x20 + -0x28);\n                uVar4 = *(*0x20 + -0x10);\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x0041497d;\ncode_r0x0041496f:\n    *(*0x20 + -0x68) = 0x41497c;\n    in_RAX = fcn.0045ca40(0x44);\ncode_r0x0041497d:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x414987;\n    fcn.0045a360();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x004147c0;\n}\n",
        "token_count": 1238
    },
    "00414f00": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00414f00(void)\n\n{\n    uint8_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *in_RAX >> 1;\n            if (uVar1 < 0x44) {\n                *(*0x20 + -0x10) = *(uVar1 + 0x566760);\n                *(*0x20 + -0x18) = *(uVar1 * 2 + 0x567a20);\n                *(*0x20 + -0x48) = 0x414f5b;\n                iVar2 = fcn.00424100();\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                *(iVar2 + 0x70) =\n                     *(*0x20 + -0x18) * (*(*0x20 + -0x10) * 0x2000 * *(iVar2 + 0x5c) >> 0x20) + *(iVar2 + 0x18);\n                uVar1 = *(iVar2 + 0x18) + 0x800000000000;\n                uVar4 = uVar1 >> 0x2a;\n                if (uVar4 < 0x40) {\n                    uVar1 = uVar1 >> 0x16;\n                    if (*(*(uVar4 * 8 + 0x5a5f90) + (uVar1 & 0xfffff) * 8) == 0) {\n                        uVar1 = 0;\n                    }\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x48) = 0x41501c;\n                    fcn.00412700(uVar1 & 0xffffffff);\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x48) = 0x415045;\n                fcn.0045ca60(0x40);\n            }\n            *(*0x20 + -0x48) = 0x41504f;\n            in_RAX = fcn.0045ca40(0x44);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x41505a;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 672
    },
    "0041c620": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0041c620(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t arg3;\n    uint64_t uVar4;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t arg1_00;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000028;\n    \n    iStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    arg1_00 = 0;\n    while (arg1_00 < unaff_RBX) {\n        uVar1 = *(arg1 + (arg1_00 >> 6));\n        uVar4 = uVar1;\n        if (uVar1 == 0) {\n            arg1_00 = arg1_00 + 0x40;\n        }\n        else {\n            iVar5 = 0;\n            for (; (iVar5 < 8 && (arg1_00 < unaff_RBX)); arg1_00 = arg1_00 + 8) {\n                if (((uVar4 & 1) != 0) && (uVar2 = *(arg1_00 + in_RAX),  uVar2 != 0)) {\n                    arg3 = arg1_00;\n                    noname_1 = uVar4;\n                    iVar3 = fcn.00411920(arg1_00);\n                    if (iVar3 == 0) {\n                        if (((iStack0000000000000028 != 0) &&\n                            (*(iStack0000000000000028 + 0x100) < uVar2 || *(iStack0000000000000028 + 0x100) == uVar2))\n                           && (uVar2 <= *(iStack0000000000000028 + 0x108) && *(iStack0000000000000028 + 0x108) != uVar2)\n                           ) {\n                            fcn.00420760(0);\n                        }\n                    }\n                    else {\n                        fcn.0041ce00(arg1_00, noname_1, arg3);\n                    }\n                }\n                iVar5 = iVar5 + 1;\n                uVar4 = uVar4 >> 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 574
    },
    "0041e840": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint32_t fcn.0041e840(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar1 = *in_RAX;\n    if (unaff_EBX < 0) {\n        unaff_EBX = -1;\n    }\n    *(in_RAX + 2) = ((unaff_EBX << 0x16) >> 1) / 0x32;\n    *in_RAX = unaff_EBX;\n    fcn.0041e5c0(*(in_RAX + 4));\n    return iVar1;\n}\n",
        "token_count": 194
    },
    "0041ea60": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0041ea60(void)\n\n{\n    uint64_t in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    double dVar3;\n    double dVar4;\n    double dVar5;\n    \n    if (unaff_RBX == 0) {\n        uVar1 = *0x5a5f78;\n        *0x5a5f78 = 0xffffffffffffffff;\n        return uVar1;\n    }\n    if (in_RAX < 0) {\n        dVar3 = in_RAX & 1 | in_RAX >> 1;\n        dVar3 = dVar3 + dVar3;\n    }\n    else {\n        dVar3 = in_RAX;\n    }\n    if (unaff_RBX < 0) {\n        dVar4 = unaff_RBX & 1 | unaff_RBX >> 1;\n        dVar4 = dVar4 + dVar4;\n    }\n    else {\n        dVar4 = unaff_RBX;\n    }\n    if (*0x5d6fa0 < 0) {\n        dVar5 = *0x5d6fa0 & 1 | *0x5d6fa0 >> 1;\n        dVar5 = dVar5 + dVar5;\n    }\n    else {\n        dVar5 = *0x5d6fa0;\n    }\n    dVar5 = dVar5 * (dVar3 / dVar4);\n    if (*0x4f9a58 <= dVar5) {\n        uVar2 = dVar5 - *0x4f9a58 | 0x8000000000000000;\n    }\n    else {\n        uVar2 = dVar5;\n    }\n    uVar2 = -*0x5d3cd8 & (uVar2 + uVar2 / 10 + *0x5d3cd8) - 1;\n    if ((uVar2 < *0x5d5890 - *0x5d58a0) && (*0x5d3cd8 <= (*0x5d5890 - *0x5d58a0) - uVar2)) {\n        *0x5a5f78 = uVar2;\n        return 0x5a5f78;\n    }\n    uVar1 = *0x5a5f78;\n    *0x5a5f78 = 0xffffffffffffffff;\n    return uVar1;\n}\n",
        "token_count": 548
    },
    "00441620": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00441620(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    uchar *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    ulong unaff_RBP;\n    uint32_t uVar9;\n    int32_t unaff_EDI;\n    uchar *puVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x3b8 && *0x20 + -0x3b8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x438;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x410) = in_XMM15;\n            *(*0x20 + -0x448) = *0x20 + -8;\n            *(*0x20 + -0x440) = 0x44166f;\n            puVar5 = fcn.0045cba0();\n            unaff_RBP = *(*0x20 + -0x448);\n            uVar7 = unaff_EDI - arg1 >> 1;\n            puVar10 = *0x20 + -0x408;\n            if (uVar7 == 0x80) {\n                uVar6 = 0;\n                while (uVar9 = uVar6,  uVar9 < 0x80) {\n                    *(*0x20 + uVar6 * 8 + -0x410) = *(puVar5 + (uVar9 + arg1 & 0xff) * 8 + 0x198);\n                    uVar6 = uVar9 + 1;\n                }\n                LOCK();\n                if (arg1 != *(puVar5 + 400)) {\n                    return 0;\n                }\n                *(puVar5 + 400) = arg1 + 0x80;\n                *(*0x20 + uVar7 * 8 + -0x410) = unaff_RBX;\n                uVar6 = 0;\n                while( true ) {\n                    if (0x7f < uVar6) {\n                        *(*0x20 + -0x424) = 0x80;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x420) = *(*0x20 + -0x410);\n                        *(*0x20 + -0x418) = *(*0x20 + uVar7 * 8 + -0x410);\n                        *(*0x20 + -0x440) = 0x441739;\n                        fcn.0040a360();\n                        iVar1 = *(*0x20 + -0x418);\n                        uVar2 = *(*0x20 + -0x420);\n                        uVar3 = *0x580700;\n                        iVar4 = *0x580708;\n                        if ((iVar1 != 0) && (*(iVar1 + 0xa0) = 0,  uVar3 = uVar2,  iVar4 = iVar1,  *0x580708 != 0)) {\n                            *(*0x580708 + 0xa0) = uVar2;\n                            uVar3 = *0x580700;\n                        }\n                        *0x580708 = iVar4;\n                        *0x580700 = uVar3;\n                        *0x580710 = *0x580710 + *(*0x20 + -0x424) + 1;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x440) = 0x4417a6;\n                        fcn.0040a580();\n                        return 1;\n                    }\n                    iVar1 = uVar6 * 8;\n                    uVar6 = uVar6 + 1;\n                    if (0x80 < uVar6) break;\n                    *(*(*0x20 + iVar1 + -0x410) + 0xa0) = *(*0x20 + uVar6 * 8 + -0x410);\n                }\n                arg1._0_4_ = 0x81;\n                *(*0x20 + -0x440) = 0x4417c5;\n                fcn.0045ca40(0x81);\n                puVar10 = puVar5;\n            }\n            unaff_EDI = puVar10;\n            unaff_RBX = 0x1e;\n            *(*0x20 + -0x440) = 0x4417d6;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x1c) = unaff_EDI;\n        *(puVar8 + -8) = 0x4417ee;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1._0_4_ = *(puVar8 + 0x18);\n        unaff_EDI = *(puVar8 + 0x1c);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1245
    },
    "004689a0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint64_t fcn.004689a0(uint64_t arg1, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    char cVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uchar uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint64_t unaff_RBX;\n    uint8_t unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar11;\n    int64_t in_R10;\n    int64_t *in_R11;\n    int64_t unaff_R14;\n    uint64_t uVar12;\n    uint8_t uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_SIL;\n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (arg4 == 0) {\n        in_R10 = 0;\n    }\n    for (uVar11 = arg4 << (-(*in_R11 + -0x3c) & 0x3f) & -(-(*in_R11 + -0x3c) < 0x40);\n        (uVar11 != 0 && ((uVar11 >> 0x3c & 1) == 0)); uVar11 = uVar11 << 1) {\n        in_R10 = in_R10 + -1;\n    }\n    if (unaff_RDI < 0xf) {\n        uVar7 = unaff_RDI * 4;\n        uVar9 = -(-(uVar7 - 0x3c) < 0x40);\n        uVar5 = -(uVar7 - 0x3c);\n        uVar12 = uVar11 >> (uVar5 & 0x3f) & uVar9;\n        if (0x800000000000000 < (uVar11 << (uVar7 & 0x3f) & -(uVar7 < 0x40) & 0xfffffffffffffff | uVar12 & 1)) {\n            uVar12 = uVar12 + 1;\n        }\n        uVar11 = uVar12 << (uVar5 & 0x3f) & uVar9;\n        if ((uVar11 >> 0x3d & 1) != 0) {\n            uVar11 = uVar11 >> 1;\n            in_R10 = in_R10 + 1;\n        }\n    }\n    if (uStack0000000000000028 == 0x58) {\n        iVar8 = 0x4ca860;\n    }\n    else {\n        iVar8 = 0x4ca870;\n    }\n    if (noname_2 != '\\0') {\n        uVar12 = unaff_RBX + 1;\n        iVar3 = in_RAX;\n        if (arg1 < uVar12) {\n            arg1 = unaff_RBX;\n            iVar3 = fcn.00444c60(unaff_RBX);\n            uVar12 = in_RAX + 1;\n        }\n        *(iVar3 + unaff_RBX) = 0x2d;\n        in_RAX = iVar3;\n        unaff_RBX = uVar12;\n    }\n    uVar12 = unaff_RBX + 3;\n    iVar3 = in_RAX;\n    if (arg1 < uVar12) {\n        arg1 = unaff_RBX;\n        iVar3 = fcn.00444c60(unaff_RBX);\n        uVar12 = in_RAX + 3;\n    }\n    *(iVar3 + unaff_RBX) = 0x30;\n    *(iVar3 + 1 + unaff_RBX) = uStack0000000000000028;\n    *(iVar3 + 2 + unaff_RBX) = (uVar11 >> 0x3c & 1) + 0x30;\n    uVar11 = uVar11 << 4;\n    if ((unaff_RDI < 0) && (uVar11 != 0)) {\n        uVar9 = uVar12 + 1;\n        iVar4 = iVar3;\n        if (arg1 < uVar9) {\n            arg1 = uVar12;\n            iVar4 = fcn.00444c60(uVar12);\n            uVar9 = iVar3 + 1;\n        }\n        *(iVar4 + uVar12) = 0x2e;\n        iVar3 = iVar4;\n        uVar12 = uVar9;\n        uVar5 = uStack0000000000000028;\n        for (; uVar11 != 0; uVar11 = uVar11 << 4) {\n            uVar9 = uVar12 + 1;\n            uVar6 = *(iVar8 + (uVar11 >> 0x3c));\n            iVar4 = iVar3;\n            if (arg1 < uVar9) {\n                arg1 = uVar12;\n                iVar4 = fcn.00444c60(uVar12);\n                uVar9 = iVar3 + 1;\n                uVar5 = uStack0000000000000028;\n            }\n            *(iVar4 + uVar12) = uVar6;\n            iVar3 = iVar4;\n            uVar12 = uVar9;\n        }\n    }\n    else {\n        uVar5 = uStack0000000000000028;\n        if (0 < unaff_RDI) {\n            uVar9 = uVar12 + 1;\n            iVar4 = iVar3;\n            if (arg1 < uVar9) {\n                arg1 = uVar12;\n                iVar4 = fcn.00444c60(uVar12);\n                uVar9 = iVar3 + 1;\n            }\n            *(iVar4 + uVar12) = 0x2e;\n            iVar3 = iVar4;\n            uVar12 = uVar9;\n            uVar5 = uStack0000000000000028;\n            for (iVar10 = 0; iVar10 < unaff_RDI; iVar10 = iVar10 + 1) {\n                uVar9 = uVar12 + 1;\n                uVar6 = *(iVar8 + (uVar11 >> 0x3c));\n                iVar4 = iVar3;\n                if (arg1 < uVar9) {\n                    arg1 = uVar12;\n                    iVar4 = fcn.00444c60(uVar12);\n                    uVar9 = iVar3 + 1;\n                    uVar5 = uStack0000000000000028;\n                }\n                *(iVar4 + uVar12) = uVar6;\n                uVar11 = uVar11 << 4;\n                iVar3 = iVar4;\n                uVar12 = uVar9;\n            }\n        }\n    }\n    if (uVar5 == (uVar5 | 0x20)) {\n        uVar6 = 0x70;\n    }\n    else {\n        uVar6 = 0x50;\n    }\n    uVar11 = uVar12 + 1;\n    iVar8 = iVar3;\n    if (arg1 < uVar11) {\n        arg1 = uVar12;\n        iVar8 = fcn.00444c60(uVar12);\n        uVar11 = iVar3 + 1;\n    }\n    *(iVar8 + uVar12) = uVar6;\n    if (in_R10 < 0) {\n        in_R10 = -in_R10;\n        uVar6 = 0x2d;\n    }\n    else {\n        uVar6 = 0x2b;\n    }\n    uVar12 = uVar11 + 1;\n    iVar3 = iVar8;\n    if (arg1 < uVar12) {\n        arg1 = uVar11;\n        iVar3 = fcn.00444c60(uVar11);\n        uVar12 = iVar8 + 1;\n    }\n    *(iVar3 + uVar11) = uVar6;\n    cVar1 = in_R10;\n    cVar2 = in_R10 >> 0x3f;\n    if (in_R10 < 100) {\n        cVar2 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_R10) >> 0x40, 0) + in_R10 >> 3) - cVar2;\n        if (arg1 < uVar12 + 2) {\n            iVar3 = fcn.00444c60(uVar12);\n        }\n        *(iVar3 + uVar12) = cVar2 + '0';\n        *(iVar3 + 1 + uVar12) = cVar1 + cVar2 * -10 + '0';\n    }\n    else if (in_R10 < 1000) {\n        iVar8 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_R10) >> 0x40, 0) + in_R10;\n        iVar4 = iVar8 >> 3;\n        if (arg1 < uVar12 + 3) {\n            iVar3 = fcn.00444c60(uVar12);\n        }\n        *(iVar3 + uVar12) = (SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_R10) >> 0x40, 0) + in_R10 >> 6) + '0';\n        *(iVar3 + 1 + uVar12) =\n             iVar4 + ((SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar4) >> 0x40, 0) + iVar4 >> 3) - (iVar8 >> 0x3f))\n                     * -10 + '0';\n        *(iVar3 + 2 + uVar12) = cVar1 + iVar4 * -10 + '0';\n    }\n    else {\n        iVar8 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_R10) >> 0x40, 0) + in_R10 >> 6;\n        iVar4 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_R10) >> 0x40, 0) + in_R10;\n        iVar10 = iVar4 >> 3;\n        if (arg1 < uVar12 + 4) {\n            iVar3 = fcn.00444c60(uVar12);\n        }\n        *(iVar3 + uVar12) = in_R10 / 1000 + cVar2 + '0';\n        *(iVar3 + 1 + uVar12) = iVar8 + ((iVar8 & 0xff) / 10) * -10 + '0';\n        *(iVar3 + 2 + uVar12) =\n             iVar10 + ((SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar10) >> 0x40, 0) + iVar10 >> 3) -\n                      (iVar4 >> 0x3f)) * -10 + '0';\n        *(iVar3 + 3 + uVar12) = cVar1 + iVar10 * -10 + '0';\n    }\n    return iVar3;\n}\n",
        "token_count": 2527
    },
    "004696a0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.004696a0(ulong arg1, ulong noname_1, ulong noname_2, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RSI;\n    uint32_t unaff_EDI;\n    int64_t iVar5;\n    \n    if (0x13 < unaff_RSI) goto code_r0x00469969;\n    uVar3 = *(unaff_RSI * 8 + 0x567fc0);\n    iVar5 = 0;\n    while (uVar3 <= unaff_RBX) {\n        uVar4 = unaff_RBX % 10;\n        if (uVar4 < 6) {\n            if (uVar4 < 5) {\n                unaff_EDI = 0;\n            }\n            else if (arg1 == 0) {\n                unaff_EDI = unaff_RBX / 10 & 1;\n            }\n            else {\n                unaff_EDI = 1;\n            }\n        }\n        else {\n            unaff_EDI = 1;\n        }\n        iVar5 = iVar5 + 1;\n        arg1._0_1_ = arg1 | uVar4 != 0;\n        unaff_RBX = unaff_RBX / 10;\n        arg4 = uVar3;\n    }\n    if (unaff_EDI != '\\0') {\n        unaff_RBX = unaff_RBX + 1;\n    }\n    if (uVar3 <= unaff_RBX) {\n        unaff_RBX = unaff_RBX / 10;\n        iVar5 = iVar5 + 1;\n    }\n    in_RAX[3] = unaff_RSI;\n    while (99 < unaff_RBX) {\n        if (unaff_RBX >> 0x20 == 0) {\n            uVar3 = ((unaff_RBX & 0xffffffff) >> 1) / 0x32;\n            uVar4 = unaff_RBX + uVar3 * -100;\n        }\n        else {\n            uVar3 = (unaff_RBX >> 1) / 0x32;\n            uVar4 = unaff_RBX + uVar3 * -100;\n        }\n        if (199 < uVar4 * 2 + 1) goto code_r0x0046995f;\n        arg4 = in_RAX[1];\n        if (arg4 <= unaff_RSI - 1) goto code_r0x00469957;\n        *((unaff_RSI - 1) + *in_RAX) = *(uVar4 * 2 + 0x4d3fad);\n        if (199 < uVar4 << 1) goto code_r0x0046994d;\n        arg4 = in_RAX[1];\n        if (arg4 <= unaff_RSI - 2) goto code_r0x00469945;\n        *((unaff_RSI - 2) + *in_RAX) = *(uVar4 * 2 + 0x4d3fac);\n        unaff_RBX = uVar3;\n        unaff_RSI = unaff_RSI - 2;\n    }\n    if (unaff_RBX == 0) {\ncode_r0x004698a0:\n        if (unaff_RBX < 10) {\ncode_r0x004698e0:\n            while( true ) {\n                unaff_RBX = *in_RAX;\n                uVar3 = in_RAX[3];\n                if (in_RAX[1] <= uVar3 - 1) break;\n                if (*((uVar3 - 1) + unaff_RBX) != '0') {\n                    in_RAX[4] = iVar5 + uVar3;\n                    return;\n                }\n                in_RAX[3] = uVar3 - 1;\n                iVar5 = iVar5 + 1;\n            }\n            fcn.0045ca40(in_RAX[1]);\ncode_r0x00469918:\n            fcn.0045ca60(uVar3);\n        }\n        else if (unaff_RBX << 1 < 200) {\n            uVar3 = in_RAX[1];\n            arg4 = 0x4d3fac;\n            uVar1 = *(unaff_RBX * 2 + 0x4d3fac);\n            unaff_RBX = uVar1;\n            if (unaff_RSI - 1 < uVar3) {\n                *((unaff_RSI - 1) + *in_RAX) = uVar1;\n                goto code_r0x004698e0;\n            }\n            goto code_r0x00469918;\n        }\n        fcn.0045ca60(200);\n        uVar3 = unaff_RBX;\ncode_r0x00469932:\n        fcn.0045ca60(uVar3);\n    }\n    else if (unaff_RBX * 2 + 1 < 200) {\n        uVar1 = *(unaff_RBX * 2 + 0x4d3fad);\n        arg4 = uVar1;\n        uVar3 = in_RAX[1];\n        if (unaff_RSI - 1 < in_RAX[1]) {\n            *((unaff_RSI - 1) + *in_RAX) = uVar1;\n            unaff_RSI = unaff_RSI - 1;\n            goto code_r0x004698a0;\n        }\n        goto code_r0x00469932;\n    }\n    fcn.0045ca60(200);\ncode_r0x00469945:\n    fcn.0045ca60(arg4);\ncode_r0x0046994d:\n    fcn.0045ca60(200);\ncode_r0x00469957:\n    fcn.0045ca60(arg4);\ncode_r0x0046995f:\n    fcn.0045ca60(200);\ncode_r0x00469969:\n    fcn.0045ca40(0x14);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1365
    },
    "0046a1a0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0046a1a0(uint64_t arg1, ulong noname_1, uint64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint64_t *in_RAX;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t unaff_RBX;\n    char unaff_SIL;\n    uint32_t uVar5;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint8_t uVar10;\n    int32_t iVar11;\n    \n    if (unaff_RDI == 0) {\n        in_RAX[4] = arg4 + 1;\n        return;\n    }\n    iVar3 = 0;\n    uVar8 = 0;\n    while( true ) {\n        if (unaff_RDI == 0) break;\n        uVar4 = unaff_RBX + 9;\n        unaff_RBX = uVar4 / 10;\n        uVar7 = arg1 & 0xffffffff;\n        uVar2 = arg1 + (uVar7 / 10) * -10;\n        uVar6 = unaff_RDI & 0xffffffff;\n        uVar4 = uVar4 / 10;\n        uVar9 = uVar6 / 10;\n        if (uVar9 < uVar4) break;\n        uVar5 = uVar7 / 10 + 1;\n        arg1 = uVar7 / 10;\n        if ((uVar4 == uVar5) && (uVar4 = uVar7 / 10,  uVar4 <= uVar9 && uVar6 / 10 != uVar4)) {\n            uVar2 = 0;\n            arg1 = uVar5;\n            arg3 = 0;\n        }\n        unaff_SIL = unaff_SIL != '\\0' && uVar8 == 0;\n        iVar3 = iVar3 + 1;\n        unaff_RDI = uVar6 / 10;\n        uVar8 = uVar2;\n    }\n    arg1 = arg1 & 0xffffffff;\n    if (iVar3 < 1) {\n        uVar10 = arg3;\n        goto code_r0x0046a280;\n    }\n    if (uVar8 < 6) {\n        if (uVar8 == 5) {\n            if (unaff_SIL == '\\0') goto code_r0x0046a268;\n            if (unaff_SIL != '\\0') {\n                uVar10 = arg1 & 1;\n                goto code_r0x0046a280;\n            }\n        }\n        uVar10 = 0;\n    }\n    else {\ncode_r0x0046a268:\n        uVar10 = 1;\n    }\ncode_r0x0046a280:\n    if ((arg1 < unaff_RDI) && (uVar10 != 0)) {\n        arg1 = arg1 + 1;\n    }\n    for (uVar7 = arg4 - iVar3; in_RAX[3] < uVar7; uVar7 = uVar7 - 2) {\n        iVar11 = arg1;\n        arg1 = (arg1 >> 1) / 0x32;\n        iVar11 = iVar11 + arg1 * -100;\n        uVar6 = iVar11 * 2 + 1;\n        if (199 < uVar6) goto code_r0x0046a388;\n        arg3 = in_RAX[1];\n        if (arg3 <= uVar7) goto code_r0x0046a37d;\n        *(*in_RAX + uVar7) = *(uVar6 + 0x4d3fac);\n        uVar6 = iVar11 * 2;\n        if (199 < uVar6) goto code_r0x0046a370;\n        unaff_RDI = in_RAX[1];\n        arg3 = *in_RAX;\n        if (unaff_RDI <= uVar7 - 1) goto code_r0x0046a365;\n        *((uVar7 - 1) + arg3) = *(uVar6 + 0x4d3fac);\n    }\n    if (uVar7 == in_RAX[3]) {\n        if (in_RAX[1] <= uVar7) {\n            fcn.0045ca40(in_RAX[1]);\ncode_r0x0046a365:\n            fcn.0045ca40(unaff_RDI);\ncode_r0x0046a370:\n            fcn.0045ca40(200);\ncode_r0x0046a37d:\n            fcn.0045ca40(arg3);\ncode_r0x0046a388:\n            fcn.0045ca40(200);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        *(*in_RAX + uVar7) = arg1 + '0';\n    }\n    in_RAX[3] = (arg4 - iVar3) + 1;\n    in_RAX[4] = arg4 + 1;\n    return;\n}\n",
        "token_count": 1148
    },
    "0046a6a0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0046a6a0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uchar *in_RAX;\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uchar *unaff_RDI;\n    uint64_t uVar7;\n    char cVar8;\n    uint64_t in_R8;\n    uchar uVar9;\n    uint64_t in_R9;\n    uchar uVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uchar *unaff_R13;\n    int64_t unaff_R14;\n    uchar unaff_R15B;\n    bool bVar13;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar9 = in_R9;\n        cVar8 = in_R8;\n        puVar3 = *0x20 + -0x18;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= puVar3 && puVar3 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RSI + -2 < 0x23) {\n                *(*0x20 + -0x51) = in_XMM15;\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x40) = in_XMM15;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x20) = in_XMM15;\n                if (cVar8 != '\\0') {\n                    unaff_RDI = -unaff_RDI;\n                }\n                if (unaff_RSI != 0xa) {\n                    if ((unaff_RSI & unaff_RSI + -1) != 0) {\n                        puVar4 = 0x41;\n                        while (unaff_RSI <= unaff_RDI) {\n                            puVar5 = unaff_RDI / unaff_RSI;\n                            uVar7 = unaff_RDI - puVar5 * unaff_RSI;\n                            puVar11 = in_RAX;\n                            if (0x23 < uVar7) goto code_r0x0046a910;\n                            uVar1 = *(uVar7 + 0x4d13ec);\n                            puVar3 = uVar1;\n                            if (0x40 < puVar4 + -1) goto code_r0x0046a906;\n                            (*0x20 + -0x52)[puVar4] = uVar1;\n                            puVar4 = puVar4 + -1;\n                            unaff_RDI = puVar5;\n                        }\n                        puVar11 = puVar4 + -1;\n                        puVar12 = unaff_RDI[0x4d13ec];\n                        puVar5 = puVar4;\n                        if (0x40 < puVar11) goto code_r0x0046a8f9;\n                        (*0x20 + -0x52)[puVar4] = unaff_RDI[0x4d13ec];\n                        bVar13 = cVar8 == '\\0';\n                        goto code_r0x0046a7b2;\n                    }\n                    iVar2 = 0;\n                    if (unaff_RSI != NULL) {\n                        for (; (unaff_RSI >> iVar2 & 1) == 0; iVar2 = iVar2 + 1) {\n                        }\n                    }\n                    puVar5 = iVar2 & 7;\n                    puVar11 = unaff_RSI + -1;\n                    puVar12 = 0x41;\n                    goto code_r0x0046a934;\n                }\n                puVar4 = 0x41;\n                puVar11 = unaff_RDI;\ncode_r0x0046a9c0:\n                uVar9 = in_R9;\n                cVar8 = in_R8;\n                if (puVar11 < 0x64) {\n                    unaff_RDI = puVar11;\n                    if (puVar11 * 2 + 1U < 200) {\n                        puVar3 = puVar4 + -1;\n                        puVar12 = 0x4d3fac;\n                        if (puVar3 < 0x41) {\n                            (*0x20 + -0x52)[puVar4] = *(puVar11 * 2 + 0x4d3fad);\n                            if (puVar11 < 0xa) {\ncode_r0x0046aaeb:\n                                bVar13 = cVar8 == '\\0';\n                                puVar11 = puVar3;\ncode_r0x0046a7b2:\n                                do {\n                                    puVar5 = puVar11;\n                                    if (bVar13) {\ncode_r0x0046a7d5:\n                                        if (in_R9 == '\\0') {\n                                            if (puVar5 < 0x42) {\n                                                *(*0x20 + -0xa0) = 0x46a8b5;\n                                                fcn.004489c0(-(puVar5 + -0x41));\n                                                return 0;\n                                            }\n                                            *(*0x20 + -0xa0) = 0x46a8df;\n                                            fcn.0045cb00(0x41);\n                                        }\n                                        else if (puVar5 < 0x42) {\n                                            uVar7 = (unaff_RBX - puVar5) + 0x41;\n                                            *(*0x20 + -0x60) = uVar7;\n                                            puVar3 = puVar5 + -0x41;\n                                            if (arg1 < uVar7) {\n                                                *(*0x20 + -0x68) = puVar3;\n                                                *(*0x20 + -0x10) = *0x20 + ((puVar5 & puVar3 >> 0x3f) - 0x51);\n                                                *(*0x20 + -0x70) = unaff_RBX;\n                                                *(*0x20 + -0xa0) = 0x46a838;\n                                                in_RAX = fcn.00444c60(unaff_RBX);\n                                                puVar3 = *(*0x20 + -0x68);\n                                                arg1 = unaff_RBX;\n                                            }\n                                            *(*0x20 + -0x68) = arg1;\n                                            *(*0x20 + -0x10) = in_RAX;\n                                            *(*0x20 + -0xa0) = 0x46a869;\n                                            fcn.0045d380(-puVar3);\n                                            return *(*0x20 + -0x10);\n                                        }\n                                        *(*0x20 + -0xa0) = 0x46a8ec;\n                                        fcn.0045cb00(0x41);\n                                    }\n                                    else {\n                                        puVar5 = puVar11 + -1;\n                                        if (puVar5 < 0x41) {\n                                            (*0x20 + -0x52)[puVar11] = 0x2d;\n                                            goto code_r0x0046a7d5;\n                                        }\n                                    }\n                                    *(*0x20 + -0xa0) = 0x46a8f9;\n                                    fcn.0045ca40(0x41);\ncode_r0x0046a8f9:\n                                    puVar4 = puVar12;\n                                    *(*0x20 + -0xa0) = 0x46a906;\n                                    fcn.0045ca40(0x41);\n                                    in_RAX = puVar11;\ncode_r0x0046a906:\n                                    *(*0x20 + -0xa0) = 0x46a910;\n                                    fcn.0045ca40(0x41);\n                                    puVar11 = in_RAX;\ncode_r0x0046a910:\n                                    arg1 = 0x24;\n                                    *(*0x20 + -0xa0) = 0x46a91d;\n                                    in_RAX = fcn.0045ca60(0x24);\n                                    unaff_RDI = puVar3;\n                                    while( true ) {\n                                        puVar12 = unaff_R13;\n                                        (*0x20 + -0x52)[puVar4] = unaff_R15B;\n                                        unaff_RDI = unaff_RDI >> (puVar5 & 0x3f);\n                                        puVar3 = unaff_RDI;\n                                        unaff_R13 = puVar12;\ncode_r0x0046a934:\n                                        if (unaff_RDI < unaff_RSI) break;\n                                        puVar4 = puVar12;\n                                        if (0x23 < (unaff_RDI & puVar11)) goto code_r0x0046a99f;\n                                        unaff_R13 = puVar12 + -1;\n                                        unaff_R15B = *((unaff_RDI & puVar11) + 0x4d13ec);\n                                        if (0x40 < unaff_R13) goto code_r0x0046a992;\n                                    }\n                                    puVar5 = puVar12 + -1;\n                                    puVar11 = unaff_RDI[0x4d13ec];\n                                    if (0x40 < puVar5) goto code_r0x0046a985;\n                                    (*0x20 + -0x52)[puVar12] = unaff_RDI[0x4d13ec];\n                                    bVar13 = in_R8 == '\\0';\n                                    puVar11 = puVar5;\n                                } while( true );\n                            }\n                            unaff_RDI = puVar11 << 1;\n                            if (unaff_RDI < 0xc8) {\n                                puVar3 = puVar4 + -2;\n                                if (puVar3 < 0x41) {\n                                    (*0x20 + -0x53)[puVar4] = *(puVar11 * 2 + 0x4d3fac);\n                                    goto code_r0x0046aaeb;\n                                }\n                                *(*0x20 + -0xa0) = 0x46ab05;\n                                fcn.0045ca40(0x41);\n                            }\n                            *(*0x20 + -0xa0) = 0x46ab12;\n                            fcn.0045ca60(200);\n                        }\n                        *(*0x20 + -0xa0) = 0x46ab1f;\n                        fcn.0045ca40(0x41);\n                    }\n                    *(*0x20 + -0xa0) = 0x46ab2c;\n                    fcn.0045ca60(200);\n                    in_RAX = unaff_RSI;\n                }\n                else {\n                    unaff_RDI = puVar11 >> 1;\n                    puVar5 = unaff_RDI / 0x32;\n                    puVar11 = puVar11 + puVar5 * -100;\n                    if (199 < puVar11 * 2 + 1U) goto code_r0x0046ab4f;\n                    uVar1 = *(puVar11 * 2 + 0x4d3fad);\n                    unaff_R13 = uVar1;\n                    if (0x40 < puVar4 + -1) goto code_r0x0046ab45;\n                    (*0x20 + -0x52)[puVar4] = uVar1;\n                    if (199 < puVar11 * 2) goto code_r0x0046ab36;\n                    puVar3 = puVar4 + -2;\n                    uVar10 = *(puVar11 * 2 + 0x4d3fac);\n                    if (puVar3 < 0x41) goto code_r0x0046a9ac;\n                }\n                *(*0x20 + -0xa0) = 0x46ab36;\n                fcn.0045ca40(0x41);\ncode_r0x0046ab36:\n                *(*0x20 + -0xa0) = 0x46ab45;\n                fcn.0045ca60(200);\ncode_r0x0046ab45:\n                *(*0x20 + -0xa0) = 0x46ab4f;\n                fcn.0045ca40(0x41);\ncode_r0x0046ab4f:\n                arg1 = 200;\n                *(*0x20 + -0xa0) = 0x46ab59;\n                fcn.0045ca60(200);\n                unaff_RSI = in_RAX;\n            }\n            unaff_RBX = 0x4f9f28;\n            *(*0x20 + -0xa0) = 0x46ab6c;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        puVar6[0x30] = cVar8;\n        puVar6[0x31] = uVar9;\n        *(puVar6 + -8) = 0x46ab95;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        in_R8 = puVar6[0x30];\n        in_R9 = puVar6[0x31];\n        *0x20 = puVar6;\n    } while( true );\ncode_r0x0046a985:\n    *(*0x20 + -0xa0) = 0x46a992;\n    fcn.0045ca40(0x41);\ncode_r0x0046a992:\n    *(*0x20 + -0xa0) = 0x46a99f;\n    fcn.0045ca40(0x41);\n    puVar4 = puVar12;\ncode_r0x0046a99f:\n    uVar10 = SUB81(puVar11, 0);\n    arg1 = 0x24;\n    *(*0x20 + -0xa0) = 0x46a9ac;\n    puVar3 = fcn.0045ca60(0x24);\n    in_RAX = unaff_RSI;\ncode_r0x0046a9ac:\n    (*0x20 + -0x53)[puVar4] = uVar10;\n    puVar4 = puVar3;\n    unaff_RSI = in_RAX;\n    puVar11 = puVar5;\n    goto code_r0x0046a9c0;\n}\n",
        "token_count": 3339
    },
    "00472680": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00472680(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    ulong uVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_XMM15;\n            *(*0x20 + -0x38) = *0x20 + -8;\n            *(*0x20 + -0x30) = 0x4726b6;\n            iVar2 = fcn.0045cceb();\n            unaff_RBP = *(*0x20 + -0x38);\n            if ((-1 < unaff_RBX) &&\n               (iVar4 = *(iVar2 + 0x38),  *(iVar2 + 0x40) != unaff_RBX && unaff_RBX <= *(iVar2 + 0x40))) {\n                *(*0x20 + 0x70) = iVar2;\n                *(*0x20 + 0x78) = unaff_RBX;\n                iVar2 = *(iVar4 + 8 + unaff_RBX * 0x18);\n                if (iVar2 == 0) {\n                    uVar7 = 0;\n                    iVar2 = 0;\n                }\n                else {\n                    uVar7 = 0x4fa5c0;\n                }\n                *(*0x20 + -0x10) = iVar4;\n                *(*0x20 + -0x18) = unaff_RBX * 3;\n                *(*0x20 + 0x28) = uVar7;\n                *(*0x20 + 0x30) = iVar2;\n                *(*0x20 + -0x30) = 0x47271f;\n                uVar7 = fcn.004719c0(iVar4, unaff_RBX * 3, param_3, param_4);\n                *(*0x20 + 8) = uVar7;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar2 = *(*0x20 + -0x18);\n                iVar4 = *(*0x20 + -0x10);\n                *(*0x20 + 0x68) = (*(iVar4 + 0x10 + iVar2 * 8) & 1) != 0;\n                uVar1 = **(iVar4 + iVar2 * 8);\n                uVar5 = uVar1;\n                if ((uVar1 & 1) == 0) {\n                    *(*0x20 + -0x30) = 0x472765;\n                    uVar7 = fcn.004719c0(*(*0x20 + 0x70), iVar4, param_3, param_4);\n                    *(*0x20 + 0x18) = uVar7;\n                    *(*0x20 + 0x20) = uVar5;\n                    iVar2 = *(*0x20 + -0x18);\n                    iVar4 = *(*0x20 + -0x10);\n                }\n                *(*0x20 + -0x30) = 0x472785;\n                uVar7 = fcn.00471a60(iVar2, iVar4, param_3, param_4);\n                if (uVar5 != 0) {\n                    *(*0x20 + 0x38) = uVar7;\n                    *(*0x20 + 0x40) = uVar5;\n                }\n                *(*0x20 + 0x48) = *(*(*0x20 + -0x10) + 0x10 + *(*0x20 + -0x18) * 8) >> 1;\n                *(*0x20 + -0x30) = 0x4727b7;\n                puVar3 = fcn.0040c440();\n                *puVar3 = *(*0x20 + 0x78);\n                *(*0x20 + 0x50) = puVar3;\n                *(*0x20 + 0x58) = 1;\n                *(*0x20 + 0x60) = 1;\n                return;\n            }\n            unaff_RBX = 0x4f9c88;\n            *(*0x20 + -0x30) = 0x4727fc;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar6 + 0x70) = in_RAX;\n        *(puVar6 + 0x78) = unaff_RBX;\n        *(puVar6 + -8) = 0x47280c;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 0x70);\n        unaff_RBX = *(puVar6 + 0x78);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1196
    },
    "00474c20": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00474c20(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar1 = arg1 & 0x1f;\n            if (uVar1 == 0x19) {\n                if (unaff_RDI <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != unaff_RDI) {\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x474cd2;\n                fcn.00432920(0x19, arg1);\n            }\n            *(*0x20 + -0x10) = uVar1;\n            *(*0x20 + -0x28) = 0x474ce5;\n            unaff_RBX = fcn.0040c440();\n            unaff_RBX[1] = 0x13;\n            *unaff_RBX = 0x4cc0d5;\n            arg1 = *(*0x20 + -0x10);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x28) = 0x474d0f;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x474d29;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 605
    },
    "004ab2c0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.004ab2c0(void)\n\n{\n    uchar uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong uVar7;\n    int64_t iVar8;\n    uint64_t arg1;\n    int64_t unaff_R14;\n    \n    do {\n        uVar5 = unaff_RBX;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0xa2) = 0;\n            *(*0x20 + -0xa0) = 0;\n            *(*0x20 + -0xa2) = 0x6170796265646974;\n            *(*0x20 + -0x9a) = 0x7373;\n            *(*0x20 + -0x100) = 0x4ab32e;\n            iVar2 = fcn.00448c40(unaff_RBX);\n            *(*0x20 + -0x10) = iVar2;\n            *(*0x20 + -0xb8) = unaff_RBX;\n            uVar5 = *(*0x20 + 0x10);\n            uVar4 = 0;\n            uVar7 = 0;\n            uVar3 = 0;\n            iVar8 = 0;\n            while( true ) {\n                if (uVar5 >> 1 <= uVar4) {\n                    return uVar3;\n                }\n                arg1 = uVar4 * 2 + 2;\n                uVar5 = uVar4;\n                if (unaff_RBX < arg1) goto code_r0x004ab49a;\n                uVar5 = uVar4 * 2;\n                if (arg1 < uVar5) goto code_r0x004ab48f;\n                *(*0x20 + -200) = uVar7;\n                *(*0x20 + -0x18) = uVar3;\n                *(*0x20 + -0xb0) = uVar4;\n                *(*0x20 + -0xc0) = iVar8;\n                uVar5 = iVar2 + (uVar4 << 3 & -(unaff_RBX + uVar4 * -2) >> 0x3f);\n                *(*0x20 + -0x100) = 0x4ab44c;\n                fcn.00448e00(2);\n                *(*0x20 + -0x100) = 0x4ab458;\n                fcn.00465fe0(0x10);\n                if (9 < *(*0x20 + -0xc0)) break;\n                uVar1 = *(*0x20 + (*(*0x20 + -0xc0) - 0xa2));\n                *(*0x20 + -0x100) = 0x4ab365;\n                fcn.00448fe0(uVar1);\n                uVar7 = *(*0x20 + -0x18);\n                *(*0x20 + -0x100) = 0x4ab37f;\n                uVar3 = fcn.00448620(*(*0x20 + -200));\n                uVar4 = *(*0x20 + -0xb0) + 1;\n                iVar2 = *(*0x20 + -0xc0);\n                iVar8 = iVar2 + (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar2 + 1) >> 0x40, 0) + iVar2 + 1 >> 3)\n                                * -10 + 1;\n                uVar5 = *(*0x20 + 0x10);\n                iVar2 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + -0xb8);\n            }\n            *(*0x20 + -0x100) = 0x4ab48f;\n            fcn.0045ca40(10);\ncode_r0x004ab48f:\n            unaff_RBX = arg1;\n            *(*0x20 + -0x100) = 0x4ab49a;\n            arg1 = unaff_RBX;\n            fcn.0045cb00(unaff_RBX);\ncode_r0x004ab49a:\n            *(*0x20 + -0x100) = 0x4ab4a5;\n            in_RAX = fcn.0045cac0(arg1, unaff_RBX);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = uVar5;\n        *(puVar6 + -8) = 0x4ab4b5;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1220
    },
    "00411b20": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.00411b20(ulong arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t iVar5;\n    \n    uVar4 = (unaff_RBX & 0xffffffff) + unaff_RSI >> 2;\n    uVar2 = uVar4 + in_RAX;\n    if (uVar2 <= unaff_RDI) {\n        return in_RAX + uVar4;\n    }\n    uVar2 = (uVar2 - unaff_RDI) - 1;\n    uVar1 = arg1 + (uVar2 >> 0x11) + 1;\n    uVar4 = uVar1 >> 0x14;\n    if (uVar4 < 0x40) {\n        iVar5 = *(uVar4 * 8 + 0x5a5f90);\n        if ((iVar5 == 0) || (iVar5 = *(iVar5 + (uVar1 & 0xfffff) * 8),  iVar5 == 0)) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar2 & 0x1ffff) + iVar5;\n        }\n        return iVar5;\n    }\n    fcn.0045ca60(0x40);\n    pcVar3 = swi(3);\n    iVar5 = (*pcVar3)();\n    return iVar5;\n}\n",
        "token_count": 360
    },
    "00412700": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00412700(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            uVar2 = (*(unaff_RSI + 0x20) << 0xd) >> 3;\n            if (unaff_EBX == 0) {\n                *(*0x20 + -0x28) = *(unaff_RSI + 0x68);\n                while (uVar2 != 0) {\n                    *(*0x20 + -0x38) = uVar2;\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x68) = 0x41278e;\n                    uVar1 = fcn.00411c00(arg1);\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x3c) = unaff_EBX;\n                    *(*0x20 + -0x40) = arg1;\n                    *(*0x20 + -0x20) = unaff_RDI;\n                    *(*0x20 + -0x30) = uVar2;\n                    if (*(*0x20 + -0x28) == 8) {\n                        puVar3 = *(*0x20 + -0x10);\n                        for (uVar4 = 0; uVar4 < uVar2 >> 2; uVar4 = uVar4 + 1) {\n                            *puVar3 = 0xff;\n                            puVar3 = puVar3 + 1;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x4127cf;\n                        fcn.0045d0c0();\n                    }\n                    in_RAX = *(*0x20 + -0x18);\n                    arg1 = *(*0x20 + -0x40);\n                    unaff_EBX = *(*0x20 + -0x3c);\n                    unaff_RDI = *(*0x20 + -0x20);\n                    uVar2 = *(*0x20 + -0x38) - *(*0x20 + -0x30);\n                }\n                return;\n            }\n            *(*0x20 + -0x68) = 0x412805;\n            fcn.004330a0();\n            unaff_EBX = 0x1a;\n            *(*0x20 + -0x68) = 0x412816;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x412833;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 927
    },
    "00454180": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00454180(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 != 0) && (in_RAX != iVar1)) {\n        fcn.00434840();\n        fcn.00434aa0();\n        fcn.004348c0();\n        fcn.00453f40();\n        fcn.004532a0(0);\n    }\n    fcn.004365c0();\n    return;\n}\n",
        "token_count": 185
    },
    "004784a0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nulong fcn.004784a0(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 0x140) == -1) {\n                arg1_01 = ((arg1 * 6 >> 0x3f) >> 0x3d) + arg1 * 6 >> 3;\n            }\n            else {\n                arg1_01 = (arg1 >> 2) * 3;\n            }\n            *(*0x20 + -0x38) = arg1_01;\n            *(*0x20 + -0x78) = 0x478511;\n            uVar1 = fcn.00444b80(arg1_01);\n            *(*0x20 + -0x10) = uVar1;\n            uVar1 = *(*0x20 + 0x10);\n            arg1_00 = *(*0x20 + 0x18);\n            *(*0x20 + -0x78) = 0x478530;\n            fcn.00448b60(arg1_00);\n            unaff_RBX = *(*0x20 + -0x10);\n            *(*0x20 + -0x78) = 0x478550;\n            arg1 = fcn.004785c0(*(*0x20 + -0x38), arg1_01, uVar1, arg1_00);\n            if (arg1 <= *(*0x20 + -0x38)) {\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x78) = 0x47857d;\n            in_RAX = fcn.0045cac0(arg1, *(*0x20 + -0x38));\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x478592;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 702
    },
    "00450560": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450560(void)\n\n{\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n        in_RAX = in_RAX & 0xff;\n    }\n    if ((in_RAX & 0x80) != 0) {\n        fcn.0044f180(0);\n    }\n    fcn.0044f180(0);\n    return;\n}\n",
        "token_count": 134
    },
    "00455460": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.00455460(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar4 = 0;\n    iVar5 = 0;\n    while( true ) {\n        uVar1 = *(iVar4 + in_RAX + 1);\n        uVar3 = iVar4 * 7;\n        if (uVar3 < 0) {\n            fcn.004316c0();\n            pcVar2 = swi(3);\n            iVar4 = (*pcVar2)();\n            return iVar4;\n        }\n        iVar5 = iVar5 + ((uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((uVar1 & 0x80) == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    if (iVar5 == 0) {\n        return 0;\n    }\n    return iVar4 + in_RAX + 2;\n}\n",
        "token_count": 292
    },
    "00455520": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint8_t * fcn.00455520(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint8_t *in_RAX;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if ((*in_RAX & 2) == 0) {\n        return NULL;\n    }\n    iVar5 = 0;\n    iVar7 = 0;\n    while( true ) {\n        uVar3 = iVar5 * 7;\n        if (uVar3 < 0) goto code_r0x0045560f;\n        iVar7 = iVar7 + ((in_RAX[iVar5 + 1] & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((in_RAX[iVar5 + 1] & 0x80) == 0) break;\n        iVar5 = iVar5 + 1;\n    }\n    iVar6 = 0;\n    while( true ) {\n        iVar1 = iVar7 + iVar5 + iVar6;\n        if (iVar6 * 7 < 0) break;\n        if ((in_RAX[iVar1 + 2] & 0x80) == 0) {\n            return in_RAX + iVar1 + 3;\n        }\n        iVar6 = iVar6 + 1;\n    }\n    fcn.004316c0();\ncode_r0x0045560f:\n    fcn.004316c0();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 395
    },
    "00455620": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong fcn.00455620(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint8_t *noname_0_00;\n    uint8_t *noname_1_00;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t noname_2_00;\n    uint64_t arg4_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == NULL) || ((*in_RAX & 4) == 0)) {\n                return 0;\n            }\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                uVar1 = iVar3 * 7;\n                if (uVar1 < 0) goto code_r0x00455754;\n                arg4_00 = -(uVar1 < 0x40);\n                iVar5 = ((in_RAX[iVar3 + 1] & 0x7f) << (uVar1 & 0x3f) & arg4_00) + iVar5;\n                if ((in_RAX[iVar3 + 1] & 0x80) == 0) break;\n                iVar3 = iVar3 + 1;\n            }\n            noname_2_00 = iVar5 + iVar3;\n            iVar3 = iVar5 + iVar3 + 2;\n            if ((*in_RAX & 2) == 0) goto code_r0x004556c2;\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                arg4_00 = iVar3 * 7;\n                if (arg4_00 < 0) break;\n                iVar5 = iVar5 + ((in_RAX[noname_2_00 + iVar3 + 2] & 0x7f) << (arg4_00 & 0x3f) & -(arg4_00 < 0x40));\n                if ((in_RAX[noname_2_00 + iVar3 + 2] & 0x80) == 0) {\n                    iVar3 = iVar5 + iVar3 + noname_2_00 + 3;\ncode_r0x004556c2:\n                    *(*0x20 + -0xc) = 0;\n                    noname_0_00 = in_RAX + iVar3;\n                    noname_1_00 = *0x20 + -0xc;\n                    if (noname_1_00 != noname_0_00) {\n                        noname_0_00 = *(in_RAX + iVar3);\n                        *(*0x20 + -0xc) = *(in_RAX + iVar3);\n                    }\n                    *(*0x20 + -0x28) = 0x4556ec;\n                    fcn.00454d00();\n                    *(*0x20 + -0x28) = 0x4556f1;\n                    uVar2 = fcn.00455460(noname_0_00, noname_1_00, noname_2_00, arg4_00);\n                    return uVar2;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x455754;\n            fcn.004316c0();\ncode_r0x00455754:\n            *(*0x20 + -0x28) = 0x455759;\n            in_RAX = fcn.004316c0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x455765;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 962
    },
    "004621e0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.004621e0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (iVar2 * 7 < 0) {\n            fcn.004316c0();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n        if ((*(iVar2 + in_RAX + 1) & 0x80) == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + in_RAX + 2;\n}\n",
        "token_count": 188
    },
    "004719c0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.004719c0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (iVar2 * 7 < 0) {\n            fcn.004316c0();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n        if ((*(iVar2 + in_RAX + 1) & 0x80) == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + in_RAX + 2;\n}\n",
        "token_count": 188
    },
    "00471a60": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint8_t * fcn.00471a60(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint8_t *in_RAX;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if ((*in_RAX & 2) == 0) {\n        return NULL;\n    }\n    iVar5 = 0;\n    iVar7 = 0;\n    while( true ) {\n        uVar3 = iVar5 * 7;\n        if (uVar3 < 0) goto code_r0x00471b4f;\n        iVar7 = iVar7 + ((in_RAX[iVar5 + 1] & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((in_RAX[iVar5 + 1] & 0x80) == 0) break;\n        iVar5 = iVar5 + 1;\n    }\n    iVar6 = 0;\n    while( true ) {\n        iVar1 = iVar7 + iVar5 + iVar6;\n        if (iVar6 * 7 < 0) break;\n        if ((in_RAX[iVar1 + 2] & 0x80) == 0) {\n            return in_RAX + iVar1 + 3;\n        }\n        iVar6 = iVar6 + 1;\n    }\n    fcn.004316c0();\ncode_r0x00471b4f:\n    fcn.004316c0();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 398
    },
    "00471b60": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar * fcn.00471b60(ulong arg1, uint64_t arg2)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    int64_t arg1_01;\n    uint8_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uchar *puVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    bool bVar11;\n    \n    do {\n        iVar2 = in_RAX;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RBX < 0x20000000) {\n                if (unaff_RDI < 0x20000000) {\n                    *(*0x20 + -0x22) = 0;\n                    *(*0x20 + -0x20) = 0;\n                    *(*0x20 + -0x2c) = 0;\n                    *(*0x20 + -0x2a) = 0;\n                    uVar7 = 0;\n                    uVar8 = unaff_RBX;\n                    while( true ) {\n                        uVar4 = uVar8 & 0x7f;\n                        uVar8 = uVar8 >> 7;\n                        if (uVar8 == 0) break;\n                        if (9 < uVar7) goto code_r0x00471f06;\n                        *(*0x20 + (uVar7 - 0x22)) = uVar4 | 0x80;\n                        uVar7 = uVar7 + 1;\n                    }\n                    if (uVar7 < 10) {\n                        *(*0x20 + (uVar7 - 0x22)) = uVar4;\n                        uVar8 = 0;\n                        iVar2 = unaff_RDI;\n                        while( true ) {\n                            uVar4 = iVar2 & 0x7f;\n                            iVar2 = iVar2 >> 7;\n                            if (iVar2 == 0) break;\n                            if (9 < uVar8) goto code_r0x00471eec;\n                            *(*0x20 + (uVar8 - 0x2c)) = uVar4 | 0x80;\n                            uVar8 = uVar8 + 1;\n                        }\n                        if (uVar8 < 10) {\n                            *(*0x20 + -0x38) = unaff_RBX;\n                            *(*0x20 + -0x40) = unaff_RDI;\n                            *(*0x20 + 8) = in_RAX;\n                            *(*0x20 + 0x18) = arg1;\n                            *(*0x20 + -0x60) = uVar8;\n                            *(*0x20 + -0x58) = uVar7;\n                            *(*0x20 + (uVar8 - 0x2c)) = uVar4;\n                            iVar2 = uVar7 + unaff_RBX + 2;\n                            *(*0x20 + -0x68) = iVar2;\n                            *(*0x20 + -0x48) = unaff_RBX + uVar7;\n                            if (unaff_RDI != 0) {\n                                iVar2 = unaff_RDI + uVar8 + unaff_RBX + uVar7 + 3;\n                                unaff_SIL = unaff_SIL | 2;\n                            }\n                            *(*0x20 + -0x50) = iVar2;\n                            *(*0x20 + -0x71) = unaff_SIL;\n                            *(*0x20 + -0xb8) = 0x471cec;\n                            puVar1 = fcn.00444b80(iVar2);\n                            uVar8 = *(*0x20 + -0x50);\n                            if (uVar8 != 0) {\n                                *(*0x20 + -0x10) = puVar1;\n                                *puVar1 = *(*0x20 + -0x71);\n                                iVar2 = uVar8 - 1;\n                                iVar3 = *(*0x20 + -0x58);\n                                arg1_01 = iVar2;\n                                if (iVar3 + 1 < iVar2) {\n                                    arg1_01 = iVar3 + 1;\n                                }\n                                if (*0x20 + -0x22 != puVar1 + (-iVar2 >> 0x3f & 1)) {\n                                    *(*0x20 + -0xb8) = 0x471d47;\n                                    fcn.0045d380(arg1_01);\n                                    puVar1 = *(*0x20 + -0x10);\n                                    uVar8 = *(*0x20 + -0x50);\n                                    iVar3 = *(*0x20 + -0x58);\n                                }\n                                unaff_RBX = iVar3 + 2;\n                                if (unaff_RBX <= uVar8) {\n                                    iVar3 = (uVar8 - iVar3) + -2;\n                                    iVar2 = iVar3;\n                                    if (*(*0x20 + -0x38) < iVar3) {\n                                        iVar2 = *(*0x20 + -0x38);\n                                    }\n                                    if (*(*0x20 + 8) == puVar1 + (unaff_RBX & -iVar3 >> 0x3f)) {\n                                        unaff_RBX = *(*0x20 + -0x40);\n                                    }\n                                    else {\n                                        *(*0x20 + -0xb8) = 0x471dae;\n                                        fcn.0045d380(iVar2);\n                                        unaff_RBX = *(*0x20 + -0x40);\n                                        puVar1 = *(*0x20 + -0x10);\n                                        uVar8 = *(*0x20 + -0x50);\n                                    }\n                                    if (unaff_RBX == 0) {\n                                        return puVar1;\n                                    }\n                                    if (*(*0x20 + -0x68) <= uVar8) {\n                                        uVar8 = uVar8 - *(*0x20 + -0x48);\n                                        uVar7 = uVar8 - 2;\n                                        iVar2 = *(*0x20 + -0x60);\n                                        uVar9 = iVar2 + 1;\n                                        arg1_00 = uVar7;\n                                        if (uVar9 < uVar7) {\n                                            arg1_00 = uVar9;\n                                        }\n                                        puVar6 = puVar1 + (*(*0x20 + -0x68) & -uVar7 >> 0x3f);\n                                        if (*0x20 + -0x2c == puVar6) {\n                                            bVar10 = uVar9 < uVar7;\n                                            bVar11 = uVar9 == uVar7;\n                                        }\n                                        else {\n                                            *(*0x20 + -0x70) = uVar9;\n                                            *(*0x20 + -0x38) = uVar8;\n                                            *(*0x20 + -0x48) = uVar7;\n                                            *(*0x20 + -0x18) = puVar6;\n                                            *(*0x20 + -0xb8) = 0x471e37;\n                                            fcn.0045d380(arg1_00);\n                                            uVar9 = *(*0x20 + -0x70);\n                                            uVar7 = *(*0x20 + -0x48);\n                                            bVar10 = uVar9 < uVar7;\n                                            bVar11 = uVar9 == uVar7;\n                                            unaff_RBX = *(*0x20 + -0x40);\n                                            puVar6 = *(*0x20 + -0x18);\n                                            uVar8 = *(*0x20 + -0x38);\n                                            iVar2 = *(*0x20 + -0x60);\n                                            puVar1 = *(*0x20 + -0x10);\n                                        }\n                                        if (bVar10 || bVar11) {\n                                            uVar8 = (uVar8 - iVar2) - 3;\n                                            uVar7 = uVar8;\n                                            if (unaff_RBX < uVar8) {\n                                                uVar7 = unaff_RBX;\n                                            }\n                                            if (*(*0x20 + 0x18) != puVar6 + (-uVar8 >> 0x3f & uVar9)) {\n                                                *(*0x20 + -0xb8) = 0x471e9f;\n                                                fcn.0045d380(uVar7);\n                                                puVar1 = *(*0x20 + -0x10);\n                                            }\n                                            return puVar1;\n                                        }\n                                        *(*0x20 + -0xb8) = 0x471ec5;\n                                        fcn.0045cb00(uVar7);\n                                    }\n                                    *(*0x20 + -0xb8) = 0x471ed0;\n                                    fcn.0045cb00(uVar8);\n                                }\n                                *(*0x20 + -0xb8) = 0x471ed8;\n                                fcn.0045cb00(uVar8);\n                            }\n                            *(*0x20 + -0xb8) = 0x471edf;\n                            fcn.0045ca40(uVar8);\n                        }\n                        *(*0x20 + -0xb8) = 0x471eec;\n                        fcn.0045ca40(10);\ncode_r0x00471eec:\n                        *(*0x20 + -0xb8) = 0x471ef9;\n                        fcn.0045ca40(10);\n                    }\n                    *(*0x20 + -0xb8) = 0x471f06;\n                    fcn.0045ca40(10);\ncode_r0x00471f06:\n                    *(*0x20 + -0xb8) = 0x471f13;\n                    fcn.0045ca40(10);\n                    arg2 = unaff_RBX;\n                }\n                *(*0x20 + -0xb8) = 0x471f3b;\n                fcn.004486c0(0x20, arg2, 0x4c7a00, 3);\n                *(*0x20 + -0xb8) = 0x471f45;\n                fcn.00409da0();\n                *(*0x20 + -0xb8) = 0x471f54;\n                in_RAX = fcn.00432920();\n            }\n            arg1 = 0x21;\n            unaff_SIL = 0;\n            *(*0x20 + -0xb8) = 0x471f7c;\n            fcn.004486c0(0x21, arg2, 0x4c7a00, 3);\n            *(*0x20 + -0xb8) = 0x471f85;\n            unaff_RBX = fcn.00409da0();\n            *(*0x20 + -0xb8) = 0x471f94;\n            iVar2 = fcn.00432920();\n            unaff_RDI = in_RAX;\n        }\n        *(puVar5 + 8) = iVar2;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        puVar5[0x28] = unaff_SIL;\n        *(puVar5 + -8) = 0x471fb3;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_SIL = puVar5[0x28];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2734
    },
    "00454bc0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00454bc0(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    \n    if ((*(in_RAX + 0x14) & 1) == 0) {\n        return 0;\n    }\n    uVar1 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar1 < 0x15) {\n        if (0x12 < uVar1) {\n            if (uVar1 == 0x13) {\n                return in_RAX + 0x38;\n            }\n            return in_RAX + 0x50;\n        }\n        if (uVar1 == 0x11) {\n            return in_RAX + 0x48;\n        }\n        if (uVar1 == 0x12) {\n            return in_RAX + 0x40;\n        }\n    }\n    else {\n        if (uVar1 < 0x17) {\n            if (uVar1 == 0x15) {\n                return in_RAX + 0x58;\n            }\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x17) {\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x19) {\n            return in_RAX + 0x50;\n        }\n    }\n    return in_RAX + 0x30;\n}\n",
        "token_count": 321
    },
    "00466660": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00466660(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar6 = 0;\n    uVar4 = 0;\n    while( true ) {\n        uVar5 = -(unaff_RBX < 0x40);\n        uVar7 = uVar6;\n        if ((uVar5 & uVar6 >> (unaff_RBX & 0x3f)) != 0) goto code_r0x004666de;\n        if (*(in_RAX + 800) == uVar4 || *(in_RAX + 800) < uVar4) break;\n        if (799 < uVar4) {\n            fcn.0045ca40(800);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar6 = (*(uVar4 + in_RAX) + uVar6 * 10) - 0x30;\n        uVar4 = uVar4 + 1;\n    }\n    if (uVar6 == 0) {\n        *(in_RAX + 800) = 0;\n        return;\n    }\ncode_r0x0046682f:\n    uVar7 = uVar6;\n    if ((uVar5 & uVar6 >> (unaff_RBX & 0x3f)) != 0) {\ncode_r0x004666de:\n        *(in_RAX + 0x328) = (*(in_RAX + 0x328) - uVar4) + 1;\n        uVar3 = unaff_RBX;\n        uVar6 = (1 << (uVar3 & 0x3f) & uVar5) - 1;\n        uVar9 = 0;\n        for (; *(in_RAX + 800) != uVar4 && uVar4 <= *(in_RAX + 800); uVar4 = uVar4 + 1) {\n            if (799 < uVar4) goto code_r0x00466815;\n            uVar1 = *(uVar4 + in_RAX);\n            if (799 < uVar9) goto code_r0x00466808;\n            *(in_RAX + uVar9) = (uVar7 >> (uVar3 & 0x3f) & uVar5) + 0x30;\n            uVar9 = uVar9 + 1;\n            uVar7 = (uVar1 + (uVar7 & uVar6) * 10) - 0x30;\n        }\n        while (uVar7 != 0) {\n            uVar8 = uVar7 >> (uVar3 & 0x3f) & uVar5;\n            uVar4 = uVar7 & uVar6;\n            if (uVar9 < 800) {\n                if (799 < uVar9) goto code_r0x004667fb;\n                *(in_RAX + uVar9) = uVar8 + '0';\n                uVar9 = uVar9 + 1;\n            }\n            else if (uVar8 != 0) {\n                *(in_RAX + 0x331) = 1;\n            }\n            uVar7 = uVar4 * 10;\n        }\n        *(in_RAX + 800) = uVar9;\n        do {\n            uVar4 = *(in_RAX + 800);\n            if (uVar4 < 1) {\ncode_r0x004667d7:\n                if (uVar4 == 0) {\n                    *(in_RAX + 0x328) = 0;\n                }\n                return;\n            }\n            if (799 < uVar4 - 1) goto code_r0x004667ee;\n            uVar3 = *((uVar4 - 1) + in_RAX);\n            uVar5 = uVar3;\n            if (uVar3 != 0x30) goto code_r0x004667d7;\n            *(in_RAX + 800) = uVar4 - 1;\n        } while( true );\n    }\n    goto code_r0x00466825;\ncode_r0x004667ee:\n    fcn.0045ca40(800);\ncode_r0x004667fb:\n    fcn.0045ca40(800);\ncode_r0x00466808:\n    fcn.0045ca40(800);\ncode_r0x00466815:\n    unaff_RBX = 800;\n    in_RAX = fcn.0045ca40(800);\ncode_r0x00466825:\n    uVar6 = uVar6 * 10;\n    uVar4 = uVar4 + 1;\n    goto code_r0x0046682f;\n}\n",
        "token_count": 1102
    },
    "00466860": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00466860(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    \n    uVar7 = *0x576e48;\n    if (unaff_RBX < *0x576e48) {\n        iVar9 = *(*0x576e40 + unaff_RBX * 0x18);\n        uVar7 = *(in_RAX + 800);\n        if (uVar7 < 0x321) {\n            for (iVar6 = 0; iVar6 < *(*0x576e40 + 0x10 + unaff_RBX * 0x18); iVar6 = iVar6 + 1) {\n                if (uVar7 <= iVar6) {\ncode_r0x004668db:\n                    iVar9 = iVar9 + -1;\n                    break;\n                }\n                uVar1 = *(*(*0x576e40 + 8 + unaff_RBX * 0x18) + iVar6);\n                if (uVar1 != *(iVar6 + in_RAX)) {\n                    if (*(iVar6 + in_RAX) < uVar1) goto code_r0x004668db;\n                    break;\n                }\n            }\n            uVar4 = 0;\n            uVar5 = iVar9 + uVar7;\n            while (uVar7 = uVar7 - 1,  -1 < uVar7) {\n                uVar8 = uVar4 + (*(in_RAX + uVar7) - 0x30 << (unaff_RBX & 0x3f) & -(unaff_RBX < 0x40));\n                uVar4 = uVar8 / 10;\n                uVar8 = uVar8 % 10;\n                uVar3 = uVar5 - 1;\n                if (uVar3 < 800) {\n                    if (799 < uVar3) goto code_r0x00466a5a;\n                    *((uVar5 - 1) + in_RAX) = uVar8 + '0';\n                    uVar5 = uVar3;\n                }\n                else {\n                    uVar5 = uVar3;\n                    if (uVar8 != 0) {\n                        *(in_RAX + 0x331) = 1;\n                    }\n                }\n            }\n            while (uVar4 != 0) {\n                uVar8 = uVar4 / 10;\n                uVar3 = uVar4 % 10;\n                uVar7 = uVar5 - 1;\n                uVar4 = uVar8;\n                if (uVar7 < 800) {\n                    if (799 < uVar7) goto code_r0x00466a50;\n                    *((uVar5 - 1) + in_RAX) = uVar3 + '0';\n                    uVar5 = uVar7;\n                }\n                else {\n                    uVar5 = uVar7;\n                    if (uVar3 != 0) {\n                        *(in_RAX + 0x331) = 1;\n                    }\n                }\n            }\n            iVar6 = *(in_RAX + 800) + iVar9;\n            *(in_RAX + 800) = iVar6;\n            if (799 < iVar6) {\n                *(in_RAX + 800) = 800;\n            }\n            *(in_RAX + 0x328) = *(in_RAX + 0x328) + iVar9;\ncode_r0x00466a05:\n            iVar9 = *(in_RAX + 800);\n            if (0 < iVar9) {\n                if (799 < iVar9 - 1U) {\n                    fcn.0045ca40(800);\ncode_r0x00466a50:\n                    fcn.0045ca40(800);\ncode_r0x00466a5a:\n                    uVar7 = 800;\n                    fcn.0045ca40(800);\n                    goto code_r0x00466a65;\n                }\n                if (*(iVar9 + -1 + in_RAX) == '0') goto code_r0x004669fe;\n            }\n            if (iVar9 == 0) {\n                *(in_RAX + 0x328) = 0;\n            }\n            return;\n        }\ncode_r0x00466a65:\n        fcn.0045ca80(uVar7, 800);\n    }\n    fcn.0045ca60(uVar7);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\ncode_r0x004669fe:\n    *(in_RAX + 800) = iVar9 - 1U;\n    goto code_r0x00466a05;\n}\n",
        "token_count": 1075
    },
    "00472080": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00472080(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    \n    if ((*(in_RAX + 0x14) & 1) == 0) {\n        return 0;\n    }\n    uVar1 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar1 < 0x15) {\n        if (0x12 < uVar1) {\n            if (uVar1 == 0x13) {\n                return in_RAX + 0x38;\n            }\n            return in_RAX + 0x50;\n        }\n        if (uVar1 == 0x11) {\n            return in_RAX + 0x48;\n        }\n        if (uVar1 == 0x12) {\n            return in_RAX + 0x40;\n        }\n    }\n    else {\n        if (uVar1 < 0x17) {\n            if (uVar1 == 0x15) {\n                return in_RAX + 0x58;\n            }\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x17) {\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x19) {\n            return in_RAX + 0x50;\n        }\n    }\n    return in_RAX + 0x30;\n}\n",
        "token_count": 320
    },
    "004494e0": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.004494e0(void)\n\n{\n    char cVar1;\n    char *in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    if (unaff_RBX == 0) {\n        return 0;\n    }\n    cVar1 = *in_RAX;\n    if (cVar1 == '-') {\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n    }\n    uVar2 = 0;\n    for (iVar3 = 0; iVar3 < unaff_RBX; iVar3 = iVar3 + 1) {\n        if (9 < in_RAX[iVar3] - 0x30U) {\n            return 0;\n        }\n        if (0x1999999999999999 < uVar2) {\n            return 0;\n        }\n        uVar4 = uVar2 * 10;\n        uVar2 = (in_RAX[iVar3] + uVar2 * 10) - 0x30;\n        if (uVar2 < uVar4) {\n            return 0;\n        }\n    }\n    if (cVar1 != '-') {\n        if (0x7fffffffffffffff < uVar2) {\n            return 0;\n        }\n        if (cVar1 != '-') goto code_r0x00449599;\n    }\n    if (0x8000000000000000 < uVar2) {\n        return 0;\n    }\ncode_r0x00449599:\n    if (cVar1 == '-') {\n        uVar2 = -uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 391
    },
    "0041cb40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041cb40(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    \ncode_r0x0041cb40:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x50;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        uVar4 = 0;\n        do {\n            if (unaff_RBX <= uVar4) {\n                return;\n            }\n            if (arg1 == 0) {\ncode_r0x0041cbd9:\n                *(*0x20 + -0x18) = uVar4;\n                uVar4 = *(in_RAX + uVar4);\n                if (((unaff_RSI == 0) || (uVar4 <= *(unaff_RSI + 0x100) && *(unaff_RSI + 0x100) != uVar4)) ||\n                   (*(unaff_RSI + 0x108) < uVar4 || *(unaff_RSI + 0x108) == uVar4)) {\n                    *(*0x20 + -0x20) = uVar4;\n                    *(*0x20 + -0x58) = 0x41cc3c;\n                    iVar3 = fcn.004238a0();\n                    if (iVar3 == 0) {\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        iVar2 = *(iVar3 + 0x18);\n                        uVar4 = (*(*0x20 + -0x20) - iVar2) * *(iVar3 + 0x5c);\n                        arg3 = uVar4 >> 0x20;\n                        if ((*(iVar3 + 0x30) < arg3 || *(iVar3 + 0x30) == arg3) &&\n                           ((*((uVar4 >> 0x23) + *(iVar3 + 0x48)) & 1 << (uVar4 >> 0x20 & 7)) == 0)) {\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                        else {\n                            iVar3 = *(iVar3 + 0x68);\n                            *(*0x20 + -0x58) = 0x41ccd5;\n                            fcn.0041ce00(*(*0x20 + -0x18), iVar2 + iVar3 * arg3, arg3);\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x41cc0c;\n                    fcn.00420760(1);\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                }\n            }\n            else {\n                uVar1 = *(arg1 + (uVar4 >> 6));\n                if (uVar1 == 0) {\n                    if ((uVar4 & 0x3f) != 0) goto code_r0x0041cd25;\n                    uVar4 = uVar4 + 0x38;\n                }\n                else if ((uVar1 >> (uVar4 >> 3 & 7) & 1) != 0) goto code_r0x0041cbd9;\n            }\n            uVar4 = uVar4 + 8;\n        } while( true );\n    }\n    goto code_r0x0041cd37;\ncode_r0x0041cd25:\n    unaff_RBX = 0xf;\n    *(*0x20 + -0x58) = 0x41cd36;\n    in_RAX = fcn.004330a0();\ncode_r0x0041cd37:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x41cd55;\n    fcn.0045a360();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x0041cb40;\n}\n",
        "token_count": 1520
    },
    "00455e00": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint64_t fcn.00455e00(uint64_t arg1)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    char cVar7;\n    ulong in_RAX;\n    ulong uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint32_t *noname_0;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    int64_t unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int64_t in_R8;\n    uint64_t in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (puVar14 = *0x20,  *0x20 + -0xa0 < *(unaff_R14 + 0x10) || *0x20 + -0xa0 == *(unaff_R14 + 0x10)) {\ncode_r0x00456a7e:\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + -8) = 0x456a92;\n        fcn.0045a360();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        *0x20 = puVar14;\n    }\n    puVar14 = *0x20 + -0x120;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x20) = arg1;\n    *(*0x20 + -0x18) = in_RAX;\n    *(*0x20 + -0x10) = unaff_RBX;\n    *(*0x20 + -0x128) = 0x455e68;\n    fcn.0040d400(*0x20 + -0x18);\n    if (arg1 != '\\0') {\n        return 1;\n    }\n    *(*0x20 + -0x18) = *(*0x20 + 8);\n    *(*0x20 + -0x10) = *(*0x20 + 0x10);\n    *(*0x20 + -0x128) = 0x455eac;\n    fcn.0040d840(*0x20 + -0x18);\n    iVar12 = *(*0x20 + 0x10);\n    if (*(*0x20 + 8) == iVar12) {\n        return 1;\n    }\n    uVar3 = *(*(*0x20 + 8) + 0x17);\n    if ((*(iVar12 + 0x17) & 0x1f) != (uVar3 & 0x1f)) {\n        return 0;\n    }\n    *(*0x20 + -0x105) = uVar3;\n    *(*0x20 + -0x106) = uVar3 & 0x1f;\n    *(*0x20 + -0x128) = 0x455ef6;\n    uVar8 = fcn.00454b20();\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -0xb8) = uVar3;\n    *(*0x20 + -0x128) = 0x455f10;\n    unaff_RBX = fcn.00454b20();\n    if (uVar3 != *(*0x20 + -0xb8)) {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x455f2a;\n    cVar7 = fcn.004021c0(*(*0x20 + -0xb8), iVar12);\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x455f4e;\n    uVar8 = fcn.00454bc0();\n    *(*0x20 + -0x80) = uVar8;\n    *(*0x20 + -0x128) = 0x455f65;\n    iVar9 = fcn.00454bc0();\n    noname_0 = *(*0x20 + -0x80);\n    if (noname_0 == NULL) {\n        if (iVar9 != 0) {\n            return 0;\n        }\n    }\n    else {\n        if (iVar9 == 0) {\n            return 0;\n        }\n        *(*0x20 + -0x88) = iVar9;\n        uVar6 = *noname_0;\n        *(*0x20 + -0x128) = 0x455fb3;\n        fcn.00454d00();\n        *(*0x20 + -0x128) = 0x455fb8;\n        uVar8 = fcn.00455460(noname_0, iVar12, in_R8, in_R9);\n        *(*0x20 + -0x68) = uVar8;\n        *(*0x20 + -0xf0) = uVar6;\n        uVar6 = **(*0x20 + -0x88);\n        uVar15 = uVar6;\n        *(*0x20 + -0x128) = 0x455fde;\n        fcn.00454d00();\n        *(*0x20 + -0x128) = 0x455fe5;\n        unaff_RBX = fcn.00455460(uVar15, iVar12, in_R8, in_R9);\n        if (uVar6 != *(*0x20 + -0xf0)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x456005;\n        cVar7 = fcn.004021c0(*(*0x20 + -0xf0), iVar12);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n    }\n    uVar3 = *(*0x20 + -0x106);\n    if (uVar3 - 1 < 0x10) {\n        return 1;\n    }\n    if (uVar3 < 0x16) {\n        if (0x12 < uVar3) {\n            if (uVar3 == 0x13) {\n                iVar12 = *(*0x20 + 8);\n                in_R8 = *(*0x20 + 0x10);\n                if (*(in_R8 + 0x32) != *(iVar12 + 0x32)) {\n                    return 0;\n                }\n                uVar4 = *(iVar12 + 0x30);\n                arg1 = uVar4;\n                uVar5 = *(in_R8 + 0x30);\n                if (uVar5 != uVar4) {\n                    return 0;\n                }\n                if ((*(iVar12 + 0x14) & 1) == 0) {\n                    iVar9 = 0x38;\n                }\n                else {\n                    iVar9 = 0x48;\n                }\n                in_R9 = iVar12 + iVar9;\n                if (arg1 < 0x100001) {\n                    if ((*(in_R8 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    *(*0x20 + -0x102) = uVar4;\n                    *(*0x20 + -0x104) = uVar5;\n                    *(*0x20 + -0x98) = in_R9;\n                    iVar9 = in_R8 + iVar9;\n                    *(*0x20 + -0xa0) = iVar9;\n                    uVar8 = *(*0x20 + -0x20);\n                    uVar15 = 0;\n                    while (uVar16 = uVar5,  uVar15 < arg1) {\n                        if (uVar16 <= uVar15) goto code_r0x00456a6c;\n                        *(*0x20 + -0xd0) = uVar15;\n                        iVar11 = *(iVar9 + uVar15 * 8);\n                        *(*0x20 + -0x128) = 0x4568fe;\n                        cVar7 = fcn.00455e00(uVar8);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\ncode_r0x0045689d:\n                        arg1 = *(*0x20 + -0x102);\n                        uVar5 = *(*0x20 + -0x104);\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar9 = *(*0x20 + -0xa0);\n                        in_R9 = *(*0x20 + -0x98);\n                        iVar12 = *(*0x20 + 8);\n                        in_R8 = *(*0x20 + 0x10);\n                        unaff_RBX = iVar11;\n                        uVar15 = *(*0x20 + -0xd0) + 1;\n                    }\n                    if ((*(iVar12 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    uVar16 = *(iVar12 + 0x30);\n                    uVar15 = (*(iVar12 + 0x32) & 0x7fff) + *(iVar12 + 0x30) & 0xffff;\n                    if (uVar16 <= uVar15) {\n                        iVar11 = uVar15 - uVar16;\n                        iVar12 = iVar12 + iVar9 + (uVar16 << 3 & uVar16 - 0x100000 >> 0x3f);\n                        if ((*(in_R8 + 0x14) & 1) == 0) {\n                            iVar9 = 0x38;\n                        }\n                        else {\n                            iVar9 = 0x48;\n                        }\n                        puVar1 = in_R8 + 0x32;\n                        puVar2 = in_R8 + 0x30;\n                        uVar16 = *puVar2;\n                        in_R8 = in_R8 + iVar9;\n                        uVar15 = (*puVar1 & 0x7fff) + *puVar2 & 0xffff;\n                        if (uVar16 <= uVar15) {\n                            *(*0x20 + -0xf8) = iVar11;\n                            *(*0x20 + -0xa8) = iVar12;\n                            uVar15 = uVar15 - uVar16;\n                            *(*0x20 + -0x100) = uVar15;\n                            in_R9 = uVar16 - 0x100000 >> 0x3f;\n                            uVar16 = (uVar16 << 3 & in_R9) + in_R8;\n                            *(*0x20 + -0xb0) = uVar16;\n                            uVar10 = 0;\n                            while( true ) {\n                                if (iVar11 <= uVar10) {\n                                    return 1;\n                                }\n                                in_R8 = *(iVar12 + uVar10 * 8);\n                                if (uVar15 <= uVar10) break;\n                                *(*0x20 + -0xd8) = uVar10;\n                                unaff_RBX = *(uVar16 + uVar10 * 8);\n                                *(*0x20 + -0x128) = 0x456a25;\n                                cVar7 = fcn.00455e00(uVar8);\n                                if (cVar7 == '\\0') {\n                                    return 0;\n                                }\n                                uVar10 = *(*0x20 + -0xd8) + 1;\n                                iVar11 = *(*0x20 + -0xf8);\n                                uVar15 = *(*0x20 + -0x100);\n                                uVar8 = *(*0x20 + -0x20);\n                                uVar16 = *(*0x20 + -0xb0);\n                                iVar12 = *(*0x20 + -0xa8);\n                            }\n                            *(*0x20 + -0x128) = 0x456a58;\n                            fcn.0045ca40(uVar15);\n                        }\n                        *(*0x20 + -0x128) = 0x456a65;\n                        fcn.0045cb00(uVar15);\n                    }\n                    *(*0x20 + -0x128) = 0x456a6c;\n                    fcn.0045cb00(uVar15);\ncode_r0x00456a6c:\n                    arg1 = uVar16 & 0xffffffff;\n                    *(*0x20 + -0x128) = 0x456a73;\n                    fcn.0045ca40(arg1);\n                }\n                *(*0x20 + -0x128) = 0x456a7d;\n                in_RAX = fcn.0045ca80(arg1, 0x100000);\n                goto code_r0x00456a7e;\n            }\n            if (uVar3 != 0x14) {\n                *(*0x20 + -0x128) = 0x4561bb;\n                cVar7 = fcn.00455e00(*(*0x20 + -0x20));\n                if (cVar7 == '\\0') {\n                    uVar15 = 0;\n                }\n                else {\n                    *(*0x20 + -0x128) = 0x4561e8;\n                    uVar15 = fcn.00455e00(*(*0x20 + -0x20));\n                }\n                return uVar15;\n            }\n            *(*0x20 + -0x128) = 0x456106;\n            uVar8 = fcn.00455460(*(*0x20 + 8), iVar12, in_R8, in_R9);\n            *(*0x20 + -0x28) = uVar8;\n            *(*0x20 + -0xb8) = unaff_RBX;\n            uVar8 = *(*(*0x20 + 0x10) + 0x30);\n            *(*0x20 + -0x128) = 0x456127;\n            iVar11 = fcn.00455460(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n            if (unaff_RBX == *(*0x20 + -0xb8)) {\n                *(*0x20 + -0x128) = 0x456145;\n                cVar7 = fcn.004021c0(*(*0x20 + -0xb8), uVar8);\n                if (cVar7 != '\\0') {\n                    iVar12 = *(*0x20 + 8);\n                    iVar9 = *(iVar12 + 0x40);\n                    iVar13 = *(*0x20 + 0x10);\n                    if (*(iVar13 + 0x40) != iVar9) {\n                        return 0;\n                    }\n                    *(*0x20 + -0xb8) = iVar9;\n                    uVar15 = 0;\n                    while( true ) {\n                        if (iVar9 <= uVar15) {\n                            return 1;\n                        }\n                        iVar9 = *(iVar12 + 0x38);\n                        uVar16 = *(iVar12 + 0x40);\n                        if (uVar16 <= uVar15) break;\n                        iVar12 = iVar9 + uVar15 * 8;\n                        uVar16 = *(iVar13 + 0x40);\n                        if (uVar16 <= uVar15) {\n                            *(*0x20 + -0x128) = 0x456898;\n                            fcn.0045ca40(uVar16);\n                            break;\n                        }\n                        *(*0x20 + -0x40) = *(iVar13 + 0x38);\n                        *(*0x20 + -0x48) = iVar9;\n                        *(*0x20 + -0xe0) = uVar15;\n                        *(*0x20 + -0x78) = iVar12;\n                        *(*0x20 + -0x128) = 0x456707;\n                        uVar8 = fcn.00454d00();\n                        *(*0x20 + -0x50) = uVar8;\n                        iVar11 = *(*0x20 + -0xe0);\n                        iVar13 = *(*0x20 + -0x40);\n                        *(*0x20 + -0x90) = iVar13 + iVar11 * 8;\n                        uVar16 = *(iVar13 + iVar11 * 8);\n                        *(*0x20 + -0x128) = 0x456733;\n                        uVar8 = fcn.00454d00();\n                        *(*0x20 + -0x58) = uVar8;\n                        *(*0x20 + -0x128) = 0x456748;\n                        uVar8 = fcn.00455460(iVar11, iVar13, iVar9, iVar12);\n                        *(*0x20 + -0x60) = uVar8;\n                        *(*0x20 + -0xc0) = uVar16;\n                        *(*0x20 + -0x128) = 0x456765;\n                        iVar11 = fcn.00455460(iVar11, iVar13, iVar9, iVar12);\n                        uVar15 = *(*0x20 + -0xc0);\n                        if (uVar16 != uVar15) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x456785;\n                        cVar7 = fcn.004021c0(uVar15, iVar13);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x45679a;\n                        uVar8 = fcn.00455620(uVar15, iVar13, iVar9, iVar12);\n                        *(*0x20 + -0x28) = uVar8;\n                        *(*0x20 + -0xc0) = iVar11;\n                        *(*0x20 + -0x128) = 0x4567b4;\n                        fcn.00455620(uVar15, iVar13, iVar9, iVar12);\n                        if (iVar11 != *(*0x20 + -0xc0)) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x4567d9;\n                        cVar7 = fcn.004021c0(*(*0x20 + -0xc0), iVar13);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x4567fb;\n                        uVar8 = fcn.00454fa0();\n                        *(*0x20 + -0x70) = uVar8;\n                        *(*0x20 + -0x128) = 0x456825;\n                        iVar11 = fcn.00454fa0();\n                        *(*0x20 + -0x128) = 0x45683d;\n                        cVar7 = fcn.00455e00(*(*0x20 + -0x20));\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\ncode_r0x00456690:\n                        uVar15 = *(*0x20 + -0xe0) + 1;\n                        iVar9 = *(*0x20 + -0xb8);\n                        iVar13 = *(*0x20 + 0x10);\n                        iVar12 = *(*0x20 + 8);\n                    }\n                    *(*0x20 + -0x128) = 0x45689d;\n                    fcn.0045ca40(uVar16);\n                    goto code_r0x0045689d;\n                }\n            }\n            return 0;\n        }\n        if (uVar3 == 0x11) {\n            *(*0x20 + -0x128) = 0x456274;\n            cVar7 = fcn.00455e00(*(*0x20 + -0x20));\n            if (cVar7 == '\\0') {\n                uVar15 = 0;\n            }\n            else {\n                uVar15 = *(*(*0x20 + 8) + 0x40) & 0xffffffffffffff00 |\n                         *(*(*0x20 + 0x10) + 0x40) == *(*(*0x20 + 8) + 0x40);\n            }\n            return uVar15 & 0xffffffff;\n        }\n        if (uVar3 == 0x12) {\n            if (*(*(*0x20 + 0x10) + 0x38) == *(*(*0x20 + 8) + 0x38)) {\n                *(*0x20 + -0x128) = 0x45623f;\n                uVar15 = fcn.00455e00(*(*0x20 + -0x20));\n            }\n            else {\n                uVar15 = 0;\n            }\n            return uVar15;\n        }\n    }\n    else {\n        if (uVar3 < 0x18) {\n            if (uVar3 == 0x16) {\n                *(*0x20 + -0x128) = 0x4562da;\n                uVar15 = fcn.00455e00(*(*0x20 + -0x20));\n                return uVar15;\n            }\n            *(*0x20 + -0x128) = 0x45630f;\n            uVar15 = fcn.00455e00(*(*0x20 + -0x20));\n            return uVar15;\n        }\n        if (uVar3 == 0x18) {\n            return 1;\n        }\n        if (uVar3 == 0x19) {\n            iVar12 = *(*(*0x20 + 0x10) + 0x40);\n            iVar9 = *(*0x20 + 8);\n            if (*(iVar9 + 0x40) != iVar12) {\n                return 0;\n            }\n            *(*0x20 + -0x128) = 0x456357;\n            uVar8 = fcn.00455460(*(*0x20 + 0x10), iVar12, in_R8, in_R9);\n            *(*0x20 + -0x28) = uVar8;\n            *(*0x20 + -0xb8) = iVar9;\n            uVar8 = *(*(*0x20 + 0x10) + 0x30);\n            *(*0x20 + -0x128) = 0x456378;\n            fcn.00455460(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n            if (iVar9 == *(*0x20 + -0xb8)) {\n                *(*0x20 + -0x128) = 0x456395;\n                cVar7 = fcn.004021c0(*(*0x20 + -0xb8), uVar8);\n                if (cVar7 != '\\0') {\n                    iVar9 = *(*0x20 + 8);\n                    iVar11 = *(iVar9 + 0x40);\n                    *(*0x20 + -0xb8) = iVar11;\n                    iVar12 = *(*0x20 + 0x10);\n                    uVar15 = 0;\n                    goto code_r0x004564c3;\n                }\n            }\n            return 0;\n        }\n        if (uVar3 == 0x1a) {\n            return 1;\n        }\n    }\n    *(*0x20 + -0x128) = 0x456465;\n    fcn.00434840();\n    *(*0x20 + -0x128) = 0x456476;\n    fcn.00435140();\n    *(*0x20 + -0x128) = 0x456485;\n    fcn.00434e40();\n    *(*0x20 + -0x128) = 0x45648a;\n    fcn.00434aa0();\n    *(*0x20 + -0x128) = 0x45648f;\n    fcn.004348c0();\n    *(*0x20 + -0x128) = 0x4564a5;\n    fcn.004330a0();\n    while( true ) {\n        uVar15 = *(*0x20 + -0xe8) + 1;\n        iVar11 = *(*0x20 + -0xb8);\n        iVar12 = *(*0x20 + 0x10);\n        iVar9 = *(*0x20 + 8);\ncode_r0x004564c3:\n        if (iVar11 <= uVar15) {\n            return 1;\n        }\n        uVar8 = *(iVar9 + 0x38);\n        uVar16 = *(iVar9 + 0x40);\n        if (uVar16 <= uVar15) break;\n        iVar13 = uVar15 * 3;\n        arg4 = *(iVar12 + 0x38);\n        uVar16 = *(iVar12 + 0x40);\n        if (uVar16 <= uVar15) {\n            *(*0x20 + -0x128) = 0x45668b;\n            fcn.0045ca40(uVar16);\n            break;\n        }\n        *(*0x20 + -0xc0) = iVar13;\n        *(*0x20 + -0x30) = uVar8;\n        *(*0x20 + -0x38) = arg4;\n        *(*0x20 + -0xe8) = uVar15;\n        *(*0x20 + -0x128) = 0x456515;\n        uVar8 = fcn.00455460(uVar16, iVar9, iVar13, arg4);\n        *(*0x20 + -0x28) = uVar8;\n        *(*0x20 + -200) = iVar11;\n        uVar8 = *(*0x20 + -0x38);\n        *(*0x20 + -0x128) = 0x45653b;\n        fcn.00455460(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n        if (iVar11 != *(*0x20 + -200)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x456559;\n        cVar7 = fcn.004021c0(*(*0x20 + -200), uVar8);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        iVar12 = *(*(*0x20 + -0x38) + 8 + *(*0x20 + -0xc0) * 8);\n        *(*0x20 + -0x128) = 0x456594;\n        cVar7 = fcn.00455e00(*(*0x20 + -0x20));\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x4565b2;\n        uVar8 = fcn.00455520(*(*0x20 + -0xc0), *(*0x20 + -0x30), iVar13, arg4);\n        *(*0x20 + -0x28) = uVar8;\n        *(*0x20 + -200) = iVar12;\n        uVar8 = *(*0x20 + -0x38);\n        *(*0x20 + -0x128) = 0x4565d8;\n        fcn.00455520(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n        if (iVar12 != *(*0x20 + -200)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x4565f5;\n        cVar7 = fcn.004021c0(*(*0x20 + -200), uVar8);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        if (*(*(*0x20 + -0x38) + 0x10 + *(*0x20 + -0xc0) * 8) != *(*(*0x20 + -0x30) + 0x10 + *(*0x20 + -0xc0) * 8)) {\n            return 0;\n        }\n    }\n    *(*0x20 + -0x128) = 0x456690;\n    fcn.0045ca40(uVar16);\n    goto code_r0x00456690;\n}\n",
        "token_count": 6374
    },
    "004410a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.004410a0(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        iVar2 = *0x580700;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x580710 == 0) {\n                return 0;\n            }\n            if (*0x5d3b70 != 0) {\n                if (*0x5d3b70 == -1) {\n                    iVar1 = -*0x580710;\n                }\n                else {\n                    iVar1 = *0x580710 / *0x5d3b70;\n                }\n                iVar3 = iVar1 + 1;\n                if (*0x580710 < iVar1 + 1) {\n                    iVar3 = *0x580710;\n                }\n                if ((0 < unaff_EBX) && (unaff_EBX < iVar3)) {\n                    iVar3 = unaff_EBX;\n                }\n                if (0x80 < iVar3) {\n                    iVar3 = 0x80;\n                }\n                *0x580710 = *0x580710 - iVar3;\n                if ((*0x580700 != 0) && (*0x580700 = *(*0x580700 + 0xa0),  *0x580700 == 0)) {\n                    *0x580708 = 0;\n                }\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = in_RAX;\n                while( true ) {\n                    if (iVar3 + -1 < 1) break;\n                    *(*0x20 + -0x1c) = iVar3 + -1;\n                    if ((*0x580700 != 0) && (*0x580700 = *(*0x580700 + 0xa0),  *0x580700 == 0)) {\n                        *0x580708 = 0;\n                    }\n                    *(*0x20 + -0x40) = 0x441167;\n                    fcn.00441520(0);\n                    iVar3 = *(*0x20 + -0x1c);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x40) = 0x4411bb;\n            in_RAX = fcn.00431720();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x4411ca;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 746
    },
    "0044afe0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0044afe0(void)\n\n{\n    int32_t *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (in_RAX == NULL) {\n        return 0;\n    }\n    if (*in_RAX == -1) {\n        return *(in_RAX + 4);\n    }\n    for (iVar2 = 0x56a3e0; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n        if (((*(iVar2 + 0x70) != 0) && (*(iVar2 + 0x68) <= in_RAX)) && (in_RAX < *(iVar2 + 0x70) + *(iVar2 + 0x68)))\n        goto code_r0x0044b05c;\n    }\n    iVar2 = 0;\ncode_r0x0044b05c:\n    uVar1 = fcn.0044b920(in_RAX, iVar2);\n    return uVar1;\n}\n",
        "token_count": 278
    },
    "0044b0a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0044b0a0(void)\n\n{\n    int32_t *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*in_RAX == -1) {\n        return *(in_RAX + 2);\n    }\n    for (iVar2 = 0x56a3e0; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n        if (((*(iVar2 + 0x70) != 0) && (*(iVar2 + 0x68) <= in_RAX)) && (in_RAX < *(iVar2 + 0x70) + *(iVar2 + 0x68)))\n        goto code_r0x0044b0fc;\n    }\n    iVar2 = 0;\ncode_r0x0044b0fc:\n    uVar1 = fcn.0044acc0(iVar2);\n    return uVar1;\n}\n",
        "token_count": 260
    },
    "0044bc40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0044bc40(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (in_RAX != 0) {\n        uVar1 = fcn.0044b320(*(in_RAX + 0x14));\n        iVar2 = fcn.0044b320(*(in_RAX + 0x18));\n        if (((uVar1 != 0xffffffff) && (iVar2 != -1)) && (*(unaff_RBX + 0x40) != uVar1 && uVar1 <= *(unaff_RBX + 0x40)))\n        {\n            uVar3 = fcn.0044bb40(uVar1);\n            return uVar3;\n        }\n        return 0x4c7914;\n    }\n    return 0x4c7914;\n}\n",
        "token_count": 264
    },
    "00454fa0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.00454fa0(ulong param_1, int64_t param_2)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 0) || (unaff_EBX == 0xffffffff)) {\n                return 0;\n            }\n            for (iVar2 = 0x56a3e0; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n                if ((*(iVar2 + 0x118) < in_RAX || *(iVar2 + 0x118) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x120) && *(iVar2 + 0x120) != in_RAX)) goto code_r0x00454ffc;\n            }\n            iVar2 = 0;\ncode_r0x00454ffc:\n            *(*0x20 + 0x10) = unaff_EBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x38) = in_RAX;\n                *(*0x20 + -0x58) = 0x45507c;\n                fcn.0040a360();\n                *(*0x20 + -0x58) = 0x455093;\n                puVar1 = fcn.0040ee20(*(*0x20 + 0x10));\n                uVar3 = *puVar1;\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0x58) = 0x4550aa;\n                fcn.0040a580();\n                if (*(*0x20 + -0x20) != 0) {\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x58) = 0x4550b9;\n                fcn.00434840();\n                *(*0x20 + -0x58) = 0x4550ca;\n                fcn.00435140();\n                *(*0x20 + -0x58) = 0x4550d6;\n                fcn.00434fa0();\n                *(*0x20 + -0x58) = 0x4550e7;\n                fcn.00435140();\n                *(*0x20 + -0x58) = 0x4550f1;\n                fcn.00434fa0();\n                *(*0x20 + -0x58) = 0x455105;\n                fcn.00435140();\n                *(*0x20 + -0x58) = 0x45510a;\n                fcn.004348c0();\n                iVar2 = 0x56a3e0;\n                while (iVar2 != 0) {\n                    *(*0x20 + -0x18) = iVar2;\n                    uVar3 = *(iVar2 + 0x118);\n                    *(*0x20 + -0x28) = uVar3;\n                    param_2 = *(iVar2 + 0x120);\n                    *(*0x20 + -0x30) = param_2;\n                    *(*0x20 + -0x58) = 0x45513f;\n                    fcn.00434840();\n                    *(*0x20 + -0x58) = 0x455150;\n                    fcn.00435140();\n                    *(*0x20 + -0x58) = 0x45515a;\n                    fcn.00434fa0();\n                    *(*0x20 + -0x58) = 0x45516b;\n                    fcn.00435140();\n                    *(*0x20 + -0x58) = 0x455175;\n                    fcn.00434fa0();\n                    *(*0x20 + -0x58) = 0x45517a;\n                    fcn.00434aa0();\n                    *(*0x20 + -0x58) = 0x45517f;\n                    fcn.004348c0();\n                    iVar2 = *(*(*0x20 + -0x18) + 0x220);\n                }\n                *(*0x20 + -0x58) = 0x4551a5;\n                fcn.004330a0();\n            }\n            else {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x58) = 0x455025;\n                puVar1 = fcn.0040ee20(unaff_EBX);\n                if (*puVar1 != 0) {\n                    return *puVar1;\n                }\n                param_2 = *(*(*0x20 + -0x10) + 0x118);\n                uVar3 = *(*(*0x20 + -0x10) + 0x120);\n                if (param_2 + *(*0x20 + 0x10) <= uVar3) {\n                    return param_2 + *(*0x20 + 0x10);\n                }\n            }\n            *(*0x20 + -0x28) = param_2;\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x58) = 0x4551b4;\n            fcn.00434840();\n            *(*0x20 + -0x58) = 0x4551c5;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x4551d1;\n            fcn.00434fa0();\n            *(*0x20 + -0x58) = 0x4551e5;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x4551ef;\n            fcn.00434fa0();\n            *(*0x20 + -0x58) = 0x455205;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x45520f;\n            fcn.00434fa0();\n            *(*0x20 + -0x58) = 0x455214;\n            fcn.00434aa0();\n            *(*0x20 + -0x58) = 0x455219;\n            fcn.004348c0();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x45522a;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x455239;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1660
    },
    "00455260": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.00455260(void)\n\n{\n    uint64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == -1) {\n                return 0x40a0c0;\n            }\n            for (iVar2 = 0x56a3e0; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n                if ((*(iVar2 + 0x118) < in_RAX || *(iVar2 + 0x118) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x120) && *(iVar2 + 0x120) != in_RAX)) goto code_r0x004552c0;\n            }\n            iVar2 = 0;\ncode_r0x004552c0:\n            if (iVar2 != 0) {\n                *(*0x20 + -0x50) = 0x455399;\n                iVar2 = fcn.0044acc0();\n                return iVar2;\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x50) = 0x4552e5;\n            fcn.0040a360();\n            *(*0x20 + -0x50) = 0x4552fc;\n            puVar1 = fcn.0040ee20(*(*0x20 + 0x10));\n            *(*0x20 + -0x18) = *puVar1;\n            *(*0x20 + -0x50) = 0x455313;\n            fcn.0040a580();\n            if (*(*0x20 + -0x18) != 0) {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x50) = 0x455325;\n            fcn.00434840();\n            *(*0x20 + -0x50) = 0x455336;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x455345;\n            fcn.00434fa0();\n            *(*0x20 + -0x50) = 0x455356;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x455365;\n            fcn.00434fa0();\n            *(*0x20 + -0x50) = 0x455376;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x45537b;\n            fcn.004348c0();\n            iVar2 = 0x56a3e0;\n            while (iVar2 != 0) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = *(iVar2 + 0x118);\n                *(*0x20 + -0x28) = *(iVar2 + 0x120);\n                *(*0x20 + -0x50) = 0x4553c5;\n                fcn.00434840();\n                *(*0x20 + -0x50) = 0x4553d6;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x4553e5;\n                fcn.00434fa0();\n                *(*0x20 + -0x50) = 0x4553f6;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x455405;\n                fcn.00434fa0();\n                *(*0x20 + -0x50) = 0x45540a;\n                fcn.00434aa0();\n                *(*0x20 + -0x50) = 0x45540f;\n                fcn.004348c0();\n                iVar2 = *(*(*0x20 + -0x10) + 0x220);\n            }\n            unaff_EBX = 0x2e;\n            *(*0x20 + -0x50) = 0x45543a;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x455449;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1171
    },
    "0047d020": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0047d020(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x28) = *0x57f450;\n            *(*0x20 + -0x60) = 0x47d059;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x60) = 0x47d08f;\n                uVar2 = fcn.00458d40(iVar1);\n                if (((uVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x60) = 0x47d0cf;\n                    fcn.00409d20();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x60) = 0x47d105;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x47d11a;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 585
    },
    "00404300": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00404300(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RSI;\n    int64_t iVar9;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045ea60();\n        iStackX8 = in_RAX;\n    }\n    uVar8 = *(in_RAX + 8);\n    if (uVar8 == 0) {\n        return;\n    }\n    if (uVar8 <= arg1) {\n        return;\n    }\n    if (uVar8 - arg1 < unaff_RDI) {\n        unaff_RDI = uVar8 - arg1;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00404220(arg1);\n        return;\n    }\n    uVar7 = *(in_RAX + 0x17) & 0x1f;\n    uVar8 = uVar7;\n    cVar6 = uVar7;\n    if (cVar6 == '\\x11') {\n        iStackX8 = in_RAX;\n        for (uVar8 = 0; uVar8 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != uVar8; uVar8 = uVar8 + 1) {\n            if (arg1 <= **(in_RAX + 0x30) && **(in_RAX + 0x30) != arg1) {\n                fcn.00404300(arg1);\n                in_RAX = iStackX8;\n            }\n            uVar4 = **(in_RAX + 0x30);\n            uVar5 = arg1;\n            if (uVar4 < arg1) {\n                uVar5 = uVar4;\n            }\n            unaff_RSI = uVar4 - uVar5;\n            arg1 = arg1 - uVar5;\n            if (unaff_RDI <= unaff_RSI) {\n                return;\n            }\ncode_r0x00404465:\n            unaff_RDI = unaff_RDI - unaff_RSI;\n        }\n    }\n    else {\n        if (cVar6 != '\\x19') {\n            in_RAX = fcn.004330a0();\n            arg1 = in_R8;\n            goto code_r0x00404465;\n        }\n        iVar1 = *(in_RAX + 0x40);\n        iVar9 = *(in_RAX + 0x38);\n        if (iVar1 != 0) {\n            iVar3 = 0;\n            while( true ) {\n                puVar2 = *(iVar9 + 8);\n                if (arg1 <= *puVar2 && *puVar2 != arg1) {\n                    fcn.00404300(arg1);\n                }\n                uVar8 = *puVar2;\n                uVar4 = arg1;\n                if (uVar8 < arg1) {\n                    uVar4 = uVar8;\n                }\n                arg1 = arg1 - uVar4;\n                if (unaff_RDI <= uVar8 - uVar4) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n                unaff_RDI = unaff_RDI - (uVar8 - uVar4);\n                if (iVar1 <= iVar3) break;\n                iVar9 = iVar9 + 0x18;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 875
    },
    "0040c640": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040c640(void)\n\n{\n    code *pcVar1;\n    uchar auVar2 [16];\n    double dVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    double dVar5;\n    \n    if (in_RAX < 0x7000001) {\n        if (in_RAX == 0) {\n            return 0;\n        }\n    }\n    else {\n        in_RAX = 0x7000000;\n    }\n    uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar2 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n    dVar3 = (((SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) << 0x1a) >> 0x20) + 1;\n    uVar4 = SUB124(ZEXT812(dVar3) >> 0x20, 0) >> 0xf & 0x1f;\n    dVar5 = *(uVar4 * 8 + 0x568d80);\n    if (uVar4 + 1 < 0x21) {\n        dVar5 = (((dVar3 >> 0x34 & 0x7ff) - 0x3ff) + dVar5 +\n                *0x4f99b8 * (dVar3 >> 0x1b & 0xfffff) * (*(uVar4 * 8 + 0x568d88) - dVar5)) - *0x4f9a30;\n        if (0.0 < dVar5) {\n            dVar5 = 0.0;\n        }\n        return dVar5 * in_RAX * *0x4f9a78 + 1;\n    }\n    fcn.0045ca60(0x21);\n    pcVar1 = swi(3);\n    uVar4 = (*pcVar1)();\n    return uVar4;\n}\n",
        "token_count": 509
    },
    "00472240": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.00472240(void)\n\n{\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((*(in_RAX + 0x17) & 0x1f) == 0x14) {\n        return *(in_RAX + 0x40);\n    }\n    fcn.004721c0();\n    return unaff_RBX;\n}\n",
        "token_count": 141
    },
    "00474a40": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.00474a40(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            uVar3 = arg1 & 0x1f;\n            if (uVar3 == 0x14) {\n                *(*0x20 + -0x48) = 0x474afd;\n                iVar2 = fcn.00472240();\n                if (iVar2 == 0) {\n                    iVar2 = **(*0x20 + -0x20);\n                    iVar4 = (*(*0x20 + -0x20))[1];\n                }\n                else {\n                    iVar2 = **(*0x20 + -0x20);\n                    iVar4 = (*(*0x20 + -0x20))[1];\n                    if (iVar2 != 0) {\n                        iVar2 = *(iVar2 + 8);\n                    }\n                }\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x10) = iVar4;\n                iVar2 = *(*0x20 + -0x18);\n                if (iVar2 == 0) {\n                    iVar2 = 0;\n                }\n                return iVar2;\n            }\n            if (uVar3 == 0x16) {\n                if ((arg1 >> 7 & 1) == 0) goto code_r0x00474ac1;\n                if ((*(in_RAX + 0x17) & 0x20) == 0) {\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x48) = 0x474aa7;\n                    cVar1 = fcn.004572c0();\n                    if (cVar1 == '\\0') {\n                        *(*0x20 + -0x48) = 0x474baa;\n                        fcn.00432920();\n                        goto code_r0x00474baa;\n                    }\n                    in_RAX = *(*0x20 + -0x28);\n                    unaff_RBX = *(*0x20 + -0x20);\n                }\n                unaff_RBX = *unaff_RBX;\ncode_r0x00474ac1:\n                if (unaff_RBX == NULL) {\n                    return 0;\n                }\n                return *(in_RAX + 0x30);\n            }\ncode_r0x00474baa:\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x48) = 0x474bbb;\n            unaff_RBX = fcn.0040c440();\n            unaff_RBX[1] = 0x12;\n            *unaff_RBX = 0x4cb9b0;\n            arg1 = *(*0x20 + -0x30);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x48) = 0x474be5;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x474bfa;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 998
    },
    "00474d60": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.00474d60(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = arg1 & 0x1f;\n            if (arg1 == 0x11) {\n                if (unaff_RDI <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != unaff_RDI) {\n                    return *(in_RAX + 0x30);\n                }\n            }\n            else {\n                if (arg1 == 0x17) {\n                    if (unaff_RDI <= *(unaff_RBX + 8) && *(unaff_RBX + 8) != unaff_RDI) {\n                        return *(in_RAX + 0x30);\n                    }\n                }\n                else {\n                    if (arg1 == 0x18) {\n                        if (unaff_RDI <= *(unaff_RBX + 8) && *(unaff_RBX + 8) != unaff_RDI) {\n                            return *0x57eef8;\n                        }\n                        *(*0x20 + -0x28) = 0x474e7f;\n                        fcn.00432920();\n                    }\n                    *(*0x20 + -0x10) = arg1;\n                    *(*0x20 + -0x28) = 0x474e90;\n                    puVar1 = fcn.0040c440();\n                    puVar1[1] = 0x13;\n                    *puVar1 = 0x4cc0fb;\n                    arg1 = *(*0x20 + -0x10);\n                    puVar1[2] = arg1;\n                    *(*0x20 + -0x28) = 0x474eba;\n                    fcn.00432920();\n                }\n                *(*0x20 + -0x28) = 0x474ecd;\n                fcn.00432920();\n            }\n            unaff_RBX = 0x4f9d38;\n            *(*0x20 + -0x28) = 0x474ee5;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x474eff;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 798
    },
    "00474f20": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.00474f20(uint64_t arg1)\n\n{\n    uint64_t in_RAX;\n    int64_t iVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 != 0) {\n                if ((unaff_DIL == '\\0') || ((arg1 & 0x60) == 0)) {\n                    if ((arg1 >> 9 & 1) != 0) {\n                        unaff_RBX = 0x9;\n                        *(*0x20 + -0x40) = 0x474f7d;\n                        fcn.00471600(in_RAX);\n                        arg1 = in_RAX;\n                    }\n                    if ((arg1 & 0x1f) == 0x14) {\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x40) = 0x474f96;\n                        iVar1 = fcn.004756a0(arg1);\n                        if (iVar1 != 0) {\n                            iVar1 = **(*0x20 + -0x10);\n                            if (iVar1 != 0) {\n                                iVar1 = *(iVar1 + 8);\n                            }\n                            return iVar1;\n                        }\n                        return **(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x40) = 0x474fdb;\n                    iVar1 = fcn.004733c0(arg1);\n                    return iVar1;\n                }\n                *(*0x20 + -0x40) = 0x474ff8;\n                fcn.00432920();\n            }\n            *(*0x20 + -0x40) = 0x475005;\n            unaff_RBX = fcn.0040c440();\n            unaff_RBX[1] = 0x17;\n            arg1 = 0x4cdafd;\n            *unaff_RBX = 0x4cdafd;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x40) = 0x47502e;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        puVar2[0x20] = unaff_DIL;\n        *(puVar2 + -8) = 0x475048;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_DIL = puVar2[0x20];\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 785
    },
    "00475ca0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.00475ca0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    code *noname_1;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((arg1 & 0x1f) != 0) {\n        if ((arg1 & 0x1f) == 0x18) {\n            return *unaff_RBX;\n        }\n        iVar1 = fcn.00475d80(arg1);\n        noname_1 = *(iVar1 + 0xf8);\n        (*noname_1)();\n        uVar2 = fcn.004486c0(1, noname_1, 0x4c7fcf, 7);\n        return uVar2;\n    }\n    return 0x4ca2f7;\n}\n",
        "token_count": 236
    },
    "00475d80": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.00475d80(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 != 0) {\n                if ((arg1 >> 9 & 1) == 0) {\n                    return 0x4fa5c0;\n                }\n                uVar1 = arg1 >> 10;\n                if ((*(in_RAX + 0x17) & 0x1f) == 0x14) {\n                    if (uVar1 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != uVar1) {\n                        *(*0x20 + -0x30) = 0x475ddd;\n                        fcn.00457ec0();\n                        return 0x4fa5c0;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x30) = 0x475e05;\n                    fcn.004721c0();\n                    if (*(*0x20 + -0x18) < unaff_RBX) {\n                        *(*0x20 + -0x30) = 0x475e25;\n                        fcn.00457ec0();\n                        return 0x4fa5c0;\n                    }\n                    *(*0x20 + -0x30) = 0x475e65;\n                    fcn.00432920();\n                }\n                *(*0x20 + -0x30) = 0x475e78;\n                fcn.00432920();\n            }\n            *(*0x20 + -0x30) = 0x475e85;\n            unaff_RBX = fcn.0040c440();\n            unaff_RBX[1] = 0x12;\n            arg1 = 0x4cb9c2;\n            *unaff_RBX = 0x4cb9c2;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x30) = 0x475eae;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x475ec5;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 778
    },
    "00408820": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00408820(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uchar uVar6;\n    uchar uVar7;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x130) = 0x408856;\n            fcn.0044b1a0();\n            *(*0x20 + -0x130) = 0x40885b;\n            uVar1 = fcn.0044b920();\n            *(*0x20 + -0xa8) = uVar1;\n            *(*0x20 + -0xf8) = unaff_RBX;\n            *(*0x20 + -0x128) = uVar1;\n            *(*0x20 + -0x120) = unaff_RBX;\n            *(*0x20 + -0x118) = 0x28;\n            *(*0x20 + -0x130) = 0x40887b;\n            fcn.00402320(param_1, param_2);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar4 = *(*0x20 + -0x110);\n            if (-1 < iVar4) {\n                uVar2 = iVar4 - 1;\n                param_2 = *(*0x20 + -0xf8);\n                if (uVar2 <= param_2) {\n                    arg1_00 = iVar4 + 2;\n                    uVar6 = param_2 < arg1_00;\n                    if (arg1_00 < param_2) goto code_r0x004088db;\n                    do {\n                        uVar6 = 0;\n                        iVar4 = 0x31;\n                        *(*0x20 + -0x130) = 0x4088d6;\n                        fcn.00448620(0x31);\n                        *(*0x20 + -0x130) = 0x4088db;\n                        uVar2 = fcn.004330a0();\ncode_r0x004088db:\n                        if (uVar6) goto code_r0x00408b65;\n                        if (arg1_00 < uVar2) goto code_r0x00408b59;\n                        iVar3 = *(*0x20 + -0xa8);\n                    } while ((CONCAT11(*(iVar4 + iVar3), *(iVar4 + -1 + iVar3)) != 0x282e) ||\n                            (*(iVar4 + 1 + iVar3) != '*'));\n                    *(*0x20 + -0x100) = uVar2;\n                    param_2 = param_2 - iVar4;\n                    *(*0x20 + -0xf0) = param_2;\n                    iVar4 = param_2 - 2;\n                    *(*0x20 + -0xf8) = iVar4;\n                    iVar3 = (-iVar4 >> 0x3f & arg1_00) + iVar3;\n                    *(*0x20 + -0xa0) = iVar3;\n                    *(*0x20 + -0x128) = iVar3;\n                    *(*0x20 + -0x120) = iVar4;\n                    *(*0x20 + -0x118) = 0x29;\n                    *(*0x20 + -0x130) = 0x40895e;\n                    fcn.00402320(iVar4, param_2);\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    uVar2 = *(*0x20 + -0x110);\n                    if (-1 < uVar2) {\n                        arg1 = uVar2 + 2;\n                        param_2 = *(*0x20 + -0xf8);\n                        uVar6 = arg1 < param_2;\n                        uVar7 = arg1 == param_2;\n                        if (arg1 < param_2) goto code_r0x004089ba;\n                        do {\n                            uVar6 = 0;\n                            uVar7 = 1;\n                            arg1 = 0x2e;\n                            *(*0x20 + -0x130) = 0x4089b5;\n                            fcn.00448620(0x2e);\n                            *(*0x20 + -0x130) = 0x4089ba;\n                            uVar2 = fcn.004330a0();\ncode_r0x004089ba:\n                            if (!uVar6 && !uVar7) goto code_r0x00408b2c;\n                            if (arg1 < uVar2) goto code_r0x00408b27;\n                            iVar4 = *(*0x20 + -0xa0);\n                            arg1_00 = *(iVar4 + uVar2);\n                        } while (*(iVar4 + uVar2) != 0x2e29);\n                        *(*0x20 + -0x138) = unaff_RBP;\n                        *(*0x20 + -0x130) = 0x408a0f;\n                        iVar3 = fcn.0045ccd9();\n                        unaff_RBP = *(*0x20 + -0x138);\n                        *(*0x20 + -0x98) = 0x4c9c86;\n                        *(*0x20 + -0x90) = 0xd;\n                        *(*0x20 + -0x88) = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x80) = *(*0x20 + -0x100);\n                        *(*0x20 + -0x78) = 0x4c790d;\n                        *(*0x20 + -0x70) = 1;\n                        *(*0x20 + -0x68) = iVar4;\n                        *(*0x20 + -0x60) = iVar3;\n                        *(*0x20 + -0x58) = 0x4c790d;\n                        *(*0x20 + -0x50) = 1;\n                        arg1_00 = (*(*0x20 + -0xf0) - iVar3) - 4;\n                        *(*0x20 + -0x48) = (-arg1_00 >> 0x3f & arg1) + iVar4;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x38) = 0x4cbabf;\n                        *(*0x20 + -0x30) = 0x13;\n                        *(*0x20 + -0x28) = iVar4;\n                        *(*0x20 + -0x20) = iVar3;\n                        param_2 = 0x4c8288;\n                        *(*0x20 + -0x18) = 0x4c8288;\n                        *(*0x20 + -0x10) = 8;\n                        arg1 = 9;\n                        *(*0x20 + -0x130) = 0x408b13;\n                        fcn.00448380(9);\n                        *(*0x20 + -0x130) = 0x408b18;\n                        fcn.00409da0();\n                        *(*0x20 + -0x130) = 0x408b27;\n                        fcn.00432920();\ncode_r0x00408b27:\n                        *(*0x20 + -0x130) = 0x408b2c;\n                        fcn.0045cb00(arg1);\ncode_r0x00408b2c:\n                        *(*0x20 + -0x130) = 0x408b31;\n                        fcn.0045ca80(arg1, param_2);\n                    }\n                    *(*0x20 + -0x130) = 0x408b54;\n                    fcn.00448620(0x13);\n                    *(*0x20 + -0x130) = 0x408b59;\n                    fcn.004330a0();\ncode_r0x00408b59:\n                    *(*0x20 + -0x130) = 0x408b65;\n                    fcn.0045cb00(arg1_00);\ncode_r0x00408b65:\n                    *(*0x20 + -0x130) = 0x408b6d;\n                    uVar2 = fcn.0045ca80(arg1_00, param_2);\n                }\n                *(*0x20 + -0x130) = 0x408b75;\n                fcn.0045ca80(uVar2, param_2);\n            }\n            unaff_RBX = 0x4cc0af;\n            param_1 = 0x13;\n            *(*0x20 + -0x130) = 0x408b98;\n            fcn.00448620(0x13);\n            *(*0x20 + -0x130) = 0x408b9d;\n            fcn.004330a0();\n        }\n        *(puVar5 + -8) = 0x408ba5;\n        fcn.0045a360();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2139
    },
    "0041f1c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.0041f1c0(void)\n\n{\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    uint64_t uStack72;\n    uchar auStack64 [16];\n    ulong uStack48;\n    uchar *puStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    auStack64 = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    uStack72 = 0;\n    while (uStack72 < unaff_RBX) {\n        if (auStack64._0_8_ + 0x800000000000U < auStack64._8_8_ + 0x800000000000U) {\n            auStack64._8_8_ = auStack64._8_8_ - auStack64._0_8_;\n        }\n        else {\n            auStack64._8_8_ = 0;\n        }\n        if (auStack64._8_8_ == 0) {\n            iVar1 = fcn.0041f6c0();\n            auStack64 = CONCAT88(unaff_RBX, iVar1);\n            if (iVar1 + 0x800000000000U < unaff_RBX + 0x800000000000) {\n                iVar1 = unaff_RBX - iVar1;\n            }\n            else {\n                iVar1 = 0;\n            }\n            if (iVar1 == 0) break;\n        }\n        uStack48 = 0x41f340;\n        puStack32 = auStack64;\n        auStack24 = CONCAT88(&uStack72, unaff_RBX);\n        fcn.0045a220();\n    }\n    fcn.0041f7e0(auStack64._8_8_);\n    return uStack72;\n}\n",
        "token_count": 505
    },
    "0041f6c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0041f6c0(void)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    iVar2 = *(in_RAX + 0x100f0);\n    uVar1 = fcn.0042bac0();\n    if (uVar1 + 0x800000000000 < iVar2 + 0x800000000000U) {\n        iVar2 = iVar2 - uVar1;\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        fcn.0040a580();\n        return uVar1;\n    }\n    fcn.0042bb40();\n    fcn.0040a580();\n    return uVar1 & 0xffffffffffc00000;\n}\n",
        "token_count": 247
    },
    "0041fd40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.0041fd40(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x20) = unaff_RBX;\n            uVar3 = *(in_RAX + 0x10110);\n            *(*0x20 + -0x50) = 0x41fd85;\n            fcn.0040a360(arg1, uVar3);\n            arg1 = *(*(*0x20 + 8) + 0x68);\n            unaff_RBX = *(*(*0x20 + 8) + 0x60);\n            unaff_RSI = *(*0x20 + -0x10);\n            unaff_RDI = unaff_RSI + 0x7fffffffffff;\n            uVar2 = unaff_RDI >> 0x16;\n            if (uVar2 < arg1) {\n                uVar1 = *(unaff_RBX + uVar2 * 8);\n                if (uVar1 < 0) {\n                    arg1 = 0x200000;\n                }\n                else {\n                    arg1 = uVar1 >> 0x15 & 0x1fffff;\n                }\n                *(*0x20 + -0x10) = uVar2;\n                if (arg1 < *(*0x20 + 0x20)) goto code_r0x0041fe85;\n                unaff_RDI = unaff_RDI >> 0x23;\n                if (unaff_RDI < 0x2000) {\n                    uVar2 = (unaff_RSI - 1U & 0x3fffff) >> 0xd;\n                    *(*0x20 + -0x50) = 0x41fe28;\n                    uVar3 = fcn.00420420(*(*0x20 + 0x20));\n                    if (uVar2 != 0) {\n                        *(*0x20 + -0x28) = uVar2;\n                        *(*0x20 + -0x50) = 0x41fe4e;\n                        uVar3 = fcn.0041ff20(uVar3);\n                        *(*0x20 + -0x10) = uVar3;\n                        *(*0x20 + -0x50) = 0x41fe68;\n                        fcn.0040a580();\n                        return *(*0x20 + -0x28) << 0xd;\n                    }\ncode_r0x0041fe85:\n                    *(*0x20 + -0x50) = 0x41fe92;\n                    fcn.0040a580();\n                    return 0;\n                }\n                *(*0x20 + -0x50) = 0x41fec7;\n                fcn.0045ca60(0x2000);\n            }\n            *(*0x20 + -0x50) = 0x41fecf;\n            in_RAX = fcn.0045ca60(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + -8) = 0x41feee;\n        fcn.0045ea60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1069
    },
    "00420420": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00420420(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (((arg1 - 1 & arg1) == 0) && (arg1 != 0)) {\n                if (arg1 < 0x41) {\n                    uVar4 = arg1;\n                    if (unaff_RDI != 0) {\n                        uVar4 = -arg1 & (arg1 + unaff_RDI) - 1;\n                    }\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar4;\n                    uVar4 = unaff_RBX >> 6;\n                    while( true ) {\n                        *(*0x20 + -0x28) = uVar4;\n                        bVar9 = uVar4 < 0;\n                        if (bVar9) break;\n                        if (7 < uVar4) goto code_r0x004206a8;\n                        uVar3 = *(in_RAX + uVar4 * 8);\n                        uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n                        *(*0x20 + -0x50) = 0x4204d1;\n                        iVar2 = fcn.00420120(uVar3 | uVar4, arg1);\n                        if (iVar2 != -1) {\n                            bVar9 = *(*0x20 + -0x28) < 0;\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            uVar4 = *(*0x20 + -0x28);\n                            break;\n                        }\n                        uVar4 = *(*0x20 + -0x28) - 1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    if (bVar9) {\n                        return 0;\n                    }\n                    if (uVar4 < 8) break;\n                    *(*0x20 + -0x50) = 0x4206a8;\n                    fcn.0045ca40(8);\ncode_r0x004206a8:\n                    arg1 = 8;\n                    *(*0x20 + -0x50) = 0x4206b5;\n                    fcn.0045ca40(8);\n                }\n                *(*0x20 + -0x50) = 0x4206ba;\n                fcn.00434840();\n                *(*0x20 + -0x50) = 0x4206cb;\n                fcn.00435140();\n                *(*0x20 + -0x50) = 0x4206d5;\n                fcn.00434e40();\n                *(*0x20 + -0x50) = 0x4206da;\n                fcn.00434aa0();\n                *(*0x20 + -0x50) = 0x4206df;\n                fcn.004348c0();\n                *(*0x20 + -0x50) = 0x4206f0;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x50) = 0x4206f5;\n            fcn.00434840();\n            *(*0x20 + -0x50) = 0x420706;\n            fcn.00435140();\n            *(*0x20 + -0x50) = 0x420710;\n            fcn.00434e40();\n            *(*0x20 + -0x50) = 0x420715;\n            fcn.00434aa0();\n            *(*0x20 + -0x50) = 0x42071a;\n            fcn.004348c0();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x50) = 0x42072b;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x420745;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    uVar3 = *(in_RAX + uVar4 * 8);\n    uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n    *(*0x20 + -0x50) = 0x42051e;\n    uVar4 = fcn.00420120(uVar3 | uVar4, arg1);\n    uVar3 = ~uVar4;\n    iVar2 = 0x3f;\n    if (uVar3 != 0) {\n        for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n        }\n    }\n    if (uVar3 == 0) {\n        iVar2 = -1;\n    }\n    iVar1 = *(*0x20 + -0x28);\n    uVar3 = iVar2 + iVar1 * 0x40 + 1;\n    iVar7 = iVar2 + iVar1 * 0x40 + 1;\n    uVar4 = uVar4 << (-(iVar2 + '\\x01') & 0x3fU) & -(-(iVar2 + -0x3f) < 0x40);\n    if (uVar4 == 0) {\n        *(*0x20 + -0x20) = uVar3;\n        *(*0x20 + -0x18) = iVar7;\n        uVar4 = iVar2 + 1;\n        while (-1 < iVar1 + -1) {\n            *(*0x20 + -0x30) = iVar1 + -1;\n            *(*0x20 + -0x38) = uVar4;\n            *(*0x20 + -0x50) = 0x4205ef;\n            uVar3 = fcn.00420120();\n            iVar2 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                }\n            }\n            if (uVar3 == 0) {\n                iVar2 = -1;\n            }\n            uVar4 = (*(*0x20 + -0x38) - (iVar2 + 1)) + 0x40;\n            if (uVar3 != 0) {\n                iVar7 = *(*0x20 + -0x18);\n                uVar3 = *(*0x20 + -0x20);\n                break;\n            }\n            iVar7 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x20);\n            iVar1 = *(*0x20 + -0x30);\n        }\n    }\n    else {\n        iVar2 = 0x3f;\n        if (uVar4 != 0) {\n            for (; uVar4 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n            }\n        }\n        if (uVar4 == 0) {\n            iVar2 = -1;\n        }\n        uVar4 = -(iVar2 + -0x3f);\n    }\n    uVar8 = uVar4;\n    if (*(*0x20 + -0x10) < uVar4) {\n        uVar8 = *(*0x20 + -0x10);\n    }\n    uVar8 = iVar7 - uVar8;\n    if ((((0x2000 < *0x5d3cd0) && (*0x5d3cd8 < *0x5d3cd0)) &&\n        (uVar6 = -(*0x5d3cd0 >> 0xd),  ((uVar8 + (*0x5d3cd0 >> 0xd)) - 1 & uVar6) <= uVar3)) &&\n       (uVar6 = uVar6 & uVar8,  iVar7 - uVar4 <= uVar6)) {\n        uVar8 = uVar6;\n    }\n    return uVar8;\n}\n",
        "token_count": 2099
    },
    "00426640": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00426640(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = arg1 + unaff_RBX + 0x3fffff & 0xffffffffffc00000;\n            *(*0x20 + -0x40) = uVar3;\n            *(*0x20 + -0x48) = unaff_RBX & 0xffffffffffc00000;\n            *(*0x20 + -0x70) = 0x426694;\n            fcn.004289c0(uVar3);\n            iVar2 = *(*0x20 + 8);\n            iVar1 = *(*0x20 + -0x48);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            if ((*(iVar2 + 0x10080) == 0) || (uVar3 < *(iVar2 + 0x10080))) {\n                *(iVar2 + 0x10080) = uVar3;\n            }\n            *(*0x20 + -0x18) = iVar1 + 0x800000000000U;\n            *(*0x20 + -0x20) = uVar3;\n            iVar1 = *(*0x20 + -0x40);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            *(*0x20 + -0x28) = uVar3;\n            if (*(iVar2 + 0x10088) < uVar3) {\n                *(iVar2 + 0x10088) = uVar3;\n            }\n            *(*0x20 + -0x70) = 0x426705;\n            fcn.0042b080();\n            *(*0x20 + -0x70) = 0x426725;\n            fcn.0042b560(iVar1);\n            iVar2 = *(*0x20 + 8);\n            if (*(*0x20 + -0x18) < *(iVar2 + 0x10078) + 0x800000000000U) {\n                unaff_RBX = *(*0x20 + -0x48);\n                *(iVar2 + 0x10078) = unaff_RBX;\n            }\n            else {\n                unaff_RBX = *(*0x20 + -0x48);\n            }\n            uVar5 = *(*0x20 + -0x28);\n            uVar3 = *(*0x20 + -0x20);\ncode_r0x004267aa:\n            if (uVar5 <= uVar3) {\n                *(*0x20 + -0x70) = 0x42683e;\n                fcn.004268a0(*(*0x20 + 0x18) >> 0xd);\n                return;\n            }\n            uVar5 = uVar3 >> 0xd;\n            if (0x1fff < uVar5) goto code_r0x00426859;\n            *(*0x20 + -0x30) = uVar3;\n            if (*(iVar2 + 0x78 + uVar5 * 8) != 0) {\ncode_r0x00426767:\n                *(*0x20 + -0x70) = 0x42678f;\n                fcn.004295e0(0x200);\n                uVar3 = *(*0x20 + -0x30) + 1;\n                uVar5 = *(*0x20 + -0x28);\n                iVar2 = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + -0x48);\n                goto code_r0x004267aa;\n            }\n            *(*0x20 + -0x38) = uVar5;\n            *(*0x20 + -0x10) = iVar2 + uVar5 * 8 + 0x78;\n            *(*0x20 + -0x70) = 0x426805;\n            iVar2 = fcn.00415420();\n            if (iVar2 != 0) {\n                **(*0x20 + -0x10) = iVar2;\n                goto code_r0x00426767;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x70) = 0x426859;\n            fcn.004330a0();\ncode_r0x00426859:\n            arg1 = 0x2000;\n            *(*0x20 + -0x70) = 0x426866;\n            in_RAX = fcn.0045ca60(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x42687b;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1315
    },
    "00426e80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00426e80(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t in_RDX;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar1 = unaff_RBX;\n            uVar9 = unaff_RBX + 0x800000000000;\n            uVar10 = uVar9 >> 0x16;\n            uVar6 = unaff_RBX + arg1 * 0x2000 + 0x7fffffffffff;\n            uVar7 = uVar6 >> 0x16;\n            unaff_RBX = (uVar1 & 0x3fffff) >> 0xd;\n            *(*0x20 + -0x20) = unaff_RBX;\n            uVar8 = ((uVar1 + arg1 * 0x2000) - 1 & 0x3fffff) >> 0xd;\n            if (uVar7 == uVar10) {\n                if (0x1fff < uVar9 >> 0x23) {\n                    *(*0x20 + -0x90) = 0x42708b;\n                    fcn.0045ca60(0x2000);\n                    goto code_r0x0042708b;\n                }\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0x48) = (uVar10 & 0x1fff) << 7;\n                iVar3 = (uVar8 - unaff_RBX) + 1;\n                *(*0x20 + -0x50) = iVar3;\n                *(*0x20 + -0x90) = 0x42700f;\n                uVar2 = fcn.00429800(iVar3);\n                *(*0x20 + -0x58) = uVar2;\n                *(*0x20 + -0x90) = 0x427033;\n                fcn.00429f20(*(*0x20 + -0x50));\n                iVar3 = *(*0x20 + -0x58);\ncode_r0x00427038:\n                *(*0x20 + -0x68) = iVar3;\n                *(*0x20 + -0x90) = 0x427065;\n                fcn.004268a0(*(*0x20 + 0x18));\n                return *(*0x20 + -0x68) << 0xd;\n            }\n            if (uVar9 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x28) = uVar6;\n                *(*0x20 + -0x30) = uVar8;\n                *(*0x20 + -0x38) = uVar10;\n                *(*0x20 + -0x40) = uVar7;\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0x48) = (uVar10 & 0x1fff) << 7;\n                *(*0x20 + -0x50) = -(unaff_RBX - 0x200);\n                *(*0x20 + -0x90) = 0x426f7f;\n                uVar2 = fcn.00429800(-(unaff_RBX - 0x200));\n                *(*0x20 + -0x58) = uVar2;\n                unaff_RBX = *(*0x20 + -0x20);\n                *(*0x20 + -0x90) = 0x426fa5;\n                fcn.00429f20(*(*0x20 + -0x50));\n                iVar4 = *(*0x20 + -0x38);\n                iVar3 = *(*0x20 + 8);\n                uVar6 = *(*0x20 + -0x40);\n                uVar7 = *(*0x20 + -0x58);\n                while( true ) {\n                    in_RDX = iVar4 + 1;\n                    *(*0x20 + -0x68) = uVar7;\n                    if (uVar6 <= in_RDX) {\n                        if (0x1fff < *(*0x20 + -0x28) >> 0x23) {\n                            *(*0x20 + -0x90) = 0x4271c5;\n                            iVar4 = fcn.0045ca60(0x2000);\n                            goto code_r0x004271c5;\n                        }\n                        *(*0x20 + -0x10) = *(iVar3 + 0x78 + (*(*0x20 + -0x28) >> 0x23) * 8);\n                        *(*0x20 + -0x48) = (uVar6 & 0x1fff) << 7;\n                        *(*0x20 + -0x50) = *(*0x20 + -0x30) + 1;\n                        *(*0x20 + -0x90) = 0x427185;\n                        uVar2 = fcn.00429800(*(*0x20 + -0x30) + 1);\n                        *(*0x20 + -0x58) = uVar2;\n                        *(*0x20 + -0x90) = 0x4271a6;\n                        fcn.00429f20(*(*0x20 + -0x50));\n                        iVar3 = *(*0x20 + -0x68) + *(*0x20 + -0x58);\n                        goto code_r0x00427038;\n                    }\n                    if (0x1fff < in_RDX >> 0xd) break;\n                    *(*0x20 + -0x60) = in_RDX;\n                    iVar3 = *(iVar3 + 0x78 + (in_RDX >> 0xd) * 8);\n                    *(*0x20 + -0x10) = iVar3;\n                    iVar4 = (in_RDX & 0x1fff) * 0x80;\n                    *(*0x20 + -0x48) = iVar4;\n                    *(*0x20 + -0x18) = iVar3 + iVar4 + 0x40;\n                    unaff_RBX = 0;\n                    *(*0x20 + -0x90) = 0x427105;\n                    iVar3 = fcn.00429800(0x200);\n                    in_RDX = *(*0x20 + -0x68) + iVar3;\n                    iVar3 = *(*0x20 + -0x48) + *(*0x20 + -0x10);\n                    for (iVar4 = 0; iVar4 < 8; iVar4 = iVar4 + 1) {\ncode_r0x004271c5:\n                        *(iVar3 + iVar4 * 8) = 0xffffffffffffffff;\n                    }\n                    iVar3 = *(*0x20 + -0x18);\n                    for (iVar4 = 0; iVar4 < 8; iVar4 = iVar4 + 1) {\n                        *(iVar3 + iVar4 * 8) = 0;\n                    }\ncode_r0x0042708b:\n                    iVar4 = *(*0x20 + -0x60);\n                    iVar3 = *(*0x20 + 8);\n                    uVar6 = *(*0x20 + -0x40);\n                    uVar7 = in_RDX;\n                }\n                *(*0x20 + -0x90) = 0x4271fb;\n                fcn.0045ca60(0x2000);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x90) = 0x427208;\n            in_RAX = fcn.0045ca60(0x2000);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x42721d;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2083
    },
    "00429300": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00429300(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar9 = *(in_RAX + 0x10078);\n            uVar3 = iVar9 + 0x800000000000;\n            uVar6 = uVar3 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar6 || *(in_RAX + 0x10088) == uVar6) {\n                return 0;\n            }\n            arg1 = *(in_RAX + 0x68);\n            iVar2 = *(in_RAX + 0x60);\n            if (uVar6 < arg1) {\n                *(*0x20 + 8) = in_RAX;\n                arg1 = *(iVar2 + uVar6 * 8);\n                if (arg1 == 0) {\n                    *(*0x20 + -0x68) = 0x42937a;\n                    uVar6 = fcn.00427320();\n                    if (uVar6 == 0) {\n                        *(*(*0x20 + 8) + 0x10078) = *0x564590;\n                        return 0;\n                    }\n                    arg1 = uVar6 + 0x800000000000;\n                    if (arg1 >> 0x23 < 0x2000) {\n                        iVar2 = *(*(*0x20 + 8) + 0x78 + (arg1 >> 0x23) * 8);\n                        arg1 = (arg1 >> 0x16 & 0x1fff) * 0x80;\n                        iVar9 = iVar2 + arg1;\n                        uVar3 = (uVar6 & 0x3fffff) >> 0x13;\n                        if (uVar3 < 8) {\n                            uVar8 = *(iVar2 + arg1 + uVar3 * 8);\n                            uVar6 = uVar6 & 0xfffffffffff80000;\n                            uVar3 = *(iVar2 + arg1 + 0x40 + uVar3 * 8);\ncode_r0x004294ec:\n                            uVar8 = ~uVar8;\n                            uVar4 = (uVar6 & 0x3fffff) >> 0x13;\n                            if (uVar4 < 8) {\n                                *(*0x20 + -0x40) = uVar3;\n                                *(*0x20 + -0x38) = uVar8;\n                                *(*0x20 + -0x30) = uVar6;\n                                puVar1 = iVar9 + uVar4 * 8;\n                                *puVar1 = *puVar1 | uVar8;\n                                puVar1 = iVar9 + 0x40 + uVar4 * 8;\n                                *puVar1 = *puVar1 & ~(uVar8 & uVar3);\n                                *(*0x20 + -0x68) = 0x429534;\n                                fcn.004268a0(0x40);\n                                iVar9 = *(*0x20 + -0x30);\n                                *(*(*0x20 + 8) + 0x10078) = iVar9 + 0x7e000;\n                                return iVar9;\n                            }\n                            *(*0x20 + -0x68) = 0x42957c;\n                            fcn.0045ca60(8);\ncode_r0x0042957c:\n                            *(*0x20 + -0x68) = 0x429586;\n                            fcn.0045ca60(8);\n                            uVar3 = arg1;\n                            goto code_r0x00429586;\n                        }\n                        goto code_r0x004295a5;\n                    }\n                }\n                else {\n                    uVar3 = uVar3 >> 0x23;\n                    if (uVar3 < 0x2000) {\n                        *(*0x20 + -0x20) = uVar6;\n                        iVar2 = *(in_RAX + 0x78 + uVar3 * 8);\n                        *(*0x20 + -0x10) = iVar2;\n                        iVar7 = (uVar6 & 0x1fff) * 0x80;\n                        *(*0x20 + -0x28) = iVar7;\n                        uVar3 = iVar2 + iVar7;\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x68) = 0x42947f;\n                        arg1 = fcn.00429c20((iVar9 & 0x3fffff) >> 0xd);\n                        iVar9 = *(*0x20 + -0x10) + *(*0x20 + -0x28);\n                        if (arg1 != 0xffffffffffffffff) {\n                            uVar3 = arg1 >> 6;\n                            if (uVar3 < 8) {\n                                uVar6 = ((arg1 & 0xffffffffffffffc0) * 0x2000 + *(*0x20 + -0x20) * 0x400000) -\n                                        0x800000000000;\n                                uVar8 = *(*(*0x20 + -0x18) + uVar3 * 8);\n                                arg1 = *(*0x20 + -0x10) + *(*0x20 + -0x28) + 0x40;\n                                uVar3 = *(arg1 + uVar3 * 8);\n                                goto code_r0x004294ec;\n                            }\n                            goto code_r0x0042957c;\n                        }\ncode_r0x00429586:\n                        *(*0x20 + -0x68) = 0x429597;\n                        fcn.004330a0();\n                        arg1 = uVar3;\n                    }\n                    *(*0x20 + -0x68) = 0x4295a5;\n                    fcn.0045ca60(0x2000);\ncode_r0x004295a5:\n                    *(*0x20 + -0x68) = 0x4295af;\n                    fcn.0045ca60(8);\n                }\n                *(*0x20 + -0x68) = 0x4295bc;\n                fcn.0045ca60(0x2000);\n            }\n            *(*0x20 + -0x68) = 0x4295c7;\n            in_RAX = fcn.0045ca60(arg1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x4295d2;\n        fcn.0045ea60();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1653
    },
    "00429de0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00429de0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    \n    arg1 = arg1 >> 6;\n    uVar3 = 0;\n    iVar4 = -1;\n    iVar5 = -1;\n    do {\n        if (7 < arg1) {\n            if (unaff_RBX <= uVar3) {\n                return iVar5;\n            }\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        if (uVar1 == 0xffffffffffffffff) {\n            uVar3 = 0;\n        }\n        else {\n            if (iVar4 == -1) {\n                uVar6 = ~uVar1;\n                iVar4 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar6 == 0) {\n                    iVar4 = 0x40;\n                }\n                iVar4 = arg1 * 0x40 + iVar4;\n            }\n            if (uVar3 == 0) {\n                iVar2 = 0x3f;\n                if (uVar1 != 0) {\n                    for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    iVar2 = -1;\n                }\n                iVar5 = arg1 * 0x40 + iVar2 + 1;\n                uVar3 = -(iVar2 + -0x3f);\n            }\n            else {\n                uVar6 = 0;\n                if (uVar1 != 0) {\n                    for (; (uVar1 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    uVar6 = 0x40;\n                }\n                if (unaff_RBX <= uVar6 + uVar3) {\n                    return iVar5;\n                }\n                if (uVar6 < 0x40) {\n                    iVar2 = 0x3f;\n                    if (uVar1 != 0) {\n                        for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                        }\n                    }\n                    if (uVar1 == 0) {\n                        iVar2 = -1;\n                    }\n                    iVar5 = arg1 * 0x40 + iVar2 + 1;\n                    uVar3 = -(iVar2 + -0x3f);\n                }\n                else {\n                    uVar3 = uVar3 + 0x40;\n                }\n            }\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 677
    },
    "0042dec0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042dec0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    ulong uStack24;\n    ulong uStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar1 = fcn.0042d520(0xd);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0042d460(0x27);\n        if (iVar1 != 0) {\n            uStack24 = 0x4b78e0;\n            uStack16 = 0x4d5d68;\n            fcn.00458440(1);\n            fcn.004304e0();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0042f380": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042f380(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + -0xc) = 0;\n            if (arg1 != 0) {\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_WriteConsoleW;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x30) = arg1 & 0xffffffff;\n                *(*0x20 + -0x28) = *0x20 + -0xc;\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x50) = 0x42f3e5;\n                fcn.004305e0();\n                return;\n            }\n            *(*0x20 + -0x50) = 0x42f414;\n            in_RAX = fcn.0045ca40(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x42f42e;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 557
    },
    "004308e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004308e0(void)\n\n{\n    uint in_EAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00430660();\n    *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0xe0) = in_EAX;\n    return;\n}\n",
        "token_count": 127
    },
    "00433440": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00433440(void)\n\n{\n    fcn.0045a220();\n    fcn.0045a220();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 43
    },
    "00435140": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00435140(void)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00434920(unaff_RBX);\n    return;\n}\n",
        "token_count": 91
    },
    "00448620": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00448620(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00448380(2);\n    return;\n}\n",
        "token_count": 85
    },
    "004490c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.004490c0(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = fcn.0040ba40(0);\n    return uVar1;\n}\n",
        "token_count": 97
    },
    "0044fbc0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.0044fbc0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    code *pcVar5;\n    int32_t iVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    ulong *unaff_RDI;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x50) = 0x44fc05;\n            uVar1 = fcn.0045c460(arg1 << 3);\n            uVar4 = uVar1 & 0x1fff;\n            unaff_RDI = *(*(*0x20 + 8) + 0x20 + uVar4 * 8);\n            uVar9 = *(*0x20 + 8) + uVar4 * 8 + 0x20;\n            arg1_00 = *(*0x20 + 0x18);\n            iVar10 = *(*0x20 + 0x10);\n            while( true ) {\n                if (unaff_RDI == NULL) {\n                    iVar6 = 0;\n                    arg1_00 = uVar9;\n                    goto code_r0x0044fc77;\n                }\n                if ((unaff_RDI[1] == uVar1) && (unaff_RBX = unaff_RDI[3],  arg1_00 == unaff_RBX)) break;\ncode_r0x0044fc39:\n                unaff_RDI = *unaff_RDI;\n            }\n            if (unaff_RBX < 0x81) {\n                in_R10 = 0;\n                do {\n                    if (in_R10 < unaff_RBX) {\n                        if (*(iVar10 + in_R10 * 8) != unaff_RDI[in_R10 + 4]) goto code_r0x0044fc39;\n                    }\n                    else {\n                        iVar6 = *(unaff_RDI + 2);\n                        arg1_00 = uVar9;\ncode_r0x0044fc77:\n                        if (iVar6 != 0) {\n                            return iVar6;\n                        }\n                        *(*0x20 + -0x20) = uVar1;\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0x10) = arg1_00;\n                        *(*0x20 + -0x50) = 0x44fc94;\n                        fcn.0040a360();\n                        iVar3 = *(*0x20 + 8);\n                        pcVar5 = *(iVar3 + 0x20 + *(*0x20 + -0x28) * 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar1 = *(*0x20 + 0x18);\n                        unaff_RDI = *(*0x20 + -0x20);\n                        while( true ) {\n                            if (pcVar5 == NULL) {\n                                iVar6 = 0;\n                                goto code_r0x0044fcf7;\n                            }\n                            if ((*(pcVar5 + 8) == unaff_RDI) && (arg1_00 = *(pcVar5 + 0x18),  uVar1 == arg1_00)) break;\ncode_r0x0044fcc1:\n                            pcVar5 = *pcVar5;\n                        }\n                        if (arg1_00 < 0x81) {\n                            iVar10 = 0;\n                            do {\n                                if (iVar10 < arg1_00) {\n                                    in_R10 = *(pcVar5 + (iVar10 + 4) * 8);\n                                    if (*(unaff_RBX + iVar10 * 8) != in_R10) goto code_r0x0044fcc1;\n                                }\n                                else {\n                                    iVar6 = *(pcVar5 + 0x10);\ncode_r0x0044fcf7:\n                                    if (iVar6 != 0) {\n                                        *(*0x20 + -0x2c) = iVar6;\n                                        *(*0x20 + -0x50) = 0x44fd45;\n                                        fcn.0040a580();\n                                        return *(*0x20 + -0x2c);\n                                    }\n                                    *(iVar3 + 8) = *(iVar3 + 8) + 1;\n                                    *(*0x20 + -0x50) = 0x44fd06;\n                                    puVar2 = fcn.0044fe60();\n                                    puVar2[1] = *(*0x20 + -0x20);\n                                    iVar3 = *(*0x20 + 8);\n                                    *(puVar2 + 2) = *(iVar3 + 8);\n                                    uVar9 = *(*0x20 + 0x18);\n                                    puVar2[3] = uVar9;\n                                    if (uVar9 < 0x81) {\n                                        iVar10 = *(*0x20 + 0x10);\n                                        for (iVar7 = 0; iVar7 < uVar9; iVar7 = iVar7 + 1) {\n                                            puVar2[iVar7 + 4] = *(iVar10 + iVar7 * 8);\n                                        }\n                                        *(*0x20 + -0x18) = puVar2;\n                                        *puVar2 = *(iVar3 + 0x20 + *(*0x20 + -0x28) * 8);\n                                        *(*0x20 + -0x50) = 0x44fd85;\n                                        fcn.00403240();\n                                        *(*0x20 + -0x50) = 0x44fd91;\n                                        fcn.0040a580();\n                                        return *(*(*0x20 + -0x18) + 0x10);\n                                    }\n                                    pcVar5 = pe_nt_image_headers64;\n                                    *(*0x20 + -0x50) = 0x44fdb0;\n                                    iVar3 = fcn.0045ca80(uVar9, 0x80);\n                                    unaff_RBX = uVar1;\n                                }\n                                iVar10 = iVar10 + 1;\n                            } while( true );\n                        }\n                        *(*0x20 + -0x50) = 0x44fde5;\n                        uVar9 = arg1_00;\n                        uVar4 = fcn.0045ca80(arg1_00, 0x80);\n                    }\n                    in_R10 = in_R10 + 1;\n                } while( true );\n            }\n            *(*0x20 + -0x50) = 0x44fe1a;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045ca80(unaff_RBX, 0x80);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x44fe34;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1845
    },
    "004502c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004502c0(void)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    *(in_RAX + 0xd8) = 0;\n    *(in_RAX + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    iVar2 = fcn.00450980();\n    piVar3 = fcn.0040c440();\n    *piVar3 = iVar2 + 1;\n    uVar1 = fcn.0044fbc0(1);\n    auStack24 = ZEXT1216(CONCAT48(uVar1, *(in_RAX + 0x98)));\n    fcn.0044f180(auStack24);\n    return;\n}\n",
        "token_count": 247
    },
    "004505e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004505e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    *(in_RAX + 0xd8) = *(in_RAX + 0xd8) + 1;\n    if (*(in_RAX + 0xe0) == iVar1) {\n        uStack32 = *(in_RAX + 0x98);\n        fcn.0044f180(&uStack32);\n    }\n    else {\n        *(in_RAX + 0xe0) = iVar1;\n        auStack24 = CONCAT88(*(in_RAX + 0xd8), *(in_RAX + 0x98));\n        fcn.0044f180(auStack24);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00450700": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00450700(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    ulong uStack24;\n    uint64_t uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((in_RAX != 0) && (in_RAX < *0x585d40)) {\n        in_RAX = 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n    *(iVar1 + 0xe0) = *(*(iVar1 + 0x30) + 0xa0);\n    uStack32 = *(iVar1 + 0x98);\n    uStack24 = *(iVar1 + 0xd8);\n    uStack16 = in_RAX >> 6;\n    fcn.0044f180(&uStack32);\n    return;\n}\n",
        "token_count": 267
    },
    "00458a80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00458a80(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [8];\n    int64_t iStackX16;\n    ulong uStackX24;\n    \n    iStackX16 = 0;\n    uStackX24 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_LoadLibraryW;\n    *(iVar2 + 0x2c8) = 1;\n    *(iVar2 + 0x2d0) = auStackX8;\n    fcn.00403280();\n    iStackX16 = *(iVar2 + 0x2d8);\n    if (iStackX16 == 0) {\n        uStackX24 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043e780();\n    return;\n}\n",
        "token_count": 330
    },
    "0045cba0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045cba0(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    unaff_RDI[0x80] = in_XMM15_Da;\n    unaff_RDI[0x81] = in_XMM15_Db;\n    unaff_RDI[0x82] = in_XMM15_Dc;\n    unaff_RDI[0x83] = in_XMM15_Dd;\n    unaff_RDI[0x84] = in_XMM15_Da;\n    unaff_RDI[0x85] = in_XMM15_Db;\n    unaff_RDI[0x86] = in_XMM15_Dc;\n    unaff_RDI[0x87] = in_XMM15_Dd;\n    unaff_RDI[0x88] = in_XMM15_Da;\n    unaff_RDI[0x89] = in_XMM15_Db;\n    unaff_RDI[0x8a] = in_XMM15_Dc;\n    unaff_RDI[0x8b] = in_XMM15_Dd;\n    unaff_RDI[0x8c] = in_XMM15_Da;\n    unaff_RDI[0x8d] = in_XMM15_Db;\n    unaff_RDI[0x8e] = in_XMM15_Dc;\n    unaff_RDI[0x8f] = in_XMM15_Dd;\n    unaff_RDI[0x90] = in_XMM15_Da;\n    unaff_RDI[0x91] = in_XMM15_Db;\n    unaff_RDI[0x92] = in_XMM15_Dc;\n    unaff_RDI[0x93] = in_XMM15_Dd;\n    unaff_RDI[0x94] = in_XMM15_Da;\n    unaff_RDI[0x95] = in_XMM15_Db;\n    unaff_RDI[0x96] = in_XMM15_Dc;\n    unaff_RDI[0x97] = in_XMM15_Dd;\n    unaff_RDI[0x98] = in_XMM15_Da;\n    unaff_RDI[0x99] = in_XMM15_Db;\n    unaff_RDI[0x9a] = in_XMM15_Dc;\n    unaff_RDI[0x9b] = in_XMM15_Dd;\n    unaff_RDI[0x9c] = in_XMM15_Da;\n    unaff_RDI[0x9d] = in_XMM15_Db;\n    unaff_RDI[0x9e] = in_XMM15_Dc;\n    unaff_RDI[0x9f] = in_XMM15_Dd;\n    unaff_RDI[0xa0] = in_XMM15_Da;\n    unaff_RDI[0xa1] = in_XMM15_Db;\n    unaff_RDI[0xa2] = in_XMM15_Dc;\n    unaff_RDI[0xa3] = in_XMM15_Dd;\n    unaff_RDI[0xa4] = in_XMM15_Da;\n    unaff_RDI[0xa5] = in_XMM15_Db;\n    unaff_RDI[0xa6] = in_XMM15_Dc;\n    unaff_RDI[0xa7] = in_XMM15_Dd;\n    unaff_RDI[0xa8] = in_XMM15_Da;\n    unaff_RDI[0xa9] = in_XMM15_Db;\n    unaff_RDI[0xaa] = in_XMM15_Dc;\n    unaff_RDI[0xab] = in_XMM15_Dd;\n    unaff_RDI[0xac] = in_XMM15_Da;\n    unaff_RDI[0xad] = in_XMM15_Db;\n    unaff_RDI[0xae] = in_XMM15_Dc;\n    unaff_RDI[0xaf] = in_XMM15_Dd;\n    unaff_RDI[0xb0] = in_XMM15_Da;\n    unaff_RDI[0xb1] = in_XMM15_Db;\n    unaff_RDI[0xb2] = in_XMM15_Dc;\n    unaff_RDI[0xb3] = in_XMM15_Dd;\n    unaff_RDI[0xb4] = in_XMM15_Da;\n    unaff_RDI[0xb5] = in_XMM15_Db;\n    unaff_RDI[0xb6] = in_XMM15_Dc;\n    unaff_RDI[0xb7] = in_XMM15_Dd;\n    unaff_RDI[0xb8] = in_XMM15_Da;\n    unaff_RDI[0xb9] = in_XMM15_Db;\n    unaff_RDI[0xba] = in_XMM15_Dc;\n    unaff_RDI[0xbb] = in_XMM15_Dd;\n    unaff_RDI[0xbc] = in_XMM15_Da;\n    unaff_RDI[0xbd] = in_XMM15_Db;\n    unaff_RDI[0xbe] = in_XMM15_Dc;\n    unaff_RDI[0xbf] = in_XMM15_Dd;\n    unaff_RDI[0xc0] = in_XMM15_Da;\n    unaff_RDI[0xc1] = in_XMM15_Db;\n    unaff_RDI[0xc2] = in_XMM15_Dc;\n    unaff_RDI[0xc3] = in_XMM15_Dd;\n    unaff_RDI[0xc4] = in_XMM15_Da;\n    unaff_RDI[0xc5] = in_XMM15_Db;\n    unaff_RDI[0xc6] = in_XMM15_Dc;\n    unaff_RDI[199] = in_XMM15_Dd;\n    unaff_RDI[200] = in_XMM15_Da;\n    unaff_RDI[0xc9] = in_XMM15_Db;\n    unaff_RDI[0xca] = in_XMM15_Dc;\n    unaff_RDI[0xcb] = in_XMM15_Dd;\n    unaff_RDI[0xcc] = in_XMM15_Da;\n    unaff_RDI[0xcd] = in_XMM15_Db;\n    unaff_RDI[0xce] = in_XMM15_Dc;\n    unaff_RDI[0xcf] = in_XMM15_Dd;\n    unaff_RDI[0xd0] = in_XMM15_Da;\n    unaff_RDI[0xd1] = in_XMM15_Db;\n    unaff_RDI[0xd2] = in_XMM15_Dc;\n    unaff_RDI[0xd3] = in_XMM15_Dd;\n    unaff_RDI[0xd4] = in_XMM15_Da;\n    unaff_RDI[0xd5] = in_XMM15_Db;\n    unaff_RDI[0xd6] = in_XMM15_Dc;\n    unaff_RDI[0xd7] = in_XMM15_Dd;\n    unaff_RDI[0xd8] = in_XMM15_Da;\n    unaff_RDI[0xd9] = in_XMM15_Db;\n    unaff_RDI[0xda] = in_XMM15_Dc;\n    unaff_RDI[0xdb] = in_XMM15_Dd;\n    unaff_RDI[0xdc] = in_XMM15_Da;\n    unaff_RDI[0xdd] = in_XMM15_Db;\n    unaff_RDI[0xde] = in_XMM15_Dc;\n    unaff_RDI[0xdf] = in_XMM15_Dd;\n    unaff_RDI[0xe0] = in_XMM15_Da;\n    unaff_RDI[0xe1] = in_XMM15_Db;\n    unaff_RDI[0xe2] = in_XMM15_Dc;\n    unaff_RDI[0xe3] = in_XMM15_Dd;\n    unaff_RDI[0xe4] = in_XMM15_Da;\n    unaff_RDI[0xe5] = in_XMM15_Db;\n    unaff_RDI[0xe6] = in_XMM15_Dc;\n    unaff_RDI[0xe7] = in_XMM15_Dd;\n    unaff_RDI[0xe8] = in_XMM15_Da;\n    unaff_RDI[0xe9] = in_XMM15_Db;\n    unaff_RDI[0xea] = in_XMM15_Dc;\n    unaff_RDI[0xeb] = in_XMM15_Dd;\n    unaff_RDI[0xec] = in_XMM15_Da;\n    unaff_RDI[0xed] = in_XMM15_Db;\n    unaff_RDI[0xee] = in_XMM15_Dc;\n    unaff_RDI[0xef] = in_XMM15_Dd;\n    unaff_RDI[0xf0] = in_XMM15_Da;\n    unaff_RDI[0xf1] = in_XMM15_Db;\n    unaff_RDI[0xf2] = in_XMM15_Dc;\n    unaff_RDI[0xf3] = in_XMM15_Dd;\n    unaff_RDI[0xf4] = in_XMM15_Da;\n    unaff_RDI[0xf5] = in_XMM15_Db;\n    unaff_RDI[0xf6] = in_XMM15_Dc;\n    unaff_RDI[0xf7] = in_XMM15_Dd;\n    unaff_RDI[0xf8] = in_XMM15_Da;\n    unaff_RDI[0xf9] = in_XMM15_Db;\n    unaff_RDI[0xfa] = in_XMM15_Dc;\n    unaff_RDI[0xfb] = in_XMM15_Dd;\n    unaff_RDI[0xfc] = in_XMM15_Da;\n    unaff_RDI[0xfd] = in_XMM15_Db;\n    unaff_RDI[0xfe] = in_XMM15_Dc;\n    unaff_RDI[0xff] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4585
    },
    "0045cbee": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045cbee(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x280) = in_XMM15_Da;\n    *(unaff_RDI + 0x284) = in_XMM15_Db;\n    *(unaff_RDI + 0x288) = in_XMM15_Dc;\n    *(unaff_RDI + 0x28c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x290) = in_XMM15_Da;\n    *(unaff_RDI + 0x294) = in_XMM15_Db;\n    *(unaff_RDI + 0x298) = in_XMM15_Dc;\n    *(unaff_RDI + 0x29c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2b8) = in_XMM15_Dc;\n    *(unaff_RDI + 700) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2f0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2f4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x300) = in_XMM15_Da;\n    *(unaff_RDI + 0x304) = in_XMM15_Db;\n    *(unaff_RDI + 0x308) = in_XMM15_Dc;\n    *(unaff_RDI + 0x30c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x310) = in_XMM15_Da;\n    *(unaff_RDI + 0x314) = in_XMM15_Db;\n    *(unaff_RDI + 0x318) = in_XMM15_Dc;\n    *(unaff_RDI + 0x31c) = in_XMM15_Dd;\n    *(unaff_RDI + 800) = in_XMM15_Da;\n    *(unaff_RDI + 0x324) = in_XMM15_Db;\n    *(unaff_RDI + 0x328) = in_XMM15_Dc;\n    *(unaff_RDI + 0x32c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x330) = in_XMM15_Da;\n    *(unaff_RDI + 0x334) = in_XMM15_Db;\n    *(unaff_RDI + 0x338) = in_XMM15_Dc;\n    *(unaff_RDI + 0x33c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4101
    },
    "0045cc38": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045cc38(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 3030
    },
    "0045cc58": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045cc58(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2341
    },
    "0045cc7d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045cc7d(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2053
    },
    "0045cc94": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045cc94(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1722
    },
    "0045ccab": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045ccab(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1402
    },
    "0045ccb8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045ccb8(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x10) = in_XMM15_Da;\n    *(unaff_RDI + 0x14) = in_XMM15_Db;\n    *(unaff_RDI + 0x18) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1245
    },
    "0045ccd9": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045ccd9(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 775
    },
    "0045ccf0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045ccf0(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 460
    },
    "0045eaa0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045eaa0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    uchar auStackX8 [32];\n    uchar auStack56 [8];\n    \n    piVar1 = *(unaff_R14 + 0x20);\n    if ((piVar1 != NULL) && (*piVar1 == auStackX8)) {\n        *piVar1 = auStack56;\n    }\n    fcn.0045a500();\n    return;\n}\n",
        "token_count": 128
    },
    "004733c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004733c0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint32_t uVar2;\n    ulong *unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = in_XMM15;\n            uVar2 = arg1;\n            if ((*(in_RAX + 0x17) & 0x20) != 0) {\n                if ((uVar2 >> 7 & 1) == 0) {\n                    *(*0x20 + -0x10) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x10) = *unaff_RBX;\n                }\n                goto code_r0x0047344b;\n            }\n            if ((uVar2 >> 7 & 1) != 0) {\n                if ((uVar2 >> 8 & 1) != 0) {\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x50) = 0x47340c;\n                    uVar1 = fcn.004570c0();\n                    *(*0x20 + -0x30) = uVar1;\n                    *(*0x20 + -0x50) = 0x473425;\n                    fcn.00457220(*(*0x20 + -0x20));\n                    in_RAX = *(*0x20 + -0x28);\n                    unaff_RBX = *(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x10) = unaff_RBX;\ncode_r0x0047344b:\n                *(*0x20 + -0x18) = in_RAX;\n                return;\n            }\n            unaff_RBX = 0x4f9b88;\n            *(*0x20 + -0x50) = 0x473472;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x473487;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 736
    },
    "00479040": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00479040(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar1 = 0x14;\n    iVar4 = 0;\n    while (iVar5 = iVar1,  iVar5 <= arg1) {\n        fcn.00478ec0(iVar4);\n        iVar4 = iVar5;\n        iVar1 = iVar5 + 0x14;\n    }\n    fcn.00478ec0(iVar4);\n    iVar1 = 0x14;\n    while (iVar1 < arg1) {\n        iVar2 = iVar1 << 1;\n        iVar4 = iVar2;\n        iVar5 = 0;\n        while (iVar3 = iVar4,  iVar3 <= arg1) {\n            fcn.004791a0(iVar5);\n            iVar5 = iVar3;\n            iVar4 = iVar3 + iVar1 * 2;\n        }\n        iVar4 = iVar1 + iVar5;\n        iVar1 = iVar2;\n        if (iVar4 < arg1) {\n            fcn.004791a0(iVar5);\n        }\n    }\n    return in_RAX;\n}\n",
        "token_count": 335
    },
    "0047c080": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0047c080(void)\n\n{\n    uint64_t arg2;\n    uint32_t uVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    int64_t *arg1;\n    uint64_t arg1_00;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x47c0a5;\n            uVar2 = fcn.0047c1e0();\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x0047c0b9;\n                }\n            }\n            else {\n                uVar2 = 0;\ncode_r0x0047c0b9:\n                if (unaff_RDI != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = uVar2;\n                unaff_RBX = 100;\n                while( true ) {\n                    *(*0x20 + -0x24) = unaff_RBX;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x50) = 0x47c0f6;\n                    uVar3 = fcn.00444b80(unaff_RBX);\n                    arg1_00 = *(*0x20 + -0x20);\n                    if (arg1_00 == 0) break;\n                    *(*0x20 + -0x10) = uVar3;\n                    arg1 = *(*0x20 + -0x24);\n                    *(*0x20 + -0x50) = 0x47c11f;\n                    uVar1 = fcn.0047cb00(arg1);\n                    if ((((uVar1 == 0) && (uVar3 != 0)) && (*(uVar3 + 8) == 0x4babc0)) && (*arg1 == 0xcb)) {\n                        return 0;\n                    }\n                    unaff_RDI = *(*0x20 + -0x24);\n                    if (uVar1 <= *(*0x20 + -0x24)) {\n                        arg1_00 = uVar1;\n                        arg2 = *(*0x20 + -0x20);\n                        if (arg1_00 <= arg2) {\n                            *(*0x20 + -0x50) = 0x47c188;\n                            fcn.0047b260(arg2);\n                            *(*0x20 + -0x50) = 0x47c198;\n                            uVar2 = fcn.00448e00(arg1_00);\n                            return uVar2;\n                        }\n                        *(*0x20 + -0x50) = 0x47c1ac;\n                        fcn.0045cac0(arg1_00, arg2);\n                        unaff_RBX = uVar3;\n                        break;\n                    }\n                    unaff_RBX = uVar1;\n                }\n                *(*0x20 + -0x50) = 0x47c1b3;\n                fcn.0045ca40(arg1_00);\n            }\n            *(*0x20 + -0x50) = 0x47c1bd;\n            in_RAX = fcn.0045ca40(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x47c1cd;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 978
    },
    "0047c340": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047c3e9)\n// WARNING: Removing unreachable block (ram,0x0047c415)\n\nulong fcn.0047c340(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x218 && *0x20 + -0x218 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x298;\n            *(*0x20 + -8) = unaff_RBP;\n            uVar3 = in_RAX - 0x20000000;\n            if (uVar3 < 0x83) {\n                return *(uVar3 * 0x10 + 0x57bb80);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x260) = in_XMM15;\n            *(*0x20 + -0x2a8) = *0x20 + -8;\n            *(*0x20 + -0x2a0) = 0x47c3af;\n            uVar2 = fcn.0045cc38();\n            unaff_RBP = *(*0x20 + -0x2a8);\n            *(*0x20 + -0x2a0) = 0x47c3d8;\n            uVar3 = fcn.0047c7e0(uVar2, uVar3, 300, 300);\n            do {\n                uVar4 = uVar3;\n                iVar1 = uVar4;\n                if (iVar1 == 0) break;\n                uVar3 = iVar1 - 1;\n                if (299 < uVar3) goto code_r0x0047c4e5;\n            } while ((*(*0x20 + uVar3 * 2 + -0x260) == 10) || (*(*0x20 + uVar3 * 2 + -0x260) == 0xd));\n            uVar4 = uVar4 & 0xffffffff;\n            if (uVar4 < 0x12d) {\n                *(*0x20 + -0x2a0) = 0x47c4bb;\n                fcn.0047b260(300);\n                *(*0x20 + -0x2a0) = 0x47c4cb;\n                uVar2 = fcn.00448e00(uVar4);\n                return uVar2;\n            }\n            *(*0x20 + -0x2a0) = 0x47c4e5;\n            fcn.0045cac0(uVar4, 300);\ncode_r0x0047c4e5:\n            *(*0x20 + -0x2a0) = 0x47c4f1;\n            in_RAX = fcn.0045ca40(300);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x47c4fc;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 790
    },
    "0047c520": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0047c520(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x57f078;\n            *(*0x20 + -0x50) = 0x47c557;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x47c58c;\n                iVar2 = fcn.00458d40(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x576ca0;\n                    if ((iVar1 != 0) && (uVar3 = *0x576cb0,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x47c5c7;\n                        fcn.00409d20();\n                        uVar3 = 0x4fa138;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x47c5f2;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x47c605;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 567
    },
    "0047ca00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0047ca00(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x57f210;\n            *(*0x20 + -0x50) = 0x47ca37;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x47ca6c;\n                iVar2 = fcn.00458d40(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x576ca0;\n                    if ((iVar1 != 0) && (uVar3 = *0x576cb0,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x47caa7;\n                        fcn.00409d20();\n                        uVar3 = 0x4fa138;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x47cad2;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x47cae5;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 563
    },
    "0047cc20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0047cc20(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x57f260;\n            *(*0x20 + -0x50) = 0x47cc52;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x47cc7c;\n                uVar2 = fcn.00458d40(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x47ccc6;\n                    fcn.00409d20();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x47ccf6;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x47cd05;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 480
    },
    "0047cd20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.0047cd20(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x57f2b8;\n            *(*0x20 + -0x50) = 0x47cd52;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x47cd7c;\n                iVar2 = fcn.00458d40(iVar1);\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = 0xffffffffffffffff;\n                    *(*0x20 + -0x50) = 0x47cdc6;\n                    fcn.00409d20();\n                    iVar2 = *(*0x20 + -0x20);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x50) = 0x47cdf6;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x47ce05;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 481
    },
    "0047ce20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0047ce20(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x57f2c0;\n            *(*0x20 + -0x50) = 0x47ce53;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x47ce85;\n                uVar2 = fcn.00458d40(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x47cec6;\n                    fcn.00409d20();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x47cef6;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x47cf05;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 537
    },
    "00489520": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00489520(uchar param_1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = *(in_RAX + 0x4c);\n    *(in_RAX + 0x4c) = param_1;\n    fcn.00486de0(0x10, uVar1, 0x4caf93, 0x11);\n    *(in_RAX + 0x4c) = uVar1;\n    return;\n}\n",
        "token_count": 171
    },
    "00493680": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00493680(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x57e598;\n            *(*0x20 + -0x50) = 0x4936b3;\n            iVar1 = fcn.00492ae0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x4936e5;\n                uVar2 = fcn.00458d40(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x493726;\n                    fcn.00409d20();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x493756;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x493765;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 532
    },
    "004242a0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.004242a0(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar2 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (0x3f < uVar2) {\ncode_r0x00424379:\n        fcn.0045ca60(0x40);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar3 = *(*(in_RAX + 0x10190 + uVar2 * 8) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n    uVar2 = 0;\n    do {\n        if (arg1 <= uVar2) {\n            return;\n        }\n        uVar6 = (unaff_RBX >> 0xd) + uVar2 & 0x1ff;\n        if (uVar6 == 0) {\n            uVar4 = uVar2 * 0x2000 + unaff_RBX + 0x800000000000;\n            uVar5 = uVar4 >> 0x2a;\n            if (0x3f < uVar5) {\n                fcn.0045ca60(0x40);\n                goto code_r0x00424379;\n            }\n            iVar3 = *(*(in_RAX + 0x10190 + uVar5 * 8) + (uVar4 >> 0x16 & 0xfffff) * 8);\n        }\n        *(iVar3 + 0x20000 + uVar6 * 8) = unaff_RDI;\n        uVar2 = uVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 451
    },
    "004243a0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.004243a0(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        uVar5 = in_R10;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = 0;\n            while( true ) {\n                uVar4 = uVar5;\n                if (arg1 == 0) {\n                    return uVar5;\n                }\n                uVar8 = unaff_RBX + 0x800000000000U >> 0x2a;\n                uVar5 = in_R10;\n                if (0x3f < uVar8) break;\n                iVar2 = *(*(in_RAX + 0x10190 + uVar8 * 8) + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8);\n                uVar9 = *(iVar2 + 0x210c8);\n                uVar6 = unaff_RBX & 0x3fffff;\n                uVar8 = arg1 * 0x2000 + uVar6;\n                uVar5 = in_R10 & 0xffffff00 | uVar6 < uVar9 | uVar4;\n                if (0x400000 < uVar8) {\n                    uVar8 = 0x400000;\n                }\n                while (uVar9 < uVar8) {\n                    LOCK();\n                    puVar1 = iVar2 + 0x210c8;\n                    uVar3 = *puVar1;\n                    *puVar1 = *puVar1 ^ (uVar9 == uVar3) * (*puVar1 ^ uVar8);\n                    if (uVar9 == uVar3) break;\n                    uVar9 = *(iVar2 + 0x210c8);\n                    if ((uVar9 <= uVar8) && (uVar6 < uVar9)) {\n                        unaff_RBX = 0x33;\n                        *(*0x20 + -0x20) = 0x4244ac;\n                        fcn.004330a0();\n                        goto code_r0x004244ac;\n                    }\n                }\n                unaff_RBX = (uVar8 - uVar6) + unaff_RBX;\n                arg1 = arg1 - (uVar8 - uVar6 >> 0xd);\n                in_R10 = uVar5;\n            }\ncode_r0x004244ac:\n            arg1 = 0x40;\n            *(*0x20 + -0x20) = 0x4244b9;\n            in_RAX = fcn.0045ca60(0x40);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x4244ce;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n        in_R10 = uVar5;\n    } while( true );\n}\n",
        "token_count": 902
    },
    "004268a0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.004268a0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t noname_1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar9 = unaff_RBX + 0x800000000000;\n            *(*0x20 + -0x20) = uVar9;\n            uVar10 = uVar9 >> 0x16;\n            *(*0x20 + -0x28) = uVar10;\n            uVar8 = arg1 * 0x2000 + unaff_RBX + 0x7fffffffffff;\n            *(*0x20 + -0x30) = uVar8;\n            uVar8 = uVar8 >> 0x16;\n            if (uVar8 == uVar10) {\n                uVar5 = *(in_RAX + 0x68);\n                noname_1 = *(in_RAX + 0x60);\n                if (uVar5 <= uVar10) goto code_r0x00426cc5;\n                noname_1 = *(noname_1 + uVar10 * 8);\n                if (0x1fff < uVar9 >> 0x23) goto code_r0x00426cb8;\n                *(*0x20 + -0x90) = noname_1;\n                iVar1 = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0xc0) = 0x426aaf;\n                iVar1 = fcn.00429a40(iVar1 + (uVar10 & 0x1fff) * 0x80, noname_1, uVar8);\n                if (iVar1 == *(*0x20 + -0x90)) {\n                    return;\n                }\n                iVar6 = *(*0x20 + 8);\n                uVar10 = *(iVar6 + 0x68);\n                uVar8 = *(iVar6 + 0x60);\n                if (uVar10 <= *(*0x20 + -0x28)) goto code_r0x00426cb0;\n                *(uVar8 + *(*0x20 + -0x28) * 8) = iVar1;\n                goto code_r0x00426af2;\n            }\n            *(*0x20 + -0x38) = uVar8;\n            if (unaff_RDI != '\\0') {\n                uVar5 = *(in_RAX + 0x68);\n                unaff_RBX = *(in_RAX + 0x60);\n                if (uVar9 >> 0x23 < 0x2000) {\n                    *(*0x20 + 0x21) = unaff_SIL;\n                    *(*0x20 + -0x80) = uVar5;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    iVar1 = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                    *(*0x20 + -0xc0) = 0x42699f;\n                    uVar2 = fcn.00429a40(iVar1 + (uVar10 & 0x1fff) * 0x80, uVar5, uVar8);\n                    uVar8 = *(*0x20 + -0x80);\n                    uVar5 = *(*0x20 + -0x28);\n                    if (uVar5 < uVar8) {\n                        *(*(*0x20 + -0x10) + uVar5 * 8) = uVar2;\n                        unaff_RDI = *(*0x20 + 8);\n                        uVar10 = *(unaff_RDI + 0x70);\n                        uVar8 = *(*0x20 + -0x38);\n                        if (uVar8 <= uVar10) {\n                            if (uVar5 + 1 <= uVar8) {\n                                iVar1 = ((uVar5 + 1) * 8 & -((uVar10 - uVar5) + -1) >> 0x3f) + *(unaff_RDI + 0x60);\n                                unaff_RBX = (uVar8 - uVar5) - 1;\n                                noname_1 = *(*0x20 + 0x21);\n                                if (*(*0x20 + 0x21) != 0) {\n                                    if (unaff_RBX == 0) goto code_r0x00426ccd;\n                                    unaff_RBX = unaff_RBX * 8;\n                                    *(*0x20 + -0xc0) = 0x426a3d;\n                                    fcn.0045d0c0();\n                                    unaff_RDI = *(*0x20 + 8);\n                                    uVar8 = *(*0x20 + -0x38);\n                                    goto code_r0x00426ccd;\n                                }\n                                noname_1 = 0;\n                                goto code_r0x00426d56;\n                            }\n                            *(*0x20 + -0xc0) = 0x426d6d;\n                            fcn.0045cb20(uVar8);\n                        }\n                        uVar5 = uVar10;\n                        *(*0x20 + -0xc0) = 0x426d78;\n                        fcn.0045cae0(uVar8, uVar5);\n                    }\n                    *(*0x20 + -0xc0) = 0x426d85;\n                    fcn.0045ca60(uVar8);\n                }\n                uVar10 = 0x2000;\n                *(*0x20 + -0xc0) = 0x426d92;\n                uVar2 = fcn.0045ca60(0x2000);\n                goto code_r0x00426d92;\n            }\n            uVar5 = *(in_RAX + 0x68);\n            *(*0x20 + -0x88) = uVar5;\n            *(*0x20 + -0x18) = *(in_RAX + 0x60);\n            while( true ) {\n                unaff_SIL = uVar5;\n                if (uVar8 < uVar10) goto code_r0x00426d23;\n                if (0x1fff < uVar10 >> 0xd) goto code_r0x00426e19;\n                *(*0x20 + -0x50) = uVar10;\n                iVar1 = *(in_RAX + 0x78 + (uVar10 >> 0xd) * 8);\n                iVar6 = (uVar10 & 0x1fff) * 0x80;\n                *(*0x20 + -0xc0) = 0x426dff;\n                uVar2 = fcn.00429a40(iVar1 + iVar6, iVar6, uVar8);\n                uVar10 = *(*0x20 + -0x50);\n                uVar5 = *(*0x20 + -0x88);\n                if (uVar5 <= uVar10) break;\ncode_r0x00426d92:\n                *(*(*0x20 + -0x18) + uVar10 * 8) = uVar2;\n                uVar10 = uVar10 + 1;\n                uVar8 = *(*0x20 + -0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0xc0) = 0x426e19;\n            fcn.0045ca60(uVar5);\ncode_r0x00426e19:\n            arg1 = 0x2000;\n            *(*0x20 + -0xc0) = 0x426e26;\n            in_RAX = fcn.0045ca60(0x2000);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        puVar7[0x20] = unaff_RDI;\n        puVar7[0x21] = unaff_SIL;\n        *(puVar7 + -8) = 0x426e45;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = puVar7[0x20];\n        unaff_SIL = puVar7[0x21];\n        *0x20 = puVar7;\n    } while( true );\ncode_r0x00426d23:\n    iVar6 = *(*0x20 + 8);\ncode_r0x00426af2:\n    uVar9 = *(*0x20 + -0x20);\n    unaff_RBX = *(*0x20 + -0x30);\n    iVar1 = 3;\n    cVar3 = '\\x01';\ncode_r0x00426b17:\n    if ((iVar1 < 0) || (cVar3 == '\\0')) {\n        return;\n    }\n    *(*0x20 + -0x68) = iVar1;\n    uVar10 = *(iVar1 * 8 + 0x565b00);\n    uVar8 = -(uVar10 < 0x40);\n    uVar5 = *(iVar1 * 8 + 0x565a88);\n    *(*0x20 + -0x70) = uVar5;\n    unaff_RDI = *(iVar1 * 8 + 0x565ac8);\n    *(*0x20 + -0x78) = unaff_RDI;\n    uVar4 = uVar10;\n    uVar10 = uVar9 >> (uVar4 & 0x3f) & uVar8;\n    iVar11 = (unaff_RBX >> (uVar4 & 0x3f) & uVar8) + 1;\n    *(*0x20 + -0x58) = iVar11;\n    cVar3 = '\\0';\n    while( true ) {\n        if (iVar11 <= uVar10) goto code_r0x00426b0e;\n        *(*0x20 + -0x60) = uVar10;\n        *(*0x20 + -0x91) = cVar3;\n        noname_1 = *(iVar6 + 0x28 + iVar1 * 0x18);\n        uVar8 = uVar10 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        *(*0x20 + -0x40) = *(*0x20 + -0x60) + 1;\n        uVar10 = *(*0x20 + -0x60) + 1 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        if (noname_1 < uVar10) break;\n        if (uVar10 < uVar8) {\ncode_r0x00426c97:\n            *(*0x20 + -0xc0) = 0x426ca5;\n            fcn.0045cb00(uVar10);\n            break;\n        }\n        *(*0x20 + -0x48) = iVar1 * 3;\n        iVar1 = noname_1 - uVar8;\n        unaff_RBX = uVar10 - uVar8;\n        noname_1 = -iVar1 >> 0x3f;\n        *(*0x20 + -0xc0) = 0x426c4d;\n        uVar10 = unaff_RBX;\n        iVar11 = fcn.00428660(iVar1, uVar9, uVar8 << 3 & noname_1);\n        iVar6 = *(*0x20 + 8);\n        uVar9 = *(iVar6 + 8 + *(*0x20 + -0x48) * 8);\n        iVar1 = *(iVar6 + *(*0x20 + -0x48) * 8);\n        uVar8 = *(*0x20 + -0x60);\n        if (uVar9 <= uVar8) {\n            *(*0x20 + -0xc0) = 0x426c97;\n            fcn.0045ca40(uVar9);\n            goto code_r0x00426c97;\n        }\n        if (*(iVar1 + uVar8 * 8) == iVar11) {\n            cVar3 = *(*0x20 + -0x91);\n        }\n        else {\n            *(iVar1 + uVar8 * 8) = iVar11;\n            cVar3 = '\\x01';\n        }\n        iVar1 = *(*0x20 + -0x68);\n        iVar11 = *(*0x20 + -0x58);\n        uVar5 = *(*0x20 + -0x70);\n        unaff_RDI = *(*0x20 + -0x78);\n        uVar10 = *(*0x20 + -0x40);\n        uVar9 = *(*0x20 + -0x20);\n        unaff_RBX = *(*0x20 + -0x30);\n    }\n    *(*0x20 + -0xc0) = 0x426cb0;\n    fcn.0045cac0(uVar10, noname_1);\ncode_r0x00426cb0:\n    *(*0x20 + -0xc0) = 0x426cb8;\n    fcn.0045ca60(uVar10);\ncode_r0x00426cb8:\n    uVar5 = 0x2000;\n    *(*0x20 + -0xc0) = 0x426cc5;\n    fcn.0045ca60(0x2000);\ncode_r0x00426cc5:\n    *(*0x20 + -0xc0) = 0x426ccd;\n    fcn.0045ca60(uVar5);\ncode_r0x00426ccd:\n    do {\n        if (*(*0x20 + -0x30) >> 0x23 < 0x2000) {\n            uVar2 = *(unaff_RDI + 0x78 + (*(*0x20 + -0x30) >> 0x23) * 8);\n            uVar8 = (uVar8 & 0x1fff) << 7;\n            *(*0x20 + -0xc0) = 0x426d05;\n            uVar2 = fcn.00429a40(uVar2, noname_1, uVar8);\n            noname_1 = *(*0x20 + -0x38);\n            if (noname_1 < *(*0x20 + -0x80)) goto code_r0x00426d17;\n            *(*0x20 + -0xc0) = 0x426d38;\n            fcn.0045ca60(*(*0x20 + -0x80));\n        }\n        *(*0x20 + -0xc0) = 0x426d45;\n        iVar1 = fcn.0045ca60(0x2000);\n        do {\n            *(iVar1 + noname_1 * 8) = 0x8000040000200;\n            noname_1 = noname_1 + 1;\ncode_r0x00426d56:\n        } while (noname_1 < unaff_RBX);\n    } while( true );\ncode_r0x00426b0e:\n    iVar1 = iVar1 + -1;\n    goto code_r0x00426b17;\ncode_r0x00426d17:\n    *(*(*0x20 + -0x10) + noname_1 * 8) = uVar2;\n    goto code_r0x00426d23;\n}\n",
        "token_count": 3680
    },
    "00427320": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nint64_t fcn.00427320(ulong param_1, ulong param_2, uint64_t param_3, uchar *param_4)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    int64_t iVar3;\n    uint8_t uVar4;\n    uchar *puVar5;\n    uchar *arg1;\n    uchar *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uint64_t uVar9;\n    uchar *arg2;\n    uchar *in_R11;\n    uchar *puVar10;\n    uint64_t uVar11;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    uint64_t unaff_R15;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20 + -0x98,  puVar6 = *0x20,  puVar5 < *(unaff_R14 + 0x10) || puVar5 == *(unaff_R14 + 0x10)) {\ncode_r0x00427eb9:\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x427ec8;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    }\n    puVar6 = *0x20 + -0x118;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x30) = in_XMM15;\n    *(*0x20 + -0x30) = *0x5645a8;\n    *(*0x20 + -0x28) = *0x564588;\n    *(*0x20 + -0x18) = in_XMM15;\n    *(*0x20 + -0x18) = 0x427ee0;\n    *(*0x20 + -0x10) = *0x20 + -0x30;\n    puVar2 = NULL;\n    uVar7 = 0;\n    puVar8 = NULL;\n    uVar9 = 0xffffffffffffffff;\ncode_r0x004273e0:\n    if (4 < puVar2) {\n        arg1 = uVar7 >> 0xd;\n        if (arg1 < 0x2000) {\n            *(*0x20 + -0x38) = uVar7;\n            uVar7 = (uVar7 & 0x1fff) << 7;\n            *(*0x20 + -0x120) = 0x427533;\n            iVar3 = fcn.00429c20(0);\n            if (iVar3 != -1) {\n                *(*0x20 + -0x90) = iVar3;\n                *(*0x20 + -0x48) = *(*0x20 + -0x38) << 0x16;\n                *(*0x20 + -0x120) = 0x427590;\n                (**(*0x20 + -0x18))(*(*0x20 + -0x38) << 0x16, *0x20 + -0x18, 0xffff800000000000);\n                *(*0x20 + -0x120) = 0x4275a5;\n                fcn.00427240();\n                return *(*0x20 + -0x90) * 0x2000 + *(*0x20 + -0x48) + -0x800000000000;\n            }\n            uVar9 = *(*(*0x20 + 8) + 0x68);\n            arg1 = *(*(*0x20 + 8) + 0x60);\n            if (*(*0x20 + -0x38) < uVar9) {\n                uVar7 = *(arg1 + *(*0x20 + -0x38) * 8);\n                uVar9 = uVar7 & 0x1fffff;\n                if ((uVar7 & 0x8000000000000000) != 0) {\n                    uVar9 = 0x200000;\n                }\n                if (uVar7 < 0) {\n                    uVar11 = 0x200000;\n                }\n                else {\n                    uVar11 = uVar7 >> 0x15 & 0x1fffff;\n                }\n                *(*0x20 + -0xf8) = uVar11;\n                *(*0x20 + -0xf0) = uVar9;\n                if (-1 < uVar7) goto code_r0x0042774d;\n                uVar7 = 0x200000;\n                do {\n                    *(*0x20 + -0x100) = uVar7;\n                    *(*0x20 + -0x120) = 0x42765b;\n                    fcn.00434840();\n                    *(*0x20 + -0x120) = 0x42766c;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x427676;\n                    fcn.00434f40();\n                    *(*0x20 + -0x120) = 0x427687;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x427694;\n                    fcn.00434f40();\n                    *(*0x20 + -0x120) = 0x4276a5;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x4276af;\n                    fcn.00434e40();\n                    *(*0x20 + -0x120) = 0x4276c5;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x4276cf;\n                    fcn.00434e40();\n                    *(*0x20 + -0x120) = 0x4276e5;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x4276ef;\n                    fcn.00434e40();\n                    *(*0x20 + -0x120) = 0x427705;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x42770a;\n                    fcn.004348c0();\n                    *(*0x20 + -0x120) = 0x42770f;\n                    fcn.00434840();\n                    *(*0x20 + -0x120) = 0x427725;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x427732;\n                    fcn.00434e40();\n                    *(*0x20 + -0x120) = 0x427737;\n                    fcn.00434aa0();\n                    *(*0x20 + -0x120) = 0x42773c;\n                    fcn.004348c0();\n                    *(*0x20 + -0x120) = 0x42774d;\n                    fcn.004330a0();\ncode_r0x0042774d:\n                    uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                } while( true );\n            }\n            *(*0x20 + -0x120) = 0x427778;\n            fcn.0045ca40(uVar9);\n        }\n        *(*0x20 + -0x120) = 0x427785;\n        fcn.0045ca60(0x2000);\n        goto code_r0x00427785;\n    }\n    param_3 = 0x565a80;\n    uVar11 = *(puVar2 * 8 + 0x565a80);\n    uVar1 = -(uVar11 < 0x40);\n    uVar4 = uVar11;\n    puVar10 = 1 << (uVar4 & 0x3f) & uVar1;\n    unaff_R13 = 0x565ac0;\n    unaff_R15 = *(puVar2 * 8 + 0x565ac0);\n    puVar5 = uVar7 << (uVar4 & 0x3f) & uVar1;\n    arg2 = *(in_RAX + 0x10 + puVar2 * 0x18);\n    param_4 = *(in_RAX + puVar2 * 0x18);\n    arg1 = puVar5 + puVar10;\n    in_R11 = puVar2;\n    if (arg1 <= arg2) {\n        if (puVar5 <= arg1) {\n            *(*0x20 + -0x70) = puVar5;\n            *(*0x20 + -0xa8) = uVar9;\n            *(*0x20 + -0xa0) = puVar8;\n            uVar7 = 0x565b00;\n            uVar9 = *(puVar2 * 8 + 0x565b00);\n            param_4 = param_4 + (*(*0x20 + -0x70) << 3 & puVar5 - arg2 >> 0x3f);\n            uVar9 = *(in_RAX + 0x10078) + 0x800000000000U >> (uVar9 & 0x3f) & -(uVar9 < 0x40);\n            param_3 = *(*0x20 + -0x70);\n            if ((-puVar10 & uVar9) == param_3) {\n                puVar5 = puVar10 + -1 & uVar9;\n            }\n            else {\n                puVar5 = NULL;\n            }\n            *(*0x20 + -0x38) = puVar2;\n            *(*0x20 + -0x40) = puVar10;\n            *(*0x20 + -0xb0) = unaff_R15;\n            *(*0x20 + -0x20) = param_4;\n            *(*0x20 + -0x98) = puVar5;\n            unaff_R13 = 0;\n            arg1 = puVar10;\n            arg2 = NULL;\n            do {\n                if (arg1 <= puVar5) {\ncode_r0x00427a00:\n                    if (unaff_RBX <= arg2) {\n                        *(*0x20 + -0x68) = unaff_R13;\n                        *(*0x20 + -0x58) = *(uVar7 + in_R11 * 8);\n                        *(*0x20 + -0x120) = 0x427cd0;\n                        fcn.00427240();\n                        return (*(*0x20 + -0x70) << (*(*0x20 + -0x58) & 0x3f) & -(*(*0x20 + -0x58) < 0x40)) +\n                               *(*0x20 + -0x68) * 0x2000 + -0x800000000000;\n                    }\n                    if (in_R11 == NULL) {\n                        return 0;\n                    }\n                    uVar7 = *(*0x20 + -0xa0);\n                    uVar9 = uVar7 & 0x1fffff;\n                    unaff_R13 = 0x200000;\n                    if ((uVar7 & 0x8000000000000000) != 0) {\n                        uVar9 = 0x200000;\n                    }\n                    if (uVar7 < 0) {\n                        unaff_R15 = 0x200000;\n                    }\n                    else {\n                        unaff_R15 = uVar7 >> 0x15 & 0x1fffff;\n                    }\n                    *(*0x20 + -200) = unaff_R15;\n                    *(*0x20 + -0xc0) = uVar9;\n                    if (uVar7 < 0) {\n                        arg2 = 0x200000;\n                    }\n                    else {\n                        arg2 = uVar7 >> 0x2a & 0x1fffff;\n                    }\n                    *(*0x20 + -0xd0) = arg2;\n                    *(*0x20 + -0x120) = 0x427a92;\n                    fcn.00434840();\n                    *(*0x20 + -0x120) = 0x427aa5;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x427ab9;\n                    fcn.00434f40(*(*0x20 + -0x38) + -1);\n                    *(*0x20 + -0x120) = 0x427aca;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x427ad4;\n                    fcn.00434f40();\n                    *(*0x20 + -0x120) = 0x427ae5;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x427aef;\n                    fcn.00434e40();\n                    *(*0x20 + -0x120) = 0x427b05;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x427b0f;\n                    fcn.00434e40();\n                    *(*0x20 + -0x120) = 0x427b25;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x427b2f;\n                    fcn.00434e40();\n                    *(*0x20 + -0x120) = 0x427b34;\n                    fcn.00434aa0();\n                    *(*0x20 + -0x120) = 0x427b39;\n                    fcn.004348c0();\n                    *(*0x20 + -0x120) = 0x427b3e;\n                    fcn.00434840();\n                    *(*0x20 + -0x120) = 0x427b4f;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x427b5c;\n                    fcn.00434f40();\n                    *(*0x20 + -0x120) = 0x427b6d;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x427b7a;\n                    fcn.00434e40();\n                    *(*0x20 + -0x120) = 0x427b8b;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x427b98;\n                    fcn.00434f40();\n                    *(*0x20 + -0x120) = 0x427b9d;\n                    fcn.00434aa0();\n                    *(*0x20 + -0x120) = 0x427ba5;\n                    fcn.004348c0();\n                    *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x120) = 0x427bc5;\n                    fcn.00434840();\n                    *(*0x20 + -0x120) = 0x427bd6;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x427be5;\n                    fcn.00434fa0();\n                    *(*0x20 + -0x120) = 0x427bf6;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x427c05;\n                    fcn.00434f40();\n                    *(*0x20 + -0x120) = 0x427c0a;\n                    fcn.00434aa0();\n                    *(*0x20 + -0x120) = 0x427c0f;\n                    fcn.004348c0();\n                    *(*0x20 + -0x58) = *(*(*0x20 + -0x38) * 8 + 0x565b00);\n                    arg1 = *(*(*0x20 + -0x38) * 8 + 0x565a80);\n                    *(*0x20 + -0x60) = arg1;\n                    *(*0x20 + -0x120) = 0x427c45;\n                    fcn.00434840();\n                    *(*0x20 + -0x120) = 0x427c56;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x427c65;\n                    fcn.00434e40();\n                    *(*0x20 + -0x120) = 0x427c76;\n                    fcn.00435140();\n                    *(*0x20 + -0x120) = 0x427c85;\n                    fcn.00434e40();\n                    *(*0x20 + -0x120) = 0x427c8a;\n                    fcn.00434aa0();\n                    *(*0x20 + -0x120) = 0x427c8f;\n                    fcn.004348c0();\n                    iVar3 = 0;\n                    while (iVar3 < *(*0x20 + -0x40)) {\n                        uVar7 = *(*(*0x20 + -0x20) + iVar3 * 8);\n                        uVar9 = uVar7 & 0x1fffff;\n                        param_3 = 0x200000;\n                        if ((uVar7 & 0x8000000000000000) != 0) {\n                            uVar9 = 0x200000;\n                        }\n                        if (uVar7 < 0) {\n                            param_4 = 0x200000;\n                        }\n                        else {\n                            param_4 = uVar7 >> 0x15 & 0x1fffff;\n                            arg2 = param_4;\n                        }\n                        *(*0x20 + -0x88) = iVar3;\n                        *(*0x20 + -0xe0) = param_4;\n                        *(*0x20 + -0xd8) = uVar9;\n                        if (uVar7 < 0) {\n                            uVar7 = 0x200000;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                        }\n                        *(*0x20 + -0xe8) = uVar7;\n                        *(*0x20 + -0x120) = 0x427d2b;\n                        fcn.00434840();\n                        *(*0x20 + -0x120) = 0x427d3c;\n                        fcn.00435140();\n                        *(*0x20 + -0x120) = 0x427d49;\n                        fcn.00434f40();\n                        *(*0x20 + -0x120) = 0x427d5a;\n                        fcn.00435140();\n                        arg1 = *(*0x20 + -0x88) + *(*0x20 + -0x70);\n                        *(*0x20 + -0x120) = 0x427d76;\n                        fcn.00434f40();\n                        *(*0x20 + -0x120) = 0x427d87;\n                        fcn.00435140();\n                        *(*0x20 + -0x120) = 0x427d91;\n                        fcn.00434e40();\n                        *(*0x20 + -0x120) = 0x427da5;\n                        fcn.00435140();\n                        *(*0x20 + -0x120) = 0x427daf;\n                        fcn.00434e40();\n                        *(*0x20 + -0x120) = 0x427dc5;\n                        fcn.00435140();\n                        *(*0x20 + -0x120) = 0x427dcf;\n                        fcn.00434e40();\n                        *(*0x20 + -0x120) = 0x427de5;\n                        fcn.00435140();\n                        *(*0x20 + -0x120) = 0x427dea;\n                        fcn.004348c0();\n                        iVar3 = *(*0x20 + -0x88) + 1;\n                    }\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x120) = 0x427e9d;\n                    fcn.004330a0();\ncode_r0x00427e9d:\n                    *(*0x20 + -0x120) = 0x427ea8;\n                    fcn.0045ca40(arg1);\n                    break;\n                }\n                if (arg1 <= puVar5) goto code_r0x00427e9d;\n                iVar3 = *(param_4 + puVar5 * 8);\n                if (iVar3 == 0) {\n                    puVar8 = NULL;\n                    goto code_r0x00427785;\n                }\n                *(*0x20 + -0x80) = puVar5;\n                *(*0x20 + -0x50) = iVar3;\n                *(*0x20 + -0x68) = unaff_R13;\n                *(*0x20 + -0xb8) = arg2;\n                uVar7 = *(uVar7 + in_R11 * 8);\n                *(*0x20 + -0x78) = puVar5 + param_3;\n                unaff_R13 = puVar5 + param_3 << (uVar7 & 0x3f) & -(uVar7 < 0x40);\n                *(*0x20 + -0x120) = 0x42782e;\n                (**(*0x20 + -0x18))(uVar7, *0x20 + -0x18, 1 << (unaff_R15 & 0x3f), unaff_R13 - 0x800000000000);\n                puVar8 = *(*0x20 + -0x50);\n                uVar7 = puVar8 & 0x1fffff;\n                param_3 = 0x8000000000000000;\n                param_4 = 0x200000;\n                if ((puVar8 & 0x8000000000000000) != 0) {\n                    uVar7 = 0x200000;\n                }\n                iVar3 = *(*0x20 + -0xb8);\n                arg2 = iVar3 + uVar7;\n                unaff_RBX = *(*0x20 + 0x10);\n                if (unaff_RBX <= arg2) {\n                    unaff_R13 = *(*0x20 + -0x68);\n                    if (iVar3 == 0) {\n                        unaff_R13 = *(*0x20 + -0x80) << (*(*0x20 + -0xb0) & 0x3f) & -(*(*0x20 + -0xb0) < 0x40);\n                    }\n                    uVar7 = 0x565b00;\n                    param_3 = *(*0x20 + -0x70);\n                    param_4 = *(*0x20 + -0x20);\n                    in_R11 = *(*0x20 + -0x38);\n                    goto code_r0x00427a00;\n                }\n                if (puVar8 < 0) {\n                    puVar2 = 0x200000;\n                    in_R11 = arg2;\n                }\n                else {\n                    puVar2 = puVar8 >> 0x15 & 0x1fffff;\n                    in_R11 = puVar8;\n                }\n                if (unaff_RBX <= puVar2) goto code_r0x004273b9;\n                if (iVar3 == 0) {\n                    uVar9 = *(*0x20 + -0xb0);\n                }\n                else {\n                    uVar9 = *(*0x20 + -0xb0);\n                    uVar11 = 1 << (uVar9 & 0x3f) & -(uVar9 < 0x40);\n                    if (uVar11 <= uVar7) {\n                        puVar8 = iVar3 + uVar11;\n                        arg1 = *(*0x20 + -0x40);\n                        uVar7 = 0x565b00;\n                        param_3 = *(*0x20 + -0x70);\n                        param_4 = *(*0x20 + -0x20);\n                        in_R11 = *(*0x20 + -0x38);\n                        puVar5 = *(*0x20 + -0x80);\n                        unaff_R15 = *(*0x20 + -0xb0);\n                        unaff_R13 = *(*0x20 + -0x68);\n                        goto code_r0x00427785;\n                    }\n                }\n                if (puVar8 < 0) {\n                    puVar8 = 0x200000;\n                }\n                else {\n                    puVar8 = puVar8 >> 0x2a & 0x1fffff;\n                }\n                puVar5 = *(*0x20 + -0x80);\n                unaff_R13 = (-(uVar9 < 0x40) & puVar5 + 1 << (uVar9 & 0x3f)) - puVar8;\n                arg1 = *(*0x20 + -0x40);\n                param_3 = *(*0x20 + -0x70);\n                param_4 = *(*0x20 + -0x20);\n                in_R11 = *(*0x20 + -0x38);\n                unaff_R15 = *(*0x20 + -0xb0);\n                uVar7 = 0x565b00;\ncode_r0x00427785:\n                puVar5 = puVar5 + 1;\n                arg2 = puVar8;\n            } while( true );\n        }\n        *(*0x20 + -0x120) = 0x427eb0;\n        fcn.0045cb00(arg1);\n    }\n    *(*0x20 + -0x120) = 0x427eb8;\n    in_RAX = fcn.0045cac0(arg1, arg2);\n    goto code_r0x00427eb9;\ncode_r0x004273b9:\n    puVar2 = *(*0x20 + -0x38) + 1;\n    in_RAX = *(*0x20 + 8);\n    uVar7 = *(*0x20 + -0x78);\n    uVar9 = uVar7;\n    goto code_r0x004273e0;\n}\n",
        "token_count": 5928
    },
    "004572c1": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.004572c1(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x5a5f90);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        uVar1 = CONCAT71(0xdeaddeaddeadde, in_RAX != 0xdeaddeaddeaddead);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1 & 0xffffffff;\n}\n",
        "token_count": 288
    },
    "0043b140": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.0043b140(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            arg3 = 0;\n            while( true ) {\n                if (unaff_RBX <= arg3) {\n                    return 0;\n                }\n                iVar1 = *(in_RAX + arg3 * 8);\n                uVar3 = arg3 >> 5 & 0x7ffffff;\n                if (unaff_RSI <= uVar3) break;\n                if ((*(unaff_RDI + uVar3 * 4) >> (arg3 & 0x1f) & 1) == 0) {\n                    do {\n                    } while (*(iVar1 + 0x194) != *(iVar1 + 0x194));\n                    bVar4 = *(iVar1 + 0x194) != *(iVar1 + 400) || *(iVar1 + 0x998) != 0;\n                }\n                else {\n                    bVar4 = false;\n                }\n                if (bVar4) {\n                    *(*0x20 + -0x28) = 0x43b1f5;\n                    fcn.0040a360();\n                    *(*0x20 + -0x28) = 0x43b1fa;\n                    uVar2 = fcn.00441400();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x43b20d;\n                    fcn.0040a580();\n                    if (*(*0x20 + -0x10) == 0) {\n                        return 0;\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                arg3 = arg3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x43b22b;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.0045ca40(unaff_RSI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + -8) = 0x43b24f;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 872
    },
    "0043b280": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.0043b280(ulong noname_0, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    uVar4 = 0;\n    while( true ) {\n        if (unaff_RBX <= uVar4) {\n            return arg4;\n        }\n        iVar3 = *(in_RAX + uVar4 * 8);\n        uVar5 = uVar4 >> 5 & 0x7ffffff;\n        if (unaff_RSI <= uVar5) break;\n        iVar6 = arg4;\n        if ((*(unaff_RDI + uVar5 * 4) >> (uVar4 & 0x1f) & 1) != 0) {\n            iVar1 = *(iVar3 + 0x1208);\n            iVar6 = *(iVar3 + 0x1210);\n            if ((iVar1 != 0) && ((iVar6 == 0 || (iVar1 <= iVar6)))) {\n                iVar6 = iVar1;\n            }\n            if ((iVar6 == 0) || ((arg4 != 0 && (arg4 <= iVar6)))) {\n                iVar6 = arg4;\n            }\n        }\n        uVar4 = uVar4 + 1;\n        arg4 = iVar6;\n    }\n    fcn.0045ca40(unaff_RSI);\n    pcVar2 = swi(3);\n    iVar3 = (*pcVar2)();\n    return iVar3;\n}\n",
        "token_count": 400
    },
    "0040b020": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint64_t fcn.0040b020(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    uint64_t *puVar10;\n    uint64_t *puVar11;\n    uint64_t uVar12;\n    uint64_t in_R11;\n    ulong uVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \ncode_r0x0040b020:\n    puVar8 = *0x20;\n    uVar2 = in_R11;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x98;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        uVar7 = unaff_RBX + 0x3fffffU & 0xffffffffffc00000;\n        *(*0x20 + -0x78) = uVar7;\n        *(*0x20 + -0xa0) = 0x40b07f;\n        uVar2 = fcn.0040cb80(0x400000);\n        if (uVar2 != 0) {\n            uVar6 = *(*0x20 + -0x78);\n            goto code_r0x0040b09c;\n        }\n        uVar9 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + -0x78);\n        do {\n            puVar10 = *(uVar9 + 0x103b0);\n            if (puVar10 == NULL) {\n                uVar6 = 0;\ncode_r0x0040b48b:\n                if (uVar6 == 0) {\n                    *(*0x20 + -0xa0) = 0x40b4a5;\n                    iVar3 = fcn.0040b6c0(0x400000);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x38) = uVar7;\n                    *(*0x20 + -0x28) = *(*0x20 + 8) + 0x16ba8;\n                    *(*0x20 + -0xa0) = 0x40b4d4;\n                    puVar4 = fcn.00416b60();\n                    *puVar4 = *(*0x20 + -0x10);\n                    *(puVar4 + 1) = 1;\n                    puVar4[2] = *0x5a61b0;\n                    *(*0x20 + -0xa0) = 0x40b4ff;\n                    *0x5a61b0 = puVar4;\n                    piVar5 = fcn.00416b60();\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar6 = *(*0x20 + -0x38);\n                    *piVar5 = uVar6 + uVar2;\n                    piVar5[2] = *0x5a61b0;\n                    *0x5a61b0 = piVar5;\n                }\n                uVar9 = uVar6 + uVar2;\n                if (uVar9 < uVar2) {\n                    iVar3 = 0x1c;\n                    uVar13 = 0x4cf6ec;\n                }\n                else if (uVar2 + 0x800000000000 >> 0x16 < 0x4000000) {\n                    bVar14 = 0x3ffffff < uVar9 + 0x7fffffffffff >> 0x16;\n                    iVar3 = 0;\n                    if (bVar14) {\n                        iVar3 = 0x20;\n                    }\n                    uVar13 = 0;\n                    if (bVar14) {\n                        uVar13 = 0x4d0679;\n                    }\n                }\n                else {\n                    iVar3 = 0x21;\n                    uVar13 = 0x4d0aa2;\n                }\n                if (iVar3 != 0) goto code_r0x0040b5fe;\n                uVar7 = uVar6;\n                in_R11 = uVar2;\n                if ((uVar2 & 0x3fffff) != 0) goto code_r0x0040b5ed;\ncode_r0x0040b09c:\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0x38) = uVar6;\n                uVar9 = uVar2 + 0x800000000000 >> 0x16;\n                puVar11 = *(*0x20 + 8);\n                while( true ) {\n                    if (uVar2 + uVar6 + 0x7fffffffffff >> 0x16 < uVar9) {\n                        return uVar2;\n                    }\n                    puVar10 = uVar9 >> 0x14;\n                    uVar2 = in_R11;\n                    if (0x3f < puVar10) goto code_r0x0040b33a;\n                    *(*0x20 + -0x40) = uVar9;\n                    uVar2 = puVar11[puVar10 + 0x2032];\n                    puVar10 = puVar11 + puVar10 + 0x2032;\n                    if (uVar2 == 0) {\n                        *(*0x20 + -0x18) = puVar10;\n                        *(*0x20 + -0xa0) = 0x40b155;\n                        uVar2 = fcn.0040c7a0(0);\n                        if (uVar2 == 0) goto code_r0x0040b329;\n                        **(*0x20 + -0x18) = uVar2;\n                        uVar9 = *(*0x20 + -0x40);\n                    }\n                    uVar7 = uVar9 & 0xfffff;\n                    in_R11 = *(uVar2 + uVar7 * 8);\n                    uVar9 = uVar2 + uVar7 * 8;\n                    if (in_R11 != 0) goto code_r0x0040b318;\n                    *(*0x20 + -0x20) = uVar9;\n                    uVar7 = 0x210d0;\n                    *(*0x20 + -0xa0) = 0x40b1cc;\n                    iVar3 = fcn.0040cb80(8);\n                    if (iVar3 == 0) {\n                        uVar7 = 8;\n                        *(*0x20 + -0xa0) = 0x40b1e7;\n                        iVar3 = fcn.0040c7a0(0x5d58f8);\n                        if (iVar3 == 0) goto code_r0x0040b307;\n                    }\n                    puVar10 = *(*0x20 + 8);\n                    uVar2 = puVar10[0x207d];\n                    if (puVar10[0x207c] == uVar2) {\n                        *(*0x20 + -0x68) = iVar3;\n                        iVar3 = uVar2 << 4;\n                        if (iVar3 == 0) {\n                            iVar3 = *0x5d3cd8;\n                        }\n                        *(*0x20 + -0x70) = iVar3;\n                        *(*0x20 + -0xa0) = 0x40b23b;\n                        uVar2 = fcn.0040c7a0(0x5d58f8);\n                        if (uVar2 == 0) goto code_r0x0040b2f6;\n                        puVar10 = *(*0x20 + 8);\n                        uVar7 = puVar10[0x207b];\n                        puVar10[0x207b] = uVar2;\n                        puVar10[0x207d] = *(*0x20 + -0x70) >> 3;\n                        uVar2 = puVar10[0x207c];\n                        if (puVar10[0x207c] < puVar10[0x207c]) {\n                            uVar2 = puVar10[0x207c];\n                        }\n                        if (puVar10[0x207b] != uVar7) {\n                            *(*0x20 + -0xa0) = 0x40b299;\n                            fcn.0045d380(uVar2 << 3);\n                            puVar10 = *(*0x20 + 8);\n                        }\n                        iVar3 = *(*0x20 + -0x68);\n                    }\n                    uVar6 = puVar10[0x207c];\n                    uVar9 = puVar10[0x207d];\n                    uVar2 = uVar6 + 1;\n                    if (uVar9 < uVar2) goto code_r0x0040b2f1;\n                    puVar10[0x207c] = uVar2;\n                    uVar9 = puVar10[0x207b];\n                    if (uVar2 <= uVar6) break;\n                    iVar1 = *(*0x20 + -0x40);\n                    *(uVar9 + uVar6 * 8) = iVar1;\n                    **(*0x20 + -0x20) = iVar3;\n                    uVar9 = iVar1 + 1;\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar6 = *(*0x20 + -0x38);\n                    puVar11 = puVar10;\n                }\n                *(*0x20 + -0xa0) = 0x40b2f1;\n                fcn.0045ca40(uVar2);\ncode_r0x0040b2f1:\n                *(*0x20 + -0xa0) = 0x40b2f6;\n                fcn.0045cac0(uVar2, uVar9);\ncode_r0x0040b2f6:\n                *(*0x20 + -0xa0) = 0x40b307;\n                fcn.004330a0();\ncode_r0x0040b307:\n                *(*0x20 + -0xa0) = 0x40b318;\n                fcn.004330a0();\ncode_r0x0040b318:\n                *(*0x20 + -0xa0) = 0x40b329;\n                fcn.004330a0();\ncode_r0x0040b329:\n                uVar7 = 0x27;\n                *(*0x20 + -0xa0) = 0x40b33a;\n                fcn.004330a0();\n                uVar2 = in_R11;\ncode_r0x0040b33a:\n                *(*0x20 + -0xa0) = 0x40b347;\n                fcn.0045ca60(0x40);\n            }\n            else {\n                *(*0x20 + -0x48) = puVar10;\n                uVar6 = *puVar10;\n                if (*(puVar10 + 1) != '\\0') {\n                    uVar6 = *puVar10 - uVar7;\n                }\n                uVar12 = uVar7 + uVar6;\n                if (uVar12 < uVar6) {\n                    uVar2 = 0;\n                }\n                else if (uVar12 + 0x7fffffffffff >> 0x16 < 0x4000000) {\n                    *(*0x20 + -0x58) = uVar6;\n                    *(*0x20 + -0x38) = uVar12;\n                    *(*0x20 + -0xa0) = 0x40b3ee;\n                    uVar2 = fcn.00415a20();\n                    uVar9 = *(*0x20 + 8);\n                    uVar7 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar12 = *(*0x20 + -0x38);\n                    uVar6 = *(*0x20 + -0x58);\n                }\n                else {\n                    uVar2 = 0;\n                }\n                if (uVar2 == uVar6) {\n                    if (*(puVar10 + 1) != '\\0') {\n                        uVar12 = uVar6;\n                    }\n                    *puVar10 = uVar12;\n                    uVar6 = uVar7;\n                    goto code_r0x0040b48b;\n                }\n                if (uVar2 != 0) {\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xa0) = 0x40b43b;\n                    fcn.004158e0(0);\n                    uVar9 = *(*0x20 + 8);\n                    uVar7 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar2 = *(*0x20 + -0x10);\n                }\n            }\n            *(uVar9 + 0x103b0) = puVar10[2];\n            *(uVar9 + 0x16bd8) = *(uVar9 + 0x16bd8) - *(uVar9 + 0x16ba8);\n            *puVar10 = *(uVar9 + 0x16bc0);\n            *(uVar9 + 0x16bc0) = puVar10;\n        } while( true );\n    }\n    goto code_r0x0040b690;\ncode_r0x0040b5ed:\n    *(*0x20 + -0xa0) = 0x40b5fe;\n    fcn.004330a0();\ncode_r0x0040b5fe:\n    *(*0x20 + -0x60) = uVar2;\n    *(*0x20 + -0x38) = uVar9;\n    *(*0x20 + -0x30) = uVar13;\n    *(*0x20 + -0x50) = iVar3;\n    *(*0x20 + -0xa0) = 0x40b617;\n    fcn.00434840();\n    *(*0x20 + -0xa0) = 0x40b628;\n    fcn.00435140();\n    *(*0x20 + -0xa0) = 0x40b632;\n    fcn.00434fa0();\n    *(*0x20 + -0xa0) = 0x40b645;\n    fcn.00435140();\n    *(*0x20 + -0xa0) = 0x40b64f;\n    fcn.00434fa0();\n    *(*0x20 + -0xa0) = 0x40b665;\n    fcn.00435140();\n    *(*0x20 + -0xa0) = 0x40b674;\n    fcn.00435140();\n    *(*0x20 + -0xa0) = 0x40b679;\n    fcn.00434aa0();\n    *(*0x20 + -0xa0) = 0x40b67e;\n    fcn.004348c0();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa0) = 0x40b68f;\n    in_RAX = fcn.004330a0();\ncode_r0x0040b690:\n    *(puVar8 + 8) = in_RAX;\n    *(puVar8 + 0x10) = unaff_RBX;\n    *(puVar8 + -8) = 0x40b69f;\n    fcn.0045a360();\n    in_RAX = *(puVar8 + 8);\n    unaff_RBX = *(puVar8 + 0x10);\n    *0x20 = puVar8;\n    in_R11 = uVar2;\n    goto code_r0x0040b020;\n}\n",
        "token_count": 3620
    },
    "00434e40": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00434e40(void)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = in_XMM15;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x434e8f;\n            uVar1 = fcn.0045cceb();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (uVar2 = 99; 0 < uVar2; uVar2 = uVar2 - 1) {\n                *(*0x20 + (uVar2 - 0x6c)) = uVar1 + (uVar1 / 10) * -10 + '0';\n                if (uVar1 < 10) break;\n                uVar1 = uVar1 / 10;\n            }\n            if (uVar2 < 0x65) {\n                *(*0x20 + -0x90) = 0x434eff;\n                fcn.00434920(-(uVar2 - 100));\n                return;\n            }\n            *(*0x20 + -0x90) = 0x434f1c;\n            in_RAX = fcn.0045cb00(100);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x434f27;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 489
    },
    "0046fb00": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nulong fcn.0046fb00(void)\n\n{\n    char cVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (-1 < in_RAX) {\n                if (in_RAX == 0) {\n                    return 0x4c790f;\n                }\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x4c) = in_XMM15;\n                uVar2 = 0x13;\n                break;\n            }\n            uVar2 = -in_RAX;\n            if (uVar2 == 0) goto code_r0x0046fc13;\n            *(*0x20 + -0x3c) = in_XMM15;\n            *(*0x20 + -0x38) = in_XMM15;\n            uVar4 = 0x13;\n            while (cVar1 = uVar2,  9 < uVar2) {\n                uVar2 = uVar2 / 10;\n                if (0x13 < uVar4) goto code_r0x0046fcbd;\n                *(*0x20 + (uVar4 - 0x3c)) = cVar1 + uVar2 * -10 + '0';\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar4 < 0x14) goto code_r0x0046fc7a;\n            *(*0x20 + -0x80) = 0x46fcbd;\n            fcn.0045ca40(0x14);\ncode_r0x0046fcbd:\n            *(*0x20 + -0x80) = 0x46fcca;\n            in_RAX = fcn.0045ca40(0x14);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x46fcd5;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\ncode_r0x0046fb8d:\n    cVar1 = in_RAX;\n    if (in_RAX < 10) goto code_r0x0046fbc0;\n    in_RAX = in_RAX / 10;\n    if (0x13 < uVar2) goto code_r0x0046fc06;\n    *(*0x20 + (uVar2 - 0x50)) = cVar1 + in_RAX * -10 + '0';\n    uVar2 = uVar2 - 1;\n    goto code_r0x0046fb8d;\ncode_r0x0046fc7a:\n    *(*0x20 + (uVar4 - 0x3c)) = cVar1 + '0';\n    *(*0x20 + -0x80) = 0x46fca5;\n    fcn.004489c0(-(uVar4 - 0x14));\n    goto code_r0x0046fc13;\ncode_r0x0046fbc0:\n    if (uVar2 < 0x14) {\n        *(*0x20 + (uVar2 - 0x50)) = cVar1 + '0';\n        *(*0x20 + -0x80) = 0x46fbee;\n        uVar3 = fcn.004489c0(-(uVar2 - 0x14));\n        return uVar3;\n    }\n    *(*0x20 + -0x80) = 0x46fc06;\n    fcn.0045ca40(0x14);\ncode_r0x0046fc06:\n    *(*0x20 + -0x80) = 0x46fc13;\n    fcn.0045ca40(0x14);\ncode_r0x0046fc13:\n    *(*0x20 + -0x80) = 0x46fc2c;\n    uVar3 = fcn.00448620(1);\n    return uVar3;\n}\n",
        "token_count": 1035
    },
    "004289c0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint64_t fcn.004289c0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg2;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004289c0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0xa0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (((unaff_RBX & 0x3fffff) == 0) && ((arg1 & 0x3fffff) == 0)) {\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = in_XMM15;\n            *(*0x20 + -0x30) = 0x428e60;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = 0x428de0;\n            *(*0x20 + -0x18) = 0x4d5ba0;\n            *(*0x20 + -0x10) = *0x20 + -0x30;\n            *(*0x20 + -0xa8) = 0x428a8a;\n            uVar2 = fcn.0042b340(0x4d5ba0, in_RAX + 0x10090);\n            *(*0x20 + -0x58) = uVar2;\n            iVar5 = 0;\n            do {\n                if (4 < iVar5) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                uVar4 = *(*0x20 + 0x18);\n                *(*0x20 + -0xa8) = 0x428ac5;\n                arg1 = fcn.0042b080();\n                *(*0x20 + -0xa8) = 0x428aea;\n                iVar3 = (**0x4d5ba0)(uVar4, 0x4d5ba0);\n                iVar5 = *(*0x20 + -0x60);\n                iVar7 = *(*0x20 + 8);\n                arg2 = *(iVar7 + 0x10 + iVar5 * 0x18);\n                if (*(iVar7 + 8 + iVar5 * 0x18) < arg1) {\n                    if (arg2 < arg1) goto code_r0x00428d2f;\n                    *(iVar7 + 8 + iVar5 * 0x18) = arg1;\n                }\n                arg1_00 = *(iVar7 + 8 + iVar5 * 0x18);\n                iVar1 = *(iVar7 + iVar5 * 0x18);\n                arg2 = -*0x5d3cd8;\n                uVar2 = (*0x5d3cd8 + arg1 * 8) - 1 & arg2;\n                if (arg1_00 == 0) goto code_r0x00428d25;\n                arg2 = (iVar3 << 3 & arg2) + iVar1;\n                arg1_00 = uVar2 + iVar1;\n                uVar2 = *(*0x20 + -0x58);\n                if (0 < uVar2) {\n                    iVar5 = *(iVar7 + 0x10090);\n                    arg1_01 = *(iVar7 + 0x10098);\n                    if (arg1_01 <= uVar2 - 1) goto code_r0x00428d15;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x80) = arg1_00;\n                    uVar4 = *((uVar2 - 1) * 0x10 + 8 + iVar5);\n                    *(*0x20 + -0xa8) = 0x428ba7;\n                    uVar4 = (**(*0x20 + -0x20))(uVar4, *0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x80);\n                    *(*0x20 + -0xa8) = 0x428bbc;\n                    arg2 = fcn.0042b100(uVar4);\n                    iVar5 = *(*0x20 + -0x60);\n                    iVar7 = *(*0x20 + 8);\n                    uVar2 = *(*0x20 + -0x58);\n                    arg1_00 = arg1;\n                }\n                iVar3 = *(iVar7 + 0x10090);\n                arg1_01 = *(iVar7 + 0x10098);\n                if (uVar2 < arg1_01) {\n                    if (arg1_01 <= uVar2) goto code_r0x00428d0d;\n                    *(*0x20 + -0x70) = arg1_00;\n                    *(*0x20 + -0x68) = arg2;\n                    uVar4 = *(uVar2 * 0x10 + 8 + iVar3);\n                    *(*0x20 + -0xa8) = 0x428c1c;\n                    uVar4 = (**(*0x20 + -0x20))(uVar4, *0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x70);\n                    *(*0x20 + -0xa8) = 0x428c31;\n                    arg2 = fcn.0042b100(uVar4);\n                    iVar5 = *(*0x20 + -0x60);\n                    uVar2 = *(*0x20 + -0x58);\n                }\n                if (arg2 + 0x800000000000 < arg1_00 + 0x800000000000) {\n                    iVar7 = arg1_00 - arg2;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                if (iVar7 != 0) {\n                    *(*0x20 + -0x38) = arg2 + 0x800000000000;\n                    *(*0x20 + -0x40) = arg1_00 + 0x800000000000;\n                    *(*0x20 + -0x48) = arg1_00;\n                    *(*0x20 + -0x50) = arg2;\n                    *(*0x20 + -0xa8) = 0x428cae;\n                    fcn.0042c400();\n                    if (*(*0x20 + -0x38) < *(*0x20 + -0x40)) {\n                        iVar5 = *(*0x20 + -0x48) - *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar5 = 0;\n                    }\n                    *(*0x20 + -0xa8) = 0x428cdc;\n                    fcn.00415680(iVar5);\n                    uVar2 = *(*0x20 + -0x58);\n                    iVar5 = *(*0x20 + -0x60);\n                }\n                iVar5 = iVar5 + 1;\n            } while( true );\n        }\n        goto code_r0x00428d3a;\n    }\n    goto code_r0x00428d9c;\ncode_r0x00428d0d:\n    *(*0x20 + -0xa8) = 0x428d15;\n    fcn.0045ca40(arg1_01);\ncode_r0x00428d15:\n    *(*0x20 + -0xa8) = 0x428d25;\n    fcn.0045ca40(arg1_01);\ncode_r0x00428d25:\n    *(*0x20 + -0xa8) = 0x428d2f;\n    fcn.0045ca40(arg1_00);\ncode_r0x00428d2f:\n    *(*0x20 + -0xa8) = 0x428d3a;\n    fcn.0045cac0(arg1, arg2);\ncode_r0x00428d3a:\n    *(*0x20 + -0xa8) = 0x428d3f;\n    fcn.00434840();\n    *(*0x20 + -0xa8) = 0x428d50;\n    fcn.00435140();\n    *(*0x20 + -0xa8) = 0x428d5d;\n    fcn.00434fa0();\n    *(*0x20 + -0xa8) = 0x428d6e;\n    fcn.00435140();\n    *(*0x20 + -0xa8) = 0x428d7b;\n    fcn.00434fa0();\n    *(*0x20 + -0xa8) = 0x428d85;\n    fcn.00434aa0();\n    *(*0x20 + -0xa8) = 0x428d8a;\n    fcn.004348c0();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa8) = 0x428d9b;\n    in_RAX = fcn.004330a0();\ncode_r0x00428d9c:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + -8) = 0x428db0;\n    fcn.0045a360();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    *0x20 = puVar6;\n    goto code_r0x004289c0;\n}\n",
        "token_count": 2355
    },
    "00436ec0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00436ec0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    *0x5d3b5c = 1;\n    for (iVar2 = 0; iVar2 < 5; iVar2 = iVar2 + 1) {\n        *0x580784 = 0x7fffffff;\n        *0x580780 = 1;\n        cVar1 = fcn.00440440();\n        if (cVar1 == '\\0') break;\n        fcn.00430760();\n    }\n    fcn.00430760();\n    fcn.00440440();\n    fcn.00430760();\n    return;\n}\n",
        "token_count": 206
    },
    "004aa1c0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint64_t fcn.004aa1c0(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    bool bVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int32_t iVar6;\n    uint8_t uVar7;\n    \n    uVar5 = 0;\n    for (uVar4 = 1; uVar4 < unaff_RSI; uVar4 = uVar4 + 2) {\n        if (unaff_RSI <= uVar4 - 1) goto code_r0x004aa3b0;\n        uVar7 = *(unaff_RDI + -1 + uVar4);\n        iVar6 = uVar7 - 0x30;\n        if (iVar6 < 10) {\n            bVar3 = true;\n        }\n        else if (uVar7 + 0x9f < 6) {\n            iVar6 = uVar7 - 0x57;\n            bVar3 = true;\n        }\n        else if (uVar7 + 0xbf < 6) {\n            iVar6 = uVar7 - 0x37;\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n            iVar6 = 0;\n        }\n        if (!bVar3) {\n            return uVar5;\n        }\n        if (unaff_RSI <= uVar4) goto code_r0x004aa3a5;\n        cVar1 = *(unaff_RDI + uVar4);\n        uVar7 = cVar1 - 0x30;\n        if (uVar7 < 10) {\n            bVar3 = true;\n        }\n        else if (cVar1 + 0x9fU < 6) {\n            uVar7 = cVar1 + 0xa9;\n            bVar3 = true;\n        }\n        else if (cVar1 + 0xbfU < 6) {\n            uVar7 = cVar1 - 0x37;\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n            uVar7 = 0;\n        }\n        if (!bVar3) {\n            return uVar5;\n        }\n        if (unaff_RBX <= uVar5) goto code_r0x004aa39a;\n        *(in_RAX + uVar5) = iVar6 << 4 | uVar7;\n        uVar5 = uVar5 + 1;\n    }\n    if ((unaff_RSI & 1) == 0) {\n        return uVar5;\n    }\n    if (uVar4 - 1 < unaff_RSI) {\n        cVar1 = *(unaff_RDI + -1 + uVar4);\n        if (((9 < cVar1 - 0x30U) && (5 < cVar1 + 0x9fU)) && (5 < cVar1 + 0xbfU)) {\n            return uVar5;\n        }\n        return uVar5;\n    }\n    fcn.0045ca40(unaff_RSI);\ncode_r0x004aa39a:\n    fcn.0045ca40(unaff_RBX);\ncode_r0x004aa3a5:\n    fcn.0045ca40(unaff_RSI);\ncode_r0x004aa3b0:\n    fcn.0045ca40(unaff_RSI);\n    pcVar2 = swi(3);\n    uVar4 = (*pcVar2)();\n    return uVar4;\n}\n",
        "token_count": 802
    },
    "004545c0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.004545c0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n        unaff_RBX = unaff_RBX & 0xff;\n    }\n    iVar2 = fcn.0044b1a0();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    cVar1 = *(iVar2 + 0x24);\n    if ((cVar1 == '\\x11') || (cVar1 == '\\n')) {\n        return 0;\n    }\n    if (cVar1 != '\\x10') {\n        piVar3 = fcn.0044b920();\n        if (unaff_RBX < 8) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = CONCAT71(0x2e656d69746e75, *piVar3 == 0x2e656d69746e7572);\n        }\n        return uVar4 & 0xffffffff;\n    }\n    if (unaff_RBX != '\\0') {\n        return 0;\n    }\n    return *0x5d3b27 ^ 1;\n}\n",
        "token_count": 333
    },
    "0046a5a0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.0046a5a0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((99 < in_RAX) || (unaff_RBX != 10)) {\n                *(*0x20 + -0x40) = 0x46a645;\n                fcn.0046a6a0(0);\n                return in_RAX;\n            }\n            if (in_RAX < 10) {\n                arg1 = in_RAX + 1;\n                if (in_RAX <= arg1) {\n                    return in_RAX + 0x4d13ec;\n                }\n            }\n            else {\n                arg1 = in_RAX * 2 + 2;\n                if (arg1 < 0xc9) {\n                    if (in_RAX << 1 <= arg1) {\n                        return in_RAX * 2 + 0x4d3fac;\n                    }\n                    *(*0x20 + -0x40) = 0x46a65a;\n                    fcn.0045cb00(arg1);\n                }\n                *(*0x20 + -0x40) = 0x46a665;\n                fcn.0045ca80(arg1, 200);\n            }\n            *(*0x20 + -0x40) = 0x46a66a;\n            in_RAX = fcn.0045cb00(arg1);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x46a67a;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 540
    },
    "00477ec0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00477ec0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0x40) {\n                iVar2 = 0;\n                while( true ) {\n                    if (0x3f < iVar2) {\n                        *(*0x20 + 0x10) = 0x40;\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x30) = 0x477f29;\n                        iVar1 = fcn.0040c440();\n                        *(iVar1 + 0x140) = 0x3d;\n                        iVar2 = *(*0x20 + 8);\n                        if (iVar1 != iVar2) {\n                            *(*0x20 + -0x10) = iVar1;\n                            *(*0x20 + -0x30) = 0x477f4c;\n                            fcn.0045d380(0x40);\n                            iVar1 = *(*0x20 + -0x10);\n                            iVar2 = *(*0x20 + 8);\n                        }\n                        for (iVar3 = 0; iVar3 < 0x100; iVar3 = iVar3 + 1) {\n                            *(iVar1 + 0x40 + iVar3) = 0xff;\n                        }\n                        iVar3 = *(*0x20 + 0x10);\n                        for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n                            *(iVar1 + 0x40 + *(iVar2 + iVar4)) = iVar4;\n                        }\n                        return;\n                    }\n                    if ((*(in_RAX + iVar2) == '\\n') || (*(in_RAX + iVar2) == '\\r')) break;\n                    iVar2 = iVar2 + 1;\n                }\n                *(*0x20 + -0x30) = 0x477fa5;\n                fcn.00432920();\n            }\n            unaff_RBX = 0x4f9ae8;\n            *(*0x20 + -0x30) = 0x477fb8;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x477fc8;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 741
    },
    "00493160": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00493160(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX < 0) {\n                *(*0x20 + -0x58) = 0x493198;\n                fcn.00493160();\n                *(*0x20 + -0x58) = 0x4931b1;\n                fcn.00448620(1);\n                return;\n            }\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            uVar2 = 0x1f;\n            while (cVar1 = in_RAX,  9 < in_RAX) {\n                in_RAX = SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_RAX) >> 0x40, 0) + in_RAX >> 3;\n                if (0x1f < uVar2) goto code_r0x00493245;\n                *(*0x20 + (uVar2 - 0x28)) = cVar1 + in_RAX * -10 + '0';\n                uVar2 = uVar2 - 1;\n            }\n            if (uVar2 < 0x20) {\n                *(*0x20 + (uVar2 - 0x28)) = cVar1 + '0';\n                *(*0x20 + -0x58) = 0x49322e;\n                fcn.004489c0(-(uVar2 - 0x20));\n                return;\n            }\n            *(*0x20 + -0x58) = 0x493245;\n            fcn.0045ca40(0x20);\ncode_r0x00493245:\n            *(*0x20 + -0x58) = 0x493252;\n            in_RAX = fcn.0045ca40(0x20);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x49325d;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 633
    },
    "004378e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint64_t fcn.004378e0(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar2;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 9) && (arg1 == 4)) {\n                LOCK();\n                bVar2 = *(in_RAX + 0x90) == 9;\n                if (bVar2) {\n                    *(in_RAX + 0x90) = 4;\n                }\n                return in_RAX & 0xffffff00 | bVar2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x437933;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x437946;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 422
    },
    "004714c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.004714c0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (((arg1 < 9) && (arg1 != 0)) && ((arg1 - 1 & arg1) == 0)) {\n                if (unaff_RBX < 9) {\n                    *(*0x20 + -0x28) = 0x4714fc;\n                    fcn.004583e0(arg1);\n                    return;\n                }\n                arg1 = 9;\n                *(*0x20 + -0x28) = 0x471513;\n                fcn.0045ca40(9);\n            }\n            unaff_RBX = 0x4f9b38;\n            *(*0x20 + -0x28) = 0x471526;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x471545;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 485
    },
    "00471560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.00471560(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (((arg1 < 9) && (arg1 != 0)) && ((arg1 - 1 & arg1) == 0)) {\n                if (unaff_RBX < 9) {\n                    *(*0x20 + -0x28) = 0x47159c;\n                    fcn.004583e0(arg1);\n                    return;\n                }\n                arg1 = 9;\n                *(*0x20 + -0x28) = 0x4715b3;\n                fcn.0045ca40(9);\n            }\n            unaff_RBX = 0x4f9b38;\n            *(*0x20 + -0x28) = 0x4715c6;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x4715e5;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 490
    },
    "0046a480": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0046a480(int64_t arg1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return in_RAX << 8;\n            }\n            if (arg1 + 0x15cU < 0x2b8) {\n                iVar5 = (arg1 + 0x15cU) * 0x10;\n                uVar1 = *(iVar5 + 0x573724);\n                uVar2 = *(iVar5 + 0x573728);\n                uVar3 = *(iVar5 + 0x57372c);\n                *(*0x20 + -0x18) = *(iVar5 + 0x573720);\n                *(*0x20 + -0x14) = uVar1;\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0xc) = uVar3;\n                if (arg1 < 0) {\n                    *(*0x20 + -0x18) = *(*0x20 + -0x18) + 1;\n                }\n                uVar6 = SUB168(ZEXT816(*(*0x20 + -0x18)) * ZEXT816(in_RAX) >> 0x40, 0);\n                uVar4 = SUB168(ZEXT816(*(*0x20 + -0x10)) * ZEXT816(in_RAX), 0);\n                return (SUB168(ZEXT816(*(*0x20 + -0x10)) * ZEXT816(in_RAX) >> 0x40, 0) + CARRY8(uVar4, uVar6)) * 0x200 |\n                       uVar4 + uVar6 >> 0x37;\n            }\n            unaff_RBX = 0x4f9f18;\n            *(*0x20 + -0x30) = 0x46a574;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x46a589;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 728
    },
    "004785c0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint64_t fcn.004785c0(uint64_t arg1, ulong noname_1, int64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint32_t uVar15;\n    uint64_t uVar16;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            if (arg3 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            uVar6 = 0;\n            uVar7 = 0;\n            iVar9 = 0;\n            iVar12 = 0;\n            while ((7 < arg3 - uVar6 && (iVar5 = arg1 - uVar7,  7 < iVar5))) {\n                arg1 = uVar6 + 8;\n                if (arg4 < arg1) goto code_r0x00478bba;\n                if (arg1 < uVar6) goto code_r0x00478baf;\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x28) = iVar12;\n                *(*0x20 + -0x10) = iVar9;\n                *(*0x20 + -0x50) = uVar6;\n                uVar6 = uVar6 - arg4 >> 0x3f & *(*0x20 + -0x50);\n                uVar1 = *(in_RAX + 0x40 + *(unaff_RSI + uVar6));\n                uVar2 = *(in_RAX + 0x40 + *(unaff_RSI + 1 + uVar6));\n                uVar3 = *(in_RAX + 0x40 + *(unaff_RSI + 2 + uVar6));\n                *(*0x20 + -0x51) = uVar3;\n                *(*0x20 + -0x52) = *(in_RAX + 0x40 + *(unaff_RSI + 3 + uVar6));\n                *(*0x20 + -0x53) = *(in_RAX + 0x40 + *(unaff_RSI + 4 + uVar6));\n                *(*0x20 + -0x54) = *(in_RAX + 0x40 + *(unaff_RSI + 5 + uVar6));\n                *(*0x20 + -0x55) = *(in_RAX + 0x40 + *(unaff_RSI + 6 + uVar6));\n                uVar4 = *(in_RAX + 0x40 + *(unaff_RSI + 7 + uVar6));\n                arg1_00 = *(*0x20 + -0x55);\n                if ((uVar2 | uVar1 | uVar3 | *(*0x20 + -0x52) | *(*0x20 + -0x53) | *(*0x20 + -0x54) | *(*0x20 + -0x55) |\n                    uVar4) == 0xff) {\n                    arg1 = *(*0x20 + 0x18);\n                    if (arg1 < uVar7) goto code_r0x00478b9c;\n                    *(*0x20 + -0x30) = uVar7;\n                    iVar9 = unaff_RDI - uVar7;\n                    *(*0x20 + -0xa0) = 0x478854;\n                    uVar6 = fcn.00478040(iVar5, arg1, arg3, arg4);\n                    uVar7 = *(*0x20 + -0x30) + unaff_RBX + (-iVar9 >> 0x3f & uVar7);\n                    if (iVar5 != 0) {\n                        return uVar7;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    arg3 = *(*0x20 + 0x30);\n                    arg4 = *(*0x20 + 0x38);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                    iVar12 = iVar5;\n                }\n                else {\n                    uVar6 = uVar1 << 0x3a | uVar2 << 0x34;\n                    uVar13 = *(*0x20 + -0x51) << 0x2e | uVar6;\n                    uVar14 = *(*0x20 + -0x53) << 0x22 | *(*0x20 + -0x52) << 0x28 | uVar13;\n                    uVar11 = *(*0x20 + -0x54) << 0x1c | uVar14;\n                    uVar16 = arg1_00 << 0x16;\n                    arg1_00 = uVar16 | uVar11;\n                    arg1 = *(*0x20 + 0x18);\n                    if (arg1 < uVar7) goto code_r0x00478ba7;\n                    *(unaff_RBX + (uVar7 - unaff_RDI >> 0x3f & uVar7)) =\n                         uVar6 >> 0x38 | (uVar13 & 0xff000000000000) >> 0x28 | (uVar14 & 0xff0000000000) >> 0x18 |\n                         (uVar11 & 0xff00000000) >> 8 | (arg1_00 & 0xff000000) << 8 |\n                         (uVar4 << 0x10 | uVar16 & 0xff0000) << 0x18;\n                    uVar7 = uVar7 + 6;\n                    uVar6 = *(*0x20 + -0x20);\n                    iVar9 = *(*0x20 + -0x10);\n                    iVar12 = *(*0x20 + -0x28);\n                }\n            }\n            while ((arg1_00 = arg3 - uVar6,  uVar11 = uVar6,  3 < arg1_00 && (iVar5 = arg1 - uVar7,  3 < iVar5))) {\n                arg1_00 = uVar6 + 4;\n                arg1 = arg4;\n                if (arg4 < arg1_00) goto code_r0x00478b91;\n                if (arg1_00 < uVar6) goto code_r0x00478b86;\n                *(*0x20 + -0x38) = uVar6;\n                *(*0x20 + -0x20) = arg1_00;\n                *(*0x20 + -0x18) = iVar9;\n                *(*0x20 + -0x40) = iVar12;\n                uVar6 = uVar6 - arg4 >> 0x3f & *(*0x20 + -0x38);\n                uVar1 = *(in_RAX + 0x40 + *(unaff_RSI + uVar6));\n                uVar2 = *(in_RAX + 0x40 + *(unaff_RSI + 1 + uVar6));\n                uVar3 = *(in_RAX + 0x40 + *(unaff_RSI + 2 + uVar6));\n                arg1_00 = uVar3;\n                uVar4 = *(in_RAX + 0x40 + *(unaff_RSI + 3 + uVar6));\n                if ((uVar2 | uVar1 | uVar3 | uVar4) == 0xff) {\n                    uVar11 = *(*0x20 + 0x18);\n                    if (uVar11 < uVar7) goto code_r0x00478b73;\n                    *(*0x20 + -0x48) = uVar7;\n                    iVar9 = unaff_RDI - uVar7;\n                    *(*0x20 + -0xa0) = 0x478a25;\n                    uVar6 = fcn.00478040(iVar5, uVar11, arg3, arg4);\n                    uVar7 = *(*0x20 + -0x48) + unaff_RBX + (-iVar9 >> 0x3f & uVar7);\n                    if (iVar5 != 0) {\n                        return uVar7;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    arg3 = *(*0x20 + 0x30);\n                    arg4 = *(*0x20 + 0x38);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                    iVar12 = iVar5;\n                }\n                else {\n                    uVar10 = uVar1 << 0x1a | uVar2 << 0x14;\n                    uVar15 = uVar3 << 0xe | uVar10;\n                    arg1_00 = uVar15;\n                    uVar11 = *(*0x20 + 0x18);\n                    if (uVar11 < uVar7) goto code_r0x00478b7e;\n                    *(unaff_RBX + (uVar7 - unaff_RDI >> 0x3f & uVar7)) =\n                         uVar10 >> 0x18 | (uVar15 & 0xff0000) >> 8 | (uVar4 << 8 | uVar3 << 0xe & 0xff00) << 8;\n                    uVar7 = uVar7 + 3;\n                    uVar6 = *(*0x20 + -0x20);\n                    iVar9 = *(*0x20 + -0x18);\n                    iVar12 = *(*0x20 + -0x40);\n                    arg1 = uVar11;\n                }\n            }\n            while( true ) {\n                if (arg3 <= uVar11) {\n                    return uVar7;\n                }\n                if (arg1 < uVar7) break;\n                *(*0x20 + -0x20) = uVar7;\n                iVar9 = arg1 - uVar7;\n                *(*0x20 + -0xa0) = 0x478b25;\n                uVar11 = fcn.00478040(iVar9, uVar11, arg3, arg4);\n                uVar7 = *(*0x20 + -0x20) + (-(unaff_RDI - uVar7) >> 0x3f & uVar7) + unaff_RBX;\n                if (iVar9 != 0) {\n                    return uVar7;\n                }\n                unaff_RDI = *(*0x20 + 0x20);\n                arg4 = *(*0x20 + 0x38);\n                unaff_RBX = *(*0x20 + 0x10);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RSI = *(*0x20 + 0x28);\n                arg3 = *(*0x20 + 0x30);\n                arg1_00 = unaff_RDI;\n            }\n            *(*0x20 + -0xa0) = 0x478b73;\n            fcn.0045cb00(arg1);\ncode_r0x00478b73:\n            *(*0x20 + -0xa0) = 0x478b7e;\n            fcn.0045cb00(uVar11);\n            arg1 = arg4;\ncode_r0x00478b7e:\n            *(*0x20 + -0xa0) = 0x478b86;\n            fcn.0045cb00(uVar11);\ncode_r0x00478b86:\n            *(*0x20 + -0xa0) = 0x478b91;\n            fcn.0045cb00(arg1_00);\ncode_r0x00478b91:\n            *(*0x20 + -0xa0) = 0x478b9c;\n            arg4 = arg1;\n            fcn.0045cac0(arg1_00, arg1);\ncode_r0x00478b9c:\n            *(*0x20 + -0xa0) = 0x478ba7;\n            fcn.0045cb00(arg1);\ncode_r0x00478ba7:\n            *(*0x20 + -0xa0) = 0x478baf;\n            fcn.0045cb00(arg1);\n            arg1 = arg1_00;\ncode_r0x00478baf:\n            *(*0x20 + -0xa0) = 0x478bba;\n            fcn.0045cb00(arg1);\ncode_r0x00478bba:\n            *(*0x20 + -0xa0) = 0x478bc5;\n            in_RAX = fcn.0045cac0(arg1, arg4);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + 0x28) = unaff_RSI;\n        *(puVar8 + 0x30) = arg3;\n        *(puVar8 + 0x38) = arg4;\n        *(puVar8 + -8) = 0x478bee;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        unaff_RSI = *(puVar8 + 0x28);\n        arg3 = *(puVar8 + 0x30);\n        arg4 = *(puVar8 + 0x38);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3461
    },
    "004488a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.004488a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0045ccf0();\n    fcn.00448380(5);\n    return;\n}\n",
        "token_count": 134
    },
    "004ab4e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.004ab4e0(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    ulong arg1;\n    uint64_t uVar7;\n    uint64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    ulong unaff_RBP;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0xc0) = 0x464c576b49506d41;\n            *(*0x20 + -0xb8) = 0x796c7767704e5562;\n            *(*0x20 + -0xb0) = 0x437058624173764e;\n            *(*0x20 + -0xa8) = 0x794f42657155554d;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x140) = *0x20 + -8;\n            *(*0x20 + -0x138) = 0x4ab591;\n            fcn.0045ccf0();\n            unaff_RBP = *(*0x20 + -0x140);\n            *(*0x20 + -0x28) = *0x20 + -0xa0;\n            *(*0x20 + -0x138) = 0x4ab5aa;\n            uVar2 = fcn.004498a0();\n            *(*0x20 + -0x2c) = uVar2;\n            *(*0x20 + -0x138) = 0x4ab5ca;\n            fcn.0040fa60(0x10);\n            *(*0x20 + -0x138) = 0x4ab5e5;\n            fcn.0040fa60(0x18);\n            *(*0x20 + -0x138) = 0x4ab605;\n            fcn.0040fa60(0x20);\n            *(*0x20 + -0x138) = 0x4ab625;\n            fcn.0040f8c0(0x20);\n            uVar5 = *(*0x20 + 8);\n            arg1 = *(*0x20 + 0x10);\n            *(*0x20 + -0x138) = 0x4ab645;\n            uVar3 = fcn.004784a0(arg1);\n            *(*0x20 + -0x50) = uVar3;\n            *(*0x20 + -0xf8) = uVar5;\n            *(*0x20 + -0xf0) = arg1;\n            *(*0x20 + -0x138) = 0x4ab669;\n            iVar4 = fcn.00477200(0x20);\n            *(*0x20 + -0xe0) = iVar4;\n            *(*0x20 + -0x48) = 0x20;\n            pcVar1 = *(iVar4 + 0x18);\n            *(*0x20 + -0x138) = 0x4ab67f;\n            uVar5 = (*pcVar1)();\n            *(*0x20 + -0xd8) = uVar5;\n            *(*0x20 + -0x138) = 0x4ab698;\n            iVar6 = fcn.00444b80(*(*0x20 + -0xf8));\n            *(*0x20 + -0x40) = iVar6;\n            iVar4 = *(*0x20 + -0xe0);\n            uVar7 = *(*0x20 + -0xd8);\n            unaff_RBX = *(*0x20 + -0x50);\n            iVar9 = *(*0x20 + -0xf0);\n            arg2 = *(*0x20 + -0xf8);\n            uVar10 = 0;\n            while (uVar10 < arg2) {\n                if (arg2 < uVar7) goto code_r0x004ab7e7;\n                if (uVar7 < uVar10) goto code_r0x004ab7dc;\n                *(*0x20 + -0xe8) = uVar10;\n                *(*0x20 + -200) = uVar7;\n                pcVar1 = *(iVar4 + 0x20);\n                iVar4 = uVar7 - uVar10;\n                *(*0x20 + -0xd0) = iVar9 - uVar10;\n                *(*0x20 + -0x138) = 0x4ab727;\n                (*pcVar1)(iVar4, iVar4, iVar4, *(*0x20 + -0xd0));\n                uVar7 = *(*0x20 + -200) + *(*0x20 + -0xd8);\n                iVar4 = *(*0x20 + -0xe0);\n                iVar6 = *(*0x20 + -0x40);\n                unaff_RBX = *(*0x20 + -0x50);\n                iVar9 = *(*0x20 + -0xf0);\n                arg2 = *(*0x20 + -0xf8);\n                uVar10 = *(*0x20 + -0xe8) + *(*0x20 + -0xd8);\n            }\n            uVar10 = arg2;\n            if (arg2 - 1 < arg2) {\n                uVar7 = arg2 - *((arg2 - 1) + iVar6);\n                if (uVar7 <= arg2) {\n                    *(*0x20 + -0x138) = 0x4ab7b9;\n                    fcn.004489c0(uVar7);\n                    return;\n                }\n                *(*0x20 + -0x138) = 0x4ab7d1;\n                fcn.0045cac0(uVar7, arg2);\n                uVar7 = arg2;\n            }\n            *(*0x20 + -0x138) = 0x4ab7dc;\n            fcn.0045ca40(uVar10);\n            arg2 = uVar10;\ncode_r0x004ab7dc:\n            *(*0x20 + -0x138) = 0x4ab7e7;\n            fcn.0045cb00(uVar7);\ncode_r0x004ab7e7:\n            *(*0x20 + -0x138) = 0x4ab7f2;\n            in_RAX = fcn.0045cac0(uVar7, arg2);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x4ab805;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1706
    },
    "0040a100": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a100(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t *unaff_RBX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = unaff_RBX[1] + 1;\n            unaff_RBX[1] = uVar1;\n            uVar2 = unaff_RBX << 0x10 | uVar1 & 0x7ffff;\n            puVar3 = (uVar2 >> 0x13) * 8;\n            if (unaff_RBX == puVar3) {\n                do {\n                    uVar1 = *in_RAX;\n                    *unaff_RBX = uVar1;\n                    LOCK();\n                    bVar5 = uVar1 == *in_RAX;\n                    *in_RAX = *in_RAX ^ bVar5 * (*in_RAX ^ uVar2);\n                } while (!bVar5);\n                return uVar1 ^ !bVar5 * (uVar1 ^ *in_RAX);\n            }\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x40) = 0x40a187;\n            fcn.00434840();\n            *(*0x20 + -0x40) = 0x40a198;\n            fcn.00435140();\n            *(*0x20 + -0x40) = 0x40a1a5;\n            fcn.004350c0();\n            *(*0x20 + -0x40) = 0x40a1b6;\n            fcn.00435140();\n            *(*0x20 + -0x40) = 0x40a1c5;\n            fcn.00434fa0();\n            *(*0x20 + -0x40) = 0x40a1d6;\n            fcn.00435140();\n            *(*0x20 + -0x40) = 0x40a1e5;\n            fcn.00434fa0();\n            *(*0x20 + -0x40) = 0x40a1f6;\n            fcn.00435140();\n            *(*0x20 + -0x40) = 0x40a205;\n            fcn.004350c0();\n            *(*0x20 + -0x40) = 0x40a20a;\n            fcn.00434aa0();\n            *(*0x20 + -0x40) = 0x40a20f;\n            fcn.004348c0();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x40) = 0x40a225;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x40a235;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 893
    },
    "0040a260": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.0040a260(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == ((in_RAX << 0x10 | 0x7ffffU) >> 0x13) * 8) {\n                return;\n            }\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x40a2a6;\n            fcn.00434840();\n            *(*0x20 + -0x18) = *(*0x20 + -0x10);\n            *(*0x20 + -0x30) = 0x40a2b5;\n            fcn.00434840();\n            *(*0x20 + -0x30) = 0x40a2c6;\n            fcn.00435140();\n            *(*0x20 + -0x30) = 0x40a2d0;\n            fcn.00434fa0();\n            *(*0x20 + -0x30) = 0x40a2d5;\n            fcn.00434aa0();\n            *(*0x20 + -0x30) = 0x40a2da;\n            fcn.004348c0();\n            *(*0x20 + -0x30) = 0x40a2eb;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x40a2f6;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 499
    },
    "00422320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422320(void)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = 0x422345;\n            fcn.00434840();\n            *(*0x20 + -0x40) = *(*(*0x20 + 8) + 0x68);\n            *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x30);\n            *(*0x20 + -0x80) = 0x422365;\n            fcn.00434840();\n            *(*0x20 + -0x80) = 0x422376;\n            fcn.00435140();\n            *(*0x20 + -0x80) = 0x422385;\n            fcn.00435100();\n            *(*0x20 + -0x80) = 0x422396;\n            fcn.00435140();\n            *(*0x20 + -0x80) = 0x4223a5;\n            fcn.00434e40();\n            *(*0x20 + -0x80) = 0x4223b6;\n            fcn.00435140();\n            *(*0x20 + -0x80) = 0x4223c5;\n            fcn.00434e40();\n            *(*0x20 + -0x80) = 0x4223d6;\n            fcn.00435140();\n            *(*0x20 + -0x80) = 0x4223db;\n            fcn.004348c0();\n            iVar2 = *(*0x20 + 8);\n            *(*0x20 + -0x38) = *(iVar2 + 0x50);\n            *(*0x20 + -0x30) = 1;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x20) = *(iVar2 + 0x48);\n            *(*0x20 + -0x18) = 1;\n            *(*0x20 + -0x10) = 0;\n            uVar3 = 0;\n            while (uVar3 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar3) {\n                *(*0x20 + -0x58) = uVar3;\n                *(*0x20 + -0x50) = *(iVar2 + 0x68) * uVar3 + *(iVar2 + 0x18);\n                *(*0x20 + -0x80) = 0x422450;\n                fcn.00434840();\n                *(*0x20 + -0x80) = 0x42245a;\n                fcn.00434fa0();\n                *(*0x20 + -0x80) = 0x42245f;\n                fcn.004348c0();\n                if (*(*(*0x20 + 8) + 0x30) < *(*0x20 + -0x58) || *(*(*0x20 + 8) + 0x30) == *(*0x20 + -0x58)) {\n                    bVar5 = (**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0;\n                }\n                else {\n                    bVar5 = true;\n                }\n                *(*0x20 + -0x59) = bVar5;\n                if (bVar5 == false) {\n                    *(*0x20 + -0x80) = 0x4224b5;\n                    fcn.00434840();\n                    *(*0x20 + -0x80) = 0x4224c6;\n                    fcn.00435140();\n                    *(*0x20 + -0x80) = 0x4224cb;\n                    fcn.004348c0();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x422498;\n                    fcn.00434840();\n                    *(*0x20 + -0x80) = 0x4224a9;\n                    fcn.00435140();\n                    *(*0x20 + -0x80) = 0x4224ae;\n                    fcn.004348c0();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    *(*0x20 + -0x80) = 0x422505;\n                    fcn.00434840();\n                    *(*0x20 + -0x80) = 0x422516;\n                    fcn.00435140();\n                    *(*0x20 + -0x80) = 0x42251b;\n                    fcn.004348c0();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x4224e5;\n                    fcn.00434840();\n                    *(*0x20 + -0x80) = 0x4224f6;\n                    fcn.00435140();\n                    *(*0x20 + -0x80) = 0x4224fb;\n                    fcn.004348c0();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = *(*0x20 + -0x59) ^ 1;\n                }\n                *(*0x20 + -0x5a) = uVar1;\n                if (uVar1 != 0) {\n                    *(*0x20 + -0x80) = 0x422549;\n                    fcn.00434840();\n                    *(*0x20 + -0x80) = 0x42255a;\n                    fcn.00435140();\n                    *(*0x20 + -0x80) = 0x42255f;\n                    fcn.004348c0();\n                }\n                *(*0x20 + -0x80) = 0x422565;\n                fcn.00434840();\n                *(*0x20 + -0x80) = 0x42256a;\n                fcn.00434aa0();\n                *(*0x20 + -0x80) = 0x42256f;\n                fcn.004348c0();\n                if (*(*0x20 + -0x5a) != '\\0') {\n                    *(*0x20 + -0x80) = 0x4225a5;\n                    fcn.004352a0(0);\n                }\n                if (*(*0x20 + -0x30) == -0x80) {\n                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                    *(*0x20 + -0x30) = 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                }\n                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                if (*(*0x20 + -0x18) == -0x80) {\n                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                    *(*0x20 + -0x18) = 1;\n                }\n                else {\n                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                }\n                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                iVar2 = *(*0x20 + 8);\n                uVar3 = *(*0x20 + -0x58) + 1;\n            }\n            *(*0x20 + -0x80) = 0x422605;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x422610;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1977
    },
    "00428fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.00428fa0(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar3 = in_RAX[1];\n    uVar2 = unaff_RBX - 1;\n    uVar1 = 1;\n    do {\n        if (uVar2 == 0) {\ncode_r0x00428ffb:\n            uVar2 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            if (uVar3 == 0) {\n                uVar2 = 0x40;\n            }\ncode_r0x00429008:\n            if (uVar2 < 0x40) {\n                uVar3 = (-(unaff_RBX < 0x40) & 1 << (unaff_RBX & 0x3f)) - 1 << (uVar2 & 0x3f);\n                if (*0x5d3b37 == '\\0') {\n                    fcn.00401d00();\n                }\n                else {\n                    popcnt(in_RAX[2] & uVar3);\n                }\n                uVar3 = ~uVar3;\n                in_RAX[1] = in_RAX[1] & uVar3;\n                in_RAX[2] = in_RAX[2] & uVar3;\n                return uVar2 * 0x2000 + *in_RAX;\n            }\n            return 0;\n        }\n        if (uVar2 <= uVar1) {\n            uVar3 = uVar3 >> (uVar2 & 0x3f) & uVar3;\n            goto code_r0x00428ffb;\n        }\n        uVar3 = uVar3 & uVar3 >> (uVar1 & 0x3f);\n        if (uVar3 == 0) {\n            uVar2 = 0x40;\n            goto code_r0x00429008;\n        }\n        uVar2 = uVar2 - uVar1;\n        uVar1 = uVar1 << 1;\n    } while( true );\n}\n",
        "token_count": 570
    },
    "00429a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint64_t fcn.00429a40(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint8_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    \n    uVar4 = 0xffffffffffffffff;\n    uVar5 = 0;\n    uVar9 = 0;\n    for (iVar2 = 0; iVar2 < 8; iVar2 = iVar2 + 1) {\n        uVar7 = *(in_RAX + iVar2 * 8);\n        if (uVar7 == 0) {\n            uVar5 = uVar5 + 0x40;\n        }\n        else {\n            iVar1 = 0;\n            if (uVar7 != 0) {\n                for (; (uVar7 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                }\n            }\n            iVar10 = 0x3f;\n            if (uVar7 != 0) {\n                for (; uVar7 >> iVar10 == 0; iVar10 = iVar10 + -1) {\n                }\n            }\n            uVar5 = iVar1 + uVar5;\n            if (uVar4 == 0xffffffffffffffff) {\n                uVar4 = uVar5;\n            }\n            if (uVar9 < uVar5) {\n                uVar9 = uVar5;\n            }\n            iVar1 = 0x3f;\n            if (uVar7 != 0) {\n                for (; uVar7 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            if (uVar7 == 0) {\n                iVar10 = -1;\n            }\n            uVar5 = -(iVar10 + -0x3f);\n        }\n    }\n    if (uVar4 == 0xffffffffffffffff) {\n        return 0x8000040000200;\n    }\n    if (uVar9 < uVar5) {\n        uVar9 = uVar5;\n    }\n    if (0x3d < uVar9) {\n        if (uVar9 == 0x200000) {\n            uVar4 = 0x8000000000000000;\n        }\n        else {\n            uVar4 = (uVar9 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n        }\n        return uVar4;\n    }\n    iVar2 = 0;\n    do {\n        if (7 < iVar2) {\n            if (uVar9 == 0x200000) {\n                uVar4 = 0x8000000000000000;\n            }\n            else {\n                uVar4 = (uVar9 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n            }\n            return uVar4;\n        }\n        uVar7 = *(in_RAX + iVar2 * 8);\n        iVar1 = 0;\n        if (uVar7 != 0) {\n            for (; (uVar7 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        uVar8 = iVar1;\n        if (uVar7 == 0) {\n            uVar8 = 0;\n        }\n        uVar7 = uVar7 >> (uVar8 & 0x3f);\n        if ((uVar7 + 1 & uVar7) != 0) {\n            uVar3 = 1;\n            uVar6 = uVar9;\ncode_r0x00429bf5:\n            do {\n                if (uVar6 != 0) {\n                    if (uVar3 < uVar6) {\n                        uVar7 = uVar7 >> (uVar3 & 0x3f) | uVar7;\n                        if ((uVar7 & uVar7 + 1) == 0) break;\n                        uVar6 = uVar6 - uVar3;\n                        uVar3 = uVar3 << 1;\n                        goto code_r0x00429bf5;\n                    }\n                    uVar7 = uVar7 | uVar7 >> (uVar6 & 0x3f);\n                    if ((uVar7 & uVar7 + 1) == 0) break;\n                }\n                uVar6 = ~uVar7;\n                iVar1 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                    }\n                }\n                uVar8 = iVar1;\n                if (uVar6 == 0) {\n                    uVar8 = 0;\n                }\n                uVar7 = uVar7 >> (uVar8 & 0x3f);\n                uVar6 = 0;\n                if (uVar7 != 0) {\n                    for (; (uVar7 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar7 == 0) {\n                    uVar6 = 0x40;\n                }\n                uVar7 = uVar7 >> (uVar6 & 0x3f);\n                uVar9 = uVar9 + uVar6;\n            } while ((uVar7 & uVar7 + 1) != 0);\n        }\n        iVar2 = iVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 1303
    },
    "00429ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.00429ce0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    arg1 = arg1 >> 6;\n    iVar3 = -1;\n    iVar5 = 0;\n    do {\n        if (7 < arg1) {\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        uVar6 = ~uVar1;\n        if (uVar6 == 0) {\n            iVar5 = 0;\n        }\n        else {\n            if (iVar3 == -1) {\n                iVar3 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                iVar3 = arg1 * 0x40 + iVar3;\n            }\n            iVar7 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> iVar7 & 1) == 0; iVar7 = iVar7 + 1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar7 = 0x40;\n            }\n            if (unaff_RBX <= iVar7 + iVar5) {\n                return arg1 * 0x40 - iVar5;\n            }\n            uVar4 = unaff_RBX - 1;\n            uVar2 = 1;\n            while (uVar4 != 0) {\n                if (uVar4 <= uVar2) {\n                    uVar6 = uVar6 >> (uVar4 & 0x3f) & uVar6;\n                    break;\n                }\n                uVar6 = uVar6 & uVar6 >> (uVar2 & 0x3f);\n                if (uVar6 == 0) {\n                    uVar4 = 0x40;\n                    goto code_r0x00429d6b;\n                }\n                uVar4 = uVar4 - uVar2;\n                uVar2 = uVar2 << 1;\n            }\n            uVar4 = 0;\n            if (uVar6 != 0) {\n                for (; (uVar6 >> uVar4 & 1) == 0; uVar4 = uVar4 + 1) {\n                }\n            }\n            if (uVar6 == 0) {\n                uVar4 = 0x40;\n            }\ncode_r0x00429d6b:\n            if (uVar4 < 0x40) {\n                return uVar4 + arg1 * 0x40;\n            }\n            iVar5 = 0x3f;\n            if (uVar1 != 0) {\n                for (; uVar1 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar5 = -1;\n            }\n            iVar5 = -(iVar5 + -0x3f);\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 737
    },
    "0042be60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042be60(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar2 = fcn.0042c320(in_RAX + 0x20);\n    uVar4 = *(in_RAX + 0x10);\n    uVar5 = iVar2 - 1U >> 9;\n    do {\n        if (uVar5 < uVar4) {\n            iVar6 = *(*(in_RAX + 8) + uVar5 * 8);\ncode_r0x0042bfb2:\n            *(iVar6 + (iVar2 - 1U & 0x1ff) * 8 + 0x18) = unaff_RBX;\n            return;\n        }\n        fcn.0040a360();\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 <= uVar5) {\n            if (uVar4 == *(in_RAX + 0x18)) {\n                iVar6 = *(in_RAX + 0x18) << 1;\n                if (iVar6 == 0) {\n                    iVar6 = 0x100;\n                }\n                uVar3 = fcn.0040c7a0(0x5d58f8);\n                if (*(in_RAX + 0x18) != 0) {\n                    fcn.0045d380(*(in_RAX + 0x18) << 3);\n                }\n                *(in_RAX + 8) = uVar3;\n                *(in_RAX + 0x18) = iVar6;\n            }\n            iVar6 = fcn.0042c280();\n            *(uVar5 * 8 + *(in_RAX + 8)) = iVar6;\n            iVar1 = *(in_RAX + 0x10);\n            *(in_RAX + 0x10) = uVar4 + 1;\n            fcn.0040a580(iVar1);\n            goto code_r0x0042bfb2;\n        }\n        fcn.0040a580();\n    } while( true );\n}\n",
        "token_count": 558
    },
    "00424c60": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nint64_t fcn.00424c60(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar4 = (unaff_RBX + 0x1ffU & 0xfffffffffffffe00) * 0x2000;\n    uVar1 = iVar4 + *(in_RAX + 0x10420);\n    uVar5 = -*0x5d3cd8 & (*0x5d3cd8 + uVar1) - 1;\n    if ((*(in_RAX + 0x10428) < uVar5) || (uVar1 < *(in_RAX + 0x10420))) {\n        iVar2 = fcn.0040b020();\n        if (iVar2 == 0) {\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00434e40();\n            fcn.00435140();\n            fcn.00434e40();\n            fcn.00435140();\n            fcn.004348c0();\n            return 0;\n        }\n        if (iVar2 == *(in_RAX + 0x10428)) {\n            *(in_RAX + 0x10428) = iVar2 + iVar4;\n            arg1 = 0;\n        }\n        else {\n            arg1 = *(in_RAX + 0x10428) - *(in_RAX + 0x10420);\n            if (arg1 == 0) {\n                arg1 = 0;\n            }\n            else {\n                fcn.00415b20(0x5d5890);\n                LOCK();\n                *0x5d58a0 = *0x5d58a0 + arg1;\n                iVar3 = fcn.0042c4c0();\n                LOCK();\n                *(iVar3 + 8) = *(iVar3 + 8) + arg1;\n                fcn.0042c5a0();\n                fcn.00426640(arg1);\n            }\n            *(in_RAX + 0x10420) = iVar2;\n            *(in_RAX + 0x10428) = iVar2 + iVar4;\n        }\n        uVar5 = -*0x5d3cd8 & (*0x5d3cd8 + *(in_RAX + 0x10420) + iVar4) - 1U;\n    }\n    else {\n        arg1 = 0;\n    }\n    iVar4 = *(in_RAX + 0x10420);\n    *(in_RAX + 0x10420) = uVar5;\n    iVar4 = uVar5 - iVar4;\n    fcn.00415b20(0x5d5890);\n    LOCK();\n    *0x5d58a0 = *0x5d58a0 + iVar4;\n    iVar2 = fcn.0042c4c0();\n    LOCK();\n    *(iVar2 + 8) = *(iVar2 + 8) + iVar4;\n    fcn.0042c5a0();\n    fcn.00426640(iVar4);\n    return iVar4 + arg1;\n}\n",
        "token_count": 783
    },
    "0042f100": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong fcn.0042f100(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x78) = 0x42f139;\n            fcn.0040a360();\n            unaff_RBX = *(*0x20 + 0x18);\n            if (unaff_RBX < 0x40000001) {\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x20) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = 0x40000000;\n                iVar2 = *(*0x20 + -0x20);\n                *(*0x20 + -0x28) = iVar2;\n                arg1_00 = 0;\n                uVar3 = 0;\n                while (arg1_00 < unaff_RBX) {\n                    uVar1 = *(iVar2 + arg1_00);\n                    if (*(iVar2 + arg1_00) < 0x80) {\n                        arg1_01 = uVar3;\n                        uVar3 = unaff_RBX;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = uVar3;\n                        *(*0x20 + -0x78) = 0x42f1ad;\n                        uVar1 = fcn.00456ac0(arg1_00);\n                        arg1_01 = *(*0x20 + -0x48);\n                        iVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x38);\n                        arg1_00 = unaff_RBX;\n                    }\n                    unaff_RBX = uVar3;\n                    if (0x3e5 < arg1_01) {\n                        if (1000 < arg1_01) goto code_r0x0042f325;\n                        *(*0x20 + -0x4c) = uVar1;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x78) = 0x42f1f9;\n                        fcn.0042f380(arg1_01);\n                        iVar2 = *(*0x20 + -0x28);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        uVar1 = *(*0x20 + -0x4c);\n                        arg1_00 = *(*0x20 + -0x40);\n                        arg1_01 = 0;\n                    }\n                    if (uVar1 < 0x10000) {\n                        if (999 < arg1_01) goto code_r0x0042f313;\n                        *(arg1_01 * 2 + 0x5d5080) = uVar1;\n                        uVar3 = arg1_01 + 1;\n                    }\n                    else {\n                        if (999 < arg1_01) goto code_r0x0042f306;\n                        *(arg1_01 * 2 + 0x5d5080) = (uVar1 - 0x10000 >> 10 & 0x3ff) + 0xd800;\n                        if (999 < arg1_01 + 1) goto code_r0x0042f2f9;\n                        *(arg1_01 * 2 + 0x5d5082) = (uVar1 - 0x10000 & 0x3ff) + 0xdc00;\n                        uVar3 = arg1_01 + 2;\n                    }\n                }\n                if (uVar3 < 0x3e9) {\n                    *(*0x20 + -0x78) = 0x42f2cf;\n                    fcn.0042f380(uVar3);\n                    *(*0x20 + -0x78) = 0x42f2dd;\n                    fcn.0040a580();\n                    return *(*0x20 + -0x38);\n                }\n                arg1_01 = 1000;\n                *(*0x20 + -0x78) = 0x42f2f9;\n                fcn.0045cac0(uVar3, 1000);\ncode_r0x0042f2f9:\n                *(*0x20 + -0x78) = 0x42f306;\n                fcn.0045ca40(1000);\ncode_r0x0042f306:\n                *(*0x20 + -0x78) = 0x42f313;\n                fcn.0045ca40(1000);\ncode_r0x0042f313:\n                *(*0x20 + -0x78) = 0x42f325;\n                fcn.0045ca40(1000);\ncode_r0x0042f325:\n                *(*0x20 + -0x78) = 0x42f332;\n                fcn.0045cac0(arg1_01, 1000);\n            }\n            *(*0x20 + -0x78) = 0x42f33f;\n            uVar3 = unaff_RBX;\n            in_RAX = fcn.0045ca80(unaff_RBX, 0x40000000);\n            arg1._0_4_ = uVar3;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x42f353;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1537
    },
    "00448c40": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.00448c40(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            uVar4 = 0;\n            uVar7 = arg1;\n            arg1 = 0;\n            while (uVar4 < uVar7) {\n                if (*(unaff_RBX + uVar4) < 0x80) {\n                    uVar3 = uVar7;\n                    uVar4 = uVar4 + 1;\n                }\n                else {\n                    *(*0x20 + -0x28) = arg1;\n                    *(*0x20 + -0x48) = 0x448ca5;\n                    fcn.00456ac0(uVar4);\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(*0x20 + 0x18);\n                    arg1 = *(*0x20 + -0x28);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar4 = uVar7;\n                }\n                arg1 = arg1 + 1;\n                uVar7 = uVar3;\n            }\n            if (in_RAX == 0) {\ncode_r0x00448d02:\n                *(*0x20 + -0x48) = 0x448d0a;\n                iVar2 = fcn.00449300();\n                uVar4 = *(*0x20 + 0x18);\n                uVar3 = *(*0x20 + 0x10);\n                arg1 = unaff_RBX;\ncode_r0x00448d1a:\n                unaff_RBX = uVar3;\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x20) = arg1;\n                uVar3 = 0;\n                uVar7 = 0;\n                while( true ) {\n                    if (uVar4 <= uVar3) {\n                        return;\n                    }\n                    uVar1 = *(unaff_RBX + uVar3);\n                    if (uVar1 < 0x80) {\n                        uVar5 = uVar4;\n                        uVar3 = uVar3 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = uVar7;\n                        *(*0x20 + -0x48) = 0x448d65;\n                        uVar1 = fcn.00456ac0(uVar3);\n                        uVar5 = *(*0x20 + 0x18);\n                        arg1 = *(*0x20 + -0x20);\n                        uVar7 = *(*0x20 + -0x28);\n                        iVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar3 = uVar4;\n                    }\n                    if (arg1 <= uVar7) break;\n                    *(iVar2 + uVar7 * 4) = uVar1;\n                    uVar7 = uVar7 + 1;\n                    uVar4 = uVar5;\n                }\n                *(*0x20 + -0x48) = 0x448dac;\n                fcn.0045ca40(arg1);\n            }\n            else {\n                bVar8 = arg1 < 0x20;\n                bVar9 = arg1 == 0x20;\n                if (0x20 < arg1) goto code_r0x00448d02;\n                *(*0x20 + -0x50) = unaff_RBP;\n                *(*0x20 + -0x48) = 0x448cef;\n                iVar2 = fcn.0045cce2();\n                unaff_RBP = *(*0x20 + -0x50);\n                if (bVar8 || bVar9) {\n                    uVar4 = uVar7;\n                    uVar7 = 0x20;\n                    uVar3 = unaff_RBX;\n                    goto code_r0x00448d1a;\n                }\n            }\n            *(*0x20 + -0x48) = 0x448db9;\n            in_RAX = fcn.0045ca80(arg1, 0x20);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x448dce;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1282
    },
    "0045a500": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.0045a500(ulong param_1, ulong param_2, ulong param_3, ulong param_4, uint32_t param_5)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uchar *unaff_RBP;\n    uchar *puVar5;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    code **ppcStackX16;\n    uchar *puStackX24;\n    uint32_t uStackX32;\n    uint32_t uStackX36;\n    uchar auStack524296 [128];\n    uchar auStack524168 [262016];\n    uchar auStack262152 [128];\n    uchar auStack262024 [130944];\n    uchar auStack131080 [128];\n    uchar auStack130952 [65400];\n    ulong uStack65552;\n    uchar auStack65544 [128];\n    uchar auStack65416 [32632];\n    ulong uStack32784;\n    uchar auStack32776 [128];\n    uchar auStack32648 [16248];\n    ulong uStack16400;\n    uchar auStack16392 [128];\n    uchar auStack16264 [8056];\n    ulong uStack8208;\n    uchar auStack8200 [128];\n    uchar auStack8072 [3960];\n    ulong uStack4112;\n    uchar auStack4104 [128];\n    uchar auStack3976 [1912];\n    ulong uStack2064;\n    uchar auStack2056 [128];\n    uchar auStack1928 [888];\n    ulong uStack1040;\n    uchar auStack1032 [128];\n    uchar auStack904 [376];\n    ulong uStack528;\n    uchar auStack520 [128];\n    uchar auStack392 [120];\n    ulong uStack272;\n    uchar auStack264 [120];\n    ulong uStack144;\n    uchar auStack136 [56];\n    ulong uStack80;\n    uchar auStack72 [24];\n    ulong uStack48;\n    uchar auStack40 [8];\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    if (param_5 < 0x11) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack24;\n        }\n        puVar5 = auStack24;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32 = 0x45a745;\n        fcn.0045a440();\n        uStack32 = 0x45a750;\n        (**ppcStackX16)();\n        uStack32 = 0x45a75a;\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        uStack32 = 0x45a77d;\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x21) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack40;\n        }\n        puVar5 = auStack40;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack48 = 0x45a805;\n        fcn.0045a440();\n        uStack48 = 0x45a810;\n        (**ppcStackX16)();\n        uStack48 = 0x45a81a;\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        uStack48 = 0x45a83d;\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x41) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack72;\n        }\n        puVar5 = auStack72;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack80 = 0x45a8c5;\n        fcn.0045a440();\n        uStack80 = 0x45a8d0;\n        (**ppcStackX16)();\n        uStack80 = 0x45a8da;\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        uStack80 = 0x45a8fd;\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x81) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n              &stack0xfffffffffffffff8 < *puVar1 || &stack0xfffffffffffffff8 == *puVar1) {\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack136;\n        }\n        puVar5 = auStack136;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack144 = 0x45a9a4;\n        fcn.0045a440();\n        uStack144 = 0x45a9b2;\n        (**ppcStackX16)();\n        uStack144 = 0x45a9bf;\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        uStack144 = 0x45a9ee;\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x101) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack136 < *puVar1 || auStack136 == *puVar1) {\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack264;\n        }\n        puVar5 = auStack264;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack272 = 0x45aaa7;\n        fcn.0045a440();\n        uStack272 = 0x45aab5;\n        (**ppcStackX16)();\n        uStack272 = 0x45aac2;\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        uStack272 = 0x45aaf1;\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x201) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack392 < *puVar1 || auStack392 == *puVar1) {\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack520;\n        }\n        puVar5 = auStack520;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack528 = 0x45aba7;\n        fcn.0045a440();\n        uStack528 = 0x45abb5;\n        (**ppcStackX16)();\n        uStack528 = 0x45abc2;\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        uStack528 = 0x45abf1;\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x401) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack904 < *puVar1 || auStack904 == *puVar1) {\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack1032;\n        }\n        puVar5 = auStack1032;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack1040 = 0x45aca7;\n        fcn.0045a440();\n        uStack1040 = 0x45acb5;\n        (**ppcStackX16)();\n        uStack1040 = 0x45acc2;\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        uStack1040 = 0x45acf1;\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x801) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack1928 < *puVar1 || auStack1928 == *puVar1) {\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack2056;\n        }\n        puVar5 = auStack2056;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack2064 = 0x45ada7;\n        fcn.0045a440();\n        uStack2064 = 0x45adb5;\n        (**ppcStackX16)();\n        uStack2064 = 0x45adc2;\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        uStack2064 = 0x45adf1;\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1001) {\n        while( true ) {\n            if ((0xf87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack3976 && auStack3976 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack4104;\n        }\n        puVar5 = auStack4104;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack4112 = 0x45aeaf;\n        fcn.0045a440();\n        uStack4112 = 0x45aebd;\n        (**ppcStackX16)();\n        uStack4112 = 0x45aeca;\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        uStack4112 = 0x45aef9;\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2001) {\n        while( true ) {\n            if ((0x1f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack8072 && auStack8072 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack8200;\n        }\n        puVar5 = auStack8200;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack8208 = 0x45afaf;\n        fcn.0045a440();\n        uStack8208 = 0x45afbd;\n        (**ppcStackX16)();\n        uStack8208 = 0x45afca;\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        uStack8208 = 0x45aff9;\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4001) {\n        while( true ) {\n            if ((0x3f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack16264 && auStack16264 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack16392;\n        }\n        puVar5 = auStack16392;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack16400 = 0x45b0af;\n        fcn.0045a440();\n        uStack16400 = 0x45b0bd;\n        (**ppcStackX16)();\n        uStack16400 = 0x45b0ca;\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        uStack16400 = 0x45b0f9;\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8001) {\n        while( true ) {\n            if ((0x7f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack32648 && auStack32648 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack32776;\n        }\n        puVar5 = auStack32776;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32784 = 0x45b1af;\n        fcn.0045a440();\n        uStack32784 = 0x45b1bd;\n        (**ppcStackX16)();\n        uStack32784 = 0x45b1ca;\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        uStack32784 = 0x45b1f9;\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10001) {\n        while( true ) {\n            if ((0xff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack65416 && auStack65416 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack65544;\n        }\n        puVar5 = auStack65544;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack65552 = 0x45b2af;\n        fcn.0045a440();\n        uStack65552 = 0x45b2bd;\n        (**ppcStackX16)();\n        uStack65552 = 0x45b2ca;\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        uStack65552 = 0x45b2f9;\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20001) {\n        while( true ) {\n            if ((0x1ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack130952 && auStack130952 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack131080;\n        }\n        puVar5 = auStack131080;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a440();\n        (**ppcStackX16)();\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40001) {\n        while( true ) {\n            if ((0x3ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack262024 && auStack262024 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack262152;\n        }\n        puVar5 = auStack262152;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a440();\n        (**ppcStackX16)();\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x80001) {\n        while( true ) {\n            if ((0x7ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack524168 && auStack524168 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack524296;\n        }\n        puVar5 = auStack524296;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a440();\n        (**ppcStackX16)();\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x100001) {\n        while( true ) {\n            if ((0xfff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffff00078 && &stack0xfffffffffff00078 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffeffff8;\n        }\n        puVar5 = &stack0xffffffffffeffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a440();\n        (**ppcStackX16)();\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x200001) {\n        while( true ) {\n            if ((0x1fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffffe00078 && &stack0xffffffffffe00078 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffdffff8;\n        }\n        puVar5 = &stack0xffffffffffdffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a440();\n        (**ppcStackX16)();\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x400001) {\n        while( true ) {\n            if ((0x3fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffffc00078 && &stack0xffffffffffc00078 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffbffff8;\n        }\n        puVar5 = &stack0xffffffffffbffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a440();\n        (**ppcStackX16)();\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x800001) {\n        while( true ) {\n            if ((0x7fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffff800078 && &stack0xffffffffff800078 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffff7ffff8;\n        }\n        puVar5 = &stack0xffffffffff7ffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a440();\n        (**ppcStackX16)();\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1000001) {\n        while( true ) {\n            if ((0xffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffff000078 && &stack0xffffffffff000078 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffefffff8;\n        }\n        puVar5 = &stack0xfffffffffefffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a440();\n        (**ppcStackX16)();\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2000001) {\n        while( true ) {\n            if ((0x1ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffe000078 && &stack0xfffffffffe000078 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffdfffff8;\n        }\n        puVar5 = &stack0xfffffffffdfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a440();\n        (**ppcStackX16)();\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4000001) {\n        while( true ) {\n            if ((0x3ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffc000078 && &stack0xfffffffffc000078 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffbfffff8;\n        }\n        puVar5 = &stack0xfffffffffbfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a440();\n        (**ppcStackX16)();\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8000001) {\n        while( true ) {\n            if ((0x7ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffff8000078 && &stack0xfffffffff8000078 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffff7fffff8;\n        }\n        puVar5 = &stack0xfffffffff7fffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a440();\n        (**ppcStackX16)();\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10000001) {\n        while( true ) {\n            if ((0xfffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffff0000078 && &stack0xfffffffff0000078 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffeffffff8;\n        }\n        puVar5 = &stack0xffffffffeffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a440();\n        (**ppcStackX16)();\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20000001) {\n        while( true ) {\n            if ((0x1fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffe0000078 && &stack0xffffffffe0000078 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffdffffff8;\n        }\n        puVar5 = &stack0xffffffffdffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a440();\n        (**ppcStackX16)();\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40000001) {\n        while( true ) {\n            if ((0x3fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffc0000078 && &stack0xffffffffc0000078 != *puVar1)) break;\n            fcn.0045a360();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffbffffff8;\n        }\n        puVar5 = &stack0xffffffffbffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a440();\n        (**ppcStackX16)();\n        fcn.0045a380(uVar4, ppcStackX16, param_3, param_4);\n        fcn.004593c0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    iVar3 = **(in_GS_OFFSET + 0x28);\n    do {\n        puVar1 = iVar3 + 0x10;\n        if (*puVar1 <= *0x20 && *0x20 != *puVar1) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4362e7;\n            fcn.00432920();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x4362ed;\n        fcn.0045a360();\n    } while( true );\n}\n",
        "token_count": 9481
    },
    "00463ce0": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nint64_t fcn.00463ce0(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = fcn.00457c20();\n    if (uVar1 < in_RAX[1]) {\n        return uVar1 * 0x80 + *in_RAX;\n    }\n    iVar2 = fcn.00463d60();\n    return iVar2;\n}\n",
        "token_count": 158
    },
    "0046a3a0": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nuint64_t fcn.0046a3a0(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    uint32_t in_EAX;\n    uint64_t uVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return in_EAX << 6;\n            }\n            if (arg1 + 0x15cU < 0x2b8) {\n                uVar1 = *((arg1 + 0x15cU) * 0x10 + 0x573728);\n                if (arg1 < 0) {\n                    uVar1 = uVar1 + 1;\n                }\n                return SUB168(ZEXT416(in_EAX) * ZEXT816(uVar1) >> 0x40, 0) << 7 |\n                       SUB168(ZEXT416(in_EAX) * ZEXT816(uVar1), 0) >> 0x39;\n            }\n            unaff_RBX = 0x4f9f08;\n            *(*0x20 + -0x20) = 0x46a451;\n            in_EAX = fcn.00432920();\n        }\n        *(puVar2 + 8) = in_EAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x46a465;\n        fcn.0045a360();\n        in_EAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 506
    },
    "0042a420": {
        "rules": [
            "encrypt data using HC-128/425018b86d394d5ebff49c9438559e47"
        ],
        "decompiled_code": "\nvoid fcn.0042a420(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    *0x5d3c80 = *0x5d3c80 + ((*0x5d3c80 + 1U) / 0x6000000) * -0x6000000 + 1;\n    *0x5d3c84 = 0;\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 155
    },
    "0046baa0": {
        "rules": [
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b",
            "search for credit card data/ac143e9ae29c414184a69c9308e24693"
        ],
        "decompiled_code": "\nuint64_t fcn.0046baa0(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint16_t uVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    \n    iVar11 = *0x576de0;\n    uVar4 = in_RAX;\n    if (uVar4 < 0x100) {\n        if (uVar4 - 0x20 < 0x5f) {\n            return 1;\n        }\n        if (0xa0 < uVar4) {\n            return in_RAX & 0xffffffffffffff00 | uVar4 != 0xad;\n        }\n        return 0;\n    }\n    if (uVar4 < 0x10000) {\n        uVar15 = 0;\n        uVar5 = *0x576e08;\n        uVar10 = *0x576dc8;\n        uVar13 = *0x576dc0;\n        iVar11 = *0x576e00;\n        uVar14 = *0x576e08;\n    }\n    else {\n        uVar6 = 0;\n        uVar7 = *0x576e28;\n        while (uVar5 = uVar7,  uVar10 = *0x576de8,  uVar13 = *0x576e20,  uVar14 = *0x576e28,  uVar6 < uVar5) {\n            iVar8 = uVar5 - uVar6 >> 1;\n            uVar7 = iVar8 + uVar6;\n            uVar15 = uVar6;\n            if (*0x576e28 <= uVar7) goto code_r0x0046bc7b;\n            if (*(*0x576e20 + uVar7 * 4) < uVar4) {\n                uVar6 = uVar6 + iVar8 + 1;\n                uVar7 = uVar5;\n            }\n        }\n        if (*0x576e28 <= uVar6) {\n            return 0;\n        }\n        uVar15 = uVar6 & 0xfffffffffffffffe;\n        if (uVar15 < *0x576e28) {\n            uVar2 = *(*0x576e20 + uVar15 * 4);\n            uVar15 = uVar2;\n            if (uVar4 < uVar2) {\n                return 0;\n            }\n            uVar6 = uVar6 | 1;\n            if (uVar6 < *0x576e28) {\n                if (*(*0x576e20 + uVar6 * 4) < uVar4) {\n                    return 0;\n                }\n                if (0x1ffff < uVar4) {\n                    return 1;\n                }\n                uVar13 = uVar4 - 0x10000;\n                uVar7 = 0;\n                uVar5 = *0x576de8;\n                while (uVar9 = uVar5,  uVar12 = uVar4 - 0x10000,  uVar7 < uVar9) {\n                    uVar10 = uVar9 - uVar7 >> 1;\n                    uVar15 = uVar10 + uVar7;\n                    uVar5 = *0x576de8;\n                    uVar14 = uVar9;\n                    if (*0x576de8 <= uVar15) goto code_r0x0046bc56;\n                    uVar1 = *(*0x576de0 + uVar15 * 2);\n                    uVar6 = uVar1;\n                    uVar5 = uVar15;\n                    uVar14 = uVar15;\n                    if (uVar1 < uVar12) {\n                        uVar7 = uVar7 + uVar10 + 1;\n                        uVar5 = uVar9;\n                        uVar14 = uVar9;\n                    }\n                }\n                if (*0x576de8 <= uVar7) {\n                    return 1;\n                }\n                if (uVar7 < *0x576de8) {\n                    uVar1 = *(*0x576de0 + uVar7 * 2);\n                    return uVar1 & 0xff00 | uVar1 != uVar12;\n                }\n                uVar10 = *0x576de8;\n                uVar5 = fcn.0045ca40(*0x576de8);\ncode_r0x0046bc56:\n                fcn.0045ca40(uVar5);\n            }\n            fcn.0045ca40(uVar14);\n        }\n        fcn.0045ca40(uVar14);\n        uVar5 = uVar6;\ncode_r0x0046bc7b:\n        in_RAX = fcn.0045ca40(uVar14);\n    }\n    while (uVar6 = uVar5,  uVar12 = in_RAX,  uVar15 < uVar6) {\n        iVar8 = uVar6 - uVar15 >> 1;\n        uVar5 = iVar8 + uVar15;\n        if (uVar14 <= uVar5) goto code_r0x0046bd91;\n        if (*(iVar11 + uVar5 * 2) < uVar12) {\n            uVar15 = uVar15 + iVar8 + 1;\n            uVar5 = uVar6;\n        }\n    }\n    if (uVar14 <= uVar15) {\n        return 0;\n    }\n    if ((uVar15 & 0xfffffffffffffffe) < uVar14) {\n        if (uVar12 < *(iVar11 + (uVar15 & 0xfffffffffffffffe) * 2)) {\n            return 0;\n        }\n        if ((uVar15 | 1) < uVar14) {\n            if (*(iVar11 + (uVar15 | 1) * 2) < uVar12) {\n                return 0;\n            }\n            uVar6 = 0;\n            uVar5 = uVar10;\n            uVar7 = uVar14;\n            while (uVar14 = uVar5,  uVar6 < uVar14) {\n                iVar11 = uVar14 - uVar6 >> 1;\n                uVar7 = iVar11 + uVar6;\n                if (uVar10 <= uVar7) goto code_r0x0046bd73;\n                uVar5 = uVar7;\n                if (*(uVar13 + uVar7 * 2) < uVar12) {\n                    uVar6 = uVar6 + iVar11 + 1;\n                    uVar5 = uVar14;\n                    uVar7 = uVar14;\n                }\n            }\n            if (uVar10 <= uVar6) {\n                return 1;\n            }\n            if (uVar6 < uVar10) {\n                uVar1 = *(uVar13 + uVar6 * 2);\n                return uVar1 & 0xff00 | uVar1 != uVar12;\n            }\n            fcn.0045ca40(uVar10);\n            uVar14 = uVar7;\ncode_r0x0046bd73:\n            fcn.0045ca40(uVar10);\n        }\n        fcn.0045ca40(uVar14);\n    }\n    fcn.0045ca40(uVar14);\ncode_r0x0046bd91:\n    fcn.0045ca40(uVar14);\n    pcVar3 = swi(3);\n    uVar6 = (*pcVar3)();\n    return uVar6;\n}\n",
        "token_count": 1715
    },
    "00401080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401080(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00401640();\n    fcn.004010e0();\n    return;\n}\n",
        "token_count": 89
    },
    "004024c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004024ed)\n\nint64_t fcn.004024c0(void)\n\n{\n    float *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*in_RAX != 0.0) {\n        iVar1 = fcn.0045c460(4);\n        return iVar1;\n    }\n    return (unaff_RBX ^ 0x756ea16a56a621) * 0x52ef6bbb8f63bf;\n}\n",
        "token_count": 176
    },
    "004025c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004025ef)\n\nint64_t fcn.004025c0(void)\n\n{\n    double *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*in_RAX != 0.0) {\n        iVar1 = fcn.0045c460(8);\n        return iVar1;\n    }\n    return (unaff_RBX ^ 0x756ea16a56a621) * 0x52ef6bbb8f63bf;\n}\n",
        "token_count": 176
    },
    "004026c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004026c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004024c0();\n    fcn.004024c0(in_RAX + 4);\n    return;\n}\n",
        "token_count": 105
    },
    "00402720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402720(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004025c0();\n    fcn.004025c0(in_RAX + 8);\n    return;\n}\n",
        "token_count": 104
    },
    "004031e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004031e0(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x1260);\n    *puVar2 = *CONCAT71(in_RAX, in_AL);\n    puVar2[1] = unaff_RBX;\n    iVar3 = *(iVar1 + 0x1260) + 0x10;\n    *(iVar1 + 0x1260) = iVar3;\n    if (*(iVar1 + 0x1268) == iVar3) {\n        fcn.0042c700();\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00403a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00403a80(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    cVar2 = func_0x00423800();\n    if (cVar2 == '\\0') {\n        if (*0x57efb8 == NULL) {\n            iVar4 = 0;\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = **0x57efb8;\n            iVar4 = (*0x57efb8)[1];\n        }\n        iVar3 = 0;\n        while( true ) {\n            if (iVar4 <= iVar3) {\n                return 0;\n            }\n            iVar1 = *(iVar5 + iVar3 * 8);\n            if (((*(iVar1 + 0xd0) < in_RAX || *(iVar1 + 0xd0) == in_RAX) && (in_RAX < *(iVar1 + 0xd8))) ||\n               ((*(iVar1 + 0xe0) < in_RAX || *(iVar1 + 0xe0) == in_RAX && (in_RAX < *(iVar1 + 0xe8))))) break;\n            iVar3 = iVar3 + 1;\n        }\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 320
    },
    "00404720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404720(void)\n\n{\n    fcn.00404760(1);\n    return;\n}\n",
        "token_count": 25
    },
    "00405460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405460(void)\n\n{\n    fcn.004054a0(1);\n    return;\n}\n",
        "token_count": 26
    },
    "00405e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00405e60(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    iVar1 = *0x5d3b70;\n    fcn.0040a580();\n    if ((0 < in_RAX) && (in_RAX != iVar1)) {\n        fcn.00437bc0();\n        *0x5d3b84 = in_RAX;\n        fcn.00437c40();\n        return iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 181
    },
    "00406880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00406880(void)\n\n{\n    code *in_RAX;\n    int64_t unaff_R14;\n    uchar uStack50;\n    uchar uStack49;\n    uchar auStack48 [8];\n    uchar *puStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    puStack40 = auStack48;\n    uStack50 = 0;\n    auStack32 = CONCAT88(&uStack50, 0x406960);\n    ppcStack16 = auStack32;\n    uStack49 = 1;\n    (*in_RAX)();\n    uStack50 = 1;\n    uStack49 = 0;\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 219
    },
    "004069c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004069c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00434aa0();\n    fcn.004348c0();\n    return;\n}\n",
        "token_count": 933
    },
    "00407b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407b20(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (in_RAX != 0) {\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 < 0xb31a546e) {\n            if (uVar4 < 0x7925028d) {\n                if (uVar4 < 0x2ea27ffc) {\n                    if (uVar4 == 0x13ff06c5) {\n                        if (in_RAX == 0x4b3a40) {\n                            fcn.00434840();\n                            fcn.00434ae0();\n                            fcn.004348c0();\n                            return;\n                        }\n                    }\n                    else if ((uVar4 == 0x2ea27ffb) && (uVar5 = 0x4b3c40,  in_RAX == 0x4b3c40)) {\n                        fcn.00434840();\n                        fcn.00434b40(uVar5, param_2);\n                        fcn.004348c0();\n                        return;\n                    }\n                }\n                else if (uVar4 == 0x663e425f) {\n                    if (in_RAX == 0x4b48c0) {\n                        fcn.00434840();\n                        fcn.00434e40();\n                        fcn.004348c0();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x7925028c) && (in_RAX == 0x4b3b80)) {\n                    fVar1 = *(unaff_RBX + 4);\n                    fVar2 = *unaff_RBX;\n                    fcn.00434840();\n                    fcn.00434da0(fVar2, fVar1);\n                    fcn.004348c0();\n                    return;\n                }\n            }\n            else if (uVar4 < 0x963f9c00) {\n                if (uVar4 == 0x86318d2e) {\n                    if (in_RAX == 0x4b4880) {\n                        fcn.00434840();\n                        fcn.00434e40();\n                        fcn.004348c0();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x963f9bff) && (in_RAX == 0x4b4140)) {\n                    fcn.00434840();\n                    fcn.00434f40();\n                    fcn.004348c0();\n                    return;\n                }\n            }\n            else if (uVar4 == 0xb0c23ed3) {\n                uVar5 = 0x4b3c00;\n                if (in_RAX == 0x4b3c00) {\n                    fcn.00434840();\n                    fcn.00434b40(uVar5, param_2);\n                    fcn.004348c0();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xb31a546d) && (in_RAX == 0x4b3b40)) {\n                uVar5 = unaff_RBX[1];\n                uVar3 = *unaff_RBX;\n                fcn.00434840();\n                fcn.00434da0(uVar3, uVar5);\n                fcn.004348c0();\n                return;\n            }\n        }\n        else if (uVar4 < 0xd04ae83e) {\n            if (uVar4 < 0xbd4ad793) {\n                if (uVar4 == 0xbbad4102) {\n                    if (in_RAX == 0x4b4100) {\n                        fcn.00434840();\n                        fcn.00434f40();\n                        fcn.004348c0();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0xbd4ad792) && (in_RAX == 0x4b4900)) {\n                    fcn.00434840();\n                    fcn.00434e40();\n                    fcn.004348c0();\n                    return;\n                }\n            }\n            else if (uVar4 == 0xcc06c027) {\n                if (in_RAX == 0x4b4180) {\n                    fcn.00434840();\n                    fcn.00434f40();\n                    fcn.004348c0();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xd04ae83d) && (in_RAX == 0x4b4840)) {\n                fcn.00434840();\n                fcn.00434e40();\n                fcn.004348c0();\n                return;\n            }\n        }\n        else if (uVar4 < 0xe0ff5cb5) {\n            if (uVar4 == 0xd5b87712) {\n                if (in_RAX == 0x4b47c0) {\n                    fcn.00434840();\n                    fcn.00434e40();\n                    fcn.004348c0();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xe0ff5cb4) && (in_RAX == 0x4b4740)) {\n                fcn.00434840();\n                fcn.00435140();\n                fcn.004348c0();\n                return;\n            }\n        }\n        else if (uVar4 == 0xecd580ce) {\n            if (in_RAX == 0x4b40c0) {\n                fcn.00434840();\n                fcn.00434f40();\n                fcn.004348c0();\n                return;\n            }\n        }\n        else if (uVar4 == 0xeff20ea0) {\n            if (in_RAX == 0x4b4800) {\n                fcn.00434840();\n                fcn.00434e40();\n                fcn.004348c0();\n                return;\n            }\n        }\n        else if ((uVar4 == 0xf75371fa) && (in_RAX == 0x4b4080)) {\n            fcn.00434840();\n            fcn.00434f40();\n            fcn.004348c0();\n            return;\n        }\n        fcn.00408080();\n        return;\n    }\n    fcn.00434840();\n    fcn.00435140();\n    fcn.004348c0();\n    return;\n}\n",
        "token_count": 1524
    },
    "00409340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00409340(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = *(unaff_RBX + 0x10) ^ *(arg1 + 0x10);\n    iVar3 = 1;\n    while( true ) {\n        uVar2 = uVar2 & *in_RAX - 1U;\n        piVar1 = in_RAX[uVar2 + 2];\n        if (piVar1 == NULL) {\n            return NULL;\n        }\n        if ((*piVar1 == unaff_RBX) && (piVar1[1] == arg1)) break;\n        uVar2 = uVar2 + iVar3;\n        iVar3 = iVar3 + 1;\n    }\n    return piVar1;\n}\n",
        "token_count": 206
    },
    "004094e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004094e0(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *unaff_RBX;\n    \n    uVar1 = *(*unaff_RBX + 0x10) ^ *(unaff_RBX[1] + 0x10);\n    iVar2 = 1;\n    while( true ) {\n        uVar1 = uVar1 & *in_RAX - 1U;\n        if (unaff_RBX == in_RAX[uVar1 + 2]) {\n            return;\n        }\n        if (in_RAX[uVar1 + 2] == NULL) break;\n        uVar1 = uVar1 + iVar2;\n        iVar2 = iVar2 + 1;\n    }\n    in_RAX[uVar1 + 2] = unaff_RBX;\n    in_RAX[1] = in_RAX[1] + 1;\n    return;\n}\n",
        "token_count": 214
    },
    "00409900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409900(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    if (*0x57efb8 == NULL) {\n        iVar3 = 0;\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = **0x57efb8;\n        iVar3 = (*0x57efb8)[1];\n    }\n    for (iVar2 = 0; iVar2 < iVar3; iVar2 = iVar2 + 1) {\n        iVar1 = *(*(iVar4 + iVar2 * 8) + 0x170);\n        for (iVar5 = 0; iVar5 < iVar1; iVar5 = iVar5 + 1) {\n            fcn.004093a0();\n        }\n    }\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 269
    },
    "00409ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00409ca0(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (in_EAX < 0x100) {\n        puVar1 = in_EAX * 8 + 0x571340;\n    }\n    else {\n        puVar1 = fcn.0040ba40(0);\n        *puVar1 = in_EAX;\n    }\n    return puVar1;\n}\n",
        "token_count": 159
    },
    "00409d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.00409d20(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (in_RAX < 0x100) {\n        puVar1 = in_RAX * 8 + 0x571340;\n    }\n    else {\n        puVar1 = fcn.0040ba40(0);\n        *puVar1 = in_RAX;\n    }\n    return puVar1;\n}\n",
        "token_count": 159
    },
    "00409fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00409fa0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (unaff_RBX != 0) {\n        iVar1 = fcn.00409040(1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 145
    },
    "0040a040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a040(void)\n\n{\n    uint64_t *puVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (puVar1 = *0x5762b8,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    for (uVar2 = 0; uVar2 <= *puVar1 && *puVar1 != uVar2; uVar2 = uVar2 + 1) {\n        if (puVar1[uVar2 + 2] != 0) {\n            (**in_RAX)(*in_RAX, in_RAX);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0040a320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a320(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040ac80();\n    return;\n}\n",
        "token_count": 82
    },
    "0040a540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a540(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040acc0();\n    return;\n}\n",
        "token_count": 82
    },
    "0040aac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040aac0(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x40) = 0x40aaf7;\n                fcn.0042fa40();\n                *(*0x20 + -0x40) = 0x40ab0a;\n                fcn.0040a820(0);\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x40) = 0x40ab25;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x40ab35;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 410
    },
    "0040ab60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0040ab60(void)\n\n{\n    uchar uVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) != unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x48) = 0x40ab97;\n                fcn.0042fa40();\n                *(*0x20 + -0x48) = 0x40ab9c;\n                fcn.0043d000();\n                *(*0x20 + -0x48) = 0x40abaf;\n                uVar1 = fcn.0040a820(0);\n                *(*0x20 + -0x19) = uVar1;\n                *(*0x20 + -0x48) = 0x40abb8;\n                fcn.004579e0();\n                return *(*0x20 + -0x19);\n            }\n            unaff_RBX = 0x11;\n            *(*0x20 + -0x48) = 0x40abd8;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40abe8;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 500
    },
    "0040ac80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ac80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    return;\n}\n",
        "token_count": 82
    },
    "0040acc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040acc0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 82
    },
    "0040b6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0040b6c0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            iVar2 = 0;\n            while( true ) {\n                *(*0x20 + -0x28) = iVar2;\n                *(*0x20 + -0x18) = arg1 + unaff_RBX;\n                *(*0x20 + -0x48) = 0x40b713;\n                uVar1 = fcn.00415a20();\n                if (uVar1 == 0) {\n                    return 0;\n                }\n                if ((uVar1 & *(*0x20 + 0x18) - 1U) == 0) {\n                    return uVar1;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0x48) = 0x40b745;\n                fcn.004158e0(0);\n                *(*0x20 + -0x20) = -*(*0x20 + 0x18) & (*(*0x20 + 0x18) + *(*0x20 + -0x20)) - 1U;\n                *(*0x20 + -0x48) = 0x40b76d;\n                uVar1 = fcn.00415a20();\n                if (uVar1 == *(*0x20 + -0x20)) {\n                    return uVar1;\n                }\n                arg1 = 0;\n                *(*0x20 + -0x48) = 0x40b789;\n                fcn.004158e0(0);\n                if (*(*0x20 + -0x28) == 99) break;\n                iVar2 = *(*0x20 + -0x28) + 1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x48) = 0x40b7dd;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40b7f2;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 791
    },
    "0040b820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.0040b820(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint8_t unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint16_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = unaff_BL;\n            if (uVar3 < 0x88) {\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + 8) = in_RAX;\n                noname_0 = *(in_RAX + 0x28 + uVar3 * 8);\n                *(*0x20 + -0x18) = noname_0;\n                *(*0x20 + -0x48) = 0x40b86d;\n                uVar1 = fcn.00411580(noname_0, uVar3, param_3, param_4);\n                iVar2 = *(*0x20 + -0x18);\n                uVar3 = *(iVar2 + 0x38);\n                if (uVar1 == uVar3) {\n                    *(*0x20 + -0x20) = uVar3;\n                    uVar5 = *(iVar2 + 0x60);\n                    if (uVar3 == uVar5) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x48) = 0x40b8a5;\n                        fcn.00414340();\n                        *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x28 + *(*0x20 + -0x10) * 8);\n                        *(*0x20 + -0x48) = 0x40b8be;\n                        uVar1 = fcn.00411580(*(*0x20 + -0x10), *(*0x20 + 8), param_3, param_4);\n                        iVar2 = *(*0x20 + -0x18);\n                        goto code_r0x0040b8d2;\n                    }\n                }\n                else {\ncode_r0x0040b8d2:\n                    if (uVar1 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar1) {\n                        uVar5 = *(iVar2 + 0x60) + 1;\n                        *(iVar2 + 0x60) = uVar5;\n                        param_3 = *(iVar2 + 0x38);\n                        if (uVar5 <= param_3) {\n                            return uVar1 * *(iVar2 + 0x68) + *(iVar2 + 0x18);\n                        }\n                        *(*0x20 + -0x2a) = uVar5;\n                        *(*0x20 + -0x20) = param_3;\n                        *(*0x20 + -0x48) = 0x40b925;\n                        fcn.00434840();\n                        *(*0x20 + -0x48) = 0x40b936;\n                        fcn.00435140();\n                        *(*0x20 + -0x48) = 0x40b945;\n                        fcn.00434e40();\n                        *(*0x20 + -0x48) = 0x40b956;\n                        fcn.00435140();\n                        *(*0x20 + -0x48) = 0x40b965;\n                        fcn.00434e40();\n                        *(*0x20 + -0x48) = 0x40b96a;\n                        fcn.00434aa0();\n                        *(*0x20 + -0x48) = 0x40b96f;\n                        fcn.004348c0();\n                        *(*0x20 + -0x48) = 0x40b985;\n                        fcn.004330a0();\n                    }\n                    uVar5 = iVar2;\n                    *(*0x20 + -0x48) = 0x40b996;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x2a) = uVar5;\n                *(*0x20 + -0x48) = 0x40b9a5;\n                fcn.00434840();\n                *(*0x20 + -0x48) = 0x40b9b6;\n                fcn.00435140();\n                *(*0x20 + -0x48) = 0x40b9c5;\n                fcn.00434e40();\n                *(*0x20 + -0x48) = 0x40b9d6;\n                fcn.00435140();\n                *(*0x20 + -0x48) = 0x40b9e5;\n                fcn.00434e40();\n                *(*0x20 + -0x48) = 0x40b9ea;\n                fcn.00434aa0();\n                *(*0x20 + -0x48) = 0x40b9ef;\n                fcn.004348c0();\n                unaff_BL = 0x31;\n                *(*0x20 + -0x48) = 0x40ba05;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x48) = 0x40ba12;\n            in_RAX = fcn.0045ca40(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x40ba25;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1445
    },
    "0040c440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c440(void)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040ba40(1, *in_RAX);\n    return;\n}\n",
        "token_count": 96
    },
    "0040c7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040c7a0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uStack56 = 0;\n    uStack48 = 0x40c860;\n    auStack24 = CONCAT88(&uStack56, arg1);\n    fcn.0045a220();\n    return uStack56;\n}\n",
        "token_count": 145
    },
    "0040cf80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nint64_t fcn.0040cf80(void)\n\n{\n    uchar auVar1 [16];\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar2 = fcn.0040c440();\n    uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar1 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n    *(iVar2 + 0xc) = SUB164(auVar1, 0) ^ SUB164(auVar1 >> 0x40, 0);\n    return iVar2;\n}\n",
        "token_count": 241
    },
    "00411520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411520(void)\n\n{\n    ulong unaff_RBX;\n    \n    fcn.00411ca0(unaff_RBX);\n    fcn.0045d0c0();\n    return;\n}\n",
        "token_count": 47
    },
    "00411560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411560(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    \n    *(in_RAX + 0x40) = ~*(unaff_RBX + *(in_RAX + 0x48));\n    return;\n}\n",
        "token_count": 62
    },
    "00411a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00411a80(ulong arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = arg1 + 1U >> 0x14;\n    if (0x3f < uVar2) {\n        fcn.0045ca60(0x40);\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    iVar3 = *(uVar2 * 8 + 0x5a5f90);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + (arg1 + 1U & 0xfffff) * 8);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "00414220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414220(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0045a220();\n    return;\n}\n",
        "token_count": 81
    },
    "004149a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004149a0(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0x488);\n            if (iVar1 == *0x5a5f30) {\n                return;\n            }\n            if (iVar1 == *0x5a5f30 + -2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x4149d9;\n                fcn.004147c0();\n                *(*0x20 + -0x28) = 0x4149e5;\n                fcn.004458e0();\n                *(*(*0x20 + 8) + 0x488) = *0x5a5f30;\n                return;\n            }\n            *(*0x20 + -0x10) = *0x5a5f30;\n            *(*0x20 + -0xc) = iVar1;\n            *(*0x20 + -0x28) = 0x414a18;\n            fcn.00434840();\n            *(*0x20 + -0x28) = 0x414a29;\n            fcn.00435140();\n            *(*0x20 + -0x28) = 0x414a32;\n            fcn.00434e40();\n            *(*0x20 + -0x28) = 0x414a45;\n            fcn.00435140();\n            *(*0x20 + -0x28) = 0x414a4e;\n            fcn.00434e40();\n            *(*0x20 + -0x28) = 0x414a53;\n            fcn.00434aa0();\n            *(*0x20 + -0x28) = 0x414a58;\n            fcn.004348c0();\n            *(*0x20 + -0x28) = 0x414a69;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x414a74;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 635
    },
    "00415080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415080(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x5a61d8;\n            *(*0x20 + -0x18) = *0x5a61e0;\n            iVar2 = 0;\n            iVar3 = *0x5a61d8;\n            iVar5 = *0x5a61e0;\n            while( true ) {\n                if (iVar5 <= iVar2) {\n                    *0x5d3b33 = 1;\n                    return;\n                }\n                uVar1 = *(iVar3 + iVar2 * 8);\n                uVar6 = uVar1 >> 0x14;\n                if (0x3f < uVar6) break;\n                *(*0x20 + -0x20) = iVar2;\n                iVar2 = *(*(uVar6 * 8 + 0x5a5f90) + (uVar1 & 0xfffff) * 8);\n                iVar5 = *(iVar2 + 0x210c0);\n                if (iVar5 == 0) {\n                    *(*0x20 + -0x28) = iVar2;\n                    iVar3 = 0x5d58f8;\n                    *(*0x20 + -0x48) = 0x415131;\n                    iVar2 = fcn.0040c7a0(0x5d58f8);\n                    if (iVar2 == 0) {\n                        *(*0x20 + -0x48) = 0x415169;\n                        fcn.004330a0();\n                        goto code_r0x00415169;\n                    }\n                    *(*(*0x20 + -0x28) + 0x210c0) = iVar2;\n                }\n                else {\n                    for (iVar3 = 0; iVar3 < 0x10000; iVar3 = iVar3 + 1) {\ncode_r0x00415169:\n                        *(iVar5 + iVar3) = 0;\n                    }\n                }\n                iVar2 = *(*0x20 + -0x20) + 1;\n                iVar5 = *(*0x20 + -0x18);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x48) = 0x41518c;\n            fcn.0045ca60(0x40);\n        }\n        *(puVar4 + -8) = 0x415192;\n        fcn.0045a360();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 717
    },
    "004151a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004151a0(void)\n\n{\n    bool bVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x580100 == 0) {\n                if (*0x580188 < *0x58018c) {\n                    bVar1 = true;\n                }\n                else {\n                    bVar1 = false;\n                }\n            }\n            else {\n                bVar1 = true;\n            }\n            if (!bVar1) {\n                *0x5d3b33 = 0;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x415209;\n            fcn.004330a0();\n        }\n        *(puVar2 + -8) = 0x41520f;\n        fcn.0045a360();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 297
    },
    "00415220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00415220(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t in_RAX;\n    uint8_t *puVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint8_t uVar3;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((*unaff_RDI & unaff_SIL) != 0) {\n                unaff_RBX = in_RAX + 0x800000000000;\n                if (unaff_RBX >> 0x2a < 0x40) {\n                    puVar1 = *(*(*((unaff_RBX >> 0x2a) * 8 + 0x5a5f90) + (unaff_RBX >> 0x16 & 0xfffff) * 8) + 0x210c0) +\n                             (in_RAX >> 0x19 & 0xffff);\n                    uVar3 = 1 << (in_RAX >> 0x16 & 7);\n                    if ((uVar3 & *puVar1) != 0) {\n                        return 1;\n                    }\n                    LOCK();\n                    *puVar1 = *puVar1 | uVar3;\n                    return 0;\n                }\n                arg1 = 0x40;\n                *(*0x20 + -0x40) = 0x4152da;\n                in_RAX = fcn.0045ca60(0x40);\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x4152ee;\n            fcn.00434840();\n            *(*0x20 + -0x40) = 0x4152f3;\n            fcn.00434840();\n            *(*0x20 + -0x40) = 0x415305;\n            fcn.00435140();\n            *(*0x20 + -0x40) = 0x41530f;\n            fcn.00434fa0();\n            *(*0x20 + -0x40) = 0x415314;\n            fcn.00434aa0();\n            *(*0x20 + -0x40) = 0x415319;\n            fcn.004348c0();\n            *(*0x20 + -0x40) = 0x41531e;\n            fcn.00434840();\n            *(*0x20 + -0x40) = 0x41532f;\n            fcn.00435140();\n            *(*0x20 + -0x40) = 0x415339;\n            fcn.00434fa0();\n            *(*0x20 + -0x40) = 0x41534a;\n            fcn.00435140();\n            *(*0x20 + -0x40) = 0x415354;\n            fcn.00434fa0();\n            *(*0x20 + -0x40) = 0x415365;\n            fcn.00435140();\n            *(*0x20 + -0x40) = 0x41536a;\n            fcn.004348c0();\n            *(*0x20 + -0x40) = 0x415385;\n            fcn.0041d120(*(*0x20 + -0x10));\n            arg1 = *(*0x20 + 8);\n            unaff_RDI = 0xffffffffffffffff;\n            *(*0x20 + -0x40) = 0x4153a5;\n            fcn.0041d120(arg1);\n            *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x40) = 0x4153c5;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        puVar2[0x28] = unaff_SIL;\n        *(puVar2 + 0x30) = arg3;\n        *(puVar2 + -8) = 0x4153e9;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        unaff_SIL = puVar2[0x28];\n        arg3 = *(puVar2 + 0x30);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1245
    },
    "00415420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00415420(void)\n\n{\n    ulong uStack24;\n    \n    fcn.0042c400();\n    fcn.00430560();\n    return uStack24;\n}\n",
        "token_count": 42
    },
    "004159e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004159e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004154a0();\n    return;\n}\n",
        "token_count": 82
    },
    "00415a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00415a20(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack24;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00430560();\n    if (iStack24 != 0) {\n        return iStack24;\n    }\n    fcn.00430560();\n    return 0;\n}\n",
        "token_count": 120
    },
    "00415b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415b20(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0042c400();\n    return;\n}\n",
        "token_count": 85
    },
    "00416ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416ca0(void)\n\n{\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    *0x57fe7c = 0x80000000;\n    fcn.0041e8c0();\n    *0x5d44c8 = 0x400000;\n    *0x5d44e8 = 0x3feccccccccccccd;\n    *0x5d44f0 = 0x4010000000000000;\n    *0x5d44f8 = 0x408f400000000000;\n    *0x5d4500 = 0xc08f400000000000;\n    *0x5d4508 = 0x408f400000000000;\n    *0x5d4510 = in_XMM15;\n    fcn.0041e840();\n    *0x5801f8 = 0x100000001;\n    return;\n}\n",
        "token_count": 262
    },
    "00418c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418c80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    for (; *0x5d3b60 < *0x5d3b70; *0x5d3b60 = *0x5d3b60 + 1) {\n        fcn.0043da80();\n        fcn.0040ab60();\n        *0x580200 = 0;\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0041a060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a060(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x58018c <= *0x580188) {\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x41a140;\n                *(*0x20 + -0x10) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x41a0b7;\n                fcn.004365c0();\n                return;\n            }\n            *(*0x20 + -0x24) = *0x580188;\n            *(*0x20 + -0x28) = *0x58018c;\n            *(*0x20 + -0x40) = 0x41a0ce;\n            fcn.00434840();\n            *(*0x20 + -0x40) = 0x41a0d7;\n            fcn.00434e40();\n            *(*0x20 + -0x40) = 0x41a0e8;\n            fcn.00435140();\n            *(*0x20 + -0x40) = 0x41a0f1;\n            fcn.00434e40();\n            *(*0x20 + -0x40) = 0x41a105;\n            fcn.00435140();\n            *(*0x20 + -0x40) = 0x41a10a;\n            fcn.004348c0();\n            *(*0x20 + -0x40) = 0x41a11b;\n            fcn.004330a0();\n        }\n        *(puVar1 + -8) = 0x41a125;\n        fcn.0045a360();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 547
    },
    "0041a820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0041a820(int64_t arg1)\n\n{\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (unaff_RBX <= unaff_RSI * 0x40000) {\n        return 0;\n    }\n    iVar1 = 0x40000;\n    if (unaff_RBX < unaff_RSI * 0x40000 + 0x40000U) {\n        iVar1 = unaff_RBX + unaff_RSI * -0x40000;\n    }\n    fcn.0041c620(arg1 + unaff_RSI * 0x1000);\n    return iVar1;\n}\n",
        "token_count": 214
    },
    "0041b2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b2c0(void)\n\n{\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    *0x580238 = in_XMM15;\n    fcn.0043b580();\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 123
    },
    "0041cd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041cd80(void)\n\n{\n    int64_t iVar1;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    arg3 = 0;\n    iVar1 = fcn.00411920(0);\n    if (iVar1 != 0) {\n        fcn.0041ce00(0, *(*(unaff_R14 + 0x30) + 0xa0), arg3);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "0041d680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d680(void)\n\n{\n    int64_t noname_1;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x57fc98,  iVar1 = *0x57fc90,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n        noname_1 = *(*(iVar1 + iVar3 * 8) + 0x40);\n        if ((noname_1 != 0) && (*(noname_1 + 0x10) != 0)) {\n            arg3 = 0;\n            fcn.00411920(0);\n            fcn.0041ce00(0, noname_1, arg3);\n        }\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "0041da40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041da40(void)\n\n{\n    int64_t iVar1;\n    int32_t *in_RAX;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar2 = *in_RAX;\n    iVar7 = *(in_RAX + 0x1a);\n    if (iVar2 < 0) {\n        iVar2 = 100000;\n    }\n    iVar5 = *(in_RAX + 0x2c) + *(in_RAX + 0x2e) + *(in_RAX + 0x30);\n    iVar6 = *(in_RAX + 0x22) + *(in_RAX + 0x24) + *(in_RAX + 0x28);\n    iVar4 = *(in_RAX + 0x20) + *(in_RAX + 0x24) + *(in_RAX + 0x28);\n    if (iVar6 < iVar5) {\n        iVar1 = *(in_RAX + 6) + ((iVar7 - *(in_RAX + 6)) / iVar6) * iVar4;\n        iVar3 = (*0x4f9a00 + iVar2 / *0x4f9a38) * iVar7;\n        iVar6 = iVar4;\n        iVar7 = iVar1;\n        if (iVar3 < iVar1) {\n            iVar7 = iVar3;\n        }\n    }\n    if (iVar7 < *(in_RAX + 0x1e)) {\n        iVar7 = *0x4f9a08 * iVar7;\n        iVar6 = iVar4;\n    }\n    iVar6 = iVar6 - iVar5;\n    if (iVar6 < 1000) {\n        iVar6 = 1000;\n    }\n    iVar7 = iVar7 - *(in_RAX + 0x1e);\n    if (iVar7 < 1) {\n        iVar7 = 1;\n    }\n    *(in_RAX + 0x40) = iVar6 / iVar7;\n    *(in_RAX + 0x42) = iVar7 / iVar6;\n    return;\n}\n",
        "token_count": 483
    },
    "0041f7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041f7e0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        iVar1 = arg1;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000 < arg1 + 0x800000000000U) {\n                iVar1 = arg1 - unaff_RBX;\n            }\n            else {\n                iVar1 = 0;\n            }\n            if (iVar1 == 0) {\n                return;\n            }\n            if ((unaff_RBX & 0x3fffff) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x20) = unaff_EDI;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x10) = in_RAX + 0x100b8;\n                *(*0x20 + -0x40) = 0x41f858;\n                fcn.0040a360();\n                if (*(*(*0x20 + 8) + 0x100e8) == *(*0x20 + 0x20)) {\n                    *(*0x20 + -0x40) = 0x41f87f;\n                    fcn.0042b560(*(*0x20 + -0x20));\n                }\n                *(*0x20 + -0x40) = 0x41f88b;\n                fcn.0040a580();\n                return;\n            }\n            unaff_RBX = 0x1c;\n            *(*0x20 + -0x40) = 0x41f8b0;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = iVar1;\n        *(puVar2 + 0x20) = unaff_EDI;\n        *(puVar2 + -8) = 0x41f8c9;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 700
    },
    "004202e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004202e0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (((unaff_RBX - 1 & unaff_RBX) == 0) && (unaff_RBX != 0)) {\n                if (unaff_RBX < 0x41) {\n                    *(*0x20 + 8) = in_RAX;\n                    iVar3 = 7;\n                    while( true ) {\n                        if (iVar3 < 0) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x10) = iVar3;\n                        uVar1 = *(in_RAX + 0x40 + iVar3 * 8);\n                        uVar2 = *(in_RAX + iVar3 * 8);\n                        *(*0x20 + -0x28) = 0x420355;\n                        iVar3 = fcn.00420120(iVar3, uVar1 | uVar2);\n                        if (iVar3 != -1) break;\n                        iVar3 = *(*0x20 + -0x10) + -1;\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    return 1;\n                }\n                *(*0x20 + -0x28) = 0x42037b;\n                fcn.00434840();\n                *(*0x20 + -0x28) = 0x42038c;\n                fcn.00435140();\n                *(*0x20 + -0x28) = 0x420396;\n                fcn.00434e40();\n                *(*0x20 + -0x28) = 0x42039b;\n                fcn.00434aa0();\n                *(*0x20 + -0x28) = 0x4203a5;\n                fcn.004348c0();\n                *(*0x20 + -0x28) = 0x4203b6;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x28) = 0x4203bb;\n            fcn.00434840();\n            *(*0x20 + -0x28) = 0x4203cc;\n            fcn.00435140();\n            *(*0x20 + -0x28) = 0x4203d6;\n            fcn.00434e40();\n            *(*0x20 + -0x28) = 0x4203db;\n            fcn.00434aa0();\n            *(*0x20 + -0x28) = 0x4203e5;\n            fcn.004348c0();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x28) = 0x4203f6;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x420406;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 876
    },
    "00420760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420760(char param_1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x100) < unaff_RBX || *(in_RAX + 0x100) == unaff_RBX) &&\n               (unaff_RBX <= *(in_RAX + 0x108) && *(in_RAX + 0x108) != unaff_RBX)) {\n                piVar2 = in_RAX + 0x118;\n                if (param_1 != '\\0') {\n                    piVar2 = in_RAX + 0x128;\n                }\n                *(*0x20 + -0x10) = piVar2;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar1 = *piVar2;\n                if (iVar1 == 0) {\n                    *(*0x20 + -0x28) = 0x42080d;\n                    iVar1 = fcn.00422f00();\n                    *(iVar1 + 0x10) = in_XMM15;\n                    **(*0x20 + -0x10) = iVar1;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                else if (*(iVar1 + 0x10) == 0xfc) {\n                    iVar1 = *(in_RAX + 0x120);\n                    if (iVar1 == 0) {\n                        *(*0x20 + -0x28) = 0x4207e7;\n                        iVar1 = fcn.00422f00();\n                        piVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                    else {\n                        *(in_RAX + 0x120) = 0;\n                    }\n                    *(iVar1 + 0x10) = 0;\n                    *(iVar1 + 0x18) = *piVar2;\n                    *piVar2 = iVar1;\n                }\n                if (*(iVar1 + 0x10) < 0xfc) {\n                    *(iVar1 + 0x20 + *(iVar1 + 0x10) * 8) = unaff_RBX;\n                    *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                    return;\n                }\n                param_1 = -4;\n                *(*0x20 + -0x28) = 0x42084b;\n                fcn.0045ca40(0xfc);\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x28) = 0x42085c;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x420870;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 878
    },
    "00422781": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00422781(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    \n    if (*0x57fe7c == -0x80000000) {\n        *0x5a5f70 = 0.0;\n    }\n    else {\n        iVar1 = (in_RAX - *0x5d4538) + -0x100000;\n        if (iVar1 < 0x2000) {\n            iVar1 = 0x2000;\n        }\n        if (*0x5a5f50 - *0x5a5f58 < 1) {\n            *0x5a5f70 = 0.0;\n        }\n        else {\n            *0x5a5f70 = (*0x5a5f50 - *0x5a5f58) / iVar1;\n            *0x5a5f68 = *0x5d4538;\n            *0x5a5f60 = *0x5a5f58;\n        }\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "00422820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422820(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = fcn.00422f00();\n    *in_RAX = uVar1;\n    iVar2 = fcn.00423240();\n    if (iVar2 == 0) {\n        iVar2 = fcn.00422f00();\n    }\n    in_RAX[1] = iVar2;\n    return;\n}\n",
        "token_count": 161
    },
    "00423180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423180(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00422ea0();\n    fcn.0040a100();\n    return;\n}\n",
        "token_count": 90
    },
    "004231e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004231e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00422e40();\n    fcn.0040a100();\n    return;\n}\n",
        "token_count": 91
    },
    "00423240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00423240(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x580100 == 0) {\n        piVar1 = NULL;\n    }\n    else {\n        piVar1 = (*0x580100 >> 0x13) << 3;\n        *0x580100 = *piVar1;\n        LOCK();\n    }\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    fcn.00422e40();\n    return piVar1;\n}\n",
        "token_count": 173
    },
    "004232e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.004232e0(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x423305;\n            iVar2 = fcn.00422f00();\n            iVar1 = *(*0x20 + 8);\n            iVar3 = *(iVar1 + 0x10) / 2;\n            *(iVar1 + 0x10) = *(iVar1 + 0x10) - iVar3;\n            *(iVar2 + 0x10) = iVar3;\n            if (*(iVar1 + 0x10) < 0xfd) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x30) = 0x423353;\n                fcn.0045d380(iVar3 << 3);\n                *(*0x20 + -0x30) = 0x42335d;\n                fcn.004231e0();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x30) = 0x423379;\n            in_RAX = fcn.0045ca40(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x423385;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 480
    },
    "004238a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004238a0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x5a5f90);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 354
    },
    "00424100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00424100(uchar param_1)\n\n{\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uStack56 = 0;\n    uStack48 = 0x4241c0;\n    auStack24 = CONCAT151(SUB1615(CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da))) >> 8\n                                  , 0), param_1);\n    auStack24 = CONCAT88(&uStack56, auStack24._0_8_);\n    fcn.0045a220();\n    return uStack56;\n}\n",
        "token_count": 252
    },
    "00424240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424240(char param_1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (param_1 != '\\0') {\n                *(*0x20 + -0x28) = 0x42425f;\n                fcn.00424600();\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x28) = 0x42427a;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        puVar1[0x18] = param_1;\n        *(puVar1 + -8) = 0x42428e;\n        fcn.0045ea60();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        param_1 = puVar1[0x18];\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 364
    },
    "00424f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424f20(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0045a220();\n    return;\n}\n",
        "token_count": 82
    },
    "00425020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425020(uint8_t param_1)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045ea60();\n    }\n    *(unaff_RBX + 100) = 1;\n    fcn.0040a360();\n    fcn.004250a0(param_1);\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 130
    },
    "00425d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425d40(void)\n\n{\n    ulong *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    puVar1 = fcn.00425920();\n    if (puVar1 != NULL) {\n        fcn.0040a360();\n        *0x5ac8f8 = *0x5ac8f8 - *0x5ac8c8;\n        *puVar1 = *0x5ac8e0;\n        *0x5ac8e0 = puVar1;\n        fcn.0040a580();\n        return;\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00425de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425de0(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x425e0f;\n            fcn.0040a360();\n            *(*0x20 + -0x30) = 0x425e1b;\n            uVar3 = fcn.00416b60();\n            *(*0x20 + -0x18) = uVar3;\n            *(*0x20 + -0x30) = 0x425e2e;\n            fcn.0040a580();\n            iVar1 = *(*0x20 + -0x18);\n            *(iVar1 + 10) = 2;\n            *(iVar1 + 0x10) = *(*0x20 + 0x10);\n            *(*0x20 + -0x30) = 0x425e4a;\n            cVar2 = fcn.004256e0();\n            if (cVar2 != '\\0') {\n                return;\n            }\n            unaff_RBX = 0x25;\n            *(*0x20 + -0x30) = 0x425e69;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x425e79;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 546
    },
    "00425fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00425fe0(void)\n\n{\n    bool bVar1;\n    int64_t *piVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        piVar2 = *0x5d3e50;\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar7 = in_RAX + 0x3fU >> 6;\n            if (*0x5d3e50 == NULL) {\n                bVar1 = true;\n            }\n            else {\n                bVar1 = 0xfff0 < **0x5d3e50 + uVar7 * 8;\n            }\n            if (bVar1) {\n                iVar5 = 0;\ncode_r0x00426074:\n                if (iVar5 != 0) {\n                    return iVar5;\n                }\n                *(*0x20 + -0x10) = uVar7 * 8;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x48) = 0x426095;\n                fcn.0040a360();\n                piVar2 = *0x5d3e50;\n                if (*0x5d3e50 == NULL) {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = true;\n                }\n                else {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = 0xfff0 < **0x5d3e50 + iVar5 * 8;\n                }\n                if (bVar1) {\n                    iVar5 = 0;\ncode_r0x00426114:\n                    if (iVar5 != 0) {\n                        *(*0x20 + -0x20) = iVar5;\n                        *(*0x20 + -0x48) = 0x42628c;\n                        fcn.0040a580();\n                        return *(*0x20 + -0x20);\n                    }\n                    *(*0x20 + -0x48) = 0x426125;\n                    piVar4 = fcn.00426400();\n                    piVar2 = *0x5d3e50;\n                    if (*0x5d3e50 == NULL) {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = true;\n                    }\n                    else {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = 0xfff0 < **0x5d3e50 + iVar5 * 8;\n                    }\n                    if (bVar1) {\n                        iVar9 = *(*0x20 + -0x10);\n                        iVar6 = 0;\ncode_r0x004261a0:\n                        if (iVar6 != 0) {\n                            *(*0x20 + -0x28) = iVar6;\n                            piVar4[1] = *0x5d3e48;\n                            *(*0x20 + -0x48) = 0x42626a;\n                            *0x5d3e48 = piVar4;\n                            fcn.0040a580();\n                            return *(*0x20 + -0x28);\n                        }\n                        if (piVar4 == NULL) {\n                            bVar1 = true;\n                        }\n                        else {\n                            bVar1 = 0xfff0 < *piVar4 + iVar5 * 8;\n                        }\n                        if (bVar1) {\n                            iVar5 = 0;\ncode_r0x00426205:\n                            if (iVar5 != 0) {\n                                *(*0x20 + -0x30) = iVar5;\n                                piVar4[1] = *0x5d3e50;\n                                *(*0x20 + -0x48) = 0x426236;\n                                *0x5d3e50 = piVar4;\n                                fcn.0040a580();\n                                return *(*0x20 + -0x30);\n                            }\n                            *(*0x20 + -0x48) = 0x4262b9;\n                            fcn.004330a0();\n                        }\n                        else {\n                            LOCK();\n                            iVar6 = *piVar4;\n                            *piVar4 = *piVar4 + iVar9;\n                            uVar7 = iVar6 + iVar5 * 8;\n                            if (0xfff0 < uVar7) {\n                                iVar5 = 0;\n                                goto code_r0x00426205;\n                            }\n                            uVar7 = uVar7 - iVar9;\n                            if (uVar7 < 0xfff0) {\n                                iVar5 = piVar4 + uVar7 + 0x10;\n                                goto code_r0x00426205;\n                            }\n                        }\n                        *(*0x20 + -0x48) = 0x4262c6;\n                        fcn.0045ca60(0xfff0);\n                    }\n                    else {\n                        iVar9 = *(*0x20 + -0x10);\n                        LOCK();\n                        iVar6 = **0x5d3e50;\n                        **0x5d3e50 = **0x5d3e50 + iVar9;\n                        uVar7 = iVar6 + iVar5 * 8;\n                        if (0xfff0 < uVar7) {\n                            iVar6 = 0;\n                            goto code_r0x004261a0;\n                        }\n                        uVar7 = uVar7 - iVar9;\n                        if (uVar7 < 0xfff0) {\n                            iVar6 = piVar2 + uVar7 + 0x10;\n                            goto code_r0x004261a0;\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x4262d3;\n                    fcn.0045ca60(0xfff0);\n                }\n                else {\n                    iVar9 = *(*0x20 + -0x10);\n                    LOCK();\n                    iVar6 = **0x5d3e50;\n                    **0x5d3e50 = **0x5d3e50 + iVar9;\n                    uVar7 = iVar6 + iVar5 * 8;\n                    if (0xfff0 < uVar7) {\n                        iVar5 = 0;\n                        goto code_r0x00426114;\n                    }\n                    uVar7 = uVar7 - iVar9;\n                    if (uVar7 < 0xfff0) {\n                        iVar5 = piVar2 + uVar7 + 0x10;\n                        goto code_r0x00426114;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x4262dd;\n                fcn.0045ca60(0xfff0);\n            }\n            else {\n                LOCK();\n                iVar5 = **0x5d3e50;\n                **0x5d3e50 = **0x5d3e50 + uVar7 * 8;\n                uVar3 = iVar5 + uVar7 * 8;\n                if (0xfff0 < uVar3) {\n                    iVar5 = 0;\n                    goto code_r0x00426074;\n                }\n                uVar3 = uVar3 + uVar7 * -8;\n                if (uVar3 < 0xfff0) {\n                    iVar5 = piVar2 + uVar3 + 0x10;\n                    goto code_r0x00426074;\n                }\n            }\n            *(*0x20 + -0x48) = 0x4262e7;\n            in_RAX = fcn.0045ca60(0xfff0);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x4262f2;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1841
    },
    "00426300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426300(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00425fe0();\n    return;\n}\n",
        "token_count": 81
    },
    "00426340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426340(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    if (*0x5d3e60 != 0) {\n        iVar1 = *0x5d3e60;\n        if (*0x5d3e48 == 0) {\n            *0x5d3e48 = *0x5d3e60;\n        }\n        else {\n            do {\n                iVar3 = iVar1;\n                iVar1 = *(iVar3 + 8);\n            } while (iVar1 != 0);\n            *(iVar3 + 8) = *0x5d3e48;\n            *0x5d3e48 = *0x5d3e60;\n        }\n    }\n    uVar2 = *0x5d3e50;\n    *0x5d3e60 = *0x5d3e58;\n    *0x5d3e58 = *0x5d3e50;\n    *0x5d3e50 = 0;\n    fcn.0040a580(uVar2);\n    return;\n}\n",
        "token_count": 317
    },
    "00426400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426400(void)\n\n{\n    int64_t iVar1;\n    uchar (*pauVar2) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5d3e48 != 0) {\n                *(*0x20 + -0x18) = *0x5d3e48;\n                *0x5d3e48 = *(*0x5d3e48 + 8);\n                *(*0x20 + -0x30) = 0x42643f;\n                fcn.0045d0c0();\n                pauVar2 = *(*0x20 + -0x18);\n                goto code_r0x00426482;\n            }\n            *(*0x20 + -0x30) = 0x426454;\n            fcn.0040a580();\n            *(*0x20 + -0x30) = 0x426465;\n            iVar1 = fcn.00415420();\n            if (iVar1 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x42647d;\n                fcn.0040a360();\n                pauVar2 = *(*0x20 + -0x10);\ncode_r0x00426482:\n                *pauVar2 = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x30) = 0x4264a5;\n            fcn.004330a0();\n        }\n        *(puVar3 + -8) = 0x4264ab;\n        fcn.0045a360();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 494
    },
    "00428660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00428660(void)\n\n{\n    code *pcVar1;\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    if (unaff_RBX != 0) {\n        uVar5 = *in_RAX;\n        if (uVar5 < 0) {\n            uVar3 = 0x200000;\n            uVar4 = 0x200000;\n            uVar5 = 0x200000;\n        }\n        else {\n            uVar3 = uVar5 & 0x1fffff;\n            uVar4 = uVar5 >> 0x15 & 0x1fffff;\n            uVar5 = uVar5 >> 0x2a & 0x1fffff;\n        }\n        for (iVar2 = 1; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n            uVar8 = in_RAX[iVar2];\n            if (uVar8 < 0) {\n                uVar6 = 0x200000;\n                uVar7 = 0x200000;\n                uVar8 = 0x200000;\n            }\n            else {\n                uVar6 = uVar8 & 0x1fffff;\n                uVar7 = uVar8 >> 0x15 & 0x1fffff;\n                uVar8 = uVar8 >> 0x2a & 0x1fffff;\n            }\n            if (uVar3 == (iVar2 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40))) {\n                uVar3 = uVar3 + uVar6;\n            }\n            uVar9 = 1 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40);\n            if (uVar8 == uVar9) {\n                uVar8 = uVar9 + uVar5;\n            }\n            if (uVar4 < uVar6 + uVar5) {\n                uVar4 = uVar6 + uVar5;\n            }\n            if (uVar4 < uVar7) {\n                uVar4 = uVar7;\n            }\n            uVar5 = uVar8;\n        }\n        if (uVar4 == 0x200000) {\n            uVar5 = 0x8000000000000000;\n        }\n        else {\n            uVar5 = (uVar5 & 0x1fffff) << 0x2a | (uVar4 & 0x1fffff) << 0x15 | uVar3 & 0x1fffff;\n        }\n        return uVar5;\n    }\n    fcn.0045ca40(0);\n    pcVar1 = swi(3);\n    uVar5 = (*pcVar1)();\n    return uVar5;\n}\n",
        "token_count": 701
    },
    "0042a8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.0042a8a0(void)\n\n{\n    bool bVar1;\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (in_RAX < 1) {\n        in_RAX = 1;\n    }\n    if (*0x5d3c08 < 1) {\n        bVar1 = true;\n    }\n    else if (in_RAX < *0x5d3c08) {\n        uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar3 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n        auVar2 = SEXT816(*0x5d3c08);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n        bVar1 = in_RAX < SUB168((ZEXT816(SUB168(auVar3 >> 0x40, 0) ^ SUB168(auVar3, 0)) & 0xffffffffffffffff) % auVar2, \n                                0);\n    }\n    else {\n        bVar1 = false;\n    }\n    if (!bVar1) {\n        fcn.0042a980(unaff_RBX + 1);\n    }\n    return;\n}\n",
        "token_count": 393
    },
    "0042ab80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ab80(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    if (arg1 == 0) {\n        fcn.00434840();\n        fcn.00435140();\n        fcn.004350c0();\n        fcn.00435140();\n        fcn.00434fa0();\n        fcn.00435140();\n        fcn.004348c0();\n    }\n    else {\n        fcn.00454b20();\n        fcn.00434840();\n        fcn.00435140();\n        fcn.004350c0();\n        fcn.00435140();\n        fcn.00434fa0();\n        fcn.00435140();\n        fcn.00435140();\n        fcn.00435140();\n        fcn.004348c0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 == 0) || (unaff_R14 == iVar1)) {\n        fcn.00453f40();\n        fcn.0045a220();\n    }\n    else {\n        fcn.00453f40();\n        fcn.004532a0(0);\n    }\n    fcn.00434840();\n    fcn.00434aa0();\n    fcn.004348c0();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 421
    },
    "0042ae20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ae20(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.00434840();\n    fcn.00435140();\n    fcn.004350c0();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00435140();\n    fcn.004348c0();\n    fcn.00453f40();\n    fcn.0045a220();\n    fcn.00434840();\n    fcn.00434aa0();\n    fcn.004348c0();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 240
    },
    "0042afc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042afc0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.00434840();\n    fcn.00435140();\n    fcn.004348c0();\n    fcn.00454180();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.004348c0();\n    fcn.00434840();\n    fcn.00434aa0();\n    fcn.004348c0();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 221
    },
    "0042b080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0042b080(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x800000000000 == in_RAX <= in_RAX + 0x800000000000) {\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x20) = 0x42b0d0;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x42b0e5;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 343
    },
    "0042b100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042b100(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = in_RAX + 0x800000000000;\n            if ((arg1 + 0x800000000000U <= uVar1) && (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                return 0;\n            }\n            if ((arg1 + 0x800000000000U <= uVar1) || (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                if ((unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U) ||\n                   (unaff_RDI + 0x800000000000U <= uVar1)) {\n                    unaff_RDI = in_RAX;\n                }\n                return unaff_RDI;\n            }\n            unaff_RBX = 9;\n            *(*0x20 + -0x20) = 0x42b1aa;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42b1c5;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 579
    },
    "0042b1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042b1e0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (in_RAX + 0x800000000000U < arg1 + 0x800000000000U) {\n        if (unaff_RBX + 0x800000000000U <= arg1 + 0x800000000000U) {\n            return in_RAX;\n        }\n        iVar1 = fcn.0042b080();\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 193
    },
    "0042b340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0042b340(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    uint64_t arg1;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uint64_t uVar8;\n    \n    arg1 = in_RAX[1];\n    iVar3 = *in_RAX;\n    uVar5 = 0;\n    uVar1 = arg1;\n    while (uVar6 = uVar1,  8 < uVar6 - uVar5) {\n        iVar7 = (uVar6 - uVar5) / 2;\n        uVar1 = iVar7 + uVar5;\n        if (arg1 <= uVar1) goto code_r0x0042b430;\n        uVar8 = *(uVar1 * 0x10 + iVar3) + 0x800000000000;\n        uVar2 = unaff_RBX + 0x800000000000;\n        if ((uVar8 <= uVar2) && (uVar2 < *(iVar3 + 8 + uVar1 * 0x10) + 0x800000000000U)) {\n            return iVar7 + uVar5 + 1;\n        }\n        if (uVar8 <= uVar2) {\n            uVar5 = iVar7 + uVar5 + 1;\n            uVar1 = uVar6;\n        }\n    }\n    while( true ) {\n        if (uVar6 <= uVar5) {\n            return uVar6;\n        }\n        if (arg1 <= uVar5) break;\n        if (unaff_RBX + 0x800000000000U < *(uVar5 * 0x10 + iVar3) + 0x800000000000U) {\n            return uVar5;\n        }\n        uVar5 = uVar5 + 1;\n    }\n    arg1 = fcn.0045ca40(arg1);\ncode_r0x0042b430:\n    fcn.0045ca40(arg1);\n    pcVar4 = swi(3);\n    uVar5 = (*pcVar4)();\n    return uVar5;\n}\n",
        "token_count": 514
    },
    "0042b440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042b440(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    int64_t *arg1;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x42b467;\n            piVar3 = fcn.0042b340();\n            if (piVar3 == NULL) {\n                arg1 = (*(*0x20 + 8))[1];\n                if (arg1 != NULL) {\n                    return ***(*0x20 + 8);\n                }\n            }\n            else {\n                arg1 = (*(*0x20 + 8))[1];\n                iVar2 = **(*0x20 + 8);\n                if (piVar3 - 1U < arg1) {\n                    iVar5 = (piVar3 - 1U) * 0x10;\n                    uVar1 = *(*0x20 + 0x10) + 0x800000000000;\n                    if ((*(iVar5 + iVar2) + 0x800000000000U <= uVar1) &&\n                       (uVar1 < *(iVar2 + 8 + iVar5) + 0x800000000000U)) {\n                        return *(*0x20 + 0x10);\n                    }\n                    if (arg1 <= piVar3) {\n                        return 0;\n                    }\n                    if (piVar3 < arg1) {\n                        return *(piVar3 * 0x10 + iVar2);\n                    }\n                    *(*0x20 + -0x20) = 0x42b528;\n                    fcn.0045ca40(arg1);\n                }\n                *(*0x20 + -0x20) = 0x42b530;\n                fcn.0045ca40(arg1);\n            }\n            *(*0x20 + -0x20) = 0x42b537;\n            in_RAX = fcn.0045ca40(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x42b547;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 700
    },
    "0042bac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042bac0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    \n    iVar1 = *in_RAX;\n    if (in_RAX[1] == 0) {\n        return 0;\n    }\n    iVar4 = in_RAX[1] + -1;\n    iVar5 = iVar4 * 0x10;\n    iVar2 = *(iVar1 + 8 + iVar5);\n    iVar3 = *(iVar1 + iVar5);\n    if (iVar3 + 0x800000000000U < iVar2 + 0x800000000000U) {\n        uVar6 = iVar2 - iVar3;\n    }\n    else {\n        uVar6 = 0;\n    }\n    if (unaff_RBX < uVar6) {\n        *(iVar1 + 8 + iVar5) = iVar2 - unaff_RBX;\n        in_RAX[3] = in_RAX[3] - unaff_RBX;\n        return iVar2 - unaff_RBX;\n    }\n    in_RAX[1] = iVar4;\n    in_RAX[3] = in_RAX[3] - uVar6;\n    return iVar3;\n}\n",
        "token_count": 312
    },
    "0042bb40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bb40(void)\n\n{\n    int64_t iVar1;\n    uint64_t arg2;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t *puVar9;\n    uint64_t uVar10;\n    int64_t *piVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = 0x42bb67;\n            uVar2 = fcn.0042b340();\n            if (uVar2 == 0) {\n                iVar12 = *(*0x20 + 8);\n                *(iVar12 + 0x18) = 0;\n                *(iVar12 + 8) = 0;\n                return;\n            }\n            puVar9 = *(*0x20 + 8);\n            uVar10 = *puVar9;\n            uVar5 = puVar9[1];\n            if (uVar2 <= uVar5) break;\n            *(*0x20 + -0x58) = 0x42bd4a;\n            in_RAX = fcn.0045cb00(uVar5);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x42bd5a;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n    uVar5 = uVar5 - uVar2;\n    piVar11 = (uVar2 << 4 & uVar2 - puVar9[2] >> 0x3f) + uVar10;\n    if (uVar5 == 0) {\n        iVar12 = 0;\n        goto code_r0x0042bbd4;\n    }\n    iVar3 = 0;\n    iVar6 = 0;\n    do {\n        if (*piVar11 + 0x800000000000U < piVar11[1] + 0x800000000000U) {\n            iVar12 = piVar11[1] - *piVar11;\n        }\n        else {\n            iVar12 = 0;\n        }\n        iVar3 = iVar3 + 1;\n        iVar12 = iVar12 + iVar6;\n        iVar6 = iVar12;\n        if (uVar5 <= iVar3) {\ncode_r0x0042bbd4:\n            uVar5 = uVar2;\n            iVar6 = uVar5 - 1;\n            piVar11 = iVar6 * 0x10;\n            iVar3 = *(uVar10 + piVar11);\n            iVar1 = *(uVar10 + 8 + piVar11);\n            uVar10 = 0x800000000000;\n            uVar2 = *(*0x20 + 0x10) + 0x800000000000;\n            if ((uVar2 < iVar3 + 0x800000000000U) || (iVar1 + 0x800000000000U <= uVar2)) {\ncode_r0x0042bccd:\n                arg2 = puVar9[2];\n                if (uVar5 <= arg2) {\n                    puVar9[1] = uVar5;\n                    puVar9[3] = puVar9[3] - iVar12;\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x42bcf0;\n                uVar2 = uVar5;\n                fcn.0045cac0(uVar5, arg2);\n            }\n            else {\n                *(*0x20 + -0x10) = uVar5;\n                *(*0x20 + -0x18) = iVar6;\n                *(*0x20 + -0x20) = iVar1;\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0x30) = piVar11;\n                *(*0x20 + -0x38) = iVar12;\n                *(*0x20 + -0x58) = 0x42bc3d;\n                iVar4 = fcn.0042b1e0(*(*0x20 + 0x10));\n                iVar12 = (*(*0x20 + -0x20) - *(*0x20 + -0x28)) + *(*0x20 + -0x38);\n                uVar10 = iVar4 + 0x800000000000;\n                if (uVar10 < iVar1 + 0x800000000000U) {\n                    iVar7 = iVar1 - iVar4;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                if (iVar7 == 0) {\n                    puVar9 = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0x18);\n                    goto code_r0x0042bccd;\n                }\n                if (uVar10 < iVar1 + 0x800000000000U) {\n                    iVar7 = iVar1 - iVar4;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                iVar12 = iVar12 - iVar7;\n                puVar9 = *(*0x20 + 8);\n                uVar10 = *puVar9;\n                uVar5 = puVar9[1];\n                uVar2 = *(*0x20 + -0x18);\n                if (uVar2 < uVar5) {\n                    iVar7 = *(*0x20 + -0x30);\n                    *(uVar10 + iVar7) = iVar4;\n                    *(uVar10 + 8 + iVar7) = iVar1;\n                    uVar5 = *(*0x20 + -0x10);\n                    goto code_r0x0042bccd;\n                }\n            }\n            *(*0x20 + -0x58) = 0x42bcf8;\n            fcn.0045ca40(uVar5);\n        }\n        piVar11 = piVar11 + 2;\n    } while( true );\n}\n",
        "token_count": 1523
    },
    "0042bd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bd80(void)\n\n{\n    uint64_t arg2;\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    int64_t *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX[2] < in_RAX[1]) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                unaff_RBX[1] = 0;\n                unaff_RBX[2] = in_RAX[2];\n                iVar1 = unaff_RBX[4];\n                *(*0x20 + -0x28) = 0x42bdd5;\n                iVar1 = fcn.0040c7a0(iVar1);\n                unaff_RBX = *(*0x20 + 0x10);\n                *unaff_RBX = iVar1;\n                in_RAX = *(*0x20 + 8);\n            }\n            arg2 = unaff_RBX[2];\n            arg1 = in_RAX[1];\n            if (arg1 <= arg2) {\n                unaff_RBX[1] = arg1;\n                unaff_RBX[3] = in_RAX[3];\n                if (in_RAX[1] < arg1) {\n                    arg1 = in_RAX[1];\n                }\n                if (*unaff_RBX != *in_RAX) {\n                    *(*0x20 + -0x28) = 0x42be25;\n                    fcn.0045d380(arg1 << 4);\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x42be34;\n            in_RAX = fcn.0045cac0(arg1, arg2);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42be45;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 614
    },
    "0042c000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042c000(void)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int32_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t in_RAX;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    while( true ) {\n        uVar12 = *(in_RAX + 0x20);\n        uVar10 = uVar12 >> 0x20;\n        if (uVar12 <= uVar10) {\n            return 0;\n        }\n        if (*(in_RAX + 0x10) <= uVar12 >> 0x29) break;\n        while (uVar11 = uVar12 >> 0x20,  uVar11 == uVar10) {\n            LOCK();\n            puVar1 = in_RAX + 0x20;\n            uVar7 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar12 == uVar7) * (*puVar1 ^ (uVar10 + 1 << 0x20 | uVar12 & 0xffffffff));\n            if (uVar12 == uVar7) {\n                piVar4 = *(in_RAX + 8) + (uVar11 >> 9) * 8;\n                iVar8 = *piVar4;\n                piVar2 = iVar8 + (uVar11 & 0x1ff) * 8 + 0x18;\n                iVar13 = *piVar2;\n                while (iVar13 == 0) {\n                    iVar13 = *piVar2;\n                }\n                iVar9 = *piVar2;\n                *piVar2 = 0;\n                LOCK();\n                piVar3 = iVar8 + 0x10;\n                iVar5 = *piVar3;\n                *piVar3 = *piVar3 + 1;\n                if (iVar5 == 0x1ff) {\n                    *piVar4 = 0;\n                    uVar6 = *(iVar8 + 0x10);\n                    *(iVar8 + 0x10) = 0;\n                    fcn.0040a100(uVar6, iVar8, iVar9);\n                }\n                return iVar13;\n            }\n            uVar12 = *(in_RAX + 0x20);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 623
    },
    "0042c140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c140(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = *(in_RAX + 0x20);\n            piVar5 = uVar6 >> 0x20;\n            uVar4 = uVar6 >> 0x20;\n            if (uVar6 <= uVar4) {\n                uVar6 = uVar4 >> 9;\n                if (*(in_RAX + 0x10) < uVar6 || *(in_RAX + 0x10) == uVar6) goto code_r0x0042c1b6;\n                piVar5 = uVar6 * 8 + *(in_RAX + 8);\n                iVar2 = *piVar5;\n                if (iVar2 == 0) goto code_r0x0042c1b6;\n                uVar4 = *(iVar2 + 0x10);\n                uVar6 = uVar4;\n                if (uVar4 != 0) {\n                    if (uVar4 != 0x200) {\n                        *(*0x20 + 8) = in_RAX;\n                        iVar3 = *piVar5;\n                        *piVar5 = 0;\n                        uVar1 = *(iVar2 + 0x10);\n                        *(iVar2 + 0x10) = 0;\n                        *(*0x20 + -0x30) = 0x42c1b0;\n                        fcn.0040a100(uVar1, iVar3);\n                        in_RAX = *(*0x20 + 8);\ncode_r0x0042c1b6:\n                        *(in_RAX + 0x20) = 0;\n                        *(in_RAX + 0x10) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x42c1dd;\n                    fcn.004330a0();\n                }\n                *(*0x20 + -0x30) = 0x42c1ee;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x10) = uVar6;\n            *(*0x20 + -0x18) = piVar5;\n            *(*0x20 + -0x30) = 0x42c1fd;\n            fcn.00434840();\n            *(*0x20 + -0x30) = 0x42c20e;\n            fcn.00435140();\n            *(*0x20 + -0x30) = 0x42c218;\n            fcn.00434e40();\n            *(*0x20 + -0x30) = 0x42c229;\n            fcn.00435140();\n            *(*0x20 + -0x30) = 0x42c235;\n            fcn.00434e40();\n            *(*0x20 + -0x30) = 0x42c23a;\n            fcn.00434aa0();\n            *(*0x20 + -0x30) = 0x42c23f;\n            fcn.004348c0();\n            *(*0x20 + -0x30) = 0x42c250;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42c25b;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 942
    },
    "0042c280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.0042c280(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    do {\n        uVar1 = *in_RAX;\n        if (uVar1 == 0) {\n            puVar3 = NULL;\n            break;\n        }\n        puVar3 = (uVar1 >> 0x13) << 3;\n        LOCK();\n        uVar2 = *in_RAX;\n        *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ *puVar3);\n    } while (uVar1 != uVar2);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040c7a0(0x5d58f8);\n        return puVar3;\n    }\n    return puVar3;\n}\n",
        "token_count": 265
    },
    "0042c320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c320(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            iVar1 = *in_RAX;\n            *in_RAX = *in_RAX + 1;\n            if (iVar1 + 1 != 0) {\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1 + 1;\n            *(*0x20 + -0x28) = 0x42c35e;\n            fcn.00434840();\n            *(*0x20 + -0x28) = 0x42c36f;\n            fcn.00435140();\n            *(*0x20 + -0x28) = 0x42c37d;\n            fcn.00434e40();\n            *(*0x20 + -0x28) = 0x42c38e;\n            fcn.00435140();\n            *(*0x20 + -0x28) = 0x42c39a;\n            fcn.00434e40();\n            *(*0x20 + -0x28) = 0x42c39f;\n            fcn.00434aa0();\n            *(*0x20 + -0x28) = 0x42c3a5;\n            fcn.004348c0();\n            *(*0x20 + -0x28) = 0x42c3b6;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x42c3c5;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 517
    },
    "0042c400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c400(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (in_RAX == NULL) {\n        return;\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + unaff_RBX;\n    if (((unaff_RBX < 1) || (unaff_RBX <= unaff_RBX + iVar1)) &&\n       ((-1 < unaff_RBX || (unaff_RBX <= iVar1 + unaff_RBX * 2)))) {\n        return;\n    }\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434e40();\n    fcn.00435140();\n    fcn.00434f40();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.004330a0();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 237
    },
    "0042c5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c5a0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t unaff_R14;\n    \n    iVar3 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar3 == 0) {\n        fcn.0040a580();\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + 0x2274;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        if ((iVar2 + 1U & 1) != 0) {\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00434e40();\n            fcn.00434aa0();\n            fcn.004348c0();\n            fcn.004330a0();\n            pcVar4 = swi(3);\n            (*pcVar4)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "0042cb00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cb00(void)\n\n{\n    int64_t in_RAX;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    *unaff_RBX = *(in_RAX + 8);\n    *(in_RAX + 8) = unaff_RBX;\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 137
    },
    "0042cd40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cd40(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_CreateIoCompletionPort;\n            *(*0x20 + -0x38) = 0xffffffffffffffff;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0xffffffff;\n            *(*0x20 + -0x48) = 0x42cd85;\n            fcn.00430560();\n            *0x564578 = *(*0x20 + -0x18);\n            if (*0x564578 != 0) {\n                return;\n            }\n            *(*0x20 + -0x48) = 0x42cdb9;\n            fcn.0045dec0();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42cdda;\n            fcn.00434840();\n            *(*0x20 + -0x48) = 0x42cdeb;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x42cdf5;\n            fcn.00434e40();\n            *(*0x20 + -0x48) = 0x42ce06;\n            fcn.00435140();\n            *(*0x20 + -0x48) = 0x42ce0b;\n            fcn.004348c0();\n            *(*0x20 + -0x48) = 0x42ce1c;\n            fcn.004330a0();\n        }\n        *(puVar1 + -8) = 0x42ce25;\n        fcn.0045a360();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 659
    },
    "0042d3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d3a0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(unaff_RBX + 0x28);\n            if ((uVar1 == 0x72) || (uVar1 == 0x77)) {\n                *(unaff_RBX + 0x2c) = arg1;\n                *(unaff_RBX + 0x30) = unaff_EDI;\n                *(*0x20 + -0x30) = 0x42d3db;\n                fcn.0042cb80(uVar1);\n                return;\n            }\n            *(*0x20 + -0xc) = uVar1;\n            *(*0x20 + -0x30) = 0x42d3ee;\n            fcn.00434840();\n            *(*0x20 + -0x30) = 0x42d3ff;\n            fcn.00435140();\n            *(*0x20 + -0x30) = 0x42d40b;\n            fcn.00434f40();\n            *(*0x20 + -0x30) = 0x42d410;\n            fcn.00434aa0();\n            *(*0x20 + -0x30) = 0x42d415;\n            fcn.004348c0();\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x30) = 0x42d426;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x1c) = unaff_EDI;\n        *(puVar2 + -8) = 0x42d43e;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1._0_4_ = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x1c);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 651
    },
    "0042d460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042d460(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 - 1 < arg1) {\n                uVar1 = *((arg1 - 1) + unaff_RBX);\n                arg1 = uVar1;\n                if (uVar1 == 0) {\n                    *(*0x20 + -0x28) = _sym.imp.kernel32.dll_GetProcAddress;\n                    *(*0x20 + -0x20) = in_RAX;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x30) = 0x42d4a9;\n                    fcn.00430460();\n                    return *(*0x20 + -0x10);\n                }\n                unaff_RBX = 5;\n                *(*0x20 + -0x30) = 0x42d4dd;\n                fcn.004330a0();\n            }\n            *(*0x20 + -0x30) = 0x42d4e5;\n            in_RAX = fcn.0045ca40(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42d4ff;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 572
    },
    "0042e240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e240(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00430560();\n    if (iStack16 != 0) {\n        *0x5d3b2a = 1;\n        fcn.004303e0();\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0042e760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042e760(void)\n\n{\n    fcn.004303e0();\n    return -*0x5d3d00 * *0x5d3cf8;\n}\n",
        "token_count": 44
    },
    "0042e7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042e7e0(void)\n\n{\n    fcn.004303e0();\n    fcn.004303e0();\n    return 0x195726909;\n}\n",
        "token_count": 42
    },
    "0042ebc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ebc0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != 0) {\n        fcn.00430460();\n        fcn.00442c60(arg1);\n        return;\n    }\n    fcn.0045ca40(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 100
    },
    "0042eec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042eec0(void)\n\n{\n    fcn.0040a360();\n    *0x5d3b4c = 1;\n    fcn.004303e0();\n    return;\n}\n",
        "token_count": 48
    },
    "0042fba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042fba0(void)\n\n{\n    int64_t iStack32;\n    \n    fcn.00430660();\n    if (iStack32 != 0) {\n        fcn.004303e0();\n        return;\n    }\n    if (*0x5d3b4c != 0) goto code_r0x0042fcdd;\n    do {\n        fcn.0045dec0();\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434f40();\n        fcn.00435140();\n        fcn.00434e40();\n        fcn.00435140();\n        fcn.004348c0();\n        fcn.004330a0();\ncode_r0x0042fcdd:\n        fcn.0040a360();\n        fcn.0040a360();\n    } while( true );\n}\n",
        "token_count": 194
    },
    "004301a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004301a0(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*(in_RAX + 0x328) != 0) {\n        fcn.004303e0();\n        *(in_RAX + 0x328) = 0;\n    }\n    if (*(in_RAX + 0x318) != 0) {\n        fcn.004303e0();\n        *(in_RAX + 0x318) = 0;\n    }\n    if (*(in_RAX + 800) != 0) {\n        fcn.004303e0();\n        *(in_RAX + 800) = 0;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00430380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430380(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x280) = 0;\n    *(iVar1 + 0x288) = auStackX8;\n    fcn.004302a0();\n    return;\n}\n",
        "token_count": 95
    },
    "004303e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004303e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [8];\n    ulong uStackX24;\n    \n    uStackX24 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 1;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.004302a0();\n    return;\n}\n",
        "token_count": 119
    },
    "00430460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430460(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [16];\n    ulong uStackX32;\n    \n    uStackX32 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 2;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.004302a0();\n    return;\n}\n",
        "token_count": 118
    },
    "004304e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004304e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 3;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.004302a0();\n    return;\n}\n",
        "token_count": 127
    },
    "00430560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430560(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 4;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.004302a0();\n    return;\n}\n",
        "token_count": 126
    },
    "004305e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004305e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000038;\n    \n    uStack0000000000000038 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 5;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.004302a0();\n    return;\n}\n",
        "token_count": 127
    },
    "00430660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430660(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 6;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.004302a0();\n    return;\n}\n",
        "token_count": 126
    },
    "004306e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004306e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000048;\n    \n    uStack0000000000000048 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 7;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.004302a0();\n    return;\n}\n",
        "token_count": 127
    },
    "00430760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430760(void)\n\n{\n    fcn.0045a220();\n    return;\n}\n",
        "token_count": 24
    },
    "00431780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431780(void)\n\n{\n    code *pcVar1;\n    ushort *in_RAX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    \n    if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) {\n        *in_RAX = 0;\n        *(in_RAX + 1) = 0;\n        *(in_RAX + 4) = auStackX8;\n        *(in_RAX + 8) = in_stack_00000000;\n        *(in_RAX + 0x1c) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        *(in_RAX + 0x10) = 0;\n        *(in_RAX + 0x18) = 0;\n        *(in_RAX + 0x14) = *(unaff_R14 + 0x28);\n        *(unaff_R14 + 0x28) = in_RAX;\n        fcn.0045c540();\n        return;\n    }\n    fcn.004330a0();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 328
    },
    "00431ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431ee0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x431efe;\n            iVar1 = fcn.00433060();\n            if (iVar1 == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x431f25;\n            fcn.004330a0();\n        }\n        *(puVar2 + -8) = 0x431f2b;\n        fcn.0045a360();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 255
    },
    "004321a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004321a0(int64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0045a220();\n    return;\n}\n",
        "token_count": 86
    },
    "00434840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434840(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + 1;\n    cVar1 = *(iVar2 + 0xe7);\n    *(iVar2 + 0xe7) = cVar1 + '\\x01';\n    if (cVar1 == '\\0') {\n        fcn.0040a360();\n    }\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 203
    },
    "00434a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434a60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00435140();\n    return;\n}\n",
        "token_count": 81
    },
    "00434aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434aa0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00435140();\n    return;\n}\n",
        "token_count": 81
    },
    "00434ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434ae0(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (in_AL == '\\0') {\n        fcn.00435140();\n    }\n    else {\n        fcn.00435140();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00434da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434da0(ulong param_1, ulong param_2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434b40(param_1, param_2);\n    fcn.00434b40(param_1, param_2);\n    fcn.00435140();\n    fcn.004348c0();\n    return;\n}\n",
        "token_count": 147
    },
    "00434f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434f40(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (in_RAX < 0) {\n        fcn.00435140();\n    }\n    fcn.00434e40();\n    return;\n}\n",
        "token_count": 111
    },
    "00434fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434fa0(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = in_XMM15;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x434fef;\n            uVar2 = fcn.0045cceb();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (iVar3 = 99;\n                (0 < iVar3 &&\n                ((*(*0x20 + iVar3 + -0x6c) = *((uVar2 & 0xf) + 0x4ca870),  0xf < uVar2 ||\n                 (iVar1 = *0x5d3c98 + iVar3 + -100,  iVar1 != 0 && SBORROW8(*0x5d3c98, -(iVar3 + -100)) == iVar1 < 0))))\n                ; iVar3 = iVar3 + -1) {\n                uVar2 = uVar2 >> 4;\n            }\n            if (iVar3 - 1U < 100) {\n                *(*0x20 + iVar3 + -0x6d) = 0x78;\n                if (iVar3 - 2U < 100) {\n                    *(*0x20 + iVar3 + -0x6e) = 0x30;\n                    *(*0x20 + -0x90) = 0x435078;\n                    fcn.00434920(-(iVar3 + -0x66));\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x435092;\n                fcn.0045ca40(100);\n            }\n            *(*0x20 + -0x90) = 0x43509c;\n            in_RAX = fcn.0045ca40(100);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4350a7;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 629
    },
    "004350c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004350c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00434fa0();\n    return;\n}\n",
        "token_count": 82
    },
    "00435100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435100(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00434fa0();\n    return;\n}\n",
        "token_count": 81
    },
    "004351c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004351c0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434f40();\n    fcn.00435140();\n    fcn.00434f40();\n    fcn.00435140();\n    fcn.004348c0();\n    fcn.00434fa0();\n    return;\n}\n",
        "token_count": 144
    },
    "004352a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004352a0(code **arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint *puVar2;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00434840();\n    *0x5d3c98 = 0x10;\n    for (uVar1 = 0; uVar1 + in_RAX < unaff_RBX; uVar1 = uVar1 + 8) {\n        if ((uVar1 & 0xf) == 0) {\n            if (uVar1 != 0) {\n                fcn.00434840();\n                fcn.00434aa0();\n                fcn.004348c0();\n            }\n            fcn.00434840();\n            fcn.00434fa0();\n            fcn.00435140();\n            fcn.004348c0();\n        }\n        if (arg1 != NULL) {\n            (**arg1)(*arg1, arg1, unaff_RBX);\n        }\n        fcn.00434920(1);\n        fcn.00434840();\n        fcn.00434fa0();\n        fcn.004348c0();\n        fcn.00434840();\n        fcn.00434a60();\n        fcn.004348c0();\n        puVar2 = fcn.0044b1a0();\n        if (puVar2 != NULL) {\n            fcn.0044b920();\n            uVar3 = fcn.0044acc0(*puVar2);\n            fcn.00434840();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00435140();\n            fcn.00434fa0(uVar3);\n            fcn.00435140();\n            fcn.004348c0();\n        }\n    }\n    *0x5d3c98 = 0;\n    fcn.00434840();\n    fcn.00434aa0();\n    fcn.004348c0();\n    fcn.004348c0();\n    return;\n}\n",
        "token_count": 516
    },
    "00435b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435b20(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0045a220();\n    return;\n}\n",
        "token_count": 82
    },
    "00436500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436500(void)\n\n{\n    int64_t iVar1;\n    code **in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    iVar1 = *0x57fc78;\n    for (iVar2 = 0; iVar2 < iVar1; iVar2 = iVar2 + 1) {\n        (**in_RAX)();\n    }\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 155
    },
    "004365c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004365c0(void)\n\n{\n    uint64_t uVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x5d3be8,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    for (uVar2 = 0; uVar2 < uVar1; uVar2 = uVar2 + 1) {\n        (**in_RAX)(*in_RAX, in_RAX);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00436660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00436660(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00401080();\n    *0x5d3b36 = *0x5d4347;\n    *0x5d3b37 = *0x5d434a;\n    *0x5d3b38 = *0x5d434e;\n    return;\n}\n",
        "token_count": 134
    },
    "004369a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004369a0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5806d0 - *0x5806e0 <= *0x5806d8) {\n                return;\n            }\n            *(*0x20 + -0xc) = *0x5806d8;\n            *(*0x20 + -0x28) = 0x4369e5;\n            fcn.00434840();\n            *(*0x20 + -0x28) = 0x4369f6;\n            fcn.00435140();\n            *(*0x20 + -0x28) = 0x436a05;\n            fcn.00434f40();\n            *(*0x20 + -0x28) = 0x436a16;\n            fcn.00435140();\n            *(*0x20 + -0x28) = 0x436a1b;\n            fcn.004348c0();\n            *(*0x20 + -0x28) = 0x436a2c;\n            fcn.004330a0();\n        }\n        *(puVar1 + -8) = 0x436a32;\n        fcn.0045a360();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 395
    },
    "00436a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00436a40(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5806d0 <= *0x5806d0 + 1) {\n                *(*0x20 + -0x10) = *0x5806d0;\n                *(*0x20 + -0x28) = 0x436a76;\n                *0x5806d0 = *0x5806d0 + 1;\n                fcn.004369a0();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x28) = 0x436a96;\n            fcn.004330a0();\n        }\n        *(puVar1 + -8) = 0x436a9c;\n        fcn.0045a360();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 308
    },
    "00437bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437bc0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004430a0(0);\n    fcn.00437960();\n    return;\n}\n",
        "token_count": 92
    },
    "00437c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437c40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00437ae0();\n    fcn.004433e0(0);\n    return;\n}\n",
        "token_count": 93
    },
    "00438180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438180(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(unaff_R14 + 0x48) = unaff_R14;\n                *(unaff_R14 + 0x40) = **0x20;\n                *(unaff_R14 + 0x38) = *0x20 + 8;\n                *(*0x20 + -0x28) = 0x4381c9;\n                fcn.0045a140();\n                *(*0x20 + -0x28) = 0x4381e5;\n                fcn.0042fd40();\n                iVar3 = *(*0x20 + -0x10);\n                if (*(iVar3 + 0x30) == 0x5802c0) {\n                    *(*0x20 + -0x28) = 0x4381fc;\n                    fcn.00438280();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                ppcVar1 = *(*(iVar3 + 0x30) + 0x88);\n                if (ppcVar1 != NULL) {\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x28) = 0x43821d;\n                    (*pcVar2)();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                if (*(iVar3 + 0x30) != 0x5802c0) {\n                    *(*0x20 + -0x28) = 0x43823e;\n                    fcn.0043f620();\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                }\n                *(*0x20 + -0x28) = 0x438257;\n                fcn.0043b8a0();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x438272;\n            fcn.004330a0();\n        }\n        *(puVar4 + -8) = 0x438278;\n        fcn.0045a360();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 652
    },
    "004382c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004382c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    fcn.0040a6e0();\n    *(*(unaff_R14 + 0x30) + 0x118) = 0;\n    return;\n}\n",
        "token_count": 60
    },
    "00438dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00438dc0(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x5d3b54,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    *0x5d3b54 = 0;\n    if (uVar1 == 0) {\n        uVar2 = fcn.00439080();\n        uVar3 = *0x5d3c38;\n        *0x5d3c38 = uVar2;\n        if (uVar2 == 0) {\n            uVar3 = fcn.00438e40();\n        }\n    }\n    else {\n        for (uVar3 = 0; uVar3 < uVar1; uVar3 = uVar3 + 1) {\n            fcn.00438e40();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 255
    },
    "00439d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00439d37)\n\nvoid fcn.00439d00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x5806f8 != 0) {\n        if (*0x5806fc != 0) {\n            return;\n        }\n        LOCK();\n        *0x5806fc = 1;\n        fcn.00439760();\n        return;\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0043b4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043b4a0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x5806a8 == 0) {\n        if ((*0x5806b0 == 0) || (in_RAX < *0x5806b0)) {\n            fcn.0042cf00();\n        }\n    }\n    else {\n        fcn.00439d00();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0043d000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0043d000(void)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    *(unaff_R14 + 0xb7) = 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14[6] + 0x26c) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    fcn.0043cb20();\n    uVar2 = unaff_R14[7];\n    unaff_R14[0xe] = uVar2;\n    unaff_R14[0xf] = unaff_R14[8];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.0045a220();\n    }\n    fcn.00437400(3);\n    uVar2 = unaff_R14[0xe];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.0045a220();\n    }\n    fcn.0045a220();\n    fcn.0043cb20();\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 426
    },
    "0043d700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043d700(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    iVar2 = fcn.00441400();\n    iVar1 = *0x580790;\n    if ((iVar2 != 0) && (*0x580790 != 0)) {\n        *0x580790 = 0;\n        fcn.0040a660(iVar1);\n    }\n    fcn.0040a580();\n    if (iVar2 != 0) {\n        fcn.0043f620();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 198
    },
    "0043d920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043d920(void)\n\n{\n    int32_t in_EAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    piVar1 = fcn.0040c440();\n    if (-1 < in_EAX) {\n        uVar2 = 0;\n        while ((1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) < in_EAX + 0x1000) {\n            uVar2 = uVar2 + 1;\n        }\n        fcn.0045a220();\n        piVar1[2] = *piVar1 + 0x13a0;\n        piVar1[3] = -1;\n        **piVar1 = 0;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "0043f900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043f900(void)\n\n{\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    *0x5806cc = *0x5806cc + in_EAX;\n    if (0 < in_EAX) {\n        fcn.0043f960();\n    }\n    fcn.0040a580();\n    return;\n}\n",
        "token_count": 139
    },
    "00441040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441040(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    *(in_RAX + 0x128) = *0x5806c0;\n    *0x5806c8 = *0x5806c8 + 1;\n    *0x5806c0 = in_RAX;\n    fcn.0043f960();\n    return;\n}\n",
        "token_count": 142
    },
    "00441520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00441520(char param_1)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar4 = unaff_RBX;\n    if (param_1 != '\\0') {\n        do {\n            uVar4 = *(in_RAX + 0x998);\n            LOCK();\n            puVar1 = in_RAX + 0x998;\n            bVar5 = uVar4 == *puVar1;\n            *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ unaff_RBX);\n        } while (!bVar5);\n        if (uVar4 == 0) {\n            return uVar4 ^ !bVar5 * (uVar4 ^ *puVar1);\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 0x194);\n        if (uVar2 - *(in_RAX + 400) < 0x100) {\n            *(in_RAX + 0x198 + (uVar2 & 0xff) * 8) = uVar4;\n            *(in_RAX + 0x194) = uVar2 + 1;\n            return in_RAX;\n        }\n        uVar3 = fcn.00441620(*(in_RAX + 400));\n    } while (uVar3 == '\\0');\n    return uVar3;\n}\n",
        "token_count": 401
    },
    "00442940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442940(uint64_t param_1, uint64_t param_2)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x5d3fe0 = 1;\n            *0x5d4000 = 1;\n            iVar5 = 7;\n            *(*0x20 + -0x88) = 0x44297d;\n            uVar3 = fcn.00406f00();\n            while( true ) {\n                if (iVar5 == 0) {\n                    *0x5d4020 = (*0x5d4024 | *0x5d4028 | *0x5d402c) != 0;\n                    *(*0x20 + -0x88) = 0x442b3f;\n                    fcn.00406f00();\n                    *(*0x20 + -0x88) = 0x442b45;\n                    fcn.00457d60();\n                    *0x5d3b98 = *0x564468;\n                    return;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0x80) = uVar3;\n                *(*0x20 + -0x78) = iVar5;\n                *(*0x20 + -0x70) = 0x2c;\n                *(*0x20 + -0x88) = 0x4429af;\n                fcn.00402320(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (param_1 < 0) {\n                    param_2 = *(*0x20 + -0x28);\n                    iVar7 = 0;\n                    iVar5 = 0;\n                    param_1 = *(*0x20 + -0x60);\n                }\n                else {\n                    param_2 = *(*0x20 + -0x60);\n                    if (param_2 < param_1) goto code_r0x00442c3a;\n                    if (param_2 < param_1 + 1) goto code_r0x00442c32;\n                    iVar7 = (param_2 - param_1) + -1;\n                    param_2 = *(*0x20 + -0x28);\n                    iVar5 = (param_1 + 1 & -iVar7 >> 0x3f) + param_2;\n                }\n                *(*0x20 + -0x60) = iVar7;\n                *(*0x20 + -0x10) = iVar5;\n                *(*0x20 + -0x50) = param_1;\n                *(*0x20 + -0x80) = param_2;\n                *(*0x20 + -0x78) = param_1;\n                *(*0x20 + -0x70) = 0x3d;\n                *(*0x20 + -0x88) = 0x442a35;\n                fcn.00402320(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (-1 < param_1) break;\ncode_r0x0044297f:\n                iVar5 = *(*0x20 + -0x60);\n                uVar3 = *(*0x20 + -0x10);\n            }\n            uVar4 = *(*0x20 + -0x50);\n            param_2 = uVar4;\n            if (param_1 <= uVar4) {\n                if (param_1 + 1 <= uVar4) {\n                    param_2 = (uVar4 - param_1) - 1;\n                    piVar1 = *(*0x20 + -0x28);\n                    if ((((param_1 == 0xe) && (*piVar1 == 0x69666f72706d656d)) && (*(piVar1 + 1) == 0x6172656c)) &&\n                       (*(piVar1 + 0xc) == 0x6574)) {\n                        *(*0x20 + -0x88) = 0x442ac5;\n                        uVar4 = param_2;\n                        uVar3 = fcn.004494e0();\n                        cVar2 = param_2;\n                        param_2 = uVar4;\n                        if (cVar2 != '\\0') {\n                            *0x5d3bd8 = uVar3;\n                        }\n                    }\n                    else if (*0x576d28 != 0) {\n                        *(*0x20 + -0x58) = param_1;\n                        *(*0x20 + -0x38) = param_2;\n                        *(*0x20 + -0x30) = (param_1 + 1 & -param_2 >> 0x3f) + piVar1;\n                        *(*0x20 + -0x40) = *0x576d28;\n                        iVar8 = 0;\n                        iVar5 = *0x576d28;\n                        iVar7 = *0x576d20;\n                        while( true ) {\n                            uVar4 = *(iVar7 + 8);\n                            uVar3 = *(iVar7 + 0x10);\n                            if (uVar4 == param_1) {\n                                *(*0x20 + -0x48) = iVar8;\n                                *(*0x20 + -0x18) = iVar7;\n                                *(*0x20 + -0x20) = uVar3;\n                                *(*0x20 + -0x88) = 0x442b8d;\n                                cVar2 = fcn.004021c0(uVar4, param_2);\n                                if (cVar2 == '\\0') {\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                                else {\n                                    uVar3 = *(*0x20 + -0x38);\n                                    *(*0x20 + -0x88) = 0x442bd1;\n                                    iVar5 = fcn.004494e0();\n                                    if ((iVar5 == iVar5) && (uVar3 != '\\0')) {\n                                        **(*0x20 + -0x20) = iVar5;\n                                    }\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                            }\n                            iVar8 = iVar8 + 1;\n                            if (iVar5 <= iVar8) break;\n                            iVar7 = iVar7 + 0x18;\n                        }\n                    }\n                    goto code_r0x0044297f;\n                }\n                *(*0x20 + -0x88) = 0x442c2d;\n                fcn.0045cb00(uVar4);\n                param_1 = uVar4;\n            }\n            *(*0x20 + -0x88) = 0x442c32;\n            fcn.0045ca80(param_1, param_2);\ncode_r0x00442c32:\n            param_1 = param_2;\n            *(*0x20 + -0x88) = 0x442c3a;\n            param_2 = param_1;\n            fcn.0045cb00(param_1);\ncode_r0x00442c3a:\n            *(*0x20 + -0x88) = 0x442c3f;\n            fcn.0045ca80(param_1, param_2);\n        }\n        *(puVar6 + -8) = 0x442c45;\n        fcn.0045a360();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1961
    },
    "00442c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442c60(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RDI < 0) {\n                unaff_RDI = 0;\n            }\n            while( true ) {\n                if (unaff_RBX <= unaff_RDI) {\n                    return;\n                }\n                *(*0x20 + -0x10) = unaff_RDI;\n                *(*0x20 + -0x30) = 0x442ca5;\n                fcn.0045e320();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar1 = *(*0x20 + -0x10);\n                iVar4 = iVar1;\n                if (0x10 < iVar1) {\n                    iVar4 = 0x10;\n                }\n                uVar2 = *(*0x20 + -0x28);\n                unaff_RDI = *(*0x20 + 0x10);\n                if (unaff_RDI <= iVar1 - iVar4) break;\n                *(*0x20 + -0x30) = 0x442cf0;\n                uVar3 = fcn.0045c460(iVar4);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + 8);\n                iVar4 = 0;\n                for (unaff_RDI = *(*0x20 + -0x10); (iVar4 < 8 && (unaff_RDI < unaff_RBX)); unaff_RDI = unaff_RDI + 1) {\n                    if (unaff_RBX <= unaff_RDI) {\n                        *(*0x20 + -0x30) = 0x442d45;\n                        fcn.0045ca40(unaff_RBX);\n                        unaff_RBX = uVar2;\n                        goto code_r0x00442d45;\n                    }\n                    *(iVar1 + unaff_RDI) = uVar3;\n                    iVar4 = iVar4 + 1;\n                    uVar3 = uVar3 >> 8;\n                }\n            }\ncode_r0x00442d45:\n            *(*0x20 + -0x30) = 0x442d50;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045ca40(unaff_RDI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x442d6a;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 881
    },
    "00442de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442de0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    LOCK();\n    piVar1 = in_RAX + 0x28;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + 1;\n    if (iVar2 + 1 < 0) {\n        fcn.0045a220();\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00443f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443f60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004303e0();\n    fcn.004303e0();\n    return;\n}\n",
        "token_count": 91
    },
    "00444000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444000(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00430460();\n    if (*0x57ef08 == 0) {\n        fcn.004303e0();\n    }\n    else {\n        fcn.00430460();\n        fcn.00430460();\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00444b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444b80(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar auVar2 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = *in_RAX;\n    auVar2 = ZEXT816(uVar1) * ZEXT816(arg1);\n    if ((((SUB168(auVar2 >> 0x40, 0) == 0) && (SUB168(auVar2, 0) < 0x1000000000001)) && (-1 < unaff_RBX)) &&\n       (unaff_RBX <= arg1)) {\n        fcn.0040ba40(1);\n        return;\n    }\n    do {\n        auVar2 = ZEXT816(uVar1) * ZEXT816(unaff_RBX);\n        uVar3 = SUB168(auVar2, 0);\n        if (SUB168(auVar2 >> 0x40, 0) == 0) goto code_r0x00444bf8;\n        do {\n            unaff_RBX = 0x4f9e98;\n            uVar3 = fcn.00432920();\ncode_r0x00444bf8:\n        } while ((0x1000000000000 < uVar3) || (unaff_RBX < 0));\n        unaff_RBX = 0x4f9d68;\n        fcn.00432920();\n    } while( true );\n}\n",
        "token_count": 391
    },
    "00446540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446540(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t *unaff_RBX;\n    \n    uVar1 = *(in_RAX + 0x28);\n    if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n        *(in_RAX + 0x28) = uVar1 + unaff_RBX[2];\n    }\n    for (iVar2 = *(in_RAX + 0x28); iVar2 != 0; iVar2 = *(iVar2 + 0x28)) {\n        uVar1 = *(iVar2 + 0x18);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x18) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 8);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 8) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x20);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x20) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x28);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x28) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x38);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x38) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x30);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x30) = uVar1 + unaff_RBX[2];\n        }\n    }\n    return;\n}\n",
        "token_count": 693
    },
    "00446640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00446640(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar3 = *(in_RAX + 0x148);\n    if (iVar3 != 0) {\n        iVar4 = 0;\n        for (; iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            if (iVar4 != *(iVar3 + 0x50)) {\n                fcn.0040a360();\n            }\n            iVar4 = *(iVar3 + 0x50);\n        }\n        for (iVar3 = *(in_RAX + 0x148); iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            uVar1 = *(iVar3 + 0x18);\n            if ((*arg1 < uVar1 || *arg1 == uVar1) && (uVar1 <= arg1[1] && arg1[1] != uVar1)) {\n                *(iVar3 + 0x18) = uVar1 + arg1[2];\n            }\n        }\n        if (arg1[0x23] == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = arg1[0x23] - (arg1[1] - unaff_RBX);\n            fcn.0045d380(iVar3);\n        }\n        iVar2 = 0;\n        for (iVar4 = *(in_RAX + 0x148); iVar4 != 0; iVar4 = *(iVar4 + 0x40)) {\n            if (iVar2 != *(iVar4 + 0x50)) {\n                fcn.0040a580();\n            }\n            iVar2 = *(iVar4 + 0x50);\n        }\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 492
    },
    "004486c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004486c0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00448380(3);\n    return;\n}\n",
        "token_count": 124
    },
    "004487a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004487a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00448380(4);\n    return;\n}\n",
        "token_count": 124
    },
    "00448ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00448ac0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == 0) || (0x20 < unaff_RBX)) {\n                *(*0x20 + -0x20) = 0x448afc;\n                iVar1 = fcn.004490c0();\n                return iVar1;\n            }\n            if (unaff_RBX < 0x21) {\n                if (unaff_RBX != 0) {\n                    return in_RAX;\n                }\n                *(*0x20 + -0x20) = 0x448b25;\n                fcn.0045ca40(0);\n            }\n            *(*0x20 + -0x20) = 0x448b32;\n            in_RAX = fcn.0045ca80(unaff_RBX, 0x20);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x448b45;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 427
    },
    "00448b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448b60(uchar (*arg1) [16])\n\n{\n    uchar (*in_RAX) [16];\n    uchar (*arg1_00) [16];\n    uchar (*unaff_RBX) [16];\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((in_RAX == NULL) || (0x20 < arg1)) {\n        in_RAX = fcn.00449160();\n        arg1_00 = unaff_RBX;\n    }\n    else {\n        *in_RAX = in_XMM15;\n        in_RAX[1] = in_XMM15;\n        arg1_00 = arg1;\n    }\n    if (arg1 < arg1_00) {\n        arg1_00 = arg1;\n    }\n    if (unaff_RBX != in_RAX) {\n        fcn.0045d380(arg1_00);\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "00448e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00448e00(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x54) = 0;\n            iVar1 = 0;\n            iVar4 = 0;\n            while (*(*0x20 + -0x48) = iVar1,  iVar4 < arg1) {\n                *(*0x20 + -0x28) = iVar4;\n                unaff_RDI = *(unaff_RBX + iVar4 * 4);\n                *(*0x20 + -0x80) = 0x448e55;\n                iVar1 = fcn.00456ca0(4);\n                iVar1 = *(*0x20 + -0x48) + iVar1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar4 = *(*0x20 + -0x28) + 1;\n            }\n            unaff_RBX = iVar1 + 3;\n            *(*0x20 + -0x80) = 0x448e8e;\n            uVar2 = fcn.00448ac0();\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x38) = unaff_RDI;\n            *(*0x20 + -0x30) = iVar1;\n            iVar5 = *(*0x20 + 0x18);\n            iVar7 = *(*0x20 + -0x48);\n            iVar4 = 0;\n            arg1_00 = 0;\n            while ((iVar4 < iVar5 && (arg1_00 < iVar7))) {\n                if (unaff_RDI < arg1_00) goto code_r0x00448f88;\n                *(*0x20 + -0x28) = iVar4;\n                *(*0x20 + -0x50) = arg1_00;\n                *(*0x20 + -0x80) = 0x448ef6;\n                iVar3 = fcn.00456ca0(iVar1 - arg1_00);\n                iVar4 = *(*0x20 + -0x28) + 1;\n                iVar5 = *(*0x20 + 0x18);\n                uVar2 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + -0x40);\n                iVar1 = *(*0x20 + -0x30);\n                unaff_RDI = *(*0x20 + -0x38);\n                iVar7 = *(*0x20 + -0x48);\n                arg1_00 = *(*0x20 + -0x50) + iVar3;\n            }\n            if (arg1_00 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x448f88;\n            fcn.0045ca80(arg1_00, unaff_RBX);\ncode_r0x00448f88:\n            *(*0x20 + -0x80) = 0x448f93;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045cb00(unaff_RDI);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x448fad;\n        fcn.0045a360();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1134
    },
    "00448fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00448fe0(void)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        iVar2 = unaff_RDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x40) = 0x449025;\n                in_RAX = fcn.004490c0();\n                iVar2 = *(*0x20 + 0x10);\n                iVar1 = unaff_RBX;\n                unaff_RBX = unaff_RDI;\n            }\n            else {\n                unaff_RSI = 4;\n                iVar1 = 4;\n                iVar2 = unaff_RBX;\n                unaff_RBX = 4;\n            }\n            *(*0x20 + -0x18) = iVar1;\n            *(*0x20 + -0x10) = in_RAX;\n            if (iVar2 != iVar2) {\n                iVar2 = 0xfffd;\n            }\n            *(*0x20 + -0x40) = 0x44905e;\n            arg1 = fcn.00456ca0(unaff_RSI);\n            if (arg1 <= *(*0x20 + -0x18)) {\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x40) = 0x449085;\n            in_RAX = fcn.0045ca80(arg1, *(*0x20 + -0x18));\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x449095;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n        unaff_RDI = iVar2;\n    } while( true );\n}\n",
        "token_count": 601
    },
    "004495c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004495c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg2;\n    int64_t iStack56;\n    \n    if (in_RAX != 0) {\n        arg2 = -((in_RAX & 0xfff) - 0x1000);\n        iVar1 = 0;\n        while( true ) {\n            fcn.00402320(in_RAX, arg2);\n            if (iStack56 != -1) break;\n            in_RAX = in_RAX + arg2;\n            iVar1 = iVar1 + arg2;\n            arg2 = 0x1000;\n        }\n        return iStack56 + iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 167
    },
    "00449680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00449680(void)\n\n{\n    uint16_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg1;\n    uint64_t arg1_00;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t arg1_01;\n    ulong arg1_02;\n    int64_t unaff_R14;\n    \ncode_r0x00449680:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x30) = 0;\n        iVar3 = 0;\n        uVar4 = 0;\n        while (arg1 = 0x3fffffffffff,  uVar4 < 0x3fffffffffff) {\n            *(*0x20 + -0x48) = iVar3;\n            uVar1 = *(in_RAX + uVar4 * 2);\n            arg1_00 = uVar1;\n            if (uVar1 == 0) {\n                *(*0x20 + -0x80) = 0x44970e;\n                uVar2 = fcn.004490c0();\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0x58) = unaff_RBX;\n                *(*0x20 + -0x10) = uVar4;\n                *(*0x20 + -0x28) = arg1_00;\n                *(*0x20 + -0x20) = 0x3fffffffffff;\n                iVar3 = *(*0x20 + 8);\n                iVar6 = *(*0x20 + -0x48);\n                uVar7 = 0;\n                arg1_01 = 0;\n                goto code_r0x004497b3;\n            }\n            *(*0x20 + -0x38) = uVar4;\n            unaff_RBX = 8;\n            *(*0x20 + -0x80) = 0x4496c6;\n            iVar3 = fcn.00456ca0(8);\n            iVar3 = *(*0x20 + -0x48) + iVar3;\n            in_RAX = *(*0x20 + 8);\n            uVar4 = *(*0x20 + -0x38) + 1;\n        }\n        goto code_r0x0044982a;\n    }\n    goto code_r0x00449836;\ncode_r0x004497b3:\n    arg1_02 = 0x3fffffffffff;\n    if (0x3ffffffffffe < uVar7) goto code_r0x0044981f;\n    if ((*(iVar3 + uVar7 * 2) == 0) || (iVar6 <= arg1_01)) {\n        if (arg1_01 < arg1_00) {\n            *(uVar4 + arg1_01) = 0;\n            if (arg1_01 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x449809;\n            fcn.0045ca80(arg1_01, unaff_RBX);\n        }\n        *(*0x20 + -0x80) = 0x449814;\n        fcn.0045ca40(arg1_00);\ncode_r0x00449814:\n        *(*0x20 + -0x80) = 0x44981f;\n        fcn.0045cb00(arg1_00);\n        goto code_r0x0044981f;\n    }\n    if (arg1_00 < arg1_01) goto code_r0x00449814;\n    *(*0x20 + -0x40) = uVar7;\n    *(*0x20 + -0x50) = arg1_01;\n    *(*0x20 + -0x80) = 0x44976b;\n    iVar3 = fcn.00456ca0(arg1 - arg1_01);\n    uVar7 = *(*0x20 + -0x40) + 1;\n    arg1_01 = *(*0x20 + -0x50) + iVar3;\n    uVar4 = *(*0x20 + -0x10);\n    iVar3 = *(*0x20 + 8);\n    iVar6 = *(*0x20 + -0x48);\n    uVar2 = *(*0x20 + -0x18);\n    unaff_RBX = *(*0x20 + -0x58);\n    arg1 = *(*0x20 + -0x20);\n    arg1_00 = *(*0x20 + -0x28);\n    goto code_r0x004497b3;\ncode_r0x0044981f:\n    *(*0x20 + -0x80) = 0x44982a;\n    fcn.0045ca40(arg1_02);\ncode_r0x0044982a:\n    *(*0x20 + -0x80) = 0x449835;\n    in_RAX = fcn.0045ca40(arg1);\ncode_r0x00449836:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x449845;\n    fcn.0045a360();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x00449680;\n}\n",
        "token_count": 1314
    },
    "004498a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nuint64_t fcn.004498a0(void)\n\n{\n    uchar auVar1 [16];\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    uVar2 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar1 = ZEXT816(uVar2) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar2;\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 162
    },
    "0044b140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b140(void)\n\n{\n    uint *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0044acc0(*in_RAX);\n    return;\n}\n",
        "token_count": 93
    },
    "0044b9e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b9e0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x0044b9e0:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar2 = *0x20 + -0x18;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = 0x44ba05;\n        iVar1 = fcn.0044b920();\n        arg1 = unaff_RBX;\n        do {\n            arg1 = arg1 - 1;\n            if (arg1 < 1) break;\n        } while (*(arg1 + iVar1) != '/');\n        do {\n            if (unaff_RBX <= arg1) goto code_r0x0044ba36;\n            if (unaff_RBX <= arg1) goto code_r0x0044ba4d;\n            if (*(arg1 + iVar1) == '.') goto code_r0x0044ba36;\n            arg1 = arg1 + 1;\n        } while( true );\n    }\n    goto code_r0x0044ba59;\ncode_r0x0044ba36:\n    if (arg1 <= unaff_RBX) {\n        return;\n    }\n    *(*0x20 + -0x20) = 0x44ba4d;\n    fcn.0045ca80(arg1, unaff_RBX);\ncode_r0x0044ba4d:\n    *(*0x20 + -0x20) = 0x44ba58;\n    in_RAX = fcn.0045ca40(unaff_RBX);\ncode_r0x0044ba59:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44ba68;\n    fcn.0045a360();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044b9e0;\n}\n",
        "token_count": 599
    },
    "0044bd60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044bd60(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0044bc40(arg1);\n    return;\n}\n",
        "token_count": 87
    },
    "0044bdc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044bdc0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0044b320(*(in_RAX + 0x10));\n    return;\n}\n",
        "token_count": 103
    },
    "0044be40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044be40(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    uint *in_RAX;\n    ulong uVar6;\n    int64_t arg1;\n    int64_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar3 = *(unaff_RBX + 0x58);\n            uVar6 = *(unaff_RBX + 0x50);\n            uVar4 = *(unaff_RBX + 0x60);\n            uVar1 = in_RAX[4];\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x18) = in_RAX;\n                *(*0x20 + -0x30) = uVar4;\n                *(*0x20 + -0x20) = uVar6;\n                *(*0x20 + -0x38) = uVar3;\n                *(*0x20 + -0x40) = uVar1;\n                uVar2 = *in_RAX;\n                *(*0x20 + -0x98) = 0x44bebb;\n                uVar6 = fcn.0044acc0(uVar2);\n                *(*0x20 + -0x58) = uVar6;\n                *(*0x20 + -0x60) = 0xffffffff;\n                uVar3 = *(*0x20 + -0x40);\n                arg1 = *(*0x20 + -0x30) - uVar3;\n                iVar9 = *(*0x20 + -0x38) - uVar3;\n                iVar7 = *(*0x20 + -0x20) + (uVar3 & -arg1 >> 0x3f);\n                iVar5 = 0;\n                while( true ) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x48) = arg1;\n                    *(*0x20 + -0x50) = iVar9;\n                    *(*0x20 + -0x5c) = iVar5;\n                    *(*0x20 + -0x98) = 0x44bf39;\n                    fcn.0044acc0();\n                    iVar9 = *(*0x20 + -0x50);\n                    arg1 = *(*0x20 + -0x48);\n                    *(*0x20 + -0x98) = 0x44bf65;\n                    iVar7 = fcn.0044c1a0(arg1);\n                    if (*0x20 == 'X') break;\n                    iVar5 = *(*0x20 + -0x5c);\n                    if (*(*0x20 + -0x5c) < *(*0x20 + -0x60)) {\n                        iVar5 = *(*0x20 + -0x60);\n                    }\n                }\n                return *(*0x20 + -0x5c);\n            }\n            *(*0x20 + -0x98) = 0x44bf86;\n            in_RAX = fcn.0045cb00(uVar3);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x44bf96;\n        fcn.0045a360();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 968
    },
    "0044bfc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044bfc0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044b320(*(in_RAX + arg1 * 4 + 0x28));\n    return uVar1;\n}\n",
        "token_count": 163
    },
    "0044c060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044c060(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044b320(*(in_RAX + arg1 * 4 + 0x28));\n    return uVar1;\n}\n",
        "token_count": 162
    },
    "0044c100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044c100(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044b320(*(in_RAX + arg1 * 4 + 0x28));\n    return uVar1;\n}\n",
        "token_count": 162
    },
    "0044eac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044eac0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040a360();\n    iVar4 = 0x7fffffffffffffff;\n    for (iVar3 = 0; iVar3 < *0x57fc98; iVar3 = iVar3 + 1) {\n        iVar1 = *(*0x57fc90 + iVar3 * 8);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x1208);\n            if ((iVar2 != 0) && (iVar2 < iVar4)) {\n                iVar4 = iVar2;\n            }\n            iVar1 = *(iVar1 + 0x1210);\n            if ((iVar1 != 0) && (iVar1 < iVar4)) {\n                iVar4 = iVar1;\n            }\n        }\n    }\n    fcn.0040a580();\n    return iVar4;\n}\n",
        "token_count": 277
    },
    "0044ef80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044ef80(void)\n\n{\n    ulong uStack16;\n    \n    fcn.0045e320();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "0044efc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044efc0(ulong param_1)\n\n{\n    if (*0x57efc0 != NULL) {\n        (***0x57efc0)();\n        return;\n    }\n    fcn.0042ef40(param_1);\n    return;\n}\n",
        "token_count": 61
    },
    "0044f840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044f840(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if (*(iVar2 + 0xa0) != 0) {\n        return iVar2;\n    }\n    fcn.0040a360();\n    return iVar2;\n}\n",
        "token_count": 176
    },
    "0044fe60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044fe60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0044fec0();\n    return;\n}\n",
        "token_count": 82
    },
    "0044ffe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044ffe0(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uStack16 = *(*(unaff_R14 + 0x30) + 0xb8);\n    fcn.0044f180(&uStack16);\n    return;\n}\n",
        "token_count": 115
    },
    "00450880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450880(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uStack16 = *0x5d4538;\n    fcn.0044f180(&uStack16);\n    return;\n}\n",
        "token_count": 104
    },
    "004508e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004508e0(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x5d4528 == -1) {\n        iStack16 = 0;\n        fcn.0044f180(&iStack16);\n    }\n    else {\n        iStack16 = *0x5d4528;\n        fcn.0044f180(&iStack16);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00452ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00452ae0(int64_t *arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    char cVar3;\n    uchar uVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    char unaff_DIL;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            uVar1 = *(unaff_RBX + 8);\n            arg2 = uVar1;\n            uVar8 = uVar1;\n            if (unaff_DIL == '\\0') {\n                return uVar8;\n            }\n            if (uVar1 != 0x80000000) {\n                return uVar8;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = uVar8;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x60) = 0x452b45;\n            fcn.0044b920();\n            if (arg1 == 0x14) {\n                *(*0x20 + -0x60) = 0x452b7a;\n                cVar3 = fcn.004021c0(0x14, arg2);\n            }\n            else {\n                if (arg1 != 0x17) goto code_r0x00452b7e;\n                *(*0x20 + -0x60) = 0x452b65;\n                cVar3 = fcn.004021c0(0x17, arg2);\n            }\n            if (cVar3 == '\\0') {\ncode_r0x00452b7e:\n                return *(*0x20 + -0x30);\n            }\n            iVar5 = *(*0x20 + 0x28);\n            if (iVar5 == 0) {\n                iVar5 = **(*(*0x20 + 8) + 0x28);\n                uVar4 = *(*(*(*0x20 + 8) + 0x28) + 4);\n                unaff_RSI = iVar5;\n            }\n            else {\n                uVar4 = 0;\n            }\n            *(*0x20 + -0x39) = uVar4;\n            *(*0x20 + -0x28) = iVar5;\n            *(*0x20 + -0x60) = 0x452bcd;\n            iVar5 = fcn.0044acc0();\n            arg1 = *(*0x20 + -0x28);\n            if (*arg1 == iVar5) {\n                if (*(*0x20 + -0x39) == '\\0') {\n                    return arg1[2] & 0xfffffffffffffff8;\n                }\n                return *arg1[1] << 3;\n            }\n            uVar2 = *(*0x20 + -0x10);\n            *(*0x20 + -0x60) = 0x452c1b;\n            uVar6 = fcn.0044b920();\n            *(*0x20 + -0x20) = uVar6;\n            *(*0x20 + -0x38) = uVar2;\n            *(*0x20 + -0x60) = 0x452c2a;\n            fcn.00434840();\n            *(*0x20 + -0x60) = 0x452c3b;\n            fcn.00435140();\n            *(*0x20 + -0x60) = 0x452c4a;\n            fcn.00435140();\n            *(*0x20 + -0x60) = 0x452c4f;\n            fcn.00434aa0();\n            *(*0x20 + -0x60) = 0x452c54;\n            fcn.004348c0();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x60) = 0x452c65;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        puVar7[0x20] = unaff_DIL;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + -8) = 0x452c85;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_DIL = puVar7[0x20];\n        unaff_RSI = *(puVar7 + 0x28);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1276
    },
    "00452cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00452cc0(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uchar unaff_BL;\n    uchar *puVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00452cc0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x208 && *0x20 + -0x208 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x288;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_BL;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x298) = *0x20 + -8;\n        *(*0x20 + -0x290) = 0x452d2f;\n        fcn.0045ccb4();\n        uVar1 = *(*0x20 + -0x298);\n        puVar5 = *0x20 + -0x240;\n        *(*0x20 + -0x290) = 0x452d48;\n        fcn.00454a40(0x20);\n        *(*0x20 + -0x40) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x298) = uVar1;\n        *(*0x20 + -0x290) = 0x452d8f;\n        fcn.0045cfc0();\n        unaff_RBP = *(*0x20 + -0x298);\n        cVar4 = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + 8);\n        iVar7 = *(*0x20 + 0x28);\n        uVar8 = *(*0x20 + 0x20);\n        iVar2 = 0;\n        uVar3 = 0;\n        do {\n            unaff_BL = SUB81(puVar5, 0);\n            *(*0x20 + -0x248) = uVar8;\n            if (((0x1f < iVar2) || (unaff_RDI = *(*0x20 + iVar2 * 8 + -0x140),  unaff_RDI == 0)) || (iVar7 <= uVar8)) {\n                if (uVar3 != 0) {\n                    *(*0x20 + -0x40) = 0;\n                    *(*0x20 + -0x290) = 0x452ed0;\n                    fcn.004549c0();\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                return uVar8;\n            }\n            if (unaff_RSI != 0) {\n                if (0xfffff < uVar8) goto code_r0x00452ee8;\n                *(unaff_RSI + uVar8 * 8) = unaff_RDI;\n            }\n            if (cVar4 != '\\0') {\n                *(*0x20 + -0x250) = iVar2;\n                *(*0x20 + -0x261) = uVar3;\n                *(*0x20 + -600) = *0x57ef98;\n                if (*0x57ef98 == 0) {\n                    *(*0x20 + -0x260) = unaff_RDI;\n                    *(*0x20 + -0x290) = 0x452e55;\n                    fcn.00434840();\n                    puVar5 = 0x16;\n                    *(*0x20 + -0x290) = 0x452e66;\n                    fcn.00435140();\n                    *(*0x20 + -0x290) = 0x452e70;\n                    fcn.00434fa0();\n                    *(*0x20 + -0x290) = 0x452e75;\n                    fcn.00434aa0();\n                    *(*0x20 + -0x290) = 0x452e7a;\n                    fcn.004348c0();\n                    iVar2 = *(*0x20 + -600);\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                else {\n                    puVar5 = iVar7 - uVar8;\n                    *(*0x20 + -0x290) = 0x452e34;\n                    iVar2 = fcn.004547c0(*0x20 + -0x40);\n                    uVar8 = (iVar2 + *(*0x20 + -0x248)) - 1;\n                    iVar2 = *(*0x20 + -600);\n                }\n                uVar3 = iVar2 != 0 | *(*0x20 + -0x261);\n                iVar2 = *(*0x20 + -0x250);\n                cVar4 = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + 8);\n                iVar7 = *(*0x20 + 0x28);\n            }\n            iVar2 = iVar2 + 1;\n            uVar8 = uVar8 + 1;\n        } while( true );\n    }\n    goto code_r0x00452ef6;\ncode_r0x00452ee8:\n    arg1 = 0x100000;\n    *(*0x20 + -0x290) = 0x452ef5;\n    in_RAX = fcn.0045ca40(0x100000);\ncode_r0x00452ef6:\n    *(puVar6 + 8) = in_RAX;\n    puVar6[0x10] = unaff_BL;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = unaff_RSI;\n    *(puVar6 + -8) = 0x452f13;\n    fcn.0045a360();\n    in_RAX = *(puVar6 + 8);\n    unaff_BL = puVar6[0x10];\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    *0x20 = puVar6;\n    goto code_r0x00452cc0;\n}\n",
        "token_count": 1565
    },
    "00452fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00452fe0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0044b920();\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00435140();\n    fcn.00434aa0();\n    fcn.004348c0();\n    uVar1 = fcn.0044acc0();\n    uVar2 = arg1;\n    if (uVar1 < arg1) {\n        uVar2 = arg1 - 1;\n    }\n    fcn.0044bc40(uVar2);\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00435140();\n    fcn.00435140();\n    fcn.00434f40(uVar2 & 0xffffffff);\n    fcn.004348c0();\n    uVar2 = fcn.0044acc0();\n    if (uVar2 < arg1) {\n        uVar3 = fcn.0044acc0();\n        fcn.00434840();\n        fcn.00435140();\n        fcn.00434fa0(uVar3);\n        fcn.004348c0();\n    }\n    fcn.00434840();\n    fcn.00434aa0();\n    fcn.004348c0();\n    return;\n}\n",
        "token_count": 366
    },
    "00453a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.00453a80(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0045a220();\n    return 0;\n}\n",
        "token_count": 87
    },
    "00453c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00453c00(int64_t arg1, ulong arg2)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI != 0) {\n                *(*0x20 + -0x58) = 0;\n                *(*0x20 + -0x60) = 0x453c49;\n                fcn.00450a40(0, arg2, arg1, unaff_RDI);\n                return;\n            }\n            *(*0x20 + -0x60) = 0x453c5d;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045ca40(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + 0x28) = unaff_RSI;\n        *(puVar1 + -8) = 0x453c7c;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        unaff_RSI = *(puVar1 + 0x28);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 500
    },
    "004543a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004543a0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00434840();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00435140();\n    fcn.00434fa0();\n    fcn.00435140();\n    fcn.004348c0();\n    auStack32 = CONCAT88(arg1, 0x454580);\n    fcn.004352a0(auStack32);\n    return;\n}\n",
        "token_count": 206
    },
    "00454d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00454d00(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            for (iVar3 = 0x56a3e0; iVar3 != 0; iVar3 = *(iVar3 + 0x220)) {\n                param_2 = *(iVar3 + 0x118);\n                if ((param_2 <= in_RAX) && (unaff_RSI = *(iVar3 + 0x120),  in_RAX < unaff_RSI)) {\n                    if (param_2 + unaff_EBX <= unaff_RSI) {\n                        return param_2 + unaff_EBX;\n                    }\n                    goto code_r0x00454ed6;\n                }\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x58) = 0x454d8b;\n            fcn.0040a360();\n            uVar1 = *0x57fdb0;\n            *(*0x20 + -0x58) = 0x454da5;\n            puVar2 = fcn.0040efc0(*(*0x20 + 0x10));\n            *(*0x20 + -0x31) = uVar1;\n            *(*0x20 + -0x18) = *puVar2;\n            *(*0x20 + -0x58) = 0x454dc5;\n            fcn.0040a580();\n            if (*(*0x20 + -0x31) != '\\0') {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x58) = 0x454dd3;\n            fcn.00434840();\n            *(*0x20 + -0x58) = 0x454de5;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x454df1;\n            fcn.00434fa0();\n            *(*0x20 + -0x58) = 0x454e05;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x454e0f;\n            fcn.00434fa0();\n            *(*0x20 + -0x58) = 0x454e25;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x454e2a;\n            fcn.004348c0();\n            iVar3 = 0x56a3e0;\n            while (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x20) = *(iVar3 + 0x118);\n                param_2 = *(iVar3 + 0x120);\n                *(*0x20 + -0x28) = param_2;\n                *(*0x20 + -0x58) = 0x454e67;\n                fcn.00434840();\n                *(*0x20 + -0x58) = 0x454e78;\n                fcn.00435140();\n                *(*0x20 + -0x58) = 0x454e85;\n                fcn.00434fa0();\n                *(*0x20 + -0x58) = 0x454e96;\n                fcn.00435140();\n                *(*0x20 + -0x58) = 0x454ea5;\n                fcn.00434fa0();\n                *(*0x20 + -0x58) = 0x454eaa;\n                fcn.00434aa0();\n                *(*0x20 + -0x58) = 0x454eaf;\n                fcn.004348c0();\n                iVar3 = *(*(*0x20 + -0x10) + 0x220);\n            }\n            *(*0x20 + -0x58) = 0x454ed6;\n            fcn.004330a0();\ncode_r0x00454ed6:\n            *(*0x20 + -0x20) = param_2;\n            *(*0x20 + -0x28) = unaff_RSI;\n            *(*0x20 + -0x58) = 0x454ee5;\n            fcn.00434840();\n            *(*0x20 + -0x58) = 0x454ef6;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x454f05;\n            fcn.00434fa0();\n            *(*0x20 + -0x58) = 0x454f16;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x454f25;\n            fcn.00434fa0();\n            *(*0x20 + -0x58) = 0x454f36;\n            fcn.00435140();\n            *(*0x20 + -0x58) = 0x454f45;\n            fcn.00434fa0();\n            *(*0x20 + -0x58) = 0x454f4a;\n            fcn.00434aa0();\n            *(*0x20 + -0x58) = 0x454f4f;\n            fcn.004348c0();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x454f65;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x454f74;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1517
    },
    "00456e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00456e00(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX != 0) {\n                *(*0x20 + -0x28) = 0x456e2e;\n                fcn.0044efc0(unaff_RBX);\n                return;\n            }\n            *(*0x20 + -0x28) = 0x456e45;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045ca40(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x456e5a;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 392
    },
    "004570c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004570c0(void)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040ba40(1, *in_RAX);\n    return;\n}\n",
        "token_count": 96
    },
    "00457120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457120(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040dd60(arg1, arg2, arg3, arg4);\n    return;\n}\n",
        "token_count": 107
    },
    "00457180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457180(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0040dfe0();\n    return;\n}\n",
        "token_count": 82
    },
    "00457220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457220(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00411220(arg1);\n    return;\n}\n",
        "token_count": 85
    },
    "00457280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457280(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004114c0();\n    return;\n}\n",
        "token_count": 81
    },
    "004572c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004572c0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x5a5f90);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        uVar1 = CONCAT71(0xdeaddeaddeadde, in_RAX != 0xdeaddeaddeaddead);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1 & 0xffffffff;\n}\n",
        "token_count": 288
    },
    "004573c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.004573c0(void)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    int64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (0 < *0x5d3ca0) {\n        uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar2 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n        auVar1 = SEXT816(*0x5d3ca0);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n        if (SUB168((ZEXT816(SUB168(auVar2 >> 0x40, 0) ^ SUB168(auVar2, 0)) & 0xffffffffffffffff) % auVar1, 0) == 0) {\n            fcn.0042a980(unaff_RBX + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 306
    },
    "004579a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004579a0(void)\n\n{\n    fcn.0043cb80();\n    return;\n}\n",
        "token_count": 25
    },
    "00457d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457d20(void)\n\n{\n    fcn.0045c140();\n    return;\n}\n",
        "token_count": 25
    },
    "00457e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457e80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00454d00();\n    return;\n}\n",
        "token_count": 82
    },
    "00457ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457ec0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00454fa0();\n    return;\n}\n",
        "token_count": 82
    },
    "00457f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457f00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00455260();\n    return;\n}\n",
        "token_count": 81
    },
    "00457f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457f40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00454d00();\n    return;\n}\n",
        "token_count": 82
    },
    "004580c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004580c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004430a0(1);\n    return;\n}\n",
        "token_count": 84
    },
    "00458120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458120(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004433e0(arg1);\n    return;\n}\n",
        "token_count": 86
    },
    "00458180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458180(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004430a0(3);\n    return;\n}\n",
        "token_count": 86
    },
    "004581e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004581e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004433e0(0);\n    return;\n}\n",
        "token_count": 84
    },
    "00458220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458220(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0x20) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x458252;\n            fcn.00434840();\n            *(*0x20 + -0x20) = 0x458265;\n            fcn.00435140();\n            *(*0x20 + -0x20) = 0x45826f;\n            fcn.00434e40();\n            *(*0x20 + -0x20) = 0x458285;\n            fcn.00435140();\n            *(*0x20 + -0x20) = 0x45828f;\n            fcn.00434e40();\n            *(*0x20 + -0x20) = 0x458294;\n            fcn.00434aa0();\n            *(*0x20 + -0x20) = 0x458299;\n            fcn.004348c0();\n            *(*0x20 + -0x20) = 0x4582aa;\n            in_RAX = fcn.004330a0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4582b5;\n        fcn.0045a360();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 462
    },
    "004582c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004582c0(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0045e320();\n    return uStack16;\n}\n",
        "token_count": 91
    },
    "00458340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00458340(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x48) = 0x45835e;\n            iVar1 = fcn.004495c0();\n            if (iVar1 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x20) = iVar1;\n            *(*0x20 + -0x48) = 0x45836f;\n            uVar2 = fcn.004490c0();\n            if (unaff_RDI != 0) {\n                *(*0x20 + -0x28) = unaff_RBX;\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0x48) = 0x458390;\n                fcn.0045d380(*(*0x20 + -0x20));\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x48) = 0x4583bc;\n            in_RAX = fcn.0045ca40(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4583c7;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 478
    },
    "004583e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004583e0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.0045d380(arg1);\n    return;\n}\n",
        "token_count": 87
    },
    "00458d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458d40(ulong arg1)\n\n{\n    fcn.00459060(3);\n    return;\n}\n",
        "token_count": 29
    },
    "00458da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458da0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    fcn.00459060(6);\n    return;\n}\n",
        "token_count": 43
    },
    "00458e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458e00(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    fcn.00459060(9);\n    return;\n}\n",
        "token_count": 43
    },
    "00458ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458ea0(void)\n\n{\n    fcn.0045cceb();\n    fcn.00459060(0xc);\n    return;\n}\n",
        "token_count": 36
    },
    "00458f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458f60(void)\n\n{\n    fcn.0045cce6();\n    fcn.00459060(0xf);\n    return;\n}\n",
        "token_count": 36
    },
    "00459060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00459060(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uchar *unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack56 [32];\n    int64_t iStack24;\n    ulong uStack16;\n    \n    uStack16 = 0;\n    if (arg1 < 4) {\n        if (unaff_RBX != auStack56) {\n            fcn.0045d380(arg1 << 3);\n        }\n        unaff_RBX = auStack56;\n        iVar3 = 4;\n    }\n    else {\n        iVar3 = arg1;\n        if (0x2a < arg1) goto code_r0x004591bf;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    *(*(unaff_R14 + 0x30) + 0x130) = unaff_R14;\n    *(unaff_R14 + 0xe8) = *(unaff_R14 + 0x30);\n    uStack16 = 0x4d5e80;\n    iStack24 = *(unaff_R14 + 0x30);\n    *(iStack24 + 0x2c0) = in_RAX;\n    *(iStack24 + 0x2c8) = arg1;\n    if (iVar3 != 0) {\n        *(iStack24 + 0x2d0) = unaff_RBX;\n        fcn.00403280();\n        uVar2 = *(iStack24 + 0x2d8);\n        fcn.0043e780();\n        return uVar2;\n    }\n    fcn.0045ca40(0);\ncode_r0x004591bf:\n    fcn.00432920();\n    fcn.00431da0();\n    return 0;\n}\n",
        "token_count": 445
    },
    "0045c5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045c5a0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong in_RAX;\n    ulong *unaff_RDI;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x1260);\n    *(iVar1 + 0x1260) = puVar2 + 2;\n    puVar3 = *(iVar1 + 0x1268);\n    *puVar2 = in_RAX;\n    puVar2[1] = *unaff_RDI;\n    if (puVar2 + 2 == puVar3) {\n        fcn.0045e5e0();\n    }\n    *unaff_RDI = in_RAX;\n    return;\n}\n",
        "token_count": 212
    },
    "0045cefc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045cefc(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    uVar1 = unaff_RSI[0x45];\n    uVar2 = unaff_RSI[0x46];\n    uVar3 = unaff_RSI[0x47];\n    unaff_RDI[0x44] = unaff_RSI[0x44];\n    unaff_RDI[0x45] = uVar1;\n    unaff_RDI[0x46] = uVar2;\n    unaff_RDI[0x47] = uVar3;\n    uVar1 = unaff_RSI[0x49];\n    uVar2 = unaff_RSI[0x4a];\n    uVar3 = unaff_RSI[0x4b];\n    unaff_RDI[0x48] = unaff_RSI[0x48];\n    unaff_RDI[0x49] = uVar1;\n    unaff_RDI[0x4a] = uVar2;\n    unaff_RDI[0x4b] = uVar3;\n    uVar1 = unaff_RSI[0x4d];\n    uVar2 = unaff_RSI[0x4e];\n    uVar3 = unaff_RSI[0x4f];\n    unaff_RDI[0x4c] = unaff_RSI[0x4c];\n    unaff_RDI[0x4d] = uVar1;\n    unaff_RDI[0x4e] = uVar2;\n    unaff_RDI[0x4f] = uVar3;\n    uVar1 = unaff_RSI[0x51];\n    uVar2 = unaff_RSI[0x52];\n    uVar3 = unaff_RSI[0x53];\n    unaff_RDI[0x50] = unaff_RSI[0x50];\n    unaff_RDI[0x51] = uVar1;\n    unaff_RDI[0x52] = uVar2;\n    unaff_RDI[0x53] = uVar3;\n    uVar1 = unaff_RSI[0x55];\n    uVar2 = unaff_RSI[0x56];\n    uVar3 = unaff_RSI[0x57];\n    unaff_RDI[0x54] = unaff_RSI[0x54];\n    unaff_RDI[0x55] = uVar1;\n    unaff_RDI[0x56] = uVar2;\n    unaff_RDI[0x57] = uVar3;\n    uVar1 = unaff_RSI[0x59];\n    uVar2 = unaff_RSI[0x5a];\n    uVar3 = unaff_RSI[0x5b];\n    unaff_RDI[0x58] = unaff_RSI[0x58];\n    unaff_RDI[0x59] = uVar1;\n    unaff_RDI[0x5a] = uVar2;\n    unaff_RDI[0x5b] = uVar3;\n    uVar1 = unaff_RSI[0x5d];\n    uVar2 = unaff_RSI[0x5e];\n    uVar3 = unaff_RSI[0x5f];\n    unaff_RDI[0x5c] = unaff_RSI[0x5c];\n    unaff_RDI[0x5d] = uVar1;\n    unaff_RDI[0x5e] = uVar2;\n    unaff_RDI[0x5f] = uVar3;\n    uVar1 = unaff_RSI[0x61];\n    uVar2 = unaff_RSI[0x62];\n    uVar3 = unaff_RSI[99];\n    unaff_RDI[0x60] = unaff_RSI[0x60];\n    unaff_RDI[0x61] = uVar1;\n    unaff_RDI[0x62] = uVar2;\n    unaff_RDI[99] = uVar3;\n    uVar1 = unaff_RSI[0x65];\n    uVar2 = unaff_RSI[0x66];\n    uVar3 = unaff_RSI[0x67];\n    unaff_RDI[100] = unaff_RSI[100];\n    unaff_RDI[0x65] = uVar1;\n    unaff_RDI[0x66] = uVar2;\n    unaff_RDI[0x67] = uVar3;\n    uVar1 = unaff_RSI[0x69];\n    uVar2 = unaff_RSI[0x6a];\n    uVar3 = unaff_RSI[0x6b];\n    unaff_RDI[0x68] = unaff_RSI[0x68];\n    unaff_RDI[0x69] = uVar1;\n    unaff_RDI[0x6a] = uVar2;\n    unaff_RDI[0x6b] = uVar3;\n    uVar1 = unaff_RSI[0x6d];\n    uVar2 = unaff_RSI[0x6e];\n    uVar3 = unaff_RSI[0x6f];\n    unaff_RDI[0x6c] = unaff_RSI[0x6c];\n    unaff_RDI[0x6d] = uVar1;\n    unaff_RDI[0x6e] = uVar2;\n    unaff_RDI[0x6f] = uVar3;\n    uVar1 = unaff_RSI[0x71];\n    uVar2 = unaff_RSI[0x72];\n    uVar3 = unaff_RSI[0x73];\n    unaff_RDI[0x70] = unaff_RSI[0x70];\n    unaff_RDI[0x71] = uVar1;\n    unaff_RDI[0x72] = uVar2;\n    unaff_RDI[0x73] = uVar3;\n    uVar1 = unaff_RSI[0x75];\n    uVar2 = unaff_RSI[0x76];\n    uVar3 = unaff_RSI[0x77];\n    unaff_RDI[0x74] = unaff_RSI[0x74];\n    unaff_RDI[0x75] = uVar1;\n    unaff_RDI[0x76] = uVar2;\n    unaff_RDI[0x77] = uVar3;\n    return;\n}\n",
        "token_count": 3268
    },
    "0045cfc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045cfc0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    return;\n}\n",
        "token_count": 1743
    },
    "0045cf88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045cf88(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    uVar1 = unaff_RSI[0x45];\n    uVar2 = unaff_RSI[0x46];\n    uVar3 = unaff_RSI[0x47];\n    unaff_RDI[0x44] = unaff_RSI[0x44];\n    unaff_RDI[0x45] = uVar1;\n    unaff_RDI[0x46] = uVar2;\n    unaff_RDI[0x47] = uVar3;\n    uVar1 = unaff_RSI[0x49];\n    uVar2 = unaff_RSI[0x4a];\n    uVar3 = unaff_RSI[0x4b];\n    unaff_RDI[0x48] = unaff_RSI[0x48];\n    unaff_RDI[0x49] = uVar1;\n    unaff_RDI[0x4a] = uVar2;\n    unaff_RDI[0x4b] = uVar3;\n    uVar1 = unaff_RSI[0x4d];\n    uVar2 = unaff_RSI[0x4e];\n    uVar3 = unaff_RSI[0x4f];\n    unaff_RDI[0x4c] = unaff_RSI[0x4c];\n    unaff_RDI[0x4d] = uVar1;\n    unaff_RDI[0x4e] = uVar2;\n    unaff_RDI[0x4f] = uVar3;\n    return;\n}\n",
        "token_count": 2182
    },
    "0045cff8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045cff8(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    return;\n}\n",
        "token_count": 1302
    },
    "0045d006": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045d006(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    return;\n}\n",
        "token_count": 1187
    },
    "0045d04c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045d04c(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    return;\n}\n",
        "token_count": 637
    },
    "0045d05a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045d05a(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    return;\n}\n",
        "token_count": 530
    },
    "0045cfb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045cfb2(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    return;\n}\n",
        "token_count": 1850
    },
    "0045e260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e260(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int32_t iStackX8;\n    uchar auStack72 [24];\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    int64_t iStack24;\n    uchar *puStack16;\n    \n    puStack16 = auStack72;\n    iStack24 = iStackX8;\n    uStack32 = *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0x328);\n    uStack48 = 0;\n    uStack40 = 0;\n    (*_sym.imp.kernel32.dll_SetWaitableTimer)(uStack32, &iStack24, 0, 0);\n    (**0x57ef28)(uStack32, 0, 0);\n    return;\n}\n",
        "token_count": 187
    },
    "0045e5e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e5e0(void)\n\n{\n    fcn.0042c700();\n    return;\n}\n",
        "token_count": 27
    },
    "0045e7c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e7c0(void)\n\n{\n    fcn.0044efc0(*0x576b98);\n    return;\n}\n",
        "token_count": 34
    },
    "0045e7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e7e0(void)\n\n{\n    fcn.0044efc0(*0x576ba8);\n    return;\n}\n",
        "token_count": 34
    },
    "0045e880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e880(void)\n\n{\n    fcn.0043da80();\n    return;\n}\n",
        "token_count": 25
    },
    "0045e8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e8c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.004422e0(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 61
    },
    "0045eb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045eb60(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00458900();\n    return uStack24;\n}\n",
        "token_count": 34
    },
    "0045ebc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045ebc0(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00458a80();\n    return uStack24;\n}\n",
        "token_count": 36
    },
    "0045ec00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045ec00(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00458be0();\n    return uStack24;\n}\n",
        "token_count": 35
    },
    "0045eea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045eea0(void)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    ulong uVar2;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((*unaff_RBX == *in_RAX) && (unaff_RBX[1] == in_RAX[1])) {\n        if ((unaff_RBX[3] == in_RAX[3]) &&\n           (((unaff_RBX[5] == in_RAX[5] && (cVar1 = fcn.004021c0(in_RAX[3], unaff_RBX[2]),  cVar1 != '\\0')) &&\n            (cVar1 = fcn.004021c0(in_RAX[5], unaff_RBX),  cVar1 != '\\0')))) {\n            uVar2 = fcn.004021c0(0x20, unaff_RBX);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 271
    },
    "00462060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00462060(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RBX != 0) {\n                *(*0x20 + 8) = in_RAX;\n                do {\n                    while (arg1 = *in_RAX,  arg1 == 0) {\n                        *(*0x20 + -0x28) = 0x4620ac;\n                        fcn.00457c60();\n                        *(*0x20 + -0x28) = 0x4620bf;\n                        cVar1 = fcn.00457040(0x5d3b39);\n                        if (cVar1 != '\\0') {\n                            *(*0x20 + -0x28) = 0x462109;\n                            fcn.00456fe0(*(*0x20 + 8));\n                            *(*0x20 + -0x28) = 0x462118;\n                            fcn.00456fe0();\n                            *(*0x20 + -0x28) = 0x46211d;\n                            fcn.00457c80();\n                            return;\n                        }\n                        *(*0x20 + -0x28) = 0x4620c9;\n                        fcn.00457c80();\n                        in_RAX = *(*0x20 + 8);\n                    }\n                } while (arg1 == 0x5d3b39);\n                if (*(*0x20 + 0x10) == arg1) {\n                    *(*0x20 + -0x28) = 0x4620ec;\n                    fcn.00456fe0();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x46213a;\n                fcn.00432920();\n            }\n            unaff_RBX = 0x4f9f38;\n            *(*0x20 + -0x28) = 0x46214d;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x462165;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 729
    },
    "004626e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004626e0(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int32_t *in_RAX;\n    int64_t **ppiVar4;\n    char cVar5;\n    int64_t *piVar6;\n    char cVar7;\n    ulong uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [8];\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar2 = *(in_RAX + 2);\n    auStack40 = in_XMM15;\n    if ((iVar2 != 0) && (iVar2 != 0x5d3b39)) {\n        auStack40 = CONCAT88(*(in_RAX + 4), iVar2);\n    }\n    if (auStack40._0_8_ == 0x4bcae0) {\n        cVar7 = *auStack40._8_8_;\n        cVar5 = *(auStack40._8_8_ + 1);\n    }\n    else {\n        cVar5 = '\\0';\n        cVar7 = '\\0';\n    }\n    uStack16 = arg1;\n    ppiVar4 = fcn.0040d400(auStack24);\n    piVar6 = *ppiVar4;\n    if ((cVar7 == '\\0') && (cVar5 != '\\0')) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.004633a0();\n        }\n        iVar2 = *(in_RAX + 2);\n        auStack56 = in_XMM15;\n        if ((iVar2 != 0) && (iVar2 != 0x5d3b39)) {\n            auStack56 = CONCAT88(*(in_RAX + 4), iVar2);\n        }\n        if (auStack56._0_8_ == 0x4bcae0) {\n            cVar7 = *auStack56._8_8_;\n            cVar5 = *(auStack56._8_8_ + 1);\n        }\n        else {\n            cVar5 = '\\0';\n            cVar7 = '\\0';\n        }\n        uStack16 = arg1;\n        ppiVar4 = fcn.0040d400(auStack24);\n        piVar6 = *ppiVar4;\n        if ((cVar7 == '\\0') && (cVar5 != '\\0')) {\n            uVar8 = *(in_RAX + 6);\n            uStack16 = arg1;\n            ppiVar4 = fcn.0040d400(auStack24);\n            cVar7 = uVar8;\n            piVar6 = *ppiVar4;\n            fcn.00463060();\n        }\n        LOCK();\n        iVar1 = *in_RAX;\n        *in_RAX = *in_RAX + -1;\n        if (iVar1 != 1) {\n            fcn.004636a0();\n        }\n    }\n    if (cVar7 != '\\0') {\n        puVar3 = *piVar6;\n        if ((puVar3 == NULL) || (*0x57f000 == puVar3)) {\n            uVar8 = 0;\n        }\n        else {\n            uVar8 = *puVar3;\n        }\n        return uVar8;\n    }\n    return 0;\n}\n",
        "token_count": 821
    },
    "00463320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00463320(void)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar2 = *in_RAX;\n    while( true ) {\n        if (iVar2 != 0) {\n            return in_RAX & 0xffffffffffffff00 | *0x57f000 == iVar2;\n        }\n        cVar1 = fcn.00457040(*0x57f000);\n        if (cVar1 != '\\0') break;\n        iVar2 = *in_RAX;\n    }\n    return 1;\n}\n",
        "token_count": 188
    },
    "00463640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463640(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + -1;\n    if (iVar1 != 1) {\n        fcn.004636a0();\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "004636a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004636a0(void)\n\n{\n    uint32_t *in_RAX;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((unaff_EBX + 1 & 1) == 0) {\n        fcn.00457960();\n    }\n    if ((unaff_EBX >> 2 & 1) == 0) {\n        while ((unaff_EBX >> 3 != 0 && ((unaff_EBX & 7) == 0))) {\n            LOCK();\n            if (unaff_EBX == *in_RAX) {\n                *in_RAX = unaff_EBX - 8 | 2;\n                fcn.00458120(1);\n                return;\n            }\n            unaff_EBX = *in_RAX;\n        }\n        return;\n    }\n    fcn.00458120(1);\n    return;\n}\n",
        "token_count": 244
    },
    "00464720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00464720(ulong param_1)\n\n{\n    int64_t *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar2 = *in_RAX;\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        uVar1 = fcn.00464300();\n        if (param_1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x28);\n    }\n    return uVar1;\n}\n",
        "token_count": 172
    },
    "004647a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004647a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t noname_0;\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t noname_1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    noname_1 = *(in_RAX + 8);\n    if (*(in_RAX + 8) == 0) {\n        return 0;\n    }\n    while( true ) {\n        noname_0 = *(noname_1 + 0x20);\n        iVar3 = noname_0;\n        uVar2 = fcn.00464420(noname_0, noname_1, param_3, param_4);\n        if (iVar3 != '\\0') {\n            return uVar2;\n        }\n        if (noname_0 == 0) break;\n        cVar1 = fcn.00457040(noname_0);\n        noname_1 = noname_0;\n        if (cVar1 != '\\0') {\n            fcn.00456fe0(noname_0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 322
    },
    "00467380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00467380(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint8_t unaff_SIL;\n    int64_t unaff_RDI;\n    ulong in_R10;\n    ulong *in_R11;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uVar3;\n    uint8_t uStack0000000000000028;\n    ulong uStack0000000000000038;\n    ulong *puStack0000000000000040;\n    uchar auStack880 [8];\n    uchar auStack872 [792];\n    int64_t iStack80;\n    int64_t iStack72;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    uStack0000000000000038 = in_R10;\n    puStack0000000000000040 = in_R11;\n    uStack0000000000000028 = unaff_SIL;\n    while (uVar3 = SUB168(in_XMM15 >> 0x40, 0),  auStack872 < *(unaff_R14 + 0x10) || auStack872 == *(unaff_R14 + 0x10))\n    {\n        fcn.0045a360();\n    }\n    fcn.0045cbe9();\n    fcn.00466520();\n    fcn.00466a80(puStack0000000000000040, *puStack0000000000000040);\n    if (unaff_RDI < 0) {\n        fcn.00467a20(uStack0000000000000038);\n        auStack24 = CONCAT88(uVar3, iStack72);\n        iVar2 = unaff_RDI;\n        if (uStack0000000000000028 < 0x48) {\n            if (uStack0000000000000028 == 0x45) {\ncode_r0x00467668:\n                iStack72 = unaff_RDI;\n                iVar2 = iStack80 + -1;\n                goto code_r0x004676c7;\n            }\n            iStack72 = unaff_RDI;\n            if (uStack0000000000000028 != 0x47) goto code_r0x004676c7;\n        }\n        else {\n            if (uStack0000000000000028 == 0x65) goto code_r0x00467668;\n            if (uStack0000000000000028 == 0x66) {\n                iVar1 = iStack80 - iStack72;\n                iStack72 = unaff_RDI;\n                iVar2 = 0;\n                if (0 < iVar1) {\n                    iVar2 = iVar1;\n                }\n                goto code_r0x004676c7;\n            }\n            iStack72 = unaff_RDI;\n            if (uStack0000000000000028 != 0x67) goto code_r0x004676c7;\n        }\n        iStack72 = iStack80;\n        iVar2 = iStack80;\n        goto code_r0x004676c7;\n    }\n    if (uStack0000000000000028 < 0x48) {\n        if (uStack0000000000000028 == 0x45) {\ncode_r0x004674a6:\n            fcn.00466b40(unaff_RDI + 1);\n        }\n        else if (uStack0000000000000028 == 0x47) {\ncode_r0x004674df:\n            if (unaff_RDI == 0) {\n                unaff_RDI = 1;\n            }\n            fcn.00466b40();\n        }\n    }\n    else {\n        if (uStack0000000000000028 == 0x65) goto code_r0x004674a6;\n        if (uStack0000000000000028 == 0x66) {\n            fcn.00466b40(iStack72 + unaff_RDI);\n        }\n        else if (uStack0000000000000028 == 0x67) goto code_r0x004674df;\n    }\n    auStack24 = CONCAT88(uVar3, iStack72);\n    iVar2 = unaff_RDI;\ncode_r0x004676c7:\n    auStack40 = CONCAT88(iStack80, 800);\n    auStack56 = CONCAT88(800, auStack880);\n    fcn.004677a0(arg1, iStack72, iVar2);\n    return;\n}\n",
        "token_count": 999
    },
    "004677a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004677a0(uint64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    char unaff_DIL;\n    uint8_t in_R9B;\n    int64_t unaff_R14;\n    uint uStackX32;\n    uint uStackX36;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    int64_t iStack0000000000000038;\n    \n    iStack0000000000000038 = in_RAX;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (in_R9B < 0x48) {\n        if (in_R9B == 0x45) {\ncode_r0x004677dd:\n            fcn.00467f20(arg1);\n            return;\n        }\n        if (in_R9B == 0x47) {\ncode_r0x00467834:\n            iVar1 = CONCAT44(uStackX36, uStackX32);\n            if ((iVar1 < arg3) &&\n               (CONCAT44(in_stack_0000002c, in_stack_00000028) == iVar1 ||\n                CONCAT44(in_stack_0000002c, in_stack_00000028) < iVar1)) {\n                arg3 = iVar1;\n            }\n            if (unaff_DIL != '\\0') {\n                arg3 = 6;\n            }\n            iVar1 = CONCAT44(in_stack_0000002c, in_stack_00000028) + -1;\n            if ((-5 < iVar1) && (iVar1 < arg3)) {\n                fcn.00468480(arg1);\n                return;\n            }\n            fcn.00467f20(arg1);\n            return;\n        }\n    }\n    else {\n        if (in_R9B == 0x65) goto code_r0x004677dd;\n        if (in_R9B == 0x66) {\n            fcn.00468480(arg1);\n            return;\n        }\n        if (in_R9B == 0x67) goto code_r0x00467834;\n    }\n    if (arg1 < unaff_RBX + 2U) {\n        iStack0000000000000038 = fcn.00444c60(unaff_RBX);\n    }\n    *(iStack0000000000000038 + unaff_RBX) = 0x25;\n    *(iStack0000000000000038 + 1 + unaff_RBX) = in_R9B;\n    return;\n}\n",
        "token_count": 607
    },
    "00468480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00468480(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    char cVar10;\n    uint64_t unaff_RDI;\n    uchar uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \ncode_r0x00468480:\n    cVar10 = unaff_RDI;\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x98;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x38) = in_RAX;\n        *(*0x20 + 0x58) = unaff_RSI;\n        uVar6 = unaff_RBX;\n        if (cVar10 != '\\0') {\n            uVar6 = unaff_RBX + 1;\n            uVar2 = in_RAX;\n            uVar5 = arg1;\n            uVar12 = unaff_RBX;\n            if (arg1 < uVar6) {\n                *(*0x20 + 0x40) = unaff_RBX;\n                *(*0x20 + -0xa0) = 0x4684e5;\n                uVar2 = fcn.00444c60(unaff_RBX);\n                uVar6 = in_RAX + 1;\n                uVar12 = *(*0x20 + 0x40);\n                unaff_RSI = *(*0x20 + 0x58);\n                uVar5 = unaff_RBX;\n                unaff_RDI = arg1;\n            }\n            *(uVar2 + uVar12) = 0x2d;\n            in_RAX = uVar2;\n            arg1 = uVar5;\n            unaff_RBX = uVar12;\n        }\n        cVar10 = unaff_RDI;\n        *(*0x20 + -0x18) = uVar6;\n        uVar12 = *(*0x20 + 0x28);\n        if (uVar12 < 1) {\n            uVar12 = uVar6 + 1;\n            uVar3 = in_RAX;\n            uVar5 = arg1;\n            uVar2 = uVar6;\n            if (arg1 < uVar12) {\n                *(*0x20 + -0xa0) = 0x46853d;\n                uVar3 = fcn.00444c60(uVar6);\n                uVar12 = in_RAX + 1;\n                unaff_RSI = *(*0x20 + 0x58);\n                uVar2 = *(*0x20 + -0x18);\n                uVar5 = uVar6;\n                unaff_RBX = in_RAX;\n                unaff_RDI = arg1;\n            }\n            *(uVar3 + uVar2) = 0x30;\ncode_r0x00468679:\n            if (unaff_RSI < 1) {\n                return;\n            }\n            uVar6 = uVar12 + 1;\n            uVar4 = uVar3;\n            uVar8 = uVar5;\n            uVar2 = uVar12;\n            if (uVar5 < uVar6) {\n                *(*0x20 + -0x30) = uVar12;\n                *(*0x20 + -0xa0) = 0x4686a5;\n                uVar4 = fcn.00444c60(uVar12);\n                uVar6 = uVar3 + 1;\n                uVar2 = *(*0x20 + -0x30);\n                unaff_RSI = *(*0x20 + 0x58);\n                uVar8 = uVar12;\n                unaff_RBX = uVar3;\n                unaff_RDI = uVar5;\n            }\n            *(uVar4 + uVar2) = 0x2e;\n            uVar2 = 0;\n            do {\n                cVar10 = unaff_RDI;\n                if (unaff_RSI <= uVar2) {\n                    return;\n                }\n                uVar12 = *(*0x20 + 0x28) + uVar2;\n                if ((uVar12 < 0) || (*(*0x20 + 0x20) == uVar12 || *(*0x20 + 0x20) < uVar12)) {\n                    uVar11 = 0x30;\n                }\n                else {\n                    if (*(*0x20 + 0x10) <= uVar12) goto code_r0x00468785;\n                    uVar11 = *(*(*0x20 + 8) + uVar12);\n                }\n                uVar5 = uVar4;\n                uVar3 = uVar8;\n                uVar12 = uVar6;\n                uVar1 = uVar6 + 1;\n                if (uVar8 < uVar6 + 1) {\n                    *(*0x20 + -0x38) = uVar6;\n                    *(*0x20 + -0x40) = uVar2;\n                    *(*0x20 + -0x51) = uVar11;\n                    *(*0x20 + -0xa0) = 0x46875c;\n                    uVar5 = fcn.00444c60(uVar6);\n                    uVar2 = *(*0x20 + -0x40);\n                    unaff_RSI = *(*0x20 + 0x58);\n                    uVar12 = *(*0x20 + -0x38);\n                    uVar11 = *(*0x20 + -0x51);\n                    uVar3 = uVar6;\n                    unaff_RBX = uVar4;\n                    unaff_RDI = uVar8;\n                    uVar1 = uVar4 + 1;\n                }\n                uVar6 = uVar1;\n                *(uVar5 + uVar12) = uVar11;\n                uVar2 = uVar2 + 1;\n                uVar4 = uVar5;\n                uVar8 = uVar3;\n            } while( true );\n        }\n        if (*(*0x20 + 0x20) < uVar12) {\n            uVar12 = *(*0x20 + 0x20);\n        }\n        uVar2 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 8);\n        if (uVar12 <= uVar2) {\n            *(*0x20 + -0x50) = uVar12;\n            *(*0x20 + -0x20) = uVar12 + uVar6;\n            if (arg1 < uVar12 + uVar6) {\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0xa0) = 0x4685bc;\n                in_RAX = fcn.00444c60(uVar6);\n                unaff_RBX = *(*0x20 + -0x10);\n                uVar12 = *(*0x20 + -0x50);\n                arg1 = uVar6;\n            }\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0xa0) = 0x4685f0;\n            fcn.0045d380(uVar12);\n            uVar12 = *(*0x20 + -0x20);\n            uVar5 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x10);\n            for (iVar7 = *(*0x20 + -0x50); *(*0x20 + 0x28) != iVar7 && iVar7 <= *(*0x20 + 0x28); iVar7 = iVar7 + 1) {\n                uVar2 = uVar3;\n                uVar6 = uVar12;\n                uVar4 = uVar12 + 1;\n                if (uVar5 < uVar12 + 1) {\n                    *(*0x20 + -0x48) = iVar7;\n                    *(*0x20 + -0x28) = uVar12;\n                    *(*0x20 + -0xa0) = 0x468652;\n                    uVar2 = fcn.00444c60(uVar12);\n                    uVar6 = *(*0x20 + -0x28);\n                    iVar7 = *(*0x20 + -0x48);\n                    unaff_RBX = uVar3;\n                    uVar5 = uVar12;\n                    uVar4 = uVar3 + 1;\n                }\n                uVar12 = uVar4;\n                *(uVar2 + uVar6) = 0x30;\n                uVar3 = uVar2;\n            }\n            unaff_RSI = *(*0x20 + 0x58);\n            unaff_RDI = uVar5;\n            goto code_r0x00468679;\n        }\n        goto code_r0x00468790;\n    }\n    goto code_r0x00468799;\ncode_r0x00468785:\n    *(*0x20 + -0xa0) = 0x468790;\n    fcn.0045ca40(*(*0x20 + 0x10));\ncode_r0x00468790:\n    arg1 = uVar12;\n    *(*0x20 + -0xa0) = 0x468798;\n    in_RAX = fcn.0045cac0(arg1, uVar2);\ncode_r0x00468799:\n    *(puVar9 + 0x38) = in_RAX;\n    *(puVar9 + 0x40) = unaff_RBX;\n    *(puVar9 + 0x48) = arg1;\n    puVar9[0x50] = cVar10;\n    *(puVar9 + 0x58) = unaff_RSI;\n    *(puVar9 + -8) = 0x4687b7;\n    fcn.0045a360();\n    in_RAX = *(puVar9 + 0x38);\n    unaff_RBX = *(puVar9 + 0x40);\n    arg1 = *(puVar9 + 0x48);\n    unaff_RDI = puVar9[0x50];\n    unaff_RSI = *(puVar9 + 0x58);\n    *0x20 = puVar9;\n    goto code_r0x00468480;\n}\n",
        "token_count": 2415
    },
    "004687e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004687e0(uint64_t arg1, ulong noname_1, int64_t arg3, int64_t *arg4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000030;\n    int64_t *piStack0000000000000038;\n    \n    iStack0000000000000030 = arg3;\n    piStack0000000000000038 = arg4;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (unaff_DIL != '\\0') {\n        uVar3 = unaff_RBX + 1;\n        iVar1 = in_RAX;\n        if (arg1 < uVar3) {\n            arg1 = unaff_RBX;\n            iVar1 = fcn.00444c60(unaff_RBX);\n            uVar3 = in_RAX + 1;\n        }\n        *(iVar1 + unaff_RBX) = 0x2d;\n        unaff_RBX = uVar3;\n    }\n    iVar2 = fcn.0046a6a0(arg1);\n    uVar3 = unaff_RBX + 1;\n    iVar1 = iVar2;\n    if (arg1 < uVar3) {\n        arg1 = unaff_RBX;\n        iVar1 = fcn.00444c60(unaff_RBX);\n        uVar3 = iVar2 + 1;\n    }\n    *(iVar1 + unaff_RBX) = 0x70;\n    if (-1 < iStack0000000000000030 - *piStack0000000000000038) {\n        if (arg1 < uVar3 + 1) {\n            arg1 = uVar3;\n            iVar1 = fcn.00444c60(uVar3);\n        }\n        *(iVar1 + uVar3) = 0x2b;\n    }\n    fcn.0046a6a0(arg1);\n    return;\n}\n",
        "token_count": 503
    },
    "0046b040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046b040(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t arg1_00;\n    uint64_t unaff_RBX;\n    uchar unaff_SIL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    arg1_00 = unaff_RBX + 1;\n    iVar1 = in_RAX;\n    if (arg1 < arg1_00) {\n        arg1 = unaff_RBX;\n        iVar1 = fcn.00444c60(unaff_RBX);\n        arg1_00 = in_RAX + 1;\n    }\n    *(iVar1 + unaff_RBX) = unaff_SIL;\n    iVar1 = fcn.0046b180(arg1);\n    if (arg1 < arg1_00 + 1) {\n        iVar1 = fcn.00444c60(arg1_00);\n    }\n    *(iVar1 + arg1_00) = unaff_SIL;\n    return;\n}\n",
        "token_count": 270
    },
    "004721c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004721c0(ulong param_1)\n\n{\n    uint16_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4721d9;\n            iVar2 = fcn.00472080();\n            if (iVar2 == 0) {\n                return 0;\n            }\n            uVar1 = *(iVar2 + 6);\n            if (uVar1 == 0) {\n                return 0;\n            }\n            if (uVar1 < 0x10001) {\n                return *(iVar2 + 8) + iVar2;\n            }\n            *(*0x20 + -0x20) = 0x47222b;\n            in_RAX = fcn.0045cb40(param_1, uVar1);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x472236;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 374
    },
    "004735e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004735e0(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00408bc0();\n    iVar1 = fcn.0044ade0();\n    if (iVar1 != 0) {\n        uVar2 = fcn.0044afe0();\n        return uVar2;\n    }\n    return 0x4ca285;\n}\n",
        "token_count": 144
    },
    "004755e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004755e0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((*(in_RAX + 0x17) & 0x20) == 0) {\n        fcn.004570c0();\n        fcn.00457220(arg1);\n        return in_RAX;\n    }\n    return in_RAX;\n}\n",
        "token_count": 140
    },
    "004756a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004756a0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX != 0) {\n                if ((arg1 >> 9 & 1) != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x20) = 0x4756dc;\n                uVar1 = fcn.00472240();\n                return uVar1;\n            }\n            *(*0x20 + -0x20) = 0x4756f2;\n            unaff_RBX = fcn.0040c440();\n            unaff_RBX[1] = 0x17;\n            arg1 = 0x4cdb14;\n            *unaff_RBX = 0x4cdb14;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x20) = 0x47571b;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x475730;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 509
    },
    "004760c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004760c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.00471900(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 58
    },
    "00476100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00476100(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [16];\n    ulong uStackX24;\n    uchar auStack40 [32];\n    \n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n    if ((piVar1 != NULL) && (*piVar1 == auStackX8)) {\n        *piVar1 = auStack40;\n    }\n    fcn.00473b20(uStackX24);\n    return;\n}\n",
        "token_count": 127
    },
    "00476480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00476480(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if ((*(unaff_RBX + 0x50) == *(in_RAX + 0x50)) && (*(unaff_RBX + 0x58) == *(in_RAX + 0x58))) {\n        uVar1 = fcn.004021c0(0x4c, *(in_RAX + 0x58));\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 190
    },
    "004767c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004767c0(ulong noname_0, ulong arg2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004021c0(0x1a, arg2);\n    return;\n}\n",
        "token_count": 99
    },
    "00477200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00477200(ulong arg1)\n\n{\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (((unaff_RBX != 0x10) && (unaff_RBX != 0x18)) && (unaff_RBX != 0x20)) {\n        fcn.00409d20();\n        return 0;\n    }\n    uVar1 = fcn.00477580(arg1);\n    return uVar1;\n}\n",
        "token_count": 161
    },
    "00477a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00477a20(void)\n\n{\n    uchar (*unaff_RBX) [16];\n    uchar in_XMM0 [16];\n    uchar auVar1 [16];\n    uint in_XMM4_Da;\n    \n    auVar1 = in_XMM0 ^ CONCAT412(SUB164(in_XMM0, 0), \n                                 CONCAT48(SUB164(in_XMM0 >> 0x20, 0), CONCAT44(in_XMM4_Da, in_XMM4_Da)));\n    *unaff_RBX = auVar1 ^ CONCAT412(SUB164(auVar1 >> 0x40, 0), \n                                    CONCAT48(SUB164(auVar1, 0), CONCAT44(SUB164(in_XMM0, 0), in_XMM4_Da))) ^ ZEXT816(0);\n    return;\n}\n",
        "token_count": 184
    },
    "00477a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00477a7f)\n\nvoid fcn.00477a60(ulong param_1, ulong param_2)\n\n{\n    uchar (*unaff_RBX) [16];\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_XMM0_Dc;\n    uint32_t in_XMM0_Dd;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar in_XMM2 [16];\n    uchar auVar5 [16];\n    uint32_t in_XMM4_Da;\n    \n    uVar4 = param_2 >> 0x20;\n    uVar2 = param_1 >> 0x20;\n    uVar1 = param_1;\n    uVar3 = in_XMM0_Dd ^ uVar1 ^ in_XMM0_Dc ^ uVar2 ^ uVar4;\n    auVar5 = in_XMM2 ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3))) ^ in_XMM2 << 0x20;\n    *unaff_RBX = CONCAT412(uVar2 ^ in_XMM4_Da ^ uVar1 ^ uVar4, CONCAT48(uVar1 ^ uVar4, SUB168(in_XMM2, 0)));\n    unaff_RBX[1] = ZEXT1216(CONCAT48(SUB164(auVar5 >> 0x20, 0), CONCAT44(SUB164(auVar5, 0), uVar3))) << 0x20;\n    return;\n}\n",
        "token_count": 350
    },
    "00477ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00477adc)\n\nvoid fcn.00477ac0(ulong param_1, ulong param_2)\n\n{\n    uint32_t *unaff_RBX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_XMM0_Dc;\n    uint32_t uVar3;\n    uint32_t in_XMM0_Dd;\n    uint32_t uVar4;\n    uint32_t in_XMM4_Da;\n    \n    uVar4 = param_2 >> 0x20;\n    uVar2 = param_1 >> 0x20;\n    uVar1 = param_1;\n    uVar3 = in_XMM0_Dc ^ uVar2;\n    *unaff_RBX = uVar1 ^ uVar4;\n    unaff_RBX[1] = uVar2 ^ in_XMM4_Da ^ uVar1 ^ uVar4;\n    unaff_RBX[2] = uVar3 ^ uVar1 ^ in_XMM4_Da ^ uVar4;\n    unaff_RBX[3] = in_XMM0_Dd ^ uVar1 ^ uVar3 ^ uVar4;\n    return;\n}\n",
        "token_count": 268
    },
    "00477b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00477b20(void)\n\n{\n    uchar (*unaff_RBX) [16];\n    uchar in_XMM2 [16];\n    uchar auVar1 [16];\n    uint in_XMM4_Da;\n    \n    auVar1 = in_XMM2 ^ CONCAT412(SUB164(in_XMM2, 0), \n                                 CONCAT48(SUB164(in_XMM2 >> 0x20, 0), CONCAT44(in_XMM4_Da, in_XMM4_Da)));\n    *unaff_RBX = auVar1 ^ CONCAT412(SUB164(auVar1 >> 0x40, 0), \n                                    CONCAT48(SUB164(auVar1, 0), CONCAT44(SUB164(in_XMM2, 0), in_XMM4_Da))) ^ ZEXT816(0);\n    return;\n}\n",
        "token_count": 184
    },
    "00477b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "decrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nvoid fcn.00477b60(void)\n\n{\n    uchar (*pauVar1) [16];\n    uchar auVar2 [16];\n    uint64_t uStackX8;\n    uchar (*pauStackX16) [16];\n    uchar (*pauStackX24) [16];\n    uchar (*pauStackX32) [16];\n    \n    pauVar1 = pauStackX16[1];\n    auVar2 = *pauStackX32 ^ *pauStackX16;\n    if (uStackX8 != 0xc) {\n        if (uStackX8 < 0xc) goto code_r0x00477bb4;\n        auVar2 = aesdec(auVar2, *pauVar1);\n        auVar2 = aesdec(auVar2, pauStackX16[2]);\n        pauVar1 = pauStackX16[3];\n    }\n    auVar2 = aesdec(auVar2, *pauVar1);\n    auVar2 = aesdec(auVar2, pauVar1[1]);\n    pauVar1 = pauVar1[2];\ncode_r0x00477bb4:\n    auVar2 = aesdec(auVar2, *pauVar1);\n    auVar2 = aesdec(auVar2, pauVar1[1]);\n    auVar2 = aesdec(auVar2, pauVar1[2]);\n    auVar2 = aesdec(auVar2, pauVar1[3]);\n    auVar2 = aesdec(auVar2, pauVar1[4]);\n    auVar2 = aesdec(auVar2, pauVar1[5]);\n    auVar2 = aesdec(auVar2, pauVar1[6]);\n    auVar2 = aesdec(auVar2, pauVar1[7]);\n    auVar2 = aesdec(auVar2, pauVar1[8]);\n    auVar2 = aesdeclast(auVar2, pauVar1[9]);\n    *pauStackX24 = auVar2;\n    return;\n}\n",
        "token_count": 447
    },
    "00477c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nvoid fcn.00477c20(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    uchar (*pauVar6) [16];\n    uchar (*pauVar7) [16];\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar extraout_XMM0_01 [16];\n    uchar extraout_XMM0_02 [16];\n    uchar extraout_XMM0_03 [16];\n    uchar extraout_XMM0_04 [16];\n    uchar extraout_XMM0_05 [16];\n    uchar extraout_XMM0_06 [16];\n    uchar extraout_XMM0_07 [16];\n    uchar extraout_XMM0_08 [16];\n    uchar extraout_XMM0_09 [16];\n    uchar extraout_XMM0_10 [16];\n    uchar extraout_XMM0_11 [16];\n    uchar extraout_XMM0_12 [16];\n    uchar extraout_XMM0_13 [16];\n    uchar auVar8 [16];\n    int64_t iStackX8;\n    uchar (*pauStackX16) [16];\n    uchar (*pauStackX24) [16];\n    uint *puStackX32;\n    \n    auVar8 = *pauStackX16;\n    *pauStackX24 = auVar8;\n    pauVar6 = pauStackX24[1];\n    if (iStackX8 == 0xc) {\n        auVar8 = ZEXT816(*pauStackX16[1]);\n        aeskeygenassist(auVar8, 1);\n        fcn.00477a60();\n        aeskeygenassist(auVar8, 2);\n        fcn.00477ac0();\n        aeskeygenassist(auVar8, 4);\n        fcn.00477a60();\n        aeskeygenassist(auVar8, 8);\n        fcn.00477ac0();\n        aeskeygenassist(auVar8, 0x10);\n        fcn.00477a60();\n        aeskeygenassist(auVar8, 0x20);\n        fcn.00477ac0();\n        aeskeygenassist(auVar8, 0x40);\n        fcn.00477a60();\n        aeskeygenassist(auVar8, 0x80);\n        fcn.00477ac0();\n    }\n    else if (iStackX8 < 0xc) {\n        aeskeygenassist(auVar8, 1);\n        fcn.00477a20();\n        aeskeygenassist(extraout_XMM0_05, 2);\n        fcn.00477a20();\n        aeskeygenassist(extraout_XMM0_06, 4);\n        fcn.00477a20();\n        aeskeygenassist(extraout_XMM0_07, 8);\n        fcn.00477a20();\n        aeskeygenassist(extraout_XMM0_08, 0x10);\n        fcn.00477a20();\n        aeskeygenassist(extraout_XMM0_09, 0x20);\n        fcn.00477a20();\n        aeskeygenassist(extraout_XMM0_10, 0x40);\n        fcn.00477a20();\n        aeskeygenassist(extraout_XMM0_11, 0x80);\n        fcn.00477a20();\n        aeskeygenassist(extraout_XMM0_12, 0x1b);\n        fcn.00477a20();\n        aeskeygenassist(extraout_XMM0_13, 0x36);\n        fcn.00477a20();\n    }\n    else {\n        auVar8 = pauStackX16[1];\n        *pauVar6 = auVar8;\n        pauVar6 = pauStackX24[2];\n        aeskeygenassist(auVar8, 1);\n        fcn.00477b00();\n        aeskeygenassist(extraout_XMM0, 1);\n        fcn.00477b20();\n        aeskeygenassist(auVar8, 2);\n        fcn.00477b00();\n        aeskeygenassist(extraout_XMM0_00, 2);\n        fcn.00477b20();\n        aeskeygenassist(auVar8, 4);\n        fcn.00477b00();\n        aeskeygenassist(extraout_XMM0_01, 4);\n        fcn.00477b20();\n        aeskeygenassist(auVar8, 8);\n        fcn.00477b00();\n        aeskeygenassist(extraout_XMM0_02, 8);\n        fcn.00477b20();\n        aeskeygenassist(auVar8, 0x10);\n        fcn.00477b00();\n        aeskeygenassist(extraout_XMM0_03, 0x10);\n        fcn.00477b20();\n        aeskeygenassist(auVar8, 0x20);\n        fcn.00477b00();\n        aeskeygenassist(extraout_XMM0_04, 0x20);\n        fcn.00477b20();\n        aeskeygenassist(auVar8, 0x40);\n        fcn.00477b00();\n    }\n    uVar1 = *(pauVar6[-1] + 4);\n    uVar2 = *(pauVar6[-1] + 8);\n    uVar3 = *(pauVar6[-1] + 0xc);\n    *puStackX32 = *pauVar6[-1];\n    puStackX32[1] = uVar1;\n    puStackX32[2] = uVar2;\n    puStackX32[3] = uVar3;\n    iVar4 = iStackX8 + -1;\n    pauVar6 = pauVar6[-1];\n    do {\n        pauVar7 = pauVar6;\n        puVar5 = puStackX32;\n        auVar8 = aesimc(pauVar7[-1]);\n        *(puVar5 + 4) = auVar8;\n        iVar4 = iVar4 + -1;\n        puStackX32 = puVar5 + 4;\n        pauVar6 = pauVar7[-1];\n    } while (iVar4 != 0);\n    uVar1 = *(pauVar7[-2] + 4);\n    uVar2 = *(pauVar7[-2] + 8);\n    uVar3 = *(pauVar7[-2] + 0xc);\n    puVar5[8] = *pauVar7[-2];\n    puVar5[9] = uVar1;\n    puVar5[10] = uVar2;\n    puVar5[0xb] = uVar3;\n    return;\n}\n",
        "token_count": 1507
    },
    "00478ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00478ec0(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (iVar2 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    while (iVar2 = iVar2 + 1,  iVar3 = iVar2,  iVar2 < unaff_RDI) {\n        while( true ) {\n            if (arg1 < iVar3) {\n                cVar1 = (**(in_RAX + 0x20))(iVar3 + -1);\n            }\n            else {\n                cVar1 = '\\0';\n            }\n            if (cVar1 == '\\0') break;\n            (**(in_RAX + 0x28))();\n            iVar3 = iVar3 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "00478fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00478fe0(void)\n\n{\n    int64_t in_RAX;\n    ulong arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    arg1 = (**(in_RAX + 0x18))();\n    fcn.00479040(arg1);\n    return;\n}\n",
        "token_count": 112
    },
    "00479540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00479540(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RSI;\n    int64_t iVar2;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    arg1 = unaff_RDI - arg1;\n    iVar2 = unaff_RSI - unaff_RDI;\n    while (iVar2 != arg1) {\n        if (iVar2 < arg1) {\n            for (iVar1 = 0; iVar1 < iVar2; iVar1 = iVar1 + 1) {\n                (**(in_RAX + 0x28))(iVar1 + unaff_RDI, unaff_RDI - arg1);\n            }\n            arg1 = arg1 - iVar2;\n        }\n        else {\n            for (iVar1 = 0; iVar1 < arg1; iVar1 = iVar1 + 1) {\n                (**(in_RAX + 0x28))(iVar1 + ((unaff_RDI + iVar2) - arg1), unaff_RDI - arg1);\n            }\n            iVar2 = iVar2 - arg1;\n        }\n    }\n    for (iVar2 = 0; iVar2 < arg1; iVar2 = iVar2 + 1) {\n        (**(in_RAX + 0x28))(iVar2 + unaff_RDI, unaff_RDI - arg1, iVar2 + (unaff_RDI - arg1));\n    }\n    return;\n}\n",
        "token_count": 376
    },
    "0047b260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047b260(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = 0x47b291;\n            iVar5 = fcn.00444b80(unaff_RBX);\n            arg1 = *(*0x20 + 0x10);\n            iVar4 = *(*0x20 + 8);\n            unaff_RBX = 0;\n            for (uVar6 = 0; uVar6 < arg1; uVar6 = uVar6 + 1) {\n                if (arg1 <= uVar6) goto code_r0x0047b391;\n                uVar2 = *(iVar4 + uVar6 * 2);\n                if ((uVar2 < 0xd800) || (0xdfff < uVar2)) {\n                    if (arg1 <= unaff_RBX) goto code_r0x0047b386;\n                    *(iVar5 + unaff_RBX * 4) = uVar2;\n                }\n                else {\n                    if ((uVar2 < 0xdc00) && (uVar1 = uVar6 + 1,  uVar1 < arg1)) {\n                        if (arg1 <= uVar1) goto code_r0x0047b37b;\n                        uVar3 = *(iVar4 + 2 + uVar6 * 2);\n                        if ((0xdbff < uVar3) && (uVar3 < 0xe000)) {\n                            if (unaff_RBX < arg1) {\n                                *(iVar5 + unaff_RBX * 4) = ((uVar2 - 0xd800) * 0x400 | uVar3 - 0xdc00) + 0x10000;\n                                uVar6 = uVar1;\n                                goto code_r0x0047b2a2;\n                            }\n                            goto code_r0x0047b370;\n                        }\n                    }\n                    if (arg1 <= unaff_RBX) goto code_r0x0047b365;\n                    *(iVar5 + unaff_RBX * 4) = 0xfffd;\n                }\ncode_r0x0047b2a2:\n                unaff_RBX = unaff_RBX + 1;\n            }\n            if (unaff_RBX <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x28) = 0x47b365;\n            fcn.0045cac0(unaff_RBX, arg1);\ncode_r0x0047b365:\n            *(*0x20 + -0x28) = 0x47b370;\n            fcn.0045ca40(arg1);\ncode_r0x0047b370:\n            *(*0x20 + -0x28) = 0x47b37b;\n            fcn.0045ca40(arg1);\ncode_r0x0047b37b:\n            *(*0x20 + -0x28) = 0x47b386;\n            fcn.0045ca40(arg1);\ncode_r0x0047b386:\n            *(*0x20 + -0x28) = 0x47b391;\n            fcn.0045ca40(arg1);\ncode_r0x0047b391:\n            *(*0x20 + -0x28) = 0x47b39c;\n            in_RAX = fcn.0045ca40(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x47b3b1;\n        fcn.0045a360();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1081
    },
    "0047bb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047bb60(ulong arg1)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = fcn.00459060(arg1);\n    fcn.00409d20();\n    return uVar1;\n}\n",
        "token_count": 108
    },
    "0047bfe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047bfe0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = 0x47c00e;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x30) = 0x47c030;\n                fcn.0047bb60(*(*0x20 + 0x18));\n                return;\n            }\n            *(*0x20 + -0x30) = 0x47c045;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x47c05f;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 509
    },
    "0047c1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047c1e0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack80 [72];\n    \n    while (auStack80 < *(unaff_R14 + 0x10) || auStack80 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (unaff_RBX <= iVar2) {\n            fcn.00448620(unaff_RBX);\n            fcn.00448c40(in_RAX);\n            uVar1 = fcn.0047b0c0(in_RAX);\n            return uVar1;\n        }\n        if (*(in_RAX + iVar2) == '\\0') break;\n        iVar2 = iVar2 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 217
    },
    "0047c2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047c2c0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    for (iVar1 = 0; (arg1_00 = unaff_RBX,  iVar1 < unaff_RBX && (arg1_00 = iVar1,  *(in_RAX + iVar1 * 2) != 0));\n        iVar1 = iVar1 + 1) {\n    }\n    fcn.0047b260(arg1);\n    fcn.00448e00(arg1_00);\n    return;\n}\n",
        "token_count": 202
    },
    "0047c620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047c620(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x57f0d0;\n            *(*0x20 + -0x48) = 0x47c652;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x47c678;\n                iVar2 = fcn.00458d40(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x576ca0;\n                    if ((iVar1 != 0) && (uVar3 = *0x576cb0,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x47c6b6;\n                        fcn.00409d20();\n                        uVar3 = 0x4fa138;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x47c6e5;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x47c6f0;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 513
    },
    "0047c700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047c700(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x57f1a0;\n            *(*0x20 + -0x48) = 0x47c732;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x47c758;\n                iVar2 = fcn.00458d40(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x576ca0;\n                    if ((iVar1 != 0) && (uVar3 = *0x576cb0,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x47c796;\n                        fcn.00409d20();\n                        uVar3 = 0x4fa138;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x47c7c5;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x47c7d0;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 511
    },
    "0047c7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047c7e0(ulong arg1, ulong noname_1, int64_t arg3, ulong arg4)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint64_t arg1_00;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RSI;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x1c) = unaff_EDI;\n            *(*0x20 + 0x28) = arg3;\n            *(*0x20 + -0x28) = unaff_RBX;\n            if (arg3 == 0) {\n                unaff_RSI = 0;\n            }\n            *(*0x20 + -0x10) = unaff_RSI;\n            *(*0x20 + -0x18) = in_R10;\n            *(*0x20 + -0x20) = *0x57f1c8;\n            *(*0x20 + -0x90) = 0x47c853;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x88) = in_XMM15;\n                arg1_00 = *(*0x20 + 8);\n                *(*0x20 + -0x90) = 0x47c8ab;\n                uVar2 = fcn.00458e00(arg1_00, *(*0x20 + 0x1c), *(*0x20 + 0x1c), *(*0x20 + -0x10));\n                if (((uVar2 == 0) && (arg1_00 != 0)) && (arg1_00 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x90) = 0x47c8ea;\n                    fcn.00409d20();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x90) = 0x47c925;\n            in_EAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x1c) = unaff_EDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + 0x28) = arg3;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + -8) = 0x47c950;\n        fcn.0045a360();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x1c);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 966
    },
    "0047c980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047c980(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x57f200;\n            *(*0x20 + -0x40) = 0x47c9a6;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x40) = 0x47c9c8;\n                fcn.00458d40(0);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x47c9dd;\n            fcn.00432920();\n        }\n        *(puVar2 + -8) = 0x47c9e5;\n        fcn.0045a360();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 312
    },
    "0047cb00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047cb00(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = *0x57f238;\n            *(*0x20 + -0x58) = 0x47cb38;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x58) = 0x47cb72;\n                uVar2 = fcn.00458d40(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x58) = 0x47cbb1;\n                    fcn.00409d20();\n                    uVar2 = *(*0x20 + -0x28);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x58) = 0x47cbe5;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x47cbf9;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 590
    },
    "0047cf20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047cf20(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x57f3e8;\n            *(*0x20 + -0x48) = 0x47cf56;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x47cf87;\n                iVar2 = fcn.00458d40(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x576ca0;\n                    if ((iVar1 != 0) && (uVar3 = *0x576cb0,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x47cfc5;\n                        fcn.00409d20();\n                        uVar3 = 0x4fa138;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x47cff0;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x47cfff;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 557
    },
    "0047d140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047d140(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x38) = in_R11;\n            *(*0x20 + -0x40) = in_RAX;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x20) = arg4;\n            *(*0x20 + -0x28) = in_R10;\n            *(*0x20 + -0x30) = *0x57f458;\n            *(*0x20 + -0xa0) = 0x47d1b5;\n            arg1 = *0x57f458;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x98) = *(*0x20 + -0x28);\n                *(*0x20 + -0x90) = *(*0x20 + -0x38);\n                iVar1 = *(*0x20 + -0x40);\n                *(*0x20 + -0xa0) = 0x47d21f;\n                iVar2 = fcn.00458e00(iVar1, *(*0x20 + 0x30), *(*0x20 + 0x20), *(*0x20 + -0x18));\n                if (iVar2 == 0xffffffff) {\n                    uVar3 = *0x576ca0;\n                    if ((iVar1 != 0) && (uVar3 = *0x576cb0,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xa0) = 0x47d265;\n                        fcn.00409d20();\n                        uVar3 = 0x4fa138;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xa0) = 0x47d296;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_EDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + 0x40) = in_R10;\n        *(puVar4 + 0x48) = in_R11;\n        *(puVar4 + -8) = 0x47d2c7;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_EDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3._0_4_ = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        in_R10 = *(puVar4 + 0x40);\n        in_R11 = *(puVar4 + 0x48);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1037
    },
    "0047d300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047d300(void)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x57f480;\n            *(*0x20 + -0x48) = 0x47d336;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x48) = 0x47d365;\n                iVar1 = fcn.00458d40(*(*0x20 + 8));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x47d375;\n                    fcn.00409d20();\n                    uVar2 = 0x4fa138;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x48) = 0x47d397;\n            in_EAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x47d3a6;\n        fcn.0045a360();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 498
    },
    "00483040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00483040(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x57edd8;\n            *(*0x20 + -0x58) = 0x48307b;\n            iVar1 = fcn.0047bdc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x58) = 0x4830b2;\n                uVar2 = fcn.00458d40(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x58) = 0x4830f1;\n                    fcn.00409d20();\n                    uVar2 = *(*0x20 + -0x28);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x58) = 0x483125;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x483139;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 586
    },
    "00484240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00484240(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                uVar3 = *in_RAX;\n                if ((uVar3 & 1) != 0) {\n                    return 0;\n                }\n                uVar2 = (uVar3 | 1) + 8;\n                if ((uVar2 & 0x7ffff8) == 0) break;\n                LOCK();\n                uVar1 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar3 == uVar1) * (*in_RAX ^ uVar2 & 0x80000000007fffff);\n                if (uVar3 == uVar1) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    while ((uVar3 & 0x7ffff800000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x4842be;\n                        fcn.004581e0();\n                        uVar3 = *(*0x20 + -0x18) - 0x800000;\n                    }\n                    while ((uVar3 & 0x7ffff80000000000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x4842f0;\n                        fcn.004581e0();\n                        uVar3 = *(*0x20 + -0x18) - 0x80000000000;\n                    }\n                    return 1;\n                }\n            }\n            *(*0x20 + -0x30) = 0x48433b;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x484346;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 610
    },
    "00484400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00484400(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x5d3d88 == 0) {\n        fcn.00463780();\n    }\n    uVar1 = fcn.004574c0();\n    if (unaff_RBX == 0) {\n        *in_RAX = uVar1;\n        return 0;\n    }\n    uVar1 = *0x576a50;\n    if (unaff_RBX != 0x3e5) {\n        fcn.00409d20();\n        uVar1 = 0x4fa138;\n    }\n    return uVar1;\n}\n",
        "token_count": 215
    },
    "004844e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004844e0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong *puVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if ((0x4e2f < *0x20) && (*(unaff_R14 + 0x10) <= *0x20 + -0x4e30 && *0x20 + -0x4e30 != *(unaff_R14 + 0x10))) {\n            puVar4 = *0x20 + -0x4eb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x4eb8) = 0x48451d;\n            iVar2 = fcn.0047bdc0();\n            if (iVar2 != 0) {\n                return;\n            }\n            *(*0x20 + -0x4e90) = 0;\n            *(*0x20 + -0x4e90) = 6;\n            puVar5 = *0x20 + -0x4e88;\n            for (iVar2 = 0x9d0; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *(*0x20 + -0x4e94) = 0x4e80;\n            *(*0x20 + -0x4eb8) = 0x484565;\n            iVar1 = fcn.0047d020(*0x20 + -0x4e94);\n            if (*0x20 != 0x4e88) {\n                return;\n            }\n            iVar3 = 0;\n            while( true ) {\n                if (iVar1 <= iVar3) {\n                    *0x5d3b22 = 1;\n                    return;\n                }\n                if (0x1f < iVar3) break;\n                if ((*(iVar3 * 0x274) >> 0x11 & 1) == 0) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *0xffffffffffffffd0 = 0x4845e5;\n            fcn.0045ca40(0x20);\n        }\n        *(puVar4 + -8) = 0x4845eb;\n        fcn.0045a360();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 595
    },
    "00485160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00485160(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00482ec0();\n    fcn.0047c080();\n    return;\n}\n",
        "token_count": 90
    },
    "00485860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00485860(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004858a0();\n    return;\n}\n",
        "token_count": 81
    },
    "004858a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004858a0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            arg1 = 0x400;\n            while( true ) {\n                *(*0x20 + -0x1c) = arg1;\n                *(*0x20 + -0x40) = 0x4858dc;\n                iVar3 = fcn.00444b80(arg1);\n                if (*(*0x20 + -0x1c) == 0) break;\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x40) = 0x4858f7;\n                uVar2 = fcn.00483040(*(*0x20 + -0x1c));\n                if (iVar3 != 0) {\n                    return 0;\n                }\n                uVar1 = *(*0x20 + -0x1c);\n                if (uVar2 < uVar1) {\n                    *(*0x20 + -0x40) = 0x485910;\n                    uVar4 = fcn.0047c2c0(uVar1);\n                    return uVar4;\n                }\n                arg1 = uVar1 + 0x400;\n            }\n            *(*0x20 + -0x40) = 0x485939;\n            in_RAX = fcn.0045ca40(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x485945;\n        fcn.0045a360();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 538
    },
    "00486a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00486a00(void)\n\n{\n    char unaff_BL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (unaff_BL == '\\0') {\n        fcn.00486740(5);\n    }\n    else {\n        fcn.00486740(4);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00488b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00488b80(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong arg1_00;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    iVar1 = fcn.004889e0();\n    fcn.0048e160(unaff_RBX, in_RDX, uStack0000000000000028);\n    arg1_00 = *(iVar1 + 8);\n    uVar2 = fcn.004489c0(arg1_00);\n    fcn.00488a80(arg1_00, in_RDX, uStack0000000000000028);\n    return uVar2;\n}\n",
        "token_count": 239
    },
    "004894c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004894c0(uint64_t arg1)\n\n{\n    ulong in_RDX;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if ((arg1 == 0x74) || (arg1 == 0x76)) {\n        fcn.00486a00();\n    }\n    else {\n        fcn.00488fc0(arg1, in_RDX, in_R8);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0048ddc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0048ddc0(uint64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    char cVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI <= unaff_RSI) {\n                return unaff_RBX;\n            }\n            if (unaff_RSI < unaff_RDI) {\n                if (*(arg1 + unaff_RSI) != '[') {\n                    return unaff_RBX;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x30) = arg3;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + 0x28) = unaff_RSI;\n                *(in_RAX + 0xb0) = 1;\n                cVar2 = arg1 + (-(unaff_RDI - unaff_RSI) >> 0x3f & unaff_RSI);\n                *(*0x20 + -0x28) = 0x48de3c;\n                iVar1 = fcn.0048dce0();\n                if (((cVar2 != '\\0') && (-1 < iVar1)) && (iVar1 < *(*0x20 + 0x30))) {\n                    return iVar1;\n                }\n                *(*(*0x20 + 8) + 0xb1) = 0;\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x28) = 0x48de98;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045ca40(unaff_RDI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + 0x30) = arg3;\n        *(puVar3 + -8) = 0x48debc;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        arg3 = *(puVar3 + 0x30);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 762
    },
    "00490bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00490bc0(void)\n\n{\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00485160();\n    fcn.00490c40(in_RAX);\n    return;\n}\n",
        "token_count": 99
    },
    "00492d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00492d00(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = 0x492d2e;\n            iVar1 = fcn.00492ae0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x30) = 0x492d50;\n                fcn.00491e60(*(*0x20 + 0x18));\n                return;\n            }\n            *(*0x20 + -0x30) = 0x492d65;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x492d7f;\n        fcn.0045a360();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 507
    },
    "00492e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.00492e40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    if (*0x5d3da0 == 0) {\n        fcn.00463780();\n    }\n    return *0x5d3dac;\n}\n",
        "token_count": 105
    },
    "00493060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00493060(void)\n\n{\n    int32_t iVar1;\n    uint64_t arg2;\n    uint32_t uVar2;\n    ulong uVar3;\n    uint64_t arg1;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = 0x104;\n            do {\n                *(*0x20 + -0x1c) = uVar2;\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0x48) = 0x493097;\n                uVar3 = fcn.00444b80(uVar2);\n                arg1 = *(*0x20 + -0x18);\n                if (arg1 == 0) goto code_r0x00493130;\n                *(*0x20 + -0x10) = uVar3;\n                iVar1 = *(*0x20 + -0x1c);\n                *(*0x20 + -0x48) = 0x4930b7;\n                uVar2 = fcn.00493680();\n                if (iVar1 != 0) {\n                    return 0;\n                }\n            } while (*(*0x20 + -0x1c) < uVar2);\n            arg1 = uVar2;\n            arg2 = *(*0x20 + -0x18);\n            if (arg1 <= arg2) {\n                for (uVar4 = 0;\n                    (arg1_00 = arg1,  uVar4 < arg1 && (arg1_00 = uVar4,  *(*(*0x20 + -0x10) + uVar4 * 2) != 0));\n                    uVar4 = uVar4 + 1) {\n                }\n                *(*0x20 + -0x48) = 0x49310d;\n                fcn.0047b260(arg2);\n                *(*0x20 + -0x48) = 0x49311d;\n                uVar3 = fcn.00448e00(arg1_00);\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x493130;\n            fcn.0045cac0(arg1, arg2);\ncode_r0x00493130:\n            *(*0x20 + -0x48) = 0x493137;\n            fcn.0045ca40(arg1);\n        }\n        *(puVar5 + -8) = 0x49313d;\n        fcn.0045a360();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 690
    },
    "00493360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00493360(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack184;\n    uchar auStack80 [72];\n    \n    while (auStack80 < *(unaff_R14 + 0x10) || auStack80 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00402320(arg1, in_RDX);\n    if (iStack184 != -1) {\n        return 0;\n    }\n    fcn.00448620(unaff_RBX);\n    fcn.00448c40(in_RAX);\n    uVar1 = fcn.0047b0c0(in_RAX);\n    return uVar1;\n}\n",
        "token_count": 192
    },
    "00493460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00493460(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.00493580();\n    return;\n}\n",
        "token_count": 80
    },
    "004934a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004934a0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x57e0d0;\n            *(*0x20 + -0x48) = 0x4934d2;\n            iVar1 = fcn.00492ae0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x4934f8;\n                iVar2 = fcn.00458d40(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x576a20;\n                    if ((iVar1 != 0) && (uVar3 = *0x576a30,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x493536;\n                        fcn.00409d20();\n                        uVar3 = 0x4fa138;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x493565;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x493570;\n        fcn.0045a360();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 505
    },
    "00493580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00493580(void)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + -0x10) = *0x57e590;\n            *(*0x20 + -0x48) = 0x4935b1;\n            iVar1 = fcn.00492ae0();\n            if (iVar1 == 0) {\n                arg1 = *(*0x20 + 8);\n                *(*0x20 + -0x48) = 0x4935de;\n                iVar1 = fcn.00458d40(arg1);\n                if (((iVar1 == -1) && (arg1 != 0)) && (arg1 != 0x3e5)) {\n                    *(*0x20 + -0x18) = 0xffffffffffffffff;\n                    *(*0x20 + -0x48) = 0x493626;\n                    fcn.00409d20();\n                    iVar1 = *(*0x20 + -0x18);\n                }\n                return iVar1;\n            }\n            *(*0x20 + -0x48) = 0x493656;\n            in_EAX = fcn.00432920();\n        }\n        *(puVar2 + 8) = in_EAX;\n        *(puVar2 + -8) = 0x493665;\n        fcn.0045a360();\n        in_EAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 469
    },
    "00493840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00493840(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x28) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x57e690;\n            *(*0x20 + -0x60) = 0x493879;\n            iVar1 = fcn.00492ae0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x60) = 0x4938af;\n                iVar2 = fcn.00458d40(iVar1);\n                if (((iVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x30) = 0;\n                    *(*0x20 + -0x60) = 0x4938ef;\n                    fcn.00409d20();\n                    iVar2 = *(*0x20 + -0x30);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x60) = 0x493925;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x49393a;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 576
    },
    "00493960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00493960(ulong arg1)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    uint64_t arg1_00;\n    uchar unaff_BL;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0xc) = unaff_BL;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x10) = *0x57e790;\n            *(*0x20 + -0x48) = 0x493999;\n            iVar1 = fcn.00492ae0();\n            if (iVar1 == 0) {\n                arg1_00 = *(*0x20 + 8);\n                *(*0x20 + -0x48) = 0x4939da;\n                iVar1 = fcn.00458d40(arg1_00);\n                if (((iVar1 == 0) && (arg1_00 != 0)) && (arg1_00 != 0x3e5)) {\n                    *(*0x20 + -0x18) = 0;\n                    *(*0x20 + -0x48) = 0x493a1b;\n                    fcn.00409d20();\n                    iVar1 = *(*0x20 + -0x18);\n                }\n                return iVar1;\n            }\n            *(*0x20 + -0x48) = 0x493a4c;\n            in_EAX = fcn.00432920();\n        }\n        *(puVar2 + 8) = in_EAX;\n        puVar2[0xc] = unaff_BL;\n        *(puVar2 + 0x10) = arg1;\n        *(puVar2 + -8) = 0x493a5e;\n        fcn.0045a360();\n        in_EAX = *(puVar2 + 8);\n        unaff_BL = puVar2[0xc];\n        arg1._0_4_ = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 579
    },
    "004a4280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004a4280(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x57d778;\n            *(*0x20 + -0x40) = 0x4a42a6;\n            iVar1 = fcn.00492ae0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x40) = 0x4a42c8;\n                fcn.00458d40(0);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x4a42dd;\n            fcn.00432920();\n        }\n        *(puVar2 + -8) = 0x4a42e5;\n        fcn.0045a360();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 311
    },
    "004a9a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004a9a40(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x57ddd0;\n            *(*0x20 + -0x48) = 0x4a9a72;\n            iVar1 = fcn.00492ae0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x48) = 0x4a9a9d;\n                uVar2 = fcn.00458d40(*(*0x20 + -0x18));\n                return uVar2 & 0xffffffffffffff00 | uVar2 != 0;\n            }\n            *(*0x20 + -0x48) = 0x4a9ab8;\n            in_RAX = fcn.00432920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x4a9ac7;\n        fcn.0045a360();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 462
    },
    "004aad80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004aad80(ulong param_1)\n\n{\n    ulong uVar1;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    uVar1 = fcn.004aae00();\n    if (unaff_RDI != 0) {\n        return 0;\n    }\n    fcn.004aaee0(param_1);\n    fcn.004ab120();\n    return uVar1;\n}\n",
        "token_count": 146
    },
    "004ab120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004ab120(void)\n\n{\n    int64_t unaff_R14;\n    bool bVar1;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    bVar1 = *0x5d3bc0 == 99999999;\n    *0x5d3bc0 = *0x5d3bc0 + 1;\n    if (bVar1) {\n        *0x5d3bc0 = 0;\n    }\n    bVar1 = *0x5d3bc0 == 99999999;\n    *0x5d3bc0 = *0x5d3bc0 + 1;\n    if (bVar1) {\n        *0x5d3bc0 = 0;\n    }\n    fcn.004ab1a0();\n    return;\n}\n",
        "token_count": 216
    },
    "004ab820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004ab820(void)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a360();\n    }\n    fcn.004ab2c0();\n    fcn.0048f440();\n    fcn.004489c0(unaff_RBX);\n    fcn.004ab4e0();\n    return;\n}\n",
        "token_count": 121
    },
    "00401b20": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00401b20(ulong noname_0, ulong arg2)\n\n{\n    int32_t iStackX8;\n    \n    if (iStackX8 == 0) {\n        cpuid_basic_info(0);\n    }\n    else if (iStackX8 == 1) {\n        cpuid_Version_info(1);\n    }\n    else if (iStackX8 == 2) {\n        cpuid_cache_tlb_info(2);\n    }\n    else if (iStackX8 == 3) {\n        cpuid_serial_info(3);\n    }\n    else if (iStackX8 == 4) {\n        cpuid_Deterministic_Cache_Parameters_info(4);\n    }\n    else if (iStackX8 == 5) {\n        cpuid_MONITOR_MWAIT_Features_info(5);\n    }\n    else if (iStackX8 == 6) {\n        cpuid_Thermal_Power_Management_info(6);\n    }\n    else if (iStackX8 == 7) {\n        cpuid_Extended_Feature_Enumeration_info(7);\n    }\n    else if (iStackX8 == 9) {\n        cpuid_Direct_Cache_Access_info(9);\n    }\n    else if (iStackX8 == 10) {\n        cpuid_Architectural_Performance_Monitoring_info(10);\n    }\n    else if (iStackX8 == 0xb) {\n        cpuid_Extended_Topology_info(0xb);\n    }\n    else if (iStackX8 == 0xd) {\n        cpuid_Processor_Extended_States_info(0xd);\n    }\n    else if (iStackX8 == 0xf) {\n        cpuid_Quality_of_Service_info(0xf);\n    }\n    else if (iStackX8 == -0x7ffffffe) {\n        cpuid_brand_part1_info(0x80000002);\n    }\n    else if (iStackX8 == -0x7ffffffd) {\n        cpuid_brand_part2_info(0x80000003);\n    }\n    else if (iStackX8 == -0x7ffffffc) {\n        cpuid_brand_part3_info(0x80000004);\n    }\n    else {\n        cpuid(iStackX8);\n    }\n    return;\n}\n",
        "token_count": 498
    },
    "004316c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004316c0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = 0x4316ea;\n            fcn.00430ea0(0x15);\n            *(*0x20 + -0x28) = 0x431709;\n            fcn.00432920();\n        }\n        *(puVar1 + -8) = 0x43170f;\n        fcn.0045a360();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 233
    },
    "00431720": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00431720(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x431745;\n            fcn.00430f60();\n            iVar1 = *0x576be0;\n            if (*0x576be0 != 0) {\n                iVar1 = *(*0x576be0 + 8);\n            }\n            *(*0x20 + -0x20) = 0x431765;\n            fcn.00432920(iVar1);\n        }\n        *(puVar2 + -8) = 0x43176b;\n        fcn.0045a360();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 277
    },
    "00431d20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00431d20(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x431d45;\n            fcn.004330a0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x431d4b;\n        fcn.0045a360();\n    } while( true );\n}\n",
        "token_count": 178
    },
    "00431d60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00431d60(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x431d85;\n            fcn.004330a0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x431d8b;\n        fcn.0045a360();\n    } while( true );\n}\n",
        "token_count": 178
    },
    "00436240": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436240(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x436265;\n            fcn.004330a0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43626b;\n        fcn.0045a360();\n    } while( true );\n}\n",
        "token_count": 175
    },
    "00436280": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436280(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4362a5;\n            fcn.004330a0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x4362ab;\n        fcn.0045a360();\n    } while( true );\n}\n",
        "token_count": 177
    },
    "00436380": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436380(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint64_t arg1_00;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    puVar7 = &stack0xfffffffffffffff8;\n    iVar3 = fcn.004330a0();\n    puVar5 = auStack24;\n    do {\n        puVar6 = puVar5;\n        if (*(unaff_R14 + 0x10) <= puVar5 && puVar5 != *(unaff_R14 + 0x10)) {\n            puVar6 = puVar5 + -0x50;\n            *(puVar5 + -8) = puVar7;\n            puVar7 = puVar5 + -8;\n            if (*(iVar3 + 0x90) != 0) {\n                *(puVar5 + 8) = iVar3;\n                *(puVar5 + -0x58) = 0x4363db;\n                fcn.0040a360();\n                uVar2 = *0x57fc70;\n                arg1_00 = *0x57fc78;\n                uVar4 = *0x57fc70;\n                if (*0x57fc80 < *0x57fc78 + 1) {\n                    *(puVar5 + -0x58) = 0x436405;\n                    arg1 = *0x57fc78;\n                    uVar4 = fcn.00444c60(*0x57fc78);\n                    arg1_00 = uVar2;\n                    uVar2 = uVar4;\n                    *0x57fc80 = arg1;\n                    if (*0x5d3dd0 != 0) {\n                        *(puVar5 + -0x58) = 0x43642a;\n                        uVar4 = fcn.0045c5a0(arg1, param_2, param_3, param_4);\n                        uVar2 = *0x57fc70;\n                    }\n                }\n                *0x57fc70 = uVar2;\n                *0x57fc78 = arg1_00 + 1;\n                if (*0x5d3dd0 == 0) {\n                    param_2 = *(puVar5 + 8);\n                    *(uVar4 + arg1_00 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(puVar5 + 8);\n                    *(puVar5 + -0x58) = 0x43645d;\n                    fcn.0045c6c0(arg1_00, param_2, param_3, param_4);\n                }\n                if (*0x57fc78 != 0) {\n                    uVar2 = *0x57ef70;\n                    if ((*0x57ef70 != *0x57fc70) && (uVar2 = *0x57fc70,  *0x5d3dd0 != '\\0')) {\n                        *(puVar5 + -0x10) = *0x57fc70;\n                        *(puVar5 + -0x58) = 0x436494;\n                        fcn.004031e0();\n                        uVar2 = *(puVar5 + -0x10);\n                    }\n                    *0x57ef70 = uVar2;\n                    uVar1 = *0x5d3be8;\n                    *0x5d3be8 = *0x57fc78;\n                    *(puVar5 + -0x58) = 0x4364c5;\n                    fcn.0040a580(uVar1);\n                    return;\n                }\n                *(puVar5 + -0x58) = 0x4364d6;\n                fcn.0045ca40(0);\n            }\n            *(puVar5 + -0x58) = 0x4364e7;\n            iVar3 = fcn.004330a0();\n        }\n        *(puVar6 + 8) = iVar3;\n        *(puVar6 + -8) = 0x4364f2;\n        fcn.0045a360();\n        iVar3 = *(puVar6 + 8);\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 991
    },
    "00441960": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00441960(void)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    \n    uVar3 = *(in_RAX + 0x998);\n    if (uVar3 != 0) {\n        LOCK();\n        puVar1 = in_RAX + 0x998;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n        if (uVar3 == uVar4) {\n            return uVar3;\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 400);\n        if (uVar2 == *(in_RAX + 0x194)) {\n            return 0;\n        }\n        uVar3 = *(in_RAX + 0x198 + (uVar2 & 0xff) * 8);\n        LOCK();\n    } while (uVar2 != *(in_RAX + 400));\n    *(in_RAX + 400) = uVar2 + 1;\n    return uVar3;\n}\n",
        "token_count": 268
    },
    "0044ef40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044ef40(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x44ef65;\n            fcn.004330a0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x44ef6b;\n        fcn.0045a360();\n    } while( true );\n}\n",
        "token_count": 178
    },
    "0045c140": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045c140(void)\n\n{\n    int32_t iStackX8;\n    \n    do {\n        iStackX8 = iStackX8 + -1;\n    } while (iStackX8 != 0);\n    return;\n}\n",
        "token_count": 55
    },
    "0045ca40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045ca40(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x431014;\n            fcn.00430ea0(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            *(*0x20 + -0x40) = 0x431050;\n            arg1 = fcn.00409c20();\n            *(*0x20 + -0x40) = 0x43105f;\n            in_RAX = fcn.00432920();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x43106f;\n        fcn.0045a360();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 447
    },
    "0045ca60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045ca60(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x4310b4;\n            fcn.00430ea0(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            *(*0x20 + -0x40) = 0x4310f0;\n            arg1 = fcn.00409c20();\n            *(*0x20 + -0x40) = 0x4310ff;\n            in_RAX = fcn.00432920();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x43110f;\n        fcn.0045a360();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 451
    },
    "0045ca80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045ca80(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x431154;\n            fcn.00430ea0(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 1;\n            *(*0x20 + -0x40) = 0x431190;\n            arg2 = fcn.00409c20();\n            *(*0x20 + -0x40) = 0x43119f;\n            arg1 = fcn.00432920();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x4311af;\n        fcn.0045a360();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 441
    },
    "0045cac0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045cac0(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x431294;\n            fcn.00430ea0(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            *(*0x20 + -0x40) = 0x4312d0;\n            arg2 = fcn.00409c20();\n            *(*0x20 + -0x40) = 0x4312df;\n            arg1 = fcn.00432920();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x4312ef;\n        fcn.0045a360();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 443
    },
    "0045cae0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045cae0(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x431334;\n            fcn.00430ea0(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            *(*0x20 + -0x40) = 0x431370;\n            arg2 = fcn.00409c20();\n            *(*0x20 + -0x40) = 0x43137f;\n            arg1 = fcn.00432920();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x43138f;\n        fcn.0045a360();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 441
    },
    "0045cb00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045cb00(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x4313d4;\n            fcn.00430ea0(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            *(*0x20 + -0x40) = 0x431410;\n            arg1 = fcn.00409c20();\n            *(*0x20 + -0x40) = 0x43141f;\n            in_RAX = fcn.00432920();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x43142f;\n        fcn.0045a360();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 449
    },
    "0045cb20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045cb20(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x431474;\n            fcn.00430ea0(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            *(*0x20 + -0x40) = 0x4314b0;\n            arg1 = fcn.00409c20();\n            *(*0x20 + -0x40) = 0x4314bf;\n            in_RAX = fcn.00432920();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x4314cf;\n        fcn.0045a360();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 449
    },
    "0045cb40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045cb40(ulong noname_0, ulong arg2)\n\n{\n    ulong unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x431514;\n            fcn.00430ea0(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            *(*0x20 + -0x40) = 0x431550;\n            unaff_RBX = fcn.00409c20();\n            *(*0x20 + -0x40) = 0x43155f;\n            arg2 = fcn.00432920();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x43156f;\n        fcn.0045a360();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 458
    },
    "0045cb60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045cb60(ulong noname_0, ulong arg2)\n\n{\n    ulong unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x4315b4;\n            fcn.00430ea0(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            *(*0x20 + -0x40) = 0x4315f0;\n            unaff_RBX = fcn.00409c20();\n            *(*0x20 + -0x40) = 0x4315ff;\n            arg2 = fcn.00432920();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x43160f;\n        fcn.0045a360();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 462
    },
    "0045ea60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0045ea60(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int64_t unaff_RDI;\n    int64_t in_GS_OFFSET;\n    uchar auStack24 [16];\n    \n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar7 = &stack0xfffffffffffffff8;\n    uVar3 = fcn.004330a0();\n    puVar5 = auStack24;\n    do {\n        puVar1 = iVar2 + 0x10;\n        puVar6 = puVar5;\n        if (*puVar1 <= puVar5 && puVar5 != *puVar1) {\n            puVar6 = puVar5 + -0x40;\n            *(puVar5 + -8) = puVar7;\n            puVar7 = puVar5 + -8;\n            *(puVar5 + -0x10) = uVar3;\n            *(puVar5 + -0x48) = 0x45835e;\n            iVar4 = fcn.004495c0();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(puVar5 + -0x20) = iVar4;\n            *(puVar5 + -0x48) = 0x45836f;\n            uVar3 = fcn.004490c0();\n            if (unaff_RDI != 0) {\n                *(puVar5 + -0x28) = 0x32;\n                *(puVar5 + -0x18) = uVar3;\n                *(puVar5 + -0x48) = 0x458390;\n                fcn.0045d380(*(puVar5 + -0x20));\n                return *(puVar5 + -0x18);\n            }\n            *(puVar5 + -0x48) = 0x4583bc;\n            uVar3 = fcn.0045ca40(0);\n        }\n        *(puVar6 + 8) = uVar3;\n        *(puVar6 + -8) = 0x4583c7;\n        fcn.0045a360();\n        uVar3 = *(puVar6 + 8);\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 537
    }
}