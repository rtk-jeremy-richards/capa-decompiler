{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_5ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    // [00] -r-x section size 24576 named .text\n    iVar3 = *0x429210;\n    if (arg_ch == 0xf) {\n        uVar4 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_5ch);\n        var_ch = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_1ch);\n        iVar5 = var_10h;\n        pcVar2 = _sym.imp.GDI32.dll_DeleteObject;\n        var_10h = 0;\n        for (; var_18h < iVar5; var_18h = var_18h + 4) {\n            iVar7 = iVar5 - var_18h;\n            var_8h = CONCAT11((*(iVar3 + 0x52) * iVar7 + *(iVar3 + 0x56) * var_18h) / iVar5, \n                              (*(iVar3 + 0x51) * iVar7 + *(iVar3 + 0x55) * var_18h) / iVar5) << 8 |\n                     (*(iVar3 + 0x50) * iVar7 + *(iVar3 + 0x54) * var_18h) / iVar5 & 0xffU;\n            uVar6 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            var_10h = var_10h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar4, &var_1ch, uVar6);\n            (*pcVar2)(uVar6);\n        }\n        if (*(iVar3 + 0x58) != -1) {\n            iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectW)(*(iVar3 + 0x34));\n            if (iVar5 != 0) {\n                var_1ch = 0x10;\n                var_18h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar4, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar4, *(iVar3 + 0x58));\n                pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n                uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, iVar5);\n                (*_sym.imp.USER32.dll_DrawTextW)(uVar4, 0x428200, 0xffffffff, &var_1ch, 0x820);\n                (*pcVar1)(uVar4, uVar6);\n                (*pcVar2)(iVar5);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_5ch);\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = *0x429208;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_DefWindowProcW)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar4;\n}\n",
        "token_count": 846
    },
    "004063ee": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004063ee(uint *param_1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    bool bVar14;\n    uint var_90h;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    int32_t var_78h;\n    uint32_t var_74h;\n    uint8_t *var_70h;\n    int32_t var_6ch;\n    uint8_t *var_68h;\n    int32_t var_64h;\n    uint32_t var_60h;\n    uint var_5ch;\n    uint16_t *var_58h;\n    uint16_t *var_54h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint32_t dwBytes;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t hMem;\n    \n    puVar12 = param_1;\n    puVar13 = &var_88h;\n    for (iVar8 = 0x22; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar13 = *puVar12;\n        puVar12 = puVar12 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    uVar9 = var_44h;\n    puVar11 = var_54h;\n    if (var_30h == -1) {\n        return 1;\n    }\ncode_r0x00406421:\n    do {\n        uVar5 = var_20h;\n        uVar7 = var_2ch;\n        puVar4 = var_68h;\n        puVar3 = var_70h;\n        if (0x1c < var_88h) {\n            return 0xffffffff;\n        }\n    // switch table (29 cases) at 0x406e40\n        switch(*(var_88h * 4 + 0x406e40)) {\n        case 0x406437:\n            if (var_6ch == 0) goto code_r0x00406e23;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            uVar1 = *puVar3;\n            if (0xe1 < uVar1) {\n                return 0xffffffff;\n            }\n            var_3ch = (uVar1 % 0x2d) % 9;\n            var_1ch = (1 << uVar1 / 0x2d) - 1;\n            var_18h = (1 << (uVar1 % 0x2d) / 9) - 1;\n            iVar10 = (0x300 << var_3ch + uVar1 / 0x2d) + 0x736;\n            iVar8 = iVar10 * 2;\n            if (iVar8 != var_78h) {\n                if (hMem != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(hMem);\n                }\n                hMem = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar8);\n                if (hMem == 0) {\n                    return 0xffffffff;\n                }\n                var_78h = iVar8;\n            }\n            while (iVar10 != 0) {\n                iVar10 = iVar10 + -1;\n                *(hMem + iVar10 * 2) = 0x400;\n            }\n            dwBytes = 0;\n            for (var_48h = 0; var_48h < 4; var_48h = var_48h + 1) {\ncode_r0x004064dc:\n                if (var_6ch == 0) {\n                    var_88h = 1;\n                    goto code_r0x00406e23;\n                }\n                var_6ch = var_6ch + -1;\n                dwBytes = dwBytes | *var_70h << (var_48h << 3 & 0x1f);\n                var_70h = var_70h + 1;\n            }\n            if (dwBytes != var_74h) {\n                var_74h = dwBytes;\n                if (var_8h != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(var_8h);\n                }\n                var_8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n                if (var_8h == 0) {\n                    return 0xffffffff;\n                }\n            }\n            var_48h = 5;\n            *(var_8h + -1 + var_74h) = 0;\n            while (uVar7 = var_48h,  var_48h = var_48h - 1,  uVar7 != 0) {\ncode_r0x0040654c:\n                if (var_6ch == 0) {\n                    var_88h = 3;\n                    goto code_r0x00406e23;\n                }\n                var_6ch = var_6ch + -1;\n                uVar1 = *var_70h;\n                var_70h = var_70h + 1;\n                var_ch = var_ch << 8 | uVar1;\n            }\n        case 0x406577:\n            var_84h = 6;\n            var_4ch = var_60h & var_1ch;\n            puVar11 = hMem + (var_38h * 0x10 + (var_60h & var_1ch)) * 2;\n            break;\n        case 0x4064dc:\n            goto code_r0x004064dc;\n        case 0x40654c:\n            goto code_r0x0040654c;\n        case 0x40659d:\n            if (dwBytes != 0) {\n                var_34h = 1;\n                var_84h = 7;\n                puVar11 = hMem + 0x180 + var_38h * 2;\n                break;\n            }\n            var_58h = ((var_5ch >> (8 - var_3ch & 0x1f)) + ((var_60h & var_18h) << (var_3ch & 0x1f))) * 0x600 + 0xe6c +\n                      hMem;\n            if (var_38h < 4) {\n                var_38h = 0;\n            }\n            else if (var_38h < 10) {\n                var_38h = var_38h + -3;\n            }\n            else {\n                var_38h = var_38h + -6;\n            }\n            if (var_34h != 0) {\n                uVar7 = var_14h - var_2ch;\n                if (var_74h <= uVar7) {\n                    uVar7 = uVar7 + var_74h;\n                }\n                uVar9 = 1;\n                var_5ch._1_1_ = *(uVar7 + var_8h);\n                do {\n                    uVar1 = var_5ch._1_1_;\n                    var_5ch._1_1_ = var_5ch._1_1_ << 1;\n                    var_48h = uVar1 >> 7;\n                    puVar11 = var_58h + ((uVar1 >> 7) + 1) * 0x100 + uVar9;\n                    uVar2 = *puVar11;\n                    var_54h = puVar11;\n                    uVar7 = (var_10h >> 0xb) * uVar2;\n                    bVar14 = uVar7 <= var_ch;\n                    if (bVar14) {\n                        var_10h = var_10h - uVar7;\n                        var_ch = var_ch - uVar7;\n                        dwBytes = 1;\n                        uVar9 = uVar9 * 2 + 1;\n                        *puVar11 = uVar2 - (uVar2 >> 5);\n                    }\n                    else {\n                        dwBytes = 0;\n                        var_10h = uVar7;\n                        uVar9 = uVar9 * 2;\n                        *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                    }\n                    dwBytes = bVar14;\n                    var_44h = uVar9;\n                    if (var_10h < 0x1000000) {\ncode_r0x00406636:\n                        if (var_6ch == 0) {\n                            var_88h = 0xd;\n                            goto code_r0x00406e23;\n                        }\n                        var_10h = var_10h << 8;\n                        uVar1 = *var_70h;\n                        var_6ch = var_6ch + -1;\n                        var_70h = var_70h + 1;\n                        var_ch = var_ch << 8 | uVar1;\n                    }\n                    if (var_48h != dwBytes) goto code_r0x00406714;\n                } while (uVar9 < 0x100);\n                goto code_r0x00406778;\n            }\n            uVar9 = 1;\n            do {\n                puVar11 = var_58h + uVar9;\n                uVar2 = *puVar11;\n                var_54h = puVar11;\n                uVar7 = (var_10h >> 0xb) * uVar2;\n                if (var_ch < uVar7) {\n                    var_10h = uVar7;\n                    uVar9 = uVar9 * 2;\n                    *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_10h = var_10h - uVar7;\n                    var_ch = var_ch - uVar7;\n                    uVar9 = uVar9 * 2 + 1;\n                    *puVar11 = uVar2 - (uVar2 >> 5);\n                }\n                var_44h = uVar9;\n                if (var_10h < 0x1000000) {\ncode_r0x004067b3:\n                    if (var_6ch == 0) {\n                        var_88h = 0xf;\n                        goto code_r0x00406e23;\n                    }\n                    var_10h = var_10h << 8;\n                    uVar1 = *var_70h;\n                    var_6ch = var_6ch + -1;\n                    var_70h = var_70h + 1;\n                    var_ch = var_ch << 8 | uVar1;\n                }\n            } while (uVar9 < 0x100);\n            goto code_r0x0040677c;\n        case 0x406636:\n            goto code_r0x00406636;\n        case 0x4066ef:\n            goto code_r0x004066ef;\n        case 0x406782:\n            goto code_r0x00406782;\n        case 0x4067b3:\n            goto code_r0x004067b3;\n        case 0x40683c:\n            if (dwBytes != 1) {\n                var_80h = 0x16;\n                var_20h = var_24h;\n                var_24h = var_28h;\n                var_28h = var_2ch;\n                var_38h = ((6 < var_38h) - 1 & 0xfffffffd) + 10;\n                var_58h = hMem + 0x664;\n                goto code_r0x00406894;\n            }\n            var_84h = 8;\n            puVar11 = hMem + 0x198 + var_38h * 2;\n            break;\n        case 0x4068a6:\n            if (dwBytes == 0) {\n                var_84h = 9;\n                puVar11 = hMem + ((var_38h + 0xf) * 0x10 + var_4ch) * 2;\n            }\n            else {\n                var_84h = 10;\n                puVar11 = hMem + 0x1b0 + var_38h * 2;\n            }\n            break;\n        case 0x4068e9:\n            if (dwBytes != 0) goto code_r0x004069a4;\n            if (var_60h == 0) {\n                return 0xffffffff;\n            }\n            var_38h = (6 < var_38h) * 2 + 9;\n        case 0x40690d:\n            if (var_64h == 0) {\n                var_88h = 0x1b;\n                goto code_r0x00406e23;\n            }\n            uVar7 = var_14h - var_2ch;\n            if (var_74h <= uVar7) {\n                uVar7 = uVar7 + var_74h;\n            }\n            var_5ch._0_1_ = *(uVar7 + var_8h);\n            *(var_14h + var_8h) = var_5ch;\n            var_60h = var_60h + 1;\n            var_68h = var_68h + 1;\n            var_64h = var_64h + -1;\n            *puVar4 = var_5ch;\n            goto code_r0x00406948;\n        case 0x40695a:\n            if (dwBytes == 0) goto code_r0x0040699b;\n            var_84h = 0xb;\n            puVar11 = hMem + 0x1c8 + var_38h * 2;\n            break;\n        case 0x406981:\n            uVar6 = var_24h;\n            if (dwBytes != 0) {\n                var_20h = var_24h;\n                uVar6 = uVar5;\n            }\n            var_24h = var_28h;\n            var_28h = uVar6;\ncode_r0x0040699b:\n            var_2ch = var_28h;\n            var_28h = uVar7;\ncode_r0x004069a4:\n            var_80h = 0x15;\n            var_58h = hMem + 0xa68;\n        case 0x406894:\ncode_r0x00406894:\n            var_84h = 0x12;\n            puVar11 = var_58h;\n            break;\n        case 0x4069bb:\n            var_38h = ((6 < var_38h) - 1 & 0xfffffffd) + 0xb;\n            goto code_r0x00406b6c;\n        case 0x4069d2:\n            iVar8 = var_30h;\n            if (3 < var_30h) {\n                iVar8 = 3;\n            }\n            dwBytes = 6;\n            var_7ch = 0x19;\n            var_58h = iVar8 * 0x80 + 0x360 + hMem;\n            goto code_r0x00406cce;\n        case 0x406a00:\n            var_2ch = uVar9;\n            if (3 < uVar9) {\n                iVar8 = uVar9 >> 1;\n                dwBytes = iVar8 - 1;\n                uVar7 = (uVar9 & 1 | 2) << (dwBytes & 0x1f);\n                var_2ch = uVar7;\n                if (0xd < uVar9) {\n                    uVar9 = 0;\n                    var_48h = iVar8 - 5;\n                    goto code_r0x00406a6c;\n                }\n                var_58h = hMem + 0x55e + (uVar7 - uVar9) * 2;\ncode_r0x00406ab0:\n                uVar9 = 0;\n                var_50h = 1;\n                var_44h = 0;\n                for (var_48h = 0; var_48h < dwBytes; var_48h = var_48h + 1) {\n                    puVar11 = var_58h + var_50h;\n                    var_54h = puVar11;\n                    uVar2 = *puVar11;\n                    uVar7 = (var_10h >> 0xb) * uVar2;\n                    if (var_ch < uVar7) {\n                        var_10h = uVar7;\n                        var_50h = var_50h << 1;\n                        *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                    }\n                    else {\n                        var_10h = var_10h - uVar7;\n                        var_ch = var_ch - uVar7;\n                        uVar9 = var_44h | 1 << (var_48h & 0x1f);\n                        var_44h = uVar9;\n                        *puVar11 = uVar2 - (uVar2 >> 5);\n                        var_50h = var_50h * 2 + 1;\n                    }\n                    if (var_10h < 0x1000000) {\ncode_r0x00406ac4:\n                        if (var_6ch == 0) {\n                            var_88h = 0x10;\n                            goto code_r0x00406e23;\n                        }\n                        var_10h = var_10h << 8;\n                        uVar1 = *var_70h;\n                        var_6ch = var_6ch + -1;\n                        var_70h = var_70h + 1;\n                        var_ch = var_ch << 8 | uVar1;\n                    }\n                }\n                var_2ch = var_2ch + uVar9;\n            }\n            var_2ch = var_2ch + 1;\ncode_r0x00406b6c:\n            if (var_2ch == 0) {\n                var_30h = 0xffffffff;\n                goto code_r0x00406e23;\n            }\n            if (var_60h < var_2ch) {\n                return 0xffffffff;\n            }\n            var_30h = var_30h + 2;\n            var_60h = var_60h + var_30h;\ncode_r0x00406b8a:\n            do {\n                puVar3 = var_68h;\n                if (var_64h == 0) {\n                    var_88h = 0x1c;\n                    goto code_r0x00406e23;\n                }\n                uVar7 = var_14h - var_2ch;\n                if (var_74h <= uVar7) {\n                    uVar7 = uVar7 + var_74h;\n                }\n                var_5ch._0_1_ = *(uVar7 + var_8h);\n                *(var_14h + var_8h) = var_5ch;\n                var_68h = var_68h + 1;\n                var_64h = var_64h + -1;\n                var_30h = var_30h + -1;\n                *puVar3 = var_5ch;\n                var_14h = (var_14h + 1) % var_74h;\n            } while (0 < var_30h);\n            goto code_r0x0040694b;\n        case 0x406a41:\n            while (var_6ch != 0) {\n                var_10h = var_10h << 8;\n                uVar1 = *var_70h;\n                var_6ch = var_6ch + -1;\n                var_70h = var_70h + 1;\n                var_ch = var_ch << 8 | uVar1;\n                uVar7 = var_2ch;\n                do {\n                    var_48h = var_48h - 1;\ncode_r0x00406a6c:\n                    if (var_48h < 1) {\n                        dwBytes = 4;\n                        var_2ch = uVar7 + uVar9 * 0x10;\n                        var_58h = hMem + 0x644;\n                        goto code_r0x00406ab0;\n                    }\n                    uVar9 = uVar9 * 2;\n                    var_10h = var_10h >> 1;\n                    var_44h = uVar9;\n                    if (var_10h <= var_ch) {\n                        var_ch = var_ch - var_10h;\n                        uVar9 = uVar9 | 1;\n                        var_44h = uVar9;\n                    }\n                } while (0xffffff < var_10h);\n            }\n            var_88h = 0xc;\n            goto code_r0x00406e23;\n        case 0x406ac4:\n            goto code_r0x00406ac4;\n        case 0x406b8a:\n            goto code_r0x00406b8a;\n        case 0x406bd3:\n            if (dwBytes == 0) {\n                var_30h = 0;\n                iVar8 = var_4ch * 8 + 2;\ncode_r0x00406bea:\n                var_58h = var_58h + iVar8;\n                dwBytes = 3;\n                goto code_r0x00406cc7;\n            }\n            var_84h = 0x13;\n            puVar11 = var_58h + 1;\n            break;\n        case 0x406c0c:\n            goto code_r0x00406c0c;\n        case 0x406c5a:\n            goto code_r0x00406c5a;\n        case 0x406c90:\n            if (dwBytes == 0) {\n                var_30h = 8;\n                iVar8 = var_4ch * 8 + 0x82;\n                goto code_r0x00406bea;\n            }\n            var_58h = var_58h + 0x102;\n            var_30h = 0x10;\n            dwBytes = 8;\ncode_r0x00406cc7:\n            var_7ch = 0x14;\n        case 0x406cce:\ncode_r0x00406cce:\n            var_50h = 1;\n            for (var_48h = dwBytes; 0 < var_48h; var_48h = var_48h - 1) {\n                puVar11 = var_58h + var_50h;\n                var_54h = puVar11;\n                uVar2 = *puVar11;\n                uVar9 = (var_10h >> 0xb) * uVar2;\n                if (var_ch < uVar9) {\n                    var_10h = uVar9;\n                    var_50h = var_50h << 1;\n                    *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_10h = var_10h - uVar9;\n                    var_ch = var_ch - uVar9;\n                    *puVar11 = uVar2 - (uVar2 >> 5);\n                    var_50h = var_50h * 2 + 1;\n                }\n                if (var_10h < 0x1000000) {\ncode_r0x00406cdd:\n                    if (var_6ch == 0) {\n                        var_88h = 0x18;\n                        goto code_r0x00406e23;\n                    }\n                    var_10h = var_10h << 8;\n                    uVar1 = *var_70h;\n                    var_6ch = var_6ch + -1;\n                    var_70h = var_70h + 1;\n                    var_ch = var_ch << 8 | uVar1;\n                }\n            }\n            uVar9 = var_50h - (1 << (dwBytes & 0x1f));\n            var_44h = uVar9;\n            var_88h = var_7ch;\n            goto code_r0x00406c85;\n        case 0x406cdd:\n            goto code_r0x00406cdd;\n        case 0x406d81:\n            var_30h = var_30h + uVar9;\n            var_88h = var_80h;\n            goto code_r0x00406c85;\n        }\n        var_54h = puVar11;\ncode_r0x00406c0c:\n        uVar2 = *puVar11;\n        uVar7 = (var_10h >> 0xb) * uVar2;\n        bVar14 = uVar7 <= var_ch;\n        if (bVar14) {\n            var_10h = var_10h - uVar7;\n            var_ch = var_ch - uVar7;\n            dwBytes = 1;\n            *puVar11 = uVar2 - (uVar2 >> 5);\n        }\n        else {\n            var_10h = uVar7;\n            dwBytes = 0;\n            *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n        }\n        dwBytes = bVar14;\n        var_88h = var_84h;\n        if (var_10h < 0x1000000) {\ncode_r0x00406c5a:\n            if (var_6ch == 0) {\n                var_88h = 5;\n                goto code_r0x00406e23;\n            }\n            var_10h = var_10h << 8;\n            uVar1 = *var_70h;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            var_ch = var_ch << 8 | uVar1;\n            var_88h = var_84h;\n        }\ncode_r0x00406c85:\n    } while( true );\ncode_r0x00406714:\n    if (uVar9 < 0x100) {\n        puVar11 = var_58h + uVar9;\n        uVar2 = *puVar11;\n        var_54h = puVar11;\n        uVar7 = (var_10h >> 0xb) * uVar2;\n        if (var_ch < uVar7) {\n            var_10h = uVar7;\n            uVar9 = uVar9 * 2;\n            *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n        }\n        else {\n            var_10h = var_10h - uVar7;\n            var_ch = var_ch - uVar7;\n            uVar9 = uVar9 * 2 + 1;\n            *puVar11 = uVar2 - (uVar2 >> 5);\n        }\n        var_44h = uVar9;\n        if (var_10h < 0x1000000) {\ncode_r0x004066ef:\n            if (var_6ch == 0) {\n                var_88h = 0xe;\n                goto code_r0x00406e23;\n            }\n            var_10h = var_10h << 8;\n            uVar1 = *var_70h;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            var_ch = var_ch << 8 | uVar1;\n        }\n        goto code_r0x00406714;\n    }\ncode_r0x00406778:\n    var_34h = 0;\ncode_r0x0040677c:\n    var_5ch._0_1_ = var_44h;\ncode_r0x00406782:\n    if (var_64h == 0) {\n        var_88h = 0x1a;\ncode_r0x00406e23:\n        puVar12 = &var_88h;\n        for (iVar8 = 0x22; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *param_1 = *puVar12;\n            puVar12 = puVar12 + 1;\n            param_1 = param_1 + 1;\n        }\n        return 0;\n    }\n    var_60h = var_60h + 1;\n    var_68h = var_68h + 1;\n    var_64h = var_64h + -1;\n    *puVar4 = var_5ch;\n    *(var_14h + var_8h) = var_5ch;\ncode_r0x00406948:\n    var_14h = (var_14h + 1) % var_74h;\ncode_r0x0040694b:\n    var_88h = 2;\n    goto code_r0x00406421;\n}\n",
        "token_count": 6619
    },
    "00401434": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00401434(int32_t **hWndChildAfter)\n\n{\n    uint32_t *puVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t **ppiVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t *piVar12;\n    int32_t iVar13;\n    int32_t **ppiVar14;\n    uint uVar15;\n    int32_t **ppiVar16;\n    uint *puVar17;\n    bool bVar18;\n    uint in_stack_fffffce8;\n    uint in_stack_fffffcec;\n    uint uVar19;\n    uint uVar20;\n    uint lpFindFileData;\n    uint *puStack684;\n    uint *puStack680;\n    uint uStack672;\n    int32_t iStack668;\n    int32_t **ppiStack664;\n    uint var_280h;\n    int32_t lpFileOp;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t lpRect;\n    uint var_4ch;\n    int32_t var_48h;\n    uint lDistanceToMove;\n    ushort uStack68;\n    uint32_t var_3ch;\n    int32_t lpNumberOfBytesWritten;\n    int32_t lpFileName;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    int32_t *dwFileAttributes;\n    int32_t *var_24h;\n    int32_t *nNumberOfBytesToRead;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    int32_t **lptstrFilename;\n    int32_t **lpBuffer;\n    int32_t lpString2;\n    int32_t *nNumberOfBytesToWrite;\n    int32_t *var_4h;\n    \n    ppiVar9 = *0x40bd9c;\n    pcVar6 = _sym.imp.USER32.dll_ShowWindow;\n    lpString2 = *0x429208;\n    *0x40bd98 = &fcn.00401434::var_2ch;\n    ppiVar16 = hWndChildAfter;\n    ppiVar14 = &fcn.00401434::var_30h;\n    for (iVar13 = 7; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *ppiVar14 = *ppiVar16;\n        ppiVar16 = ppiVar16 + 1;\n        ppiVar14 = ppiVar14 + 1;\n    }\n    iVar13 = var_2ch * 0x800;\n    uVar15 = 0;\n    ppiVar16 = iVar13 + 0x42a000;\n    ppiVar14 = dwFileAttributes * 0x800 + 0x42a000;\n    var_4h = NULL;\n    if (0x43 < var_30h - 2U) goto code_r0x004029c7;\n    // switch table (68 cases) at 0x4029d9\n    lpBuffer = ppiVar14;\n    switch(*((var_30h - 2U) * 4 + 0x4029d9)) {\n    case 0x401491:\ncode_r0x00401493:\n        fcn.004051f2(in_stack_fffffce8, in_stack_fffffcec);\n        return 0x7fffffff;\n    case 0x40149d:\n        *0x4281cc = *0x4281cc + 1;\n        if (lpString2 == 0) {\n            return 0x7fffffff;\n        }\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        return 0x7fffffff;\n    case 0x4014b8:\n        iVar13 = fcn.0040136d(var_2ch);\n        piVar12 = fcn.00401389(iVar13 + -1, 0);\n        return piVar12;\n    case 0x4014cb:\n        fcn.004051f2(var_2ch, 0);\n        break;\n    case 0x4014d7:\n        iVar13 = fcn.00402b1d(0);\n        if (iVar13 < 2) {\n            iVar13 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar13);\n        break;\n    case 0x4014f1:\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(lpString2);\n        break;\n    case 0x4014ff:\n        iVar13 = var_2ch * 4;\n        if (var_24h == NULL) {\n            *(iVar13 + 0x4292c0) = *(iVar13 + 0x429280);\n            uVar15 = fcn.00402b1d(1);\n            *(var_2ch * 4 + 0x429280) = uVar15;\n        }\n        else {\n            *(iVar13 + 0x429280) = *(iVar13 + 0x4292c0);\n        }\n        break;\n    case 0x40153a:\n        puVar1 = var_24h * 4 + 0x429280;\n        uVar10 = *puVar1;\n        piVar12 = (&fcn.00401434::var_2ch)[uVar10 == 0];\n        *puVar1 = uVar10 & nNumberOfBytesToRead;\n        return piVar12;\n    case 0x40155b:\n        goto code_r0x0040296d;\n    case 0x40156b:\n        if (*0x4281d0 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x4281d0, dwFileAttributes);\n        }\n        if (*0x4281e4 != 0) {\n            (*pcVar6)(*0x4281e4, var_2ch);\n        }\n        break;\n    case 0x40159b:\n        uVar15 = fcn.00402b3a(0xfffffff0);\n        iVar13 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(uVar15, dwFileAttributes);\n        goto code_r0x004015ac;\n    case 0x4015b9:\n        hWndChildAfter = fcn.00402b3a(0xfffffff0);\n        piVar4 = fcn.00405a3e(hWndChildAfter);\n        if (piVar4 != NULL) {\n            do {\n                piVar4 = fcn.004059c0(piVar4, 0x5c);\n                iVar2 = *piVar4;\n                *piVar4 = 0;\n                iVar13 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(hWndChildAfter, 0);\n                if ((iVar13 == 0) &&\n                   ((iVar13 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar13 != 0xb7 ||\n                    (uVar10 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(hWndChildAfter),  (uVar10 & 0x10) == 0)))) {\n                    var_4h = var_4h + 1;\n                }\n                *piVar4 = iVar2;\n                piVar4 = piVar4 + 1;\n            } while (iVar2 != 0);\n        }\n        if (dwFileAttributes == NULL) goto code_r0x00402192;\n        fcn.00401423(0xffffffe6);\n        fcn.00405f48(0x435000, hWndChildAfter);\n        iVar13 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(hWndChildAfter);\n        if (iVar13 == 0) {\n            var_4h = var_4h + 1;\n        }\n        break;\n    case 0x40164d:\n        uVar15 = fcn.00402b3a(0);\n        iVar13 = fcn.0040628b(uVar15);\n        nNumberOfBytesToRead = dwFileAttributes;\n        goto joined_r0x004019ee;\n    case 0x40165e:\n        uVar15 = fcn.00402b3a(0xffffffd0);\n        uVar19 = fcn.00402b3a(0xffffffdf);\n        fcn.00402b3a(0x13);\n        iVar13 = (*_sym.imp.KERNEL32.dll_MoveFileW)(uVar15, uVar19);\n        if (iVar13 == 0) {\n            if ((var_24h == NULL) || (iVar13 = fcn.0040628b(uVar15),  iVar13 == 0)) goto code_r0x00402793;\n            fcn.00405de2(uVar15, uVar19);\n        }\n        goto code_r0x00402192;\n    case 0x4016af:\n        ppiVar16 = fcn.00402b3a(0);\n        ppiVar9 = lpBuffer;\n        iVar13 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(ppiVar16, 0x400, lpBuffer, &fcn.00401434::hWndChildAfter);\n        if (iVar13 == 0) {\ncode_r0x004016f3:\n            var_4h = 0x1;\n            *ppiVar9 = 0;\n        }\n        else if ((ppiVar16 < hWndChildAfter) && (*hWndChildAfter != 0)) {\n            iVar13 = fcn.0040628b(ppiVar16);\n            if (iVar13 == 0) goto code_r0x004016f3;\n            fcn.00405f48(hWndChildAfter, iVar13 + 0x2c);\n        }\n        if (var_24h == NULL) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameW)(ppiVar9, ppiVar9, 0x400);\n        }\n        break;\n    case 0x401718:\n        uVar15 = fcn.00402b3a(0xffffffff);\n        iVar13 = (*_sym.imp.KERNEL32.dll_SearchPathW)(0, uVar15, 0, 0x400, ppiVar16, &fcn.00401434::hWndChildAfter);\n        bVar18 = iVar13 == 0;\n        goto code_r0x00401734;\n    case 0x40173f:\n        uVar15 = fcn.00402b3a(0xffffffef);\n        iVar13 = fcn.00405be3(ppiVar16, uVar15);\n        goto code_r0x004015ac;\n    case 0x401752:\n        lpString2 = fcn.00402b3a(0x31);\n        hWndChildAfter = var_2ch & 7;\n        iVar13 = fcn.00405a0a(lpString2);\n        if (iVar13 == 0) {\n            uVar19 = 0x435000;\n            uVar15 = fcn.00405f48(0x409598, 0x435000, lpString2);\n            uVar15 = fcn.00405993(uVar15);\n            sub.KERNEL32.dll_lstrcatW(uVar15);\n        }\n        else {\n            uVar19 = 0x409598;\n            fcn.00405f48(0x409598);\n        }\n        fcn.004061dc(0x409598);\n        do {\n            if (2 < hWndChildAfter) {\n                iVar13 = fcn.0040628b(0x409598);\n                uVar10 = 0;\n                if (iVar13 != 0) {\n                    uVar10 = (*_sym.imp.KERNEL32.dll_CompareFileTime)\n                                       (iVar13 + 0x14, &fcn.00401434::nNumberOfBytesToRead);\n                }\n                hWndChildAfter = ((hWndChildAfter - 3U | 0x80000000) & uVar10) == 0;\n            }\n            if (hWndChildAfter == NULL) {\n                fcn.00405b8f(0x409598);\n            }\n            nNumberOfBytesToWrite = fcn.00405bb4(0x409598, 0x40000000, (hWndChildAfter != 0x1) + '\\x01');\n            if (nNumberOfBytesToWrite != 0xffffffff) {\n                fcn.004051f2(0xffffffea, lpString2);\n                *0x4292b4 = *0x4292b4 + 1;\n                iVar13 = fcn.00403062(var_24h, nNumberOfBytesToWrite, 0, 0);\n                *0x4292b4 = *0x4292b4 + -1;\n                if ((nNumberOfBytesToRead != 0xffffffff) || (var_1ch != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)\n                              (nNumberOfBytesToWrite, &fcn.00401434::nNumberOfBytesToRead, 0, \n                               &fcn.00401434::nNumberOfBytesToRead);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(nNumberOfBytesToWrite);\n                if (-1 < iVar13) goto code_r0x004029c7;\n                if (iVar13 == -2) {\n                    uVar8 = 0xffffffe9;\n                    fcn.00405f6a(0x409598, 0xffffffe9);\n                    uVar20 = 0x409598;\n                    sub.KERNEL32.dll_lstrcatW(uVar19, lpString2, 0x409598);\n                }\n                else {\n                    uVar8 = 0xffffffee;\n                    uVar20 = 0x409598;\n                    fcn.00405f6a(0x409598, 0xffffffee);\n                }\n                uVar19 = 0x200010;\n                uVar15 = 0x409598;\n                goto code_r0x00402239;\n            }\n            if (hWndChildAfter != NULL) {\n                fcn.004051f2(0xffffffe2, lpString2);\n                bVar18 = hWndChildAfter == 0x2;\n                goto code_r0x004015ae;\n            }\n            fcn.00405f48(0x40a598, 0x42a000);\n            fcn.00405f48(0x42a000, 0x409598);\n            fcn.00405f6a(0x409d98, var_18h);\n            fcn.00405f48(0x42a000, 0x40a598);\n            iVar13 = fcn.00405724();\n        } while (iVar13 == 4);\n        if (iVar13 != 5) {\n            in_stack_fffffcec = 0x409598;\n            in_stack_fffffce8 = 0xfffffffa;\n            goto code_r0x00401493;\n        }\n        *0x429288 = *0x429288 + 1;\n        goto code_r0x004029d0;\n    case 0x4018ef:\n        uVar15 = 0;\n        goto code_r0x00401926;\n    case 0x4018f2:\n        uVar15 = fcn.00402b3a(0x31);\n        piVar12 = fcn.00405724(uVar15, var_2ch);\n        if (piVar12 == NULL) goto code_r0x00402793;\n        if (piVar12 == var_24h) {\n            return nNumberOfBytesToRead;\n        }\n        if (piVar12 == var_1ch) {\n            return var_18h;\n        }\n        break;\n    case 0x401924:\n        uVar15 = 0xfffffff0;\ncode_r0x00401926:\n        uVar15 = fcn.00402b3a(uVar15);\n        fcn.004057d0(uVar15, dwFileAttributes);\n        break;\n    case 0x401939:\n        uVar15 = fcn.00402b3a(1);\n        sub.KERNEL32.dll_lstrlenW(uVar15);\n        goto code_r0x0040296d;\n    case 0x40194b:\n        hWndChildAfter = fcn.00402b1d(2);\n        iVar13 = fcn.00402b1d(3);\n        nNumberOfBytesToWrite = fcn.00402b3a(1);\n        *ppiVar16 = 0;\n        if (((var_24h == NULL) || (hWndChildAfter != NULL)) &&\n           ((iVar11 = sub.KERNEL32.dll_lstrlenW(nNumberOfBytesToWrite),  -1 < iVar13 ||\n            (iVar13 = iVar13 + iVar11,  -1 < iVar13)))) {\n            if (iVar11 < iVar13) {\n                iVar13 = iVar11;\n            }\n            fcn.00405f48(ppiVar16, nNumberOfBytesToWrite + iVar13 * 2);\n            iVar13 = hWndChildAfter;\n            if (hWndChildAfter != NULL) {\n                if (hWndChildAfter < 0) {\n                    iVar11 = sub.KERNEL32.dll_lstrlenW(ppiVar16);\n                    hWndChildAfter = iVar13 + iVar11;\n                    if (hWndChildAfter < 0) {\n                        hWndChildAfter = NULL;\n                    }\n                }\n                if (hWndChildAfter < 0x400) {\n                    *(ppiVar16 + hWndChildAfter * 2) = 0;\n                }\n            }\n        }\n        break;\n    case 0x4019cf:\n        uVar15 = fcn.00402b3a(0x20);\n        uVar19 = fcn.00402b3a(0x31);\n        if (var_1ch == NULL) {\n            iVar13 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n        }\n        else {\n            iVar13 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(uVar15, uVar19);\n        }\n        goto joined_r0x004019ee;\n    case 0x401a00:\n        hWndChildAfter = fcn.00402b3a(1);\n        iVar11 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(hWndChildAfter, ppiVar16, 0x400);\n        if ((iVar11 == 0) ||\n           ((var_24h != NULL && (iVar11 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(hWndChildAfter, ppiVar16),  iVar11 == 0))))\n        {\n            var_4h = 0x1;\n            *ppiVar16 = 0;\n        }\n        *(iVar13 + 0x42a7fe) = 0;\n        break;\n    case 0x401a42:\n        uVar10 = fcn.00402b1d(0);\n        uVar3 = fcn.00402b1d(1);\n        if (var_18h != NULL) {\n            if (uVar10 < uVar3) {\n                return nNumberOfBytesToRead;\n            }\n            if (uVar10 <= uVar3) {\n                return var_24h;\n            }\n            return var_1ch;\n        }\n        if (uVar10 < uVar3) {\n            return nNumberOfBytesToRead;\n        }\n        if (uVar10 <= uVar3) {\n            return var_24h;\n        }\n        return var_1ch;\n    case 0x401a74:\n        fcn.00402b1d(1);\n        iVar13 = fcn.00402b1d(2);\n        if (0xc < nNumberOfBytesToRead) goto code_r0x0040296d;\n    // switch table (13 cases) at 0x402ae9\n        switch(*(nNumberOfBytesToRead * 4 + 0x402ae9)) {\n        case 0x401a95:\n            break;\n        case 0x401a99:\n            break;\n        case 0x401a9d:\n            break;\n        case 0x401aa4:\n            goto joined_r0x00401adf;\n        case 0x401ab1:\n            break;\n        case 0x401ab5:\n            break;\n        case 0x401ab9:\n            break;\n        case 0x401abd:\n            break;\n        case 0x401ac6:\n            break;\n        case 0x401ad0:\n            break;\n        case 0x401add:\njoined_r0x00401adf:\n            if (iVar13 == 0) {\n                var_4h = 0x1;\n            }\n            break;\n        case 0x401af5:\n            break;\n        case 0x401af9:\n        }\n        goto code_r0x0040296d;\n    case 0x401b01:\n        uVar15 = fcn.00402b3a(1);\n        uVar19 = fcn.00402b1d(2);\n        (*_sym.imp.USER32.dll_wsprintfW)(ppiVar16, uVar15, uVar19);\n        break;\n    case 0x401b22:\n        if (var_24h != NULL) {\n            do {\n                var_24h = var_24h - 1;\n                if (ppiVar9 == NULL) goto code_r0x0040222b;\n                ppiVar9 = *ppiVar9;\n            } while (var_24h != NULL);\n            if (ppiVar9 == NULL) goto code_r0x0040222b;\n            puVar17 = 0x409598;\n            fcn.00405f48(0x409598, ppiVar9 + 1);\n            ppiVar16 = *0x40bd9c + 1;\n            fcn.00405f48(ppiVar9 + 1, ppiVar16);\n            goto code_r0x004028eb;\n        }\n        if (dwFileAttributes != NULL) {\n            if (*0x40bd9c != NULL) {\n                fcn.00405f48(ppiVar16, *0x40bd9c + 1);\n                *0x40bd9c = *ppiVar9;\n                ppiVar14 = ppiVar16;\n                goto code_r0x00401b92;\n            }\n            goto code_r0x00402793;\n        }\n        ppiVar9 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x804);\n        fcn.00405f6a(ppiVar9 + 1, var_2ch);\n        *ppiVar9 = *0x40bd9c;\n        *0x40bd9c = ppiVar9;\n        break;\n    case 0x401bca:\n        uVar15 = fcn.00402b1d(3);\n        lDistanceToMove._0_2_ = uVar15;\n        lDistanceToMove._2_2_ = uVar15 >> 0x10;\n        hWndChildAfter = fcn.00402b1d(4);\n        if ((var_18h & 1) != 0) {\n            uVar15 = fcn.00402b3a(0x33);\n            lDistanceToMove._0_2_ = uVar15;\n            lDistanceToMove._2_2_ = uVar15 >> 0x10;\n        }\n        if ((var_18h & 2) != 0) {\n            hWndChildAfter = fcn.00402b3a(0x44);\n        }\n        if (var_30h == 0x21) {\n            uVar15 = fcn.00402b1d();\n            uVar19 = fcn.00402b1d(2);\n            if (var_18h >> 2 == 0) {\n                nNumberOfBytesToWrite =\n                     (*_sym.imp.USER32.dll_SendMessageW)\n                               (uVar15, uVar19, CONCAT22(lDistanceToMove._2_2_, lDistanceToMove), hWndChildAfter);\n                dwFileAttributes = var_2ch;\n            }\n            else {\n                iVar13 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)\n                                   (uVar15, uVar19, CONCAT22(lDistanceToMove._2_2_, lDistanceToMove), hWndChildAfter, 0\n                                    , var_18h >> 2, &fcn.00401434::nNumberOfBytesToWrite);\n                var_4h = iVar13 == 0;\n                dwFileAttributes = var_2ch;\n            }\n        }\n        else {\n            piVar4 = fcn.00402b3a(1);\n            piVar5 = fcn.00402b3a(0x12);\n            nNumberOfBytesToWrite =\n                 (*_sym.imp.USER32.dll_FindWindowExW)\n                           (CONCAT22(lDistanceToMove._2_2_, lDistanceToMove), hWndChildAfter, -(*piVar4 != 0) & piVar4, \n                            -(*piVar5 != 0) & piVar5);\n            dwFileAttributes = var_2ch;\n        }\njoined_r0x0040271c:\n        if (-1 < dwFileAttributes) goto code_r0x0040296d;\n        break;\n    case 0x401c8e:\n        uVar15 = fcn.00402b1d(0);\n        iVar13 = (*_sym.imp.USER32.dll_IsWindow)(uVar15);\n        nNumberOfBytesToRead = dwFileAttributes;\njoined_r0x004019ee:\n        if (iVar13 == 0) {\n            return var_24h;\n        }\n        return nNumberOfBytesToRead;\n    case 0x401cab:\n        uVar15 = fcn.00402b1d(2);\n        uVar15 = fcn.00402b1d(1, uVar15);\n        (*_sym.imp.USER32.dll_GetDlgItem)(uVar15);\n        goto code_r0x0040296d;\n    case 0x401cc6:\n        uVar15 = fcn.00402b1d(0, 0xffffffeb, *0x429248 + dwFileAttributes);\n        (*_sym.imp.USER32.dll_SetWindowLongW)(uVar15);\n        break;\n    case 0x401ce5:\n        uVar15 = (*_sym.imp.USER32.dll_GetDlgItem)(lpString2, dwFileAttributes);\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar15, &fcn.00401434::lpRect);\n        uVar19 = fcn.00402b3a(0, 0, var_48h * var_24h, CONCAT22(lDistanceToMove._2_2_, lDistanceToMove) * var_24h, 0x10)\n        ;\n        uVar19 = (*_sym.imp.USER32.dll_LoadImageW)(0, uVar19);\n        iVar13 = (*_sym.imp.USER32.dll_SendMessageW)(uVar15, 0x172, 0, uVar19);\n        if (iVar13 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar13);\n        }\n        break;\n    case 0x401d41:\n        uVar15 = (*_sym.imp.USER32.dll_GetDC)(lpString2);\n        uVar19 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar15, 0x5a, 0x48);\n        uVar19 = fcn.00402b1d(2, uVar19);\n        *0x40bda0 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar19);\n        *0x40bda0 = -*0x40bda0;\n        (*_sym.imp.USER32.dll_ReleaseDC)(lpString2, uVar15);\n        *0x40bdb0 = fcn.00402b1d(3);\n        *0x40bdb4 = var_1ch & 1;\n        *0x40bdb7 = 1;\n        *0x40bdb5 = var_1ch & 2;\n        *0x40bdb6 = var_1ch & 4;\n        fcn.00405f6a(0x40bdbc, dwFileAttributes);\n        (*_sym.imp.GDI32.dll_CreateFontIndirectW)(0x40bda0);\ncode_r0x0040296d:\n        fcn.00405e8f(ppiVar16);\n        break;\n    case 0x401dc7:\n        uVar15 = fcn.00402b1d(0);\n        uVar19 = fcn.00402b1d(1);\n        if (nNumberOfBytesToRead == NULL) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar15, uVar19);\n        }\n        break;\n    case 0x401df3:\n        piVar4 = fcn.00402b3a(0);\n        uVar15 = fcn.00402b3a(0x31);\n        piVar5 = fcn.00402b3a(0x22);\n        fcn.00402b3a(0x15);\n        fcn.00401423(0xffffffec);\n        iVar13 = (*_sym.imp.SHELL32.dll_ShellExecuteW)\n                           (lpString2, -(*piVar4 != 0) & piVar4, uVar15, -(*piVar5 != 0) & piVar5, 0x435000, \n                            nNumberOfBytesToRead);\n        if (iVar13 < 0x21) goto code_r0x00402793;\n        break;\n    case 0x401e51:\n        uVar15 = fcn.00402b3a(0);\n        uVar19 = 0xffffffeb;\n        fcn.004051f2(0xffffffeb, uVar15);\n        hWndChildAfter = fcn.004056c3(uVar15);\n        pcVar6 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n        if (hWndChildAfter == NULL) goto code_r0x00402793;\n        ppiVar9 = hWndChildAfter;\n        if (var_24h != NULL) {\n            iVar13 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hWndChildAfter, 100);\n            while (iVar13 == 0x102) {\n                fcn.004062eb(0xf);\n                iVar13 = (*pcVar6)(hWndChildAfter, 100);\n            }\n            (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hWndChildAfter, &fcn.00401434::nNumberOfBytesToWrite);\n            if (dwFileAttributes < 0) {\n                ppiVar9 = hWndChildAfter;\n                if (nNumberOfBytesToWrite != NULL) {\n                    var_4h = 0x1;\n                }\n            }\n            else {\n                fcn.00405e8f(uVar19, nNumberOfBytesToWrite, lpBuffer);\n                ppiVar9 = hWndChildAfter;\n            }\n        }\ncode_r0x00401ec9:\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(ppiVar9);\n        break;\n    case 0x401ed4:\n        uVar15 = fcn.00402b3a(2);\n        iVar13 = fcn.0040628b(uVar15);\n        if (iVar13 != 0) {\n            fcn.00405e8f(lpBuffer, *(iVar13 + 0x14));\n            goto code_r0x0040296d;\n        }\n        *ppiVar16 = 0;\n        *lpBuffer = 0;\n        goto code_r0x00402793;\n    case 0x401f08:\n        lptstrFilename = fcn.00402b3a(0xffffffee);\n        iStack668 = sub.VERSION.dll_GetFileVersionInfoSizeW(lptstrFilename, &fcn.00401434::lpFileName);\n        *ppiVar16 = 0;\n        *lpBuffer = 0;\n        var_4h = 0x1;\n        if ((iStack668 != 0) &&\n           (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iStack668),  hWndChildAfter != NULL)) {\n            uStack672 = 0;\n            puStack680 = 0x401f55;\n            ppiVar14 = lptstrFilename;\n            ppiStack664 = hWndChildAfter;\n            iVar13 = sub.VERSION.dll_GetFileVersionInfoW();\n            ppiVar9 = hWndChildAfter;\n            if (iVar13 != 0) {\n                puStack680 = &fcn.00401434::lptstrFilename;\n                puStack684 = &fcn.00401434::nNumberOfBytesToWrite;\n                lpFindFileData = 0x409014;\n                ppiVar14 = hWndChildAfter;\n                iVar13 = sub.VERSION.dll_VerQueryValueW();\n                ppiVar9 = hWndChildAfter;\n                if (iVar13 != 0) {\n                    fcn.00405e8f(ppiVar16, nNumberOfBytesToWrite[2]);\n                    ppiVar14 = lpBuffer;\n                    fcn.00405e8f(lpBuffer, nNumberOfBytesToWrite[3]);\n                    var_4h = NULL;\n                    ppiVar9 = hWndChildAfter;\n                }\n            }\ncode_r0x00401b92:\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar9, ppiVar14);\n        }\n        break;\n    case 0x401f97:\n        var_4h = 0x1;\n        if (-1 < *0x4292b8) {\n            uVar15 = fcn.00402b3a(0xfffffff0);\n            nNumberOfBytesToWrite = fcn.00402b3a(1);\n            if (((var_1ch != NULL) &&\n                (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(uVar15),  hWndChildAfter != NULL)) ||\n               (hWndChildAfter = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(uVar15, 0, 8),  hWndChildAfter != NULL)) {\n                pcVar6 = fcn.0040631e(hWndChildAfter, nNumberOfBytesToWrite);\n                if (pcVar6 == NULL) {\n                    fcn.004051f2(0xfffffff7, nNumberOfBytesToWrite);\n                }\n                else {\n                    var_4h = NULL;\n                    if (var_24h == NULL) {\n                        (*pcVar6)(lpString2, 0x400, 0x42a000, 0x40bd9c, 0x409000);\n                    }\n                    else {\n                        fcn.00401423(var_24h);\n                        iVar13 = (*pcVar6)();\n                        if (iVar13 != 0) {\n                            var_4h = 0x1;\n                        }\n                    }\n                }\n                if ((nNumberOfBytesToRead == NULL) && (iVar13 = fcn.004038bf(hWndChildAfter),  iVar13 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(hWndChildAfter);\n                }\n                break;\n            }\n        }\n        goto code_r0x00402192;\n    case 0x40206a:\n        uVar15 = fcn.00402b3a(0xfffffff0);\n        lDistanceToMove._0_2_ = uVar15;\n        lDistanceToMove._2_2_ = uVar15 >> 0x10;\n        uVar15 = fcn.00402b3a(0xffffffdf);\n        lpFileName = fcn.00402b3a(2);\n        lptstrFilename = fcn.00402b3a(0xffffffcd);\n        lpNumberOfBytesWritten = fcn.00402b3a(0x45);\n        iVar13 = fcn.00405a0a(uVar15);\n        if (iVar13 == 0) {\n            fcn.00402b3a(0x21);\n        }\n        iVar13 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x407474, 0, 1, 0x407464, &fcn.00401434::hWndChildAfter);\n        if (-1 < iVar13) {\n            iVar13 = (***hWndChildAfter)(hWndChildAfter, 0x407484, &fcn.00401434::nNumberOfBytesToWrite);\n            if (-1 < iVar13) {\n                iVar13 = (*(*hWndChildAfter)[0x14])(hWndChildAfter, uVar15);\n                if ((var_1ch & 0x8000) == 0) {\n                    (*(*hWndChildAfter)[9])(hWndChildAfter, 0x435000);\n                }\n                uVar10 = var_1ch >> 8 & 0x7f;\n                if (uVar10 != 0) {\n                    (*(*hWndChildAfter)[0xf])(hWndChildAfter, uVar10);\n                }\n                (*(*hWndChildAfter)[0xd])(hWndChildAfter, var_1ch >> 0x10);\n                if (*lptstrFilename != 0) {\n                    (*(*hWndChildAfter)[0x11])(hWndChildAfter, lptstrFilename, var_1ch & 0xff);\n                }\n                (*(*hWndChildAfter)[0xb])(hWndChildAfter, lpFileName);\n                (*(*hWndChildAfter)[7])(hWndChildAfter, lpNumberOfBytesWritten);\n                if (-1 < iVar13) {\n                    iVar13 = (**(*nNumberOfBytesToWrite + 0x18))\n                                       (nNumberOfBytesToWrite, CONCAT22(lDistanceToMove._2_2_, lDistanceToMove), 1);\n                }\n                (**(*nNumberOfBytesToWrite + 8))(nNumberOfBytesToWrite);\n            }\n            (*(*hWndChildAfter)[2])(hWndChildAfter);\n            if (-1 < iVar13) goto code_r0x00402192;\n        }\n        var_4h = 0x1;\n        goto code_r0x00402192;\n    case 0x4021a0:\n        iVar13 = fcn.00402b3a(0);\n        iVar11 = fcn.00402b3a(0x11);\n        hWndChildAfter = fcn.00402b3a(0x23);\n        iVar7 = fcn.0040628b(iVar13);\n        if (iVar7 != 0) {\n            lpFileOp = lpString2;\n            var_58h = 2;\n            iVar7 = sub.KERNEL32.dll_lstrlenW(iVar13);\n            *(iVar13 + 2 + iVar7 * 2) = 0;\n            iVar7 = sub.KERNEL32.dll_lstrlenW(iVar11);\n            *(iVar11 + 2 + iVar7 * 2) = 0;\n            lDistanceToMove._2_2_ = SUB42(hWndChildAfter, 0);\n            uStack68 = hWndChildAfter >> 0x10;\n            var_4ch._0_2_ = var_24h._0_2_;\n            var_54h = iVar13;\n            lpRect = iVar11;\n            fcn.004051f2(0, hWndChildAfter);\n            iVar13 = (*_sym.imp.SHELL32.dll_SHFileOperationW)(&fcn.00401434::lpFileOp);\n            if (iVar13 == 0) break;\n        }\n        fcn.004051f2(0xfffffff9, 0);\n        goto code_r0x00402793;\n    case 0x402224:\n        if (var_2ch != 0xbadf00d) {\ncode_r0x0040222b:\n            uVar8 = 0x200010;\n            uVar20 = 0xffffffe8;\n            uVar19 = 0;\n            uVar15 = fcn.00405f6a(0, 0xffffffe8);\ncode_r0x00402239:\n            fcn.00405724(uVar15, uVar19, uVar20, uVar8);\n            return 0x7fffffff;\n        }\n        *0x429294 = *0x429294 + 1;\n        break;\n    case 0x402253:\n        uVar19 = 0;\n        uVar20 = 0;\n        if (var_2ch != NULL) {\n            uVar19 = fcn.00402b3a(0);\n        }\n        if (dwFileAttributes != NULL) {\n            uVar20 = fcn.00402b3a(0x11);\n        }\n        if (var_1ch != NULL) {\n            uVar15 = fcn.00402b3a(0x22);\n        }\n        uVar8 = fcn.00402b3a(0xffffffcd);\n        iVar13 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(uVar19, uVar20, uVar15, uVar8);\ncode_r0x004015ac:\n        bVar18 = iVar13 == 0;\ncode_r0x004015ae:\n        if (bVar18) goto code_r0x00402793;\n        break;\n    case 0x402295:\n        hWndChildAfter = *0x409010;\n        uVar15 = fcn.00402b3a(1);\n        nNumberOfBytesToWrite = fcn.00402b3a(0x12);\n        uVar19 = fcn.00402b3a(0xffffffdd);\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)\n                  (uVar15, nNumberOfBytesToWrite, &fcn.00401434::hWndChildAfter, ppiVar16, 0x3ff, uVar19);\n        bVar18 = *ppiVar16 == 10;\ncode_r0x00401734:\n        if (bVar18) {\ncode_r0x00402761:\n            var_4h = 0x1;\n            *ppiVar16 = 0;\n        }\n        break;\n    case 0x4022d5:\n        if (var_1ch == NULL) {\n            iVar11 = fcn.00402c44(2);\n            if (iVar11 == 0) goto code_r0x00402793;\n            uVar15 = fcn.00402b3a(0x33);\n            iVar13 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(iVar11, uVar15);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar11);\n        }\n        else {\n            uVar15 = fcn.00402b3a(0x22);\n            uVar19 = fcn.00402c2f(dwFileAttributes, uVar15, var_1ch & 2);\n            iVar13 = fcn.00402b7a(uVar19, dwFileAttributes, uVar15);\n        }\n        if (iVar13 != 0) goto code_r0x00402793;\n        break;\n    case 0x402331:\n        uVar15 = fcn.00402c2f(var_2ch);\n        nNumberOfBytesToWrite = var_18h;\n        lptstrFilename = fcn.00402b3a(2);\n        uVar19 = fcn.00402b3a(0x11);\n        var_4h = 0x1;\n        piVar12 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                            (uVar15, uVar19, 0, 0, 0, *0x4292b0 | 2, 0, &fcn.00401434::hWndChildAfter, 0);\n        if (piVar12 == NULL) {\n            if (var_1ch == 0x1) {\n                fcn.00402b3a(0x23);\n                iVar13 = sub.KERNEL32.dll_lstrlenW(0x40a598);\n                piVar12 = iVar13 * 2 + 2;\n            }\n            if (var_1ch == 0x4) {\n                *0x40a598 = fcn.00402b1d(3);\n                piVar12 = var_1ch;\n            }\n            if (var_1ch == 0x3) {\n                piVar12 = fcn.00403062(nNumberOfBytesToRead, 0, 0x40a598, 0x1800);\n            }\n            iVar13 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                               (hWndChildAfter, lptstrFilename, 0, nNumberOfBytesToWrite, 0x40a598, piVar12);\n            ppiVar9 = hWndChildAfter;\n            if (iVar13 == 0) {\n                var_4h = NULL;\n            }\ncode_r0x004024ac:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(ppiVar9);\n        }\n        break;\n    case 0x4023e0:\n        ppiVar9 = fcn.00402c44(0x20019);\n        uVar15 = fcn.00402b3a(0x33);\n        *ppiVar16 = 0;\n        if (ppiVar9 != NULL) {\n            nNumberOfBytesToWrite = 0x800;\n            iVar11 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                               (ppiVar9, uVar15, 0, &fcn.00401434::hWndChildAfter, ppiVar16, \n                                &fcn.00401434::nNumberOfBytesToWrite);\n            if (iVar11 == 0) {\n                if (hWndChildAfter == 0x4) {\n                    var_4h = var_1ch == NULL;\n                    fcn.00405e8f();\n                    goto code_r0x004024ac;\n                }\n                if ((hWndChildAfter == 0x1) || (hWndChildAfter == 0x2)) {\n                    var_4h = var_1ch;\n                    goto code_r0x004024a4;\n                }\n            }\n            *ppiVar16 = 0;\n            var_4h = 0x1;\n            goto code_r0x004024ac;\n        }\n        goto code_r0x00402793;\n    case 0x402454:\n        ppiVar9 = fcn.00402c44(0x20019);\n        uVar15 = fcn.00402b1d(3);\n        *ppiVar16 = 0;\n        if (ppiVar9 != NULL) {\n            hWndChildAfter = 0x3ff;\n            if (var_1ch == NULL) {\n                iVar11 = (*_sym.imp.ADVAPI32.dll_RegEnumValueW)\n                                   (ppiVar9, uVar15, ppiVar16, &fcn.00401434::hWndChildAfter, 0, 0, 0, 0);\n                if (iVar11 != 0) goto code_r0x00402793;\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyW)(ppiVar9, uVar15, ppiVar16, 0x3ff);\n            }\ncode_r0x004024a4:\n            *(iVar13 + 0x42a7fe) = 0;\n            goto code_r0x004024ac;\n        }\n        goto code_r0x00402793;\n    case 0x4024b7:\n        if (*ppiVar16 != 0) {\n            ppiVar9 = fcn.00405ea8(ppiVar16);\n            goto code_r0x00401ec9;\n        }\n        break;\n    case 0x4024cc:\n        uVar15 = fcn.00402b3a(0xffffffed);\n        iVar13 = fcn.00405bb4(uVar15, dwFileAttributes, var_24h);\n        if (iVar13 != -1) goto code_r0x0040296d;\ncode_r0x00402790:\n        *ppiVar16 = 0;\n        goto code_r0x00402793;\n    case 0x4024ee:\n        if (var_24h == NULL) {\n            if (var_30h == 0x38) {\n                fcn.00402b3a(0x21);\n                (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, 0x40a598, 0xffffffff, 0x409d98, 0x400, 0, 0);\n                iVar13 = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x409d98);\n            }\n            else {\n                uVar15 = fcn.00402b3a(0x11);\n                iVar13 = sub.KERNEL32.dll_lstrlenW(uVar15);\n                iVar13 = iVar13 * 2;\n            }\n        }\n        else {\n            *0x409d98 = fcn.00402b1d(1);\n            iVar13 = (var_30h != 0x38) + 1;\n        }\n        if (*ppiVar16 != 0) {\n            puVar17 = &fcn.00401434::hWndChildAfter;\n            uVar20 = 0;\n            uVar19 = 0x409d98;\n            uVar15 = fcn.00405ea8(ppiVar16);\n            iVar13 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar15, ppiVar16, uVar19, iVar13, puVar17, uVar20);\n            goto code_r0x004015ac;\n        }\ncode_r0x00402793:\n        var_4h = 0x1;\n        break;\n    case 0x402573:\n        lpString2 = 0;\n        lDistanceToMove._0_2_ = 2;\n        lDistanceToMove._2_2_ = 0;\n        lpFileName = fcn.00402b1d(2);\n        if (lpFileName < 1) break;\n        if (0x3ff < lpFileName) {\n            lpFileName = 0x3ff;\n        }\n        if (*ppiVar16 != 0) {\n            lptstrFilename = NULL;\n            nNumberOfBytesToWrite = fcn.00405ea8(ppiVar16);\n            pcVar6 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n            if (0 < lpFileName) {\n                do {\n                    if (var_30h == 0x39) {\n                        uVar10 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                           (nNumberOfBytesToWrite, &fcn.00401434::hWndChildAfter + 2, \n                                            2 - nNumberOfBytesToRead, &fcn.00401434::lpNumberOfBytesWritten, 0);\n                        if ((uVar10 != 0) && (lpNumberOfBytesWritten != 0)) {\n                            var_3ch = uVar10 & 0xffff0000 | hWndChildAfter >> 0x10 & 0xff;\n                            lDistanceToMove._0_2_ = lpNumberOfBytesWritten;\n                            lDistanceToMove._2_2_ = lpNumberOfBytesWritten >> 0x10;\n                            if (nNumberOfBytesToRead == NULL) {\n                                iVar13 = (*pcVar6)(0, 8, &fcn.00401434::hWndChildAfter + 2, lpNumberOfBytesWritten, \n                                                   &fcn.00401434::var_3ch, 1);\n                                if (iVar13 == 0) {\n                                    iVar13 = -CONCAT22(lDistanceToMove._2_2_, lDistanceToMove);\n                                    do {\n                                        lpNumberOfBytesWritten = lpNumberOfBytesWritten + -1;\n                                        var_3ch = 0xfffd;\n                                        if (lpNumberOfBytesWritten == 0) break;\n                                        iVar11 = CONCAT22(lDistanceToMove._2_2_, lDistanceToMove) + -1;\n                                        lDistanceToMove._0_2_ = iVar11;\n                                        lDistanceToMove._2_2_ = iVar11 >> 0x10;\n                                        iVar13 = iVar13 + 1;\n                                        (*_sym.imp.KERNEL32.dll_SetFilePointer)(nNumberOfBytesToWrite, iVar13, 0, 1);\n                                        iVar11 = (*pcVar6)(0, 8, &fcn.00401434::hWndChildAfter + 2, \n                                                           lpNumberOfBytesWritten, &fcn.00401434::var_3ch, 1);\n                                    } while (iVar11 == 0);\n                                }\n                                goto code_r0x0040266c;\n                            }\ncode_r0x004026a2:\n                            fcn.00405e8f(lpBuffer, var_3ch & 0xffff);\n                            goto code_r0x004029d0;\n                        }\n                        break;\n                    }\n                    iVar13 = fcn.00405c37(nNumberOfBytesToWrite, &fcn.00401434::var_3ch, 2);\n                    if (iVar13 == 0) break;\ncode_r0x0040266c:\n                    if (nNumberOfBytesToRead != NULL) goto code_r0x004026a2;\n                    iVar2 = var_3ch;\n                    if ((lptstrFilename == 0xd) || (lptstrFilename == 10)) {\n                        if ((lptstrFilename == iVar2) || ((iVar2 != 0xd && (iVar2 != 10)))) {\n                            (*_sym.imp.KERNEL32.dll_SetFilePointer)\n                                      (nNumberOfBytesToWrite, -CONCAT22(lDistanceToMove._2_2_, lDistanceToMove), 0, 1);\n                        }\n                        else {\n                            *(lpBuffer + lpString2 * 2) = iVar2;\n                            lpString2 = lpString2 + 1;\n                        }\n                        break;\n                    }\n                    iVar13 = lpString2 + 1;\n                    *(lpBuffer + lpString2 * 2) = iVar2;\n                    lpString2 = iVar13;\n                    if ((iVar2 == 0) || (lptstrFilename = var_3ch,  lpFileName <= iVar13)) break;\n                } while( true );\n            }\n        }\n        bVar18 = lpString2 == 0;\n        *(lpBuffer + lpString2 * 2) = 0;\n        goto code_r0x004015ae;\n    case 0x4026f7:\n        if (*ppiVar16 != 0) {\n            uVar15 = fcn.00402b1d(2, 0, nNumberOfBytesToRead);\n            uVar19 = fcn.00405ea8(ppiVar16);\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar19, ppiVar16, uVar15);\n            ppiVar16 = lpBuffer;\n            goto joined_r0x0040271c;\n        }\n        break;\n    case 0x402727:\n        if (*ppiVar16 != 0) {\n            uVar15 = fcn.00405ea8(ppiVar16);\n            (*_sym.imp.KERNEL32.dll_FindClose)(uVar15);\n        }\n        break;\n    case 0x402742:\n        if (*ppiVar14 != 0) {\n            puVar17 = &fcn.00401434::lpFindFileData;\n            uVar15 = fcn.00405ea8(ppiVar14);\n            iVar13 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(uVar15, ppiVar14, puVar17);\n            if (iVar13 != 0) goto code_r0x004027a8;\n        }\n        goto code_r0x00402761;\n    case 0x402770:\n        uVar15 = fcn.00402b3a(2);\n        iVar13 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(uVar15, &fcn.00401434::lpFindFileData);\n        if (iVar13 == -1) {\n            *lpBuffer = 0;\n            goto code_r0x00402790;\n        }\n        fcn.00405e8f(lpBuffer, iVar13);\ncode_r0x004027a8:\n        puVar17 = &fcn.00401434::var_280h;\ncode_r0x004028eb:\n        fcn.00405f48(ppiVar16, puVar17);\n        break;\n    case 0x4027b5:\n        lptstrFilename = 0xfffffd66;\n        uVar15 = fcn.00402b3a(0xfffffff0);\n        lpFileName = uVar15;\n        iVar13 = fcn.00405a0a(uVar15);\n        if (iVar13 == 0) {\n            fcn.00402b3a(0xffffffed);\n        }\n        fcn.00405b8f(uVar15);\n        hWndChildAfter = fcn.00405bb4(uVar15, 0x40000000, 2);\n        pcVar6 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        if (hWndChildAfter != 0xffffffff) {\n            nNumberOfBytesToWrite = *0x429214;\n            iVar13 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x429214);\n            if (iVar13 != 0) {\n                fcn.0040330f(0);\n                fcn.004032f9(iVar13, nNumberOfBytesToWrite);\n                piVar12 = (*pcVar6)(0x40, var_24h);\n                lptstrFilename = piVar12;\n                if (piVar12 != NULL) {\n                    fcn.00403062(dwFileAttributes, 0, piVar12, var_24h);\n                    for (; *piVar12 != '\\0'; piVar12 = piVar12 + var_48h + 8) {\n                        var_48h = *piVar12;\n                        dwFileAttributes = piVar12[1] + iVar13;\n                        fcn.00405b6f();\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(lptstrFilename, dwFileAttributes);\n                }\n                (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (hWndChildAfter, iVar13, nNumberOfBytesToWrite, &fcn.00401434::lpNumberOfBytesWritten, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar13);\n                lptstrFilename = fcn.00403062(0xffffffff, hWndChildAfter, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hWndChildAfter);\n        }\n        if (lptstrFilename < 0) {\n            (*_sym.imp.KERNEL32.dll_DeleteFileW)(lpFileName);\n            var_4h = 0x1;\n        }\ncode_r0x00402192:\n        fcn.00401423();\n        break;\n    case 0x4028b6:\n        uVar10 = fcn.00402b1d(0);\n        if (*0x42922c <= uVar10) goto code_r0x00402793;\n        iVar13 = uVar10 * 0x818 + *0x429228;\n        if (-1 < var_24h) {\n            ppiVar16 = lpBuffer;\n            if (var_24h == NULL) {\n                puVar17 = iVar13 + 0x18;\n                goto code_r0x004028eb;\n            }\n            goto code_r0x0040296d;\n        }\n        var_24h = -1 - var_24h;\n        if (var_24h == NULL) {\n            fcn.00405f6a(iVar13 + 0x18, var_1ch);\n            *(iVar13 + 9) = *(iVar13 + 9) | 1;\n        }\n        else {\n            dwFileAttributes = fcn.00402b1d(1);\n        }\n        *(iVar13 + var_24h * 4) = dwFileAttributes;\n        if (nNumberOfBytesToRead != NULL) {\n            fcn.0040117d(uVar10);\n        }\n        break;\n    case 0x40293b:\n        uVar10 = fcn.00402b1d(0);\n        if (0x1f < uVar10) goto code_r0x00402793;\n        if (nNumberOfBytesToRead == NULL) {\n            if (var_24h == NULL) {\n                fcn.00405f6a(lpBuffer, *(*0x429210 + 0x94 + uVar10 * 4));\n            }\n            else {\n                *(*0x429210 + 0x94 + uVar10 * 4) = dwFileAttributes;\n            }\n        }\n        else {\n            if (var_24h == NULL) {\n                fcn.004012e2(0);\n                ppiVar16 = lpBuffer;\n                goto code_r0x0040296d;\n            }\n            fcn.00401299(uVar10);\n            fcn.004011ef(0, 0);\n        }\n        break;\n    case 0x4029a2:\n        (*_sym.imp.USER32.dll_SendMessageW)(lpString2, 0xb, *0x4246e8 & var_2ch, 0);\n        if (var_2ch != NULL) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(lpString2, 0, 0);\n        }\n        break;\n    case 0x4029d2:\n        goto code_r0x004029d2;\n    }\ncode_r0x004029c7:\n    *0x429288 = *0x429288 + var_4h;\ncode_r0x004029d0:\n    var_2ch = NULL;\ncode_r0x004029d2:\n    return var_2ch;\n}\n",
        "token_count": 13672
    },
    "00402dbc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar16_t * __cdecl fcn.00402dbc(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint lpFileName;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t dwBytes;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_8h = 0;\n    *0x42920c = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x42920c = *0x42920c + 1000;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x437800, 0x400);\n    puVar1 = fcn.00405bb4(0x437800, 0x80000000, 3);\n    if (puVar1 == 0xffffffff) {\n        *0x409018 = puVar1;\n        return L\"Error launching installer\";\n    }\n    *0x409018 = puVar1;\n    fcn.00405f48(0x435800, 0x437800);\n    uVar2 = fcn.004059df(0x435800);\n    fcn.00405f48(0x438000, uVar2);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(puVar1, 0);\n    *0x41fea0 = uVar3;\n    for (; 0 < uVar3; uVar3 = uVar3 - uVar8) {\n        uVar4 = (-(*0x429214 != 0) & 0x7e00) + 0x200;\n        uVar8 = uVar3;\n        if (uVar4 <= uVar3) {\n            uVar8 = uVar4;\n        }\n        puVar1 = 0x417ea0;\n        iVar5 = fcn.004032f9();\n        if (iVar5 == 0) {\n            fcn.00402d1a(1);\n            goto code_r0x00403013;\n        }\n        if (*0x429214 == 0) {\n            puVar1 = &var_24h;\n            fcn.00405b6f();\n            if (((((var_24h & 0xfffffff0) == 0) && (var_20h == -0x21524111)) && (var_14h == 0x74736e49)) &&\n               ((var_18h == 0x74666f73 && (var_1ch == 0x6c6c754e)))) {\n                arg_8h = arg_8h | var_24h;\n                *0x4292a0 = *0x4292a0 | arg_8h & 2;\n                *0x429214 = *0x417e90;\n                if (uVar3 < var_ch) goto code_r0x00403013;\n                if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                var_8h = var_8h + 1;\n                uVar3 = var_ch - 4;\n                if (uVar3 < uVar8) {\n                    uVar8 = uVar3;\n                }\n            }\n        }\n        else if ((arg_8h & 2) == 0) {\n            fcn.00402d1a(0);\n        }\n        if (uVar3 < *0x41fea0) {\n            puVar6 = fcn.00406360();\n            puVar1 = var_4h;\n            var_4h = puVar6;\n        }\n        *0x417e90 = *0x417e90 + uVar8;\n    }\n    fcn.00402d1a(1);\n    if (*0x429214 != 0) {\n        if (var_8h != 0) {\n            fcn.0040330f(*0x417e90, puVar1);\n            iVar5 = fcn.004032f9(&arg_8h, 4);\n            if ((iVar5 == 0) || (var_4h != arg_8h)) goto code_r0x00403013;\n        }\n        puVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n        fcn.004063ce();\n        fcn.00405be3(&lpFileName, 0x436800);\n        *0x40901c = (*_sym.imp.KERNEL32.dll_CreateFileW)(&lpFileName, 0xc0000000, 0, 0, 2, 0x4000100, 0);\n        if (*0x40901c == -1) {\n            return L\"Error writing temporary file. Make sure your temp folder is valid.\";\n        }\n        *0x41fea4 = fcn.0040330f(*0x429214 + 0x1c);\n        *0x417e98 = (*0x41fea4 - (~var_24h & 4)) + -0x1c + var_ch;\n        iVar5 = fcn.00403062(0xffffffff, 0, puVar1, dwBytes);\n        if (iVar5 == dwBytes) {\n            *0x429218 = *puVar1;\n            if ((var_24h & 1) != 0) {\n                *0x42921c = *0x42921c + 1;\n            }\n            piVar7 = puVar1 + 0x11;\n            iVar5 = 8;\n            *0x429210 = puVar1;\n            do {\n                piVar7 = piVar7 + -2;\n                *piVar7 = *piVar7 + puVar1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            puVar1[0xf] = *0x417e94;\n            fcn.00405b6f(0x429220, puVar1 + 1, 0x40);\n            return NULL;\n        }\n    }\ncode_r0x00403013:\n    return \n    L\"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n    ;\n}\n",
        "token_count": 1500
    },
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    code *pcVar9;\n    code *pcVar10;\n    uint32_t *puVar11;\n    char16_t *pcStack800;\n    uint uStack796;\n    int32_t iStack792;\n    uint32_t uStack788;\n    uint uStack784;\n    char16_t *pcStack780;\n    uint uStack776;\n    int32_t iStack772;\n    uchar *puStack768;\n    uint uStack764;\n    uint uStack760;\n    uint uStack756;\n    uint uStack752;\n    uint uStack748;\n    uchar auStack704 [704];\n    \n    uStack748 = 0x40337f;\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    uStack748 = 0x8001;\n    uStack752 = 0x40338a;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    uStack752 = 0;\n    uStack756 = 0x403391;\n    *0x4292b8 = (*_sym.imp.ole32.dll_OleInitialize)();\n    uStack756 = 9;\n    uStack760 = 0x40339d;\n    *0x429204 = fcn.004062b2();\n    uStack760 = 0;\n    puStack768 = &stack0xfffffd40;\n    uStack764 = 0x2b4;\n    iStack772 = 0;\n    uStack776 = 0x4206a8;\n    pcStack780 = 0x4033b9;\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoW)();\n    pcStack780 = L\"NSIS Error\";\n    uStack784 = 0x428200;\n    uStack788 = 0x4033c8;\n    fcn.00405f48();\n    uStack788 = 0x4033ce;\n    uStack788 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    iStack792 = 0x434000;\n    uStack796 = 0x4033da;\n    fcn.00405f48();\n    uStack796 = 0;\n    pcStack800 = 0x4033e1;\n    *0x429200 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    uVar2 = 0x434000;\n    pcStack800 = 0x20;\n    if (*0x434000 == 0x22) {\n        uVar2 = 0x434002;\n        pcStack800 = 0x22;\n    }\n    puVar3 = fcn.004059c0(uVar2);\n    puVar4 = (*_sym.imp.USER32.dll_CharNextW)(puVar3);\n    pcStack780 = puVar4;\n    while( true ) {\n        iVar1 = *puVar4;\n        if (iVar1 == 0) break;\n        while (iVar1 == 0x20) {\n            puVar4 = puVar4 + 2;\n            iVar1 = *puVar4;\n        }\n        uStack776 = 0x20;\n        if (*puVar4 == 0x22) {\n            puVar4 = puVar4 + 2;\n            uStack776 = 0x22;\n        }\n        puVar11 = puVar4;\n        if (*puVar4 == 0x2f) {\n            puVar11 = puVar4 + 2;\n            if ((*puVar11 == 0x53) && ((*(puVar4 + 1) == 0x20 || (*(puVar4 + 1) == 0)))) {\n                *0x4292a0 = 1;\n            }\n            if (((*puVar11 == CONCAT22(str.NCRC[1], str.NCRC[0])) &&\n                (*(puVar4 + 6) == (CONCAT22(str.NCRC[3], str.NCRC[2]) | str.NCRC[1] >> 0xf))) &&\n               ((*(puVar4 + 10) == 0x20 || (*(puVar4 + 10) == 0)))) {\n                uStack788 = uStack788 | 4;\n            }\n            if ((*(puVar4 + -2) == CONCAT22(str.__D[1], str.__D[0])) &&\n               (*puVar11 == (CONCAT22(str.__D[3], str.__D[2]) | str.__D[1] >> 0xf))) {\n                *(puVar4 + -2) = 0;\n                fcn.00405f48(0x434800, puVar4 + 6);\n                break;\n            }\n        }\n        puVar4 = fcn.004059c0();\n        puVar3 = puVar11;\n        if (*puVar4 == 0x22) {\n            puVar4 = puVar4 + 2;\n        }\n    }\n    piVar6 = _sym.imp.KERNEL32.dll_GetTempPathW;\n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x400, 0x436800, puVar3);\n    iVar5 = fcn.00403326();\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(0x436800, 0x3fb);\n        sub.KERNEL32.dll_lstrcatW(0x436800, L\"\\\\Temp\");\n        iVar5 = fcn.00403326();\n        if (iVar5 == 0) {\n            (*piVar6)(0x3fc, 0x436800);\n            sub.KERNEL32.dll_lstrcatW(0x436800, 0x409350);\n            piVar6 = _sym.imp.KERNEL32.dll_SetEnvironmentVariableW;\n            (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(L\"TEMP\", 0x436800);\n            (*piVar6)(0x40933c, 0x436800);\n            iVar5 = fcn.00403326();\n            if (iVar5 == 0) goto code_r0x00403667;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteFileW)(0x436000);\n    iStack792 = 0x4035b0;\n    iStack772 = fcn.00402dbc(uStack764);\n    if (iStack772 == 0) {\n        if (*0x42921c != 0) {\n            iStack792 = 0;\n            uStack796 = 0x434000;\n            pcStack800 = 0x4035cf;\n            piVar6 = fcn.004059c0();\n            if (0x433fff < piVar6) {\n                do {\n                    if ((*piVar6 == CONCAT22(str.___[1], str.___[0])) &&\n                       (piVar6[1] == (CONCAT22(str.___[3], str.___[2]) | str.___[1] >> 0xf))) break;\n                    piVar6 = piVar6 + -2;\n                } while (0x433fff < piVar6);\n            }\n            pcStack780 = L\"Error launching installer\";\n            if (piVar6 < 0x434000) goto code_r0x00403692;\n            *piVar6 = 0;\n            piVar6 = piVar6 + 2;\n            iVar5 = fcn.00405a9b();\n            if (iVar5 == 0) goto code_r0x00403667;\n            fcn.00405f48(0x434800, piVar6);\n            fcn.00405f48(0x435000, piVar6);\n            pcStack800 = NULL;\n        }\n        *0x4292ac = -1;\n        iStack792 = fcn.0040391f();\n    }\ncode_r0x00403667:\n    while( true ) {\n        fcn.0040382d();\n        (*_sym.imp.ole32.dll_OleUninitialize)();\n        if (pcStack800 == NULL) break;\n        fcn.00405724(pcStack800, 0x200010);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(2);\ncode_r0x00403692:\n        pcStack800 = L\"~nsu.tmp\";\n        sub.KERNEL32.dll_lstrcatW(0x436800);\n        piVar6 = 0x435800;\n        uVar2 = 0x435800;\n        iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(0x436800, 0x435800);\n        if (iVar5 != 0) {\n            (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(0x436800, 0);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(0x436800);\n            if (*0x434800 == 0) {\n                pcStack800 = 0x434800;\n                fcn.00405f48(uVar2, 0x435800);\n            }\n            fcn.00405f48(0x42a000, iStack772);\n            *0x42a800 = CONCAT22(*0x409316, *0x409314);\n            iVar5 = 0x1a;\n            piVar6 = 0x41fea8;\n            do {\n                fcn.00405f6a(0x41fea8, *(*0x429210 + 0x120));\n                (*_sym.imp.KERNEL32.dll_DeleteFileW)(0x41fea8);\n                if ((iStack792 != 0) && (iVar7 = (*_sym.imp.KERNEL32.dll_CopyFileW)(0x437800, 0x41fea8, 1),  iVar7 != 0)\n                   ) {\n                    fcn.00405de2(0x41fea8, 0);\n                    fcn.00405f6a(0x41fea8, *(*0x429210 + 0x124));\n                    iVar7 = fcn.004056c3(0x41fea8);\n                    if (iVar7 != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar7);\n                        iStack792 = 0;\n                    }\n                }\n                *0x42a800 = *0x42a800 + 1;\n                *0x42a800 = *0x42a800 & 0xffff0000 | *0x42a800;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            fcn.00405de2(0x436800, 0);\n        }\n    }\n    if (*0x429294 != 0) {\n        pcVar8 = fcn.004062b2(4);\n        pcVar9 = fcn.004062b2(5);\n        pcVar10 = fcn.004062b2(6);\n        if (((pcVar8 != NULL) && (pcVar9 != NULL)) && (pcVar10 != NULL)) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &stack0xfffffce0);\n            iVar5 = (*pcVar8)(uVar2);\n            if (iVar5 != 0) {\n                (*pcVar9)(0, L\"SeShutdownPrivilege\", &stack0xfffffd00);\n                uStack784 = 1;\n                iStack772 = 2;\n                (*pcVar10)(iStack792, 0, &stack0xfffffcf0, 0, 0, 0);\n            }\n        }\n        pcVar8 = fcn.004062b2(7);\n        piVar6 = 0x80040002;\n        if (((pcVar8 != NULL) && (iVar5 = (*pcVar8)(0, 0, 0, 0x25, 0x80040002),  iVar5 == 0)) ||\n           (iVar5 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0x80040002),  iVar5 == 0)) {\n            fcn.0040140b(9);\n        }\n    }\n    if (*0x4292ac != -1) {\n        iStack792 = *0x4292ac;\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(iStack792);\n    pcVar8 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (*0x409018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x409018, piVar6);\n        *0x409018 = -1;\n    }\n    if (*0x40901c != -1) {\n        (*pcVar8)(*0x40901c, piVar6);\n        *0x40901c = -1;\n    }\n    fcn.0040388a();\n    fcn.004057d0(0x437000, 7);\n    return;\n}\n",
        "token_count": 2867
    },
    "0040382d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040382d(void)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (*0x409018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x409018);\n        *0x409018 = -1;\n    }\n    if (*0x40901c != -1) {\n        (*pcVar1)(*0x40901c);\n        *0x40901c = -1;\n    }\n    fcn.0040388a();\n    fcn.004057d0(0x437000, 7);\n    return;\n}\n",
        "token_count": 144
    },
    "0040391f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040391f(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    \n    iVar7 = *0x429210;\n    pcVar2 = fcn.004062b2();\n    if (pcVar2 == NULL) {\n        *0x436000 = 0x30;\n        *0x436002 = 0x78;\n        *0x436004 = 0;\n        fcn.00405e15(0x80000001, L\"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x4226e8, 0);\n        if (*0x4226e8 == 0) {\n            fcn.00405e15(0x80000003, L\".DEFAULT\\\\Control Panel\\\\International\", L\"Locale\", 0x4226e8, 0);\n        }\n        sub.KERNEL32.dll_lstrcatW();\n    }\n    else {\n        (*pcVar2)();\n        fcn.00405e8f();\n    }\n    fcn.00403bf5();\n    *0x429280 = *0x429218 & 0x20;\n    *0x42929c = 0x10000;\n    iVar3 = fcn.00405a9b();\n    if ((iVar3 == 0) && (*(iVar7 + 0x48) != 0)) {\n        uVar6 = 0x4271a0;\n        fcn.00405e15(*(iVar7 + 0x44), *0x429238 + *(iVar7 + 0x48) * 2, *0x429238 + *(iVar7 + 0x4c) * 2, 0x4271a0, 0);\n        if (*0x4271a0 != 0) {\n            if (*0x4271a0 == 0x22) {\n                uVar6 = 0x4271a2;\n                puVar4 = fcn.004059c0();\n                *puVar4 = 0;\n            }\n            iVar3 = sub.KERNEL32.dll_lstrlenW();\n            if (((uVar6 < (uVar6 - 8) + iVar3 * 2) && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(),  iVar3 == 0)) &&\n               ((uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(),  uVar6 == 0xffffffff || ((uVar6 & 0x10) == 0))))\n            {\n                fcn.004059df();\n            }\n            fcn.00405993();\n            fcn.00405f48();\n        }\n    }\n    iVar3 = fcn.00405a9b();\n    if (iVar3 == 0) {\n        uStack148 = 0x403a76;\n        fcn.00405f6a(0x434800, *(iVar7 + 0x118));\n    }\n    uStack148 = 0x8040;\n    uStack152 = 0;\n    uStack156 = 0;\n    iVar9 = 1;\n    iVar8 = 0x67;\n    iVar3 = *0x429200;\n    *0x4281e8 = (*_sym.imp.USER32.dll_LoadImageW)(*0x429200, 0x67, 1);\n    if (*(iVar7 + 0x50) == -1) {\ncode_r0x00403b1c:\n        iVar7 = fcn.0040140b(0);\n        if (iVar7 == 0) {\n            fcn.00403bf5();\n            if (*0x4292a0 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x4226c8, 5);\n                pcVar2 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n                iVar7 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"RichEd20\");\n                if (iVar7 == 0) {\n                    (*pcVar2)(L\"RichEd32\");\n                }\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoW;\n                iVar7 = (*_sym.imp.USER32.dll_GetClassInfoW)(0, L\"RichEdit20W\", 0x4281a0);\n                if (iVar7 == 0) {\n                    (*pcVar2)(0, L\"RichEdit\", 0x4281a0);\n                    *0x4281c4 = L\"RichEdit20W\";\n                    (*_sym.imp.USER32.dll_RegisterClassW)(0x4281a0);\n                }\n                uVar5 = (*_sym.imp.USER32.dll_DialogBoxParamW)(*0x429200, *0x4281e0 + 0x69U & 0xffff, 0, 0x403cc2, 0);\n                fcn.0040140b(5);\n                fcn.0040386f(1);\n                return uVar5;\n            }\n            iVar7 = fcn.004052c5(0);\n            if (iVar7 == 0) {\n                fcn.0040140b(1);\n                goto code_r0x00403beb;\n            }\n            if (*0x4281cc == 0) {\n                fcn.0040140b(2);\n            }\n        }\n        uVar5 = 2;\n    }\n    else {\n        iVar7 = 0x4281a0;\n        *0x4281a4 = fcn.00401000;\n        *0x4281b0 = *0x429200;\n        *0x4281c4 = 0x4093ac;\n        *0x4281b4 = *0x4281e8;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterClassW)(0x4281a0);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &stack0xffffff64, 0);\n            *0x4226c8 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                                  (0x80, 0x4093ac, 0, 0x80000000, iVar7, iVar3, iVar8 - iVar7, iVar9 - iVar3, 0, 0, \n                                   *0x429200, 0);\n            goto code_r0x00403b1c;\n        }\ncode_r0x00403beb:\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 1499
    },
    "00404b6e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b6e(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    var_4h = (*pcVar1)(arg_8h, 0x408);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_10h = *0x429228;\n    var_14h = *0x429210 + 0x94;\n    if (arg_ch == 0x110) {\n        var_1ch = 0;\n        var_ch = 2;\n        *0x429260 = arg_8h;\n        *0x4226e0 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x42922c << 2);\n        uVar2 = (*_sym.imp.USER32.dll_LoadBitmapW)(*0x429200, 0x6e);\n        *0x4226d4 = 0xffffffff;\n        *0x4226dc = (*_sym.imp.USER32.dll_SetWindowLongW)(var_4h, 0xfffffffc, fcn.00405166);\n        *0x4226cc = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.dll_ImageList_AddMasked)(*0x4226cc, uVar2, 0xff00ff);\n        (*pcVar1)(var_4h, 0x1109, 2, *0x4226cc);\n        iVar3 = (*pcVar1)(var_4h, 0x111c, 0, 0);\n        if (iVar3 < 0x10) {\n            (*pcVar1)(var_4h, 0x111b, 0x10, 0);\n        }\n        (*_sym.imp.GDI32.dll_DeleteObject)(uVar2);\n        iVar3 = 0;\n        do {\n            iVar7 = *(var_14h + iVar3 * 4);\n            if (iVar7 != 0) {\n                if (iVar3 != 0x20) {\n                    var_ch = 0;\n                }\n                uVar2 = fcn.00405f6a(0, iVar7);\n                uVar2 = (*pcVar1)(var_8h, 0x143, 0, uVar2);\n                (*pcVar1)(var_8h, 0x151, uVar2, iVar3);\n            }\n            uVar5 = var_ch;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x21);\n        fcn.0040419a(arg_8h, 0x15, *(arg_14h + 0x30 + var_ch * 4));\n        fcn.0040419a(arg_8h, 0x16, *(arg_14h + 0x34 + uVar5 * 4));\n        iVar3 = 0;\n        uVar2 = 0;\n        if (*0x42922c < 1) {\ncode_r0x00404d9a:\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(var_4h, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongW)(var_4h, 0xfffffff0, uVar5 & 0xfffffffb);\n        }\n        else {\n            var_18h = var_10h + 8;\n            do {\n                puVar8 = var_18h + 4;\n                if (*puVar8 != 0) {\n                    uVar5 = *var_18h;\n                    var_40h = uVar5 & 0x20;\n                    var_4ch = 0xffff0002;\n                    var_48h = 0xd;\n                    var_3ch = 0x20;\n                    var_50h = uVar2;\n                    var_38h = puVar8;\n                    var_24h = iVar3;\n                    if ((uVar5 & 2) == 0) {\n                        if ((uVar5 & 4) == 0) {\n                            uVar4 = (*pcVar1)(var_4h, 0x1132, 0, &var_50h);\n                            *(*0x4226e0 + iVar3 * 4) = uVar4;\n                        }\n                        else {\n                            uVar2 = (*pcVar1)(var_4h, 0x110a, 3, uVar2);\n                        }\n                    }\n                    else {\n                        var_48h = 0x4d;\n                        var_28h = 1;\n                        uVar2 = (*pcVar1)(var_4h, 0x1132, 0, &var_50h);\n                        var_1ch = 1;\n                        *(*0x4226e0 + iVar3 * 4) = uVar2;\n                        uVar2 = *(*0x4226e0 + iVar3 * 4);\n                    }\n                }\n                iVar3 = iVar3 + 1;\n                var_18h = var_18h + 0x206;\n            } while (iVar3 < *0x42922c);\n            if (var_1ch == 0) goto code_r0x00404d9a;\n        }\n        if (var_ch == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_8h, 5);\n            fcn.004041cf(var_8h);\n            goto code_r0x00405151;\n        }\n        fcn.004041cf(var_4h);\n    }\n    if (arg_ch == 0x405) {\n        arg_10h = 0;\n        arg_ch = 0x40f;\n        arg_14h = 1;\n    }\n    if (((arg_ch == 0x4e) || (arg_ch == 0x413)) && ((var_ch = arg_14h,  arg_ch == 0x413 || (*(arg_14h + 4) == 0x408))))\n    {\n        if (((*0x429218 & 0x200) == 0) &&\n           (((arg_ch == 0x413 || (*(arg_14h + 8) == -2)) && (iVar3 = fcn.00404abc(var_4h, arg_ch != 0x413),  -1 < iVar3)\n            ))) {\n            puVar8 = iVar3 * 0x818 + 8 + var_10h;\n            uVar5 = *puVar8;\n            if ((uVar5 & 0x10) == 0) {\n                if ((uVar5 & 0x40) == 0) {\n                    uVar5 = uVar5 ^ 1;\n                }\n                else {\n                    uVar6 = uVar5 ^ 0x80;\n                    if (uVar6 < '\\0') {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xff | 1;\n                    }\n                    else {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xfe;\n                    }\n                }\n                *puVar8 = uVar5;\n                fcn.0040117d(iVar3);\n                arg_10h = iVar3 + 1;\n                arg_14h = ~*0x429218 >> 8 & 1;\n                arg_ch = 0x40f;\n            }\n        }\n        if (var_ch != 0) {\n            if (*(var_ch + 8) == -0x1c3) {\n                (*pcVar1)(var_4h, 0x419, 0, *(var_ch + 0x5c));\n            }\n            if (*(var_ch + 8) == -0x1c7) {\n                if (*(var_ch + 0xc) == 2) {\n                    puVar8 = *(var_ch + 0x5c) * 0x818 + 8 + var_10h;\n                    *puVar8 = *puVar8 | 0x20;\n                }\n                else {\n                    puVar8 = *(var_ch + 0x5c) * 0x818 + 8 + var_10h;\n                    *puVar8 = *puVar8 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) || (iVar3 = (*pcVar1)(var_8h, 0x147, 0, 0),  iVar3 == -1))\n        goto code_r0x00405151;\n        iVar3 = (*pcVar1)(var_8h, 0x150, iVar3, 0);\n        if ((iVar3 == -1) || (*(var_14h + iVar3 * 4) == 0)) {\n            iVar3 = 0x20;\n        }\n        fcn.00401299(iVar3);\n        (*pcVar1)(arg_8h, 0x420, 0, iVar3);\n        arg_10h = -1;\n        arg_14h = 0;\n        arg_ch = 0x40f;\n    }\n    if (arg_ch == 0x200) {\n        (*pcVar1)(var_4h, 0x200, 0, 0);\n    }\n    if (arg_ch == 0x40b) {\n        if (*0x4226cc != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*0x4226cc);\n        }\n        if (*0x4226e0 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x4226e0);\n        }\n        *0x4226cc = 0;\n        *0x4226e0 = 0;\n        *0x429260 = 0;\n    }\n    if (arg_ch == 0x40f) {\n        fcn.004011ef(0, 0);\n        if (arg_10h != 0) {\n            iVar3 = arg_10h;\n            if (arg_10h != -1) {\n                iVar3 = arg_10h + -1;\n            }\n            fcn.00404b3c(8, iVar3);\n        }\n        if (arg_14h != 0) {\n            arg_14h = fcn.004012e2(*0x4226e0);\n            fcn.00401299(arg_14h);\n            iVar3 = 0;\n            iVar7 = 0;\n            if (0 < arg_14h) {\n                do {\n                    if (*(var_14h + iVar3 * 4) != 0) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < arg_14h);\n            }\n            (*pcVar1)(var_8h, 0x14e, iVar7, 0);\n            arg_ch = 0x420;\n        }\n        fcn.004011ef(0, 0);\n        var_1ch = *0x4226e0;\n        var_38h = 0xf030;\n        var_10h = 0;\n        if (0 < *0x42922c) {\n            puVar8 = *0x429228 + 8;\n            do {\n                uVar5 = *(var_1ch + var_10h * 4);\n                if (uVar5 != 0) {\n                    uVar6 = *puVar8;\n                    var_44h = 8;\n                    if ((uVar6 & 0x100) != 0) {\n                        var_34h = puVar8 + 4;\n                        var_44h = 9;\n                        *(puVar8 + 1) = *(puVar8 + 1) & 0xfe;\n                    }\n                    if ((uVar6 & 0x40) == 0) {\n                        iVar3 = (uVar6 & 1) + 1;\n                        if ((uVar6 & 0x10) != 0) {\n                            iVar3 = (uVar6 & 1) + 4;\n                        }\n                    }\n                    else {\n                        iVar3 = 3;\n                    }\n                    var_3ch = (iVar3 << 0xb | uVar6 & 8) * 2 | uVar6 & 0x20;\n                    var_40h = uVar5;\n                    (*pcVar1)(var_4h, 0x1102, (uVar6 >> 5 & 1U) + 1, uVar5);\n                    (*pcVar1)(var_4h, 0x113f, 0, &var_44h);\n                }\n                var_10h = var_10h + 1;\n                puVar8 = puVar8 + 0x206;\n            } while (var_10h < *0x42922c);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(var_4h, 0, 1);\n        if (*(*0x4281dc + 0x10) != 0) {\n            uVar2 = fcn.00404a8f(5);\n            fcn.004049d6(0x3ff, 0xfffffffb, uVar2);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x429218 & 0x100) != 0)) {\n        iVar3 = (arg_14h == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(var_4h, iVar3);\n        uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe, iVar3);\n        (*pcVar1)(uVar2);\n    }\ncode_r0x00405151:\n    fcn.00404201(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 3376
    },
    "00405331": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405331(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    ushort *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint uStack32;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar10 = *0x4281e4;\n    pcVar2 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar9 = 0;\n    var_4h = *0x4281e4;\n    if (arg_ch == 0x110) {\n        var_30h = 0xffffffff;\n        var_24h = 0xffffffff;\n        var_38h = 2;\n        var_34h = 0;\n        var_2ch = NULL;\n        var_28h = 0;\n        var_20h = 0;\n        uStack32 = 0;\n        iVar10 = *(*0x429210 + 0x5c);\n        iVar9 = *(*0x429210 + 0x60);\n        *0x4281d0 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x4281c8 = (*pcVar2)(arg_8h, 0x3ee);\n        *0x4281e4 = (*pcVar2)(arg_8h, 0x3f8);\n        var_4h = *0x4281e4;\n        fcn.004041cf(*0x4281d0);\n        *0x4281d4 = fcn.00404a8f(4);\n        *0x4281ec = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(var_4h, &var_18h);\n        var_30h = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x15);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        var_30h = var_10h - var_30h;\n        (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1061, 0, &var_38h);\n        (*pcVar1)(var_4h, 0x1036, 0x4000, 0x4000);\n        if (-1 < iVar10) {\n            (*pcVar1)(var_4h, 0x1001, 0, iVar10);\n            (*pcVar1)(var_4h, 0x1026, 0, iVar10);\n        }\n        if (-1 < iVar9) {\n            (*pcVar1)(var_4h, 0x1024, 0, iVar9);\n        }\n        fcn.0040419a(arg_8h, 0x1b, *(arg_14h + 0x30));\n        if ((*0x429218 & 3) != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x4281d0, 0);\n            if ((*0x429218 & 2) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(var_4h, 8);\n            }\n            else {\n                *0x4281d0 = 0;\n            }\n            fcn.004041cf(*0x4281c8);\n        }\n        uVar3 = (*pcVar2)(arg_8h, 0x3ec);\n        (*pcVar1)(uVar3, 0x401, 0, 0x75300000);\n        if ((*0x429218 & 4) != 0) {\n            (*pcVar1)(uVar3, 0x409, 0, iVar9);\n            (*pcVar1)(uVar3, 0x2001, 0, iVar10);\n        }\ncode_r0x004056bc:\n        uVar3 = 0;\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec, 0, &var_8h);\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.004052c5, uVar3);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        }\n        pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n        if (arg_ch == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x4281d0, 0);\n                (*pcVar2)(iVar10, 8);\n                fcn.004041cf(iVar10);\n                goto code_r0x00405539;\n            }\n        }\n        else {\ncode_r0x00405539:\n            iVar10 = 1;\n            if (arg_ch == 0x404) {\n                if (*0x4281cc != 0) {\n                    *0x420eb8 = 2;\n                    fcn.00404173();\n                    goto code_r0x0040555e;\n                }\n                (*pcVar2)(*0x429208, 8);\n                if (*0x42928c == 0) {\n                    fcn.004051f2(*(*0x4216c0 + 0x34), 0);\n                }\n                fcn.00404173(1);\n            }\n            if ((arg_ch == 0x7b) && (arg_10h == var_4h)) {\n                iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1004, 0, 0);\n                if (0 < iVar4) {\n                    uVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    uVar5 = fcn.00405f6a(0, 0xffffffe1);\n                    (*_sym.imp.USER32.dll_AppendMenuW)(uVar3, 0, 1, uVar5);\n                    iVar6 = arg_14h;\n                    iVar8 = arg_14h >> 0x10;\n                    if (arg_14h == -1) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(var_4h, &var_18h);\n                        iVar6 = var_18h;\n                        iVar8 = var_14h;\n                    }\n                    iVar6 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar3, 0x180, iVar6, iVar8, 0, arg_8h, 0);\n                    if (iVar6 == 1) {\n                        var_38h = 0;\n                        var_2ch = 0x4226e8;\n                        var_28h = 0x1fff;\n                        arg_8h = iVar4;\n                        do {\n                            arg_8h = arg_8h + -1;\n                            iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1073, arg_8h, &var_40h);\n                            iVar10 = iVar10 + 2 + iVar6;\n                        } while (arg_8h != 0);\n                        (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                        (*_sym.imp.USER32.dll_EmptyClipboard)();\n                        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar10 * 2);\n                        puVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                        do {\n                            var_2ch = puVar7;\n                            iVar10 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1073, iVar9, &var_40h);\n                            puVar7 = puVar7 + iVar10;\n                            *puVar7 = 0xd;\n                            puVar7[1] = 10;\n                            puVar7 = puVar7 + 2;\n                            iVar9 = iVar9 + 1;\n                        } while (iVar9 < iVar4);\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n                        (*_sym.imp.USER32.dll_SetClipboardData)(0xd, uVar3);\n                        (*_sym.imp.USER32.dll_CloseClipboard)();\n                    }\n                }\n                goto code_r0x004056bc;\n            }\n        }\ncode_r0x0040555e:\n        uVar3 = fcn.00404201(arg_ch, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 2021
    },
    "00405788": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405788(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t unaff_retaddr;\n    \n    iVar1 = fcn.00405b8f(param_1);\n    if (iVar1 != -1) {\n        if ((param_1 & 1) == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(param_1);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)();\n        }\n        if (iVar2 != 0) {\n            return 1;\n        }\n        if ((unaff_retaddr & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(param_1, iVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 188
    },
    "004057d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004057d0(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint lpFindFileData;\n    uint var_22ch;\n    int16_t var_228h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch & 4;\n    var_8h = fcn.00405a9b(arg_8h);\n    if ((arg_ch & 8) == 0) {\n        uVar1 = arg_ch & 1;\n        if ((uVar1 == 0) || ((var_8h != 0 && ((arg_ch & 2) != 0)))) {\n            fcn.00405f48(0x4246f0, arg_8h);\n            if (uVar1 == 0) {\n                fcn.004059df(arg_8h);\n            }\n            else {\n                sub.KERNEL32.dll_lstrcatW(0x4246f0, L\"\\\\*.*\");\n            }\n            if ((*arg_8h != 0) || (*0x4246f0 == 0x5c)) {\n                sub.KERNEL32.dll_lstrcatW(arg_8h, 0x409014);\n            }\n            iVar2 = sub.KERNEL32.dll_lstrlenW(arg_8h);\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(0x4246f0, &lpFindFileData);\n            if (iVar3 != -1) {\n                do {\n                    if ((var_22ch != 0x2e) || ((var_22ch._2_2_ != 0 && ((var_22ch._2_2_ != 0x2e || (var_228h != 0))))))\n                    {\n                        fcn.00405f48(arg_8h + iVar2, &var_22ch);\n                        if ((lpFindFileData & 0x10) == 0) {\n                            iVar4 = fcn.00405788(arg_8h, var_4h);\n                            if (iVar4 == 0) {\n                                if (var_4h == 0) {\n                                    *0x429288 = *0x429288 + 1;\n                                }\n                                else {\n                                    fcn.004051f2(0xfffffff1, arg_8h);\n                                    fcn.00405de2(arg_8h, 0);\n                                }\n                            }\n                            else {\n                                fcn.004051f2(0xfffffff2, arg_8h);\n                            }\n                        }\n                        else if ((arg_ch & 3) == 3) {\n                            fcn.004057d0(arg_8h, arg_ch);\n                        }\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3, &lpFindFileData);\n                } while (iVar4 != 0);\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n            }\n            if (uVar1 != 0) {\n                (arg_8h + iVar2)[-1] = 0;\n            }\n        }\n        if (uVar1 != 0) {\n            if (var_8h != 0) {\n                iVar2 = fcn.0040628b(arg_8h);\n                if (iVar2 == 0) {\n                    return;\n                }\n                fcn.00405993(arg_8h);\n                iVar2 = fcn.00405788(arg_8h, var_4h | 1);\n                if (iVar2 != 0) {\n                    fcn.004051f2(0xffffffe5, arg_8h);\n                    return;\n                }\n                if (var_4h != 0) {\n                    fcn.004051f2(0xfffffff1, arg_8h);\n                    fcn.00405de2(arg_8h, 0);\n                    return;\n                }\n            }\n            *0x429288 = *0x429288 + 1;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(arg_8h);\n        *0x429288 = *0x429288 + (iVar2 == 0);\n    }\n    return;\n}\n",
        "token_count": 973
    },
    "00405a9b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00405a9b(uint param_1)\n\n{\n    int16_t *piVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int16_t *piVar5;\n    \n    fcn.00405f48(0x424ef0, param_1);\n    piVar1 = fcn.00405a3e(0x424ef0);\n    if ((piVar1 != NULL) &&\n       ((piVar5 = piVar1,  fcn.004061dc(piVar1),  (*0x429218 & 0x80) == 0 || ((*piVar1 != 0 && (*piVar1 != 0x5c)))))) {\n        while( true ) {\n            uVar4 = 0x424ef0;\n            iVar3 = sub.KERNEL32.dll_lstrlenW(0x424ef0);\n            if (iVar3 <= piVar1 + -0x212778 >> 1) {\n                fcn.00405993(0x424ef0, uVar4, piVar5);\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(0x424ef0);\n                return iVar3 != -1;\n            }\n            puVar2 = fcn.0040628b(0x424ef0);\n            if ((puVar2 != NULL) && ((*puVar2 & 0x10) == 0)) break;\n            piVar5 = 0x424ef0;\n            fcn.004059df();\n        }\n    }\n    return false;\n}\n",
        "token_count": 350
    },
    "00405b8f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00405b8f(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(unaff_retaddr, uVar1 & 0xfffffffe);\n    }\n    return uVar1;\n}\n",
        "token_count": 105
    },
    "00405c66": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405c66(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *arg_10h;\n    int32_t lpBuffer;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int32_t unaff_retaddr;\n    uchar *puStack116;\n    uint uStack112;\n    int32_t iStack108;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetShortPathNameW;\n    if (unaff_retaddr != 0) {\n        fcn.00405bb4();\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            return;\n        }\n        if (0x400 < iVar2) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)();\n    if ((iVar2 != 0) && (iVar2 < 0x401)) {\n        iVar3 = (*_sym.imp.USER32.dll_wsprintfA)();\n        fcn.00405f6a(0x426588, *(*0x429210 + 0x128));\n        iVar2 = fcn.00405bb4();\n        if (iVar2 != -1) {\n            arg_10h = (*_sym.imp.KERNEL32.dll_GetFileSize)();\n            lpBuffer = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n            if ((lpBuffer != 0) && (iVar4 = fcn.00405c37(iVar2, lpBuffer, arg_10h),  iVar4 != 0)) {\n                iVar4 = fcn.00405b19(lpBuffer, \"[Rename]\\r\\n\");\n                if (iVar4 == 0) {\n                    iStack108 = 0x405d66;\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n                    arg_10h = arg_10h + 10;\n                    puStack116 = arg_10h;\n                }\n                else {\n                    iStack108 = 0x405d79;\n                    puVar5 = fcn.00405b19(iVar4 + 10, 0x409560);\n                    if (puVar5 == NULL) {\n                        iVar2 = 0x40;\n                        puStack116 = arg_10h;\n                    }\n                    else {\n                        puVar7 = arg_10h + lpBuffer;\n                        puVar6 = puVar7 + iVar3;\n                        for (; puVar5 < puVar7; puVar7 = puVar7 + -1) {\n                            *puVar6 = *puVar7;\n                            puVar6 = puVar6 + -1;\n                        }\n                        iVar2 = 0x40;\n                        puStack116 = puVar5 + (1 - lpBuffer);\n                    }\n                }\n                puStack116 = puStack116 + lpBuffer;\n                uStack112 = 0x425988;\n                iStack108 = iVar3;\n                fcn.00405b6f();\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar2, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_WriteFile)(iVar2, lpBuffer, arg_10h + iVar3, &stack0xffffff8c, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(lpBuffer);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n    }\n    return;\n}\n",
        "token_count": 773
    },
    "0040628b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040628b(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(param_1, 0x425738);\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        uVar2 = 0x425738;\n    }\n    return uVar2;\n}\n",
        "token_count": 114
    },
    "0040117d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0040117d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar1 = *(param_1 * 0x818 + 8 + *0x429228);\n    if ((uVar1 & 2) != 0) {\n        uVar4 = param_1 + 1;\n        if (uVar4 < *0x42922c) {\n            puVar3 = uVar4 * 0x818 + 8 + *0x429228;\n            iVar5 = 0;\n            do {\n                uVar2 = *puVar3;\n                if ((uVar2 & 2) == 0) {\n                    if ((uVar2 & 4) == 0) {\n                        iVar6 = iVar5;\n                        if ((uVar2 & 0x10) == 0) {\n                            *puVar3 = (uVar2 ^ uVar1) & 1 ^ uVar2;\n                        }\n                    }\n                    else {\n                        iVar6 = iVar5 + -1;\n                        if (iVar5 == 0) {\n                            return;\n                        }\n                    }\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x206;\n                iVar5 = iVar6;\n            } while (uVar4 < *0x42922c);\n        }\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "004011ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011ef(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *0x429228;\n    iVar5 = arg_8h * 0x818 + *0x429228;\n    var_4h = 0;\n    var_8h = 0;\n    if (((*(iVar5 + 8) & 2) != 0) && (arg_ch != 0)) {\n        arg_8h = arg_8h + 1;\n        *(iVar5 + 8) = *(iVar5 + 8) & 0xffffffbe;\n    }\n    if (arg_8h < *0x42922c) {\n        do {\n            puVar1 = arg_8h * 0x818 + 8 + iVar2;\n            uVar3 = arg_8h + 1;\n            uVar4 = *puVar1;\n            if ((uVar4 & 2) != 0) {\n                uVar3 = fcn.004011ef(arg_8h, 1);\n                uVar4 = *puVar1;\n            }\n            if ((uVar4 & 4) != 0) {\n                if (var_4h == 0) {\n                    return uVar3;\n                }\n                if (var_8h != 0) {\n                    *(iVar5 + 8) = *(iVar5 + 8) | 0x40;\n                    return uVar3;\n                }\n                *(iVar5 + 8) = *(iVar5 + 8) & 0xffffff7f | 1;\n                return uVar3;\n            }\n            if ((uVar4 & 0x40) != 0) {\n                var_4h = var_4h + 1;\n            }\n            if ((uVar4 & 1) == 0) {\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_4h = var_4h + 1;\n            }\n            arg_8h = uVar3;\n        } while (uVar3 < *0x42922c);\n    }\n    return 0;\n}\n",
        "token_count": 534
    },
    "004012e2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012e2(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    bool bVar3;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *0x429210 + 0x94;\n    do {\n        uVar1 = 0;\n        if (*var_8h != 0) {\n            bVar3 = *0x42922c == 0;\n            if (*0x42922c != 0) {\n                puVar2 = *0x429228 + 8;\n                do {\n                    if (((*puVar2 & 6) == 0) &&\n                       (((arg_8h == 0 || (*(arg_8h + uVar1 * 4) != 0)) &&\n                        ((puVar2[-1] & 1 << (var_4h & 0x1f)) != (*puVar2 & 1) << (var_4h & 0x1f))))) break;\n                    uVar1 = uVar1 + 1;\n                    puVar2 = puVar2 + 0x206;\n                } while (uVar1 < *0x42922c);\n                bVar3 = uVar1 == *0x42922c;\n            }\n            if (bVar3) {\n                return var_4h;\n            }\n        }\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        if (0x1f < var_4h) {\n            return var_4h;\n        }\n    } while( true );\n}\n",
        "token_count": 388
    },
    "00402d1a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d1a(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_80h;\n    \n    if (arg_8h == 0) {\n        if (*0x417e9c == 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            if (*0x42920c < uVar1) {\n                if (*0x429208 == 0) {\n                    *0x417e9c = (*_sym.imp.USER32.dll_CreateDialogParamW)(*0x429200, 0x6f, 0, fcn.00402c7f, 0);\n                    (*_sym.imp.USER32.dll_ShowWindow)(*0x417e9c, 5);\n                }\n                else if ((*0x4292b4 & 1) != 0) {\n                    uVar2 = fcn.00402cfe();\n                    (*_sym.imp.USER32.dll_wsprintfW)(&var_80h, L\"... %d%%\", uVar2);\n                    fcn.004051f2(0, &var_80h);\n                }\n            }\n        }\n        else {\n            fcn.004062eb(0);\n        }\n    }\n    else {\n        if (*0x417e9c != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(*0x417e9c);\n        }\n        *0x417e9c = 0;\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "00404201": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404201(int32_t arg_8h, uint hdc, uint hWnd)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((arg_8h - 0x133U < 6) &&\n       (puVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xffffffeb),  pcVar1 = _sym.imp.USER32.dll_GetSysColor, \n       puVar2 != NULL)) {\n        uVar3 = *puVar2;\n        if ((*(puVar2 + 5) & 2) != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetSysColor)(uVar3);\n        }\n        if ((*(puVar2 + 5) & 1) != 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar3);\n        }\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, puVar2[4]);\n        var_8h = puVar2[1];\n        if ((*(puVar2 + 5) & 8) != 0) {\n            var_8h = (*pcVar1)(var_8h);\n        }\n        if ((*(puVar2 + 5) & 4) != 0) {\n            (*_sym.imp.GDI32.dll_SetBkColor)(hdc, var_8h);\n        }\n        if ((*(puVar2 + 5) & 0x10) != 0) {\n            var_ch = puVar2[2];\n            if (puVar2[3] != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(puVar2[3]);\n            }\n            uVar3 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            puVar2[3] = uVar3;\n        }\n        return puVar2[3];\n    }\n    return 0;\n}\n",
        "token_count": 454
    },
    "00404337": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404337(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int16_t *piVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int16_t *var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n    if (arg_ch == 0x110) {\n        iVar7 = *(arg_14h + 0x30);\n        if (iVar7 < 0) {\n            iVar7 = *(*0x4281dc - (iVar7 * 4 + 4));\n        }\n        piVar5 = *0x429238 + iVar7 * 2;\n        iVar2 = *piVar5;\n        piVar5 = piVar5 + 1;\n        var_8h = 0;\n        var_4h = fcn.004042e8;\n        if (iVar2 != 2) {\n            var_4h = fcn.004042ae;\n        }\n        uVar9 = ~*(arg_14h + 0x14) >> 5 & 1 | *(arg_14h + 0x14) & 1;\n        var_ch = piVar5;\n        fcn.0040419a(arg_8h, 0x22, *(arg_14h + 0x34));\n        fcn.0040419a(arg_8h, 0x23, *(arg_14h + 0x38));\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, (uVar9 == 0) + 0x40a, 1);\n        fcn.004041bc(uVar9);\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.004041cf(uVar6);\n        pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x45b, 1, 0);\n        iVar7 = *(*0x429210 + 0x68);\n        if (iVar7 < 0) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar7);\n        }\n        (*pcVar4)(uVar6, 0x443, 0, iVar7);\n        (*pcVar4)(uVar6, 0x445, 0, 0x4010000);\n        uVar8 = sub.KERNEL32.dll_lstrlenW(piVar5);\n        (*pcVar4)(uVar6, 0x435, 0, uVar8);\n        *0x4206b4 = 0;\n        (*pcVar4)(uVar6, 0x449, iVar2, &var_ch);\n        *0x4206b4 = 0;\n        return 0;\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h >> 0x10 != 0) || (*0x4206b4 != 0)) || (puVar1 = *0x4216c0 + 0x14,  (*puVar1 & 0x20) == 0))\n        goto code_r0x004045b7;\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a, 0xf0, 0, 0);\n        uVar9 = (*pcVar4)(uVar6);\n        *puVar1 = *puVar1 & 0xfffffffe | uVar9 & 1;\n        fcn.004041bc(uVar9 & 1);\n        fcn.004045ca();\n    }\n    if (arg_ch == 0x4e) {\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n            var_8h = *(arg_14h + 0x1c);\n            var_ch = *(arg_14h + 0x18);\n            var_4h = 0x4271a0;\n            if (var_8h - var_ch < 0x800) {\n                (*pcVar4)(uVar6, 1099, 0, &var_ch);\n                pcVar3 = _sym.imp.USER32.dll_LoadCursorW;\n                uVar6 = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f02);\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n                (*_sym.imp.SHELL32.dll_ShellExecuteW)(arg_8h, L\"open\", var_4h, 0, 0, 1);\n                uVar6 = (*pcVar3)(0, 0x7f00);\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n            }\n        }\n        if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n            if (*(arg_14h + 0x10) == 0xd) {\n                (*pcVar4)(*0x429208, 0x111, 1, 0);\n            }\n            if (*(arg_14h + 0x10) == 0x1b) {\n                (*pcVar4)(*0x429208, 0x10, 0, 0);\n            }\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x40b) {\n        *0x4206b4 = *0x4206b4 + 1;\n    }\ncode_r0x004045b7:\n    uVar6 = fcn.00404201(arg_ch, arg_10h, arg_14h);\n    return uVar6;\n}\n",
        "token_count": 1384
    },
    "00404a8f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00404a8f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x429228;\n    iVar3 = *0x42922c;\n    if (*0x42922c != 0) {\n        do {\n            if ((*(iVar2 + 8) & 1) != 0) {\n                iVar1 = iVar1 + *(iVar2 + param_1 * 4);\n            }\n            iVar3 = iVar3 + -1;\n            iVar2 = iVar2 + 0x818;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 165
    },
    "004051f2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004051f2(uint arg_8h, int32_t lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *0x4281e4;\n    if (*0x4281e4 != 0) {\n        var_8h = *0x4292b4;\n        uVar4 = *0x4292b4 & 1;\n        if (uVar4 == 0) {\n            fcn.00405f6a(0x4216c8, arg_8h);\n        }\n        iVar2 = sub.KERNEL32.dll_lstrlenW(0x4216c8);\n        if (lpString2 != 0) {\n            iVar3 = sub.KERNEL32.dll_lstrlenW(lpString2);\n            if (0xfff < iVar3 + iVar2) {\n                return;\n            }\n            sub.KERNEL32.dll_lstrcatW(0x4216c8, lpString2);\n        }\n        if ((var_8h & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextW)(*0x4281c8, 0x4216c8);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        if ((var_8h & 2) == 0) {\n            var_1ch = 0x4216c8;\n            var_30h = 1;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1004, 0, 0);\n            var_2ch = var_2ch - uVar4;\n            var_28h = 0;\n            (*pcVar1)(var_4h, 0x104d - uVar4, 0, &var_30h);\n            (*pcVar1)(var_4h, 0x1013, var_2ch, 0);\n        }\n        if (uVar4 != 0) {\n            *(iVar2 * 2 + 0x4216c8) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 538
    },
    "004052c5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.004052c5(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar4 = *0x42922c;\n    iVar2 = *0x429228;\n    uVar1 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x4292b8 = *0x4292b8 | uVar1;\n    uVar5 = 0;\n    fcn.004041e6(0);\n    if (iVar4 != 0) {\n        puVar3 = iVar2 + 0xc;\n        do {\n            iVar4 = iVar4 + -1;\n            if ((*(puVar3 + -1) & 1) != 0) {\n                uVar5 = *puVar3;\n                iVar2 = fcn.00401389();\n                if (iVar2 != 0) {\n                    *0x42928c = *0x42928c + 1;\n                    break;\n                }\n            }\n            puVar3 = puVar3 + 0x206;\n        } while (iVar4 != 0);\n    }\n    fcn.004041e6(0x404, uVar5);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    return *0x42928c;\n}\n",
        "token_count": 308
    },
    "00406360": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.00406360(uint32_t param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x426d8c == 0) {\n        uVar2 = 0;\n        do {\n            iVar3 = 8;\n            uVar1 = uVar2;\n            do {\n                uVar1 = uVar1 >> 1 ^ -((uVar1 & 1) != 0) & 0xedb88320;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(uVar2 * 4 + 0x426d88) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            param_1 = param_1 >> 8 ^ *((param_1 & 0xff ^ *param_2) * 4 + 0x426d88);\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return ~param_1;\n}\n",
        "token_count": 308
    },
    "00401389": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00401389(int32_t param_1)\n\n{\n    int32_t *hWndChildAfter;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_retaddr;\n    \n    while ((-1 < param_1 && (hWndChildAfter = param_1 * 0x1c + *0x429230,  *hWndChildAfter != 1))) {\n        iVar1 = fcn.00401434(hWndChildAfter);\n        if (iVar1 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        iVar1 = fcn.0040136d();\n        if (iVar1 == 0) {\n            iVar2 = 1;\n            iVar1 = param_1 + 1;\n        }\n        else {\n            iVar1 = iVar1 + -1;\n            iVar2 = iVar1 - param_1;\n        }\n        param_1 = iVar1;\n        if (unaff_retaddr != 0) {\n            *0x4281ec = *0x4281ec + iVar2;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*0x4281ec, 30000, *0x4281d4, 0);\n            (*_sym.imp.USER32.dll_SendMessageW)(0x4013a8, 0x402, uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 318
    },
    "00402c7f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402c7f(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    char16_t *pcVar2;\n    uint var_80h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n        arg_ch = 0x113;\n    }\n    if (arg_ch == 0x113) {\n        uVar1 = fcn.00402cfe();\n        pcVar2 = L\"unpacking data: %d%%\";\n        if (*0x429210 == 0) {\n            pcVar2 = L\"verifying installer: %d%%\";\n        }\n        (*_sym.imp.USER32.dll_wsprintfW)(&var_80h, pcVar2, uVar1);\n        (*_sym.imp.USER32.dll_SetWindowTextW)(arg_8h, &var_80h);\n        sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x406, &var_80h);\n    }\n    return 0;\n}\n",
        "token_count": 248
    },
    "00403062": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403062(int32_t arg_8h, uint hFile, int32_t lpBuffer, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_10h;\n    uint var_8h;\n    int32_t nNumberOfBytesToWrite;\n    \n    if (-1 < arg_8h) {\n        *0x417e94 = arg_8h + *0x429258;\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40901c, *0x417e94, 0, 0);\n    }\n    iVar1 = fcn.0040317d(4);\n    if (iVar1 < 0) {\n        return iVar1;\n    }\n    iVar1 = fcn.00405c37(*0x40901c, &arg_8h, 4);\n    if (iVar1 != 0) {\n        *0x417e94 = *0x417e94 + 4;\n        iVar1 = fcn.0040317d(arg_8h);\n        if (iVar1 < 0) {\n            return iVar1;\n        }\n        if (lpBuffer == 0) {\n            while( true ) {\n                if (arg_8h < 1) {\n                    return iVar1;\n                }\n                arg_10h = arg_8h;\n                if (0x3fff < arg_8h) {\n                    arg_10h = 0x4000;\n                }\n                nNumberOfBytesToWrite = arg_10h;\n                iVar2 = fcn.00405c37(*0x40901c, 0x413e90, arg_10h);\n                if (iVar2 == 0) break;\n                iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, 0x413e90, nNumberOfBytesToWrite, &arg_14h, 0);\n                if ((iVar2 == 0) || (arg_14h != arg_10h)) {\n                    return -2;\n                }\n                iVar1 = iVar1 + nNumberOfBytesToWrite;\n                arg_8h = arg_8h - nNumberOfBytesToWrite;\n                *0x417e94 = *0x417e94 + nNumberOfBytesToWrite;\n            }\n        }\n        else {\n            iVar1 = arg_8h;\n            if (arg_14h <= arg_8h) {\n                iVar1 = arg_14h;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(*0x40901c, lpBuffer, iVar1, &nNumberOfBytesToWrite, 0);\n            if (iVar1 != 0) {\n                *0x417e94 = *0x417e94 + nNumberOfBytesToWrite;\n                return nNumberOfBytesToWrite;\n            }\n        }\n    }\n    return -3;\n}\n",
        "token_count": 639
    },
    "004045ca": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004045ca(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x4206b0;\n    if (*0x42928c == 0) {\n        uVar1 = *0x4226e4;\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 90
    },
    "00404abc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404abc(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_34h = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n        lpPoint = uVar2;\n        var_ch = uVar2 >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        (*pcVar1)(arg_8h, 0x1111, 0, &lpPoint);\n        var_34h = var_4h;\n        if ((var_8h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_38h = 4;\n    (*pcVar1)(arg_8h, 0x113e, 0, &var_38h);\n    return var_14h;\n}\n",
        "token_count": 320
    },
    "00405724": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00405724(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 & 0x1fffff;\n    if ((*0x4292a0 == 0) || (param_2 >> 0x15 == 0)) {\n        if (*0x4292a8 != 0) {\n            uVar1 = uVar1 ^ 0x180000;\n        }\n        *0x4093e4 = *0x429208;\n        *0x4093e8 = *0x429200;\n        *0x4093ec = param_1;\n        *0x4093f0 = 0x428200;\n        *0x4093f4 = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectW)(0x4093e0);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00405a3e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint16_t * fcn.00405a3e(int16_t *param_1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextW;\n    piVar2 = (*_sym.imp.USER32.dll_CharNextW)(param_1);\n    uVar3 = (*pcVar1)(piVar2);\n    if (((*param_1 == 0) || (*piVar2 != 0x3a)) || (piVar2[1] != 0x5c)) {\n        if ((*param_1 == 0x5c) && (param_1[1] == 0x5c)) {\n            iVar4 = 2;\n            do {\n                iVar4 = iVar4 + -1;\n                piVar2 = fcn.004059c0();\n                if (*piVar2 == 0) goto code_r0x00405a93;\n                piVar2 = piVar2 + 1;\n            } while (iVar4 != 0);\n        }\n        else {\ncode_r0x00405a93:\n            piVar2 = NULL;\n        }\n    }\n    else {\n        piVar2 = (*pcVar1)(uVar3);\n    }\n    return piVar2;\n}\n",
        "token_count": 295
    },
    "00405f6a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00405f6a(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *arg_8h_00;\n    int32_t iVar8;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint *ppidl;\n    uint16_t *var_4h;\n    \n    puVar7 = arg_8h;\n    if (arg_ch < 0) {\n        arg_ch = *(*0x4281dc - (arg_ch * 4 + 4));\n    }\n    puVar5 = *0x429238 + arg_ch * 2;\n    arg_8h_00 = 0x4271a0;\n    if ((0x42719f < arg_8h) && (arg_8h + -0x109c68 >> 1 < 0x800)) {\n        arg_8h = NULL;\n        arg_8h_00 = puVar7;\n    }\n    do {\n        while( true ) {\n            uVar2 = *puVar5;\n            if ((uVar2 == 0) || (0x7ff < (arg_8h_00 + -0x109c68 & 0xfffffffe))) {\n                *arg_8h_00 = 0;\n                if (arg_8h != NULL) {\n                    fcn.00405f48(arg_8h, 0x4271a0);\n                }\n                return;\n            }\n            var_4h = puVar5 + 1;\n            if (uVar2 < 4) break;\n            if (uVar2 == 4) {\n                *arg_8h_00 = *var_4h;\n                arg_8h_00 = arg_8h_00 + 2;\n                puVar5 = puVar5 + 2;\n            }\n            else {\n                *arg_8h_00 = uVar2;\n                arg_8h_00 = arg_8h_00 + 2;\n                puVar5 = var_4h;\n            }\n        }\n        uVar1 = *var_4h;\n        var_4h = puVar5 + 2;\n        uVar6 = (*(puVar5 + 3) & 0x7f) << 7 | uVar1 & 0x7f;\n        puVar7 = uVar1;\n        var_ch = *(puVar5 + 3);\n        var_18h = puVar7 | 0x8000;\n        var_10h = var_ch | 0x8000;\n        var_14h = puVar7;\n        if (uVar2 == 2) {\n            iVar8 = 2;\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n            if ((((iVar4 < 0) && (iVar4 != 0x5a04)) && (var_ch != 0x23)) && (var_ch != 0x2e)) {\n                bVar3 = false;\n            }\n            else {\n                bVar3 = true;\n            }\n            if (*0x429284 != 0) {\n                var_10h = 0x4;\n                iVar8 = 4;\n            }\n            if (uVar1 < '\\0') {\n                var_10h = puVar7 & 0x40;\n                var_18h = *0x429238 + (puVar7 & 0x3f) * 2;\n                var_14h = arg_8h_00;\n                fcn.00405e15(0x80000002, L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", var_18h, arg_8h_00, var_10h);\n                if (*arg_8h_00 == 0) {\n                    fcn.00405f6a(arg_8h_00, var_ch);\n                    goto code_r0x00406125;\n                }\ncode_r0x0040612b:\n                if (var_ch == 0x1a) {\n                    sub.KERNEL32.dll_lstrcatW();\n                }\n            }\n            else {\n                if (puVar7 == 0x25) {\n                    var_10h = 0x400;\n                    var_18h = 0x4060b1;\n                    var_14h = arg_8h_00;\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n                }\n                else {\n                    if (puVar7 == 0x24) {\n                        var_10h = 0x400;\n                        var_18h = 0x4060c4;\n                        var_14h = arg_8h_00;\n                        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)();\n                        iVar8 = 0;\n                    }\n                    while (iVar8 != 0) {\n                        iVar8 = iVar8 + -1;\n                        if ((*0x429204 != NULL) && (bVar3)) {\n                            var_10h = arg_8h_00;\n                            var_14h = NULL;\n                            var_18h = NULL;\n                            iVar4 = (**0x429204)(*0x429208, (&fcn.00405f6a::var_18h)[iVar8]);\n                            if (iVar4 == 0) break;\n                        }\n                        var_10h = &fcn.00405f6a::ppidl;\n                        var_14h = (&fcn.00405f6a::var_18h)[iVar8];\n                        var_18h = *0x429208;\n                        iVar4 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)();\n                        if (iVar4 == 0) {\n                            var_14h = ppidl;\n                            var_18h = 0x40610e;\n                            var_10h = arg_8h_00;\n                            iVar4 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)();\n                            var_18h = ppidl;\n                            (*_sym.imp.ole32.dll_CoTaskMemFree)();\n                            if (iVar4 != 0) break;\n                        }\n                        *arg_8h_00 = 0;\n                    }\n                }\ncode_r0x00406125:\n                if (*arg_8h_00 != 0) goto code_r0x0040612b;\n            }\ncode_r0x0040613c:\n            fcn.004061dc(arg_8h_00);\n        }\n        else if (uVar2 == 3) {\n            if (uVar6 == 0x1d) {\n                fcn.00405e8f(arg_8h_00, *0x429208);\n            }\n            else {\n                fcn.00405f48(arg_8h_00, uVar6 * 0x800 + 0x42a000);\n            }\n            if (uVar6 - 0x15 < 7) goto code_r0x0040613c;\n        }\n        else if (uVar2 == 1) {\n            fcn.00405f6a(arg_8h_00, -1 - uVar6);\n        }\n        iVar4 = sub.KERNEL32.dll_lstrlenW();\n        arg_8h_00 = arg_8h_00 + iVar4 * 2;\n        puVar5 = var_4h;\n    } while( true );\n}\n",
        "token_count": 1714
    },
    "004061dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004061dc(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    \n    if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n        param_1 = param_1 + 4;\n    }\n    if ((*param_1 != 0) && (in_EAX = fcn.00405a0a(param_1),  in_EAX != 0)) {\n        param_1 = param_1 + 2;\n    }\n    pcVar2 = _sym.imp.USER32.dll_CharNextW;\n    uVar1 = *param_1;\n    uVar3 = in_EAX & 0xffff0000 | uVar1;\n    puVar7 = param_1;\n    puVar6 = param_1;\n    while (uVar1 != 0) {\n        if ((0x1f < uVar3) && (piVar4 = fcn.004059c0(L\"*?|<>/\\\":\", uVar3),  *piVar4 == 0)) {\n            iVar5 = (*pcVar2)(puVar7);\n            fcn.00405b6f(puVar6, puVar7, iVar5 - puVar7 >> 1);\n            puVar6 = (*pcVar2)(puVar6);\n        }\n        puVar7 = (*pcVar2)(puVar7);\n        uVar1 = *puVar7;\n        uVar3 = puVar7 & 0xffff0000 | uVar1;\n    }\n    *puVar6 = 0;\n    while( true ) {\n        puVar6 = (*_sym.imp.USER32.dll_CharPrevW)(param_1, puVar6);\n        if ((*puVar6 != 0x20) && (*puVar6 != 0x5c)) break;\n        *puVar6 = 0;\n        if (puVar6 <= param_1) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 527
    },
    "00404970": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404970(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (arg_ch == 1) {\n        fcn.00405708(0x3fb, arg_14h);\n        (*pcVar1)(arg_8h, 0x467, 1, arg_14h);\n    }\n    if (arg_ch == 2) {\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(arg_10h, arg_14h);\n        if ((iVar2 == 0) || (iVar2 = fcn.0040140b(7),  iVar2 != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        (*pcVar1)(arg_8h, 0x465, 0, uVar3);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 256
    },
    "00405e15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e15(uint hKey, uint lpcbData, uint lpValueName, ushort *lpType, int32_t samDesired)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = lpType;\n    *lpType = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpcbData, 0, -(samDesired != 0) & 0x100 | 0x20019, &samDesired)\n    ;\n    if (iVar2 == 0) {\n        lpcbData = 0x800;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(samDesired, lpValueName, 0, &lpType, puVar1, &lpcbData);\n        if ((iVar2 != 0) || ((lpType != 0x1 && (lpType != 0x2)))) {\n            *puVar1 = 0;\n        }\n        puVar1[0x3ff] = 0;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(samDesired);\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "0040136d": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid fcn.0040136d(int32_t param_1)\n\n{\n    if (param_1 < 0) {\n        fcn.00405ea8((param_1 + 1) * -0x800 + 0x42a000);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00402b3a": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint fcn.00402b3a(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = param_1;\n    if (param_1 < 0) {\n        uVar1 = -param_1;\n    }\n    uVar2 = fcn.00405f6a((uVar1 >> 4) * 0x800 + 0x409598, *(*0x40bd98 + (uVar1 & 0xf) * 4));\n    if (param_1 < 0) {\n        fcn.004061dc(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 149
    },
    "004045ee": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004045ee(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.0040419a(arg_8h, 0x1d, *(arg_14h + 0x30));\n        sub.USER32.dll_SetDlgItemTextW(arg_8h, 1000, *(arg_14h + 0x3c) * 0x800 + 0x42a000);\n    }\n    fcn.00404201(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 148
    },
    "00404635": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid __cdecl fcn.00404635(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t arg_10h_00;\n    uint32_t arg_10h_01;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    ushort *puVar7;\n    uint32_t uVar8;\n    uint *var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    code *var_34h;\n    int32_t var_30h;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = *0x4216c0;\n    var_8h = *(*0x4216c0 + 0x38);\n    iVar5 = *(*0x4216c0 + 0x3c) * 0x800 + 0x42a000;\n    if (arg_ch == 0x40b) {\n        fcn.00405708(0x3fb, iVar5);\n        fcn.004061dc(iVar5);\n    }\n    if (arg_ch == 0x110) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fb);\n        iVar2 = fcn.00405a0a(iVar5);\n        if ((iVar2 != 0) && (iVar2 = fcn.00405a3e(iVar5),  iVar2 == 0)) {\n            fcn.00405993(iVar5);\n        }\n        *0x4281d8 = arg_8h;\n        (*_sym.imp.USER32.dll_SetWindowTextW)(uVar1, iVar5);\n        var_44h = *(arg_14h + 0x34);\n        var_48h = 0x1;\n        fcn.0040419a(arg_8h);\n        fcn.0040419a(arg_8h, 0x14, *(arg_14h + 0x30));\n        fcn.004041cf(uVar1);\n        pcVar3 = fcn.004062b2(8);\n        if (pcVar3 == NULL) goto code_r0x0040495b;\n        (*pcVar3)(uVar1, 1);\n    }\n    iVar2 = var_8h;\n    if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            if (arg_10h >> 0x10 != 0x300) goto code_r0x0040495b;\n            arg_ch = 0x40f;\n        }\n        if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar6 = &fcn.00404635::var_44h;\n            for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            var_48h = arg_8h;\n            var_40h = 0x4226e8;\n            var_34h = fcn.00404970;\n            var_30h = iVar5;\n            var_3ch = fcn.00405f6a(0x420ec0, iVar2);\n            var_38h = 0x41;\n            iVar2 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderW)(&fcn.00404635::var_48h);\n            if (iVar2 == 0) {\n                arg_ch = 0x40f;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n                fcn.00405993(iVar5);\n                if ((*(*0x429210 + 0x11c) != 0) && (iVar5 == 0x434800)) {\n                    uVar1 = 0;\n                    fcn.00405f6a(0, *(*0x429210 + 0x11c));\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(0x4271a0, 0x4226e8);\n                    if (iVar2 != 0) {\n                        sub.KERNEL32.dll_lstrcatW(uVar1, 0x4271a0, 0x434800);\n                    }\n                }\n                *0x4226d8 = *0x4226d8 + 1;\n                sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x3fb, iVar5);\n            }\n        }\n    }\n    if ((arg_ch == 0x40f) || (arg_ch == 0x405)) {\n        var_4h = 0;\n        var_8h = 0;\n        fcn.00405708(0x3fb, iVar5);\n        iVar2 = fcn.00405a9b(iVar5);\n        if (iVar2 == 0) {\n            var_4h = 1;\n        }\n        fcn.00405f48(0x4206b8, iVar5);\n        puVar7 = NULL;\n        var_44h = 0;\n        var_ch = fcn.004062b2();\n        if (var_ch != NULL) {\n            do {\n                var_48h = &fcn.00404635::var_1ch;\n                iVar2 = (*var_ch)(0x4206b8, &fcn.00404635::var_28h, &fcn.00404635::var_14h);\n                if (iVar2 != 0) {\n                    var_8h = 1;\n                    arg_10h_00 = var_28h >> 10 | var_24h << 0x16;\n                    goto code_r0x004048c5;\n                }\n                if (puVar7 != NULL) {\n                    *puVar7 = 0;\n                }\n                var_44h = 0x4206b8;\n                var_48h = 0x404844;\n                puVar7 = fcn.004059df();\n                *puVar7 = 0;\n                puVar7 = puVar7 + -1;\n                *puVar7 = 0x5c;\n            } while (puVar7 != 0x4206b8);\n        }\n        var_48h = iVar5;\n        fcn.00405f48(0x4206b8);\n        puVar7 = fcn.00405a3e(0x4206b8);\n        if (puVar7 != NULL) {\n            *puVar7 = 0;\n        }\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceW)\n                          (0x4206b8, &fcn.00404635::var_10h, &fcn.00404635::var_18h, &fcn.00404635::var_ch, \n                           &fcn.00404635::var_24h);\n        arg_10h_00 = arg_ch;\n        if (iVar5 != 0) {\n            var_44h = 0x400;\n            var_48h = var_ch;\n            arg_10h_00 = (*_sym.imp.KERNEL32.dll_MulDiv)(var_10h * var_18h);\n            var_8h = 1;\n        }\ncode_r0x004048c5:\n        uVar8 = 5;\n        var_48h = 0x4048cc;\n        arg_10h_01 = fcn.00404a8f();\n        if ((var_8h != 0) && (arg_10h_00 < arg_10h_01)) {\n            var_4h = 2;\n        }\n        if (*(*0x4281dc + 0x10) != 0) {\n            var_48h = arg_10h_01;\n            fcn.004049d6(0x3ff, 0xfffffffb, arg_10h_01);\n            if (var_8h == 0) {\n                sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x400, 0x4206a8);\n                uVar8 = arg_8h;\n            }\n            else {\n                uVar8 = 0x400;\n                fcn.004049d6(0x400, 0xfffffffc, arg_10h_00);\n            }\n        }\n        *0x4292a4 = var_4h;\n        if (var_4h == 0) {\n            uVar8 = 7;\n            var_4h = fcn.0040140b();\n        }\n        if ((*(var_20h + 0x14) & 0x400) != 0) {\n            var_4h = 0;\n        }\n        fcn.004041bc(var_4h == 0, uVar8);\n        if ((var_4h == 0) && (*0x4226d8 == 0)) {\n            fcn.004045ca();\n        }\n        *0x4226d8 = 0;\n    }\ncode_r0x0040495b:\n    fcn.00404201(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 2187
    },
    "004042ae": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004042ae(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpynW)(arg_ch, *0x4206b4 + arg_8h, arg_10h >> 1);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_ch);\n    *arg_14h = iVar1 * 2;\n    *0x4206b4 = *0x4206b4 + iVar1 * 2;\n    return 0;\n}\n",
        "token_count": 148
    },
    "004042e8": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004042e8(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_8h + *0x4206b4 * 2);\n    if (arg_10h >> 1 <= uVar1) {\n        uVar1 = arg_10h >> 1;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, arg_8h + *0x4206b4 * 2, uVar1, arg_ch, arg_10h, 0, 0);\n    *arg_14h = iVar2;\n    *0x4206b4 = *0x4206b4 + iVar2;\n    return 0;\n}\n",
        "token_count": 215
    },
    "00405ea8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405ea8(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar2 = 10;\n    var_8h = 1;\n    uVar6 = 0x39;\n    if (*arg_8h == 0x2d) {\n        arg_8h = arg_8h + 1;\n        var_8h = -1;\n    }\n    puVar3 = arg_8h;\n    if (*arg_8h == 0x30) {\n        puVar3 = arg_8h + 1;\n        uVar1 = *puVar3;\n        if ((0x2f < uVar1) && (uVar1 < 0x38)) {\n            uVar2 = 8;\n            uVar6 = 0x37;\n        }\n        if ((uVar1 & 0xffdf) == 0x58) {\n            uVar2 = 0x10;\n            puVar3 = arg_8h + 2;\n        }\n    }\n    do {\n        uVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if ((uVar4 < 0x30) || (uVar6 < uVar4)) {\n            if ((uVar2 != 0x10) || (((uVar4 & 0xffffffdf) < 0x41 || (0x46 < (uVar4 & 0xffffffdf))))) {\n                return var_8h * var_4h;\n            }\n            iVar5 = (uVar4 & 7) + 9;\n        }\n        else {\n            iVar5 = uVar4 - 0x30;\n        }\n        var_4h = uVar2 * var_4h + iVar5;\n    } while( true );\n}\n",
        "token_count": 472
    },
    "00402b7a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key",
            "delete registry key"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402b7a(uint hKey, uint lpSubKey, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_210h;\n    uint phkResult;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpSubKey, 0, *0x4292b0 | 8, &phkResult);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegEnumKeyW;\n    if (iVar1 == 0) {\n        do {\n            iVar1 = (*pcVar2)(phkResult, 0, &var_210h, 0x105);\n            if (iVar1 != 0) break;\n            if (arg_10h != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n                goto code_r0x00402c0b;\n            }\n            iVar1 = fcn.00402b7a(phkResult, &var_210h, 0);\n        } while (iVar1 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        pcVar2 = fcn.004062b2(3);\n        if (pcVar2 == NULL) {\n            if ((*0x4292b0 != 0) || (iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(hKey, lpSubKey),  iVar1 != 0)) {\ncode_r0x00402c0b:\n                iVar1 = 1;\n            }\n        }\n        else {\n            iVar1 = (*pcVar2)(hKey, lpSubKey, *0x4292b0, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 404
    },
    "0040317d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "write file on Windows"
        ],
        "decompiled_code": "\nuint fcn.0040317d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    int32_t iStack32;\n    uint uStack28;\n    int32_t iVar4;\n    \n    param_1 = (*0x417e94 - *0x40be00) + param_1;\n    *0x42920c = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x42920c = *0x42920c + 500;\n    if (0 < param_1) {\n        uStack28 = 0x4031b7;\n        iVar4 = *0x41fea4;\n        fcn.0040330f();\n        uStack28 = 0;\n        iStack32 = 0;\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40901c, *0x40be00);\n        *0x417e90 = 0;\n        *0x41fea0 = param_1;\n        do {\n            iVar3 = 0x4000;\n            if (*0x417e98 - *0x41fea4 < 0x4001) {\n                iVar3 = *0x417e98 - *0x41fea4;\n            }\n            iVar1 = fcn.004032f9(0x413e90, iVar3);\n            if (iVar1 == 0) {\n                return 0xffffffff;\n            }\n            *0x41fea4 = *0x41fea4 + iVar3;\n            *0x40be20 = 0x413e90;\n            *0x40be24 = iVar3;\n            do {\n                if ((*0x429210 != 0) && (*0x4292a0 == 0)) {\n                    *0x417e90 = ((*0x41fea0 - *0x417e94) - iVar4) + *0x40be00;\n                    fcn.00402d1a(0);\n                }\n                *0x40be28 = 0x40be90;\n                *0x40be2c = 0x8000;\n                iVar1 = fcn.004063ee();\n                if (iVar1 < 0) {\n                    return 0xfffffffd;\n                }\n                iVar1 = *0x40be28 + -0x40be90;\n                if (iVar1 == 0) {\n                    if (*0x40be24 != 0) {\n                        return 0xfffffffd;\n                    }\n                    if (iVar3 == 0) {\n                        return 0xfffffffd;\n                    }\n                    break;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(*0x40901c, 0x40be90, iVar1, &stack0xffffffe0, 0);\n                if ((iVar2 == 0) || (iVar1 != iStack32)) {\n                    return 0xfffffffe;\n                }\n                *0x40be00 = *0x40be00 + iVar1;\n            } while (*0x40be24 != 0);\n        } while (0 < (*0x417e94 - *0x40be00) + unaff_ESI);\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40901c, *0x417e94, 0, 0);\n    }\n    uStack28 = 0x4032ee;\n    fcn.00402d1a(1);\n    return 0;\n}\n",
        "token_count": 776
    },
    "004049d6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004049d6(uint nIDDlgItem, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint arg_ch_00;\n    int8_t iVar6;\n    uint uVar7;\n    char16_t *pcVar8;\n    uint *arg_8h;\n    uint var_80h;\n    uint var_40h;\n    \n    iVar6 = 0x14;\n    arg_ch_00 = 0xffffffdc;\n    if (arg_10h < 0x100000) {\n        iVar6 = 10;\n        arg_ch_00 = 0xffffffdd;\n    }\n    if (arg_10h < 0x400) {\n        iVar6 = 0;\n        arg_ch_00 = 0xffffffde;\n    }\n    if (arg_10h < 0xffff3333) {\n        arg_10h = arg_10h + (1 << iVar6) / 0x14;\n    }\n    uVar1 = fcn.00405f6a(&var_40h, 0xffffffdf);\n    arg_8h = &var_80h;\n    uVar2 = fcn.00405f6a(arg_8h, arg_ch_00);\n    uVar5 = ((arg_10h & 0xffffff) * 10 >> iVar6) % 10;\n    arg_10h = arg_10h >> iVar6;\n    pcVar8 = L\"%u.%u%s%s\";\n    uVar7 = 0x4226e8;\n    iVar3 = fcn.00405f6a(0x4226e8, arg_ch);\n    iVar4 = sub.KERNEL32.dll_lstrlenW(0x4226e8, uVar7, arg_ch, pcVar8, arg_10h, uVar5, uVar2, arg_8h, arg_ch_00, uVar1);\n    (*_sym.imp.USER32.dll_wsprintfW)(iVar3 + iVar4 * 2);\n    sub.USER32.dll_SetDlgItemTextW(*0x4281d8, nIDDlgItem, 0x4226e8);\n    return;\n}\n",
        "token_count": 506
    },
    "00401299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401299(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if ((param_1 < 0x20) && (*0x42922c != 0)) {\n        puVar2 = *0x429228 + 8;\n        do {\n            uVar1 = *puVar2;\n            if ((uVar1 & 6) == 0) {\n                if ((puVar2[-1] & 1 << (param_1 & 0x1f)) == 0) {\n                    uVar1 = uVar1 & 0xfffffffe;\n                }\n                else {\n                    uVar1 = uVar1 | 1;\n                }\n                *puVar2 = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 0x206;\n        } while (uVar3 < *0x42922c);\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "00402c2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402c2f(int32_t param_1)\n\n{\n    if (param_1 == 0) {\n        param_1 = *0x429284 + -0x7fffffff;\n    }\n    return param_1;\n}\n",
        "token_count": 57
    },
    "00403bf5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403bf5(void)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    \n    uVar4 = 0xffff;\n    uVar1 = fcn.00405ea8(0x436000);\n    do {\n        if (*0x429244 != 0) {\n            puVar3 = *(*0x429210 + 100) * *0x429244 + *0x429240;\n            iVar5 = *0x429244;\n            do {\n                puVar3 = puVar3 - *(*0x429210 + 100);\n                iVar5 = iVar5 + -1;\n                if (((*puVar3 ^ uVar1) & uVar4) == 0) {\n                    *0x4281e0 = *(puVar3 + 1);\n                    *0x4292a8 = *(puVar3 + 3);\n                    *0x4281dc = puVar3 + 5;\n                    if (*0x4281dc != NULL) {\n                        fcn.00405e8f(0x436000, *puVar3);\n                        uVar2 = fcn.00405f6a(0x428200, 0xfffffffe);\n                        (*_sym.imp.USER32.dll_SetWindowTextW)(*0x4226c8, uVar2);\n                        piVar6 = *0x429228;\n                        for (iVar5 = *0x42922c; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            if (*piVar6 != 0) {\n                                fcn.00405f6a(piVar6 + 6, *piVar6);\n                            }\n                            piVar6 = piVar6 + 0x206;\n                        }\n                        return;\n                    }\n                    break;\n                }\n            } while (iVar5 != 0);\n        }\n        if (uVar4 == 0xffff) {\n            uVar4 = 0x3ff;\n        }\n        else {\n            uVar4 = 0;\n        }\n    } while( true );\n}\n",
        "token_count": 477
    },
    "0040419a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040419a(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.00405f6a(0, param_3);\n    sub.USER32.dll_SetDlgItemTextW(param_3, unaff_retaddr + 1000, uVar1);\n    return;\n}\n",
        "token_count": 91
    },
    "004059df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.004059df(int16_t *param_1)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenW(param_1);\n    piVar2 = param_1 + iVar1;\n    do {\n        if (*piVar2 == 0x5c) break;\n        piVar2 = (*_sym.imp.USER32.dll_CharPrevW)(param_1, piVar2);\n    } while (param_1 < piVar2);\n    *piVar2 = 0;\n    return piVar2 + 1;\n}\n",
        "token_count": 138
    },
    "00405be3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nushort * __cdecl fcn.00405be3(ushort *arg_8h, uint lpPathName)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = 100;\n    do {\n        iVar3 = iVar3 + -1;\n        var_8h = *0x409558;\n        var_4h = *0x40955c;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        var_4h = var_4h & 0xffff0000 | var_4h + uVar1 % 0x1a;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(lpPathName, &var_8h, 0, arg_8h);\n        if (iVar2 != 0) {\n            return arg_8h;\n        }\n    } while (iVar3 != 0);\n    *arg_8h = 0;\n    return NULL;\n}\n",
        "token_count": 247
    },
    "00405e8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405e8f(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfW)(param_1, 0x4073b0, param_2);\n    return;\n}\n",
        "token_count": 53
    },
    "00405bb4": {
        "rules": [
            "get file attributes",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00405bb4(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    (*_sym.imp.KERNEL32.dll_CreateFileW)(unaff_retaddr, param_1, 1, 0, param_2, -(uVar1 != 0xffffffff) & uVar1, 0);\n    return;\n}\n",
        "token_count": 111
    },
    "004056c3": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004056c3(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    int32_t lpProcessAttributes;\n    uint hObject;\n    \n    *0x4256f0 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, lpCommandLine, 0, 0, 0, 0, 0, 0, 0x4256f0, &lpProcessAttributes);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        iVar1 = lpProcessAttributes;\n    }\n    return iVar1;\n}\n",
        "token_count": 145
    },
    "00402c44": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402c44(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00402b3a(0x22, 0, *0x4292b0 | arg_8h, &arg_8h);\n    uVar1 = fcn.00402c2f(*(*0x40bd98 + 4), uVar1);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(uVar1);\n    return ~-(iVar2 != 0) & arg_8h;\n}\n",
        "token_count": 144
    },
    "0040386f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040386f(uint param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x4206ac; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_1);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0040388a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040388a(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x4206ac;\n    fcn.0040386f(0);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(piVar2[2]);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    *0x4206ac = NULL;\n    return;\n}\n",
        "token_count": 146
    },
    "004038bf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004038bf(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x4206ac;\n    while( true ) {\n        if (puVar1 == NULL) {\n            return 1;\n        }\n        if (puVar1[2] == param_1) break;\n        puVar1 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 93
    },
    "004059c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004059c0(int16_t *param_1, int16_t param_2)\n\n{\n    for (; (*param_1 != 0 && (*param_1 != param_2)); param_1 = (*_sym.imp.USER32.dll_CharNextW)(param_1)) {\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00405b19": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405b19(int32_t arg_8h, uint lpString2)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    while( true ) {\n        iVar4 = (*pcVar2)(arg_8h);\n        if (iVar4 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(iVar3 + arg_8h);\n        *(iVar3 + arg_8h) = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(arg_8h, lpString2);\n        *(iVar3 + arg_8h) = uVar1;\n        if (iVar4 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 247
    },
    "00405b6f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405b6f(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "004062eb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004062eb(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageW;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "004063ce": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004063ce(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x80;\n    do {\n        iVar1 = iVar1 + -1;\n        *(iVar1 + param_1) = 0;\n    } while (iVar1 != 0);\n    *(param_1 + 0x78) = 0xffffffff;\n    *(param_1 + 0x68) = 1;\n    *(param_1 + 100) = 1;\n    *(param_1 + 0x60) = 1;\n    *(param_1 + 0x5c) = 1;\n    return;\n}\n",
        "token_count": 150
    },
    "00403326": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nvoid fcn.00403326(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.004061dc(0x436800);\n    iVar1 = fcn.00405a0a(0x436800);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.00405993(0x436800);\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(0x436800, 0);\n    fcn.00405be3(0x436000, 0x436800);\n    return;\n}\n",
        "token_count": 123
    },
    "00405c37": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405c37(uint hFile, uint lpBuffer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_10h;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, lpBuffer, arg_10h, &arg_10h, 0);\n    if ((iVar2 == 0) || (iVar1 != arg_10h)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 143
    },
    "004062b2": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004062b2(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(param_1 * 8 + 0x409408);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    if ((iVar2 == 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1),  iVar2 == 0)) {\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, *(param_1 * 8 + 0x40940c));\n    return;\n}\n",
        "token_count": 148
    }
}