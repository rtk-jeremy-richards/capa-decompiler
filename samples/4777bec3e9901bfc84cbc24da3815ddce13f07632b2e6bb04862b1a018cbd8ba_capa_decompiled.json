{
    "00401031": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00401031(uint32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 * param_3;\n    if ((param_2 * param_3 >> 0x20) + (0x7fffffff < uVar1) != 0) {\n        return 0x80070057;\n    }\n    *param_1 = uVar1;\n    return 0;\n}\n",
        "token_count": 112
    },
    "0040105e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040105e(uint *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 * param_3 >> 0x20 != 0) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 * param_3;\n    return 0;\n}\n",
        "token_count": 81
    },
    "004035c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004035c0(char *param_1, uint32_t param_2, uint64_t *param_3, int32_t param_4)\n\n{\n    uint64_t *puVar1;\n    uint64_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    char cVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint8_t uVar16;\n    uint32_t uVar17;\n    uint8_t uVar18;\n    bool bVar19;\n    uint64_t uVar20;\n    uint64_t uVar21;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    uVar18 = param_1[4];\n    uVar13 = uVar18;\n    puVar1 = param_3 + param_2;\n    param_4 = param_4 - param_3;\n    uVar12 = *param_1 + 1;\n    if (*(param_1 + 0x108) == -1) {\n        cVar11 = param_1[uVar12 + 8];\n        do {\n            uVar13 = uVar13 + cVar11;\n            cVar3 = param_1[uVar13 + 8];\n            param_1[uVar13 + 8] = cVar11;\n            param_1[uVar12 + 8] = cVar3;\n            uVar16 = cVar3 + cVar11;\n            uVar12 = uVar12 + 1;\n            uVar18 = *param_3;\n            param_3 = param_3 + 1;\n            cVar11 = param_1[uVar12 + 8];\n            *(param_4 + -1 + param_3) = param_1[uVar16 + 8] ^ uVar18;\n        } while (param_3 < puVar1);\n    }\n    else {\n        iVar15 = *(param_1 + uVar12 * 4 + 8);\n        if ((param_2 & 0xfffffffc) != 0) {\n            if (((param_2 & 0xfffffff8) == 0) || ((*0x4a9190 >> 0x1a & 1) == 0)) {\n                puVar2 = param_3 + ((param_2 & 0xfffffffc) - 4);\n                do {\n                    uVar18 = uVar13 + iVar15;\n                    iVar4 = *(param_1 + uVar18 * 4 + 8);\n                    *(param_1 + uVar18 * 4 + 8) = iVar15;\n                    *(param_1 + uVar12 * 4 + 8) = iVar4;\n                    cVar11 = uVar12;\n                    iVar14 = *(param_1 + (cVar11 + 1) * 4 + 8);\n                    uVar13 = *(param_1 + (iVar4 + iVar15 & 0xffU) * 4 + 8);\n                    uVar18 = uVar18 + iVar14;\n                    iVar15 = *(param_1 + uVar18 * 4 + 8);\n                    *(param_1 + uVar18 * 4 + 8) = iVar14;\n                    *(param_1 + (cVar11 + 1) * 4 + 8) = iVar15;\n                    iVar4 = *(param_1 + (cVar11 + 2) * 4 + 8);\n                    uVar13 = uVar13 >> 8 | uVar13 << 0x18 | *(param_1 + (iVar15 + iVar14 & 0xffU) * 4 + 8);\n                    uVar18 = uVar18 + iVar4;\n                    iVar15 = *(param_1 + uVar18 * 4 + 8);\n                    *(param_1 + uVar18 * 4 + 8) = iVar4;\n                    *(param_1 + (cVar11 + 2) * 4 + 8) = iVar15;\n                    iVar14 = *(param_1 + (cVar11 + 3) * 4 + 8);\n                    uVar17 = uVar13 >> 8 | uVar13 << 0x18 | *(param_1 + (iVar15 + iVar4 & 0xffU) * 4 + 8);\n                    uVar13 = uVar18 + iVar14;\n                    iVar15 = *(param_1 + uVar13 * 4 + 8);\n                    *(param_1 + uVar13 * 4 + 8) = iVar14;\n                    *(param_1 + (cVar11 + 3) * 4 + 8) = iVar15;\n                    uVar12 = cVar11 + 4;\n                    uVar17 = uVar17 >> 8 | uVar17 << 0x18 | *(param_1 + (iVar15 + iVar14 & 0xffU) * 4 + 8);\n                    bVar19 = param_3 < puVar2;\n                    *(param_4 + param_3) = (uVar17 >> 8 | uVar17 << 0x18) ^ *param_3;\n                    param_3 = param_3 + 4;\n                    iVar15 = *(param_1 + uVar12 * 4 + 8);\n                } while (bVar19);\n            }\n            else {\n                *(param_1 + 4) = param_3 + ((param_2 & 0xfffffff8) - 8);\n                uVar13 = uVar18 + iVar15;\n                iVar4 = *(param_1 + uVar13 * 4 + 8);\n                *(param_1 + uVar13 * 4 + 8) = iVar15;\n                *(param_1 + uVar12 * 4 + 8) = iVar4;\n                uVar12 = uVar12 + 1 & 0xff;\n                uVar20 = *param_3;\n                iVar14 = *(param_1 + uVar12 * 4 + 8);\n                uVar17 = *(param_1 + (iVar4 + iVar15 & 0xffU) * 4 + 8);\n                while( true ) {\n                    uVar18 = uVar13 + iVar14;\n                    iVar15 = *(param_1 + uVar18 * 4 + 8);\n                    *(param_1 + uVar18 * 4 + 8) = iVar14;\n                    *(param_1 + uVar12 * 4 + 8) = iVar15;\n                    uVar13 = uVar12 + 1 & 0xff;\n                    iVar4 = *(param_1 + uVar13 * 4 + 8);\n                    uVar5 = *(param_1 + (iVar15 + iVar14 & 0xffU) * 4 + 8);\n                    uVar18 = uVar18 + iVar4;\n                    iVar15 = *(param_1 + uVar18 * 4 + 8);\n                    *(param_1 + uVar18 * 4 + 8) = iVar4;\n                    *(param_1 + uVar13 * 4 + 8) = iVar15;\n                    uVar13 = uVar13 + 1 & 0xff;\n                    iVar14 = *(param_1 + uVar13 * 4 + 8);\n                    uVar6 = *(param_1 + (iVar15 + iVar4 & 0xffU) * 4 + 8);\n                    uVar18 = uVar18 + iVar14;\n                    iVar15 = *(param_1 + uVar18 * 4 + 8);\n                    *(param_1 + uVar18 * 4 + 8) = iVar14;\n                    *(param_1 + uVar13 * 4 + 8) = iVar15;\n                    uVar13 = uVar13 + 1 & 0xff;\n                    iVar4 = *(param_1 + uVar13 * 4 + 8);\n                    uVar7 = *(param_1 + (iVar15 + iVar14 & 0xffU) * 4 + 8);\n                    uVar18 = uVar18 + iVar4;\n                    iVar15 = *(param_1 + uVar18 * 4 + 8);\n                    *(param_1 + uVar18 * 4 + 8) = iVar4;\n                    *(param_1 + uVar13 * 4 + 8) = iVar15;\n                    uVar13 = uVar13 + 1 & 0xff;\n                    iVar14 = *(param_1 + uVar13 * 4 + 8);\n                    uVar8 = *(param_1 + (iVar15 + iVar4 & 0xffU) * 4 + 8);\n                    uVar18 = uVar18 + iVar14;\n                    iVar15 = *(param_1 + uVar18 * 4 + 8);\n                    *(param_1 + uVar18 * 4 + 8) = iVar14;\n                    *(param_1 + uVar13 * 4 + 8) = iVar15;\n                    uVar13 = uVar13 + 1 & 0xff;\n                    iVar4 = *(param_1 + uVar13 * 4 + 8);\n                    uVar9 = *(param_1 + (iVar15 + iVar14 & 0xffU) * 4 + 8);\n                    uVar18 = uVar18 + iVar4;\n                    iVar15 = *(param_1 + uVar18 * 4 + 8);\n                    *(param_1 + uVar18 * 4 + 8) = iVar4;\n                    *(param_1 + uVar13 * 4 + 8) = iVar15;\n                    uVar12 = uVar13 + 1 & 0xff;\n                    iVar14 = *(param_1 + uVar12 * 4 + 8);\n                    uVar10 = *(param_1 + (iVar15 + iVar4 & 0xffU) * 4 + 8);\n                    uVar18 = uVar18 + iVar14;\n                    uVar13 = uVar18;\n                    iVar4 = *(param_1 + uVar13 * 4 + 8);\n                    *(param_1 + uVar13 * 4 + 8) = iVar14;\n                    *(param_1 + uVar12 * 4 + 8) = iVar4;\n                    uVar12 = uVar12 + 1 & 0xff;\n                    uVar21 = uVar17 ^ uVar20 ^ uVar5 << 8 ^ uVar6 << 0x10 ^ uVar7 << 0x18 ^ uVar8 << 0x20 ^\n                             uVar9 << 0x28 ^ uVar10 << 0x30;\n                    iVar15 = *(param_1 + uVar12 * 4 + 8);\n                    uVar17 = *(param_1 + (iVar4 + iVar14 & 0xffU) * 4 + 8);\n                    bVar19 = *(param_1 + 4) <= param_3;\n                    param_3 = param_3 + 1;\n                    if (bVar19) break;\n                    uVar13 = uVar18 + iVar15;\n                    iVar4 = *(param_1 + uVar13 * 4 + 8);\n                    *(param_1 + uVar13 * 4 + 8) = iVar15;\n                    *(param_1 + uVar12 * 4 + 8) = iVar4;\n                    uVar12 = uVar12 + 1 & 0xff;\n                    uVar20 = *param_3;\n                    *(param_4 + -8 + param_3) = uVar21 ^ uVar17 << 0x38;\n                    iVar14 = *(param_1 + uVar12 * 4 + 8);\n                    uVar17 = *(param_1 + (iVar4 + iVar15 & 0xffU) * 4 + 8);\n                }\n                *(param_4 + -8 + param_3) = uVar21 ^ uVar17 << 0x38;\n            }\n            if (param_3 == puVar1) goto code_r0x004038cf;\n        }\n        do {\n            uVar13 = uVar13 + iVar15;\n            iVar4 = *(param_1 + uVar13 * 4 + 8);\n            *(param_1 + uVar13 * 4 + 8) = iVar15;\n            *(param_1 + uVar12 * 4 + 8) = iVar4;\n            uVar17 = iVar4 + iVar15;\n            uVar12 = uVar12 + 1;\n            uVar18 = *param_3;\n            param_3 = param_3 + 1;\n            iVar15 = *(param_1 + uVar12 * 4 + 8);\n            *(param_4 + -1 + param_3) = *(param_1 + (uVar17 & 0xff) * 4 + 8) ^ uVar18;\n        } while (param_3 < puVar1);\n    }\ncode_r0x004038cf:\n    *(param_1 + 4) = uVar13;\n    *param_1 = uVar12 + -1;\n    return;\n}\n",
        "token_count": 2922
    },
    "0040430c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040430c(uint *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 * param_3 >> 0x20 != 0) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 * param_3;\n    return 0;\n}\n",
        "token_count": 81
    },
    "00404405": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404405(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_14h == -1) {\n        arg_14h = fcn.004518b0(arg_10h);\n        arg_14h = arg_14h + 1;\n    }\n    fcn.004043a2(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 111
    },
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall method.CDibDoc.virtual_160(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    var_4h = (**(*param_1 + 0x60))();\n    while (var_4h != NULL) {\n        iVar1 = (**(*param_1 + 100))(&var_4h);\n        iVar1 = (**0x4817b0)(*(iVar1 + 0x20));\n        if ((iVar1 != 0) && (iVar1 = fcn.004148fc(),  iVar1 != 0)) {\n            *(iVar1 + 0x58) = 0xffffffff;\n        }\n    }\n    var_8h = 0;\n    var_4h = (**(*param_1 + 0x60))();\n    while (var_4h != NULL) {\n        iVar1 = (**(*param_1 + 100))(&var_4h);\n        iVar1 = (**0x4817b0)(*(iVar1 + 0x20));\n        if (((iVar1 != 0) && (iVar1 = fcn.004148fc(),  iVar1 != 0)) && (*(iVar1 + 0x58) == -1)) {\n            var_8h = var_8h + 1;\n            *(iVar1 + 0x58) = var_8h;\n        }\n    }\n    iVar1 = 1;\n    var_4h = (**(*param_1 + 0x60))();\n    while (var_4h != NULL) {\n        iVar2 = (**(*param_1 + 100))(&var_4h);\n        iVar2 = (**0x4817b0)(*(iVar2 + 0x20));\n        if (((iVar2 != 0) && (piVar3 = fcn.004148fc(),  piVar3 != NULL)) && (piVar3[0x16] == iVar1)) {\n            if (var_8h == 1) {\n                piVar3[0x16] = 0;\n            }\n            (**(*piVar3 + 0x160))(1);\n            iVar1 = iVar1 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 525
    },
    "004081bb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004081bb(int32_t *param_1, int32_t param_2)\n\n{\n    if ((param_2 == -1) && (param_2 = *param_1,  param_2 != 0)) {\n        param_2 = fcn.004518d0(param_2);\n    }\n    fcn.0040210d(param_2);\n    return;\n}\n",
        "token_count": 91
    },
    "0040af00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040af00(void)\n\n{\n    code **extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.00451139();\n    *extraout_ECX = vtable.CFile.0;\n    if ((extraout_ECX[1] != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.0040acf8();\n    }\n    fcn.00401fb6();\n    *in_FS_OFFSET = uStackY532;\n    fcn.004510f7(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 144
    },
    "00409398": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409398(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    code **ppcVar4;\n    int32_t *in_ECX;\n    uint32_t arg_ch_00;\n    int32_t *piVar5;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.00419c68();\n        if (*(iVar1 + 0x3c) != 0) goto code_r0x004093b6;\n    }\n    else {\n        if (arg_ch != 0xfffffffd) {\n            if (arg_ch != 0xffffffff) {\n                arg_ch_00 = arg_ch >> 0x10;\n                arg_ch = arg_ch & 0xffff;\n                if (arg_ch_00 != 0) goto code_r0x0040946c;\n            }\n            arg_ch_00 = 0x111;\ncode_r0x0040946c:\n            ppcVar4 = (**(*in_ECX + 0x28))();\n            while( true ) {\n                if (*ppcVar4 == NULL) {\n                    return 0;\n                }\n                iVar1 = fcn.00411c2e(ppcVar4[1], arg_ch_00, arg_ch, arg_8h);\n                if (iVar1 != 0) break;\n                ppcVar4 = (**ppcVar4)();\n            }\n            iVar1 = fcn.00409260(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n            return iVar1;\n        }\n        arg_ch = 0;\n        if (arg_10h != 0) {\n            iVar1 = *(arg_10h + 0x30);\n            puVar2 = (**(*in_ECX + 0x2c))();\n            do {\n                if (puVar2 == NULL) {\n                    return arg_ch;\n                }\n                if (arg_ch != 0) {\n                    return arg_ch;\n                }\n                piVar5 = puVar2[1];\n                while (((piVar5[1] != 0 && (piVar5[2] != 0)) && (arg_ch == 0))) {\n                    if (arg_8h == piVar5[1]) {\n                        if (iVar1 == 0) {\n                            if (*piVar5 == 0) {\ncode_r0x00409433:\n                                *(arg_10h + 4) = piVar5[2];\n                                arg_ch = 1;\n                            }\n                        }\n                        else if ((*piVar5 != 0) && (iVar3 = fcn.00409248(iVar1, *piVar5),  iVar3 != 0))\n                        goto code_r0x00409433;\n                    }\n                    piVar5 = piVar5 + 3;\n                }\n                puVar2 = *puVar2;\n            } while( true );\n        }\n    }\n    fcn.00403bf2();\ncode_r0x004093b6:\n    iVar1 = fcn.00419c68();\n    iVar1 = (**(**(iVar1 + 0x3c) + 4))();\n    return iVar1;\n}\n",
        "token_count": 746
    },
    "0040acf8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040acf8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (**0x4813d4)(*(param_1 + 4));\n        bVar3 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.00402193();\n    if (bVar3) {\n        uVar2 = (**0x48148c)(*(param_1 + 0xc));\n        fcn.0040a819(uVar2);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0040ad3b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ad3b(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    \n    if (*(param_1 + 4) != -1) {\n        (**0x4813d4)(*(param_1 + 4));\n        *(param_1 + 4) = 0xffffffff;\n    }\n    puVar1 = param_1 + 0xc;\n    uVar2 = *puVar1;\n    uVar5 = uVar2;\n    piVar3 = *(uVar2 - 0x10);\n    if (*(uVar2 - 0xc) != 0) {\n        if (*(uVar2 - 4) < 0) {\n            if (*(uVar2 - 8) < 0) {\n                uVar5 = fcn.00401103(0x80070057);\n            }\n            *(uVar5 + -0xc) = uVar5 >> 0x20;\n            **puVar1 = uVar5 >> 0x20;\n        }\n        else {\n            fcn.00401fb6();\n            iVar4 = (**(*piVar3 + 0xc))();\n            *puVar1 = iVar4 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "0040b05f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040b05f(uchar *param_1, uchar *param_2, uchar *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar *puStack360;\n    uchar *puStack356;\n    uchar *puStack352;\n    uchar *puStack348;\n    uchar *puStack344;\n    uint uStack340;\n    uchar *puStack336;\n    uchar *puStack332;\n    uint arg_8h;\n    uchar auStack284 [276];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a5230 ^ &stack0xfffffeb8;\n    arg_8h = 0x14;\n    puStack332 = 0x40b083;\n    fcn.00451106();\n    puStack352 = param_3;\n    if (param_1 != NULL) goto code_r0x0040b0a8;\n    do {\n        puStack332 = 0x40b0a8;\n        fcn.00403bf2();\ncode_r0x0040b0a8:\n    } while (param_2 == NULL);\n    puStack332 = &stack0xfffffea4;\n    puStack336 = param_1;\n    uStack340 = 0x104;\n    puStack344 = param_2;\n    puStack348 = 0x40b0c5;\n    uVar1 = (**0x48140c)();\n    if (uVar1 == 0) {\n        puStack348 = 0xffffffff;\n        puStack352 = param_2;\n        puStack356 = 0x104;\n        puStack360 = param_1;\n        fcn.00403c40();\n        puStack348 = param_2;\n        puStack356 = 0x40b0df;\n        fcn.0040b034();\n        goto code_r0x0040b1b1;\n    }\n    if (0x103 < uVar1) goto code_r0x0040b1b1;\n    puStack348 = 0x40b0ef;\n    puStack348 = fcn.00409b56();\n    puStack352 = 0x40b0f8;\n    fcn.0040231f();\n    puStack332 = NULL;\n    puStack352 = &stack0xfffffea8;\n    puStack356 = param_1;\n    puStack360 = 0x40b106;\n    fcn.0040aebd();\n    puStack360 = puStack344;\n    puStack348 = (**0x481558)();\n    if (puStack348 == NULL) {\n        puStack356 = &stack0xfffffe9c;\n        puStack360 = &stack0xfffffe98;\n        puStack352 = puStack348;\n        iVar2 = (**0x4813c0)(puStack344, 0, 0, 0);\n        if (iVar2 == 0) {\n            puStack348 = param_2;\n            puStack356 = 0x40b13a;\n            fcn.0040b034();\n            goto code_r0x0040b13a;\n        }\n        if ((puStack356 & 2) == 0) {\n            puStack348 = param_1;\n            puStack352 = 0x40b154;\n            (**0x481868)();\n        }\n        if ((puStack356 & 4) == 0) {\n            puStack352 = param_2;\n            puStack356 = 0x40b165;\n            puStack348 = &stack0xfffffeb8;\n            puStack348 = (**0x4813c4)();\n            if (puStack348 != 0xffffffff) {\n                puStack352 = 0x40b171;\n                (**0x4813c8)();\n                if ((puStack348 != NULL) && (param_1 < puStack348)) {\n                    puStack348 = &stack0xfffffee4;\n                    puStack352 = 0x40b186;\n                    iVar2 = (**0x48145c)();\n                    if (iVar2 + (puStack348 - param_1) < 0x104) {\n                        puStack356 = &stack0xfffffee4;\n                        puStack352 = 0x104 - (puStack348 - param_1);\n                        puStack360 = 0x40b1a0;\n                        puStack348 = puStack356;\n                        fcn.0040a8c9();\n                        goto code_r0x0040b1a3;\n                    }\n                }\ncode_r0x0040b13a:\n                puStack348 = 0x40b145;\n                fcn.00401fb6();\n                goto code_r0x0040b1b1;\n            }\n        }\n    }\ncode_r0x0040b1a3:\n    puStack348 = 0x40b1ae;\n    fcn.00401fb6();\ncode_r0x0040b1b1:\n    *in_FS_OFFSET = uStack340;\n    puStack332 = 0x40b1cc;\n    fcn.004510f7(arg_8h);\n    return;\n}\n",
        "token_count": 1126
    },
    "0040b259": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040b259(int32_t param_1, int32_t param_2, uint32_t param_3, uint param_4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint in_stack_fffffedc;\n    uint uStack276;\n    uchar auStack268 [104];\n    uchar auStack164 [156];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a5230 ^ auStack164;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0xffffffff;\n    fcn.00402193();\n    if (((param_2 == 0) || (iVar2 = (**0x48145c)(param_2),  0x103 < iVar2)) ||\n       (iVar2 = param_2,  iVar3 = fcn.0040b05f(),  iVar3 == 0)) goto code_r0x0040b3d6;\n    fcn.004024ff(auStack268);\n    uVar4 = param_3 & 3;\n    uStack276 = 0;\n    if (uVar4 == 0) {\n        uStack276 = 0x80000000;\n    }\n    else if (uVar4 == 1) {\n        uStack276 = 0x40000000;\n    }\n    else if (uVar4 == 2) {\n        uStack276 = 0xc0000000;\n    }\n    uVar4 = param_3 & 0x70;\n    uVar5 = 1;\n    if ((uVar4 == 0) || (uVar4 == 0x10)) {\ncode_r0x0040b336:\n        uVar5 = 0;\n    }\n    else if (uVar4 != 0x20) {\n        if (uVar4 == 0x30) {\n            uVar5 = 2;\n        }\n        else {\n            uVar5 = 3;\n            if (uVar4 != 0x40) goto code_r0x0040b336;\n        }\n    }\n    in_stack_fffffedc = 0xc;\n    if ((param_3 & 0x1000) == 0) {\n        cVar1 = '\\x03';\n    }\n    else {\n        cVar1 = (-((param_3 & 0x2000) != 0) & 2U) + 2;\n    }\n    uVar4 = 0x80;\n    if ((param_3 & 0x10000) != 0) {\n        uVar4 = 0x20000080;\n    }\n    if ((param_3 & 0x20000) != 0) {\n        uVar4 = uVar4 | 0x80000000;\n    }\n    if ((param_3 & 0x40000) != 0) {\n        uVar4 = uVar4 | 0x10000000;\n    }\n    if ((param_3 & 0x80000) != 0) {\n        uVar4 = uVar4 | 0x8000000;\n    }\n    iVar3 = (**0x4813b4)(param_2, uStack276, uVar5, &stack0xfffffedc, cVar1, uVar4, 0);\n    if (iVar3 == -1) {\n        fcn.0040b034(iVar2, param_2, param_4);\n    }\n    else {\n        *(param_1 + 4) = iVar3;\n        *(param_1 + 8) = 1;\n    }\ncode_r0x0040b3d6:\n    fcn.004510f7(in_stack_fffffedc);\n    return;\n}\n",
        "token_count": 849
    },
    "0040b847": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040b847(uint32_t *param_1, int32_t param_2)\n\n{\n    unkuint3 Var2;\n    uint32_t uVar1;\n    \n    Var2 = *0x4a6910 >> 8;\n    if (*0x4a6910 == NULL) {\n        uVar1 = CONCAT31(Var2, 1);\n    }\n    else if ((param_2 == 0) || (*param_1 != 0xffffffff)) {\n        uVar1 = Var2 << 8;\n    }\n    else {\n        uVar1 = (**0x4a6910)(param_2);\n        *param_1 = uVar1;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 186
    },
    "0040b87d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0040b87d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4a6918 == NULL) {\n        return true;\n    }\n    if ((*param_1 != -1) && (param_1[1] == 0)) {\n        iVar1 = (**0x4a6918)(*param_1, param_1 + 1);\n        return iVar1 == 1;\n    }\n    return false;\n}\n",
        "token_count": 109
    },
    "0040bebc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11ch\n\nvoid __cdecl fcn.0040bebc(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint in_ECX;\n    uint var_11ch;\n    uint var_118h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    if (arg_8h == 0x800) {\n        uVar1 = fcn.00455117(&var_11ch, 4, 0x4831f4);\n        fcn.00401000(uVar1);\n    }\n    else {\n        iVar5 = (**0x4813a4)(arg_8h, 3, &var_11ch, 4);\n        if (iVar5 == 0) goto code_r0x0040bf7c;\n    }\n    puVar2 = fcn.00451b45();\n    uVar1 = *puVar2;\n    puVar2 = fcn.00451b45();\n    *puVar2 = 0;\n    uVar3 = fcn.004552a3(&var_118h, 0x112, 0x111, in_ECX, &var_11ch);\n    piVar4 = fcn.00451b45();\n    if (*piVar4 == 0) {\n        puVar2 = fcn.00451b45();\n        *puVar2 = uVar1;\n    }\n    else {\n        puVar2 = fcn.00451b45();\n        fcn.00404894(*puVar2);\n    }\n    if ((uVar3 != 0xffffffff) && (uVar3 < 0x112)) {\n        (**0x4813fc)(&var_118h);\n    }\ncode_r0x0040bf7c:\n    fcn.004510f7(var_11ch);\n    return;\n}\n",
        "token_count": 460
    },
    "0040bf89": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bf89(int32_t *param_1)\n\n{\n    if ((*0x4a6914 != NULL) && (*param_1 != -1)) {\n        fcn.0040b8aa();\n        (**0x4a6914)(*param_1);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0040d2ba": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040d2ba(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0042285b();\n    if (piVar1 == NULL) {\n        fcn.00403bbe();\n    }\n    piVar1[0xd] = 0;\n    iVar2 = fcn.0040d152(arg_14h | 4, arg_10h, arg_18h);\n    if (iVar2 == 0) {\n        (**(*piVar1 + 0x78))();\n        piVar1 = NULL;\n    }\n    else {\n        (**0x481390)(piVar1[0xb], arg_ch);\n        if (((arg_14h & 4) == 0) && (iVar2 = (**0x48138c)(piVar1[0xb]),  iVar2 == -1)) {\n            fcn.00403bf2();\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 251
    },
    "0040de60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040de60(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    uVar1 = fcn.00409b56();\n    fcn.0040231f(uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.004024df(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    fcn.0040de17(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    fcn.00401fb6();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 275
    },
    "00412182": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412182(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((((arg_8h == 0) || (arg_14h == 0)) || (arg_10h == 1)) || ((arg_10h == 0 || (arg_10h == 5)))) {\ncode_r0x004121f1:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h == 2) {\n            iVar1 = fcn.0042410f(arg_ch, 2);\n            if (iVar1 == 0) goto code_r0x004121f1;\n        }\n        (**0x48112c)(arg_14h, 0xc, &var_ch);\n        (**0x4811d4)(arg_8h, var_8h);\n        if (arg_18h == -1) {\n            arg_18h = (**0x4817b4)(8);\n        }\n        (**0x4811c4)(arg_8h, arg_18h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 302
    },
    "00416de0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00416de0(uint16_t *arg_8h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint16_t *puVar5;\n    uint *puVar6;\n    uint var_34h;\n    uint var_30h;\n    uint16_t *var_2ch;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = *0x481728;\n    var_4h = 1;\n    puVar5 = arg_8h;\n    var_8h = in_ECX;\n    if (arg_8h != NULL) {\n        do {\n            uVar3 = *puVar5;\n            if (*puVar5 == 0) break;\n            uVar2 = puVar5[1];\n            var_10h = *(puVar5 + 2);\n            puVar5 = puVar5 + 4;\n            var_ch = uVar3;\n            if (uVar2 == 0x1234) {\ncode_r0x00416e4b:\n                puVar6 = &var_30h;\n                for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar6 = 0;\n                    puVar6 = puVar6 + 1;\n                }\n                var_30h = 0xffffffff;\n                var_34h = 1;\n                fcn.004050cb(puVar5);\n                var_2ch = arg_8h;\n                iVar4 = (*pcVar1)(*(var_8h + 0x20), var_ch & 0xffff, 0x401, 0, &var_34h);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n                fcn.00401fb6();\n                in_ECX = var_8h;\n            }\n            else if (uVar2 == 0x401) {\n                uVar2 = 0x180;\ncode_r0x00416eac:\n                iVar4 = (*pcVar1)(*(in_ECX + 0x20), uVar3, uVar2, 0, puVar5);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                if (uVar2 == 0x403) {\n                    uVar2 = 0x143;\n                }\n                if (uVar2 == 0x401) goto code_r0x00416e4b;\n                if ((uVar2 == 0x180) || (uVar2 == 0x143)) goto code_r0x00416eac;\n            }\n            puVar5 = puVar5 + var_10h;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.0041497a(*(in_ECX + 0x20), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 731
    },
    "00418861": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418861(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    fcn.00417aae(&var_8h, &var_4h);\n    if ((var_4h == NULL) && (var_8h == NULL)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.004177ad();\n        iVar2 = (**0x481434)(-arg_ch, iVar1, 0x78);\n        if (var_4h == NULL) {\n            if (var_8h == NULL) {\n                return 0;\n            }\n            if (iVar1 == -1) {\n                iVar1 = in_ECX[0x1c];\n                if (0 < arg_ch) {\n                    iVar1 = -in_ECX[0x1c];\n                }\n            }\n            else {\n                iVar1 = in_ECX[0x1e] * iVar2;\n                if (in_ECX[0x1c] <= in_ECX[0x1e] * iVar2) {\n                    iVar1 = in_ECX[0x1c];\n                }\n            }\n            iVar3 = 0;\n        }\n        else {\n            if (iVar1 == -1) {\n                iVar3 = in_ECX[0x1d];\n                if (0 < arg_ch) {\n                    iVar3 = -in_ECX[0x1d];\n                }\n            }\n            else {\n                iVar3 = in_ECX[0x1f] * iVar2;\n                if (in_ECX[0x1d] <= in_ECX[0x1f] * iVar2) {\n                    iVar3 = in_ECX[0x1d];\n                }\n            }\n            iVar1 = 0;\n        }\n        iVar1 = (**(*in_ECX + 0x13c))(iVar1, iVar3, 1);\n        if (iVar1 != 0) {\n            (**0x48185c)(in_ECX[8]);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 516
    },
    "00418f6a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418f6a(int32_t param_1)\n\n{\n    fcn.00413cf0();\n    if (*(param_1 + 0x5c) == -1) {\n        fcn.00418cec(*(param_1 + 0x60), *(param_1 + 100));\n    }\n    else {\n        fcn.00418663();\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "004190c3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004190c3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint uStack564;\n    uint uStack560;\n    uchar *puStack556;\n    uint uStack544;\n    uint uStack536;\n    uchar auStack532 [96];\n    uchar auStack436 [424];\n    int16_t iStack12;\n    ushort uStack10;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a5230 ^ auStack436;\n    fcn.00418fe6();\n    uVar2 = *(param_1 + 8);\n    uStack10 = 0;\n    iStack12 = 0;\n    arg_8h = 0x105;\n    iVar1 = (**0x48135c)(uVar2, auStack532);\n    if (iVar1 != 0) {\n        if (iStack12 == 0) {\n            puStack556 = auStack532;\n            puVar3 = &uStack564;\n            uStack564 = 0x20;\n            uStack560 = 0x88;\n            uStack544 = 2;\n            uStack536 = uVar2;\n            iVar1 = fcn.00419054(puVar3);\n            *(param_1 + 0x80) = iVar1;\n            if (iVar1 == -1) {\n                uStack544 = 3;\n                uVar2 = fcn.00419054(&uStack564);\n                *(param_1 + 0x80) = uVar2;\n            }\n            if (*(param_1 + 0x80) == -1) {\n                uStack544 = 1;\n                iVar1 = fcn.00419054(puVar3, &uStack564);\n                *(param_1 + 0x80) = iVar1;\n                if (iVar1 == -1) {\n                    *(param_1 + 0x80) = 0;\n                }\n            }\n        }\n        else {\n            (**0x481438)(0x6f);\n        }\n    }\n    fcn.004510f7(arg_8h);\n    return;\n}\n",
        "token_count": 487
    },
    "004196ce": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004196ce(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    puVar1 = extraout_ECX[0x12];\n    *(unaff_EBP + -4) = 1;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        (**(*extraout_ECX[0x1c] + 0xc))(extraout_ECX + 0x13);\n        if (extraout_ECX[0x1c] != NULL) {\n            (**(*extraout_ECX[0x1c] + 4))(1);\n        }\n    }\n    if (*extraout_ECX[0x1e] != NULL) {\n        (****extraout_ECX[0x1e])(1);\n    }\n    if (*(extraout_ECX[0x1e] + 4) != NULL) {\n        (****(extraout_ECX[0x1e] + 4))(1);\n    }\n    fcn.00403ac8(extraout_ECX[0x1e]);\n    pcVar2 = extraout_ECX[0x20];\n    if ((pcVar2 != NULL) && (pcVar2 != 0xffffffff)) {\n        fcn.00419065(pcVar2);\n        extraout_ECX[0x20] = 0xffffffff;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0042302e();\n    fcn.00401fb6();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 452
    },
    "00419cfd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00419cfd(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00419c68();\n    if ((*(iVar1 + 0x7c) == 0) || (*(param_2 + 0x80) == -1)) {\n        *(param_1 + 4) = 0;\n    }\n    else {\n        uVar2 = fcn.00419073(*(param_2 + 0x80), param_1);\n        *(param_1 + 4) = uVar2;\n    }\n    return param_1;\n}\n",
        "token_count": 154
    },
    "00419ff4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00419ff4(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00413cf0();\n    if (iVar1 != -1) {\n        if ((*param_2 != 0) && (*(*param_2 + 4) != 0)) {\n            fcn.00407d5e(param_1);\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 113
    },
    "0041ca34": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0041ca34(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (*0x4a3d40 == -1) {\n        uVar2 = (**0x4817f8)(0);\n        uVar3 = (**0x48178c)(0x48, 0, 0, 0, 400, 0, 0, 0, 2, 0, 0, 0, 0, \"Marlett\");\n        iVar4 = (**0x4810d0)(uVar3);\n        pcVar1 = *0x48115c;\n        if (iVar4 != 0) {\n            (**0x48115c)(uVar2, iVar4);\n        }\n        (**0x4810cc)(uVar2, 0x36, 0x36, 0x4a3d40);\n        if (iVar4 != 0) {\n            (*pcVar1)(uVar2, uVar3);\n            (**0x481140)(iVar4);\n        }\n        (**0x4817f4)(0, uVar2);\n    }\n    return *0x4a3d40;\n}\n",
        "token_count": 278
    },
    "0041d4ed": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041d4ed(uint arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint *puVar4;\n    uint *arg_8h_00;\n    uint var_30h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint8_t var_fh;\n    uint var_eh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    arg_8h_00 = &var_18h;\n    (**(*in_ECX + 0x110))(0x417, arg_8h);\n    *(arg_ch + 2) = *(arg_ch + 2) ^ 4;\n    var_eh._0_1_ = 0;\n    var_eh._1_1_ = 0;\n    *(arg_ch + 10) = 0;\n    *(arg_ch + 0xb) = 0;\n    iVar2 = fcn.00453966(arg_ch, &var_18h, 0x14);\n    if (iVar2 != 0) {\n        uVar3 = fcn.0040e0b4();\n        var_20h = uVar3;\n        fcn.0040e0e8(0x10000000, 0, 0);\n        (**(*in_ECX + 0x110))(0x416, arg_8h, 0);\n        pcVar1 = *0x48183c;\n        if (arg_ch[4] < -1) {\n            var_1ch = (**0x48183c)(in_ECX[8], 0x43d, 0, 0);\n            (*pcVar1)(in_ECX[8], 0xb, 0, 0);\n            (*pcVar1)(in_ECX[8], 0x43c, var_1ch + 1, 0);\n            (*pcVar1)(in_ECX[8], 0x43c, var_1ch, 0);\n            (*pcVar1)(in_ECX[8], 0xb, 1, 0);\n            arg_ch[4] = arg_ch[4] + 1000000;\n            uVar3 = var_20h;\n        }\n        (**(*in_ECX + 0x110))(0x415, arg_8h, arg_ch);\n        fcn.0040e0e8(0, uVar3 & 0x10000000, 0);\n        if ((((*(arg_ch + 9) ^ var_fh) & 1) == 0) && (((*(arg_ch + 9) & 1) == 0 || (*arg_ch == var_18h)))) {\n            iVar2 = (**(*in_ECX + 0x110))(0x41d, arg_8h, &var_30h);\n            if (iVar2 == 0) goto code_r0x0041d640;\n            puVar4 = &var_30h;\n        }\n        else {\n            puVar4 = NULL;\n        }\n        (**0x4815d8)(in_ECX[8], puVar4, 1);\n    }\ncode_r0x0041d640:\n    fcn.004510f7(arg_8h_00);\n    return;\n}\n",
        "token_count": 785
    },
    "0041de77": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0041de77(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar4 = *0x4a3d3c;\n    if (*0x4a3d3c == -1) {\n        fcn.00419c68();\n        uVar1 = fcn.00413ac7();\n        pcVar2 = (**0x481424)(uVar1, \"DllGetVersion\");\n        iVar4 = 0x40000;\n        if (pcVar2 != NULL) {\n            fcn.00451550(&var_14h, 0, 0x14);\n            var_14h = 0x14;\n            iVar3 = (*pcVar2)(&var_14h);\n            if (-1 < iVar3) {\n                iVar4 = CONCAT22(var_10h, var_ch);\n            }\n        }\n    }\n    *0x4a3d3c = iVar4;\n    return iVar4;\n}\n",
        "token_count": 259
    },
    "0041e066": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nint32_t * __cdecl fcn.0041e066(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t arg_ch_00;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint *arg_8h_00;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t *var_18h;\n    int32_t var_14h;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint32_t *var_4h;\n    \n    iVar6 = *in_ECX;\n    arg_8h_00 = 0x418;\n    var_4h = NULL;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    var_ch = (**(iVar6 + 0x110))(0x418, 0, 0);\n    if (var_ch == 0) goto code_r0x0041e358;\n    var_4h = fcn.00403a9d(-(var_ch * 0x14 >> 0x20 != 0) | var_ch * 0x14);\n    puVar4 = NULL;\n    if (var_ch < 1) goto code_r0x0041e358;\n    do {\n        arg_8h_00 = puVar4;\n        fcn.0041cce9();\n        arg_ch_00 = var_ch;\n        puVar4 = puVar4 + 1;\n    } while (puVar4 < var_ch);\n    uVar3 = 0;\n    if (var_ch < 1) goto code_r0x0041e358;\n    uVar1 = in_ECX[0x20];\n    if ((uVar1 & 2) == 0) {\n        if ((uVar1 & 4) == 0) {\ncode_r0x0041e161:\n            uVar3 = -((arg_ch & 2) != 0) & 0x7fff;\n        }\n        else if ((arg_ch & 4) == 0) {\n            if ((arg_ch & 8) == 0) {\n                if ((arg_ch & 0x10) == 0) {\n                    if (arg_10h == -1) {\n                        if ((uVar1 & 1) == 0) goto code_r0x0041e161;\n                        goto code_r0x0041e0fc;\n                    }\n                    (**0x4815b8)(&var_2ch);\n                    (**(*in_ECX + 0x140))(&var_2ch, arg_ch & 2);\n                    var_3ch = arg_ch & 0x20;\n                    if (var_3ch == 0) {\n                        var_28h = var_24h - var_2ch;\n                    }\n                    else {\n                        var_28h = var_20h - var_28h;\n                    }\n                    uVar3 = var_28h + arg_10h;\n                }\n                else {\n                    var_3ch = 0;\n                }\n            }\n            else {\n                uVar3 = 0x7fff;\n            }\n        }\n        else {\ncode_r0x0041e0fc:\n            uVar3 = in_ECX[0x1c];\n        }\n        fcn.0041d81a(var_4h, arg_ch_00, uVar3, var_3ch);\n    }\n    arg_8h_00 = &var_24h;\n    piVar2 = fcn.0041d6eb(arg_8h_00, var_4h, arg_ch_00);\n    iVar6 = piVar2[1];\n    *arg_8h = *piVar2;\n    arg_8h[1] = iVar6;\n    if ((arg_ch & 0x40) != 0) {\n        var_20h = in_ECX[0x28];\n        var_14h = 0;\n        arg_10h = 0;\n        in_ECX[0x28] = 0;\n        if (0 < arg_ch_00) {\n            var_18h = var_4h + 1;\n            puVar5 = var_18h;\n            uVar3 = arg_ch_00;\n            do {\n                if (((*(puVar5 + 5) & 1) != 0) && (*puVar5 != 0)) {\n                    arg_10h = arg_10h + 1;\n                }\n                puVar5 = puVar5 + 5;\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n            if (0 < arg_10h) {\n                var_14h = fcn.00403a9d(-(arg_10h * 0x18 >> 0x20 != 0) | arg_10h * 0x18);\n                var_10h = var_14h + 8;\n                var_1ch = arg_10h;\n                arg_10h = 0;\n                var_8h = NULL;\n                puVar5 = var_10h;\n                do {\n                    arg_ch_00 = var_ch;\n                    if (var_1ch <= arg_10h) break;\n                    puVar7 = puVar5;\n                    if (((*(var_18h + 5) & 1) != 0) && (*var_18h != 0)) {\n                        puVar5[-2] = var_8h;\n                        puVar5[-1] = *var_18h;\n                        (**(*in_ECX + 0x170))(var_8h, &var_3ch);\n                        arg_8h_00 = &var_3ch;\n                        fcn.004064fa(arg_8h_00);\n                        arg_10h = arg_10h + 1;\n                        puVar7 = var_10h + 6;\n                        *puVar5 = var_3ch;\n                        puVar5[1] = var_38h;\n                        puVar5[2] = var_34h;\n                        puVar5[3] = var_30h;\n                        var_10h = puVar7;\n                    }\n                    var_8h = var_8h + 1;\n                    var_18h = var_18h + 5;\n                    arg_ch_00 = var_ch;\n                    puVar5 = puVar7;\n                } while (var_8h < var_ch);\n            }\n        }\n        if (((in_ECX[0x20] & 1U) != 0) && ((in_ECX[0x20] & 4U) != 0)) {\n            in_ECX[0x1c] = *arg_8h;\n        }\n        var_8h = NULL;\n        if (0 < arg_ch_00) {\n            var_10h = var_4h;\n            do {\n                arg_8h_00 = var_8h;\n                fcn.0041d4ed(var_8h, var_10h);\n                var_8h = var_8h + 1;\n                var_10h = var_10h + 5;\n            } while (var_8h < arg_ch_00);\n        }\n        if (0 < arg_10h) {\n            puVar5 = var_14h + 8;\n            do {\n                arg_8h_00 = puVar5[-1];\n                var_10h = puVar5;\n                var_1ch = fcn.0040df4b();\n                if (var_1ch != 0) {\n                    (**0x48169c)(*(var_1ch + 0x20), &var_3ch);\n                    iVar8 = var_38h - puVar5[1];\n                    iVar6 = var_3ch - *puVar5;\n                    (**(*in_ECX + 0x170))(var_10h[-2], &var_3ch);\n                    arg_8h_00 = NULL;\n                    fcn.0040e533(0, iVar6 + var_3ch, iVar8 + var_38h, 0, 0, 0x15);\n                    puVar5 = var_10h;\n                }\n                puVar5 = puVar5 + 6;\n                arg_10h = arg_10h - 1;\n            } while (arg_10h != 0);\n            var_10h = puVar5;\n            fcn.00403ac8(var_14h, arg_8h_00);\n        }\n        in_ECX[0x28] = var_20h;\n    }\n    fcn.00403ac8(var_4h);\ncode_r0x0041e358:\n    (**0x4815b8)(&var_3ch, arg_8h_00);\n    (**(*in_ECX + 0x140))(&var_3ch, arg_ch & 2);\n    arg_8h[1] = arg_8h[1] + (var_38h - var_30h);\n    *arg_8h = *arg_8h + (var_3ch - var_34h);\n    fcn.00433fb2(&var_24h, arg_ch & 1, arg_ch & 2);\n    iVar6 = *arg_8h;\n    if (*arg_8h <= var_24h) {\n        iVar6 = var_24h;\n    }\n    *arg_8h = iVar6;\n    iVar6 = arg_8h[1];\n    if (arg_8h[1] <= var_20h) {\n        iVar6 = var_20h;\n    }\n    arg_8h[1] = iVar6;\n    return arg_8h;\n}\n",
        "token_count": 2305
    },
    "0041f2f1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041f2f1(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00413cf0();\n    if ((iVar1 != -1) && (iVar1 = (**(*param_1 + 0x15c))(param_2, param_3),  iVar1 != 0)) {\n        (**0x481784)(param_1[8], 0x362, 0xe001, 0);\n        (**(*param_1 + 0x148))(1);\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 149
    },
    "0041fb7b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fb7b(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    uint arg_ch_00;\n    int32_t iVar8;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00424223(*(in_ECX + 0x20));\n    if ((arg_10h == 0) &&\n       ((*(in_ECX + 0x80) == NULL || (iVar2 = (**(**(in_ECX + 0x80) + 0x74))(arg_8h, arg_ch, 0),  iVar2 == 0)))) {\n        if (arg_8h == 0) {\n            fcn.00403bf2();\n        }\n        fcn.0040953a();\n        iVar2 = fcn.004196b5();\n        pcVar1 = *0x4816d8;\n        if ((((*(iVar2 + 0x78) != *(arg_8h + 4)) && (iVar2 = (**0x4816d8)(*(in_ECX + 0x20)),  iVar2 != 0)) &&\n            (iVar2 = fcn.00415688(),  iVar2 != 0)) && (iVar2 = (*pcVar1)(*(iVar2 + 0x20)),  iVar2 != 0)) {\n            iVar3 = (**0x48182c)(iVar2);\n            iVar7 = 0;\n            if (0 < iVar3) {\n                do {\n                    iVar8 = iVar7;\n                    iVar4 = (**0x481830)(iVar2, iVar7);\n                    if (iVar4 == *(arg_8h + 4)) {\n                        fcn.0042c734(iVar8, iVar2);\n                        break;\n                    }\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < iVar3);\n            }\n        }\n        var_ch = (**0x48182c)(*(arg_8h + 4));\n        pcVar1 = *0x481824;\n        var_24h = 0;\n        if (var_ch != 0) {\n            do {\n                uVar6 = var_24h;\n                var_28h = (*pcVar1)(*(arg_8h + 4), var_24h);\n                uVar5 = var_ch;\n                if (var_28h != 0) {\n                    if (var_28h == 0xffffffff) {\n                        iVar2 = fcn.0040f4ea(uVar6, var_24h);\n                        if (((iVar2 == 0) || (var_28h = (*pcVar1)(*(iVar2 + 4), 0),  var_28h == 0)) ||\n                           (var_28h == 0xffffffff)) goto code_r0x0041fcee;\n                        arg_ch_00 = 0;\n                    }\n                    else if ((*(in_ECX + 0x54) == 0) || (0xefff < var_28h)) {\n                        arg_ch_00 = 0;\n                    }\n                    else {\n                        arg_ch_00 = 1;\n                    }\n                    fcn.00409560(in_ECX, arg_ch_00);\n                    uVar5 = (**0x48182c)(*(arg_8h + 4));\n                    if (uVar5 < var_ch) {\n                        var_24h = var_24h + (uVar5 - var_ch);\n                        while ((var_24h < uVar5 && (uVar6 = (*pcVar1)(*(arg_8h + 4), var_24h),  uVar6 == var_28h))) {\n                            var_24h = var_24h + 1;\n                        }\n                    }\n                }\ncode_r0x0041fcee:\n                var_ch = uVar5;\n                var_24h = var_24h + 1;\n            } while (var_24h < var_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 980
    },
    "00422cc9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00422cc9(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uStack12;\n    \n    param_1[5] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar3 = (**0x481338)();\n    *param_1 = iVar3;\n    if (iVar3 == -1) {\n        uStack12 = 0x4a3410;\n        fcn.004515ca(&stack0xfffffff4, 0x496084);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    uStack12 = 0x422d04;\n    (**0x48133c)();\n    return param_1;\n}\n",
        "token_count": 236
    },
    "0042305e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042305e(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.00422eb6(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (*param_1 != -1) {\n        (**0x481328)(*param_1);\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (**0x481340)(param_1[4]);\n        (**0x481484)(uVar2);\n        (**0x481474)(uVar2);\n    }\n    (**0x48132c)(param_1 + 7);\n    return;\n}\n",
        "token_count": 205
    },
    "00423588": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423588(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(in_ECX + *piVar3);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 292
    },
    "00423a4f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00423a4f(int32_t param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t **ppiVar1;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *param_2;\n    if (piVar3 != NULL) {\n        if (piVar3 == 0xffffffff) {\n            uVar4 = 0;\n            if (*(param_1 + 8) != 0) {\n                ppiVar1 = *(param_1 + 4);\n                do {\n                    piVar3 = *ppiVar1;\n                    if (piVar3 != NULL) goto code_r0x00423a7f;\n                    uVar4 = uVar4 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar4 < *(param_1 + 8));\n                fcn.00403bf2();\n                param_1 = extraout_ECX;\n            }\n        }\ncode_r0x00423a7f:\n        piVar5 = *piVar3;\n        if (piVar5 == NULL) {\n            uVar4 = *(param_1 + 8);\n            uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n            if (uVar2 < uVar4) {\n                ppiVar1 = *(param_1 + 4) + uVar2 * 4;\n                do {\n                    piVar5 = *ppiVar1;\n                    if (piVar5 != NULL) break;\n                    uVar2 = uVar2 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar2 < uVar4);\n            }\n        }\n        *param_2 = piVar5;\n        *param_3 = piVar3[1];\n        *param_4 = piVar3[2];\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "00423e3f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00423e3f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.00419cdb();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (((arg_8h != -1) && (iVar2 = fcn.0040c7a5(),  iVar2 != 0)) && (*(iVar2 + 0x3c) != NULL)) {\n                (**(iVar2 + 0x3c))(0, 0);\n            }\n            fcn.00423d32();\n            fcn.00423d32();\n            fcn.00423d32();\n            fcn.00423d32();\n            fcn.00423d32();\n        }\n        iVar2 = fcn.00419c68();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.00422a4d();\n        if ((((iVar3 != 0) && (iVar2 != 0)) &&\n            ((*(iVar3 + 0xc) == 0 || (uVar4 = fcn.00455df2(*(iVar3 + 0xc)),  uVar4 < *(iVar2 + 0x98))))) &&\n           (*(iVar2 + 0x98) != 0)) {\n            arg_8h = 0;\n            if (*(iVar3 + 0xc) != 0) {\n                arg_8h = fcn.00455df2(*(iVar3 + 0xc));\n                fcn.004500d5(*(iVar3 + 0xc));\n            }\n            iVar2 = fcn.00450012(*(iVar2 + 0x98));\n            *(iVar3 + 0xc) = iVar2;\n            if ((iVar2 == 0) && (arg_8h != 0)) {\n                uVar5 = fcn.00450012(arg_8h);\n                *(iVar3 + 0xc) = uVar5;\n            }\n        }\n    }\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 536
    },
    "00424d79": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00424d79(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint *in_ECX;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint32_t unaff_EDI;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    iVar1 = unaff_EBX;\n    uVar2 = unaff_EDI;\n    if (0x76b < arg_8h) goto code_r0x00424d95;\n    do {\n        do {\n            fcn.00401103();\n            iVar1 = unaff_EBX;\n            uVar2 = unaff_EDI;\ncode_r0x00424d95:\n            unaff_EBX = arg_ch;\n            unaff_EDI = uVar2;\n        } while ((((0xb < arg_ch - 1U) || (0x1e < arg_10h - 1U)) || (unaff_EDI = arg_14h,  0x17 < arg_14h)) ||\n                ((0x3b < arg_18h || (0x3b < arg_1ch))));\n        var_24h = arg_1ch;\n        var_10h = arg_8h + -0x76c;\n        var_4h = arg_20h;\n        var_14h = arg_ch + -1;\n        var_20h = arg_18h;\n        var_1ch = arg_14h;\n        var_18h = arg_10h;\n        unaff_EDI = uVar2;\n        unaff_EBX = iVar1;\n        iVar3 = fcn.0045629c(&var_24h, uVar2, iVar1);\n        *in_ECX = iVar3;\n        in_ECX[1] = iVar3 >> 0x20;\n    } while (iVar3 == -1);\n    return;\n}\n",
        "token_count": 521
    },
    "004251b8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004251b8(uint arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint *var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_ch = NULL;\n    var_8h = NULL;\n    var_4h = (**0x48141c)(arg_8h);\n    pcVar1 = *0x48148c;\n    if (var_4h == 0xffffffff) {\n        uVar2 = (**0x48148c)(arg_8h);\n        fcn.0040a819(uVar2);\n    }\n    if ((*(arg_ch + 8) != var_4h) && ((var_4h & 1) != 0)) {\n        iVar3 = (**0x48130c)(arg_8h, *(arg_ch + 8));\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0040a819(uVar2);\n        }\n    }\n    if ((arg_ch[2] | arg_ch[3]) != 0) {\n        fcn.0042511d(arg_ch + 2, &var_24h);\n        if ((arg_ch[4] | arg_ch[5]) != 0) {\n            fcn.0042511d(arg_ch + 4, &var_14h);\n            var_8h = &var_14h;\n        }\n        if ((*arg_ch | arg_ch[1]) != 0) {\n            fcn.0042511d(arg_ch, &var_1ch);\n            var_ch = &var_1ch;\n        }\n        iVar3 = (**0x4813b4)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n        if (iVar3 == -1) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0040a819(uVar2);\n        }\n        iVar4 = (**0x481418)(iVar3, var_ch, var_8h, &var_24h);\n        if (iVar4 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0040a819(uVar2);\n        }\n        iVar3 = (**0x4813d4)(iVar3);\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0040a819(uVar2);\n        }\n    }\n    if ((*(arg_ch + 8) != var_4h) && ((var_4h & 1) == 0)) {\n        iVar3 = (**0x48130c)(arg_8h, *(arg_ch + 8));\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0040a819(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 718
    },
    "00425321": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425321(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    int32_t in_ECX;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    \n    fcn.00451550(arg_8h, 0, 0x128);\n    fcn.00403c40(arg_8h + 0x22, 0x104, *(in_ECX + 0xc), 0xffffffff);\n    if (*(in_ECX + 4) == *0x482de0) {\ncode_r0x00425470:\n        uVar2 = 1;\n    }\n    else {\n        iVar1 = (**0x481414)(*(in_ECX + 4), &var_8h, &var_10h, &var_18h);\n        if (iVar1 != 0) {\n            uVar3 = (**0x4813dc)(*(in_ECX + 4), 0);\n            arg_8h[6] = uVar3;\n            arg_8h[7] = 0;\n            if (uVar3 != 0xffffffff) {\n                if (*(*(in_ECX + 0xc) + -0xc) == 0) {\n                    *(arg_8h + 8) = 0;\n                }\n                else {\n                    iVar1 = (**0x48141c)(*(in_ECX + 0xc));\n                    *(arg_8h + 8) = (iVar1 == -1) - 1U & iVar1;\n                }\n                iVar1 = fcn.00424d38(&var_8h);\n                if (iVar1 == 0) {\n                    *arg_8h = 0;\n                    arg_8h[1] = 0;\n                }\n                else {\n                    puVar4 = fcn.00424e64(&var_8h, 0xffffffff);\n                    *arg_8h = *puVar4;\n                    arg_8h[1] = puVar4[1];\n                }\n                iVar1 = fcn.00424d38(&var_10h);\n                if (iVar1 == 0) {\n                    arg_8h[4] = 0;\n                    arg_8h[5] = 0;\n                }\n                else {\n                    puVar4 = fcn.00424e64(&var_10h, 0xffffffff);\n                    arg_8h[4] = *puVar4;\n                    arg_8h[5] = puVar4[1];\n                }\n                iVar1 = fcn.00424d38(&var_18h);\n                if (iVar1 == 0) {\n                    arg_8h[2] = 0;\n                    arg_8h[3] = 0;\n                }\n                else {\n                    puVar4 = fcn.00424e64(&var_18h, 0xffffffff);\n                    arg_8h[2] = *puVar4;\n                    arg_8h[3] = puVar4[1];\n                }\n                if ((*arg_8h | arg_8h[1]) == 0) {\n                    *arg_8h = arg_8h[2];\n                    arg_8h[1] = arg_8h[3];\n                }\n                if ((arg_8h[4] | arg_8h[5]) == 0) {\n                    arg_8h[4] = arg_8h[2];\n                    arg_8h[5] = arg_8h[3];\n                }\n                goto code_r0x00425470;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 841
    },
    "00425e79": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00425e79(uint32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    puVar2 = arg_ch;\n    *arg_ch = 1;\n    fcn.00425d6d(&arg_ch + 3);\n    if (arg_ch._3_1_ == -1) {\n        fcn.00425df4(&arg_8h);\n        if (arg_8h == -2) {\n            *puVar2 = 2;\n            fcn.00425d6d(&arg_ch + 3);\n            if (arg_ch._3_1_ != -1) goto code_r0x00425e9d;\n            fcn.00425df4(&arg_8h);\n        }\n        if (arg_8h == -1) {\n            fcn.00425e37(&arg_ch);\n            puVar2 = arg_ch;\n            if (arg_ch == 0xffffffff) {\n                fcn.00425dac(&var_8h);\n                if ((var_4h != 0) || (puVar2 = var_8h,  0x7fffffff < var_8h)) {\n                    fcn.00425943(1, 0);\n                    pcVar1 = swi(3);\n                    puVar2 = (*pcVar1)();\n                    return puVar2;\n                }\n            }\n        }\n        else {\n            puVar2 = arg_8h & 0xffff;\n        }\n    }\n    else {\ncode_r0x00425e9d:\n        puVar2 = arg_ch >> 0x18;\n    }\n    return puVar2;\n}\n",
        "token_count": 389
    },
    "00428022": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00428022(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    ulong uVar3;\n    \n    iVar1 = in_ECX[2];\n    if (iVar1 == 0) {\n        if (arg_ch == 0) {\n            *arg_8h = 0;\n            arg_8h[1] = -0x80000000;\n        }\n        else {\n            if (((arg_ch != -1) || (*in_ECX != 0)) || (in_ECX[1] != -0x80000000)) {\n                uVar3 = fcn.004567e0(*in_ECX, in_ECX[1], arg_ch, arg_ch >> 0x1f);\n                *arg_8h = uVar3;\n                arg_8h[1] = uVar3 >> 0x20;\n                arg_8h[2] = 0;\n                return arg_8h;\n            }\n            *arg_8h = -1;\n            arg_8h[1] = 0x7fffffff;\n        }\n        arg_8h[2] = 1;\n    }\n    else {\n        iVar2 = in_ECX[1];\n        *arg_8h = *in_ECX;\n        arg_8h[1] = iVar2;\n        arg_8h[2] = iVar1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 340
    },
    "00434020": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434020(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = (**0x481774)(1);\n    if (iVar2 < 0) {\n        return;\n    }\n    iVar3 = fcn.00419cdb();\n    var_8h = iVar3;\n    (**0x48177c)(&var_10h);\n    (**0x481800)(in_ECX[8], &var_10h);\n    var_4h = (**(*in_ECX + 0x6c))(var_10h, var_ch, 0);\n    if (var_4h < 0) {\n        *(iVar3 + 0x4c) = 0xffffffff;\n    }\n    else {\n        iVar4 = fcn.00415688();\n        iVar5 = fcn.004167de();\n        if (iVar5 == 0) {\ncode_r0x0043409b:\n            var_4h = -1;\n        }\n        else {\n            if (iVar4 == 0) {\n                fcn.00403bf2();\n            }\n            iVar5 = fcn.0040e21a();\n            if (iVar5 == 0) goto code_r0x0043409b;\n        }\n        if (*(iVar3 + 0x3c) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(*(iVar3 + 0x3c) + 0x20);\n        }\n        uVar6 = (**0x4815fc)();\n        piVar7 = fcn.00413d94(uVar6);\n        if (piVar7 != in_ECX) {\n            if (piVar7 == NULL) {\n                iVar5 = 0;\n            }\n            else {\n                iVar5 = piVar7[8];\n            }\n            if ((iVar5 != iVar3) && (iVar3 = fcn.00415688(),  iVar3 == iVar4)) {\n                var_4h = -1;\n            }\n        }\n    }\n    pcVar1 = *0x4815d0;\n    if (-1 < var_4h) {\n        (**0x4817fc)(in_ECX[8], &var_10h);\n        iVar3 = (**0x481578)(var_10h, var_ch);\n        if (iVar3 == 0) {\ncode_r0x00434130:\n            var_4h = -1;\n            *(var_8h + 0x4c) = 0xffffffff;\n        }\n        else if ((iVar3 != in_ECX[8]) && (iVar4 = (**0x4815f8)(in_ECX[8], iVar3),  iVar4 == 0)) {\n            iVar4 = *(var_8h + 0x3c);\n            if (iVar4 != 0) {\n                iVar4 = *(iVar4 + 0x20);\n            }\n            if (iVar4 != iVar3) goto code_r0x00434130;\n        }\n        if (-1 < var_4h) goto code_r0x00434160;\n    }\n    if (*(var_8h + 0x4c) == -1) {\n        (*pcVar1)(in_ECX[8], 0xe001);\n    }\n    (**(*in_ECX + 0x164))(0xffffffff);\ncode_r0x00434160:\n    if ((arg_8h == 0xe000) && ((*pcVar1)(in_ECX[8], 0xe000),  -1 < var_4h)) {\n        (**(*in_ECX + 0x164))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 889
    },
    "0043447c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043447c(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((in_ECX[0x23] != 0) && (iVar1 = (**(*in_ECX + 0x6c))(arg_ch, arg_10h, 0),  iVar1 == -1)) {\n        (**0x4817fc)(in_ECX[8], &arg_ch);\n        (***in_ECX[0x24])(arg_ch, arg_10h);\n        return;\n    }\n    fcn.00413cf0();\n    return;\n}\n",
        "token_count": 151
    },
    "0043696f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl fcn.0043696f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(0x18);\n    if (*(unaff_EBP + 8) != -1) {\n        uVar2 = fcn.004244f6();\n        (**0x4816bc)(*(extraout_ECX + 0x20), unaff_EBP + -0x24);\n        *(unaff_EBP + -0x10) = 0;\n        *(unaff_EBP + -0x14) = vtable.CRgn.0;\n        *(unaff_EBP + -4) = 0;\n        uVar3 = (**0x4810e4)(unaff_EBP + -0x24);\n        fcn.00406b6c(uVar3);\n        uVar3 = (**0x4817f8)(*(extraout_ECX + 0x20));\n        iVar4 = fcn.00406897(uVar3);\n        fcn.00406441(unaff_EBP + -0x14);\n        (**0x48183c)(*(extraout_ECX + 0x20), 0x198, *(unaff_EBP + 8), unaff_EBP + -0x24);\n        iVar1 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + -2;\n        *(unaff_EBP + -0x18) = iVar1 + 2;\n        uVar2 = fcn.00406d5b(uVar2);\n        (**0x4810c8)(*(iVar4 + 4), *(unaff_EBP + -0x24), *(unaff_EBP + -0x20), \n                     *(unaff_EBP + -0x1c) - *(unaff_EBP + -0x24), *(unaff_EBP + -0x18) - *(unaff_EBP + -0x20), 0x5a0049)\n        ;\n        fcn.00406d5b(uVar2);\n        (**0x4817f4)(*(extraout_ECX + 0x20), *(iVar4 + 4));\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x14) = vtable.CGdiObject.0;\n        fcn.00406bbf();\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 753
    },
    "00436c74": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436c74(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t in_ECX;\n    uint32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    \n    var_14h = arg_ch;\n    var_1ch = arg_10h;\n    var_20h = 5;\n    if (arg_14h != -1) {\n        var_20h = 7;\n        var_18h = arg_14h;\n    }\n    if (arg_18h != -1) {\n        var_20h = var_20h | 8;\n        var_ch = arg_18h;\n    }\n    (**0x48183c)(*(in_ECX + 0x20), 0x101b, arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 231
    },
    "00437478": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00437478(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != -1;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "004386a6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004386a6(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    \n    if (in_ECX != NULL) goto code_r0x004386b6;\n    do {\n        fcn.00403bf2();\ncode_r0x004386b6:\n    } while ((arg_8h == 0) || (iVar1 = fcn.0043828c(arg_8h, arg_ch),  iVar1 < 1));\n    if (arg_10h == 1) {\n        puVar2 = fcn.0043808f(iVar1);\n        uVar3 = (**0x48170c)(*(arg_8h + 0x20));\n        *puVar2 = uVar3 & 0xffff;\n        fcn.0043808f(iVar1);\n        iVar4 = fcn.0043828c();\n        if (0 < iVar4) {\n            fcn.00444d7c(iVar1, 1);\n            piVar5 = fcn.0043808f();\n            if ((*piVar5 == 0) && (piVar5 = fcn.0043808f(),  *piVar5 == 0)) {\n                fcn.00444d7c(iVar1, 1);\n            }\n        }\n    }\n    else {\n        fcn.00444d7c(iVar1, 1);\n        piVar5 = fcn.0043808f(iVar1 + -1);\n        if ((*piVar5 == 0) && (piVar5 = fcn.0043808f(iVar1),  *piVar5 == 0)) {\n            fcn.00444d7c(iVar1, 1);\n        }\n        if (arg_10h != -1) {\n            fcn.0043863f(arg_8h);\n        }\n    }\n    if (*(arg_8h + 0x90) != 0) {\n        piVar5 = fcn.0041eb1f();\n        if ((in_ECX[0x25] == 0) || (iVar1 = (**(*in_ECX + 0x16c))(),  iVar1 != 0)) {\n            piVar5[0x34] = piVar5[0x34] | 0xc;\n        }\n        else {\n            iVar1 = fcn.004385d7();\n            if (iVar1 == 0) {\n                (**(*piVar5 + 0x60))();\n                return 1;\n            }\n            fcn.0040e1f9(0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 632
    },
    "00439c7c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439c7c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x00439c92;\n    do {\n        fcn.00403bf2();\ncode_r0x00439c92:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.00403ac8(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x00439d82;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.00403a9d(iVar1);\n            *(in_ECX + 4) = uVar2;\n            fcn.00451550(uVar2, iVar4, iVar1);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x00439cf9:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00451550(iVar4 + *(in_ECX + 4), 0, iVar1 - iVar4);\n            }\n            goto code_r0x00439cf9;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x00439d2b:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x00439d2b;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.00403a9d(arg_8h);\n    fcn.00404383(iVar4, arg_8h, *(in_ECX + 4), *(in_ECX + 8));\n    fcn.00451550(*(in_ECX + 8) + iVar4, 0, iVar1 - *(in_ECX + 8));\n    fcn.00403ac8(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00439d82:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 746
    },
    "0043adae": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043adae(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar2 = arg_8h;\n    fcn.0043a1f0(arg_ch);\n    fcn.0040df6f(arg_ch, &arg_8h);\n    pcVar1 = *0x48183c;\n    if (*piVar2 == 0) {\n        (**0x48183c)(arg_8h, 0x18c, 0xffffffff, *arg_10h);\n    }\n    else {\n        iVar3 = (**0x48183c)(arg_8h, 0x188, 0, 0);\n        if (iVar3 == -1) {\n            fcn.00402193();\n        }\n        else {\n            uVar4 = (*pcVar1)(arg_8h, 0x18a, iVar3, 0);\n            uVar4 = fcn.00409a55(uVar4);\n            (*pcVar1)(arg_8h, 0x189, iVar3, uVar4);\n        }\n        fcn.004081bb(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "0043aea2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043aea2(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar1 = arg_8h;\n    fcn.0043a1f0(arg_ch);\n    fcn.0040df6f(arg_ch, &arg_8h);\n    puVar2 = arg_10h;\n    if (*piVar1 == 0) {\n        iVar3 = (**0x48183c)(arg_8h, 0x14d, 0xffffffff, *arg_10h);\n        if (iVar3 == -1) {\n            fcn.00423f38(arg_8h, *puVar2);\n        }\n    }\n    else {\n        iVar3 = (**0x4816ec)(arg_8h);\n        if (iVar3 < 1) {\n            uVar4 = fcn.004023b3(0xff);\n            iVar3 = 0x100;\n        }\n        else {\n            uVar4 = fcn.00409a55(iVar3, iVar3 + 1);\n        }\n        (**0x4816f0)(arg_8h, uVar4, iVar3);\n        fcn.004081bb(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "0043bc91": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043bc91(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    if (in_ECX != NULL) goto code_r0x0043bca7;\n    do {\n        fcn.00403bf2();\ncode_r0x0043bca7:\n    } while ((arg_ch == NULL) || (arg_8h == 0));\n    if ((in_ECX[9] != 0) && (in_ECX[10] != 0)) {\n        if (arg_10h == -1) {\n            arg_10h = in_ECX[0xc];\n        }\n        var_30h = *arg_ch;\n        var_2ch = arg_ch[1];\n        var_28h = arg_ch[2];\n        var_24h = arg_ch[3];\n        fcn.0043b885(&var_8h);\n        fcn.00405fb4(&var_10h);\n        piVar1 = arg_8h + 0xc;\n        var_20h = var_8h;\n        var_1ch = var_4h;\n        var_18h = var_10h;\n        var_14h = var_ch;\n        arg_ch = NULL;\n        arg_8h = 0;\n        if ((*piVar1 != 0) && (*(in_ECX[8] + 0x88) != 0)) {\n            arg_8h = *(iVar2 + 8);\n            arg_ch = *(in_ECX[8] + 0x88);\n        }\n        iVar3 = (**(*in_ECX[10] + 0xc))\n                          (in_ECX[10], arg_10h, 0xffffffff, 0, arg_ch, arg_8h, *(iVar2 + 4), &var_30h, &var_20h, 0, 0);\n        if ((arg_ch != NULL) && (iVar3 == -0x7ffbfff9)) {\n            iVar3 = (**(*in_ECX[10] + 0xc))\n                              (in_ECX[10], arg_10h, 0xffffffff, 0, 0, 0, *(iVar2 + 4), &var_30h, &var_20h, 0, 0);\n        }\n        if ((iVar3 == 0) || (iVar3 != -0x7ffbfff9)) {\n            (**(*in_ECX + 200))(iVar3);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 687
    },
    "00441f65": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441f65(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_34h;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (((*(param_1 + 0x68) != 1) && (iVar3 = fcn.00441c01(),  iVar3 != 0)) &&\n       (iVar3 = (**0x481778)(&var_34h, *(param_1 + 0x20), 0x367, 0x367, 3),  iVar3 == 0)) {\n        var_ch = *(param_1 + 0x68);\n        *(param_1 + 0x68) = 1;\n        if (var_ch != 2) {\n            piVar1 = *(param_1 + 0x80);\n            if ((piVar1 != NULL) && (iVar3 = (**(*piVar1 + 0x60))(1),  iVar3 == 0)) {\n                (**(**(param_1 + 0x80) + 0x60))(0);\n                *(param_1 + 0x68) = 0;\n                return;\n            }\n        }\n        if (var_ch == 0) {\n            (**0x481784)(*(param_1 + 0x20), 0x111, 0xe145);\n            *(param_1 + 0x68) = 2;\n        }\n        else {\n            var_ch = (**0x48183c)(*(param_1 + 0x20), 0x362, 0xe002, 0);\n            if (var_ch == 0) {\n                var_ch = 0xe001;\n            }\n            var_8h = 0;\n            (**0x48177c)(&var_18h);\n            fcn.00441c5b(var_18h, var_14h, 0);\n            var_4h = 0;\n            iVar3 = fcn.00419c68();\n            piVar1 = *(iVar3 + 4);\n            var_10h = piVar1;\n            do {\n                while( true ) {\n                    if (*(param_1 + 0x68) == 0) goto code_r0x00442095;\n                    iVar3 = (**0x481778)(&var_34h, 0, 0, 0, 0);\n                    if (iVar3 != 0) break;\n                    iVar3 = (**(*piVar1 + 0x60))(var_4h);\n                    var_4h = var_4h + 1;\n                    if (iVar3 == 0) {\n                        var_4h = 0;\n                        (**0x48158c)();\n                    }\n                }\n                iVar3 = fcn.00441d6a(&var_34h, &var_8h);\n            } while (iVar3 != 0);\ncode_r0x00442095:\n            pcVar2 = *0x4815c4;\n            *(param_1 + 0x68) = 0;\n            (*pcVar2)();\n            uVar4 = (**0x4815cc)(*(param_1 + 0x20));\n            fcn.00413d94(uVar4);\n            (*pcVar2)();\n            pcVar2 = *0x48183c;\n            (**0x48183c)(*(param_1 + 0x20), 0x362, var_ch, 0);\n            if (*(param_1 + 0x80) != NULL) {\n                (**(**(param_1 + 0x80) + 0x60))(0);\n            }\n            if (var_8h != 0) {\n                if (var_8h == -1) {\n                    (*pcVar2)(*(param_1 + 0x20), 0x111, 0xe147, 0);\n                }\n                else {\n                    (**(*var_10h + 0xac))(var_8h, 1);\n                }\n            }\n            (**0x481784)(*(param_1 + 0x20), 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 976
    },
    "0044224c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044224c(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_34h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint var_4h;\n    \n    puVar1 = arg_ch;\n    puVar3 = &var_34h;\n    for (iVar2 = 0xc; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (((var_14h == 0) && (var_10h != 0xffffffff)) && (var_10h != NULL)) {\n        iVar2 = fcn.0043508e(var_10h, &var_4h);\n        if (iVar2 == 0) {\n            puVar1 = fcn.00435287(var_10h);\n            *puVar1 = 0;\n        }\n        arg_ch = NULL;\n        fcn.004350b5(var_10h, &arg_ch);\n        var_10h = arg_ch;\n    }\n    (**(*in_ECX + 0x110))(0x404, arg_8h, &var_34h);\n    return;\n}\n",
        "token_count": 323
    },
    "00444e9b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00444e9b(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *arg_8h_00;\n    int16_t *piVar4;\n    int32_t *arg_ch_00;\n    int32_t in_ECX;\n    int16_t *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = NULL;\n    var_8h = 0;\n    if (*(in_ECX + 0x28) != 0) {\n        var_4h = 0;\n        do {\n            piVar4 = *(in_ECX + 0x20) + var_4h;\n            if ((*piVar4 == *arg_8h) && ((*(arg_8h + 8) & *(piVar4 + 8)) != 0)) {\n                iVar1 = *(piVar4 + 4);\n                if ((iVar1 != 2) && ((iVar1 != 4 && (*(piVar4 + 10) != 0)))) {\n                    iVar2 = *(piVar4 + 6);\n                    iVar3 = *(arg_8h + 6);\n                    if ((iVar2 != iVar3) && (((iVar2 != 0 || (iVar3 != -1)) && ((iVar2 != -1 || (iVar3 != 0))))))\n                    goto code_r0x00444f3c;\n                }\n                if ((iVar1 == *(arg_8h + 4)) && (*(piVar4 + 0x10) == arg_ch)) {\n                    arg_ch_00 = *(arg_8h + 2);\n                    arg_8h_00 = *(piVar4 + 2);\n                    var_ch = piVar4;\n                    if (arg_8h_00 != NULL) {\n                        if ((arg_ch_00 == NULL) || (*arg_8h_00 != *arg_ch_00)) goto code_r0x00444f3c;\n                        arg_ch_00 = fcn.00453966(arg_8h_00, arg_ch_00, *arg_8h_00);\n                    }\n                    if (arg_ch_00 == NULL) {\n                        return piVar4;\n                    }\n                }\n            }\ncode_r0x00444f3c:\n            var_8h = var_8h + 1;\n            var_4h = var_4h + 0x24;\n        } while (var_8h < *(in_ECX + 0x28));\n    }\n    return var_ch;\n}\n",
        "token_count": 585
    },
    "0044b0ea": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044b0ea(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x80) == 0) {\n        iVar1 = fcn.0042349a(*(param_1 + 0x24), 0x490b10);\n        *(param_1 + 0x80) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = (**0x4818b0)(*(param_1 + 0x24));\n            if (iVar1 < 0) {\n                *(param_1 + 0x80) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.0042349a(*(param_1 + 0x24), 0x490b10);\n                *(param_1 + 0x80) = uVar2;\n            }\n        }\n    }\n    if ((*(param_1 + 0x80) != 0) && (*(param_1 + 0x80) != -1)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 254
    },
    "0044e127": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl\nfcn.0044e127(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    char *var_4h;\n    \n    fcn.00451106(8);\n    var_4h = unaff_EBP + -0x14;\n    (**0x481974)(*(unaff_EBP + 0xc), var_4h);\n    iVar2 = fcn.0042320d(*(unaff_EBP + -0x14));\n    if (iVar2 == 0) goto code_r0x0044e34a;\n    fcn.0044dd8d(0, iVar2);\n    fcn.0044dd8d(1, *(unaff_EBP + 0x10));\n    (**0x481990)(iVar2);\n    fcn.00409b56();\n    fcn.0040231f();\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.00419c68();\n    fcn.0040b1e8(*(iVar2 + 8), unaff_EBP + -0x10);\n    fcn.0044dd8d();\n    fcn.0044dd8d();\n    fcn.0044dd8d();\n    fcn.00419c68();\n    fcn.0044dd8d();\n    fcn.00409b56();\n    fcn.0040231f();\n    *(unaff_EBP + -4) = 1;\n    if (*(unaff_EBP + 0x1c) != 0) {\n        *(unaff_EBP + 0xc) = *(unaff_EBP + -0x10);\n        fcn.00419c68();\n        iVar2 = (**0x48154c)();\n        if (iVar2 != 0) {\n            (**0x4817e0)();\n        }\n    }\n    fcn.004085f9();\n    fcn.0044dd8d();\n    fcn.0044dd8d();\n    fcn.00409b56();\n    fcn.0040231f();\n    pcVar1 = *(unaff_EBP + 0x24);\n    *(unaff_EBP + -4) = 2;\n    if ((pcVar1 == NULL) || (*pcVar1 == '\\0')) {\n        fcn.004024ff();\n        iVar2 = fcn.0042acc2();\n        if (iVar2 != -1) {\n            fcn.0042af45(unaff_EBP + 0x20, iVar2 + 1);\n            *(unaff_EBP + -4) = 3;\n            fcn.004085ac();\n            *(unaff_EBP + -4) = 2;\n            fcn.00401fb6();\n            iVar2 = fcn.0042acc2();\n            if (iVar2 != -1) {\n                fcn.0042af45(unaff_EBP + 0x20, iVar2);\n                *(unaff_EBP + -4) = 4;\n                fcn.004085ac();\n                *(unaff_EBP + -4) = 2;\n                fcn.00401fb6();\n                iVar2 = fcn.0042acc2();\n                if (iVar2 != -1) {\n                    var_4h = fcn.0042aecc(unaff_EBP + 0x20, iVar2);\n                    *(unaff_EBP + -4) = 5;\n                    fcn.004085ac(var_4h);\n                    fcn.00401fb6();\n                    goto code_r0x0044e31f;\n                }\n            }\n        }\n        fcn.00402193();\n    }\n    else {\n        fcn.004024ff();\n        var_4h = pcVar1;\n    }\ncode_r0x0044e31f:\n    fcn.0044dd8d(8, *(unaff_EBP + 0xc), var_4h);\n    fcn.00401fb6();\n    fcn.00401fb6();\n    fcn.00401fb6();\ncode_r0x0044e34a:\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 1032
    },
    "0044e681": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0044e681(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (**(param_1 + 8) == -1) {\n        for (iVar1 = *(param_1 + 4); *(iVar1 + 0x18) != -1; iVar1 = iVar1 + 0x20) {\n        }\n        **(param_1 + 8) = iVar1 - *(param_1 + 4) >> 5;\n    }\n    return **(param_1 + 8);\n}\n",
        "token_count": 122
    },
    "0044e96d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.0044e96d(uint arg_8h, uint arg_ch)\n\n{\n    char extraout_AH;\n    int32_t iVar1;\n    char extraout_CH;\n    ushort extraout_DX;\n    ushort in_DX;\n    char unaff_BL;\n    uint32_t uVar2;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint *puVar3;\n    int32_t unaff_EDI;\n    uint *puVar4;\n    bool in_CF;\n    bool in_ZF;\n    uint var_75h;\n    uint var_4h;\n    \n    if (in_CF || in_ZF) {\n        func_0xe8a3e9a3();\n        *(unaff_EDI + -0x18) = *(unaff_EDI + -0x18) + unaff_BL;\n        *(unaff_ESI + -0x18) = *(unaff_ESI + -0x18) + extraout_AH;\n        *(unaff_EDI + -0x18) = *(unaff_EDI + -0x18) + extraout_CH;\n        *(unaff_ESI + -0x18) = *(unaff_ESI + -0x18) + (extraout_DX >> 8);\n        in_DX = extraout_DX;\n    }\n    *(unaff_ESI + -0x18) = *(unaff_ESI + -0x18) + (in_DX >> 8);\n    *(unaff_EBP + -0x75) = *(unaff_EBP + -0x75) + in_DX;\n    in(in_DX);\n    *(unaff_EBP + -4) = 0;\n    puVar3 = *(unaff_EBP + 8);\n    do {\n        if (puVar3 == NULL) {\n            return 0xffffffff;\n        }\n        puVar4 = puVar3[1];\n        iVar1 = fcn.0044e681();\n        uVar2 = 0;\n        *(unaff_EBP + 8) = iVar1;\n        if (iVar1 != 0) {\n            do {\n                if ((*(puVar4 + 3) != 0xfff) && (iVar1 = fcn.0040be9a(*puVar4, *(unaff_EBP + 0xc)),  iVar1 == 0)) {\n                    if (puVar4[1] != 0xffffffff) {\n                        return puVar4[1];\n                    }\n                    return *(unaff_EBP + -4) << 0x10 | uVar2 + 1 & 0xffff;\n                }\n                puVar4 = puVar4 + 8;\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(unaff_EBP + 8));\n        }\n        puVar3 = *puVar3;\n        *(unaff_EBP + -4) = *(unaff_EBP + -4) + 1;\n    } while( true );\n}\n",
        "token_count": 671
    },
    "0044e9e2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044e9e2(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    bool bVar6;\n    \n    puVar1 = (**(*arg_8h + 0x30))();\n    bVar6 = arg_ch == 0;\n    puVar5 = puVar1;\n    if (bVar6) {\n        for (; puVar5 != NULL; puVar5 = *puVar5) {\n            for (puVar2 = puVar5[1]; puVar2[6] != -1; puVar2 = puVar2 + 8) {\n                if (*(puVar2 + 3) == 0xfff) {\n                    arg_ch = puVar2[1];\n                    if ((arg_ch == 0xffffffff) && (arg_ch = fcn.0044e975(puVar1, *puVar2),  arg_ch == 0xffffffff)) {\n                        return 0;\n                    }\n                    bVar6 = arg_ch == 0;\n                    goto code_r0x0044ea39;\n                }\n            }\n        }\n    }\n    else {\ncode_r0x0044ea39:\n        if ((!bVar6 && -1 < arg_ch) && (uVar3 = 0,  puVar1 != NULL)) {\n            puVar5 = puVar1;\n            do {\n                if (arg_ch >> 0x10 <= uVar3) break;\n                puVar5 = *puVar5;\n                uVar3 = uVar3 + 1;\n            } while (puVar5 != NULL);\n            if (puVar5 != NULL) {\n                uVar3 = fcn.0044e681(puVar5);\n                if ((arg_ch & 0xffff) <= uVar3) {\n                    iVar4 = puVar5[1] + ((arg_ch & 0xffff) * 8 + -8) * 4;\n                    if (*(iVar4 + 4) == 0xffffffff) {\n                        return iVar4;\n                    }\n                    if (*(iVar4 + 4) == arg_ch) {\n                        return iVar4;\n                    }\n                }\n            }\n        }\n    }\n    do {\n        if (puVar1 == NULL) {\n            return 0;\n        }\n        for (iVar4 = puVar1[1]; *(iVar4 + 0x18) != -1; iVar4 = iVar4 + 0x20) {\n            if (*(iVar4 + 4) == arg_ch) {\n                return iVar4;\n            }\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 602
    },
    "0044fb2f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0044fb2f(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    uint uVar1;\n    \n    if ((*(param_1 + 4) == -1) || (*(param_1 + 4) != param_2)) {\n        *param_3 = 0;\n        uVar1 = 0;\n    }\n    else {\n        *param_3 = *(param_1 + 8);\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 147
    },
    "0044fccb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0044fccb(int32_t param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    \n    if ((((*(param_1 + 4) != -1) && (*(param_1 + 4) == param_2)) && (*(param_1 + 0x1c) != 0)) &&\n       (iVar1 = fcn.00409248(param_1 + 0xc, param_3),  iVar1 != 0)) {\n        *param_4 = *(param_1 + 0x1c);\n        (**(**(param_1 + 0x1c) + 4))(*(param_1 + 0x1c));\n        return 1;\n    }\n    *param_4 = 0;\n    return 0;\n}\n",
        "token_count": 191
    },
    "00401152": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00401152(uint param_1, uint param_2, uint param_3)\n\n{\n    uint8_t extraout_var;\n    \n    if ((*0x4a670c & 1) == 0) {\n        *0x4a670c = *0x4a670c | 1;\n        (**0x481488)();\n        *0x4a6708 = extraout_var >> 7;\n    }\n    if (*0x4a6708 == 0) {\n        param_2 = param_3;\n    }\n    (**0x48129c)(param_1, param_2);\n    return;\n}\n",
        "token_count": 141
    },
    "00409ed7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00409ed7(uint noname_0, int32_t noname_1, int32_t noname_2, uint noname_3, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    \n    if (noname_2 != 0) {\n        if (noname_1 == 0) {\n            fcn.00403bf2();\n        }\n        if ((~*(var_8h + 0x18) & 1) == 0) {\n            do {\n                noname_2 = noname_2 + -1;\n                fcn.00427d9e(var_8h, noname_1);\n                noname_1 = noname_1 + 4;\n            } while (noname_2 != 0);\n        }\n        else {\n            do {\n                noname_2 = noname_2 + -1;\n                fcn.00409e75();\n                fcn.00427d51(var_8h, noname_1);\n                noname_1 = noname_1 + 4;\n            } while (noname_2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "0040e4e2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040e4e2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (arg_18h != 0) {\n        arg_18h = *(arg_18h + 4);\n    }\n    uVar1 = (**0x4816f8)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if ((*(in_ECX + 0x4c) != 0) && ((arg_20h & 1) != 0)) {\n        (**(**(in_ECX + 0x4c) + 0x5c))(arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 229
    },
    "0040ea34": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ea34(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0040e3fd();\n    puVar4 = &var_8h;\n    fcn.0040e3fd(puVar4);\n    do {\n        iVar1 = var_4h;\n        if (var_4h == 0) {\n            puVar3 = &var_10h;\ncode_r0x0040ea89:\n            fcn.0040e3fd(puVar3, puVar4);\n            return arg_8h;\n        }\n        uVar2 = fcn.0040e33f();\n        if ((uVar2 >> 0x11 & 1) != 0) {\ncode_r0x0040ea86:\n            puVar3 = &var_8h;\n            goto code_r0x0040ea89;\n        }\n        if (var_10h != var_8h) {\n            fcn.00403bf2();\n            goto code_r0x0040ea86;\n        }\n        puVar4 = &var_4h;\n        var_ch = iVar1;\n        fcn.0040e480();\n    } while( true );\n}\n",
        "token_count": 325
    },
    "0040ea9a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ea9a(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040e3fd();\n    fcn.0040ea03(&var_8h, 1);\n    while( true ) {\n        if (var_4h == 0) {\n            return arg_8h;\n        }\n        uVar1 = fcn.0040e33f();\n        if ((uVar1 >> 0x11 & 1) != 0) break;\n        fcn.00407ed0();\n        if (*(arg_8h + 4) != 0) {\n            fcn.00407ed0();\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 183
    },
    "0040ebb0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ebb0(uint param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040e3fd(param_1);\n    bVar1 = false;\n    do {\n        if (((var_4h == 0) || (fcn.00407ed0(&var_4h),  iVar5 = var_4h,  var_4h == 0)) ||\n           (uVar3 = fcn.0040e33f(),  (uVar3 >> 0x11 & 1) != 0)) {\n            uVar4 = fcn.0040ea34(&var_10h);\n            fcn.0040e419(uVar4);\n            if (var_4h == 0) {\n                return;\n            }\n            if (bVar1) {\n                return;\n            }\n            bVar1 = true;\n            iVar5 = var_4h;\n        }\n        cVar2 = fcn.0040e358(*(iVar5 + 8));\n        if (cVar2 == '\\0') {\n            fcn.0040e419(&var_8h);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 309
    },
    "0040ec2b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ec2b(uint param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040e3fd(param_1);\n    bVar1 = false;\n    do {\n        if ((var_4h == 0) || (uVar3 = fcn.0040e33f(),  (uVar3 >> 0x11 & 1) != 0)) {\n            uVar4 = fcn.0040ea9a(&var_10h);\n            fcn.0040e419(uVar4);\n            if (var_4h == 0) {\n                return;\n            }\n            if (bVar1) {\n                return;\n            }\n            bVar1 = true;\n        }\n        else {\n            fcn.0040e480(&var_4h);\n        }\n        if ((var_4h != 0) && (cVar2 = fcn.0040e358(*(var_4h + 8)),  cVar2 == '\\0')) {\n            fcn.0040e419(&var_8h);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 293
    },
    "0040fcd7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fcd7(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        iVar1 = fcn.0040fc07(&var_10h);\n        if (iVar1 != 0) {\n            uVar2 = fcn.0040e0b4();\n            if ((uVar2 & 0x1000000) != 0) {\n                uVar3 = fcn.0040e0ce();\n                uVar3 = fcn.0040e0b4(0, uVar3);\n                (**0x4816b4)(&var_10h, uVar3);\n                *(arg_8h + 8) = var_10h;\n                *(arg_8h + 0xc) = var_ch;\n                *(arg_8h + 0x10) = var_8h - var_10h;\n                *(arg_8h + 0x14) = var_4h - var_ch;\n            }\n        }\n    }\n    fcn.00413cf0();\n    return;\n}\n",
        "token_count": 309
    },
    "00416f36": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00416f36(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00419c68();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.00451550(&var_34h, 0, 0x28);\n        var_30h = *0x481680;\n        iVar1 = fcn.00419c68();\n        var_24h = *(iVar1 + 8);\n        var_1ch = *0x4a8398;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            var_34h = 0xb;\n            var_10h = \"AfxWnd80s\";\n            iVar1 = fcn.00416c4f(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            var_10h = \"AfxOleControl80s\";\n            iVar1 = fcn.00416c4f(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            var_10h = \"AfxControlBar80s\";\n            var_18h = 0x10;\n            iVar1 = fcn.00416c4f(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            var_18h = 0;\n            iVar1 = fcn.00416ef5(&var_34h, \"AfxMDIFrame80s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            var_18h = 6;\n            iVar1 = fcn.00416ef5(&var_34h, \"AfxFrameOrView80s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.00414505(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.00414505(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.00414505(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.00414505(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.00414505(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.00414505(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.00414505(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.00414505(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.00414505(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.00414505(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.00414505(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.00414505(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.00414505(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x40000) != 0) {\n            var_8h = 0x8000;\n            uVar2 = fcn.00414505(&var_ch, 0x40000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n            uVar3 = uVar3 | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 1778
    },
    "0041cd4b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cd4b(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *var_8h;\n    int32_t *piStack8;\n    \n    uVar1 = param_1[0x20];\n    param_1[0x28] = 0;\n    if (((uVar1 & 1) == 0) || ((uVar1 & 4) == 0)) {\n        if ((uVar1 & 0xa000) == 0) {\n            uVar2 = 0x50;\n        }\n        else {\n            uVar2 = 0x4a;\n        }\n    }\n    else {\n        uVar2 = 0x46;\n    }\n    var_8h = param_1;\n    piStack8 = param_1;\n    (**(*param_1 + 0x138))(&var_8h, 0, uVar2);\n    return;\n}\n",
        "token_count": 219
    },
    "0041cdc9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041cdc9(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    iVar6 = 0;\n    var_4h = 0;\n    if (arg_ch < 1) {\ncode_r0x0041ce8c:\n        return var_4h + 1;\n    }\ncode_r0x0041cde7:\n    piVar1 = iVar3 * 0x14 + arg_8h;\n    piVar4 = piVar1 + 2;\n    *piVar4 = *piVar4 & 0xdf;\n    if ((*piVar4 & 8) == 0) {\n        if ((*(piVar1 + 9) & 1) == 0) {\n            iVar2 = *(in_ECX + 0xac);\n        }\n        else {\n            iVar2 = *piVar1;\n        }\n        iVar6 = iVar6 + iVar2;\n        iVar2 = iVar3;\n        if (arg_10h < iVar6) {\n            for (; (-1 < iVar2 && ((*piVar4 & 0x20) == 0)); piVar4 = piVar4 + -5) {\n                if (((*(piVar4 + 1) & 1) != 0) && ((piVar4[-1] == 0 && ((*piVar4 & 8) == 0)))) goto code_r0x0041ce6f;\n                iVar2 = iVar2 + -1;\n            }\n            iVar2 = iVar3 + -1;\n            if (-1 < iVar2) {\n                puVar5 = iVar2 * 0x14 + 8 + arg_8h;\n                do {\n                    if ((*puVar5 & 0x20) != 0) break;\n                    if (((*puVar5 & 8) == 0) && (((puVar5[1] & 1) == 0 || (*(puVar5 + -4) == 0))))\n                    goto code_r0x0041ce6f;\n                    iVar2 = iVar2 + -1;\n                    puVar5 = puVar5 + -0x14;\n                } while (-1 < iVar2);\n            }\n        }\n    }\n    goto code_r0x0041ce80;\ncode_r0x0041ce6f:\n    puVar5 = iVar2 * 0x14 + 8 + arg_8h;\n    *puVar5 = *puVar5 | 0x20;\n    iVar6 = 0;\n    var_4h = var_4h + 1;\n    iVar3 = iVar2;\ncode_r0x0041ce80:\n    iVar3 = iVar3 + 1;\n    if (arg_ch <= iVar3) goto code_r0x0041ce8c;\n    goto code_r0x0041cde7;\n}\n",
        "token_count": 706
    },
    "0041d6eb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041d6eb(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar7 = *in_ECX;\n    var_ch = 0;\n    var_8h = 0;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    uVar2 = (**(iVar7 + 0x110))(0x455, 0, 0);\n    if (0 < arg_10h) {\n        puVar8 = arg_ch + 9;\n        arg_ch = arg_10h;\n        do {\n            arg_10h = *(puVar8 + -9);\n            uVar3 = fcn.0040e0b4();\n            if (((uVar3 & 0x800) == 0) && (*0x4a3d3c != 0x40047)) {\n                arg_10h = (arg_10h * 2) / 3;\n            }\n            if ((puVar8[-1] & 8) == 0) {\n                uVar1 = *puVar8;\n                iVar7 = in_ECX[0x2b];\n                if ((uVar1 & 1) == 0) {\n                    if (((uVar1 & 8) != 0) && ((uVar2 & 1) != 0)) {\n                        iVar7 = iVar7 + *0x4a3d40;\n                    }\n                    iVar4 = var_ch + iVar7;\n                    if (var_ch + iVar7 <= *arg_8h) {\n                        iVar4 = *arg_8h;\n                    }\n                    *arg_8h = iVar4;\n                    iVar4 = in_ECX[0x2c];\n                    iVar6 = var_8h;\ncode_r0x0041d7c4:\n                    iVar5 = iVar4 + iVar6;\n                    if (iVar4 + iVar6 <= arg_8h[1]) {\n                        iVar5 = arg_8h[1];\n                    }\n                    arg_8h[1] = iVar5;\n                }\n                else {\n                    if ((puVar8[-1] & 0x20) != 0) {\n                        iVar4 = in_ECX[0x2c] + var_8h;\n                        iVar6 = arg_10h;\n                        goto code_r0x0041d7c4;\n                    }\n                    iVar4 = *(puVar8 + -9) + var_ch;\n                    if (*(puVar8 + -9) + var_ch <= *arg_8h) {\n                        iVar4 = *arg_8h;\n                    }\n                    *arg_8h = iVar4;\n                }\n                if ((uVar1 & 1) != 0) {\n                    iVar7 = *(puVar8 + -9);\n                }\n                var_ch = var_ch + iVar7;\n                if ((puVar8[-1] & 0x20) != 0) {\n                    var_8h = var_8h + in_ECX[0x2c];\n                    var_ch = 0;\n                    if ((uVar1 & 1) != 0) {\n                        var_8h = var_8h + arg_10h;\n                    }\n                }\n            }\n            puVar8 = puVar8 + 0x14;\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 854
    },
    "0041f197": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041f197(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar3 = fcn.0040e0b4();\n    iVar4 = param_1;\n    if ((uVar3 & 0x40000000) == 0) {\n        iVar4 = fcn.0041493b();\n    }\n    if (iVar4 == 0) {\n        fcn.00403bf2();\n    }\n    pcVar2 = *0x48183c;\n    if ((param_2 & 0xc) != 0) {\n        iVar5 = fcn.0040e21a();\n        if ((((~(param_2 >> 3) & 1) == 0) || (iVar5 == 0)) || (iVar4 == param_1)) {\n            (*pcVar2)(*(iVar4 + 0x20), 0x86, 0, 0);\n        }\n        else {\n            *(param_1 + 0x3c) = *(param_1 + 0x3c) | 0x200;\n            (*pcVar2)(*(iVar4 + 0x20), 0x86, 1, 0);\n            *(param_1 + 0x3c) = *(param_1 + 0x3c) & 0xfffffdff;\n        }\n    }\n    uVar7 = 5;\n    iVar5 = (**0x481874)(5);\n    pcVar1 = *0x481740;\n    while (iVar5 = (*pcVar1)(iVar5, uVar7),  iVar5 != 0) {\n        iVar6 = fcn.0041e7fc(*(iVar4 + 0x20), iVar5);\n        if (iVar6 != 0) {\n            (*pcVar2)(iVar5, 0x36d, param_2, 0);\n        }\n        uVar7 = 2;\n    }\n    return;\n}\n",
        "token_count": 484
    },
    "004206a9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004206a9(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.00403bf2();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00420597();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00426074(arg_ch, uVar1 * 4);\n            arg_ch = arg_ch + uVar1 * 4;\n        }\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "00420ebe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00420ebe(uint param_1, uint *param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *puVar5;\n    uint32_t uStack280;\n    uint *puStack276;\n    uint32_t uStack272;\n    uint uStack268;\n    uint arg_8h;\n    \n    arg_8h = 0xc;\n    uStack268 = 0x420ee2;\n    fcn.00451106();\n    if (param_2 != NULL) goto code_r0x00420f03;\n    do {\n        uStack268 = 0x420f03;\n        param_3 = fcn.00403bf2();\ncode_r0x00420f03:\n    } while (param_3 == 0);\n    uStack268 = 0x420f15;\n    uStack268 = fcn.00409b56();\n    uStack272 = 0x420f1e;\n    fcn.0040231f();\n    uVar2 = param_2[1];\n    uStack268 = 0;\n    if (((param_2[2] == -0x208) && ((*(param_2 + 0x19) & 1) != 0)) ||\n       ((param_2[2] == -0x212 && ((*(param_2 + 0x2d) & 1) != 0)))) {\n        puStack276 = 0x420f4d;\n        uStack272 = uVar2;\n        uVar2 = (**0x48170c)();\n        uVar2 = uVar2 & 0xffff;\n    }\n    if (uVar2 != 0) {\n        uStack272 = 0x100;\n        uStack280 = uVar2;\n        puStack276 = &stack0xfffffef8;\n        iVar3 = fcn.00409992();\n        if (iVar3 == 0) {\n            fcn.00401fb6();\n            goto code_r0x00421008;\n        }\n        fcn.00409a76(&stack0xfffffee8, &stack0xfffffef8, 1, 10);\n    }\n    if (param_2[2] == -0x208) {\n        uStack272 = 0xffffffff;\n        puStack276 = uStack280;\n        uStack280 = 0x50;\n        puVar5 = 0x420f9f;\n        fcn.0041eb78(param_2 + 4);\n    }\n    else {\n        puVar1 = param_2 + 4;\n        uStack272 = 0x420fb3;\n        uVar2 = uStack280;\n        uVar4 = (**0x4a66d0)();\n        uStack272 = 0x50;\n        uStack280 = 0xffffffff;\n        puVar5 = NULL;\n        puStack276 = puVar1;\n        iVar3 = (**0x481494)(uVar4, 0, uVar2);\n        if ((puVar1 != NULL) && (0x50 < iVar3)) {\n            uStack268 = 0x80004005;\n            puStack276 = 0x420fd6;\n            iVar3 = fcn.00401103();\n        }\n        if ((0 < iVar3) && (puVar1 != NULL)) {\n            *(param_2 + iVar3 * 2 + 0xe) = 0;\n        }\n    }\n    uStack272 = 0x213;\n    puStack276 = NULL;\n    uStack280 = 0;\n    *puVar5 = 0;\n    (**0x4816f4)(*param_2, 0, 0, 0);\n    fcn.00401fb6();\ncode_r0x00421008:\n    *in_FS_OFFSET = puStack276;\n    uStack268 = 0x421023;\n    fcn.004510f7(arg_8h);\n    return;\n}\n",
        "token_count": 894
    },
    "00422109": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422109(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.00403bf2();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00420597();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00426074(arg_ch, uVar1 * 4);\n            arg_ch = arg_ch + uVar1 * 4;\n        }\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "0042226d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0042226d(uint param_1, uint8_t param_2)\n\n{\n    fcn.00401fb6();\n    if ((param_2 & 1) != 0) {\n        fcn.00403ac8(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 70
    },
    "0042237f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042237f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    fcn.00451139(8);\n    iVar2 = *(unaff_EBP + 8) * 0x14 + extraout_ECX[0x1e];\n    if ((*(iVar2 + 0xc) & 1) == 0) {\n        if (*(unaff_EBP + 0xc) == 0) {\n            iVar1 = *(*(iVar2 + 0x10) + -0xc);\n        }\n        else {\n            iVar1 = fcn.00410a50(*(unaff_EBP + 0xc));\n        }\n        if (iVar1 == 0) goto code_r0x00422422;\n    }\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + 0xc) == 0) {\n        fcn.00402193();\n    }\n    else {\n        fcn.004024ff();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0x10) == 0) {\n        *(iVar2 + 0xc) = *(iVar2 + 0xc) | 1;\n    }\n    else {\n        *(iVar2 + 0xc) = *(iVar2 + 0xc) & 0xfffffffe;\n        if ((*(iVar2 + 8) & 0x4000000) == 0) {\n            uVar3 = *(iVar2 + 0x10);\n        }\n        else {\n            uVar3 = 0;\n        }\n        (**(*extraout_ECX + 0x110))(0x401, *(iVar2 + 8) | *(unaff_EBP + 8), uVar3);\n    }\ncode_r0x00422422:\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 484
    },
    "0042246a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid __cdecl fcn.0042246a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    uint *puVar7;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(0x38);\n    if (*(unaff_EBP + 8) != 0) {\n        (**0x48169c)(extraout_ECX[8], unaff_EBP + -0x30);\n        (**0x481688)(unaff_EBP + -0x30, -*(unaff_EBP + -0x30), -*(unaff_EBP + -0x2c));\n        (**(*extraout_ECX + 0x140))(unaff_EBP + -0x30, 1);\n        (**(*extraout_ECX + 0x110))(0x407, 0, unaff_EBP + -0x20);\n        var_30h = extraout_ECX[0x1d];\n        iVar6 = (*(unaff_EBP + -0x28) - *(unaff_EBP + -0x30)) + *(unaff_EBP + -0x18);\n        iVar5 = extraout_ECX[0x1e];\n        *(unaff_EBP + 8) = 0;\n        if (0 < var_30h) {\n            piVar4 = iVar5 + 4;\n            *(unaff_EBP + -0x14) = var_30h;\n            do {\n                if ((piVar4[1] & 0x8000000U) != 0) {\n                    *(unaff_EBP + 8) = *(unaff_EBP + 8) + 1;\n                }\n                iVar5 = *piVar4;\n                piVar4 = piVar4 + 5;\n                iVar6 = iVar6 + ((-6 - iVar5) - *(unaff_EBP + -0x18));\n                piVar1 = unaff_EBP + -0x14;\n                *piVar1 = *piVar1 + -1;\n            } while (*piVar1 != 0);\n        }\n        *(unaff_EBP + -0x44) = vtable.CArray_int__int_const__.0;\n        *(unaff_EBP + -0x40) = 0;\n        *(unaff_EBP + -0x34) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x3c) = 0;\n        *(unaff_EBP + -4) = 0;\n        fcn.00421f9a(var_30h, 0xffffffff);\n        *(unaff_EBP + -0x10) = 0;\n        iVar5 = *(unaff_EBP + -0x20);\n        if (0 < extraout_ECX[0x1d]) {\n            puVar2 = extraout_ECX[0x1e] + 8;\n            *(unaff_EBP + -0x14) = puVar2;\n            while( true ) {\n                iVar5 = iVar5 + 6 + puVar2[-1];\n                if (((*puVar2 & 0x8000000) != 0) && (0 < iVar6)) {\n                    iVar3 = iVar6 / *(unaff_EBP + 8);\n                    iVar5 = iVar5 + iVar3;\n                    *(unaff_EBP + 8) = *(unaff_EBP + 8) + -1;\n                    iVar6 = iVar6 - iVar3;\n                }\n                var_30h = *(unaff_EBP + -0x10);\n                piVar4 = fcn.00421d4f();\n                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 0x14;\n                *piVar4 = iVar5;\n                iVar5 = iVar5 + *(unaff_EBP + -0x18);\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n                if (extraout_ECX[0x1d] <= *(unaff_EBP + -0x10)) break;\n                puVar2 = *(unaff_EBP + -0x14);\n            }\n        }\n        (**(*extraout_ECX + 0x110))(0x404, extraout_ECX[0x1d], *(unaff_EBP + -0x40), var_30h);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004220d8();\n    }\n    iVar5 = 0;\n    if ((*(unaff_EBP + 0xc) != 0) && (0 < extraout_ECX[0x1d])) {\n        puVar7 = extraout_ECX[0x1e] + 0x10;\n        do {\n            if ((*(puVar7 + -1) & 1) != 0) {\n                fcn.0042237f(iVar5, *puVar7, 1);\n            }\n            puVar7 = puVar7 + 5;\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < extraout_ECX[0x1d]);\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 1486
    },
    "00422b93": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00422b93(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    (**0x481348)();\n    iVar3 = *(param_1 + 4);\n    iVar7 = *(param_1 + 8);\n    if ((iVar3 <= iVar7) || ((*(*(param_1 + 0x10) + iVar7 * 8) & 1) != 0)) {\n        iVar7 = 1;\n        if (1 < iVar3) {\n            puVar6 = *(param_1 + 0x10);\n            do {\n                puVar6 = puVar6 + 8;\n                if ((*puVar6 & 1) == 0) break;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar3);\n            if (iVar7 < iVar3) goto code_r0x00422c77;\n        }\n        iVar3 = iVar3 + 0x20;\n        if (*(param_1 + 0x10) == 0) {\n            fcn.00401314(iVar3, 8);\n            iVar4 = (**0x48147c)();\n        }\n        else {\n            (**0x481340)();\n            (**0x481484)();\n            fcn.00401314(iVar3, 8);\n            iVar4 = (**0x481344)();\n        }\n        if (iVar4 == 0) {\n            if (*(param_1 + 0x10) != 0) {\n                (**0x481340)();\n                (**0x481480)();\n            }\n            (**0x481350)();\n            fcn.004515ca(&stack0xffffffd4, 0x496084);\n            pcVar2 = swi(3);\n            iVar3 = (*pcVar2)();\n            return iVar3;\n        }\n        uVar5 = (**0x481480)();\n        fcn.00451550();\n        *(param_1 + 4) = iVar3;\n        *(param_1 + 0x10) = uVar5;\n    }\ncode_r0x00422c77:\n    if (*(param_1 + 0xc) <= iVar7) {\n        *(param_1 + 0xc) = iVar7 + 1;\n    }\n    puVar1 = *(param_1 + 0x10) + iVar7 * 8;\n    *puVar1 = *puVar1 | 1;\n    *(param_1 + 8) = iVar7 + 1;\n    (**0x481350)();\n    return iVar7;\n}\n",
        "token_count": 599
    },
    "004244f6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.004244f6(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    fcn.0042657b(8);\n    if (*0x4a83b0 == 0) {\n        iVar2 = 0;\n        do {\n            uVar1 = iVar2;\n            iVar2 = iVar2 + 1;\n            *(&stack0xffffffe6 + iVar2 * 2) = 0x5555 << (uVar1 & 1);\n        } while (iVar2 < 8);\n        iVar2 = (**0x48106c)(8, 8, 1, 1, &var_14h);\n        if (iVar2 != 0) {\n            *0x4a83b0 = (**0x481068)(iVar2);\n            (**0x481140)(iVar2);\n        }\n    }\n    if (*0x4a83b4 == '\\0') {\n        iVar2 = fcn.004513fe(0x42429a);\n        *0x4a83b4 = '\\x01' - (iVar2 != 0);\n    }\n    fcn.004265e8(8);\n    iVar2 = *0x4a83b0;\n    fcn.00406b5e();\n    fcn.004510f7(iVar2);\n    return;\n}\n",
        "token_count": 335
    },
    "004259ee": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004259ee(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch == 0) || (arg_8h == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        if ((*(in_ECX + 0x18) & 1) == 0) {\n            fcn.00425943(4, *(in_ECX + 0x14));\n        }\n        uVar3 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.00404383(arg_8h, arg_ch, *(in_ECX + 0x28), uVar3);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x20);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x24) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if ((uVar3 != 0) && (var_8h == iVar1)) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    if ((*(in_ECX + 0xc) != 0) || (var_4h = *(in_ECX + 0x20),  *(in_ECX + 0x20) < uVar3)) {\n                        var_4h = uVar3;\n                    }\n                    var_8h = *(in_ECX + 0x30);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x24) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x2c) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                    iVar1 = *(in_ECX + 0x30);\n                }\n                uVar4 = *(in_ECX + 0x2c) - iVar1;\n                *(in_ECX + 0x28) = iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.00404383(arg_8h, uVar3, iVar1, uVar4);\n                *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 935
    },
    "00425b1d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425b1d(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x28);\n    if ((*(param_1 + 0x18) & 1) == 0) {\n        piVar1 = param_1 + 0x30;\n        iVar2 = *piVar1;\n        if (*(param_1 + 8) == 0) {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x38))(iVar2, iVar3 - iVar2);\n            }\n        }\n        else {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x50))(2, iVar3 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x24) + 0x50))(1, *(param_1 + 0x20), piVar1, param_1 + 0x2c);\n        }\n        iVar3 = *piVar1;\n    }\n    else {\n        if (*(param_1 + 0x2c) != iVar3) {\n            iVar3 = iVar3 - *(param_1 + 0x2c);\n            (**(**(param_1 + 0x24) + 0x28))(iVar3, iVar3 >> 0x1f, 1);\n        }\n        iVar3 = *(param_1 + 0x2c);\n    }\n    *(param_1 + 0x28) = iVar3;\n    return;\n}\n",
        "token_count": 377
    },
    "00425b94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425b94(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    int32_t in_stack_ffffffe4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar6 = in_ECX;\n    if ((*(in_ECX + 0x18) & 1) != 0) goto code_r0x00425bae;\n    arg_8h_00 = 4;\n    in_stack_ffffffe4 = *(in_ECX + 0x14);\n    do {\n        fcn.00425943(arg_8h_00, in_stack_ffffffe4);\n        iVar6 = in_ECX;\ncode_r0x00425bae:\n        in_ECX = in_stack_ffffffe4;\n        uVar2 = *(iVar6 + 0x28);\n        piVar1 = iVar6 + 0x2c;\n        var_4h = *piVar1 - uVar2;\n        uVar3 = arg_8h + var_4h;\n        if (*(iVar6 + 8) == 0) {\n            uVar4 = *(iVar6 + 0x30);\n            if (uVar4 < uVar2) {\n                if (0 < var_4h) {\n                    fcn.004259c8(uVar4, *piVar1 - uVar4, uVar2, var_4h);\n                    uVar4 = *(iVar6 + 0x30);\n                    *(iVar6 + 0x28) = uVar4;\n                    *piVar1 = uVar4 + var_4h;\n                }\n                if (*(iVar6 + 0xc) == 0) {\n                    arg_8h = *(iVar6 + 0x20);\n                }\n                arg_8h = arg_8h - var_4h;\n                iVar7 = var_4h + uVar4;\n                do {\n                    iVar5 = (**(**(iVar6 + 0x24) + 0x34))(iVar7, arg_8h);\n                    var_4h = var_4h + iVar5;\n                    arg_8h = arg_8h - iVar5;\n                    iVar7 = iVar7 + iVar5;\n                    if ((iVar5 == 0) || (arg_8h == 0)) break;\n                } while (var_4h < uVar3);\n                *(iVar6 + 0x28) = *(iVar6 + 0x30);\n                *piVar1 = *(iVar6 + 0x30) + var_4h;\n            }\n        }\n        else {\n            if (var_4h != 0) {\n                (**(**(iVar6 + 0x24) + 0x28))(-var_4h, -var_4h >> 0x1f, 1);\n            }\n            (**(**(iVar6 + 0x24) + 0x50))(0, *(iVar6 + 0x20), iVar6 + 0x30, piVar1);\n            *(iVar6 + 0x28) = *(iVar6 + 0x30);\n        }\n        if (uVar3 <= *piVar1 - *(iVar6 + 0x28)) {\n            return;\n        }\n        arg_8h_00 = 3;\n        in_stack_ffffffe4 = in_ECX;\n    } while( true );\n}\n",
        "token_count": 811
    },
    "00425c84": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425c84(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uchar unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 1;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00425b1d();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    return param_1;\n}\n",
        "token_count": 196
    },
    "00425cba": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425cba(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(2, *(param_1 + 0x14));\n    }\n    uVar2 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar2 && uVar2 != *(param_1 + 0x2c)) {\n        fcn.00425b1d();\n    }\n    puVar1 = *(param_1 + 0x28);\n    *puVar1 = unaff_ESI;\n    puVar1[1] = unaff_retaddr;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 232
    },
    "00425cfa": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425cfa(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    ushort unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 2;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00425b1d();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 196
    },
    "00425d34": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425d34(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00425b1d();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 198
    },
    "00425d6d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425d6d(int32_t param_1)\n\n{\n    uchar *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 1U) {\n        fcn.00425b94((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 1);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    return param_1;\n}\n",
        "token_count": 193
    },
    "00425dac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425dac(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.00425b94((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    puVar1 = *(param_1 + 0x28);\n    *unaff_ESI = *puVar1;\n    unaff_ESI[1] = puVar1[1];\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 222
    },
    "00425df4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425df4(int32_t param_1)\n\n{\n    ushort *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 2U) {\n        fcn.00425b94((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 2);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "00425e37": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425e37(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.00425b94((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "00426074": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426074(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        if ((~*(in_ECX + 0x18) & 1) == 0) {\n            fcn.00425943(2, *(in_ECX + 0x14));\n        }\n        uVar1 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        uVar2 = arg_ch;\n        if (uVar1 <= arg_ch) {\n            uVar2 = uVar1;\n        }\n        fcn.00404383(*(in_ECX + 0x28), uVar1, arg_8h, uVar2);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar2;\n        arg_ch = arg_ch - uVar2;\n        if (arg_ch != 0) {\n            fcn.00425b1d();\n            iVar3 = arg_ch - arg_ch % *(in_ECX + 0x20);\n            (**(**(in_ECX + 0x24) + 0x38))(arg_8h + uVar2, iVar3);\n            arg_ch = arg_ch - iVar3;\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x24) + 0x50))(1, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n            }\n            if (arg_ch < *(in_ECX + 0x20)) goto code_r0x00426119;\n            do {\n                fcn.00403bf2();\ncode_r0x00426119:\n            } while (*(in_ECX + 0x28) != *(in_ECX + 0x30));\n            fcn.00404383(*(in_ECX + 0x28), arg_ch, arg_8h + uVar2 + iVar3, arg_ch);\n            *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_ch;\n        }\n    }\n    return;\n}\n",
        "token_count": 555
    },
    "00426371": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00426371(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00402395();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 == NULL) {\n        fcn.00403bf2();\n    }\n    uVar2 = (**(*piVar1 + 0x18))(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 1;\n    fcn.004085ac(uVar2);\n    *(unaff_EBP + -4) = 0;\n    fcn.00401fb6();\n    uVar2 = *(unaff_EBP + 0xc);\n    extraout_ECX[4] = 0xffffffff;\n    extraout_ECX[6] = uVar2;\n    extraout_ECX[1] = 1;\n    extraout_ECX[7] = 1;\n    extraout_ECX[9] = piVar1;\n    extraout_ECX[0x10] = (-((~uVar2 & 1) != 0) & 0xffffffd0) + 0x40;\n    uVar2 = *(unaff_EBP + 0x14);\n    extraout_ECX[0xf] = 0;\n    extraout_ECX[0xe] = 0;\n    *extraout_ECX = 0;\n    extraout_ECX[0x11] = 0x89;\n    extraout_ECX[0xc] = uVar2;\n    extraout_ECX[2] = 0;\n    uVar3 = (**(*piVar1 + 0x50))(3, 0, 0, 0);\n    iVar5 = *(unaff_EBP + 0x10);\n    extraout_ECX[3] = uVar3 & 2;\n    if (iVar5 < 0x80) {\n        extraout_ECX[8] = 0x80;\n        extraout_ECX[0xc] = 0;\n    }\n    else {\n        extraout_ECX[8] = iVar5;\n    }\n    iVar5 = extraout_ECX[8];\n    if (extraout_ECX[0xc] == 0) {\n        uVar3 = (**(*extraout_ECX[9] + 0x50))(3, 0, 0, 0);\n        extraout_ECX[2] = uVar3 & 1;\n        if ((uVar3 & 1) == 0) {\n            uVar2 = fcn.00403a9d(extraout_ECX[8]);\n            extraout_ECX[0xc] = uVar2;\n            extraout_ECX[7] = 0;\n        }\n        else {\n            iVar5 = 0;\n        }\n    }\n    iVar5 = extraout_ECX[0xc] + iVar5;\n    extraout_ECX[0xb] = iVar5;\n    iVar4 = extraout_ECX[0xc];\n    if ((*(extraout_ECX + 6) & 1) != 0) {\n        iVar4 = iVar5;\n    }\n    extraout_ECX[10] = iVar4;\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 863
    },
    "00427b35": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427b35(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(2, *(param_1 + 0x14));\n    }\n    uVar2 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar2 && uVar2 != *(param_1 + 0x2c)) {\n        fcn.00425b1d();\n    }\n    puVar1 = *(param_1 + 0x28);\n    *puVar1 = unaff_ESI;\n    puVar1[1] = unaff_retaddr;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 233
    },
    "00427b75": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427b75(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00425b1d();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 198
    },
    "00427bae": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427bae(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00425b1d();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 198
    },
    "00427be7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __fastcall fcn.00427be7(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00425b1d();\n    }\n    **(param_1 + 0x28) = CONCAT44(unaff_retaddr, unaff_ESI);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 227
    },
    "00427c20": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427c20(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.00425b94((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    puVar1 = *(param_1 + 0x28);\n    *unaff_ESI = *puVar1;\n    unaff_ESI[1] = puVar1[1];\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 223
    },
    "00427c68": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427c68(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.00425b94((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "00427caa": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427caa(int32_t param_1)\n\n{\n    ulong *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.00425b94((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 191
    },
    "00427cec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427cec(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425943(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.00425b94((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 191
    },
    "00427f05": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00427fc7)\n\nvoid __cdecl fcn.00427f05(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    bool bVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar3 = in_ECX[2];\n    if (uVar3 != 0) {\n        *arg_8h = *in_ECX;\n        arg_8h[1] = in_ECX[1];\n        arg_8h[2] = uVar3;\n        return;\n    }\n    uVar3 = in_ECX[1];\n    uVar5 = *in_ECX;\n    if (((uVar5 | uVar3) == 0) || (arg_ch == 0)) {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[2] = 0;\n        return;\n    }\n    uVar1 = arg_ch >> 0x18 ^ uVar3 >> 0x18;\n    if ((uVar3 < 1) && (uVar3 < 0)) {\n        bVar6 = uVar5 != 0;\n        uVar5 = -uVar5;\n        uVar3 = -(uVar3 + bVar6);\n    }\n    uVar4 = fcn.00451c13(arg_ch);\n    uVar7 = fcn.004523c0(uVar3, 0, uVar4, 0);\n    if ((uVar7 >> 0x20 == 0) && (uVar7 < 0x80000001)) {\n        uVar8 = fcn.004523c0(uVar5, 0, uVar4, 0);\n        iVar9 = fcn.004523c0(uVar7, 0, 0, 1);\n        uVar2 = uVar8 + iVar9;\n        if (uVar8 <= uVar2) {\n            if (uVar1 < '\\0') {\n                uVar2 = CONCAT44(-((uVar2 >> 0x20) + (uVar2 != 0)), -uVar2);\n            }\n            if (-1 < (uVar2 >> 0x20 ^ arg_ch ^ in_ECX[1])) {\n                uVar3 = 0;\n                goto code_r0x00428003;\n            }\n        }\n    }\n    uVar3 = 1;\n    if (uVar1 < '\\0') {\n        uVar2 = 0x8000000000000000;\n    }\n    else {\n        uVar2 = 0x7fffffffffffffff;\n    }\ncode_r0x00428003:\n    *arg_8h = uVar2;\n    arg_8h[1] = uVar2 >> 0x20;\n    arg_8h[2] = uVar3;\n    return;\n}\n",
        "token_count": 750
    },
    "004288cb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004288cb(uint noname_0, int32_t noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, \n            uint noname_6, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if ((noname_2 != 0) && (noname_1 == 0)) {\n        fcn.00403bf2();\n    }\n    if ((~*(var_8h + 0x18) & 1) == 0) {\n        for (; noname_2 != 0; noname_2 = noname_2 + -1) {\n            fcn.00428663(var_8h, noname_1);\n            noname_1 = noname_1 + 0x10;\n        }\n    }\n    else {\n        for (; noname_2 != 0; noname_2 = noname_2 + -1) {\n            fcn.0042743e();\n            fcn.00428463(var_8h, noname_1, uStack32, uStack28, uStack24);\n            noname_1 = noname_1 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 312
    },
    "00429d39": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00429d39(uint *param_1, uint8_t param_2)\n\n{\n    uint *puVar1;\n    \n    if ((param_2 & 2) == 0) {\n        fcn.00401fb6();\n        puVar1 = param_1;\n        if ((param_2 & 1) != 0) {\n            fcn.00403ac8(param_1);\n        }\n    }\n    else {\n        puVar1 = param_1 + -1;\n        fcn.00455d8f(param_1, 4, *puVar1, 0x4023a9);\n        if ((param_2 & 1) != 0) {\n            fcn.00403ac8(puVar1);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 182
    },
    "004341d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004341d4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (**0x481680)(*(in_ECX + 0x20), 0x46, 0, arg_8h);\n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        (**0x48169c)(*(in_ECX + 0x20), &var_14h);\n        var_4h = *(arg_8h + 0x10);\n        var_ch = var_ch - var_14h;\n        var_8h = var_8h - var_10h;\n        iVar1 = *(arg_8h + 0x14);\n        if ((var_4h != var_ch) && ((*(in_ECX + 0x80) & 0x400) != 0)) {\n            (**0x4815c0)(&var_14h, var_4h - *0x4a8368, 0, var_4h, iVar1);\n            (**0x4815d8)(*(in_ECX + 0x20), &var_14h, 1);\n            (**0x4815c0)(&var_14h, var_ch - *0x4a8368, 0, var_ch, iVar1);\n            (**0x4815d8)(*(in_ECX + 0x20), &var_14h, 1);\n        }\n        pcVar2 = *0x4815c0;\n        if ((iVar1 != var_8h) && ((*(in_ECX + 0x80) & 0x800) != 0)) {\n            (**0x4815c0)(&var_14h, 0, iVar1 - *0x4a836c, var_4h, iVar1);\n            (**0x4815d8)(*(in_ECX + 0x20), &var_14h, 1);\n            (*pcVar2)(&var_14h, 0, var_8h - *0x4a836c, var_4h, var_8h);\n            (**0x4815d8)(*(in_ECX + 0x20), &var_14h, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 575
    },
    "00434500": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434500(uint noname_0, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    uVar1 = (**(*in_ECX + 0x158))(arg_ch);\n    if (((uVar1 & 0x10000000) != 0) && ((uVar1 & 0xf000) != 0)) {\n        (**0x48166c)(&var_1ch, arg_ch + 1);\n        iVar4 = var_14h - var_1ch;\n        iVar3 = var_10h - var_18h;\n        bVar5 = arg_ch[7] != 0;\n        if (((var_4h[0x20] & 4U) == 0) || ((var_4h[0x20] & 1U) == 0)) {\n            if ((uVar1 & 0xa000) == 0) {\n                uVar2 = bVar5 | 0x10;\n            }\n            else {\n                uVar2 = bVar5 | 10;\n            }\n        }\n        else {\n            uVar2 = bVar5 | 6;\n        }\n        (**(*var_4h + 0x138))(&var_ch, 0xffffffff, uVar2);\n        if (iVar4 <= var_ch) {\n            var_ch = iVar4;\n        }\n        if (iVar3 <= var_8h) {\n            var_8h = iVar3;\n        }\n        if ((uVar1 & 0xa000) == 0) {\n            if ((uVar1 & 0x5000) != 0) {\n                arg_ch[5] = arg_ch[5] + var_ch;\n                iVar3 = arg_ch[6];\n                if (arg_ch[6] <= var_8h) {\n                    iVar3 = var_8h;\n                }\n                arg_ch[6] = iVar3;\n                if ((uVar1 & 0x1000) == 0) {\n                    if ((uVar1 & 0x4000) != 0) {\n                        var_1ch = var_14h - var_ch;\n                        arg_ch[3] = arg_ch[3] - var_ch;\n                    }\n                }\n                else {\n                    arg_ch[1] = arg_ch[1] + var_ch;\n                }\n            }\n        }\n        else {\n            arg_ch[6] = arg_ch[6] + var_8h;\n            iVar3 = arg_ch[5];\n            if (arg_ch[5] <= var_ch) {\n                iVar3 = var_ch;\n            }\n            arg_ch[5] = iVar3;\n            if ((uVar1 & 0x2000) == 0) {\n                if (uVar1 < 0) {\n                    var_18h = var_10h - var_8h;\n                    arg_ch[4] = arg_ch[4] - var_8h;\n                }\n            }\n            else {\n                arg_ch[2] = arg_ch[2] + var_8h;\n            }\n        }\n        var_14h = var_1ch + var_ch;\n        var_10h = var_18h + var_8h;\n        if (*arg_ch != 0) {\n            fcn.00411dc9(arg_ch, var_4h[8], &var_1ch);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 854
    },
    "0043944f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043944f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_30h;\n    \n    iVar1 = fcn.00413cf0();\n    if (iVar1 != 0) {\n        var_50h = 0x50;\n        var_4ch = 0x11;\n        (**(*in_ECX + 0x110))(0x41d, arg_8h, &var_50h);\n        uVar2 = fcn.00413dbb(var_30h);\n        piVar3 = fcn.00422905(0x485650, uVar2);\n        if (piVar3 == NULL) {\n            uVar4 = (**0x481748)(var_30h, 0xfffffff0);\n            uVar4 = uVar4 >> 0x1c & 1;\n        }\n        else {\n            uVar4 = (**(*piVar3 + 0x154))();\n        }\n        uVar5 = ~(var_48h >> 3) & 1;\n        if (uVar4 != uVar5) {\n            (**0x481700)(var_30h, -(uVar5 != 0) & 5);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 346
    },
    "0043faeb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043faeb(int32_t param_1, int32_t **param_2)\n\n{\n    if (((~param_2[6] & 1) == 0) && (*(param_1 + 0x20) == 0)) {\n        (**(**param_2 + 0xbc))(param_1);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00443c6e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00443c6e(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint in_stack_fffffff4;\n    \n    if (param_2 != 0) goto code_r0x00443c84;\n    in_stack_fffffff4 = *(param_1 + 0x14);\n    arg_8h = 6;\n    while( true ) {\n        fcn.00425943(arg_8h, in_stack_fffffff4);\ncode_r0x00443c84:\n        if ((~*(param_1 + 0x18) & 1) != 0) break;\n        arg_8h = 1;\n    }\n    if (*(param_2 + 8) == 0xffff) {\n        fcn.00403bd8();\n    }\n    fcn.00443b75(0);\n    puVar2 = fcn.00423b57(param_2);\n    uVar1 = *puVar2;\n    if (uVar1 == 0) {\n        fcn.00425cfa(0xffff);\n        fcn.00426278(param_1);\n        fcn.00443b61();\n        puVar3 = fcn.00423b57(param_2);\n        *puVar3 = *(param_1 + 0x34);\n        *(param_1 + 0x34) = *(param_1 + 0x34) + 1;\n    }\n    else if (uVar1 < 0x7fff) {\n        fcn.00425cfa(uVar1 | 0x8000);\n    }\n    else {\n        fcn.00425cfa(0x7fff);\n        fcn.00425d34(uVar1 | 0x80000000);\n    }\n    return;\n}\n",
        "token_count": 426
    },
    "00443d17": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00443d17(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint uVar6;\n    uint var_4h;\n    \n    var_4h = 0x443d23;\n    fcn.00451106(0x10);\n    if ((*(arg_8h_00 + 0x18) & 1) != 0) goto code_r0x00443d35;\n    var_4h = *(arg_8h_00 + 0x14);\n    uVar6 = 1;\ncode_r0x00443d30:\n    do {\n        while( true ) {\n            fcn.00425943(uVar6, var_4h);\ncode_r0x00443d35:\n            if ((*(unaff_EBP + 8) != 0) && (*(*(unaff_EBP + 8) + 8) == 0xffff)) {\n                fcn.00403bd8();\n            }\n            fcn.00443b75(0);\n            fcn.00425df4(unaff_EBP + -0x10);\n            if (*(unaff_EBP + -0x10) == 0x7fff) {\n                fcn.00425e37(unaff_EBP + -0x18);\n                uVar4 = *(unaff_EBP + -0x18);\n            }\n            else {\n                uVar4 = (*(unaff_EBP + -0x10) & 0xffff8000) << 0x10 | *(unaff_EBP + -0x10) & 0xffff7fff;\n                *(unaff_EBP + -0x18) = uVar4;\n            }\n            if (uVar4 < 0) break;\n            if (*(unaff_EBP + 0x10) != NULL) {\n                **(unaff_EBP + 0x10) = uVar4;\n                goto code_r0x00443ece;\n            }\ncode_r0x00443d9a:\n            uVar6 = 5;\n        }\n        if (*(unaff_EBP + -0x10) != -1) {\n            uVar4 = uVar4 & 0x7fffffff;\n            if ((uVar4 != 0) && (uVar4 <= *(*(arg_8h_00 + 0x38) + 8) - 1U)) {\n                iVar2 = fcn.00438073(uVar4);\n                iVar1 = *(arg_8h_00 + 0x3c);\n                *(unaff_EBP + -0x14) = 0;\n                if ((iVar1 == 0) || (iVar1 = fcn.004239e5(iVar2, unaff_EBP + -0x1c),  iVar1 == 0)) {\n                    uVar5 = *(iVar2 + 8) & 0x7fffffff;\n                }\n                else {\n                    uVar5 = *(unaff_EBP + -0x1c);\n                }\n                uVar4 = *(unaff_EBP + -0x18);\n                *(unaff_EBP + -0x14) = uVar5;\n                goto code_r0x00443e9a;\n            }\n            goto code_r0x00443d9a;\n        }\n        iVar1 = fcn.00425ff1(arg_8h_00, unaff_EBP + -0x14);\n        if (iVar1 != 0) {\n            if ((*(iVar1 + 8) & 0x7fffffff) != *(unaff_EBP + -0x14)) {\n                if (-1 < *(iVar1 + 8)) {\n                    uVar6 = 7;\n                    goto code_r0x00443d30;\n                }\n                if (*(arg_8h_00 + 0x3c) == 0) {\n                    iVar2 = fcn.00403a9d(0x1c);\n                    *(unaff_EBP + -0x1c) = iVar2;\n                    *(unaff_EBP + -4) = 0;\n                    if (iVar2 == 0) {\n                        uVar6 = 0;\n                    }\n                    else {\n                        uVar6 = fcn.00423ad0(10);\n                    }\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    *(arg_8h_00 + 0x3c) = uVar6;\n                }\n                uVar6 = *(unaff_EBP + -0x14);\n                puVar3 = fcn.00423b57(iVar1);\n                *puVar3 = uVar6;\n                uVar4 = *(unaff_EBP + -0x18);\n            }\n            fcn.00443b61();\n            iVar2 = *(arg_8h_00 + 0x34);\n            *(arg_8h_00 + 0x34) = iVar2 + 1;\n            fcn.00444cd8(iVar2, iVar1, 1);\n            uVar5 = *(unaff_EBP + -0x14);\ncode_r0x00443e9a:\n            if (*(unaff_EBP + 8) == 0) goto code_r0x00443eb5;\n            iVar1 = fcn.004228b8();\n            if (iVar1 != 0) {\n                uVar5 = *(unaff_EBP + -0x14);\ncode_r0x00443eb5:\n                if (*(unaff_EBP + 0xc) == NULL) {\n                    *(arg_8h_00 + 0x10) = uVar5;\n                }\n                else {\n                    **(unaff_EBP + 0xc) = uVar5;\n                }\n                if (*(unaff_EBP + 0x10) != NULL) {\n                    **(unaff_EBP + 0x10) = uVar4;\n                }\ncode_r0x00443ece:\n                fcn.004511de();\n                return;\n            }\n        }\n        uVar6 = 6;\n    } while( true );\n}\n",
        "token_count": 1493
    },
    "00443ef4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443ef4(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t *in_stack_fffffff8;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        in_stack_fffffff8 = *(param_1 + 0x14);\n        fcn.00425943(2, in_stack_fffffff8);\n    }\n    fcn.00443b75(0);\n    if (in_stack_fffffff8 == NULL) {\n        fcn.00425cfa(0);\n    }\n    else {\n        puVar2 = fcn.00423b57(in_stack_fffffff8);\n        uVar1 = *puVar2;\n        if (uVar1 == 0) {\n            uVar3 = (***in_stack_fffffff8)();\n            fcn.00443c6e(uVar3);\n            fcn.00443b61();\n            puVar4 = fcn.00423b57(in_stack_fffffff8);\n            *puVar4 = *(param_1 + 0x34);\n            *(param_1 + 0x34) = *(param_1 + 0x34) + 1;\n            (**(*in_stack_fffffff8 + 8))(param_1);\n        }\n        else if (uVar1 < 0x7fff) {\n            fcn.00425cfa(uVar1);\n        }\n        else {\n            fcn.00425cfa(0x7fff);\n            fcn.00425d34(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 376
    },
    "00443f8b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00443f8b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *arg_ch;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uVar3;\n    uint var_4h;\n    \n    var_4h = 0x443f97;\n    fcn.00451139(0x14);\n    if ((*(extraout_ECX + 0x18) & 1) != 0) goto code_r0x00443fa9;\n    var_4h = *(extraout_ECX + 0x14);\n    uVar3 = 4;\n    while( true ) {\n        fcn.00425943(uVar3, var_4h);\ncode_r0x00443fa9:\n        iVar1 = fcn.00443d17(*(unaff_EBP + 8), unaff_EBP + -0x1c, unaff_EBP + -0x14);\n        *(unaff_EBP + -0x18) = 0;\n        if (iVar1 != 0) break;\n        uVar2 = *(*(extraout_ECX + 0x38) + 8) - 1;\n        if (*(unaff_EBP + -0x14) < uVar2 || *(unaff_EBP + -0x14) == uVar2) {\n            iVar1 = fcn.00438073(*(unaff_EBP + -0x14));\n            if ((iVar1 == 0) || (*(unaff_EBP + 8) == 0)) goto code_r0x00444045;\n            iVar1 = fcn.004228ed(*(unaff_EBP + 8));\n            if (iVar1 != 0) goto code_r0x00444045;\n            uVar3 = 6;\n        }\n        else {\n            uVar3 = 5;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    arg_ch = fcn.0042285b();\n    *(unaff_EBP + -0x18) = arg_ch;\n    if (arg_ch == NULL) {\n        fcn.00403bbe();\n    }\n    fcn.00443b61();\n    iVar1 = *(extraout_ECX + 0x34);\n    *(extraout_ECX + 0x34) = iVar1 + 1;\n    fcn.00444cd8(iVar1, arg_ch, 1);\n    uVar3 = *(extraout_ECX + 0x10);\n    *(extraout_ECX + 0x10) = *(unaff_EBP + -0x1c);\n    (**(*arg_ch + 8))(extraout_ECX);\n    *(extraout_ECX + 0x10) = uVar3;\ncode_r0x00444045:\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 729
    },
    "004492be": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004492be(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t unaff_retaddr;\n    \n    if ((((param_2 >> 0x1f & 1U) == 0) || ((param_2 & 0x1fff0000) != 0x30000)) ||\n       (uVar2 = param_2 & 0xffff,  0xff < uVar2)) {\n        if ((param_2 == 0x80030100) || (((-0x7ffcff00 < param_2 && (-0x7ffcfefb < param_2)) && (param_2 == 0x80030106)))\n           ) {\n            uVar1 = 0xb;\n        }\n        else {\n            uVar1 = 1;\n        }\n    }\n    else {\n        uVar1 = fcn.0040a485(uVar2);\n        param_2 = uVar2;\n    }\n    *(unaff_retaddr + 8) = uVar1;\n    *(unaff_retaddr + 0xc) = param_2;\n    return;\n}\n",
        "token_count": 260
    },
    "0044d1cb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0044d1cb(uint *param_1, uint8_t param_2)\n\n{\n    if (param_1[2] != 0) {\n        fcn.00403ac8(*param_1);\n    }\n    if ((param_2 & 1) != 0) {\n        fcn.00403ac8(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 93
    },
    "0044d424": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d424(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.00403bf2();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0xaaaaaaa;\n            if (arg_10h < 0xaaaaaaa) {\n                uVar1 = arg_10h;\n            }\n            fcn.00420597();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0xaaaaaaa;\n            if (arg_10h < 0xaaaaaaa) {\n                uVar1 = arg_10h;\n            }\n            fcn.00426074(arg_ch, uVar1 * 0xc);\n            arg_ch = arg_ch + uVar1 * 0xc;\n        }\n    }\n    return;\n}\n",
        "token_count": 305
    },
    "0044ddd8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0044ddd8(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    bool bVar5;\n    uint var_4h;\n    \n    pcVar2 = *0x48102c;\n    uVar1 = arg_10h & 1;\n    if ((uVar1 == 0) ||\n       ((iVar3 = (**0x48102c)(arg_8h, \"Insertable\", 1, 0x482460, 0),  iVar3 == 0 &&\n        (iVar3 = (*pcVar2)(arg_ch, \"Insertable\", 1, 0x482460, 0),  iVar3 == 0)))) {\n        pcVar4 = NULL;\n        if ((arg_10h & 2) != 0) {\n            pcVar4 = \"Apartment\";\n        }\n        if ((arg_10h & 4) != 0) {\n            pcVar4 = \"Free\";\n        }\n        if ((arg_10h & 6) == 6) {\n            pcVar4 = \"Both\";\n        }\n        if (pcVar4 != NULL) {\n            iVar3 = (**0x481018)(arg_ch, \"InprocServer32\", 0, 0x20006, &arg_10h);\n            bVar5 = iVar3 == 0;\n            if (bVar5) {\n                iVar3 = (**0x48145c)(pcVar4);\n                iVar3 = (**0x481004)(arg_10h, \"ThreadingModel\", 0, 1, pcVar4, iVar3 + 1);\n                bVar5 = iVar3 == 0;\n                (**0x481030)(arg_10h);\n            }\n            else {\n                iVar3 = fcn.00419c68();\n                if (*(iVar3 + 0x14) == '\\0') {\n                    bVar5 = true;\n                }\n            }\n            if (bVar5 == false) goto code_r0x0044de1a;\n        }\n        bVar5 = true;\n    }\n    else {\n        bVar5 = false;\ncode_r0x0044de1a:\n        pcVar2 = *0x481000;\n        if (uVar1 != 0) {\n            (**0x481000)(arg_ch, \"Insertable\");\n            (*pcVar2)(arg_8h, \"Insertable\");\n        }\n    }\n    return bVar5;\n}\n",
        "token_count": 566
    },
    "0046a36f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046a36f(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = fcn.0045a1ac();\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    if (*0x4a90c4 == 0) {\n        iVar1 = (**0x4813fc)(\"USER32.DLL\");\n        pcVar4 = *0x481424;\n        if ((iVar1 == 0) || (iVar2 = (**0x481424)(iVar1, 0x48d418),  iVar2 == 0)) {\n            return 0;\n        }\n        *0x4a90c4 = fcn.0045a149(iVar2);\n        uVar3 = (*pcVar4)(iVar1, 0x48d408);\n        *0x4a90c8 = fcn.0045a149(uVar3);\n        uVar3 = (*pcVar4)(iVar1, 0x48d3f4);\n        *0x4a90cc = fcn.0045a149(uVar3);\n        iVar2 = fcn.00455412(&var_8h);\n        if (iVar2 != 0) {\n            fcn.00458a55(0, 0, 0, 0, 0);\n        }\n        if (var_8h == 2) {\n            uVar3 = (*pcVar4)(iVar1, \"GetUserObjectInformationA\");\n            *0x4a90d4 = fcn.0045a149(uVar3);\n            if (*0x4a90d4 != 0) {\n                uVar3 = (*pcVar4)(iVar1, \"GetProcessWindowStation\");\n                *0x4a90d0 = fcn.0045a149(uVar3);\n            }\n        }\n    }\n    iVar1 = var_10h;\n    if ((*0x4a90d0 == var_10h) || (*0x4a90d4 == var_10h)) {\ncode_r0x0046a4bd:\n        if (*0x4a90c8 != iVar1) {\n            pcVar4 = fcn.0045a1b5(*0x4a90c8);\n            var_4h = (*pcVar4)();\n            if ((var_4h != 0) && (*0x4a90cc != iVar1)) {\n                pcVar4 = fcn.0045a1b5(*0x4a90cc, var_4h);\n                var_4h = (*pcVar4)();\n            }\n        }\n    }\n    else {\n        pcVar4 = fcn.0045a1b5(*0x4a90d0);\n        iVar2 = (*pcVar4)();\n        if (iVar2 != 0) {\n            pcVar4 = fcn.0045a1b5(*0x4a90d4, iVar2, 1, &var_20h, 0xc, &var_14h);\n            iVar2 = (*pcVar4)();\n            if ((iVar2 != 0) && ((var_18h & 1) != 0)) goto code_r0x0046a4bd;\n        }\n        iVar1 = fcn.004554c1(&var_ch);\n        if (iVar1 != 0) {\n            fcn.00458a55(0, 0, 0, 0, 0);\n        }\n        if (var_ch < 4) {\n            arg_10h = arg_10h | 0x40000;\n        }\n        else {\n            arg_10h = arg_10h | 0x200000;\n        }\n    }\n    pcVar4 = fcn.0045a1b5(*0x4a90c4, var_4h, arg_8h, arg_ch, arg_10h);\n    uVar3 = (*pcVar4)();\n    return uVar3;\n}\n",
        "token_count": 984
    },
    "0046b11d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046b11d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    fcn.00451c1e(arg_10h);\n    var_14h = fcn.0047392d(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0047280e(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0046b174:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0046b1b4;\n        }\n        if (iVar1 != 2) {\ncode_r0x0046b1a6:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0046b1b4;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0046b1a6;\n        goto code_r0x0046b174;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0046b1b4:\n    fcn.004510f7(unaff_EBX);\n    return;\n}\n",
        "token_count": 516
    },
    "0046b290": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046b290(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    fcn.00451c1e(arg_10h);\n    var_14h = fcn.0047392d(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00472d50(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0046b2e7:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0046b327;\n        }\n        if (iVar1 != 2) {\ncode_r0x0046b319:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0046b327;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0046b319;\n        goto code_r0x0046b2e7;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0046b327:\n    fcn.004510f7(unaff_EBX);\n    return;\n}\n",
        "token_count": 509
    },
    "0046be64": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0046be64(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045517c(0x49f570, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00451b58();\n        *puVar2 = 0;\n        puVar2 = fcn.00451b45();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4aa1d0)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4aa1e0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x28;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00475b49(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00451b45();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00451b58();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0046b89e(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0046bf36(0x49f570);\n                goto code_r0x0046bf30;\n            }\n        }\n        puVar2 = fcn.00451b58();\n        *puVar2 = 0;\n        puVar2 = fcn.00451b45();\n        *puVar2 = 9;\n        fcn.00458b89(0, 0, 0, 0, 0);\n    }\ncode_r0x0046bf30:\n    fcn.004551c1();\n    return;\n}\n",
        "token_count": 637
    },
    "00477670": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00477670(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045517c(0x49f780, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00451b58();\n        *puVar2 = 0;\n        puVar2 = fcn.00451b45();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4aa1d0)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4aa1e0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x28;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00475b49(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00451b45();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00451b58();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.004770ce(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00477742(0x49f780);\n                goto code_r0x0047773c;\n            }\n        }\n        puVar2 = fcn.00451b58();\n        *puVar2 = 0;\n        puVar2 = fcn.00451b45();\n        *puVar2 = 9;\n        fcn.00458b89(0, 0, 0, 0, 0);\n    }\ncode_r0x0047773c:\n    fcn.004551c1();\n    return;\n}\n",
        "token_count": 633
    },
    "004011d7": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004011d7(int32_t *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar3;\n    uint32_t uVar2;\n    \n    if (*param_1 == 0x28) {\n        if (param_1[8] != 0) {\n            return param_1[8];\n        }\n        uVar1 = *(param_1 + 0xe);\n    }\n    else {\n        uVar1 = *(param_1 + 10);\n    }\n    uVar2 = uVar1;\n    if (uVar2 == 1) {\n        iVar3 = 2;\n    }\n    else if (uVar2 == 4) {\n        iVar3 = 0x10;\n    }\n    else {\n        uVar1 = uVar2 - 8 >> 0x10;\n        if (uVar2 - 8 == 0) {\n            iVar3 = CONCAT22(uVar1, 0x100);\n        }\n        else {\n            iVar3 = uVar1 << 0x10;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 244
    },
    "00404c31": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404c31(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_4h;\n    \n    fcn.0045116f(0x5c);\n    piVar1 = *(unaff_EBP + 0xc);\n    piVar2 = *(unaff_EBP + 0x10);\n    if (*piVar1 == 0) {\n        iVar4 = *piVar2;\n        if (iVar4 == 1) {\ncode_r0x00404c7b:\n            *piVar1 = iVar4;\n        }\n        else {\n            if (iVar4 == 2) {\n                *piVar1 = 2;\n                iVar4 = piVar2[1];\n                if (iVar4 == 0) {\n                    iVar4 = fcn.00403bf2();\n                }\n                iVar4 = (**0x481470)(iVar4);\n                *(unaff_EBP + -0x60) = iVar4;\n                iVar4 = fcn.0040432c(iVar4 + 1, 2);\n                piVar1[1] = iVar4;\n                if (iVar4 != 0) {\n                    iVar5 = *(unaff_EBP + -0x60) * 2 + 2;\n                    fcn.00404383(iVar4, iVar5, piVar2[1], iVar5);\n                }\n                goto code_r0x00404eaa;\n            }\n            if (iVar4 == 4) {\n                piVar2 = piVar2[1];\n                piVar1[1] = piVar2;\n                (**(*piVar2 + 4))(piVar2);\n                *piVar1 = 4;\n                goto code_r0x00404eaa;\n            }\n            if (iVar4 == 8) {\n                piVar2 = piVar2[1];\n                piVar1[1] = piVar2;\n                (**(*piVar2 + 4))(piVar2);\n                *piVar1 = 8;\n                goto code_r0x00404eaa;\n            }\n            if (iVar4 != 0x10) {\n                if (iVar4 == 0x20) {\n                    iVar4 = fcn.0040450d(0, piVar2[1]);\n                    *(unaff_EBP + -0x5c) = iVar4;\n                    if (iVar4 != 0) {\n                        iVar4 = (**0x481480)(iVar4);\n                        iVar5 = (**0x4811e4)(*(iVar4 + 0xc), 0);\n                        *(iVar4 + 0xc) = iVar5;\n                        if (iVar5 == 0) {\n                            (**0x481484)(*(unaff_EBP + -0x5c));\n                            (**0x481474)(*(unaff_EBP + -0x5c));\n                        }\n                        else {\n                            iVar4 = *(unaff_EBP + -0x5c);\n                            (**0x481484)(iVar4);\n                            piVar1[1] = iVar4;\n                            *piVar1 = 0x20;\n                        }\n                    }\n                    goto code_r0x00404eaa;\n                }\n                if (iVar4 != 0x40) goto code_r0x00404eaa;\n                goto code_r0x00404c7b;\n            }\n            *piVar1 = 0x10;\n        }\n        piVar1[1] = 0;\n    }\n    iVar4 = *piVar2;\n    if (iVar4 == 1) {\n        iVar4 = fcn.0040450d(piVar1[1], piVar2[1]);\n        if (iVar4 != 0) {\n            piVar1[1] = iVar4;\n        }\n    }\n    else if (iVar4 == 2) {\n        fcn.00404bdb(piVar1[1]);\n        iVar4 = piVar1[1];\n        *(unaff_EBP + -4) = 0;\n        fcn.00404bdb(iVar4);\n        (**0x481428)(-(piVar2[1] != 0) & *(unaff_EBP + -0x60), -(piVar1[1] != 0) & *(unaff_EBP + -0x5c), 0);\n        fcn.00401fb6();\n        fcn.00401fb6();\n    }\n    else if (iVar4 == 4) {\n        iVar4 = (**(*piVar2[1] + 0x30))(piVar2[1], unaff_EBP + -0x58, 1);\n        if (iVar4 == 0) {\n            piVar3 = piVar1[1];\n            iVar4 = *piVar3;\n            *(unaff_EBP + -100) = 0;\n            (**(iVar4 + 0x14))(piVar3, 0, 0, 0, 0);\n            (**(*piVar2[1] + 0x14))(piVar2[1], 0, 0, 0, 0);\n            iVar4 = (**(*piVar2[1] + 0x1c))(piVar2[1], piVar1[1], *(unaff_EBP + -0x50), *(unaff_EBP + -0x4c), 0, 0);\n            if (iVar4 == 0) {\n                (**(*piVar1[1] + 0x14))(piVar1[1], 0, 0, 0, 0);\n                (**(*piVar2[1] + 0x14))(piVar2[1], 0, 0, 0, 0);\n            }\n        }\n    }\n    else if (iVar4 == 8) {\n        (**(*piVar2[1] + 0x1c))(piVar2[1], 0, 0, 0, piVar1[1]);\n    }\n    else if (((iVar4 == 0x10) || (iVar4 == 0x40)) && (piVar1[1] == 0)) {\n        iVar4 = (**0x481960)(piVar2[1], *(unaff_EBP + 8), 0);\n        piVar1[1] = iVar4;\n    }\ncode_r0x00404eaa:\n    fcn.004511f2();\n    return;\n}\n",
        "token_count": 1509
    },
    "00408726": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00408726(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(8);\n    iVar2 = (**(*extraout_ECX + 0x58))();\n    if (iVar2 == 0) goto code_r0x00408822;\n    uVar3 = fcn.00409b56();\n    fcn.0040231f(uVar3);\n    *(unaff_EBP + -4) = 0;\n    piVar1 = extraout_ECX + 9;\n    if (*(*piVar1 + -0xc) == 0) {\n        fcn.004085ac(extraout_ECX + 8);\n        iVar2 = *(unaff_EBP + -0x10);\n        if (*(iVar2 + -0xc) == 0) {\n            fcn.004024df(0xf003);\n            goto code_r0x004087ae;\n        }\n    }\n    else {\n        fcn.004085ac(piVar1);\n        uVar3 = fcn.004023b3(0x104);\n        fcn.0040ac8c(*piVar1, uVar3, 0x104);\n        fcn.004081bb(0xffffffff);\ncode_r0x004087ae:\n        iVar2 = *(unaff_EBP + -0x10);\n    }\n    uVar3 = fcn.00409b56();\n    fcn.0040231f(uVar3);\n    *(unaff_EBP + -4) = 1;\n    fcn.004257cc(unaff_EBP + -0x14, 0xf103, iVar2);\n    iVar2 = fcn.0040de17(*(unaff_EBP + -0x14), 3, 0xf103);\n    if ((iVar2 == 2) || ((iVar2 == 6 && (iVar2 = (**(*extraout_ECX + 0x9c))(),  iVar2 == 0)))) {\n        fcn.00401fb6();\n        fcn.00401fb6();\n    }\n    else {\n        fcn.00401fb6();\n        fcn.00401fb6();\n    }\ncode_r0x00408822:\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 597
    },
    "00411407": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00411407(int32_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, uint32_t *arg_1ch, \n            uint *arg_20h, uint noname_7, uint *arg_28h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    uint32_t *puVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = arg_1ch;\n    piVar5 = arg_8h;\n    iVar9 = 0;\n    var_20h._0_2_ = 0;\n    if (arg_8h == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (arg_1ch == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar2 = arg_1ch[2];\n    if (5 < uVar2) {\n        return -0x7ffdfff2;\n    }\n    arg_8h = NULL;\n    if (arg_1ch[3] != 0) {\n        arg_1ch = arg_1ch[1];\n        do {\n            uVar3 = *arg_1ch;\n            if (uVar2 <= uVar3) {\n                return -0x7ffdfff2;\n            }\n            arg_1ch = arg_1ch + 1;\n            arg_8h = arg_8h + 1;\n            (&var_44h)[uVar3] = *puVar6 + iVar9;\n            iVar9 = iVar9 + 0x10;\n        } while (arg_8h < puVar6[3]);\n    }\n    if (arg_8h < uVar2) {\n        iVar9 = arg_8h * 0x10 + *puVar6;\n        iVar8 = uVar2 - arg_8h;\n        piVar10 = &var_48h + (uVar2 - arg_8h);\n        do {\n            *piVar10 = iVar9;\n            iVar9 = iVar9 + 0x10;\n            piVar10 = piVar10 + -1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar9 = -0x7ffdfffd;\n    if (arg_28h == NULL) {\n        arg_28h = &arg_18h;\n    }\n    if (arg_20h == NULL) {\n        arg_20h = &var_20h;\n    }\n    (**0x481524)(&var_10h);\n    pcVar4 = *0x481528;\n    if (0x12 < arg_ch + 0x139aU) goto code_r0x00411971;\n    // switch table (19 cases) at 0x411987\n    switch(*((arg_ch + 0x139aU) * 4 + 0x411987)) {\n    case 0x4114e4:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 100))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3]);\n            goto code_r0x00411971;\n        }\n        break;\n    case 0x411505:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (**0x481528)(&var_10h, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x004116fd;\n                var_44h = &var_10h;\n            }\n            arg_18h = var_44h[2];\n            if (*var_40h != 3) {\n                iVar9 = (*pcVar4)(&var_10h, var_40h, 0, 3);\n                if (iVar9 < 0) {\ncode_r0x004118e9:\n                    *arg_28h = 1;\n                    goto code_r0x00411971;\n                }\n                var_40h = &var_10h;\n            }\n            iVar9 = (**(*piVar5 + 0x60))(piVar5, arg_18h, var_40h[2], arg_20h);\n            goto code_r0x00411971;\n        }\n        break;\n    case 0x411572:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (**0x481528)(&var_10h, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x004116fd;\n                var_44h = &var_10h;\n            }\n            iVar9 = (**(*piVar5 + 0x5c))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h);\n            goto code_r0x00411971;\n        }\n        break;\n    case 0x4115bf:\n        if (puVar6[2] == 5) {\n            while ((uVar1 = *var_44h,  (uVar1 & 0x4000) != 0 && ((uVar1 & 0xf) != 0))) {\n                if ((uVar1 & 0xc) == 0) {\n                    var_10h = var_44h[2];\n                }\n                else {\n                    (**0x48152c)(var_44h[2]);\n                    *var_44h[2] = 3;\n                    var_10h = var_44h[2] + 8;\n                }\n            }\n            *arg_28h = 0;\n            iVar9 = (**(*piVar5 + 0x58))\n                              (piVar5, var_10h, var_ch, var_8h, var_4h, *var_34h, var_34h[1], var_34h[2], var_34h[3]);\n            goto code_r0x00411971;\n        }\n        break;\n    case 0x411628:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (**0x481528)(&var_10h, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x004116fd;\n                var_44h = &var_10h;\n            }\n            iVar9 = (**(*piVar5 + 0x54))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3]);\n            goto code_r0x00411971;\n        }\n        break;\n    case 0x411672:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x50))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\ncode_r0x004118a0:\n            if (-1 < iVar9) {\n                *arg_20h = 8;\n            }\n            goto code_r0x00411971;\n        }\n        break;\n    case 0x41169a:\n        iVar9 = (**(*piVar5 + 0x4c))(piVar5, arg_20h);\n        goto code_r0x00411971;\n    case 0x4116a8:\n        iVar9 = (**(*piVar5 + 0x48))(piVar5, arg_20h);\n        goto code_r0x00411971;\n    case 0x4116b6:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x44))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004118a0;\n        }\n        break;\n    case 0x4116de:\n        if (puVar6[2] == 2) {\n            uVar1 = *var_44h;\n            if (((uVar1 & 0x4000) != 0) && ((uVar1 & 0xc) == 0)) {\n                iVar9 = -0x7ffdfffb;\ncode_r0x004116fd:\n                *arg_28h = 0;\n                goto code_r0x00411971;\n            }\n            if (uVar1 == 0x400c) {\n                (**0x48152c)(var_44h[2]);\n                *var_44h[2] = 8;\n                puVar7 = var_44h[2] + 8;\n            }\n            else if (uVar1 == 0x4008) {\n                puVar7 = var_44h[2];\n            }\n            else {\n                (**0x48152c)(var_44h);\n                puVar7 = var_44h + 2;\n                *var_44h = 8;\n            }\n            iVar9 = (**(*piVar5 + 0x40))(piVar5, puVar7, *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h + 2);\n            goto code_r0x00411946;\n        }\n        break;\n    case 0x411760:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x3c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004118a0;\n        }\n        break;\n    case 0x411788:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x38))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x00411971;\n        }\n        break;\n    case 0x4117ac:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x34))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x00411971;\n        }\n        break;\n    case 0x4117d0:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x30))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004118a0;\n        }\n        break;\n    case 0x4117f8:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x00411879;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (**0x481528)(&var_10h, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x004118e9;\n                    var_40h = &var_10h;\n                }\n                iVar9 = (**(*piVar5 + 0x6c))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x00411971;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x2c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004118a0;\n        }\n        break;\n    case 0x411879:\ncode_r0x00411879:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x00411911;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (**0x481528)(&var_10h, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x004118e9;\n                    var_40h = &var_10h;\n                }\n                iVar9 = (**(*piVar5 + 0x68))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x00411971;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x28))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004118a0;\n        }\n        break;\n    case 0x411911:\ncode_r0x00411911:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x24))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00411963;\n        }\n        break;\n    case 0x411939:\n        iVar9 = (**(*piVar5 + 0x20))(piVar5, arg_20h + 2);\ncode_r0x00411946:\n        if (-1 < iVar9) {\n            *arg_20h = 3;\n        }\n        goto code_r0x00411971;\n    case 0x411956:\n        iVar9 = (**(*piVar5 + 0x1c))(piVar5, arg_20h + 2);\ncode_r0x00411963:\n        if (-1 < iVar9) {\n            *arg_20h = 9;\n        }\n        goto code_r0x00411971;\n    }\n    iVar9 = -0x7ffdfff2;\ncode_r0x00411971:\n    (**0x48152c)(&var_10h);\n    return iVar9;\n}\n",
        "token_count": 3654
    },
    "004447a7": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004447a7(uint noname_0, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0040e0b4();\n    (**0x48169c)(*(in_ECX + 0x20), &var_14h);\n    pcVar1 = *0x48178c;\n    iVar3 = (**0x48178c)(0x21);\n    iVar4 = (*pcVar1)(0x20);\n    iVar5 = fcn.00413cf0();\n    if ((var_4h & 0x1000) != 0) {\n        if (iVar5 == 3) {\n            iVar5 = 2;\n        }\n        iVar2 = (**0x481774)(2);\n        if (iVar2 < 0) {\n            return 0;\n        }\n    }\n    if (((9 < iVar5) && (iVar5 < 0x12)) || (iVar5 == 4)) {\n        if ((var_4h & 0x800) == 0) {\n            (**0x4817e8)(&var_14h, -iVar4, -iVar3);\n            if ((var_4h & 0x200) != 0) {\n                if (iVar5 != 4) {\n                    if (iVar5 == 0xd) {\n                        return (arg_ch < var_10h) * 2 + 10;\n                    }\n                    if (iVar5 == 0xe) {\n                        return (arg_ch < var_10h) + 0xb;\n                    }\n                    if (iVar5 == 0x10) {\n                        return ((arg_ch <= var_8h) - 1 & 5) + 10;\n                    }\n                    if (iVar5 != 0x11) {\n                        return iVar5;\n                    }\n                }\n                iVar5 = (var_8h < arg_ch) * 4 + 0xb;\n            }\n        }\n        else {\n            iVar5 = 2;\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 523
    },
    "0047280e": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047280e(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00472d0d;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00472941;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00472948;\ncode_r0x00472941:\n                        do {\n                            var_4h = 1;\ncode_r0x00472948:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00472956;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00472956:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4a62bc - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4a62bc < iVar12) {\n                if (iVar12 < *0x4a62b8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x4a62b8;\n                    uVar5 = 1;\n                }\n                goto code_r0x00472d0d;\n            }\n            var_10h = *0x4a62bc - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00472af9;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00472af9:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00472d0d:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3668
    },
    "00472d50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00472d50(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0047324f;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x4a62d8 - 1;\n        iVar4 = *0x4a62d8 + (*0x4a62d8 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x4a62d8 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00472e83;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00472e8a;\ncode_r0x00472e83:\n                        do {\n                            var_4h = 1;\ncode_r0x00472e8a:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00472e98;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00472e98:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4a62d4 - *0x4a62d8) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4a62d4 < iVar12) {\n                if (iVar12 < *0x4a62d0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x4a62e4;\n                    iVar4 = *0x4a62dc + (*0x4a62dc >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4a62dc & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x4a62dc + (*0x4a62dc >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4a62dc & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x4a62e4 + *0x4a62d0;\n                    uVar5 = 1;\n                }\n                goto code_r0x0047324f;\n            }\n            var_10h = *0x4a62d4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x4a62d8 - 1;\n            iVar12 = *0x4a62d8 + (*0x4a62d8 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x4a62d8 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0047303b;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0047303b:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x4a62dc + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0047324f:\n    var_20h = iVar12 << (0x1fU - *0x4a62dc & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x4a62e0 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x4a62e0 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3684
    },
    "0040127a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040127a(int32_t **param_1)\n\n{\n    int32_t **arg_8h;\n    \n    while (*param_1 != NULL) {\n        arg_8h = *param_1;\n        *param_1 = *arg_8h;\n        fcn.004500d5(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040134b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040134b(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    int32_t *piVar2;\n    \n    piVar2 = arg_8h;\n    if (arg_8h != NULL) goto code_r0x00401361;\ncode_r0x0040135c:\n    do {\n        do {\n            fcn.00401103();\n            piVar2 = arg_8h;\ncode_r0x00401361:\n            arg_8h = piVar2;\n        } while ((arg_ch < 0) || (arg_10h == 0));\n        iVar1 = *piVar2;\n        if (iVar1 == arg_10h) {\n            if (arg_ch <= arg_14h) goto code_r0x00401398;\n            iVar1 = fcn.00450653(arg_ch, 1);\ncode_r0x004013b2:\n            *piVar2 = iVar1;\n            arg_8h = unaff_ESI;\n        }\n        else {\n            if (arg_14h < arg_ch) {\n                iVar1 = fcn.004508ad(iVar1, arg_ch, 1);\n                if (iVar1 != 0) goto code_r0x004013b2;\n                goto code_r0x0040135c;\n            }\n            fcn.004500d5(iVar1);\ncode_r0x00401398:\n            *piVar2 = arg_10h;\n            arg_8h = unaff_ESI;\n        }\n        unaff_ESI = arg_8h;\n        if (*piVar2 != 0) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 403
    },
    "0040142b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040142b(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    ushort *puVar6;\n    uchar *puVar7;\n    uchar uVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = *0x481480;\n    var_8h = 0;\n    if (arg_8h == 0) {\n        var_8h = 0;\n    }\n    else {\n        piVar3 = (**0x481480)(arg_8h);\n        uVar4 = fcn.004011d7(piVar3);\n        uVar4 = uVar4 & 0xffff;\n        if (uVar4 != 0) {\n            iVar5 = (**0x48147c)(0x42, uVar4 * 4 + 8);\n            if (iVar5 == 0) {\n                var_8h = 0;\n            }\n            else {\n                puVar6 = (*pcVar2)(iVar5);\n                *puVar6 = 0x300;\n                puVar6[1] = uVar4;\n                iVar1 = *piVar3;\n                if (uVar4 != 0) {\n                    puVar10 = piVar3 + 0xd;\n                    puVar7 = puVar6 + 5;\n                    puVar9 = piVar3 + 0x29;\n                    do {\n                        if (iVar1 == 0x28) {\n                            puVar7[-1] = puVar9[1];\n                            *puVar7 = *puVar9;\n                            uVar8 = puVar9[-1];\n                        }\n                        else {\n                            puVar7[-1] = puVar10[1];\n                            *puVar7 = *puVar10;\n                            uVar8 = puVar10[-1];\n                        }\n                        puVar7[2] = 0;\n                        puVar7[1] = uVar8;\n                        puVar10 = puVar10 + 3;\n                        puVar9 = puVar9 + 4;\n                        puVar7 = puVar7 + 4;\n                        uVar4 = uVar4 - 1;\n                    } while (uVar4 != 0);\n                }\n                var_8h = fcn.00401194(puVar6);\n                (**0x481484)(iVar5);\n                (**0x481474)(iVar5);\n            }\n        }\n        (**0x481484)(arg_8h);\n    }\n    return var_8h;\n}\n",
        "token_count": 603
    },
    "00401df4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401df4(uint arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ushort uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t extraout_ECX;\n    int32_t iVar7;\n    ulong uVar8;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (arg_10h == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = (**0x481480)(arg_10h);\n        uVar6 = fcn.00401b20(uVar5);\n        if (arg_18h != 0) {\n            var_8h = (**0x4811f0)(arg_8h, *(arg_18h + 4), 1);\n        }\n        (**0x4811f4)(arg_8h, 3);\n        iVar1 = *arg_14h;\n        iVar2 = *arg_ch;\n        iVar7 = arg_ch[2] - iVar2;\n        if ((iVar7 == arg_14h[2] - iVar1) && (iVar3 = arg_14h[3],  arg_ch[3] - arg_ch[1] == iVar3 - arg_14h[1])) {\n            uVar4 = fcn.004011c2(uVar5, uVar6, uVar5, 0);\n            uVar8 = fcn.004011c2(uVar5, 0, uVar4);\n            uVar5 = (**0x4811f8)(arg_8h, iVar2, extraout_ECX, iVar7, (uVar8 >> 0x20) - extraout_ECX, iVar1, \n                                 uVar8 - iVar3);\n        }\n        else {\n            uVar5 = (**0x4811fc)(arg_8h, iVar2, arg_ch[1], iVar7, arg_ch[3] - arg_ch[1], iVar1, arg_14h[1], \n                                 arg_14h[2] - iVar1, arg_14h[3] - arg_14h[1], uVar6, uVar5, 0, 0xcc0020);\n        }\n        (**0x481484)(arg_10h);\n        if (var_8h != 0) {\n            (**0x4811f0)(arg_8h, var_8h, 1);\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 617
    },
    "0040234e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040234e(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (param_2 < *(iVar1 + -0xc)) {\n        param_2 = *(iVar1 + -0xc);\n    }\n    if (*(iVar1 + -4) < 2) {\n        iVar1 = *(iVar1 + -8);\n        if (iVar1 < param_2) {\n            if (iVar1 < 0x401) {\n                iVar1 = iVar1 * 2;\n            }\n            else {\n                iVar1 = iVar1 + 0x400;\n            }\n            if (iVar1 < param_2) {\n                iVar1 = param_2;\n            }\n            fcn.00402253(iVar1);\n        }\n    }\n    else {\n        fcn.004021eb(param_2);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0040244c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040244c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t uVar2;\n    \n    if (arg_ch == 0) {\n        fcn.00402193();\n    }\n    else {\n        if (arg_8h == 0) {\n            fcn.00401103(0x80070057);\n        }\n        uVar1 = *(*in_ECX + -0xc);\n        uVar2 = arg_8h - *in_ECX;\n        arg_8h_00 = fcn.004023b3(arg_ch);\n        if (uVar1 < uVar2) {\n            fcn.00451210(arg_8h_00, arg_ch, arg_8h, arg_ch);\n        }\n        else {\n            fcn.0045128b(arg_8h_00, arg_ch, arg_8h_00 + uVar2, arg_ch);\n        }\n        fcn.0040210d(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "004500d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004500d5(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045517c(0x49ee30, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        if (*0x4aa2e8 == 3) {\n            fcn.00457686(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.004577a2(iVar1);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.004577cd(arg_8h_00, iVar1);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0045012b();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x0045015d;\n            iVar1 = *(unaff_EBP + 8);\n        }\n        iVar1 = (**0x4812dc)(*0x4a87ec, 0, iVar1);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00451b45();\n            uVar3 = (**0x48148c)();\n            uVar3 = fcn.00451b0a(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\ncode_r0x0045015d:\n    fcn.004551c1();\n    return;\n}\n",
        "token_count": 423
    },
    "00403ad7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403ad7(int32_t *param_1)\n\n{\n    if (0 < param_1[1]) {\n        (**(*param_1 + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "00403f41": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00403f41(int16_t *arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    if (arg_10h == NULL) {\n        arg_10h = fcn.00403bf2();\n    }\n    if ((arg_8h == NULL) && (arg_ch != 0)) {\n        *(arg_10h + 2) = 0;\n        *(arg_10h + 6) = 0xffffffff;\n        *(arg_10h + 8) = 0xffffffff;\n        *arg_10h = arg_ch;\n        *(arg_10h + 4) = 1;\n        arg_8h = arg_10h;\n    }\n    return arg_8h;\n}\n",
        "token_count": 172
    },
    "0040404f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040404f(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = *0x481970;\n    iVar2 = (**0x481970)(arg_ch, arg_10h);\n    if ((iVar2 != 0) && (arg_8h != 0)) {\n        (**0x481028)(0x80000000, \"CLSID\", &var_8h);\n        var_4h = 0;\n        (**0x481974)(arg_ch, &var_4h);\n        uVar3 = fcn.0042320d(var_4h);\n        uVar4 = (**0x48145c)(arg_8h);\n        (**0x48102c)(var_8h, uVar3, 1, arg_8h, uVar4);\n        (**0x481990)(uVar3);\n        iVar2 = (*pcVar1)(arg_ch, arg_10h);\n        (**0x481030)(var_8h);\n    }\n    return iVar2;\n}\n",
        "token_count": 281
    },
    "004040da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004040da(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar1 = arg_8h;\n    if (arg_8h != NULL) {\n        iVar2 = (**(*arg_8h + 0x58))(arg_8h, &var_8h);\n        if ((iVar2 != 0) || (var_8h != 1)) {\n            (**(*piVar1 + 4))(piVar1);\n            return piVar1;\n        }\n        arg_8h = NULL;\n        iVar2 = (**(*piVar1 + 0x30))(piVar1, 1, &arg_8h);\n        if (iVar2 == 0) {\n            var_4h = NULL;\n            (**(*arg_8h + 0xc))(arg_8h, 1, &var_4h, 0);\n            fcn.004234be(&arg_8h);\n            return var_4h;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 261
    },
    "00404141": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404141(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        var_8h = fcn.004040da(arg_8h);\n        if (var_8h != NULL) {\n            iVar1 = (**(*var_8h + 0x58))(var_8h, &var_ch);\n            if ((iVar1 == 0) && (var_ch == 2)) {\n                var_4h = 0;\n                iVar1 = (**0x48196c)(0, &var_4h);\n                if (iVar1 == 0) {\n                    arg_8h = 0;\n                    iVar1 = (**(*var_8h + 0x50))(var_8h, var_4h, 0, &arg_8h);\n                    if ((iVar1 == 0) && (arg_8h != 0)) {\n                        uVar2 = fcn.004518b0(arg_8h);\n                        (**0x481990)(arg_8h);\n                    }\n                    fcn.004234be(&var_4h);\n                }\n            }\n            fcn.004234be(&var_8h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 335
    },
    "00404584": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00404584(int32_t arg_8h, int32_t noname_1, int32_t noname_2, int32_t noname_3, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h, int32_t arg_2ch, int16_t *arg_30h, int16_t *arg_34h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint unaff_ESI;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    var_18h = arg_34h;\n    if (arg_30h == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = (**0x481470)(arg_30h);\n        iVar2 = iVar2 + 1;\n    }\n    if ((arg_34h == NULL) || (*arg_34h == 0)) {\n        var_18h = arg_30h;\n        iVar3 = iVar2;\n    }\n    else {\n        iVar3 = (**0x481470)(arg_34h);\n        iVar3 = iVar3 + 1;\n    }\n    iVar1 = (iVar3 + iVar2) * 2 + 0x34;\n    iVar4 = (**0x48147c)(0x2042, iVar1);\n    if (iVar4 != 0) {\n        piVar5 = (**0x481480)(iVar4);\n        if (arg_30h == NULL) {\n            piVar5[0xb] = 0;\n        }\n        else {\n            piVar5[0xb] = 0x34;\n            fcn.00401137(piVar5 + 0xd, iVar2, arg_30h);\n        }\n        if (var_18h == NULL) {\n            piVar5[0xc] = 0;\n        }\n        else {\n            iVar2 = iVar2 * 2 + 0x34;\n            piVar5[0xc] = iVar2;\n            fcn.00401137(iVar2 + piVar5, iVar3, var_18h);\n        }\n        *piVar5 = iVar1;\n        piVar5[5] = arg_18h;\n        piVar5[1] = arg_8h;\n        piVar5[6] = arg_1ch;\n        piVar5[2] = noname_1;\n        piVar5[7] = arg_20h;\n        piVar5[8] = arg_24h;\n        piVar5[3] = noname_2;\n        piVar5[9] = arg_28h;\n        piVar5[4] = noname_3;\n        piVar5[10] = arg_2ch;\n        (**0x481484)(iVar4);\n    }\n    fcn.004510f7(unaff_ESI);\n    return;\n}\n",
        "token_count": 711
    },
    "00404a4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00404a4d(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (param_2 < *(iVar1 + -0xc)) {\n        param_2 = *(iVar1 + -0xc);\n    }\n    if (*(iVar1 + -4) < 2) {\n        iVar1 = *(iVar1 + -8);\n        if (iVar1 < param_2) {\n            if (iVar1 < 0x401) {\n                iVar1 = iVar1 * 2;\n            }\n            else {\n                iVar1 = iVar1 + 0x400;\n            }\n            if (iVar1 < param_2) {\n                iVar1 = param_2;\n            }\n            fcn.00404a19(iVar1);\n        }\n    }\n    else {\n        fcn.004049b1(param_2);\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0040510f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040510f(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY304;\n    int32_t iStackY300;\n    int32_t in_stack_fffffed8;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uVar10;\n    int32_t in_stack_fffffeec;\n    uint uStack264;\n    uint uStack256;\n    uint in_stack_ffffff04;\n    \n    uStack264 = 0x2c;\n    fcn.00451106();\n    iStackY300 = param_2;\n    bVar3 = false;\n    iVar4 = (**0x48182c)(param_2);\n    iVar9 = 0;\n    iVar8 = 0;\n    if (0 < iVar4) {\n        do {\n            in_stack_fffffeec = iStackY300;\n            (**0x481830)(iStackY300, iVar8);\n            uVar10 = 0x400;\n            iVar6 = 0x40519d;\n            iVar9 = iStackY300;\n            uVar5 = (**0x481818)(iStackY300, iVar8, 0x400);\n            if ((iVar6 == 0) && ((uVar5 & 0x800) != 0)) {\n                *(param_3 + param_4 * 4) = iVar8;\n                param_4 = param_4 + 2;\n                iVar8 = iVar9;\n                iVar9 = 0;\n            }\n            else {\n                iStackY304 = 0;\n                if ((param_5 != 0) && ((param_4 == 5 && (*(param_3 + 0x14) == 1)))) {\n                    iStackY304 = (**0x481830)(param_1, uVar10);\n                }\n                in_stack_fffffeec = 0x100;\n                iVar7 = 0x405214;\n                iVar8 = iStackY300;\n                iVar6 = (**0x48181c)(iStackY300, iVar9, &stack0xfffffef8, 0x100, 0x400);\n                if (iVar7 == 0) {\n                    if (0 < iVar6) {\n                        in_stack_fffffeec = (**0x481824)(iStackY300, iVar8, &stack0xfffffef8);\n                        uVar5 = uVar5 | 0x400;\ncode_r0x004052ca:\n                        iVar8 = param_1;\n                        (**0x481828)();\n                        iVar9 = uVar5 + 1;\n                    }\n                }\n                else if (iStackY304 == 0) {\n                    in_stack_fffffeec = 0x40529c;\n                    iVar6 = (**0x48182c)(iVar7);\n                    if (iVar6 != 0) {\n                        uVar5 = uVar5 & 0xff | 0x410;\n                        in_stack_fffffeec = iVar7;\n                        goto code_r0x004052ca;\n                    }\n                }\n                else {\n                    iVar9 = fcn.00419c68();\n                    uVar10 = *(iVar9 + 0x10);\n                    in_stack_fffffeec = 0x405234;\n                    fcn.004050cb(uVar10);\n                    if (*(in_stack_fffffed8 + -0xc) != 0) {\n                        in_stack_fffffeec = 0x20;\n                        fcn.00404a94(0x20, uVar10, 0);\n                    }\n                    fcn.00404bb1(&stack0xfffffef8);\n                    iStackY300 = 0x405269;\n                    (**0x481820)(iStackY304, 0x10);\n                    puVar2 = param_3 + param_4 * 4;\n                    *puVar2 = 0;\n                    piVar1 = puVar2 + -1;\n                    *piVar1 = *piVar1 + 1;\n                    bVar3 = true;\n                    iVar9 = in_stack_fffffed8;\n                    fcn.00401fb6(0xffffffff);\n                    in_stack_fffffed8 = iStackY304;\n                    iVar8 = iVar7;\n                }\n            }\n            iVar8 = iVar8 + 1;\n        } while (iVar8 < iVar4);\n        if (bVar3) goto code_r0x004052fd;\n    }\n    *(param_3 + param_4 * 4) = iVar9;\ncode_r0x004052fd:\n    *in_FS_OFFSET = in_stack_fffffeec;\n    uStack256 = 0x40531b;\n    fcn.004510f7(in_stack_ffffff04);\n    return;\n}\n",
        "token_count": 1109
    },
    "00405325": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl fcn.00405325(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *arg_8h_00;\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    int32_t unaff_EBP;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.0045116f(0x48);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x50) = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -0x38) = 0;\n    iVar2 = fcn.0042349a(arg_8h_00, 0x48f230);\n    *(unaff_EBP + -0x48) = iVar2;\n    *(unaff_EBP + -0x3c) = iVar2 != 0;\n    uVar3 = fcn.0042349a(arg_8h_00, 0x48f1a0);\n    *(unaff_EBP + -0x4c) = uVar3;\n    iVar2 = (**(*arg_8h_00 + 0x3c))(arg_8h_00, unaff_EBP + -0x20);\n    if (iVar2 != 0) {\n        *(unaff_EBP + -0x20) = *0x48f160;\n        *(unaff_EBP + -0x1c) = *0x48f164;\n        *(unaff_EBP + -0x18) = *0x48f168;\n        *(unaff_EBP + -0x14) = *0x48f16c;\n    }\n    (**(*arg_8h_00 + 0x40))(arg_8h_00, 1, unaff_EBP + -0x28);\n    if (*(unaff_EBP + -0x3c) == 0) {\n        if (*(unaff_EBP + -0x2c) == 0) {\n            iVar2 = (**(*arg_8h_00 + 0x20))(arg_8h_00, 4, 3, unaff_EBP + -0x44);\n            if (iVar2 == 0) {\n                (**0x48196c)(0, unaff_EBP + -0x40);\n                (**(**(unaff_EBP + -0x44) + 0x50))(*(unaff_EBP + -0x44), *(unaff_EBP + -0x40), 0, unaff_EBP + -0x2c);\n                fcn.004234be(unaff_EBP + -0x40);\n                goto code_r0x004054a8;\n            }\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x28) != 0) {\n            uVar3 = fcn.00409b56();\n            fcn.004048fd(uVar3);\n            *(unaff_EBP + -4) = 0;\n            fcn.0040508b(0xf094);\n            iVar2 = (**0x481470)(*(unaff_EBP + -0x28));\n            iVar2 = *(*(unaff_EBP + -0x24) + -0xc) + 1 + iVar2;\n            iVar4 = fcn.0040432c(iVar2, 2);\n            *(unaff_EBP + -0x3c) = iVar4;\n            if (iVar4 != 0) {\n                puVar5 = fcn.00451b45();\n                *(unaff_EBP + -0x54) = *puVar5;\n                puVar5 = fcn.00451b45();\n                *puVar5 = 0;\n                uVar3 = *(unaff_EBP + -0x3c);\n                fcn.00451a27(uVar3, iVar2, iVar2 + -1, *(unaff_EBP + -0x24), *(unaff_EBP + -0x28));\n                piVar6 = fcn.00451b45();\n                if (*piVar6 == 0) {\n                    puVar5 = fcn.00451b45();\n                    *puVar5 = *(unaff_EBP + -0x54);\n                }\n                else {\n                    puVar5 = fcn.00451b45();\n                    fcn.00404894(*puVar5);\n                }\n                (**0x481990)(*(unaff_EBP + -0x28));\n                *(unaff_EBP + -0x28) = uVar3;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00401fb6();\n        }\n        (**(**(unaff_EBP + -0x48) + 0x20))(*(unaff_EBP + -0x48), unaff_EBP + -0x2c);\ncode_r0x004054a8:\n        *(unaff_EBP + -0x24) = 1;\n    }\n    puVar5 = *(unaff_EBP + -0x50);\n    if (puVar5 == NULL) {\n        piVar6 = *(unaff_EBP + -0x4c);\n        if (piVar6 != NULL) {\n            iVar2 = (**(*piVar6 + 0x24))(piVar6, *(unaff_EBP + 0x10), 0xffffffff, 0, unaff_EBP + -0x34);\n            if (iVar2 == 0) goto code_r0x004054e0;\n        }\n        *(unaff_EBP + -0x34) = 0;\n        *(unaff_EBP + -0x30) = 0;\n    }\n    else {\n        uVar3 = puVar5[1];\n        *(unaff_EBP + -0x34) = *puVar5;\n        *(unaff_EBP + -0x30) = uVar3;\n    }\ncode_r0x004054e0:\n    iVar2 = (**(*arg_8h_00 + 0x58))(arg_8h_00, *(unaff_EBP + 0x10), unaff_EBP + -0x38);\n    if (iVar2 != 0) {\n        *(unaff_EBP + -0x38) = 0;\n    }\n    fcn.00404584(*(unaff_EBP + -0x20), *(unaff_EBP + -0x1c), *(unaff_EBP + -0x18), *(unaff_EBP + -0x14), \n                 *(unaff_EBP + 0x10), *(unaff_EBP + -0x34), *(unaff_EBP + -0x30), *(unaff_EBP + 0x14), \n                 *(unaff_EBP + 0x18), *(unaff_EBP + -0x38), *(unaff_EBP + -0x28), *(unaff_EBP + -0x2c));\n    pcVar1 = *0x481990;\n    (**0x481990)(*(unaff_EBP + -0x28));\n    if (*(unaff_EBP + -0x24) != 0) {\n        (*pcVar1)(*(unaff_EBP + -0x2c));\n    }\n    fcn.004234be(unaff_EBP + -0x44);\n    fcn.004234be(unaff_EBP + -0x48);\n    fcn.004234be(unaff_EBP + -0x4c);\n    fcn.004511f2();\n    return;\n}\n",
        "token_count": 2148
    },
    "0040559e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040559e(uint arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    char cVar2;\n    uint16_t uVar3;\n    uint32_t noname_0;\n    uchar *arg_8h_00;\n    int32_t *piVar4;\n    int32_t arg_8h_01;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t noname_1;\n    int32_t arg_8h_02;\n    uint var_4h;\n    \n    fcn.0045116f();\n    (**0x4a66d0)();\n    iVar5 = 0;\n    *(unaff_EBP + -0x2c) = 0;\n    puVar1 = *(unaff_EBP + 8);\n    uVar3 = *puVar1;\n    *(unaff_EBP + -4) = 0;\n    if (uVar3 == 0) {\n        arg_8h_01 = 0;\n    }\n    else {\n        arg_8h_01 = uVar3 + puVar1;\n    }\n    if (puVar1[1] == 0) {\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = puVar1[1] + puVar1;\n    }\n    if (puVar1[2] != 0) {\n        iVar5 = puVar1[2] + puVar1;\n    }\n    fcn.0040555a(arg_8h_01);\n    *(unaff_EBP + -4) = 1;\n    arg_8h_02 = iVar6;\n    fcn.0040555a(iVar6);\n    arg_8h_00 = &stack0xfffffff0;\n    *(unaff_EBP + -4) = 2;\n    noname_1 = iVar5;\n    fcn.0040555a(iVar5);\n    *(unaff_EBP + -4) = 3;\n    if (arg_8h_01 == 0) {\n        *(unaff_EBP + -0x18) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x18) = *(*(unaff_EBP + -0x24) + -0xc) * 2 + 2;\n    }\n    if (iVar6 == 0) {\n        *(unaff_EBP + -0x14) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x14) = *(*(unaff_EBP + -0x28) + -0xc) * 2 + 2;\n    }\n    if (iVar5 == 0) {\n        *(unaff_EBP + -0x1c) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x1c) = *(*(unaff_EBP + -0x20) + -0xc) * 2 + 2;\n    }\n    iVar5 = *(unaff_EBP + 0xc);\n    if (iVar5 != 0) {\n        noname_0 = *(iVar5 + 0x26) + 0xdc;\n        if (noname_0 < 0x401) {\n            cVar2 = fcn.004013b6(noname_0, noname_1, arg_8h_02);\n            if (cVar2 == '\\0') goto code_r0x0040568b;\n            fcn.00450c70();\n        }\n        else {\ncode_r0x0040568b:\n            arg_8h_00 = fcn.00401533(*(iVar5 + 0x26) + 0xdc);\n        }\n        arg_8h_01 = fcn.00404718(arg_8h_00, iVar5);\n        if (arg_8h_01 != 0) goto code_r0x004056b1;\n    }\n    fcn.00403bf2();\ncode_r0x004056b1:\n    iVar5 = *(arg_8h_01 + 0x46) + *(arg_8h_01 + 0x44) + *(unaff_EBP + -0x1c) + *(unaff_EBP + -0x14) + 0x10 +\n            *(unaff_EBP + -0x18);\n    piVar4 = (**0x481964)(iVar5);\n    if (piVar4 != NULL) {\n        iVar6 = *(unaff_EBP + -0x18);\n        *piVar4 = iVar5;\n        *(piVar4 + 1) = 0x10;\n        if (0 < iVar6) {\n            fcn.00401137(piVar4 + 4, *(*(unaff_EBP + -0x24) + -0xc) + 1, *(unaff_EBP + -0x24));\n        }\n        uVar3 = *(piVar4 + 1) + *(unaff_EBP + -0x18);\n        iVar6 = *(unaff_EBP + -0x14);\n        *(piVar4 + 6) = uVar3;\n        if (0 < iVar6) {\n            fcn.00401137(uVar3 + piVar4, *(*(unaff_EBP + -0x28) + -0xc) + 1, *(unaff_EBP + -0x28));\n        }\n        uVar3 = *(piVar4 + 6) + *(unaff_EBP + -0x14);\n        iVar6 = *(unaff_EBP + -0x1c);\n        *(piVar4 + 2) = uVar3;\n        if (iVar6 != 0) {\n            fcn.00401137(uVar3 + piVar4, *(*(unaff_EBP + -0x20) + -0xc) + 1, *(unaff_EBP + -0x20));\n        }\n        uVar3 = *(piVar4 + 2) + *(unaff_EBP + -0x1c);\n        *(piVar4 + 10) = uVar3;\n        fcn.00404383(uVar3 + piVar4, iVar5 - uVar3, arg_8h_01, *(arg_8h_01 + 0x46) + 0xdc);\n    }\n    fcn.00401fb6();\n    fcn.00401fb6();\n    fcn.00401fb6();\n    fcn.0040127a();\n    *(unaff_EBP + -0x40) = 0x4057aa;\n    fcn.004511f2();\n    return;\n}\n",
        "token_count": 1636
    },
    "00406823": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406823(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00451106(0);\n    iVar1 = fcn.00419cdb();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00403a8b(0x424023);\n        iVar3 = fcn.00403a9d(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00423bd7(0x482704, 0x4067b8, 0x405e9d, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar4;\n        fcn.00403a8b(uVar2);\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 316
    },
    "00423c7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00423c7f(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00451139(8);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((arg_8h_00 != 0) && (iVar1 = fcn.004239a5(arg_8h_00),  iVar1 == 0)) {\n        iVar1 = fcn.004239a5(arg_8h_00);\n        if (iVar1 == 0) {\n            uVar2 = fcn.00403a8b(0x424023);\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + 8) = uVar2;\n            iVar1 = fcn.00439b35();\n            if (iVar1 == 0) {\n                fcn.00403bbe();\n            }\n            (**(extraout_ECX + 0x14))(iVar1);\n            piVar3 = fcn.00423b57(arg_8h_00);\n            uVar2 = *(unaff_EBP + 8);\n            *(unaff_EBP + -4) = 0xffffffff;\n            *piVar3 = iVar1;\n            fcn.00403a8b(uVar2);\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n        else {\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 514
    },
    "0040691f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040691f(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CDC.0;\n    if (param_1[1] != NULL) {\n        uVar1 = fcn.004068d8();\n        (**0x48105c)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00406aea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406aea(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00451106(0);\n    iVar1 = fcn.00419cdb();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00403a8b(0x424023);\n        iVar3 = fcn.00403a9d(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00423bd7(0x482774, 0x4067d4, 0x405eab, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar4;\n        fcn.00403a8b(uVar2);\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 313
    },
    "00406bbf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406bbf(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00406b95();\n    uVar1 = (**0x481140)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 83
    },
    "00407cb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00407cb8(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    var_4h = (**(*param_1 + 0x60))();\n    do {\n        if (var_4h == NULL) {\n            uVar2 = (**(*param_1 + 0x90))();\n            return uVar2;\n        }\n        (**(*param_1 + 100))(&var_4h);\n        iVar1 = fcn.004148fc();\n    } while ((iVar1 == 0) || (*(iVar1 + 0x58) < 1));\n    return 1;\n}\n",
        "token_count": 168
    },
    "00407dad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407dad(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    int32_t var_4h;\n    \n    var_4h = (**(*in_ECX + 0x60))();\n    while (var_4h != 0) {\n        piVar1 = (**(*in_ECX + 100))(&var_4h);\n        if (piVar1 != arg_8h) {\n            (**(*piVar1 + 0x168))(arg_8h, arg_ch, arg_10h);\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00407dee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407dee(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    var_4h = (**(*param_1 + 0x60))();\n    while (var_4h != NULL) {\n        piVar1 = (**(*param_1 + 100))(&var_4h);\n        (**(*piVar1 + 0x15c))();\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "00407e1f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407e1f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00409398(arg_8h, arg_ch, arg_10h, arg_14h);\n    if (iVar1 == 0) {\n        if (*(in_ECX + 0x28) != 0) {\n            iVar1 = (**(**(in_ECX + 0x28) + 0xc))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if (iVar1 != 0) goto code_r0x00407e3a;\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x00407e3a:\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 213
    },
    "00407f1a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t ** fcn.00407f1a(int32_t **param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    piVar2 = (**(**param_1 + 0x10))();\n    ppiVar3 = param_1 + 3;\n    if ((*ppiVar3 < 0) || (piVar2 != *param_1)) {\n        ppiVar3 = (***piVar2)(param_1[1], 1);\n        if (ppiVar3 == NULL) {\n            fcn.00401103(0x8007000e);\n            pcVar1 = swi(3);\n            ppiVar3 = (*pcVar1)();\n            return ppiVar3;\n        }\n        ppiVar3[1] = param_1[1];\n        fcn.00451210(ppiVar3 + 4, param_1[1] + 1, param_1 + 4, param_1[1] + 1);\n    }\n    else {\n        LOCK();\n        *ppiVar3 = *ppiVar3 + 1;\n        ppiVar3 = param_1;\n    }\n    return ppiVar3;\n}\n",
        "token_count": 274
    },
    "00407f7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407f7b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 0x38);\n    while (iVar1 != 0) {\n        iVar1 = fcn.00424a72();\n        *(iVar1 + 0x54) = 0;\n        iVar1 = *(param_1 + 0x38);\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "004080ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004080ef(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint uStack20;\n    \n    iVar1 = param_1[0x13];\n    param_1[0x13] = 0;\n    while( true ) {\n        if (param_1[0xe] == 0) {\n            param_1[0x13] = iVar1;\n            (**(*param_1 + 0x6c))();\n            if (param_1[0x13] != 0) {\n                uStack20 = 0x40813f;\n                (**(*param_1 + 4))();\n            }\n            return;\n        }\n        piVar3 = fcn.004148fc();\n        if (piVar3 == NULL) break;\n        uStack20 = 0x408119;\n        (**(*param_1 + 0x94))();\n        uStack20 = 0x408120;\n        (**(*piVar3 + 0x60))();\n    }\n    uStack20 = 0x4a3540;\n    fcn.004515ca(&stack0xffffffec, 0x49617c);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 294
    },
    "004081fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004081fe(int32_t *param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    int32_t unaff_retaddr;\n    uint uStack16;\n    \n    if (param_4 == NULL) {\n        fcn.00401103(0x80004005);\n        param_4 = extraout_ECX;\n    }\n    if ((unaff_retaddr == 0) && (param_2 != 0)) {\n        uStack16 = 0x80070057;\n        fcn.00401103();\n        param_4 = extraout_ECX_00;\n    }\n    iVar1 = (***param_4)(param_2, 1);\n    if (iVar1 == 0) {\n        iVar1 = fcn.004021e0();\n    }\n    *param_1 = iVar1 + 0x10;\n    fcn.0040210d(param_2);\n    fcn.00451210(*param_1, param_2, uStack16, param_2);\n    return param_1;\n}\n",
        "token_count": 271
    },
    "00408339": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00408339(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 3;\n    fcn.00407f7b();\n    if (*(extraout_ECX + 0x28) != 0) {\n        (**(**(extraout_ECX + 0x28) + 0x60))(extraout_ECX);\n    }\n    *(unaff_EBP + -4) = 2;\n    fcn.00424b6d();\n    fcn.00401fb6();\n    fcn.00401fb6();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040965e();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 235
    },
    "00408459": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408459(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    if (arg_10h < 0) {\n        arg_10h = 0;\n    }\n    iVar1 = *(*in_ECX + -0xc);\n    iVar2 = fcn.00408196(arg_ch, arg_10h);\n    if (iVar1 < iVar2) {\n        arg_10h = *(*in_ECX + -0xc) - arg_ch;\n    }\n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    if (iVar2 < arg_ch) {\n        arg_10h = 0;\n    }\n    if ((arg_ch == 0) && (arg_10h == iVar2)) {\n        fcn.004081e0();\n    }\n    else {\n        uVar3 = fcn.00408297();\n        fcn.004082ba(iVar1 + arg_ch, arg_10h, uVar3);\n    }\n    return arg_8h;\n}\n",
        "token_count": 293
    },
    "0040854b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040854b(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_8h == 0) {\n        fcn.00401103(0x80070057);\n    }\n    iVar1 = fcn.00452026(arg_8h, arg_ch);\n    uVar2 = fcn.004023b3(iVar1);\n    fcn.00452229(uVar2, iVar1 + 1, arg_8h, arg_ch);\n    fcn.0040210d(iVar1);\n    return;\n}\n",
        "token_count": 141
    },
    "004085ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004085ac(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    iVar2 = *param_2;\n    piVar1 = iVar2 + -0x10;\n    piVar3 = *param_1 + -0x10;\n    if (piVar1 != piVar3) {\n        if ((*(*param_1 + -4) < 0) || (*piVar1 != *piVar3)) {\n            fcn.0040244c(iVar2, *(iVar2 + -0xc));\n        }\n        else {\n            iVar2 = fcn.00407f1a(piVar1);\n            fcn.00401fb6();\n            *param_1 = iVar2 + 0x10;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 208
    },
    "00408857": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408857(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint arg_8h_00;\n    uint var_208h;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    iVar1 = (**0x48145c)(arg_8h);\n    if (iVar1 < 0x104) goto code_r0x0040888a;\n    do {\n        fcn.0040a7d3(3, 0xffffffff, 0);\ncode_r0x0040888a:\n        iVar1 = fcn.0040b1d6(&var_108h, arg_8h);\n    } while (iVar1 == 0);\n    fcn.004024ff(&var_108h);\n    in_ECX[0x14] = 0;\n    arg_8h_00 = 0x100;\n    iVar1 = fcn.0040ac8c(&var_108h, &var_208h, 0x100);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0x50))(&var_208h);\n    }\n    if (arg_ch != 0) {\n        iVar1 = fcn.00419c68();\n        (**(**(iVar1 + 4) + 0x8c))(in_ECX[9]);\n    }\n    fcn.004510f7(arg_8h_00);\n    return;\n}\n",
        "token_count": 359
    },
    "00408ff8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408ff8(uint arg_8h, char *arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_10h_00;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *arg_10h;\n    if (iVar3 < 0) {\n        uVar6 = fcn.00401103(0x80070057);\n        iVar3 = uVar6 >> 0x20;\n        in_ECX = uVar6;\n    }\n    if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n        iVar2 = *in_ECX;\n        if (iVar3 < *(iVar2 + -0xc)) {\n            uVar4 = fcn.00408297();\n            fcn.00408cc8(*arg_10h + iVar2, uVar4);\n            return arg_8h;\n        }\n    }\n    else {\n        iVar2 = *in_ECX;\n        uVar1 = iVar2 + iVar3;\n        uVar5 = *(iVar2 + -0xc) + iVar2;\n        if (uVar1 < uVar5) {\n            iVar3 = fcn.00451e53(uVar1, arg_ch);\n            if (uVar1 + iVar3 < uVar5) {\n                arg_10h_00 = fcn.00451f2b(uVar1 + iVar3, arg_ch);\n                iVar2 = *arg_10h;\n                *arg_10h = iVar2 + iVar3 + 1 + arg_10h_00;\n                fcn.00408459(arg_8h, iVar2 + iVar3, arg_10h_00);\n                return arg_8h;\n            }\n        }\n    }\n    *arg_10h = -1;\n    uVar4 = fcn.00408297();\n    fcn.0040231f(uVar4);\n    return arg_8h;\n}\n",
        "token_count": 480
    },
    "00409a76": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409a76(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_ch == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_10h != 0) {\n            do {\n                arg_10h = arg_10h + -1;\n                arg_ch = fcn.004550a0(arg_ch, arg_14h);\n                if (arg_ch == 0) {\n                    fcn.00402193();\n                    return 0;\n                }\n                arg_ch = arg_ch + 1;\n            } while (arg_10h != 0);\n        }\n        iVar2 = fcn.004550a0(arg_ch, arg_14h);\n        if (iVar2 == 0) {\n            iVar2 = (**0x48145c)(arg_ch);\n        }\n        else {\n            iVar2 = iVar2 - arg_ch;\n        }\n        uVar1 = fcn.00409a55(iVar2, iVar2, arg_ch, iVar2);\n        fcn.00404383(uVar1);\n        fcn.004081bb(0xffffffff);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 296
    },
    "00409e12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00409e12(int32_t *param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    int32_t unaff_retaddr;\n    uint in_stack_fffffff0;\n    \n    if (param_4 == NULL) {\n        fcn.00401103(0x80004005);\n        param_4 = extraout_ECX;\n    }\n    if ((unaff_retaddr == 0) && (param_2 != 0)) {\n        in_stack_fffffff0 = 0x80070057;\n        fcn.00401103(0x80070057);\n        param_4 = extraout_ECX_00;\n    }\n    iVar1 = (***param_4)(param_2, 2);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00404949();\n    }\n    *param_1 = iVar1 + 0x10;\n    fcn.00404922(param_2);\n    fcn.004042ed(*param_1, param_2, in_stack_fffffff0, param_2);\n    return param_1;\n}\n",
        "token_count": 282
    },
    "00409e75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00409e75(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409d70();\n    *param_1 = iVar1;\n    if ((*param_2 != 0) && (iVar1 == 0)) {\n        fcn.00401103(0x8007000e);\n    }\n    return param_1;\n}\n",
        "token_count": 104
    },
    "00409f78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409f78(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    \n    if (arg_ch == 0) {\n        fcn.00404968();\n    }\n    else {\n        if (arg_8h == 0) {\n            fcn.00401103(0x80070057);\n        }\n        uVar1 = *(*in_ECX + -0xc);\n        uVar3 = arg_8h - *in_ECX >> 1;\n        iVar2 = fcn.00404abc(arg_ch);\n        if (uVar1 < uVar3) {\n            fcn.004042ed(iVar2, arg_ch, arg_8h, arg_ch);\n        }\n        else {\n            fcn.00409bd9(iVar2, arg_ch, iVar2 + uVar3 * 2);\n        }\n        fcn.00404922(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "0040a819": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040a819(int32_t param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t arg_10h;\n    \n    if (param_1 != 0) {\n        arg_10h = param_1;\n        arg_8h = fcn.0040a485(param_1, param_1, param_2);\n        fcn.0040a7d3(arg_8h, param_1, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0040a943": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040a943(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (**0x48148c)();\n        }\n        fcn.00419083();\n        if (uVar1 != unaff_EBX) {\n            (**0x481438)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0040ab9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ab9c(char *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_EDI;\n    uint var_624h;\n    uint var_620h;\n    uint var_61ch;\n    uint var_414h;\n    uint var_20ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    iVar2 = (**0x481464)(arg_8h, arg_ch);\n    if ((iVar2 == 0) && (iVar2 = (**0x48178c)(0x2a),  pcVar1 = *0x48145c,  iVar2 != 0)) {\n        iVar2 = (**0x48145c)(arg_8h);\n        iVar3 = (*pcVar1)(arg_ch);\n        if (iVar2 == iVar3) {\n            uVar4 = (**0x4813d8)();\n            pcVar1 = *0x481450;\n            (**0x481450)(uVar4, 1, arg_8h, 0xffffffff, &var_61ch);\n            (*pcVar1)(uVar4, 4, arg_8h, 0xffffffff, &var_20ch);\n            (*pcVar1)(uVar4, 1, arg_ch, 0xffffffff, &var_414h);\n            if (*arg_8h != '\\0') {\n                iVar2 = 0;\n                do {\n                    if (((*(&var_20ch + iVar2) & 0x80) != 0) && (*(&var_61ch + iVar2) != *(&var_414h + iVar2))) break;\n                    iVar2 = iVar2 + 2;\n                    arg_8h = fcn.004550d6(arg_8h);\n                } while (*arg_8h != '\\0');\n            }\n        }\n    }\n    fcn.004510f7(unaff_EDI);\n    return;\n}\n",
        "token_count": 464
    },
    "0040bbe5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bbe5(int32_t param_1)\n\n{\n    if (*(param_1 + 0x88) != NULL) {\n        (**(**(param_1 + 0x88) + 0x14))();\n    }\n    if (*(param_1 + 0x94) != 0) {\n        fcn.00429766(\"Settings\", \"PreviewPages\", *(param_1 + 0x94));\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0040bd7a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd7a(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = *0x481480;\n    if (*(in_ECX + 0x74) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (**0x481480)(*(in_ECX + 0x74));\n        iVar2 = (**0x4813a8)(*(iVar2 + 2) + iVar2, arg_8h);\n        if ((iVar2 == 0) && (iVar2 = fcn.004797a4(arg_8h, &var_4h, 0),  iVar2 != 0)) {\n            if (*(in_ECX + 0x70) != 0) {\n                fcn.00423ff0(*(in_ECX + 0x70));\n            }\n            uVar3 = fcn.0047979e(0, var_4h, arg_8h, 0, 0, 0);\n            uVar3 = (**0x48147c)(0x42, uVar3);\n            *(in_ECX + 0x70) = uVar3;\n            uVar3 = (*pcVar1)(uVar3);\n            iVar2 = fcn.0047979e(0, var_4h, arg_8h, uVar3, 0, 2);\n            if (iVar2 != 1) {\n                fcn.00423ff0(*(in_ECX + 0x70));\n                *(in_ECX + 0x70) = 0;\n            }\n            fcn.00479798(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 406
    },
    "0040c1f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040c3fd)\n\nvoid fcn.0040c1f3(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char **in_FS_OFFSET;\n    char *arg_8h;\n    char *pcStack304;\n    char *pcStack300;\n    uint auStack288 [65];\n    uchar uStack28;\n    uchar uStack27;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a5230 ^ auStack288;\n    auStack288[0] = 0x58;\n    fcn.00451106();\n    pcVar1 = *0x481420;\n    pcStack300 = (**0x481420)();\n    pcVar4 = *0x481424;\n    arg_8h = pcStack300;\n    pcVar3 = (**0x481424)();\n    if (pcVar3 == NULL) {\n        iVar5 = (**0x481488)();\n        if (iVar5 < 0) {\n            pcStack304 = &stack0xfffffec8;\n            arg_8h = NULL;\n            iVar5 = (**0x481018)();\n            if (iVar5 == 0) {\n                iVar5 = (**0x48101c)();\n                if (((iVar5 == 0) && (*0x10 == 0x165)) && (iVar5 = fcn.0045583b(),  pcVar1 = *0x48139c,  iVar5 == 1)) {\n                    (**0x48139c)();\n                    (*pcVar1)();\n                    pcStack304 = 0x2;\n                }\n                (**0x481030)();\n            }\n        }\n        else {\n            pcStack304 = \"ntdll.dll\";\n            iVar5 = (*pcVar1)();\n            if (iVar5 != 0) {\n                (**0x4813a0)();\n            }\n        }\n    }\n    else {\n        (*pcVar3)();\n        pcVar1 = *0x48139c;\n        (**0x48139c)();\n        (*pcVar1)();\n        arg_8h = \"GetSystemDefaultUILanguage\";\n        pcStack304 = 0x2;\n        pcVar4 = (*pcVar4)();\n        if (pcVar4 != NULL) {\n            (*pcVar4)();\n            (*pcVar1)();\n            (*pcVar1)();\n            pcStack304 = 0x4;\n        }\n    }\n    iVar5 = pcStack304 * 4;\n    pcStack304 = pcStack304 + 1;\n    *(&stack0xfffffeac + iVar5) = 0x800;\n    uStack27 = 0;\n    uStack28 = 0;\n    iVar5 = (**0x4813b8)();\n    if (iVar5 != 0) {\n        fcn.00451550();\n        fcn.0040b797();\n        cVar2 = fcn.0040b847();\n        if (cVar2 != '\\0') {\n            fcn.0040b87d();\n        }\n        iVar5 = 0;\n        if (0 < pcStack304) {\n            do {\n                iVar6 = fcn.0040bebc(*(&stack0xfffffeac + iVar5 * 4));\n                if (iVar6 != 0) break;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < pcStack304);\n        }\n        fcn.0040bf89();\n    }\n    *in_FS_OFFSET = pcStack300;\n    fcn.004510f7(arg_8h);\n    return;\n}\n",
        "token_count": 799
    },
    "0040cf11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040cf11(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00419c68();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.004196b5();\n        uVar2 = (**0x481398)();\n        uVar2 = (**0x48175c)(0xffffffff, 0x40cd7d, 0, uVar2);\n        *(iVar1 + 0x2c) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "0040d557": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040d557(int32_t *param_1)\n\n{\n    if (1 < *(*param_1 + -4)) {\n        fcn.004021eb(*(*param_1 + -0xc));\n    }\n    return *param_1;\n}\n",
        "token_count": 63
    },
    "0040da0a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040da0a(int32_t param_1)\n\n{\n    if (*(param_1 + 0x58) != 0) {\n    // WARNING: Could not recover jumptable at 0x0040da15. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(param_1 + 0x58) + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0040dba8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040dba8(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (**0x48148c)();\n        }\n        fcn.00419083();\n        if (uVar1 != unaff_EBX) {\n            (**0x481438)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0040dbdd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040dbdd(uint param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0040be6f();\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x120))();\n        if ((iVar2 != 0) && (piVar1[0x20] != NULL)) {\n            (**(*piVar1[0x20] + 100))(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0040dcbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040dcbc(int32_t param_1, uint param_2, uint32_t param_3, int32_t param_4)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uchar *arg_10h;\n    int32_t *arg_8h_00;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [108];\n    uchar auStack160 [151];\n    uchar uStack9;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a5230 ^ auStack160;\n    fcn.0040dbdd(0);\n    arg_8h_00 = &iStack272;\n    arg_8h = fcn.0040dc11(0);\n    if (arg_8h != iStack272) {\n        (**0x481858)(arg_8h, 1);\n    }\n    iStack280 = 0;\n    (**0x481744)(arg_8h, &iStack280);\n    if ((((arg_8h == 0) || (iVar1 = (**0x481374)(),  iStack280 != iVar1)) ||\n        (piVar2 = (**0x48183c)(arg_8h, 0x376, 0, 0),  piVar2 == NULL)) && (piVar2 = NULL,  param_1 != 0)) {\n        piVar2 = param_1 + 0x78;\n    }\n    iStack276 = 0;\n    if ((piVar2 != NULL) && (iStack276 = *piVar2,  param_4 != 0)) {\n        *piVar2 = param_4 + 0x30000;\n    }\n    if ((param_3 & 0xf0) == 0) {\n        if ((param_3 & 0xf) < 2) {\n            param_3 = param_3 | 0x30;\n        }\n        else if ((param_3 & 0xf) - 3 < 2) {\n            param_3 = param_3 | 0x20;\n        }\n    }\n    auStack268[0] = 0;\n    if (param_1 == 0) {\n        arg_10h = auStack268;\n        iVar1 = (**0x4813b8)(0, arg_10h, 0x104);\n        if (iVar1 == 0x104) {\n            uStack9 = 0;\n        }\n    }\n    else {\n        arg_10h = *(param_1 + 0x50);\n    }\n    fcn.0040db46(arg_8h, param_2, arg_10h, param_3);\n    if (piVar2 != NULL) {\n        *piVar2 = iStack276;\n    }\n    if (iStack272 != 0) {\n        (**0x481858)(iStack272, 1);\n    }\n    fcn.0040dbdd(1);\n    fcn.004510f7(arg_8h_00);\n    return;\n}\n",
        "token_count": 697
    },
    "0040deee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040deee(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) != 0) {\n    // WARNING: Could not recover jumptable at 0x0040def9. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x4c) + 0x54))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0040df23": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040df23(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (**0x481738)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040df48. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x6c))();\n    return;\n}\n",
        "token_count": 150
    },
    "0040df4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040df4b(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        uVar1 = (**0x481734)(*(param_1 + 0x20), param_2);\n        fcn.00413d94(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040df6c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x74))();\n    return;\n}\n",
        "token_count": 153
    },
    "0040df6f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040df6f(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        uVar1 = (**0x481734)(*(param_1 + 0x20), param_2);\n        *unaff_retaddr = uVar1;\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040df90. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x70))();\n    return;\n}\n",
        "token_count": 159
    },
    "0040df93": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040df93(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (**0x481730)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040dfb8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x78))();\n    return;\n}\n",
        "token_count": 150
    },
    "0040dfbb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dfbb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (**0x48172c)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040dfe0. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x7c))();\n    return;\n}\n",
        "token_count": 152
    },
    "0040dfe3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dfe3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (**0x481728)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e00b. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x80))();\n    return;\n}\n",
        "token_count": 162
    },
    "0040e011": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e011(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (**0x481724)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e036. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x84))();\n    return;\n}\n",
        "token_count": 149
    },
    "0040e0b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e0b4(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (**0x481748)(*(param_1 + 0x20), 0xfffffff0);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e0cb. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x78))();\n    return;\n}\n",
        "token_count": 125
    },
    "0040e0ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e0ce(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (**0x481748)(*(param_1 + 0x20), 0xffffffec);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e0e5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x7c))();\n    return;\n}\n",
        "token_count": 125
    },
    "0040e0e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e0e8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        fcn.00411ae0(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e10c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x80))();\n    return;\n}\n",
        "token_count": 151
    },
    "0040e112": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e112(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        fcn.00411afa(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e136. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x84))();\n    return;\n}\n",
        "token_count": 147
    },
    "0040e13c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040e13c(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 != 0) goto code_r0x0040e148;\n    while( true ) {\n        fcn.00403bf2();\ncode_r0x0040e148:\n        iVar1 = (**0x481710)(*(param_1 + 0x20));\n        if (iVar1 != 0) break;\n        if (*(param_1 + 0x50) != 0) {\ncode_r0x0040e15a:\n    // WARNING: Could not recover jumptable at 0x0040e160. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(**(param_1 + 0x50) + 0x88))();\n            return;\n        }\n    }\n    if (*(param_1 + 0x50) == 0) {\n        (**0x481714)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    goto code_r0x0040e15a;\n}\n",
        "token_count": 253
    },
    "0040e198": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040e198(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (**0x481708)(*(param_1 + 0x20), 0xfffffff4, param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e1b5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x94))();\n    return;\n}\n",
        "token_count": 134
    },
    "0040e1bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e1bb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        (**0x481704)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    else {\n        (**(**(in_ECX + 0x50) + 0x98))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0040e1f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040e1f9(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (**0x481700)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e214. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa0))();\n    return;\n}\n",
        "token_count": 128
    },
    "0040e21a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e21a(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (**0x481750)(*(param_1 + 0x20));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e22f. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa4))();\n    return;\n}\n",
        "token_count": 118
    },
    "0040e235": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040e235(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (**0x481858)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e250. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa8))();\n    return;\n}\n",
        "token_count": 126
    },
    "0040e256": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e256(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x50) == 0) {\n        uVar1 = (**0x4816fc)(*(param_1 + 0x20));\n        fcn.00413d94(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e271. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xb0))();\n    return;\n}\n",
        "token_count": 140
    },
    "0040e31a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040e31a(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    if ((*(param_1 + 0x50) == 0) && (*(param_2 + 0x4c) != 0)) {\n        (**(**(param_2 + 0x4c) + 0x9c))(param_1, param_3);\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "0040e33f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e33f(uint *param_1)\n\n{\n    if (param_1[1] != 0) {\n    // WARNING: Could not recover jumptable at 0x0040e34a. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*param_1[1] + 0x78))();\n        return;\n    }\n    (**0x481748)(*param_1, 0xfffffff0);\n    return;\n}\n",
        "token_count": 110
    },
    "0040e533": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e533(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        if (arg_8h != 0) {\n            arg_8h = *(arg_8h + 0x20);\n        }\n        (**0x4816f4)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e569. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x9c))();\n    return;\n}\n",
        "token_count": 216
    },
    "0040e56f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e56f(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (*(param_1 + 0x50) == 0)) {\n        uVar1 = (**0x4817a0)(*(param_1 + 0x20));\n        iVar2 = fcn.004239a5(uVar1);\n        if ((iVar2 != 0) && (*(iVar2 + 0x4c) != 0)) {\n            (**(**(iVar2 + 0x4c) + 0x9c))(param_1, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0040e651": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040e651(int32_t *arg_8h, code *arg_ch)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t in_ECX;\n    bool bVar9;\n    uint uVar10;\n    code *var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = *0x481740;\n    if (*(in_ECX + 0x4c) == 0) {\n        piVar3 = NULL;\n    }\n    else {\n        if ((*(in_ECX + 0x3c) & 0x800) == 0) {\n            uVar10 = 5;\n            uVar4 = *(in_ECX + 0x20);\n            while( true ) {\n                uVar4 = (*pcVar2)(uVar4, uVar10);\n                iVar5 = fcn.00413d94(uVar4);\n                if (iVar5 == 0) break;\n                uVar8 = fcn.0040e0ce();\n                if ((((uVar8 & 0x10000) != 0) && (uVar8 = fcn.0040e0b4(),  (uVar8 & 0x10000000) != 0)) &&\n                   (uVar8 = fcn.0040e0b4(),  (uVar8 & 0x8000000) == 0)) goto code_r0x0040e746;\n                uVar4 = *(iVar5 + 0x20);\n                uVar10 = 2;\n            }\n        }\n        if (arg_ch == NULL) {\n            var_8h = 0x40e619;\n            arg_ch = 0x407ecc;\n        }\n        else {\n            var_8h = 0x40e61e;\n            arg_ch = 0x40e449;\n        }\n        var_4h = (*arg_ch)();\njoined_r0x0040e6f1:\n        do {\n            if (var_4h == 0) goto code_r0x0040e746;\n            ppiVar6 = (*var_8h)(&var_4h);\n            piVar1 = *ppiVar6;\n            if (arg_8h == NULL) {\n                if (piVar1[1] == 0) {\n                    iVar5 = *piVar1;\n                }\n                else {\n                    iVar5 = *(piVar1[1] + 0x24);\n                }\n                if ((iVar5 != 0) && (iVar7 = (**0x48179c)(),  iVar5 == iVar7)) break;\n                if (piVar1[1] == 0) goto joined_r0x0040e6f1;\n                bVar9 = piVar1[1] == *(*(in_ECX + 0x4c) + 0x70);\n            }\n            else {\n                bVar9 = arg_8h == piVar1;\n            }\n        } while (!bVar9);\n        if (piVar1 == NULL) {\ncode_r0x0040e746:\n            piVar3 = NULL;\n        }\n        else {\n            do {\n                if (var_4h == 0) {\n                    var_4h = (*arg_ch)();\n                }\n                ppiVar6 = (*var_8h)(&var_4h);\n                piVar3 = *ppiVar6;\n                uVar8 = fcn.0040e33f();\n            } while ((piVar3 != piVar1) &&\n                    ((((uVar8 & 0x10000) == 0 || ((uVar8 & 0x8000000) != 0)) || ((uVar8 & 0x10000000) == 0))));\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 885
    },
    "0040e7a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e7a8(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    uint *puVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = *0x48183c;\n    if (*(in_ECX + 0x4c) == 0) {\n        return;\n    }\n    if (arg_8h == NULL) {\n        return;\n    }\n    if ((arg_8h[2] == 0) || (iVar2 = (**0x48183c)(*arg_8h, 0xf0, 0, 0),  puVar4 = arg_8h,  iVar2 != 1)) {\n        puVar3 = fcn.00424b25(arg_8h, 0);\n        puVar6 = &arg_8h;\n        arg_8h = puVar3;\n        fcn.0040e44d(puVar6);\n        do {\n            if (arg_8h == NULL) {\ncode_r0x0040e84d:\n                arg_8h = puVar3;\n                fcn.0040e466(&arg_8h, puVar6);\n                while( true ) {\n                    if (arg_8h == NULL) {\n                        return;\n                    }\n                    puVar4 = fcn.0040e466(&arg_8h);\n                    puVar4 = *puVar4;\n                    if ((puVar4[2] != 0) && (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 == 1)) break;\n                    uVar5 = fcn.0040e33f();\n                    if ((uVar5 & 0x20000) != 0) {\n                        return;\n                    }\n                }\n                break;\n            }\n            puVar6 = &arg_8h;\n            puVar4 = fcn.0040e44d();\n            puVar4 = *puVar4;\n            uVar5 = fcn.0040e33f();\n            if ((uVar5 & 0x20000) != 0) goto code_r0x0040e84d;\n        } while ((puVar4[2] == 0) || (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 != 1));\n    }\n    (*pcVar1)(*puVar4, 0xf1, 0, 0);\n    return;\n}\n",
        "token_count": 596
    },
    "0040e8da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040e8da(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    fcn.0040e3fd(param_1);\n    iVar1 = param_2;\n    while ((0 < iVar1 && (*(param_1 + 4) != 0))) {\n        if (*(param_2 + 4) != 0) {\n            fcn.00407ed0(param_2 + 4);\n        }\n        iVar1 = iVar1 + -1;\n    }\n    return param_2;\n}\n",
        "token_count": 131
    },
    "0040e934": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040e934(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    if (*(extraout_ECX + 0x50) == 0) {\n        (**0x4816f0)(*(extraout_ECX + 0x20), *(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    else {\n        uVar2 = fcn.00409b56();\n        fcn.0040231f(uVar2);\n        iVar1 = **(extraout_ECX + 0x50);\n        *(unaff_EBP + -4) = 0;\n        (**(iVar1 + 0x8c))(unaff_EBP + -0x10);\n        fcn.00403c40(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x10), 0xffffffff);\n        (**0x48145c)(*(unaff_EBP + 8));\n        fcn.00401fb6();\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 331
    },
    "0040eca6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040eca6(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x4c) != 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.0040eb3e();\n        }\n        else {\n            iVar1 = fcn.0040eaf5(arg_8h);\n        }\n        if ((iVar1 != 0) && (fcn.0040ec2b(),  iVar1 != 0)) {\n            return *(iVar1 + 8);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 163
    },
    "0040ecf4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ecf4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x4c) != 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.0040eb3e();\n        }\n        else {\n            iVar1 = fcn.0040eaf5(arg_8h);\n        }\n        if ((iVar1 != 0) && (fcn.0040ebb0(),  iVar1 != 0)) {\n            return *(iVar1 + 8);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 163
    },
    "0040edf8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040edf8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    fcn.0042c474();\n    if ((*(param_1 + 0x40) != 0) && (*(param_1 + 0x68) == 0)) {\n        iVar1 = fcn.00419c68();\n        uVar3 = *(iVar1 + 0xc);\n        uVar2 = (**0x4816e0)(uVar3, *(param_1 + 0x40));\n        *(param_1 + 0x68) = uVar2;\n        uVar3 = (**0x4816e4)(uVar3, *(param_1 + 0x40));\n        *(param_1 + 0x6c) = uVar3;\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0040f13a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040f13a(int32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (*(param_1 + 0xd4) == 0) {\n        if (param_2 != NULL) {\n            *param_2 = 0;\n        }\n        iVar1 = 0;\n    }\n    else {\n        uVar2 = (**0x48183c)(*(param_1 + 0xd4), 0x229, 0, param_2);\n        iVar1 = fcn.00413dbb(uVar2);\n        if ((((iVar1 != 0) && (*(iVar1 + 0xd8) != 0)) && (uVar3 = fcn.0040e0b4(),  (uVar3 & 0x10000000) == 0)) &&\n           (iVar1 = 0,  param_2 != NULL)) {\n            *param_2 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 242
    },
    "0040f4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040f4a0(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (**0x48148c)();\n        }\n        fcn.00419083();\n        if (uVar1 != unaff_EBX) {\n            (**0x481438)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0040fe92": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fe92(int32_t arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    in_ECX[0x36] = 0;\n    fcn.0040fc07(0);\n    piVar2 = fcn.0041ea1c();\n    if ((arg_8h == 0) && (piVar2 != NULL)) {\n        (**(*piVar2 + 0x160))(0, piVar2, piVar2);\n    }\n    bVar1 = false;\n    if (in_ECX[0x20] != NULL) {\n        iVar3 = (**(*in_ECX[0x20] + 0x5c))(arg_8h);\n        if (iVar3 != 0) {\n            bVar1 = true;\n            goto code_r0x0040ff04;\n        }\n    }\n    uVar4 = 0;\n    if ((arg_8h != 0) || (arg_ch != 0)) {\n        uVar4 = 1;\n    }\n    (**(*in_ECX + 0x160))(uVar4);\ncode_r0x0040ff04:\n    if ((arg_8h != 0) && (piVar2 != NULL)) {\n        uVar4 = (**0x481770)();\n        iVar3 = fcn.00413d94(uVar4);\n        iVar5 = fcn.0040f2cc();\n        if (iVar5 == iVar3) {\n            (**(*piVar2 + 0x160))(1, piVar2, piVar2);\n        }\n    }\n    if (!bVar1) {\n        (**(*in_ECX + 0x178))(arg_8h, arg_ch, 0);\n        iVar3 = fcn.0040f2cc();\n        (**0x4816cc)(*(iVar3 + 0x20));\n    }\n    return;\n}\n",
        "token_count": 465
    },
    "0041048a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041048a(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[8] != NULL) {\n        fcn.00413fd3();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004147ac();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 160
    },
    "00410a50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410a50(uint *param_1, int32_t param_2)\n\n{\n    uint *extraout_ECX;\n    \n    if (param_2 == 0) {\n        fcn.00401103(0x80004005);\n        param_1 = extraout_ECX;\n    }\n    fcn.00455c00(*param_1, param_2);\n    return;\n}\n",
        "token_count": 93
    },
    "00410f6f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00410f6f(void)\n\n{\n    uint *arg_8h;\n    uint var_98h;\n    uint var_94h;\n    uint var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    fcn.00451550(&var_94h, 0, 0x90);\n    arg_8h = &var_98h;\n    var_98h = 0x94;\n    (**0x48136c)();\n    fcn.004510f7(arg_8h);\n    return;\n}\n",
        "token_count": 141
    },
    "00411104": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411104(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.00410fc7();\n    pcVar1 = *0x48178c;\n    if (iVar2 == 0) {\n        if (((arg_10h & 3) == 0) &&\n           ((((arg_8h < 0 || (iVar2 = (**0x48178c)(0),  iVar2 <= arg_8h)) || (arg_ch < 0)) ||\n            (iVar2 = (*pcVar1)(1),  iVar2 <= arg_ch)))) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 0x12340042;\n        }\n    }\n    else {\n        uVar3 = (**0x4a813c)(arg_8h, arg_ch, arg_10h);\n    }\n    return uVar3;\n}\n",
        "token_count": 232
    },
    "00411395": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411395(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00410fc7();\n    if (iVar1 == 0) {\n        if ((arg_8h == 0) && (arg_ch == 0)) {\n            if ((arg_10h == NULL) || (*arg_10h < 0x1a8)) {\n                uVar2 = 0;\n            }\n            else {\n                fcn.00455c13(arg_10h + 1, 0x20, \"DISPLAY\", 0x1f);\n                fcn.00455c13(arg_10h + 9, 0x80, \"DISPLAY\", 0x1f);\n                arg_10h[0x29] = 5;\n                uVar2 = 1;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n        return uVar2;\n    }\n    // WARNING: Could not recover jumptable at 0x004113a2. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar2 = (**0x4a8148)();\n    return uVar2;\n}\n",
        "token_count": 289
    },
    "004119d3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004119d3(uint noname_0, int32_t arg_ch, uint32_t arg_10h, uint noname_3, int32_t arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    uVar3 = 0;\n    if (arg_10h != 0) {\n        do {\n            bVar1 = false;\n            uVar4 = 0;\n            do {\n                iVar2 = (**0x481368)(*(arg_ch + uVar3 * 4), *(uVar4 + 0x4a3920));\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *(arg_18h + uVar3 * 4) = *(uVar4 + 0x4a38d0);\n                }\n                uVar4 = uVar4 + 4;\n            } while (uVar4 < 0x4c);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 300
    },
    "00411c2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00411c2e(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 169
    },
    "00411d41": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00411d41(int32_t *param_1, int32_t param_2, uint *param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_1[8];\n    if (param_2 != 2) {\n        iVar1 = (**(*param_1 + 0x70))(param_2);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x20);\n            param_2 = 2;\n        }\n    }\n    *param_3 = 0x1c;\n    (**0x481674)(iVar2, param_2, param_3, param_4);\n    return 1;\n}\n",
        "token_count": 169
    },
    "00411d7e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00411d7e(int32_t *param_1, int32_t param_2, uint *param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_1[8];\n    if (param_2 != 2) {\n        iVar1 = (**(*param_1 + 0x70))(param_2);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x20);\n            param_2 = 2;\n        }\n    }\n    *param_3 = 0x1c;\n    param_3[1] = param_4;\n    (**0x481670)(iVar2, param_2, param_3);\n    return;\n}\n",
        "token_count": 176
    },
    "00411dc9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411dc9(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_8h;\n    \n    uVar2 = (**0x4817a0)(arg_ch);\n    if ((arg_8h == NULL) || (*arg_8h != 0)) {\n        (**0x48169c)(arg_ch, &var_10h);\n        pcVar1 = *0x481800;\n        (**0x481800)(uVar2, &var_10h);\n        (*pcVar1)(uVar2, &var_8h);\n        iVar3 = (**0x481664)(&var_10h, arg_10h);\n        if (iVar3 == 0) {\n            if (arg_8h == NULL) {\n                (**0x4816f4)(arg_ch, 0, *arg_10h, arg_10h[1], arg_10h[2] - *arg_10h, arg_10h[3] - arg_10h[1], 0x14);\n            }\n            else {\n                iVar3 = (**0x481668)(*arg_8h);\n                *arg_8h = iVar3;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "00411e55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00411e55(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = fcn.0040e0ce();\n    if (param_2 == 0) {\n        uVar1 = uVar1 & 0xfffffdff;\n    }\n    uVar2 = fcn.0040e0b4(0, uVar1);\n    (**0x4816b4)(param_1, uVar2);\n    return;\n}\n",
        "token_count": 121
    },
    "004123c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004123c0(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00412456": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00412456(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (**0x48148c)();\n        }\n        fcn.00419083();\n        if (uVar1 != unaff_EBX) {\n            (**0x481438)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004124ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004124ea(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (**0x48148c)();\n        }\n        fcn.00419083();\n        if (uVar1 != unaff_EBX) {\n            (**0x481438)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00412767": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00412767(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = fcn.00419cdb();\n    if ((*(iVar4 + 0x3c) != 0) && (iVar1 = *(*(iVar4 + 0x3c) + 0x20),  iVar1 != 0)) {\n        (**0x48183c)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0x50);\n    if ((param_1 != 0) && (piVar2 != NULL)) {\n        iVar3 = (**0x481774)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0x164))(0xffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00412a3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412a3c(int32_t *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    \n    if (param_2 == 3) {\n        fcn.00412a3c(0, param_3);\n        param_2 = 1;\n    }\n    iVar1 = (**(*param_1 + 0x70))(param_2);\n    if (iVar1 == 0) {\n        (**0x481654)(param_1[8], param_2, unaff_ESI);\n    }\n    else {\n        fcn.0040e235();\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00412ac6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412ac6(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint *puStack8;\n    \n    iVar3 = (**0x4817b0)(*(in_ECX + 0x20));\n    pcVar1 = *0x481740;\n    if (((iVar3 == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        uVar4 = 5;\n        iVar3 = *(in_ECX + 0x20);\n        while (iVar3 = (*pcVar1)(iVar3, uVar4),  iVar3 != 0) {\n            (**0x48169c)(iVar3, &fcn.00412ac6::var_10h);\n            puStack8 = &fcn.00412ac6::var_10h;\n            uStack12 = 0x412b0b;\n            fcn.004064be();\n            iVar2 = var_ch;\n            uStack12 = 0x15;\n            var_ch = 0;\n            var_10h = 0;\n            (**0x4816f4)(iVar3, 0, arg_8h, iVar2 + arg_ch);\n            uVar4 = 2;\n        }\n    }\n    else {\n        (**0x481634)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    if ((*(in_ECX + 0x4c) != 0) && (arg_10h == 0)) {\n        (**(**(in_ECX + 0x4c) + 0x5c))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 452
    },
    "00413584": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00413584(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 0;\n    if (*(param_1 + 0x4c) != 0) {\n        iVar1 = *(*(param_1 + 0x4c) + 0x44);\n        while (iVar1 != 0) {\n            piVar2 = fcn.0040e44d();\n            if ((*(*piVar2 + 4) != 0) && (*(*(*piVar2 + 4) + 0x74) != 0)) {\n                iVar3 = iVar3 + 1;\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 181
    },
    "004135ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004135ca(uint arg_8h, uint noname_1, int32_t arg_10h, uint noname_3, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t *arg_20h, int32_t *arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.004120ae(arg_18h, arg_1ch, arg_20h, arg_24h, arg_8h);\n    if (iVar1 < 0) {\n        (**(**(in_ECX + 0x28) + 0x20))(*(in_ECX + 0x28), &var_4h);\n        iVar2 = fcn.00413584();\n        if (arg_10h <= iVar2 + var_4h) {\n            var_8h = *(*(in_ECX + 0x4c) + 0x44);\n            while (var_8h != 0) {\n                piVar3 = fcn.0040e44d(&var_8h);\n                iVar2 = *(*piVar3 + 4);\n                if (iVar2 != 0) {\n                    if (*(iVar2 + 0x74) != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    if (var_4h == arg_10h) {\n                        iVar1 = *(*piVar3 + 4);\n                        var_18h = *(iVar1 + 0x30);\n                        var_14h = *(iVar1 + 0x34);\n                        var_10h = *(iVar1 + 0x38);\n                        var_ch = *(iVar1 + 0x3c);\n                        fcn.004064fa(&var_18h);\n                        *arg_18h = var_18h;\n                        *arg_1ch = var_14h;\n                        *arg_20h = var_10h - var_18h;\n                        *arg_24h = var_ch - var_14h;\n                        iVar1 = 0;\n                    }\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 555
    },
    "00413ac7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00413ac7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        iVar1 = (**0x481420)(*(param_1 + 0xc));\n        *(param_1 + 4) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = (**0x4813fc)(*(param_1 + 0xc));\n            *(param_1 + 4) = iVar1;\n            *(param_1 + 8) = iVar1 != 0;\n        }\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 148
    },
    "00413af9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00413af9(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uVar1 = fcn.00413ac7(\"InitCommonControls\");\n        uVar1 = (**0x481424)(uVar1);\n        *(param_1 + 0x10) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x10);\n    return;\n}\n",
        "token_count": 120
    },
    "00413b86": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00413b86(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) != 2) {\n        fcn.00419083(0, *(unaff_EBP + -0x1c));\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00413b97": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00413b97(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x14) == 0) {\n        uVar1 = fcn.00413ac7(\"InitCommonControlsEx\");\n        uVar1 = (**0x481424)(uVar1);\n        *(param_1 + 0x14) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x14);\n    return;\n}\n",
        "token_count": 121
    },
    "00413c36": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00413c36(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00413d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00413d20(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00451106(0);\n    iVar1 = fcn.00419cdb();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00403a8b(0x424023);\n        iVar3 = fcn.00403a9d(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00423bd7(0x483d5c, 0x413a8b, 0x4122ac, 0x20, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar4;\n        fcn.00403a8b(uVar2);\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 318
    },
    "00413e3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00413e3c(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uStack16;\n    \n    iVar3 = fcn.00422fa4(0x403c0c);\n    if (iVar3 == 0) {\n        uStack16 = 0x4a3540;\n        fcn.004515ca(&stack0xfffffff0, 0x49617c);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar4 = fcn.00419c68();\n    if ((*(iVar4 + 0x14) != '\\0') && (*(iVar3 + 0x28) != 0)) {\n        uStack16 = 0x413e70;\n        (**0x481624)();\n        *(iVar3 + 0x28) = 0;\n    }\n    if (*(iVar3 + 0x14) != 0) {\n        *(iVar3 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 259
    },
    "00413ec2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413ec2(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    \n    iVar2 = fcn.0040c7a5();\n    if (iVar2 == 0) goto code_r0x00413f0d;\n    if (*(iVar2 + 0x20) == param_1) {\n        iVar3 = fcn.00419c68();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.00419c68();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.0042a51b();\n                if (iVar3 == 0) goto code_r0x00413f02;\n            }\n            fcn.0040bc7b(0);\n        }\ncode_r0x00413f02:\n        *(iVar2 + 0x20) = 0;\n    }\n    if (*(iVar2 + 0x24) == param_1) {\n        *(iVar2 + 0x24) = 0;\n    }\ncode_r0x00413f0d:\n    if (param_1[0x12] != NULL) {\n        (**(*param_1[0x12] + 0x50))();\n        param_1[0x12] = 0;\n    }\n    if (param_1[0x13] != NULL) {\n        (**(*param_1[0x13] + 4))(1);\n    }\n    param_1[0x13] = 0;\n    if ((*(param_1 + 0xf) & 1) != 0) {\n        iVar2 = fcn.00419cdb();\n        iVar2 = *(iVar2 + 0x3c);\n        if ((iVar2 != 0) && (*(iVar2 + 0x20) != 0)) {\n            fcn.00451550(&var_30h, 0, 0x30);\n            var_28h = param_1[8];\n            var_30h = 0x28;\n            var_2ch = 1;\n            var_24h = var_28h;\n            (**0x48183c)(*(iVar2 + 0x20), 0x405, 0, &var_30h);\n        }\n    }\n    pcVar1 = *0x481748;\n    iVar2 = (**0x481748)(param_1[8], 0xfffffffc);\n    fcn.00413cf0();\n    iVar3 = (*pcVar1)(param_1[8], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0xf0))();\n        if (*piVar4 != 0) {\n            (**0x481708)(param_1[8], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.00413e0e();\n    (**(*param_1 + 0x114))();\n    return;\n}\n",
        "token_count": 721
    },
    "00414111": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414111(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (**0x481734)(arg_8h, arg_ch);\n    pcVar1 = *0x481620;\n    if (iVar2 != 0) {\n        iVar3 = (**0x481620)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.00414111(iVar2, arg_ch, arg_10h),  iVar3 != 0)) {\n            return;\n        }\n        if (arg_10h == 0) {\n            fcn.00413d94();\n            return;\n        }\n        iVar2 = fcn.00413dbb(iVar2);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)(arg_8h);\n    while( true ) {\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar3 = fcn.00414111(iVar2, arg_ch, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (**0x481740)(iVar2, 2);\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "00414188": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00414188(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t in_ECX;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_20h;\n    var_ch = 0;\n    var_10h = 0;\n    if (arg_1ch == NULL) {\n        (**0x4816bc)(*(in_ECX + 0x20), &var_20h);\n    }\n    else {\n        var_20h = *arg_1ch;\n        var_1ch = arg_1ch[1];\n        var_18h = arg_1ch[2];\n        var_14h = arg_1ch[3];\n    }\n    uVar2 = arg_14h & 0xffff7fff;\n    if (uVar2 == 1) {\n        var_24h = 0;\n    }\n    else {\n        var_24h = (**0x481618)(8);\n    }\n    for (iVar3 = (**0x481620)(*(in_ECX + 0x20)); iVar3 != 0; iVar3 = (**0x481740)(iVar3, 2)) {\n        uVar4 = (**0x48170c)(iVar3);\n        uVar4 = uVar4 & 0xffff;\n        iVar5 = fcn.00413dbb(iVar3);\n        iVar1 = iVar3;\n        if ((((uVar4 != arg_10h) && (iVar1 = var_4h,  arg_8h <= uVar4)) && (uVar4 <= arg_ch)) && (iVar5 != 0)) {\n            (**0x48183c)(iVar3, 0x361, 0, &var_24h);\n            iVar1 = var_4h;\n        }\n        var_4h = iVar1;\n    }\n    if (uVar2 == 1) {\n        if (arg_20h == 0) {\n            arg_18h[2] = var_10h;\n            arg_18h[1] = 0;\n            *arg_18h = 0;\n            arg_18h[3] = var_ch;\n        }\n        else {\n            (**0x48166c)(arg_18h, &var_20h);\n        }\n    }\n    else {\n        if ((arg_10h != 0) && (var_4h != 0)) {\n            piVar6 = fcn.00413d94(var_4h);\n            if (uVar2 == 2) {\n                var_20h = var_20h + *arg_18h;\n                var_1ch = var_1ch + arg_18h[1];\n                var_18h = var_18h - arg_18h[2];\n                var_14h = var_14h - arg_18h[3];\n            }\n            if ((arg_14h & 0x8000) == 0) {\n                (**(*piVar6 + 0x68))(&var_20h, 0);\n                fcn.00411dc9(&var_24h, var_4h, &var_20h);\n            }\n        }\n        if (var_24h != 0) {\n            (**0x48161c)(var_24h);\n        }\n    }\n    return;\n}\n",
        "token_count": 907
    },
    "004143d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004143d7(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 9) != '\\0') {\n        var_4h = NULL;\n        iVar2 = (**(*in_ECX + 0xe4))(arg_8h, arg_ch, &var_4h);\n        if (-1 < iVar2) {\n            return var_4h;\n        }\n    }\n    piVar1 = fcn.00413cf0();\n    return piVar1;\n}\n",
        "token_count": 163
    },
    "0041466e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0041466e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_44h;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00451139(0x38);\n    iVar1 = fcn.00422fa4(0x403c0c);\n    iVar4 = 0;\n    *(unaff_EBP + -0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.00403bf2();\n        iVar4 = extraout_EDX;\n    }\n    puVar5 = iVar1 + 0x58;\n    puVar6 = unaff_EBP + -0x44;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(iVar1 + 0x58) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x60) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x5c) = iVar3;\n    *(iVar1 + 100) = uVar2;\n    *(unaff_EBP + -4) = iVar4;\n    if ((iVar3 == 2) && (arg_8h_00[0x13] != iVar4)) {\n        (**(*arg_8h_00[0x13] + 0x60))(iVar4);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.004126ad(arg_8h_00, unaff_EBP + -0x28, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h_00 + 0x108))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.004145f2(arg_8h_00, unaff_EBP + -0x28, *(unaff_EBP + 8));\n    }\n    puVar5 = unaff_EBP + -0x44;\n    puVar6 = iVar1 + 0x58;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 802
    },
    "004147ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004147ac(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[8] != NULL) && (extraout_ECX != 0x4a8160)) && (extraout_ECX != 0x4a81b8)) &&\n       ((extraout_ECX != 0x4a8210 && (extraout_ECX != 0x4a8268)))) {\n        fcn.00413fd3();\n    }\n    if (extraout_ECX[0x13] != NULL) {\n        (**(*extraout_ECX[0x13] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x28) == extraout_ECX)) {\n        *(pcVar1 + 0x28) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040965e();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 338
    },
    "0041493b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0041493b(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[8] != 0)) {\n        iVar2 = (**(*param_1 + 0x120))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.004148fc();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.004148fc();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 184
    },
    "0041497a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041497a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = *0x481620;\n    for (arg_8h_00 = (**0x481620)(arg_8h); arg_8h_00 != 0; arg_8h_00 = (**0x481740)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (**0x48183c)(arg_8h_00, arg_ch, arg_10h, arg_14h);\n        }\n        else {\n            iVar2 = fcn.00413dbb(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0041466e(iVar2, *(iVar2 + 0x20), arg_ch, arg_10h, arg_14h);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0041497a(arg_8h_00, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 339
    },
    "00414ba4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414ba4(int32_t arg_8h, int32_t arg_ch, ushort *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    if (*(in_ECX + 0x4c) != 0) {\n        var_8h = arg_8h;\n        var_4h = arg_ch;\n        (**0x481800)(*(in_ECX + 0x20), &var_8h);\n        iVar2 = fcn.00414aee();\n        if (*(in_ECX + 0x4c) != 0) {\n            iVar1 = *(*(in_ECX + 0x4c) + 0x44);\n            while (iVar1 != 0) {\n                piVar3 = fcn.0040e44d();\n                iVar4 = *(*piVar3 + 4);\n                if ((iVar4 != 0) && (*(iVar4 + 0x74) != 0)) {\n                    iVar2 = iVar2 + 1;\n                    iVar4 = (**0x481678)(iVar4 + 0x30, var_8h, var_4h);\n                    if (iVar4 != 0) {\n                        *arg_10h = 3;\n                        *(arg_10h + 4) = iVar2;\n                        return 0;\n                    }\n                }\n            }\n        }\n    }\n    uVar5 = fcn.004120ff(arg_8h, arg_ch, arg_10h);\n    return uVar5;\n}\n",
        "token_count": 407
    },
    "00414c48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00414c48(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_8ch;\n    uint var_6ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_24h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(0x80);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0040953a();\n    fcn.0041266a();\n    uVar1 = *(extraout_ECX + 0x20);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = (**0x481620)(uVar1);\n    do {\n        if (iVar2 == 0) {\n            *(unaff_EBP + -4) = 0xffffffff;\n            *(unaff_EBP + -0x6c) = 0;\n            fcn.004147ac();\n            fcn.004511de();\n            return;\n        }\n        *(unaff_EBP + -0x6c) = iVar2;\n        uVar3 = (**0x48170c)(iVar2);\n        *(unaff_EBP + -0x34) = uVar3 & 0xffff;\n        *(unaff_EBP + -0x24) = unaff_EBP + -0x8c;\n        iVar4 = fcn.00413dbb(iVar2);\n        if (iVar4 == 0) {\ncode_r0x00414cbb:\n            iVar4 = fcn.00409398(*(unaff_EBP + -0x34), 0xffffffff, unaff_EBP + -0x38, 0);\n            if (iVar4 == 0) {\n                iVar4 = *(unaff_EBP + 0xc);\n                if (iVar4 != 0) {\n                    uVar3 = (**0x48183c)(*(unaff_EBP + -0x6c), 0x87, 0, 0);\n                    if ((uVar3 & 0x2000) != 0) {\n                        uVar3 = fcn.0040e0b4();\n                        uVar3 = uVar3 & 0xf;\n                        if ((((uVar3 != 3) && (uVar3 != 6)) && (uVar3 != 7)) && (uVar3 != 9)) goto code_r0x00414d12;\n                    }\n                    iVar4 = 0;\n                }\ncode_r0x00414d12:\n                fcn.00409560(*(unaff_EBP + 8), iVar4);\n            }\n        }\n        else {\n            iVar4 = fcn.00409398(0, 0xbd11ffff, unaff_EBP + -0x38, 0);\n            if (iVar4 == 0) goto code_r0x00414cbb;\n        }\n        iVar2 = (**0x481740)(iVar2, 2);\n    } while( true );\n}\n",
        "token_count": 789
    },
    "00414d4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00414d4b(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00413dd5(param_2);\n    if (iVar1 != 0) {\n        (**(*param_1 + 0x50))();\n        piVar2 = (**(*param_1 + 0xf0))();\n        iVar1 = (**0x481708)(unaff_retaddr, 0xfffffffc, fcn.0041475b);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar1;\n        }\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 173
    },
    "004153df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004153df(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x50) == 0) {\n        iVar1 = (**0x4816ec)(*(param_1 + 0x20));\n        uVar2 = fcn.00409a55(iVar1, iVar1 + 1);\n        (**0x4816f0)(*(param_1 + 0x20), uVar2);\n        fcn.004081bb(0xffffffff);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041541e. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x8c))();\n    return;\n}\n",
        "token_count": 190
    },
    "004156b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004156b0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint var_4h;\n    \n    iVar4 = fcn.00415688();\n    uVar7 = arg_8h & 0xfff0;\n    if ((uVar7 == 0xf040) || (uVar7 == 0xf050)) {\n        if (arg_ch != 0x75) {\n            return 0;\n        }\n        if (iVar4 == 0) {\n            return 0;\n        }\n        fcn.0040e256();\n    }\n    else {\n        if ((uVar7 != 0xf060) && (uVar7 != 0xf100)) {\n            return 0;\n        }\n        if (((uVar7 == 0xf060) || (arg_ch != 0)) && (iVar4 != 0)) {\n            uVar1 = *(in_ECX + 0x20);\n            uVar5 = (**0x48179c)();\n            pcVar2 = *0x4816a0;\n            uVar6 = (**0x4816a0)(*(iVar4 + 0x20));\n            fcn.00413d94(uVar6);\n            (**0x48183c)(*(iVar4 + 0x20), 0x112, arg_8h, arg_ch);\n            pcVar3 = *0x481710;\n            iVar4 = (**0x481710)(uVar1);\n            if (iVar4 != 0) {\n                (*pcVar2)(uVar1);\n            }\n            iVar4 = (*pcVar3)(uVar5);\n            if (iVar4 != 0) {\n                (**0x4816fc)(uVar5);\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 447
    },
    "0041598f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041598f(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    uVar1 = (**(**(param_1 + 0xc) + 0xc))(*(param_1 + 0xc), 0);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "004159c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.004159c0(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if ((((*param_1 == 0) && (param_1[1] == 0)) && (param_1[2] == 0xc0)) && (param_1[3] == 0x46000000)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "004159eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004159eb(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if ((arg_8h == 0) || (arg_ch == NULL)) {\n        iVar2 = -0x7ff8ffa9;\n    }\n    else if (arg_14h == NULL) {\n        iVar2 = -0x7fffbffd;\n    }\n    else {\n        *arg_14h = NULL;\n        iVar2 = fcn.004159c0(arg_10h);\n        if (iVar2 == 0) {\n            for (; pcVar1 = arg_ch[2],  pcVar1 != NULL; arg_ch = arg_ch + 3) {\n                iVar2 = *arg_ch;\n                if ((iVar2 == 0) || (iVar3 = fcn.00415955(iVar2, arg_10h),  iVar3 != 0)) {\n                    if (pcVar1 == 0x1) goto code_r0x00415a1f;\n                    iVar3 = (*pcVar1)(arg_8h, arg_10h, arg_14h, arg_ch[1]);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    if ((iVar2 != 0) && (iVar3 < 0)) {\n                        return iVar3;\n                    }\n                }\n            }\n            iVar2 = -0x7fffbffe;\n        }\n        else {\ncode_r0x00415a1f:\n            piVar4 = arg_ch[1] + arg_8h;\n            (**(*piVar4 + 4))(piVar4);\n            *arg_14h = piVar4;\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 429
    },
    "0042a59f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042a59f(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00419c68();\n    iVar2 = (**0x481358)(iVar2 + 0x2c);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.00419c68();\n    if (*(iVar2 + 0x30) == 0) {\n        fcn.0042a53b(1);\n        iVar2 = fcn.00419c68();\n        iVar2 = *(iVar2 + 4);\n        if ((iVar2 == 0) || (*(iVar2 + 0x20) == 0)) {\n            iVar2 = fcn.00419c68();\n            if (*(iVar2 + 0x14) == '\\0') {\n                fcn.0040bc7b(0);\n            }\n        }\n        else {\n            iVar1 = fcn.0040e21a();\n            if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x0042a588. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(**(iVar2 + 0x20) + 0x60))();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "00416004": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00416004(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar1 = fcn.00422fa4(0x403c0c);\n    if (iVar1 == 0) {\n        fcn.00403bf2();\n    }\n    if (*(iVar1 + 0x14) != unaff_retaddr) {\n        if (*(iVar1 + 0x28) == 0) {\n            uVar2 = (**0x481398)();\n            iVar3 = (**0x48175c)(5, 0x415db1, 0, uVar2);\n            *(iVar1 + 0x28) = iVar3;\n            if (iVar3 == 0) {\n                fcn.00403bbe();\n            }\n        }\n        *(iVar1 + 0x14) = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "004161b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.004161b2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    code **ppcVar6;\n    uint32_t uVar7;\n    int32_t *arg_8h_00;\n    int32_t iVar8;\n    code *pcVar9;\n    int32_t unaff_EBP;\n    int16_t iVar10;\n    int16_t iVar11;\n    uint var_7ch;\n    uint var_5ch;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(0x70);\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = 0x7fffffff;\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (uVar7 == 0x111) {\n        iVar3 = (**(*arg_8h_00 + 0xe8))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar3 != 0) {\ncode_r0x004161f0:\n            *(unaff_EBP + -0x10) = 1;\n            goto code_r0x004166a9;\n        }\n        goto code_r0x004163c2;\n    }\n    if (uVar7 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar3 = (**(*arg_8h_00 + 0xec))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\n            goto joined_r0x00416686;\n        }\n        goto code_r0x004163c2;\n    }\n    var_24h = *(unaff_EBP + 0x10);\n    if (uVar7 == 6) {\n        uVar4 = fcn.00413d94(var_24h);\n        fcn.00415b81(arg_8h_00, *(unaff_EBP + 0xc), uVar4);\n    }\n    iVar10 = var_24h;\n    if ((uVar7 == 0x20) && (iVar3 = fcn.00415bf7(arg_8h_00, iVar10, var_24h >> 0x10),  iVar3 != 0))\n    goto code_r0x004161f0;\n    if ((((arg_8h_00[0x13] != 0) && (0 < *(arg_8h_00[0x13] + 0x74))) &&\n        ((((0x1ff < uVar7 && (uVar7 < 0x20a)) || ((0xff < uVar7 && (uVar7 < 0x110)))) || (uVar7 - 0x281 < 0x11)))) &&\n       (iVar3 = (**(*arg_8h_00[0x13] + 0x94))(uVar7, *(unaff_EBP + 0xc), var_24h, unaff_EBP + -0x10),  iVar3 != 0))\n    goto code_r0x004166a9;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + 0x10) = uVar5;\n    fcn.00412601(7);\n    iVar8 = ((uVar5 ^ uVar7) & 0x1ff) * 0xc;\n    iVar3 = *(iVar8 + 0x4a6930);\n    *(unaff_EBP + -0x18) = iVar8 + 0x4a6930;\n    if ((*(unaff_EBP + 8) != iVar3) || (*(unaff_EBP + 0x10) != *(iVar8 + 0x4a6938))) {\n        puVar1 = *(unaff_EBP + -0x18);\n        ppcVar6 = *(unaff_EBP + 0x10);\n        *puVar1 = *(unaff_EBP + 8);\n        puVar1[2] = ppcVar6;\n        while (*ppcVar6 != NULL) {\n            if (*(unaff_EBP + 8) < 0xc000) {\n                iVar3 = fcn.00411c2e(ppcVar6[1], *(unaff_EBP + 8), 0, 0);\n                *(unaff_EBP + 0x10) = iVar3;\n                if (iVar3 != 0) {\n                    *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                    fcn.00412630();\n                    goto code_r0x00416350;\n                }\n            }\n            else {\n                iVar3 = *(*(unaff_EBP + 0x10) + 4);\n                uVar4 = 0xc000;\n                while (iVar3 = fcn.00411c2e(iVar3, uVar4, 0, 0),  iVar3 != 0) {\n                    if (**(iVar3 + 0x10) == *(unaff_EBP + 8)) {\n                        *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                        fcn.00412630();\n                        goto code_r0x0041669b;\n                    }\n                    iVar3 = iVar3 + 0x18;\n                }\n                ppcVar6 = *(unaff_EBP + 0x10);\n            }\n            ppcVar6 = (**ppcVar6)();\n            *(unaff_EBP + 0x10) = ppcVar6;\n        }\n        *(*(unaff_EBP + -0x18) + 4) = 0;\n        fcn.00412630();\n        goto code_r0x004163c2;\n    }\n    iVar3 = *(iVar8 + 0x4a6934);\n    *(unaff_EBP + 0x10) = iVar3;\n    fcn.00412630();\n    if (iVar3 == 0) goto code_r0x004163c2;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x0041669b:\n        pcVar9 = *(iVar3 + 0x14);\ncode_r0x0041669e:\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x004166a2;\n    }\ncode_r0x00416350:\n    pcVar9 = *(*(unaff_EBP + 0x10) + 0x14);\n    iVar3 = *(*(unaff_EBP + 0x10) + 0x10);\n    iVar11 = var_24h >> 0x10;\n    var_14h = var_24h;\n    // switch table (69 cases) at 0x4166ca\n    switch(iVar3) {\n    case 1:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.00406897(var_14h);\n        goto code_r0x004163f1;\n    case 2:\n    case 3:\n    case 4:\n    case 0x1b:\n    case 0x1c:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x004163f1;\n    case 5:\n    case 0xc:\n        var_18h = var_24h & 0xffff;\n        uVar7 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.00413d94(uVar7, var_18h, var_24h >> 0x10);\n        goto code_r0x00416426;\n    case 6:\n        var_24h = *(unaff_EBP + 0xc);\n        var_28h = fcn.00413d94();\n        goto code_r0x004166a2;\n    case 7:\n    case 0xd:\ncode_r0x004163f1:\n        uVar4 = (*pcVar9)(var_14h);\ncode_r0x004166a6:\n        *(unaff_EBP + -0x10) = uVar4;\n        break;\n    case 8:\n        fcn.00406075();\n        uVar4 = var_24h[1];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x24) = uVar4;\n        fcn.0041266a();\n        uVar4 = *var_24h;\n        uVar2 = var_24h[2];\n        *(unaff_EBP + -4) = 2;\n        *(unaff_EBP + -0x5c) = uVar4;\n        iVar3 = fcn.00413dbb(uVar4);\n        if (iVar3 == 0) {\n            if ((arg_8h_00[0x13] != 0) && (iVar3 = fcn.004239a5(*(unaff_EBP + -0x5c)),  iVar3 != 0)) {\n                *(unaff_EBP + -0x2c) = iVar3;\n            }\n            iVar3 = unaff_EBP + -0x7c;\n        }\n        uVar4 = (*pcVar9)(unaff_EBP + -0x28, iVar3, uVar2);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\n        *(unaff_EBP + -4) = 1;\n        fcn.004147ac();\n        goto code_r0x004164d1;\n    case 9:\n        fcn.00406075();\n        uVar4 = var_24h[2];\n        *(unaff_EBP + -0x24) = var_24h[1];\n        *(unaff_EBP + -4) = 3;\n        uVar4 = (*pcVar9)(unaff_EBP + -0x28, uVar4);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\ncode_r0x004164d1:\n        *(unaff_EBP + -4) = 0;\n        fcn.0040691f();\n        break;\n    case 10:\n        uVar7 = fcn.00413d94(var_24h, *(unaff_EBP + 0xc) >> 0x10);\n        var_18h = var_24h;\n        goto code_r0x004164ef;\n    case 0xb:\n        var_24h = *(unaff_EBP + 0xc) >> 0x10;\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x004166a2;\n    case 0xe:\n    case 0x2f:\n        goto code_r0x0041669e;\n    case 0xf:\n        var_18h = fcn.0042c734(var_24h);\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x004164ef:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x00416426:\n        uVar4 = (*pcVar9)(uVar5, uVar7, var_18h);\n        goto code_r0x004166a6;\n    case 0x10:\n    case 0x12:\n    case 0x15:\n    case 0x1e:\n    case 0x2d:\n    case 0x32:\n        goto code_r0x00416617;\n    case 0x11:\n    case 0x14:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x00416624;\n    case 0x13:\n        (*pcVar9)();\n        break;\n    case 0x16:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0041661a;\n    case 0x17:\n        var_14h = iVar11;\n        var_18h = iVar10;\n        goto code_r0x0041661a;\n    case 0x18:\n    case 0x19:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x00416643;\n    case 0x1a:\n        fcn.00413d94(var_24h);\ncode_r0x00416617:\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0041661a;\n    case 0x1d:\n    case 0x28:\n    case 0x31:\n        uVar4 = (*pcVar9)();\n        goto code_r0x004166a6;\n    case 0x1f:\n        var_14h = *(unaff_EBP + 0xc);\n        var_18h = fcn.00413d94(var_14h);\n        fcn.00413d94(var_24h, var_18h);\n        uVar7 = arg_8h_00[8] == var_24h;\n        goto code_r0x00416647;\n    case 0x20:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.00406897(var_14h);\n        goto code_r0x00416624;\n    case 0x21:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0042c734(var_14h);\n        goto code_r0x00416624;\n    case 0x22:\n        var_14h = iVar11;\n        var_18h = iVar10;\n        uVar7 = fcn.0042c734(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x00416647;\n    case 0x23:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x004165a9;\n    case 0x24:\ncode_r0x004165a9:\n        fcn.00413d94(var_14h);\n        goto code_r0x00416624;\n    case 0x25:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x004165c6;\n    case 0x26:\n        var_18h = iVar10;\n        var_14h = iVar11;\ncode_r0x004165c6:\n        uVar7 = fcn.00413d94(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x00416647;\n    case 0x27:\n        var_18h = fcn.00413d94(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x0041661a;\n    case 0x29:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = fcn.00413d94(var_24h, var_14h);\n        goto code_r0x00416631;\n    case 0x2a:\n    case 0x2b:\n        var_18h = *(unaff_EBP + 0xc);\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 8) = var_18h;\n        *(unaff_EBP + 0xc) = var_14h;\n        if (iVar3 == 0x2a) {\n            var_18h = fcn.00413d94(var_24h);\n            uVar7 = *(unaff_EBP + 0xc);\n            var_14h = var_24h;\n            goto code_r0x00416647;\n        }\ncode_r0x0041661a:\n        (*pcVar9)(var_18h, var_14h);\n        break;\n    case 0x2c:\n    case 0x33:\ncode_r0x00416624:\n        (*pcVar9)(var_14h);\n        break;\n    case 0x2e:\n    case 0x36:\n        (*pcVar9)(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x004161f0;\n    case 0x30:\n    case 0x45:\n        var_28h = iVar10;\n        var_24h = iVar11;\ncode_r0x004166a2:\n        uVar4 = (*pcVar9)(var_28h, var_24h);\n        goto code_r0x004166a6;\n    case 0x34:\n        var_18h = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x00416631:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x00416647;\n    case 0x35:\n        var_18h = iVar10;\n        var_14h = iVar11;\ncode_r0x00416643:\n        uVar7 = *(unaff_EBP + 0xc);\ncode_r0x00416647:\n        (*pcVar9)(uVar7, var_18h, var_14h);\n        break;\n    case 0x37:\n        iVar3 = (*pcVar9)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, iVar10, iVar11);\n        *(unaff_EBP + -0x10) = iVar3;\n        goto joined_r0x00416686;\n    case 0x44:\n        iVar3 = (*pcVar9)();\n        *(unaff_EBP + -0x10) = iVar3;\njoined_r0x00416686:\n        if (iVar3 != 0) {\ncode_r0x004163c2:\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00412630();\n            goto code_r0x004163d0;\n        }\n    }\ncode_r0x004166a9:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00412630();\ncode_r0x004163d0:\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 4443
    },
    "004441ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.004441ed(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint32_t var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h == 0x2b) {\n        var_4h = arg_10h;\n        var_8h = 0x444272;\n        (**(*in_ECX + 0x138))();\n        return 1;\n    }\n    if (arg_8h == 0x2c) {\n        var_4h = arg_10h;\n        var_8h = 0x444265;\n        (**(*in_ECX + 0x13c))();\n        return 1;\n    }\n    if (arg_8h == 0x2d) {\n        var_4h = arg_10h;\n        var_8h = 0x444258;\n        (**(*in_ECX + 0x144))();\n        return 1;\n    }\n    if (arg_8h == 0x2e) {\n        var_4h = arg_ch >> 0x10;\n        var_8h = arg_ch & 0xffff;\n        var_ch = 0x44424b;\n        iVar1 = (**(*in_ECX + 0x148))();\n    }\n    else if (arg_8h == 0x2f) {\n        var_4h = arg_ch >> 0x10;\n        var_8h = arg_ch & 0xffff;\n        var_ch = 0x444235;\n        iVar1 = (**(*in_ECX + 0x14c))();\n    }\n    else {\n        if (arg_8h != 0x39) {\n            if (in_ECX[0x14] != 0) {\n                var_8h = arg_10h;\n                var_ch = arg_ch;\n                iVar1 = (**0x48183c)(in_ECX[8], arg_8h + 0x2000);\n                if ((6 < arg_8h - 0x132) || (iVar1 != 0)) {\n                    if (arg_14h != NULL) {\n                        *arg_14h = iVar1;\n                    }\n                    iVar1 = 1;\n                }\n                return iVar1;\n            }\n            if (arg_8h < 0x112) {\n                if (arg_8h == 0x111) {\n                    iVar1 = fcn.00409398(0, arg_ch >> 0x10 | 0xbd110000, 0, 0);\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                    if (arg_14h != NULL) {\n                        *arg_14h = 1;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (0x2a < arg_8h) {\n                    if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x004168f1;\n                    if (arg_8h == 0x4e) {\n                        var_8h = arg_14h;\n                        var_4h = arg_10h;\n                        iVar1 = fcn.00409398(0, *(arg_10h + 8) & 0xffff | 0xbc4e0000, &fcn.004441ed::var_8h, 0);\n                        return iVar1;\n                    }\n                }\n            }\n            else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x004168f1:\n                iVar1 = fcn.004161b2(arg_8h + 0xbc00, arg_ch, arg_10h, arg_14h);\n                return iVar1;\n            }\n            if (arg_8h - 0x132 < 7) {\n                var_4h = arg_8h - 0x132;\n                var_8h = arg_ch;\n                iVar1 = fcn.004161b2(0xbc19, 0, &fcn.004441ed::var_ch, arg_14h);\n                if (*arg_14h != 0) {\n                    return iVar1;\n                }\n            }\n            return 0;\n        }\n        var_4h = arg_10h;\n        var_8h = 0x44421a;\n        iVar1 = (**(*in_ECX + 0x140))();\n    }\n    *arg_14h = iVar1;\n    return 1;\n}\n",
        "token_count": 1072
    },
    "00416c4f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00416c4f(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_38h;\n    uint var_4h;\n    \n    fcn.00451139(0x30);\n    arg_8h_00 = *(unaff_EBP + 8);\n    iVar2 = fcn.004123f7(*(arg_8h_00 + 0x10), *(arg_8h_00 + 0x24), unaff_EBP + -0x38);\n    if (((iVar2 == 0) && (iVar1 = fcn.00412364(arg_8h_00),  iVar1 != 0)) &&\n       (iVar2 = fcn.00419c68(),  *(iVar2 + 0x14) != '\\0')) {\n        fcn.0042657b(1);\n        *(unaff_EBP + -4) = 0;\n        fcn.00419c68();\n        fcn.00404bb1(*(arg_8h_00 + 0x24));\n        fcn.00404a94(10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004265e8(1);\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 329
    },
    "004172b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004172b0(int32_t param_1)\n\n{\n    int32_t extraout_ECX;\n    \n    if (*(param_1 + 0x58) == 0) {\n        fcn.00403bf2();\n        param_1 = extraout_ECX;\n    }\n    // WARNING: Could not recover jumptable at 0x004172c4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x58) + 0x2c))();\n    return;\n}\n",
        "token_count": 126
    },
    "00417359": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00417359(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x50) == 0) {\n        uVar1 = fcn.00413ac7(\"CommDlgExtendedError\");\n        uVar1 = (**0x481424)(uVar1);\n        *(param_1 + 0x50) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x50);\n    return;\n}\n",
        "token_count": 120
    },
    "004173f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004173f3(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "004177ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.004177ad(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4a6928 == 0) {\n        *0x4a6928 = 1;\n        if (*0x4a83ac == 0) {\n            *0x4a82c4 = 3;\n            (**0x481690)(0x68, 0, 0x4a82c4, 0);\n        }\n        else {\n            if (*0x4a82cc == 0) {\n                *0x4a82c8 = (**0x4815ec)(\"MSH_SCROLL_LINES_MSG\");\n                if (*0x4a82c8 == 0) {\n                    *0x4a82cc = 1;\n                    return *0x4a82c4;\n                }\n                *0x4a82cc = 2;\n            }\n            if (((*0x4a82cc == 2) && (iVar1 = (**0x4815e8)(\"MouseZ\", \"Magellan MSWHEEL\"),  iVar1 != 0)) &&\n               (*0x4a82c8 != 0)) {\n                *0x4a82c4 = (**0x48183c)(iVar1, *0x4a82c8, 0, 0);\n            }\n        }\n    }\n    return *0x4a82c4;\n}\n",
        "token_count": 306
    },
    "00417a1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417a1c(uint32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((arg_10h != 0) && (iVar1 = fcn.00414314(0),  iVar1 != 0)) {\n        return;\n    }\n    iVar1 = (**(*in_ECX + 0x70))(0);\n    if (arg_10h == iVar1) {\n        (**(*in_ECX + 0x138))(arg_8h & 0xff | 0xff00, arg_ch, 1);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00417a63": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417a63(uint32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((arg_10h != 0) && (iVar1 = fcn.00414314(0),  iVar1 != 0)) {\n        return;\n    }\n    iVar1 = (**(*in_ECX + 0x70))(1);\n    if (arg_10h == iVar1) {\n        (**(*in_ECX + 0x138))((arg_8h & 0xff) << 8 | 0xff, arg_ch, 1);\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00418663": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418663(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_1 + 0x84) == 0) {\n        *(param_1 + 0x84) = 1;\n        var_4h = 1;\n        uVar1 = (**0x4817a0)(*(param_1 + 0x20));\n        iVar2 = fcn.00413d94(uVar1);\n        if ((iVar2 == 0) || (iVar2 = (**0x48183c)(*(iVar2 + 0x20), 0x368, 0, &var_38h),  iVar2 == 0)) {\n            iVar3 = fcn.0041852d(&var_18h, &var_10h);\n            iVar2 = var_14h;\n            iVar4 = var_18h;\n            if (iVar3 == 0) {\n                (**0x4816bc)(*(param_1 + 0x20), &var_28h);\n                if ((0 < var_20h) && (0 < var_1ch)) {\n                    fcn.00412a3c(3, 0);\n                }\n                *(param_1 + 0x84) = 0;\n                return;\n            }\n        }\n        else {\n            var_4h = 0;\n            fcn.004179c2();\n            iVar2 = var_2ch - var_34h;\n            iVar4 = var_30h - var_38h;\n        }\n        fcn.004185a8(iVar4, iVar2, &var_8h, &var_20h, &var_18h, var_4h);\n        if (var_8h != 0) {\n            iVar2 = iVar2 - var_ch;\n        }\n        if (var_4h != 0) {\n            iVar4 = iVar4 - var_10h;\n        }\n        fcn.00417970(var_18h, var_14h);\n        var_4ch = 0;\n        var_50h = 3;\n        fcn.00412a3c(0, var_8h);\n        if (var_8h != 0) {\n            var_48h = *(param_1 + 0x68) + -1;\n            var_44h = iVar4;\n            iVar4 = fcn.00411d41(0, &var_54h, 1);\n            if (iVar4 == 0) {\n                fcn.004129d7(0, 0, var_20h, 1);\n            }\n        }\n        fcn.00412a3c(1, var_4h);\n        if (var_4h != 0) {\n            var_48h = *(param_1 + 0x6c) + -1;\n            var_44h = iVar2;\n            iVar2 = fcn.00411d41(1, &var_54h, 1);\n            if (iVar2 == 0) {\n                fcn.004129d7(1, 0, var_1ch, 1);\n            }\n        }\n        *(param_1 + 0x84) = 0;\n    }\n    return;\n}\n",
        "token_count": 893
    },
    "00418a14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418a14(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (**0x48177c)(&var_10h);\n    (**0x48169c)(param_1[8], &var_28h);\n    iVar1 = param_1[0x1c];\n    uVar6 = 0;\n    if ((iVar1 == 0x7923) || (iVar1 == 0x7922)) {\n        if (var_ch < var_24h) {\n            uVar6 = 30999;\n        }\n        else if (var_1ch < var_ch) {\n            uVar6 = 0x791d;\n        }\n    }\n    if ((iVar1 == 0x7923) || (iVar1 == 0x7921)) {\n        if (var_10h < var_28h) {\n            if (uVar6 == 0) {\n                uVar6 = 0x7919;\n            }\n            else if (iVar1 == 0x7923) {\n                uVar6 = uVar6 - 1;\n            }\n        }\n        else if (var_20h < var_10h) {\n            if (uVar6 == 0) {\n                uVar6 = 0x791b;\n            }\n            else if (iVar1 == 0x7923) {\n                uVar6 = uVar6 + 1;\n            }\n        }\n    }\n    if (param_1[0x1b] == 0) {\n        if (uVar6 == 0) {\n            (**0x481758)(param_1[0x1d]);\n        }\n        else {\n            iVar1 = fcn.00419c68();\n            uVar2 = (**0x4815c8)(*(iVar1 + 0xc), uVar6 & 0xffff);\n            (**0x481758)(uVar2);\n            if ((var_20h < var_10h) || (var_20h = var_28h,  var_10h < var_28h)) {\n                var_8h = var_10h - var_20h;\n            }\n            else {\n                var_8h = 0;\n            }\n            if ((var_1ch < var_ch) || (var_1ch = var_24h,  var_ch < var_24h)) {\n                var_4h = var_ch - var_1ch;\n            }\n            else {\n                var_4h = 0;\n            }\n            piVar3 = fcn.00415391();\n            iVar1 = param_1[0x1c];\n            if ((iVar1 == 0x7923) || (iVar1 == 0x7922)) {\n                uVar2 = 1;\n            }\n            else {\n                uVar2 = 0;\n            }\n            if ((iVar1 == 0x7923) || (iVar1 == 0x7921)) {\n                uVar4 = 1;\n            }\n            else {\n                uVar4 = 0;\n            }\n            (**(*piVar3 + 0x184))(&var_18h, var_8h, var_4h, uVar4, uVar2);\n            fcn.0040e1f9(0);\n            uVar2 = (**0x4817a0)(piVar3[8]);\n            uVar2 = fcn.00413d94(uVar2);\n            piVar5 = fcn.00422905(0x484bbc, uVar2);\n            if (piVar5 == NULL) {\n                (**(*piVar3 + 0x13c))();\n            }\n            else {\n                (**(*piVar5 + 0x17c))(piVar3, var_18h, var_14h, 1);\n            }\n            (**0x48185c)(param_1[8]);\n            fcn.0040e533(0x4a8160, param_1[0x19] + -0x10, param_1[0x1a] + -0x10, 0, 0, 0x51);\n        }\n    }\n    else {\n        (**0x4815d0)(param_1[8], 0xe000);\n        (**0x4815c4)();\n        (**0x481758)(0);\n        iVar1 = fcn.00415391();\n        (**(*param_1 + 0x60))();\n        if (*(iVar1 + 0x58) != NULL) {\n            (**(**(iVar1 + 0x58) + 4))(1);\n        }\n        *(iVar1 + 0x58) = 0;\n    }\n    return;\n}\n",
        "token_count": 1155
    },
    "00418d77": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00418d77(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(0x18);\n    *(unaff_EBP + -0x10) = *(extraout_ECX + 0x5c);\n    *(extraout_ECX + 0x5c) = *(unaff_EBP + 8);\n    *(extraout_ECX + 0x60) = *(unaff_EBP + 0xc);\n    *(extraout_ECX + 100) = *(unaff_EBP + 0x10);\n    fcn.004069c7(0);\n    uVar2 = *(extraout_ECX + 0x5c);\n    *(unaff_EBP + -4) = 0;\n    fcn.00405a33(uVar2);\n    pcVar5 = *0x4810a4;\n    uVar2 = *(unaff_EBP + -0x1c);\n    *(extraout_ECX + 0x68) = *(extraout_ECX + 0x60);\n    *(extraout_ECX + 0x6c) = *(extraout_ECX + 100);\n    (*pcVar5)(uVar2, extraout_ECX + 0x68, 1);\n    iVar3 = (*(unaff_EBP + 0x14))[1];\n    piVar1 = extraout_ECX + 0x70;\n    uVar2 = *(unaff_EBP + -0x1c);\n    *piVar1 = **(unaff_EBP + 0x14);\n    *(extraout_ECX + 0x74) = iVar3;\n    (*pcVar5)(uVar2, piVar1, 1);\n    uVar2 = (*(unaff_EBP + 0x18))[1];\n    uVar4 = *(unaff_EBP + -0x1c);\n    *(extraout_ECX + 0x78) = **(unaff_EBP + 0x18);\n    *(extraout_ECX + 0x7c) = uVar2;\n    (*pcVar5)(uVar4, extraout_ECX + 0x78, 1);\n    if (*(extraout_ECX + 0x6c) < 0) {\n        *(extraout_ECX + 0x6c) = -*(extraout_ECX + 0x6c);\n    }\n    if (*(extraout_ECX + 0x74) < 0) {\n        *(extraout_ECX + 0x74) = -*(extraout_ECX + 0x74);\n    }\n    if (*(extraout_ECX + 0x7c) < 0) {\n        *(extraout_ECX + 0x7c) = -*(extraout_ECX + 0x7c);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00406a1b();\n    if (*piVar1 == 0) {\n        *piVar1 = *(extraout_ECX + 0x68) / 10;\n    }\n    if (*(extraout_ECX + 0x74) == 0) {\n        *(extraout_ECX + 0x74) = *(extraout_ECX + 0x6c) / 10;\n    }\n    if (*(extraout_ECX + 0x78) == 0) {\n        *(extraout_ECX + 0x78) = *piVar1 / 10;\n    }\n    if (*(extraout_ECX + 0x7c) == 0) {\n        *(extraout_ECX + 0x7c) = *(extraout_ECX + 0x74) / 10;\n    }\n    if (*(extraout_ECX + 0x20) != 0) {\n        fcn.00418663();\n        if (*(unaff_EBP + -0x10) != *(extraout_ECX + 0x5c)) {\n            (**0x4815d8)(*(extraout_ECX + 0x20), 0, 1);\n        }\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 1081
    },
    "00418fe6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00418fe6(void)\n\n{\n    code *pcVar1;\n    char *pcStack12;\n    \n    if (*0x4a82e0 == 0) {\n        *0x4a82e0 = (**0x481420)();\n        pcVar1 = *0x481424;\n        if (*0x4a82e0 == 0) {\n            pcStack12 = 0x4a3540;\n            fcn.004515ca(&pcStack12, 0x49617c);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        pcStack12 = \"CreateActCtxW\";\n        *0x4a82d0 = (**0x481424)(*0x4a82e0);\n        *0x4a82d4 = (*pcVar1)(*0x4a82e0, \"ReleaseActCtx\");\n        *0x4a82d8 = (*pcVar1)(*0x4a82e0, \"ActivateActCtx\");\n        *0x4a82dc = (*pcVar1)(*0x4a82e0, \"DeactivateActCtx\");\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "00419093": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar fcn.00419093(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00403bf2();\n    }\n    if (*0x4a82d8 == 0) {\n        uVar2 = 2;\n    }\n    else {\n        iVar1 = fcn.00419073(param_1, param_2);\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 123
    },
    "00419568": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419568(code **param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (param_1[0xf] != NULL) {\n        (**(*param_1[0xf] + 0x13c))();\n    }\n    fcn.00403ac8(param_1[0x12]);\n    if (param_1[5] != NULL) {\n        (***param_1[5])(1);\n    }\n    if (param_1[6] != NULL) {\n        (***param_1[6])(1);\n    }\n    if (param_1[7] != NULL) {\n        (***param_1[7])(1);\n    }\n    if (param_1[8] != NULL) {\n        (***param_1[8])(1);\n    }\n    if (param_1[9] != NULL) {\n        (***param_1[9])(1);\n    }\n    pcVar2 = param_1[0xe];\n    if (pcVar2 != NULL) {\n        while (*(pcVar2 + 0xc) != 0) {\n            uVar1 = fcn.00424a72();\n            fcn.00403ac8(uVar1);\n            pcVar2 = param_1[0xe];\n        }\n    }\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 4))(1);\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    if (param_1[0xe] != NULL) {\n        (**(*param_1[0xe] + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 406
    },
    "00419794": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419794(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CDllIsolationWrapperBase.0;\n    if (*(param_1 + 2) != '\\0') {\n        (**0x4813ac)(param_1[1]);\n    }\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0041a108": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041a108(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EDI;\n    \n    if (param_1 == 0) {\n        fcn.00403bf2();\n    }\n    pcVar1 = *0x4817a0;\n    uVar2 = (**0x4817a0)(*(param_1 + 0x20));\n    uVar2 = fcn.00413d94(uVar2);\n    iVar3 = fcn.004228ed(0x484bbc);\n    if (iVar3 != 0) {\n        if (unaff_EDI != 0) {\n            return uVar2;\n        }\n        do {\n            uVar4 = (*pcVar1)(*(param_1 + 0x20));\n            param_1 = fcn.00413d94(uVar4);\n            if (param_1 == 0) {\n                return uVar2;\n            }\n            iVar3 = (**0x4817ec)(*(param_1 + 0x20));\n        } while (iVar3 == 0);\n    }\n    return 0;\n}\n",
        "token_count": 270
    },
    "0041b2c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0041b2c1(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CPreviewView.0;\n    *(unaff_EBP + -4) = 1;\n    fcn.004068d8();\n    pcVar1 = extraout_ECX[0x4d];\n    if (pcVar1 != NULL) {\n        fcn.0041a5ee();\n        fcn.00403ac8(pcVar1);\n    }\n    fcn.00403ac8(extraout_ECX[0x2a]);\n    if (extraout_ECX[0x24] != NULL) {\n        (**(*extraout_ECX[0x24] + 4))(1);\n    }\n    if (extraout_ECX[0x48] != NULL) {\n        uVar2 = (**0x4815c8)(0, 0x7f00);\n        (**0x481758)(uVar2);\n        (**0x4815bc)(extraout_ECX[0x48]);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0040691f();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00417863();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 386
    },
    "0041b42a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b42a(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    uVar1 = fcn.004148fc();\n    iVar2 = fcn.00422905(0x485618, uVar1);\n    if (iVar2 == 0) {\n        uVar1 = fcn.0040be6f();\n    }\n    uVar1 = fcn.00422905(0x485618, uVar1);\n    if ((*(param_1 + 0xac) != 0) && (*(*(param_1 + 0xac) + 0x54) != 0)) {\n        iVar2 = fcn.00422905(0x486ec8, uVar1);\n        if ((iVar2 != 0) && (*(param_1 + 0x54) != 0)) {\n            piVar3 = fcn.00422905(0x486d04, *(param_1 + 0x54));\n            if (piVar3 != NULL) {\n                (**(**(param_1 + 0xac) + 0x60))();\n                *(param_1 + 0xac) = 0;\n                *(iVar2 + 0x140) = 0;\n                (**(*piVar3 + 0x110))(1);\n            }\n        }\n    }\n    if (*(param_1 + 0xac) != NULL) {\n        (**(**(param_1 + 0xac) + 0x60))();\n    }\n    *(param_1 + 0xac) = 0;\n    *(*(param_1 + 0x134) + 0x14) = *(param_1 + 0x114);\n    (**(**(param_1 + 0x88) + 0x180))(*(param_1 + 0x90), *(param_1 + 0x134), 0, 0, param_1);\n    return;\n}\n",
        "token_count": 443
    },
    "0041b533": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041b533(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t var_8h;\n    \n    var_8h = in_ECX;\n    fcn.0041852d(arg_8h, &var_8h);\n    if (*(in_ECX + 0x10c) == 0) {\n        iVar2 = *(**(in_ECX + 0x134) + 0x74);\n        iVar1 = *(iVar2 + 0x1e);\n        if ((iVar1 != -1) && (iVar1 != *(iVar2 + 0x1c))) {\n            *arg_8h = *arg_8h - var_8h;\n        }\n    }\n    *(in_ECX + 0x11c) = (*arg_8h + -8) / 2;\n    if (*(in_ECX + 0x118) == 2) {\n        iVar2 = (*arg_8h + -0x18) / 2;\n    }\n    else {\n        iVar2 = *arg_8h + -0x10;\n    }\n    arg_8h[1] = arg_8h[1] + -0x10;\n    *arg_8h = iVar2;\n    return arg_8h;\n}\n",
        "token_count": 309
    },
    "0041b5ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b5ae(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    int32_t *piVar7;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar6 = arg_8h * 0x28 + *(in_ECX + 0xb0);\n    fcn.0041b533(&var_8h);\n    iVar5 = *(iVar6 + 0x24);\n    iVar1 = *(in_ECX + 0x10c);\n    bVar2 = iVar5 <= *(iVar6 + 0x20);\n    if (iVar1 == 0) {\n        *(iVar6 + 0x18) = *(iVar6 + 0x20);\n        uVar4 = *(iVar6 + 0x24);\ncode_r0x0041b62e:\n        *(iVar6 + 0x1c) = uVar4;\n    }\n    else {\n        if (iVar1 == 1) {\n            *(iVar6 + 0x1c) = iVar5;\n            if (bVar2) {\n                iVar5 = *(iVar6 + 0x20) * 3 - iVar5;\n            }\n            else {\n                iVar5 = *(iVar6 + 0x20) + iVar5;\n            }\n            iVar5 = iVar5 / 2;\n        }\n        else {\n            if (iVar1 != 2) goto code_r0x0041b631;\n            if (!bVar2) {\n                uVar4 = 1;\n                *(iVar6 + 0x18) = 1;\n                goto code_r0x0041b62e;\n            }\n            *(iVar6 + 0x1c) = iVar5;\n            iVar5 = *(iVar6 + 0x20) * 2 - *(iVar6 + 0x24);\n        }\n        *(iVar6 + 0x18) = iVar5;\n    }\ncode_r0x0041b631:\n    iVar5 = (**0x481434)(*(iVar6 + 0x10), *(iVar6 + 0x18), *(iVar6 + 0x1c));\n    iVar6 = (**0x481434)(*(iVar6 + 0x14), *(iVar6 + 0x18), *(iVar6 + 0x1c));\n    piVar7 = *(in_ECX + 0xb0) + arg_8h * 0x28;\n    (**0x4815c0)(piVar7, 8, 8, iVar5 + 0xb, iVar6 + 0xb);\n    pcVar3 = *0x481688;\n    if (*(in_ECX + 0x10c) == 0) {\n        (**0x481688)(piVar7, ((*piVar7 - piVar7[2]) + var_8h) / 2 + -1, ((piVar7[1] - piVar7[3]) + var_4h) / 2 + -1);\n        if (arg_8h == 1) {\n            (*pcVar3)(piVar7, *(in_ECX + 0x11c), 0);\n        }\n    }\n    else {\n        fcn.00418d77(1, (piVar7[2] - *piVar7) + 0x10, (piVar7[3] - piVar7[1]) + 0x10, &var_8h, 0x4846f4);\n    }\n    return;\n}\n",
        "token_count": 824
    },
    "0041b7b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b7b8(int32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    \n    if (*(in_ECX + 0x10c) != 0) {\n        piVar1 = fcn.00418184(&var_8h);\n        iVar2 = piVar1[1];\n        *arg_8h = *arg_8h + *piVar1;\n        arg_8h[1] = arg_8h[1] + iVar2;\n    }\n    *arg_ch = 0;\n    if (*(in_ECX + 0x118) != 0) {\n        do {\n            iVar2 = (**0x481678)(*arg_ch * 0x28 + *(in_ECX + 0xb0), *arg_8h, arg_8h[1]);\n            if (iVar2 != 0) {\n                iVar2 = *(*arg_ch * 0x28 + *(in_ECX + 0xb0));\n                arg_8h[1] = arg_8h[1] - *(*arg_ch * 0x28 + 4 + *(in_ECX + 0xb0));\n                *arg_8h = *arg_8h - iVar2;\n                iVar2 = *arg_ch * 0x28 + *(in_ECX + 0xb0);\n                iVar2 = (**0x481434)(*arg_8h, *(iVar2 + 0x1c), *(iVar2 + 0x18));\n                *arg_8h = iVar2;\n                iVar2 = *arg_ch * 0x28 + *(in_ECX + 0xb0);\n                iVar2 = (**0x481434)(arg_8h[1], *(iVar2 + 0x1c), *(iVar2 + 0x18));\n                arg_8h[1] = iVar2;\n                return 1;\n            }\n            *arg_ch = *arg_ch + 1;\n        } while (*arg_ch < *(in_ECX + 0x118));\n    }\n    return 0;\n}\n",
        "token_count": 486
    },
    "0041b96b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b96b(uint noname_0, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t *piVar3;\n    uint var_8h;\n    \n    if (arg_ch == 1) {\n        (**0x48177c)(&var_8h);\n        (**0x481800)(*(in_ECX + 0x20), &var_8h);\n        if ((*(in_ECX + 0x10c) == 2) || (iVar2 = fcn.0041b7b8(&var_8h, &arg_ch),  iVar2 == 0)) {\n            iVar2 = (**0x4815c8)(0, 0x7f00);\n        }\n        else {\n            piVar3 = in_ECX + 0x120;\n            if (*piVar3 == 0) {\n                iVar2 = fcn.00419c68();\n                iVar2 = (**0x4815c8)(*(iVar2 + 0xc), 0x7902);\n                *piVar3 = iVar2;\n            }\n            iVar2 = *piVar3;\n        }\n        (**0x481758)(iVar2);\n        return 0;\n    }\n    uVar1 = fcn.00413cf0();\n    return uVar1;\n}\n",
        "token_count": 308
    },
    "0041c215": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c215(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t in_stack_0000000c;\n    \n    if (in_ECX[0x43] != 0) {\n        if (((in_stack_0000000c == 0) || (iVar1 = fcn.00414314(0),  iVar1 == 0)) &&\n           (iVar1 = (**(*in_ECX + 0x70))(1),  in_stack_0000000c == iVar1)) {\n            (**(*in_ECX + 0x138))((arg_8h & 0xff) << 8 | 0xff, arg_ch, 1);\n        }\n        return;\n    }\n    if (arg_8h == 0) {\n        arg_ch = in_ECX[0x45] - 1;\n    }\n    else if (arg_8h == 1) {\n        arg_ch = in_ECX[0x45] + 1;\n    }\n    else if (arg_8h == 2) {\n        arg_ch = in_ECX[0x45] - ((*(*(*in_ECX[0x4d] + 0x74) + 0x1e) - *(*(*in_ECX[0x4d] + 0x74) + 0x1c)) + 9) / 10;\n    }\n    else if (arg_8h == 3) {\n        arg_ch = ((*(*(*in_ECX[0x4d] + 0x74) + 0x1e) - *(*(*in_ECX[0x4d] + 0x74) + 0x1c)) + 9) / 10 + in_ECX[0x45];\n    }\n    else if (arg_8h != 4) {\n        if (arg_8h == 6) {\n            arg_ch = *(*(*in_ECX[0x4d] + 0x74) + 0x1c);\n        }\n        else {\n            if (arg_8h != 7) {\n                return;\n            }\n            arg_ch = *(*(*in_ECX[0x4d] + 0x74) + 0x1e);\n        }\n    }\n    fcn.0041b879(arg_ch, 1);\n    return;\n}\n",
        "token_count": 538
    },
    "0041c94c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c94c(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    iVar1 = fcn.0041b7b8(&arg_ch, &var_4h);\n    if (iVar1 != 0) {\n        if (*(in_ECX + 0x10c) == 2) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = *(in_ECX + 0x10c) + 1;\n        }\n        fcn.0041c7f2(iVar1, var_4h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0041d0ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041d0ae(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t *arg_8h_00;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    int32_t *piVar10;\n    uint uVar11;\n    uint uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar5 = (**0x481440)(arg_8h, arg_ch);\n    piVar10 = piVar5;\n    if ((piVar5 != NULL) && (piVar6 = (**0x481444)(piVar5),  piVar10 = piVar6,  piVar6 != NULL)) {\n        iVar14 = *piVar6 + 0x40;\n        arg_8h_00 = fcn.00450012(iVar14);\n        piVar10 = arg_8h_00;\n        if (arg_8h_00 != NULL) {\n            fcn.00404383(arg_8h_00, iVar14, piVar6, iVar14);\n            pcVar3 = *0x4817b4;\n            iVar14 = *arg_8h_00;\n            arg_ch = 0;\n            do {\n                puVar1 = arg_8h_00 + arg_ch * 4 + iVar14;\n                iVar13 = 0;\n                do {\n                    if (*puVar1 == *(iVar13 * 8 + 0x48527c)) {\n                        if (arg_10h == 0) {\n                            puVar2 = iVar13 * 8 + 0x485280;\n                            uVar7 = (*pcVar3)(*puVar2);\n                            uVar4 = (*pcVar3)(*puVar2);\n                            uVar8 = (*pcVar3)(*puVar2);\n                            *puVar1 = uVar8 >> 0x10 & 0xff | (uVar4 << 8 | uVar7 >> 8 & 0xff) << 8;\n                        }\n                        else if (*(iVar13 * 8 + 0x485280) != 0x12) {\n                            *puVar1 = 0xffffff;\n                        }\n                        break;\n                    }\n                    iVar13 = iVar13 + 1;\n                } while (iVar13 < 4);\n                arg_ch = arg_ch + 1;\n            } while (arg_ch < 0x10);\n            iVar14 = arg_8h_00[1];\n            iVar13 = arg_8h_00[2];\n            uVar9 = (**0x4817f8)(0);\n            piVar10 = (**0x4810d4)(uVar9, iVar14, iVar13);\n            if (piVar10 != NULL) {\n                uVar11 = (**0x481070)(uVar9);\n                pcVar3 = *0x48115c;\n                uVar12 = (**0x48115c)(uVar11, piVar10);\n                (**0x4811fc)(uVar11, 0, 0, iVar14, iVar13, 0, 0, iVar14, iVar13, \n                             piVar6 + (1 << (*(arg_8h_00 + 0xe) & 0x1f)) + 10, arg_8h_00, 0, 0xcc0020);\n                (*pcVar3)(uVar11, uVar12);\n                (**0x48105c)(uVar11);\n            }\n            (**0x4817f4)(0, uVar9);\n            fcn.004500d5(arg_8h_00);\n            (**0x481370)(piVar5);\n        }\n    }\n    return piVar10;\n}\n",
        "token_count": 902
    },
    "0041dbbb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041dbbb(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    var_8h = 0;\n    var_4h = 0;\n    if (0x40046 < *0x4a3d3c) {\n        var_8h = fcn.0040e0b4();\n        iVar3 = fcn.0040e0e8(0, 0x8800, 0);\n        if (0x5ffff < *0x4a3d3c) {\n            if (in_ECX == 0) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = *(in_ECX + 0x20);\n            }\n            iVar2 = (**0x481710)(uVar1);\n            if (iVar2 != 0) {\n                fcn.0041d084();\n                var_4h = fcn.0041d097();\n            }\n        }\n    }\n    iVar2 = fcn.00413cf0();\n    if (iVar2 != 0) {\n        *arg_8h = arg_ch;\n        arg_8h[1] = arg_ch >> 0x10;\n    }\n    if (iVar3 != 0) {\n        (**0x481708)(*(in_ECX + 0x20), 0xfffffff0, var_8h);\n    }\n    if (var_4h != 0) {\n        fcn.0041d097(var_4h);\n    }\n    return iVar2;\n}\n",
        "token_count": 394
    },
    "0041e752": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041e752(int32_t *param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == NULL) {\n        fcn.00403bf2();\n    }\n    if ((param_2[1] == 0x201) || (param_2[1] == 0xa1)) {\n        fcn.00424223(*param_2);\n    }\n    iVar1 = fcn.00411b72(param_2);\n    if (iVar1 == 0) {\n        if (param_1[0x20] != NULL) {\n            iVar1 = (**(*param_1[0x20] + 0x54))(param_2);\n            if (iVar1 != 0) goto code_r0x0041e787;\n        }\n        if ((0xff < param_2[1]) && (param_2[1] < 0x10a)) {\n            iVar1 = (**(*param_1 + 0x168))();\n            if (iVar1 != 0) {\n                iVar1 = (**0x4816c0)(param_1[8], iVar1, param_2);\n                if (iVar1 != 0) goto code_r0x0041e787;\n            }\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x0041e787:\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 332
    },
    "0041e88d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e8e9)\n// WARNING: Removing unreachable block (ram,0x0041e8f5)\n\nvoid fcn.0041e88d(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBX;\n    \n    uVar3 = (**0x481874)();\n    pcVar2 = *0x481740;\n    iVar4 = (**0x481740)(uVar3);\n    pcVar1 = *0x481700;\n    for (; iVar4 != 0; iVar4 = (*pcVar2)(iVar4, 2)) {\n        iVar5 = fcn.00413dbb(iVar4);\n        if ((((iVar5 != 0) && (*0x25 != iVar4)) && (iVar6 = fcn.0041e7fc(*0x25, iVar4),  iVar6 != 0)) &&\n           (((uVar7 = (**0x481748)(iVar4, 0xfffffff0),  (uVar7 & 0x18000000) == 0 && ((*(iVar5 + 0x3c) & 2) != 0)) &&\n            (*(unaff_EBX + 0xb4) == 0)))) {\n            (*pcVar1)(iVar4, 4);\n            *(iVar5 + 0x3c) = *(iVar5 + 0x3c) & 0xfffffffd;\n        }\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "0041ea23": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041ea23(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *(param_1 + 0xb0);\n    if (param_2 != piVar1) {\n        *(param_1 + 0xb0) = 0;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0x160))(0, param_2, piVar1);\n        }\n        if (((*(param_1 + 0xb0) == 0) && (*(param_1 + 0xb0) = param_2,  param_2 != NULL)) && (param_3 != 0)) {\n            (**(*param_2 + 0x160))(1, param_2, piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0041eb33": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041eb33(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**(*param_1 + 0x15c))();\n    if (iVar1 != 0) {\n        return param_1[0x25];\n    }\n    if ((param_1[0x23] != 0) && (*(param_1[0x23] + 0x94) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "0041ed56": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041ed56(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((arg_10h == 0) && (arg_8h != 0)) {\n        iVar1 = 0;\n    }\n    else {\n        uVar2 = (**0x4a66d0)();\n        iVar1 = (**0x481494)(uVar2, 0, arg_ch, 0xffffffff, arg_8h, arg_10h);\n        if ((arg_8h != 0) && (arg_10h < iVar1)) {\n            iVar1 = fcn.00401103(0x80004005);\n        }\n        if ((0 < iVar1) && (arg_8h != 0)) {\n            *(arg_8h + -2 + iVar1 * 2) = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 220
    },
    "0041efd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041efd0(int32_t param_1)\n\n{\n    fcn.00413cf0();\n    if (*(param_1 + 0x80) != NULL) {\n    // WARNING: Could not recover jumptable at 0x0041efea. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(param_1 + 0x80) + 0x6c))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0041f340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f340(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_38h;\n    int32_t var_30h;\n    uint var_28h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = fcn.00419c68();\n    iVar1 = (**0x4815f0)(*(iVar1 + 0xc), arg_ch);\n    if (iVar1 != 0) {\n        fcn.00451550(&var_58h, 0, 0x30);\n        var_38h = arg_8h;\n        (**(*in_ECX + 100))(&var_58h);\n        if (var_30h != 0) {\n            iVar2 = fcn.00419c68();\n            iVar2 = fcn.004123f7(*(iVar2 + 8), var_30h, &var_28h);\n            if ((iVar2 != 0) && (var_14h != iVar1)) {\n                uVar3 = fcn.00416cdd(var_28h, var_10h, var_ch, iVar1);\n                return uVar3;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 315
    },
    "0041f48a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f48a(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iStack28;\n    int32_t *piStack24;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if (param_1[0x2d] != NULL) {\n        piStack24 = 0x41f49f;\n        (*param_1[0x2d])();\n    }\n    piVar2 = (**(*param_1 + 0x13c))();\n    if (piVar2 != NULL) {\n        piStack24 = 0x41f4ba;\n        iVar3 = (**(*piVar2 + 0x8c))();\n        if (iVar3 == 0) {\n            return;\n        }\n    }\n    piStack24 = 0x41f4c8;\n    iVar3 = fcn.00419c68();\n    piVar4 = *(iVar3 + 4);\n    if ((piVar4 != NULL) && (piVar4[8] == param_1)) {\n        if (piVar2 == NULL) {\n            piStack24 = 0x41f4e2;\n            iVar3 = (**(*piVar4 + 0x94))();\n            if (iVar3 == 0) {\n                return;\n            }\n        }\n        piStack24 = 0x41f4f1;\n        fcn.0040da9e();\n        iStack28 = 0x41f4fa;\n        fcn.0040da0a();\n        iStack28 = 0x41f4ff;\n        iStack28 = fcn.0042a51b();\n        if (iStack28 == 0) {\n            fcn.0042a53b();\n            return;\n        }\n        iStack28 = 0x41f510;\n        iVar3 = fcn.00419c68();\n        if ((*(iVar3 + 0x14) == '\\0') && (piVar4[8] == 0)) {\n            iStack28 = 0;\n            fcn.0040bc7b();\n            return;\n        }\n    }\n    if ((piVar2 != NULL) && (piVar2[0x13] != 0)) {\n        piStack24 = 0x41f536;\n        var_4h = (**(*piVar2 + 0x60))();\n        do {\n            if (var_4h == NULL) {\n                piStack24 = 0x41f564;\n                (**(*piVar2 + 0x7c))();\n                return;\n            }\n            piStack24 = &fcn.0041f48a::var_4h;\n            iStack28 = 0x41f548;\n            iVar3 = (**(*piVar2 + 100))();\n            if (iVar3 == 0) {\n                iStack28 = 0x4a3540;\n                piStack24 = &stack0xfffffffc;\n                fcn.004515ca(&stack0xffffffe4, 0x49617c);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            piStack24 = 0x41f553;\n            piVar4 = fcn.004148fc();\n        } while (piVar4 == param_1);\n        iStack28 = 0x41f576;\n        piStack24 = param_1;\n        (**(*piVar2 + 0x94))();\n    }\n    piStack24 = 0x41f57d;\n    (**(*param_1 + 0x60))();\n    return;\n}\n",
        "token_count": 827
    },
    "0041f6fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f6fe(int32_t *arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *piVar4;\n    int32_t *extraout_ECX;\n    \n    fcn.00413cf0();\n    uVar1 = fcn.0040e0b4();\n    piVar2 = in_ECX;\n    if ((uVar1 & 0x40000000) == 0) {\n        piVar2 = fcn.0041493b();\n    }\n    piVar4 = NULL;\n    if (piVar2 == NULL) {\n        fcn.00403bf2();\n        piVar4 = extraout_ECX;\n    }\n    if (arg_8h != piVar4) {\n        arg_ch = in_ECX;\n    }\n    if (arg_ch != piVar4) {\n        if ((piVar2 == arg_ch) ||\n           ((piVar4 = fcn.0041493b(),  piVar2 == piVar4 &&\n            (iVar3 = (**0x48183c)(arg_ch[8], 0x36d, 0x40, 0),  iVar3 != 0)))) {\n            piVar4 = 0x1;\n        }\n        else {\n            piVar4 = NULL;\n        }\n    }\n    piVar2[0xf] = piVar2[0xf] & 0xffffffdf;\n    if (piVar4 != NULL) {\n        piVar2[0xf] = piVar2[0xf] | 0x20;\n    }\n    fcn.0041f197((piVar4 == NULL) * '\\x04' + '\\x04');\n    piVar2 = in_ECX[0x2c];\n    if (piVar2 == NULL) {\n        iVar3 = (**(*in_ECX + 0x140))();\n        piVar2 = *(iVar3 + 0xb0);\n        if (piVar2 == NULL) {\n            return;\n        }\n    }\n    if ((arg_8h != NULL) && (arg_10h == 0)) {\n        (**(*piVar2 + 0x160))(1, piVar2, piVar2);\n    }\n    (**(*piVar2 + 0x164))(arg_8h);\n    return;\n}\n",
        "token_count": 546
    },
    "0041f7df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041f7df(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0041493b();\n    if (iVar2 == 0) {\n        iVar2 = fcn.00403bf2();\n    }\n    pcVar1 = *0x48183c;\n    param_2 = param_2 & 0xfff0;\n    if (*(iVar2 + 0x68) == 0) {\ncode_r0x0041f824:\n        fcn.00413cf0();\n    }\n    else {\n        if (param_2 < 0xf041) {\n            if (((param_2 != 0xf040) && (param_2 != 0xf000)) && (param_2 != 0xf010)) {\n                iVar2 = param_2 - 0xf020;\ncode_r0x0041f81d:\n                if ((iVar2 != 0) && (iVar2 != 0x10)) goto code_r0x0041f824;\n            }\n        }\n        else if ((param_2 != 0xf050) && (param_2 != 0xf060)) {\n            iVar2 = param_2 - 0xf120;\n            goto code_r0x0041f81d;\n        }\n        iVar2 = (**0x48183c)(*(param_1 + 0x20), 0x365, 0, (param_2 - 0xf000 >> 4) + 0x1ef00);\n        if (iVar2 == 0) {\n            (*pcVar1)(*(param_1 + 0x20), 0x111, 0xe147, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "0041fa76": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fa76(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if (arg_8h == NULL) {\n        fcn.00403bf2();\n    }\n    piVar1 = fcn.0041eb1f();\n    if (arg_10h == 0) {\n        fcn.0040e533(0, 0, 0, 0, 0, (-(arg_ch != 0) & 0xffffffc0) + 0x80 | 0x17);\n        (**(*arg_8h + 0x150))(arg_ch);\n        if ((arg_ch != 0) || (iVar2 = fcn.0041eb33(),  iVar2 == 0)) {\n            (**(*piVar1 + 0x148))(0);\n        }\n    }\n    else {\n        (**(*arg_8h + 0x150))(arg_ch);\n        piVar1[0x34] = piVar1[0x34] | 0xc;\n    }\n    iVar2 = fcn.0041eb33();\n    if (iVar2 == 0) {\n        return;\n    }\n    if (arg_8h[0x23] == NULL) {\n        uVar3 = arg_ch != 0;\n    }\n    else {\n        uVar3 = (**(*arg_8h[0x23] + 0x16c))();\n    }\n    if (uVar3 == 1) {\n        if (arg_ch != 0) {\n            piVar1[0x28] = -1;\n            if (arg_10h == 0) {\n                uVar4 = 8;\n                goto code_r0x0041fb5d;\n            }\n            piVar1[0x28] = 8;\n            goto code_r0x0041fb6b;\n        }\n    }\n    else if (uVar3 == 0) {\n        piVar1[0x28] = -1;\n        if (arg_10h != 0) {\n            piVar1[0x28] = 0;\n            return;\n        }\n        uVar4 = 0;\ncode_r0x0041fb5d:\n        fcn.0040e1f9(uVar4);\n        return;\n    }\n    if (arg_10h != 0) {\n        return;\n    }\ncode_r0x0041fb6b:\n    (**(*piVar1 + 0x148))(0);\n    return;\n}\n",
        "token_count": 590
    },
    "0041fd04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fd04(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.0041493b();\n    if (iVar1 == 0) {\n        fcn.00403bf2();\n    }\n    if ((in_ECX[0x20] != NULL) && (iVar2 = (**(*in_ECX[0x20] + 0x7c))(arg_8h, arg_ch, arg_10h),  iVar2 != 0)) {\n        return;\n    }\n    if (arg_ch == 0xffff) {\n        in_ECX[0xf] = in_ECX[0xf] & 0xffffffbf;\n        if (*(iVar1 + 0x68) == 0) {\n            in_ECX[0x2a] = 0xe001;\n        }\n        else {\n            in_ECX[0x2a] = 0xe002;\n        }\n        (**0x48183c)(in_ECX[8], 0x362, in_ECX[0x2a], 0);\n        iVar1 = (**(*in_ECX + 0x154))();\n        if (iVar1 != 0) {\n            (**0x48185c)(*(iVar1 + 0x20));\n        }\n        goto code_r0x0041fde4;\n    }\n    if ((arg_8h == 0) || ((arg_ch & 0x810) != 0)) {\n        in_ECX[0x2a] = 0;\n    }\n    else {\n        if (arg_8h - 0xf000 < 0x1f0) {\n            arg_8h = (arg_8h - 0xf000 >> 4) + 0xef00;\n        }\n        else if (0xfeff < arg_8h) {\n            in_ECX[0x2a] = 0xef1f;\n            goto code_r0x0041fde0;\n        }\n        in_ECX[0x2a] = arg_8h;\n    }\ncode_r0x0041fde0:\n    *(iVar1 + 0x3c) = *(iVar1 + 0x3c) | 0x40;\ncode_r0x0041fde4:\n    if (in_ECX[0x2a] != in_ECX[0x2b]) {\n        uVar3 = (**0x4817a0)(in_ECX[8]);\n        iVar1 = fcn.00413d94(uVar3);\n        if (iVar1 != 0) {\n            (**0x481784)(in_ECX[8], 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 640
    },
    "0041fe7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041fe7f(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        iVar1 = 0;\n    }\n    else {\n        var_4h = *(in_ECX + 0x88);\n        do {\n            if (var_4h == 0) {\n                return 0;\n            }\n            piVar2 = fcn.0040e44d(&var_4h);\n            iVar1 = *piVar2;\n            uVar3 = (**0x48170c)(*(iVar1 + 0x20));\n        } while ((uVar3 & 0xffff) != arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 202
    },
    "004203f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004203f9(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.00413cf0();\n    if (param_2 != 1) {\n        (**(*param_1 + 0x148))(1);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0042064b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042064b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar2 = fcn.004357b2(param_1 + 0x14, *(param_1 + 0x18));\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.00403bf2();\n    }\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = uStack8;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    return;\n}\n",
        "token_count": 318
    },
    "0042072f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042072f(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x3c) == 0) {\n        uVar1 = fcn.00413ac7(\"ImageList_Draw\");\n        uVar1 = (**0x481424)(uVar1);\n        *(param_1 + 0x3c) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x3c);\n    return;\n}\n",
        "token_count": 123
    },
    "004207dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004207dd(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00420813": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00420813(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x9c;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.00413ac7(\"ImageList_GetImageInfo\");\n        iVar3 = (**0x481424)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 135
    },
    "004208bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004208bc(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00420daf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00420daf(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint var_48h;\n    uint var_44h;\n    uint var_2ch;\n    uint var_28h;\n    uint uStack24;\n    uint var_10h;\n    int32_t iStack16;\n    int32_t iStack12;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x3c;\n    var_4h = 0x420dbb;\n    fcn.00451106();\n    var_4h = 10;\n    iStack12 = 0x420dc7;\n    fcn.004205df();\n    *(unaff_EBP + -4) = 0;\n    iStack12 = 10;\n    iStack16 = 0x420dd5;\n    fcn.004205df();\n    iVar1 = *(extraout_ECX + 0x88);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x10) = iVar1;\n    while (iVar1 != 0) {\n        iStack16 = unaff_EBP + -0x10;\n        var_10h = 0x420df7;\n        ppiVar3 = fcn.0040e44d();\n        piVar4 = *ppiVar3;\n        var_10h = 0x420e03;\n        (**(*piVar4 + 0x15c))();\n        iStack12 = piVar4[8];\n        iStack16 = 0x420e15;\n        fcn.00420c2c();\n        iVar1 = *(unaff_EBP + -0x10);\n    }\n    puVar5 = *(unaff_EBP + -0x44);\n    while( true ) {\n        while( true ) {\n            do {\n                if (puVar5 == NULL) {\n                    puVar5 = *(unaff_EBP + -0x28);\n                    while (puVar5 != NULL) {\n                        iStack12 = puVar5[2];\n                        puVar5 = *puVar5;\n                        var_10h = 0x420e79;\n                        var_10h = fcn.00413dbb();\n                        uStack24 = 0x485650;\n                        piVar4 = fcn.00422905();\n                        if (piVar4 != NULL) {\n                            var_10h = 0x420e91;\n                            (**(*piVar4 + 0x60))();\n                        }\n                    }\n                    *(unaff_EBP + -4) = 0;\n                    *(unaff_EBP + -0x2c) = vtable.CList_struct_HWND_____struct_HWND____.0;\n                    iStack16 = 0x420ea9;\n                    fcn.0041ed2b();\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    *(unaff_EBP + -0x48) = vtable.CList_struct_HWND_____struct_HWND____.0;\n                    iStack16 = 0x420eb8;\n                    fcn.0041ed2b();\n                    iStack16 = 0x420ebd;\n                    fcn.004511de();\n                    return;\n                }\n                iStack12 = puVar5[2];\n                puVar5 = *puVar5;\n                var_10h = 0x420e2c;\n                var_10h = fcn.00413dbb();\n                uStack24 = 0x488cd0;\n                piVar4 = fcn.00422905();\n            } while (piVar4 == NULL);\n            if (piVar4[0x25] != 0) break;\n            var_10h = 0x420e5f;\n            (**(*piVar4 + 0x60))();\n        }\n        var_10h = 0x420e4d;\n        piVar4 = fcn.004148fc();\n        if (piVar4 == NULL) break;\n        var_10h = 0x420e58;\n        (**(*piVar4 + 0x60))();\n    }\n    uStack24 = 0x4a3540;\n    fcn.004515ca(&stack0xffffffe8, 0x49617c);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1024
    },
    "0042116c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042116c(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piStack16;\n    \n    fcn.00420daf();\n    if (param_1[0x17] != 0) {\n        iVar4 = param_1[0x17];\n        piStack16 = 0x421187;\n        iVar3 = (**0x4816d8)();\n        if (iVar3 != iVar4) {\n            piStack16 = param_1[8];\n            (**0x4815b4)();\n        }\n    }\n    iVar4 = fcn.00419c68();\n    iVar4 = *(iVar4 + 4);\n    if (((iVar4 != 0) && (*(iVar4 + 0x20) == param_1)) && (*(iVar4 + 0x6c) == 0)) {\n        piStack16 = NULL;\n        (**0x4815f4)(param_1[8]);\n    }\n    if (param_1[0x13] != NULL) {\n        (**(*param_1[0x13] + 4))();\n    }\n    piVar1 = param_1[0xb];\n    param_1[0x13] = 0;\n    if (piVar1 != NULL) {\n        piStack16 = piVar1;\n        (**(*piVar1 + 0xc))();\n    }\n    if (param_1[10] != NULL) {\n        (**(*param_1[10] + 8))();\n    }\n    iVar4 = fcn.00422fa4(0x403c0c);\n    if (iVar4 != 0) {\n        piStack16 = *(iVar4 + 0x60);\n        (**(*param_1 + 0x110))(*(iVar4 + 0x5c));\n        return;\n    }\n    piStack16 = 0x4a3540;\n    fcn.004515ca(&stack0xfffffff0, 0x49617c);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 484
    },
    "00422621": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422621(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t in_ECX;\n    uint *puVar1;\n    bool bVar2;\n    uint var_4h;\n    \n    bVar2 = false;\n    puVar1 = arg_8h * 0x14 + *(in_ECX + 0x78);\n    *puVar1 = arg_ch;\n    if (puVar1[2] != arg_10h) {\n        bVar2 = ((puVar1[2] ^ arg_10h) & 0x8000000) == 0;\n        if (bVar2) {\n            puVar1[3] = puVar1[3] | 1;\n            puVar1[2] = arg_10h;\n            fcn.0042237f(arg_8h, puVar1[4], 1);\n        }\n        bVar2 = !bVar2;\n        puVar1[2] = arg_10h;\n    }\n    if (arg_14h != puVar1[1]) {\n        puVar1[1] = arg_14h;\n        bVar2 = true;\n    }\n    if (bVar2) {\n        fcn.0042246a(1, 0);\n    }\n    return;\n}\n",
        "token_count": 308
    },
    "004228b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004228b8(int32_t param_1, int32_t param_2)\n\n{\n    if (param_1 != 0) goto code_r0x004228c3;\n    do {\n        param_1 = fcn.00403bf2();\ncode_r0x004228c3:\n    } while (param_2 == 0);\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_1 = *(param_1 + 0x10);\n    } while (param_1 != 0);\n    return 0;\n}\n",
        "token_count": 137
    },
    "00422905": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00422905(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = fcn.004228ed(param_1);\n        if (iVar1 != 0) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 80
    },
    "004229af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004229af(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x004229b6. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x481430)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "00422af7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00422af7(int32_t param_1, int32_t param_2)\n\n{\n    int32_t extraout_ECX;\n    \n    if (param_2 == 0) {\n        fcn.00403bf2();\n        param_1 = extraout_ECX;\n    }\n    return *(param_1 + 4) + param_2;\n}\n",
        "token_count": 87
    },
    "00422eb6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422eb6(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (**0x481348)(in_ECX + 7);\n    fcn.00422b2d(arg_8h);\n    (**0x481350)(in_ECX + 7);\n    (**0x481430)(arg_8h[3]);\n    (***arg_8h)(1);\n    (**0x481334)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 340
    },
    "00422f4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00422f4b(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    (**0x481348)(param_1 + 7);\n    if (param_2 == 0) {\n        iVar2 = (**0x48134c)(*param_1);\n        if (iVar2 != 0) {\n            fcn.00422eb6(iVar2, unaff_retaddr);\n        }\n    }\n    else {\n        iVar2 = param_1[5];\n        while (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            fcn.00422eb6(iVar2, param_3);\n            iVar2 = iVar1;\n        }\n    }\n    (**0x481350)(param_1 + 7);\n    return;\n}\n",
        "token_count": 204
    },
    "00422fa4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00422fa4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    if (*(unaff_EBP + 8) != 0) goto code_r0x00422fc3;\ncode_r0x00422fbe:\n    do {\n        fcn.00403bf2();\ncode_r0x00422fc3:\n        if (*extraout_ECX != 0) goto code_r0x00422ffe;\n        if (*0x4a831c == 0) {\n            *(unaff_EBP + -0x10) = 0x4a8320;\n            *(unaff_EBP + -4) = 0;\n            *0x4a831c = fcn.00422cc9();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x4a831c == 0) goto code_r0x00422fbe;\n        }\n        iVar1 = fcn.00422b93();\n        *extraout_ECX = iVar1;\n        if (iVar1 != 0) {\ncode_r0x00422ffe:\n            iVar1 = fcn.004229c0(*extraout_ECX);\n            if (iVar1 == 0) {\n                arg_ch = (**(unaff_EBP + 8))();\n                fcn.00422d6b(*extraout_ECX, arg_ch);\n            }\n            fcn.004511de();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 391
    },
    "004234da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004234da(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    \n    piVar1 = (**(*param_1 + 0x44))(param_2);\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*param_1 + 0x38))();\n        if ((((*0x48f430 == *param_2) && (param_2[1] == *0x48f434)) && (param_2[2] == *0x48f438)) &&\n           (param_2[3] == *0x48f43c)) {\n            do {\n                for (piVar1 = ppiVar2[1]; *piVar1 != 0; piVar1 = piVar1 + 2) {\n                    if (*(piVar1[1] + param_1) != 0) {\n                        return piVar1[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar3 = ppiVar2[1]; piVar1 = *ppiVar3,  piVar1 != NULL; ppiVar3 = ppiVar3 + 2) {\n                    if (((*piVar1 == *param_2) && (piVar1[1] == param_2[1])) &&\n                       ((piVar1[2] == param_2[2] && ((piVar1[3] == param_2[3] && (*(ppiVar3[1] + param_1) != 0)))))) {\n                        return ppiVar3[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 454
    },
    "004235e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004235e8(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    \n    piVar1 = param_1 + 4;\n    if (*piVar1 != 0) {\n        uVar2 = fcn.004234da(0x48f430);\n        (**0x481324)(piVar1);\n        (**0x48195c)(uVar2, 0);\n        *piVar1 = 0;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "0042363f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042363f(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != 0) {\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        return;\n    }\n    (**0x481324)(param_1 + 4);\n    return;\n}\n",
        "token_count": 80
    },
    "0042365a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042365a(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar3;\n    \n    iVar3 = 8;\n    fcn.00451106(8);\n    if ((extraout_ECX[1] != 0) && (iVar2 = (**0x481358)(extraout_ECX + 1),  iVar2 == 0)) {\n        fcn.00419cfd(extraout_ECX[7]);\n        iVar1 = *extraout_ECX;\n        *(unaff_EBP + -4) = 0;\n        (**(iVar1 + 0x10))();\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x10) != 0) {\n            fcn.00419083();\n            iVar3 = iVar2;\n        }\n    }\n    fcn.004511de(iVar3);\n    return;\n}\n",
        "token_count": 266
    },
    "004238cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004238cf(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 0x11;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.00403ac8(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.00403a9d(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n        *(param_1 + 4) = uVar1;\n        fcn.00451550(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 212
    },
    "00423b09": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423b09(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.004357b2(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    return;\n}\n",
        "token_count": 289
    },
    "00423d32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423d32(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x44) != 0);\n        while (var_8h != 0) {\n            fcn.00423a4f(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x58) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x5c) == 2) {\n                puVar1[1] = 0;\n            }\n            (**(param_1 + 0x18))(var_4h);\n        }\n        fcn.00423929();\n        fcn.00439a71();\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "004243a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004243a4(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x4a8374;\n    uVar3 = *0x4a8370;\n    if (in_ECX != NULL) {\n        iVar2 = (**0x4810f0)(in_ECX[2]);\n        pcVar1 = *0x4811ec;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.00406714(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (**0x4811ec)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = *0x481434;\n    uVar3 = (**0x481434)(*arg_8h, 0x9ec, uVar3);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], 0x9ec, uVar4);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 331
    },
    "00424432": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424432(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x4a8374;\n    uVar3 = *0x4a8370;\n    if (in_ECX != NULL) {\n        iVar2 = (**0x4810f0)(in_ECX[2]);\n        pcVar1 = *0x4811ec;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.004066ab(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (**0x4811ec)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = *0x481434;\n    uVar3 = (**0x481434)(*arg_8h, uVar3, 0x9ec);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], uVar4, 0x9ec);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 330
    },
    "00424b78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424b78(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar2 = fcn.004357b2(param_1 + 0x14, *(param_1 + 0x18));\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = uStack8;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 304
    },
    "00424c24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424c24(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.00403bf2();\n    }\n    arg_8h = *(iVar1 + 8);\n    while (arg_8h != 0) {\n        fcn.0040e466(&arg_8h);\n        fcn.00424bd1();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00424c61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424c61(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.00403bf2();\n    }\n    arg_8h = *(iVar1 + 4);\n    while (arg_8h != 0) {\n        fcn.0040e44d(&arg_8h);\n        fcn.00424bfb();\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00424ed4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00424ed4(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_24h;\n    \n    if (arg_8h == NULL) {\n        fcn.00401103(0x80004005);\n        in_ECX = extraout_ECX;\n    }\n    iVar1 = fcn.004562b6(&var_24h, in_ECX);\n    if (iVar1 == 0) {\n        puVar2 = &var_24h;\n        puVar3 = arg_8h;\n        for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    else {\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 236
    },
    "0042511d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042511d(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack36;\n    uint var_18h;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    uint var_ah;\n    \n    if (arg_ch == 0) {\n        iStack36 = 0x4a3540;\n        fcn.004515ca(&stack0xffffffdc, 0x49617c);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iStack36 = 0x425139;\n    var_18h._0_2_ = fcn.00424f1a();\n    iStack36 = 0x425144;\n    var_18h._2_2_ = fcn.00424f3a();\n    iStack36 = 0x42514f;\n    var_12h._0_2_ = fcn.00424f56();\n    iStack36 = 0x42515a;\n    var_12h._2_2_ = fcn.00424f71();\n    iStack36 = 0x425165;\n    var_eh = fcn.00424f8d();\n    iStack36 = 0x425170;\n    var_ch = fcn.00424fa9();\n    var_ah._0_2_ = 0;\n    iStack36 = &fcn.0042511d::var_ah + 2;\n    iVar2 = (**0x481310)(&fcn.0042511d::var_18h);\n    pcVar1 = *0x48148c;\n    if (iVar2 == 0) {\n        uVar3 = (**0x48148c)(0);\n        fcn.0040a819(uVar3);\n    }\n    iVar2 = (**0x481314)(&fcn.0042511d::var_ah + 2, arg_ch);\n    if (iVar2 == 0) {\n        uVar3 = (*pcVar1)(0);\n        fcn.0040a819(uVar3);\n    }\n    return;\n}\n",
        "token_count": 504
    },
    "00425633": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425633(int32_t *arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    pcVar4 = arg_ch;\n    if (arg_ch != NULL) goto code_r0x00425646;\n    do {\n        fcn.00403bf2();\ncode_r0x00425646:\n    } while (arg_10h == 0);\n    arg_ch = NULL;\n    cVar2 = *pcVar4;\n    pcVar5 = pcVar4;\n    while (cVar2 != '\\0') {\n        if (*pcVar5 == '%') {\n            cVar2 = pcVar5[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x0042569e;\n                if (cVar2 < ':') goto code_r0x0042567e;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x0042567e:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar5 = pcVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x004256b1;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (**0x48145c)(iVar3);\n                arg_ch = arg_ch + iVar3;\n            }\n        }\n        else {\ncode_r0x0042569e:\n            iVar3 = fcn.00456740(*pcVar5);\n            if (iVar3 != 0) {\n                arg_ch = arg_ch + 1;\n                pcVar5 = pcVar5 + 1;\n            }\n            pcVar5 = pcVar5 + 1;\ncode_r0x004256b1:\n            arg_ch = arg_ch + 1;\n        }\n        cVar2 = *pcVar5;\n    }\n    pcVar5 = fcn.004023b3(arg_ch);\n    cVar2 = *pcVar4;\n    do {\n        if (cVar2 == '\\0') {\n            fcn.004081bb(pcVar5 - *arg_8h);\n            return;\n        }\n        if (*pcVar4 == '%') {\n            cVar2 = pcVar4[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x0042573a;\n                if (cVar2 < ':') goto code_r0x004256f7;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x004256f7:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar4 = pcVar4 + 2;\n            if (arg_14h <= iVar3) {\n                *pcVar5 = '?';\n                goto code_r0x00425757;\n            }\n            piVar1 = arg_10h + iVar3 * 4;\n            iVar3 = *piVar1;\n            if (iVar3 != 0) {\n                iVar3 = (**0x48145c)(iVar3);\n                fcn.0040a8c9(pcVar5, arg_ch + 1, *piVar1);\n                arg_ch = arg_ch - iVar3;\n                pcVar5 = pcVar5 + iVar3;\n            }\n        }\n        else {\ncode_r0x0042573a:\n            iVar3 = fcn.00456740(*pcVar4);\n            if (iVar3 != 0) {\n                *pcVar5 = *pcVar4;\n                pcVar5 = pcVar5 + 1;\n                pcVar4 = pcVar4 + 1;\n                arg_ch = arg_ch + -1;\n            }\n            *pcVar5 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\ncode_r0x00425757:\n            pcVar5 = pcVar5 + 1;\n            arg_ch = arg_ch + -1;\n        }\n        cVar2 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 994
    },
    "00425fa3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.00425fa3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint unaff_retaddr;\n    \n    if (param_1 == 0) {\n        fcn.00403bf2();\n    }\n    iVar1 = fcn.00419c68();\n    fcn.0042657b(0);\n    puVar2 = *(iVar1 + 0x1c);\n    while( true ) {\n        if (puVar2 == NULL) {\n            fcn.004265e8(0);\n            return NULL;\n        }\n        iVar1 = (**0x4813a8)(unaff_retaddr, *puVar2);\n        if (iVar1 == 0) break;\n        puVar2 = puVar2[5];\n    }\n    fcn.004265e8(0);\n    return puVar2;\n}\n",
        "token_count": 197
    },
    "004262b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004262b1(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    if ((*(extraout_ECX + 0x24) != 0) && ((*(extraout_ECX + 0x18) & 2) == 0)) {\n        fcn.00426066();\n    }\n    fcn.00425986();\n    fcn.00401fb6();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 166
    },
    "00426512": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00426512(void)\n\n{\n    if (*0x4a83b8 == 0) {\n        *0x4a83b8 = 1;\n        (**0x48133c)(0x4a8558);\n    }\n    return *0x4a83b8;\n}\n",
        "token_count": 70
    },
    "0042657b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042657b(uint32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (0x10 < param_1) {\n        fcn.00403bf2();\n    }\n    if (*0x4a83b8 == 0) {\n        fcn.00426512();\n    }\n    pcVar2 = *0x481348;\n    piVar1 = param_1 * 4 + 0x4a8570;\n    if (*piVar1 == 0) {\n        (**0x481348)(0x4a8558);\n        if (*piVar1 == 0) {\n            (**0x48133c)(param_1 * 0x18 + 0x4a83c0);\n            *piVar1 = *piVar1 + 1;\n        }\n        (**0x481350)(0x4a8558);\n    }\n    (*pcVar2)(param_1 * 0x18 + 0x4a83c0);\n    return;\n}\n",
        "token_count": 235
    },
    "0042698d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042698d(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    piVar2 = arg_8h;\n    if ((*arg_8h != 0x2011) || (iVar3 = (**0x481508)(*(arg_8h + 4)),  iVar3 != 1)) {\n        (**0x48152c)(piVar2);\n        var_8h = 0;\n        var_ch = arg_ch;\n        *piVar2 = 0x2011;\n        iVar3 = (**0x481504)(0x11, 1, &var_ch);\n        *(piVar2 + 4) = iVar3;\n        if (iVar3 != 0) {\n            return;\n        }\n        fcn.00403bbe();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar4 = (**0x481510)(*(piVar2 + 4), 1, &var_4h);\n    fcn.004266e2(uVar4);\n    uVar4 = (**0x481514)(*(piVar2 + 4), 1, &arg_8h);\n    fcn.004266e2(uVar4);\n    iVar3 = arg_8h - var_4h;\n    if (iVar3 < 0) {\n        iVar3 = 0;\n    }\n    if (iVar3 == arg_ch) {\n        return;\n    }\n    var_ch = arg_ch;\n    var_8h = var_4h;\n    uVar4 = (**0x481500)(*(piVar2 + 4), &var_ch);\n    fcn.004266e2(uVar4);\n    return;\n}\n",
        "token_count": 437
    },
    "00426cb9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426cb9(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        if ((arg_8h == 0) || (arg_ch == 0)) {\n            fcn.00403bf2();\n        }\n        do {\n            arg_10h = arg_10h + -1;\n            fcn.00426c86();\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00427018": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00427018(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        fcn.00451550(param_1, 0, 0x18);\n    }\n    return;\n}\n",
        "token_count": 52
    },
    "00427484": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427484(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = (**0x481518)(*(in_ECX + 8), &var_ch);\n    fcn.004266e2(uVar1);\n    iVar2 = (**0x481508)(*(in_ECX + 8));\n    if (iVar2 == 1) {\n        (**0x481510)(*(in_ECX + 8), 1, &var_8h);\n        (**0x481514)(*(in_ECX + 8), 1, &var_4h);\n        iVar2 = (**0x48150c)(*(in_ECX + 8));\n        iVar2 = iVar2 * ((var_4h - var_8h) + 1);\n        fcn.00439c7c(iVar2, 0xffffffff);\n        fcn.00404383(*(arg_8h + 4), iVar2, var_ch, iVar2);\n    }\n    else {\n        fcn.00439c7c(0, 0xffffffff);\n    }\n    (**0x48151c)(*(in_ECX + 8));\n    return;\n}\n",
        "token_count": 301
    },
    "004279bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004279bd(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = (**0x481518)(*(in_ECX + 8), &var_ch);\n    fcn.004266e2(uVar1);\n    iVar2 = (**0x481508)(*(in_ECX + 8));\n    if (iVar2 == 1) {\n        (**0x481510)(*(in_ECX + 8), 0, &var_8h);\n        (**0x481514)(*(in_ECX + 8), 0, &var_4h);\n        iVar2 = (**0x48150c)(*(in_ECX + 8));\n        iVar2 = iVar2 * ((var_4h - var_8h) + 1);\n        fcn.00439c7c(iVar2, 0xffffffff);\n        fcn.00404383(*(arg_8h + 4), iVar2, var_ch, iVar2);\n    }\n    else {\n        fcn.00439c7c(0, 0xffffffff);\n    }\n    (**0x48151c)(*(in_ECX + 8));\n    return;\n}\n",
        "token_count": 301
    },
    "00427a57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427a57(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack28;\n    uint *puStack24;\n    uint uStack20;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack20 = *(param_1 + 8);\n    puStack24 = 0x427a68;\n    var_8h = param_1;\n    var_4h = param_1;\n    iVar2 = (**0x481508)();\n    if (iVar2 != 1) {\n        uStack28 = 0x4a3540;\n        puStack24 = &stack0xfffffffc;\n        fcn.004515ca(&stack0xffffffe4, 0x49617c);\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    puStack24 = &fcn.00427a57::var_4h;\n    uStack28 = 1;\n    fcn.00426f4a();\n    fcn.00426f30(1, &fcn.00427a57::var_8h);\n    return (var_4h - var_8h) + 1;\n}\n",
        "token_count": 287
    },
    "00427a96": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427a96(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (**0x481508)(*(in_ECX + 8));\n    if (iVar1 != 1) {\n        fcn.00403bf2();\n    }\n    var_4h = 0;\n    var_8h = arg_8h;\n    fcn.00426fb2(&var_8h);\n    return;\n}\n",
        "token_count": 125
    },
    "00427acb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00427acb(uint16_t *param_1, uint32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint16_t uVar4;\n    \n    if ((param_3 != 0) && (param_4 != 0)) {\n        uVar4 = param_2;\n        if (((param_2 & 0x7000) == 0) && ((uVar4 != 0 && (uVar4 != 1)))) {\n            (**0x48152c)(param_1);\n            iVar2 = (**0x481504)(param_2, param_3, param_3);\n            *(param_1 + 4) = iVar2;\n            if (iVar2 == 0) {\n                iVar2 = fcn.00403bbe();\n            }\n            *param_1 = uVar4 | 0x2000;\n            *(param_1 + 10) = param_3;\n            uVar3 = (**0x48150c)(iVar2);\n            *(param_1 + 8) = uVar3;\n            return;\n        }\n    }\n    fcn.00403bf2();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 299
    },
    "0042822e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042822e(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t in_ECX;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = arg_ch;\n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    if (arg_ch != 0) goto code_r0x00428243;\n    while( true ) {\n        fcn.00403bf2();\ncode_r0x00428243:\n        var_4h = arg_14h;\n        var_8h = uVar2;\n        fcn.00427acb(arg_8h, 1, &var_8h);\n        if (arg_10h == 0) break;\n        fcn.00426ecd(&arg_ch);\n        uVar3 = (**0x48150c)(*(in_ECX + 8));\n        iVar1 = uVar3 * uVar2;\n        uVar3 = iVar1;\n        if ((iVar1 >> 0x20 == 0) && (uVar3 < 0x80000000)) {\n            fcn.00404383(arg_ch, uVar3, arg_10h, uVar3);\n            fcn.00426ee3();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "0042936d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042936d(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_8h == 0) {\n        fcn.00403bf2();\n    }\n    uVar1 = (**0x481568)(arg_8h);\n    if (arg_ch == 0) {\n        iVar2 = (**0x48145c)(uVar1);\n        iVar2 = iVar2 + 1;\n    }\n    else {\n        fcn.00403c40(arg_ch, arg_10h, uVar1, 0xffffffff);\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 166
    },
    "004293ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004293ab(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint uVar5;\n    uchar *puStack848;\n    char *pcStack844;\n    uint uStack840;\n    uchar *puStack836;\n    code *pcStack832;\n    uchar *arg_8h;\n    char acStack784 [124];\n    uchar auStack660 [132];\n    uchar auStack528 [260];\n    char acStack268 [260];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a5230 ^ &stack0xfffffd6c;\n    iVar2 = fcn.00419c68();\n    *(iVar2 + 8) = *(param_1 + 0x44);\n    *(iVar2 + 0xc) = *(param_1 + 0x44);\n    iVar3 = (**0x4813b8)();\n    if ((iVar3 == 0) || (iVar3 == 0x104)) {\n        fcn.00405e83();\n    }\n    puVar4 = (**0x48155c)();\n    if (puVar4 == NULL) {\n        fcn.00405e83();\n    }\n    *puVar4 = 0;\n    arg_8h = &stack0xfffffef4;\n    pcStack832 = 0x429434;\n    iVar3 = fcn.0042936d(arg_8h, &stack0xfffffdf0, 0x104);\n    if (iVar3 != 0) {\n        pcStack832 = 0x42943d;\n        fcn.00405e83();\n    }\n    if (*(param_1 + 0x60) == 0) {\n        pcStack832 = &stack0xfffffdf0;\n        puStack836 = 0x42944f;\n        iVar3 = fcn.0045587b();\n        *(param_1 + 0x60) = iVar3;\n        if (iVar3 == 0) goto code_r0x00403bbe;\n    }\n    iVar3 = *(param_1 + 0x50);\n    if (iVar3 == 0) {\n        pcStack832 = pe_nt_image_headers32;\n        puStack836 = &stack0xfffffcf0;\n        uStack840 = 0xe000;\n        pcStack844 = 0x429476;\n        iVar3 = fcn.00409992();\n        if (iVar3 == 0) {\n            pcStack844 = *(param_1 + 0x60);\n        }\n        else {\n            pcStack844 = &stack0xfffffcf0;\n        }\n        puStack848 = 0x429488;\n        iVar3 = fcn.0045587b();\n        *(param_1 + 0x50) = iVar3;\n        if (iVar3 == 0) goto code_r0x00403bbe;\n    }\n    *(iVar2 + 0x10) = iVar3;\n    if (*(param_1 + 100) == 0) {\n        puStack848 = &stack0xfffffff8 + -puVar4;\n        if (*(param_1 + 0x6c) == 1) {\n            pcStack844 = \".CHM\";\n        }\n        else {\n            pcStack844 = \".HLP\";\n        }\n        fcn.0040a8c9(puVar4);\n        pcStack844 = &stack0xfffffef4;\n        puStack848 = 0x4294cc;\n        iVar2 = fcn.0045587b();\n        *(param_1 + 100) = iVar2;\n        if (iVar2 == 0) goto code_r0x00403bbe;\n        *puVar4 = 0;\n    }\n    if (*(param_1 + 0x68) == 0) {\n        pcStack844 = \".INI\";\n        puStack848 = 0x104;\n        uVar5 = fcn.00455a73(&stack0xfffffdf0);\n        fcn.00401000(uVar5);\n        iVar2 = fcn.0045587b(&stack0xfffffdf0);\n        *(param_1 + 0x68) = iVar2;\n        if (iVar2 == 0) {\ncode_r0x00403bbe:\n            puStack848 = 0x4a3410;\n            pcStack844 = &stack0xfffffd6c;\n            fcn.004515ca(&stack0xfffffcb0, 0x496084);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    pcStack832 = 0x429522;\n    fcn.004510f7(arg_8h);\n    return;\n}\n",
        "token_count": 1044
    },
    "0042952a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042952a(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    \n    pcVar1 = *0x481304;\n    uVar2 = (**0x481304)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.00419c68();\n    *(iVar3 + 8) = unaff_ESI;\n    *(iVar3 + 0xc) = unaff_ESI;\n    fcn.004190c3();\n    iVar3 = fcn.00419c68();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x48) = param_1;\n        *(iVar3 + 0x4c) = param_2;\n        *(iVar3 + 0x44) = unaff_ESI;\n        fcn.004293ab();\n    }\n    iVar3 = fcn.00419c68();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.0040cf11();\n    }\n    iVar3 = (**0x481420)(\"user32.dll\");\n    if (iVar3 != 0) {\n        *0x4a8154 = (**0x481424)(iVar3, \"NotifyWinEvent\");\n    }\n    return 1;\n}\n",
        "token_count": 324
    },
    "004296fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004296fd(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x54) == 0) {\n        arg_10h = (**0x481300)(arg_8h, arg_ch, arg_10h, *(in_ECX + 0x68));\n    }\n    else {\n        var_4h = in_ECX;\n        iVar1 = fcn.004296b7(arg_8h);\n        if (iVar1 != 0) {\n            arg_8h = 4;\n            iVar2 = (**0x48101c)(iVar1, arg_ch, 0, &var_8h, &var_4h, &arg_8h);\n            (**0x481030)(iVar1);\n            if (iVar2 == 0) {\n                return var_4h;\n            }\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 251
    },
    "00429766": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429766(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    if (*(in_ECX + 0x54) == 0) {\n        fcn.0045526a(&var_14h, 0x10, 0x483468, arg_10h);\n        (**0x4812fc)(arg_8h, arg_ch, &var_14h, *(in_ECX + 0x68));\n    }\n    else {\n        iVar1 = fcn.004296b7(arg_8h);\n        if (iVar1 != 0) {\n            (**0x481004)(iVar1, arg_ch, 0, 4, &arg_10h, 4);\n            (**0x481030)(iVar1);\n        }\n    }\n    fcn.004510f7(unaff_EBX);\n    return;\n}\n",
        "token_count": 255
    },
    "004297ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004297ed(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x54) == 0) {\n        uVar3 = (**0x4812fc)(arg_8h, arg_ch, arg_10h, *(in_ECX + 0x68));\n        return uVar3;\n    }\n    if (arg_ch == 0) {\n        iVar1 = fcn.00429626();\n        if (iVar1 != 0) {\n            iVar2 = (**0x481014)(iVar1, arg_8h);\n            goto code_r0x00429859;\n        }\n    }\n    else {\n        iVar1 = fcn.004296b7(arg_8h);\n        if (arg_10h == 0) {\n            if (iVar1 != 0) {\n                iVar2 = (**0x481000)(iVar1, arg_ch);\ncode_r0x00429859:\n                (**0x481030)(iVar1);\n                return iVar2 == 0;\n            }\n        }\n        else if (iVar1 != 0) {\n            iVar2 = (**0x48145c)(arg_10h);\n            iVar2 = (**0x481004)(iVar1, arg_ch, 0, 1, arg_10h, iVar2 + 1);\n            goto code_r0x00429859;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 354
    },
    "00429883": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00429883(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x54) == 0) {\n        iVar2 = fcn.00403a9d(arg_14h * 2 + 1);\n        uVar1 = 0;\n        if (arg_14h != 0) {\n            do {\n                *(iVar2 + uVar1 * 2) = (*(arg_10h + uVar1) & 0xf) + 0x41;\n                *(iVar2 + 1 + uVar1 * 2) = (*(arg_10h + uVar1) >> 4) + 0x41;\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < arg_14h);\n        }\n        *(iVar2 + uVar1 * 2) = 0;\n        uVar1 = fcn.004297ed(arg_8h, arg_ch, iVar2);\n        fcn.00403ac8(iVar2);\n    }\n    else {\n        uVar1 = fcn.004296b7(arg_8h);\n        if (uVar1 != 0) {\n            iVar2 = (**0x481004)(uVar1, arg_ch, 0, 3, arg_10h, arg_14h);\n            (**0x481030)(uVar1);\n            uVar1 = iVar2 == 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 372
    },
    "00429c1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429c1d(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = arg_8h;\n    iVar4 = fcn.004266ca(arg_8h, 0xffffffff);\n    if (iVar4 == 0) {\n        fcn.00403bf2();\n    }\n    iVar4 = (**0x48145c)(arg_8h);\n    iVar5 = fcn.0042936d(arg_8h, 0, 0);\n    iVar5 = iVar5 + -1;\n    pcVar1 = arg_8h + (iVar4 - iVar5);\n    if (arg_ch < iVar4) {\n        if (arg_ch < iVar5) {\n            if (arg_10h == 0) {\n                *arg_8h = '\\0';\n                return;\n            }\n        }\n        else {\n            pcVar6 = arg_8h + 2;\n            if ((*arg_8h == '\\\\') && (arg_8h[1] == '\\\\')) {\n                for (; *pcVar6 != '\\\\'; pcVar6 = fcn.004550d6(pcVar6)) {\n                }\n            }\n            arg_8h = pcVar6;\n            if (3 < iVar4 - iVar5) {\n                do {\n                    arg_8h = fcn.004550d6(arg_8h);\n                } while (*arg_8h != '\\\\');\n            }\n            pcVar2 = *0x48145c;\n            iVar8 = arg_8h - pcVar3;\n            if (iVar8 + 5 + iVar5 <= arg_ch) {\n                while (iVar5 = (*pcVar2)(arg_8h),  arg_ch < iVar5 + 4 + iVar8) {\n                    do {\n                        arg_8h = fcn.004550d6(arg_8h);\n                    } while (*arg_8h != '\\\\');\n                }\n                if ((iVar8 < 0) || (arg_ch <= iVar8)) {\n                    iVar8 = arg_ch;\n                }\n                uVar7 = fcn.00451210(pcVar3 + iVar8, 5, \"\\\\...\", 5);\n                fcn.00401000(uVar7);\n                fcn.0040f3fe(pcVar3, iVar4, arg_8h);\n                return;\n            }\n        }\n        fcn.0040a8c9(pcVar3, iVar4, pcVar1);\n    }\n    return;\n}\n",
        "token_count": 617
    },
    "0042a5b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042a5b8(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    if (arg_10h == 0) {\n        uVar1 = (**0x48145c)(arg_ch);\n        iVar2 = (**0x48102c)(0x80000000, arg_8h, 1, arg_ch, uVar1);\n        bVar4 = iVar2 == 0;\n    }\n    else {\n        iVar2 = (**0x481038)(0x80000000, arg_8h, &arg_8h);\n        if (iVar2 == 0) {\n            iVar2 = (**0x48145c)(arg_ch);\n            iVar2 = (**0x481004)(arg_8h, arg_10h, 0, 1, arg_ch, iVar2 + 1);\n            iVar3 = (**0x481030)(arg_8h);\n            if ((iVar3 == 0) && (iVar2 == 0)) {\n                return true;\n            }\n        }\n        bVar4 = false;\n    }\n    return bVar4;\n}\n",
        "token_count": 277
    },
    "0042a954": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a954(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *(param_1 + 8);\n    iVar3 = 0;\n    var_4h = param_1;\n    while (var_8h != 0) {\n        ppiVar2 = fcn.0040e44d(&var_8h);\n        piVar1 = *ppiVar2;\n        var_4h = (**(*piVar1 + 0x54))();\n        while (var_4h != 0) {\n            (**(*piVar1 + 0x58))(&var_4h);\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 206
    },
    "0042ac36": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042ac36(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    iVar4 = 0xc;\n    fcn.00451106(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *extraout_ECX = vtable.CDocManager.0;\n    pcVar1 = extraout_ECX[2];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = pcVar1;\n    while (pcVar1 != NULL) {\n        *(unaff_EBP + -0x14) = pcVar1;\n        iVar4 = unaff_EBP + -0x10;\n        ppiVar3 = fcn.0040e44d();\n        piVar2 = *ppiVar3;\n        if (piVar2[8] != 0) {\n            fcn.00424ac7(*(unaff_EBP + -0x14));\n            (**(*piVar2 + 4))(1);\n        }\n        pcVar1 = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00424b6d(iVar4);\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 356
    },
    "0042c2ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0042c2ef(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00451550(&var_14h, 0, 0x14);\n    var_4h = 0;\n    var_10h = arg_ch;\n    if (arg_10h == 0) {\n        var_14h = 0;\n    }\n    else {\n        var_14h = *(in_ECX + 0x60);\n    }\n    if (*(in_ECX + 0x5c) == 0) {\n        piVar1 = NULL;\n    }\n    else {\n        piVar1 = fcn.0042285b();\n        if (piVar1 != NULL) {\n            iVar2 = (**(*piVar1 + 0x138))(*(in_ECX + 0x44), 0x44000000, arg_8h, &var_14h);\n            piVar1 = -(iVar2 != 0) & piVar1;\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 292
    },
    "0042c6c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042c6c0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00451106(0);\n    iVar1 = fcn.00419cdb();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00403a8b(0x424023);\n        iVar3 = fcn.00403a9d(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00423bd7(0x4866dc, 0x42c689, 0x42c61b, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar4;\n        fcn.00403a8b(uVar2);\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 317
    },
    "0042c7af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042c7af(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0042c785();\n    uVar1 = (**0x4816e8)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "0042cee1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042cee1(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int16_t iVar5;\n    bool bVar6;\n    \n    bVar6 = *(arg_8h + 2) == -1;\n    iVar1 = fcn.0042ce96(arg_8h);\n    iVar2 = fcn.0042ce2a(arg_8h);\n    if (iVar2 != 0) {\n        iVar1 = iVar1 + (bVar6 * 2 + 1) * 2;\n        iVar2 = fcn.004518b0(iVar1);\n        iVar1 = iVar1 + 2 + iVar2 * 2;\n    }\n    if (bVar6) {\n        iVar5 = *(arg_8h + 0x10);\n    }\n    else {\n        iVar5 = *(arg_8h + 8);\n    }\n    if (iVar5 != 0) {\n        do {\n            puVar3 = (iVar1 + 3U & 0xfffffffc) + (-bVar6 & 6) + 0x12;\n            if (*puVar3 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                do {\n                    uVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                } while (uVar4 != 0);\n            }\n            if (*puVar3 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                do {\n                    uVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                } while (uVar4 != 0);\n            }\n            uVar4 = *puVar3;\n            if ((uVar4 != 0) && (!bVar6)) {\n                uVar4 = uVar4 - 2;\n            }\n            iVar5 = iVar5 + -1;\n            iVar1 = puVar3 + uVar4 + 2;\n        } while (iVar5 != 0);\n    }\n    return iVar1 - arg_8h;\n}\n",
        "token_count": 495
    },
    "0042d1e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n\nvoid __cdecl fcn.0042d1e6(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    uint32_t uVar6;\n    uint *in_ECX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int16_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    ulong uVar13;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    if (in_ECX[1] != 0) {\n        puVar2 = (**0x481480)(*in_ECX);\n        bVar12 = *(puVar2 + 2) == -1;\n        iVar3 = fcn.0042ce2a(puVar2);\n        iVar1 = bVar12 * 2 + 1;\n        var_58h = iVar1 * 2;\n        if (bVar12) {\n            puVar2[3] = puVar2[3] | 0x40;\n        }\n        else {\n            *puVar2 = *puVar2 | 0x40;\n        }\n        iVar4 = (**0x48145c)(arg_8h);\n        if (iVar4 < 0x20) {\n            iVar4 = (**0x481494)(0, 0, arg_8h, 0xffffffff, &var_44h, 0x20);\n            iVar4 = var_58h + iVar4 * 2;\n            if (var_58h <= iVar4) {\n                uVar13 = fcn.0042ce96(puVar2);\n                puVar5 = uVar13;\n                iVar7 = 0;\n                iVar10 = uVar13 >> 0x20;\n                if (iVar3 != 0) {\n                    iVar3 = fcn.004518b0(puVar5 + iVar1);\n                    iVar7 = var_58h + 2 + iVar3 * 2;\n                    iVar10 = iVar4;\n                }\n                uVar6 = iVar7 + 3 + puVar5 & 0xfffffffc;\n                uVar11 = puVar5 + iVar10 + 3 & 0xfffffffc;\n                if (bVar12) {\n                    iVar9 = *(puVar2 + 4);\n                }\n                else {\n                    iVar9 = *(puVar2 + 2);\n                }\n                if ((iVar4 != iVar7) && (iVar9 != 0)) {\n                    uVar8 = (in_ECX[1] - uVar6) + puVar2;\n                    if (in_ECX[1] < uVar8) goto code_r0x0042d326;\n                    fcn.004259c8(uVar11, uVar8, uVar6, uVar8);\n                }\n                *puVar5 = arg_ch;\n                iVar4 = iVar4 + iVar1 * -2;\n                fcn.004259c8(puVar5 + iVar1, iVar4, &var_44h, iVar4);\n                in_ECX[1] = in_ECX[1] + (uVar11 - uVar6);\n                (**0x481484)(*in_ECX);\n                in_ECX[2] = 0;\n            }\n        }\n    }\ncode_r0x0042d326:\n    fcn.004510f7(var_58h);\n    return;\n}\n",
        "token_count": 844
    },
    "0042d335": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d335(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *arg_8h_00;\n    uint unaff_EDI;\n    uint32_t uVar5;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    pcVar1 = *0x481074;\n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    uVar5 = 10;\n    arg_8h_00 = \"System\";\n    iVar2 = (**0x481074)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x0042d3b1;\n    }\n    iVar2 = (**0x48112c)(iVar2, 0x3c, &var_40h);\n    if (iVar2 != 0) {\n        arg_8h_00 = &var_24h;\n        uVar3 = (**0x4817f8)(0);\n        if (var_40h < 0) {\n            var_40h = -var_40h;\n        }\n        uVar4 = (**0x4811ec)(uVar3, 0x5a);\n        uVar5 = (**0x481434)(var_40h, 0x48, uVar4);\n        uVar5 = uVar5 & 0xffff;\n        (**0x4817f4)(0, uVar3);\n    }\ncode_r0x0042d3b1:\n    if (arg_8h == 0) {\n        arg_8h = uVar5;\n    }\n    fcn.0042d1e6(arg_8h_00, arg_8h);\n    fcn.004510f7(unaff_EDI);\n    return;\n}\n",
        "token_count": 455
    },
    "0042d5df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d5df(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    if (arg_8h == 0) {\n        return 0;\n    }\n    uVar2 = (**0x4817a0)(arg_8h);\n    uVar2 = fcn.00413dbb(uVar2);\n    piVar3 = fcn.00422905(0x4867a0, uVar2);\n    if (piVar3 != NULL) {\n        if (arg_ch == 0x400) {\n            uVar2 = (**(*piVar3 + 0x15c))(arg_10h, arg_10h >> 0x10, arg_14h);\n            return uVar2;\n        }\n        if ((0x400 < arg_ch) && (arg_ch < 0x407)) {\n            iVar1 = *piVar3;\n            uVar2 = fcn.00406897(arg_10h, arg_ch, arg_14h);\n            uVar2 = (**(iVar1 + 0x160))(uVar2);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 296
    },
    "0042d6a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042d6a3(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    \n    pcVar1 = *0x481480;\n    if (param_1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar4 = param_1;\n        puVar3 = (**0x481480)(param_1);\n        if (param_1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*pcVar1)(param_1);\n        }\n        if (puVar3 == NULL) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (**0x4811e0)(*puVar3 + puVar3, puVar3[1] + puVar3, puVar3[2] + puVar3, uVar2);\n            pcVar1 = *0x481484;\n            (**0x481484)(iVar4);\n            if (param_1 != 0) {\n                (*pcVar1)(param_1);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 272
    },
    "0042d981": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042d981(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x48) == 0) {\n        uVar1 = fcn.00413ac7(\"PrintDlgA\");\n        uVar1 = (**0x481424)(uVar1);\n        *(param_1 + 0x48) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x48);\n    return;\n}\n",
        "token_count": 120
    },
    "0042da20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042da20(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "0042da56": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042da56(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x54) == 0) {\n        uVar1 = fcn.00413ac7(\"PageSetupDlgA\");\n        uVar1 = (**0x481424)(uVar1);\n        *(param_1 + 0x54) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x54);\n    return;\n}\n",
        "token_count": 121
    },
    "0042daf5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042daf5(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "0042e064": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042e064(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uVar1 = fcn.00413ac7(\"GetOpenFileNameA\");\n        uVar1 = (**0x481424)(uVar1);\n        *(param_1 + 0x10) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x10);\n    return;\n}\n",
        "token_count": 121
    },
    "0042e103": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042e103(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "0042e139": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042e139(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x18) == 0) {\n        uVar1 = fcn.00413ac7(\"GetSaveFileNameA\");\n        uVar1 = (**0x481424)(uVar1);\n        *(param_1 + 0x18) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x18);\n    return;\n}\n",
        "token_count": 121
    },
    "0042e1d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042e1d8(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "0042e23c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042e23c(int32_t param_1)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    \n    iVar3 = (**0x48145c)(*(*(param_1 + 0x74) + 0x1c));\n    bVar1 = false;\n    fcn.00451550(*(*(param_1 + 0x74) + 0x1c) + iVar3 + 1, 0, *(*(param_1 + 0x74) + 0x20) - (iVar3 + 1));\n    (**0x48179c)();\n    iVar3 = *(param_1 + 0x74);\n    uVar4 = fcn.004107a0();\n    *(iVar3 + 4) = uVar4;\n    fcn.00413e3c();\n    pcVar2 = *0x481858;\n    if (*(*(param_1 + 0x74) + 4) != 0) {\n        iVar3 = (**0x481750)(*(*(param_1 + 0x74) + 4));\n        if (iVar3 != 0) {\n            bVar1 = true;\n            (*pcVar2)(*(*(param_1 + 0x74) + 4), 0);\n        }\n    }\n    iVar3 = fcn.004196b5();\n    if ((*(*(param_1 + 0x74) + 0x34) & 0x80000) == 0) {\n        fcn.00416004(param_1);\n    }\n    else {\n        *(iVar3 + 0x18) = param_1;\n    }\n    if (*(param_1 + 0x78) == 0) {\n        fcn.0042e225(*(param_1 + 0x74));\n    }\n    else {\n        fcn.0042e20e();\n    }\n    *(iVar3 + 0x18) = 0;\n    if (bVar1) {\n        (*pcVar2)(*(*(param_1 + 0x74) + 4), 1);\n    }\n    iVar3 = (**0x481710)(unaff_EBP);\n    if (iVar3 != 0) {\n        (**0x4816fc)(unaff_ESI);\n    }\n    fcn.004107da();\n    if (unaff_EBP == 0) {\n        unaff_EBP = 2;\n    }\n    return unaff_EBP;\n}\n",
        "token_count": 573
    },
    "0042eb31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042eb31(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = param_1 + 0x30;\n    if (*piVar1 == 0) {\n        iVar2 = (**(*param_1 + 0xf0))();\n        *piVar1 = iVar2;\n        fcn.0042363f();\n    }\n    return *piVar1;\n}\n",
        "token_count": 108
    },
    "0042ebc6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ebc6(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (in_ECX[0x23] != 0) {\n        fcn.0043da31();\n        fcn.0043ddcd(in_ECX[0x23], arg_8h);\n        var_4h = (**(*in_ECX + 0xb4))();\n        while( true ) {\n            iVar2 = fcn.0043f7c6(&var_4h);\n            if (iVar2 == 0) break;\n            uVar1 = fcn.00440514(1);\n            fcn.004409be(3, uVar1);\n            fcn.004234be();\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0042ed76": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042ed76(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    if (*(in_ECX + 0xb0) == NULL) {\n        var_4h = fcn.0043dd8c(arg_8h);\n    }\n    else {\n        piVar1 = *(in_ECX + 0xb0);\n        var_4h = 0;\n        (**(*piVar1 + 0x10))(piVar1, arg_8h, 3, &var_4h);\n    }\n    return var_4h;\n}\n",
        "token_count": 147
    },
    "0042f5c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f5c8(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    fcn.0043f7d7();\n    var_4h = (**(*param_1 + 0xb4))();\n    while( true ) {\n        iVar1 = fcn.0043f7c6(&var_4h);\n        if (iVar1 == 0) break;\n        (**0x481324)(iVar1 + 4);\n    }\n    var_4h = (**(*param_1 + 0xb4))();\n    while( true ) {\n        piVar2 = fcn.0043f7c6();\n        if (piVar2 == NULL) break;\n        if (piVar2[0xc] != 0) {\n            (**(*piVar2 + 4))(1);\n        }\n    }\n    var_4h = (**(*param_1 + 0xb4))();\n    while( true ) {\n        iVar1 = fcn.0043f7c6();\n        if (iVar1 == 0) break;\n        fcn.0042365a();\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "0042f65f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f65f(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar6 = *(in_ECX + 0xc4);\n    if (iVar6 == 0) {\n        if (arg_8h != NULL) {\n            *arg_8h = 1;\n            arg_8h[1] = 1;\n            *arg_ch = 1;\n            arg_ch[1] = arg_8h[1];\n        }\n        uVar3 = 0;\n    }\n    else {\n        if (arg_10h == NULL) {\n            arg_10h = iVar6 + 0x11c;\n            iVar6 = *(iVar6 + 0x124) - *arg_10h;\n        }\n        else {\n            iVar6 = arg_10h[2] - *arg_10h;\n        }\n        iVar1 = arg_10h[3];\n        iVar2 = arg_10h[1];\n        var_8h = 0;\n        var_4h = 0;\n        piVar4 = fcn.0042eb31();\n        (**(*piVar4 + 100))(1, &var_8h);\n        if ((var_8h == 0) || (var_4h == 0)) {\n            (**(*piVar4 + 100))(1, &var_8h);\n        }\n        fcn.00424432(&var_8h);\n        if ((var_4h == 0) || (iVar5 = var_8h,  iVar7 = var_4h,  var_8h == 0)) {\n            iVar5 = iVar6;\n            iVar7 = iVar1 - iVar2;\n        }\n        if (arg_8h != NULL) {\n            *arg_8h = iVar6;\n            arg_8h[1] = iVar1 - iVar2;\n            *arg_ch = iVar5;\n            arg_ch[1] = iVar7;\n        }\n        uVar3 = fcn.0042f548(iVar5, iVar7);\n    }\n    return uVar3;\n}\n",
        "token_count": 561
    },
    "0042fda7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042fda7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_8h = *(arg_8h + 0x88);\njoined_r0x0042fdbd:\n    do {\n        if (arg_8h == 0) {\n            return;\n        }\n        ppiVar1 = fcn.0040e44d(&arg_8h);\n        arg_8h_00 = *ppiVar1;\n        if (arg_ch == 0) goto code_r0x0042fdfd;\n    } while ((*(*(in_ECX + 0xc4) + 0x140) != 0) || ((arg_8h_00[0x1f] & 4U) == 0));\n    arg_8h_00[0x1f] = arg_8h_00[0x1f] & 0xfffffffb;\n    iVar2 = arg_ch;\n    goto code_r0x0042fe1d;\ncode_r0x0042fdfd:\n    iVar2 = (**(*arg_8h_00 + 0x154))();\n    if ((iVar2 != 0) && (iVar2 = fcn.0041eb33(),  iVar2 == 0)) {\n        arg_8h_00[0x1f] = arg_8h_00[0x1f] | 4;\ncode_r0x0042fe1d:\n        fcn.0041fa76(arg_8h_00, iVar2, 1);\n    }\n    goto joined_r0x0042fdbd;\n}\n",
        "token_count": 400
    },
    "0042fe31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042fe31(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *in_ECX;\n    uint *puVar4;\n    int32_t var_54h;\n    int32_t iStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (arg_8h == 0) goto code_r0x0042fe59;\n    iVar1 = fcn.004266d6(arg_8h, 0x10, 0);\n    if (iVar1 != 0) goto code_r0x0042fe59;\n    do {\n        do {\n            fcn.00403bf2();\ncode_r0x0042fe59:\n            piVar3 = arg_ch;\n        } while (arg_ch == NULL);\n        if (arg_8h == 0) {\n            iVar1 = (**(*arg_ch + 0x14))(arg_ch, &var_14h);\n            if (iVar1 != 0) {\n                iVar1 = *piVar3;\n                puVar4 = NULL;\n                goto code_r0x0042ffbb;\n            }\n        }\n        else {\n            (**0x48166c)(&var_14h, arg_8h);\n        }\n        if (arg_10h == 0) {\n            iVar1 = *(in_ECX[0x31] + 0xf8);\n        }\n        else {\n            iVar1 = *(in_ECX[0x31] + 0xf4);\n        }\n        iVar2 = fcn.0040c7a5();\n    } while (iVar2 == 0);\n    if (*(iVar2 + 0x24) == in_ECX[0x31]) {\n        (**(*in_ECX + 0x114))(iVar1, 1);\n    }\n    var_34h = var_14h;\n    var_30h = var_10h;\n    var_2ch = var_ch;\n    var_28h = var_8h;\n    fcn.00414188(0, 0xffff, 0, 1, &var_34h, &var_14h, 1);\n    var_54h = var_34h - var_14h;\n    iStack84 = var_30h - var_10h;\n    iStack80 = var_ch - var_2ch;\n    iStack76 = var_8h - var_28h;\n    var_24h = var_54h;\n    var_20h = iStack84;\n    var_1ch = iStack80;\n    var_18h = iStack76;\n    iVar2 = fcn.0041edbb();\n    piVar3 = arg_ch;\n    if (((iVar2 == 0) || (*(iVar1 + 0x90) != 0)) && (iVar2 = (**(*arg_ch + 0x18))(arg_ch, &var_54h),  iVar2 == 0)) {\n        (**(*piVar3 + 0x1c))(piVar3, &var_24h);\n        fcn.00414188(0, 0xffff, 0, 0, 0, &var_14h, 1);\n        arg_ch = *(iVar1 + 0x88);\n        while (arg_ch != NULL) {\n            piVar3 = fcn.0040e44d(&arg_ch);\n            iVar1 = *piVar3;\n            iVar2 = fcn.0041eb33();\n            if (iVar2 == 0) {\n                (**0x48185c)(*(iVar1 + 0x20));\n            }\n        }\n    }\n    else {\n        (**(*var_4h + 0x114))(iVar1, 0);\n        iVar1 = *piVar3;\n        puVar4 = &var_44h;\n        var_44h = 0;\n        var_40h = 0;\n        var_3ch = 0;\n        var_38h = 0;\ncode_r0x0042ffbb:\n        (**(iVar1 + 0x1c))(piVar3, puVar4);\n    }\n    return;\n}\n",
        "token_count": 1102
    },
    "004319f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004319f5(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t *arg_8h;\n    int32_t iVar6;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_34h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106();\n    if (extraout_ECX[0x2c] == NULL) goto code_r0x00431e2d;\n    if (extraout_ECX[0x31] != 0) {\n        if (*(extraout_ECX[0x31] + 0xd4) != 0) {\n            (**(*extraout_ECX[0x2c] + 0x18))();\n            goto code_r0x00431e2d;\n        }\n        (**(*extraout_ECX + 0x108))();\n    }\n    iVar3 = fcn.0043f933();\n    if (iVar3 == 0) {\n        fcn.004515ca(&stack0xfffffff4, 0x49617c);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    iVar3 = (**0x4817b0)();\n    if (iVar3 != 0) goto code_r0x00431e2d;\n    fcn.00409b56();\n    fcn.0040231f();\n    *(unaff_EBP + -4) = 0;\n    fcn.00409b56();\n    fcn.0040231f();\n    *(unaff_EBP + -4) = 1;\n    uVar4 = fcn.00409b56();\n    fcn.004048fd(uVar4);\n    iVar3 = *extraout_ECX;\n    *(unaff_EBP + -4) = 2;\n    iVar3 = (**(iVar3 + 0x130))(unaff_EBP + -0x1c);\n    if (iVar3 != 0) {\n        uVar4 = *(unaff_EBP + -0x1c);\n        iVar3 = fcn.00419c68();\n        fcn.004257e3(unaff_EBP + -0x18, 0xe005, *(iVar3 + 0x10), uVar4);\n        piVar5 = fcn.0042349a(extraout_ECX[0x2c], 0x48f1d0);\n        if (piVar5 != NULL) {\n            iVar3 = (**(*piVar5 + 0x14))(piVar5);\n            if ((iVar3 == 0) && (iVar3 = (**(*piVar5 + 0x18))(piVar5),  iVar3 == 0)) {\n                (**(*piVar5 + 0xc))(piVar5, unaff_EBP + -0x14);\n                uVar4 = fcn.00413d94(*(unaff_EBP + -0x14));\n                arg_8h = (**(*extraout_ECX + 0x124))(uVar4);\n                if (arg_8h != NULL) {\n                    extraout_ECX[0x31] = arg_8h;\n                    iVar3 = (**(*piVar5 + 0x1c))(piVar5);\n                    if (iVar3 == 0) {\n                        iVar3 = (**(*piVar5 + 0x20))\n                                          (piVar5, arg_8h + 0x3b, arg_8h + 0x3c, unaff_EBP + -0x44, unaff_EBP + -0x34, \n                                           arg_8h + 0x36);\n                        if ((iVar3 == 0) && (iVar3 = (**(*arg_8h + 0x184))(),  iVar3 != 0)) {\n                            (**(*arg_8h[0x3b] + 0xc))(arg_8h[0x3b], unaff_EBP + -0x14);\n                            uVar4 = fcn.0042eec0(*(unaff_EBP + -0x14));\n                            *(unaff_EBP + -0x14) = uVar4;\n                            iVar3 = fcn.00403a9d(0xd8);\n                            *(unaff_EBP + -0x20) = iVar3;\n                            *(unaff_EBP + -4) = 3;\n                            if (iVar3 == 0) {\n                                iVar3 = 0;\n                            }\n                            else {\n                                iVar3 = fcn.00431f88(arg_8h);\n                            }\n                            arg_8h[0x3d] = iVar3;\n                            *(unaff_EBP + -4) = 2;\n                            fcn.00413dd5(*(unaff_EBP + -0x14));\n                            piVar1 = arg_8h[0x3c];\n                            if (piVar1 != NULL) {\n                                (**(*piVar1 + 0xc))(piVar1, unaff_EBP + -0x20);\n                                if (*(unaff_EBP + -0x20) == *(unaff_EBP + -0x14)) {\n                                    fcn.004234be(arg_8h + 0x3c);\n                                    arg_8h[0x3c] = 0;\n                                }\n                                else {\n                                    iVar3 = fcn.00403a9d(0xd8);\n                                    *(unaff_EBP + -0x24) = iVar3;\n                                    *(unaff_EBP + -4) = 4;\n                                    if (iVar3 == 0) {\n                                        iVar3 = 0;\n                                    }\n                                    else {\n                                        iVar3 = fcn.00431f88(arg_8h);\n                                    }\n                                    uVar4 = *(unaff_EBP + -0x20);\n                                    *(unaff_EBP + -4) = 2;\n                                    arg_8h[0x3e] = iVar3;\n                                    fcn.00413dd5(uVar4);\n                                }\n                            }\n                            iVar6 = (**0x4815e4)(unaff_EBP + -0x44);\n                            iVar3 = unaff_EBP + -0x34;\n                            if (iVar6 == 0) {\n                                iVar3 = unaff_EBP + -0x44;\n                            }\n                            (**0x48166c)(arg_8h + 0x47, iVar3);\n                            (**0x48166c)(arg_8h + 0x4b, unaff_EBP + -0x34);\n                            iVar3 = (**(*arg_8h + 0x174))(arg_8h[0x3d], arg_8h[0x3e]);\n                            if (iVar3 != 0) {\n                                iVar6 = (**0x4815e4)(unaff_EBP + -0x44);\n                                iVar3 = unaff_EBP + -0x34;\n                                if (iVar6 == 0) {\n                                    iVar3 = unaff_EBP + -0x44;\n                                }\n                                (**(*extraout_ECX + 0x118))(iVar3, unaff_EBP + -0x34);\n                                uVar4 = fcn.004234da(0x48f200);\n                                *(unaff_EBP + -0x20) = uVar4;\n                                fcn.00404fe7(*(unaff_EBP + -0x18));\n                                (**(*arg_8h[0x3b] + 0x20))(arg_8h[0x3b], *(unaff_EBP + -0x20), *(unaff_EBP + -0x10));\n                                piVar1 = arg_8h[0x3c];\n                                if (piVar1 != NULL) {\n                                    (**(*piVar1 + 0x20))(piVar1, *(unaff_EBP + -0x20), *(unaff_EBP + -0x10));\n                                }\n                                (**(*extraout_ECX + 0x114))(*(extraout_ECX[0x31] + 0xf4), 1);\n                                if (*(extraout_ECX[0x31] + 0xf0) != 0) {\n                                    (**(*extraout_ECX + 0x114))(*(extraout_ECX[0x31] + 0xf8), 1);\n                                }\n                                fcn.0041e88d(1);\n                                (**(*extraout_ECX + 300))(0, arg_8h[0x3b], 1);\n                                if (arg_8h[0x3c] != 0) {\n                                    (**(*extraout_ECX + 300))(0, arg_8h[0x3c], 0);\n                                }\n                                (**(*arg_8h[0x3b] + 0x28))(arg_8h[0x3b], arg_8h[0x3f], arg_8h[0x46], arg_8h[8]);\n                                (**(*extraout_ECX[0x2c] + 0x18))(extraout_ECX[0x2c]);\n                                fcn.0040e1f9(5);\n                                fcn.0040e256();\n                                (**0x48185c)(arg_8h[8]);\n                                fcn.0043dd23(1, 0);\n                                (**(*extraout_ECX + 0x120))(1);\n                                arg_8h[0x35] = 1;\n                                (**(*piVar5 + 8))(piVar5);\n                                fcn.00401fb6();\n                                fcn.00401fb6();\n                                fcn.00401fb6();\n                                goto code_r0x00431e2d;\n                            }\n                        }\n                        (**(*piVar5 + 0x28))(piVar5, 0);\n                    }\n                    if (extraout_ECX[0x31] == 0) goto code_r0x00431cc4;\n                    (**(*extraout_ECX + 0x128))(arg_8h);\n                    extraout_ECX[0x31] = 0;\n                }\n                (**(*piVar5 + 0x2c))(piVar5);\n            }\ncode_r0x00431cc4:\n            (**(*piVar5 + 8))(piVar5);\n        }\n    }\n    fcn.00401fb6();\n    fcn.00401fb6();\n    fcn.00401fb6();\ncode_r0x00431e2d:\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 2490
    },
    "004324b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004324b3(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *var_4h;\n    \n    if ((param_1[0x34] & 8U) != 0) {\n        var_4h = param_1;\n        (**(*param_1 + 0x148))(param_1[0x34] & 4);\n    }\n    var_4h = param_1[0x22];\n    while (var_4h != NULL) {\n        piVar1 = fcn.0040e44d(&var_4h);\n        fcn.0041466e(*piVar1, *(*piVar1 + 0x20), 0x363, 1, 0);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00432e92": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432e92(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    \n    pcVar1 = *0x481074;\n    if (param_1[1] != 0) {\n        uVar3 = (**0x481074)(7);\n        pcVar2 = *0x48115c;\n        uVar3 = (**0x48115c)(param_1[2], uVar3);\n        (*pcVar2)(param_1[2], uVar3);\n        (*pcVar2)(param_1[1], uVar3);\n        uVar3 = (*pcVar1)(4);\n        uVar3 = (*pcVar2)(param_1[2], uVar3);\n        (*pcVar2)(param_1[2], uVar3);\n        (*pcVar2)(param_1[1], uVar3);\n        uVar3 = (**0x481104)(param_1[2]);\n        fcn.00405916(uVar3);\n        uVar3 = (**0x4810fc)(param_1[2]);\n        fcn.004058ba(uVar3);\n        uVar3 = (**0x481110)(param_1[2]);\n        fcn.00405c1a(uVar3);\n        uVar3 = (**0x481100)(param_1[2]);\n        fcn.004058e8(uVar3);\n        uVar3 = (**0x481108)(param_1[2]);\n        fcn.00405944(uVar3);\n        uVar3 = (**0x48110c)(param_1[2]);\n        pcVar1 = *0x4810f4;\n        uVar3 = (**0x4810f4)(param_1[2], uVar3);\n        (**(*param_1 + 0x30))(uVar3);\n        uVar3 = (**0x4810f8)(param_1[2]);\n        uVar3 = (*pcVar1)(param_1[2], uVar3);\n        (**(*param_1 + 0x2c))(uVar3);\n    }\n    return;\n}\n",
        "token_count": 485
    },
    "00432f6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432f6c(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_stack_ffffff68;\n    int32_t iStack140;\n    uint auStack124 [5];\n    uchar uStack104;\n    uchar uStack103;\n    uchar uStack102;\n    uint8_t uStack101;\n    uchar uStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    int32_t iStack88;\n    uchar auStack84 [4];\n    int32_t iStack80;\n    uchar auStack76 [4];\n    int32_t iStack72;\n    int32_t aiStack68 [4];\n    uint uStack52;\n    uchar uStack48;\n    uchar uStack47;\n    uchar uStack46;\n    uchar uStack45;\n    uint8_t uStack41;\n    uchar auStack40 [32];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a5230 ^ auStack124;\n    if (param_1[2] != 0) {\n        if (param_1[0xb] == 0) {\n            (**(*param_1 + 0x24))(0xe);\n        }\n        else if (param_1[1] != 0) {\n            (**0x48112c)(param_1[0xb], 0x3c, aiStack68);\n            (**0x481114)(param_1[2], 0x20, auStack40);\n            pcVar1 = *0x4810d8;\n            (**0x4810d8)(param_1[2], &stack0xffffff68);\n            pcVar2 = *0x4810e0;\n            aiStack68[0] = in_stack_ffffff68;\n            if (-1 < in_stack_ffffff68) {\n                aiStack68[0] = iStack140 - in_stack_ffffff68;\n            }\n            uStack52 = auStack124[0];\n            uStack48 = uStack104;\n            uStack47 = uStack103;\n            uStack46 = uStack102;\n            uStack45 = uStack100;\n            uStack41 = uStack101;\n            iStack88 = (**0x4810e0)(aiStack68);\n            (**0x48115c)(param_1[1], iStack88);\n            (*pcVar1)(param_1[1], &stack0xffffff68);\n            iVar4 = -aiStack68[0];\n            if (in_stack_ffffff68 < 0) {\n                iStack92 = -in_stack_ffffff68;\n            }\n            else {\n                iStack92 = in_stack_ffffff68 - iStack140;\n            }\n            (**0x481060)(param_1[1], auStack76);\n            (**0x481128)(param_1[1], auStack84);\n            pcVar1 = *0x481434;\n            if (iStack72 < 0) {\n                iStack72 = -iStack72;\n            }\n            if (iStack80 < 0) {\n                iStack80 = -iStack80;\n            }\n            iStack96 = (**0x481434)(iVar4, iStack80, iStack72);\n            iVar3 = (*pcVar1)(iStack92, iStack80, iStack72);\n            iVar4 = iStack88;\n            if (iStack96 < iVar3) {\n                auStack40[0] = 0;\n                uStack41 = ((uStack41 & 0xf0) != 0x50) - 1U & 0x50;\n                iVar4 = (*pcVar2)(aiStack68);\n                (**0x48115c)(param_1[1], iVar4);\n                (**0x481140)(iStack88);\n            }\n            fcn.00423fce(param_1 + 10);\n            param_1[10] = iVar4;\n        }\n    }\n    fcn.004510f7(in_stack_ffffff68);\n    return;\n}\n",
        "token_count": 898
    },
    "0043373e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043373e(int32_t param_1)\n\n{\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if ((*(param_1 + 8) != 0) && (*(param_1 + 4) != 0)) {\n        (**0x48117c)(*(param_1 + 8), &var_8h);\n        fcn.00433632(&var_8h);\n        var_4h = var_4h + *(param_1 + 0x24);\n        var_8h = var_8h + *(param_1 + 0x20);\n        (**0x481158)(*(param_1 + 4), var_8h, var_4h, 0);\n        (**0x481118)(*(param_1 + 8), &var_10h);\n        (**0x481148)(*(param_1 + 4), var_10h, var_ch, 0);\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "0043380c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043380c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint uVar5;\n    int32_t iVar6;\n    \n    if (param_2 != 0) {\n        piVar1 = param_1 + 0x38;\n        (**0x481128)(*(param_1 + 8), piVar1);\n        piVar2 = param_1 + 0x30;\n        (**0x481060)(*(param_1 + 8), piVar2);\n        iVar6 = *piVar2;\n        while ((((-0x4000 < iVar6 && (*piVar2 < 0x4000)) && (iVar3 = *piVar1,  -0x4000 < iVar3)) && (iVar3 < 0x4000))) {\n            iVar6 = *piVar2 * 2;\n            *piVar2 = iVar6;\n            *piVar1 = iVar3 * 2;\n        }\n        iVar6 = *(param_1 + 0x34);\n        pcVar4 = *0x4811ec;\n        while (((*0x4811ec = pcVar4,  -0x4000 < iVar6 && (*(param_1 + 0x34) < 0x4000)) &&\n               ((iVar3 = *(param_1 + 0x3c),  -0x4000 < iVar3 && (iVar3 < 0x4000))))) {\n            iVar6 = *(param_1 + 0x34) * 2;\n            *(param_1 + 0x34) = iVar6;\n            *(param_1 + 0x3c) = iVar3 * 2;\n            pcVar4 = *0x4811ec;\n        }\n        uVar5 = (*pcVar4)(*(param_1 + 8), 0x58);\n        iVar6 = fcn.00432a72(*piVar1, *(param_1 + 0x10), *0x4a8370, *(param_1 + 0x14), uVar5);\n        *piVar1 = iVar6;\n        uVar5 = (*pcVar4)(*(param_1 + 8), 0x5a);\n        uVar5 = fcn.00432a72(*(param_1 + 0x3c), *(param_1 + 0x10), *0x4a8374, *(param_1 + 0x14), uVar5);\n        *(param_1 + 0x3c) = uVar5;\n    }\n    if (*(param_1 + 4) != 0) {\n        (**0x4811b4)(*(param_1 + 4), 8);\n        (**0x4810c0)(*(param_1 + 4), *(param_1 + 0x30), *(param_1 + 0x34), 0);\n        (**0x481150)(*(param_1 + 4), *(param_1 + 0x38), *(param_1 + 0x3c), 0);\n        fcn.0043373e();\n    }\n    return;\n}\n",
        "token_count": 728
    },
    "00433a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00433a00(int32_t param_1, uint param_2, uint param_3)\n\n{\n    *(param_1 + 0x10) = param_2;\n    *(param_1 + 0x14) = param_3;\n    if (*(param_1 + 8) != 0) {\n        fcn.0043380c(1);\n        fcn.00432f6c();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00433d10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00433d10(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    if ((*(param_1 + 0x20) != 0) && (iVar2 = fcn.0041eb33(),  iVar2 != 0)) {\n        piVar3 = fcn.0041eb1f();\n    // WARNING: Could not recover jumptable at 0x00433d2e. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar4 = (**(*piVar3 + 0x60))();\n        return uVar4;\n    }\n    uVar4 = 0;\n    if (*(param_1 + 0x20) == 0) {\n        if (*(param_1 + 0x50) == 0) {\n            return 0;\n        }\n    }\n    else {\n        iVar2 = fcn.00413d20(0);\n        if (iVar2 == 0) {\n            iStack20 = 0x4a3540;\n            fcn.004515ca(&iStack20, 0x49617c);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        iStack20 = 0x414007;\n        fcn.004239a5();\n    }\n    iStack20 = *(param_1 + 0x20);\n    if ((iStack20 != 0) || (*(param_1 + 0x50) != 0)) {\n        if (*(param_1 + 0x50) == 0) {\n            uVar4 = (**0x4816a8)();\n        }\n        else {\n            iStack20 = 0x414029;\n            uVar4 = (**(**(param_1 + 0x50) + 0x58))();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 451
    },
    "00433e4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00433e4d(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x80);\n    if ((uVar1 & 0x100) != 0) {\n        *param_2 = *param_2 + *0x4a8368;\n    }\n    if ((uVar1 & 0x200) != 0) {\n        param_2[1] = param_2[1] + *0x4a836c;\n    }\n    if ((uVar1 & 0x400) != 0) {\n        param_2[2] = param_2[2] - *0x4a8368;\n    }\n    if ((uVar1 & 0x800) != 0) {\n        param_2[3] = param_2[3] - *0x4a836c;\n    }\n    if (param_3 == 0) {\n        *param_2 = *param_2 + *(param_1 + 100);\n        param_2[1] = param_2[1] + *(param_1 + 0x5c);\n        param_2[2] = param_2[2] - *(param_1 + 0x68);\n        param_2[3] = param_2[3] - *(param_1 + 0x60);\n        if ((*(param_1 + 0x80) & 0x400001) == 0x400000) {\n            param_2[1] = param_2[1] + 7;\n        }\n    }\n    else {\n        *param_2 = *param_2 + *(param_1 + 0x5c);\n        param_2[1] = param_2[1] + *(param_1 + 100);\n        param_2[2] = param_2[2] - *(param_1 + 0x60);\n        param_2[3] = param_2[3] - *(param_1 + 0x68);\n        if ((*(param_1 + 0x80) & 0x400001) == 0x400000) {\n            *param_2 = *param_2 + 7;\n        }\n    }\n    return;\n}\n",
        "token_count": 528
    },
    "00433fb2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433fb2(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if ((arg_ch == 0) || (arg_10h == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x7fff;\n    }\n    *arg_8h = uVar1;\n    if ((arg_ch == 0) || (arg_10h != 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x7fff;\n    }\n    arg_8h[1] = uVar1;\n    return;\n}\n",
        "token_count": 160
    },
    "00434f54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00434f54(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 0x11;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.00403ac8(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.00403a9d(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n        *(param_1 + 4) = uVar1;\n        fcn.00451550(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 213
    },
    "00434fe2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00434fe2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.004357b2(param_1 + 0x14, *(param_1 + 0x18), 0x10);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -0xc + iVar1 * 0x10;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -4;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    if (puVar4 != 0xfffffff8) {\n        fcn.00402395();\n    }\n    puVar4[3] = 0;\n    return puVar4;\n}\n",
        "token_count": 309
    },
    "004357b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004357b2(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    if ((param_2 != 0) && (param_3 != 0)) {\n        puVar2 = fcn.00403a9d(param_2 * param_3 + 4);\n        *puVar2 = *param_1;\n        *param_1 = puVar2;\n        return;\n    }\n    fcn.00403bf2();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 144
    },
    "00436db7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00436db7(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x18) == 0) {\n        uVar1 = fcn.00413ac7(\"ImageList_Create\");\n        uVar1 = (**0x481424)(uVar1);\n        *(param_1 + 0x18) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x18);\n    return;\n}\n",
        "token_count": 120
    },
    "00436e62": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00436e62(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00436e98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00436e98(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x1c) == 0) {\n        uVar1 = fcn.00413ac7(\"ImageList_Destroy\");\n        uVar1 = (**0x481424)(uVar1);\n        *(param_1 + 0x1c) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x1c);\n    return;\n}\n",
        "token_count": 123
    },
    "00436f37": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00436f37(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00436f6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00436f6d(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x58) == 0) {\n        uVar1 = fcn.00413ac7(\"ImageList_LoadImageA\");\n        uVar1 = (**0x481424)(uVar1);\n        *(param_1 + 0x58) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x58);\n    return;\n}\n",
        "token_count": 123
    },
    "0043701e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043701e(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00437054": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00437054(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x84;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.00413ac7(\"ImageList_Read\");\n        iVar3 = (**0x481424)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 132
    },
    "004370f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004370f7(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "0043712d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043712d(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x88;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.00413ac7(\"ImageList_Write\");\n        iVar3 = (**0x481424)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 133
    },
    "004371d3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004371d3(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00437209": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00437209(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0xa0;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.00413ac7(\"ImageList_Merge\");\n        iVar3 = (**0x481424)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 133
    },
    "004372bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004372bb(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "004372f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004372f1(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0xcc;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.00413ac7(\"MakeDragList\");\n        iVar3 = (**0x481424)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 132
    },
    "00437394": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00437394(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (**0x48148c)();\n        }\n        fcn.00419083(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (**0x481438)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "004373ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004373ca(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0xd4;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.00413ac7(\"LBItemFromPt\");\n        iVar3 = (**0x481424)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 133
    },
    "00437661": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00437661(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00451106(0);\n    iVar1 = fcn.00419cdb();\n    if ((*(iVar1 + 0x24) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00403a8b(0x424023);\n        iVar3 = fcn.00403a9d(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00423bd7(0x4879f4, 0x436da2, 0x436633, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x24) = uVar4;\n        fcn.00403a8b(uVar2);\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 313
    },
    "004376ff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004376ff(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.004376d5();\n    uVar1 = fcn.004374d4(uVar1);\n    return uVar1;\n}\n",
        "token_count": 83
    },
    "0043844b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043844b(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    if (arg_8h == 2) {\n        fcn.00416819();\n        if ((*(in_ECX + 0x164) & 0x40) != 0) {\ncode_r0x004384f9:\n            fcn.00413cf0();\n            return;\n        }\n        iVar2 = 1;\n        iVar1 = 0;\n        do {\n            if (*(in_ECX + 0x184) <= iVar2) break;\n            iVar1 = fcn.004382c9();\n            iVar2 = iVar2 + 1;\n        } while (iVar1 == 0);\n        if (iVar1 != 0) goto code_r0x00438494;\n    }\n    else {\n        if (7 < arg_8h - 10U) goto code_r0x004384f9;\n        fcn.00416819();\n        iVar2 = 1;\n        iVar1 = 0;\n        do {\n            if (*(in_ECX + 0x184) <= iVar2) break;\n            iVar1 = fcn.004382c9();\n            iVar2 = iVar2 + 1;\n        } while (iVar1 == 0);\n        if ((iVar1 != 0) && (*(iVar1 + 0x90) != NULL)) {\n            (**(**(iVar1 + 0x90) + 4))(arg_8h, arg_ch, arg_10h);\n            return;\n        }\n    }\n    do {\n        iVar1 = fcn.00403bf2();\ncode_r0x00438494:\n    } while (*(iVar1 + 0x90) == 0);\n    (****(iVar1 + 0x90))(arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 431
    },
    "0043863f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043863f(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (0xffff < param_1) {\n        param_1 = (**0x48170c)(*(param_1 + 0x20));\n        param_1 = param_1 & 0xffff;\n    }\n    iVar1 = fcn.0043828c(param_1, 0xffffffff);\n    if (0 < iVar1) {\n        fcn.00444d7c(iVar1, 1);\n        piVar2 = fcn.0043808f(iVar1 + -1);\n        if (*piVar2 == 0) {\n            piVar2 = fcn.0043808f(iVar1);\n            if (*piVar2 == 0) {\n                fcn.00444d7c(iVar1, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00439059": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00439059(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint unaff_ESI;\n    uint arg_1ch;\n    uchar auStack308 [16];\n    int32_t iStack292;\n    int32_t iStack288;\n    int32_t iStack284;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [88];\n    uchar auStack180 [172];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a5230 ^ auStack180;\n    iStack288 = param_2;\n    iStack292 = param_3;\n    if (param_1 != 0) goto code_r0x00439094;\n    do {\n        fcn.00403bf2();\ncode_r0x00439094:\n    } while (param_2 == 0);\n    (**0x48169c)(*(param_2 + 0x20), auStack308);\n    if (*(param_2 + 0x8c) == param_1) {\n        if (param_3 == 0) goto code_r0x0043927f;\n        iVar2 = (**0x481664)(auStack308, param_3);\n        if (iVar2 != 0) goto code_r0x0043927f;\n    }\n    if ((*(param_1 + 0x94) != 0) && ((*(param_2 + 0x84) & 0x40) != 0)) {\n        *(param_1 + 0x80) = *(param_1 + 0x80) | 0x40;\n    }\n    *(param_1 + 0x80) = *(param_1 + 0x80) & 0xfffffff9;\n    uVar3 = *(param_1 + 0x80);\n    *(param_1 + 0x80) = *(param_2 + 0x80) & 6 | uVar3;\n    if ((uVar3 & 0x40) == 0) {\n        fcn.0040e934(auStack268, 0x104);\n        fcn.00423f38(*(param_1 + 0x20), auStack268);\n    }\n    uVar3 = (*(param_2 + 0x80) ^ *(param_1 + 0x80)) & 0xf000 ^ *(param_2 + 0x80);\n    if (*(param_1 + 0x94) == 0) {\n        uVar3 = uVar3 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar3 = uVar3 | 0xf01;\n    }\n    fcn.00433bfb(uVar3);\n    uVar1 = (**0x48170c)(*(param_2 + 0x20), 0xffffffff);\n    iVar2 = fcn.0043828c(uVar1);\n    if (0 < iVar2) {\n        piVar4 = fcn.0043808f(iVar2);\n        *piVar4 = param_2;\n    }\n    if (iStack292 == 0) {\n        if (iVar2 < 1) {\n            fcn.00444ca8(*(param_1 + 0xa0), param_2);\n            fcn.00444ca8(*(param_1 + 0xa0), 0);\n        }\n        arg_1ch = 0x115;\n        iStack272 = 0;\n        iStack276 = 0;\n        iStack280 = -*0x4a836c;\n        iStack284 = -*0x4a8368;\n    }\n    else {\n        (**0x48166c)(&iStack284, iStack292);\n        fcn.004064be();\n        if (iVar2 < 1) {\n            fcn.004382e8(iStack288, iStack284, iStack280, iStack276, iStack272, (iStack276 - iStack284) / 2 + iStack284\n                         , (iStack272 - iStack280) / 2 + iStack280);\n            param_2 = iStack288;\n        }\n        iStack272 = iStack272 - iStack280;\n        arg_1ch = 0x114;\n        iStack276 = iStack276 - iStack284;\n    }\n    fcn.0040e533(0, iStack284, iStack280, iStack276, iStack272, arg_1ch);\n    (**0x4817a0)(*(param_2 + 0x20));\n    iVar2 = fcn.00413d94();\n    if (iVar2 != param_1) {\n        fcn.0042f563(param_1);\n    }\n    if (*(param_2 + 0x8c) != 0) {\n        fcn.004386a6(param_2, 0xffffffff, 0);\n    }\n    *(param_2 + 0x8c) = param_1;\n    iVar2 = fcn.0041eb1f();\n    *(iVar2 + 0xd0) = *(iVar2 + 0xd0) | 0xc;\ncode_r0x0043927f:\n    fcn.004510f7(unaff_ESI);\n    return;\n}\n",
        "token_count": 1216
    },
    "00439704": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439704(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    int32_t var_3ch;\n    uint var_20h;\n    \n    if (arg_8h == 0) {\n        fcn.00403bf2();\n    }\n    var_48h = arg_14h;\n    var_4ch = 1;\n    if (arg_ch != 0) {\n        var_4ch = 5;\n        var_3ch = arg_ch;\n    }\n    if (arg_10h != 0) {\n        var_20h = *(arg_10h + 4);\n        var_4ch = var_4ch | 0x80;\n    }\n    fcn.0043960a(arg_8h, &var_50h);\n    return;\n}\n",
        "token_count": 220
    },
    "00439a47": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00439a47(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 < 4) {\n        param_2 = 4;\n    }\n    if (param_3 < 2) {\n        param_3 = 0x40;\n    }\n    param_1[3] = 0;\n    param_1[2] = 0;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    return;\n}\n",
        "token_count": 127
    },
    "00439b35": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439b35(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[3] == 0) {\n        iVar1 = fcn.004357b2(param_1 + 2, param_1[1], *param_1);\n        iVar3 = param_1[1] + -1;\n        piVar2 = iVar1 + 4 + *param_1 * iVar3;\n        for (; -1 < iVar3; iVar3 = iVar3 + -1) {\n            *piVar2 = param_1[3];\n            param_1[3] = piVar2;\n            piVar2 = piVar2 - *param_1;\n        }\n    }\n    param_1[3] = *param_1[3];\n    return;\n}\n",
        "token_count": 200
    },
    "00439e6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439e6a(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.00439c7c(arg_10h + iVar1, 0xffffffff);\n            iVar3 = *(in_ECX + 4) + arg_8h;\n            fcn.004259c8(iVar3 + arg_10h, (*(in_ECX + 8) - arg_8h) - arg_10h, iVar3, iVar1 - arg_8h);\n            fcn.00451550(*(in_ECX + 4) + arg_8h, 0, arg_10h);\n        }\n        else {\n            fcn.00439c7c(arg_10h + arg_8h, 0xffffffff);\n        }\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 1;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.00403bf2();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 355
    },
    "0043a1f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043a1f0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h;\n    fcn.0040df6f(arg_8h, &arg_8h);\n    if (arg_8h == 0) {\n        iVar2 = fcn.0040deee(iVar1);\n        if (iVar2 == 0) {\n            fcn.00403bd8();\n        }\n    }\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 8) = iVar1;\n    return arg_8h;\n}\n",
        "token_count": 161
    },
    "0043a22f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a22f(int32_t *param_1)\n\n{\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if ((*param_1 != 0) && (param_1[2] != 0)) {\n        fcn.0040df6f(param_1[2], &var_4h);\n        if (var_4h != NULL) {\n            (**0x4816fc)(var_4h);\n            if (param_1[3] != 0) {\n                (**0x48183c)(var_4h, 0xb1, 0, 0xffffffff);\n            }\n        }\n    }\n    fcn.00405e83();\n    return;\n}\n",
        "token_count": 168
    },
    "0043a27e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a27e(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = arg_8h;\n    fcn.0043a1f0(arg_ch);\n    fcn.0040df6f(arg_ch, &arg_8h);\n    if (*piVar1 == 0) {\n        if ((*arg_10h < 0) || (2 < *arg_10h)) {\n            *arg_10h = 0;\n        }\n        (**0x48183c)(arg_8h, 0xf1, *arg_10h, 0);\n    }\n    else {\n        iVar2 = (**0x48183c)(arg_8h, 0xf0, 0, 0);\n        *arg_10h = iVar2;\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0043a434": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a434(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    \n    piVar1 = arg_8h;\n    fcn.0043a1f0(arg_ch);\n    fcn.0040df6f(arg_ch, &arg_8h);\n    if (*piVar1 == 0) {\n        (**0x481648)(arg_8h, 2, *arg_10h, 1);\n    }\n    else {\n        uVar2 = (**0x48164c)(arg_8h, 2);\n        *arg_10h = uVar2;\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "0043a523": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a523(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = arg_14h;\n    uVar2 = arg_10h;\n    if ((*arg_8h != 0) || ((arg_10h <= arg_ch && (arg_ch <= arg_14h)))) {\n        fcn.0040df6f(arg_8h[2], &arg_ch);\n        pcVar1 = *0x48183c;\n        (**0x48183c)(arg_ch, 0x407, 0, uVar2);\n        (*pcVar1)(arg_ch, 0x408, 1, uVar3);\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0043a575": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a575(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = arg_10h;\n    if (*(arg_10h + 0x20) != 0) {\n        return;\n    }\n    iVar1 = fcn.0040decc();\n    if (iVar1 != 0) {\n        return;\n    }\n    fcn.0043a1f0(arg_ch);\n    fcn.0040df6f(arg_ch, &arg_10h);\n    if (arg_10h != 0) {\n        iVar1 = fcn.00414d4b(arg_10h);\n        if (iVar1 == 0) {\n            fcn.00403bd8();\n        }\n        if (arg_10h != 0) {\n            iVar1 = *(arg_8h + 4);\n            iVar2 = (**0x4817a0)(*(iVar2 + 0x20));\n            if (*(iVar1 + 0x20) == iVar2) {\n                return;\n            }\n            arg_ch = 0;\n            goto code_r0x0043a5f0;\n        }\n    }\n    iVar2 = fcn.0040deee(arg_ch);\n    if (iVar2 == 0) {\n        return;\n    }\n    iVar1 = *(arg_8h + 4);\ncode_r0x0043a5f0:\n    fcn.0040e31a(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 351
    },
    "0043a615": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a615(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint unaff_EDI;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.0043a5fe(arg_ch);\n    uVar1 = arg_18h;\n    if (*arg_8h == 0) {\n        puVar3 = fcn.00451b45();\n        uVar1 = *puVar3;\n        puVar3 = fcn.00451b45();\n        *puVar3 = 0;\n        fcn.00452349(&var_44h, 0x40, 0x3f, arg_10h, &arg_18h);\n        piVar4 = fcn.00451b45();\n        if (*piVar4 == 0) {\n            puVar3 = fcn.00451b45();\n            *puVar3 = uVar1;\n        }\n        else {\n            puVar3 = fcn.00451b45();\n            fcn.00404894(*puVar3);\n        }\n        fcn.00423f38(arg_8h_00, &var_44h);\n    }\n    else {\n        (**0x4816f0)(arg_8h_00, &var_44h, 0x40);\n        iVar2 = fcn.00456e95(&var_44h, 0x40, arg_10h, uVar1);\n        if (iVar2 != 1) {\n            fcn.0040de60(arg_14h, 0, 0xffffffff);\n            fcn.0043a22f();\n        }\n    }\n    fcn.004510f7(unaff_EDI);\n    return;\n}\n",
        "token_count": 477
    },
    "0043a6d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a6d8(int32_t *arg_8h, uint arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t *puVar1;\n    \n    puVar1 = arg_10h;\n    arg_10h = *arg_10h;\n    if (*arg_8h == 0) {\n        fcn.0043a615(arg_8h, arg_ch, 0x489408, 0xf116, arg_10h);\n    }\n    else {\n        fcn.0043a615(arg_8h, arg_ch, 0x489408, 0xf116, &arg_10h);\n        if (0xff < arg_10h) {\n            fcn.0040de60(0xf116, 0, 0xffffffff);\n            fcn.0043a22f();\n        }\n        *puVar1 = arg_10h;\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "0043a749": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a749(int32_t *arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0043a615(arg_8h, arg_ch, 0x48940c, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 97
    },
    "0043a77a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a77a(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0043a615(arg_8h, arg_ch, 0x483468, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 95
    },
    "0043a7a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a7a9(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0043a615(arg_8h, arg_ch, 0x489408, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 96
    },
    "0043a7d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a7d8(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0043a615(arg_8h, arg_ch, 0x489410, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 96
    },
    "0043a807": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a807(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0043a615(arg_8h, arg_ch, 0x489414, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 94
    },
    "0043a836": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a836(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        fcn.0043a615(arg_8h, arg_ch, \"%I64d\", 0xf110, *arg_10h);\n    }\n    else {\n        fcn.0043a615(arg_8h, arg_ch, \"%I64d\", 0xf110, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "0043a87e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a87e(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        fcn.0043a615(arg_8h, arg_ch, \"%I64u\", 0xf117, *arg_10h);\n    }\n    else {\n        fcn.0043a615(arg_8h, arg_ch, \"%I64u\", 0xf117, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0043a8c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a8c6(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.0043a5fe(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.00423f38(arg_8h_00, arg_10h);\n    }\n    else {\n        (**0x4816ec)(arg_8h_00);\n        (**0x4816f0)(arg_8h_00, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0043ad5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ad5c(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h_00 = fcn.0043a5fe(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.00423f38(arg_8h_00, *arg_10h);\n    }\n    else {\n        iVar1 = (**0x4816ec)(arg_8h_00);\n        uVar2 = fcn.00409a55(iVar1, iVar1 + 1);\n        (**0x4816f0)(arg_8h_00, uVar2);\n        fcn.004081bb(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0043ae42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ae42(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *arg_8h_00;\n    int32_t iVar2;\n    \n    arg_8h_00 = arg_8h;\n    fcn.0043a1f0(arg_ch);\n    fcn.0040df6f(arg_ch, &arg_8h);\n    pcVar1 = *0x48183c;\n    if (*arg_8h_00 == 0) {\n        iVar2 = (**0x48183c)(arg_8h, 0x1a2, 0xffffffff, *arg_10h);\n        if (-1 < iVar2) {\n            (*pcVar1)(arg_8h, 0x186, iVar2, 0);\n        }\n    }\n    else {\n        fcn.0043adae(arg_8h_00, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "0043af34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043af34(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    arg_8h_00 = arg_8h;\n    fcn.0043a1f0(arg_ch);\n    fcn.0040df6f(arg_ch, &arg_8h);\n    puVar2 = arg_10h;\n    pcVar1 = *0x48183c;\n    if (*arg_8h_00 == 0) {\n        iVar3 = (**0x48183c)(arg_8h, 0x158, 0xffffffff, *arg_10h);\n        if (iVar3 < 0) {\n            fcn.00423f38(arg_8h, *puVar2);\n        }\n        else {\n            (*pcVar1)(arg_8h, 0x14e, iVar3, 0);\n        }\n    }\n    else {\n        fcn.0043aea2(arg_8h_00, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "0043b6d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b6d5(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint *arg_8h_00;\n    uint var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    var_1ch = NULL;\n    piVar1 = fcn.0042349a(in_ECX[9], 0x48f230);\n    if (piVar1 == NULL) {\n        piVar1 = (**(*in_ECX + 0xc0))();\n        arg_8h_00 = &var_1ch;\n        iVar2 = (**(*piVar1 + 0x10))(piVar1, 4, 3);\n    }\n    else {\n        arg_8h_00 = &var_1ch;\n        iVar2 = (**(*piVar1 + 0x18))(piVar1);\n        (**(*piVar1 + 8))(piVar1);\n    }\n    if (iVar2 == 0) {\n        iVar2 = (**0x481920)(0, 1, &var_18h);\n        if (iVar2 != 0) {\n            (**(*var_1ch + 8))(var_1ch);\n            fcn.00403bbe();\n        }\n        piVar1 = (**0x481924)(var_1ch, var_18h);\n        (**(*var_1ch + 8))(var_1ch);\n        if (piVar1 == NULL) goto code_r0x0043b78a;\n        (**(*var_18h + 8))(var_18h);\n        while( true ) {\n            fcn.00404470(piVar1);\ncode_r0x0043b78a:\n            in_ECX = (**(*in_ECX[9] + 0x3c))(in_ECX[9], &var_14h);\n            if ((in_ECX == NULL) && (in_ECX = (**0x481928)(var_18h, &var_14h),  in_ECX == NULL)) break;\n            (**(*var_18h + 8))(var_18h);\n            piVar1 = in_ECX;\n        }\n        arg_8h[2] = 0;\n        arg_8h[1] = var_18h;\n        *arg_8h = 4;\n    }\n    fcn.004510f7(arg_8h_00);\n    return;\n}\n",
        "token_count": 597
    },
    "0043b8b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043b8b5(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x50) != 3) && (*(param_1 + 0x50) != 4)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 67
    },
    "0043b8cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043b8cf(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 0x12) == '\\0') {\n        *(param_1 + 0x12) = 1;\n        iVar1 = (**(*param_1[9] + 0x18))(param_1[9], param_2);\n        param_1[0xd] = iVar1;\n        if (*(param_1 + 0x46) != '\\0') {\n            (**0x48191c)(param_1[9], 0, 1);\n            *(param_1 + 0x46) = 0;\n        }\n        if (param_1[0x14] != 1) {\n            if (param_1[0x14] == 4) {\n                (**(*param_1 + 0x80))(0);\n            }\n            if (param_1[0x14] == 3) {\n                (**(*param_1 + 0x98))();\n            }\n            if (param_1[0x14] != 1) {\n                (**(*param_1 + 0x6c))(4, 1);\n                param_1[0x14] = 1;\n            }\n        }\n        *(param_1 + 0x12) = 0;\n    }\n    return;\n}\n",
        "token_count": 312
    },
    "0043b9a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b9a5(char *param_1)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    uint *unaff_EBX;\n    \n    for (; (cVar1 = *in_EAX,  cVar1 != ',' && (cVar1 != '\\0')); in_EAX = fcn.004550d6(in_EAX)) {\n        *param_1 = cVar1;\n        param_1 = fcn.004550d6(param_1);\n    }\n    *param_1 = '\\0';\n    if (*in_EAX == '\\0') {\n        *unaff_EBX = 0;\n    }\n    else {\n        uVar2 = fcn.004550d6(in_EAX);\n        uVar2 = fcn.00455f93(uVar2);\n        *unaff_EBX = uVar2;\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "0043c162": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c162(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t arg_8h_00;\n    int32_t *in_ECX;\n    int32_t **ppiVar4;\n    int32_t **ppiStack72;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    fcn.00425e37(&var_4h);\n    iVar1 = (**0x48147c)(0x2002, var_4h);\n    if (iVar1 == 0) {\n        fcn.00403bbe();\n    }\n    uVar2 = (**0x481480)(iVar1);\n    piVar3 = fcn.004259ee(uVar2, var_4h);\n    (**0x481484)(iVar1);\n    if (piVar3 != var_4h) {\n        (**0x481474)(iVar1);\n        fcn.00425943(3, 0);\n    }\n    ppiVar4 = in_ECX + 0xf;\n    arg_8h_00 = (**0x481930)(iVar1, 1, ppiVar4);\n    if (arg_8h_00 == 0) goto code_r0x0043c1e5;\n    (**0x481474)(iVar1);\n    while( true ) {\n        while( true ) {\n            fcn.00404470(arg_8h_00);\ncode_r0x0043c1e5:\n            ppiStack72 = NULL;\n            piVar3 = in_ECX + 0xe;\n            arg_8h_00 = (**0x4819a0)(*ppiVar4, 0, 0x12, 0);\n            if (arg_8h_00 == 0) break;\n            (**(**ppiVar4 + 8))(*ppiVar4);\n            *ppiVar4 = NULL;\n        }\n        var_8h = NULL;\n        uVar2 = (**(*in_ECX + 0xc0))(&var_8h);\n        uVar2 = (**0x4819a4)(in_ECX[0xe], 0x48f430, uVar2);\n        (**(*in_ECX + 200))(uVar2);\n        iVar1 = fcn.0042349a(var_8h, 0x48f250);\n        in_ECX[9] = iVar1;\n        (**(*var_8h + 8))(var_8h);\n        if (in_ECX[9] != 0) break;\n        arg_8h_00 = -0x7ff8fff2;\n        in_ECX = piVar3;\n        ppiVar4 = ppiStack72;\n    }\n    return;\n}\n",
        "token_count": 643
    },
    "0043c264": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c264(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    piVar1 = fcn.0042349a(in_ECX[9], 0x48f840);\n    if (*(in_ECX[8] + 0x78) == 0) {\n        iVar2 = (**(*piVar1 + 0x10))(piVar1);\n        if (iVar2 != 0) goto code_r0x0043c2be;\n    }\n    (**0x48192c)(piVar1, in_ECX[0xe], *(in_ECX[8] + 0x78) == 0);\n    (**(*piVar1 + 0x20))(piVar1, 0);\ncode_r0x0043c2be:\n    (**(*piVar1 + 8))(piVar1);\n    (**(*in_ECX[0xe] + 0x24))(in_ECX[0xe], 1);\n    iVar2 = (**0x48199c)(in_ECX[0xf], &var_50h);\n    if (iVar2 == 0) goto code_r0x0043c2e6;\n    do {\n        fcn.00404470(iVar2);\ncode_r0x0043c2e6:\n        in_ECX = in_ECX[0xf];\n        iVar2 = (**(*in_ECX + 0x24))(in_ECX, &var_4ch, 1);\n    } while (iVar2 != 0);\n    fcn.00425d34(var_44h);\n    arg_8h_00 = (**0x481480)(var_50h);\n    fcn.00426074(arg_8h_00, var_44h);\n    (**0x481484)(var_50h);\n    fcn.004510f7(var_44h);\n    return;\n}\n",
        "token_count": 501
    },
    "0043c6cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043c6cc(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar *puStack584;\n    char *pcStack580;\n    uint uStack576;\n    uchar *puStack572;\n    char *pcStack560;\n    uchar *puStack556;\n    int32_t iStack552;\n    uchar *puStack548;\n    uint uStack544;\n    uchar *puStack540;\n    uint uStack536;\n    uint uStack532;\n    uint in_stack_fffffdf0;\n    uchar auStack272 [264];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a5230 ^ &stack0xfffffde8;\n    uStack536 = 0x24;\n    puStack540 = 0x43c6f0;\n    fcn.00451106();\n    puStack540 = &stack0xfffffdb8;\n    uStack544 = param_1;\n    iStack552 = 0;\n    uStack576 = 0;\n    puStack548 = 0x43c709;\n    iVar2 = (**0x481974)();\n    pcVar1 = *0x481018;\n    if (iVar2 < 0) goto code_r0x0043c8a6;\n    puStack548 = &stack0xfffffdbc;\n    iStack552 = 0x20019;\n    puStack556 = NULL;\n    pcStack560 = \"clsid\";\n    iVar2 = (**0x481018)();\n    if (iVar2 == 0) {\n        puStack572 = 0x43c744;\n        fcn.00404bdb(puStack584);\n        puStack584 = &stack0xfffffdd4;\n        uStack576 = 0x20019;\n        pcStack580 = NULL;\n        puStack540 = NULL;\n        puStack572 = puStack584;\n        iVar2 = (*pcVar1)(0);\n        if (iVar2 == 0) {\n            iVar2 = (*pcVar1)(puStack556, \"DefaultIcon\", 0, 0x20019, &stack0xfffffdd0);\n            if (iVar2 == 0) {\n                iVar2 = (**0x48101c)(pcStack560, 0, 0, &stack0xfffffdc0, &stack0xfffffef0, &stack0xfffffdc8);\n                if (iVar2 == 0) {\n                    fcn.0043b9a5();\n                    iVar2 = fcn.00419c68();\n                    iStack552 = (**0x48154c)(*(*(iVar2 + 4) + 0x44), &stack0xfffffde8, 0x80000000);\n                    if (iStack552 == 1) {\n                        iStack552 = 0;\n                    }\n                }\n                (**0x481030)(pcStack560);\n            }\n            (**0x481030)(puStack556);\n        }\n        (**0x481030)(pcStack580);\n        puStack540 = 0xffffffff;\n        fcn.00401fb6();\n        if (iStack552 == 0) goto code_r0x0043c800;\n    }\n    else {\ncode_r0x0043c800:\n        puStack572 = 0x20019;\n        uStack576 = 0;\n        pcStack580 = \"DocShortcut\";\n        puStack584 = 0x80000000;\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            puStack572 = 0x20019;\n            uStack576 = 0;\n            pcStack580 = \"DefaultIcon\";\n            puStack584 = puStack556;\n            iVar2 = (*pcVar1)();\n            if (iVar2 == 0) {\n                iVar2 = (**0x48101c)(pcStack560, 0, 0, &stack0xfffffdc0, &stack0xfffffef0, &stack0xfffffdc8);\n                if (iVar2 == 0) {\n                    fcn.0043b9a5();\n                    iVar2 = fcn.00419c68();\n                    iStack552 = (**0x48154c)(*(*(iVar2 + 4) + 0x44), &stack0xfffffde8, 0x80000000);\n                    if (iStack552 == 1) {\n                        iStack552 = 0;\n                    }\n                }\n                (**0x481030)(pcStack560);\n            }\n            (**0x481030)(puStack556);\n        }\n    }\n    puStack572 = 0x43c8a3;\n    (**0x481990)();\ncode_r0x0043c8a6:\n    *in_FS_OFFSET = puStack548;\n    uStack532 = 0x43c8c1;\n    fcn.004510f7(in_stack_fffffdf0);\n    return;\n}\n",
        "token_count": 1068
    },
    "0043d428": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043d428(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint unaff_retaddr;\n    \n    *(param_1 + 0x90) = *(param_1 + 0x90) + -1;\n    if (*(param_1 + 0x94) != 0) {\n        if (param_2 == 0) {\n            unaff_retaddr = fcn.00403e46(*(param_1 + 0x94));\n        }\n        piVar1 = *(param_1 + 0x94) + 4;\n        *piVar1 = *piVar1 + 1;\n        fcn.00403ad7();\n        *(param_1 + 0x94) = 0;\n    }\n    return unaff_retaddr;\n}\n",
        "token_count": 190
    },
    "0043da31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043da31(int32_t *param_1)\n\n{\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if (param_1[0x26] != 0) {\n        var_4h = NULL;\n        (**0x4818a8)(0, &var_4h);\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x10))(var_4h, param_1[0x26]);\n            (**(*var_4h + 8))(var_4h);\n        }\n        param_1[0x26] = 0;\n    }\n    fcn.004234be(param_1 + 0x27);\n    fcn.004024ff(0x482460);\n    return;\n}\n",
        "token_count": 185
    },
    "0043db6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043db6a(int32_t *param_1, int32_t param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004234da(0x48f430, param_2, param_3);\n    (**0x4818ac)(uVar1);\n    if ((param_2 != 0) && (*(param_1[9] + -0xc) != 0)) {\n        fcn.0043da31();\n        (**(*param_1 + 0xe8))(param_1[9], 0);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0043dd8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043dd8c(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if (*(*(in_ECX + 0xa0) + -0xc) == 0) {\n        var_4h = fcn.0044004b(arg_8h);\n    }\n    else {\n        var_4h = in_ECX;\n        puVar1 = fcn.0040555a(*(in_ECX + 0xa0));\n        (**0x4818b4)(*puVar1, &var_4h);\n        fcn.00401fb6();\n    }\n    return var_4h;\n}\n",
        "token_count": 162
    },
    "0043ddcd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ddcd(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = in_ECX + 0x27;\n    in_ECX[0x23] = arg_8h;\n    var_4h = 1;\n    fcn.004234be(piVar1);\n    fcn.00402193();\n    if (arg_ch != 0) {\n        puVar2 = fcn.0040555a(arg_ch);\n        iVar3 = (**0x4818b4)(*puVar2, piVar1);\n        arg_8h = arg_8h & 0xffffff | (iVar3 != 0) << 0x18;\n        fcn.00401fb6();\n        if (arg_8h._3_1_ != '\\0') {\n            var_4h = 0;\n        }\n    }\n    if (*piVar1 != 0) {\n        arg_8h = NULL;\n        (**0x4818a8)(0, &arg_8h);\n        iVar3 = (**(*arg_8h + 0x18))(arg_8h, *piVar1, &var_ch);\n        if (iVar3 == 0) {\n            (**(*var_ch + 8))(var_ch);\n            fcn.004234be(piVar1);\n            return 0;\n        }\n        iVar3 = *arg_8h;\n        uVar4 = fcn.004234da(0x48f430, *piVar1, in_ECX + 0x26);\n        iVar3 = (**(iVar3 + 0xc))(arg_8h, 0, uVar4);\n        (**(*arg_8h + 8))(arg_8h);\n        fcn.004024ff(arg_ch);\n        if (iVar3 != 0) {\n            var_4h = 0;\n        }\n    }\n    var_8h = (**(*in_ECX + 0xb4))();\n    while (iVar3 = fcn.0043f7b5(),  iVar3 != 0) {\n        if (*(iVar3 + 0x45) != '\\0') {\n            (**(**(iVar3 + 0x24) + 0x1c))(*(iVar3 + 0x24), 1, *piVar1);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 585
    },
    "0043e16b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e16b(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x24) == 0) {\n        uVar1 = 0x80004001;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x24) + 0xfc))(arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 146
    },
    "0043f77d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043f77d(int32_t *param_1, int32_t *param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    do {\n        if (*param_2 == 0) {\n            return 0;\n        }\n        uVar1 = (**(*param_1 + 0xb8))(param_2);\n        iVar2 = fcn.004228ed(param_4);\n    } while (iVar2 == 0);\n    return uVar1;\n}\n",
        "token_count": 126
    },
    "0043f7d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f7d7(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    var_4h = (**(*param_1 + 0xb4))();\n    while( true ) {\n        puVar2 = &var_4h;\n        piVar1 = fcn.0043f7b5();\n        if (piVar1 == NULL) break;\n        if (piVar1[9] != 0) {\n            (**(*piVar1 + 0x58))(1);\n            (**(*param_1 + 0xc0))(piVar1);\n            fcn.0042365a(puVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "0043f822": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f822(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    var_4h = (**(*in_ECX + 0xb4))();\n    piVar2 = fcn.0043f7b5(&var_4h);\n    while (piVar2 != NULL) {\n        if ((*(piVar2 + 0x47) != '\\0') && (arg_ch != NULL)) {\n            piVar1 = piVar2[0x13];\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 8))(piVar1);\n            }\n            (**(*arg_ch + 4))(arg_ch);\n            piVar2[0x13] = arg_ch;\n        }\n        (**(*piVar2 + 0xdc))(arg_8h);\n        piVar2 = fcn.0043f7b5(&var_4h);\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0043f960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043f960(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_4h;\n    \n    var_4h = param_1;\n    iVar1 = fcn.00408267();\n    if (iVar1 == 0) {\ncode_r0x0043f970:\n        uVar2 = 0;\n    }\n    else {\n        if ((*(param_1 + 0x78) != 0) && (*(param_1 + 0x50) == 0)) {\n            fcn.004234be(param_1 + 0x7c);\n            iVar1 = (**0x4818bc)(0, 0x4011012, 0, &var_4h);\n            if (iVar1 != 0) goto code_r0x0043f970;\n            *(param_1 + 0x7c) = var_4h;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 230
    },
    "0043fa4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0043fa4c(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if (*param_1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.0043fa2f(param_1);\n    }\n    return uVar1;\n}\n",
        "token_count": 76
    },
    "0043fb3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043fb3c(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar3;\n    \n    iVar3 = 8;\n    fcn.00451106(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = vtable.COleDocument.0;\n    pcVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x10) = pcVar1;\n    while (pcVar1 != NULL) {\n        iVar3 = unaff_EBP + -0x10;\n        piVar2 = fcn.0043fa4c();\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 4))(1);\n        }\n        pcVar1 = *(unaff_EBP + -0x10);\n    }\n    fcn.004234be(extraout_ECX + 0x1f, iVar3);\n    (**0x481990)(extraout_ECX[0x22]);\n    fcn.0042a59f();\n    *(unaff_EBP + -4) = 0;\n    fcn.00449024();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00408339();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 370
    },
    "0043fd5f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.0043fd5f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_88h;\n    uint var_84h;\n    int32_t var_40h;\n    uint in_stack_ffffffcc;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00451139(0x80);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    fcn.004495fe(0);\n    *(unaff_EBP + -4) = 0;\n    fcn.00402648(0, 0xffffffff, 0);\n    iVar1 = extraout_ECX[0x1f];\n    *(unaff_EBP + -4) = 1;\n    iVar1 = fcn.00449978(iVar1, \"Contents\", 0x1012, unaff_EBP + -0x28);\n    if (iVar1 == 0) {\n        if (*(unaff_EBP + -0x20) == 2) {\n            var_28h = 7;\n            fcn.00425943(7, 0);\n        }\n        in_stack_ffffffcc = *(unaff_EBP + -0x20);\n        fcn.0040a7d3(in_stack_ffffffcc, *(unaff_EBP + -0x1c), var_28h);\n    }\n    fcn.00426371(unaff_EBP + -0x40, 2, 0x1000, in_stack_ffffffcc);\n    *(unaff_EBP + -0x88) = extraout_ECX;\n    *(unaff_EBP + -0x84) = 0;\n    *(unaff_EBP + -4) = 3;\n    if (*(unaff_EBP + 8) == NULL) {\n        iVar1 = *extraout_ECX;\n    }\n    else {\n        iVar1 = **(unaff_EBP + 8);\n    }\n    var_40h = unaff_EBP + -0x88;\n    (**(iVar1 + 8))(var_40h);\n    fcn.00426066();\n    fcn.00449384();\n    iVar1 = (**(*extraout_ECX[0x1f] + 0x24))(extraout_ECX[0x1f], 2);\n    if (iVar1 != 0) {\n        fcn.00404470(iVar1);\n    }\n    *(unaff_EBP + -4) = 1;\n    fcn.004262b1();\n    *(unaff_EBP + -0x28) = vtable.CFileException.0;\n    fcn.00401fb6();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004493c0();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 787
    },
    "0044004b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044004b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(*(param_1 + 0x24) + -0xc) == 0) {\n        iVar1 = 0;\n    }\n    else {\n        var_8h = param_1;\n        var_4h = param_1;\n        fcn.0040555a(*(param_1 + 0x24));\n        (**0x4818b4)(var_4h, &var_8h);\n        iVar1 = var_8h;\n        fcn.00401fb6();\n    }\n    return iVar1;\n}\n",
        "token_count": 166
    },
    "00440089": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00440089(uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00451139(0x20);\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    if ((extraout_ECX[0x1e] == 0) && (extraout_ECX[0x1f] == 0)) {\n        fcn.00408d1c(*(unaff_EBP + 8));\n    }\n    else {\n        (**(*extraout_ECX + 0x58))();\n        iVar3 = *(unaff_EBP + 8);\n        if (iVar3 != 0) {\n            (**(*extraout_ECX + 0x6c))();\n            fcn.004234be(extraout_ECX + 0x1f);\n        }\n        (**(*extraout_ECX + 0x5c))(1);\n        iVar1 = extraout_ECX[0x1f];\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -4) = 0;\n        if (iVar1 == 0) {\n            fcn.0040555a(iVar3);\n            uVar4 = -(iVar3 != 0) & *(unaff_EBP + -0x18);\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x20) = uVar4;\n            *(unaff_EBP + -0x14) = 0;\n            iVar3 = (**0x4818c4)(uVar4);\n            pcVar2 = *0x4818c0;\n            if (iVar3 == 1) {\n                iVar3 = (**0x4818bc)(uVar4, 0x30022);\n            }\n            else {\n                iVar3 = (**0x4818c0)(uVar4, 0, 0x10022, 0, 0, unaff_EBP + -0x14);\n                if ((iVar3 < 0) || (*(unaff_EBP + -0x14) == 0)) {\n                    iVar3 = (*pcVar2)(*(unaff_EBP + -0x20), 0, 0x10000, 0, 0, unaff_EBP + -0x14);\n                }\n            }\n            if (iVar3 < 0) {\n                fcn.00404470(iVar3);\n            }\n            extraout_ECX[0x1f] = *(unaff_EBP + -0x14);\n            *(unaff_EBP + -4) = 0;\n            fcn.00401fb6();\n        }\n        (**(*extraout_ECX + 0xd8))();\n        (**(*extraout_ECX + 0x5c))(0);\n        *(unaff_EBP + -0x1c) = 1;\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 830
    },
    "00441669": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441669(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    fcn.004234be(param_1 + 1);\n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        if (param_1[3] != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        *param_1 = NULL;\n    }\n    param_1[2] = NULL;\n    return;\n}\n",
        "token_count": 116
    },
    "004416c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004416c0(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t **in_ECX;\n    uint var_14h;\n    \n    if (in_ECX[2] == NULL) {\n        uVar2 = fcn.00403f41(arg_ch, arg_8h, &var_14h);\n        iVar3 = (**(**in_ECX + 0x14))(*in_ECX, uVar2);\n        uVar1 = iVar3 == 0;\n    }\n    else {\n        uVar1 = (**0x481840)(arg_8h & 0xffff);\n    }\n    return uVar1;\n}\n",
        "token_count": 172
    },
    "0044171e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044171e(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *var_4h;\n    \n    if ((param_1[2] != 0) && (*param_1 == 0)) {\n        var_4h = param_1;\n        iVar1 = (**0x4818d0)(&var_4h);\n        if (iVar1 == 0) {\n            fcn.00441705(var_4h, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00441760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00441760(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    \n    fcn.0044171e();\n    piVar1 = *param_1;\n    if ((param_2 != 0) && (piVar1 != NULL)) {\n        (**(*piVar1 + 4))(piVar1);\n    }\n    return piVar1;\n}\n",
        "token_count": 101
    },
    "004417a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004417a5(uint arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    int32_t **in_ECX;\n    uint var_2ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0044171e();\n    if (*in_ECX == NULL) {\n        return 0;\n    }\n    puVar1 = fcn.00403f41(arg_ch, arg_8h, &var_2ch);\n    if (arg_ch == 0) {\n        *(puVar1 + 8) = 0x21;\n    }\n    iVar2 = (**(**in_ECX + 0xc))(*in_ECX, puVar1, &var_ch);\n    if (-1 < iVar2) {\n        if ((var_ch == 1) || (var_ch == 0x20)) {\n            if (var_4h == 0) {\n                return var_8h;\n            }\n            var_18h = 0;\n            var_10h = 0;\n            iVar2 = fcn.00404c31(*puVar1, &var_18h, &var_ch);\n            if (iVar2 != 0) {\n                (**0x481968)(&var_ch);\n                return var_14h;\n            }\n        }\n        (**0x481968)();\n    }\n    return 0;\n}\n",
        "token_count": 348
    },
    "0044184c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0044184c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_ECX;\n    bool bVar3;\n    uint var_14h;\n    \n    fcn.0044171e();\n    if (*in_ECX == NULL) {\n        bVar3 = false;\n    }\n    else {\n        uVar1 = fcn.00403f41(arg_10h, arg_8h, &var_14h);\n        iVar2 = (**(**in_ECX + 0xc))(*in_ECX, uVar1, arg_ch);\n        bVar3 = -1 < iVar2;\n    }\n    return bVar3;\n}\n",
        "token_count": 169
    },
    "00441c01": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441c01(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piStack8;\n    int32_t *piStack4;\n    \n    pcVar1 = *0x4815c8;\n    piStack8 = param_1;\n    piStack4 = param_1;\n    if ((*0x4a839c == 0) && (*0x4a839c = (**0x4815c8)(0, 0x7f8b),  *0x4a839c == 0)) {\n        iVar2 = fcn.00419c68();\n        *0x4a839c = (*pcVar1)(*(iVar2 + 0xc), 0x7901);\n        if (*0x4a839c == 0) {\n            return;\n        }\n    }\n    (**(*param_1 + 0xc))(0xe145, 0, 0, &piStack8);\n    return;\n}\n",
        "token_count": 228
    },
    "00441d6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441d6a(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint var_28h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = arg_8h;\n    uVar6 = *(arg_8h + 4);\n    if ((uVar6 == 0x367) || ((uVar6 == 0x100 && (*(arg_8h + 8) == 0x1b)))) {\ncode_r0x00441f55:\n        (**0x481778)(iVar2, 0, uVar6, uVar6, 1);\n        return 0;\n    }\n    if (((uVar6 < 0x200) || (0x209 < uVar6)) && ((uVar6 < 0xa0 || (0xa9 < uVar6)))) {\n        if ((uVar6 != 0x112) && ((uVar6 < 0x100 || (0x109 < uVar6)))) {\n            iVar3 = (**0x481778)(arg_8h, 0, uVar6, uVar6, 1);\n            if (iVar3 == 0) {\n                return 1;\n            }\ncode_r0x00441e7c:\n            (**0x48176c)(iVar2);\n            return 1;\n        }\n        iVar3 = (**0x4815fc)();\n        pcVar1 = *0x481778;\n        if (iVar3 != 0) {\n            (**0x4815c4)();\n            do {\n                iVar3 = (*pcVar1)(&var_28h, 0, 0x200, 0x209, 3);\n            } while (iVar3 != 0);\n        }\n        iVar3 = (*pcVar1)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 0);\n        if (iVar3 == 0) goto code_r0x00441f31;\n        (**0x481764)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4));\n        iVar3 = (**(*var_4h + 0x100))(iVar2);\n        if (iVar3 != 0) goto code_r0x00441f31;\n        (**0x481768)(iVar2);\n        uVar6 = *(iVar2 + 4);\n        if ((uVar6 != 0x112) && ((uVar6 < 0x104 || (0x107 < uVar6)))) goto code_r0x00441f31;\n    }\n    else {\n        iVar3 = fcn.00441c5b(*(arg_8h + 0x14), *(arg_8h + 0x18), &arg_8h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n        if (arg_8h == 0) {\n            (**0x481778)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 1);\n            goto code_r0x00441e7c;\n        }\n        if (*(iVar2 + 4) != 0x201) {\n            (**0x481778)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 1);\n            return 1;\n        }\n        iVar4 = (**0x48183c)(iVar3, 0x84, 0, CONCAT22(*(iVar2 + 0x18), *(iVar2 + 0x14)));\n        if ((iVar4 != 5) && (iVar4 != 3)) {\n            if (iVar4 == 1) {\n                uVar5 = fcn.00441a53(iVar3, *(iVar2 + 0x14), iVar3);\n            }\n            else {\n                uVar5 = fcn.00441ac1(iVar4);\n            }\n            *arg_ch = uVar5;\n            uVar6 = *(iVar2 + 4);\n            goto code_r0x00441f55;\n        }\n        (**0x4815c4)();\n        (**0x481764)(iVar2, 0, 0xa1, 0xa1);\n    }\n    (**0x48176c)(iVar2);\ncode_r0x00441f31:\n    (**0x48177c)(&var_ch);\n    fcn.00441c5b(var_ch, var_8h, 0);\n    return 1;\n}\n",
        "token_count": 1036
    },
    "004424bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004424bc(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    uint var_ch;\n    \n    fcn.004423e5(&var_30h, arg_8h, arg_14h);\n    if (arg_10h != 0) {\n        uVar1 = fcn.00451210(&var_20h, 0x10, arg_10h, 0x10);\n        fcn.00401000(uVar1);\n    }\n    var_ch = arg_ch;\n    (**0x48183c)(*(in_ECX + 0x20), 0x404, 0, &var_30h);\n    return;\n}\n",
        "token_count": 193
    },
    "00442512": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442512(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    uint var_10h;\n    uint32_t var_ch;\n    \n    fcn.004423e5(&var_30h, arg_8h, arg_14h);\n    if (arg_10h != 0) {\n        uVar1 = fcn.00451210(&var_20h, 0x10, arg_10h, 0x10);\n        fcn.00401000(uVar1);\n    }\n    iVar2 = fcn.00419c68();\n    var_10h = *(iVar2 + 0xc);\n    var_ch = arg_ch & 0xffff;\n    (**0x48183c)(*(in_ECX + 0x20), 0x404, 0, &var_30h);\n    return;\n}\n",
        "token_count": 241
    },
    "00442621": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442621(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_ch;\n    \n    iVar1 = (**0x481710)(*(in_ECX + 0x20));\n    if (iVar1 != 0) goto code_r0x0044263d;\n    do {\n        do {\n            fcn.00403bf2();\ncode_r0x0044263d:\n        } while (arg_ch == 0);\n        uVar2 = fcn.004518d0(arg_8h);\n    } while (0x400 < uVar2);\n    fcn.004423e5(&var_30h, arg_ch, arg_10h);\n    var_ch = arg_8h;\n    (**0x48183c)(*(in_ECX + 0x20), 0x40c, 0, &var_30h);\n    return;\n}\n",
        "token_count": 235
    },
    "00442b6e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442b6e(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    \n    iVar1 = fcn.00419cdb();\n    iVar2 = *(iVar1 + 0x3c);\n    if (arg_8h == 0) {\n        if ((*(in_ECX + 0x3c) & arg_ch) != 0) {\n            if (*(iVar1 + 0x40) == in_ECX) {\n                fcn.00412767(1);\n            }\n            if ((iVar2 != 0) && (*(iVar2 + 0x20) != 0)) {\n                fcn.00451550(&var_30h, 0, 0x30);\n                var_28h = *(in_ECX + 0x20);\n                var_30h = 0x28;\n                var_2ch = 1;\n                var_24h = var_28h;\n                (**0x48183c)(*(iVar2 + 0x20), 0x405, 0, &var_30h);\n            }\n            *(in_ECX + 0x3c) = *(in_ECX + 0x3c) & ~arg_ch;\n        }\n    }\n    else if ((*(in_ECX + 0x3c) & arg_ch) == 0) {\n        iVar2 = fcn.00419c68();\n        *(iVar2 + 0x38) = 0x442a9e;\n        *(in_ECX + 0x3c) = *(in_ECX + 0x3c) | arg_ch;\n    }\n    return 1;\n}\n",
        "token_count": 416
    },
    "00442c91": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00442c91(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    uVar1 = 0;\n    uVar2 = *(param_1 + 0x78) & 0xa000;\n    if (*(param_1 + 0x7c) != 0) {\n        uVar2 = uVar2 == 0;\n    }\n    if ((uVar2 == 0) || ((*(param_1 + 0x70) & 0xa000) == 0)) {\n        if ((*(param_1 + 0x70) & 0x5000) == 0) goto code_r0x00442cef;\n        uVar1 = *(param_1 + 0x70) & 0xffff5fff;\n        puVar3 = param_1 + 0x38;\n    }\n    else {\n        uVar1 = *(param_1 + 0x70) & 0xffffafff;\n        puVar3 = param_1 + 0x28;\n    }\n    uVar1 = fcn.0044abba(*puVar3, puVar3[1], puVar3[2], puVar3[3], uVar1, 0);\ncode_r0x00442cef:\n    if ((*(param_1 + 0x7c) == 0) && (uVar1 == 0)) {\n        if ((*(param_1 + 0x70) & 0xa000) != 0) {\n            fcn.0044abba(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), \n                         *(param_1 + 0x70) & 0xffffafff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffffafff;\n            uVar1 = fcn.0044abba(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n            if (uVar1 != 0) {\n                return uVar1;\n            }\n        }\n        if ((*(param_1 + 0x70) & 0x5000) != 0) {\n            fcn.0044abba(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), \n                         *(param_1 + 0x70) & 0xffff5fff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffff5fff;\n            uVar1 = fcn.0044abba(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 756
    },
    "00443094": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443094(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t arg_24h;\n    int32_t in_ECX;\n    uint *puVar3;\n    uint var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 1;\n    var_10h = 1;\n    uVar2 = (**0x481074)(0);\n    var_8h = fcn.00406b5e(uVar2);\n    var_ch = var_8h;\n    var_4h = fcn.004244f6();\n    pcVar1 = *0x48178c;\n    if ((*(in_ECX + 0x74) & 0xa000) == 0) {\n        if ((*(in_ECX + 0x74) & 0x5000) == 0) {\n            var_14h = (**0x48178c)(0x20);\n            var_14h = var_14h + -1;\n            var_10h = (*pcVar1)(0x21);\n            var_10h = var_10h + -1;\n            if ((((*(in_ECX + 0x78) & 0xa000) == 0) || (*(in_ECX + 0x7c) != 0)) &&\n               (((*(in_ECX + 0x78) & 0x5000) == 0 || (*(in_ECX + 0x7c) == 0)))) {\n                puVar3 = in_ECX + 0x58;\n            }\n            else {\n                puVar3 = in_ECX + 0x48;\n            }\n            var_8h = var_4h;\n        }\n        else {\n            puVar3 = in_ECX + 0x38;\n        }\n    }\n    else {\n        puVar3 = in_ECX + 0x28;\n    }\n    var_24h = *puVar3;\n    uStack36 = puVar3[1];\n    uStack32 = puVar3[2];\n    uStack28 = puVar3[3];\n    if (arg_8h != 0) {\n        var_10h = 0;\n        var_14h = 0;\n    }\n    if ((*(in_ECX + 0x74) & 0xf000) != 0) {\n        (**0x4817e8)(&var_24h, 0xffffffff, 0xffffffff);\n    }\n    arg_24h = var_4h;\n    if (*(in_ECX + 0x24) == 0) {\n        arg_24h = var_ch;\n    }\n    fcn.00424599(&var_24h, var_14h, var_10h, in_ECX + 0xc, *(in_ECX + 0x1c), *(in_ECX + 0x20), var_8h, arg_24h);\n    *(in_ECX + 0xc) = var_24h;\n    *(in_ECX + 0x1c) = var_14h;\n    *(in_ECX + 0x10) = uStack36;\n    *(in_ECX + 0x20) = var_10h;\n    *(in_ECX + 0x14) = uStack32;\n    *(in_ECX + 0x18) = uStack28;\n    *(in_ECX + 0x24) = var_8h == var_4h;\n    return;\n}\n",
        "token_count": 836
    },
    "0044319f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044319f(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (*param_2 != param_3) {\n        *param_2 = param_3;\n        if ((((*(param_1 + 0x70) & 0xa000) == 0) || ((*(param_1 + 0x70) & 0x5000) == 0)) || (*(param_1 + 0x7c) == 0)) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n        *(param_1 + 0x7c) = uVar1;\n        if (*(param_1 + 0x80) == 0) {\n            uVar1 = fcn.00442c91();\n        }\n        else {\n            uVar1 = 0;\n        }\n        *(param_1 + 0x74) = uVar1;\n        fcn.00443094(0);\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "004431f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004431f3(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar1 = *0x481688;\n    iVar4 = arg_8h - *(in_ECX + 4);\n    iVar2 = arg_ch - *(in_ECX + 8);\n    (**0x481688)(in_ECX + 0x28, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x48, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x38, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x58, iVar4, iVar2);\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    if (*(in_ECX + 0x80) == 0) {\n        uVar3 = fcn.00442c91();\n    }\n    else {\n        uVar3 = 0;\n    }\n    *(in_ECX + 0x74) = uVar3;\n    fcn.00443094(0);\n    return;\n}\n",
        "token_count": 300
    },
    "0044345c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044345c(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint arg_10h;\n    uint *puVar2;\n    uint arg_ch;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    int32_t var_4h;\n    \n    fcn.00443417();\n    if (*(param_1 + 0x74) == 0) {\n        uVar1 = *(param_1 + 0x78);\n        if ((((uVar1 & 4) == 0) && (((uVar1 & 0xa000) == 0 || (*(param_1 + 0x7c) != 0)))) &&\n           (((uVar1 & 0x5000) == 0 || (*(param_1 + 0x7c) == 0)))) {\n            uVar1 = *(param_1 + 0x70) & 0x40 | 0x1000;\n            *(param_1 + 0xa8) = *(param_1 + 0x58);\n            arg_10h = *(param_1 + 0x5c);\n            arg_ch = *(param_1 + 0x58);\n        }\n        else {\n            uVar1 = *(param_1 + 0x70) & 0x40 | 0x2000;\n            *(param_1 + 0xa8) = *(param_1 + 0x48);\n            arg_10h = *(param_1 + 0x4c);\n            arg_ch = *(param_1 + 0x48);\n        }\n        *(param_1 + 0xac) = arg_10h;\n        *(param_1 + 0xa4) = uVar1;\n        fcn.0044aa8a(*(param_1 + 0x68), arg_ch, arg_10h, uVar1);\n    }\n    else {\n        var_4h = fcn.00442daf(*(param_1 + 0x74));\n        puVar2 = param_1 + 0x38;\n        if ((*(param_1 + 0x74) & 0x5000) == 0) {\n            puVar2 = param_1 + 0x28;\n        }\n        var_14h = *puVar2;\n        uStack20 = puVar2[1];\n        uStack16 = puVar2[2];\n        uStack12 = puVar2[3];\n        uVar1 = (**0x48170c)(*(var_4h + 0x20));\n        if ((uVar1 & 0xffff) - 0xe81b < 4) {\n            *(param_1 + 0x90) = uVar1 & 0xffff;\n            *(param_1 + 0x94) = var_14h;\n            *(param_1 + 0x98) = uStack20;\n            *(param_1 + 0x9c) = uStack16;\n            *(param_1 + 0xa0) = uStack12;\n            fcn.004064be(param_1 + 0x94);\n        }\n        fcn.0044a8db(*(param_1 + 0x68), var_4h, &var_14h);\n        (**(**(param_1 + 0x6c) + 0x148))(1);\n    }\n    return;\n}\n",
        "token_count": 761
    },
    "0044ac85": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0044ac85(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumArray.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.0042365a();\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        fcn.00403ac8(extraout_ECX[10]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040965e();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 225
    },
    "004451e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004451e6(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int64_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *unaff_EBX;\n    uint *puVar5;\n    uint unaff_retaddr;\n    \n    puVar2 = fcn.00444e9b(param_2, param_3);\n    if (puVar2 == NULL) {\n        if ((*(param_1 + 0x20) == 0) || (*(param_1 + 0x28) == *(param_1 + 0x24))) {\n            iVar1 = (*(param_1 + 0x24) + *(param_1 + 0x2c)) * 0x24;\n            uVar3 = fcn.00403a9d(-(iVar1 >> 0x20 != 0) | iVar1);\n            *(param_1 + 0x24) = *(param_1 + 0x24) + *(param_1 + 0x2c);\n            if (*(param_1 + 0x20) != 0) {\n                fcn.00404383(uVar3, (*(param_1 + 0x24) + *(param_1 + 0x2c)) * 0x24, *(param_1 + 0x20), \n                             *(param_1 + 0x28) * 0x24);\n                fcn.00403ac8(*(param_1 + 0x20));\n            }\n            *(param_1 + 0x20) = uVar3;\n        }\n        puVar2 = *(param_1 + 0x28) * 0x24 + *(param_1 + 0x20);\n        *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    }\n    else {\n        (**0x481990)(puVar2[1]);\n        (**0x481968)(puVar2 + 5);\n    }\n    puVar2[8] = unaff_retaddr;\n    puVar5 = puVar2;\n    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *unaff_EBX;\n        unaff_EBX = unaff_EBX + 1;\n        puVar5 = puVar5 + 1;\n    }\n    return puVar2;\n}\n",
        "token_count": 554
    },
    "00445df6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445df6(uint arg_8h, code *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00419c68();\n    iVar1 = *(iVar1 + 4);\n    if (*(iVar1 + 0x58) != 0) {\n        var_ch = (**(**(iVar1 + 0x58) + 0x10))();\n        while (var_ch != 0) {\n            piVar2 = (**(**(iVar1 + 0x58) + 0x14))(&var_ch);\n            var_8h = (**(*piVar2 + 0x54))();\n            while (var_8h != 0) {\n                piVar3 = (**(*piVar2 + 0x58))(&var_8h);\n                iVar4 = fcn.004228ed(0x489bac);\n                if (iVar4 != 0) {\n                    var_4h = (**(*piVar3 + 0xb4))();\n                    while (iVar4 = fcn.0043f7b5(&var_4h),  iVar4 != 0) {\n                        if ((((*(iVar4 + 0x60) != 0) && (*(*(iVar4 + 0x60) + 0x24) != 0)) && (*(iVar4 + 0x58) != 0)) &&\n                           ((iVar4 = fcn.0041e7fc(),  iVar4 != 0 && (iVar4 = (*arg_ch)(arg_8h),  iVar4 == 0)))) {\n                            return 0;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 432
    },
    "004476b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004476b1(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    iVar2 = fcn.0043b4bd(&var_8h, &var_4h, &var_ch);\n    if ((iVar2 == 0) && (var_8h = fcn.0042349a(*(in_ECX + 0x24), 0x48f2b0),  var_8h == NULL)) {\n        return 0;\n    }\n    piVar1 = arg_8h;\n    if (arg_8h == NULL) {\n        if (var_4h == NULL) {\n            (**(*var_8h + 8))(var_8h);\n            (**0x481990)(var_4h);\n        }\n        else {\ncode_r0x0044778b:\n            (**(*var_8h + 0x10))(var_8h, var_ch);\n            (**0x481990)(var_4h);\ncode_r0x0044779d:\n            (**(*var_8h + 8))(var_8h);\n        }\n        uVar3 = 1;\n    }\n    else {\n        if (((var_4h == NULL) || (*var_4h != *arg_8h)) || (iVar2 = fcn.00453966(var_4h, arg_8h, *arg_8h),  iVar2 != 0))\n        {\n            var_14h = 0xffffffff;\n            var_1ch = piVar1;\n            var_10h = 0x20;\n            var_20h._0_2_ = 3;\n            var_18h = 1;\n            iVar2 = (**(*var_8h + 0xc))(var_8h, &var_20h, 0x20, &arg_8h);\n            if (iVar2 == 0) {\n                if (var_4h != NULL) goto code_r0x0044778b;\n                goto code_r0x0044779d;\n            }\n            (**(*var_8h + 8))(var_8h);\n            uVar3 = 0;\n        }\n        else {\n            (**(*var_8h + 8))(var_8h);\n            uVar3 = 1;\n        }\n        (**0x481990)(var_4h);\n    }\n    return uVar3;\n}\n",
        "token_count": 635
    },
    "00447b7d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447b7d(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_18h;\n    uint var_8h;\n    uint *var_4h;\n    \n    if (in_ECX[0x16] == 0) {\n        in_ECX[0x16] = arg_ch;\n    }\n    iVar2 = fcn.00422a67(0x4451ba);\n    if (iVar2 == 0) {\n        fcn.00403bf2();\n    }\n    uVar1 = *(iVar2 + 4);\n    *(iVar2 + 4) = 0;\n    var_4h = NULL;\n    if (arg_ch != 0) {\n        (**0x4815b8)(&var_18h);\n        (**(*in_ECX + 0x70))(&var_18h);\n        iVar3 = (**0x4815e4)(&var_18h);\n        if (iVar3 == 0) {\n            var_4h = &var_18h;\n            *(iVar2 + 4) = arg_ch;\n        }\n    }\n    var_8h = (**(*in_ECX + 0xc0))();\n    if (arg_ch == 0) {\n        arg_ch = 0;\n    }\n    else {\n        arg_ch = *(arg_ch + 0x20);\n    }\n    iVar3 = (**(*in_ECX[9] + 0x2c))(in_ECX[9], arg_8h, arg_10h, var_8h, 0xffffffff, arg_ch, var_4h);\n    *(iVar2 + 4) = uVar1;\n    iVar2 = fcn.0043b8b5();\n    if (iVar2 == 0) {\n        in_ECX[0x16] = 0;\n    }\n    *(in_ECX + 0x11) = iVar3 < 0;\n    (**(*in_ECX + 200))(iVar3);\n    return;\n}\n",
        "token_count": 478
    },
    "00448bfd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00448bfd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(0x40);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 != NULL) {\n        fcn.00448bc1(unaff_EBP + -0x14, 1, *(unaff_EBP + 0xc));\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x44) = 0;\n        *(unaff_EBP + -0x10) = 0;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + 0x10);\n        *(unaff_EBP + -0x48) = *(unaff_EBP + 0x10);\n        if (((*(unaff_EBP + 0x14) != 3) && (iVar1 = fcn.00448a17(arg_8h_00, 1),  iVar1 != 0)) &&\n           ((*(unaff_EBP + -0x10) & 2) != 0)) {\n            (**(*arg_8h_00 + 0xc))(*(unaff_EBP + -0x48), 0, 0, 0);\n        }\n        fcn.00401fb6();\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 471
    },
    "0044902f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044902f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar2 = fcn.004357b2(param_1 + 0x14, *(param_1 + 0x18));\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = uStack8;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 304
    },
    "004490db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004490db(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.00403bf2();\n    }\n    arg_8h = *(iVar1 + 8);\n    while (arg_8h != 0) {\n        fcn.00448fe7(&arg_8h);\n        fcn.00449088();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00449118": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449118(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.00403bf2();\n    }\n    arg_8h = *(iVar1 + 4);\n    while (arg_8h != 0) {\n        fcn.00448fce(&arg_8h);\n        fcn.004490b2();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00449384": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449384(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    int32_t *unaff_EDI;\n    uint64_t uVar4;\n    int32_t *piVar5;\n    \n    piVar5 = param_1 + 4;\n    if (*piVar5 != 0) {\n        (**(*param_1 + 0x48))();\n        fcn.004234be(piVar5);\n        unaff_EDI = piVar5;\n    }\n    puVar1 = param_1 + 5;\n    uVar2 = *puVar1;\n    uVar4 = uVar2;\n    piVar5 = *(uVar2 - 0x10);\n    if (*(uVar2 - 0xc) != 0) {\n        if (*(uVar2 - 4) < 0) {\n            if (*(uVar2 - 8) < 0) {\n                uVar4 = fcn.00401103(0x80070057);\n            }\n            *(uVar4 + -0xc) = uVar4 >> 0x20;\n            **puVar1 = uVar4 >> 0x20;\n        }\n        else {\n            fcn.00401fb6(unaff_EDI, unaff_ESI);\n            iVar3 = (**(*piVar5 + 0xc))();\n            *puVar1 = iVar3 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 344
    },
    "00449c1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00449c1d(void)\n\n{\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CMetaFileDC.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[1] != NULL) {\n        uVar1 = fcn.004068d8();\n        uVar1 = (**0x481120)(uVar1);\n        (**0x481124)(uVar1);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040691f();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 216
    },
    "00449c62": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449c62(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 8) != 0) {\n        var_8h = in_ECX;\n        var_4h = in_ECX;\n        uVar1 = (**0x481110)(*(in_ECX + 8));\n        if ((uVar1 & 6) != 6) {\n            if ((uVar1 & 6) == 2) {\n                arg_8h = -arg_8h;\n            }\n            fcn.00449bcf(&var_8h);\n            (**0x48119c)(*(in_ECX + 8), var_8h + arg_8h, var_4h, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0044a572": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044a572(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.004458ce();\n    fcn.0044c372();\n    fcn.0044bd9e();\n    if (param_1 == 0) {\n        iVar1 = fcn.0040c7a5();\n        if (iVar1 != 0) {\n            if (*(iVar1 + 0x40) != NULL) {\n                (**(**(iVar1 + 0x40) + 4))(1);\n            }\n            *(iVar1 + 0x40) = 0;\n        }\n        iVar1 = fcn.004196b5();\n        if (*(iVar1 + 0x100) == 1) {\n            (**0x4818f4)();\n            (**0x4818f0)();\n            *(iVar1 + 0x100) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "0044a781": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044a781(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CSharedFile.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[8] != NULL) {\n        fcn.0044ce66();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0044cf7d();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 163
    },
    "0044aa8a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044aa8a(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    if (arg_8h != 0) goto code_r0x0044aaa2;\ncode_r0x0044aa9d:\n    do {\n        fcn.00403bf2();\ncode_r0x0044aaa2:\n        if (((*(arg_8h + 0x88) != 0) && (iVar4 = *(arg_8h + 0x8c),  iVar4 != 0)) && (*(iVar4 + 0x94) != 0)) {\n            iVar1 = fcn.004385d7();\n            if ((iVar1 == 1) && ((*(iVar4 + 0x80) & arg_14h & 0xf000) != 0)) {\n                uVar2 = (**0x4817a0)(*(iVar4 + 0x20));\n                piVar3 = fcn.00413d94(uVar2);\n                if (piVar3 != NULL) {\n                    fcn.0040e533(0, arg_ch, arg_10h, 0, 0, 0x15);\n                    (**(*piVar3 + 0x148))(1);\n                    goto code_r0x0044abaa;\n                }\n                goto code_r0x0044aa9d;\n            }\n        }\n        uVar5 = arg_14h;\n        if (((*(arg_8h + 0x80) & 4) != 0) && (uVar5 = arg_14h | 4,  (arg_14h & 0x5000) != 0)) {\n            uVar5 = arg_14h & 0xffff2fff | 0x2004;\n        }\n        arg_14h = uVar5;\n        piVar3 = fcn.0044a8a2(arg_14h);\n        if (piVar3 != NULL) {\n            fcn.0040e533(0, arg_ch, arg_10h, 0, 0, 0x15);\n            if (piVar3[0xe] == 0) {\n                piVar3[0xe] = *(arg_8h + 0x20);\n            }\n            iVar4 = fcn.0040df4b(0xe81f);\n            if (iVar4 != 0) {\n                fcn.00438dd1(arg_8h, 0);\n                (**(*piVar3 + 0x148))(1);\n                uVar5 = (**0x481748)(*(arg_8h + 0x20), 0xfffffff0);\n                if ((uVar5 & 0x10000000) != 0) {\n                    fcn.0040e1f9(8);\ncode_r0x0044abaa:\n                    (**0x48185c)(piVar3[8]);\n                }\n                return;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 713
    },
    "0044abba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0044abba(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint32_t arg_18h, int32_t **arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    ppiVar2 = arg_1ch;\n    arg_18h = arg_18h & 0xf040;\n    if (arg_1ch != NULL) {\n        *arg_1ch = NULL;\n    }\n    arg_1ch = *(in_ECX + 0x88);\n    do {\n        do {\n            if (arg_1ch == NULL) {\n                return 0;\n            }\n            ppiVar3 = fcn.0040e44d(&arg_1ch);\n            piVar1 = *ppiVar3;\n            iVar4 = (**(*piVar1 + 0x15c))();\n        } while ((((iVar4 == 0) || (iVar4 = (**0x4817b0)(piVar1[8]),  iVar4 == 0)) ||\n                 ((piVar1[0x20] & arg_18h & 0xf000) == 0)) ||\n                ((piVar1[0x25] != 0 && ((piVar1[0x20] & arg_18h & 0x40) == 0))));\n        (**0x48169c)(piVar1[8], &var_10h);\n        if (var_8h == var_10h) {\n            var_8h = var_8h + 1;\n        }\n        if (var_4h == var_ch) {\n            var_4h = var_4h + 1;\n        }\n        iVar4 = (**0x48168c)(&var_10h, &var_10h, &arg_8h);\n    } while (iVar4 == 0);\n    if (ppiVar2 != NULL) {\n        *ppiVar2 = piVar1;\n    }\n    return piVar1[0x20] & arg_18h;\n}\n",
        "token_count": 525
    },
    "0044b447": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0044b447(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    piVar2 = fcn.00422905(0x489bac, *(arg_8h + 0x54));\n    if (piVar2 != NULL) {\n        var_8h = (**(*piVar2 + 0xb4))();\n        if (var_8h != 0) {\n            do {\n                iVar3 = fcn.0043f7b5(&var_8h);\n                var_ch = fcn.00422905(0x48b4a4, iVar3);\n                if ((var_ch != 0) &&\n                   ((arg_10h != 0 || ((*(iVar3 + 0x58) != 0 && (*(*(iVar3 + 0x58) + 0x20) == *(arg_8h + 0x20))))))) {\n                    iVar3 = fcn.0044b0ea();\n                    if (iVar3 == 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    else {\n                        iVar3 = fcn.0044b14d(0, &var_10h);\n                        if (iVar3 != 0) {\n                            var_4h = var_4h + var_10h;\n                        }\n                        arg_ch[1] = 1;\n                    }\n                    if (arg_10h == 0) break;\n                }\n            } while (var_8h != 0);\n            if (0 < var_4h) {\n                uVar4 = *(*(*arg_ch + 0x74) + 0x1e);\n                if (uVar4 != 0xffff) {\n                    var_4h = var_4h + uVar4;\n                }\n                *(*(*arg_ch + 0x74) + 0x1e) = var_4h;\n                arg_ch[1] = 1;\n            }\n        }\n        if ((arg_ch[1] != 0) && (puVar1 = *(*arg_ch + 0x74) + 0x14,  *puVar1 = *puVar1 | 4,  arg_10h != 0)) {\n            puVar1 = *(*arg_ch + 0x74) + 0x14;\n            *puVar1 = *puVar1 | 8;\n        }\n        piVar2 = 0x1;\n    }\n    return piVar2;\n}\n",
        "token_count": 633
    },
    "0044b547": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b547(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    uint uVar2;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_14h = fcn.00422905(0x489bac, *(arg_8h + 0x54));\n    if (var_14h != NULL) {\n        var_10h = (**(*var_14h + 0xb4))();\n        while (var_10h != 0) {\n            iVar1 = fcn.0043f7b5(&var_10h);\n            var_ch = fcn.00422905(0x48b4a4, iVar1);\n            if ((var_ch != 0) &&\n               ((arg_10h != 0 || ((*(iVar1 + 0x58) != 0 && (*(*(iVar1 + 0x58) + 0x20) == *(arg_8h + 0x20))))))) {\n                iVar1 = fcn.0044b0ea();\n                if (iVar1 == 0) {\n                    fcn.0044b04d(6, 2, 0);\n                }\n                else {\n                    var_8h = 0;\n                    iVar1 = (**0x481480)(*(*(*arg_ch + 0x74) + 0xc));\n                    if (iVar1 != 0) {\n                        arg_ch_00 = (**0x481480)(*(*(*arg_ch + 0x74) + 8));\n                        if (arg_ch_00 != 0) {\n                            var_8h = fcn.0040559e(iVar1, arg_ch_00);\n                            if (var_8h != 0) {\n                                var_4h = (**0x481964)(0x18);\n                                if (var_4h != NULL) {\n                                    *var_4h = 0x18;\n                                    var_4h[1] = 1;\n                                    var_4h[2] = 1;\n                                    var_4h[3] = 1;\n                                    var_4h[4] = *(*(*arg_ch + 0x74) + 0x18);\n                                    var_4h[5] = *(*(*arg_ch + 0x74) + 0x1a);\n                                    var_18h = var_4h[4];\n                                    uVar2 = 8;\n                                    if ((*(*(*arg_ch + 0x74) + 0x14) & 0x20) != 0) {\n                                        uVar2 = 0x48;\n                                    }\n                                    (**(**(var_ch + 0x80) + 0x14))\n                                              (*(var_ch + 0x80), uVar2, &var_8h, &var_4h, 0, 0, arg_ch[5], &var_1ch, \n                                               &var_18h);\n                                    (**0x481990)(var_4h);\n                                }\n                                (**0x481990)(var_8h);\n                            }\n                            (**0x481484)(*(*(*arg_ch + 0x74) + 8));\n                        }\n                        (**0x481484)(*(*(*arg_ch + 0x74) + 0xc));\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 798
    },
    "0044b6f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0044b6f8(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *puStack36;\n    uchar *puStack32;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        puStack32 = *(arg_8h + 0x54);\n        iVar2 = -0x7fffbffb;\n        puStack36 = 0x489bac;\n        piVar3 = fcn.00422905();\n        if (piVar3 != NULL) {\n            puStack32 = 0x44b73c;\n            var_4h = (**(*piVar3 + 0xb4))();\n            do {\n                if (var_4h == 0) {\n                    return -0x7fffbffb;\n                }\n                puStack36 = 0x44b752;\n                puStack36 = fcn.0043f7b5();\n                iVar4 = fcn.00422905(0x48b4a4);\n            } while (iVar4 == 0);\n            arg_8h = NULL;\n            if (*(iVar4 + 0x24) != 0) {\n                puStack36 = &fcn.0044b6f8::arg_8h;\n                iVar2 = (****(iVar4 + 0x24))(*(iVar4 + 0x24), 0x490b00);\n                if (iVar2 == 0) {\n                    var_ch = (*(arg_ch + 8) != 0) + 6;\n                    iVar2 = (**(*arg_8h + 0xc))(arg_8h, 0, 1, &fcn.0044b6f8::var_ch, 0);\n                    if (((iVar2 == 0) && ((var_8h & 3) == 3)) &&\n                       ((iVar2 = (**(*arg_8h + 0x10))(arg_8h, 0, var_ch, 1, 0, 0),  iVar2 == -0x7ffbfefd || (iVar2 == 0)\n                        ))) {\n                        iVar2 = 0;\n                    }\n                    (**(*arg_8h + 8))(arg_8h);\n                }\n            }\n        }\n        return iVar2;\n    }\n    puStack36 = 0x4a3540;\n    fcn.004515ca(&stack0xffffffdc, 0x49617c);\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 639
    },
    "0044be58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044be58(int32_t param_1)\n\n{\n    if (*(param_1 + 0x4a) != '\\0') {\n        if (*(param_1 + 0x24) != 0) {\n            (**0x481904)(*(param_1 + 0x24));\n            *(param_1 + 0x24) = 0;\n        }\n        *(param_1 + 0x4a) = 0;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0044beb1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0044beb1(int32_t *param_1)\n\n{\n    uchar uVar1;\n    \n    if (*(param_1 + 0x12) == '\\0') {\n        uVar1 = (**(*param_1 + 0x60))();\n        *(param_1 + 0x49) = uVar1;\n        *(param_1 + 0x12) = 1;\n    }\n    return *(param_1 + 0x49);\n}\n",
        "token_count": 107
    },
    "0044c774": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c774(int32_t param_1)\n\n{\n    if (*(param_1 + 0x20) != 0) {\n        (**0x481908)(0, 0);\n        *(param_1 + 0x20) = 0;\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0044d075": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044d075(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    pcVar1 = *0x481958;\n    var_4h = NULL;\n    in_ECX[1] = 1;\n    var_8h = (*pcVar1)(arg_8h, 0, 0x17, 0x48f430, &var_4h);\n    if (var_8h == -0x7ff8ffa9) {\n        var_8h = (*pcVar1)(arg_8h, 0, 7, 0x48f430, &var_4h);\n    }\n    if ((-1 < var_8h) && (var_8h = (**0x4818b0)(var_4h),  -1 < var_8h)) {\n        iVar2 = fcn.0042349a(var_4h, 0x48f3c0);\n        *in_ECX = iVar2;\n        if (iVar2 != 0) {\n            (**(*var_4h + 8))(var_4h);\n            return 1;\n        }\n    }\n    fcn.004234be(&var_4h);\n    if (arg_ch != 0) {\n        *(arg_ch + 8) = var_8h;\n    }\n    return 0;\n}\n",
        "token_count": 344
    },
    "0044d114": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d114(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        if (param_1[1] != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        *param_1 = NULL;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0044d4aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044d4aa(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (param_1 != param_2) {\n        uVar1 = *param_2;\n        if (param_2[2] != 0) {\n            *param_2 = 0;\n        }\n        *param_1 = uVar1;\n        param_1[1] = param_2[1];\n        param_1[2] = param_2[2];\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0044d4d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d4d0(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t **ppuVar4;\n    int32_t iVar5;\n    uint uStack28;\n    \n    iVar5 = 0;\n    if (0 < *(param_1 + 8)) {\n        do {\n            piVar2 = fcn.0044d159();\n            if ((*piVar2 == 0) || (iVar3 = fcn.0044d159(),  *(iVar3 + 4) == 0)) {\n                uStack28 = 0x4a3540;\n                fcn.004515ca(&stack0xffffffe4, 0x49617c);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uStack28 = 0x44d4ff;\n            iVar3 = fcn.0044d159();\n            ppuVar4 = fcn.0044d159();\n            iVar5 = iVar5 + 1;\n            **ppuVar4 = **(iVar3 + 4) != 0;\n        } while (iVar5 < *(param_1 + 8));\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "0044d527": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d527(code **param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const__.0;\n    if (param_1[1] != NULL) {\n        iVar1 = 0;\n        if (0 < param_1[2]) {\n            do {\n                fcn.0044d1cb();\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < param_1[2]);\n        }\n        fcn.00403ac8(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "0044d6b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0044d6b3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint16_t *puVar4;\n    uint32_t *puVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    int64_t iVar9;\n    code *pcVar10;\n    code *pcVar11;\n    int16_t iVar12;\n    uint uVar13;\n    int32_t iVar14;\n    uint32_t *puVar15;\n    int32_t iVar16;\n    int32_t *extraout_ECX;\n    uint32_t **ppuVar17;\n    int32_t unaff_EBP;\n    ulong *puVar18;\n    char *pcVar19;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_4h;\n    uint uVar20;\n    \n    uVar20 = 0x7c;\n    fcn.00451106(0x7c);\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    if (*extraout_ECX != 0) {\n        *(unaff_EBP + -0x54) = 0;\n        *(unaff_EBP + -0x50) = 0;\n        *(unaff_EBP + -0x4c) = 0;\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -4) = 0;\n        fcn.00451550(unaff_EBP + -0x54, 0, 0x10);\n        if (*(unaff_EBP + 0x18) != 0) {\n            uVar13 = (**0x48145c)(*(unaff_EBP + 0x18));\n            *(unaff_EBP + -0x4c) = uVar13;\n        }\n        *(unaff_EBP + -0x20) = 0xfffffffd;\n        if ((*(unaff_EBP + 0xc) & 0xc) != 0) {\n            *(unaff_EBP + -0x48) = 1;\n            *(unaff_EBP + -0x50) = unaff_EBP + -0x20;\n        }\n        *(unaff_EBP + -0x68) = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const__.0;\n        *(unaff_EBP + -100) = 0;\n        *(unaff_EBP + -0x58) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x60) = 0;\n        *(unaff_EBP + -4) = 1;\n        if (*(unaff_EBP + -0x4c) != 0) {\n            iVar9 = *(unaff_EBP + -0x4c) * 0x10;\n            iVar14 = fcn.00403a9d(-(iVar9 >> 0x20 != 0) | iVar9);\n            *(unaff_EBP + -0x54) = iVar14;\n            fcn.00451550(iVar14, 0, *(unaff_EBP + -0x4c) << 4);\n            cVar1 = **(unaff_EBP + 0x18);\n            iVar14 = iVar14 + -0x10 + *(unaff_EBP + -0x4c) * 0x10;\n            *(unaff_EBP + -0x14) = *(unaff_EBP + 0x18);\n            *(unaff_EBP + -0x10) = iVar14;\n            if (cVar1 != '\\0') {\n                puVar18 = iVar14 + 8;\n                ppuVar17 = *(unaff_EBP + 0x1c) + -4;\n                *(unaff_EBP + -0x1c) = puVar18;\n                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + -8;\n                do {\n                    uVar2 = **(unaff_EBP + -0x14);\n                    puVar4 = *(unaff_EBP + -0x10);\n                    *puVar4 = uVar2;\n                    if ((uVar2 & 0x40) != 0) {\n                        *puVar4 = uVar2 & 0xffbf | 0x4000;\n                    }\n                    uVar3 = *puVar4;\n                    if (0x4002 < uVar3) {\n    // switch table (19 cases) at 0x44dbf7\n                        switch(uVar3) {\n                        case 0x4003:\n                        case 0x4004:\n                        case 0x4005:\n                        case 0x4006:\n                        case 0x4007:\n                        case 0x4008:\n                        case 0x4009:\n                        case 0x400a:\n                        case 0x400c:\n                        case 0x400d:\n                        case 0x4010:\n                        case 0x4011:\n                        case 0x4012:\n                        case 0x4013:\n                        case 0x4014:\n                        case 0x4015:\n                            goto code_r0x0044d930;\n                        case 0x400b:\n                            *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                            ppuVar17 = ppuVar17 + 1;\n                            puVar15 = *ppuVar17;\n                            *puVar15 = -(*puVar15 != 0) & 0xffff;\n                            *puVar18 = puVar15;\n                            fcn.0044d17f(puVar15, puVar15, 0);\n                            uVar20 = *(unaff_EBP + -0x60);\n                            *(unaff_EBP + -4) = 3;\n                            fcn.0044d5cd();\n                            *(unaff_EBP + -4) = 1;\n                            if (*(unaff_EBP + -0x2c) != 0) {\n                                fcn.00403ac8(*(unaff_EBP + -0x34));\n                            }\n                        }\n                        goto code_r0x0044d939;\n                    }\n                    if (uVar3 == 0x4002) {\ncode_r0x0044d930:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        *puVar18 = *ppuVar17;\n                        goto code_r0x0044d939;\n                    }\n    // switch table (20 cases) at 0x44dba7\n                    switch(uVar3) {\n                    case 2:\n                    case 0x12:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar12 = *(ppuVar17 + 1);\n                        goto code_r0x0044d8ba;\n                    case 3:\n                    case 9:\n                    case 10:\n                    case 0xd:\n                    case 0x13:\n                        goto code_r0x0044d930;\n                    case 4:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        ppuVar17 = ppuVar17 + 2;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 5:\n                    case 7:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        ppuVar17 = ppuVar17 + 2;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 6:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        puVar15 = *ppuVar17;\n                        goto code_r0x0044d7ff;\n                    case 8:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        puVar15 = *ppuVar17;\n                        *(unaff_EBP + -0x1c) = puVar15;\n                        iVar16 = (**0x4814a8)(puVar15, uVar20);\n                        iVar14 = *(unaff_EBP + -0x1c);\n                        *puVar18 = iVar16;\n                        if ((iVar14 != 0) && (iVar16 == 0)) {\n                            do {\n                                fcn.00403bbe();\ncode_r0x0044d867:\n                                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                                ppuVar17 = ppuVar17 + 1;\n                                puVar15 = *ppuVar17;\n                                *(unaff_EBP + -0x1c) = puVar15;\n                                fcn.0040555a(puVar15);\n                                *(unaff_EBP + -4) = 2;\n                                iVar16 = (**0x4814a8)(*(unaff_EBP + -0x18));\n                                iVar14 = *(unaff_EBP + -0x1c);\n                                *puVar18 = iVar16;\n                            } while ((iVar14 != 0) && (iVar16 == 0));\n                            **(unaff_EBP + -0x10) = 8;\n                            *(unaff_EBP + -4) = 1;\n                            fcn.00401fb6();\n                        }\n                        break;\n                    case 0xb:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar12 = -(ppuVar17[1] != NULL);\ncode_r0x0044d8ba:\n                        ppuVar17 = ppuVar17 + 1;\n                        *puVar18 = iVar12;\n                        break;\n                    case 0xc:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar15 = *(unaff_EBP + -0x10);\n                        ppuVar17 = ppuVar17 + 1;\n                        puVar5 = *ppuVar17;\n                        *puVar15 = *puVar5;\n                        puVar15[1] = puVar5[1];\n                        puVar15[2] = puVar5[2];\n                        puVar15[3] = puVar5[3];\n                        puVar18 = *(unaff_EBP + -0x1c);\n                        break;\n                    case 0xe:\n                        goto code_r0x0044d867;\n                    case 0x10:\n                    case 0x11:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        *puVar18 = *ppuVar17;\n                        break;\n                    case 0x14:\n                    case 0x15:\n                        puVar15 = *(unaff_EBP + 0x1c) + 8;\n                        *(unaff_EBP + 0x1c) = puVar15;\n                        ppuVar17 = ppuVar17 + 2;\ncode_r0x0044d7ff:\n                        *puVar18 = *puVar15;\n                        *(puVar18 + 4) = puVar15[1];\n                    }\ncode_r0x0044d939:\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + -0x10;\n                    puVar18 = puVar18 + -2;\n                    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                    cVar1 = **(unaff_EBP + -0x14);\n                    *(unaff_EBP + -0x1c) = puVar18;\n                } while (cVar1 != '\\0');\n            }\n        }\n        iVar16 = 0;\n        iVar14 = 0;\n        fcn.00426ca6(unaff_EBP + -0x44);\n        if (*(unaff_EBP + 0x10) != 0) {\n            iVar14 = unaff_EBP + -0x44;\n        }\n        fcn.00451550(unaff_EBP + -0x88, 0, 0x20);\n        piVar6 = **(unaff_EBP + -0x24);\n        *(unaff_EBP + -0x28) = 0xffffffff;\n        uVar20 = (**(*piVar6 + 0x18))\n                           (piVar6, *(unaff_EBP + 8), 0x48f160, 0, *(unaff_EBP + 0xc), unaff_EBP + -0x54, iVar14, \n                            unaff_EBP + -0x88, unaff_EBP + -0x28);\n        *(unaff_EBP + 0xc) = uVar20;\n        fcn.0044d4d0();\n        if (*(unaff_EBP + -0x4c) != 0) {\n            iVar14 = *(unaff_EBP + -0x4c) * 0x10 + -0x10 + *(unaff_EBP + -0x54);\n            for (pcVar19 = *(unaff_EBP + 0x18); *pcVar19 != '\\0'; pcVar19 = pcVar19 + 1) {\n                if ((*pcVar19 == '\\b') || (*pcVar19 == '\\x0e')) {\n                    (**0x48152c)(iVar14);\n                }\n                iVar14 = iVar14 + -0x10;\n            }\n        }\n        fcn.00403ac8(*(unaff_EBP + -0x54));\n        *(unaff_EBP + -0x54) = 0;\n        if (-1 < *(unaff_EBP + 0xc)) goto code_r0x0044dac4;\n        var_4h = unaff_EBP + -0x44;\n        (**0x48152c)();\n        if (*(unaff_EBP + 0xc) == -0x7ffdfff7) goto code_r0x0044da10;\n        while( true ) {\n            fcn.00404470(var_4h);\ncode_r0x0044da10:\n            if (*(unaff_EBP + -0x70) != iVar16) {\n                (**(unaff_EBP + -0x70))(unaff_EBP + -0x88);\n            }\n            iVar14 = fcn.00403a9d(0x20);\n            *(unaff_EBP + 0x14) = iVar14;\n            *(unaff_EBP + -4) = 4;\n            if (iVar14 != iVar16) {\n                iVar16 = fcn.0044f399(iVar16, iVar16, *(unaff_EBP + -0x88));\n            }\n            pcVar10 = *0x4814a0;\n            *(unaff_EBP + -4) = 1;\n            iVar14 = (*pcVar10)(*(unaff_EBP + -0x84));\n            if (iVar14 != 0) {\n                fcn.00404ae6(*(unaff_EBP + -0x84));\n            }\n            pcVar11 = *0x481534;\n            (**0x481534)(*(unaff_EBP + -0x84));\n            iVar14 = (*pcVar10)(*(unaff_EBP + -0x80));\n            if (iVar14 != 0) {\n                fcn.00404ae6(*(unaff_EBP + -0x80));\n            }\n            (*pcVar11)(*(unaff_EBP + -0x80));\n            iVar14 = (*pcVar10)(*(unaff_EBP + -0x7c));\n            if (iVar14 != 0) {\n                fcn.00404ae6(*(unaff_EBP + -0x7c));\n            }\n            (*pcVar11)(*(unaff_EBP + -0x7c));\n            *(iVar16 + 0x10) = *(unaff_EBP + -0x78);\n            *(iVar16 + 0x1c) = *(unaff_EBP + -0x6c);\n            *(unaff_EBP + 0x14) = iVar16;\n            fcn.004515ca(unaff_EBP + 0x14, 0x49ea40);\ncode_r0x0044dac4:\n            uVar7 = *(unaff_EBP + 0x10);\n            if (uVar7 == iVar16) goto code_r0x0044db81;\n            if ((uVar7 == 0xc) ||\n               (var_4h = (**0x481528)(unaff_EBP + -0x44, unaff_EBP + -0x44, iVar16, uVar7),  iVar16 <= var_4h)) break;\n            (**0x48152c)(unaff_EBP + -0x44);\n        }\n    // switch table (20 cases) at 0x44dc43\n        switch(uVar7 & 0xffff) {\n        case 2:\n        case 0x12:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 3:\n        case 9:\n        case 10:\n        case 0xd:\n        case 0x13:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 4:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 5:\n        case 7:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 6:\n        case 0x14:\n        case 0x15:\n            puVar8 = *(unaff_EBP + 0x14);\n            *puVar8 = *(unaff_EBP + -0x3c);\n            puVar8[1] = *(unaff_EBP + -0x38);\n            break;\n        case 8:\n            fcn.00423445(*(unaff_EBP + 0x14), *(unaff_EBP + -0x3c));\n            (**0x481534)(*(unaff_EBP + -0x3c));\n            break;\n        case 0xb:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c) != iVar16;\n            break;\n        case 0xc:\n            puVar8 = *(unaff_EBP + 0x14);\n            *puVar8 = *(unaff_EBP + -0x44);\n            puVar8[1] = *(unaff_EBP + -0x40);\n            puVar8[2] = *(unaff_EBP + -0x3c);\n            puVar8[3] = *(unaff_EBP + -0x38);\n            iVar16 = 0;\n            break;\n        case 0x10:\n        case 0x11:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n        }\ncode_r0x0044db81:\n        *(unaff_EBP + -4) = 0;\n        fcn.0044d527();\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x54) != iVar16) {\n            fcn.00403ac8(*(unaff_EBP + -0x54));\n        }\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 4860
    },
    "0044df8d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044df8d(char **param_1, uint param_2, uint param_3, int32_t param_4, char *param_5)\n\n{\n    char *arg_ch;\n    code *pcVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY300;\n    int32_t iStackY296;\n    char **ppcStackY292;\n    char *pcStackY288;\n    int32_t iStackY284;\n    code *pcStackY280;\n    char *pcStackY276;\n    uchar *in_stack_ffffff00;\n    \n    fcn.00451106();\n    ppcStackY292 = param_1;\n    pcStackY288 = param_5;\n    fcn.00409b56();\n    fcn.0040231f();\n    fcn.00409b56();\n    pcStackY276 = 0x44dfec;\n    fcn.0040231f();\n    uStackY300 = 0;\n    if (param_5 == 0x80000000) {\n        pcStackY276 = &stack0xfffffed4;\n        pcStackY280 = 0x20019;\n        iStackY284 = 0;\n        pcStackY288 = \"CLSID\";\n        ppcStackY292 = 0x80000000;\n        iStackY296 = 0x44e010;\n        (**0x481018)();\n    }\n    pcVar1 = *0x48145c;\n    arg_ch = *param_1;\n    while (arg_ch != NULL) {\n        ppcStackY292 = ppcStackY292 + 1;\n        if ((pcStackY288 != 0x80000000) || (*arg_ch != '\\0')) {\n            pcStackY280 = 0x44e046;\n            pcStackY276 = arg_ch;\n            iVar2 = (*pcVar1)();\n            pcStackY280 = arg_ch + iVar2 + 1;\n            in_stack_ffffff00 = &stack0xfffffee4;\n            fcn.00425633(in_stack_ffffff00, arg_ch, param_2, param_3);\n            pcStackY276 = 0x44e075;\n            fcn.00425633(&stack0xfffffed8, pcStackY280, param_2, param_3);\n            if ((pcStackY288 != 0x80000000) || (*(iStackY284 + -0xc) != 0)) {\n                if (param_4 == 0) {\n                    pcStackY276 = &stack0xfffffee8;\n                    pcStackY280 = pe_nt_image_headers32;\n                    ppcStackY292 = 0x44e0a5;\n                    iVar2 = (**0x48100c)();\n                    if (iVar2 == 0) goto code_r0x0044e0c9;\n                }\n                iVar2 = iStackY296;\n                pcStackY276 = iStackY296;\n                pcStackY280 = 0x44e0b5;\n                ppcStackY292 = (*pcVar1)();\n                iStackY284 = iVar2;\n                pcStackY288 = 0x1;\n                iStackY296 = 1;\n                uStackY300 = 0x44e0c5;\n                pcStackY280 = ppcStackY292;\n                iVar2 = (**0x48102c)();\n                if (iVar2 != 0) break;\n            }\n        }\ncode_r0x0044e0c9:\n        arg_ch = *ppcStackY292;\n    }\n    pcStackY276 = 0x44e0e9;\n    fcn.0042992b();\n    pcStackY276 = 0x44e0f4;\n    fcn.00401fb6();\n    pcStackY276 = 0x44e0ff;\n    fcn.00401fb6();\n    *in_FS_OFFSET = pcStackY276;\n    fcn.004510f7(in_stack_ffffff00);\n    return;\n}\n",
        "token_count": 881
    },
    "0044e352": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.0044e352(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00451106(8);\n    iVar3 = *(unaff_EBP + 0x1c);\n    iVar2 = *(unaff_EBP + 0x18);\n    if (iVar3 == 0) {\n        iVar3 = *(iVar2 * 8 + 0x48bbc4);\n    }\n    iVar1 = *(unaff_EBP + 0x20);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00419c68();\n        if (*(iVar1 + 0x14) == '\\0') {\n            iVar1 = *(iVar2 * 8 + 0x48bbc8);\n        }\n        else {\n            iVar1 = *(iVar2 * 8 + 0x48bbf0);\n        }\n    }\n    fcn.0044dd2b(10);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.0044e127(unaff_EBP + -0x14, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                         *(unaff_EBP + 0x14), *(unaff_EBP + 0x24), *(unaff_EBP + 0x28), *(unaff_EBP + 0x2c));\n    if (((iVar2 != 0) && (iVar3 = fcn.0044df8d(iVar3, *(unaff_EBP + -0x14), 10, 0, 0x80000000),  iVar3 != 0)) &&\n       (iVar1 != 0)) {\n        fcn.0044df8d(iVar1, *(unaff_EBP + -0x14), 10, 1, 0x80000000);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0044dd66();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 585
    },
    "0044e522": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0044e522(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x74) = param_2;\n    if (param_2 != 1) {\n        param_2 = ((param_2 != 2) - 1 & 3) - 1;\n    }\n    return param_2;\n}\n",
        "token_count": 89
    },
    "0044e5cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044e5cc(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    iVar2 = *(param_1 + 0x68);\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + 0x20);\n    }\n    var_4h = param_1;\n    uVar1 = fcn.0040dc11(iVar2, &var_4h);\n    *(param_1 + 0x80) = uVar1;\n    fcn.00416004(param_1);\n    iVar2 = fcn.0047a118(param_1 + 0x78);\n    fcn.00413e3c();\n    fcn.00413e0e();\n    if (var_4h != 0) {\n        (**0x481858)(var_4h, 1);\n    }\n    uVar1 = 2;\n    if (iVar2 != 2) {\n        if (iVar2 == 0x75) {\n            *(param_1 + 0xa4) = 1;\n        }\n        else {\n            if (iVar2 != 0x76) {\n                if (iVar2 == 0x77) {\n                    *(param_1 + 0xa4) = 3;\n                    return 1;\n                }\n                uVar1 = fcn.0044e522(iVar2);\n            }\n            *(param_1 + 0xa4) = uVar1;\n        }\n        return 1;\n    }\n    return 2;\n}\n",
        "token_count": 355
    },
    "0044f399": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044f399(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00403c75();\n    *extraout_ECX = vtable.COleDispatchException.0;\n    fcn.00402395();\n    *(unaff_EBP + -4) = 0;\n    fcn.00402395();\n    fcn.00402395();\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 2;\n    extraout_ECX[4] = -(*(unaff_EBP + 0xc) != 0) & *(unaff_EBP + 0xc) + 0x60000U;\n    *(extraout_ECX + 2) = iVar1;\n    if (iVar2 != 0) {\n        fcn.004024ff(*(unaff_EBP + 8));\n    }\n    extraout_ECX[7] = (-(iVar1 != 0) & 0x7fff0001) + 0x8000ffff;\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 354
    },
    "0044fb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044fb60(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *unaff_retaddr;\n    \n    if (param_3 != 0) {\n        *(param_1 + 4) = param_2;\n        *(param_1 + 0xc) = *0x48f160;\n        *(param_1 + 0x10) = *0x48f164;\n        *(param_1 + 0x14) = *0x48f168;\n        *(param_1 + 0x18) = *0x48f16c;\n        fcn.004234be(param_1 + 0x1c);\n        fcn.004234be(param_1 + 8);\n        *(param_1 + 8) = unaff_retaddr;\n        (**(*unaff_retaddr + 4))(unaff_retaddr);\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00450e1f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00450e1f(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x450ec8;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00450ef4;\n        uStack36 = *0x4a5230 ^ &fcn.00450e1f::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00450e1f::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0045a3f3();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00450e1f::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 730
    },
    "004510f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004510f7(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x4a5230) {\n        return;\n    }\n    *0x4a8c40 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x4a8c44 = &arg_8h;\n    *0x4a8b80 = 0x10001;\n    *0x4a8b28 = 0xc0000409;\n    *0x4a8b2c = 1;\n    var_328h = *0x4a5230;\n    var_324h = *0x4a5234;\n    *0x4a8b34 = unaff_retaddr;\n    *0x4a8c0c = in_GS;\n    *0x4a8c10 = in_FS;\n    *0x4a8c14 = in_ES;\n    *0x4a8c18 = in_DS;\n    *0x4a8c1c = unaff_EDI;\n    *0x4a8c20 = unaff_ESI;\n    *0x4a8c24 = unaff_EBX;\n    *0x4a8c28 = in_EDX;\n    *0x4a8c2c = in_ECX;\n    *0x4a8c30 = in_EAX;\n    *0x4a8c34 = unaff_EBP;\n    *0x4a8c38 = unaff_retaddr;\n    *0x4a8c3c = in_CS;\n    *0x4a8c48 = in_SS;\n    *0x4a8b78 = (**0x481218)();\n    fcn.0046a563(1);\n    (**0x481214)(0);\n    (**0x481210)(0x48c648);\n    if (*0x4a8b78 == 0) {\n        fcn.0046a563(1);\n    }\n    uVar1 = (**0x4813cc)(0xc0000409);\n    (**0x48120c)(uVar1);\n    return;\n}\n",
        "token_count": 847
    },
    "00455639": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004556ce: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004556d3)\n// WARNING: Removing unreachable block (ram,0x00455701)\n// WARNING: Removing unreachable block (ram,0x004556d9)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00455639(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045517c(0x49eed8, 0xc);\n    fcn.00457686(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x4a8688 != 1) {\n        *0x4a8684 = 1;\n        *0x4a8680 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            uVar1 = fcn.0045a1b5(*0x4aa310);\n            uVar2 = fcn.0045a1b5(*0x4aa30c);\n            *(unaff_EBP + -0x1c) = uVar2;\n            if (uVar1 != 0) {\n                while (*(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -4,  uVar1 <= *(unaff_EBP + -0x1c)) {\n                    if (**(unaff_EBP + -0x1c) != NULL) {\n                        (***(unaff_EBP + -0x1c))();\n                    }\n                }\n            }\n            fcn.004553da(0x481a60);\n        }\n        fcn.004553da(0x481a6c);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00457596(8);\n    }\n    return;\n}\n",
        "token_count": 497
    },
    "00455dda": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455dda(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        fcn.00455d31(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00456908": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456908(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) == 0) {\n        fcn.00455d31(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + 0x18));\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0045913a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0045913a(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0045a3f3();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0045a3f3();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "004597d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004597d0(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0045104d(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0045a3f3();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0045a3f3();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0045102c(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0045919a(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "00461bb6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00461bb6(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00457596(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0046a884": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046a884(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.004500d5(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "004798af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004798af(void)\n\n{\n    code *pcVar1;\n    uint arg_8h;\n    uint var_98h;\n    uint32_t var_94h;\n    int32_t var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    var_98h = 0x94;\n    (**0x48136c)(&var_98h);\n    if ((var_88h != 2) || (pcVar1 = 0x4798ab,  var_94h < 5)) {\n        pcVar1 = fcn.00479846;\n    }\n    arg_8h = 0x4a66d0;\n    (**0x48129c)(0x4a66d0, pcVar1);\n    (**0x4a66d0)();\n    fcn.004510f7(arg_8h);\n    return;\n}\n",
        "token_count": 215
    },
    "00479bbb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00479bbb(uint *param_1)\n\n{\n    if (*(param_1 + 1) != '\\0') {\n        (**0x481350)(*param_1);\n        *(param_1 + 1) = 0;\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00479d45": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00479d45(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint uStack156;\n    uint32_t uStack152;\n    int32_t iStack148;\n    int32_t iStack140;\n    uchar auStack124 [116];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a5230 ^ auStack124;\n    fcn.00479bd2();\n    param_1[2] = 0x400000;\n    param_1[1] = 0x400000;\n    *param_1 = 0x3c;\n    *(param_1 + 3) = 0;\n    fcn.00451550(&uStack156, 0, 0x94);\n    uStack156 = 0x94;\n    (**0x48136c)(&uStack156);\n    if (iStack140 == 2) {\n        if (uStack152 < 5) goto code_r0x00479dc1;\n    }\n    else if ((iStack140 != 1) || ((uStack152 < 5 && ((uStack152 != 4 || (iStack148 == 0)))))) goto code_r0x00479dc1;\n    *(param_1 + 3) = 1;\ncode_r0x00479dc1:\n    param_1[4] = 0x800;\n    param_1[5] = 0x490b80;\n    iVar1 = fcn.0047998f();\n    if (iVar1 < 0) {\n        *0x4a6700 = 1;\n    }\n    fcn.004510f7(unaff_ESI);\n    return;\n}\n",
        "token_count": 384
    },
    "00416059": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.00416059(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    bool bVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        iVar1 = fcn.004266ca(arg_10h, 0xffffffff);\n        if (iVar1 == 0) {\n            fcn.00403bf2();\n        }\n    }\n    var_4h = arg_8h;\n    var_8h = arg_ch;\n    var_10h = arg_14h;\n    var_14h = arg_18h;\n    var_18h = arg_1ch;\n    var_1ch = arg_20h;\n    var_20h = arg_24h;\n    var_24h = arg_28h;\n    var_ch = arg_10h;\n    var_28h = arg_2ch;\n    iVar1 = fcn.00419c68();\n    var_2ch = *(iVar1 + 8);\n    var_30h = arg_30h;\n    iVar1 = (**(*in_ECX + 100))(&var_30h);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0x114))();\n        bVar3 = false;\n    }\n    else {\n        fcn.00416004();\n        iVar1 = fcn.0040f426(var_4h, var_8h, var_ch, var_10h, var_14h, var_18h, var_1ch, var_20h, var_24h, var_28h, \n                             var_2ch, var_30h);\n        iVar2 = fcn.00413e3c();\n        if (iVar2 == 0) {\n            (**(*in_ECX + 0x114))();\n        }\n        bVar3 = iVar1 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 580
    },
    "0043b603": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b603(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar2 = fcn.0042349a(*(in_ECX + 0x24), 0x48f2b0);\n    if (piVar2 != NULL) {\n        iVar3 = (**(*piVar2 + 0x14))(piVar2, &var_4h);\n        if ((iVar3 == 0) && (var_4h != NULL)) {\n            piVar4 = fcn.0042349a(*(in_ECX + 0x24), 0x48f7b0);\n            iVar3 = (**(*var_4h + 0xc))(var_4h, 1, &var_30h, 0);\n            pcVar1 = *0x481990;\n            while (iVar3 == 0) {\n                iVar3 = (**(*piVar4 + 0xc))(piVar4, &var_30h, &var_10h);\n                if (iVar3 == 0) {\n                    if (var_8h != 0) {\n                        (**0x481968)(&var_10h);\n                        goto code_r0x0043b68b;\n                    }\n                    fcn.004452d4(0, &var_10h, &var_30h);\n                }\n                else {\ncode_r0x0043b68b:\n                    (*pcVar1)(var_2ch);\n                }\n                iVar3 = (**(*var_4h + 0xc))(var_4h, 1, &var_30h, 0);\n            }\n            (**(*var_4h + 8))(var_4h);\n            (**(*piVar4 + 8))(piVar4);\n        }\n        (**(*piVar2 + 8))(piVar2);\n    }\n    return;\n}\n",
        "token_count": 484
    },
    "00442574": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442574(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_30h;\n    \n    fcn.004423e5(&var_30h, arg_8h, arg_ch);\n    (**0x48183c)(*(in_ECX + 0x20), 0x405, 0, &var_30h);\n    return;\n}\n",
        "token_count": 95
    },
    "004425d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004425d7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    \n    fcn.004423e5(&var_30h, arg_8h, arg_ch);\n    uVar1 = fcn.00451210(&var_20h, 0x10, arg_10h, 0x10);\n    fcn.00401000(uVar1);\n    (**0x48183c)(*(in_ECX + 0x20), 0x406, 0, &var_30h);\n    return;\n}\n",
        "token_count": 158
    },
    "00423ff0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00423ff0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = (**0x481320)(param_1);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (**0x481484)(param_1);\n        }\n        (**0x481474)(param_1);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00404718": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404718(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint arg_14h;\n    int32_t iVar1;\n    uint var_4h;\n    \n    arg_14h = (**0x4a66d0)();\n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        fcn.00401094(arg_8h, arg_ch, 0x20, arg_14h);\n        iVar1 = fcn.00451210(arg_8h + 0x40, 0x26, arg_ch + 0x20, 0x26);\n        if (iVar1 == 0) {\n            fcn.00401094(arg_8h + 0x66, arg_ch + 0x46, 0x20, arg_14h);\n            iVar1 = fcn.00451210(arg_8h + 0xa6, 0x36, arg_ch + 0x66, 0x36);\n            if ((iVar1 == 0) &&\n               ((*(arg_ch + 0x26) == 0 ||\n                (iVar1 = fcn.00451210(arg_8h + 0xdc, *(arg_ch + 0x26), arg_ch + 0x9c, *(arg_ch + 0x26)),  iVar1 == 0))))\n            {\n                *(arg_8h + 0x44) = 0xdc;\n                fcn.0040127a();\n                return arg_8h;\n            }\n        }\n    }\n    fcn.0040127a();\n    return 0;\n}\n",
        "token_count": 365
    },
    "004047d5": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004047d5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint arg_14h;\n    int32_t iVar1;\n    uint var_4h;\n    \n    arg_14h = (**0x4a66d0)();\n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        fcn.004010cb(arg_8h, arg_ch, 0x20, arg_14h);\n        iVar1 = fcn.00451210(arg_8h + 0x20, 0x26, arg_ch + 0x40, 0x26);\n        if (iVar1 == 0) {\n            fcn.004010cb(arg_8h + 0x46, arg_ch + 0x66, 0x20, arg_14h);\n            iVar1 = fcn.00451210(arg_8h + 0x66, 0x36, arg_ch + 0xa6, 0x36);\n            if ((iVar1 == 0) &&\n               ((*(arg_ch + 0x46) == 0 ||\n                (iVar1 = fcn.00451210(arg_8h + 0x9c, *(arg_ch + 0x46), arg_ch + 0xdc, *(arg_ch + 0x46)),  iVar1 == 0))))\n            {\n                *(arg_8h + 0x24) = 0x9c;\n                fcn.0040127a();\n                return arg_8h;\n            }\n        }\n    }\n    fcn.0040127a();\n    return 0;\n}\n",
        "token_count": 368
    },
    "0040eaf5": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0040eaf5(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x4c);\n    if (iVar3 != 0) {\n        puVar1 = iVar3 + 0x40;\n        var_4h = *(iVar3 + 0x44);\n        while (var_4h != 0) {\n            if (var_4h == 0) {\n                fcn.00403bf2(puVar1);\n                pcVar2 = swi(3);\n                iVar3 = (*pcVar2)();\n                return iVar3;\n            }\n            if (*(var_4h + 8) == arg_8h) {\n                return var_4h;\n            }\n            puVar1 = &var_4h;\n            fcn.00407ed0();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "0042d123": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0042d123(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = param_3 + 0x40;\n    param_1[1] = param_3;\n    if (param_3 <= uVar3) {\n        iVar1 = (**0x48147c)(0x40, uVar3);\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            uVar2 = (**0x481480)(iVar1);\n            fcn.00404383(uVar2, param_1[1], uVar3, param_1[1]);\n            iVar1 = fcn.0042ce2a(uVar2);\n            param_1[2] = iVar1 == 0;\n            (**0x481484)(*param_1);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 228
    },
    "00441439": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00441439(void)\n\n{\n    int32_t *piVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 2;\n    *(extraout_ECX + 0x30) = 0;\n    fcn.004234be(extraout_ECX + 0x38);\n    fcn.004234be(extraout_ECX + 0x3c);\n    fcn.004235e8();\n    piVar1 = *(extraout_ECX + 0x20);\n    if (piVar1 != NULL) {\n        if (*(extraout_ECX + 0x2c) != 0) {\n            fcn.0043db6a(0, 1);\n            *(extraout_ECX + 0x2c) = 0;\n        }\n        if (piVar1[0x30] == extraout_ECX) {\n            piVar1[0x30] = 0;\n        }\n        (**(*piVar1 + 0xc0))(extraout_ECX);\n    }\n    fcn.0042a59f();\n    *(unaff_EBP + -4) = 1;\n    fcn.004457d0();\n    fcn.00401fb6();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043f9ea();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 397
    },
    "00446eb9": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00446eb9(code **param_1, code *param_2, code *param_3)\n\n{\n    fcn.00409638();\n    *param_1 = vtable.COleFrameHook.0;\n    fcn.00402395();\n    param_1[0x11] = vtable.COleFrameHook::XOleInPlaceFrame.0;\n    param_1[0x12] = vtable.COleFrameHook::XOleCommandTarget.0;\n    param_1[10] = param_3;\n    param_1[8] = param_2;\n    param_1[9] = NULL;\n    param_1[0xb] = *(param_2 + 0x20);\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xc] = NULL;\n    param_1[0xf] = NULL;\n    *(param_2 + 0x80) = param_1;\n    return param_1;\n}\n",
        "token_count": 234
    },
    "0044bc7c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044bc7c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00451139(0xc);\n    *(unaff_EBP + -4) = 0;\n    iVar1 = fcn.00403a9d(0x1c);\n    *(unaff_EBP + -0x14) = iVar1;\n    *(unaff_EBP + -4) = 1;\n    if (iVar1 == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar2 = fcn.0044bbc0(*(unaff_EBP + 8));\n    }\n    iVar1 = puVar2[5];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + 8) = puVar2;\n    if (iVar1 == 0) {\n        (***puVar2)(1);\n        *(unaff_EBP + 8) = 0;\n    }\n    else {\n        fcn.00419c68();\n        fcn.0042657b(0xb);\n        fcn.00422b14(puVar2);\n        fcn.004265e8(0xb);\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 328
    },
    "0044bd43": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint fcn.0044bd43(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_retaddr;\n    \n    iVar3 = fcn.00419c68();\n    fcn.0042657b(0xb);\n    uVar4 = 0;\n    puVar1 = *(iVar3 + 0x40);\n    while (puVar2 = puVar1,  puVar2 != NULL) {\n        puVar1 = puVar2[6];\n        iVar3 = fcn.00409248(unaff_retaddr, puVar2 + 1);\n        if (iVar3 != 0) {\n            fcn.00422b2d(puVar2);\n            uVar4 = 1;\n            (***puVar2)(1);\n        }\n    }\n    fcn.004265e8(0xb);\n    return uVar4;\n}\n",
        "token_count": 209
    },
    "0044bd9e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044bd9e(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    iVar2 = fcn.00419c68();\n    puVar3 = 0xb;\n    fcn.0042657b(0xb);\n    while (puVar1 = *(iVar2 + 0x40),  puVar1 != NULL) {\n        puVar3 = puVar1;\n        fcn.00422b2d();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    fcn.004265e8(0xb, puVar3);\n    return;\n}\n",
        "token_count": 154
    },
    "0044c757": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044c757(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**0x481908)(param_1 + 0x40, 0);\n    if (iVar1 == 0) {\n        *(param_1 + 0x20) = 1;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 87
    },
    "00409823": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00409823(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iStack148;\n    int32_t iStack140;\n    uchar auStack136 [12];\n    uchar auStack124 [116];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a5230 ^ auStack124;\n    uVar3 = (**0x481794)();\n    iVar6 = uVar3;\n    iStack148 = uVar3 >> 0x10;\n    if ((4 < iVar6) && (5 < iStack148)) {\n        if (0x20 < iVar6) {\n            iVar6 = 0x20;\n        }\n        iVar8 = iVar6 + 0xf >> 4;\n        iVar9 = ((iVar6 + -4) / 2 + iVar8 * 0x10) - iVar6;\n        if (0xc < iVar9) {\n            iVar9 = 0xc;\n        }\n        if (0x20 < iStack148) {\n            iStack148 = 0x20;\n        }\n        fcn.00451550(auStack136);\n        puVar4 = auStack136 + (iStack148 + -6 >> 1) * iVar8 * 2;\n        puVar5 = 0x482d1c;\n        iStack140 = 5;\n        do {\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n            uVar7 = ~(uVar1 << (iVar9 & 0x1f));\n            *puVar4 = uVar7 >> 8;\n            puVar4[1] = uVar7;\n            puVar4 = puVar4 + iVar8 * 2;\n            iStack140 = iStack140 + -1;\n        } while (iStack140 != 0);\n        uVar3 = 1;\n        *0x4a83a8 = (**0x48106c)(iVar6, iStack148, 1);\n        if (*0x4a83a8 == 0) {\n            *0x4a83a8 = (**0x481798)(0, 0x7fe3);\n        }\n        fcn.004510f7(uVar3);\n        return;\n    }\n    fcn.004515ca(&stack0xffffff54, 0x49617c);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 594
    },
    "00413cb2": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.00413cb2(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uStack16;\n    \n    iVar2 = fcn.00422fa4(0x403c0c);\n    if (iVar2 == 0) {\n        uStack16 = 0x4a3540;\n        fcn.004515ca(&uStack16, 0x49617c);\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    uVar3 = (**0x481628)();\n    *(iVar2 + 0x68) = uVar3;\n    uVar3 = (**0x48162c)();\n    *(iVar2 + 0x70) = uVar3 >> 0x10;\n    *(iVar2 + 0x6c) = uVar3;\n    return iVar2 + 0x58;\n}\n",
        "token_count": 213
    },
    "00415529": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415529(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_4h;\n    \n    uVar3 = arg_8h & 0xffff;\n    arg_8h = arg_8h >> 0x10;\n    if (arg_ch == 0) {\n        if (uVar3 == 0) {\n            return 0;\n        }\n        fcn.00411cf0();\n        var_28h = uVar3;\n        (**(*in_ECX + 0xc))(uVar3, 0xffffffff, &var_2ch, 0);\n        if (var_4h != 0) {\n            arg_8h = 0;\ncode_r0x004155ac:\n            uVar2 = (**(*in_ECX + 0xc))(uVar3, arg_8h, 0, 0);\n            return uVar2;\n        }\n    }\n    else {\n        iVar1 = fcn.00422fa4(0x403c0c);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00403bf2();\n        }\n        if ((*(iVar1 + 0xdc) != in_ECX[8]) && (iVar1 = fcn.004149f7(arg_ch, 0),  iVar1 == 0)) {\n            if (uVar3 == 0) {\n                return 0;\n            }\n            goto code_r0x004155ac;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 383
    },
    "0041d370": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d370(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    iVar2 = (**0x481710)(*(in_ECX + 0x20));\n    pcVar1 = *0x48183c;\n    if (iVar2 == 0) {\n        *(in_ECX + 0xac) = arg_8h;\n        *(in_ECX + 0xb0) = arg_ch;\n        *(in_ECX + 0xa4) = arg_10h;\n        *(in_ECX + 0xa8) = arg_14h;\n    }\n    else {\n        (**0x48183c)(*(in_ECX + 0x20), 0x420, 0, arg_10h & 0xffff | arg_14h << 0x10);\n        (*pcVar1)(*(in_ECX + 0x20), 0x41f, 0, arg_8h & 0xffff | arg_ch << 0x10);\n        if (0x5ffff < *0x4a3d3c) {\n            uVar3 = (*pcVar1)(*(in_ECX + 0x20), 0x43a, 0, 0);\n            *(in_ECX + 0xac) = uVar3 & 0xffff;\n            *(in_ECX + 0xb0) = uVar3 >> 0x10;\n        }\n        (**0x4815d8)(*(in_ECX + 0x20), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "0041d68a": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041d68a(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *arg_ch_00;\n    uint var_18h;\n    char var_10h;\n    uint var_fh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    arg_ch_00 = 0x41d6a9;\n    fcn.0041cce9(arg_8h, &fcn.0041d68a::var_18h);\n    cVar1 = arg_ch >> 0x10;\n    if ((var_fh != arg_ch) || (var_10h != cVar1)) {\n        arg_ch_00 = &fcn.0041d68a::var_18h;\n        var_10h = cVar1;\n        var_fh._0_1_ = arg_ch;\n        fcn.0041d4ed(arg_8h, arg_ch_00);\n        *(in_ECX + 0xa0) = 1;\n    }\n    fcn.004510f7(arg_ch_00);\n    return;\n}\n",
        "token_count": 275
    },
    "0041d9a7": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041d9a7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint *arg_ch_00;\n    uint var_2ch;\n    uint var_18h;\n    uint var_14h;\n    uchar var_10h;\n    uint var_fh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    fcn.0041cce9(arg_8h, &var_18h);\n    arg_ch_00 = 0x14;\n    uVar1 = fcn.00451210(&var_2ch, 0x14, &var_18h, 0x14);\n    fcn.00401000(uVar1);\n    var_14h = arg_ch;\n    var_18h = arg_14h;\n    var_fh._0_1_ = arg_10h;\n    var_10h = arg_10h >> 0x10;\n    iVar2 = fcn.00453966(&var_2ch, &var_18h, 0x14);\n    if (iVar2 != 0) {\n        arg_ch_00 = &var_18h;\n        fcn.0041d4ed(arg_8h, arg_ch_00);\n        *(in_ECX + 0xa0) = 1;\n    }\n    fcn.004510f7(arg_ch_00);\n    return;\n}\n",
        "token_count": 364
    },
    "0042cfe7": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042cfe7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t var_94h;\n    int32_t var_84h;\n    int32_t var_5ch;\n    uint *var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_30h;\n    uint var_29h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    var_54h = arg_18h;\n    var_44h = (**0x4817f8)(0);\n    fcn.00451550(&var_40h, 0, 0x3c);\n    uVar4 = (**0x4811ec)(var_44h, 0x5a, 0x48);\n    pcVar2 = *0x481434;\n    var_40h = (**0x481434)(arg_ch, uVar4);\n    var_40h = -var_40h;\n    var_30h = 400;\n    var_29h._0_1_ = 1;\n    uVar4 = fcn.00451895(&var_24h, 0x20, arg_8h, 0xffffffff);\n    fcn.00401000(uVar4);\n    var_4ch = (**0x4810e0)(&var_40h);\n    pcVar3 = *0x4817d8;\n    pcVar1 = *0x48115c;\n    if (var_4ch == 0) {\n        var_48h = (**0x4817d8)();\n        var_48h = var_48h & 0xffff;\n        uVar5 = (*pcVar3)();\n        uVar5 = uVar5 >> 0x10;\n    }\n    else {\n        var_50h = (**0x48115c)(var_44h, var_4ch);\n        (**0x4810d8)(var_44h, &var_94h);\n        uVar5 = var_84h + var_94h;\n        (**0x4810dc)(var_44h, \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\", 0x34, &var_5ch);\n        var_48h = (var_5ch + 0x1a) / 0x34;\n        (*pcVar1)(var_44h, var_50h);\n        (**0x481140)(var_4ch);\n        arg_18h = var_54h;\n    }\n    (**0x4817f4)(0, var_44h);\n    uVar4 = (*pcVar2)(arg_10h, var_48h, 4);\n    *arg_18h = uVar4;\n    uVar4 = (*pcVar2)(arg_14h, uVar5, 8);\n    arg_18h[1] = uVar4;\n    fcn.004510f7(arg_10h);\n    return;\n}\n",
        "token_count": 766
    },
    "0043afde": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043afde(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    \n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar3 = fcn.00422fa4(0x403c0c);\n        if (iVar3 == 0) {\n            fcn.00403bf2();\n        }\n        if ((*(iVar3 + 0x18) != 0) && (iVar4 = fcn.00413dbb(arg_8h),  iVar4 == 0)) {\n            fcn.00414d4b(arg_8h);\n            *(iVar3 + 0x18) = 0;\n        }\n        pcVar1 = *0x4815ec;\n        if (arg_ch == 0x110) {\n            *0x4a85bc = (**0x4815ec)(\"commdlg_LBSelChangedNotify\");\n            *0x4a85c0 = (*pcVar1)(\"commdlg_ShareViolation\");\n            *0x4a85c4 = (*pcVar1)(\"commdlg_FileNameOK\");\n            *0x4a85c8 = (*pcVar1)(\"commdlg_ColorOK\");\n            *0x4a85cc = (*pcVar1)(\"commdlg_help\");\n            *0x4a85d0 = (*pcVar1)(\"commdlg_SetRGBColor\");\n            uVar2 = fcn.0041042e(arg_8h, 0x110, arg_10h, arg_14h);\n        }\n        else if ((arg_ch == *0x4a85cc) || ((arg_ch == 0x111 && (arg_10h == 0x40e)))) {\n            (**0x48183c)(arg_8h, 0x111, 0xe146, 0);\n            uVar2 = 1;\n        }\n        else {\n            if (((0xbfff < arg_ch) && (piVar5 = fcn.00413dbb(arg_8h),  piVar5 != NULL)) &&\n               ((iVar3 = fcn.004228ed(0x486af0),  iVar3 == 0 ||\n                (iVar3 = fcn.0042de45(),  (*(iVar3 + 0x34) & 0x80000) == 0)))) {\n                if (arg_ch == *0x4a85c0) {\n                    uVar2 = (**(*piVar5 + 0x15c))(arg_14h);\n                    return uVar2;\n                }\n                if (arg_ch == *0x4a85c4) {\n                    piVar5[0x71] = arg_14h;\n                    uVar2 = (**(*piVar5 + 0x160))();\n                    piVar5[0x71] = 0;\n                    return uVar2;\n                }\n                if (arg_ch == *0x4a85bc) {\n                    (**(*piVar5 + 0x164))(arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n                }\n                else if (arg_ch == *0x4a85c8) {\n                    uVar2 = (**(*piVar5 + 0x15c))();\n                    return uVar2;\n                }\n            }\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 807
    },
    "00461640": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t * fcn.00461640(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 590
    },
    "00406e09": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406e09(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(arg_10h + 4);\n    if (uVar1 < 0x20c) {\n        if (uVar1 == 0x20b) {\n            fcn.00406341(&var_10h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x1e) {\n            (**(*arg_18h + 0x1c))();\n            return 1;\n        }\n        if (uVar1 == 0x103) {\n            (**(*arg_18h + 0x34))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x127) {\n            (**(*arg_18h + 0x20))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x12d) {\n            uVar5 = *(arg_ch + *(arg_10h + 6) * 4);\n            iVar3 = (**0x48107c)(uVar5);\n            if (iVar3 == 0) {\n                var_4h = (**0x481074)(0xd);\n                pcVar2 = *0x48115c;\n                uVar4 = (**0x48115c)(arg_18h[1], var_4h);\n                var_8h = (*pcVar2)(arg_18h[1], uVar5);\n                if (var_8h == var_4h) {\n                    uVar5 = fcn.00406b5e(uVar5);\n                    iVar3 = *arg_18h;\ncode_r0x00406ed1:\n                    (**(iVar3 + 0x28))(uVar5);\n                    return 1;\n                }\n                (*pcVar2)(arg_18h[1], uVar4);\n                (*pcVar2)(arg_18h[1], var_8h);\n            }\n            else if (iVar3 == 6) {\n                uVar5 = fcn.00406b5e(uVar5);\n                iVar3 = *arg_18h;\n                goto code_r0x00406ed1;\n            }\n        }\n        else {\n            if (uVar1 == 0x201) {\n                (**(*arg_18h + 0x2c))(*(arg_10h + 6));\n                return 1;\n            }\n            if (uVar1 == 0x209) {\n                (**(*arg_18h + 0x30))(*(arg_10h + 6));\n                return 1;\n            }\n        }\n    }\n    else {\n        if (uVar1 == 0x20c) {\n            (**(*arg_18h + 0x48))(&var_40h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20d) {\n            (**(*arg_18h + 0x38))(&var_38h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20e) {\n            (**(*arg_18h + 0x40))(&var_30h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x211) {\n            (**(*arg_18h + 0x3c))(&var_28h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x410) {\n            (**(*arg_18h + 0x4c))(&var_20h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x412) {\n            (**(*arg_18h + 0x44))(&var_18h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n    }\n    (**0x481078)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return 1;\n}\n",
        "token_count": 1158
    },
    "0041df92": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041df92(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00419c68();\n    uVar1 = *(iVar2 + 0xc);\n    iVar2 = (**0x48143c)(uVar1, arg_8h, 0xf1);\n    if (((iVar2 != 0) && (iVar2 = (**0x481440)(uVar1, iVar2),  iVar2 != 0)) &&\n       (iVar3 = (**0x481444)(iVar2),  iVar3 != 0)) {\n        arg_8h_00 = fcn.00403a9d(*(iVar3 + 6) * 4);\n        iVar4 = 0;\n        if (*(iVar3 + 6) != 0) {\n            puVar5 = iVar3 + 8;\n            do {\n                *(arg_8h_00 + iVar4 * 4) = *puVar5;\n                iVar4 = iVar4 + 1;\n                puVar5 = puVar5 + 1;\n            } while (iVar4 < *(iVar3 + 6));\n        }\n        iVar4 = fcn.0041cbab(arg_8h_00, *(iVar3 + 6));\n        fcn.00403ac8(arg_8h_00);\n        if (iVar4 != 0) {\n            fcn.0041d370(*(iVar3 + 2) + 7, *(iVar3 + 4) + 7, *(iVar3 + 2), *(iVar3 + 4));\n            iVar4 = fcn.0041d48c(arg_8h);\n        }\n        (**0x481370)(iVar2);\n        return iVar4;\n    }\n    return 0;\n}\n",
        "token_count": 446
    },
    "0040c7ae": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t fcn.0040c7ae(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004196b5();\n    return iVar1 + 0x30;\n}\n",
        "token_count": 46
    },
    "00442438": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442438(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_18h;\n    uint var_10h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = *0x48183c;\n    puVar3 = arg_ch;\n    puVar4 = &var_24h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_24h = (**0x48183c)(*(arg_8h + 0x20), 0x410, 0, &var_10h);\n    var_8h = arg_ch[5];\n    var_4h = arg_ch[6];\n    if (var_20h - 0x200U < 10) {\n        (**0x481800)(var_24h, &var_8h);\n    }\n    var_18h = var_8h & 0xffff | var_4h << 0x10;\n    (*pcVar1)(*(arg_8h + 0x20), 0x407, 0, &var_24h);\n    return;\n}\n",
        "token_count": 354
    },
    "0044dccf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044dccf(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t var_4h;\n    \n    if ((arg_10h & 0x4000) != 0) {\n        arg_10h = arg_10h & 0xffffbfff | 0x40;\n    }\n    if (arg_10h == 8) {\n        arg_10h = 0xe;\n    }\n    var_4h = arg_10h & 0xff;\n    fcn.0044d6b3(arg_ch, (arg_10h == 9) * 4 + 4, 0, 0, &var_4h, &arg_14h);\n    return;\n}\n",
        "token_count": 179
    },
    "0041cd92": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cd92(uint arg_8h)\n\n{\n    uint var_18h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    fcn.0041cce9(arg_8h, &var_18h);\n    fcn.004510f7(arg_8h);\n    return;\n}\n",
        "token_count": 98
    },
    "0041ce95": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041ce95(uint arg_8h, uint *arg_ch, uint32_t *arg_10h, uint *arg_14h)\n\n{\n    uint unaff_ESI;\n    uint var_18h;\n    uint var_14h;\n    uint8_t var_10h;\n    uint var_fh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    fcn.0041cce9(arg_8h, &var_18h);\n    *arg_ch = var_14h;\n    *arg_10h = var_10h << 0x10 | var_fh;\n    *arg_14h = var_18h;\n    fcn.004510f7(unaff_ESI);\n    return;\n}\n",
        "token_count": 192
    },
    "0042042e": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042042e(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    pcVar1 = *0x481774;\n    iVar2 = (**0x481774)(0x11);\n    if (iVar2 < 0) {\n        uVar3 = 8;\n    }\n    else {\n        uVar3 = 0;\n    }\n    iVar2 = (*pcVar1)(0x10);\n    if (iVar2 < 0) {\n        uVar4 = 4;\n    }\n    else {\n        uVar4 = 0;\n    }\n    iVar5 = (**0x48179c)();\n    iVar6 = (**0x481874)();\n    if (iVar5 == 0) {\n        iVar7 = (**0x48183c)(*(in_ECX + 0x20), 0x20a, arg_8h << 0x10 | uVar3 | uVar4, arg_ch);\n    }\n    else {\n        do {\n            iVar7 = (**0x48183c)(iVar5, 0x20a, arg_8h << 0x10 | uVar3 | uVar4, arg_ch);\n            iVar5 = (**0x4817a0)(iVar5);\n            if (iVar7 != 0) {\n                return iVar7;\n            }\n            if (iVar5 == 0) {\n                return 0;\n            }\n        } while (iVar5 != iVar6);\n    }\n    return iVar7;\n}\n",
        "token_count": 392
    },
    "00441a53": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00441a53(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    while( true ) {\n        (**0x481800)(arg_8h, &arg_ch);\n        iVar1 = (**0x48183c)(arg_8h, 0x366, 0, arg_ch & 0xffff | arg_10h << 0x10);\n        (**0x4817fc)(arg_8h, &arg_ch);\n        uVar2 = (**0x481748)(arg_8h, 0xfffffff0);\n        if (((uVar2 & 0x40000000) == 0) || (arg_8h = (**0x4817a0)(arg_8h),  arg_8h == 0)) break;\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return -1;\n}\n",
        "token_count": 245
    },
    "00438dd1": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00438dd1(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    uint arg_10h;\n    uint uStack300;\n    int32_t iStack292;\n    int32_t iStack288;\n    int32_t iStack284;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [80];\n    uchar auStack188 [180];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a5230 ^ auStack188;\n    iStack276 = param_2;\n    iStack272 = param_3;\n    if (param_1 != 0) goto code_r0x00438e0e;\n    do {\n        fcn.00403bf2();\ncode_r0x00438e0e:\n    } while (param_2 == 0);\n    (**0x48169c)(*(param_2 + 0x20), &stack0xfffffec4);\n    if (*(param_2 + 0x8c) == param_1) {\n        if (iStack272 == 0) goto code_r0x0043903f;\n        iVar2 = (**0x481664)(&stack0xfffffec4, iStack272);\n        if (iVar2 != 0) goto code_r0x0043903f;\n    }\n    if ((*(param_1 + 0x94) != 0) && ((*(param_2 + 0x84) & 0x40) != 0)) {\n        *(param_1 + 0x80) = *(param_1 + 0x80) | 0x40;\n    }\n    *(param_1 + 0x80) = *(param_1 + 0x80) & 0xfffffff9;\n    uVar3 = *(param_1 + 0x80);\n    *(param_1 + 0x80) = *(param_2 + 0x80) & 6 | uVar3;\n    if ((uVar3 & 0x40) == 0) {\n        fcn.0040e934(auStack268, 0x104);\n        fcn.00423f38(*(param_1 + 0x20), auStack268);\n    }\n    uVar3 = (*(param_2 + 0x80) ^ *(param_1 + 0x80)) & 0xf000 ^ *(param_2 + 0x80);\n    if (*(param_1 + 0x94) == 0) {\n        uVar3 = uVar3 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar3 = uVar3 | 0xf01;\n    }\n    fcn.00433bfb(uVar3);\n    bVar1 = false;\n    if (*(param_2 + 0x8c) != param_1) {\n        iVar2 = (**0x4817b0)(*(param_2 + 0x20));\n        if (iVar2 != 0) {\n            fcn.0040e533(0, 0, 0, 0, 0, 0x97);\n            bVar1 = true;\n        }\n    }\n    uStack300 = 0xffffffff;\n    if (iStack272 == 0) {\n        fcn.00444ca8(*(param_1 + 0xa0), param_2);\n        fcn.00444ca8(*(param_1 + 0xa0), 0);\n        fcn.0040e533(0, -*0x4a8368, -*0x4a836c, 0, 0, 0x115);\n    }\n    else {\n        (**0x48166c)(&iStack292, iStack272);\n        fcn.004064be(&iStack292);\n        uStack300 = fcn.004382e8(iStack276, iStack292, iStack288, iStack284, iStack280, \n                                 (iStack284 - iStack292) / 2 + iStack292, (iStack280 - iStack288) / 2 + iStack288);\n        fcn.0040e533(0, iStack292, iStack288, iStack284 - iStack292, iStack280 - iStack288, 0x114);\n        param_2 = iStack276;\n    }\n    (**0x4817a0)(*(param_2 + 0x20));\n    iVar2 = fcn.00413d94();\n    if (iVar2 != param_1) {\n        fcn.0042f563(param_1);\n    }\n    iVar2 = *(param_2 + 0x8c);\n    if (iVar2 == param_1) {\n        arg_10h = 0;\ncode_r0x0043900a:\n        fcn.004386a6(param_2, uStack300, arg_10h);\n    }\n    else if (iVar2 != 0) {\n        if ((*(param_1 + 0x94) == 0) || (*(iVar2 + 0x94) != 0)) {\n            arg_10h = 0;\n        }\n        else {\n            arg_10h = 1;\n        }\n        uStack300 = 0xffffffff;\n        goto code_r0x0043900a;\n    }\n    *(param_2 + 0x8c) = param_1;\n    if (bVar1) {\n        fcn.0040e533(0, 0, 0, 0, 0, 0x57);\n    }\n    fcn.0043863f(param_2);\n    iVar2 = fcn.0041eb1f();\n    *(iVar2 + 0xd0) = *(iVar2 + 0xd0) | 0xc;\ncode_r0x0043903f:\n    fcn.004510f7(unaff_ESI);\n    return;\n}\n",
        "token_count": 1352
    },
    "00426a5f": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426a5f(int32_t arg_8h, uint arg_ch)\n\n{\n    ushort *in_ECX;\n    \n    if (arg_ch == 10) {\n        *in_ECX = 10;\n    }\n    else {\n        if (arg_ch == 0xb) {\n            *in_ECX = 0xb;\n            in_ECX[4] = -(arg_8h != 0);\n            return;\n        }\n        if (arg_ch == 0x16) {\n            *in_ECX = 0x16;\n        }\n        else if (arg_ch == 0x17) {\n            *in_ECX = 0x17;\n        }\n        else if (arg_ch == 0x19) {\n            *in_ECX = 0x19;\n        }\n        else if (arg_ch == 0x13) {\n            *in_ECX = 0x13;\n        }\n        else {\n            *in_ECX = 3;\n        }\n    }\n    *(in_ECX + 4) = arg_8h;\n    return;\n}\n",
        "token_count": 238
    },
    "004432a3": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004432a3(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_38h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = arg_8h - *(in_ECX + 4);\n    iVar4 = arg_ch - *(in_ECX + 8);\n    iVar3 = *(in_ECX + 0x8c);\n    uVar5 = 2;\n    if (iVar3 == 10) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + iVar2;\n    }\n    else {\n        if (iVar3 != 0xb) {\n            uVar5 = 0x22;\n            if (iVar3 == 0xc) {\n                *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + iVar4;\n            }\n            else {\n                *(in_ECX + 0x34) = *(in_ECX + 0x34) + iVar4;\n            }\n            iVar3 = *(in_ECX + 0x34) - *(in_ECX + 0x2c);\n            goto code_r0x004432fb;\n        }\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + iVar2;\n    }\n    iVar3 = *(in_ECX + 0x30) - *(in_ECX + 0x28);\ncode_r0x004432fb:\n    if (iVar3 < 0) {\n        iVar3 = 0;\n    }\n    (**(**(in_ECX + 0x68) + 0x138))(&var_8h, iVar3, uVar5);\n    pcVar1 = *0x48178c;\n    var_28h = (**0x48178c)(0x4c);\n    var_24h = (*pcVar1)(0x4d);\n    var_20h = (*pcVar1)(0x4e);\n    var_20h = var_20h + var_28h;\n    var_1ch = (*pcVar1)(0x4f);\n    var_1ch = var_1ch + var_24h;\n    var_18h = *(in_ECX + 0x48);\n    var_14h = *(in_ECX + 0x4c);\n    var_10h = *(in_ECX + 0x50);\n    var_ch = *(in_ECX + 0x54);\n    if ((*(in_ECX + 0x8c) == 10) || (*(in_ECX + 0x8c) == 0xc)) {\n        var_18h = ((*(in_ECX + 0x58) - *(in_ECX + 0x60)) - var_8h) + var_10h;\n        var_14h = ((*(in_ECX + 0x5c) - *(in_ECX + 100)) - var_4h) + var_ch;\n        iVar3 = (**0x48168c)(&var_38h, &var_28h, &var_18h);\n        if (iVar3 != 0) {\n            *(in_ECX + 0x38) = *(in_ECX + 0x40) - var_8h;\n            *(in_ECX + 0x3c) = *(in_ECX + 0x44) - var_4h;\n            *(in_ECX + 0x48) = var_18h;\n            *(in_ECX + 0x4c) = var_14h;\n        }\n    }\n    else {\n        var_10h = (*(in_ECX + 0x60) - *(in_ECX + 0x58)) + var_18h + var_8h;\n        var_ch = (*(in_ECX + 100) - *(in_ECX + 0x5c)) + var_14h + var_4h;\n        iVar3 = (**0x48168c)(&var_38h, &var_28h, &var_18h);\n        if (iVar3 != 0) {\n            *(in_ECX + 0x40) = *(in_ECX + 0x38) + var_8h;\n            *(in_ECX + 0x44) = *(in_ECX + 0x3c) + var_4h;\n            *(in_ECX + 0x50) = var_10h;\n            *(in_ECX + 0x54) = var_ch;\n        }\n    }\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    fcn.00443094(0);\n    return;\n}\n",
        "token_count": 1174
    },
    "00434f33": {
        "rules": [
            "hash data using djb2/6ad21e310d674441ba35d7276afbe57d",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00434f33(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t extraout_ECX;\n    uint32_t uVar2;\n    ulong uVar3;\n    \n    iVar1 = 0;\n    if (param_1 != NULL) goto code_r0x00434f4b;\n    uVar3 = fcn.00403bf2();\n    uVar2 = extraout_ECX;\n    do {\n        iVar1 = uVar3 * 0x21 + uVar2;\n        param_1 = (uVar3 >> 0x20) + 1;\ncode_r0x00434f4b:\n        uVar3 = CONCAT44(param_1, iVar1);\n        uVar2 = *param_1;\n    } while (*param_1 != 0);\n    return iVar1;\n}\n",
        "token_count": 191
    },
    "00475e97": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00475e97(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == unaff_EDI) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x4aa1e0) + 4 + (unaff_ESI & 0x1f) * 0x28;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.00475be9();\n    return;\n}\n",
        "token_count": 156
    },
    "00479846": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00479846(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    iVar4 = 0;\n    uVar1 = (**0x4813d8)();\n    arg_8h = 0x1004;\n    iVar2 = (**0x4813a4)(uVar1, 0x1004, &var_ch, 7);\n    if (iVar2 != 0) {\n        puVar3 = &var_ch;\n        if (var_ch != '\\0') {\n            do {\n                puVar3 = puVar3 + 1;\n                iVar4 = iVar4 * 10 + -0x30 + var_ch;\n                var_ch._0_1_ = *puVar3;\n            } while (var_ch != '\\0');\n            if (iVar4 != 0) goto code_r0x0047989c;\n        }\n    }\n    (**0x481240)();\ncode_r0x0047989c:\n    fcn.004510f7(arg_8h);\n    return;\n}\n",
        "token_count": 293
    },
    "00401137": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401137(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00450163(param_1, param_2, param_3);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 69
    },
    "004012cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004012cd(int32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    if (-param_2 - 1U < param_3) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 + param_3;\n    return 0;\n}\n",
        "token_count": 78
    },
    "004012ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004012ef(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004012cd(&var_4h, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        fcn.00401103(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 91
    },
    "00401314": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401314(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0040105e(&var_4h, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        fcn.00401103(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 92
    },
    "004013b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.004013b6(uint noname_0, uint noname_1, uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_4h;\n    uint var_34h;\n    uint var_24h;\n    uint var_1dh;\n    uint var_18h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x14;\n    var_4h_2 = 0x495c30;\n    fcn.00450a44();\n    *(unaff_EBP + -0x1d) = 1;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    iVar1 = fcn.004012cd(unaff_EBP + -0x24, *(unaff_EBP + 8), 0x2000);\n    if (iVar1 < 0) {\n        *(unaff_EBP + -0x1d) = 0;\n    }\n    else {\n        fcn.00450c70();\n        *(unaff_EBP + -0x18) = &fcn.004013b6::var_4h_2;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    *(unaff_EBP + -0x38) = 0x40142a;\n    fcn.00450a8c();\n    return;\n}\n",
        "token_count": 362
    },
    "00401533": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00401533(uint *param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = fcn.004012ef(param_2, 8);\n    puVar2 = fcn.00450012(uVar1);\n    if (puVar2 != NULL) {\n        *puVar2 = *param_1;\n        *param_1 = puVar2;\n        puVar2 = puVar2 + 2;\n    }\n    return puVar2;\n}\n",
        "token_count": 123
    },
    "0040159c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040159c(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    \n    if (param_2 == 0) {\n        *param_1 = 0;\n    }\n    else {\n        iVar2 = (**0x481470)(param_2);\n        iVar2 = iVar2 + 1;\n        fcn.0040134b(param_1, iVar2 * 4, param_1 + 1, 0x80);\n        pcVar1 = *0x481490;\n        uVar8 = 0;\n        uVar7 = 0;\n        iVar3 = (**0x481490)(param_2, 0, param_2, iVar2, *param_1, iVar2 * 4, 0, 0);\n        bVar4 = iVar3 == 0;\n        if (bVar4) {\n            iVar3 = (**0x48148c)();\n            if (iVar3 == 0x7a) {\n                uVar6 = 0;\n                uVar5 = 0;\n                uVar7 = (*pcVar1)(uVar8, 0, uVar7, iVar2, 0, 0, 0, 0);\n                fcn.0040134b(param_1, uVar7, param_1 + 1, 0x80);\n                iVar2 = (*pcVar1)(uVar6, 0, uVar5, iVar2, *param_1, uVar7, 0, 0);\n                bVar4 = iVar2 == 0;\n            }\n            if (bVar4) {\n                fcn.0040111c();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 426
    },
    "00401765": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401765(void)\n\n{\n    fcn.00401152(0x4a3000, 0x401656, *0x481468);\n    // WARNING: Could not recover jumptable at 0x00401781. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4a3000)();\n    return;\n}\n",
        "token_count": 84
    },
    "00401b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401b20(uint param_1)\n\n{\n    int32_t *piVar1;\n    ulong uVar2;\n    \n    uVar2 = fcn.00401514(param_1);\n    piVar1 = uVar2 >> 0x20;\n    return (uVar2 & 0xffff) + *piVar1 + piVar1;\n}\n",
        "token_count": 84
    },
    "00401dd2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401dd2(void)\n\n{\n    fcn.00401152(0x4a3004, 0x401d16, *0x48144c);\n    // WARNING: Could not recover jumptable at 0x00401dee. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4a3004)();\n    return;\n}\n",
        "token_count": 87
    },
    "00401f14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401f14(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    \n    iVar1 = (**0x481440)(arg_8h, arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    puVar2 = (**0x481444)(iVar1);\n    if (puVar2 != NULL) {\n        iVar1 = (**0x481448)(arg_8h, arg_ch);\n        puVar3 = iVar1 + puVar2;\n        for (arg_10h = arg_10h & 0xf; arg_10h != 0; arg_10h = arg_10h - 1) {\n            if (puVar3 <= puVar2) {\n                return 0;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar3) {\n            return -(*puVar2 != 0) & puVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 262
    },
    "00401f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401f70(uint param_1, uint32_t param_2)\n\n{\n    int32_t arg_ch;\n    \n    arg_ch = (**0x48143c)(param_1);\n    if (arg_ch == 0) {\n        return;\n    }\n    fcn.00401f14((param_2 >> 4) + 1 & 0xffff, arg_ch, 6);\n    return;\n}\n",
        "token_count": 94
    },
    "00402193": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402193(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    \n    uVar1 = *param_1;\n    uVar4 = uVar1;\n    piVar2 = *(uVar1 - 0x10);\n    if (*(uVar1 - 0xc) != 0) {\n        if (*(uVar1 - 4) < 0) {\n            if (*(uVar1 - 8) < 0) {\n                uVar4 = fcn.00401103(0x80070057);\n            }\n            *(uVar4 + -0xc) = uVar4 >> 0x20;\n            **param_1 = uVar4 >> 0x20;\n        }\n        else {\n            fcn.00401fb6();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *param_1 = iVar3 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "004021eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004021eb(int32_t arg_8h)\n\n{\n    int32_t arg_10h;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = *in_ECX;\n    iVar1 = *(arg_10h + -0xc);\n    puVar2 = (**(**(arg_10h + -0x10) + 0x10))();\n    iVar3 = (***puVar2)(arg_8h, 1);\n    if (iVar3 == 0) {\n        fcn.004021e0();\n    }\n    if (iVar1 < arg_8h) {\n        arg_8h = iVar1;\n    }\n    fcn.00451210(iVar3 + 0x10, arg_8h + 1, arg_10h, arg_8h + 1);\n    *(iVar3 + 4) = iVar1;\n    fcn.00401fb6();\n    *in_ECX = iVar3 + 0x10;\n    return;\n}\n",
        "token_count": 261
    },
    "00402253": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402253(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    ppiVar1 = *param_1 + -0x10;\n    if ((*(*param_1 + -8) < param_2) && (0 < param_2)) {\n        iVar2 = (**(**ppiVar1 + 8))(ppiVar1, param_2, 1);\n        if (iVar2 != 0) goto code_r0x0040227e;\n    }\n    iVar2 = fcn.004021e0();\ncode_r0x0040227e:\n    *param_1 = iVar2 + 0x10;\n    return;\n}\n",
        "token_count": 169
    },
    "0040231f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040231f(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.00401103(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 122
    },
    "004023f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.004023f3(uint arg_8h, uint arg_ch)\n\n{\n    ushort *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    puVar1 = fcn.00401f70(arg_8h, arg_ch);\n    if (puVar1 != NULL) {\n        uVar2 = fcn.00402153(puVar1 + 1, *puVar1);\n        uVar3 = fcn.004023b3(uVar2);\n        fcn.00402170(uVar3, uVar2, puVar1 + 1, *puVar1);\n        fcn.0040210d(uVar2);\n        puVar1 = 0x1;\n    }\n    return puVar1;\n}\n",
        "token_count": 178
    },
    "00402f26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402f26(uint8_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    while( true ) {\n        if (*arg_8h == 0) break;\n        uVar1 = (uVar1 >> 0xd | uVar1 << 0x13) + *arg_8h;\n        arg_8h = arg_8h + 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "00402f5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402f5a(char *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    char *pcVar3;\n    uint uVar4;\n    uint var_408h;\n    \n    pcVar3 = arg_8h;\n    do {\n        cVar2 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar2 != '\\0');\n    iVar1 = (pcVar3 - (arg_8h + 1)) + 1;\n    uVar4 = fcn.00450012(iVar1);\n    fcn.00451550(uVar4, 0, iVar1);\n    fcn.004038e0(&var_408h, arg_ch, arg_10h);\n    fcn.004035c0(&var_408h, pcVar3 - (arg_8h + 1), arg_8h, uVar4);\n    return uVar4;\n}\n",
        "token_count": 229
    },
    "00402fdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402fdc(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = fcn.00402f4b();\n    piVar1 = *(*(iVar3 + 0xc) + 0xc);\n    iVar3 = piVar1[6];\n    var_8h = 0;\n    do {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar6 = *(*(iVar3 + 0x3c) + 0x78 + iVar3);\n        piVar1 = *piVar1;\n        if (iVar6 != 0) {\n            var_4h = 0;\n            iVar6 = iVar6 + iVar3;\n            uVar2 = *(iVar6 + 0x18);\n            piVar7 = *(iVar6 + 0x20) + iVar3;\n            if (uVar2 != 0) {\n                do {\n                    iVar5 = *piVar7;\n                    piVar7 = piVar7 + 1;\n                    uVar4 = fcn.00402fb8(0x6e, &var_8h, 0);\n                    uVar4 = fcn.00402f5a(iVar5 + iVar3, var_8h, uVar4);\n                    iVar5 = fcn.00402f26(uVar4);\n                    if (iVar5 == arg_8h) {\n                        return *(*(iVar6 + 0x1c) + *(*(iVar6 + 0x24) + var_4h * 2 + iVar3) * 4 + iVar3) + iVar3;\n                    }\n                    var_4h = var_4h + 1;\n                } while (var_4h < uVar2);\n            }\n        }\n        iVar3 = piVar1[6];\n    } while( true );\n}\n",
        "token_count": 491
    },
    "0040308f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040308f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint var_40h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.00402fdc(0x212f78c3);\n    pcVar2 = fcn.00402fdc(0xec5e2f5);\n    pcVar3 = fcn.00402fdc(0xdd0ced5b);\n    pcVar4 = fcn.00402fdc(0x6e91659b);\n    pcVar5 = fcn.00402fdc(0xfb1cc11);\n    pcVar6 = fcn.00402fdc(0xa7161946);\n    pcVar7 = fcn.00402fdc(0x3e561f98);\n    iVar8 = (*pcVar3)(&var_4h, 0, 0, 1, 0);\n    if ((((iVar8 != 0) || (iVar8 = (*pcVar3)(&var_4h, 0, 0, 1, 8),  iVar8 != 0)) ||\n        (iVar8 = (*pcVar3)(&var_4h, 0, 0, 1, 0xf0000000),  iVar8 != 0)) &&\n       (((iVar8 = (*pcVar5)(var_4h, 0x8003, 0, 0, &var_8h),  iVar8 != 0 &&\n         (iVar8 = (*pcVar6)(var_8h, arg_10h, 0x10, 1),  iVar8 != 0)) &&\n        (iVar8 = (*pcVar7)(var_4h, 0x6801, var_8h, 1, &var_ch),  iVar8 != 0)))) {\n        uVar9 = (*pcVar2)(0, arg_ch, 0x1000, 0x40);\n        (*pcVar1)(uVar9, arg_8h, arg_ch);\n        iVar8 = (*pcVar4)(var_ch, 0, 1, 0, uVar9, &arg_ch, arg_ch);\n        return -(iVar8 != 0) & uVar9;\n    }\n    return 0;\n}\n",
        "token_count": 618
    },
    "00403544": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403544(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_10h;\n    \n    iVar1 = (**(*arg_8h + 0x30))();\n    iVar2 = (**(*arg_8h + 0x34))(&var_10h, 0xe);\n    if (((iVar2 == 0xe) && (var_10h == 0x4d42)) && (iVar2 = (**0x48147c)(0x42, iVar1),  iVar2 != 0)) {\n        uVar3 = (**0x481480)(iVar2);\n        iVar4 = (**(*arg_8h + 0x34))(uVar3, iVar1 + -0xe);\n        if (iVar4 == iVar1 + -0xe) {\n            (**0x481484)(iVar2);\n            return iVar2;\n        }\n        (**0x481484)();\n        (**0x481474)(iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "004038e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004038e0(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    iVar6 = -param_2;\n    uVar4 = 0;\n    param_1[1] = iVar6;\n    if ((*0x4a9190 >> 0x14 & 1) == 0) {\n        do {\n            param_1[uVar4 + 2] = uVar4;\n            cVar3 = uVar4;\n            uVar4 = cVar3 + 1;\n        } while (cVar3 != -1);\n        uVar5 = 0;\n        uVar4 = 0;\n        do {\n            uVar4 = uVar4 + *(param_3 + param_2 + iVar6) + param_1[uVar5 + 2];\n            iVar6 = iVar6 + 1;\n            uVar2 = param_1[uVar4 + 2];\n            if (iVar6 == 0) {\n                iVar6 = param_1[1];\n            }\n            param_1[uVar4 + 2] = param_1[uVar5 + 2];\n            param_1[uVar5 + 2] = uVar2;\n            cVar3 = uVar5;\n            uVar5 = cVar3 + 1;\n        } while (cVar3 != -1);\n    }\n    else {\n        do {\n            cVar3 = uVar4;\n            *(param_1 + uVar4 + 8) = cVar3;\n            uVar4 = cVar3 + 1;\n        } while (cVar3 != -1);\n        uVar5 = 0;\n        uVar4 = 0;\n        do {\n            cVar3 = *(param_1 + uVar5 + 8);\n            uVar4 = uVar4 + *(param_3 + param_2 + iVar6) + cVar3;\n            iVar6 = iVar6 + 1;\n            uVar1 = *(param_1 + uVar4 + 8);\n            if (iVar6 == 0) {\n                iVar6 = param_1[1];\n            }\n            *(param_1 + uVar4 + 8) = cVar3;\n            *(param_1 + uVar5 + 8) = uVar1;\n            cVar3 = uVar5;\n            uVar5 = cVar3 + 1;\n        } while (cVar3 != -1);\n        param_1[0x42] = 0xffffffff;\n    }\n    *param_1 = 0;\n    param_1[1] = 0;\n    return;\n}\n",
        "token_count": 619
    },
    "00403c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403c40(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00451895(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 79
    },
    "00403e46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00403e46(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004228ed(0x4825f8);\n    if (iVar1 == 0) {\n        iVar1 = fcn.004228ed(0x482540);\n        if (iVar1 == 0) {\n            iVar1 = fcn.004228ed(0x48255c);\n            iVar1 = (-(iVar1 != 0) & 0xffff4002) + 0x8000ffff;\n        }\n        else {\n            iVar1 = -0x7ff8fff2;\n        }\n    }\n    else {\n        iVar1 = *(param_1 + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 170
    },
    "0040432c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040432c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0040430c(&var_4h, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        return 0;\n    }\n    uVar2 = (**0x481964)(var_4h);\n    return uVar2;\n}\n",
        "token_count": 117
    },
    "00404383": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404383(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00451210(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 78
    },
    "004043a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004043a2(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00404364(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 79
    },
    "0040450d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040450d(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint var_4h;\n    \n    pcVar1 = *0x481478;\n    uVar3 = (**0x481478)(arg_ch);\n    if (arg_8h == 0) {\n        arg_8h = (**0x48147c)(0x2002, uVar3);\n        if (arg_8h != 0) {\ncode_r0x00404546:\n            pcVar2 = *0x481480;\n            uVar5 = (**0x481480)(arg_ch);\n            uVar6 = (*pcVar2)(arg_8h);\n            uVar5 = (*pcVar1)(arg_8h, uVar5, uVar3);\n            fcn.00404383(uVar6, uVar5);\n            pcVar1 = *0x481484;\n            (**0x481484)(arg_8h);\n            (*pcVar1)(arg_ch);\n            return arg_8h;\n        }\n    }\n    else {\n        uVar4 = (*pcVar1)(arg_8h);\n        if (uVar3 <= uVar4) goto code_r0x00404546;\n    }\n    return 0;\n}\n",
        "token_count": 322
    },
    "004048fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004048fd(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.00401103(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 121
    },
    "00404968": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404968(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    \n    uVar1 = *param_1;\n    uVar4 = uVar1;\n    piVar2 = *(uVar1 - 0x10);\n    if (*(uVar1 - 0xc) != 0) {\n        if (*(uVar1 - 4) < 0) {\n            if (*(uVar1 - 8) < 0) {\n                uVar4 = fcn.00401103(0x80070057);\n            }\n            *(uVar4 + -0xc) = uVar4 >> 0x20;\n            **param_1 = uVar4 >> 0x20;\n        }\n        else {\n            fcn.00401fb6();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *param_1 = iVar3 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "004049b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004049b1(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    puVar3 = (**(**(iVar1 + -0x10) + 0x10))();\n    iVar4 = (***puVar3)(arg_8h, 2);\n    if (iVar4 == 0) {\n        fcn.00404949();\n    }\n    if (iVar2 < arg_8h) {\n        arg_8h = iVar2;\n    }\n    fcn.004042ed(iVar4 + 0x10, arg_8h + 1, iVar1, arg_8h + 1);\n    *(iVar4 + 4) = iVar2;\n    fcn.00401fb6();\n    *in_ECX = iVar4 + 0x10;\n    return;\n}\n",
        "token_count": 251
    },
    "00404a19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00404a19(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    ppiVar1 = *param_1 + -0x10;\n    if ((*(*param_1 + -8) < param_2) && (0 < param_2)) {\n        iVar2 = (**(**ppiVar1 + 8))(ppiVar1, param_2, 2);\n        if (iVar2 != 0) goto code_r0x00404a44;\n    }\n    iVar2 = fcn.00404949();\ncode_r0x00404a44:\n    *param_1 = iVar2 + 0x10;\n    return;\n}\n",
        "token_count": 169
    },
    "00404ae6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00404ae6(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00404454(param_2);\n    }\n    if (iVar1 < 1) {\n        fcn.00402193();\n    }\n    else {\n        uVar2 = fcn.004023b3(iVar1);\n        fcn.00402170(uVar2, iVar1, param_2, 0xffffffff);\n        fcn.0040210d(iVar1);\n    }\n    return param_1;\n}\n",
        "token_count": 160
    },
    "00404b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b30(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = *(*in_ECX + -0xc);\n    uVar3 = arg_8h - *in_ECX;\n    iVar2 = fcn.004023b3(arg_ch + uVar1);\n    if (uVar3 <= uVar1) {\n        arg_8h = uVar3 + iVar2;\n    }\n    fcn.00451210(iVar2 + uVar1, arg_ch, arg_8h, arg_ch);\n    fcn.0040210d(arg_ch + uVar1);\n    return;\n}\n",
        "token_count": 185
    },
    "00404fe7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00404fe7(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.004043c1(param_2);\n    }\n    if (iVar1 < 1) {\n        fcn.00404968();\n    }\n    else {\n        uVar2 = fcn.00404abc(iVar1);\n        fcn.004043e5(uVar2, iVar1, param_2, 0xffffffff);\n        fcn.00404922(iVar1);\n    }\n    return param_1;\n}\n",
        "token_count": 160
    },
    "00405031": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint16_t * fcn.00405031(uint param_1, uint param_2)\n\n{\n    uint16_t *puVar1;\n    uint arg_8h;\n    uint32_t arg_ch;\n    \n    puVar1 = fcn.00401f70(param_1, param_2);\n    if (puVar1 != NULL) {\n        arg_ch = *puVar1;\n        arg_8h = fcn.00404abc(arg_ch);\n        fcn.00404405(arg_8h, arg_ch, puVar1 + 1, *puVar1);\n        fcn.00404922(arg_ch);\n        puVar1 = 0x1;\n    }\n    return puVar1;\n}\n",
        "token_count": 156
    },
    "004061c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004061c4(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.00451550(&var_14h, 0, 0x14);\n    var_10h = arg_8h;\n    var_14h = 0x14;\n    (**0x481174)(*(in_ECX + 4), &var_14h);\n    return;\n}\n",
        "token_count": 109
    },
    "00407e83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00407e83(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (0x7fffffff - param_2 < param_3) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 + param_3;\n    return 0;\n}\n",
        "token_count": 80
    },
    "00408196": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408196(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00407e83(&var_4h, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        fcn.00401103(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 92
    },
    "004081e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004081e0(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00407f1a(*param_2 + -0x10);\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 83
    },
    "00408624": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408624(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.00451139();\n    fcn.00419c68();\n    fcn.00409688();\n    *in_FS_OFFSET = uStackY532;\n    fcn.004510f7(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 90
    },
    "00408d1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408d1c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *arg_8h_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    int64_t iVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_34h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00451139(0x70);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    fcn.00402648(0, 0xffffffff, 0);\n    iVar1 = *extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = (**(iVar1 + 0x84))(*(unaff_EBP + 8), 0x20, unaff_EBP + -0x34);\n    iVar1 = *extraout_ECX;\n    *(unaff_EBP + -0x18) = arg_8h_00;\n    if (arg_8h_00 == NULL) {\n        (**(iVar1 + 0x80))(*(unaff_EBP + 8), unaff_EBP + -0x34, 0, 0xf101);\n        *(unaff_EBP + -0x34) = vtable.CFileException.0;\n        fcn.00401fb6();\n    }\n    else {\n        (**(iVar1 + 0x6c))();\n        (**(*extraout_ECX + 0x5c))(1);\n        fcn.00426371(arg_8h_00, 3, 0x1000, 0);\n        *(unaff_EBP + -0x7c) = extraout_ECX;\n        *(unaff_EBP + -0x78) = 0;\n        *(unaff_EBP + -4) = 2;\n        fcn.00419c68();\n        fcn.00409673();\n        iVar1 = *arg_8h_00;\n        *(unaff_EBP + -4) = 3;\n        iVar2 = (**(iVar1 + 0x30))();\n        if (iVar2 != 0) {\n            (**(*extraout_ECX + 8))(unaff_EBP + -0x7c);\n        }\n        fcn.00426066();\n        (**(*extraout_ECX + 0x88))(arg_8h_00, 0);\n        *(unaff_EBP + -4) = 2;\n        fcn.00408624();\n        iVar1 = *extraout_ECX;\n        *(unaff_EBP + -4) = 1;\n        (**(iVar1 + 0x5c))(0);\n        *(unaff_EBP + -4) = 0;\n        fcn.004262b1();\n        *(unaff_EBP + -0x34) = vtable.CFileException.0;\n        fcn.00401fb6();\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 777
    },
    "00408e97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408e97(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_7ch;\n    uint var_78h;\n    uint var_34h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00451139(0x70);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    fcn.00402648(0, 0xffffffff, 0);\n    iVar2 = *extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = (**(iVar2 + 0x84))(*(unaff_EBP + 8), 0x1012, unaff_EBP + -0x34);\n    *(unaff_EBP + -0x18) = iVar2;\n    if (iVar2 == 0) {\n        (**(*extraout_ECX + 0x80))(*(unaff_EBP + 8), unaff_EBP + -0x34, 1, 0xf100);\n        *(unaff_EBP + -0x34) = vtable.CFileException.0;\n        fcn.00401fb6();\n    }\n    else {\n        fcn.00426371(iVar2, 2, 0x1000, 0);\n        *(unaff_EBP + -0x7c) = extraout_ECX;\n        *(unaff_EBP + -0x78) = 0;\n        *(unaff_EBP + -4) = 2;\n        fcn.00419c68();\n        fcn.00409673();\n        iVar1 = *extraout_ECX;\n        *(unaff_EBP + -4) = 3;\n        (**(iVar1 + 8))(unaff_EBP + -0x7c);\n        fcn.00426066();\n        (**(*extraout_ECX + 0x88))(iVar2, 0);\n        *(unaff_EBP + -4) = 2;\n        fcn.00408624();\n        iVar2 = *extraout_ECX;\n        *(unaff_EBP + -4) = 1;\n        (**(iVar2 + 0x5c))(0);\n        *(unaff_EBP + -4) = 0;\n        fcn.004262b1();\n        *(unaff_EBP + -0x34) = vtable.CFileException.0;\n        fcn.00401fb6();\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 679
    },
    "00409248": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00409248(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00453966(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 59
    },
    "00409260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00409260(int32_t arg_8h, uint *arg_ch, uint noname_2, code *arg_14h, uint *arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint uVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    \n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x0040926f;\ncode_r0x0040926a:\n    fcn.00403bf2();\n    arg_8h = extraout_ECX;\n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\ncode_r0x0040926f:\n    unaff_EBX = 1;\n    if (arg_20h != NULL) {\n        *arg_20h = arg_8h;\n        arg_20h[1] = arg_14h;\n        return 1;\n    }\n    if (0xb < arg_1ch - 0x38U) {\n        return 0;\n    }\n    // switch table (12 cases) at 0x409368\n    unaff_ESI = puVar4;\n    switch(*((arg_1ch - 0x38U) * 4 + 0x409368)) {\n    case 0x4092a0:\n        (*arg_14h)();\n        return 1;\n    case 0x4092a8:\n        uVar2 = (*arg_14h)();\n        return uVar2;\n    case 0x4092b0:\n        arg_18h = arg_ch;\n        break;\n    case 0x4092bb:\n        arg_18h = arg_ch;\n        goto code_r0x00409354;\n    case 0x4092c3:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x0040926a;\n    case 0x4092d7:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x0040926a;\n    case 0x4092e8:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x0040926a;\n    case 0x409300:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x0040926a;\n    case 0x409318:\n        unaff_ESI = arg_18h;\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h);\n            goto code_r0x00409327;\n        }\n        goto code_r0x0040926a;\n    case 0x409335:\n        goto code_r0x00409335;\n    case 0x409349:\n        break;\n    case 0x409351:\ncode_r0x00409354:\n        uVar2 = (*arg_14h)(arg_18h);\n        return uVar2;\n    }\n    (*arg_14h)(arg_18h);\n    return 1;\ncode_r0x00409335:\n    unaff_ESI = arg_18h;\n    if (arg_18h != NULL) {\n        (*arg_14h)(arg_18h, arg_ch, puVar4, uVar3);\ncode_r0x00409327:\n        iVar1 = arg_18h[7];\n        arg_18h[7] = 0;\n        return iVar1 == 0;\n    }\n    goto code_r0x0040926a;\n}\n",
        "token_count": 952
    },
    "00409992": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00409992(uint param_1, uchar *param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    \n    if ((param_2 != NULL) && (param_3 != 0)) {\n        iVar2 = fcn.00419c68();\n        puVar3 = fcn.00401f70(*(iVar2 + 0xc), param_1);\n        if (puVar3 == NULL) {\n            *param_2 = 0;\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (**0x481490)(0, 0, puVar3 + 1, *puVar3, param_2, param_3 + -1, 0, 0);\n            param_2[iVar2] = 0;\n        }\n        return iVar2;\n    }\n    fcn.00403bf2();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 235
    },
    "0040a485": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040a485(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < param_1) {\n        if (param_1 == 0x3e3) {\n            return 10;\n        }\n        if (param_1 == 0x3e4) {\n            return 10;\n        }\n        if (param_1 == 0x3e5) {\n            return 10;\n        }\n        if (param_1 == 999) {\n            return 5;\n        }\n        return 1;\n    }\n    if (param_1 == 0x10b) {\n        return 3;\n    }\n    if (param_1 < 0x3f) {\n        if (param_1 == 0x3e) {\n            return 8;\n        }\n        if (param_1 < 0x1a) {\n    // switch table (25 cases) at 0x40a691\n            switch(param_1) {\n            case 0:\n                return 0;\n            case 1:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0xe:\n                goto code_r0x0040a5b9;\n            case 2:\n            case 6:\n            case 0x12:\n                goto code_r0x0040a5b9;\n            case 3:\n            case 0xf:\n            case 0x11:\n                goto code_r0x0040a5b9;\n            case 4:\n                return 4;\n            case 5:\n            case 0xc:\n            case 0x13:\ncode_r0x0040a5b9:\n                return 5;\n            case 0xb:\ncode_r0x0040a5b9:\n                return 6;\n            case 0x10:\n                return 7;\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\ncode_r0x0040a5b9:\n                return 10;\n            default:\n                goto code_r0x0040a5b9;\n            }\n        }\n        if (0x27 < param_1) {\n    // switch table (9 cases) at 0x40a6f5\n            switch(param_1) {\n            case 0x34:\n            case 0x35:\n            case 0x37:\n                goto code_r0x0040a5b9;\n            case 0x36:\n            case 0x3a:\n                goto code_r0x0040a5b9;\n            default:\n                return 1;\n            case 0x39:\n            case 0x3b:\n                goto code_r0x0040a5b9;\n            case 0x3c:\n                goto code_r0x0040a5b9;\n            }\n        }\n        if (param_1 == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < param_1) {\n            if (param_1 == 0x21) {\n                return 0xc;\n            }\n            if (param_1 == 0x22) {\n                return 3;\n            }\n            if (param_1 == 0x24) {\n                return 4;\n            }\n            if (param_1 == 0x26) {\n                return 0xe;\n            }\n            return 1;\n        }\n        if (param_1 == 0x20) {\n            return 0xb;\n        }\n        if (param_1 == 0x1a) {\n            return 6;\n        }\n        if (param_1 == 0x1b) {\n            return 9;\n        }\n        iVar1 = param_1 - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x0040a500:\n        if (iVar1 == 1) {\ncode_r0x0040a5b9:\n            return 9;\n        }\n    }\n    else {\n        if (param_1 < 0x6c) {\n            if (param_1 == 0x6b) {\ncode_r0x0040a5b9:\n                return 2;\n            }\n            if (0x47 < param_1) {\n                if (param_1 == 0x50) {\n                    return 5;\n                }\n                if (param_1 == 0x52) {\n                    return 5;\n                }\n                if (param_1 == 0x55) {\n                    return 3;\n                }\n                if (param_1 != 0x56) {\n                    if (param_1 == 0x58) {\n                        return 10;\n                    }\n                    return 1;\n                }\n                return 5;\n            }\n            if (param_1 == 0x47) {\n                return 5;\n            }\n            if (param_1 == 0x40) {\n                return 5;\n            }\n            if (param_1 == 0x41) {\n                return 5;\n            }\n            if (param_1 == 0x42) {\n                return 6;\n            }\n            if (param_1 == 0x43) {\n                return 3;\n            }\n            iVar1 = param_1 - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (param_1 < 0x91) {\n                if (param_1 == 0x90) {\n                    return 3;\n                }\n                if (param_1 < 0x76) {\n                    if (param_1 == 0x75) {\n                        return 10;\n                    }\n                    if (param_1 == 0x6c) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0x6f) {\n                        return 3;\n                    }\n                    if (param_1 == 0x70) {\n                        return 0xd;\n                    }\n                    if (param_1 == 0x71) {\n                        return 4;\n                    }\n                    if (param_1 != 0x72) {\n                        return 1;\n                    }\n                    return 6;\n                }\n                if (param_1 == 0x7b) {\n                    return 3;\n                }\n                if (param_1 == 0x7c) {\n                    return 3;\n                }\n                if (param_1 == 0x7d) {\n                    return 3;\n                }\n                iVar1 = param_1 - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x0040a500;\n            }\n            if (param_1 < 0xb7) {\n                if (param_1 == 0xb6) {\n                    return 6;\n                }\n                if (param_1 == 0x91) {\n                    return 7;\n                }\n                if (param_1 == 0x9a) {\n                    return 3;\n                }\n                if (param_1 != 0xa1) {\n                    if (param_1 == 0xa7) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0xaa) {\n                        return 5;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (param_1 == 0xb7) {\n                return 5;\n            }\n            if (param_1 == 0xbf) {\n                return 6;\n            }\n            if (param_1 == 0xc1) {\n                return 6;\n            }\n            iVar1 = param_1 - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\ncode_r0x0040a5b9:\n            return 3;\n        }\n    }\ncode_r0x0040a5b9:\n    return 1;\n}\n",
        "token_count": 1764
    },
    "0040a8c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a8c9(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00455117(param_1, param_2, param_3);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 72
    },
    "0040aebd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040aebd(void)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.004023b3(0x104);\n    fcn.00451550(uVar1, 0, 0x104);\n    fcn.00403c40(uVar1, 0x104, unaff_retaddr, 0xffffffff);\n    (**0x481564)(uVar1);\n    fcn.004081bb(0xffffffff);\n    return;\n}\n",
        "token_count": 115
    },
    "0040b3fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b3fa(uint arg_8h, uint *arg_ch)\n\n{\n    uint unaff_ESI;\n    uint var_108h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    fcn.0045526a(&var_104h, 0x100, \"{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}\", *arg_ch, *(arg_ch + 1), \n                 *(arg_ch + 6), *(arg_ch + 2), *(arg_ch + 9), *(arg_ch + 10), *(arg_ch + 0xb), *(arg_ch + 3), \n                 *(arg_ch + 0xd), *(arg_ch + 0xe), *(arg_ch + 0xf));\n    fcn.004050cb(&var_104h);\n    fcn.004510f7(unaff_ESI);\n    return;\n}\n",
        "token_count": 241
    },
    "0040b4fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040b4fe(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    uVar2 = *(unaff_EBP + 8);\n    puVar1 = *(unaff_EBP + 0x10);\n    *puVar1 = 0;\n    fcn.0040b3fa(unaff_EBP + -0x10, uVar2);\n    *(unaff_EBP + -4) = 0;\n    uVar2 = fcn.00409b56();\n    fcn.0040231f(uVar2);\n    *(unaff_EBP + -4) = 1;\n    iVar3 = fcn.0040ae0d(*(unaff_EBP + -0x10), unaff_EBP + 0x10);\n    if (iVar3 == 0) {\n        fcn.00401fb6();\n        fcn.00401fb6();\n    }\n    else {\n        iVar3 = fcn.0040a8ea(*(unaff_EBP + 0x10));\n        if ((iVar3 != 0) && (pcVar4 = (**0x481424)(iVar3, \"DllGetClassObject\"),  pcVar4 != NULL)) {\n            (*pcVar4)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), puVar1);\n        }\n        fcn.00401fb6();\n        fcn.00401fb6();\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 427
    },
    "0040b8d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b8d0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *(param_1 + 0xa0) = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_14h = 4;\n    var_ch = 0;\n    piVar2 = 0x4a37cc;\n    var_10h = param_1;\n    iVar1 = *0x4a37cc;\n    while (iVar1 != 0) {\n        iVar1 = (**0x481018)(0x80000001, *piVar2, 0, 1, &var_4h);\n        if (iVar1 == 0) {\n            for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n                iVar1 = (**0x48101c)(var_4h, *piVar3, 0, &var_ch, &var_8h, &var_14h);\n                if ((iVar1 == 0) && (var_ch == 4)) {\n                    if (var_8h == 0) {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) & ~piVar3[1];\n                    }\n                    else {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) | piVar3[1];\n                    }\n                }\n                var_8h = 0;\n                var_14h = 4;\n                var_ch = 0;\n            }\n            (**0x481030)(var_4h);\n            var_4h = 0;\n        }\n        piVar2 = piVar2 + 2;\n        iVar1 = *piVar2;\n    }\n    return 1;\n}\n",
        "token_count": 477
    },
    "0040bacc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0040bacc(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x22] != NULL) {\n        (**(*extraout_ECX[0x22] + 0x18))(1);\n    }\n    iVar3 = fcn.00419c68();\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*0x4a690c != NULL) {\n            (**(**0x4a690c + 4))(1);\n            *0x4a690c = NULL;\n        }\n        if (*0x4a6908 != NULL) {\n            (**(**0x4a6908 + 4))(1);\n            *0x4a6908 = NULL;\n        }\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        fcn.00423ff0(extraout_ECX[0x1c]);\n    }\n    if (extraout_ECX[0x1d] != NULL) {\n        fcn.00423ff0(extraout_ECX[0x1d]);\n    }\n    pcVar2 = *0x4813b0;\n    if (*(extraout_ECX + 0x24) != 0) {\n        (**0x4813b0)(*(extraout_ECX + 0x24));\n    }\n    if (*(extraout_ECX + 0x92) != 0) {\n        (*pcVar2)(*(extraout_ECX + 0x92));\n    }\n    if (extraout_ECX[0x23] != NULL) {\n        (**(*extraout_ECX[0x23] + 4))(1);\n    }\n    iVar3 = fcn.00419c68();\n    if (*(iVar3 + 0x10) == extraout_ECX[0x14]) {\n        *(iVar3 + 0x10) = 0;\n    }\n    if (*(iVar3 + 4) == extraout_ECX) {\n        *(iVar3 + 4) = 0;\n    }\n    fcn.004500d5(extraout_ECX[0x14]);\n    fcn.004500d5(extraout_ECX[0x15]);\n    fcn.004500d5(extraout_ECX[0x18]);\n    fcn.004500d5(extraout_ECX[0x19]);\n    fcn.004500d5(extraout_ECX[0x1a]);\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[0xb] = NULL;\n    fcn.0040c8c8();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 760
    },
    "0040c891": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c891(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    iVar1 = fcn.004196b5();\n    *(iVar1 + 0x34) = 0;\n    *(iVar1 + 0x54) = 0;\n    (**0x48177c)(iVar1 + 0x4c);\n    *(param_1 + 0x40) = 0;\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x28) = 1;\n    return;\n}\n",
        "token_count": 195
    },
    "0040cf3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0040cf3f(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    if (param_2 < 1) {\n        iVar3 = *(param_1 + 0x20);\n        if (((iVar3 != 0) && (*(iVar3 + 0x20) != 0)) && (iVar1 = (**0x4817b0)(*(iVar3 + 0x20)),  iVar1 != 0)) {\n            fcn.0041466e(iVar3, *(iVar3 + 0x20), 0x363, 1, 0);\n            fcn.0041497a(*(iVar3 + 0x20), 0x363, 1, 0, 1, 1);\n        }\n        fcn.00419c68();\n        iVar1 = fcn.0040c1da();\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x6c)) {\n            if ((*(iVar1 + 0x20) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    fcn.0040e1f9(0);\n                }\n                iVar2 = (**0x4817b0)(*(iVar1 + 0x20));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0xa0))) {\n                    fcn.0041466e(iVar1, *(iVar1 + 0x20), 0x363, 1, 0);\n                    fcn.0041497a(*(iVar1 + 0x20), 0x363, 1, 0, 1, 1);\n                }\n                if (0 < *(iVar1 + 0xa0)) {\n                    fcn.0040e1f9();\n                }\n                *(iVar1 + 0xa0) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.00419c68();\n        iVar3 = fcn.0040c1da();\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.00423bce();\n            fcn.00423e3f(1);\n        }\n    }\n    return unaff_retaddr < 0;\n}\n",
        "token_count": 554
    },
    "0040d152": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d152(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x2c) != 0) {\n        fcn.00403bf2();\n    }\n    fcn.00451550(&var_1ch, 0, 0x1c);\n    var_1ch = fcn.004196b5();\n    pcVar1 = *0x48137c;\n    var_ch = (**0x48137c)(0, 1, 0, 0);\n    var_8h = (*pcVar1)(0, 1, 0, 0);\n    pcVar1 = *0x4813d4;\n    var_14h = arg_8h;\n    if (var_ch != 0) {\n        if (var_8h != 0) {\n            iVar2 = fcn.004559c5(arg_10h, arg_ch, 0x40d03a, &var_1ch, arg_8h | 4, in_ECX + 0x30);\n            *(in_ECX + 0x2c) = iVar2;\n            if (iVar2 == 0) {\n                return 0;\n            }\n            (**0x48138c)(iVar2);\n            (**0x481388)(var_ch, 0xffffffff);\n            (*pcVar1)(var_ch);\n            if ((arg_8h & 4) != 0) {\n                (**0x481380)(*(in_ECX + 0x2c));\n            }\n            if (var_4h == 0) {\n                (**0x481384)(var_8h);\n                return 1;\n            }\n            (**0x481388)(*(in_ECX + 0x2c), 0xffffffff);\n            (*pcVar1)(*(in_ECX + 0x2c));\n            *(in_ECX + 0x2c) = 0;\n            goto code_r0x0040d231;\n        }\n        (**0x4813d4)(var_ch);\n    }\n    if (var_8h == 0) {\n        return 0;\n    }\ncode_r0x0040d231:\n    (*pcVar1)(var_8h);\n    return 0;\n}\n",
        "token_count": 579
    },
    "0040d571": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d571(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    \n    arg_8h_00 = fcn.004023b3(arg_10h + arg_18h);\n    fcn.00451210(arg_8h_00, arg_10h, arg_ch, arg_10h);\n    fcn.00451210(arg_8h_00 + arg_10h, arg_18h, arg_14h, arg_18h);\n    fcn.0040210d(arg_10h + arg_18h);\n    return;\n}\n",
        "token_count": 164
    },
    "0040de17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040de17(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00419c68();\n    if (*(iVar1 + 4) != NULL) {\n    // WARNING: Could not recover jumptable at 0x0040de2b. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(iVar1 + 4) + 0x98))();\n        return;\n    }\n    fcn.0040dcbc(0, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 146
    },
    "0040e44d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.0040e44d(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *extraout_ECX;\n    \n    piVar1 = *param_1;\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00403bf2();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *piVar1;\n    return piVar1 + 2;\n}\n",
        "token_count": 108
    },
    "0040e466": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040e466(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00403bf2();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *(iVar1 + 4);\n    return iVar1 + 8;\n}\n",
        "token_count": 103
    },
    "0040eb3e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040eb3e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(param_1 + 0x4c);\n    if (iVar1 == 0) {\n        return iVar1;\n    }\n    iVar1 = *(iVar1 + 0x44);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        piVar2 = *(iVar1 + 8);\n        if (piVar2[1] == 0) {\n            iVar4 = *piVar2;\n        }\n        else {\n            iVar4 = *(piVar2[1] + 0x24);\n        }\n        if ((iVar4 != 0) && (iVar3 = (**0x48179c)(),  iVar4 == iVar3)) break;\n        if ((piVar2[1] != 0) && (piVar2[1] == *(*(param_1 + 0x4c) + 0x70))) {\n            return iVar1;\n        }\n        fcn.00407ed0();\n    }\n    return iVar1;\n}\n",
        "token_count": 295
    },
    "0040f3fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f3fe(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00455a73(param_1, param_2, param_3);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 72
    },
    "0040f5d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040f5d3(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004196b5();\n    param_1[1] = iVar1;\n    param_1[2] = *(iVar1 + 0xf0);\n    *param_1 = *(iVar1 + 0xec);\n    *(iVar1 + 0xec) = param_2;\n    *(param_1[1] + 0xf0) = param_1;\n    return param_1;\n}\n",
        "token_count": 129
    },
    "00410149": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00410149(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.004081e0(in_ECX + 0xc4, 0);\n    return arg_8h;\n}\n",
        "token_count": 77
    },
    "00410468": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00410468(code **param_1)\n\n{\n    fcn.0041266a();\n    *param_1 = vtable.CDialog.0;\n    fcn.00451550(param_1 + 0x15, 0, 0x20);\n    return param_1;\n}\n",
        "token_count": 71
    },
    "00410a91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00410a91(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    bool bVar5;\n    uint var_48h;\n    uint var_38h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00451139(0x3c);\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar2 = fcn.00419c68();\n        *(unaff_EBP + 0x10) = *(iVar2 + 0xc);\n    }\n    iVar2 = fcn.00419c68();\n    piVar1 = *(iVar2 + 0x3c);\n    *(unaff_EBP + -0x28) = piVar1;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.00416f36(0x10);\n    fcn.00416f36(0x7c000);\n    if (piVar1 == NULL) {\n        iVar2 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar2 = (**(*extraout_ECX + 300))(unaff_EBP + -0x48);\n        if (iVar2 == 0) goto code_r0x00410c79;\n        iVar2 = (**(*piVar1 + 0x14))(unaff_EBP + -0x48, *(unaff_EBP + 8));\n    }\n    if (iVar2 == 0) goto code_r0x00410c79;\n    uVar3 = fcn.00409b56();\n    fcn.0040231f(uVar3);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x18) = 0;\n    iVar4 = fcn.0042d457(iVar2, unaff_EBP + -0x1c, unaff_EBP + -0x18);\n    bVar5 = iVar4 == 0;\n    if (*0x4a83ac == 0) {\ncode_r0x00410b77:\n        if (bVar5) {\ncode_r0x00410b7b:\n            fcn.0042d3d7(iVar2);\n            *(unaff_EBP + -4) = 2;\n            fcn.0042d335(*(unaff_EBP + -0x18));\n            uVar3 = fcn.0042ce5f();\n            *(unaff_EBP + -0x14) = uVar3;\n            *(unaff_EBP + -4) = 1;\n            fcn.0042ce51();\n            if (*(unaff_EBP + -0x14) != 0) {\n                iVar2 = (**0x481480)(*(unaff_EBP + -0x14));\n            }\n        }\n    }\n    else {\n        if (bVar5) goto code_r0x00410b7b;\n        iVar4 = (**0x48178c)(0x2a);\n        if (iVar4 != 0) {\n            iVar4 = fcn.00410a50(iVar2, \"MS Shell Dlg\");\n            bVar5 = iVar4 == 0;\n            if (bVar5) {\n                if (*(unaff_EBP + -0x18) == 8) {\n                    *(unaff_EBP + -0x18) = 0;\n                }\n                goto code_r0x00410b77;\n            }\n        }\n    }\n    extraout_ECX[0x11] = -1;\n    extraout_ECX[0xf] = extraout_ECX[0xf] | 0x10;\n    fcn.00416004(extraout_ECX);\n    if (*(unaff_EBP + 0xc) == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(unaff_EBP + 0xc) + 0x20);\n    }\n    iVar2 = (**0x4816a4)(*(unaff_EBP + 0x10), iVar2, uVar3, fcn.0041042e, 0);\n    fcn.00401fb6();\n    *(unaff_EBP + -4) = 0xffffffff;\n    if ((*(unaff_EBP + -0x28) != NULL) && ((**(**(unaff_EBP + -0x28) + 0x18))(unaff_EBP + -0x48),  iVar2 != 0)) {\n        (**(*extraout_ECX + 300))(0);\n    }\n    iVar4 = fcn.00413e3c();\n    if (iVar4 == 0) {\n        (**(*extraout_ECX + 0x114))();\n    }\n    if ((iVar2 != 0) && ((*(extraout_ECX + 0xf) & 0x10) == 0)) {\n        (**0x4816a8)(iVar2);\n    }\n    if (*(unaff_EBP + -0x14) != 0) {\n        (**0x481484)(*(unaff_EBP + -0x14));\n        (**0x481474)(*(unaff_EBP + -0x14));\n    }\ncode_r0x00410c79:\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 1378
    },
    "00411211": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411211(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.00410fc7();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (**0x481690)(0x30, 0, &var_10h, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = *0x48178c;\n            uVar4 = (**0x48178c)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = var_10h;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                fcn.00455c13(arg_ch + 10, 0x20, \"DISPLAY\", 0x1f);\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x4a8140)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 413
    },
    "0041294b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041294b(int32_t param_1, uint param_2, int32_t param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    if (param_3 == 0) {\n        iVar1 = fcn.00419c68();\n        param_3 = *(iVar1 + 0x10);\n    }\n    if (param_1 == 0) {\n        arg_8h = 0;\n    }\n    else {\n        arg_8h = *(param_1 + 0x20);\n    }\n    fcn.0040db46(arg_8h, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 163
    },
    "0041369d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041369d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00451139(0x24);\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    *(unaff_EBP + -0x24) = 0;\n    iVar1 = fcn.004196b5();\n    *(unaff_EBP + -0x18) = iVar1;\n    *(unaff_EBP + -0x14) = *(iVar1 + 0xdc);\n    *(iVar1 + 0xdc) = extraout_ECX[8];\n    iVar1 = *extraout_ECX;\n    *(unaff_EBP + 8) = 0;\n    *(unaff_EBP + -4) = 0;\n    (**(iVar1 + 0xf4))(unaff_EBP + -0x2c);\n    *(unaff_EBP + 8) = 1;\n    *(*(unaff_EBP + -0x18) + 0xdc) = *(unaff_EBP + -0x14);\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 354
    },
    "00413728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413728(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint var_4ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0040e0b4();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (**0x481740)(*(in_ECX + 0x20), 4);\n        }\n        else {\n            iVar5 = (**0x4817a0)(*(in_ECX + 0x20));\n        }\n        if ((iVar5 != 0) && (iVar4 = (**0x48183c)(iVar5, 0x36b, 0, 0),  iVar4 != 0)) {\n            iVar5 = iVar4;\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x20);\n    }\n    pcVar1 = *0x48169c;\n    (**0x48169c)(*(in_ECX + 0x20), &var_38h);\n    if ((var_4h & 0x40000000) == 0) {\n        if ((iVar5 != 0) &&\n           ((uVar2 = (**0x481748)(iVar5, 0xfffffff0),  (uVar2 & 0x10000000) == 0 || ((uVar2 & 0x20000000) != 0)))) {\n            iVar5 = 0;\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.0040be6f();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x20);\n            }\n            uVar3 = fcn.004111a6(iVar5, 1);\n            fcn.00411211(uVar3, iVar5);\n            pcVar1 = *0x48166c;\n            (**0x48166c)(&var_28h, &var_4ch);\n            (*pcVar1)(&var_18h, &var_4ch);\n        }\n        else {\n            (*pcVar1)(iVar5, &var_28h);\n            uVar3 = fcn.004111a6(iVar5, 2);\n            fcn.00411211(uVar3, iVar5);\n            (**0x48166c)(&var_18h, &var_4ch);\n        }\n    }\n    else {\n        uVar3 = (**0x4817a0)(*(in_ECX + 0x20));\n        pcVar1 = *0x4816bc;\n        (**0x4816bc)(uVar3, &var_18h);\n        (*pcVar1)(iVar5, &var_28h);\n        (**0x481630)(iVar5, uVar3, &var_28h, 2);\n    }\n    iVar5 = (var_28h + var_20h) / 2 - (var_30h - var_38h) / 2;\n    iVar4 = (var_24h + var_1ch) / 2 - (var_2ch - var_34h) / 2;\n    if ((var_18h <= iVar5) && (var_18h = iVar5,  var_10h < (var_30h - var_38h) + iVar5)) {\n        var_18h = (var_38h - var_30h) + var_10h;\n    }\n    if ((var_14h <= iVar4) && (var_14h = iVar4,  var_ch < (var_2ch - var_34h) + iVar4)) {\n        var_14h = (var_34h - var_2ch) + var_ch;\n    }\n    fcn.0040e533(0, var_18h, var_14h, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1046
    },
    "00413dbb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00413dbb(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.00413d20(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.00403bf2();\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 222
    },
    "00416cdd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00416cdd(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004196b5();\n    iVar1 = iVar1 + 0x7c;\n    iVar2 = fcn.00419c68();\n    var_1ch = *(iVar2 + 8);\n    if (((arg_ch == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        puVar3 = fcn.00451b45();\n        var_4h = *puVar3;\n        puVar3 = fcn.00451b45();\n        *puVar3 = 0;\n        fcn.004552a3(iVar1, 0x60, 0x5f, \"Afx:%p:%x\", var_1ch);\n    }\n    else {\n        puVar3 = fcn.00451b45();\n        var_4h = *puVar3;\n        puVar3 = fcn.00451b45();\n        *puVar3 = 0;\n        fcn.004552a3(iVar1, 0x60, 0x5f, \"Afx:%p:%x:%p:%p:%p\", var_1ch);\n    }\n    piVar4 = fcn.00451b45();\n    if (*piVar4 == 0) {\n        puVar3 = fcn.00451b45();\n        *puVar3 = var_4h;\n    }\n    else {\n        puVar3 = fcn.00451b45();\n        fcn.00404894(*puVar3);\n    }\n    iVar2 = fcn.004123f7(var_1ch, iVar1, &var_2ch);\n    if (iVar2 == 0) {\n        var_2ch = arg_8h;\n        var_28h = *0x481680;\n        var_18h = arg_14h;\n        var_14h = arg_ch;\n        var_10h = arg_10h;\n        var_20h = 0;\n        var_24h = 0;\n        var_ch = 0;\n        var_8h = iVar1;\n        iVar2 = fcn.00416c4f(&var_2ch);\n        if (iVar2 == 0) {\n            fcn.00405e69();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 663
    },
    "004180a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.004180a9(code **param_1)\n\n{\n    fcn.00419d30();\n    *param_1 = vtable.CScrollView.0;\n    fcn.00451550(param_1 + 0x16, 0, 0x30);\n    param_1[0x16] = NULL;\n    param_1[0x17] = NULL;\n    return param_1;\n}\n",
        "token_count": 96
    },
    "00418252": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418252(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (**0x48169c)(in_ECX[8], &var_10h);\n    var_30h = var_10h;\n    var_2ch = var_ch;\n    var_28h = var_8h;\n    var_24h = var_4h;\n    (**(*in_ECX + 0x68))(&var_30h, 0);\n    pcVar1 = *0x481688;\n    var_8h = var_8h * 2 - var_28h;\n    var_ch = var_ch * 2 - var_2ch;\n    var_10h = var_10h * 2 - var_30h;\n    var_4h = var_4h * 2 - var_24h;\n    (**0x481688)(&var_10h, -var_10h, -var_ch);\n    var_18h = in_ECX[0x1a];\n    var_14h = in_ECX[0x1b];\n    var_20h = 0;\n    var_1ch = 0;\n    if (arg_8h != 0) {\n        if (var_8h <= var_18h) {\n            var_18h = var_8h;\n        }\n        if (var_4h <= var_14h) {\n            var_14h = var_4h;\n        }\n    }\n    (**(*in_ECX + 0x68))(&var_20h, 1);\n    (*pcVar1)(&var_20h, -var_20h, -var_1ch);\n    if (arg_8h != 0) {\n        if (var_8h <= in_ECX[0x1a]) {\n            var_18h = var_8h;\n        }\n        if (var_4h <= in_ECX[0x1b]) {\n            var_14h = var_4h;\n        }\n    }\n    iVar2 = fcn.004148fc();\n    if (iVar2 == 0) {\n        fcn.00403bf2();\n    }\n    (**0x48169c)(*(iVar2 + 0x20), &var_40h);\n    fcn.0040e533(0, 0, 0, (var_38h - var_40h) + (var_18h - var_8h), (var_34h - var_3ch) + (var_14h - var_4h), 0x16);\n    return;\n}\n",
        "token_count": 738
    },
    "0041852d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041852d(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (**0x4816bc)(*(in_ECX + 0x20), &var_10h);\n    *arg_8h = var_8h;\n    arg_8h[1] = var_4h;\n    uVar1 = fcn.0040e0b4();\n    fcn.004179c2(arg_ch);\n    if ((*arg_ch != 0) && ((uVar1 & 0x200000) != 0)) {\n        *arg_8h = *arg_8h + *arg_ch;\n    }\n    if ((arg_ch[1] != 0) && ((uVar1 & 0x100000) != 0)) {\n        arg_8h[1] = arg_8h[1] + arg_ch[1];\n    }\n    if ((*arg_ch < *arg_8h) && (arg_ch[1] < arg_8h[1])) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 308
    },
    "004185a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004185a8(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    fcn.004179c2(&var_8h);\n    piVar2 = arg_14h;\n    iVar1 = *(in_ECX + 0x6c);\n    *arg_14h = *(in_ECX + 0x68) - arg_8h;\n    arg_14h[1] = iVar1 - arg_ch;\n    piVar3 = fcn.00418184(&arg_8h);\n    *arg_18h = *piVar3;\n    arg_18h[1] = piVar3[1];\n    uVar4 = 0 < *piVar2;\n    if (uVar4 == 0) {\n        *arg_18h = 0;\n    }\n    else if (arg_1ch != 0) {\n        piVar2[1] = piVar2[1] + var_4h;\n    }\n    uVar5 = 0 < piVar2[1];\n    if (uVar5 == 0) {\n        arg_18h[1] = 0;\n    }\n    else {\n        if (arg_1ch != 0) {\n            *piVar2 = *piVar2 + var_8h;\n        }\n        if (uVar4 == 0) {\n            if (*piVar2 < 1) goto code_r0x00418642;\n            uVar4 = 1;\n            piVar2[1] = piVar2[1] + var_4h;\n        }\n    }\n    iVar1 = *piVar2;\n    if ((0 < iVar1) && (iVar1 <= *arg_18h)) {\n        *arg_18h = iVar1;\n    }\ncode_r0x00418642:\n    iVar1 = piVar2[1];\n    if ((0 < iVar1) && (iVar1 <= arg_18h[1])) {\n        arg_18h[1] = iVar1;\n    }\n    *arg_10h = uVar4;\n    arg_10h[1] = uVar5;\n    return;\n}\n",
        "token_count": 597
    },
    "004197f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004197f3(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    fcn.004050cb(\"comctl32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.00419771(unaff_EBP + -0x10);\n    fcn.00401fb6();\n    *extraout_ECX = vtable.CComCtlWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x1d] = NULL;\n    extraout_ECX[0x1e] = NULL;\n    extraout_ECX[0x1f] = NULL;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x24] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x26] = NULL;\n    extraout_ECX[0x27] = NULL;\n    extraout_ECX[0x28] = NULL;\n    extraout_ECX[0x29] = NULL;\n    extraout_ECX[0x2a] = NULL;\n    extraout_ECX[0x2b] = NULL;\n    extraout_ECX[0x2c] = NULL;\n    extraout_ECX[0x2d] = NULL;\n    extraout_ECX[0x2e] = NULL;\n    extraout_ECX[0x2f] = NULL;\n    extraout_ECX[0x30] = NULL;\n    extraout_ECX[0x31] = NULL;\n    extraout_ECX[0x32] = NULL;\n    extraout_ECX[0x33] = NULL;\n    extraout_ECX[0x34] = NULL;\n    extraout_ECX[0x35] = NULL;\n    extraout_ECX[0x36] = NULL;\n    extraout_ECX[0x37] = NULL;\n    extraout_ECX[0x38] = NULL;\n    extraout_ECX[0x39] = NULL;\n    extraout_ECX[0x3a] = NULL;\n    extraout_ECX[0x3b] = NULL;\n    extraout_ECX[0x3c] = NULL;\n    extraout_ECX[0x3d] = NULL;\n    extraout_ECX[0x3e] = NULL;\n    extraout_ECX[0x3f] = NULL;\n    extraout_ECX[0x40] = NULL;\n    extraout_ECX[0x41] = NULL;\n    extraout_ECX[0x42] = NULL;\n    extraout_ECX[0x43] = NULL;\n    extraout_ECX[0x44] = NULL;\n    extraout_ECX[0x45] = NULL;\n    extraout_ECX[0x46] = NULL;\n    extraout_ECX[0x47] = NULL;\n    extraout_ECX[0x48] = NULL;\n    extraout_ECX[0x49] = NULL;\n    extraout_ECX[0x4a] = NULL;\n    extraout_ECX[0x4b] = NULL;\n    extraout_ECX[0x4c] = NULL;\n    extraout_ECX[0x4d] = NULL;\n    extraout_ECX[0x4e] = NULL;\n    extraout_ECX[0x4f] = NULL;\n    extraout_ECX[0x50] = NULL;\n    extraout_ECX[0x51] = NULL;\n    extraout_ECX[0x52] = NULL;\n    extraout_ECX[0x53] = NULL;\n    extraout_ECX[0x54] = NULL;\n    extraout_ECX[0x55] = NULL;\n    extraout_ECX[0x56] = NULL;\n    extraout_ECX[0x57] = NULL;\n    extraout_ECX[0x58] = NULL;\n    extraout_ECX[0x59] = NULL;\n    extraout_ECX[0x5a] = NULL;\n    extraout_ECX[0x5b] = NULL;\n    extraout_ECX[0x5c] = NULL;\n    extraout_ECX[0x5d] = NULL;\n    extraout_ECX[0x5e] = NULL;\n    extraout_ECX[0x5f] = NULL;\n    extraout_ECX[0x60] = NULL;\n    extraout_ECX[0x61] = NULL;\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 1384
    },
    "00419a37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00419a37(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    fcn.004050cb(0x484b88);\n    *(unaff_EBP + -4) = 0;\n    fcn.00419771(unaff_EBP + -0x10);\n    fcn.00401fb6();\n    *extraout_ECX = vtable.CCommDlgWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 406
    },
    "00419cdb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419cdb(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack8;\n    \n    fcn.00419c68();\n    iVar2 = fcn.0040c1da();\n    if (iVar2 == 0) {\n        uStack8 = 0x4a3540;\n        fcn.004515ca(&uStack8, 0x49617c);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00419f25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00419f25(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004196b5();\n    param_1[1] = iVar1;\n    param_1[2] = *(iVar1 + 0xe8);\n    *param_1 = *(iVar1 + 0xe4);\n    *(iVar1 + 0xe4) = param_2;\n    *(param_1[1] + 0xe8) = param_1;\n    return param_1;\n}\n",
        "token_count": 129
    },
    "0041b033": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b033(uint arg_8h, uint arg_ch, int32_t arg_10h, code *arg_14h)\n\n{\n    for (arg_10h = arg_10h + -1; -1 < arg_10h; arg_10h = arg_10h + -1) {\n        (*arg_14h)();\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0041b879": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041b879(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    \n    *(param_1 + 0x114) = param_2;\n    uVar1 = *(*(**(param_1 + 0x134) + 0x74) + 0x1e);\n    if (uVar1 < param_2) {\n        *(param_1 + 0x114) = uVar1;\n    }\n    uVar1 = *(*(**(param_1 + 0x134) + 0x74) + 0x1c);\n    if (*(param_1 + 0x114) < uVar1) {\n        *(param_1 + 0x114) = uVar1;\n    }\n    if (*(param_1 + 0x10c) == 0) {\n        fcn.0041297f(1, *(param_1 + 0x114), 1);\n    }\n    if (unaff_ESI != 0) {\n        uVar1 = 0;\n        if (*(param_1 + 0x110) != 0) {\n            iVar2 = 0;\n            do {\n                *(*(param_1 + 0xb0) + 0x18 + iVar2) = 0;\n                uVar1 = uVar1 + 1;\n                iVar2 = iVar2 + 0x28;\n            } while (uVar1 < *(param_1 + 0x110));\n        }\n    }\n    (**0x4815d8)(*(param_1 + 0x20), 0, 1);\n    return;\n}\n",
        "token_count": 385
    },
    "0041c346": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c346(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    \n    pcVar3 = *0x481654;\n    if (*(in_ECX + 0x10c) == 0) {\n        *(in_ECX + 0x118) = *(in_ECX + 0x108);\n        (*pcVar3)(*(in_ECX + 0x20), 0);\n        iVar4 = *(**(in_ECX + 0x134) + 0x74);\n        uVar2 = *(iVar4 + 0x1e);\n        if ((0x7fff < uVar2) || (arg_8h = 1,  0x7fff < uVar2 - *(iVar4 + 0x1c))) {\n            arg_8h = 0;\n        }\n        (*pcVar3)(*(in_ECX + 0x20), 1, arg_8h);\n        if (arg_8h != 0) {\n            var_18h = 3;\n            var_14h = *(*(**(in_ECX + 0x134) + 0x74) + 0x1c);\n            var_10h = *(*(**(in_ECX + 0x134) + 0x74) + 0x1e);\n            var_ch = 1;\n            iVar4 = fcn.00411d41(1, &var_1ch, 0);\n            if (iVar4 == 0) {\n                fcn.004129d7(1, var_14h, var_10h, 0);\n            }\n        }\n        fcn.0041b879(*(in_ECX + 0x114), 1);\n    }\n    else {\n        iVar4 = *(in_ECX + 0xb0);\n        iVar5 = arg_8h * 0x28;\n        *(in_ECX + 0x118) = 1;\n        *(iVar4 + 0x20) = *(iVar4 + 0x20 + iVar5);\n        *(iVar4 + 0x24) = *(iVar4 + 0x24 + iVar5);\n        iVar4 = *(in_ECX + 0xb0);\n        *(iVar4 + 0x10) = *(iVar4 + 0x10 + iVar5);\n        *(iVar4 + 0x14) = *(iVar4 + 0x14 + iVar5);\n        fcn.0041b879(*(in_ECX + 0x114) + arg_8h, 0);\n        fcn.0041b5ae(0);\n        pcVar3 = *0x481434;\n        puVar1 = iVar5 + 0x18 + *(in_ECX + 0xb0);\n        iVar4 = (**0x481434)(arg_ch, *puVar1, puVar1[1]);\n        iVar5 = (*pcVar3)(arg_10h, *puVar1, puVar1[1]);\n        fcn.0041848e(iVar4 + **(in_ECX + 0xb0), iVar5 + (*(in_ECX + 0xb0))[1]);\n    }\n    return;\n}\n",
        "token_count": 789
    },
    "0041cbab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041cbab(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint unaff_EDI;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    for (iVar1 = (**(*in_ECX + 0x110))(0x418, 0, 0); iVar1 != 0; iVar1 = iVar1 + -1) {\n        (**(*in_ECX + 0x110))(0x416, 0, 0);\n    }\n    fcn.00451550(&var_18h, 0, 0x14);\n    var_8h = 0xffffffff;\n    if (arg_8h == NULL) {\n        iVar1 = 0;\n        var_10h._0_1_ = 4;\n        if (0 < arg_ch) {\n            do {\n                iVar3 = (**(*in_ECX + 0x110))(0x414, 1, &var_18h);\n                if (iVar3 == 0) goto code_r0x0041ccd8;\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < arg_ch);\n        }\n    }\n    else {\n        var_20h = 0;\n        var_1ch = 0;\n        if (0 < arg_ch) {\n            do {\n                var_14h = *arg_8h;\n                arg_8h = arg_8h + 1;\n                var_10h._0_1_ = 4;\n                if (var_14h == 0) {\n                    var_10h._1_1_ = 1;\n                    uVar2 = fcn.0040e0b4();\n                    if (((uVar2 & 0x800) == 0) && (*0x4a3d3c != 0x40047)) {\n                        var_18h = 8;\n                    }\n                    else {\n                        var_18h = 6;\n                    }\n                }\n                else {\n                    var_10h._1_1_ = 0;\n                    var_18h = var_20h;\n                    var_20h = var_20h + 1;\n                }\n                iVar1 = (**(*in_ECX + 0x110))(0x414, 1, &var_18h);\n                if (iVar1 == 0) goto code_r0x0041ccd8;\n                var_1ch = var_1ch + 1;\n            } while (var_1ch < arg_ch);\n        }\n    }\n    iVar1 = (**(*in_ECX + 0x110))(0x418, 0, 0);\n    in_ECX[0x1d] = iVar1;\n    in_ECX[0x28] = 1;\ncode_r0x0041ccd8:\n    fcn.004510f7(unaff_EDI);\n    return;\n}\n",
        "token_count": 742
    },
    "0041d81a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d81a(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint var_20h;\n    uint var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    if (arg_14h == 0) {\n        arg_14h = arg_10h;\n        var_4h = fcn.0041cdc9(arg_8h, arg_ch, arg_10h);\n        iVar1 = fcn.0041cdc9(arg_8h, arg_ch, 0);\n        if ((iVar1 != var_4h) && (0 < arg_10h)) {\n            do {\n                iVar1 = (arg_14h + iVar4) / 2;\n                iVar2 = fcn.0041cdc9(arg_8h, arg_ch, iVar1);\n                if ((iVar2 != var_4h) && (bVar5 = iVar4 == iVar1,  iVar4 = iVar1,  iVar1 = arg_14h,  bVar5)) {\n                    fcn.0041cdc9(arg_8h, arg_ch, arg_14h);\n                    break;\n                }\n                arg_14h = iVar1;\n            } while (iVar4 < arg_14h);\n        }\n        fcn.0041d6eb(&var_10h, arg_8h, arg_ch);\n        iVar1 = var_10h;\ncode_r0x0041d990:\n        fcn.0041cdc9(arg_8h, arg_ch, iVar1);\n    }\n    else {\n        fcn.0041cdc9(arg_8h, arg_ch, 0);\n        piVar3 = fcn.0041d6eb(&var_10h, arg_8h, arg_ch);\n        iVar4 = *piVar3;\n        var_4h = piVar3[1];\n        var_8h = iVar4;\n        fcn.0041cdc9(arg_8h, arg_ch, 0x7fff);\n        piVar3 = fcn.0041d6eb(&var_18h, arg_8h, arg_ch);\n        iVar1 = *piVar3;\n        var_ch = piVar3[1];\n        var_10h = iVar1;\n        if (iVar4 < iVar1) {\n            do {\n                fcn.0041cdc9(arg_8h, arg_ch, (iVar1 + iVar4) / 2);\n                piVar3 = fcn.0041d6eb(&var_18h, arg_8h, arg_ch);\n                iVar4 = piVar3[1];\n                if (arg_10h < iVar4) {\n                    iVar4 = fcn.0041cfb2(*piVar3, iVar4);\n                    if (iVar4 != 0) goto code_r0x0041d990;\n                    var_8h = *piVar3;\n                    var_4h = piVar3[1];\n                }\n                else {\n                    if (arg_10h <= iVar4) {\n                        return;\n                    }\n                    iVar4 = fcn.0041cfb2(*piVar3, iVar4);\n                    iVar1 = var_8h;\n                    if (iVar4 != 0) goto code_r0x0041d990;\n                    iVar1 = *piVar3;\n                    var_ch = piVar3[1];\n                    var_10h = iVar1;\n                }\n                iVar4 = var_8h;\n            } while (var_8h < iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 857
    },
    "0041db15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041db15(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (**0x4815b8)(&var_10h);\n    fcn.00433e4d(&var_10h, (*(in_ECX + 0x80) & 0xa000) != 0);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    if (*0x4a3d3c < 0x40047) {\n        arg_ch[1] = arg_ch[1] + -2;\n    }\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 225
    },
    "0041eb78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041eb78(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00455c13(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "0041ebc2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ebc2(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_EDI;\n    \n    iVar1 = arg_8h;\n    iVar4 = unaff_EDI;\n    if (-1 < arg_8h) goto code_r0x0041ebd5;\n    do {\n        fcn.00403bf2();\n        iVar4 = unaff_EDI;\ncode_r0x0041ebd5:\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == 0) {\n            if (*(in_ECX + 4) != 0) {\n                fcn.00403ac8(*(in_ECX + 4));\n                *(in_ECX + 4) = 0;\n            }\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            return;\n        }\n        if (*(in_ECX + 4) == 0) {\n            iVar3 = *(in_ECX + 0x10);\n            if (*(in_ECX + 0x10) < iVar1) {\n                iVar3 = iVar1;\n            }\n            uVar2 = fcn.00403a9d(iVar3 << 2, iVar4);\n            *(in_ECX + 4) = uVar2;\n            fcn.00451550(uVar2, 0, iVar3 << 2);\n            *(in_ECX + 0xc) = iVar3;\n            goto code_r0x0041ecf1;\n        }\n        unaff_EDI = *(in_ECX + 0xc);\n        if (iVar1 <= unaff_EDI) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00451550(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x0041ecf1;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\n                iVar3 = 4;\n            }\n            else if (0x400 < iVar3) {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + unaff_EDI;\n        if (iVar3 + unaff_EDI <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < unaff_EDI);\n    iVar4 = fcn.00403a9d(arg_8h << 2, iVar4);\n    fcn.00404383(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00451550(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.00403ac8(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar4;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0041ecf1:\n    *(in_ECX + 8) = iVar1;\n    return;\n}\n",
        "token_count": 831
    },
    "00420ac3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420ac3(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    \n    iVar2 = arg_8h;\n    if ((arg_8h == 0) || ((*(in_ECX + 0xf) & 4) == 0)) {\n        uVar3 = (**0x4817a0)(in_ECX[8]);\n        iVar4 = fcn.00413d94(uVar3);\n        if (iVar4 != 0) {\n            arg_8h = 0;\n            (**0x481744)(*(iVar4 + 0x20), &arg_8h);\n            iVar4 = (**0x481374)();\n            if (iVar4 == arg_8h) {\n                return;\n            }\n        }\n        pcVar1 = *0x48183c;\n        if (iVar2 == 0) {\n            if (in_ECX[0x2e] == 0) {\n                in_ECX[0xf] = in_ECX[0xf] | 0x80;\n                (**(*in_ECX + 0xf8))();\n            }\n        }\n        else {\n            if (in_ECX[0xf] < '\\0') {\n                in_ECX[0xf] = in_ECX[0xf] & 0xffffff7f;\n                (**(*in_ECX + 0xfc))();\n                arg_8h = in_ECX[8];\n                iVar4 = (**0x481770)();\n                if (iVar4 == arg_8h) {\n                    (*pcVar1)(arg_8h, 6, 1, 0);\n                }\n            }\n            if ((*(in_ECX + 0xf) & 0x20) != 0) {\n                (*pcVar1)(in_ECX[8], 0x86, 1, 0);\n            }\n        }\n        fcn.0041f197((-(iVar2 != 0) & 0xfffffff0) + 0x20);\n    }\n    else {\n        fcn.0040e235(0);\n        (**0x4816fc)(0);\n    }\n    return;\n}\n",
        "token_count": 501
    },
    "00420cb7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420cb7(uint param_1)\n\n{\n    fcn.00419c68();\n    fcn.0040c1da();\n    fcn.00422b14(param_1);\n    return;\n}\n",
        "token_count": 52
    },
    "00420cd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420cd4(uint param_1)\n\n{\n    fcn.00419c68();\n    fcn.0040c1da();\n    fcn.00422b2d(param_1);\n    return;\n}\n",
        "token_count": 53
    },
    "004219d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004219d5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_34h;\n    uint var_30h;\n    uint var_4h;\n    \n    fcn.0045116f(0x28);\n    iVar1 = *(unaff_EBP + 8);\n    uVar2 = fcn.00409b56();\n    fcn.0040231f(uVar2);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.0040e0b4();\n    if ((uVar3 & 0x4000) == 0) {\n        fcn.0040860c(extraout_ECX + 0xc4);\n        if (iVar1 != 0) {\n            fcn.00404bb1(0x485cf0);\n            fcn.00404bb1(iVar1);\n            if (0 < *(extraout_ECX + 0x58)) {\n                fcn.0045526a(unaff_EBP + -0x30, 0x20, 0x4837d4, *(extraout_ECX + 0x58));\n                fcn.00404bb1(unaff_EBP + -0x30);\n            }\n        }\n    }\n    else {\n        if (iVar1 != 0) {\n            fcn.00404bb1(iVar1);\n            if (0 < *(extraout_ECX + 0x58)) {\n                fcn.0045526a(unaff_EBP + -0x30, 0x20, 0x4837d4, *(extraout_ECX + 0x58));\n                fcn.00404bb1(unaff_EBP + -0x30);\n            }\n            fcn.00404bb1(0x485cf0);\n        }\n        fcn.0040860c(extraout_ECX + 0xc4);\n    }\n    fcn.00423f38(*(extraout_ECX + 0x20), *(unaff_EBP + -0x34));\n    fcn.00401fb6();\n    fcn.004511f2();\n    return;\n}\n",
        "token_count": 524
    },
    "00421ecd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421ecd(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (**0x4815b8)(&var_10h);\n    fcn.00433e4d(&var_10h, 1);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch + -2;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 165
    },
    "00421f9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421f9a(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_EDI;\n    \n    iVar1 = arg_8h;\n    iVar4 = unaff_EDI;\n    if (-1 < arg_8h) goto code_r0x00421fad;\n    do {\n        fcn.00403bf2();\n        iVar4 = unaff_EDI;\ncode_r0x00421fad:\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == 0) {\n            if (*(in_ECX + 4) != 0) {\n                fcn.00403ac8(*(in_ECX + 4));\n                *(in_ECX + 4) = 0;\n            }\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            return;\n        }\n        if (*(in_ECX + 4) == 0) {\n            iVar3 = *(in_ECX + 0x10);\n            if (*(in_ECX + 0x10) < iVar1) {\n                iVar3 = iVar1;\n            }\n            uVar2 = fcn.00403a9d(iVar3 << 2, iVar4);\n            *(in_ECX + 4) = uVar2;\n            fcn.00451550(uVar2, 0, iVar3 << 2);\n            *(in_ECX + 0xc) = iVar3;\n            goto code_r0x004220c9;\n        }\n        unaff_EDI = *(in_ECX + 0xc);\n        if (iVar1 <= unaff_EDI) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00451550(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x004220c9;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\n                iVar3 = 4;\n            }\n            else if (0x400 < iVar3) {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + unaff_EDI;\n        if (iVar3 + unaff_EDI <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < unaff_EDI);\n    iVar4 = fcn.00403a9d(arg_8h << 2, iVar4);\n    fcn.00404383(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00451550(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.00403ac8(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar4;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x004220c9:\n    *(in_ECX + 8) = iVar1;\n    return;\n}\n",
        "token_count": 824
    },
    "004222b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004222b3(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < *(param_1 + 0x74)) {\n        do {\n            fcn.0042226d();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 0x74));\n    }\n    iVar2 = fcn.00433c30(param_2, param_3);\n    if (iVar2 != 0) {\n        iVar2 = 0;\n        if (0 < *(param_1 + 0x74)) {\n            iVar1 = *(param_1 + 0x78) + 0x10;\n            do {\n                if (iVar1 != 0) {\n                    fcn.00402395();\n                }\n                iVar1 = iVar1 + 0x14;\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < *(param_1 + 0x74));\n        }\n        iVar2 = 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 262
    },
    "00422d6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00422d6b(uint arg_8h, uint arg_ch)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint *extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint uVar5;\n    uint *puVar6;\n    uint var_4h;\n    \n    fcn.00451139(0x10);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    puVar6 = extraout_ECX + 7;\n    *(unaff_EBP + -0x14) = puVar6;\n    (**0x481348)(puVar6);\n    if ((*(unaff_EBP + 8) < 1) || (extraout_ECX[3] <= *(unaff_EBP + 8))) goto code_r0x00422e92;\n    ppcVar1 = (**0x48134c)(*extraout_ECX);\n    if (ppcVar1 == NULL) {\n        *(unaff_EBP + -4) = 0;\n        ppcVar1 = fcn.00422997(0x10);\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            *ppcVar1 = vtable.CThreadData.0;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        ppcVar1[2] = NULL;\n        ppcVar1[3] = NULL;\n        fcn.00422b14(ppcVar1);\ncode_r0x00422dc2:\n        if (ppcVar1[3] == NULL) {\n            uVar2 = fcn.00401314(extraout_ECX[3], 4);\n            pcVar3 = (**0x481354)(0, uVar2);\n        }\n        else {\n            uVar5 = 2;\n            uVar2 = fcn.00401314(extraout_ECX[3], 4);\n            pcVar3 = (**0x481330)(ppcVar1[3], uVar2, uVar5);\n        }\n        if (pcVar3 == NULL) {\n            (**0x481350)(*(unaff_EBP + -0x14));\n            pcVar3 = fcn.00403bbe();\n        }\n        ppcVar1[3] = pcVar3;\n        fcn.00451550(pcVar3 + ppcVar1[2] * 4, 0, (extraout_ECX[3] - ppcVar1[2]) * 4);\n        ppcVar1[2] = extraout_ECX[3];\n        (**0x481334)(*extraout_ECX, ppcVar1);\n        iVar4 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar4 = *(unaff_EBP + 8);\n        if ((ppcVar1[2] <= iVar4) && (*(unaff_EBP + 0xc) != 0)) goto code_r0x00422dc2;\n    }\n    if ((ppcVar1[3] != NULL) && (iVar4 < ppcVar1[2])) {\n        *(ppcVar1[3] + iVar4 * 4) = *(unaff_EBP + 0xc);\n    }\n    puVar6 = *(unaff_EBP + -0x14);\ncode_r0x00422e92:\n    (**0x481350)(puVar6);\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 849
    },
    "004236c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004236c5(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.004234da(param_1);\n    *param_1 = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00423588(unaff_retaddr);\n        *param_1 = iVar1;\n        iVar1 = (-(iVar1 != 0) & 0x7fffbffe) + 0x80004002;\n    }\n    else {\n        fcn.0042363f();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 150
    },
    "00423b57": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00423b57(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.0042396d(arg_8h, &arg_8h, &var_4h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.004238cf(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.00423b09();\n        puVar2[1] = iVar1;\n        *puVar2 = *(arg_8h * 4 + *(in_ECX + 4));\n        *(arg_8h * 4 + *(in_ECX + 4)) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 216
    },
    "00423f38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423f38(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uchar var_104h;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    if (arg_8h != 0) goto code_r0x00423f5d;\n    do {\n        fcn.00403bf2();\ncode_r0x00423f5d:\n    } while (arg_ch == 0);\n    uVar1 = (**0x48145c)(arg_ch);\n    var_104h = 0;\n    fcn.00451550(&var_103h, 0, 0xff);\n    if (uVar1 < 0x101) {\n        uVar2 = (**0x4816f0)(arg_8h, &var_104h, 0x100);\n        if (uVar2 == uVar1) {\n            iVar3 = (**0x4813a8)(&var_104h, arg_ch);\n            if (iVar3 == 0) goto code_r0x00423fbd;\n        }\n    }\n    (**0x481714)(arg_8h, arg_ch);\ncode_r0x00423fbd:\n    fcn.004510f7(unaff_EBX);\n    return;\n}\n",
        "token_count": 337
    },
    "00424070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424070(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint uVar3;\n    uint *arg_8h_00;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    if (arg_ch == NULL) {\n        fcn.00403bf2();\n    }\n    arg_8h_00 = &var_104h;\n    iVar1 = fcn.00409992(arg_8h, arg_8h_00, 0x100);\n    if (iVar1 != 0) {\n        puVar2 = fcn.004550a0(&var_104h, 10);\n        if (puVar2 != NULL) {\n            uVar3 = fcn.00455fb9(puVar2 + 1);\n            *arg_ch = uVar3;\n            uVar3 = (**0x481434)(uVar3, *0x4a8374, 0x48);\n            *arg_ch = uVar3;\n            *puVar2 = 0;\n        }\n        uVar3 = fcn.00451895(arg_ch + 7, 0x20, &var_104h, 0xffffffff);\n        fcn.00401000(uVar3);\n    }\n    fcn.004510f7(arg_8h_00);\n    return;\n}\n",
        "token_count": 332
    },
    "00424835": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424835(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (**0x4811d4)(*(in_ECX + 4), arg_18h);\n    var_10h = arg_8h;\n    var_8h = arg_8h + arg_10h;\n    var_ch = arg_ch;\n    var_4h = arg_ch + arg_14h;\n    (**0x481164)(*(in_ECX + 4), 0, 0, 2, &var_10h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 203
    },
    "00424881": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424881(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.00424835(arg_8h, arg_ch, arg_10h + -1, 1, arg_18h);\n    fcn.00424835(arg_8h, arg_ch, 1, arg_14h + -1, arg_18h);\n    fcn.00424835(arg_8h + arg_10h, arg_ch, 0xffffffff, arg_14h, arg_1ch);\n    fcn.00424835(arg_8h, arg_ch + arg_14h, arg_10h, 0xffffffff, arg_1ch);\n    return;\n}\n",
        "token_count": 195
    },
    "004249ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004249ca(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint unaff_ESI;\n    uint var_40h;\n    uint var_29h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    fcn.00451550(&var_40h, 0, 0x3c);\n    var_40h = arg_8h;\n    var_29h._0_1_ = 1;\n    uVar1 = fcn.00451895(&var_24h, 0x20, arg_ch, 0xffffffff);\n    fcn.00401000(uVar1);\n    fcn.004248eb(&var_40h, arg_10h);\n    fcn.004510f7(unaff_ESI);\n    return;\n}\n",
        "token_count": 223
    },
    "00424f1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00424f1a(void)\n\n{\n    int32_t iVar1;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.00424ed4(auStack36);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(iVar1 + 0x14) + 0x76c;\n    }\n    return iVar1;\n}\n",
        "token_count": 97
    },
    "00424f3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00424f3a(void)\n\n{\n    int32_t iVar1;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.00424ed4(auStack36);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(iVar1 + 0x10) + 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 94
    },
    "00424f56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00424f56(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.00424ed4(auStack36);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(iVar1 + 0xc);\n    }\n    return uVar2;\n}\n",
        "token_count": 95
    },
    "00424f71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00424f71(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.00424ed4(auStack36);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = *(iVar1 + 8);\n    }\n    return uVar2;\n}\n",
        "token_count": 95
    },
    "00424f8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00424f8d(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.00424ed4(auStack36);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = *(iVar1 + 4);\n    }\n    return uVar2;\n}\n",
        "token_count": 96
    },
    "00424fa9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00424fa9(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    puVar1 = fcn.00424ed4(auStack36);\n    if (puVar1 == NULL) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = *puVar1;\n    }\n    return uVar2;\n}\n",
        "token_count": 94
    },
    "00425775": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00425775(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    uVar1 = fcn.00409b56();\n    fcn.0040231f(uVar1);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.004024df(*(unaff_EBP + 0xc));\n    if (iVar2 != 0) {\n        fcn.00425633(*(unaff_EBP + 8), *(unaff_EBP + -0x10), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    fcn.00401fb6();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 253
    },
    "004259c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004259c8(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0045128b(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "004265e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004265e8(uint32_t param_1)\n\n{\n    if (0x10 < param_1) {\n        param_1 = fcn.00403bf2();\n    }\n    (**0x481350)(param_1 * 0x18 + 0x4a83c0);\n    return;\n}\n",
        "token_count": 73
    },
    "00426ca6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426ca6(uint param_1)\n\n{\n    fcn.00451550(param_1, 0, 0x10);\n    return;\n}\n",
        "token_count": 38
    },
    "0042703c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042703c(int16_t *arg_8h, ulong *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ah;\n    int16_t var_6h;\n    int16_t var_4h;\n    \n    if (arg_ch == NULL) {\n        fcn.00401103(0x80004005);\n    }\n    iVar1 = (**0x4814c8)(arg_8h, arg_ch);\n    fcn.00451550(&var_10h, 0, 0x10);\n    if (((((iVar1 != 0) && (iVar1 = (**0x4814cc)(*arg_ch, &var_10h),  iVar1 != 0)) && (*arg_8h == var_10h)) &&\n        ((arg_8h[1] == var_10h._2_2_ && (arg_8h[3] == var_ah)))) &&\n       ((arg_8h[4] == var_ah._2_2_ && ((arg_8h[5] == var_6h && (arg_8h[6] == var_4h)))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 288
    },
    "004272fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004272fd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ah;\n    ushort var_6h;\n    ushort var_4h;\n    \n    fcn.00451550(&var_10h, 0, 0x10);\n    var_10h._0_2_ = arg_8h;\n    var_10h._2_2_ = arg_ch;\n    var_ah._0_2_ = arg_10h;\n    var_ah._2_2_ = arg_14h;\n    var_6h = arg_18h;\n    var_4h = arg_1ch;\n    iVar1 = fcn.0042703c(&var_10h, in_ECX);\n    *(in_ECX + 8) = iVar1 == 0;\n    return;\n}\n",
        "token_count": 242
    },
    "004273c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004273c0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = (**0x481518)(arg_8h, &var_4h);\n    fcn.004266e2(uVar1);\n    fcn.00404383(var_4h, arg_10h, arg_ch, arg_10h);\n    uVar1 = (**0x48151c)(arg_8h);\n    fcn.004266e2(uVar1);\n    return;\n}\n",
        "token_count": 134
    },
    "00427d51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00427d51(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00451106(0);\n    pcVar1 = *0x4814a0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -4) = 0;\n    uVar2 = (*pcVar1)(arg_8h_00);\n    fcn.00425d34(uVar2);\n    iVar3 = (*pcVar1)(arg_8h_00);\n    if (iVar3 != 0) {\n        iVar3 = (*pcVar1)(arg_8h_00);\n        fcn.00426074(arg_8h_00, iVar3 * 2);\n    }\n    (**0x481534)(arg_8h_00);\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 258
    },
    "00427dfe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00427dfe(uint32_t *param_1, int32_t *param_2, uint32_t *param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar1 = param_1[2];\n    iVar4 = 2;\n    param_2[1] = 0;\n    *param_2 = 0;\n    param_2[2] = 0;\n    if ((((uVar1 != 2) && (param_3[2] != 2)) && (iVar4 = 1,  uVar1 != 1)) && (param_3[2] != 1)) {\n        uVar3 = param_3[1] + param_1[1] + CARRY4(*param_3, *param_1);\n        uVar1 = param_1[1];\n        *param_2 = *param_3 + *param_1;\n        uVar2 = param_3[1];\n        param_2[1] = uVar3;\n        if (((uVar2 ^ uVar1) & 0x80000000) != 0) {\n            return;\n        }\n        if (((uVar3 ^ uVar1) & 0x80000000) == 0) {\n            return;\n        }\n    }\n    param_2[2] = iVar4;\n    return;\n}\n",
        "token_count": 326
    },
    "0042834f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0042834f(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint arg_14h;\n    int32_t iVar2;\n    uchar *arg_8h_00;\n    int32_t iVar3;\n    ulong *in_ECX;\n    uint unaff_EDI;\n    int32_t noname_1;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    arg_14h = (**0x4a66d0)();\n    var_8h = 0;\n    if (arg_8h == 0) {\n        arg_8h = 0x482460;\n    }\n    arg_8h_00 = &stack0xffffffdc;\n    noname_1 = arg_8h;\n    var_ch = (**0x48145c)();\n    var_ch = var_ch + 1;\n    iVar2 = fcn.00401031(&var_ch, var_ch, 2);\n    iVar3 = var_ch;\n    if (iVar2 < 0) {\ncode_r0x004283d4:\n        *(in_ECX + 1) = 1;\n        *in_ECX = 0;\n    }\n    else {\n        if ((var_ch < 0x401) && (cVar1 = fcn.004013b6(var_ch, noname_1, unaff_EDI),  cVar1 != '\\0')) {\n            fcn.00450c70();\n        }\n        else {\n            arg_8h_00 = fcn.00401533(iVar3);\n        }\n        iVar3 = fcn.00401094(arg_8h_00, arg_8h, iVar3, arg_14h);\n        if (iVar3 == 0) goto code_r0x004283d4;\n        iVar3 = (**0x4814c0)(iVar3, arg_10h, arg_ch);\n        if (-1 < iVar3) {\n            *(in_ECX + 1) = 0;\ncode_r0x0042842e:\n            fcn.0040127a();\n            goto code_r0x004283e9;\n        }\n        if (iVar3 == -0x7ffdfffb) goto code_r0x004283d4;\n        *in_ECX = *0x4862d0;\n        *(in_ECX + 1) = 1;\n        if (iVar3 != -0x7ffdfff6) goto code_r0x0042842e;\n    }\n    fcn.0040127a();\ncode_r0x004283e9:\n    fcn.004510f7(arg_14h);\n    return;\n}\n",
        "token_count": 666
    },
    "00428663": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00428663(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint16_t uVar2;\n    uint *puVar3;\n    code **ppcVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    uint16_t *puVar8;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.004511a5(0x30);\n    puVar8 = *(unaff_EBP + 0xc);\n    uVar6 = *(unaff_EBP + 8);\n    uVar2 = *puVar8;\n    *(unaff_EBP + -0x28) = uVar6;\n    *(unaff_EBP + -0x30) = puVar8;\n    if (uVar2 != 0) {\n        (**0x48152c)(puVar8);\n    }\n    fcn.00425df4(puVar8);\n    if ((*puVar8 & 0x6000) != 0) goto code_r0x00428765;\n    // switch table (22 cases) at 0x428873\n    switch(*puVar8) {\n    case 2:\n    case 0xb:\n    case 0x12:\n        fcn.00425df4(puVar8 + 4);\n        break;\n    case 3:\n    case 10:\n        puVar8 = puVar8 + 4;\n        goto code_r0x004286d4;\n    case 4:\n        fcn.00427c68(puVar8 + 4);\n        break;\n    case 5:\n    case 7:\n        fcn.00427caa(puVar8 + 4);\n        break;\n    case 6:\n        fcn.00425e37(puVar8 + 4);\n        puVar8 = puVar8 + 6;\ncode_r0x004286d4:\n        fcn.00427cec(puVar8);\n        break;\n    case 8:\n        fcn.00425e37(unaff_EBP + -0x28);\n        if (*(unaff_EBP + -0x28) == 0) {\n            *(puVar8 + 4) = 0;\n        }\n        else {\n            iVar7 = (**0x481530)(0, *(unaff_EBP + -0x28));\n            *(puVar8 + 4) = iVar7;\n            if (iVar7 == 0) {\n                iVar7 = fcn.00403bbe();\n            }\n            fcn.00420597(iVar7, *(unaff_EBP + -0x28));\n        }\n        break;\n    case 9:\n    case 0xd:\n        *(unaff_EBP + -0x2c) = 0;\n        fcn.0043a1de(uVar6);\n        fcn.00425e37(unaff_EBP + -0x24);\n        fcn.00425df4(unaff_EBP + -0x20);\n        fcn.00425df4(unaff_EBP + -0x1e);\n        fcn.00420597(unaff_EBP + -0x1c, 8);\n        pcVar5 = *0x481958;\n        uVar6 = 0x48f430;\n        if (*puVar8 != 0xd) {\n            uVar6 = 0x48f3c0;\n        }\n        puVar1 = puVar8 + 4;\n        iVar7 = (**0x481958)(unaff_EBP + -0x24, 0, 0x17, uVar6, puVar1);\n        if (iVar7 == -0x7ff8ffa9) {\n            uVar6 = 0x48f430;\n            if (*puVar8 != 0xd) {\n                uVar6 = 0x48f3c0;\n            }\n            iVar7 = (*pcVar5)(unaff_EBP + -0x24, 0, 7, uVar6, puVar1);\n        }\n        fcn.004266e2(iVar7);\n        puVar3 = *puVar1;\n        ppcVar4 = *puVar3;\n        *(unaff_EBP + -4) = 0;\n        iVar7 = (**ppcVar4)(puVar3, 0x48f8d0, unaff_EBP + -0x2c);\n        if (iVar7 < 0) {\n            iVar7 = (****puVar1)(*puVar1, 0x4909f0, unaff_EBP + -0x2c);\n        }\n        fcn.004266e2(iVar7);\n        uVar6 = (**(**(unaff_EBP + -0x2c) + 0x14))(*(unaff_EBP + -0x2c), unaff_EBP + -0x38);\n        fcn.004266e2(uVar6);\n        iVar7 = **(unaff_EBP + -0x2c);\n        *(unaff_EBP + -4) = 0xffffffff;\n        (**(iVar7 + 8))(*(unaff_EBP + -0x2c));\n        break;\n    case 0x10:\n    case 0x11:\n        fcn.00425d6d(puVar8 + 4);\n        break;\n    case 0x13:\n        fcn.00425e37(puVar8 + 4);\n        break;\n    case 0x14:\n        fcn.00427c20(puVar8 + 4);\n        break;\n    case 0x15:\n        fcn.00425dac(puVar8 + 4);\n    }\ncode_r0x00428765:\n    fcn.00451201();\n    return;\n}\n",
        "token_count": 1438
    },
    "00428c2e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00428c2e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uint *in_ECX;\n    \n    puVar1 = fcn.0040555a(arg_8h);\n    arg_8h_00 = (**0x4814b0)(*puVar1, arg_10h, arg_ch);\n    fcn.00401fb6();\n    uVar2 = 0;\n    if (arg_8h_00 < 0) {\n        if (arg_8h_00 == -0x7ffdfffb) {\n            in_ECX[1] = 0;\n        }\n        else {\n            if (arg_8h_00 != -0x7ffdfff6) {\n                if (arg_8h_00 == -0x7ff8fff2) {\n                    fcn.00403bbe();\n                }\n                uVar2 = fcn.00404470(arg_8h_00);\n                goto code_r0x00428c9f;\n            }\n            in_ECX[1] = 0x80000000;\n        }\n        *in_ECX = 0;\n        in_ECX[2] = 1;\n        uVar2 = 0;\n    }\n    else {\ncode_r0x00428c9f:\n        in_ECX[2] = uVar2;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 342
    },
    "004295ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004295ae(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    fcn.004500d5(*(param_1 + 0x54));\n    uVar1 = fcn.0045587b(param_2);\n    *(param_1 + 0x54) = uVar1;\n    fcn.004500d5(*(param_1 + 0x68));\n    uVar1 = fcn.0045587b(*(param_1 + 0x50));\n    *(param_1 + 0x68) = uVar1;\n    return;\n}\n",
        "token_count": 141
    },
    "0042a52b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a52b(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00419c68();\n    (**0x481324)(iVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 53
    },
    "0042a737": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_110h\n\nvoid __cdecl fcn.0042a737(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uchar *puVar2;\n    uint var_110h;\n    uint var_10ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.0045587b(arg_8h);\n    if (arg_8h_00 != 0) {\n        iVar1 = (**0x48145c)(arg_8h_00);\n        puVar2 = iVar1 + arg_8h_00;\n        while (puVar2 != NULL) {\n            *puVar2 = 0;\n            fcn.00456a8a(arg_8h_00, puVar2);\n            iVar1 = (**0x481028)(0x80000000, arg_8h_00, &var_110h);\n            if (iVar1 != 0) break;\n            iVar1 = (**0x481010)(var_110h, 0, &var_10ch, 0x105);\n            (**0x481030)(var_110h);\n            if (iVar1 == 0) break;\n            (**0x481014)(0x80000000, arg_8h_00);\n            puVar2 = fcn.004569e0(arg_8h_00, 0x5c);\n        }\n        fcn.004500d5(arg_8h_00);\n    }\n    fcn.004510f7(var_110h);\n    return;\n}\n",
        "token_count": 382
    },
    "0042acc2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0042acc2(int32_t *param_1, uchar param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if (((-1 < param_3) && (param_3 < *(*param_1 + -0xc))) &&\n       (iVar1 = fcn.004550a0(*param_1 + param_3, param_2),  iVar1 != 0)) {\n        return iVar1 - *param_1;\n    }\n    return -1;\n}\n",
        "token_count": 120
    },
    "0042ae86": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042ae86(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    if (arg_ch < iVar2) {\n        uVar3 = fcn.00408297();\n        fcn.004082ba((iVar1 - arg_ch) + iVar2, arg_ch, uVar3);\n    }\n    else {\n        fcn.004081e0();\n    }\n    return arg_8h;\n}\n",
        "token_count": 172
    },
    "0042c742": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042c742(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.0042c6c0(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.00403bf2();\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 224
    },
    "0042ce96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ce96(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (*(param_1 + 2) == -1) {\n        piVar2 = param_1 + 0x1a;\n    }\n    else {\n        piVar2 = param_1 + 0x12;\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 251
    },
    "0042dc04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0042dc04(uint arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = *(in_ECX + 0x80);\n    if (arg_8h_00 != 0) {\n        puVar1 = (**0x481480)(arg_8h_00, 0);\n        arg_8h_00 = *puVar1 + puVar1;\n    }\n    fcn.004050cb(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 164
    },
    "0042dc35": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0042dc35(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = *(in_ECX + 0x80);\n    if (iVar1 != 0) {\n        iVar1 = (**0x481480)(iVar1, 0);\n        iVar1 = *(iVar1 + 2) + iVar1;\n    }\n    fcn.004050cb(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 133
    },
    "0042dc67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0042dc67(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = *(in_ECX + 0x80);\n    if (iVar1 != 0) {\n        iVar1 = (**0x481480)(iVar1, 0);\n        iVar1 = *(iVar1 + 4) + iVar1;\n    }\n    fcn.004050cb(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 133
    },
    "0042dc99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0042dc99(uint arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = *(*(in_ECX + 0x74) + 0xc);\n    if (arg_8h_00 != 0) {\n        puVar1 = (**0x481480)(arg_8h_00, 0);\n        arg_8h_00 = *puVar1 + puVar1;\n    }\n    fcn.004050cb(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 170
    },
    "0042dcca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0042dcca(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = *(*(in_ECX + 0x74) + 0xc);\n    if (iVar1 != 0) {\n        iVar1 = (**0x481480)(iVar1, 0);\n        iVar1 = *(iVar1 + 2) + iVar1;\n    }\n    fcn.004050cb(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 139
    },
    "0042dcfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0042dcfc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = *(*(in_ECX + 0x74) + 0xc);\n    if (iVar1 != 0) {\n        iVar1 = (**0x481480)(iVar1, 0);\n        iVar1 = *(iVar1 + 4) + iVar1;\n    }\n    fcn.004050cb(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 139
    },
    "0042dd2e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0042dd2e(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(0xc);\n    fcn.00419c68();\n    fcn.0042657b(1);\n    *(unaff_EBP + -0x14) = 0;\n    fcn.00408ff8(unaff_EBP + -0x10, 0x486ae0, unaff_EBP + -0x14);\n    *(unaff_EBP + -4) = 0;\n    while (*(*(unaff_EBP + -0x10) + -0xc) != 0) {\n        iVar1 = fcn.00419c68();\n        (**0x4817d4)(*(unaff_EBP + -0x10), *(iVar1 + 8));\n        uVar2 = fcn.00408ff8(unaff_EBP + -0x18, 0x486ae0, unaff_EBP + -0x14);\n        *(unaff_EBP + -4) = 1;\n        fcn.004085ac(uVar2);\n        *(unaff_EBP + -4) = 0;\n        fcn.00401fb6();\n    }\n    fcn.00402193();\n    fcn.004265e8(1);\n    fcn.00401fb6();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 416
    },
    "0042de7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042de7e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00456a9d(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 145
    },
    "0042deac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042deac(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00456cbe(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 108
    },
    "00432551": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00432551(code **param_1)\n\n{\n    code *pcVar1;\n    \n    fcn.0042102d();\n    *param_1 = vtable.COleIPFrameWnd.0;\n    fcn.00451550(param_1 + 0x36, 0, 0x14);\n    param_1[0x36] = 0x14;\n    pcVar1 = *0x4815b8;\n    param_1[0x35] = NULL;\n    param_1[0x3b] = NULL;\n    param_1[0x3c] = NULL;\n    param_1[0x46] = NULL;\n    (*pcVar1)(param_1 + 0x47);\n    (*pcVar1)(param_1 + 0x4b);\n    param_1[0x4f] = NULL;\n    param_1[0x3f] = NULL;\n    param_1[0x3d] = NULL;\n    param_1[0x3e] = NULL;\n    param_1[0x50] = NULL;\n    param_1[0x51] = NULL;\n    return param_1;\n}\n",
        "token_count": 267
    },
    "004326a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004326a4(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *in_ECX;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = (**(*in_ECX + 0x13c))();\n    if (iVar1 != 0) {\n        (**0x48166c)(&var_10h, arg_ch);\n        uVar2 = (**0x4817a0)(in_ECX[8]);\n        fcn.00413d94(uVar2);\n        fcn.004064fa(&var_10h);\n        fcn.004064be(&var_10h);\n        piVar3 = fcn.0040df4b(0xe900);\n        var_20h = in_ECX[0x47];\n        var_1ch = in_ECX[0x48];\n        var_18h = in_ECX[0x49];\n        var_14h = in_ECX[0x4a];\n        (**(*piVar3 + 0x68))(&var_20h, 1);\n        var_10h = var_10h + (in_ECX[0x47] - var_20h);\n        var_ch = var_ch + (in_ECX[0x48] - var_1ch);\n        var_8h = var_8h + (in_ECX[0x49] - var_18h);\n        var_4h = var_4h + (in_ECX[0x4a] - var_14h);\n        (**(*in_ECX + 400))(&var_10h);\n    }\n    return 0;\n}\n",
        "token_count": 446
    },
    "00432a72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432a72(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar8 = arg_ch * arg_10h;\n    iVar4 = iVar8 >> 0x20;\n    iVar1 = iVar8;\n    iVar7 = arg_14h * arg_18h;\n    iVar5 = iVar7 >> 0x20;\n    iVar9 = iVar8;\n    if ((iVar4 == 0 || iVar8 < 0) && (iVar8 < 0)) {\n        iVar9 = CONCAT44(-(iVar4 + (iVar1 != 0)), -iVar1);\n    }\n    iVar6 = 0;\n    while (iVar9 != 0) {\n        iVar9 = fcn.00456dd0();\n        iVar6 = iVar6 + 1;\n    }\n    iVar2 = arg_8h;\n    if (arg_8h < 0) {\n        iVar2 = -arg_8h;\n    }\n    arg_ch = 0;\n    iVar9 = iVar2;\n    while (iVar9 != 0) {\n        iVar9 = fcn.00456dd0();\n        arg_ch = arg_ch + 1;\n    }\n    iVar6 = iVar6 + arg_ch;\n    if ((iVar5 == 0 || iVar7 < 0) && (iVar7 < 0)) {\n        iVar7 = CONCAT44(-(iVar5 + (iVar7 != 0)), -iVar7);\n        iVar8 = CONCAT44(-(iVar4 + (iVar1 != 0)), -iVar1);\n    }\n    while (0x1f < iVar6) {\n        iVar8 = fcn.00456dd0();\n        iVar7 = fcn.00456dd0();\n        iVar1 = iVar6 + -2;\n        if (iVar6 + -1 < 0x20) break;\n        iVar8 = fcn.00456dd0();\n        iVar7 = fcn.00456dd0();\n        iVar6 = iVar6 + -3;\n        if (iVar1 < 0x20) break;\n        arg_8h = arg_8h >> 1;\n        iVar7 = fcn.00456dd0();\n    }\n    iVar8 = fcn.004523c0(arg_8h, arg_8h >> 0x1f, iVar8);\n    if (iVar7 == 0) {\n        if ((iVar8 < 0x100000000) && (iVar8 < 0)) {\n            uVar3 = 0x80000000;\n        }\n        else {\n            uVar3 = 0x7fffffff;\n        }\n    }\n    else {\n        iVar9 = fcn.004567e0(iVar7, 2, 0);\n        uVar3 = fcn.004567e0(iVar9 + iVar8, iVar7);\n    }\n    return uVar3;\n}\n",
        "token_count": 724
    },
    "00432ccd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00432ccd(int32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t extraout_EDX;\n    \n    uVar1 = 0;\n    if (arg_18h == 0) {\n        fcn.00403bf2();\n        uVar1 = extraout_EDX;\n    }\n    arg_8h = arg_8h - arg_14h;\n    do {\n        if (arg_ch <= uVar1) {\n            arg_18h = (arg_8h / arg_18h + 1) * arg_18h;\ncode_r0x00432d00:\n            return arg_18h + arg_14h;\n        }\n        if (*arg_10h != arg_8h && arg_8h <= *arg_10h) {\n            arg_18h = *arg_10h;\n            goto code_r0x00432d00;\n        }\n        uVar1 = uVar1 + 1;\n        arg_10h = arg_10h + 1;\n    } while( true );\n}\n",
        "token_count": 273
    },
    "00433908": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433908(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = *0x4811ec;\n    var_8h = param_1;\n    var_4h = param_1;\n    iVar2 = (**0x4811ec)(*(param_1 + 8), 10);\n    var_8h = (*pcVar1)(*(param_1 + 8), 8);\n    var_4h = iVar2;\n    fcn.00433632(&var_8h);\n    (**0x4811b4)(*(param_1 + 4), 1);\n    (**0x481148)(*(param_1 + 4), 0, 0, 0);\n    (**0x481158)(*(param_1 + 4), *(param_1 + 0x20), *(param_1 + 0x24), 0);\n    (**0x4811a8)(*(param_1 + 4), 0xffffffff, 0xffffffff, var_8h + 2, var_4h + 2);\n    fcn.0043380c(0);\n    return;\n}\n",
        "token_count": 287
    },
    "004353b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004353b4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x004353ca;\n    do {\n        fcn.00403bf2();\ncode_r0x004353ca:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.00403ac8(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x004354ce;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.00403a9d(iVar1 << 2);\n            *(in_ECX + 4) = uVar2;\n            fcn.00451550(uVar2, 0, iVar1 << 2);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x00435436:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00451550(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x00435436;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x00435468:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x00435468;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.00403a9d(arg_8h << 2);\n    fcn.00404383(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00451550(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.00403ac8(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x004354ce:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 768
    },
    "004355c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004355c3(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.004353b4(iVar1 + arg_10h, 0xffffffff);\n            fcn.004259c8(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, ((*(in_ECX + 8) - arg_8h) - arg_10h) * 4, \n                         *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.00451550(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.004353b4(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.00403bf2();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 389
    },
    "00435c2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435c2c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    uint var_34h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_1ch;\n    \n    fcn.00451550(&var_34h, 0, 0x34);\n    var_2ch = arg_ch;\n    var_1ch = arg_14h;\n    var_20h = arg_10h;\n    (**0x48183c)(*(in_ECX + 0x20), 0x102d, arg_8h, &var_34h);\n    return;\n}\n",
        "token_count": 163
    },
    "00435c71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435c71(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_34h;\n    uint var_30h;\n    uint var_14h;\n    \n    fcn.00451550(&var_34h, 0, 0x34);\n    var_30h = arg_8h;\n    var_34h = 4;\n    (**0x48183c)(*(in_ECX + 0x20), 0x1005, 0, &var_34h);\n    return var_14h;\n}\n",
        "token_count": 130
    },
    "0043802a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043802a(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    param_1[2] = param_4 + param_2;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    param_1[3] = param_5 + param_3;\n    return;\n}\n",
        "token_count": 107
    },
    "0043823f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043823f(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (**0x4815b8)(&var_10h);\n    (**(*in_ECX + 0x140))(&var_10h, in_ECX[0x20] & 0xa000);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 186
    },
    "004382c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004382c9(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00438073(param_1);\n    return -(0xffff < uVar1) & uVar1;\n}\n",
        "token_count": 57
    },
    "004382e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004382e8(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint noname_3, uint noname_4, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = 0;\n    if (in_ECX != 0) goto code_r0x004382fe;\n    do {\n        iVar1 = fcn.00403bf2();\ncode_r0x004382fe:\n    } while (arg_8h == iVar1);\n    uVar4 = *(in_ECX + 0x80) & 0xa000;\n    var_10h = iVar1;\n    var_ch = iVar1;\n    var_8h = iVar1;\n    var_4h = iVar1;\n    if (*(in_ECX + 0xa0) != iVar1 && iVar1 <= *(in_ECX + 0xa0)) {\n        do {\n            iVar1 = var_4h;\n            piVar2 = fcn.004382c9();\n            if ((piVar2 == NULL) || (iVar3 = (**(*piVar2 + 0x154))(),  iVar3 == 0)) {\n                var_10h = var_10h + (var_8h - *0x4a836c);\n                var_8h = 0;\n                iVar1 = arg_20h;\n                if (uVar4 == 0) {\n                    iVar1 = arg_1ch;\n                }\n                if (iVar1 < var_10h) {\n                    if (var_4h == 0) {\n                        fcn.00444cd8(var_ch + 1, 0, 1);\n                    }\n                    iVar3 = var_ch + 1;\n                    goto code_r0x004383fa;\n                }\ncode_r0x004383c9:\n                var_ch = var_4h;\n            }\n            else {\n                (**0x48169c)(piVar2[8], &var_20h, iVar1);\n                fcn.004064be(&var_20h);\n                if (uVar4 == 0) {\n                    iVar1 = (var_18h - var_20h) + -1;\n                }\n                else {\n                    iVar1 = var_14h - var_1ch;\n                }\n                if (var_8h <= iVar1) {\n                    if (uVar4 == 0) {\n                        var_8h = (var_18h - var_20h) + -1;\n                    }\n                    else {\n                        var_8h = var_14h - var_1ch;\n                    }\n                }\n                if (uVar4 == 0) {\n                    bVar6 = SBORROW4(arg_10h, var_1ch);\n                    iVar1 = arg_10h - var_1ch;\n                    bVar5 = arg_10h == var_1ch;\n                }\n                else {\n                    bVar6 = SBORROW4(arg_ch, var_20h);\n                    iVar1 = arg_ch - var_20h;\n                    bVar5 = arg_ch == var_20h;\n                }\n                if (!bVar5 && bVar6 == iVar1 < 0) goto code_r0x004383c9;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_ECX + 0xa0));\n        iVar1 = 0;\n    }\n    iVar3 = var_ch + 1;\n    fcn.00444cd8(iVar3, iVar1, 1);\ncode_r0x004383fa:\n    fcn.00444cd8(iVar3, arg_8h, 1);\n    return iVar3;\n}\n",
        "token_count": 946
    },
    "0043856e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043856e(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    iVar4 = 4;\n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDockBar.0;\n    iVar3 = 0;\n    pcVar1 = extraout_ECX[0x28];\n    *(unaff_EBP + -4) = 1;\n    if (0 < pcVar1) {\n        do {\n            iVar4 = iVar3;\n            iVar2 = fcn.004382c9();\n            if ((iVar2 != 0) && (*(iVar2 + 0x8c) == extraout_ECX)) {\n                *(iVar2 + 0x8c) = 0;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < extraout_ECX[0x28]);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00444ab9(iVar4);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00433f36();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 323
    },
    "0043960a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043960a(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.00403bf2();\n    }\n    arg_ch[1] = arg_ch[1] | 0x70;\n    *arg_ch = 0x50;\n    arg_ch[8] = *(arg_8h + 0x20);\n    piVar1 = fcn.00422905(0x485650, arg_8h);\n    if (piVar1 == NULL) {\n        (**0x48169c)(*(arg_8h + 0x20), &var_10h);\n        var_8h = var_8h - var_10h;\n        var_4h = var_4h - var_ch;\n    }\n    else {\n        piVar1 = (**(*piVar1 + 0x134))(&var_8h, 0, in_ECX[0x20] & 0xa000);\n        var_8h = *piVar1;\n        var_4h = piVar1[1];\n    }\n    arg_ch[10] = var_4h;\n    if (*0x4a3d3c < 0x40048) {\n        iVar2 = 4;\n    }\n    else {\n        iVar2 = 0;\n    }\n    iVar2 = iVar2 + var_8h;\n    arg_ch[0x11] = iVar2;\n    arg_ch[0xb] = iVar2;\n    if ((arg_ch[2] & 0x200) == 0) {\n        arg_ch[9] = iVar2;\n    }\n    else {\n        arg_ch[1] = arg_ch[1] | 0x200;\n        arg_ch[9] = var_4h;\n    }\n    iVar2 = (**(*in_ECX + 0x110))(0x401, 0xffffffff, arg_ch);\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        piVar1 = fcn.004148fc();\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0x148))(1);\n        }\n        (**0x48183c)(in_ECX[8], 0x41f, 0, 0);\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 599
    },
    "004399b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004399b0(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (**0x4815b8)(&var_10h);\n    fcn.00433e4d(&var_10h, (*(in_ECX + 0x80) & 0xa000) != 0);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 188
    },
    "00439ad4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00439ad4(void)\n\n{\n    int32_t unaff_ESI;\n    \n    (**0x481350)(unaff_ESI + 0x10);\n    return;\n}\n",
        "token_count": 43
    },
    "00439b25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00439b25(void)\n\n{\n    int32_t unaff_ESI;\n    \n    (**0x481350)(unaff_ESI + 0x10);\n    return;\n}\n",
        "token_count": 43
    },
    "0043a904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.0043a904(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_50h;\n    uint var_4h;\n    \n    fcn.0045116f(0x8c);\n    uVar5 = *(unaff_EBP + 0x1c);\n    iVar1 = **(unaff_EBP + 8);\n    *(unaff_EBP + -0x98) = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        puVar3 = fcn.00451b45();\n        uVar2 = *puVar3;\n        puVar3 = fcn.00451b45();\n        *puVar3 = 0;\n        fcn.004552a3(unaff_EBP + -0x90, 0x40, 0x3f, uVar5, *(unaff_EBP + 0xc));\n        piVar4 = fcn.00451b45();\n        if (*piVar4 == 0) {\n            puVar3 = fcn.00451b45();\n            *puVar3 = uVar2;\n        }\n        else {\n            puVar3 = fcn.00451b45();\n            fcn.00404894(*puVar3);\n        }\n        puVar3 = fcn.00451b45();\n        uVar2 = *puVar3;\n        puVar3 = fcn.00451b45();\n        *puVar3 = 0;\n        fcn.004552a3(unaff_EBP + -0x50, 0x40, 0x3f, uVar5, *(unaff_EBP + 0x14));\n        piVar4 = fcn.00451b45();\n        if (*piVar4 == 0) {\n            puVar3 = fcn.00451b45();\n            *puVar3 = uVar2;\n        }\n        else {\n            puVar3 = fcn.00451b45();\n            fcn.00404894(*puVar3);\n        }\n        uVar5 = fcn.00409b56();\n        fcn.0040231f(uVar5);\n        *(unaff_EBP + -4) = 0;\n        fcn.004257e3(unaff_EBP + -0x94, *(unaff_EBP + 0x20), unaff_EBP + -0x90, unaff_EBP + -0x50);\n        fcn.0040de17(*(unaff_EBP + -0x94), 0x30, *(unaff_EBP + 0x20));\n        fcn.00402193();\n        fcn.0043a22f();\n        fcn.00401fb6();\n    }\n    fcn.004511f2();\n    return;\n}\n",
        "token_count": 725
    },
    "0043b231": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043b231(int32_t param_1, uint param_2, uint param_3)\n\n{\n    fcn.0045526a(param_2, param_3, \"Embedding %lu\", *(param_1 + 0x2c));\n    return;\n}\n",
        "token_count": 67
    },
    "0043c58d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043c58d(void)\n\n{\n    code **extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe04;\n    \n    fcn.00451139();\n    *extraout_ECX = vtable.COleClientItem.0;\n    fcn.0043b181(1);\n    if (extraout_ECX[8] != NULL) {\n        uStackY532 = 0x43c5db;\n        (**(*extraout_ECX[8] + 0xc0))(extraout_ECX);\n    }\n    fcn.004235e8();\n    fcn.0042a59f();\n    fcn.0043f9ea(0xffffffff);\n    *in_FS_OFFSET = uStackY532;\n    fcn.004510f7(in_stack_fffffe04);\n    return;\n}\n",
        "token_count": 193
    },
    "0043c8c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043c8c9(void)\n\n{\n    int32_t iVar1;\n    uint *arg_8h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    arg_8h = &var_14h;\n    fcn.0043b3dd();\n    iVar1 = fcn.00453966(&var_14h, 0x48f160, 0x10);\n    if (iVar1 != 0) {\n        fcn.0043c6cc(&var_14h);\n    }\n    fcn.004510f7(arg_8h);\n    return;\n}\n",
        "token_count": 160
    },
    "0043d0bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0043d0bf(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(0x10);\n    puVar1 = *(unaff_EBP + 8);\n    if (puVar1 == NULL) {\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + -0x10) = 0;\n    }\n    else {\n        uVar2 = *puVar1;\n        *(unaff_EBP + -0x10) = puVar1[1];\n        *(unaff_EBP + -0x14) = uVar2;\n        fcn.004243a4(unaff_EBP + -0x14);\n    }\n    puVar1 = *(unaff_EBP + 0xc);\n    if (puVar1 == NULL) {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -0x18) = 0;\n    }\n    else {\n        uVar2 = *puVar1;\n        *(unaff_EBP + -0x18) = puVar1[1];\n        *(unaff_EBP + -0x1c) = uVar2;\n        fcn.004243a4(unaff_EBP + -0x1c);\n    }\n    iVar3 = *(extraout_ECX + 0x20);\n    (**0x481324)(extraout_ECX + 4);\n    fcn.0040555a(*(iVar3 + 0x24));\n    iVar3 = *(iVar3 + 0x24);\n    *(unaff_EBP + -4) = 0;\n    iVar3 = fcn.00405325(*(extraout_ECX + 0x24), -(iVar3 != 0) & *(unaff_EBP + 8), *(extraout_ECX + 0x30), \n                         *(unaff_EBP + -0x14), *(unaff_EBP + -0x10), unaff_EBP + -0x1c);\n    (**0x481358)(extraout_ECX + 4);\n    if (iVar3 == 0) {\n        fcn.00403bbe();\n    }\n    puVar1 = *(unaff_EBP + 0x10);\n    puVar1[2] = 0;\n    *puVar1 = 1;\n    puVar1[1] = iVar3;\n    fcn.00401fb6();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 714
    },
    "004401ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004401ed(uint arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00451139(0x20);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    if ((extraout_ECX[0x1e] == 0) && (extraout_ECX[0x1f] == 0)) {\n        fcn.00408e97(*(unaff_EBP + 8));\n    }\n    else {\n        arg_ch = *(unaff_EBP + 8);\n        *(unaff_EBP + -0x14) = 0;\n        if (arg_ch != 0) {\n            iVar1 = fcn.0040ab9c(extraout_ECX[9], arg_ch);\n            extraout_ECX[0x20] = iVar1;\n        }\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -4) = 0;\n        if ((arg_ch != 0) && (extraout_ECX[0x20] == 0)) {\n            *(unaff_EBP + -0x14) = extraout_ECX[0x1f];\n            extraout_ECX[0x1f] = 0;\n            fcn.0040555a(arg_ch);\n            *(unaff_EBP + -4) = 1;\n            iVar1 = (**0x4818bc)(*(unaff_EBP + -0x1c), 0x11022, 0, unaff_EBP + -0x24);\n            if (iVar1 != 0) {\n                fcn.00404470(iVar1);\n            }\n            extraout_ECX[0x1f] = *(unaff_EBP + -0x24);\n            *(unaff_EBP + -4) = 0;\n            fcn.00401fb6();\n        }\n        (**(*extraout_ECX + 0xdc))(0);\n        if (arg_ch != 0) {\n            if ((extraout_ECX[0x21] == 0) || (extraout_ECX[0x20] != 0)) {\n                arg_8h_00 = 0;\n            }\n            else {\n                arg_8h_00 = 1;\n            }\n            fcn.0043f822(arg_8h_00, 0);\n            if (extraout_ECX[0x21] != 0) {\n                (**(*extraout_ECX + 0x5c))(0);\n            }\n            if (extraout_ECX[0x20] == 0) {\n                if (extraout_ECX[0x21] == 0) {\n                    (**(*extraout_ECX[0x1f] + 8))(extraout_ECX[0x1f]);\n                    extraout_ECX[0x1f] = *(unaff_EBP + -0x14);\n                }\n                else {\n                    (**(**(unaff_EBP + -0x14) + 8))(*(unaff_EBP + -0x14));\n                }\n            }\n        }\n        *(unaff_EBP + -0x20) = 1;\n        extraout_ECX[0x20] = 1;\n        extraout_ECX[0x21] = 1;\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 880
    },
    "00440df1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00440df1(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    piVar1 = fcn.004234da(0x48f250);\n    iVar2 = (**(*piVar1 + 0x20))(piVar1, 4, 3, &var_8h);\n    if (iVar2 == 0) {\n        iVar2 = (**0x481920)(0, 1, &var_4h);\n        if (iVar2 != 0) {\n            (**(*var_8h + 8))(var_8h);\n            fcn.00403bbe();\n        }\n        piVar1 = (**0x481924)(var_8h, var_4h);\n        (**(*var_8h + 8))(var_8h);\n        if (piVar1 == NULL) goto code_r0x00440e67;\n        (**(*var_4h + 8))(var_4h);\n        while( true ) {\n            fcn.00404470(piVar1);\ncode_r0x00440e67:\n            in_ECX = (**0x481928)(var_4h, *(in_ECX[8] + 0x8c) + 0x28);\n            if (in_ECX == NULL) break;\n            (**(*var_4h + 8))(var_4h);\n            piVar1 = in_ECX;\n        }\n        arg_8h[2] = 0;\n        *arg_8h = 4;\n        arg_8h[1] = var_4h;\n        uVar3 = 1;\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 445
    },
    "00440eab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440eab(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint arg_14h;\n    uint arg_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = fcn.004234da(0x48f250);\n    arg_14h = 0;\n    arg_18h = 0;\n    if (arg_8h != NULL) {\n        var_14h = *arg_8h;\n        var_10h = arg_8h[1];\n        fcn.004243a4(&var_14h);\n        arg_14h = var_14h;\n        arg_18h = var_10h;\n    }\n    if (arg_ch == NULL) {\n        var_ch = 0;\n        var_8h = 0;\n    }\n    else {\n        var_ch = *arg_ch;\n        var_8h = arg_ch[1];\n        fcn.004243a4(&var_ch);\n    }\n    (**0x481324)(in_ECX + 4);\n    iVar1 = fcn.00405325(var_4h, 0, 1, arg_14h, arg_18h, &var_ch);\n    (**0x481358)(in_ECX + 4);\n    if (iVar1 == 0) {\n        fcn.00403bbe();\n    }\n    arg_10h[2] = 0;\n    arg_10h[1] = iVar1;\n    *arg_10h = 1;\n    return;\n}\n",
        "token_count": 389
    },
    "00441ac1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00441ac1(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 0x16) {\n        iVar1 = param_1 + 0x40000;\n    }\n    else {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 74
    },
    "0044236a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0044236a(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    fcn.00451550(&var_3ch, 0, 0x3c);\n    var_30h = 0x28;\n    if (arg_8h == 0) {\n        var_3ch = 0;\n    }\n    else {\n        var_3ch = *(arg_8h + 0x20);\n    }\n    var_38h = arg_ch;\n    var_34h = arg_10h;\n    iVar1 = (**0x48183c)(*(in_ECX + 0x20), 0x40a, 0, &var_3ch);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00451210(arg_14h, 0x30, &var_30h, 0x28);\n        fcn.00401000(uVar2);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 284
    },
    "004423e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004423e5(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    fcn.00451550(param_1, 0, 0x28);\n    *param_1 = 0x28;\n    if (param_2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(param_2 + 0x20);\n    }\n    if (param_3 == 0) {\n        uVar1 = (**0x4817a0)(uVar2);\n        param_1[2] = uVar1;\n        param_1[1] = 1;\n        param_1[3] = uVar2;\n    }\n    else {\n        param_1[1] = 0;\n        param_1[2] = uVar2;\n        param_1[3] = param_3;\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "00442aae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442aae(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_40h;\n    int32_t var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uchar uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    var_10h = arg_8h;\n    fcn.004423e5(&var_40h, arg_ch, arg_10h);\n    var_ch = *0x48a078;\n    uStack12 = *0x48a07c;\n    var_1ch = fcn.004023b3(0x405);\n    fcn.00451550(var_1ch, 0, 0x400);\n    uVar1 = fcn.00451210(var_1ch + 0x400, 5, &var_ch, 5);\n    fcn.00401000(uVar1);\n    (**0x48183c)(*(in_ECX + 0x20), 0x40b, 0, &var_40h);\n    iVar2 = fcn.00453966(&var_ch, var_1ch + 0x400, 5);\n    if (iVar2 != 0) {\n        fcn.00403bbe();\n    }\n    uVar1 = 0xffffffff;\n    fcn.004081bb();\n    fcn.004510f7(uVar1);\n    return;\n}\n",
        "token_count": 363
    },
    "00442fd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442fd5(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uStack48;\n    uchar auStack28 [28];\n    \n    pcVar1 = *0x481778;\n    while( true ) {\n        uStack48 = 0;\n        iVar2 = (*pcVar1)(&stack0xffffffe4, 0, 0xf, 0xf);\n        if (iVar2 == 0) {\n            *(param_1 + 0x70) = *(*(param_1 + 0x68) + 0x84);\n            *(param_1 + 0x78) = *(*(param_1 + 0x68) + 0x80) & 0xf000;\n            (**0x4815b8)(param_1 + 0xc);\n            *(param_1 + 0x20) = 0;\n            *(param_1 + 0x1c) = 0;\n            *(param_1 + 0x24) = 0;\n            *(param_1 + 0x7c) = 0;\n            *(param_1 + 0x80) = 0;\n            uVar3 = (**0x481874)();\n            iVar2 = fcn.00413d94(uVar3);\n            iVar4 = (**0x481594)(*(iVar2 + 0x20));\n            if (iVar4 == 0) {\n                uVar3 = 3;\n            }\n            else {\n                uVar3 = 0x403;\n            }\n            uVar3 = (**0x481590)(*(iVar2 + 0x20), 0, uVar3);\n            uVar3 = fcn.00406897(uVar3);\n            *(param_1 + 0x84) = uVar3;\n            return;\n        }\n        iVar2 = (**0x481764)(&stack0xffffffd0, 0, 0xf, 0xf);\n        if (iVar2 == 0) break;\n        uStack48 = 0x44300d;\n        (**0x48176c)();\n    }\n    return;\n}\n",
        "token_count": 489
    },
    "00443417": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443417(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.00443094(1);\n    (**0x4815c4)();\n    uVar2 = (**0x481874)();\n    iVar3 = fcn.00413d94(uVar2);\n    (**0x481594)(0);\n    iVar1 = *(param_1 + 0x84);\n    if (iVar1 != 0) {\n        (**0x4817f4)(*(iVar3 + 0x20), *(iVar1 + 4));\n        *(param_1 + 0x84) = 0;\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00444ac9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444ac9(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x00444adf;\n    do {\n        fcn.00403bf2();\ncode_r0x00444adf:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.00403ac8(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x00444be3;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.00403a9d(iVar1 << 2);\n            *(in_ECX + 4) = uVar2;\n            fcn.00451550(uVar2, 0, iVar1 << 2);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x00444b4b:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00451550(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x00444b4b;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x00444b7d:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x00444b7d;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.00403a9d(arg_8h << 2);\n    fcn.00404383(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00451550(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.00403ac8(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00444be3:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 778
    },
    "00444cd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444cd8(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.00444ac9(iVar1 + arg_10h, 0xffffffff);\n            fcn.004259c8(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, ((*(in_ECX + 8) - arg_8h) - arg_10h) * 4, \n                         *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.00451550(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.00444ac9(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.00403bf2();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 389
    },
    "00444d7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00444d7c(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = param_2 + param_3;\n    if ((((-1 < param_2) && (-1 < param_3)) && (iVar1 <= *(param_1 + 8))) && ((param_2 <= iVar1 && (param_3 <= iVar1))))\n    {\n        iVar3 = *(param_1 + 8) - iVar1;\n        if (iVar3 != 0) {\n            iVar3 = iVar3 * 4;\n            fcn.004259c8(*(param_1 + 4) + param_2 * 4, iVar3, *(param_1 + 4) + iVar1 * 4, iVar3);\n        }\n        *(param_1 + 8) = *(param_1 + 8) - param_3;\n        return;\n    }\n    fcn.00403bf2();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 259
    },
    "00444e4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444e4a(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 0x20) != 0) {\n        uVar1 = 0;\n        if (*(param_1 + 0x28) != 0) {\n            iVar2 = 0;\n            do {\n                (**0x481990)(*(iVar2 + 4 + *(param_1 + 0x20)));\n                (**0x481968)(iVar2 + 0x14 + *(param_1 + 0x20));\n                uVar1 = uVar1 + 1;\n                iVar2 = iVar2 + 0x24;\n            } while (uVar1 < *(param_1 + 0x28));\n        }\n        fcn.00403ac8(*(param_1 + 0x20));\n        *(param_1 + 0x20) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0x28) = 0;\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "004450c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004450c7(code **param_1)\n\n{\n    code **extraout_ECX;\n    code *pcVar1;\n    int32_t unaff_EBP;\n    uint *puVar2;\n    \n    pcVar1 = NULL;\n    *param_1 = vtable.CEnumFormatEtc.0;\n    if ((param_1[9] == NULL) && (param_1[0xc] != NULL)) {\n        puVar2 = param_1[10] + 4;\n        do {\n            (**0x481990)(*puVar2);\n            pcVar1 = pcVar1 + 1;\n            puVar2 = puVar2 + 5;\n        } while (pcVar1 < param_1[0xc]);\n    }\n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumArray.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.0042365a();\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        fcn.00403ac8(extraout_ECX[10]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040965e();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 326
    },
    "0044534d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044534d(uint arg_8h, int16_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    if (arg_ch == NULL) {\n        arg_ch = fcn.00403f41(0, arg_8h, &var_14h);\n        *(arg_ch + 8) = 1;\n    }\n    if (arg_8h != 0) {\n        *arg_ch = arg_8h;\n    }\n    iVar1 = fcn.004451e6(arg_ch, 1);\n    fcn.00451550(iVar1 + 0x14, 0, 0xc);\n    return;\n}\n",
        "token_count": 156
    },
    "004453ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004453ea(int32_t param_1, ushort *param_2)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    ushort *puVar3;\n    \n    if (*(param_1 + 0x30) == *(param_1 + 0x3c)) {\n        iVar1 = (*(param_1 + 0x30) + 10) * 0x14;\n        uVar2 = fcn.00403a9d(-(iVar1 >> 0x20 != 0) | iVar1);\n        *(param_1 + 0x3c) = *(param_1 + 0x3c) + 10;\n        fcn.00404383(uVar2, (*(param_1 + 0x30) + 10) * 0x14, *(param_1 + 0x28), *(param_1 + 0x30) * 0x14);\n        fcn.00403ac8(*(param_1 + 0x28));\n        *(param_1 + 0x28) = uVar2;\n    }\n    puVar3 = *(param_1 + 0x30) * 0x14 + *(param_1 + 0x28);\n    *puVar3 = *param_2;\n    *(puVar3 + 2) = *(param_2 + 2);\n    *(puVar3 + 4) = *(param_2 + 4);\n    *(puVar3 + 6) = *(param_2 + 6);\n    *(puVar3 + 8) = *(param_2 + 8);\n    *(param_1 + 0x30) = *(param_1 + 0x30) + 1;\n    return;\n}\n",
        "token_count": 389
    },
    "00446db1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446db1(code **param_1)\n\n{\n    int32_t *piVar1;\n    uint unaff_ESI;\n    \n    *param_1 = vtable.COleFrameHook.0;\n    if ((param_1[8] != NULL) && (piVar1 = param_1[8] + 0x80,  *piVar1 == param_1)) {\n        *piVar1 = 0;\n    }\n    fcn.00401fb6();\n    if (param_1[4] != NULL) {\n        (**(param_1[4] + 0x1c))(unaff_ESI);\n    }\n    param_1[7] = NULL;\n    return;\n}\n",
        "token_count": 161
    },
    "00448aca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448aca(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00456ed8(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 79
    },
    "00448d19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00448d19(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    uint var_26ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(0x260);\n    iVar6 = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x10) = 0x80004003;\n    if (iVar6 != 0) {\n        *(unaff_EBP + -0x10) = 0;\n        if (*(unaff_EBP + 8) == 0) {\n            iVar7 = *(unaff_EBP + 0x10);\n            if (iVar7 != 0) {\n                puVar3 = iVar6 + 4;\n                do {\n                    *puVar3 = 0;\n                    puVar3 = puVar3 + 2;\n                    iVar7 = iVar7 + -1;\n                } while (iVar7 != 0);\n            }\n        }\n        else {\n            fcn.00448bc1(iVar6, *(unaff_EBP + 0x10), *(unaff_EBP + 0xc));\n            piVar1 = *(unaff_EBP + 0x18);\n            *(unaff_EBP + -4) = 0;\n            if (piVar1 == NULL) {\n                *(unaff_EBP + -0x20) = 0;\n            }\n            else {\n                *(unaff_EBP + -0x20) = *piVar1;\n            }\n            *(unaff_EBP + -0x40) = 0;\n            if (*(unaff_EBP + 0x10) != 0) {\n                do {\n                    *(unaff_EBP + -0x44) = *(iVar6 + *(unaff_EBP + -0x40) * 8);\n                    fcn.00448a17(*(unaff_EBP + 8), 1);\n                    *(unaff_EBP + -0x40) = *(unaff_EBP + -0x40) + 1;\n                } while (*(unaff_EBP + -0x40) < *(unaff_EBP + 0x10));\n            }\n            if (((piVar1 != NULL) && (piVar1 + 3 != NULL)) && (*piVar1 != 0)) {\n                uVar4 = fcn.0042ae86(unaff_EBP + 0x10, piVar1[2] + -1);\n                *(unaff_EBP + -4) = 1;\n                fcn.004085ac(uVar4);\n                *(unaff_EBP + -4) = 0;\n                fcn.00401fb6();\n                iVar6 = *(unaff_EBP + -0x14);\n                uVar2 = *(iVar6 + -0xc);\n                uVar5 = piVar1[2] - 1U;\n                if (uVar2 < piVar1[2] - 1U) {\n                    uVar5 = uVar2;\n                }\n                piVar1[1] = uVar5;\n                iVar6 = fcn.00428eb0(iVar6);\n                uVar4 = *(iVar6 + 0xc);\n                *(unaff_EBP + -4) = 2;\n                fcn.00448aca(piVar1 + 3, piVar1[2], uVar4, 0xffffffff);\n                fcn.00428940();\n            }\n            fcn.00401fb6();\n        }\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 958
    },
    "00448fce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00448fce(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *extraout_ECX;\n    \n    piVar1 = *param_1;\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00403bf2();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *piVar1;\n    return piVar1 + 2;\n}\n",
        "token_count": 106
    },
    "00448fe7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00448fe7(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00403bf2();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *(iVar1 + 4);\n    return iVar1 + 8;\n}\n",
        "token_count": 103
    },
    "004493c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004493c0(void)\n\n{\n    code **extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.00451139();\n    *extraout_ECX = vtable.COleStreamFile.0;\n    if ((extraout_ECX[4] != NULL) && (extraout_ECX[2] != NULL)) {\n        fcn.00449384();\n    }\n    fcn.00401fb6();\n    fcn.0040af00();\n    *in_FS_OFFSET = uStackY532;\n    fcn.004510f7(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 152
    },
    "004495fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004495fe(code *param_1)\n\n{\n    int32_t iVar1;\n    code **extraout_ECX;\n    int32_t **in_FS_OFFSET;\n    int32_t iVar2;\n    int32_t *in_stack_fffffea0;\n    int32_t *piVar3;\n    uchar *puStack340;\n    uint uStack328;\n    uint in_stack_fffffebc;\n    uchar auStack268 [260];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a5230 ^ &stack0xfffffeac;\n    puStack340 = 0x8;\n    fcn.00451106();\n    fcn.0040ad5a();\n    *extraout_ECX = vtable.COleStreamFile.0;\n    fcn.00402395();\n    extraout_ECX[4] = param_1;\n    fcn.00402193();\n    piVar3 = extraout_ECX[4];\n    if (piVar3 != NULL) {\n        iVar2 = 0x449667;\n        iVar1 = (**(*piVar3 + 0x30))(piVar3, &stack0xfffffeac, 0);\n        in_stack_fffffea0 = piVar3;\n        if ((iVar1 == 0) && (puStack340 != NULL)) {\n            fcn.00404bdb(puStack340);\n            in_stack_fffffea0 = piVar3;\n            if (0x103 < *(iVar2 + -0xc)) {\n                in_stack_fffffea0 = 0xffffffff;\n                iVar2 = fcn.0040a7d3(3, 0xffffffff, 0);\n            }\n            fcn.0040b1d6(&stack0xfffffef4, iVar2);\n            (**0x481990)(puStack340);\n            puStack340 = &stack0xfffffef4;\n            fcn.004024ff();\n            fcn.00401fb6();\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffea0;\n    uStack328 = 0x4496dc;\n    fcn.004510f7(in_stack_fffffebc);\n    return;\n}\n",
        "token_count": 475
    },
    "00449978": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449978(int32_t *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_fffffe94;\n    int32_t *in_stack_fffffea0;\n    uchar *puVar3;\n    uint uVar4;\n    int32_t iStack340;\n    uint uStack328;\n    uint in_stack_fffffebc;\n    int32_t aiStack268 [65];\n    uint32_t uStack8;\n    \n    puVar3 = &stack0xfffffeac;\n    uStack8 = *0x4a5230 ^ puVar3;\n    iStack340 = 0x10;\n    fcn.00451106();\n    if ((param_1 != NULL) && (param_2 != 0)) {\n        in_stack_fffffea0 = param_1;\n        iVar1 = (**(*param_1 + 0x44))(param_1, puVar3, 0);\n        if ((iVar1 == 0) && (iStack340 != 0)) {\n            fcn.00404bdb(iStack340);\n            uVar4 = 0;\n            fcn.0040b1d6(&stack0xfffffef4, in_stack_fffffe94);\n            param_2 = iStack340;\n            (**0x481990)();\n            in_stack_fffffea0 = &stack0xfffffef4;\n            fcn.004024ff(in_stack_fffffea0, puVar3, uVar4);\n            fcn.00401fb6(in_stack_fffffea0, puVar3, 0xffffffff);\n        }\n        fcn.0040555a(param_2);\n        iVar2 = extraout_ECX + 0x10;\n        iVar1 = (**(*param_1 + 0xc))(param_1, param_2, param_3, 0, 0);\n        if ((iVar1 < 0) && (iVar2 != 0)) {\n            in_stack_fffffea0 = 0x449a55;\n            iStack340 = iVar2;\n            fcn.004492be(puVar3, iVar1);\n        }\n        fcn.00401fb6();\n    }\n    *in_FS_OFFSET = in_stack_fffffea0;\n    uStack328 = 0x449a86;\n    fcn.004510f7(in_stack_fffffebc);\n    return;\n}\n",
        "token_count": 552
    },
    "0044a93e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a93e(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    iVar3 = 0;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x0044a952;\n    while( true ) {\n        fcn.00403bf2();\n        puVar4 = unaff_ESI;\ncode_r0x0044a952:\n        if (arg_ch != iVar3) break;\n        unaff_ESI = 0x48b3c4;\n        do {\n            arg_8h_00 = *unaff_ESI;\n            iVar2 = fcn.0041fe7f(arg_8h_00);\n            if (iVar2 != 0) {\n                uVar1 = (**0x48170c)(*(arg_8h + 0x20), 0xffffffff, arg_8h_00, puVar4);\n                iVar2 = fcn.0043828c(uVar1);\n                if (0 < iVar2) goto code_r0x0044a9be;\n            }\n            if (((unaff_ESI[1] ^ *(arg_8h + 0x80)) & 0xf000) == 0) {\n                iVar3 = fcn.0041fe7f(*unaff_ESI);\n            }\n            unaff_ESI = unaff_ESI + 2;\n        } while (unaff_ESI < 0x48b3e4);\n        if (iVar3 != 0) break;\n    }\ncode_r0x0044a9be:\n    fcn.00439059(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 432
    },
    "0044ad3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0044ad3d(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    uVar1 = *(param_1 + 0x2c);\n    bVar3 = uVar1 < *(param_1 + 0x30);\n    if (bVar3) {\n        iVar2 = *(param_1 + 0x20);\n        fcn.00404383(param_2, iVar2, iVar2 * uVar1 + *(param_1 + 0x28), iVar2);\n        *(param_1 + 0x2c) = *(param_1 + 0x2c) + 1;\n    }\n    return bVar3;\n}\n",
        "token_count": 176
    },
    "0044c478": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c478(void)\n\n{\n    code **extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffdfc;\n    \n    fcn.00451139();\n    *extraout_ECX = vtable.COleObjectFactory.0;\n    if (extraout_ECX[7] != NULL) {\n        fcn.0044be58();\n        fcn.00419c68();\n        fcn.0042657b(0);\n        fcn.00422b2d(extraout_ECX);\n        uStackY532 = 0;\n        fcn.004265e8();\n    }\n    fcn.0040965e();\n    *in_FS_OFFSET = uStackY532;\n    fcn.004510f7(in_stack_fffffdfc);\n    return;\n}\n",
        "token_count": 184
    },
    "0044d159": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0044d159(int32_t param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if ((-1 < param_2) && (param_2 < *(param_1 + 8))) {\n        return param_2 * 0xc + *(param_1 + 4);\n    }\n    fcn.00403bf2();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 123
    },
    "0044d220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d220(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    bool bVar7;\n    \n    iVar6 = arg_8h;\n    bVar7 = -1 < arg_8h;\n    arg_8h = 0;\n    if (bVar7) goto code_r0x0044d236;\n    do {\n        fcn.00403bf2();\ncode_r0x0044d236:\n        if (arg_8h <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar6 == arg_8h) {\n            if (*(in_ECX + 4) != arg_8h) {\n                iVar6 = 0;\n                if (*(in_ECX + 8) != arg_8h && arg_8h <= *(in_ECX + 8)) {\n                    do {\n                        fcn.0044d1cb();\n                        iVar6 = iVar6 + 1;\n                    } while (iVar6 < *(in_ECX + 8));\n                }\n                fcn.00403ac8(*(in_ECX + 4));\n                *(in_ECX + 4) = arg_8h;\n            }\n            *(in_ECX + 0xc) = arg_8h;\n            *(in_ECX + 8) = arg_8h;\n            return;\n        }\n        if (*(in_ECX + 4) == arg_8h) {\n            arg_8h = iVar6;\n            if (iVar6 <= *(in_ECX + 0x10)) {\n                arg_8h = *(in_ECX + 0x10);\n            }\n            uVar1 = fcn.00403a9d(arg_8h * 0xc);\n            *(in_ECX + 4) = uVar1;\n            fcn.00451550(uVar1, 0, arg_8h * 0xc);\n            if (0 < iVar6) {\n                iVar4 = 0;\n                iVar5 = iVar6;\n                do {\n                    puVar2 = *(in_ECX + 4) + iVar4;\n                    if (puVar2 != NULL) {\n                        *puVar2 = 0;\n                        puVar2[1] = 0;\n                    }\n                    iVar4 = iVar4 + 0xc;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            goto code_r0x0044d414;\n        }\n        if (iVar6 <= *(in_ECX + 0xc)) {\n            iVar5 = *(in_ECX + 8);\n            if (iVar5 < iVar6) {\n                fcn.00451550(iVar5 * 0xc + *(in_ECX + 4), arg_8h, (iVar6 - iVar5) * 0xc);\n                iVar5 = 0;\n                if (iVar6 != *(in_ECX + 8) && -1 < iVar6 - *(in_ECX + 8)) {\n                    do {\n                        piVar3 = (*(in_ECX + 8) + iVar5) * 0xc + *(in_ECX + 4);\n                        if (piVar3 != NULL) {\n                            *piVar3 = arg_8h;\n                            piVar3[1] = arg_8h;\n                        }\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < iVar6 - *(in_ECX + 8));\n                }\n            }\n            else if ((iVar6 < iVar5) && (iVar5 != iVar6 && -1 < iVar5 - iVar6)) {\n                do {\n                    fcn.0044d1cb();\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < *(in_ECX + 8) - iVar6);\n            }\n            goto code_r0x0044d41a;\n        }\n        iVar5 = *(in_ECX + 0x10);\n        if (iVar5 == arg_8h) {\n            iVar5 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar5 < 4) {\n                iVar5 = 4;\n            }\n            else if (0x400 < iVar5) {\n                iVar5 = 0x400;\n            }\n        }\n        arg_8h = iVar5 + *(in_ECX + 0xc);\n        if (arg_8h <= iVar6) {\n            arg_8h = iVar6;\n        }\n    } while (arg_8h < *(in_ECX + 0xc));\n    iVar5 = fcn.00403a9d(arg_8h * 0xc);\n    fcn.00404383(iVar5, arg_8h * 0xc, *(in_ECX + 4), *(in_ECX + 8) * 0xc);\n    fcn.00451550(*(in_ECX + 8) * 0xc + iVar5, 0, (iVar6 - *(in_ECX + 8)) * 0xc);\n    iVar4 = 0;\n    if (iVar6 != *(in_ECX + 8) && -1 < iVar6 - *(in_ECX + 8)) {\n        do {\n            puVar2 = (*(in_ECX + 8) + iVar4) * 0xc + iVar5;\n            if (puVar2 != NULL) {\n                *puVar2 = 0;\n                puVar2[1] = 0;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar6 - *(in_ECX + 8));\n    }\n    fcn.00403ac8(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar5;\ncode_r0x0044d414:\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0044d41a:\n    *(in_ECX + 8) = iVar6;\n    return;\n}\n",
        "token_count": 1384
    },
    "0044d5cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044d5cd(int32_t param_1, int32_t param_2)\n\n{\n    uint unaff_retaddr;\n    \n    if (param_2 < 0) {\n        fcn.00403bf2();\n    }\n    if (*(param_1 + 8) <= param_2) {\n        fcn.0044d220(param_2 + 1, 0xffffffff);\n    }\n    fcn.0044d4aa(unaff_retaddr);\n    return;\n}\n",
        "token_count": 113
    },
    "0044d627": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044d627(char *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    \n    fcn.0040555a(arg_8h);\n    if (*arg_8h == '{') {\n        uVar1 = (**0x481950)();\n    }\n    else {\n        uVar1 = (**0x48190c)(arg_8h, arg_ch);\n    }\n    fcn.00401fb6();\n    return uVar1;\n}\n",
        "token_count": 108
    },
    "0044dd2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0044dd2b(uint *param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00403a9d(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n    *param_1 = uVar1;\n    fcn.00451550(uVar1, 0, param_2 << 2);\n    param_1[1] = param_2;\n    return param_1;\n}\n",
        "token_count": 122
    },
    "0044fd19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044fd19(int32_t *param_1, int32_t *param_2, int32_t **param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t **in_FS_OFFSET;\n    uchar *arg_8h;\n    uchar *puVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t *piStack284;\n    int32_t *arg_8h_00;\n    uint uStack268;\n    uint32_t uStack8;\n    \n    arg_8h = &stack0xfffffef4;\n    uStack8 = *0x4a5230 ^ arg_8h;\n    uStack268 = 0x18;\n    fcn.00451106();\n    fcn.0042657b();\n    piVar1 = (**(*extraout_ECX + 0x20))();\n    piStack284 = param_1;\n    arg_8h_00 = param_2;\n    iVar2 = fcn.0044fccb();\n    if (iVar2 == 0) {\n        piVar6 = &stack0xfffffee4;\n        piVar1 = param_1;\n        iVar2 = fcn.0044fb2f(param_1, piVar6);\n        if (iVar2 == 0) {\n            iVar2 = (**(*extraout_ECX + 0x24))(param_1, &stack0xfffffee4);\n            if (iVar2 < 0) {\n                fcn.00419cfd(extraout_ECX[7]);\n                iVar2 = fcn.00419c68();\n                iVar2 = *(iVar2 + 8);\n                uVar5 = 0x104;\n                puVar4 = arg_8h;\n                (**0x4813b8)(iVar2, arg_8h, 0x104);\n                fcn.0040555a(arg_8h);\n                iVar3 = (**0x4814a4)(puVar4, &stack0xfffffee4);\n                if (iVar3 < 0) {\n                    piStack284 = NULL;\n                }\n                fcn.00401fb6();\n                if (iVar2 != 0) {\n                    piStack284 = NULL;\n                    fcn.00419083(uVar5, arg_8h);\n                }\n            }\n            piVar1 = param_1;\n            piVar6 = piStack284;\n            fcn.0044fb60(param_1, piStack284);\n        }\n        if (piStack284 != NULL) {\n            (**(*piStack284 + 0x18))(piStack284, param_2, param_3);\n            (**(*piStack284 + 8))(piStack284);\n            piStack284 = *param_3;\n            fcn.0044fba3(param_1, param_2);\n            piVar1 = param_1;\n            piVar6 = param_2;\n        }\n    }\n    else {\n        piVar6 = NULL;\n    }\n    fcn.004265e8(0xd, piVar1, piVar6);\n    *in_FS_OFFSET = arg_8h_00;\n    piStack284 = 0x44fe79;\n    fcn.004510f7(arg_8h_00);\n    return;\n}\n",
        "token_count": 739
    },
    "00451a9f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451a9f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0045d6f6(arg_8h, arg_ch, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 79
    },
    "00452026": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00452026(uint param_1, uint param_2)\n\n{\n    fcn.00451fd1(fcn.0045f0d5, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 52
    },
    "0045217b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045217b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0045208a(fcn.0045f0d5, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 119
    },
    "0045238e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045238e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0045208a(0x45fc47, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 116
    },
    "004552fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004552fe(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0045238e(arg_8h, arg_ch, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 75
    },
    "00455412": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00455412(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x4a8648 != 0)) {\n        *param_1 = *0x4a8648;\n        return 0;\n    }\n    puVar1 = fcn.00451b45();\n    *puVar1 = 0x16;\n    fcn.00458b89(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 123
    },
    "004554c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004554c1(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x4a8648 != 0)) {\n        *param_1 = *0x4a8654;\n        return 0;\n    }\n    puVar1 = fcn.00451b45();\n    *puVar1 = 0x16;\n    fcn.00458b89(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 122
    },
    "0045583b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045583b(uint param_1, uint param_2)\n\n{\n    fcn.00455793(0x462d05, param_2, 0, &stack0x0000000c);\n    return;\n}\n",
        "token_count": 54
    },
    "00456e73": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456e73(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00456df1(0x462004, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 74
    },
    "00456e95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00456e95(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00456df1(0x462d05, param_3, 0, &stack0x00000010);\n    return;\n}\n",
        "token_count": 59
    },
    "00456eb6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456eb6(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00456df1(0x462d05, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 75
    },
    "0045c444": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045c456)\n// WARNING: Removing unreachable block (ram,0x0045c45c)\n// WARNING: Removing unreachable block (ram,0x0045c45e)\n\nvoid fcn.0045c444(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "0045d4e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045d4e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0045d3c3(fcn.0045c943, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 121
    },
    "0045d6f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045d6f6(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0045d3c3(0x46cb52, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 120
    },
    "00464372": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00464372(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.00451b45();\n        *puVar1 = 0x16;\n        fcn.00458b89(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x4a5d1c;\n    return 0;\n}\n",
        "token_count": 111
    },
    "004643a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004643a6(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.00451b45();\n        *puVar1 = 0x16;\n        fcn.00458b89(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x4a5d20;\n    return 0;\n}\n",
        "token_count": 111
    },
    "004643da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004643da(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.00451b45();\n        *puVar1 = 0x16;\n        fcn.00458b89(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x4a5d18;\n    return 0;\n}\n",
        "token_count": 110
    },
    "0046a7d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0046a7d6(code **param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    *param_1 = vtable.std::exception.0;\n    pcVar3 = *(param_2 + 8);\n    param_1[2] = pcVar3;\n    pcVar1 = *(param_2 + 4);\n    if (pcVar3 == NULL) {\n        param_1[1] = pcVar1;\n    }\n    else if (pcVar1 == NULL) {\n        param_1[1] = NULL;\n    }\n    else {\n        iVar2 = fcn.004518d0(pcVar1);\n        pcVar3 = fcn.00450012(iVar2 + 1);\n        param_1[1] = pcVar3;\n        if (pcVar3 != NULL) {\n            fcn.00455117(pcVar3, iVar2 + 1, *(param_2 + 4));\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 244
    },
    "0046c481": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046c481(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0046bfe2();\n    fcn.0046c13a(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 57
    },
    "00476510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00476510(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045517c(0x49f760, 0x10);\n    iVar1 = fcn.0046bfe2();\n    iVar1 = iVar1 + 0x20;\n    *(unaff_EBP + -0x1c) = iVar1;\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar2 = fcn.00451b45();\n        *puVar2 = 0x16;\n        fcn.00458b89(0, 0, 0, 0, 0);\n    }\n    else {\n        fcn.0046c0b9(iVar1);\n        *(unaff_EBP + -4) = 0;\n        uVar3 = fcn.0047644b(iVar1);\n        uVar4 = (**(unaff_EBP + 8))(iVar1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar4;\n        fcn.004764e1(uVar3, iVar1);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00476598();\n    }\n    fcn.004551c1();\n    return;\n}\n",
        "token_count": 434
    },
    "00479966": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00479966(uint param_1)\n\n{\n    fcn.00451550(param_1, 0, 0x18);\n    return param_1;\n}\n",
        "token_count": 42
    },
    "00479a78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00479a78(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if ((param_2 < 0) || (iVar1 = param_1[1],  iVar1 <= param_2)) {\n        uVar3 = 0;\n    }\n    else {\n        if (param_2 != iVar1 + -1) {\n            iVar2 = (iVar1 - param_2) * 4;\n            iVar1 = *param_1 + param_2 * 4;\n            fcn.004259c8(iVar1, iVar2, iVar1 + 4, iVar2 + -4);\n        }\n        param_1[1] = param_1[1] + -1;\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 202
    },
    "00479cb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00479cb9(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (param_1[1] == param_1[2]) {\n        if (param_1[2] == 0) {\n            uVar3 = 1;\ncode_r0x00479cdf:\n            iVar1 = fcn.004508ad(*param_1, uVar3, 4);\n            if (iVar1 != 0) {\n                param_1[2] = uVar3;\n                *param_1 = iVar1;\n                goto code_r0x00479cf5;\n            }\n        }\n        else {\n            uVar3 = param_1[1] * 2;\n            if ((-1 < uVar3) && (uVar3 < 0x20000000)) goto code_r0x00479cdf;\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x00479cf5:\n        fcn.00479ae2(param_1[1], param_2);\n        param_1[1] = param_1[1] + 1;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 290
    },
    "00450d69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00450d69(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0045a065(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00403f7f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f7f(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    iVar3 = (**0x481978)(arg_8h, &var_14h);\n    if (iVar3 != 0) goto code_r0x0040403e;\n    var_20h = 0;\n    (**0x48197c)(arg_8h, &var_28h, &var_20h);\n    var_24h = 0;\n    var_18h = NULL;\n    iVar3 = (**0x481980)(arg_ch, 1, &var_18h);\n    pcVar1 = *0x481984;\n    if (iVar3 != 0) {\n        var_18h = &var_24h;\n    }\n    var_1ch = (**0x481984)(arg_8h, arg_ch);\n    pcVar2 = *0x481988;\n    if (var_1ch == 0) {\n        var_1ch = (**0x481988)(arg_8h, var_28h, var_18h);\n        if (var_1ch == 0) {\n            var_1ch = (**0x48198c)(arg_8h, 1);\n            if (var_1ch == 0) goto code_r0x00404023;\n        }\n        (*pcVar1)(arg_8h, &var_14h);\n        (*pcVar2)(arg_8h, var_28h, var_20h);\n    }\ncode_r0x00404023:\n    pcVar1 = *0x481990;\n    if (var_18h != &var_24h) {\n        (**0x481990)(var_18h);\n    }\n    (*pcVar1)(var_20h);\ncode_r0x0040403e:\n    fcn.004510f7(unaff_ESI);\n    return;\n}\n",
        "token_count": 524
    },
    "00412a7f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412a7f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    int32_t var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00412a0c(arg_8h, &var_8h, &var_4h);\n    iVar1 = fcn.00411d7e(arg_8h, &var_24h, 2);\n    if (iVar1 != 0) {\n        var_4h = var_4h - (-(var_14h != 1) & var_14h - 1U);\n    }\n    return var_4h;\n}\n",
        "token_count": 164
    },
    "00418cec": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418cec(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *(in_ECX + 0x5c) = 0xffffffff;\n    *(in_ECX + 0x60) = arg_8h;\n    *(in_ECX + 100) = arg_ch;\n    if (*(in_ECX + 0x20) != 0) {\n        uVar1 = fcn.0040e0b4();\n        if ((uVar1 & 0x300000) != 0) {\n            fcn.0041297f(0, 0, 1);\n            fcn.0041297f(1, 0, 1);\n            fcn.00412a3c(3, 0);\n        }\n    }\n    (**0x4816bc)(*(in_ECX + 0x20), &var_10h);\n    *(in_ECX + 0x68) = var_8h - var_10h;\n    *(in_ECX + 0x6c) = var_4h - var_ch;\n    if (*(in_ECX + 0x20) != 0) {\n        fcn.00418663();\n        (**0x4815d8)(*(in_ECX + 0x20), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 345
    },
    "0041cb11": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041cb11(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    (**0x48112c)(arg_8h, 0x18, &var_34h);\n    piVar1 = in_ECX + 0x27;\n    if (*piVar1 == 0) {\n        var_8h = 0;\n        var_4h = arg_8h;\n        iVar2 = (**(*in_ECX + 0x110))(0x413, var_30h / in_ECX[0x29], &var_8h);\n        uVar3 = iVar2 == 0;\n    }\n    else {\n        var_ch = var_30h / in_ECX[0x29];\n        var_1ch = 0;\n        var_14h = 0;\n        var_10h = arg_8h;\n        var_18h = *piVar1;\n        uVar3 = (**(*in_ECX + 0x110))(0x42e, 0, &var_1ch);\n    }\n    if (uVar3 != 0) {\n        fcn.00423fce(piVar1);\n        *piVar1 = arg_8h;\n    }\n    return uVar3;\n}\n",
        "token_count": 381
    },
    "0041f252": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041f252(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_ECX;\n    if (arg_8h != NULL) goto code_r0x0041f26c;\n    do {\n        fcn.00403bf2();\ncode_r0x0041f26c:\n    } while (*arg_8h == 0);\n    piVar1 = fcn.0042285b();\n    if (piVar1 != NULL) {\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        iVar2 = (**(*piVar1 + 0x54))(0, 0, 0x50800000, &var_14h, var_4h, arg_ch, arg_8h);\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040e0ce();\n            if ((uVar3 & 0x200) == 0) {\n                return piVar1;\n            }\n            fcn.0040e112(0x200, 0, 0x20);\n            return piVar1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 345
    },
    "004202a3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004202a3(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (in_ECX[0x32] == 0) {\n        uVar1 = in_ECX[0x34];\n        in_ECX[0x32] = 1;\n        if ((uVar1 & 4) != 0) {\n            arg_8h = 1;\n        }\n        in_ECX[0x34] = uVar1 & 0xfffffff3;\n        if ((arg_8h != 0) && (in_ECX[0x20] != NULL)) {\n            (**(*in_ECX[0x20] + 0x50))();\n        }\n        uVar1 = fcn.0040e0b4();\n        if ((uVar1 & 0x2000) == 0) {\n            fcn.00414188(0, 0xffff, 0xe900, 2, in_ECX + 0x1c, 0, 1);\n        }\n        else {\n            var_8h = 0x7fff;\n            var_4h = 0x7fff;\n            var_10h = 0;\n            var_ch = 0;\n            fcn.00414188(0, 0xffff, 0xe900, 1, &var_10h, &var_10h, 0);\n            fcn.00414188(0, 0xffff, 0xe900, 2, in_ECX + 0x1c, &var_10h, 1);\n            (**(*in_ECX + 0x68))(&var_10h, 0);\n            fcn.0040e533(0, 0, 0, var_8h - var_10h, var_4h - var_ch, 0x16);\n        }\n        in_ECX[0x32] = 0;\n    }\n    return;\n}\n",
        "token_count": 481
    },
    "00424599": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl\nfcn.00424599(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(0x38);\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x34) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x2c) = vtable.CRgn.0;\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x24) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.0042433a(*(unaff_EBP + 8));\n    (**0x48166c)(unaff_EBP + -0x44, *(unaff_EBP + 8));\n    (**0x4817e8)(unaff_EBP + -0x44, -*(unaff_EBP + 0xc), -*(unaff_EBP + 0x10));\n    (**0x48168c)(unaff_EBP + -0x44, unaff_EBP + -0x44, *(unaff_EBP + 8));\n    uVar2 = (**0x4810e4)(unaff_EBP + -0x44);\n    fcn.00406b6c(uVar2);\n    uVar2 = (**0x481134)(0, 0, 0, 0);\n    fcn.00406b6c(uVar2);\n    fcn.0042436e(unaff_EBP + -0x2c, unaff_EBP + -0x24, 3);\n    if (*(unaff_EBP + 0x20) == 0) {\n        uVar2 = fcn.004244f6();\n        *(unaff_EBP + 0x20) = uVar2;\n    }\n    iVar3 = *(unaff_EBP + 0x20);\n    if (iVar3 == 0) {\n        fcn.00403bf2();\n        iVar3 = extraout_ECX_00;\n    }\n    if (*(unaff_EBP + 0x24) == 0) {\n        *(unaff_EBP + 0x24) = iVar3;\n    }\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x1c) = vtable.CRgn.0;\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 4;\n    pcVar1 = *0x481134;\n    if (*(unaff_EBP + 0x14) != 0) {\n        uVar2 = (**0x481134)(0, 0, 0, 0);\n        fcn.00406b6c(uVar2);\n        fcn.00424353(*(unaff_EBP + 0x14));\n        (**0x48166c)(unaff_EBP + -0x44, *(unaff_EBP + 0x14));\n        (**0x4817e8)(unaff_EBP + -0x44, -*(unaff_EBP + 0x18), -*(unaff_EBP + 0x1c));\n        (**0x48168c)(unaff_EBP + -0x44, unaff_EBP + -0x44, *(unaff_EBP + 0x14));\n        fcn.00424353(unaff_EBP + -0x44);\n        fcn.0042436e(unaff_EBP + -0x2c, unaff_EBP + -0x24, 3);\n        if (*(*(unaff_EBP + 0x20) + 4) == *(*(unaff_EBP + 0x24) + 4)) {\n            uVar2 = (*pcVar1)(0, 0, 0, 0);\n            fcn.00406b6c(uVar2);\n            fcn.0042436e(unaff_EBP + -0x1c, unaff_EBP + -0x34, 3);\n        }\n    }\n    pcVar1 = *0x4810c8;\n    if ((*(*(unaff_EBP + 0x20) + 4) != *(*(unaff_EBP + 0x24) + 4)) && (*(unaff_EBP + 0x14) != 0)) {\n        fcn.00406441(unaff_EBP + -0x1c);\n        (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n        uVar2 = fcn.00406d5b(*(unaff_EBP + 0x24));\n        *(unaff_EBP + 0x14) = uVar2;\n        (*pcVar1)(extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), \n                  *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44), *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n        fcn.00406d5b(*(unaff_EBP + 0x14));\n    }\n    iVar3 = unaff_EBP + -0x14;\n    if (*(unaff_EBP + -0x10) == 0) {\n        iVar3 = unaff_EBP + -0x34;\n    }\n    fcn.00406441(iVar3);\n    (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n    uVar2 = fcn.00406d5b(*(unaff_EBP + 0x20));\n    *(unaff_EBP + 0x14) = uVar2;\n    (*pcVar1)(extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44), \n              *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n    if (*(unaff_EBP + 0x14) != 0) {\n        fcn.00406d5b(*(unaff_EBP + 0x14));\n    }\n    fcn.00406441(0);\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x14) = vtable.CGdiObject.0;\n    fcn.00406bbf();\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x1c) = vtable.CGdiObject.0;\n    fcn.00406bbf();\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x24) = vtable.CGdiObject.0;\n    fcn.00406bbf();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x2c) = vtable.CGdiObject.0;\n    fcn.00406bbf();\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x34) = vtable.CGdiObject.0;\n    fcn.00406bbf();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 2160
    },
    "004248eb": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004248eb(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    if (arg_ch == 0) {\n        uVar2 = (**0x4817f8)(0);\n    }\n    else {\n        uVar2 = *(arg_ch + 8);\n    }\n    puVar5 = &var_40h;\n    for (iVar4 = 0xf; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar5 = puVar5 + 1;\n    }\n    uVar3 = (**0x4811ec)(uVar2, 0x5a, var_40h, 0x2d0);\n    var_44h = (**0x481434)(uVar3);\n    pcVar1 = *0x4810a0;\n    var_48h = 0;\n    (**0x4810a0)(uVar2, &var_48h, 1);\n    uVar3 = 1;\n    var_50h = 0;\n    var_4ch = 0;\n    (*pcVar1)(uVar2, &var_50h);\n    iVar4 = fcn.00451c13(var_44h - var_4ch);\n    var_40h = -iVar4;\n    if (arg_ch == 0) {\n        (**0x4817f4)(0, uVar2);\n    }\n    fcn.004242fc(&var_40h);\n    fcn.004510f7(uVar3);\n    return;\n}\n",
        "token_count": 486
    },
    "0042809d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042809d(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = fcn.00451c13(arg_8h);\n    puVar1 = fcn.00427f05(&var_24h, 10000);\n    var_ch = *puVar1;\n    var_8h = puVar1[1];\n    var_4h = puVar1[2];\n    if (arg_8h < 0) {\n        puVar1 = fcn.00427ec2(&var_24h);\n        var_ch = *puVar1;\n        var_8h = puVar1[1];\n        var_4h = puVar1[2];\n    }\n    var_18h = fcn.00451c13(arg_ch);\n    if (arg_ch < 0) {\n        puVar1 = fcn.00427ec2(&var_24h);\n        var_18h = *puVar1;\n        var_14h = puVar1[1];\n        var_10h = puVar1[2];\n    }\n    uVar2 = fcn.00427dfe(&var_24h, &var_18h);\n    fcn.00426cf3(uVar2);\n    *(in_ECX + 8) = 0;\n    return;\n}\n",
        "token_count": 401
    },
    "0042d58e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0042d58e(void)\n\n{\n    uint arg_8h;\n    uint var_18h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a5230 ^ &stack0xfffffffc;\n    arg_8h = (**0x4812ec)(&var_18h);\n    (**0x4812f0)();\n    fcn.004510f7(arg_8h);\n    return;\n}\n",
        "token_count": 102
    },
    "0042f8b8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f8b8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00419c68();\n    iVar1 = *(iVar1 + 4);\n    if (arg_8h == 0) {\n        piVar2 = in_ECX[0x31];\n        if (piVar2 != NULL) {\n            if (piVar2[0x35] != 0) {\n                (**(*in_ECX + 0x10c))(0);\n            }\n            piVar2 = in_ECX[0x31];\n            if (piVar2 == NULL) {\n                return;\n            }\n            (**(*piVar2 + 0x14c))(0);\n            return;\n        }\n        var_4h = (**(*in_ECX + 0x60))();\n        if (var_4h != 0) {\n            piVar2 = fcn.0043f933();\n            var_8h = NULL;\n            iVar5 = (**(*in_ECX + 100))(&var_4h);\n            do {\n                piVar3 = fcn.004148fc();\n                if (piVar3 != NULL) goto code_r0x0042fa4d;\n                fcn.00403bf2();\n                do {\n                    piVar6 = fcn.004148fc();\n                    if (piVar6 != piVar3) break;\ncode_r0x0042fa4d:\n                    iVar5 = (**(*in_ECX + 100))(&var_4h);\n                } while (iVar5 != 0);\n                piVar6 = fcn.004148fc();\n                if ((piVar6 == NULL) || (piVar6 = (**(*piVar6 + 0x140))(),  piVar6 != piVar3)) {\n                    (**(*in_ECX + 0x94))(piVar3);\n                    if (piVar2 == piVar3) {\n                        (**(*piVar3 + 0x14c))(0);\n                        piVar3 = var_8h;\n                    }\n                    else {\n                        (**(*piVar3 + 0x60))();\n                        piVar3 = var_8h;\n                    }\n                }\n                var_8h = piVar3;\n            } while (iVar5 != 0);\n            if (var_8h != NULL) {\n                (**(*in_ECX + 0x94))(var_8h);\n                if (piVar2 == var_8h) {\n                    (**(*var_8h + 0x14c))(0);\n                }\n                else {\n                    (**(*var_8h + 0x60))();\n                }\n            }\n        }\n        piVar2 = *(iVar1 + 0x20);\n        iVar1 = fcn.0042a54a();\n        if ((((iVar1 == 0) && (piVar2 != NULL)) && (iVar1 = fcn.0040e21a(),  iVar1 != 0)) &&\n           ((iVar1 = (**(*piVar2 + 0x120))(),  iVar1 != 0 && (piVar3 = (**(*piVar2 + 0x140))(),  piVar3 == piVar2)))) {\n            fcn.0040da9e();\n        }\n    }\n    else {\n        if (in_ECX[0x31] != 0) {\n            (**(*in_ECX + 0x108))();\n        }\n        piVar2 = fcn.0043f933();\n        if (piVar2 == NULL) {\n            if (*(iVar1 + 0x20) != 0) {\n                iVar1 = fcn.0040be6f();\n                iVar5 = (**0x4817b0)(*(iVar1 + 0x20));\n                if ((iVar5 == 0) && (piVar2 = in_ECX[0x2c],  piVar2 != NULL)) {\n                    (**(*piVar2 + 0x18))(piVar2);\n                }\n                fcn.0040e1f9(5);\n                uVar4 = (**0x4816a0)(*(iVar1 + 0x20));\n                fcn.00413d94(uVar4);\n                (**0x481650)(*(iVar1 + 0x20));\n            }\n        }\n        else {\n            iVar1 = (**0x4817b0)(piVar2[8]);\n            if ((iVar1 == 0) && (piVar3 = in_ECX[0x2c],  piVar3 != NULL)) {\n                (**(*piVar3 + 0x18))(piVar3);\n            }\n            (**(*piVar2 + 0x14c))(0xffffffff);\n            piVar3 = fcn.004148fc();\n            if (piVar3 != NULL) {\n                (**(*piVar3 + 0x14c))(0xffffffff);\n                piVar2 = piVar3;\n            }\n            uVar4 = (**0x48174c)(piVar2[8]);\n            iVar1 = fcn.00413d94(uVar4);\n            (**0x481650)(*(iVar1 + 0x20));\n            (**(*piVar2 + 0x164))(0);\n            (**(*piVar2 + 0x160))(1);\n        }\n        if (in_ECX[0x14] == 0) {\n            fcn.0042a53b(1);\n        }\n    }\n    piVar2 = in_ECX[0x2c];\n    if (piVar2 != NULL) {\n        if ((arg_8h == 0) && (in_ECX[0x2e] == 0)) {\n            return;\n        }\n        (**(*piVar2 + 0x1c))(piVar2, arg_8h);\n        in_ECX[0x2e] = arg_8h;\n    }\n    if (arg_8h != 0) {\n        fcn.0043dd23(1, 0);\n    }\n    return;\n}\n",
        "token_count": 1396
    },
    "00435f85": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435f85(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    \n    var_24h = arg_8h;\n    var_28h = 0x18;\n    var_1ch = 0xf000;\n    var_20h = ((arg_ch != 0) + 1) * 0x1000;\n    (**0x48183c)(*(in_ECX + 0x20), 0x110d, 0, &var_28h);\n    return;\n}\n",
        "token_count": 157
    },
    "004381d9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004381d9(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(in_ECX + 0xac);\n    puVar1 = in_ECX + 0xb0;\n    uVar2 = *puVar1;\n    uVar3 = *(in_ECX + 0xb4);\n    uVar4 = *(in_ECX + 0xb8);\n    uVar5 = *(in_ECX + 0xbc);\n    *(in_ECX + 0xac) = *arg_ch == 0;\n    (**0x48166c)(puVar1, arg_ch + 1);\n    fcn.00434500(arg_8h, arg_ch);\n    *puVar1 = uVar2;\n    *(in_ECX + 0xb4) = uVar3;\n    *(in_ECX + 0xb8) = uVar4;\n    *(in_ECX + 0xbc) = uVar5;\n    *(in_ECX + 0xac) = uVar6;\n    return;\n}\n",
        "token_count": 301
    },
    "0043b42c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043b42c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = fcn.0042349a(*(in_ECX + 0x24), 0x48f2b0);\n    uVar3 = 0;\n    if (piVar1 == NULL) {\n        return 0;\n    }\n    var_18h = 0xffffffff;\n    var_24h._0_2_ = 3;\n    var_20h = 0;\n    var_1ch = 4;\n    var_14h = 0x20;\n    iVar2 = (**(*piVar1 + 0xc))(piVar1, &var_24h, 7, &var_4h);\n    if (iVar2 < 0) {\n        (**(*piVar1 + 8))(piVar1);\n        return 0;\n    }\n    if (arg_8h != 0) {\n        var_ch = arg_8h;\n        var_10h = 0x20;\n        var_8h = 0;\n        iVar2 = (**(*piVar1 + 0x1c))(piVar1, &var_24h, &var_10h, 0);\n        if (iVar2 < 0) goto code_r0x0043b4ae;\n    }\n    uVar3 = 1;\ncode_r0x0043b4ae:\n    (**(*piVar1 + 8))(piVar1);\n    return uVar3;\n}\n",
        "token_count": 435
    },
    "004412df": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004412df(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    fcn.00440d10(&var_ch);\n    fcn.004452d4(*0x4a85f8, &var_ch, 0);\n    fcn.00440eab(arg_10h, arg_14h, &var_ch);\n    fcn.004452d4(*0x4a8600, &var_ch, 0);\n    fcn.00440477(arg_8h);\n    if (arg_ch != 0) {\n        iVar1 = fcn.00440df1(&var_ch);\n        if (iVar1 != 0) {\n            fcn.004452d4(*0x4a85fc, &var_ch, 0);\n            fcn.00440eab(arg_10h, arg_14h, &var_ch);\n            fcn.004452d4(*0x4a8604, &var_ch, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "00441c5b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00441c5b(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar8 = 0;\n    if (*(in_ECX + 0x68) == 0) {\n        return 0;\n    }\n    iVar1 = (**0x4815fc)();\n    iVar2 = fcn.00441ad7(arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *(iVar2 + 0x20);\n    }\n    iVar3 = fcn.00415688();\n    uVar4 = (**0x481770)();\n    fcn.00413d94(uVar4);\n    iVar5 = fcn.00415688();\n    var_ch = 0;\n    iVar6 = (**0x481398)();\n    if (iVar2 != 0) {\n        iVar8 = (**0x481744)(iVar2, 0);\n    }\n    if ((iVar5 == 0) || (iVar7 = (**0x481874)(),  iVar2 == iVar7)) {\n        uVar4 = *0x4a8398;\n        if (iVar1 == *(in_ECX + 0x20)) {\n            (**0x4815c4)();\n            uVar4 = *0x4a8398;\n        }\ncode_r0x00441d4f:\n        (**0x481758)(uVar4);\n        goto code_r0x00441d55;\n    }\n    if (iVar2 == 0) {\ncode_r0x00441d1e:\n        if (iVar6 != iVar8) goto code_r0x00441d23;\n    }\n    else {\n        if (iVar6 == iVar8) {\n            uVar4 = *(in_ECX + 0x20);\n            iVar7 = fcn.0041e7fc();\n            if (iVar7 != 0) {\n                var_ch = 1;\n                if (iVar5 != iVar3) {\n                    iVar2 = 0;\n                    goto code_r0x00441d55;\n                }\n                uVar4 = *0x4a839c;\n                if (iVar1 != *(in_ECX + 0x20)) {\n                    (**0x4815cc)(*(in_ECX + 0x20));\n                    uVar4 = *0x4a839c;\n                }\n                goto code_r0x00441d4f;\n            }\n            goto code_r0x00441d1e;\n        }\ncode_r0x00441d23:\n        iVar2 = 0;\n    }\n    if (iVar1 == *(in_ECX + 0x20)) {\n        (**0x4815c4)(uVar4);\n    }\ncode_r0x00441d55:\n    if (arg_10h != NULL) {\n        *arg_10h = var_ch;\n    }\n    return iVar2;\n}\n",
        "token_count": 735
    },
    "00447408": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447408(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    fcn.0043b56a(&var_ch);\n    fcn.004452d4(*0x4a85f4, &var_ch, 0);\n    fcn.0043d0bf(arg_10h, arg_14h, &var_ch);\n    fcn.004452d4(*0x4a8600, &var_ch, 0);\n    fcn.0043b603(arg_8h);\n    if (arg_ch != 0) {\n        iVar1 = fcn.0043b6d5(&var_ch);\n        if (iVar1 != 0) {\n            fcn.004452d4(*0x4a85fc, &var_ch, 0);\n            fcn.0043d0bf(arg_10h, arg_14h, &var_ch);\n            fcn.004452d4(*0x4a8604, &var_ch, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "0044b9ab": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044b9ab(uint arg_8h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char *pcVar6;\n    int32_t *in_ECX;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = *(*in_ECX + -0xc);\n    pcVar5 = fcn.004023b3(iVar4);\n    pcVar1 = pcVar5 + iVar4;\n    pcVar6 = pcVar5;\n    while (pcVar8 = pcVar6,  pcVar8 < pcVar1) {\n        pcVar6 = fcn.004550d6(pcVar8);\n        if (*pcVar8 != arg_8h) {\n            uVar7 = pcVar6 - pcVar8;\n            pcVar2 = pcVar5 + uVar7;\n            for (var_4h = 0; (pcVar5 != pcVar2 && (var_4h < uVar7)); var_4h = var_4h + 1) {\n                cVar3 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n                *pcVar5 = cVar3;\n                pcVar5 = pcVar5 + 1;\n            }\n        }\n    }\n    *pcVar5 = '\\0';\n    fcn.0040210d(iVar4 - (pcVar8 - pcVar5));\n    return pcVar8 - pcVar5;\n}\n",
        "token_count": 376
    },
    "00424e0c": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424e0c(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        fcn.00424d79(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = in_ECX;\n        in_ECX[1] = in_ECX;\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00426278": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426278(uint *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (**0x48145c)(*param_1);\n    fcn.00425cfa(*(param_1 + 2), uVar1 & 0xffff);\n    fcn.00425cfa();\n    fcn.00426074(*param_1, uVar1 & 0xffff);\n    return;\n}\n",
        "token_count": 99
    },
    "0042c474": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c474(int32_t param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    if (*(*(param_1 + 100) + -0xc) == 0) {\n        fcn.004024df(*(param_1 + 0x40));\n    }\n    pcVar2 = *0x4816e4;\n    pcVar1 = *0x4816e0;\n    if ((*(param_1 + 0x48) != 0) && (*(param_1 + 0x30) == 0)) {\n        iVar3 = fcn.00419c68();\n        uVar5 = *(iVar3 + 0xc);\n        uVar4 = (*pcVar1)(uVar5, *(param_1 + 0x48));\n        *(param_1 + 0x30) = uVar4;\n        uVar5 = (*pcVar2)(uVar5, *(param_1 + 0x48));\n        *(param_1 + 0x34) = uVar5;\n    }\n    if ((*(param_1 + 0x44) != 0) && (*(param_1 + 0x38) == 0)) {\n        iVar3 = fcn.00419c68();\n        uVar5 = *(iVar3 + 0xc);\n        uVar4 = (*pcVar1)(uVar5, *(param_1 + 0x44));\n        *(param_1 + 0x38) = uVar4;\n        uVar5 = (*pcVar2)(uVar5, *(param_1 + 0x44));\n        *(param_1 + 0x3c) = uVar5;\n    }\n    if ((*(param_1 + 0x4c) != 0) && (*(param_1 + 0x28) == 0)) {\n        iVar3 = fcn.00419c68();\n        uVar5 = *(iVar3 + 0xc);\n        uVar4 = (*pcVar1)(uVar5, *(param_1 + 0x4c));\n        *(param_1 + 0x28) = uVar4;\n        uVar5 = (*pcVar2)(uVar5, *(param_1 + 0x4c));\n        *(param_1 + 0x2c) = uVar5;\n    }\n    return;\n}\n",
        "token_count": 548
    },
    "0043aa1e": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043aa1e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if ((arg_ch < arg_10h) || (arg_14h < arg_ch)) {\n        fcn.0043a904(arg_8h, arg_10h, 0, arg_14h, 0, \"%I64u\", 0xf112);\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00402f4b": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.00402f4b(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return *(in_FS_OFFSET + 0x30);\n}\n",
        "token_count": 35
    },
    "00403e95": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403e95(uint param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    int32_t iVar6;\n    uint unaff_retaddr;\n    \n    pcVar1 = *0x48182c;\n    (**0x48182c)(param_3);\n    iVar2 = (*pcVar1)(unaff_retaddr);\n    pcVar1 = *0x481830;\njoined_r0x00403eb2:\n    do {\n        do {\n            iVar2 = iVar2 + -1;\n            if (iVar2 < 0) {\n                return;\n            }\n            iVar3 = (*pcVar1)(param_1, iVar2);\n            iVar6 = 0;\n        } while (iVar3 == 0);\n        if (param_2 != 0) {\n            iVar4 = (**0x48182c)(iVar3);\n            if (0 < iVar4) {\n                do {\n                    iVar5 = (*pcVar1)(iVar3, iVar6);\n                    if (iVar5 == param_2) {\n                        (**0x481834)(iVar3, iVar6, 0x400);\n                        param_2 = 0;\n                        break;\n                    }\n                    iVar6 = iVar6 + 1;\n                } while (iVar6 < iVar4);\n            }\n            goto joined_r0x00403eb2;\n        }\n        if (0 < unaff_ESI) {\n            do {\n                iVar4 = (*pcVar1)(unaff_retaddr, iVar6);\n                if (iVar4 == iVar3) {\n                    (**0x481834)(param_1, iVar2, 0x400);\n                    break;\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < unaff_ESI);\n        }\n    } while( true );\n}\n",
        "token_count": 436
    },
    "0040953a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040953a(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 126
    },
    "00409638": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409638(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00419c68();\n    *(param_1 + 0x1c) = uVar1;\n    *(param_1 + 4) = 1;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x18) = 0;\n    return param_1;\n}\n",
        "token_count": 149
    },
    "0040c648": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0040c648(code **param_1)\n\n{\n    *param_1 = vtable.CCommandLineInfo.0;\n    fcn.00402395();\n    fcn.00402395();\n    fcn.00402395();\n    fcn.00402395();\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[1] = 0x1;\n    return param_1;\n}\n",
        "token_count": 115
    },
    "0040c687": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c687(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CCommandLineInfo.0;\n    fcn.00401fb6();\n    fcn.00401fb6();\n    fcn.00401fb6();\n    ppiVar3 = param_1[5] + -0x10;\n    piVar1 = param_1[5] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "00417970": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00417970(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EDI;\n    int32_t unaff_retaddr;\n    int32_t iVar3;\n    \n    iVar1 = fcn.004129af(0);\n    iVar3 = 0;\n    fcn.0041297f(0, unaff_retaddr, 1);\n    iVar2 = fcn.004129af(1);\n    fcn.0041297f(1, unaff_EDI, 1);\n    fcn.00412ac6(iVar1 - iVar3, iVar2 - unaff_retaddr, 0, 0);\n    return;\n}\n",
        "token_count": 153
    },
    "00419ada": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00419ada(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00451139(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    fcn.00402395();\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x14] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    uVar1 = *(unaff_EBP + 8);\n    extraout_ECX[10] = 0x20;\n    extraout_ECX[8] = 0x14;\n    extraout_ECX[6] = NULL;\n    *(extraout_ECX + 5) = uVar1;\n    *(unaff_EBP + -4) = 2;\n    fcn.004023b3(0x1000);\n    *(unaff_EBP + -4) = 1;\n    extraout_ECX[0xc] = 0x1;\n    extraout_ECX[0x11] = 0x18;\n    pcVar3 = fcn.00403a9d(8);\n    extraout_ECX[0x1e] = pcVar3;\n    iVar4 = fcn.00422997(0x188);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 4;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.004197f3();\n    }\n    puVar2 = extraout_ECX[0x1e];\n    *(unaff_EBP + -4) = 1;\n    *puVar2 = uVar5;\n    iVar4 = fcn.00422997(100);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 5;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00419a37();\n    }\n    *(extraout_ECX[0x1e] + 4) = uVar5;\n    extraout_ECX[0x1f] = 0x1;\n    extraout_ECX[0x20] = NULL;\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 726
    },
    "004205df": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004205df(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CList_struct_HWND_____struct_HWND____.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 111
    },
    "00423ad0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00423ad0(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapPtrToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 132
    },
    "00423bd7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00423bd7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    pcVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CHandleMap.0;\n    fcn.00439a47(*(pcVar1 + 4), 0x40);\n    *(unaff_EBP + -4) = 0;\n    fcn.00423ad0(10);\n    *(unaff_EBP + -4) = 1;\n    fcn.00423ad0(4);\n    iVar2 = 0;\n    *(unaff_EBP + -4) = 2;\n    if (*(unaff_EBP + 0xc) != 0) goto code_r0x00423c2c;\n    do {\n        iVar2 = fcn.00403bf2();\ncode_r0x00423c2c:\n    } while (*(unaff_EBP + 0x10) == iVar2);\n    fcn.004238cf(7, iVar2);\n    extraout_ECX[5] = *(unaff_EBP + 0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x10);\n    extraout_ECX[0x16] = *(unaff_EBP + 0x14);\n    extraout_ECX[0x17] = *(unaff_EBP + 0x18);\n    extraout_ECX[0x15] = pcVar1;\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 460
    },
    "00424b4a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00424b4a(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CPtrList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 106
    },
    "004409be": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004409be(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        if (*(param_1 + 0x3c) != 0) {\n            uVar1 = fcn.004234da(0x48f7b0);\n            (**(**(param_1 + 0x3c) + 0x18))(*(param_1 + 0x3c), uVar1, 0, 0);\n        }\n    }\n    else if (param_2 == 1) {\n        if (*(param_1 + 0x38) != 0) {\n            (**(**(param_1 + 0x38) + 0x1c))(*(param_1 + 0x38));\n        }\n    }\n    else if (param_2 == 2) {\n        if (*(param_1 + 0x38) != 0) {\n            (**(**(param_1 + 0x38) + 0x20))(*(param_1 + 0x38));\n        }\n    }\n    else if ((param_2 == 3) && (*(param_1 + 0x38) != 0)) {\n        (**(**(param_1 + 0x38) + 0x18))(*(param_1 + 0x38), param_3);\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "00445299": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445299(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    iVar1 = fcn.00403f41(arg_10h, arg_8h, &var_14h);\n    *(iVar1 + 0x10) = 1;\n    iVar1 = fcn.004451e6(iVar1, 1);\n    *(iVar1 + 0x1c) = 0;\n    *(iVar1 + 0x14) = 1;\n    *(iVar1 + 0x18) = arg_ch;\n    return;\n}\n",
        "token_count": 148
    },
    "00445314": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445314(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    iVar1 = fcn.00403f41(arg_ch, arg_8h, &var_14h);\n    *(iVar1 + 0x10) = 5;\n    iVar1 = fcn.004451e6(iVar1, 1);\n    *(iVar1 + 0x14) = 0;\n    *(iVar1 + 0x18) = 0;\n    *(iVar1 + 0x1c) = 0;\n    return;\n}\n",
        "token_count": 140
    },
    "0044539c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044539c(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_14h;\n    \n    uVar1 = fcn.00403f41(arg_ch, arg_8h, &var_14h);\n    iVar2 = fcn.004451e6(uVar1, 2);\n    *(iVar2 + 0x14) = 0;\n    *(iVar2 + 0x18) = 0;\n    *(iVar2 + 0x1c) = 0;\n    return;\n}\n",
        "token_count": 134
    },
    "00449001": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00449001(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CObList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 104
    },
    "0044bbc0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0044bbc0(code **param_1, code **param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.COleControlLock.0;\n    param_1[6] = NULL;\n    param_1[1] = *param_2;\n    param_1[2] = param_2[1];\n    param_1[3] = param_2[2];\n    param_1[4] = param_2[3];\n    ppiVar1 = param_1 + 5;\n    *ppiVar1 = NULL;\n    iVar2 = fcn.004196b5();\n    if ((*(iVar2 + 0x100) == 0) && (iVar2 = fcn.0044a626(),  iVar2 == 0)) {\n        return param_1;\n    }\n    iVar2 = (**0x4818fc)(param_2, 3, 0, 0x48f410, ppiVar1);\n    if ((-1 < iVar2) && (iVar2 = (**(**ppiVar1 + 0x10))(*ppiVar1, 1),  iVar2 < 0)) {\n        (**(**ppiVar1 + 8))(*ppiVar1);\n        *ppiVar1 = NULL;\n    }\n    return param_1;\n}\n",
        "token_count": 307
    },
    "0044cb98": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0044cb98(code **param_1, code *param_2)\n\n{\n    fcn.0040ad5a();\n    param_1[4] = param_2;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    *param_1 = vtable.CMemFile.0;\n    param_1[9] = 0x1;\n    return param_1;\n}\n",
        "token_count": 122
    },
    "0044ce66": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ce66(int32_t *param_1)\n\n{\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    if ((param_1[8] != 0) && (param_1[9] != 0)) {\n        (**(*param_1 + 0x60))(param_1[8]);\n    }\n    param_1[8] = 0;\n    return;\n}\n",
        "token_count": 125
    },
    "0044cf7d": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0044cf7d(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CMemFile.0;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.0044ce66();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    fcn.0040af00();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 222
    },
    "0044ec41": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ec41(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.COleDispatchException.0;\n    fcn.00401fb6();\n    fcn.00401fb6();\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00403b95": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403b95(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.00409992(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 97
    },
    "00406a56": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406a56(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[1] = NULL;\n    extraout_ECX[2] = NULL;\n    extraout_ECX[3] = NULL;\n    *(unaff_EBP + -4) = 0;\n    iVar3 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CPaintDC.0;\n    pcVar1 = *(iVar3 + 0x20);\n    extraout_ECX[4] = pcVar1;\n    uVar2 = (**0x4817bc)(pcVar1, extraout_ECX + 5);\n    iVar3 = fcn.004068a5(uVar2);\n    if (iVar3 == 0) {\n        fcn.00405e69();\n    }\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 288
    },
    "00415928": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00415928(code **param_1)\n\n{\n    param_1[5] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    fcn.0042a52b();\n    return param_1;\n}\n",
        "token_count": 145
    },
    "0041ed2b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ed2b(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *(param_1 + 4); puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.004357e3();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 144
    },
    "00423929": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423929(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.00403ac8(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.004357e3();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 121
    },
    "00424a30": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424a30(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.004357e3();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 102
    },
    "0043503c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0043503c(int32_t param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.00434f33(param_2);\n    *param_3 = uVar1;\n    uVar1 = uVar1 % *(param_1 + 8);\n    *param_2 = uVar1;\n    if (*(param_1 + 4) != 0) {\n        for (puVar3 = *(*(param_1 + 4) + uVar1 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n            if ((puVar3[1] == *param_3) && (iVar2 = fcn.00410a50(unaff_retaddr),  iVar2 == 0)) {\n                return puVar3;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 232
    },
    "004350ed": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004350ed(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uStack24;\n    uint uStack20;\n    \n    if (*(param_1 + 4) != 0) {\n        uVar2 = 0;\n        if (*(param_1 + 8) != 0) {\n            do {\n                for (puVar3 = *(*(param_1 + 4) + uVar2 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n                    if (puVar3 == 0xfffffff8) {\n                        uStack20 = 0;\n                        uStack24 = 0x4a3540;\n                        fcn.004515ca(&stack0xffffffe8, 0x49617c);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    uStack24 = 0x435116;\n                    fcn.0042226d();\n                }\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(param_1 + 8));\n        }\n        uStack20 = *(param_1 + 4);\n        uStack24 = 0x43512a;\n        fcn.00403ac8();\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    uStack20 = 0x43513c;\n    fcn.004357e3();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 381
    },
    "00448e95": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448e95(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.004357e3();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 102
    },
    "0044af62": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0044af62(code **param_1, code *param_2, code *param_3, code *param_4, code *param_5)\n\n{\n    fcn.00409638();\n    *param_1 = vtable.CEnumArray.0;\n    param_1[0xe] = vtable.CEnumArray::XEnumVOID.0;\n    param_1[9] = NULL;\n    param_1[0xb] = NULL;\n    param_1[8] = param_2;\n    param_1[0xc] = param_4;\n    param_1[10] = param_3;\n    param_1[0xd] = param_5;\n    return param_1;\n}\n",
        "token_count": 165
    },
    "00407d5e": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407d5e(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.00424bfb(param_2);\n    *(param_2 + 0x54) = param_1;\n    (**(*param_1 + 0x68))();\n    return;\n}\n",
        "token_count": 74
    },
    "00407d7e": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407d7e(int32_t *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00424b25(param_2, 0);\n    fcn.00424ac7(uVar1);\n    *(param_2 + 0x54) = 0;\n    (**(*param_1 + 0x68))();\n    return;\n}\n",
        "token_count": 99
    },
    "00429626": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00429626(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (**0x481018)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = *0x481008;\n    if (iVar2 == 0) {\n        iVar2 = (**0x481008)(var_4h, *(param_1 + 0x54), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 0x68), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = *0x481030;\n    if (var_4h != 0) {\n        (**0x481030)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 339
    },
    "0043b181": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b181(uint arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    ppiVar1 = in_ECX + 0x28;\n    piVar2 = *ppiVar1;\n    *(in_ECX + 0x34) = 0;\n    var_4h = in_ECX;\n    if (piVar2 != NULL) {\n        var_4h = 0;\n        var_8h = in_ECX;\n        (**(*piVar2 + 0x20))(piVar2, &var_8h, 0, &var_4h);\n        if (var_4h != 0) {\n            fcn.004234be(&var_4h);\n        }\n        (**(**ppiVar1 + 0x1c))(*ppiVar1, var_8h, 0, 0);\n        fcn.004234be(ppiVar1);\n    }\n    ppiVar1 = in_ECX + 0x24;\n    piVar2 = *ppiVar1;\n    if (piVar2 != NULL) {\n        if (*(in_ECX + 0x40) != 0) {\n            (**(*piVar2 + 0x50))(piVar2, *(in_ECX + 0x40));\n            *(in_ECX + 0x40) = 0;\n        }\n        uVar3 = (**(**ppiVar1 + 0x18))(*ppiVar1, arg_8h);\n        *(in_ECX + 0x34) = uVar3;\n        fcn.004234be(ppiVar1);\n    }\n    fcn.004234be(in_ECX + 0x38);\n    fcn.004234be(in_ECX + 0x3c);\n    if (*(in_ECX + 0x60) != 0) {\n        fcn.0042365a();\n        *(in_ECX + 0x60) = 0;\n        if (*(in_ECX + 100) != 0) {\n            fcn.0042365a();\n            *(in_ECX + 100) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 517
    },
    "0043f88f": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043f88f(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    var_4h = (**(*param_1 + 0xb4))();\n    do {\n        if (var_4h == NULL) {\n            return 0;\n        }\n        piVar1 = (**(*param_1 + 0xb8))(&var_4h);\n        iVar2 = (**(*piVar1 + 0x50))();\n    } while (iVar2 == 0);\n    return 1;\n}\n",
        "token_count": 151
    },
    "00443560": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443560(int32_t param_1)\n\n{\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    iStack8 = param_1;\n    iStack4 = param_1;\n    fcn.00443417();\n    (**(**(param_1 + 0x68) + 0x138))(&iStack8, *(param_1 + 0x40) - *(param_1 + 0x38), 0x42);\n    fcn.0044aa8a(*(param_1 + 0x68), *(param_1 + 0x48), *(param_1 + 0x4c), *(param_1 + 0x70) & 0x40 | 0x2004);\n    return;\n}\n",
        "token_count": 177
    },
    "0042fc0b": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042fc0b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    iVar2 = fcn.00419c68();\n    iVar2 = *(iVar2 + 4);\n    iVar1 = in_ECX[0x31];\n    if (arg_8h == 0) {\n        if (*(iVar2 + 0x24) == iVar1) {\n            *(iVar2 + 0x24) = 0;\n        }\n        fcn.0041e88d(0);\n        if (*(iVar1 + 0xf8) != 0) {\n            (**(*in_ECX + 0x114))(*(iVar1 + 0xf8), 0);\n        }\n        (**(*in_ECX + 0x114))(*(iVar1 + 0xf4), 0);\n        if (*(iVar1 + 0xf0) != 0) {\n            (**(*in_ECX + 300))(0, *(iVar1 + 0xf0), 0);\n        }\n        (**(*in_ECX + 300))(0, *(iVar1 + 0xec), 1);\n        piVar4 = fcn.0041ea1c();\n        if (piVar4 != NULL) {\n            (**(*piVar4 + 0x160))(0, piVar4, piVar4);\n        }\n        (**0x48183c)(*(iVar1 + 0x20), 6, 0, 0);\n        uVar3 = fcn.00413e0e();\n        *(*(iVar1 + 0xf4) + 0x20) = uVar3;\n        if (*(iVar1 + 0xf8) != 0) {\n            uVar3 = fcn.00413e0e();\n            *(*(iVar1 + 0xf8) + 0x20) = uVar3;\n        }\n    }\n    else {\n        uVar3 = fcn.00413e0e();\n        fcn.00413dd5(uVar3);\n        if (*(iVar1 + 0xf8) != 0) {\n            uVar3 = fcn.00413e0e();\n            fcn.00413dd5(uVar3);\n        }\n        *(iVar2 + 0x24) = iVar1;\n        iVar2 = *(iVar1 + 0xf8);\n        if (iVar2 != 0) {\n            (**(*in_ECX + 0x114))(iVar2, 1);\n        }\n        (**(*in_ECX + 0x114))(*(iVar1 + 0xf4), 1);\n        fcn.0041e88d(1);\n        if (*(iVar1 + 0xf0) != 0) {\n            (**(*in_ECX + 300))(0, *(iVar1 + 0xf0), 0);\n        }\n        (**(*in_ECX + 300))(0, *(iVar1 + 0xec), 1);\n        piVar4 = *(iVar1 + 0xec);\n        (**(*piVar4 + 0x28))(piVar4, *(iVar1 + 0xfc), *(iVar1 + 0x118), *(iVar1 + 0x20));\n        (**0x48183c)(*(iVar1 + 0x20), 6, 1, 0);\n    }\n    return;\n}\n",
        "token_count": 773
    },
    "0044b346": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b346(int32_t param_1)\n\n{\n    uint var_10h;\n    \n    (**(**(param_1 + 0x7c) + 0x28))(*(param_1 + 0x7c), 1);\n    (**0x4816bc)(*(*(param_1 + 0x58) + 0x20), &var_10h);\n    (**(**(param_1 + 0x7c) + 0x18))(*(param_1 + 0x7c), &var_10h);\n    (**(**(param_1 + 0x7c) + 0x24))(*(param_1 + 0x7c), 1);\n    return;\n}\n",
        "token_count": 166
    },
    "004020f1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.004020f1(char *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    \n    if (param_1 == NULL) {\n        return param_1;\n    }\n    pcVar1 = param_1 + 1;\n    do {\n        cVar2 = *param_1;\n        param_1 = param_1 + 1;\n    } while (cVar2 != '\\0');\n    return param_1 + -pcVar1;\n}\n",
        "token_count": 109
    },
    "00403a9d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00403a9d(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.00450012(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x4a32cc == NULL) break;\n        iVar1 = (**0x4a32cc)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "00404894": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00404894(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    if (param_1 == 0xc) {\n        uVar1 = 0x8007000e;\n    }\n    else {\n        if (param_1 == 0x16) goto code_r0x004048ba;\n        if (param_1 == 0x22) goto code_r0x004048ba;\n        if (param_1 == 0x50) {\n            return;\n        }\n        uVar1 = 0x80004005;\n    }\n    do {\n        fcn.00401103(uVar1);\ncode_r0x004048ba:\n        uVar1 = 0x80070057;\n    } while( true );\n}\n",
        "token_count": 184
    },
    "0040b797": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040b797(uint *param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    \n    *param_1 = param_2;\n    param_1[1] = 0;\n    if (*0x4a6920 == '\\0') {\n        iVar2 = (**0x481420)(\"KERNEL32\");\n        if (iVar2 != 0) goto code_r0x0040b7ca;\ncode_r0x0040b7c5:\n        do {\n            fcn.00403bf2();\ncode_r0x0040b7ca:\n            pcVar1 = *0x481424;\n            *0x4a6910 = (**0x481424)(iVar2, \"CreateActCtxA\", unaff_ESI);\n            *0x4a6914 = (*pcVar1)(iVar2, \"ReleaseActCtx\");\n            *0x4a6918 = (*pcVar1)(iVar2, \"ActivateActCtx\");\n            *0x4a691c = (*pcVar1)(iVar2, \"DeactivateActCtx\");\n            if (*0x4a6910 == 0) {\n                if ((*0x4a6914 != 0) || (*0x4a6918 != 0)) goto code_r0x0040b7c5;\n            }\n            else if ((*0x4a6914 == 0) || (*0x4a6918 == 0)) goto code_r0x0040b7c5;\n        } while (*0x4a691c != 0);\n        *0x4a6920 = '\\x01';\n    }\n    return param_1;\n}\n",
        "token_count": 382
    },
    "0040dc11": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040dc11(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    pcVar2 = *0x4817a0;\n    iVar3 = param_1;\n    if (param_1 != 0) goto code_r0x0040dc40;\n    iVar3 = fcn.0040db3a();\n    if ((iVar3 == 0) && (iVar3 = fcn.0040be6f(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar5 = iVar3;\n        iVar6 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x20); iVar5 = iVar3,  iVar6 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x0040dc40:\n            uVar4 = (**0x481748)(iVar3, 0xfffffff0);\n            iVar5 = iVar3;\n            iVar6 = iVar3;\n            if ((uVar4 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar5,  iVar1 != 0) {\n        iVar5 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((param_1 == 0) && (iVar6 != 0)) {\n        iVar6 = (**0x48174c)(iVar6);\n    }\n    if (param_2 != NULL) {\n        if (((iVar3 == 0) || (iVar5 = (**0x481750)(iVar3),  iVar5 == 0)) || (iVar3 == iVar6)) {\n            *param_2 = 0;\n        }\n        else {\n            *param_2 = iVar3;\n            (**0x481858)(iVar3, 0);\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 464
    },
    "00412601": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412601(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = 0x7fffffff;\n    if (param_2 == 0x7fffffff) goto code_r0x00412620;\n    if (*param_1 == 0x7fffffff) goto code_r0x0041261e;\n    if (*param_1 == param_2) goto code_r0x0041261e;\n    do {\n        iVar1 = fcn.00403bf2();\n        param_1 = extraout_ECX;\ncode_r0x0041261e:\n        *param_1 = param_2;\ncode_r0x00412620:\n    } while (*param_1 == iVar1);\n    fcn.0042657b(*param_1);\n    return;\n}\n",
        "token_count": 201
    },
    "0041285e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041285e(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (arg_8h == 0) {\n        fcn.00403bf2();\n    }\n    iVar1 = (**0x48182c)(*(arg_8h + 4));\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.0040f4ea(iVar3);\n            if (iVar2 == 0) {\n                iVar2 = (**0x481824)(*(arg_8h + 4), iVar3);\n                if (iVar2 == arg_ch) goto code_r0x004128c0;\n            }\n            else {\n                if (*(iVar2 + 4) == arg_ch) {\ncode_r0x004128c0:\n                    iVar1 = fcn.0042c742(*(arg_8h + 4));\n                    return iVar1;\n                }\n                iVar2 = fcn.0041285e(iVar2, arg_ch);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 299
    },
    "0041449e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041449e(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    \n    pcVar1 = *0x481778;\n    while( true ) {\n        iVar2 = (*pcVar1)(&var_1ch, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (**0x48176c)(&var_1ch);\n    }\n    fcn.00413cf0();\n    return;\n}\n",
        "token_count": 122
    },
    "004148fc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004148fc(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    pcVar1 = *0x4817a0;\n    if ((param_1 != 0) && (iVar2 = *(param_1 + 0x20),  iVar2 != 0)) {\n        while( true ) {\n            uVar3 = (*pcVar1)(iVar2);\n            piVar4 = fcn.00413d94(uVar3);\n            if ((piVar4 == NULL) || (iVar2 = (**(*piVar4 + 0x120))(),  iVar2 != 0)) break;\n            iVar2 = piVar4[8];\n        }\n        return piVar4;\n    }\n    return NULL;\n}\n",
        "token_count": 192
    },
    "00414aee": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00414aee(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    pcVar1 = *0x481740;\n    iVar4 = 0;\n    uVar2 = (**0x481740)(*(param_1 + 0x20), 5);\n    iVar3 = fcn.00413d94(uVar2);\n    while (iVar3 != 0) {\n        uVar2 = (*pcVar1)(*(iVar3 + 0x20), 2);\n        iVar3 = fcn.00413d94(uVar2);\n        iVar4 = iVar4 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 171
    },
    "00415688": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00415688(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x20),  *(param_1 + 0x20) != 0)) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = fcn.00415643(iVar3);\n        } while (iVar1 != 0);\n        uVar2 = fcn.00413d94(iVar3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 144
    },
    "00419f91": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00419f91(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.004196b5();\n    while (*(iVar2 + 0xe4) == extraout_ECX) {\n        puVar1 = *(iVar2 + 0xe8);\n        *(puVar1[1] + 0xe4) = *puVar1;\n        *(puVar1[1] + 0xe8) = puVar1[2];\n        puVar1[1] = 0;\n    }\n    if (*(extraout_ECX + 0x54) != 0) {\n        fcn.00407d7e(extraout_ECX);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004147ac();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 284
    },
    "0041e7fc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041e7fc(int32_t param_1, int32_t param_2)\n\n{\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_2 = fcn.00415643();\n    } while (param_2 != 0);\n    return 0;\n}\n",
        "token_count": 76
    },
    "004210ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004210ec(void)\n\n{\n    int32_t iVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00451106(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFrameWnd.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.00420cd4();\n    iVar1 = fcn.004196b5();\n    while (*(iVar1 + 0xec) == extraout_ECX) {\n        fcn.0041ef21();\n    }\n    if (extraout_ECX[0x2f] != NULL) {\n        fcn.00403ac8(extraout_ECX[0x2f]);\n    }\n    fcn.00401fb6();\n    *(unaff_EBP + -4) = 0;\n    fcn.00424b6d();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004147ac();\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 277
    },
    "004228ed": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004228ed(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    \n    if (param_1 != NULL) goto code_r0x004228f6;\n    do {\n        fcn.00403bf2();\n        param_1 = extraout_ECX;\ncode_r0x004228f6:\n        iVar1 = (***param_1)();\n    } while (iVar1 == 0);\n    if (iVar1 != 0) goto code_r0x004228c3;\n    do {\n        iVar1 = fcn.00403bf2();\ncode_r0x004228c3:\n    } while (param_2 == 0);\n    do {\n        if (iVar1 == param_2) {\n            return 1;\n        }\n        iVar1 = *(iVar1 + 0x10);\n    } while (iVar1 != 0);\n    return 0;\n}\n",
        "token_count": 215
    },
    "00422b2d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00422b2d(int32_t *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    iVar5 = *param_1;\n    if (iVar5 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (iVar5 == param_2) {\n            piVar2 = fcn.00422af7(param_2);\n            *param_1 = *piVar2;\n        }\n        else {\n            do {\n                piVar2 = fcn.00422af7(iVar5);\n                if (*piVar2 == param_2) break;\n                piVar2 = fcn.00422af7();\n                iVar5 = *piVar2;\n            } while (iVar5 != 0);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            puVar3 = fcn.00422af7(param_2);\n            puVar4 = fcn.00422af7(iVar5);\n            *puVar4 = *puVar3;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 284
    },
    "00422d08": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422d08(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    (**0x481348)(in_ECX + 0x1c);\n    if ((0 < arg_8h) && (arg_8h < *(in_ECX + 0xc))) {\n        for (iVar3 = *(in_ECX + 0x14); iVar3 != 0; iVar3 = *(iVar3 + 4)) {\n            if (arg_8h < *(iVar3 + 8)) {\n                puVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n                if (puVar2 != NULL) {\n                    (***puVar2)(1);\n                }\n                *(*(iVar3 + 0xc) + arg_8h * 4) = 0;\n            }\n        }\n        puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n        *puVar1 = *puVar1 & 0xfffffffe;\n        (**0x481350)(in_ECX + 0x1c);\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "0042396d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042396d(int32_t param_1, uint32_t param_2, uint32_t *param_3, uint32_t *param_4)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    *param_4 = param_2 >> 4;\n    uVar2 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 192
    },
    "004239a5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004239a5(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t extraout_ECX;\n    uint *puVar1;\n    \n    if (param_1 == 0) {\n        fcn.00403bf2();\n        param_1 = extraout_ECX;\n    }\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "00423a0c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00423a0c(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    if (*(param_1 + 4) == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar3 = *(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4;\n        puVar1 = *puVar3;\n        while (puVar2 = puVar1,  puVar2 != NULL) {\n            if (puVar2[1] == param_2) {\n                *puVar3 = *puVar2;\n                fcn.00423954(puVar2);\n                return 0x1;\n            }\n            puVar3 = puVar2;\n            puVar1 = *puVar2;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 219
    },
    "004241b1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004241b1(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_10h;\n    \n    (**0x4817fc)(arg_8h, &arg_ch);\n    pcVar1 = *0x481740;\n    uVar5 = 5;\n    do {\n        arg_8h = (*pcVar1)(arg_8h, uVar5);\n        if (arg_8h == 0) {\n            return 0;\n        }\n        iVar2 = (**0x48170c)(arg_8h);\n        if ((iVar2 != 0) && (uVar3 = (**0x481748)(arg_8h, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (**0x48169c)(arg_8h, &var_10h);\n            iVar4 = (**0x481678)(&var_10h, arg_ch, arg_10h);\n            if (iVar4 != 0) {\n                return arg_8h;\n            }\n        }\n        uVar5 = 2;\n    } while( true );\n}\n",
        "token_count": 298
    },
    "004242a5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004242a5(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    uint unaff_ESI;\n    \n    if (param_1 != 0) goto code_r0x004242b4;\n    do {\n        fcn.00403bf2();\ncode_r0x004242b4:\n    } while ((*(param_1 + 4) == 0) || (param_2 == 0));\n    (**0x4811d4)(*(param_1 + 4), param_3);\n    (**0x481164)(*(param_1 + 4), 0, 0, 2, unaff_ESI, 0, 0, 0);\n    return;\n}\n",
        "token_count": 169
    },
    "00424b25": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00424b25(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    if (param_3 != NULL) goto code_r0x00424b3b;\n    for (param_3 = *(param_1 + 4); (param_3 != NULL && (param_3[2] != param_2)); param_3 = *param_3) {\ncode_r0x00424b3b:\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00424e64": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424e64(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (**0x481318)(arg_8h, &var_10h);\n    if (iVar1 != 0) goto code_r0x00424e8f;\n    do {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n        arg_8h = 0x80070057;\n        fcn.00401103();\ncode_r0x00424e8f:\n        iVar1 = (**0x48131c)(&var_10h, &var_20h, arg_8h);\n    } while (iVar1 == 0);\n    fcn.00424e0c(&var_20h, arg_ch);\n    *in_ECX = var_8h;\n    in_ECX[1] = var_4h;\n    return;\n}\n",
        "token_count": 244
    },
    "0042ec2f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ec2f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    var_4h = (**(*in_ECX + 0xb4))();\n    while( true ) {\n        iVar1 = fcn.0043f7c6(&var_4h);\n        if (iVar1 == 0) break;\n        fcn.004409be();\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0042ec64": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ec64(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    (**(*in_ECX + 0xb4))();\n    while( true ) {\n        piVar1 = fcn.0043f7c6();\n        if (piVar1 == NULL) break;\n        if (piVar1 != arg_8h) {\n            (**(*piVar1 + 0x58))(arg_8h, arg_ch, arg_10h, arg_14h);\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0042f733": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042f733(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    var_4h = (**(*in_ECX + 0xb4))();\n    do {\n        iVar2 = fcn.0043f7c6(&var_4h);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar1 = (**0x4813a8)(*(iVar2 + 0x34), arg_8h);\n    } while (iVar1 != 0);\n    return iVar2;\n}\n",
        "token_count": 150
    },
    "00433c30": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00433c30(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if ((-1 < param_2) && (-1 < param_3)) goto code_r0x00433c4a;\n    do {\n        do {\n            fcn.00403bf2();\ncode_r0x00433c4a:\n        } while ((*(param_1 + 0x78) == 0) && (*(param_1 + 0x74) != 0));\n        if (param_2 < 1) goto code_r0x00433c70;\n    } while (param_3 < 1);\n    iVar1 = fcn.00450653(param_2, param_3);\n    if (iVar1 != 0) {\ncode_r0x00433c70:\n        fcn.004500d5(*(param_1 + 0x78));\n        *(param_1 + 0x78) = iVar1;\n        *(param_1 + 0x74) = param_2;\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 270
    },
    "00435149": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435149(code **param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uStack24;\n    code *pcStack20;\n    \n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_1[1] != NULL) {\n        pcVar1 = NULL;\n        if (param_1[2] != NULL) {\n            do {\n                for (puVar2 = *(param_1[1] + pcVar1 * 4); puVar2 != NULL; puVar2 = *puVar2) {\n                    if (puVar2 == 0xfffffff8) {\n                        pcStack20 = NULL;\n                        uStack24 = 0x4a3540;\n                        fcn.004515ca(&uStack24, 0x49617c);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    uStack24 = 0x435116;\n                    fcn.0042226d();\n                }\n                pcVar1 = pcVar1 + 1;\n            } while (pcVar1 < param_1[2]);\n        }\n        pcStack20 = param_1[1];\n        uStack24 = 0x43512a;\n        fcn.00403ac8();\n        param_1[1] = NULL;\n    }\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    pcStack20 = 0x43513c;\n    fcn.004357e3();\n    param_1[5] = NULL;\n    return;\n}\n",
        "token_count": 358
    },
    "004356bb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004356bb(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((arg_ch != 0) && (unaff_EBX = arg_8h,  -1 < arg_8h)) {\n        if (*(arg_ch + 8) < 1) {\n            return;\n        }\n        arg_10h = *(arg_ch + 8);\n        if (0 < arg_10h) goto code_r0x004356e6;\n    }\n    arg_10h = fcn.00403bf2();\n    arg_8h = unaff_EBX;\ncode_r0x004356e6:\n    fcn.004355c3(arg_8h, **(arg_ch + 4), arg_10h);\n    if (0 < *(arg_ch + 8)) {\n        do {\n            fcn.00435325(iVar1);\n            fcn.00435341();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(arg_ch + 8));\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "004357e3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004357e3(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.00403ac8(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00435dfe": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435dfe(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_4h;\n    \n    iVar1 = (**0x481710)(*(in_ECX + 0x20));\n    if (iVar1 != 0) goto code_r0x00435e19;\n    do {\n        fcn.00403bf2();\ncode_r0x00435e19:\n    } while (arg_8h == 0);\n    var_24h = arg_8h;\n    var_28h = 4;\n    (**0x48183c)(*(in_ECX + 0x20), 0x110c, 0, &var_28h);\n    return var_4h;\n}\n",
        "token_count": 192
    },
    "0043828c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0043828c(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_retaddr;\n    \n    iVar2 = 0;\n    if (0 < *(param_1 + 0xa0)) {\n        do {\n            if ((iVar2 != param_3) && (piVar1 = fcn.0043808f(iVar2),  *piVar1 == unaff_retaddr)) {\n                return iVar2;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 0xa0));\n    }\n    return -1;\n}\n",
        "token_count": 167
    },
    "004385d7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004385d7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = 0;\n    if (0 < *(param_1 + 0xa0)) {\n        do {\n            iVar1 = fcn.004382c9();\n            if (iVar1 != 0) {\n                iVar2 = iVar2 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(param_1 + 0xa0));\n    }\n    return iVar2;\n}\n",
        "token_count": 145
    },
    "00438cc3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438cc3(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0xa0)) {\n        do {\n            arg_8h = fcn.004382c9(iVar1);\n            if (arg_8h != 0) {\n                fcn.0041eb1f();\n                fcn.0041fa76(arg_8h, unaff_retaddr, 1);\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_1 + 0xa0));\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "00439f3a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439f3a(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((arg_ch != 0) && (unaff_EBX = arg_8h,  -1 < arg_8h)) {\n        if (*(arg_ch + 8) < 1) {\n            return;\n        }\n        arg_10h = *(arg_ch + 8);\n        if (0 < arg_10h) goto code_r0x00439f65;\n    }\n    arg_10h = fcn.00403bf2();\n    arg_8h = unaff_EBX;\ncode_r0x00439f65:\n    fcn.00439e6a(arg_8h, **(arg_ch + 4), arg_10h);\n    if (0 < *(arg_ch + 8)) {\n        do {\n            fcn.00439c19(iVar1);\n            fcn.00439c35();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(arg_ch + 8));\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "0043a2e1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a2e1(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    piVar2 = arg_8h;\n    fcn.0043a1f0(arg_ch);\n    fcn.0040df6f(arg_ch, &arg_8h);\n    if (*piVar2 != 0) {\n        *arg_10h = -1;\n    }\n    pcVar1 = *0x48183c;\n    arg_ch = 0;\n    while( true ) {\n        uVar3 = (*pcVar1)(arg_8h, 0x87, 0, 0);\n        if ((uVar3 & 0x40) != 0) {\n            if (*piVar2 == 0) {\n                (*pcVar1)(arg_8h, 0xf1, arg_ch == *arg_10h, 0);\n            }\n            else {\n                iVar4 = (*pcVar1)(arg_8h, 0xf0, 0, 0);\n                if (iVar4 != 0) {\n                    *arg_10h = arg_ch;\n                }\n            }\n            arg_ch = arg_ch + 1;\n        }\n        arg_8h = (**0x481740)(arg_8h, 2);\n        if (arg_8h == NULL) break;\n        uVar3 = (**0x481748)(arg_8h, 0xfffffff0);\n        if ((uVar3 & 0x20000) != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "0043b4bd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b4bd(int32_t **arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_4h;\n    \n    piVar2 = arg_ch;\n    ppiVar1 = arg_8h;\n    *arg_8h = NULL;\n    *arg_ch = 0;\n    piVar3 = fcn.0042349a(*(in_ECX + 0x24), 0x48f2b0);\n    if (piVar3 != NULL) {\n        iVar4 = (**(*piVar3 + 0x14))(piVar3, &arg_8h);\n        if ((iVar4 == 0) && (arg_8h != NULL)) {\n            while (iVar4 = (*(*arg_8h)[3])(arg_8h, 1, &var_20h, 0),  iVar4 == 0) {\n                if (var_1ch != 0) {\n                    if (arg_10h != NULL) {\n                        *arg_10h = var_4h;\n                    }\n                    *piVar2 = var_1ch;\n                    (*(*arg_8h)[2])(arg_8h);\n                    *ppiVar1 = piVar3;\n                    return 1;\n                }\n            }\n            (*(*arg_8h)[2])(arg_8h);\n        }\n        (**(*piVar3 + 8))(piVar3);\n    }\n    return 0;\n}\n",
        "token_count": 384
    },
    "0043b56a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b56a(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    arg_8h_00 = 0;\n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    iVar1 = (**0x481930)(0, 1, &var_4h);\n    if (iVar1 == 0) goto code_r0x0043b58d;\n    while( true ) {\n        do {\n            fcn.00404470(arg_8h_00);\ncode_r0x0043b58d:\n            arg_8h_00 = (**0x481934)(var_4h, 0x1012, 0, &var_8h);\n            (**(*var_4h + 8))(var_4h);\n        } while (arg_8h_00 != 0);\n        in_ECX = fcn.0042349a(in_ECX[9], 0x48f840);\n        arg_8h_00 = (**0x48192c)(in_ECX, var_8h, 0);\n        (**(*in_ECX + 0x20))(in_ECX, 0);\n        (**(*in_ECX + 8))(in_ECX);\n        if (arg_8h_00 == 0) break;\n        (**(*var_8h + 8))(var_8h);\n    }\n    arg_8h[2] = 0;\n    *arg_8h = 8;\n    arg_8h[1] = var_8h;\n    return;\n}\n",
        "token_count": 395
    },
    "0043b948": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043b948(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    piVar1 = *(param_1 + 0x20);\n    iVar3 = piVar1[0x1c];\n    var_4h = param_1;\n    while( true ) {\n        var_4h = (**(*piVar1 + 0xb4))();\n        iVar2 = fcn.0043f7b5(&var_4h);\n        if (iVar2 == 0) break;\n        do {\n            if (*(iVar2 + 0x2c) == iVar3) break;\n            iVar2 = fcn.0043f7b5();\n        } while (iVar2 != 0);\n        if (iVar2 == 0) break;\n        iVar3 = iVar3 + 1;\n    }\n    piVar1[0x1c] = iVar3 + 1;\n    return iVar3;\n}\n",
        "token_count": 237
    },
    "00440477": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440477(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar2 = fcn.004234da(0x48f7b0);\n    iVar3 = (**(*piVar2 + 0x20))(piVar2, 1, &var_4h);\n    if (iVar3 == 0) {\n        iVar3 = (**(*var_4h + 0xc))(var_4h, 1, &var_24h, 0);\n        pcVar1 = *0x481990;\n        while (iVar3 == 0) {\n            iVar3 = (**(*piVar2 + 0xc))(piVar2, &var_24h, &var_10h);\n            if (iVar3 == 0) {\n                if (var_8h != 0) {\n                    (**0x481968)(&var_10h);\n                    goto code_r0x004404d7;\n                }\n                fcn.004452d4(0, &var_10h, &var_24h);\n            }\n            else {\ncode_r0x004404d7:\n                (*pcVar1)(var_20h);\n            }\n            iVar3 = (**(*var_4h + 0xc))(var_4h, 1, &var_24h, 0);\n        }\n        (**(*var_4h + 8))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 376
    },
    "00440d10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl fcn.00440d10(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uVar5;\n    uint var_4h;\n    \n    fcn.00451139(0x18);\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    uVar5 = 0;\n    iVar4 = (**0x481930)(0, 1, unaff_EBP + -0x14);\n    if (iVar4 == 0) goto code_r0x00440d3c;\n    while( true ) {\n        fcn.00404470(uVar5);\ncode_r0x00440d3c:\n        iVar4 = (**0x481934)(*(unaff_EBP + -0x14), 0x1012, 0, unaff_EBP + -0x18);\n        *(unaff_EBP + -0x1c) = iVar4;\n        if (iVar4 == 0) break;\n        (**(**(unaff_EBP + -0x14) + 8))(*(unaff_EBP + -0x14));\n        uVar5 = *(unaff_EBP + -0x1c);\n    }\n    iVar4 = *(extraout_ECX + 0x20);\n    piVar1 = *(unaff_EBP + -0x20);\n    *(iVar4 + 0x80) = 0;\n    *(iVar4 + 0x84) = 0;\n    iVar2 = *piVar1;\n    *(unaff_EBP + -0x1c) = iVar4;\n    *(unaff_EBP + -4) = 0;\n    (**(iVar2 + 0xa0))(*(unaff_EBP + -0x18));\n    fcn.0043f822(0, 0);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(iVar4 + 0x80) = 1;\n    *(iVar4 + 0x84) = 1;\n    (**(**(unaff_EBP + -0x14) + 8))(*(unaff_EBP + -0x14));\n    puVar3 = *(unaff_EBP + 8);\n    uVar5 = *(unaff_EBP + -0x18);\n    *puVar3 = 8;\n    puVar3[1] = uVar5;\n    puVar3[2] = 0;\n    fcn.004511de();\n    return;\n}\n",
        "token_count": 695
    },
    "004435a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004435a4(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = *0x4815fc;\n    iVar2 = (**0x4815fc)();\n    if (iVar2 == 0) {\n        uVar3 = (**0x4815cc)(*(*(param_1 + 0x68) + 0x20));\n        fcn.00413d94(uVar3);\n        uVar3 = (*pcVar1)();\n        iVar2 = fcn.00413d94(uVar3);\n        if (iVar2 == *(param_1 + 0x68)) {\n            do {\n                uVar4 = 0;\n                uVar3 = 0;\n                iVar2 = (**0x481764)(&var_1ch, 0, 0, 0);\n                if (iVar2 == 0) {\n                    fcn.0040bc7b(uVar4, var_14h);\n                    break;\n                }\n                if (var_18h == 0x100) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.0044326f(uVar3, 1, var_14h);\n                    }\n                    if (var_14h == 0x1b) break;\n                }\n                else if (var_18h == 0x101) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.0044326f(uVar3, 0, var_14h);\n                    }\n                }\n                else if (var_18h == 0x200) {\n                    if (*(param_1 + 0x88) == 0) {\n                        fcn.004432a3(var_8h, var_4h);\n                    }\n                    else {\n                        fcn.004431f3(var_8h, var_4h);\n                    }\n                }\n                else {\n                    if (var_18h == 0x202) {\n                        if (*(param_1 + 0x88) == 0) {\n                            fcn.00443560();\n                        }\n                        else {\n                            fcn.0044345c();\n                        }\n                        return 1;\n                    }\n                    if (var_18h == 0x204) break;\n                    (**0x48176c)(&var_1ch);\n                }\n                uVar3 = (*pcVar1)();\n                iVar2 = fcn.00413d94(uVar3);\n            } while (iVar2 == *(param_1 + 0x68));\n        }\n        fcn.00443417();\n    }\n    return 0;\n}\n",
        "token_count": 637
    },
    "00444dd0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444dd0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((arg_ch != 0) && (unaff_EBX = arg_8h,  -1 < arg_8h)) {\n        if (*(arg_ch + 8) < 1) {\n            return;\n        }\n        arg_10h = *(arg_ch + 8);\n        if (0 < arg_10h) goto code_r0x00444dfb;\n    }\n    arg_10h = fcn.00403bf2();\n    arg_8h = unaff_EBX;\ncode_r0x00444dfb:\n    fcn.00444cd8(arg_8h, **(arg_ch + 4), arg_10h);\n    if (0 < *(arg_ch + 8)) {\n        do {\n            fcn.00438073(iVar1);\n            fcn.00443b41();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(arg_ch + 8));\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "0044a8db": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044a8db(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 == 0) {\n        fcn.00403bf2();\n    }\n    if (param_2 == 0) {\n        iVar1 = 0;\n        do {\n            if ((*(iVar1 * 8 + 0x48b3c8) & 0xf000) == (*(param_1 + 0x80) & 0xf000)) {\n                iVar1 = fcn.0041fe7f(*(iVar1 * 8 + 0x48b3c4));\n                if (iVar1 != 0) goto code_r0x0044a92c;\n                break;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < 4);\n        fcn.00403bf2();\n    }\ncode_r0x0044a92c:\n    fcn.00438dd1(param_1, param_2);\n    return;\n}\n",
        "token_count": 233
    },
    "0044c372": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044c372(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00419c68();\n    fcn.0042657b(0);\n    for (iVar1 = *(iVar1 + 0x24); iVar1 != 0; iVar1 = *(iVar1 + 0x20)) {\n        fcn.0044be58();\n    }\n    fcn.004265e8(0);\n    return;\n}\n",
        "token_count": 103
    },
    "0044dd66": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044dd66(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_1[1]) {\n        do {\n            fcn.004500d5(*(*param_1 + iVar1 * 4));\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < param_1[1]);\n    }\n    fcn.00403ac8(*param_1);\n    return;\n}\n",
        "token_count": 112
    },
    "0044e975": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0044e975(uint *param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iStack8;\n    \n    iStack8 = 0;\n    do {\n        if (param_1 == NULL) {\n            return 0xffffffff;\n        }\n        puVar4 = param_1[1];\n        uVar1 = fcn.0044e681();\n        uVar3 = 0;\n        if (uVar1 != 0) {\n            do {\n                if ((*(puVar4 + 3) != 0xfff) && (iVar2 = fcn.0040be9a(*puVar4, param_2),  iVar2 == 0)) {\n                    if (puVar4[1] != 0xffffffff) {\n                        return puVar4[1];\n                    }\n                    return iStack8 << 0x10 | uVar3 + 1 & 0xffff;\n                }\n                puVar4 = puVar4 + 8;\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < uVar1);\n        }\n        param_1 = *param_1;\n        iStack8 = iStack8 + 1;\n    } while( true );\n}\n",
        "token_count": 299
    },
    "00457121": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00457121(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045517c(0x49efb8, 0xc);\n    fcn.00457686(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4a8690;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4a868c;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00457165;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.004500d5(arg_8h_00);\ncode_r0x00457165:\n        fcn.004500d5(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00457188();\n    fcn.004551c1();\n    return;\n}\n",
        "token_count": 395
    },
    "00457286": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00457286(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0045517c(0x49eff8, 0xc);\n    fcn.00457686(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4a8690;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4a868c;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004572ca;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.004500d5(arg_8h_00);\ncode_r0x004572ca:\n        fcn.004500d5(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004572ed();\n    fcn.004551c1();\n    return;\n}\n",
        "token_count": 394
    },
    "00479c0a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00479c0a(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = in_ECX + 0x18;\n    (**0x481348)(iVar5);\n    iVar4 = 0;\n    if (0 < *(in_ECX + 0x34)) {\n        do {\n            iVar5 = iVar4;\n            piVar1 = fcn.00479abb();\n            if (*piVar1 == arg_8h) {\n                fcn.00479a78();\n                uVar3 = 1;\n                goto code_r0x00479c52;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < *(in_ECX + 0x34));\n    }\n    iVar4 = iVar5;\n    uVar3 = 0;\ncode_r0x00479c52:\n    uVar2 = fcn.00479bbb(iVar4);\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 280
    }
}