{
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004013a5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004013a5(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_EBP;\n    uint var_280h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_24ch;\n    uint var_244h;\n    uint var_240h;\n    uint var_238h;\n    uint hModule;\n    uint lpFilename;\n    uint var_4h;\n    \n    fcn.0040b21e(0x40daa0, 0x270);\n    *(unaff_EBP + -0x238) = 0;\n    if ((((*0x4107f0 != 0) || (*0x4101f8 != -1)) ||\n        ((pcVar1 = *0x4132a0,  *0x4132a0 == NULL && (pcVar1 = fcn.0040136f(\"QueryActCtxW\"),  pcVar1 == NULL)))) ||\n       (*0x4132a0 = pcVar1,  iVar2 = (**0x4132a0)(0x80000010, 0x4101f8, 0, 1, unaff_EBP + -0x240, 8, 0),  iVar2 == 0))\n    goto code_r0x004015a6;\n    iVar2 = *(unaff_EBP + -0x240);\n    if (iVar2 == 0) {\n        pcVar1 = fcn.0040136f(0x40c52c);\n        if (((pcVar1 == NULL) || (iVar2 = (*pcVar1)(6, 0x4101f8, unaff_EBP + -0x234),  iVar2 == 0)) ||\n           (uVar3 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(*(unaff_EBP + -0x234), unaff_EBP + -0x230, 0x105), \n           uVar3 == 0)) goto code_r0x004015a6;\n        if (0x104 < uVar3) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0x6f);\n            goto code_r0x004015a6;\n        }\n        *(unaff_EBP + -0x260) = 0x20;\n        *(unaff_EBP + -0x25c) = 0x88;\n        *(unaff_EBP + -600) = unaff_EBP + -0x230;\n        *(unaff_EBP + -0x24c) = 3;\n        *(unaff_EBP + -0x244) = *(unaff_EBP + -0x234);\n        pcVar1 = *0x4107f4;\n        if ((*0x4107f4 == NULL) && (pcVar1 = fcn.0040136f(\"CreateActCtxW\"),  pcVar1 == NULL)) {\n            iVar2 = -1;\n        }\n        else {\n            *0x4107f4 = pcVar1;\n            iVar2 = (**0x4107f4)(unaff_EBP + -0x260);\n        }\n        *(unaff_EBP + -0x240) = iVar2;\n        if (iVar2 == -1) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (((iVar2 != 0x714) && (iVar2 != 0x715)) &&\n               ((iVar2 != 0x717 && (((iVar2 != 0x716 && (iVar2 != 2)) && (iVar2 != 3)))))) goto code_r0x004015a6;\n            iVar2 = 0;\n            *(unaff_EBP + -0x240) = 0;\n        }\n    }\n    *0x4101f8 = iVar2;\n    pcVar1 = *0x413438;\n    if (((*0x413438 != NULL) || (pcVar1 = fcn.0040136f(\"ActivateActCtx\"),  pcVar1 != NULL)) &&\n       (*0x413438 = pcVar1,  iVar2 = (**0x413438)(iVar2, unaff_EBP + -0x238),  iVar2 != 0)) {\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x280) = 0x40;\n        pcVar1 = *0x413288;\n        if (((*0x413288 != NULL) || (pcVar1 = fcn.0040136f(\"FindActCtxSectionStringW\"),  pcVar1 != NULL)) &&\n           (*0x413288 = pcVar1,  iVar2 = (**0x413288)(0, 0, 2, L\"Comctl32.dll\", unaff_EBP + -0x280),  iVar2 != 0)) {\n            (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"Comctl32.dll\");\n        }\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004015ae();\n    }\ncode_r0x004015a6:\n    fcn.0040b266();\n    return;\n}\n",
        "token_count": 1170
    },
    "00401ffd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00401ffd(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_FS_OFFSET;\n    uint uVar2;\n    \n    if (*(**(in_FS_OFFSET + 0x2c) + 4) < *0x413474) {\n        uVar2 = 0x413474;\n        fcn.0040a18c(0x413474);\n        if (*0x413474 == -1) {\n            fcn.00401f07(uVar2);\n            fcn.0040a4ed(0x40b811);\n            fcn.0040a153(0x413474);\n        }\n    }\n    uVar1 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_2220)();\n    return uVar1 & 0xffffff00 | 1 - (uVar1 != '\\0');\n}\n",
        "token_count": 192
    },
    "0040433e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040433e(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t unaff_EBP;\n    uint var_164h;\n    uint var_158h;\n    uint var_154h;\n    uint pci;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_12dh;\n    uint lpFileName;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    char *pcVar6;\n    int32_t iVar7;\n    uint var_4h;\n    \n    fcn.0040b1b2(0x158);\n    iVar4 = *(unaff_EBP + 8);\n    if (iVar4 == 0x200) {\n        *(unaff_EBP + -0x164) = 0x14;\n        iVar4 = (*_sym.imp.USER32.dll_GetCursorInfo)(unaff_EBP + -0x164);\n        if (iVar4 != 0) {\n            *(extraout_ECX + 1000) = *(unaff_EBP + -0x158);\n            *(extraout_ECX + 0x3ec) = *(unaff_EBP + -0x154);\n            if ((((*(extraout_ECX + 0x3e4) == 0) && (*(extraout_ECX + 0x24fd) == '\\0')) &&\n                (*(extraout_ECX + 0x24fe) == '\\0')) &&\n               ((*(extraout_ECX + 0x24ff) == '\\0' && (cVar2 = fcn.00404a00(0xffffffff, 0x90),  cVar2 != '\\0')))) {\n                fcn.004035e2();\n                *(extraout_ECX + 0x24fd) = 1;\n            }\n        }\n        goto code_r0x00404541;\n    }\n    if (iVar4 == 0x201) {\n        if (*(extraout_ECX + 0x2508) == '\\0') {\n            *(unaff_EBP + -0x150) = 0x14;\n            iVar4 = (*_sym.imp.USER32.dll_GetCursorInfo)(unaff_EBP + -0x150);\n            if (iVar4 == 0) {\n                (*_sym.imp.Mso20Win32Client.dll_Ordinal_1121)\n                          (0x63386b72, 0x4b8, 0x32, L\"System Error: GetCursorInfo failed\");\n            }\n            else {\n                *(extraout_ECX + 1000) = *(unaff_EBP + -0x144);\n                *(extraout_ECX + 0x3ec) = *(unaff_EBP + -0x140);\n                fcn.00404878(0);\n                uVar3 = (*_sym.imp.USER32.dll_GetDoubleClickTime)();\n                cVar2 = fcn.00404a00(uVar3, 0x93);\n                if (cVar2 != '\\0') {\n                    *(extraout_ECX + 0x2508) = 1;\n                }\n            }\n        }\n        goto code_r0x00404541;\n    }\n    if (iVar4 != 0x203) {\n        if (iVar4 == 0x204) {\n            fcn.00404878(0);\n            fcn.00403739();\n            goto code_r0x00404541;\n        }\n        if (iVar4 == 0x402) {\n            if (*(extraout_ECX + 0x3e4) != 0) {\n                (*_sym.imp.USER32.dll_SetWindowPos)(*(*(extraout_ECX + 0x3e4) + 0x15e8), 0xffffffff, 0, 0, 0, 0, 0x53);\n            }\n            goto code_r0x00404541;\n        }\n        if (2 < iVar4 - 0x403U) goto code_r0x00404541;\n        uVar3 = (*_sym.imp.Mso30Win32Client.dll_Ordinal_1043)();\n        *(unaff_EBP + -0x144) = uVar3;\n        *(unaff_EBP + -0x148) = 0x40d4a4;\n        *(unaff_EBP + -0x140) = \"BallonAction\";\n        fcn.00401f89(unaff_EBP + -0x148);\n        pcVar6 = \"Message\";\n        *(unaff_EBP + -4) = 0;\n        iVar7 = iVar4;\n        (*_sym.imp.Mso20Win32Client.dll_Ordinal_1620)(\"Message\", iVar4, 0, extraout_ECX_00);\n        fcn.004069c7(pcVar6, iVar7);\n        pcVar6 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_579)();\n        if (*pcVar6 == '\\0') {\n            pcVar6[1] = '\\x01';\n            *pcVar6 = '\\x01';\n        }\n        else {\n            pcVar6[1] = '\\x01';\n        }\n        iVar7 = *(extraout_ECX + 0x24a4);\n        *(extraout_ECX + 0x24a0) = iVar7;\n        *(extraout_ECX + 0x24a4) = 5;\n        if (iVar7 == 5) {\n            fcn.00403694(*(extraout_ECX + 0x2494), *(extraout_ECX + 0x2494), 1);\n        }\n        else {\n            cVar2 = fcn.00404053(iVar7);\n            if (cVar2 == '\\0') {\n                *(extraout_ECX + 0x24a0) = 5;\n            }\n        }\n        (*_sym.imp.Mso20Win32Client.dll_Ordinal_177)();\n        if (iVar4 != 0x405) goto code_r0x00404541;\n    }\n    if (*(extraout_ECX + 0x2508) != '\\0') {\n        (*_sym.imp.USER32.dll_KillTimer)(*(extraout_ECX + 0xc), 0x93);\n        *(extraout_ECX + 0x2508) = 0;\n    }\n    fcn.00404878(0);\n    iVar4 = *(extraout_ECX + 0x2514);\n    *(unaff_EBP + -0x12d) = 0;\n    *(unaff_EBP + -0x13c) = 0;\n    if (iVar4 == 0) {\ncode_r0x00404666:\n        *(unaff_EBP + -0x120) = 0x102;\n        *(unaff_EBP + -300) = 0x41032c;\n        *(unaff_EBP + -0x128) = unaff_EBP + -0x11c;\n        *(unaff_EBP + -0x124) = 0x102;\n        *(unaff_EBP + -0x11c) = 0;\n        *(unaff_EBP + -4) = 6;\n        uVar3 = fcn.00401833();\n        fcn.004093ec(uVar3);\n        fcn.00403bd1();\n    }\n    else {\n        *(unaff_EBP + -0x120) = 0x102;\n        *(unaff_EBP + -300) = 0x41032c;\n        *(unaff_EBP + -0x128) = unaff_EBP + -0x11c;\n        *(unaff_EBP + -0x124) = 0x102;\n        *(unaff_EBP + -0x11c) = 0;\n        *(unaff_EBP + -4) = 2;\n        (**(**(extraout_ECX + 0x2514) + 0x9c))(unaff_EBP + -0x134, unaff_EBP + -300);\n        if (*(unaff_EBP + -0x134) == -1) {\n            *(unaff_EBP + -0x12d) = 1;\n        }\n        else {\n            uVar5 = *(unaff_EBP + -0x13c) & 0xff;\n            if (0 < *(unaff_EBP + -0x134)) {\n                uVar5 = 1;\n            }\n            *(unaff_EBP + -0x13c) = uVar5;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00401dde();\n        if (*(unaff_EBP + -0x12d) != '\\0') {\n            if (*(extraout_ECX + 0x2514) != NULL) {\n                (**(**(extraout_ECX + 0x2514) + 0xa0))(0, 0);\n            }\n            goto code_r0x00404541;\n        }\n        if (*(unaff_EBP + -0x13c) == '\\0') goto code_r0x00404666;\n        if (*(extraout_ECX + 0x2514) == 0) goto code_r0x00404541;\n        *(unaff_EBP + -0x120) = 0x102;\n        *(unaff_EBP + -300) = 0x41032c;\n        *(unaff_EBP + -0x128) = unaff_EBP + -0x11c;\n        *(unaff_EBP + -0x124) = 0x102;\n        *(unaff_EBP + -0x11c) = 0;\n        *(unaff_EBP + -4) = 4;\n        piVar1 = *(extraout_ECX + 0x2514);\n        *(unaff_EBP + -0x134) = 0;\n        (**(*piVar1 + 0x9c))(unaff_EBP + -0x134, unaff_EBP + -300);\n        iVar4 = fcn.00401833();\n        if ((iVar4 != 0) &&\n           (uVar5 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(*(unaff_EBP + -0x128)),  (uVar5 & 0x10) != 0)) {\n            (*_sym.imp.SHELL32.dll_ShellExecuteW)(*(extraout_ECX + 0xc), L\"open\", *(unaff_EBP + -0x128), 0, 0, 1);\n        }\n        (**(**(extraout_ECX + 0x2514) + 0xa0))(0, 0);\n    }\n    fcn.00401dde();\ncode_r0x00404541:\n    fcn.0040b173();\n    return;\n}\n",
        "token_count": 2448
    },
    "00404a00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00404a00(int32_t arg_8h, uint nIDEvent)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h == -1) {\n        arg_8h = *(in_ECX + 0x24cc);\n    }\n    iVar1 = (*_sym.imp.USER32.dll_SetTimer)(*(in_ECX + 0xc), nIDEvent, arg_8h, 0);\n    if (iVar1 == 0) {\n        (*_sym.imp.Mso20Win32Client.dll_Ordinal_1121)(0x396c6769, 0x4b8, 0x32, L\"System Error: SetTimer failed\");\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 174
    },
    "004052b7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004059db)\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_18h_2\n// WARNING: Removing unreachable block (ram,0x00405a69)\n// WARNING: Removing unreachable block (ram,0x00405a6d)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004052b7(char param_1)\n\n{\n    uint arg_8h;\n    uint32_t uVar1;\n    int32_t *piVar2;\n    uchar uVar3;\n    char cVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t extraout_ECX;\n    uint noname_0;\n    int32_t unaff_EBX;\n    int32_t *piVar9;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t iStackY13856;\n    int32_t iStackY9684;\n    int32_t var_1584h;\n    uint var_1580h;\n    uint var_1574h;\n    int32_t var_1570h;\n    int32_t var_1568h;\n    int32_t var_1560h;\n    int32_t *var_1558h;\n    uint var_1554h;\n    uint32_t var_1550h;\n    uint32_t var_154ch;\n    int32_t var_1548h;\n    int32_t *var_1544h;\n    uint32_t var_1540h;\n    int32_t var_153ch;\n    uint32_t var_1538h;\n    int32_t *var_1534h;\n    int32_t *var_1530h;\n    uint32_t var_152ch;\n    int32_t *var_1528h;\n    int32_t *var_1524h;\n    int32_t *var_1520h;\n    uint8_t var_1517h;\n    char var_1516h;\n    int32_t *var_1515h;\n    uint var_151ch;\n    int32_t var_1510h;\n    uint var_150ch;\n    uint var_1508h;\n    uint var_1504h;\n    uint var_1500h;\n    uint var_14fch;\n    uint var_4b4h;\n    uint var_4b0h;\n    uint var_4ach;\n    uint var_4a8h;\n    uint var_4a4h;\n    uint *var_39ch;\n    uint *var_398h;\n    int32_t var_394h;\n    uint var_390h;\n    uint var_38ch;\n    uint *var_284h;\n    uint *var_280h;\n    int32_t var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_16ch;\n    uint *var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_50h;\n    char16_t *var_4ch;\n    uint var_48h;\n    uint uStackY72;\n    uint uStackY68;\n    uint *puStackY64;\n    uint *var_38h;\n    int32_t *piStackY56;\n    int32_t *piStackY52;\n    int32_t *var_28h;\n    uint var_18h_2;\n    uchar *puVar10;\n    uchar *arg_8h_00;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h._0_1_ = 0xff;\n    var_4h._1_3_ = 0xffffff;\n    uStack12 = 0x40b60c;\n    var_ch_2 = *in_FS_OFFSET;\n    fcn.0040b2dd();\n    puVar10 = &stack0xffffffdc;\n    *in_FS_OFFSET = &fcn.004052b7::var_ch_2;\n    arg_8h_00 = &stack0xffffffdc;\n    if ((*(extraout_ECX + 0x2512) == '\\0') || (arg_8h_00 = &stack0xffffffdc,  *(extraout_ECX + 0x2514) == NULL))\n    goto code_r0x0040535f;\n    var_1528h = NULL;\n    var_4h._0_1_ = 1;\n    var_4h._1_3_ = 0;\n    var_28h = 0x40531d;\n    (**(**(extraout_ECX + 0x2514) + 0x44))();\n    arg_8h_00 = puVar10;\n    if (var_1528h == NULL) goto code_r0x0040535f;\n    var_1524h = NULL;\n    var_4h._0_1_ = 2;\n    var_28h = 0x40533f;\n    (**(*var_1528h + 0x10))();\n    arg_8h_00 = puVar10;\n    if (var_1524h == NULL) {\ncode_r0x00405348:\n        var_4h._0_1_ = 0;\n        if (var_1528h != NULL) {\n            var_28h = 0x40535d;\n            (**(*var_1528h + 8))();\n        }\n        goto code_r0x0040535f;\n    }\n    piStackY52 = 0x405395;\n    var_28h = extraout_ECX + 0x3f0;\n    sub.VCRUNTIME140.dll_memcpy();\n    var_153ch = *(extraout_ECX + 0x2498);\n    var_1548h = *(extraout_ECX + 0x249c);\n    var_398h = &fcn.004052b7::var_38ch;\n    *(extraout_ECX + 0x3f0) = 0;\n    *(extraout_ECX + 0x2488) = 0;\n    *(extraout_ECX + 0x143c) = 0;\n    var_390h = 0x102;\n    var_39ch = 0x41032c;\n    var_394h = 0x102;\n    var_38ch._0_2_ = 0;\n    var_280h = &fcn.004052b7::var_274h;\n    var_278h = 0x102;\n    var_284h = 0x41032c;\n    var_27ch = 0x102;\n    var_274h._0_2_ = 0;\n    var_4h._0_1_ = 6;\n    var_1510h = 5;\n    var_1515h._0_1_ = '\\0';\n    var_1540h = var_1540h & 0xffffff00;\n    var_28h = 0x40543e;\n    (*\n    _sym.imp.Csi.dll_class_std::unique_ptr_class_Csi::IServerCountMapUpdater__struct_std::default_delete_class_Csi::IServerCountMapUpdater_____stdcall_Csi::CreateServerCountMapUpdater_void_\n    )();\n    var_4h._0_1_ = 7;\n    var_28h = 0x40544c;\n    (***var_1520h)();\n    var_28h = 0x405457;\n    (**(*var_1520h + 8))();\n    while( true ) {\n        stack0xffffeae8 = NULL;\n        var_4h._0_1_ = 8;\n        var_28h = &fcn.004052b7::var_1515h + 1;\n        cVar4 = (**(*var_1524h + 0xc))();\n        if (cVar4 == '\\0') break;\n        if (stack0xffffeae8 == NULL) {\n            if (var_1520h != NULL) {\n                var_4h._0_1_ = 9;\ncode_r0x00405749:\n                (**(*var_1520h + 0x10))();\n            }\ncode_r0x00405752:\n            fcn.00401dde();\n            fcn.00401dde();\n            var_4h._0_1_ = 1;\n            arg_8h_00 = puVar10;\n            if (var_1524h != NULL) {\n                (**(*var_1524h + 8))();\n                arg_8h_00 = puVar10;\n            }\n            goto code_r0x00405348;\n        }\n        cVar4 = (**(*stack0xffffeae8 + 0x90))();\n        if (cVar4 == '\\0') {\n            var_1534h = NULL;\n            if (stack0xffffeae8 != NULL) {\n                (***stack0xffffeae8)();\n            }\n            piVar9 = var_1534h;\n            var_4h._0_1_ = 10;\n            if (var_1534h == NULL) {\n                var_4h._0_1_ = 7;\n                if (stack0xffffeae8 != NULL) {\n                    (**(*stack0xffffeae8 + 8))();\n                }\n                if (var_1520h != NULL) {\n                    var_4h._0_1_ = 0xb;\n                    goto code_r0x00405749;\n                }\n                goto code_r0x00405752;\n            }\n            var_1530h = NULL;\n            if (stack0xffffeae8 != NULL) {\n                (***stack0xffffeae8)();\n            }\n            piVar2 = var_1530h;\n            var_4h._0_1_ = 0xc;\n            uVar3 = var_4h;\n            var_4h._0_1_ = 0xc;\n            var_1558h = var_1530h;\n            if ((var_1530h != NULL) && (cVar4 = (**(*var_1530h + 0x10))(),  uVar3 = var_4h,  cVar4 == '\\0')) {\n                var_4h._0_1_ = 10;\n                var_1515h._0_1_ = '\\x01';\n                (**(*piVar2 + 8))();\n                var_4h._0_1_ = 8;\n                (**(*piVar9 + 8))();\n                goto code_r0x004057c0;\n            }\n            var_4h._0_1_ = uVar3;\n            uVar8 = fcn.0040627b();\n            var_152ch = uVar8;\n            cVar4 = (**(*piVar9 + 0x110))();\n            if (cVar4 != '\\0') {\n                var_152ch = uVar8 | 0x10;\n            }\n            puVar7 = (**(*stack0xffffeae8 + 0xc))();\n            uVar8 = var_152ch;\n            var_28h = *puVar7;\n            var_152ch = var_152ch >> 4 & 0xffffff00 | var_152ch >> 4 & 1;\n            var_1517h = 0;\n            var_1538h = var_1538h & 0xffffff00;\n            var_1550h = var_1550h & 0xffffff00;\n            var_154ch = var_154ch & 0xffffff00;\n            iVar6 = fcn.004064e0(&fcn.004052b7::var_28h);\n            piVar9 = var_1534h;\n            if (iVar6 == 0) {\n                *(extraout_ECX + 0x2498) = *(extraout_ECX + 0x2498) + 1;\n                var_16ch = 0x41032c;\n                var_168h = &fcn.004052b7::var_15ch;\n                var_160h = 0x102;\n                var_164h = 0x102;\n                var_15ch._0_2_ = 0;\n                var_4h._0_1_ = 0x10;\n                (**(*var_1534h + 0x108))();\n                var_28h = var_168h;\n                uVar5 = (*_sym.imp.MSO.dll_Ordinal_2410)();\n                var_28h = 0x405a55;\n                fcn.00401dde();\n                var_4h._0_1_ = 0xc;\n            }\n            else {\n                var_153ch = var_153ch + -1;\n                var_28h = 0x405945;\n                fcn.00406ce2(&fcn.004052b7::var_1560h, &fcn.004052b7::var_28h);\n                uVar1 = *(var_1560h + 0x20);\n                var_1517h = uVar1 & 1;\n                var_1538h = uVar1 >> 1 & 1 | (uVar1 >> 9) << 8;\n                var_1550h = uVar1 >> 2 & 0xffffff00 | uVar1 >> 2 & 1;\n                var_154ch = uVar1 >> 4 & 0xffffff00 | uVar1 >> 4 & 1;\n                uVar5 = uVar1 >> 5 & 1;\n                piVar9 = var_1534h;\n            }\n            if (uVar5 != 0) {\n                uVar8 = uVar8 | 0x20;\n            }\n            var_28h = &fcn.004052b7::var_28h;\n            piStackY52 = 0x405a98;\n            fcn.00406ce2(&fcn.004052b7::var_1568h, var_28h);\n            *(var_1568h + 0x20) = *(extraout_ECX + 0x24a8) | uVar8;\n            if (var_152ch != '\\0') {\n                var_1540h = var_1540h & 0xff;\n                if (uVar5 != 0) {\n                    var_1540h = 1;\n                }\n            }\n            uVar8 = uVar8 & 0xf;\n            if (uVar8 == 0) {\ncode_r0x00405af1:\n                piStackY52 = 0x396c6777;\n                piStackY56 = 0x405afc;\n                (*_sym.imp.Mso20Win32Client.dll_Ordinal_1360)();\n                var_4h._0_1_ = 10;\n                if (var_1530h != NULL) {\n                    piStackY56 = var_1530h;\n                    var_38h = 0x405b10;\n                    (**(*var_1530h + 8))();\n                }\n                var_4h._0_1_ = 8;\n                var_38h = 0x405b1a;\n                piStackY56 = piVar9;\n                (**(*piVar9 + 8))();\n                var_4h._0_1_ = 7;\n                if (stack0xffffeae8 != NULL) {\n                    (**(*stack0xffffeae8 + 8))();\n                }\n                if (var_1520h != NULL) {\n                    var_4h._0_1_ = 0x15;\n                    goto code_r0x00405749;\n                }\n                goto code_r0x00405752;\n            }\n            if (uVar8 < 3) {\n                if (uVar8 == 8) {\ncode_r0x00405bd7:\n                    *(extraout_ECX + 0x2488) = *(extraout_ECX + 0x2488) + 1;\n                }\n                else {\n                    *(extraout_ECX + 0x143c) = *(extraout_ECX + 0x143c) + 1;\n                }\n                if (*(extraout_ECX + 0x2488) + *(extraout_ECX + 0x143c) == 1) {\n                    piStackY52 = &fcn.004052b7::var_284h;\n                    piStackY56 = 0x405c06;\n                    (**(*piVar9 + 0x108))();\n                }\n                else {\n                    if (var_27ch < 2) {\n                        piStackY52 = NULL;\n                        piStackY56 = 0x2;\n                        var_38h = &fcn.004052b7::var_284h;\n                        puStackY64 = var_284h;\n                        uStackY68 = 0x405c25;\n                        (***var_284h)();\n                    }\n                    *var_280h = 0;\n                }\n                var_1554h = *(extraout_ECX + 0x24a8);\n                var_168h = &fcn.004052b7::var_15ch;\n                var_160h = 0x102;\n                var_16ch = 0x41032c;\n                var_164h = 0x102;\n                var_15ch._0_2_ = 0;\n                var_1544h = NULL;\n                var_4h._0_1_ = 0x13;\n                piStackY52 = &fcn.004052b7::var_1544h;\n                piStackY56 = 0x405c88;\n                (**(*stack0xffffeae8 + 0x18))();\n                if (var_1544h == NULL) {\n                    piStackY56 = 0x405e17;\n                    fcn.00401dde();\n                    var_4h._0_1_ = 10;\n                    if (var_1530h != NULL) {\n                        piStackY56 = var_1530h;\n                        var_38h = 0x405e2b;\n                        (**(*var_1530h + 8))();\n                    }\n                    var_4h._0_1_ = 8;\n                    var_38h = 0x405e35;\n                    piStackY56 = piVar9;\n                    (**(*piVar9 + 8))();\n                    var_4h._0_1_ = 7;\n                    if (stack0xffffeae8 != NULL) {\n                        (**(*stack0xffffeae8 + 8))();\n                    }\n                    if (var_1520h != NULL) {\n                        var_4h._0_1_ = 0x14;\n                        goto code_r0x00405749;\n                    }\n                    goto code_r0x00405752;\n                }\n                piStackY56 = &fcn.004052b7::var_16ch;\n                var_38h = &fcn.004052b7::var_38h;\n                puStackY64 = 0x405ca6;\n                (**(*var_1544h + 0x1c))();\n                var_4h._0_1_ = 0x12;\n                if (var_1544h != NULL) {\n                    var_28h = var_1544h;\n                    (**(*var_1544h + 8))();\n                }\n                if ((uVar8 == 2) || (uVar8 == 1)) {\n                    var_28h = &fcn.004052b7::var_16ch;\n                    piStackY52 = 0x405ce0;\n                    (**(*var_1520h + 0xc))();\n                    var_28h = 0x405cef;\n                    iVar6 = fcn.004064e0(&fcn.004052b7::var_38h);\n                    if (iVar6 == 0) {\n                        *(extraout_ECX + 0x249c) = *(extraout_ECX + 0x249c) + 1;\n                    }\n                    else {\n                        var_1548h = var_1548h + -1;\n                    }\n                    var_1516h = *(extraout_ECX + 0x248c);\n                    var_28h = 0x405d1c;\n                    cVar4 = fcn.00406360();\n                    if ((((uVar8 == 2) || ((uVar8 == 1 && ((var_1516h != '\\0' || (cVar4 != '\\0')))))) &&\n                        ((var_152ch == '\\0' || (uVar5 == 0)))) &&\n                       ((((var_1538h == '\\0' && ((var_1517h == 0 || ((var_1516h == '\\0' && (cVar4 == '\\0')))))) ||\n                         ((var_154ch != '\\0' && (uVar5 != 0)))) && (var_1510h == 5)))) {\n                        var_1510h = (var_1516h != '\\0') + 1;\n                    }\n                }\n                var_28h = &fcn.004052b7::var_38h;\n                piStackY52 = 0x405daf;\n                fcn.00406ce2(&fcn.004052b7::var_1570h, var_28h);\n                *(var_1570h + 0x20) = var_1554h;\n                piStackY52 = 0x405dc9;\n                fcn.00401dde();\n            }\n            else {\n                if (uVar8 != 4) {\n                    if (uVar8 == 8) goto code_r0x00405bd7;\n                    goto code_r0x00405af1;\n                }\n                *(extraout_ECX + 0x3f0) = *(extraout_ECX + 0x3f0) + 1;\n                if (*(extraout_ECX + 0x3f0) == 1) {\n                    piStackY52 = &fcn.004052b7::var_39ch;\n                    piStackY56 = 0x405b64;\n                    (**(*piVar9 + 0x108))();\n                }\n                else {\n                    if (var_394h < 2) {\n                        piStackY52 = NULL;\n                        piStackY56 = 0x2;\n                        var_38h = &fcn.004052b7::var_39ch;\n                        puStackY64 = var_39ch;\n                        uStackY68 = 0x405b83;\n                        (***var_39ch)();\n                    }\n                    *var_398h = 0;\n                }\n                if (((var_152ch == '\\0') || (uVar5 == 0)) &&\n                   ((var_1550h == '\\0' || ((var_154ch != '\\0' && (uVar5 != 0)))))) {\n                    var_1510h = 0;\n                }\n            }\n            var_4h._0_1_ = 10;\n            if (var_1530h != NULL) {\n                piStackY52 = var_1530h;\n                piStackY56 = 0x405de5;\n                (**(*var_1530h + 8))();\n            }\n            var_4h._0_1_ = 8;\n            piStackY56 = 0x405def;\n            piStackY52 = piVar9;\n            (**(*piVar9 + 8))();\n            var_4h._0_1_ = 7;\n            if (stack0xffffeae8 != NULL) {\n                var_28h = stack0xffffeae8;\n                (**(*stack0xffffeae8 + 8))();\n            }\n        }\n        else {\n            puVar7 = (**(*stack0xffffeae8 + 0xc))();\n            var_50h = 0x40d4e8;\n            var_4ch = L\"FileID\";\n            var_48h = *puVar7;\n            uStackY72 = puVar7[1];\n            uStackY68 = puVar7[2];\n            puStackY64 = puVar7[3];\n            var_28h = 0x4057c0;\n            fcn.00406a42(noname_0, noname_0, &fcn.004052b7::var_50h, 0x40579e);\ncode_r0x004057c0:\n            var_4h._0_1_ = 7;\n            if (stack0xffffeae8 != NULL) {\n                var_28h = stack0xffffeae8;\n                (**(*stack0xffffeae8 + 8))();\n            }\n        }\n    }\n    var_4h._0_1_ = 7;\n    if (stack0xffffeae8 != NULL) {\n        (**(*stack0xffffeae8 + 8))();\n    }\n    if (var_1520h != NULL) {\n        var_4h._0_1_ = 0x16;\n        (**(*var_1520h + 0x10))();\n    }\n    var_4h._0_1_ = 6;\n    if ((var_1515h == '\\0') && (var_1540h == '\\0')) {\n        if (var_18h != '\\0') {\n            if (var_1510h == 5) {\n                cVar4 = fcn.00405ec4();\n                if (cVar4 != '\\0') {\n                    unaff_EBX = 0;\n                    goto code_r0x00405509;\n                }\n            }\n            else {\n                unaff_EBX = var_1510h;\n                if ((var_1510h == 0) && (cVar4 = (**(**(extraout_ECX + 0x2514) + 0x6c))(),  cVar4 != '\\0')) {\n                    unaff_EBX = 0;\n                    (**(**(extraout_ECX + 0x2514) + 0x68))();\n                }\n                else {\ncode_r0x00405509:\n                    fcn.00403e26(unaff_EBX);\n                }\n            }\n        }\n        if (*(extraout_ECX + 0x2514) != 0) {\n            var_4h._0_1_ = 0x17;\n            fcn.00406610();\n            var_4h = CONCAT31(var_4h._1_3_, 0x18);\n            (**(**(extraout_ECX + 0x2514) + 0x9c))();\n            if (var_1538h == 0xffffffff) {\ncode_r0x0040559c:\n                fcn.00403e26(unaff_EBX);\n            }\n            else if (0 < var_1538h) {\n                (**(**(extraout_ECX + 0x2514) + 0xa0))();\n                unaff_EBX = 6;\n                goto code_r0x0040559c;\n            }\n            var_4h._0_1_ = 6;\n            fcn.00401dde();\n        }\n    }\n    if (*var_398h != 0) {\n        fcn.004010e6(0x824);\n    }\n    if (*var_280h != 0) {\n        fcn.004010e6(0x824);\n    }\n    if (var_1548h != 0) {\n        iVar6 = fcn.00405e71(extraout_ECX + 0x2520);\n        *(extraout_ECX + 0x249c) = *(extraout_ECX + 0x249c) - iVar6;\n    }\n    if (var_153ch != 0) {\n        iVar6 = fcn.00405e71(extraout_ECX + 0x2518);\n        *(extraout_ECX + 0x2498) = *(extraout_ECX + 0x2498) - iVar6;\n    }\n    arg_8h = *(extraout_ECX + 0x2494);\n    *(extraout_ECX + 0x2494) = 0;\n    if (*(extraout_ECX + 0x3f0) == 0) {\n        fcn.004060b1(0);\n    }\n    else {\n        *(extraout_ECX + 0x2494) = 1;\n    }\n    if (*(extraout_ECX + 0x248c) != '\\0') {\n        *(extraout_ECX + 0x2494) = *(extraout_ECX + 0x2494) | 8;\n    }\n    if (*(extraout_ECX + 0x143c) == 0) {\n        *(extraout_ECX + 0x2502) = 1;\n        fcn.004060b1(2);\n        fcn.004060b1(1);\n    }\n    else {\n        *(extraout_ECX + 0x2494) = *(extraout_ECX + 0x2494) | 2;\n    }\n    fcn.00403694(arg_8h, *(extraout_ECX + 0x2494), 0);\n    if ((*(extraout_ECX + 0x3e4) != 0) &&\n       (((*(extraout_ECX + 0x3f0) != iStackY13856 ||\n         (*(extraout_ECX + 0x2488) + *(extraout_ECX + 0x143c) != var_1584h + iStackY9684)) ||\n        (*(extraout_ECX + 0x248c) != var_1580h)))) {\n        fcn.0040481b();\n    }\n    fcn.00401dde();\n    fcn.00401dde();\n    var_4h._0_1_ = 1;\n    if (var_1524h != NULL) {\n        var_28h = 0x405715;\n        (**(*var_1524h + 8))();\n    }\n    var_4h._0_1_ = 0;\n    arg_8h_00 = puVar10;\n    if (var_1528h != NULL) {\n        var_28h = 0x40572a;\n        (**(*var_1528h + 8))();\n        arg_8h_00 = puVar10;\n    }\ncode_r0x0040535f:\n    *in_FS_OFFSET = var_ch_2;\n    fcn.00409d37(arg_8h_00);\n    return;\n}\n",
        "token_count": 6764
    },
    "004090f5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004090f5(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint lpFileName;\n    uchar auStack10 [2];\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.api_ms_win_crt_string_l1_1_0.dll_wcsncpy_s;\n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    (*_sym.imp.api_ms_win_crt_string_l1_1_0.dll_wcsncpy_s)(&lpFileName, 0x104, param_1, 0xffffffff);\n    iVar2 = (*_sym.imp.VCRUNTIME140.dll_wcsrchr)(&lpFileName, 0x5c);\n    (*pcVar1)(iVar2 + 2, &var_4h - (iVar2 + 2) >> 1, param_2, 0xffffffff);\n    iVar2 = fcn.0040197a(0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        *0x413468 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *0x413464 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(&lpFileName);\n        if (*0x413464 == -1) {\n            *0x413460 = (*pcVar1)();\n            goto code_r0x004091a2;\n        }\n    }\n    else {\n        *0x413468 = 0;\n        *0x413464 = 0;\n    }\n    *0x413460 = 0;\ncode_r0x004091a2:\n    fcn.00409d37(unaff_EBX);\n    return;\n}\n",
        "token_count": 398
    },
    "004093ec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004093ec(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    uint *in_ECX;\n    uint var_4h;\n    \n    if (((-1 < arg_8h + 1) && (iVar2 = (arg_8h + 1) * 2,  uVar3 = iVar2,  iVar2 >> 0x20 == 0)) && (uVar3 < 0x80000000))\n    {\n        if (in_ECX[2] < uVar3) {\n            (****in_ECX)(*in_ECX);\n        }\n        if (((-1 < arg_8h) && (uVar3 = arg_8h * 2,  arg_8h * 2 >> 0x20 == 0)) && (uVar3 < 0x80000000)) {\n            if (0 < uVar3) {\n                arg_8h_00 = in_ECX[2];\n                if (uVar3 < in_ECX[2]) {\n                    arg_8h_00 = uVar3;\n                }\n                fcn.00409821(arg_8h_00);\n            }\n            *(in_ECX[1] + arg_8h * 2) = 0;\n            return;\n        }\n    }\n    sub.api_ms_win_crt_runtime_l1_1_0.dll__invalid_parameter_noinfo_noreturn();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 359
    },
    "0040a18c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a18c(int32_t *arg_8h)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    fcn.0040a1cc();\n    do {\n        if (*arg_8h == 0) {\n            *arg_8h = -1;\ncode_r0x0040a1c8:\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x410434);\n            return;\n        }\n        if (*arg_8h != -1) {\n            *(*(*(in_FS_OFFSET + 0x2c) + *0x4107b4 * 4) + 4) = *0x4101e8;\n            goto code_r0x0040a1c8;\n        }\n        fcn.0040a225(100);\n    } while( true );\n}\n",
        "token_count": 183
    },
    "004010e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004010e6(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *in_EDX;\n    \n    if (0 < arg_8h) {\n        (*_sym.imp.api_ms_win_crt_string_l1_1_0.dll_wcsncpy_s)();\n        do {\n            iVar1 = *in_EDX;\n            in_EDX = in_EDX + 1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "004016aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004016aa(void)\n\n{\n    uint unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_20h;\n    \n    if ((*0x4107dc == 0) || (*0x4107f0 == 0)) {\n        if (unaff_EDI == 0) {\n            unaff_ESI = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.00401347();\n        if (unaff_EDI == 0) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "0040173f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040173f(void)\n\n{\n    uint unaff_ESI;\n    int16_t unaff_DI;\n    uint var_20h;\n    \n    if ((*0x4107dc == 0) || (*0x4107f0 == 0)) {\n        if (unaff_DI == 0) {\n            unaff_ESI = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.00401347();\n        if (unaff_DI == 0) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "004017f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004017f4(void)\n\n{\n    uint unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_20h;\n    \n    if ((*0x4107dc == 0) || (*0x4107f0 == 0)) {\n        if (unaff_EDI == 0) {\n            unaff_ESI = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.00401347();\n        if (unaff_EDI == 0) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00401fd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401fd8(uint arg_8h)\n\n{\n    char *pcVar1;\n    \n    pcVar1 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_579)();\n    if (*pcVar1 == '\\0') {\n        pcVar1[1] = arg_8h;\n        *pcVar1 = '\\x01';\n    }\n    else {\n        pcVar1[1] = arg_8h;\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "004024fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_af8h\n\nvoid __fastcall fcn.004024fe(uint param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t var_af8h;\n    uint s;\n    uint var_4b4h;\n    uint var_324h;\n    uint lpFilename;\n    uint32_t var_4h;\n    \n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    var_af8h = param_2;\n    if (*0x41344c == 0) {\n        iVar2 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_604)();\n        uVar5 = 0;\n        if (iVar2 == 0) {\n            (*_sym.imp.Mso20Win32Client.dll_Ordinal_1649)(0x57, 0, 0, 0);\n        }\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, &lpFilename, 200);\n        uVar3 = (*_sym.imp.VCRUNTIME140.dll_wcsrchr)(&lpFilename, 0x5c);\n        pcVar1 = _sym.imp.api_ms_win_crt_string_l1_1_0.dll_wcsnlen;\n        iVar2 = (*_sym.imp.api_ms_win_crt_string_l1_1_0.dll_wcsnlen)(uVar3, 200);\n        iVar4 = (*pcVar1)(&lpFilename, 200);\n        (*_sym.imp.api_ms_win_crt_string_l1_1_0.dll_wcsncpy_s)(&var_4b4h, 200, &lpFilename, iVar4 - iVar2);\n        uVar3 = (*_sym.imp.Mso30Win32Client.dll_Ordinal_432)();\n        iVar2 = (*_sym.imp.Mso30Win32Client.dll_Ordinal_442)(uVar3);\n        *var_af8h = iVar2 != 0;\n        fcn.00401261(&var_324h, 200, L\"%s\\\\%u\\\\ospintl.dll\", &var_4b4h);\n        *0x41344c = fcn.0040197a(0x22);\n        if (*0x41344c == 0) {\n            sub.VCRUNTIME140.dll_memset(&s, 0, 0x640);\n            var_af8h = 0;\n            iVar2 = (*_sym.imp.Mso30Win32Client.dll_Ordinal_1194)(&s, 400, &var_af8h);\n            if ((-1 < iVar2) && (var_af8h != 0)) {\n                do {\n                    fcn.00401261(&var_324h, 200, L\"%s\\\\%u\\\\ospintl.dll\", &var_4b4h);\n                    *0x41344c = fcn.0040197a(0x22);\n                    if (*0x41344c != 0) goto code_r0x00402681;\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < var_af8h);\n            }\n            if (*0x41344c == 0) goto code_r0x004028d7;\n        }\ncode_r0x00402681:\n        pcVar1 = _sym.imp.Mso30Win32Client.dll_Ordinal_612;\n        (*_sym.imp.Mso30Win32Client.dll_Ordinal_612)(*0x41344c, 0x556ddf37, 0x410ca8, 200);\n        (*pcVar1)(*0x41344c, 0x7b76e4de, 0x412f08, 200);\n        (*pcVar1)(*0x41344c, 0x8b5ac6e9, 0x4112e8, 200);\n        (*pcVar1)(*0x41344c, 0xb51ce1df, 0x412418, 200);\n        (*pcVar1)(*0x41344c, 0x27356d10, 0x410988, 200);\n        (*pcVar1)(*0x41344c, 0x21341, 0x411dd8, 200);\n        (*pcVar1)(*0x41344c, 0xef29bcbf, 0x4120f8, 200);\n        (*pcVar1)(*0x41344c, 0x77aec5d9, 0x412d78, 200);\n        (*pcVar1)(*0x41344c, 0xc07d7a40, 0x410fc8, 200);\n        (*pcVar1)(*0x41344c, 0x9b52e994, 0x412288, 200);\n        (*pcVar1)(*0x41344c, 0xb76e1ca2, 0x410b18, 200);\n        (*pcVar1)(*0x41344c, 0x5137cfbd, 0x411928, 200);\n        (*pcVar1)(*0x41344c, 0x18351f4a, 0x411f68, 200);\n        (*pcVar1)(*0x41344c, 0xc072afc1, 0x4107f8, 200);\n        (*pcVar1)(*0x41344c, 0xdf03accf, 0x412a58, 200);\n        (*pcVar1)(*0x41344c, 0xb74885a8, 0x411c48, 200);\n        (*pcVar1)(*0x41344c, 0x5ce01764, 0x4128c8, 200);\n        (*pcVar1)(*0x41344c, 0xe59100ce, 0x412738, 200);\n        (*pcVar1)(*0x41344c, 0xd63a8c20, 0x413098, 200);\n        (*pcVar1)(*0x41344c, 0x945e5c52, 0x411478, 200);\n        (*pcVar1)(*0x41344c, 0xf11de827, 0x411608, 200);\n        (*pcVar1)(*0x41344c, 0xb01260ab, 0x411ab8, 200);\n        (*pcVar1)(*0x41344c, 0x7db232e6, 0x4125a8, 200);\n        (*pcVar1)(*0x41344c, 0x666e24b6, 0x412be8, 200);\n        (*pcVar1)(*0x41344c, 0x6958a655, 0x411158, 200);\n        (*pcVar1)(*0x41344c, 0xbb79e653, 0x411798, 200);\n        (*pcVar1)(*0x41344c, 0xd2c4ce19, 0x410e38, 200);\n        (*pcVar1)(*0x41344c, 0xefdf5bd2, 0x4132a8, 200);\n        *0x413440 = fcn.004093c6();\n        if (*0x413440 == 0) {\n            uVar3 = 0x396c666b;\n        }\n        else {\n            *0x41343c = fcn.004093c6();\n            if (*0x41343c != 0) goto code_r0x004028d7;\n            uVar3 = 0x39776a30;\n        }\n        (*_sym.imp.Mso20Win32Client.dll_Ordinal_1360)(uVar3);\n    }\ncode_r0x004028d7:\n    fcn.00409d37(var_af8h);\n    return;\n}\n",
        "token_count": 1771
    },
    "004028e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004028e5(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = param_1 + 0x2528;\n    if ((*piVar1 == 0) || ((*(param_1 + 0x24f0) != 0 && (*(param_1 + 0x2511) != '\\0')))) {\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 108
    },
    "00402a48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402a48(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint uVar6;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x40b3c7;\n    var_ch = *in_FS_OFFSET;\n    uVar4 = *0x4101e0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar6 = 0;\n    fcn.00404878(0);\n    if (*(param_1 + 0x24d0) != 0) {\n        (*_sym.imp.UxTheme.dll_CloseThemeData)(*(param_1 + 0x24d0), uVar6, uVar4);\n        *(param_1 + 0x24d0) = 0;\n    }\n    pcVar2 = _sym.imp.USER32.dll_DestroyIcon;\n    pcVar3 = _sym.imp.Mso20Win32Client.dll_Ordinal_1121;\n    if (*(param_1 + 0x3dc) != 0) {\n        iVar5 = (*_sym.imp.USER32.dll_DestroyIcon)(*(param_1 + 0x3dc));\n        if (iVar5 == 0) {\n            (*pcVar3)(0x396c666c, 0x4b8, 0x32, L\"System Error: DestroyIcon failed\");\n        }\n    }\n    if (*(param_1 + 0x3d4) != 0) {\n        iVar5 = (*pcVar2)(*(param_1 + 0x3d4));\n        if (iVar5 == 0) {\n            (*pcVar3)(0x396c666d, 0x4b8, 0x32, L\"System Error: DestroyIcon failed\");\n        }\n    }\n    if (*(param_1 + 0x3d8) != 0) {\n        iVar5 = (*pcVar2)(*(param_1 + 0x3d8));\n        if (iVar5 == 0) {\n            (*pcVar3)(0x396c666e, 0x4b8, 0x32, L\"System Error: DestroyIcon failed\");\n        }\n    }\n    if (*(param_1 + 0x3e0) != 0) {\n        iVar5 = (*pcVar2)(*(param_1 + 0x3e0));\n        if (iVar5 == 0) {\n            (*pcVar3)(0x396c666f, 0x4b8, 0x32, L\"System Error: DestroyIcon failed\");\n        }\n    }\n    pcVar2 = _sym.imp.USER32.dll_DestroyWindow;\n    if (*(param_1 + 0x10) != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*(param_1 + 0x10));\n    }\n    if (*(param_1 + 0xc) != 0) {\n        (*pcVar2)(*(param_1 + 0xc));\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_FreeLibrary;\n    iVar5 = (*_sym.imp.KERNEL32.dll_FreeLibrary)(*0x413440);\n    if (iVar5 == 0) {\n        (*pcVar3)(0x396c6670, 0x4b8, 0x32, L\"System Error: Failed to free RichEdit\");\n    }\n    iVar5 = (*pcVar2)(*0x41343c);\n    if (iVar5 == 0) {\n        (*pcVar3)(0x39776a31, 0x4b8, 0x32, L\"System Error: Failed to free MSPTLS\");\n    }\n    iVar5 = (*pcVar2)(*0x41344c);\n    if (iVar5 == 0) {\n        (*pcVar3)(0x396d7377, 0x4b8, 0x32, L\"System Error: Failed to free InstRez\");\n    }\n    if (*(param_1 + 4) != 0) {\n        iVar5 = (*_sym.imp.GDI32.dll_DeleteDC)(*(param_1 + 4));\n        if (iVar5 == 0) {\n            (*pcVar3)(0x39776a32, 0x4b8, 0x32, L\"System Error: DeleteDC failed\");\n        }\n    }\n    *(param_1 + 4) = 0;\n    if (*(param_1 + 0x2506) != '\\0') {\n        iVar5 = fcn.0040164d();\n        if (iVar5 == 0) {\n            (*pcVar3)(0x39776a33, 0x4b8, 0x32, L\"System Error: UnregisterClass failed\");\n        }\n    }\n    if (*(param_1 + 0x2507) != '\\0') {\n        iVar5 = fcn.0040164d();\n        if (iVar5 == 0) {\n            (*pcVar3)(0x39776a34, 0x4b8, 0x32, L\"System Error: UnregisterClass failed\");\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowLongW)(*(param_1 + 0xc), 0xffffffeb, 0);\n    fcn.0040651a();\n    fcn.0040651a();\n    piVar1 = *(param_1 + 0x2514);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 1290
    },
    "00402dc2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00402dc2(void)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    uint uVar3;\n    code *pcVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t *piVar7;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_4h;\n    \n    fcn.0040b1e8(0x14);\n    fcn.00403a92();\n    fcn.00403aae();\n    fcn.00403ad6();\n    cVar5 = fcn.00404d06();\n    if ((cVar5 != '\\0') &&\n       (((*(extraout_ECX + 0x944) == '\\0' ||\n         ((cVar5 = fcn.00404fdd(),  cVar5 != '\\0' &&\n          ((*(extraout_ECX + 0x944) == '\\0' || (cVar5 = fcn.00405036(),  cVar5 != '\\0')))))) &&\n        (cVar5 = fcn.004032d6(*extraout_ECX),  cVar5 != '\\0')))) {\n        *0x41346c = *0x41346c + 1;\n        if (*0x41346c == 1) {\n            *0x4101fc = (*_sym.imp.KERNEL32.dll_FlsAlloc)(0);\n        }\n        *(unaff_EBP + -4) = 0;\n        if (*(extraout_ECX + 0x944) != '\\0') {\n            iVar6 = (*_sym.imp.USER32.dll_LoadImageW)\n                              (*extraout_ECX, 0x6b, 1, extraout_ECX[0x92d], extraout_ECX[0x92e], 0);\n            extraout_ECX[0xf4] = iVar6;\n            if (iVar6 == 0) goto code_r0x004030ae;\n            if (*(extraout_ECX + 0x944) != '\\0') {\n                cVar5 = fcn.00405062();\n                if (cVar5 == '\\0') goto code_r0x004030ae;\n                if (*(extraout_ECX + 0x944) != '\\0') {\n                    fcn.00403af2(1);\n                }\n            }\n        }\n        *(unaff_EBP + -0x11) = 0;\n        cVar5 = fcn.00402c84();\n        pcVar4 = _sym.imp.Mso20Win32Client.dll_Ordinal_1554;\n        if ((((cVar5 == '\\0') || (iVar6 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_1554)(0x40d440),  iVar6 == 0)) ||\n            (iVar6 = (*pcVar4)(0x40d400),  iVar6 == 0)) || (iVar6 = (*pcVar4)(0x40d4c0),  iVar6 != 0)) {\n            bVar2 = false;\n        }\n        else {\n            bVar2 = true;\n        }\n        if (bVar2) {\n            fcn.00403e26(8);\n            *(unaff_EBP + -0x11) = 1;\n        }\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -4) = 1;\n        iVar6 = fcn.004030b4(unaff_EBP + -0x1c);\n        uVar3 = *0x40d60c;\n        if (iVar6 == 2) {\n            piVar7 = *(unaff_EBP + -0x1c);\n            *(extraout_ECX + 0x248f) = 0;\n            cVar5 = fcn.004019ea(uVar3);\n            if (cVar5 == '\\0') {\n                (*_sym.imp.Mso20Win32Client.dll_Ordinal_1360)(0x66746f38);\n            }\n            else {\n                *(unaff_EBP + -0x18) = 0;\n                *(unaff_EBP + -4) = 2;\n                (**(*piVar7 + 0x14))(unaff_EBP + -0x18);\n                uVar3 = *0x40d5fc;\n                *(extraout_ECX + 0x248d) = 1;\n                cVar5 = fcn.004019ea(uVar3);\n                if (cVar5 != '\\0') {\n                    *(extraout_ECX + 0x248f) = 1;\n                }\n                cVar5 = fcn.004019ea(*0x40d634);\n                if (cVar5 != '\\0') {\n                    *(extraout_ECX + 0x924) = 1;\n                }\n                extraout_ECX[0x925] = 1;\n                *(unaff_EBP + -4) = 3;\n                piVar1 = *(unaff_EBP + -0x18);\n                if (piVar1 != NULL) {\n                    *(unaff_EBP + -0x18) = 0;\n                    (**(*piVar1 + 8))(piVar1);\n                }\n                *(unaff_EBP + -4) = 1;\n            }\n        }\n        else {\n            fcn.0040619e();\n            piVar7 = *(unaff_EBP + -0x1c);\n        }\n        (*_sym.imp.USER32.dll_ShowWindow)(extraout_ECX[3], 0);\n        (*_sym.imp.USER32.dll_UpdateWindow)(extraout_ECX[3]);\n        (*_sym.imp.USER32.dll_SetWindowLongW)(extraout_ECX[3], 0xffffffeb, extraout_ECX);\n        if (*(unaff_EBP + -0x11) != '\\0') {\n            fcn.00403e26(9);\n        }\n        if ((*(extraout_ECX + 0x248e) != '\\0') || (*(extraout_ECX + 0x248d) != '\\0')) {\n            fcn.00403e26((*(extraout_ECX + 0x248e) != '\\0') + 3);\n        }\n        *(unaff_EBP + -4) = 0;\n        if (piVar7 != NULL) {\n            (**(*piVar7 + 8))(piVar7);\n        }\n    }\ncode_r0x004030ae:\n    fcn.0040b15f();\n    return;\n}\n",
        "token_count": 1515
    },
    "0040321a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0040321a(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040b17f(8);\n    if (*(extraout_ECX + 0x2514) != NULL) {\n        piVar1 = (**(**(extraout_ECX + 0x2514) + 0x7c))();\n        (**(*piVar1 + 0x18))(*(extraout_ECX + 0x2528));\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(extraout_ECX + 0x2528));\n        *(extraout_ECX + 0x2528) = 0;\n        puVar2 = (**(**(extraout_ECX + 0x2514) + 0x7c))();\n        piVar1 = NULL;\n        *(unaff_EBP + -0x10) = 0;\n        if (puVar2 != NULL) {\n            (***puVar2)(puVar2, str.Q_rkXf_O, unaff_EBP + -0x10);\n            piVar1 = *(unaff_EBP + -0x10);\n        }\n        *(unaff_EBP + -0x14) = piVar1;\n        *(unaff_EBP + -4) = 0;\n        (**(*piVar1 + 0x2c))();\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(extraout_ECX + 0x252c));\n        *(extraout_ECX + 0x252c) = 0;\n        *(unaff_EBP + -4) = 0xffffffff;\n        (**(*piVar1 + 8))(piVar1);\n    }\n    if (*(extraout_ECX + 0x2514) != 0) {\n        piVar1 = *(extraout_ECX + 0x2514);\n        *(extraout_ECX + 0x2514) = 0;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n    }\n    *(extraout_ECX + 0x2512) = 0;\n    fcn.0040b15f();\n    return;\n}\n",
        "token_count": 574
    },
    "00403694": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403694(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint uVar2;\n    bool bVar3;\n    ulong uVar4;\n    \n    if ((arg_8h & 1) == 0) {\n        uVar2 = fcn.00403bc1();\n    }\n    else {\n        uVar2 = 1;\n    }\n    if ((arg_ch & 1) == 0) {\n        uVar4 = fcn.00403bc1();\n    }\n    else {\n        uVar4 = CONCAT44(uVar2, 1);\n    }\n    if ((arg_10h == '\\0') && (uVar4 >> 0x20 == uVar4)) {\n        bVar3 = true;\n    }\n    else {\n        *(in_ECX + 0x20) = 2;\n        iVar1 = fcn.00403457(uVar4);\n        *(in_ECX + 0x28) = iVar1;\n        if (iVar1 == 0) {\n            (*_sym.imp.Mso20Win32Client.dll_Ordinal_1360)(0x396d7433);\n            bVar3 = false;\n        }\n        else {\n            iVar1 = (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, in_ECX + 0x14);\n            bVar3 = iVar1 != 0;\n        }\n    }\n    return bVar3;\n}\n",
        "token_count": 339
    },
    "00403739": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403739(int32_t param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint uVar6;\n    char16_t *pcVar7;\n    uint lpPoint;\n    uint y;\n    uint32_t var_4h;\n    \n    fcn.00403a92();\n    fcn.00403aae();\n    fcn.00403ad6();\n    *(param_1 + 0x24fe) = 1;\n    iVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n    pcVar1 = _sym.imp.USER32.dll_AppendMenuW;\n    if (iVar3 == 0) {\n        return 0;\n    }\n    iVar4 = (*_sym.imp.USER32.dll_AppendMenuW)(iVar3, 0, 1, 0x412f08);\n    if (iVar4 == 0) {\n        pcVar7 = L\"System Error: AppendMenu failed\";\n        uVar6 = 0x396c6732;\n    }\n    else {\n        iVar4 = (*pcVar1)(iVar3, 0, 2, 0x4112e8);\n        if (iVar4 == 0) {\n            pcVar7 = L\"System Error: AppendMenu failed\";\n            uVar6 = 0x396c6733;\n        }\n        else {\n            iVar4 = (*pcVar1)(iVar3, 0x800, 0, 0);\n            if (iVar4 == 0) {\n                pcVar7 = L\"System Error: AppendMenu failed\";\n                uVar6 = 0x396c6734;\n            }\n            else {\n                uVar6 = 0x412d78;\n                if (*(param_1 + 0x248c) == '\\0') {\n                    uVar6 = 0x4120f8;\n                }\n                iVar4 = (*pcVar1)(iVar3, 0, 3, uVar6);\n                if (iVar4 == 0) {\n                    pcVar7 = L\"System Error: AppendMenu failed\";\n                    uVar6 = 0x396c6735;\n                }\n                else {\n                    uVar6 = 0;\n                    if (*(param_1 + 0x24f9) != '\\0') {\n                        uVar6 = 8;\n                    }\n                    iVar4 = (*pcVar1)(iVar3, uVar6, 4, 0x412418);\n                    if (iVar4 == 0) {\n                        pcVar7 = L\"System Error: AppendMenu failed\";\n                        uVar6 = 0x396c6736;\n                    }\n                    else {\n                        cVar2 = fcn.00401ffd();\n                        if (cVar2 != '\\0') {\n                            uVar6 = 0;\n                            if (*(param_1 + 0x24fa) != '\\0') {\n                                uVar6 = 8;\n                            }\n                            iVar4 = (*pcVar1)(iVar3, uVar6, 5, 0x410988);\n                            if (iVar4 == 0) {\n                                pcVar7 = L\"System Error: AppendMenu failed\";\n                                uVar6 = 0x396c6737;\n                                goto code_r0x00403798;\n                            }\n                        }\n                        uVar6 = 0;\n                        if (*(param_1 + 0x24fb) != '\\0') {\n                            uVar6 = 8;\n                        }\n                        iVar4 = (*pcVar1)(iVar3, uVar6, 6, 0x411dd8);\n                        if (iVar4 == 0) {\n                            pcVar7 = L\"System Error: AppendMenu failed\";\n                            uVar6 = 0x39776a39;\n                        }\n                        else {\n                            iVar4 = (*_sym.imp.USER32.dll_SetMenuDefaultItem)(iVar3, 1, 0);\n                            if (iVar4 == 0) {\n                                pcVar7 = L\"System Error: SetMenuDefaultItem failed\";\n                                uVar6 = 0x61316e6e;\n                            }\n                            else {\n                                iVar4 = (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n                                if (iVar4 == 0) {\n                                    pcVar7 = L\"System Error: GetCursorPos failed\";\n                                    uVar6 = 0x396c6762;\n                                }\n                                else {\n                                    (*_sym.imp.USER32.dll_SetForegroundWindow)(*(param_1 + 0xc));\n                                    fcn.004035e2();\n                                    uVar6 = 0x128;\n                                    if (*(param_1 + 0x2503) != '\\0') {\n                                        uVar6 = 0x8128;\n                                    }\n                                    iVar4 = (*_sym.imp.USER32.dll_TrackPopupMenuEx)\n                                                      (iVar3, uVar6, lpPoint, y, *(param_1 + 0xc), 0);\n                                    iVar3 = (*_sym.imp.USER32.dll_DestroyMenu)(iVar3);\n                                    if (iVar3 != 0) {\n                                        *(param_1 + 0x24fe) = 0;\n                                        if ((iVar4 == 1) || (iVar4 == 2)) {\n                                            fcn.00403bd1();\n                                        }\n                                        else if (iVar4 == 3) {\n                                            bVar5 = *(param_1 + 0x248c) == '\\0';\n                                            var_4h = var_4h & 0xffffff00 | bVar5;\n                                            if (*(param_1 + 0x2514) != NULL) {\n                                                (**(**(param_1 + 0x2514) + 0x4c))(!bVar5);\n                                            }\n                                            fcn.004061bf(var_4h);\n                                        }\n                                        else if (iVar4 == 4) {\n                                            bVar5 = *(param_1 + 0x24f9) == '\\0';\n                                            *(param_1 + 0x24f9) = bVar5;\n                                            iVar3 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_789)(0x40d3c0, !bVar5);\n                                            if (((!bVar5) && (iVar3 != 0)) && (*(param_1 + 0x2514) != NULL)) {\n                                                (**(**(param_1 + 0x2514) + 100))();\n                                            }\n                                        }\n                                        else {\n                                            if (iVar4 == 5) {\n                                                bVar5 = *(param_1 + 0x24fa) == '\\0';\n                                                *(param_1 + 0x24fa) = bVar5;\n                                                uVar6 = 0x40d500;\n                                            }\n                                            else {\n                                                if (iVar4 != 6) {\n                                                    if (iVar4 == 7) {\n                                                        (*_sym.imp.USER32.dll_DestroyWindow)(*(param_1 + 0xc));\n                                                        fcn.0040489f(1);\n                                                        return 1;\n                                                    }\n                                                    goto code_r0x00403a82;\n                                                }\n                                                bVar5 = *(param_1 + 0x24fb) == '\\0';\n                                                *(param_1 + 0x24fb) = bVar5;\n                                                uVar6 = 0x40d390;\n                                            }\n                                            (*_sym.imp.Mso20Win32Client.dll_Ordinal_789)(uVar6, !bVar5);\n                                        }\ncode_r0x00403a82:\n                                        fcn.0040363b();\n                                        return 1;\n                                    }\n                                    pcVar7 = L\"System Error: DestroyMenu failed\";\n                                    uVar6 = 0x396c6764;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00403798:\n    (*_sym.imp.Mso20Win32Client.dll_Ordinal_1121)(uVar6, 0x4b8, 0x32, pcVar7);\n    return 0;\n}\n",
        "token_count": 1736
    },
    "00403e26": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00403e26(uint arg_8h)\n\n{\n    int32_t arg_ch;\n    uint uVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    ushort *puVar4;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    char cVar5;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040b17f(0x20);\n    uVar1 = (*_sym.imp.Mso30Win32Client.dll_Ordinal_1043)();\n    *(unaff_EBP + -0x28) = uVar1;\n    *(unaff_EBP + -0x2c) = 0x40d4a4;\n    *(unaff_EBP + -0x24) = \"BalloonEvent\";\n    fcn.00401f89(unaff_EBP + -0x2c);\n    *(unaff_EBP + -4) = 0;\n    arg_ch = *(unaff_EBP + 8);\n    (*_sym.imp.Mso20Win32Client.dll_Ordinal_1620)(\"BalloonMessageID\", arg_ch, arg_ch >> 0x1f, extraout_ECX_00);\n    fcn.004069c7(\"BalloonMessageID\", arg_ch);\n    cVar5 = '\\0';\n    if (arg_ch == 0) {\n        if (((*(extraout_ECX + 0x2500) == '\\0') || (*(extraout_ECX + 0x24a0) == 0)) || (*(extraout_ECX + 0x24a4) == 0))\n        goto code_r0x00403fca;\n        if (*(extraout_ECX + 0x24a0) == 5) {\n            *(extraout_ECX + 0x24a0) = 0;\n        }\n        else {\n            *(extraout_ECX + 0x24a4) = 0;\n        }\n        *(extraout_ECX + 0x2500) = 0;\n        fcn.00404a00(60000, 0x91);\n        if (*(extraout_ECX + 0x24a0) != 0) goto code_r0x00403fca;\n    }\n    else if (arg_ch == 1) {\n        if ((*(extraout_ECX + 0x2501) == '\\0') || (*(extraout_ECX + 0x24a0) != 5)) goto code_r0x00403fca;\n        *(extraout_ECX + 0x24a0) = 1;\n        *(extraout_ECX + 0x2501) = 0;\n        fcn.00404a00(60000, 0x95);\n    }\n    else {\n        if (arg_ch != 2) {\n            if (2 < arg_ch) {\n                if (arg_ch < 5) {\n                    *(extraout_ECX + 0x24a0) = arg_ch;\n                    cVar5 = fcn.00404053(arg_ch);\n                    if (cVar5 == '\\0') {\n                        *(extraout_ECX + 0x24a0) = 5;\n                    }\n                }\n                else if (arg_ch - 6U < 4) {\n                    *(extraout_ECX + 0x24a0) = arg_ch;\n                    cVar5 = fcn.00404053(arg_ch);\n                    if (cVar5 == '\\0') {\n                        *(extraout_ECX + 0x24a0) = 5;\n                    }\n                }\n            }\n            goto code_r0x00403fca;\n        }\n        if ((*(extraout_ECX + 0x2502) == '\\0') || (*(extraout_ECX + 0x24a0) != 5)) goto code_r0x00403fca;\n        *(extraout_ECX + 0x24a0) = 2;\n        *(extraout_ECX + 0x2502) = 0;\n    }\n    cVar5 = fcn.00404053(\"BalloonMessageID\");\n    if (cVar5 == '\\0') {\n        *(extraout_ECX + 0x24a0) = 5;\n    }\ncode_r0x00403fca:\n    *(unaff_EBP + -0x10) = 4;\n    *(unaff_EBP + 8) = cVar5;\n    *(unaff_EBP + -0x14) = \"BalloonIsDisplayed\";\n    piVar2 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_1620)();\n    *(unaff_EBP + -4) = 1;\n    cVar5 = (**(*piVar2 + 0xc))();\n    if (cVar5 != '\\0') {\n        puVar3 = fcn.00406c7b(unaff_EBP + 8, unaff_EBP + -0x10);\n        uVar1 = *puVar3;\n        *puVar3 = 0;\n        (**(*piVar2 + 8))(uVar1);\n        if (*(unaff_EBP + -0x18) != NULL) {\n            (**(**(unaff_EBP + -0x18) + 4))(1);\n        }\n    }\n    puVar4 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_579)();\n    if (*puVar4 == '\\0') {\n        *puVar4 = 0x101;\n    }\n    else {\n        *(puVar4 + 1) = 1;\n    }\n    (*_sym.imp.Mso20Win32Client.dll_Ordinal_177)();\n    fcn.0040b15f();\n    return;\n}\n",
        "token_count": 1392
    },
    "00404053": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpData\n\nvoid __cdecl fcn.00404053(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    ulong uVar2;\n    uint uVar3;\n    uint lpData;\n    uint var_3c4h;\n    uint var_3c0h;\n    uint var_3bch;\n    uint var_3b8h;\n    uint var_3b4h;\n    uint var_3b0h;\n    uint var_2a8h;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    if ((*(in_ECX + 0x2504) == '\\0') ||\n       (iVar1 = (*_sym.imp.USER32.dll_FindWindowW)(L\"Microsoft.Office16.MsoUC\", 0),  iVar1 != 0)) goto code_r0x004042ff;\n    sub.VCRUNTIME140.dll_memset(&lpData, 0, 0x3bc);\n    var_3c4h = *(in_ECX + 0xc);\n    lpData = 0x3bc;\n    var_3b8h = 0x401;\n    var_3c0h = 4;\n    var_24h = 4;\n    var_a8h = 10000;\n    var_3bch = 0x13;\n    if (9 < arg_8h) goto code_r0x004042ff;\n    // switch table (10 cases) at 0x404316\n    switch(*(arg_8h * 4 + 0x404316)) {\n    case 0x4040ef:\n        fcn.00403a92();\n        if (*(in_ECX + 0x24f9) == '\\0') goto code_r0x004042ff;\n        fcn.004010e6(0x100);\n        fcn.004010e6(0x40);\n        iVar1 = **(in_ECX + 0x2514);\n        uVar2 = fcn.004098e3();\n        (**(iVar1 + 0x5c))(uVar2);\n        goto code_r0x0040413e;\n    case 0x404145:\n        fcn.00403aae();\n        if (*(in_ECX + 0x24fa) == '\\0') goto code_r0x004042ff;\n        fcn.004010e6(0x100);\n        goto code_r0x00404173;\n    case 0x404187:\n        fcn.00403ad6();\n        if (*(in_ECX + 0x24fb) == '\\0') goto code_r0x004042ff;\n        fcn.004010e6(0x100);\n        fcn.004010e6(0x40);\n        uVar3 = 8;\n        break;\n    case 0x4041c9:\n        fcn.004010e6(0x100);\n        goto code_r0x004041e3;\n    case 0x4041f5:\n        fcn.004010e6(0x100);\n        goto code_r0x00404173;\n    case 0x404214:\n        fcn.004010e6(0x100);\ncode_r0x004041e3:\n        fcn.004010e6(0x40);\ncode_r0x0040413e:\n        uVar3 = 1;\n        break;\n    case 0x404230:\n        fcn.004010e6(0x100);\ncode_r0x00404173:\n        uVar3 = 0x40;\ncode_r0x0040417b:\n        fcn.004010e6(uVar3);\n        uVar3 = 2;\n        break;\n    case 0x40424f:\n        fcn.004010e6(0x100);\n        uVar3 = 0x40;\n        fcn.004010e6(0x40);\n        var_3bch = 0x17;\n        goto code_r0x0040417b;\n    case 0x404295:\n        fcn.004010e6(0x100);\n        fcn.004010e6(0x40);\n        var_3bch = 0x13;\n        uVar3 = 0;\n        break;\n    case 0x4042ff:\n        goto code_r0x004042ff;\n    }\n    var_3b4h = fcn.00403457(uVar3);\n    iVar1 = (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &lpData);\n    if (iVar1 == 0) {\n        (*_sym.imp.Mso20Win32Client.dll_Ordinal_1121)(0x396c6767, 0x4b8, 0x32, L\"System Error: Shell_NotifyIcon failed\")\n        ;\n    }\ncode_r0x004042ff:\n    fcn.00409d37(lpData);\n    return;\n}\n",
        "token_count": 1146
    },
    "0040481b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040481b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 0x3e4) != 0) {\n        iVar1 = fcn.00401df5(param_1, *(param_1 + 1000), *(param_1 + 0x3ec), param_1 + 0x3f0, *(param_1 + 0x2503), \n                             param_1 + 0x24ac, param_1, *(param_1 + 0xc));\n        if (iVar1 == 0) {\n            return 0;\n        }\n        fcn.00404878(0);\n        *(param_1 + 0x3e4) = iVar1;\n    }\n    return 1;\n}\n",
        "token_count": 180
    },
    "00404878": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404878(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x3e4) != 0) {\n        fcn.004077a1();\n        *(in_ECX + 0x24ff) = arg_8h == '\\0';\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0040489f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040489f(uint arg_8h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint lpMsg;\n    uint var_1ch;\n    uint lpSystemTime;\n    uint32_t var_8h;\n    \n    var_8h = *0x4101e0 ^ &stack0xfffffffc;\n    if (*(in_ECX + 0x2505) != '\\0') goto code_r0x004049c8;\n    fcn.00401945(&var_1ch);\n    if (arg_8h == '\\0') {\n        (*_sym.imp.KERNEL32.dll_GetSystemTime)(&lpSystemTime);\n        uVar3 = fcn.00409867(in_ECX + 0x2530);\n        if (60000 < uVar3) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GlobalFindAtomW)(L\"Microsoft_Office_16_MsoSync_RequestComing\");\n            if (iVar2 == 0) {\n                iVar4 = (*_sym.imp.USER32.dll_PeekMessageW)(&lpMsg, 0, 0x402, 0x402, 0);\n                if (iVar4 == 0) goto code_r0x0040493f;\n            }\n            else {\n                do {\n                    (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(iVar2);\n                    iVar2 = (*_sym.imp.KERNEL32.dll_GlobalFindAtomW)(L\"Microsoft_Office_16_MsoSync_RequestComing\");\n                } while (iVar2 != 0);\n                (*_sym.imp.KERNEL32.dll_GetSystemTime)(in_ECX + 0x2530);\n            }\n        }\n        if (*0x413444 != 0) {\n            (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*0x413444);\n        }\n    }\n    else {\ncode_r0x0040493f:\n        *(in_ECX + 0x2505) = 1;\n        (*_sym.imp.Mso20Win32Client.dll_Ordinal_789)(0x40d358, 0);\n        if (*(in_ECX + 0x2504) != '\\0') {\n            fcn.00403709();\n        }\n        fcn.0040321a();\n        *0x41346c = *0x41346c + -1;\n        if (*0x41346c == 0) {\n            (*_sym.imp.KERNEL32.dll_FlsFree)(*0x4101fc);\n            *0x4101fc = 0;\n            if (*0x413470 != 0) {\n                (*_sym.imp.Mso20Win32Client.dll_Ordinal_456)(*0x413470);\n                *0x413470 = 0;\n            }\n        }\n        fcn.004011f0();\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        pcVar1 = _sym.imp.KERNEL32.dll_ReleaseMutex;\n        if (*0x41328c != 0) {\n            (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*0x41328c);\n        }\n        if (*0x413444 != 0) {\n            (*pcVar1)(*0x413444);\n        }\n    }\ncode_r0x004049c8:\n    fcn.00409d37(unaff_EBX);\n    return;\n}\n",
        "token_count": 756
    },
    "00404a48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00404a48(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint pci;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack20 = 0;\n    uStack16 = 0;\n    var_8h = 0;\n    var_4h = 0;\n    pci = 0x14;\n    iVar1 = (*_sym.imp.USER32.dll_GetCursorInfo)(&pci);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_1121)\n                          (0x396c676a, 0x4b8, 0x32, L\"System Error: GetCursorInfo failed\");\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    else {\n        uVar2 = var_8h - *(param_1 + 1000);\n        uVar3 = var_4h - *(param_1 + 0x3ec);\n        uVar4 = uVar2 >> 0x1f;\n        if (((uVar2 ^ uVar4) - uVar4 < 3) && (uVar2 = uVar3 >> 0x1f,  (uVar3 ^ uVar2) - uVar2 < 3)) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 370
    },
    "00404ac4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404ac4(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    uVar1 = 1;\n    if (*(in_ECX + 0x24f0) != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        uVar3 = iVar2 - *(in_ECX + 0x24f4);\n        if (25000 < uVar3) {\n            uVar3 = fcn.00404b50(0x94);\n            goto code_r0x00404b46;\n        }\n        if (*(in_ECX + 0x24f0) != 0) {\n            *(in_ECX + 0x2511) = 1;\n            goto code_r0x00404b46;\n        }\n    }\n    *(in_ECX + 0x2511) = 0;\n    uVar1 = fcn.00405251(arg_8h);\n    uVar4 = (*_sym.imp.USER32.dll_SetTimer)(*(in_ECX + 0xc), 0x94, 2000, 0);\n    *(in_ECX + 0x24f0) = uVar4;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *(in_ECX + 0x24f4) = uVar3;\ncode_r0x00404b46:\n    return uVar3 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 356
    },
    "00404b50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b50(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint noname_0;\n    \n    if (arg_8h == 0x91) {\n        *(in_ECX + 0x2500) = 1;\n    }\n    else if (arg_8h == 0x95) {\n        *(in_ECX + 0x2501) = 1;\n    }\n    else {\n        if (arg_8h == 0x93) {\n            if (*(in_ECX + 0x2508) == '\\0') {\n                return;\n            }\n            *(in_ECX + 0x2508) = 0;\n            (*_sym.imp.USER32.dll_KillTimer)(*(in_ECX + 0xc), 0x93);\n            fcn.00403739();\n            return;\n        }\n        if (arg_8h == 0x94) {\n            (*_sym.imp.USER32.dll_KillTimer)(*(in_ECX + 0xc), 0x94);\n            *(in_ECX + 0x24f0) = 0;\n            if (*(in_ECX + 0x2511) == '\\0') {\n                return;\n            }\n            fcn.00404ac4(1);\n            return;\n        }\n        if (arg_8h != 0x90) {\n            return;\n        }\n        if (*(in_ECX + 0x2504) != '\\0') {\n            if (*(in_ECX + 0x24fd) != '\\0') {\n                if (*(in_ECX + 0x2508) != '\\0') {\n                    return;\n                }\n                cVar1 = fcn.00404a48();\n                *(in_ECX + 0x24fd) = 0;\n                (*_sym.imp.USER32.dll_KillTimer)(*(in_ECX + 0xc), 0x90);\n                if ((*(in_ECX + 0x3e4) == 0) && (*(in_ECX + 0x24fe) == '\\0')) {\n                    if (cVar1 == '\\0') {\n                        return;\n                    }\n                    cVar2 = fcn.00404a00(0x14, 0x90);\n                    if (cVar2 != '\\0') {\n                        fcn.00404ac4(1);\n                        uVar3 = fcn.00401df5(noname_0, *(in_ECX + 1000), *(in_ECX + 0x3ec), in_ECX + 0x3f0, \n                                             *(in_ECX + 0x2503), in_ECX + 0x24ac, noname_0, *(in_ECX + 0xc));\n                        *(in_ECX + 0x3e4) = uVar3;\n                        return;\n                    }\n                }\n                if (cVar1 == '\\0') {\n                    return;\n                }\n                fcn.00404a00(0xffffffff, 0x90);\n                return;\n            }\n            if (*(in_ECX + 0x3e4) == 0) {\n                cVar1 = fcn.00404a48();\n                if (cVar1 != '\\0') {\n                    return;\n                }\n                fcn.0040363b();\n                *(in_ECX + 0x24ff) = 0;\n            }\n            else {\n                cVar1 = fcn.00404a48();\n                if (cVar1 != '\\0') {\n                    return;\n                }\n                fcn.0040363b();\n                fcn.00404878(1);\n            }\n        }\n    }\n    (*_sym.imp.USER32.dll_KillTimer)(*(in_ECX + 0xc));\n    return;\n}\n",
        "token_count": 844
    },
    "00404d06": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404d06(int32_t param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint *puVar5;\n    uint uVar6;\n    uint uVar7;\n    char16_t *pcVar8;\n    uint pData;\n    uint var_90h;\n    int32_t var_84h;\n    int32_t var_80h;\n    int32_t var_7ch;\n    int32_t var_78h;\n    uint lpmi;\n    int32_t var_6ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    int32_t var_60h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    puVar5 = &pData;\n    for (iVar4 = 9; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    var_90h = 0;\n    pData = 0x24;\n    iVar4 = (*_sym.imp.SHELL32.dll_SHAppBarMessage)(5, &pData);\n    *(param_1 + 0x2510) = iVar4 != 0;\n    if (iVar4 == 0) goto code_r0x00404f8e;\n    iVar4 = *(param_1 + 8);\n    *(param_1 + 0x24bc) = var_84h;\n    *(param_1 + 0x24c0) = var_80h;\n    *(param_1 + 0x24c4) = var_7ch;\n    *(param_1 + 0x24c8) = var_78h;\n    iVar3 = (*_sym.imp.USER32.dll_MonitorFromRect)(param_1 + 0x24bc, 1);\n    *(param_1 + 8) = iVar3;\n    if (iVar3 == 0) {\n        pcVar8 = L\"System Error: MonitorFromRect failed\";\n        uVar7 = 0x32;\n        uVar6 = 0x39776a61;\n    }\n    else {\n        sub.VCRUNTIME140.dll_memset(&lpmi, 0, 0x68);\n        lpmi = 0x68;\n        iVar3 = (*_sym.imp.USER32.dll_GetMonitorInfoW)(iVar3, &lpmi);\n        if (iVar3 == 0) {\n            pcVar8 = L\"System Error: GetMonitorInfo failed\";\n            uVar7 = 0x32;\n            uVar6 = 0x39776a62;\n        }\n        else {\n            if ((var_4ch & 1) == 0) {\n                var_84h = var_84h - var_6ch;\n                var_80h = var_80h - var_68h;\n                var_7ch = var_7ch - var_64h;\n                var_78h = var_78h - var_60h;\n            }\n            if (var_80h == var_84h) {\n                if (var_7ch < var_78h) {\n                    *(param_1 + 0x24ec) = 0;\n                }\n                else {\n                    if (var_7ch <= var_78h) goto code_r0x00404e48;\n                    *(param_1 + 0x24ec) = 1;\n                }\n            }\n            else {\ncode_r0x00404e48:\n                *(param_1 + 0x24ec) = (var_84h < var_80h) + 2;\n            }\n            if (iVar4 != *(param_1 + 8)) {\n                if (*(param_1 + 4) != 0) {\n                    iVar4 = (*_sym.imp.GDI32.dll_DeleteDC)(*(param_1 + 4));\n                    if (iVar4 == 0) {\n                        pcVar8 = L\"System Error: DeleteDC failed\";\n                        uVar7 = 0x32;\n                        uVar6 = 0x39776a63;\n                        goto code_r0x00404dac;\n                    }\n                    *(param_1 + 4) = 0;\n                }\n                iVar4 = (*_sym.imp.GDI32.dll_CreateDCW)(L\"DISPLAY\", &var_48h, 0, 0);\n                *(param_1 + 4) = iVar4;\n                if (iVar4 == 0) {\n                    pcVar8 = L\"System Error: CreateDC failed\";\n                    uVar7 = 10;\n                    uVar6 = 0x39776a64;\n                    goto code_r0x00404dac;\n                }\n                cVar2 = fcn.00404f9f();\n                if (cVar2 == '\\0') goto code_r0x00404f8e;\n            }\n            iVar4 = (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x66, 0, param_1 + 0x24cc, 0);\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            if (iVar4 == 0) {\n                pcVar8 = L\"System Error: SystemParametersInfo failed\";\n                uVar7 = 0x32;\n                uVar6 = 0x396c676c;\n            }\n            else {\n                iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xb);\n                *(param_1 + 0x24ac) = iVar4;\n                if (iVar4 == 0) {\n                    pcVar8 = L\"System Error: GetSystemMetrics failed\";\n                    uVar7 = 0x32;\n                    uVar6 = 0x396c676d;\n                }\n                else {\n                    iVar4 = (*pcVar1)(0xc);\n                    *(param_1 + 0x24b0) = iVar4;\n                    if (iVar4 == 0) {\n                        pcVar8 = L\"System Error: GetSystemMetrics failed\";\n                        uVar7 = 0x32;\n                        uVar6 = 0x396c676e;\n                    }\n                    else {\n                        iVar4 = (*pcVar1)(0x31);\n                        *(param_1 + 0x24b4) = iVar4;\n                        if (iVar4 == 0) {\n                            pcVar8 = L\"System Error: GetSystemMetrics failed\";\n                            uVar7 = 0x32;\n                            uVar6 = 0x396c676f;\n                        }\n                        else {\n                            iVar4 = (*pcVar1)(0x32);\n                            *(param_1 + 0x24b8) = iVar4;\n                            if (iVar4 != 0) goto code_r0x00404f8e;\n                            pcVar8 = L\"System Error: GetSystemMetrics failed\";\n                            uVar7 = 0x32;\n                            uVar6 = 0x396c6770;\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00404dac:\n    (*_sym.imp.Mso20Win32Client.dll_Ordinal_1121)(uVar6, 0x4b8, uVar7, pcVar8);\ncode_r0x00404f8e:\n    fcn.00409d37(unaff_ESI);\n    return;\n}\n",
        "token_count": 1651
    },
    "00404fdd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404fdd(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x2510) != '\\0') {\n        uVar1 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(*(param_1 + 4), 0x58);\n        *(param_1 + 0x24e4) = uVar1;\n        uVar1 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(*(param_1 + 4), 0x5a);\n        *(param_1 + 0x24e8) = uVar1;\n        if (*(param_1 + 0x24e4) == 0) {\n            (*_sym.imp.Mso20Win32Client.dll_Ordinal_1121)\n                      (0x39776a65, 0x4b8, 0x32, L\"System Error: GetDeviceCaps failed\");\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 224
    },
    "00405036": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405036(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x2510) != '\\0') {\n        uVar1 = (*_sym.imp.USER32.dll_GetSysColor)(0x17);\n        *(param_1 + 0x24d4) = uVar1;\n        uVar1 = (*_sym.imp.USER32.dll_GetSysColor)(0x18);\n        *(param_1 + 0x24d8) = uVar1;\n    }\n    return 1;\n}\n",
        "token_count": 127
    },
    "00405251": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405251(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0040b1e8(8);\n    if (*(extraout_ECX + 0x2512) != '\\0') {\n        uVar1 = 0x100;\n        if (*(extraout_ECX + 0x24a8) == 0x100) {\n            uVar1 = 0x200;\n        }\n        *(unaff_EBP + -4) = 0;\n        *(extraout_ECX + 0x24a8) = uVar1;\n        fcn.0040619e();\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004052b7(*(unaff_EBP + 8));\n    }\n    fcn.0040b15f();\n    return;\n}\n",
        "token_count": 231
    },
    "0040627b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040627b(void)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t *piVar5;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    fcn.0040b17f(0x10);\n    puVar1 = *extraout_ECX;\n    piVar5 = NULL;\n    *(unaff_EBP + -0x18) = 0;\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 0x40d4d8, unaff_EBP + -0x18);\n        piVar5 = *(unaff_EBP + -0x18);\n    }\n    *(unaff_EBP + -0x1c) = piVar5;\n    *(unaff_EBP + -4) = 0;\n    if (piVar5 != NULL) {\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + -4) = 1;\n        (**(*piVar5 + 0x88))(unaff_EBP + -0xd, unaff_EBP + -0x14);\n        *(unaff_EBP + -0xe) = *(unaff_EBP + -0xd) == '\\x03';\n        if ((*(unaff_EBP + -0xd) == '\\x05') && (*(unaff_EBP + -0x14) != 0)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        if ((bVar3) && (cVar4 = fcn.00401c73(),  cVar4 == '\\0')) {\n            fcn.004019ea(*0x40d5c8);\n        }\n        if (*(unaff_EBP + -0xe) == '\\0') {\n            fcn.00401d82();\n        }\n        (**(*piVar5 + 700))();\n        *(unaff_EBP + -4) = 0;\n        piVar2 = *(unaff_EBP + -0x14);\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 8))(piVar2);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 8))(piVar5);\n    }\n    fcn.0040b15f();\n    return;\n}\n",
        "token_count": 626
    },
    "00406610": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406610(uint *param_1)\n\n{\n    if (param_1[2] < 2) {\n        (****param_1)(*param_1, param_1, 2, 0);\n    }\n    *param_1[1] = 0;\n    return;\n}\n",
        "token_count": 70
    },
    "00406664": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.00406664(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *param_1;\n    if (*(piVar2 + 0xd) == '\\0') {\n        piVar1 = piVar2[2];\n        if (*(piVar2[2] + 0xd) == '\\0') {\n            do {\n                piVar2 = piVar1;\n                piVar1 = *piVar2;\n            } while (*(piVar1 + 0xd) == '\\0');\n            *param_1 = piVar2;\n        }\n        else {\n            while ((piVar2 = piVar2[1],  *(piVar2 + 0xd) == '\\0' && (*param_1 == piVar2[2]))) {\n                *param_1 = piVar2;\n            }\n            *param_1 = piVar2;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 223
    },
    "0040669e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040674c)\n// WARNING: Removing unreachable block (ram,0x0040675c)\n// WARNING: Removing unreachable block (ram,0x00406765)\n// WARNING: Removing unreachable block (ram,0x00406768)\n// WARNING: Removing unreachable block (ram,0x00406758)\n// WARNING: Removing unreachable block (ram,0x00406776)\n// WARNING: Removing unreachable block (ram,0x00406785)\n// WARNING: Removing unreachable block (ram,0x00406790)\n// WARNING: Removing unreachable block (ram,0x0040678c)\n// WARNING: Removing unreachable block (ram,0x00406780)\n// WARNING: Removing unreachable block (ram,0x00406793)\n\nvoid __cdecl fcn.0040669e(int32_t **arg_8h, int32_t *arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *in_ECX;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    uint var_4h;\n    \n    fcn.00406664();\n    ppiVar4 = *arg_ch;\n    if (*(ppiVar4 + 0xd) == '\\0') {\n        if (*(arg_ch[2] + 0xd) == '\\0') {\n            ppiVar4 = arg_ch[2];\n        }\n    }\n    else {\n        ppiVar4 = arg_ch[2];\n    }\n    ppiVar3 = arg_ch[1];\n    if (*(ppiVar4 + 0xd) == '\\0') {\n        ppiVar4[1] = ppiVar3;\n    }\n    if (*(*in_ECX + 4) == arg_ch) {\n        *(*in_ECX + 4) = ppiVar4;\n    }\n    else if (*ppiVar3 == arg_ch) {\n        *ppiVar3 = ppiVar4;\n    }\n    else {\n        ppiVar3[2] = ppiVar4;\n    }\n    if (**in_ECX == arg_ch) {\n        ppiVar1 = ppiVar3;\n        if (*(ppiVar4 + 0xd) == '\\0') {\n            ppiVar1 = ppiVar4;\n            for (ppiVar2 = *ppiVar4; *(ppiVar2 + 0xd) == '\\0'; ppiVar2 = *ppiVar2) {\n                ppiVar1 = ppiVar2;\n            }\n        }\n        **in_ECX = ppiVar1;\n    }\n    if (*(*in_ECX + 8) == arg_ch) {\n        ppiVar1 = ppiVar3;\n        if (*(ppiVar4 + 0xd) == '\\0') {\n            ppiVar1 = ppiVar4;\n            for (ppiVar2 = ppiVar4[2]; *(ppiVar2 + 0xd) == '\\0'; ppiVar2 = ppiVar2[2]) {\n                ppiVar1 = ppiVar2;\n            }\n        }\n        *(*in_ECX + 8) = ppiVar1;\n    }\n    if (*(arg_ch + 3) != '\\x01') {\ncode_r0x004068bd:\n        fcn.004012e7(0x24);\n        if (in_ECX[1] != 0) {\n            in_ECX[1] = in_ECX[1] + -1;\n        }\n        *arg_8h = arg_ch;\n        return;\n    }\ncode_r0x00406876:\n    ppiVar1 = ppiVar3;\n    if ((ppiVar4 == *(*in_ECX + 4)) || (*(ppiVar4 + 3) != '\\x01')) goto code_r0x004068b9;\n    ppiVar3 = *ppiVar1;\n    if (ppiVar4 == ppiVar3) {\n        ppiVar3 = ppiVar1[2];\n        if (*(ppiVar3 + 3) == '\\0') {\n            *(ppiVar3 + 3) = 1;\n            *(ppiVar1 + 3) = 0;\n            fcn.00406949(ppiVar1);\n            ppiVar3 = ppiVar1[2];\n        }\n        if (*(ppiVar3 + 0xd) == '\\0') {\n            if ((*(*ppiVar3 + 3) != '\\x01') || (*(ppiVar3[2] + 3) != '\\x01')) {\n                if (*(ppiVar3[2] + 3) == '\\x01') {\n                    *(*ppiVar3 + 3) = 1;\n                    *(ppiVar3 + 3) = 0;\n                    fcn.00406903(ppiVar3);\n                    ppiVar3 = ppiVar1[2];\n                }\n                *(ppiVar3 + 3) = *(ppiVar1 + 3);\n                *(ppiVar1 + 3) = 1;\n                *(ppiVar3[2] + 3) = 1;\n                fcn.00406949(ppiVar1);\n                goto code_r0x004068b9;\n            }\ncode_r0x0040686d:\n            *(ppiVar3 + 3) = 0;\n        }\n    }\n    else {\n        if (*(ppiVar3 + 3) == '\\0') {\n            *(ppiVar3 + 3) = 1;\n            *(ppiVar1 + 3) = 0;\n            fcn.00406903(ppiVar1);\n            ppiVar3 = *ppiVar1;\n        }\n        if (*(ppiVar3 + 0xd) == '\\0') {\n            if ((*(ppiVar3[2] + 3) == '\\x01') && (*(*ppiVar3 + 3) == '\\x01')) goto code_r0x0040686d;\n            if (*(*ppiVar3 + 3) == '\\x01') {\n                *(ppiVar3[2] + 3) = 1;\n                *(ppiVar3 + 3) = 0;\n                fcn.00406949(ppiVar3);\n                ppiVar3 = *ppiVar1;\n            }\n            *(ppiVar3 + 3) = *(ppiVar1 + 3);\n            *(ppiVar1 + 3) = 1;\n            *(*ppiVar3 + 3) = 1;\n            fcn.00406903(ppiVar1);\ncode_r0x004068b9:\n            *(ppiVar4 + 3) = 1;\n            goto code_r0x004068bd;\n        }\n    }\n    ppiVar3 = ppiVar1[1];\n    ppiVar4 = ppiVar1;\n    goto code_r0x00406876;\n}\n",
        "token_count": 1480
    },
    "00406903": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406903(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    \n    iVar1 = *arg_8h;\n    *arg_8h = *(iVar1 + 8);\n    if (*(*(iVar1 + 8) + 0xd) == '\\0') {\n        *(*(iVar1 + 8) + 4) = arg_8h;\n    }\n    *(iVar1 + 4) = arg_8h[1];\n    if (arg_8h == *(*in_ECX + 4)) {\n        *(*in_ECX + 4) = iVar1;\n    }\n    else {\n        piVar2 = arg_8h[1];\n        if (arg_8h == piVar2[2]) {\n            piVar2[2] = iVar1;\n        }\n        else {\n            *piVar2 = iVar1;\n        }\n    }\n    *(iVar1 + 8) = arg_8h;\n    arg_8h[1] = iVar1;\n    return;\n}\n",
        "token_count": 248
    },
    "00406949": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406949(int32_t *arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    int32_t *in_ECX;\n    \n    ppiVar1 = arg_8h[2];\n    arg_8h[2] = *ppiVar1;\n    if (*(*ppiVar1 + 0xd) == '\\0') {\n        *(*ppiVar1 + 4) = arg_8h;\n    }\n    ppiVar1[1] = arg_8h[1];\n    if (arg_8h == *(*in_ECX + 4)) {\n        *(*in_ECX + 4) = ppiVar1;\n    }\n    else {\n        ppiVar2 = arg_8h[1];\n        if (arg_8h == *ppiVar2) {\n            *ppiVar2 = ppiVar1;\n        }\n        else {\n            ppiVar2[2] = ppiVar1;\n        }\n    }\n    *ppiVar1 = arg_8h;\n    arg_8h[1] = ppiVar1;\n    return;\n}\n",
        "token_count": 252
    },
    "0040698d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040698d(int32_t *arg_8h)\n\n{\n    char cVar1;\n    \n    cVar1 = *(arg_8h + 0xd);\n    while (cVar1 == '\\0') {\n        fcn.0040698d(arg_8h[2]);\n        arg_8h = *arg_8h;\n        fcn.004012e7(0x24);\n        cVar1 = *(arg_8h + 0xd);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00406a9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a9c(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t *in_ECX;\n    uint *puVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *var_4h;\n    \n    puVar3 = *in_ECX;\n    puVar4 = puVar3[1];\n    puVar1 = puVar4;\n    var_4h = puVar3;\n    while (puVar5 = puVar1,  *(puVar5 + 0xd) == '\\0') {\n        cVar2 = fcn.00406bc2(puVar5 + 4, arg_ch);\n        if (cVar2 == '\\0') {\n            if (*(puVar3 + 0xd) != '\\0') {\n                cVar2 = fcn.00406bc2(arg_ch, puVar5 + 4);\n                if (cVar2 != '\\0') {\n                    puVar3 = puVar5;\n                }\n            }\n            puVar1 = *puVar5;\n            var_4h = puVar5;\n        }\n        else {\n            puVar1 = puVar5[2];\n        }\n    }\n    if (*(puVar3 + 0xd) == '\\0') {\n        puVar4 = *puVar3;\n    }\n    while (*(puVar4 + 0xd) == '\\0') {\n        cVar2 = fcn.00406bc2(arg_ch, puVar4 + 4);\n        if (cVar2 == '\\0') {\n            puVar4 = puVar4[2];\n        }\n        else {\n            puVar3 = puVar4;\n            puVar4 = *puVar4;\n        }\n    }\n    arg_8h[1] = puVar3;\n    *arg_8h = var_4h;\n    return;\n}\n",
        "token_count": 425
    },
    "00406ce2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406ce2(uint *arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *arg_ch_00;\n    uint arg_ch_01;\n    char cVar2;\n    int32_t arg_14h;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_01 = arg_ch;\n    puVar1 = *in_ECX;\n    cVar2 = *(puVar1[1] + 0xd);\n    arg_ch_00 = puVar1;\n    puVar3 = puVar1[1];\n    while (cVar2 == '\\0') {\n        cVar2 = fcn.00406bc2(puVar3 + 4, arg_ch_01);\n        if (cVar2 == '\\0') {\n            puVar4 = *puVar3;\n        }\n        else {\n            puVar4 = puVar3[2];\n            puVar3 = arg_ch_00;\n        }\n        arg_ch_00 = puVar3;\n        puVar3 = puVar4;\n        in_ECX = extraout_ECX;\n        cVar2 = *(puVar4 + 0xd);\n    }\n    if ((arg_ch_00 == puVar1) ||\n       (cVar2 = fcn.00406bc2(arg_ch, arg_ch_00 + 4),  in_ECX = extraout_ECX_00,  cVar2 != '\\0')) {\n        arg_14h = fcn.00406d7c(in_ECX, &arg_ch);\n        fcn.00406da1(&arg_ch, arg_ch_00, arg_14h + 0x10, arg_14h);\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = 1;\n    }\n    else {\n        *arg_8h = arg_ch_00;\n        *(arg_8h + 1) = 0;\n    }\n    return;\n}\n",
        "token_count": 480
    },
    "00406da1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00406da1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    uint *puVar6;\n    int32_t **extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *extraout_ECX_03;\n    int32_t *extraout_ECX_04;\n    int32_t unaff_EBP;\n    uint in_stack_ffffffdc;\n    int32_t *var_1ch;\n    int32_t in_stack_ffffffe4;\n    int32_t *var_14h;\n    uint var_4h;\n    \n    fcn.0040b1e8(0x10);\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[1] == NULL) {\ncode_r0x00406dc3:\n        in_stack_ffffffdc = 1;\n    }\n    else {\n        piVar1 = *extraout_ECX;\n        piVar2 = *(unaff_EBP + 0xc);\n        if (piVar2 == *piVar1) {\n            cVar3 = fcn.00406bc2(*(unaff_EBP + 0x10), piVar2 + 4);\n            piVar4 = extraout_ECX_00;\n            var_14h = piVar2;\n            if (cVar3 != '\\0') goto code_r0x00406dc3;\n            goto code_r0x00406ec6;\n        }\n        if (piVar2 == piVar1) {\n            var_14h = piVar1[2];\n            cVar3 = fcn.00406bc2(var_14h + 4, *(unaff_EBP + 0x10));\n            piVar4 = extraout_ECX_01;\n            if (cVar3 == '\\0') goto code_r0x00406ec6;\n            in_stack_ffffffe4 = 0;\n            goto code_r0x00406dc7;\n        }\n        cVar3 = fcn.00406bc2(*(unaff_EBP + 0x10), piVar2 + 4);\n        if (cVar3 == '\\0') {\ncode_r0x00406e6e:\n            var_14h = piVar2 + 4;\n            cVar3 = fcn.00406bc2(var_14h, *(unaff_EBP + 0x10));\n            piVar4 = extraout_ECX_02;\n            if (cVar3 == '\\0') {\ncode_r0x00406ec6:\n                *(unaff_EBP + -4) = 0xffffffff;\n                puVar6 = fcn.0040707e(unaff_EBP + -0x1c, piVar4, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n                **(unaff_EBP + 8) = *puVar6;\n                goto code_r0x00406ee3;\n            }\n            *(unaff_EBP + -0x14) = piVar2;\n            ppiVar5 = fcn.00406664();\n            var_1ch = *(unaff_EBP + -0x14);\n            piVar4 = extraout_ECX_03;\n            if (*ppiVar5 != piVar1) {\n                var_14h = *(unaff_EBP + 0x10);\n                cVar3 = fcn.00406bc2(var_14h, var_1ch + 4);\n                piVar4 = extraout_ECX_04;\n                if (cVar3 == '\\0') goto code_r0x00406ec6;\n            }\n            in_stack_ffffffe4 = *(unaff_EBP + 0x14);\n            cVar3 = *(piVar2[2] + 0xd);\n        }\n        else {\n            *(unaff_EBP + -0x14) = piVar2;\n            piVar4 = fcn.00406eeb();\n            cVar3 = fcn.00406bc2(*piVar4 + 0x10, *(unaff_EBP + 0x10));\n            if (cVar3 == '\\0') goto code_r0x00406e6e;\n            piVar4 = *(unaff_EBP + -0x14);\n            var_14h = *(unaff_EBP + 0x14);\n            in_stack_ffffffe4 = piVar4[2];\n            cVar3 = *(in_stack_ffffffe4 + 0xd);\n            var_1ch = piVar2;\n        }\n        if (cVar3 == '\\0') {\n            in_stack_ffffffdc = 1;\n        }\n        else {\n            in_stack_ffffffdc = 0;\n            var_1ch = piVar4;\n        }\n    }\ncode_r0x00406dc7:\n    fcn.00406f62(*(unaff_EBP + 8), in_stack_ffffffdc, var_1ch, in_stack_ffffffe4, var_14h);\ncode_r0x00406ee3:\n    fcn.0040b15f();\n    return;\n}\n",
        "token_count": 1263
    },
    "00406eeb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.00406eeb(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    ppiVar3 = *param_1;\n    if (*(ppiVar3 + 0xd) == '\\0') {\n        piVar1 = *ppiVar3;\n        if (*(*ppiVar3 + 0xd) != '\\0') {\n            while ((ppiVar3 = ppiVar3[1],  *(ppiVar3 + 0xd) == '\\0' && (*param_1 == *ppiVar3))) {\n                *param_1 = ppiVar3;\n            }\n            if (*(*param_1 + 0xd) != '\\0') {\n                return param_1;\n            }\n            *param_1 = ppiVar3;\n            return param_1;\n        }\n        do {\n            piVar2 = piVar1;\n            piVar1 = piVar2[2];\n        } while (*(piVar2[2] + 0xd) == '\\0');\n    }\n    else {\n        piVar2 = ppiVar3[2];\n    }\n    *param_1 = piVar2;\n    return param_1;\n}\n",
        "token_count": 280
    },
    "00406f62": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406f62(int32_t **arg_8h, uint arg_ch, int32_t **arg_10h, uint noname_3, int32_t *arg_18h)\n\n{\n    char cVar1;\n    int32_t *arg_8h_00;\n    int32_t *piVar2;\n    int32_t **in_ECX;\n    int32_t **extraout_ECX;\n    int32_t **extraout_ECX_00;\n    int32_t **extraout_ECX_01;\n    int32_t *piVar3;\n    \n    piVar2 = in_ECX[1];\n    if (0x71c71c5 < piVar2) {\n        fcn.00406f4e(arg_18h);\n        piVar2 = (*_sym.imp.MSVCP140.dll_void___cdecl_std::_Xlength_error_char_const__)(\"map/set<T> too long\");\n        in_ECX = extraout_ECX;\n    }\n    in_ECX[1] = piVar2 + 1;\n    arg_18h[1] = arg_10h;\n    if (arg_10h == *in_ECX) {\n        (*in_ECX)[1] = arg_18h;\n        **in_ECX = arg_18h;\n        (*in_ECX)[2] = arg_18h;\n    }\n    else if (arg_ch == '\\0') {\n        arg_10h[2] = arg_18h;\n        if (arg_10h == (*in_ECX)[2]) {\n            (*in_ECX)[2] = arg_18h;\n        }\n    }\n    else {\n        *arg_10h = arg_18h;\n        if (arg_10h == **in_ECX) {\n            **in_ECX = arg_18h;\n        }\n    }\n    cVar1 = *(arg_18h[1] + 0xc);\n    piVar2 = arg_18h;\n    do {\n        if (cVar1 != '\\0') {\n            *((*in_ECX)[1] + 0xc) = 1;\n            *arg_8h = arg_18h;\n            return;\n        }\n        arg_8h_00 = piVar2[1];\n        piVar3 = *arg_8h_00[1];\n        if (arg_8h_00 == piVar3) {\n            piVar3 = arg_8h_00[1][2];\n            if (*(piVar3 + 3) == '\\0') {\ncode_r0x0040701a:\n                *(arg_8h_00 + 3) = 1;\n                *(piVar3 + 3) = 1;\n                *(*(piVar2[1] + 4) + 0xc) = 0;\n                piVar2 = *(piVar2[1] + 4);\n            }\n            else {\n                if (piVar2 == arg_8h_00[2]) {\n                    fcn.00406949(arg_8h_00);\n                    piVar2 = arg_8h_00;\n                }\n                *(piVar2[1] + 0xc) = 1;\n                *(*(piVar2[1] + 4) + 0xc) = 0;\n                fcn.00406903(*(piVar2[1] + 4));\n                in_ECX = extraout_ECX_00;\n            }\n        }\n        else {\n            if (*(piVar3 + 3) == '\\0') goto code_r0x0040701a;\n            if (piVar2 == *arg_8h_00) {\n                fcn.00406903(arg_8h_00);\n                piVar2 = arg_8h_00;\n            }\n            *(piVar2[1] + 0xc) = 1;\n            *(*(piVar2[1] + 4) + 0xc) = 0;\n            fcn.00406949(*(piVar2[1] + 4));\n            in_ECX = extraout_ECX_01;\n        }\n        cVar1 = *(piVar2[1] + 0xc);\n    } while( true );\n}\n",
        "token_count": 919
    },
    "0040707e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040707e(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t **extraout_ECX;\n    int32_t **ppiVar4;\n    int32_t unaff_EBP;\n    int32_t **ppiVar5;\n    int32_t **ppiVar6;\n    uint unaff_retaddr;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    uint arg_8h_00;\n    \n    arg_8h_00 = 0xc;\n    fcn.0040b1e8();\n    *(unaff_EBP + -4) = 0;\n    cVar2 = '\\x01';\n    ppiVar4 = *extraout_ECX;\n    *(unaff_EBP + -0x18) = 1;\n    ppiVar5 = ppiVar4[1];\n    ppiVar6 = ppiVar4;\n    if (*(ppiVar4[1] + 0xd) == '\\0') {\n        do {\n            ppiVar6 = ppiVar5;\n            arg_8h_00 = *(unaff_EBP + 0x10);\n            cVar2 = fcn.00406bc2(arg_8h_00, ppiVar6 + 4);\n            *(unaff_EBP + -0x18) = cVar2;\n            if (cVar2 == '\\0') {\n                ppiVar5 = ppiVar6[2];\n            }\n            else {\n                ppiVar5 = *ppiVar6;\n            }\n        } while (*(ppiVar5 + 0xd) == '\\0');\n        ppiVar4 = *extraout_ECX;\n    }\n    *(unaff_EBP + -0x14) = ppiVar6;\n    if (cVar2 == '\\0') {\ncode_r0x004070fd:\n        var_4h = *(unaff_EBP + 0x10);\n        ppiVar4 = ppiVar6 + 4;\n        cVar2 = fcn.00406bc2(ppiVar4, var_4h);\n        if (cVar2 == '\\0') {\n            fcn.004012e7(0x24);\n            ppiVar4 = *(unaff_EBP + 8);\n            *ppiVar4 = ppiVar6;\n            *(ppiVar4 + 1) = 0;\n            goto code_r0x0040713e;\n        }\n    }\n    else {\n        if (ppiVar6 != *ppiVar4) {\n            fcn.00406eeb();\n            ppiVar6 = *(unaff_EBP + -0x14);\n            goto code_r0x004070fd;\n        }\n        var_4h = *(unaff_EBP + 0x14);\n    }\n    puVar3 = fcn.00406f62(unaff_EBP + 0x10, ppiVar4, var_4h, arg_8h_00, unaff_retaddr);\n    puVar1 = *(unaff_EBP + 8);\n    *puVar1 = *puVar3;\n    *(puVar1 + 1) = 1;\ncode_r0x0040713e:\n    fcn.0040b15f();\n    return;\n}\n",
        "token_count": 767
    },
    "00407449": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00407449(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint endptr;\n    uint pulNumLanguages;\n    uint32_t pcchLanguagesBuffer;\n    \n    pcchLanguagesBuffer = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetUserPreferredUILanguages)(4, &pulNumLanguages, 0, &pcchLanguagesBuffer);\n    if (((iVar1 != 0) && (pcchLanguagesBuffer != 0)) &&\n       (iVar1 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_951)\n                          (-(pcchLanguagesBuffer * 2 >> 0x20 != 0) | pcchLanguagesBuffer * 2, 4),  iVar1 != 0)) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetUserPreferredUILanguages)(4, &pulNumLanguages, iVar1, &pcchLanguagesBuffer);\n        if ((iVar2 == 0) || (pcchLanguagesBuffer == 0)) {\n            (*_sym.imp.Mso20Win32Client.dll_Ordinal_456)(iVar1);\n        }\n        else {\n            uVar3 = (*_sym.imp.api_ms_win_crt_convert_l1_1_0.dll_wcstoul)(iVar1, &endptr, 0x10);\n            if ((uVar3 != 0) && (uVar3 < 0x10000)) goto code_r0x004074d6;\n        }\n    }\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetUserDefaultUILanguage)();\ncode_r0x004074d6:\n    uVar4 = uVar3 & 0xffff;\n    if (((uVar4 == 0) || ((uVar3 & 0x3ff) == 0)) || ((uVar4 & 0x3ff) == 0x7f)) {\n        uVar4 = 0x409;\n    }\n    return uVar4;\n}\n",
        "token_count": 448
    },
    "00407502": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407502(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint arg_8h;\n    uint var_34h;\n    uint identifier;\n    uint var_2ch;\n    uint var_28h;\n    uint iconLocation;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    iVar1 = fcn.0040785e();\n    iVar2 = fcn.00407898();\n    puVar5 = &var_2ch;\n    for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    var_2ch = *(param_1 + 0x1b18);\n    identifier = 0x1c;\n    var_28h = 4;\n    iVar3 = (*_sym.imp.SHELL32.dll_Shell_NotifyIconGetRect)(&identifier, &iconLocation);\n    if (-1 < iVar3) {\n        *(param_1 + 0x1b00) = iconLocation;\n        *(param_1 + 0x1b04) = var_10h;\n    }\n    iVar3 = *(param_1 + 0x1b08);\n    iVar4 = *(iVar3 + 0x40);\n    if (iVar4 == 0) {\n        iVar4 = *(param_1 + 0x1b00);\ncode_r0x00407644:\n        iVar1 = *(param_1 + 0x1b04) - iVar2;\n        if (iVar1 < *(iVar3 + 0x14)) {\n            iVar1 = *(iVar3 + 0x14);\n        }\n    }\n    else {\n        if (iVar4 == 1) {\n            if (*(param_1 + 0x1b13) == '\\0') {\n                iVar4 = *(param_1 + 0x1b00);\n                if (*(iVar3 + 0x18) < iVar4 + iVar1) {\n                    iVar4 = *(iVar3 + 0x18) - iVar1;\n                }\n            }\n            else {\n                iVar4 = *(param_1 + 0x1b00) - iVar1;\n                if (iVar4 < *(iVar3 + 0x10)) {\n                    iVar4 = *(iVar3 + 0x10);\n                }\n            }\n            iVar1 = *(param_1 + 0x1b04);\n            if (iVar1 <= *(iVar3 + 0x1c)) {\n                iVar1 = *(iVar3 + 0x1c);\n                goto code_r0x00407654;\n            }\n        }\n        else {\n            if (iVar4 == 2) {\n                iVar4 = *(iVar3 + 0x10);\n                if (*(param_1 + 0x1b00) != iVar4 && iVar4 <= *(param_1 + 0x1b00)) {\n                    iVar4 = *(iVar3 + 0x18);\n                }\n                iVar4 = iVar4 - iVar1;\n                goto code_r0x00407644;\n            }\n            if (iVar4 != 3) {\n                (*_sym.imp.Mso20Win32Client.dll_Ordinal_1360)(0x396c677a);\n            }\n            iVar3 = *(param_1 + 0x1b08);\n            if (*(param_1 + 0x1b13) == '\\0') {\n                iVar4 = *(param_1 + 0x1b00);\n                if (*(iVar3 + 0x18) < iVar4 + iVar1) {\n                    iVar4 = *(iVar3 + 0x18) - iVar1;\n                }\n            }\n            else {\n                iVar4 = *(param_1 + 0x1b00) - iVar1;\n                if (iVar4 < *(iVar3 + 0x10)) {\n                    iVar4 = *(iVar3 + 0x10);\n                }\n            }\n            iVar1 = *(param_1 + 0x1b04);\n            if (*(iVar3 + 0x14) <= iVar1) {\n                iVar1 = *(iVar3 + 0x14);\n            }\n        }\n        iVar1 = iVar1 - iVar2;\n    }\ncode_r0x00407654:\n    (*_sym.imp.USER32.dll_SetWindowPos)(*(param_1 + 0x15e8), 0xffffffff, iVar4, iVar1, 0, 0, 0x51);\n    arg_8h = 0;\n    (*_sym.imp.USER32.dll_SetTimer)(*(param_1 + 0x15e8), 0x90, 10000);\n    fcn.00409d37(arg_8h);\n    return;\n}\n",
        "token_count": 1093
    },
    "004076df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004076df(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint piconinfo;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_1 + 0x1b10) != '\\0') {\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n        *(param_1 + 0x1b10) = 0;\n    }\n    if (*(param_1 + 0x1a84) != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*(param_1 + 0x1a84));\n        *(param_1 + 0x1a84) = 0;\n    }\n    if (*(param_1 + 0x1a88) != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*(param_1 + 0x1a88));\n        *(param_1 + 0x1a88) = 0;\n    }\n    piVar1 = param_1 + 0x1aa8;\n    var_4h = 7;\n    do {\n        if (*piVar1 != 0) {\n            piconinfo = 0;\n            uStack24 = 0;\n            uStack20 = 0;\n            var_ch = 0;\n            var_8h = 0;\n            (*_sym.imp.USER32.dll_GetIconInfo)(*piVar1, &piconinfo);\n            if (var_8h != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(var_8h);\n            }\n            if (var_ch != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(var_ch);\n            }\n            (*_sym.imp.USER32.dll_DestroyIcon)(*piVar1);\n        }\n        piVar1 = piVar1 + 1;\n        var_4h = var_4h + -1;\n    } while (var_4h != 0);\n    if (*(param_1 + 0x1afc) != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(*(param_1 + 0x1afc));\n    }\n    return;\n}\n",
        "token_count": 505
    },
    "004077cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004077cd(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint arg_ch;\n    \n    arg_ch = 0x80000000;\n    if (*(*(in_ECX + 0x1b08) + 0x24) == 0) {\n        arg_ch = 0x80800000;\n    }\n    iVar1 = fcn.00401779(L\"Microsoft Office Sync Process Tooltip\", arg_ch, 0x80000000, 0x80000000, 0x80000000, \n                         0x80000000, 0, 0, arg_8h);\n    *(in_ECX + 0x15e8) = iVar1;\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_SetWindowLongW)(iVar1, 0xffffffeb);\n        fcn.00407fc1();\n        *(in_ECX + 0x1b11) = 1;\n        fcn.004084c2();\n        fcn.00407502();\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 252
    },
    "004079f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004079f4(int32_t arg_8h, int32_t arg_ch, uint hWnd)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    bool bVar3;\n    bool bVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint32_t arg_8h_00;\n    int32_t iVar9;\n    int32_t in_ECX;\n    uint *puVar10;\n    uint unaff_EBX;\n    uint *puVar11;\n    uint var_668h;\n    uint var_664h;\n    uint var_660h;\n    int32_t var_65ch;\n    uint var_658h;\n    uint var_654h;\n    int32_t s;\n    uint lprc;\n    uint var_648h;\n    int32_t var_644h;\n    uint var_640h;\n    uint var_63ch;\n    uint var_42ch;\n    uint lpchText;\n    uint32_t var_8h;\n    \n    var_8h = *0x4101e0 ^ &stack0xfffffffc;\n    iVar5 = (*_sym.imp.USER32.dll_GetDC)(hWnd);\n    if (iVar5 != 0) {\n        var_65ch = 0;\n        if (*(in_ECX + 0x1afc) != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x30, *(in_ECX + 0x1afc), 0);\n            var_65ch = (*_sym.imp.GDI32.dll_SelectObject)(iVar5, *(in_ECX + 0x1afc));\n        }\n        fcn.004010e6(0x108);\n        lprc = 0;\n        var_640h = 1000;\n        var_644h = (arg_ch * 0x48) / *(*(in_ECX + 0x1b08) + 0x38) + -3;\n        var_648h = 0;\n        iVar6 = *(in_ECX + 0x1b0c);\n        if ((iVar6 == 1) || (bVar3 = false,  iVar6 == 4)) {\n            bVar3 = true;\n        }\n        bVar4 = false;\n        if (bVar3) {\n            iVar6 = (*_sym.imp.USER32.dll_DrawTextExW)(iVar5, &lpchText, 0xffffffff, &lprc, 0x18420, 0);\n            if (iVar6 != 0) {\n                puVar11 = &lpchText;\n                do {\n                    iVar1 = *puVar11;\n                    puVar11 = puVar11 + 2;\n                } while (iVar1 != 0);\n                uVar7 = fcn.00401833(4);\n                (*_sym.imp.Mso30Win32Client.dll_Ordinal_1326)(&lpchText, puVar11 - (&lpchText + 2) >> 1, arg_8h, uVar7);\n            }\n        }\n        else {\n            lpchText._0_2_ = 0;\n            s = arg_8h;\n            while( true ) {\n                if (((bVar4) && (iVar6 != 3)) || (s == 0)) goto code_r0x00407ce8;\n                var_644h = (arg_ch * 0x48) / *(*(in_ECX + 0x1b08) + 0x3c) + -3;\n                var_640h = 1000;\n                var_648h = 0;\n                lprc = 0;\n                iVar8 = (*_sym.imp.VCRUNTIME140.dll_wcschr)(s, 0x20);\n                if (iVar8 == 0) {\n                    arg_8h_00 = 0x108;\n                }\n                else {\n                    arg_8h_00 = (iVar8 - s >> 1) + 1;\n                    if (0x108 < arg_8h_00) {\n                        arg_8h_00 = 0x108;\n                    }\n                    if (0x7fffffff < arg_8h_00) {\n                        sub.api_ms_win_crt_runtime_l1_1_0.dll__invalid_parameter_noinfo_noreturn();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                if (arg_8h_00 < 0x109) {\n                    fcn.004010e6(arg_8h_00);\n                }\n                fcn.004010e6(0x104);\n                iVar9 = (*_sym.imp.USER32.dll_DrawTextExW)(iVar5, &var_42ch, 0xffffffff, &lprc, 0x18420, 0);\n                if (iVar9 == 0) break;\n                if (bVar4) {\ncode_r0x00407c83:\n                    bVar4 = true;\n                }\n                else {\n                    puVar11 = &var_42ch;\n                    do {\n                        iVar1 = *puVar11;\n                        puVar11 = puVar11 + 2;\n                    } while (iVar1 != 0);\n                    puVar10 = &var_63ch;\n                    do {\n                        iVar1 = *puVar10;\n                        puVar10 = puVar10 + 2;\n                    } while (iVar1 != 0);\n                    iVar9 = (*_sym.imp.Mso30Win32Client.dll_Ordinal_1326)\n                                      (&var_63ch, puVar10 - (&var_63ch + 2) >> 1, &var_42ch, \n                                       puVar11 - (&var_42ch + 2) >> 1, 4);\n                    if (iVar9 != 0) goto code_r0x00407c83;\n                    bVar4 = false;\n                }\n                (*_sym.imp.Mso20Win32Client.dll_Ordinal_502)(&var_42ch, &lpchText, 0x108);\n                s = iVar8;\n                if (iVar8 != 0) {\n                    if ((!bVar4) || (iVar6 == 3)) {\n                        (*_sym.imp.Mso20Win32Client.dll_Ordinal_502)(0x40d648, &lpchText, 0x108);\n                    }\n                    s = iVar8 + 2;\n                }\n            }\n            bVar4 = false;\ncode_r0x00407ce8:\n            if (bVar4) {\n                fcn.004010e6(0x122);\n            }\n        }\n        if (var_65ch != 0) {\n            (*_sym.imp.GDI32.dll_SelectObject)(iVar5, var_65ch);\n        }\n        (*_sym.imp.USER32.dll_ReleaseDC)(hWnd, iVar5);\n    }\n    fcn.00409d37(unaff_EBX);\n    return;\n}\n",
        "token_count": 1527
    },
    "00407d3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00407d3c(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_beh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    arg_ch = 0x50000804;\n    if (*(in_ECX + 0x1b12) != '\\0') {\n        arg_ch = 0x50000806;\n    }\n    arg_8h_00 = 0;\n    iVar2 = fcn.00401779(0x40c400, arg_ch, 0, 0, 0, 0, *(in_ECX + 0x15e8), arg_8h, *(in_ECX + 0x15e4));\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 != 0) {\n        if (*(in_ECX + 0x1b12) != '\\0') {\n            sub.VCRUNTIME140.dll_memset(&var_c8h, 0, 0xbc);\n            var_c8h = 0xbc;\n            (*pcVar1)(iVar2, 0x43d, 0, &var_c8h);\n            var_beh._0_2_ = var_beh | 1;\n            var_c4h = 0x10000;\n            (*pcVar1)(iVar2, 0x447, 0, &var_c8h);\n        }\n        if (*(in_ECX + 0x1afc) != 0) {\n            (*pcVar1)(iVar2, 0x30, *(in_ECX + 0x1afc), 0);\n        }\n        (*pcVar1)(iVar2, 0xd3, 3, 0);\n        (*pcVar1)(iVar2, 0x445, 0, 0x40000);\n    }\n    fcn.00409d37(arg_8h_00);\n    return;\n}\n",
        "token_count": 494
    },
    "00407e43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407e43(uint nNumber, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint arg_8h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_54h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    var_6ch = in_ECX;\n    sub.VCRUNTIME140.dll_memset(&var_64h, 0, 0x58);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    iVar3 = *(in_ECX + 0x1b08);\n    var_60h = 0;\n    var_68h = 0x5c;\n    var_64h = 0x40000001;\n    if (*(iVar3 + 0x24) == 0) {\n        var_54h = *(iVar3 + 0x28);\n    }\n    else {\n        var_54h = *(iVar3 + 0x30);\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(arg_1ch, 0x444, 1, &var_68h);\n    var_74h = 2;\n    var_70h = 0x4b0;\n    if (arg_ch != 0) {\n        (*pcVar1)(arg_1ch, 0x461, &var_74h, arg_ch);\n    }\n    if (arg_14h != '\\0') {\n        var_64h = 1;\n        var_60h = 1;\n        (*pcVar1)(arg_1ch, 0x444, 1, &var_68h);\n    }\n    if (arg_10h != 0) {\n        (*pcVar1)(arg_1ch, 0x461, &var_74h, arg_10h);\n    }\n    if (arg_14h != '\\0') {\n        var_60h = 0;\n        var_64h = 1;\n        (*pcVar1)(arg_1ch, 0x444, 1, &var_68h);\n    }\n    if (arg_18h != 0) {\n        (*pcVar1)(arg_1ch, 0x461, &var_74h, arg_18h);\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(nNumber, *(*(var_6ch + 0x1b08) + 0x38), 0x60, 1, 0x206);\n    (*_sym.imp.USER32.dll_SetWindowPos)(arg_1ch, 0, 0, 0, uVar2);\n    iVar3 = (*pcVar1)(arg_1ch, 0xba, 0, 0);\n    if (iVar3 == 1) {\n        nNumber = fcn.0040844c(arg_1ch, 1, nNumber);\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(nNumber, *(*(var_6ch + 0x1b08) + 0x38), 0x60, 1, 0x206);\n    arg_8h = 0;\n    (*_sym.imp.USER32.dll_SetWindowPos)(arg_1ch, 0, 0, 0, uVar2);\n    fcn.00409d37(arg_8h);\n    return;\n}\n",
        "token_count": 868
    },
    "00407fc1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3d4h\n// WARNING: Variable defined which should be unmapped: var_3d0h\n// WARNING: Variable defined which should be unmapped: var_3cch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00407fc1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    char cVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t noname_0;\n    int32_t noname_0_00;\n    int32_t var_3d4h;\n    uint var_3d0h;\n    uint *var_3cch;\n    uint *var_3c8h;\n    uint var_3c4h;\n    uint var_3c0h;\n    uint var_1c0h;\n    uint var_2ch;\n    uint32_t var_4h;\n    \n    uVar5 = var_3c8h;\n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    if (*(param_1 + 0x15e8) != 0) {\n        iVar1 = **(param_1 + 0x1b08);\n        var_3d4h = (*(param_1 + 0x1b08))[2];\n        (*_sym.imp.Mso30Win32Client.dll_Ordinal_612)(*(param_1 + 0x15e4), 0x29c802c1, &fcn.00407fc1::var_3c0h, 0x100);\n        uVar7 = (*_sym.imp.GDI32.dll_CreateFontW)\n                          ((((*(param_1 + 0x1b14) != '\\0') + 8) * *(*(param_1 + 0x1b08) + 0x3c)) / -0x48, 0, 0, 0, 700, \n                           0, 0, 0, 1, 0, 0, 5, 0, &fcn.00407fc1::var_3c0h);\n        *(param_1 + 0x1afc) = uVar7;\n        iVar8 = fcn.00407d3c(0x3e9);\n        pcVar3 = _sym.imp.USER32.dll_GetDlgItem;\n        if ((iVar8 != 0) && (iVar8 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x15e8), 0x3e9),  iVar8 != 0)) {\n            fcn.00407e43(0xf2 - iVar1, param_1, 0, 0, 0, iVar8);\n        }\n        if (*(param_1 + 0x15f8) == '\\0') {\n            if (*(param_1 + 0x15f9) == '\\0') {\n                if (*(param_1 + 0x15f0) != 0) {\n                    iVar8 = 0x3ea;\n                    uVar7 = 0x408141;\n                    iVar9 = fcn.00407d3c(0x3ea);\n                    if (iVar9 != 0) {\n                        var_3cch = NULL;\n                        iVar10 = (0xec - var_3d4h) - iVar1;\n                        iVar9 = *(param_1 + 0x15f0);\n                        var_3c8h = var_3c8h & 0xffffff00;\n                        if (iVar9 != 0) {\n                            if (iVar9 == 1) {\n                                iVar9 = (*pcVar3)(*(param_1 + 0x15e8), 0x3ea);\n                                if (iVar9 == 0) {\n                                    cVar6 = '\\0';\n                                }\n                                else {\n                                    iVar8 = param_1 + 0x15fa;\n                                    cVar6 = fcn.004079f4(iVar8, iVar10, iVar9);\n                                }\n                                if ((cVar6 == '\\0') || ((*(param_1 + 0x1b0c) != 4 && (*(param_1 + 0x1b0c) != 5)))) {\n                                    var_3cch = param_1 + 0x15fa;\n                                    var_3c8h = CONCAT31(SUB43(uVar5, 1), 1);\n                                }\n                                else {\n                                    (*_sym.imp.Mso30Win32Client.dll_Ordinal_612)\n                                              (*(param_1 + 0x15e4), 0xa188995, &fcn.00407fc1::var_1c0h, 200);\n                                    iVar8 = noname_0;\n                                    fcn.00407693(noname_0, param_1 + 0xc80);\n                                }\n                            }\n                            else {\n                                fcn.004078d2(uVar7);\n                                var_3cch = &fcn.00407fc1::var_2ch;\n                                var_3c8h = uVar5 & 0xffffff00;\n                                iVar8 = iVar9;\n                            }\n                        }\n                        iVar8 = (*pcVar3)(*(param_1 + 0x15e8), 0x3ea, iVar8);\n                        if (iVar8 != 0) {\n                            fcn.00407e43(iVar10, param_1 + 400, var_3cch, var_3c8h, param_1 + 0xc80, iVar8);\n                        }\n                    }\n                }\n                puVar4 = var_3cch;\n                if (*(param_1 + 0x15f4) != 0) {\n                    iVar8 = 0x3eb;\n                    uVar7 = 0x408276;\n                    iVar9 = fcn.00407d3c(0x3eb);\n                    if (iVar9 != 0) {\n                        var_3c8h = NULL;\n                        iVar10 = (0xec - var_3d4h) - iVar1;\n                        iVar9 = *(param_1 + 0x15f4);\n                        var_3cch = var_3cch & 0xffffff00;\n                        if (iVar9 != 0) {\n                            if (iVar9 == 1) {\n                                iVar9 = (*pcVar3)(*(param_1 + 0x15e8), 0x3eb);\n                                if (iVar9 == 0) {\n                                    cVar6 = '\\0';\n                                }\n                                else {\n                                    iVar8 = param_1 + 0x183e;\n                                    cVar6 = fcn.004079f4(iVar8, iVar10, iVar9);\n                                }\n                                if ((cVar6 == '\\0') || ((*(param_1 + 0x1b0c) != 4 && (*(param_1 + 0x1b0c) != 5)))) {\n                                    var_3c8h = param_1 + 0x183e;\n                                    var_3cch = CONCAT31(SUB43(puVar4, 1), 1);\n                                }\n                                else {\n                                    (*_sym.imp.Mso30Win32Client.dll_Ordinal_612)\n                                              (*(param_1 + 0x15e4), 0xa188995, &fcn.00407fc1::var_1c0h, 200);\n                                    iVar8 = noname_0_00;\n                                    fcn.00407693(noname_0_00, param_1 + 0xe10);\n                                }\n                            }\n                            else {\n                                fcn.004078d2(uVar7);\n                                var_3c8h = &fcn.00407fc1::var_2ch;\n                                var_3cch = puVar4 & 0xffffff00;\n                                iVar8 = iVar9;\n                            }\n                        }\n                        iVar8 = (*pcVar3)(*(param_1 + 0x15e8), 0x3eb, iVar8);\n                        if (iVar8 != 0) {\n                            fcn.00407e43(iVar10, param_1 + 800, var_3c8h, var_3cch, param_1 + 0xe10, iVar8);\n                        }\n                    }\n                }\n                if ((*(param_1 + 0x15f0) == 0) && (*(param_1 + 0x15f4) == 0)) {\n                    bVar2 = true;\n                }\n                else {\n                    bVar2 = false;\n                }\n                if (((bVar2) && (iVar8 = fcn.00407d3c(0x3ec),  iVar8 != 0)) &&\n                   (iVar8 = (*pcVar3)(*(param_1 + 0x15e8), 0x3ec),  iVar8 != 0)) {\n                    fcn.00407e43((0xec - var_3d4h) - iVar1, param_1 + 0x4b0, 0, 0, 0, iVar8);\n                }\n                if (((*(param_1 + 0x1b15) == '\\0') || (iVar8 = fcn.00407d3c(0x3ed),  iVar8 == 0)) ||\n                   (iVar8 = (*pcVar3)(*(param_1 + 0x15e8), 0x3ed),  iVar8 == 0)) goto code_r0x0040843b;\n                param_1 = param_1 + 0x640;\n            }\n            else {\n                iVar8 = fcn.00407d3c(0x3ef);\n                if ((iVar8 == 0) || (iVar8 = (*pcVar3)(*(param_1 + 0x15e8), 0x3ef),  iVar8 == 0)) goto code_r0x0040843b;\n                param_1 = param_1 + 0x960;\n            }\n        }\n        else {\n            iVar8 = fcn.00407d3c(0x3ee);\n            if ((iVar8 == 0) || (iVar8 = (*pcVar3)(*(param_1 + 0x15e8), 0x3ee),  iVar8 == 0)) goto code_r0x0040843b;\n            param_1 = param_1 + 2000;\n        }\n        fcn.00407e43(0xf2 - iVar1, param_1, 0, 0, 0, iVar8);\n    }\ncode_r0x0040843b:\n    fcn.00409d37(var_3d4h);\n    return;\n}\n",
        "token_count": 2382
    },
    "0040844c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040844c(uint hWnd, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (arg_ch != arg_10h) {\n        do {\n            iVar3 = (arg_ch + arg_10h) / 2;\n            uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar3, *(*(in_ECX + 0x1b08) + 0x38), 0x60, 1, 0x206);\n            (*_sym.imp.USER32.dll_SetWindowPos)(hWnd, 0, 0, 0, uVar1);\n            iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0xba, 0, 0);\n            if (iVar2 != 1) {\n                arg_ch = iVar3 + 1;\n                iVar3 = arg_10h;\n            }\n            arg_10h = iVar3;\n        } while (arg_ch != iVar3);\n    }\n    return arg_ch;\n}\n",
        "token_count": 265
    },
    "004084c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004084c2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint var_90h;\n    uint var_8ch;\n    int32_t *var_88h;\n    int32_t *var_84h;\n    int32_t *cx;\n    int32_t *hWnd;\n    uint X;\n    uint var_20h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    iVar1 = *(*(param_1 + 0x1b08) + 8);\n    iVar9 = *(*(param_1 + 0x1b08) + 0xc);\n    if (*(param_1 + 0x15f0) != 0) {\n        fcn.00408931(1 < *(param_1 + 0x15f0), 1);\n    }\n    if (*(param_1 + 0x15f4) != 0) {\n        fcn.00408931(1 < *(param_1 + 0x15f4), 2);\n    }\n    if (*(param_1 + 0x1b15) != '\\0') {\n        fcn.00408931(0, 4);\n    }\n    var_88h = param_1 + 0x1aa8;\n    iVar10 = 0;\n    iVar8 = 0;\n    cx = var_88h;\n    do {\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x15e8), iVar10 + 0x3e9);\n        iVar7 = iVar8;\n        if (iVar3 != 0) {\n            uVar4 = fcn.0040785e(cx[-7], 0x206);\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar3, 0, 0, 0, uVar4);\n            iVar7 = *cx;\n            iVar5 = fcn.0040785e();\n            iVar6 = fcn.00407898();\n            iVar3 = iVar6;\n            if ((iVar7 != 0) && (iVar3 = iVar9,  iVar9 < iVar6)) {\n                iVar3 = iVar6;\n            }\n            (&var_20h)[iVar10] = iVar3;\n            iVar3 = 0;\n            if (iVar7 != 0) {\n                iVar3 = iVar1 + 6;\n            }\n            (&X)[iVar10] = iVar5 + iVar3;\n            iVar7 = iVar5 + iVar3 + 0xc;\n            if (iVar7 < iVar8) {\n                iVar7 = iVar8;\n            }\n        }\n        cx = cx + 1;\n        iVar10 = iVar10 + 1;\n        iVar8 = iVar7;\n    } while (iVar10 < 7);\n    iVar9 = 6;\n    if (*(param_1 + 0x1b12) == '\\0') {\n        var_84h = NULL;\n        piVar2 = param_1 + 0x1ac8;\n        do {\n            hWnd = piVar2;\n            iVar8 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x15e8), var_84h + 0x3e9);\n            if (iVar8 != 0) {\n                if (*var_88h == 0) {\n                    iVar10 = 6;\n                }\n                else {\n                    hWnd[-1] = 6;\n                    *hWnd = iVar9;\n                    iVar10 = iVar1 + 0xc;\n                }\n                (*_sym.imp.USER32.dll_SetWindowPos)(iVar8, 0, iVar10, iVar9, 0, 0, 0x205);\n                iVar9 = iVar9 + (&var_20h)[var_84h] + 6;\n            }\n            piVar2 = hWnd + 2;\n            var_84h = var_84h + 1;\n            var_88h = var_88h + 1;\n            hWnd = iVar9;\n        } while (var_84h < 7);\n    }\n    else {\n        var_84h = param_1 + 0x1ac8;\n        hWnd = 0x6;\n        iVar9 = 0;\n        do {\n            iVar8 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x15e8), iVar9 + 0x3e9);\n            if (iVar8 != 0) {\n                if (*var_88h != 0) {\n                    var_84h[-1] = (iVar7 - iVar1) + -6;\n                    *var_84h = hWnd;\n                }\n                (*_sym.imp.USER32.dll_SetWindowPos)(iVar8, 0, (iVar7 - (&X)[iVar9]) + -6, hWnd, 0, 0, 0x205);\n                hWnd = hWnd + 6 + (&var_20h)[iVar9];\n            }\n            var_84h = var_84h + 2;\n            iVar9 = iVar9 + 1;\n            var_88h = var_88h + 1;\n        } while (iVar9 < 7);\n    }\n    uVar4 = 0;\n    (*_sym.imp.USER32.dll_SetWindowPos)(*(param_1 + 0x15e8), 0, 0, 0, iVar7, hWnd, 0x206);\n    fcn.00409d37(uVar4);\n    return;\n}\n",
        "token_count": 1278
    },
    "004087dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004087dd(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint in_stack_fffffb24;\n    uint var_4d4h;\n    int32_t psfi;\n    uint var_4c4h;\n    uint pszPath;\n    uint32_t var_4h;\n    \n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    if ((*(in_ECX + 0x15f0) == 1) || (*(in_ECX + 0x15f4) == 1)) {\n        if (*(in_ECX + 0x1b10) == '\\0') {\n            iVar1 = (*_sym.imp.ole32.dll_CoInitialize)(0);\n            if (iVar1 < 0) goto code_r0x0040891f;\n            *(in_ECX + 0x1b10) = 1;\n        }\n        if (*(in_ECX + 0x15f0) == 1) {\n            fcn.00408774(arg_8h);\n            sub.VCRUNTIME140.dll_memset(&psfi, 0, 0x2b4);\n            (*_sym.imp.SHELL32.dll_SHGetFileInfoW)(&pszPath, 0x80, &psfi, 0x2b4, 0x311);\n            if (psfi != 0) {\n                *(in_ECX + 0x1a84) = psfi;\n            }\n            fcn.004010e6(0x104);\n        }\n        if (*(in_ECX + 0x15f4) == 1) {\n            fcn.00408774(arg_ch);\n            sub.VCRUNTIME140.dll_memset(&psfi, 0, 0x2b4);\n            (*_sym.imp.SHELL32.dll_SHGetFileInfoW)(&pszPath, 0x80, &psfi, 0x2b4, 0x311);\n            if (psfi != 0) {\n                *(in_ECX + 0x1a88) = psfi;\n            }\n            fcn.004010e6(0x104);\n        }\n    }\ncode_r0x0040891f:\n    fcn.00409d37(in_stack_fffffb24);\n    return;\n}\n",
        "token_count": 521
    },
    "00408931": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00408931(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint piconinfo;\n    uint uStack120;\n    uint uStack116;\n    int32_t var_6ch;\n    int32_t var_68h;\n    uint *ppvBits;\n    int32_t var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t hdc;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t hgdiobj;\n    int32_t var_3ch;\n    uint hSection;\n    int32_t var_34h;\n    uint pbmi;\n    uint var_2ch;\n    uint var_28h;\n    ushort var_24h;\n    uint var_22h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    var_50h = 0;\n    piconinfo = 0;\n    uStack120 = 0;\n    var_48h = arg_ch;\n    uStack116 = 0;\n    var_6ch = 0;\n    var_68h = 0;\n    var_54h = in_ECX;\n    sub.VCRUNTIME140.dll_memset(&pbmi, 0, 0x2c);\n    var_34h = 0;\n    var_3ch = 0;\n    hgdiobj = 0;\n    var_44h = 0;\n    hdc = (*_sym.imp.USER32.dll_GetDC)(0);\n    var_58h = 0;\n    var_5ch = 0;\n    var_60h = 1;\n    uVar1 = *(*(in_ECX + 0x1b08) + 8);\n    uVar10 = *(*(in_ECX + 0x1b08) + 0xc);\n    uVar9 = uVar1;\n    hSection = uVar10;\n    if (var_48h == 4) {\n        uVar11 = 0;\n        uVar8 = 1;\n        uVar7 = 0x6b;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0, 0x6b, 1, uVar1, uVar10, 0);\n    }\n    else {\n        if (arg_8h == '\\0') {\n            if (var_48h == 2) {\n                iVar4 = *(in_ECX + 0x1a88);\n            }\n            else {\n                iVar4 = *(in_ECX + 0x1a84);\n            }\n            var_60h = 0;\n            goto code_r0x004089f6;\n        }\n        uVar11 = 0;\n        uVar8 = 1;\n        uVar7 = 0xca;\n        uVar3 = *(in_ECX + 0x15e4);\n    }\n    iVar4 = (*_sym.imp.USER32.dll_LoadImageW)(uVar3, uVar7, uVar8, uVar9, uVar10, uVar11);\ncode_r0x004089f6:\n    iVar5 = var_34h;\n    if (iVar4 != 0) {\n        iVar5 = 0xcc - (var_48h != 1);\n        if (var_48h == 4) {\n            iVar5 = 0xcd;\n        }\n        var_50h = (*_sym.imp.USER32.dll_LoadImageW)(*(var_54h + 0x15e4), iVar5, 1, uVar1, hSection, 0);\n        iVar5 = var_34h;\n        if (var_50h != 0) {\n            var_28h = hSection;\n            var_22h._0_2_ = 0x20;\n            pbmi = 0x28;\n            var_24h = 1;\n            stack0xffffffdc = 0;\n            var_2ch = uVar1;\n            hgdiobj = (*_sym.imp.GDI32.dll_CreateDIBSection)(hdc, &pbmi, 0, &*ppvBits, 0, 0);\n            iVar5 = var_34h;\n            if ((((((hgdiobj != 0) &&\n                   (var_3ch = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(hdc),  iVar5 = var_34h,  var_3ch != 0)) &&\n                  (var_58h = (*_sym.imp.GDI32.dll_SelectObject)(var_3ch, hgdiobj),  iVar5 = var_34h,  var_58h != 0)) &&\n                 ((iVar6 = (*_sym.imp.USER32.dll_DrawIconEx)(var_3ch, 0, 0, iVar4, uVar1, hSection, 0, 0, 3), \n                  iVar5 = var_34h,  iVar6 != 0 &&\n                  (iVar6 = (*_sym.imp.USER32.dll_DrawIconEx)(var_3ch, 0, 0, var_50h, uVar1, hSection, 0, 0, 3), \n                  iVar5 = var_34h,  iVar6 != 0)))) &&\n                ((var_44h = (*_sym.imp.GDI32.dll_CreateBitmap)(uVar1, hSection, 1, 1, 0),  iVar5 = var_34h, \n                 var_44h != 0 &&\n                 ((var_34h = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(hdc),  iVar5 = var_34h,  var_34h != 0 &&\n                  (var_5ch = (*_sym.imp.GDI32.dll_SelectObject)(var_34h, var_44h),  iVar5 = var_34h,  var_5ch != 0))))))\n               && ((iVar6 = (*_sym.imp.USER32.dll_DrawIconEx)(var_34h, 0, 0, iVar4, uVar1, hSection, 0, 0, 1), \n                   iVar5 = var_34h,  iVar6 != 0 &&\n                   (iVar6 = (*_sym.imp.USER32.dll_DrawIconEx)(var_34h, 0, 0, var_50h, uVar1, hSection, 0, 0, 1), \n                   iVar6 != 0)))) {\n                var_68h = hgdiobj;\n                var_6ch = var_44h;\n                piconinfo = 1;\n                iVar6 = (*_sym.imp.USER32.dll_CreateIconIndirect)(&piconinfo);\n                if (iVar6 != 0) {\n                    hgdiobj = 0;\n                    var_44h = 0;\n                    *(var_54h + 0x1aa8 + var_48h * 4) = iVar6;\n                }\n            }\n        }\n    }\n    if (hdc != 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, hdc);\n    }\n    if (var_58h != 0) {\n        (*_sym.imp.GDI32.dll_SelectObject)(var_3ch, var_58h);\n    }\n    if (var_5ch != 0) {\n        (*_sym.imp.GDI32.dll_SelectObject)(iVar5, var_5ch);\n    }\n    if (var_3ch != 0) {\n        (*_sym.imp.GDI32.dll_DeleteDC)(var_3ch);\n    }\n    if (iVar5 != 0) {\n        (*_sym.imp.GDI32.dll_DeleteDC)(iVar5);\n    }\n    pcVar2 = _sym.imp.USER32.dll_DestroyIcon;\n    if ((iVar4 != 0) && (var_60h != 0)) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(iVar4);\n    }\n    if (var_50h != 0) {\n        (*pcVar2)(var_50h);\n    }\n    pcVar2 = _sym.imp.GDI32.dll_DeleteObject;\n    if (hgdiobj != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(hgdiobj);\n    }\n    if (var_44h != 0) {\n        (*pcVar2)(var_44h);\n    }\n    fcn.00409d37(unaff_EBX);\n    return;\n}\n",
        "token_count": 1967
    },
    "00408c18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408c18(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    if (*(in_ECX + 0x1b11) == '\\0') {\n        iVar1 = arg_8h[6];\n        iVar2 = arg_8h[4];\n        iVar4 = 0;\n        do {\n            iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x15e8), iVar4 + 0x3e9);\n            if ((iVar3 != 0) && (iVar3 == *arg_8h)) {\n                *(in_ECX + 0x1a8c + iVar4 * 4) = iVar1 - iVar2;\n                return;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 7);\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "00408c6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408c6a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint *puVar2;\n    int32_t *piVar3;\n    uint in_stack_ffffffc4;\n    uint hdc;\n    int32_t var_1ch;\n    uint lprc;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    var_8h = *0x4101e0 ^ &stack0xfffffffc;\n    var_10h = fcn.0040785e();\n    var_ch = fcn.00407898();\n    var_14h = 0;\n    lprc = 0;\n    iVar1 = *(*(in_ECX + 0x1b08) + 0x24);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.GDI32.dll_CreateSolidBrush)(*(*(in_ECX + 0x1b08) + 0x2c));\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_FillRect)(arg_8h, &lprc, iVar1);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar1);\n        }\n    }\n    else {\n        in_stack_ffffffc4 = 1;\n        (*_sym.imp.UxTheme.dll_DrawThemeBackground)(iVar1, arg_8h, 1, 1, &lprc, 0);\n    }\n    puVar2 = in_ECX + 0x1ac4;\n    var_1ch = 7;\n    piVar3 = in_ECX + 0x1aa8;\n    do {\n        if (*piVar3 != 0) {\n            (*_sym.imp.USER32.dll_DrawIconEx)\n                      (arg_8h, *puVar2, puVar2[1], *piVar3, *(*(in_ECX + 0x1b08) + 8), *(*(in_ECX + 0x1b08) + 0xc), 0, 0\n                       , 7);\n        }\n        piVar3 = piVar3 + 1;\n        puVar2 = puVar2 + 2;\n        var_1ch = var_1ch + -1;\n    } while (var_1ch != 0);\n    fcn.00409d37(in_stack_ffffffc4);\n    return;\n}\n",
        "token_count": 549
    },
    "00408d4a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408d4a(uint arg_8h, int32_t arg_ch, uint arg_10h, uchar *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar auStack84 [72];\n    uint32_t uStack12;\n    \n    uStack12 = *0x4101e0 ^ auStack84;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(arg_8h, 0xffffffeb);\n    if (iVar2 != 0) {\n        if (arg_ch == 6) {\n            if ((arg_10h == 1) && (arg_14h != NULL)) {\n                iVar2 = (*_sym.imp.USER32.dll_SetActiveWindow)(arg_14h);\n                if (iVar2 == 0) {\n                    (*_sym.imp.Mso20Win32Client.dll_Ordinal_1360)(0x39776b66);\n                }\n            }\n        }\n        else {\n            if (arg_ch == 0xf) {\n                sub.VCRUNTIME140.dll_memset(&stack0xffffffa8, 0, 0x40);\n                arg_14h = &stack0xffffffa8;\n                iVar2 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h);\n                if (iVar2 != 0) {\n                    fcn.00408c6a(iVar2);\n                }\n                (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &stack0xffffffa0);\n                goto code_r0x00408e5d;\n            }\n            if (arg_ch == 0x4e) {\n                if ((arg_14h != NULL) && (*(arg_14h + 8) == 0x701)) {\n                    fcn.00408c18(arg_14h);\n                }\n            }\n            else if (arg_ch == 0x82) {\n                (*_sym.imp.USER32.dll_SetWindowLongW)(arg_8h, 0xffffffeb, 0);\n                iVar1 = *(iVar2 + 0x15ec);\n                *(iVar1 + 0x3e4) = 0;\n                *(iVar1 + 0x24ff) = 1;\n                fcn.004076df();\n                (*_sym.imp.Mso20Win32Client.dll_Ordinal_456)(iVar2);\n            }\n            else if (arg_ch == 0x113) {\n                fcn.004077a1();\n            }\n        }\n    }\n    (*_sym.imp.USER32.dll_DefWindowProcW)(arg_8h, arg_ch, arg_10h);\ncode_r0x00408e5d:\n    fcn.00409d37(arg_14h);\n    return;\n}\n",
        "token_count": 599
    },
    "00409088": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040909e)\n\nuint fcn.00409088(void)\n\n{\n    if (*0x41345c == 0) {\n        LOCK();\n        *0x41345c = 0x410210;\n    }\n    return 0x413458;\n}\n",
        "token_count": 68
    },
    "004090a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004090a7(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    int16_t *in_EDX;\n    int16_t *piVar2;\n    ulong uVar3;\n    \n    uVar3 = CONCAT44(in_EDX, in_EDX);\n    piVar2 = in_EDX;\n    if (in_EDX != NULL) {\n        if (arg_8h < 1) {\n            uVar3 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_2055)(0x151d710, 0);\n            in_ECX = extraout_ECX;\n        }\n        piVar2 = uVar3 >> 0x20;\n        in_EDX = uVar3;\n        if ((in_ECX != 0) && (1 < arg_8h)) {\n            do {\n                iVar1 = *((in_ECX - piVar2) + in_EDX);\n                arg_8h = arg_8h + -1;\n                if (iVar1 == 0) break;\n                *in_EDX = iVar1;\n                in_EDX = in_EDX + 1;\n            } while (1 < arg_8h);\n        }\n        *in_EDX = 0;\n    }\n    return in_EDX - piVar2 >> 1;\n}\n",
        "token_count": 308
    },
    "00409348": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409348(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0xc) == 0) {\n        iVar1 = fcn.00409258();\n        *(param_1 + 0xc) = iVar1;\n        if (iVar1 == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            *(param_1 + 0x10) = uVar2;\n            iVar1 = fcn.004091b5();\n            *(param_1 + 0xc) = iVar1;\n            *(param_1 + 0x14) = 1;\n            if (iVar1 == 0) {\n                *(param_1 + 0x10) = *0x413468;\n                *(param_1 + 0x18) = *0x413464;\n                *(param_1 + 0x1c) = *0x413460;\n                iVar1 = fcn.00409278();\n                *(param_1 + 0xc) = iVar1;\n                *(param_1 + 0x20) = 1;\n                if (iVar1 == 0) {\n                    *(param_1 + 0x10) = *0x413468;\n                    *(param_1 + 0x24) = *0x413464;\n                    *(param_1 + 0x28) = *0x413460;\n                }\n            }\n        }\n    }\n    return *(param_1 + 0xc);\n}\n",
        "token_count": 345
    },
    "00409740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409740(uint noname_0, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    uint var_4h;\n    \n    arg_8h = *(arg_ch + 8);\n    iVar1 = arg_ch + 0x10;\n    iVar2 = *(arg_ch + 4);\n    if ((iVar2 == iVar1) || (iVar2 == 0)) {\n        iVar2 = fcn.00401e6d();\n        if ((arg_14h != '\\0') && (0 < arg_8h)) {\n            fcn.00409821(arg_8h);\n        }\n    }\n    else {\n        fcn.00401e8d(iVar1, iVar1);\n    }\n    *(arg_ch + 8) = arg_10h;\n    *(arg_ch + 4) = iVar2;\n    return;\n}\n",
        "token_count": 221
    },
    "0040a225": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040a225(uint dwMilliseconds)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    \n    if (*0x410450 == 0) {\n        uVar3 = *0x4101e0 ^ *0x410454;\n        uVar2 = *0x4101e0 & 0x1f;\n        fcn.0040a8ec(0x41044c, 0x410434, dwMilliseconds);\n        uVar3 = (*(uVar3 >> uVar2 | uVar3 << 0x20 - uVar2))();\n        uVar3 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    else {\n        fcn.0040a219();\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObjectEx)(*0x410450, dwMilliseconds, 0);\n        uVar3 = fcn.0040a1cc();\n        uVar3 = uVar3 & 0xffffff00 | iVar1 == 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 253
    },
    "0040a339": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a339(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x41047c == '\\0') {\n        if ((arg_8h != 0) && (arg_8h != 1)) {\n            fcn.0040a6b4(5);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        iVar3 = fcn.0040aaea();\n        if ((iVar3 == 0) || (arg_8h != 0)) {\n            uVar2 = 0x20 - (*0x4101e0 & 0x1f) & 0x1f;\n            *0x410464 = (0xffffffffU >> uVar2 | -1 << 0x20 - uVar2) ^ *0x4101e0;\n            *0x410468 = *0x410464;\n            *0x41046c = *0x410464;\n            *0x410470 = *0x410464;\n            *0x410474 = *0x410464;\n            *0x410478 = *0x410464;\n        }\n        else {\n            iVar3 = sub.api_ms_win_crt_runtime_l1_1_0.dll__initialize_onexit_table(0x410464);\n            if ((iVar3 != 0) ||\n               (iVar3 = sub.api_ms_win_crt_runtime_l1_1_0.dll__initialize_onexit_table(0x410470),  iVar3 != 0)) {\n                return 0;\n            }\n        }\n        *0x41047c = '\\x01';\n    }\n    return 1;\n}\n",
        "token_count": 421
    },
    "0040a84d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a84d(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        sub.api_ms_win_crt_runtime_l1_1_0.dll_terminate();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 205
    },
    "0040abcb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040abcb(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t arg_8h;\n    \n    if ((*0x40c3c0 & 0x1000) != 0) {\n        fcn.0040ac7d();\n        *0x4107d0 = *0x4107d0 + 1;\n        if (*0x4107d0 == 1) {\n            fcn.0040adcf(4, 0x4107d4);\n        }\n        arg_8h = *0x4101e0 ^ &stack0xfffffffc;\n        cVar2 = fcn.0040ac02();\n        pcVar1 = *0x4107c8;\n        if (cVar2 == '\\0') {\n            *0x4107cc = 0;\n        }\n        else {\n            (**0x40c220)(0x4107cc);\n            (*pcVar1)();\n        }\n        fcn.00409d37(arg_8h);\n        return;\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "004015ba": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004015ba(uint param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    \n    if (*0x4107e0 != 0) {\n        (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(\"IsolationAware function called after IsolationAwareCleanup\\n\");\n    }\n    if ((*0x4107f0 == 0) &&\n       ((((*0x4107e0 == 0 && (iVar1 = fcn.004013a5(),  iVar1 == 0)) ||\n         ((uVar3 = *0x4101f8,  pcVar2 = *0x413438,  *0x413438 == NULL &&\n          (pcVar2 = fcn.0040136f(\"ActivateActCtx\"),  pcVar2 == NULL)))) ||\n        (*0x413438 = pcVar2,  iVar1 = (**0x413438)(uVar3, param_1),  iVar1 == 0)))) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if ((((iVar1 == 0x7f) || (iVar1 == 0x7e)) || (iVar1 == 0x78)) || ((iVar1 == 1 || (uVar3 = 0,  iVar1 == 0x32))))\n        {\n            *0x4107f0 = 1;\n            uVar3 = 1;\n        }\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 342
    },
    "00401945": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401945(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_1531)();\n    if ((iVar1 == 0) || (iVar1 == 0x80)) {\n        *arg_8h = 0;\n    }\n    else {\n        *arg_8h = 0x80004005;\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00401eec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401eec(uint32_t arg_8h)\n\n{\n    if ((arg_8h & 1) != 0) {\n        (*_sym.imp.Mso20Win32Client.dll_Ordinal_456)();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00403af2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403af2(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    \n    uVar1 = *(in_ECX + 0x2504);\n    iVar3 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_1554)(0x40d528);\n    cVar2 = '\\x01' - (iVar3 != 0);\n    *(in_ECX + 0x2504) = cVar2;\n    if (cVar2 == '\\0') {\n        if (uVar1 != 0) {\n            fcn.00404878(0);\n            *(in_ECX + 0x24fe) = 0;\n            *(in_ECX + 0x24fd) = 0;\n            if (*(in_ECX + 0x24a4) != 5) {\n                fcn.004060b1(*(in_ECX + 0x24a4));\n                *(in_ECX + 0x24a4) = 5;\n            }\n            if (*(in_ECX + 0x24a0) != 5) {\n                fcn.004060b1(*(in_ECX + 0x24a0));\n                *(in_ECX + 0x24a0) = 5;\n            }\n            uVar4 = fcn.00403709();\n            return uVar4;\n        }\n    }\n    else if (uVar1 == 0) {\n        uVar4 = 1;\n        if ((*(in_ECX + 0x2494) & 1) == 0) {\n            uVar4 = fcn.00403bc1();\n        }\n        cVar2 = fcn.00403562(uVar4);\n        uVar4 = uVar1;\n        if (cVar2 == '\\0') {\n            uVar4 = 1;\n        }\n        uVar5 = fcn.00404ac4(arg_8h);\n        cVar2 = uVar4;\n        if (uVar5 == '\\0') {\n            cVar2 = '\\x01';\n        }\n        return uVar5 & 0xffffff00 | cVar2 == '\\0';\n    }\n    return CONCAT31(-iVar3 >> 8, 1);\n}\n",
        "token_count": 531
    },
    "004050e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050e0(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint unaff_ESI;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(arg_8h, 0xffffffeb);\n    if (iVar1 == 0) goto code_r0x00405239;\n    if (arg_ch < 0x7f) {\n        if (arg_ch == 0x7e) {\n            fcn.00404f9f();\n            goto code_r0x00405239;\n        }\n        if ((arg_ch == 2) || (arg_ch == 0x10)) {\n            fcn.0040489f(1);\n            goto code_r0x00405239;\n        }\n        if (arg_ch == 0x15) {\n            fcn.00405036();\n            goto code_r0x00405239;\n        }\n        if (arg_ch == 0x16) {\n            (*_sym.imp.Mso20Win32Client.dll_Ordinal_789)(0x40d458, 1);\n            goto code_r0x00405239;\n        }\n        if (arg_ch == 0x1a) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*(iVar1 + 0x10), 0x1a, arg_10h, arg_14h);\n            fcn.0040481b();\n            fcn.00404d06();\n            goto code_r0x00405239;\n        }\n    }\n    else {\n        if (arg_ch == 0x113) {\n            fcn.00404b50(arg_10h);\n            goto code_r0x00405239;\n        }\n        if (arg_ch == 0x31a) {\n            fcn.00405062();\n            goto code_r0x00405239;\n        }\n        if (arg_ch == 0x400) {\n            if (arg_10h == 0xabcd) {\n                fcn.00403a92();\n                fcn.00403aae();\n                fcn.00403ad6();\n                fcn.00403af2(0);\n            }\n            goto code_r0x00405239;\n        }\n        if (arg_ch == 0x401) {\n            if (arg_10h == 4) {\n                fcn.0040433e(arg_14h);\n            }\n            goto code_r0x00405239;\n        }\n        if (arg_ch == 0x402) {\n            (*_sym.imp.KERNEL32.dll_GetSystemTime)(iVar1 + 0x2530);\n            goto code_r0x00405239;\n        }\n    }\n    if ((arg_ch == *0x41329c) && (*0x41329c != 0)) {\n        if ((*(iVar1 + 0x2494) & 1) == 0) {\n            arg_8h_00 = fcn.00403bc1();\n        }\n        else {\n            arg_8h_00 = 1;\n        }\n        fcn.00403562(arg_8h_00);\n    }\ncode_r0x00405239:\n    (*_sym.imp.USER32.dll_DefWindowProcW)(unaff_ESI, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 751
    },
    "00406360": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00406360(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040b17f(4);\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -4) = 0;\n    (**(*extraout_ECX + 0x14))(unaff_EBP + -0x10);\n    piVar2 = *(unaff_EBP + -0x10);\n    if (piVar2 != NULL) {\n        iVar1 = (**(*piVar2 + 0x34))();\n        iVar3 = 0;\n        do {\n            if (*(iVar1 + iVar3 * 4) != *(iVar3 * 4 + 0x40c4bc)) {\n                (**(**(unaff_EBP + -0x10) + 100))();\n                break;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != 4);\n        piVar2 = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2);\n    }\n    fcn.0040b15f();\n    return;\n}\n",
        "token_count": 347
    },
    "00403bc1": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint8_t __fastcall fcn.00403bc1(uint8_t param_1)\n\n{\n    if ((param_1 & 8) != 0) {\n        return 8;\n    }\n    return param_1 & 2;\n}\n",
        "token_count": 53
    },
    "00406b25": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406b25(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    uVar3 = *0x413494;\n    if (arg_8h < 0x7fffffff) {\n        uVar6 = arg_8h | 7;\n        uVar7 = 0x7ffffffe;\n        if (((uVar6 < 0x7fffffff) && (*0x413494 <= 0x7ffffffe - (*0x413494 >> 1))) &&\n           (uVar1 = (*0x413494 >> 1) + *0x413494,  uVar7 = uVar6,  uVar6 < uVar1)) {\n            uVar7 = uVar1;\n        }\n        iVar4 = fcn.00401290(uVar6);\n        *0x413490 = arg_8h;\n        *0x413494 = uVar7;\n        sub.VCRUNTIME140.dll_memcpy(iVar4, L\"Microsoft.Office.FileIO.MsoSyncUploadDisabled\", arg_8h * 2);\n        *(arg_8h * 2 + iVar4) = 0;\n        if (7 < uVar3) {\n            fcn.004012e7(2);\n        }\n        *0x413480 = iVar4;\n        return 0x413480;\n    }\n    fcn.00406c02();\n    pcVar2 = swi(3);\n    uVar5 = (*pcVar2)();\n    return uVar5;\n}\n",
        "token_count": 379
    },
    "004091b5": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004091b5(void)\n\n{\n    int32_t iVar1;\n    char16_t *arg_8h;\n    uint32_t var_210h;\n    uint var_20ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    var_210h = 0x208;\n    arg_8h = L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\";\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegGetValueW)\n                      (0x80000002, L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", L\"CommonFilesDir\", 2, 0, &var_20ch, \n                       &var_210h);\n    if ((iVar1 == 0) && (3 < var_210h)) {\n        (*_sym.imp.api_ms_win_crt_string_l1_1_0.dll_wcsncat_s)\n                  (&var_20ch, 0x104, \n                   L\"\\\\Microsoft Shared\\\\Office16\\\\\" + (*(&var_210h + (var_210h & 0xfffffffe)) == 0x5c), 0xffffffff);\n        fcn.004090f5();\n    }\n    fcn.00409d37(arg_8h);\n    return;\n}\n",
        "token_count": 289
    },
    "00409475": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_228h\n\nvoid __fastcall fcn.00409475(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint32_t var_8h;\n    \n    var_8h = *0x4101e0 ^ &stack0xfffffffc;\n    if (param_1 != 0) {\n        iVar1 = (*_sym.imp.api_ms_win_crt_string_l1_1_0.dll_wcsnlen)(param_1, 0x104);\n        iVar2 = fcn.00401833();\n        var_228h = iVar2 + iVar1;\n        uVar4 = *(param_2 + 8) >> 1;\n        if (uVar4 < 0x104) {\n            uVar3 = fcn.00401833();\n            fcn.004093ec(uVar3);\n            (*_sym.imp.Mso20Win32Client.dll_Ordinal_583)(param_1, &var_218h, 0x105);\n            uVar3 = fcn.00401833();\n            fcn.004093ec(uVar3);\n        }\n        else {\n            (*_sym.imp.Mso20Win32Client.dll_Ordinal_583)(param_1, *(param_2 + 4), uVar4);\n        }\n        uVar4 = fcn.00401833();\n        if (uVar4 < var_228h) {\n            (*_sym.imp.Mso20Win32Client.dll_Ordinal_1360)(0x119d8c5);\n        }\n    }\n    fcn.00409d37(var_228h);\n    return;\n}\n",
        "token_count": 425
    },
    "004078d2": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004078d2(int32_t param_1, int32_t param_2)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint in_stack_ffffff1c;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint *var_d0h;\n    uint *var_cch;\n    uint uStack204;\n    uint var_c4h;\n    uint var_60h;\n    uint var_58h;\n    uint var_30h;\n    uint var_1ch;\n    uint32_t var_8h;\n    \n    var_8h = *0x4101e0 ^ &stack0xfffffffc;\n    if ((param_2 == 0) || (param_1 < 0)) {\n        uVar6 = 0x396d7461;\n    }\n    else {\n        (*_sym.imp.Mso20Win32Client.dll_Ordinal_382)(&var_58h, 0x14, param_1, 10);\n        pcVar2 = _sym.imp.KERNEL32.dll_GetLocaleInfoW;\n        var_d4h = 0;\n        var_d0h = NULL;\n        var_cch = NULL;\n        uStack204 = 0;\n        var_dch = 0;\n        var_d8h = 0;\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(0x400, 0x10, &var_c4h, 0x32);\n        puVar3 = &var_c4h;\n        puVar5 = puVar3;\n        do {\n            iVar1 = *puVar3;\n            if (iVar1 == 0) break;\n            if (iVar1 != 0x3b) {\n                *puVar5 = iVar1;\n                puVar5 = puVar5 + 2;\n            }\n            puVar3 = puVar3 + 2;\n        } while (puVar3 < &var_60h);\n        *puVar5 = 0;\n        iVar4 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_710)(&var_c4h, &var_d4h);\n        if (iVar4 == 0) {\n            uVar6 = 0x396d7462;\n        }\n        else {\n            (*pcVar2)(0x400, 0xe, &var_1ch, 10);\n            var_d0h = &var_1ch;\n            (*pcVar2)(0x400, 0xf, &var_30h, 10);\n            var_cch = &var_30h;\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetNumberFormatW)(0x400, 0, &var_58h, &var_dch, param_2, 0x14);\n            if (iVar4 != 0) goto code_r0x004079e1;\n            uVar6 = 0x396d7463;\n        }\n    }\n    (*_sym.imp.Mso20Win32Client.dll_Ordinal_1360)(uVar6);\ncode_r0x004079e1:\n    fcn.00409d37(in_stack_ffffff1c);\n    return;\n}\n",
        "token_count": 728
    },
    "0040a94b": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040a98c)\n// WARNING: Removing unreachable block (ram,0x0040a9c7)\n// WARNING: Removing unreachable block (ram,0x0040aa3f)\n\nuint fcn.0040a94b(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t in_XCR0;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x4107b8 = 0;\n    *0x4101f0 = *0x4101f0 | 1;\n    iVar4 = sub.KERNEL32.dll_IsProcessorFeaturePresent(10);\n    uVar3 = *0x4101f0;\n    if (iVar4 != 0) {\n        *0x4101f0 = *0x4101f0 | 2;\n        *0x4107b8 = 1;\n        piVar1 = cpuid_basic_info(0);\n        puVar2 = cpuid_Version_info(1);\n        uVar6 = puVar2[3];\n        if (((piVar1[3] ^ 0x6c65746eU | piVar1[2] ^ 0x49656e69U | piVar1[1] ^ 0x756e6547U) == 0) &&\n           (((((uVar5 = *puVar2 & 0xfff3ff0,  uVar5 == 0x106c0 || (uVar5 == 0x20660)) || (uVar5 == 0x20670)) ||\n             ((uVar5 == 0x30650 || (uVar5 == 0x30660)))) || (uVar5 == 0x30670)))) {\n            *0x4107bc = *0x4107bc | 1;\n        }\n        if (*piVar1 < 7) {\n            uVar5 = 0;\n        }\n        else {\n            iVar4 = cpuid_Extended_Feature_Enumeration_info(7);\n            uVar5 = *(iVar4 + 4);\n            if ((uVar5 & 0x200) != 0) {\n                *0x4107bc = *0x4107bc | 2;\n            }\n        }\n        if ((uVar6 & 0x100000) != 0) {\n            *0x4101f0 = uVar3 | 6;\n            *0x4107b8 = 2;\n            if ((((uVar6 & 0x8000000) != 0) && ((uVar6 & 0x10000000) != 0)) && ((in_XCR0 & 6) == 6)) {\n                *0x4101f0 = uVar3 | 0xe;\n                *0x4107b8 = 3;\n                if ((uVar5 & 0x20) != 0) {\n                    *0x4101f0 = uVar3 | 0x2e;\n                    *0x4107b8 = 5;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 769
    },
    "004011f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004011f0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    (*_sym.imp.MSO.dll_Ordinal_349)();\n    if (*0x4107e8 != 0) {\n        (*_sym.imp.MSO.dll_Ordinal_1749)(*0x4107e8);\n        *0x4107e8 = 0;\n    }\n    if (*0x4107e4 != 0) {\n        (*_sym.imp.Mso20Win32Client.dll_Ordinal_456)(*0x4107e4);\n        *0x4107e4 = 0;\n    }\n    iVar2 = 0x410218;\n    do {\n        if (*(iVar2 + 0xc) == *0x4107ec) break;\n        iVar2 = iVar2 + 0x2c;\n    } while (iVar2 != 0x410320);\n    if (iVar2 != 0x410320) {\n        iVar1 = *(iVar2 + 0xc);\n        *(iVar2 + 0xc) = 0;\n        *(iVar2 + 0x10) = 0;\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "00401261": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401261(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.0040125b(arg_8h, arg_ch, arg_10h, 0, &arg_14h);\n    iVar2 = (*_sym.imp.api_ms_win_crt_stdio_l1_1_0.dll___stdio_common_vswprintf_s)(*puVar1, puVar1[1]);\n    if (iVar2 < 0) {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 148
    },
    "00401833": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00401833(int16_t *param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    \n    if (param_1 == NULL) {\n        iVar3 = 0;\n    }\n    else {\n        piVar1 = param_1 + 1;\n        do {\n            iVar2 = *param_1;\n            param_1 = param_1 + 1;\n        } while (iVar2 != 0);\n        iVar3 = param_1 - piVar1 >> 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 136
    },
    "00401ec9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ec9(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint *puVar1;\n    \n    for (puVar1 = *(in_ECX + 4); puVar1 != *(in_ECX + 8); puVar1 = puVar1 + 1) {\n        (****puVar1)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "00402905": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00402905(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040b17f(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = *(unaff_EBP + 8);\n    extraout_ECX[0x928] = 5;\n    extraout_ECX[0x929] = 5;\n    uVar2 = *(unaff_EBP + 0xc);\n    extraout_ECX[1] = 0;\n    extraout_ECX[3] = 0;\n    extraout_ECX[4] = 0;\n    extraout_ECX[0xf4] = 0;\n    extraout_ECX[0xf5] = 0;\n    extraout_ECX[0xf6] = 0;\n    extraout_ECX[0xf7] = 0;\n    extraout_ECX[0xf8] = 0;\n    extraout_ECX[0xf9] = 0;\n    extraout_ECX[0xfa] = 0;\n    extraout_ECX[0xfb] = 0;\n    extraout_ECX[0x925] = 0;\n    extraout_ECX[0x926] = 0;\n    extraout_ECX[0x927] = 0;\n    extraout_ECX[0x92a] = 0x100;\n    extraout_ECX[0x93c] = 0;\n    *(extraout_ECX + 0x93e) = 0;\n    *(extraout_ECX + 0x24fd) = 0x1000000;\n    *(extraout_ECX + 0x2501) = 0x101;\n    *(extraout_ECX + 0x2503) = uVar2;\n    extraout_ECX[0x941] = 0;\n    *(extraout_ECX + 0x942) = 0;\n    *(extraout_ECX + 0x2512) = 0;\n    extraout_ECX[0x945] = 0;\n    puVar1 = extraout_ECX + 0x946;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + 0xc) = puVar1;\n    *puVar1 = 0;\n    extraout_ECX[0x947] = 0;\n    uVar3 = fcn.004068e8();\n    *puVar1 = uVar3;\n    puVar1 = extraout_ECX + 0x948;\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + 0xc) = puVar1;\n    *puVar1 = 0;\n    extraout_ECX[0x949] = 0;\n    uVar3 = fcn.004068e8();\n    *puVar1 = uVar3;\n    extraout_ECX[0x94a] = 0;\n    extraout_ECX[0x94b] = 0;\n    sub.VCRUNTIME140.dll_memset(extraout_ECX + 0xfc, 0, 0x20a4);\n    sub.VCRUNTIME140.dll_memset(extraout_ECX + 5, 0, 0x3bc);\n    sub.VCRUNTIME140.dll_memset(extraout_ECX + 0x92b, 0, 0x44);\n    (*_sym.imp.KERNEL32.dll_GetSystemTime)(extraout_ECX + 0x94c);\n    fcn.0040b15f();\n    return;\n}\n",
        "token_count": 884
    },
    "004032d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004032d6(uint hInstance)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint s;\n    uint var_30h;\n    code *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint hInst;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    char16_t *var_ch;\n    uint var_8h;\n    \n    sub.VCRUNTIME140.dll_memset(&s, 0, 0x30);\n    s = 0x30;\n    var_30h = 3;\n    var_2ch = fcn.004050e0;\n    var_28h = 0;\n    var_24h = 0;\n    hInst = hInstance;\n    var_1ch = (*_sym.imp.USER32.dll_LoadIconW)(hInstance, 0x6b);\n    pcVar1 = _sym.imp.USER32.dll_LoadCursorW;\n    var_18h = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f00);\n    var_14h = 6;\n    var_ch = L\"Microsoft.Office16.MsoSync\";\n    var_8h = (*_sym.imp.USER32.dll_LoadImageW)(hInst, 0x6c, 1, 0xb, 0xc, 0x8000);\n    iVar2 = fcn.004016e3();\n    if (iVar2 != 0) {\n        *(in_ECX + 0x2506) = 1;\n        sub.VCRUNTIME140.dll_memset(&s, 0, 0x30);\n        s = 0x30;\n        var_30h = 3;\n        var_2ch = fcn.00408d4a;\n        var_28h = 0;\n        var_24h = 0;\n        hInst = hInstance;\n        var_1ch = 0;\n        var_18h = (*pcVar1)(0, 0x7f00);\n        var_14h = (*_sym.imp.GDI32.dll_GetStockObject)(5);\n        var_ch = L\"Microsoft.Office16.MsoSync.Tooltip\";\n        var_8h = 0;\n        iVar2 = fcn.004016e3();\n        if (iVar2 != 0) {\n            *(in_ECX + 0x2507) = 1;\n            iVar3 = fcn.00401779(L\"Microsoft Office Sync Process\", 0xcf0000, 0x80000000, 0x80000000, 0x80000000, \n                                 0x80000000, 0, 0, hInstance);\n            *(in_ECX + 0xc) = iVar3;\n            if (iVar3 != 0) {\n                iVar3 = fcn.00401779(0x40c400, 0x40000804, 0, 0, 0, 0, iVar3, 0, hInstance);\n                *(in_ECX + 0x10) = iVar3;\n                if (iVar3 != 0) {\n                    return 1;\n                }\n                (*_sym.imp.Mso20Win32Client.dll_Ordinal_1121)\n                          (0x39776a36, 0x4b8, 10, L\"System Error: CreateWindowEx failed\");\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 778
    },
    "00403457": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403457(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint uVar3;\n    \n    uVar3 = in_ECX[0x92d];\n    uVar1 = in_ECX[0x92e];\n    if (arg_8h != 0) {\n        if (arg_8h == 1) {\n            if (in_ECX[0xf7] != 0) {\n                return in_ECX[0xf7];\n            }\n            iVar2 = (*_sym.imp.USER32.dll_LoadImageW)(*in_ECX, 0x85, 1, uVar3, uVar1, 0);\n            in_ECX[0xf7] = iVar2;\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            uVar3 = 0x396d7378;\n        }\n        else if (arg_8h == 2) {\n            if (in_ECX[0xf5] != 0) {\n                return in_ECX[0xf5];\n            }\n            iVar2 = (*_sym.imp.USER32.dll_LoadImageW)(*in_ECX, 0x82, 1, uVar3, uVar1, 0);\n            in_ECX[0xf5] = iVar2;\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            uVar3 = 0x396d7379;\n        }\n        else {\n            if (arg_8h != 8) {\n                (*_sym.imp.Mso20Win32Client.dll_Ordinal_1360)(0x396d7431);\n                return 0;\n            }\n            if (in_ECX[0xf8] != 0) {\n                return in_ECX[0xf8];\n            }\n            iVar2 = (*_sym.imp.USER32.dll_LoadImageW)(*in_ECX, 0x83, 1, uVar3, uVar1, 0);\n            in_ECX[0xf8] = iVar2;\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            uVar3 = 0x396d7430;\n        }\n        (*_sym.imp.Mso20Win32Client.dll_Ordinal_1121)(uVar3, 0x4b8, 0x32, L\"System Error: LoadImage failed\");\n    }\n    return in_ECX[0xf4];\n}\n",
        "token_count": 549
    },
    "004035e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004035e2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x18) = *(param_1 + 0xc);\n    *(param_1 + 0x1c) = 4;\n    *(param_1 + 0x20) = 4;\n    *(param_1 + 0x14) = 0x3bc;\n    fcn.004010e6(0x80);\n    iVar1 = (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, param_1 + 0x14);\n    if (iVar1 == 0) {\n        (*_sym.imp.Mso20Win32Client.dll_Ordinal_1121)(0x39776a37, 0x4b8, 0x32, L\"System Error: Shell_NotifyIcon failed\")\n        ;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 213
    },
    "0040363b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040363b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x18) = *(param_1 + 0xc);\n    *(param_1 + 0x1c) = 4;\n    *(param_1 + 0x20) = 4;\n    *(param_1 + 0x14) = 0x3bc;\n    fcn.004010e6(0x80);\n    iVar1 = (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, param_1 + 0x14);\n    if (iVar1 == 0) {\n        (*_sym.imp.Mso20Win32Client.dll_Ordinal_1121)(0x39776a38, 0x4b8, 0x32, L\"System Error: Shell_NotifyIcon failed\")\n        ;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 213
    },
    "00403709": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403709(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(2, param_1 + 0x14);\n    if (iVar1 == 0) {\n        (*_sym.imp.Mso20Win32Client.dll_Ordinal_1121)(0x396c6731, 0x4b8, 0x32, L\"System Error: Shell_NotifyIcon failed\")\n        ;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 129
    },
    "00403bd1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403bd1(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint extraout_ECX;\n    uint *arg_8h;\n    char *arg_8h_00;\n    uint var_9b0h;\n    uint var_9ach;\n    uint var_968h;\n    uint var_964h;\n    uint uStack2404;\n    uint uStack2400;\n    uint var_958h;\n    uint var_954h;\n    char *var_950h;\n    uint var_94ch;\n    int32_t var_944h;\n    uint lpCommandLine;\n    uint lpText;\n    uint lpApplicationName;\n    uint lpCaption;\n    uint lpFilename;\n    uint32_t var_4h;\n    \n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    var_954h = (*_sym.imp.Mso30Win32Client.dll_Ordinal_1043)();\n    var_958h = 0x40d4a4;\n    var_950h = \"LaunchSyncCenter\";\n    fcn.00401f89(&var_958h);\n    arg_8h_00 = \"LaunchContext\";\n    (*_sym.imp.Mso20Win32Client.dll_Ordinal_1620)(\"LaunchContext\", param_2, param_2 >> 0x1f, extraout_ECX);\n    fcn.004069c7(arg_8h_00, param_2);\n    sub.VCRUNTIME140.dll_memset(&lpFilename, 0, 0x208);\n    sub.VCRUNTIME140.dll_memset(&lpApplicationName, 0, 0x208);\n    sub.VCRUNTIME140.dll_memset(&lpCommandLine, 0, 0x208);\n    var_9b0h = 0x44;\n    var_968h = 0;\n    var_964h = 0;\n    uStack2404 = 0;\n    uStack2400 = 0;\n    sub.VCRUNTIME140.dll_memset(&var_9ach, 0, 0x40);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, &lpFilename, 0x104);\n    uVar3 = (*_sym.imp.VCRUNTIME140.dll_wcsrchr)(&lpFilename, 0x5c);\n    pcVar1 = _sym.imp.api_ms_win_crt_string_l1_1_0.dll_wcsnlen;\n    iVar4 = (*_sym.imp.api_ms_win_crt_string_l1_1_0.dll_wcsnlen)(uVar3, 0x104);\n    iVar5 = (*pcVar1)(&lpFilename, 0x104);\n    (*_sym.imp.api_ms_win_crt_string_l1_1_0.dll_wcsncpy_s)(&lpApplicationName, 0x104, &lpFilename, iVar5 - iVar4);\n    (*_sym.imp.api_ms_win_crt_string_l1_1_0.dll_wcscat_s)(&lpApplicationName, 0x104, L\"\\\\msouc.exe\");\n    if (var_944h != 0) {\n        uVar3 = (*pcVar1)(var_944h, 0x104);\n        (*_sym.imp.api_ms_win_crt_string_l1_1_0.dll_wcsncpy_s)(&lpCommandLine, 0x104, var_944h, uVar3);\n    }\n    (*_sym.imp.USER32.dll_AllowSetForegroundWindow)(0xffffffff);\n    arg_8h = &lpApplicationName;\n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                      (arg_8h, &lpCommandLine, 0, 0, 0, 0x4000000, 0, 0, &var_9b0h, &var_968h);\n    fcn.00401fd8(iVar4 != 0);\n    pcVar2 = _sym.imp.Mso30Win32Client.dll_Ordinal_612;\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (iVar4 == 0) {\n        (*_sym.imp.Mso30Win32Client.dll_Ordinal_612)(*0x41344c, 0x556ddf37, &lpCaption, 200);\n        iVar4 = (*_sym.imp.USER32.dll_FindWindowW)(L\"#32770\", &lpCaption);\n        if (iVar4 == 0) {\n            (*pcVar2)(*0x41344c, 0xb123ffd0, &lpText, 200);\n            (*_sym.imp.USER32.dll_MessageBoxW)(0, &lpText, &lpCaption, 0x10010);\n        }\n        else {\n            (*_sym.imp.USER32.dll_SetForegroundWindow)(iVar4);\n        }\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(var_964h);\n        (*pcVar1)(var_968h);\n    }\n    (*_sym.imp.Mso20Win32Client.dll_Ordinal_177)();\n    fcn.00409d37(arg_8h);\n    return;\n}\n",
        "token_count": 1154
    },
    "00405062": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405062(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x24d0) != 0) {\n        iVar1 = (*_sym.imp.UxTheme.dll_CloseThemeData)(*(param_1 + 0x24d0));\n        if (iVar1 != 0) {\n            (*_sym.imp.Mso20Win32Client.dll_Ordinal_1121)\n                      (0x39776a66, 0x4b8, 0x32, L\"System Error: CloseThemeData failed\");\n            return 0;\n        }\n    }\n    *(param_1 + 0x24d0) = 0;\n    iVar1 = (*_sym.imp.UxTheme.dll_OpenThemeData)(*(param_1 + 0xc), L\"Tooltip\");\n    *(param_1 + 0x24d0) = iVar1;\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.UxTheme.dll_GetThemeColor)(iVar1, 1, 1, 0xedb, param_1 + 0x24dc);\n        if (iVar1 != 0) {\n            uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x17);\n            *(param_1 + 0x24dc) = uVar2;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 317
    },
    "004060b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004060b1(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint in_stack_fffffc30;\n    uint lpData;\n    uint var_3c4h;\n    uint var_3c0h;\n    uint var_3bch;\n    uint var_2a8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    if (*(in_ECX + 0x24a0) == arg_8h) {\n        sub.VCRUNTIME140.dll_memset(&lpData, 0, 0x3bc);\n        var_3c4h = *(in_ECX + 0xc);\n        var_2a8h._0_2_ = 0;\n        lpData = 0x3bc;\n        var_3c0h = 4;\n        var_3bch = 0x10;\n        iVar2 = (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &lpData);\n        if (iVar2 == 0) {\n            (*_sym.imp.Mso20Win32Client.dll_Ordinal_1121)\n                      (0x396c6778, 0x4b8, 0x32, L\"System Error: Shell_NotifyIcon failed\");\n        }\n        else {\n            iVar2 = *(in_ECX + 0x24a4);\n            *(in_ECX + 0x24a0) = iVar2;\n            *(in_ECX + 0x24a4) = 5;\n            if ((iVar2 != 5) && (cVar1 = fcn.00404053(iVar2),  cVar1 == '\\0')) {\n                *(in_ECX + 0x24a0) = 5;\n            }\n        }\n    }\n    else if (*(in_ECX + 0x24a4) == arg_8h) {\n        *(in_ECX + 0x24a4) = 5;\n    }\n    fcn.00409d37(in_stack_fffffc30);\n    return;\n}\n",
        "token_count": 497
    },
    "00406a42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a42(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    cVar1 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_1510)(0x8d054f, 0x4b8, 0x32);\n    if (cVar1 != '\\0') {\n        var_8h = &arg_10h;\n        var_4h = &arg_14h;\n        var_ch = 0x40d518;\n        (*_sym.imp.Mso20Win32Client.dll_Ordinal_635)\n                  (0x8d054f, 0x4b8, 0x32, L\"Suppressing background sync notification for document.\", &var_ch);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00406c0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406c0e(uint *arg_8h, ushort *arg_ch)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *in_ECX;\n    int32_t *in_EDX;\n    \n    puVar3 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_951)(0x58, 1);\n    if (puVar3 == NULL) {\n        puVar3 = NULL;\n    }\n    else {\n        iVar2 = *in_EDX;\n        uVar1 = *arg_ch;\n        *puVar3 = 0x40d424;\n        puVar3[0x12] = *arg_8h;\n        puVar3[0x13] = arg_8h[1];\n        *(puVar3 + 0x14) = uVar1;\n        if (iVar2 == 0) {\n            (*_sym.imp.Mso20Win32Client.dll_Ordinal_2055)(0x1404252, 0);\n        }\n        (*_sym.imp.api_ms_win_crt_string_l1_1_0.dll_strncpy_s)(puVar3 + 1, 0x41, iVar2, 0xffffffff);\n    }\n    *in_ECX = puVar3;\n    return;\n}\n",
        "token_count": 288
    },
    "00406c7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406c7b(uchar *arg_8h, ushort *arg_ch)\n\n{\n    ushort uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    int32_t *in_EDX;\n    \n    puVar2 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_951)(0x48, 1);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        iVar3 = *in_EDX;\n        uVar1 = *arg_ch;\n        *puVar2 = 0x40d3e8;\n        *(puVar2 + 0x45) = *arg_8h;\n        *(puVar2 + 0x46) = uVar1;\n        if (iVar3 == 0) {\n            iVar3 = (*_sym.imp.Mso20Win32Client.dll_Ordinal_2055)(0x1404252, 0);\n        }\n        (*_sym.imp.api_ms_win_crt_string_l1_1_0.dll_strncpy_s)(puVar2 + 1, 0x41, iVar3, 0xffffffff);\n    }\n    *in_ECX = puVar2;\n    return;\n}\n",
        "token_count": 279
    },
    "00407146": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00407146(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint *arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uchar uVar3;\n    uint16_t uVar4;\n    \n    uVar3 = 0;\n    *(in_ECX + 0x1b08) = arg_24h;\n    *(in_ECX + 0x15e0) = arg_8h;\n    *(in_ECX + 0x15ec) = arg_ch;\n    *(in_ECX + 0x15e4) = arg_10h;\n    *(in_ECX + 0x1b10) = 0;\n    *(in_ECX + 0x15e8) = 0;\n    *(in_ECX + 0x1a88) = 0;\n    *(in_ECX + 0x1a84) = 0;\n    sub.VCRUNTIME140.dll_memset(in_ECX + 0x1a8c, 0, 0x70);\n    sub.VCRUNTIME140.dll_memset();\n    sub.VCRUNTIME140.dll_memset(in_ECX + 0xaf0, 0, 0xaf0);\n    *(in_ECX + 0x15f0) = *arg_1ch;\n    *(in_ECX + 0x15f4) = arg_1ch[0x826] + arg_1ch[0x413];\n    *(in_ECX + 0x15f8) = *(arg_1ch + 0x209d);\n    *(in_ECX + 0x15f9) = *(arg_1ch + 0x209e);\n    *(in_ECX + 0x1b15) = *(arg_1ch + 0x827);\n    *(in_ECX + 0x1b00) = arg_14h;\n    *(in_ECX + 0x1b04) = arg_18h;\n    *(in_ECX + 0x1b12) = arg_20h;\n    *(in_ECX + 0x1b11) = 0;\n    *(in_ECX + 0x15fa) = 0;\n    *(in_ECX + 0x183e) = 0;\n    *(in_ECX + 0x1afc) = 0;\n    *(in_ECX + 0x1b0c) = 5;\n    *(in_ECX + 0x1b18) = arg_2ch;\n    uVar1 = fcn.00407449();\n    iVar2 = (*_sym.imp.Mso30Win32Client.dll_Ordinal_442)(uVar1);\n    uVar4 = uVar1 & 0x3ff;\n    *(in_ECX + 0x1b13) = iVar2 != 0;\n    if (((uVar4 == 0x11) || (uVar4 == 0x12)) || (uVar4 == 4)) {\n        uVar3 = 1;\n    }\n    *(in_ECX + 0x1b14) = uVar3;\n    return;\n}\n",
        "token_count": 750
    },
    "004092f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004092f1(uint arg_8h)\n\n{\n    int32_t *in_ECX;\n    int32_t iVar1;\n    \n    iVar1 = *in_ECX + 1;\n    do {\n        fcn.00409348();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    if (in_ECX[3] == 0) {\n        iVar1 = fcn.0040197a(0);\n        in_ECX[3] = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            in_ECX[4] = iVar1;\n        }\n    }\n    else if (arg_8h != '\\0') {\n        fcn.00409258();\n    }\n    return in_ECX[3];\n}\n",
        "token_count": 191
    },
    "00409565": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409565(uint n)\n\n{\n    int32_t in_ECX;\n    uint s1;\n    \n    fcn.004095b8();\n    sub.VCRUNTIME140.dll_memcpy(in_ECX + 8);\n    fcn.00409625(in_ECX);\n    fcn.0040965b();\n    fcn.0040965b();\n    return;\n}\n",
        "token_count": 86
    },
    "00409821": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409821(int32_t arg_8h)\n\n{\n    bool bVar1;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    \n    if (arg_8h != 0) {\n        if ((in_ECX != 0) && (in_EDX != 0)) {\n            if ((in_ECX < in_EDX + arg_8h) && (in_EDX < in_ECX + arg_8h)) {\n                bVar1 = true;\n            }\n            else {\n                bVar1 = false;\n            }\n            if (!bVar1) goto code_r0x00409857;\n        }\n        *0x1 = 1;\n    }\ncode_r0x00409857:\n    sub.VCRUNTIME140.dll_memcpy();\n    return;\n}\n",
        "token_count": 178
    },
    "0040ad4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ad4c(int32_t *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if ((0xd < *(*0x40003c + 0x400074)) && (*(*0x40003c + 0x4000e0) != 0)) {\n        iVar2 = *0x40003c + 0x400018 + *(*0x40003c + 0x400014);\n        uVar1 = *(*(*0x40003c + 0x4000e0) + 0x40000c);\n        uVar3 = 0;\n        if (*(*0x40003c + 0x400006) != 0) {\n            do {\n                if ((*(iVar2 + 0xc) <= uVar1) && (uVar1 < *(iVar2 + 0xc) + *(iVar2 + 8))) {\n                    *arg_8h = *(iVar2 + 8);\n                    *arg_ch = *(iVar2 + 0x24);\n                    return *(iVar2 + 0xc) + 0x400000;\n                }\n                uVar3 = uVar3 + 1;\n                iVar2 = iVar2 + 0x28;\n            } while (uVar3 < *(*0x40003c + 0x400006));\n        }\n    }\n    return 0;\n}\n",
        "token_count": 326
    },
    "004012e7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012e7(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t in_ECX;\n    uint32_t uVar2;\n    uint32_t in_EDX;\n    \n    if ((in_EDX <= 0xffffffff / arg_8h) &&\n       ((uVar2 = in_ECX,  in_EDX * arg_8h < 0x1000 ||\n        (((((in_ECX & 0x1f) == 0 && (uVar2 = *(in_ECX - 4),  uVar2 < in_ECX)) && (3 < in_ECX - uVar2)) &&\n         (in_ECX - uVar2 < 0x24)))))) {\n        (*_sym.imp.api_ms_win_crt_heap_l1_1_0.dll_free)(uVar2);\n        return;\n    }\n    (*_sym.imp.api_ms_win_crt_runtime_l1_1_0.dll__invalid_parameter_noinfo_noreturn)();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 241
    },
    "00402054": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00402054(void)\n\n{\n    uint *arg_8h;\n    uint var_10ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    arg_8h = &var_108h;\n    (*_sym.imp.Mso20Win32Client.dll_Ordinal_955)\n              (0x41328c, \"Microsoft_Office_16_MsoSync_Running\", arg_8h, 0x104, &var_10ch, 0, 0x1000a);\n    if ((*0x41328c == 0) ||\n       ((*_sym.imp.Mso20Win32Client.dll_Ordinal_955)\n                  (0x413444, \"Microsoft_Office_16_MsoSync_Closing\", &var_108h, 0x104, &var_10ch, 0, 0x1000a), \n       *0x413444 == 0)) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    fcn.00409d37(arg_8h);\n    return;\n}\n",
        "token_count": 257
    },
    "00405ec4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_dh\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Removing unreachable block (ram,0x00405fd3)\n\nvoid fcn.00405ec4(void)\n\n{\n    uint *puVar1;\n    code **ppcVar2;\n    int32_t *piVar3;\n    int64_t iVar4;\n    char cVar5;\n    int32_t extraout_ECX;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBP;\n    ulong uVar8;\n    int64_t iVar9;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    fcn.0040b17f(0x2c);\n    cVar5 = (**(**(extraout_ECX + 0x2514) + 0x60))(unaff_EBP + -0x30);\n    if ((cVar5 != '\\0') && ((*(unaff_EBP + -0x30) | *(unaff_EBP + -0x2c)) != 0)) {\n        uVar8 = fcn.004098e3();\n        uVar7 = ((uVar8 >> 0x20) - *(unaff_EBP + -0x2c)) - (uVar8 < *(unaff_EBP + -0x30));\n        if ((200 < uVar7) && ((0xc9 < uVar7 || (0x2a69bfff < uVar8 - *(unaff_EBP + -0x30))))) {\n            *(unaff_EBP + -0x1c) = 0;\n            *(unaff_EBP + -4) = 0;\n            (**(**(extraout_ECX + 0x2514) + 0x44))(unaff_EBP + -0x1c);\n            if (*(unaff_EBP + -0x1c) == NULL) {\n                (*_sym.imp.Mso20Win32Client.dll_Ordinal_1360)(0x63376337);\n            }\n            else {\n                *(unaff_EBP + -0x18) = 0;\n                *(unaff_EBP + -4) = 1;\n                (**(**(unaff_EBP + -0x1c) + 0x1c))(unaff_EBP + -0x18);\n                piVar6 = *(unaff_EBP + -0x18);\n                if (piVar6 != NULL) {\n                    *(unaff_EBP + -0x14) = 0;\n                    *(unaff_EBP + -4) = 2;\n                    while (cVar5 = (**(*piVar6 + 0xc))(unaff_EBP + -0x14),  cVar5 != '\\0') {\n                        puVar1 = *(unaff_EBP + -0x14);\n                        if (puVar1 == NULL) {\n                            (*_sym.imp.Mso20Win32Client.dll_Ordinal_1360)(0x63376339);\ncode_r0x0040606b:\n                            *(unaff_EBP + -4) = 1;\n                            piVar6 = *(unaff_EBP + -0x14);\n                            if (piVar6 != NULL) {\n                                (**(*piVar6 + 8))(piVar6);\n                            }\n                            goto code_r0x0040607c;\n                        }\n                        ppcVar2 = *puVar1;\n                        *(unaff_EBP + -0x20) = 0;\n                        (**ppcVar2)(puVar1, 0x40d344, unaff_EBP + -0x20);\n                        piVar6 = *(unaff_EBP + -0x20);\n                        *(unaff_EBP + -0x24) = piVar6;\n                        *(unaff_EBP + -4) = 3;\n                        if (piVar6 == NULL) {\n                            (*_sym.imp.Mso20Win32Client.dll_Ordinal_1360)(0x63376361);\n                            *(unaff_EBP + -0xd) = 0;\ncode_r0x0040605a:\n                            *(unaff_EBP + -4) = 2;\n                            if (piVar6 != NULL) {\n                                (**(*piVar6 + 8))(piVar6);\n                            }\n                            goto code_r0x0040606b;\n                        }\n                        (**(*piVar6 + 0x98))(unaff_EBP + -0x38);\n                        iVar4 = *(unaff_EBP + -0x38);\n                        iVar9 = fcn.004098e3();\n                        if (iVar9 - iVar4 < 0x324a9a70000) {\n                            *(unaff_EBP + -0xd) = 1;\n                            goto code_r0x0040605a;\n                        }\n                        piVar3 = *(unaff_EBP + -0x14);\n                        *(unaff_EBP + -0x14) = 0;\n                        if (piVar3 != NULL) {\n                            (**(*piVar3 + 8))(piVar3);\n                        }\n                        *(unaff_EBP + -4) = 2;\n                        (**(*piVar6 + 8))(piVar6);\n                        piVar6 = *(unaff_EBP + -0x18);\n                    }\n                    *(unaff_EBP + -4) = 1;\n                    piVar6 = *(unaff_EBP + -0x14);\n                    if (piVar6 != NULL) {\n                        (**(*piVar6 + 8))(piVar6);\n                    }\n                    *(unaff_EBP + -4) = 0;\n                    piVar6 = *(unaff_EBP + -0x18);\n                    if (piVar6 != NULL) {\n                        (**(*piVar6 + 8))(piVar6);\n                    }\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    piVar6 = *(unaff_EBP + -0x1c);\n                    if (piVar6 != NULL) {\n                        (**(*piVar6 + 8))(piVar6);\n                    }\n                    goto code_r0x0040603e;\n                }\n                (*_sym.imp.Mso20Win32Client.dll_Ordinal_1360)(0x63376338);\ncode_r0x0040607c:\n                *(unaff_EBP + -4) = 0;\n                piVar6 = *(unaff_EBP + -0x18);\n                if (piVar6 != NULL) {\n                    (**(*piVar6 + 8))(piVar6);\n                }\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            piVar6 = *(unaff_EBP + -0x1c);\n            if (piVar6 != NULL) {\n                (**(*piVar6 + 8))(piVar6);\n            }\n        }\n    }\ncode_r0x0040603e:\n    fcn.0040b15f();\n    return;\n}\n",
        "token_count": 1596
    },
    "00407287": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407287(int32_t arg_8h)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    ushort *in_ECX;\n    ushort *noname_0;\n    ushort *noname_0_00;\n    uint uVar3;\n    ushort *puVar4;\n    ushort *arg_8h_00;\n    uint var_19ch;\n    uint32_t var_8h;\n    \n    var_8h = *0x4101e0 ^ &stack0xfffffffc;\n    fcn.004087dd(arg_8h + 4, arg_8h + 0x1050);\n    pcVar2 = _sym.imp.Mso30Win32Client.dll_Ordinal_612;\n    *in_ECX = 0;\n    in_ECX[0x578] = 0;\n    arg_8h_00 = in_ECX;\n    (*pcVar2)(*(in_ECX + 0xaf2), 0x556ddf37);\n    in_ECX[200] = 0;\n    in_ECX[0x640] = 0;\n    if (*(in_ECX + 0xafc) == '\\0') {\n        if (*(in_ECX + 0x15f9) == '\\0') {\n            bVar1 = true;\n            if (*(in_ECX + 0xaf8) != 0) {\n                uVar3 = 0x71912d1f;\n                if (*(in_ECX + 0xaf8) == 1) {\n                    uVar3 = 0x6317d9f;\n                }\n                (*pcVar2)(*(in_ECX + 0xaf2), uVar3, &var_19ch, 200);\n                arg_8h_00 = noname_0;\n                fcn.00407693(noname_0, in_ECX + 0x640);\n            }\n            in_ECX[400] = 0;\n            in_ECX[0x708] = 0;\n            if (*(in_ECX + 0xafa) != 0) {\n                uVar3 = 0xd8be5633;\n                if (*(in_ECX + 0xafa) == 1) {\n                    uVar3 = 0x9f9345e5;\n                }\n                (*pcVar2)(*(in_ECX + 0xaf2), uVar3, &var_19ch, 200);\n                arg_8h_00 = noname_0_00;\n                fcn.00407693(noname_0_00, in_ECX + 0x708);\n            }\n            in_ECX[600] = 0;\n            in_ECX[2000] = 0;\n            if ((*(in_ECX + 0xaf8) != 0) || (*(in_ECX + 0xafa) != 0)) {\n                bVar1 = false;\n            }\n            if (bVar1) {\n                (*pcVar2)(*(in_ECX + 0xaf2), 0x1cb1d09f, in_ECX + 600, 200);\n            }\n            puVar4 = in_ECX + 800;\n            *puVar4 = 0;\n            in_ECX[0x898] = 0;\n            if (*(in_ECX + 0x1b15) == '\\0') goto code_r0x00407429;\n            uVar3 = 0xdd018bf9;\n        }\n        else {\n            puVar4 = in_ECX + 0x4b0;\n            uVar3 = 0xff1aaaf5;\n        }\n    }\n    else {\n        puVar4 = in_ECX + 1000;\n        uVar3 = 0x76d47b04;\n    }\n    (*pcVar2)(*(in_ECX + 0xaf2), uVar3, puVar4, 200);\ncode_r0x00407429:\n    fcn.004077cd(*(in_ECX + 0xaf0));\n    fcn.00409d37(arg_8h_00);\n    return;\n}\n",
        "token_count": 898
    },
    "00409867": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409867(uint lpSystemTime)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t lpFileTime;\n    uint32_t var_8h;\n    \n    (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)();\n    (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(lpSystemTime, &var_14h);\n    if ((var_8h < var_10h) || ((var_8h <= var_10h && (lpFileTime <= var_14h)))) {\n        iVar3 = var_14h - lpFileTime;\n        iVar2 = (var_10h - var_8h) - (var_14h < lpFileTime);\n    }\n    else {\n        iVar3 = lpFileTime - var_14h;\n        iVar2 = (var_8h - var_10h) - (lpFileTime < var_14h);\n    }\n    uVar4 = fcn.0040b275(iVar3, iVar2, 10000, 0);\n    uVar1 = uVar4;\n    if (uVar4 >> 0x20 != 0) {\n        uVar1 = 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 306
    },
    "00409d44": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00409d44(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t lpPerformanceCount;\n    uint32_t var_ch;\n    uint32_t lpSystemTimeAsFileTime;\n    uint32_t var_4h;\n    \n    if ((*0x4101e0 == 0) || (*0x4101e0 == 0xbb40e64e)) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(1, 0, 0);\n        (*_sym.imp.KERNEL32.dll_HeapSetInformation)(uVar1);\n        (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&lpSystemTimeAsFileTime);\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&lpPerformanceCount);\n        uVar2 = var_4h ^ lpSystemTimeAsFileTime ^ uVar2 ^ uVar3 ^ uVar4 ^ var_ch ^ lpPerformanceCount;\n        *0x4101e0 = 0xbb40e64e;\n        if (uVar2 != 0) {\n            *0x4101e0 = uVar2;\n        }\n        sub.KERNEL32.dll_WerRegisterMemoryBlock(0x4101e0, 4);\n        *0x4101e4 = ~*0x4101e0;\n    }\n    return;\n}\n",
        "token_count": 370
    },
    "00403562": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403562(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x14) = 0x3bc;\n    *(in_ECX + 0x18) = *(in_ECX + 0xc);\n    *(in_ECX + 0x1c) = 4;\n    *(in_ECX + 0x20) = 7;\n    *(in_ECX + 0x24) = 0x401;\n    iVar1 = fcn.00403457(arg_8h);\n    *(in_ECX + 0x28) = iVar1;\n    if (iVar1 == 0) {\n        (*_sym.imp.Mso20Win32Client.dll_Ordinal_1360)(0x396d7432);\n    }\n    else {\n        fcn.004010e6(0x80);\n        iVar1 = (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(0, in_ECX + 0x14);\n        if (iVar1 != 0) {\n            *0x41329c = (*_sym.imp.USER32.dll_RegisterWindowMessageW)(L\"TaskbarCreated\");\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 284
    },
    "0040619e": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040619e(int32_t param_1)\n\n{\n    char cVar1;\n    \n    cVar1 = (**(**(param_1 + 0x2514) + 0x50))();\n    fcn.004061bf(1 - (cVar1 != '\\0'));\n    return;\n}\n",
        "token_count": 73
    },
    "004063fb": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063fb(int32_t *arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x40b314;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (**(*arg_8h + 0x50))();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 116
    },
    "00401290": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401290(uint32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t extraout_ECX;\n    \n    if (param_1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (param_1 <= 0xffffffff / param_2) goto code_r0x004012ac;\n        do {\n            while( true ) {\n                (*_sym.imp.MSVCP140.dll_void___cdecl_std::_Xbad_alloc_void_)();\n                param_1 = extraout_ECX;\ncode_r0x004012ac:\n                param_1 = param_1 * param_2;\n                if (param_1 < 0x1000) break;\n                if ((param_1 < param_1 + 0x23) &&\n                   (iVar2 = (*_sym.imp.api_ms_win_crt_heap_l1_1_0.dll_malloc)(param_1 + 0x23),  iVar2 != 0)) {\n                    uVar1 = iVar2 + 0x23U & 0xffffffe0;\n                    *(uVar1 - 4) = iVar2;\n                    return uVar1;\n                }\n            }\n            uVar1 = (*_sym.imp.api_ms_win_crt_heap_l1_1_0.dll_malloc)(param_1);\n        } while (uVar1 == 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 325
    },
    "00405e71": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405e71(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    int32_t *var_4h;\n    \n    ppiVar2 = arg_8h;\n    iVar3 = 0;\n    piVar1 = *arg_8h;\n    arg_8h = *piVar1;\n    var_4h = in_ECX;\n    if (arg_8h != piVar1) {\n        do {\n            if ((in_ECX[0x92a] & arg_8h[8]) == 0) {\n                fcn.0040669e(&var_4h, arg_8h);\n                iVar3 = iVar3 + 1;\n                arg_8h = var_4h;\n            }\n            else {\n                fcn.00406664();\n            }\n        } while (arg_8h != *ppiVar2);\n    }\n    return iVar3;\n}\n",
        "token_count": 236
    },
    "004064e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004064e0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00406a9c(&var_8h, arg_8h);\n    iVar1 = 0;\n    while (var_8h != var_4h) {\n        iVar1 = iVar1 + 1;\n        fcn.00406664();\n    }\n    return iVar1;\n}\n",
        "token_count": 113
    },
    "0040197a": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040197a(uint dwFlags)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int16_t *in_ECX;\n    \n    if (*in_ECX == 0) {\n        pcVar1 = swi(0x29);\n        (*pcVar1)();\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)();\n    if (iVar2 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 == 0x57) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"kernel32.dll\", \"AddDllDirectory\");\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar4);\n            if (iVar3 == 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)();\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 227
    },
    "00402c84": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402cf9)\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Removing unreachable block (ram,0x00402d98)\n// WARNING: Removing unreachable block (ram,0x00402d9c)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00402c84(void)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_1090h;\n    uint lpFileName;\n    uint var_1088h;\n    uint var_1084h;\n    uint var_1080h;\n    uint uStackY84;\n    uint *puStackY80;\n    uint uStackY76;\n    uint *puStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint lpFileInformation;\n    uint uStackY52;\n    uint uStackY48;\n    uint uStackY44;\n    uint uStackY40;\n    uint *arg_8h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x40b3f8;\n    var_ch = *in_FS_OFFSET;\n    fcn.0040b2dd();\n    *in_FS_OFFSET = &fcn.00402c84::var_ch;\n    var_1080h._0_2_ = 0;\n    var_4h = 1;\n    uStackY40 = 0;\n    uStackY44 = 0;\n    uStackY48 = 0x801c;\n    uStackY52 = 0;\n    lpFileInformation = 0x402d1c;\n    arg_8h = &fcn.00402c84::var_1080h;\n    iVar1 = (*_sym.imp.SHELL32.dll_SHGetFolderPathW)();\n    if (-1 < iVar1) {\n        uStackY60 = 0x402d31;\n        lpFileInformation = extraout_ECX;\n        fcn.00409475();\n        uStackY64 = 0x402d42;\n        fcn.00409475();\n        uStackY68 = 0x402d53;\n        fcn.00409475();\n        puStackY72 = 0x402d64;\n        fcn.00409475();\n        puVar2 = &fcn.00402c84::lpFileInformation;\n        for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        puStackY72 = &fcn.00402c84::lpFileInformation;\n        uStackY76 = 0;\n        uStackY84 = 0x402d7f;\n        puStackY80 = &fcn.00402c84::var_1080h;\n        (*_sym.imp.KERNEL32.dll_GetFileAttributesExW)();\n    }\n    *in_FS_OFFSET = var_ch;\n    uStackY40 = 0x402dbe;\n    fcn.00409d37(arg_8h);\n    return;\n}\n",
        "token_count": 732
    },
    "00409278": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409278(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t var_210h;\n    uint var_20ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4101e0 ^ &stack0xfffffffc;\n    var_210h = 0x208;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegGetValueW)\n                      (0x80000002, L\"Software\\\\Microsoft\\\\Office\\\\16.0\\\\Common\\\\FilesPaths\", param_1, 2, 0, &var_20ch, \n                       &var_210h);\n    if ((iVar1 == 0) && (3 < var_210h)) {\n        fcn.004090f5();\n    }\n    fcn.00409d37(param_1);\n    return;\n}\n",
        "token_count": 192
    },
    "004093c6": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nvoid fcn.004093c6(void)\n\n{\n    int32_t iVar1;\n    char16_t *arg_8h;\n    uint32_t uStack532;\n    uchar auStack528 [520];\n    uint32_t uStack8;\n    \n    uStack8 = 0x4093ce;\n    iVar1 = fcn.00409258();\n    if (iVar1 == 0) {\n        uStack8 = 0x4093d9;\n        iVar1 = fcn.004091b5();\n        if (iVar1 == 0) {\n            uStack8 = *0x4101e0 ^ &stack0xfffffffc;\n            uStack532 = 0x208;\n            arg_8h = L\"mso.dll\";\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegGetValueW)\n                              (0x80000002, L\"Software\\\\Microsoft\\\\Office\\\\16.0\\\\Common\\\\FilesPaths\", L\"mso.dll\", 2, 0, \n                               &stack0xfffffdf0, &stack0xfffffdec);\n            if ((iVar1 == 0) && (3 < uStack532)) {\n                fcn.004090f5();\n            }\n            fcn.00409d37(arg_8h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 286
    }
}