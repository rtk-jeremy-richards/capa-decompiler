{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "10002aa0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nint32_t fcn.10002aa0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x100241fb;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x10034058 ^ &stack0xfffffff0;\n    *in_FS_OFFSET = &piStack12;\n    iVar3 = 0;\n    if (*0x1004f580 != 0) {\n        if (param_1 == 0) {\n            iVar2 = fcn.100092cc(0x54);\n            uStack4 = 0;\n            if (iVar2 == 0) {\n                param_1 = 0;\n            }\n            else {\n                param_1 = fcn.10002290(iVar2, uVar1);\n            }\n        }\n        *(param_1 + 0x48) = 0;\n        *(param_1 + 0x44) = 0xffffffff;\n        *(param_1 + 0x4c) = \"many s\";\n        *(param_1 + 0x50) = unaff_EDI;\n        if (unaff_EDI < 0) {\n            iVar3 = (~(*0x1004f584 >> 4) & 1) + unaff_EDI;\n        }\n        *(param_1 + 0x40) = iVar3;\n        *(param_1 + 0x3c) = iVar3;\n        *in_FS_OFFSET = unaff_ESI;\n        return param_1;\n    }\n    *in_FS_OFFSET = piStack12;\n    return 0;\n}\n",
        "token_count": 424
    },
    "10005660": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __thiscall fcn.10005660(int32_t param_1, uint32_t *param_2)\n\n{\n    uint8_t *puVar1;\n    char *pcVar2;\n    uchar uVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t **in_FS_OFFSET;\n    uint8_t *unaff_retaddr;\n    uint uVar11;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x10024059;\n    piStack12 = *in_FS_OFFSET;\n    uVar7 = *0x10034058 ^ &stack0xffffffbc;\n    *in_FS_OFFSET = &piStack12;\n    uVar3 = *(param_1 + 0xa8);\n    puVar1 = param_1 + 0xa8;\n    fcn.10002d20(uVar7);\n    // switch table (74 cases) at 0x10005ba0\n    switch(uVar3) {\n    case 0x2e:\n        uVar7 = *param_2;\n        if ((uVar7 & 0x10) == 0) {\n            uVar7 = 2 - ((uVar7 & 1) != 0);\n        }\n        else {\n            uVar7 = 10 - ((uVar7 & 1) != 0);\n        }\n        break;\n    default:\n        uVar7 = 0;\n        break;\n    case 0x44:\n        uVar7 = ((*param_2 & 0x10) != 0) * 8 + 8;\n        break;\n    case 0x53:\n        uVar7 = (*param_2 & 0x10 | 0xc) >> 1;\n        break;\n    case 0x57:\n        uVar7 = (*param_2 & 0x10 | 8) >> 1;\n        break;\n    case 0x5b:\n        if ((*puVar1 == 0x3a) && (*(param_1 + 0xac) == 1)) {\n            fcn.10004fb0(&uStack36);\n            uStack8 = 0;\n            uVar5 = *puVar1;\n            do {\n                uStack48 = uStack48 & 0xffffff00 | uVar5;\n                fcn.10006fb0(&uStack48);\n                fcn.10002d20();\n                uVar5 = *puVar1;\n                if (uVar5 == 0) break;\n            } while ((uVar5 != 0x5d) || (*(param_1 + 0xac) != 1));\n            fcn.10002d20();\n            uVar11 = 0x10;\n            uStack44 = fcn.100092cc(0x10);\n            uStack8._0_1_ = 1;\n            if (uStack44 != 0) {\n                fcn.10007640(uVar11, uStack44);\n            }\n            uStack8 = uStack8._1_3_ << 8;\n            uVar7 = fcn.100040f0();\n            uStack8 = 0xffffffff;\n            fcn.10001a20();\n            uStack48 = uVar7;\n        }\n        else {\n            uStack36 = CONCAT31(uStack36._1_3_, 0x5e);\n            uStack32 = 1;\n            uStack28 = 0;\n            uStack24 = 0;\n            iVar8 = fcn.10003140();\n            if (iVar8 == 0) {\n                uVar7 = 0x48;\n                uStack40 = fcn.100092cc(0x48);\n                uStack4 = 3;\n                if (uStack40 != 0) {\n                    uVar7 = 1;\n                    fcn.100049a0(uStack40, *param_2 & 0x10, 1);\n                }\n            }\n            else {\n                fcn.10002d20(uVar7);\n                uVar7 = 0x48;\n                uStack40 = fcn.100092cc(0x48);\n                uStack4 = 2;\n                if (uStack40 != 0) {\n                    uVar7 = 0;\n                    fcn.100049a0(uStack40, *param_2 & 0x10, 0);\n                }\n            }\n            uStack8 = 0xffffffff;\n            uStack48 = fcn.100040f0();\n            while (((*puVar1 != 0 || (*(param_1 + 0xac) != 1)) && ((*puVar1 != 0x5d || (*(param_1 + 0xac) != 1))))) {\n                uVar5 = *puVar1;\n                uStack44 = uStack44 & 0xffffff00 | uVar5;\n                if (*(param_1 + 0xac) == 1) {\n                    if (((((uVar5 != 0x2e) && (uVar5 != 0x77)) && (uVar5 != 0x57)) &&\n                        ((uVar5 != 0x73 && (uVar5 != 0x53)))) && ((uVar5 != 100 && (uVar5 != 0x44)))) {\n                        if (uVar5 == 0x5b) {\n                            uStack32 = 0;\n                            uStack28 = 0;\n                            uStack40 = CONCAT31(uStack40._1_3_, 0x3a);\n                            uStack36 = 1;\n                            iVar8 = fcn.10003140();\n                            if (iVar8 != 0) goto code_r0x1000593b;\n                        }\n                        goto code_r0x10005955;\n                    }\ncode_r0x1000593b:\n                    uVar7 = fcn.10005660(unaff_retaddr);\n                    fcn.10003160();\n                }\n                else {\ncode_r0x10005955:\n                    if (((*(param_1 + 0xb8) == '-') && (*(param_1 + 0xbc) == 1)) && (*(param_1 + 0xcc) == 0)) {\n                        fcn.10004a80(uStack44, uVar7);\n                        uVar7 = *(param_1 + 200);\n                        fcn.10004a80();\n                        fcn.10002d20();\n                        fcn.10002d20();\n                        fcn.10002d20();\n                    }\n                    else {\n                        uVar7 = uStack44;\n                        fcn.10004a80();\n                        fcn.10002d20();\n                    }\n                }\n            }\n            fcn.10002d20();\n            uVar7 = uStack48;\n            if ((*unaff_retaddr & 8) != 0) {\n                iVar8 = *(uStack48 + 0xc) / 2;\n                iVar10 = 0;\n                if (0 < iVar8) {\n                    do {\n                        cVar4 = *(*(uVar7 + 0x10) + iVar10 * 2);\n                        if ((cVar4 < '[') && ('@' < *(*(uVar7 + 0x10) + iVar10 * 2 + 1))) {\n                            if (cVar4 < 'A') {\n                                cVar4 = 'A';\n                            }\n                            uVar5 = fcn.10008dfe(cVar4);\n                            cVar4 = *(*(uVar7 + 0x10) + 1 + iVar10 * 2);\n                            unaff_retaddr = unaff_retaddr & 0xffffff00 | uVar5;\n                            if ('Z' < cVar4) {\n                                cVar4 = 'Z';\n                            }\n                            uVar6 = fcn.10008dfe(cVar4);\n                            pcVar2 = *(uVar7 + 0x10) + iVar10 * 2;\n                            uStack44 = uStack44 & 0xffffff00 | uVar6;\n                            if ((uVar5 < *pcVar2) || (pcVar2[1] < uVar6)) {\n                                fcn.10004a80(unaff_retaddr);\n                                fcn.10004a80(uStack48);\n                            }\n                        }\n                        cVar4 = *(*(uVar7 + 0x10) + iVar10 * 2);\n                        if ((cVar4 < '{') && ('`' < *(*(uVar7 + 0x10) + iVar10 * 2 + 1))) {\n                            if (cVar4 < 'a') {\n                                cVar4 = 'a';\n                            }\n                            uVar5 = fcn.10008f75(cVar4);\n                            cVar4 = *(*(uVar7 + 0x10) + 1 + iVar10 * 2);\n                            unaff_retaddr = unaff_retaddr & 0xffffff00 | uVar5;\n                            if ('z' < cVar4) {\n                                cVar4 = 'z';\n                            }\n                            uVar6 = fcn.10008f75(cVar4);\n                            pcVar2 = *(uVar7 + 0x10) + iVar10 * 2;\n                            uStack44 = uStack44 & 0xffffff00 | uVar6;\n                            if ((uVar5 < *pcVar2) || (pcVar2[1] < uVar6)) {\n                                fcn.10004a80(unaff_retaddr);\n                                fcn.10004a80();\n                            }\n                        }\n                        iVar10 = iVar10 + 1;\n                    } while (iVar10 < iVar8);\n                }\n                uVar7 = uStack48;\n                iVar8 = *(uStack48 + 0x20);\n                if (0 < iVar8) {\n                    iVar10 = 0;\n                    do {\n                        iVar9 = fcn.100083d7(*(*(uVar7 + 0x24) + iVar10));\n                        if (iVar9 != 0) {\n                            fcn.10008dfe(*(*(uVar7 + 0x24) + iVar10));\n                            iVar9 = fcn.10007850();\n                            if (iVar9 == 0) {\n                                uVar11 = fcn.10008dfe(*(*(uVar7 + 0x24) + iVar10));\n                                fcn.10004a80(uVar11);\n                            }\n                        }\n                        iVar9 = fcn.10008456(*(*(uVar7 + 0x24) + iVar10));\n                        if (iVar9 != 0) {\n                            fcn.10008f75(*(*(uVar7 + 0x24) + iVar10));\n                            iVar9 = fcn.10007850();\n                            if (iVar9 == 0) {\n                                iVar9 = *(*(uVar7 + 0x24) + iVar10);\n                                uVar11 = fcn.10008f75(iVar9);\n                                fcn.10004a80(iVar9, uVar11);\n                            }\n                        }\n                        iVar10 = iVar10 + 1;\n                    } while (iVar10 < iVar8);\n                }\n            }\n        }\n        goto code_r0x10005b8a;\n    case 100:\n        uVar7 = (*param_2 & 0x10 | 0xe) >> 1;\n        break;\n    case 0x73:\n        uVar7 = (*param_2 & 0x10 | 10) >> 1;\n        break;\n    case 0x77:\n        uVar7 = (*param_2 & 0x10 | 6) >> 1;\n    }\n    uStack48 = fcn.10003c50(uVar7);\ncode_r0x10005b8a:\n    *in_FS_OFFSET = piStack16;\n    return uStack48;\n}\n",
        "token_count": 2684
    },
    "10005c10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar * __thiscall fcn.10005c10(int32_t param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint unaff_EBX;\n    uint32_t uVar7;\n    char **ppcVar8;\n    int32_t iVar9;\n    uchar *unaff_EBP;\n    uchar *unaff_ESI;\n    int32_t unaff_EDI;\n    uint uVar10;\n    char **in_FS_OFFSET;\n    uchar *puVar11;\n    uint uStack92;\n    uchar *puVar12;\n    uint uStack84;\n    uint32_t uStack56;\n    uint uStack52;\n    char *pcStack48;\n    char *pcStack44;\n    uint uStack40;\n    char *pcStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint32_t uStack20;\n    char *pcStack16;\n    char **ppcStack12;\n    uint32_t *puStack8;\n    char **ppcStack4;\n    \n    ppcStack4 = 0xffffffff;\n    puStack8 = 0x10024412;\n    ppcStack12 = *in_FS_OFFSET;\n    uStack84._3_1_ = *0x10034058 >> 0x18 ^ &stack0xffffffb0 >> 0x18;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    fcn.10002d20();\n    if ((*(param_1 + 0xa8) != '?') || (*(param_1 + 0xac) != 1)) {\n        uStack92 = 0x100065e2;\n        pcStack36 = fcn.100092cc(0x1c);\n        ppcStack4 = 0x10;\n        uVar10 = 0;\n        if (pcStack36 == NULL) {\n            uStack52 = 0;\n            iVar4 = 0;\n        }\n        else {\n            uStack92 = pcStack36;\n            iVar4 = fcn.10004790();\n        }\n        ppcStack12 = 0xffffffff;\n        if (*(param_1 + 0x24) <= *(param_1 + 0x1c)) {\n            iVar9 = *(param_1 + 0x24) * 2;\n            if (iVar9 < 8) {\n                iVar9 = 8;\n            }\n            uVar6 = fcn.10008ff6(*(param_1 + 0x20), iVar9 * 4);\n            *(param_1 + 0x20) = uVar6;\n            *(param_1 + 0x18) = uVar6;\n            *(param_1 + 0x24) = iVar9;\n        }\n        *(*(param_1 + 0x20) + *(param_1 + 0x1c) * 4) = iVar4;\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) + 1;\n        *(param_1 + 8) = *(param_1 + 8) + 1;\n        uVar6 = *(param_1 + 8);\n        pcStack44 = fcn.100092cc(0x20);\n        ppcStack12 = 0x11;\n        if (pcStack44 != NULL) {\n            uVar10 = fcn.100079d0(pcStack44, uVar6, *ppcStack4 >> 4 & 1);\n        }\n        ppcStack12 = 0xffffffff;\n        if (*(param_1 + 0x24) <= *(param_1 + 0x1c)) {\n            iVar9 = *(param_1 + 0x24) * 2;\n            if (iVar9 < 8) {\n                iVar9 = 8;\n            }\n            uVar6 = fcn.10008ff6(*(param_1 + 0x20), iVar9 * 4);\n            *(param_1 + 0x20) = uVar6;\n            *(param_1 + 0x18) = uVar6;\n            *(param_1 + 0x24) = iVar9;\n        }\n        *(*(param_1 + 0x20) + *(param_1 + 0x1c) * 4) = uVar10;\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) + 1;\n        if (*(iVar4 + 0x14) <= *(iVar4 + 0xc)) {\n            iVar9 = *(iVar4 + 0x14) * 2;\n            if (iVar9 < 8) {\n                iVar9 = 8;\n            }\n            uVar6 = fcn.10008ff6(*(iVar4 + 0x10), iVar9 * 4);\n            *(iVar4 + 0x10) = uVar6;\n            *(iVar4 + 8) = uVar6;\n            *(iVar4 + 0x14) = iVar9;\n        }\n        *(*(iVar4 + 0x10) + *(iVar4 + 0xc) * 4) = uVar10;\n        *(iVar4 + 0xc) = *(iVar4 + 0xc) + 1;\n        uVar10 = fcn.10002dd0(*ppcStack4);\n        if (*(iVar4 + 0x14) <= *(iVar4 + 0xc)) {\n            iVar9 = *(iVar4 + 0x14) * 2;\n            if (iVar9 < 8) {\n                iVar9 = 8;\n            }\n            uVar6 = fcn.10008ff6(*(iVar4 + 0x10), iVar9 * 4);\n            *(iVar4 + 0x10) = uVar6;\n            *(iVar4 + 8) = uVar6;\n            *(iVar4 + 0x14) = iVar9;\n        }\n        *(*(iVar4 + 0x10) + *(iVar4 + 0xc) * 4) = uVar10;\n        *(iVar4 + 0xc) = *(iVar4 + 0xc) + 1;\n        pcStack48 = fcn.100092cc(0x20);\n        pcStack16 = 0x12;\n        if (pcStack48 == NULL) {\n            uVar10 = 0;\n        }\n        else {\n            uVar10 = fcn.100079d0(pcStack48, unaff_EBX, ~(*puStack8 >> 4) & 1);\n        }\n        puStack28 = 0xffffffff;\n        if (*(param_1 + 0x24) <= *(param_1 + 0x1c)) {\n            iVar9 = *(param_1 + 0x24) * 2;\n            if (iVar9 < 8) {\n                iVar9 = 8;\n            }\n            uVar6 = fcn.10008ff6(*(param_1 + 0x20), iVar9 * 4);\n            *(param_1 + 0x20) = uVar6;\n            *(param_1 + 0x18) = uVar6;\n            *(param_1 + 0x24) = iVar9;\n        }\n        *(*(param_1 + 0x20) + *(param_1 + 0x1c) * 4) = uVar10;\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) + 1;\n        if (*(iVar4 + 0x14) <= *(iVar4 + 0xc)) {\n            iVar9 = *(iVar4 + 0x14) * 2;\n            if (iVar9 < 8) {\n                iVar9 = 8;\n            }\n            uVar6 = fcn.10008ff6(*(iVar4 + 0x10), iVar9 * 4);\n            *(iVar4 + 0x10) = uVar6;\n            *(iVar4 + 8) = uVar6;\n            *(iVar4 + 0x14) = iVar9;\n        }\n        *(*(unaff_ESI + 0x10) + *(unaff_ESI + 0xc) * 4) = uVar10;\n        *(unaff_ESI + 0xc) = *(unaff_ESI + 0xc) + 1;\n        fcn.10007a60();\n        *(*(param_1 + 0x34) + unaff_EDI * 4) = unaff_ESI;\n        goto code_r0x10006846;\n    }\n    puVar12 = 0x10005c5f;\n    fcn.10002d20();\n    cVar1 = *(param_1 + 0xa8);\n    uVar7 = 0;\n    // switch table (9 cases) at 0x10006868\n    switch(cVar1) {\n    case '!':\n    case '=':\n        fcn.10002d20();\n        uStack92 = 0x10005c9e;\n        pcVar3 = fcn.100092cc(0xc);\n        ppcStack4 = NULL;\n        pcStack36 = pcVar3;\n        if (pcVar3 != NULL) {\n            uStack92 = 0x10005ccd;\n            fcn.10002dd0(*param_2 & 0xffffffef);\n            uStack92 = pcVar3;\n            fcn.10007970();\n        }\ncode_r0x10005cdb:\n        puStack28 = 0xffffffff;\n        unaff_ESI = fcn.100040f0();\n        break;\n    default:\n        while (cVar1 != '\\0') {\n            uStack92 = 0x100063ed;\n            iVar4 = fcn.100085da(*(param_1 + 0xa8));\n            if (iVar4 == 0) break;\n            fcn.10002d20();\n            cVar1 = *(param_1 + 0xa8);\n        }\n        if ((*(param_1 + 0xa8) < '0') || ('9' < *(param_1 + 0xa8))) {\n            uStack56 = *param_2;\ncode_r0x100064f2:\n            do {\n                if (((((*(param_1 + 0xa8) == '\\0') && (*(param_1 + 0xac) == 1)) ||\n                     (cVar1 = *(param_1 + 0xa8),  cVar1 == ':')) || (cVar1 == ')')) ||\n                   ((cVar1 == '(' && (*(param_1 + 0xac) == 1)))) goto code_r0x1000658d;\n                uVar5 = 0;\n    // switch table (71 cases) at 0x100068c0\n                switch(cVar1) {\n                case '-':\n                    fcn.10002d20();\n                    uVar7 = 1;\n                    goto code_r0x100064f2;\n                case 'G':\n                case 'g':\n                    uVar5 = 4;\n                    break;\n                case 'I':\n                case 'i':\n                    uVar5 = 8;\n                    break;\n                case 'M':\n                case 'm':\n                    uVar5 = 2;\n                    break;\n                case 'S':\n                case 's':\n                    uVar5 = 1;\n                }\n                if (uVar7 == 0) {\n                    uStack56 = uStack56 | uVar5;\n                    fcn.10002d20();\n                }\n                else {\n                    uStack56 = uStack56 & ~uVar5;\n                    fcn.10002d20();\n                }\n            } while( true );\n        }\n        uStack92 = 0x10006423;\n        fcn.10004fb0();\n        puStack8 = 0xe;\n        cVar1 = *(param_1 + 0xa8);\n        while ((cVar1 != '\\0' && (*(param_1 + 0xa8) != 0x29))) {\n            pcStack16 = pcStack16 & 0xffffff00 | *(param_1 + 0xa8);\n            fcn.10006fb0();\n            fcn.10002d20();\n            cVar1 = *(param_1 + 0xa8);\n        }\n        pcStack16 = uStack40;\n        if (uStack40 == NULL) {\n            pcStack16 = 0x10030adf;\n        }\n        fcn.10004b50();\n        pcStack16 = fcn.100092cc(0x20);\n        uStack24._0_1_ = 0xf;\n        if (pcStack16 != NULL) {\n            fcn.10007c00();\n        }\n        uStack24 = CONCAT31(uStack24._1_3_, 0xe);\ncode_r0x100064b9:\n        unaff_ESI = fcn.100040f0();\n        goto code_r0x100064c4;\n    case '\\'':\n        goto code_r0x10005d7f;\n    case '(':\n        uStack92 = 0x100061cc;\n        pcStack36 = fcn.100092cc(0x28);\n        ppcStack4 = 0xb;\n        if (pcStack36 != NULL) {\n            uStack92 = 0x100061e5;\n            fcn.10007c90();\n        }\n        ppcStack12 = 0xffffffff;\n        unaff_ESI = fcn.100040f0();\n        uStack40 = CONCAT31(uStack40._1_3_, 0x3f);\n        pcStack36 = 0x1;\n        uStack32 = 0;\n        puStack28 = NULL;\n        iVar4 = fcn.10003140();\n        ppcVar8 = ppcStack4;\n        if (iVar4 == 0) {\n            fcn.10002d20();\n            iVar4 = *(param_1 + 0xb0);\n            pcVar3 = fcn.100092cc(0xc);\n            ppcStack12 = 0xc;\n            pcStack44 = pcVar3;\n            if (pcVar3 != NULL) {\n                fcn.10002dd0(*ppcStack4);\n                uStack92 = pcVar3;\n                fcn.10007970();\n            }\n            ppcStack12 = 0xffffffff;\n            uVar10 = fcn.100040f0();\n            *(unaff_ESI + 0x1c) = uVar10;\n            iVar9 = *(param_1 + 0x90);\n            if (iVar9 == 0) {\n                iVar9 = 0x10030adf;\n            }\n            fcn.10006fb0(iVar9 + iVar4);\n            puVar12 = &stack0xffffffd4;\n            fcn.10004fb0(puVar12);\n            uStack20 = 0xd;\n            if (iVar4 < *(param_1 + 0xb0)) {\n                do {\n                    if (iVar4 < *(param_1 + 0x94)) {\n                        uVar2 = *(iVar4 + *(param_1 + 0x90));\n                    }\n                    else {\n                        uVar2 = 0;\n                    }\n                    puVar12 = &stack0xffffffb8;\n                    unaff_EBP = unaff_EBP & 0xffffff00 | uVar2;\n                    fcn.10006fb0(puVar12);\n                    iVar4 = iVar4 + 1;\n                } while (iVar4 < *(param_1 + 0xb0));\n            }\n            pcVar3 = pcStack36;\n            if (pcStack36 == NULL) {\n                pcVar3 = 0x10030adf;\n            }\n            iVar4 = fcn.10004b50();\n            unaff_ESI = unaff_EBP;\n            if ((iVar4 == 0) || (*pcVar3 != '\\0')) {\n                *(unaff_EBP + 4) = 0xffffffff;\n                fcn.10003160();\n                puVar12 = unaff_EBP;\n            }\n            else {\n                *(unaff_EBP + 4) = uStack52;\n                *(unaff_EBP + 0x1c) = 0;\n            }\n            fcn.10002d20(puVar12);\n            uStack20 = 0xffffffff;\n            fcn.10001a20();\n            ppcVar8 = ppcStack12;\n        }\n        else {\n            uVar10 = fcn.10005c10();\n            *(unaff_ESI + 0x1c) = uVar10;\n        }\n        ppcStack12 = *ppcVar8;\n        uVar10 = fcn.10003ae0(param_1, &stack0xfffffff4);\n        *(unaff_ESI + 0x20) = uVar10;\n        if (*(param_1 + 0xa8) == '|') {\n            fcn.10002d20();\n            uVar10 = fcn.10002dd0(*ppcVar8);\n            *(unaff_ESI + 0x24) = uVar10;\n        }\n        else {\n            *(unaff_ESI + 0x24) = 0;\n        }\n        break;\n    case '<':\n        if (*(param_1 + 0xb8) == '!') {\n            uVar7 = 1;\n        }\n        else if (*(param_1 + 0xb8) != '=') goto code_r0x10005d6f;\n        fcn.10002d20();\n        fcn.10002d20();\n        puVar12 = 0xc;\n        uStack92 = 0x10005d19;\n        pcVar3 = fcn.100092cc(0xc);\n        ppcStack4 = 0x1;\n        pcStack36 = pcVar3;\n        if (pcVar3 != NULL) {\n            pcStack44 = uVar7 == 0;\n            puVar12 = *param_2 | 0x10;\n            uStack92 = 0x10005d46;\n            fcn.10002dd0(puVar12);\n            uStack92 = pcVar3;\n            fcn.10007970();\n        }\n        puStack28 = 0xffffffff;\n        unaff_ESI = fcn.100040f0();\n        if (unaff_ESI != NULL) break;\n    case 'P':\ncode_r0x10005d6f:\n        if (*(param_1 + 0xa8) == 'P') {\n            fcn.10002d20();\n        }\n        goto code_r0x10005d7f;\n    case '>':\n        fcn.10002d20();\n        uStack92 = 0x10005f89;\n        pcVar3 = fcn.100092cc(8);\n        ppcStack4 = 0x6;\n        pcStack36 = pcVar3;\n        if (pcVar3 != NULL) {\n            uStack92 = 0x10005fac;\n            fcn.10002dd0(*param_2);\n            uStack92 = pcVar3;\n            fcn.10007ba0();\n        }\n        goto code_r0x10005cdb;\n    case 'R':\n        fcn.10002d20();\n        cVar1 = *(param_1 + 0xa8);\n        while (cVar1 != '\\0') {\n            uStack92 = 0x10005fdd;\n            iVar4 = fcn.100085da(*(param_1 + 0xa8));\n            if (iVar4 == 0) break;\n            fcn.10002d20();\n            cVar1 = *(param_1 + 0xa8);\n        }\n        if ((*(param_1 + 0xa8) != '<') && (*(param_1 + 0xa8) != '\\'')) {\n            uStack92 = 0x10006013;\n            fcn.10004fb0();\n            puStack8 = 0x9;\n            cVar1 = *(param_1 + 0xa8);\n            while ((cVar1 != '\\0' && (*(param_1 + 0xa8) != 0x29))) {\n                pcStack16 = pcStack16 & 0xffffff00 | *(param_1 + 0xa8);\n                fcn.10006fb0();\n                fcn.10002d20();\n                cVar1 = *(param_1 + 0xa8);\n            }\n            pcStack16 = uStack40;\n            if (uStack40 == NULL) {\n                pcStack16 = 0x10030adf;\n            }\n            fcn.10004b50();\n            pcStack16 = fcn.100092cc(0x20);\n            uVar7 = uStack24;\n            uStack24 = CONCAT31(uStack24._1_3_, 10);\n            if (pcStack16 == NULL) {\n                uStack24 = uVar7 & 0xffffff00 | 9;\n            }\n            else {\n                fcn.10007c00();\n                uStack32 = CONCAT31(uStack32._1_3_, 9);\n            }\n            goto code_r0x100064b9;\n        }\n        uStack92 = 0x100060cc;\n        pcVar3 = fcn.100092cc(0x20);\n        ppcStack4 = 0x7;\n        if (pcVar3 != NULL) {\n            uStack92 = pcVar3;\n            fcn.10007c00();\n        }\n        uStack20 = 0xffffffff;\n        fcn.100040f0();\n        fcn.10002d20();\n        puVar12 = &stack0xffffffd0;\n        fcn.10004fb0(puVar12);\n        uStack24 = 8;\n        cVar1 = *(param_1 + 0xa8);\n        unaff_ESI = unaff_EBP;\n        while ((cVar1 != '\\0' && (*(param_1 + 0xa8) != uStack84._3_1_))) {\n            pcStack16 = pcStack16 & 0xffffff00 | *(param_1 + 0xa8);\n            fcn.10006fb0(&stack0xfffffff0);\n            puVar12 = &stack0xffffffec;\n            uStack20 = uStack20 & 0xffffff00 | *(param_1 + 0xa8);\n            fcn.10006fb0();\n            fcn.10002d20();\n            cVar1 = *(param_1 + 0xa8);\n        }\n        fcn.10002d20(puVar12);\n        pcStack16 = uStack40;\n        if (uStack40 == NULL) {\n            pcStack16 = 0x10030adf;\n        }\n        iVar4 = fcn.10004b50();\n        if ((iVar4 != 0) && (*pcStack16 == '\\0')) {\n            *(unaff_ESI + 8) = uStack56;\n            fcn.10007590();\n        }\ncode_r0x100064c4:\n        fcn.10003160(unaff_ESI);\ncode_r0x100064cd:\n        puStack28 = 0xffffffff;\n        fcn.10001a20();\n    }\ncode_r0x10006846:\n    fcn.10002d20();\n    *in_FS_OFFSET = pcStack36;\n    return unaff_ESI;\ncode_r0x10005d7f:\n    if (*(param_1 + 0xa8) == '<') {\n        puVar12 = CONCAT13(0x3e, puVar12);\n    }\n    else if (*(param_1 + 0xa8) == '\\'') {\n        puVar12 = puVar12 & 0xffffff | 0x27000000;\n    }\n    fcn.10002d20();\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    iVar4 = fcn.100092cc(0x1c);\n    puStack28 = 0x2;\n    if (iVar4 != 0) {\n        fcn.10004790(iVar4, *param_2 & 0x10);\n    }\n    puStack28 = 0xffffffff;\n    uVar10 = fcn.100040f0();\n    iVar4 = fcn.100092cc(0x20);\n    puStack28 = 0x3;\n    if (iVar4 != 0) {\n        fcn.100079d0(iVar4, 0xffffffff, *param_2 >> 4 & 1);\n    }\n    puStack28 = 0xffffffff;\n    iVar4 = fcn.100040f0();\n    iVar9 = fcn.100092cc(0x20);\n    puStack28 = 0x4;\n    if (iVar9 != 0) {\n        fcn.100079d0(iVar9, 0xffffffff, ~(*param_2 >> 4) & 1);\n    }\n    puStack28 = 0xffffffff;\n    fcn.100040f0();\n    puVar11 = &stack0xffffffc8;\n    fcn.10004fb0(puVar11);\n    uStack32 = 5;\n    cVar1 = *(param_1 + 0xa8);\n    unaff_ESI = puVar12;\n    while (cVar1 != '\\0') {\n        uStack92._3_1_ = uStack92 >> 0x18;\n        if (*(param_1 + 0xa8) == uStack92._3_1_) break;\n        unaff_ESI = unaff_ESI & 0xffffff00 | *(param_1 + 0xa8);\n        fcn.10006fb0(&stack0xffffffa8);\n        puVar11 = &stack0xffffffa4;\n        uStack92 = uStack92 & 0xffffff00 | *(param_1 + 0xa8);\n        fcn.10006fb0();\n        fcn.10002d20();\n        cVar1 = *(param_1 + 0xa8);\n    }\n    fcn.10002d20(puVar11);\n    uStack84 = pcStack48;\n    if (pcStack48 == NULL) {\n        uStack84 = 0x10030adf;\n    }\n    iVar9 = fcn.10004b50();\n    if ((iVar9 != 0) && (*uStack84 == '\\0')) {\n        *(unaff_EDI + 4) = uVar10;\n        *(iVar4 + 4) = uVar10;\n        fcn.10007590();\n    }\n    fcn.10003160(unaff_EDI);\n    uVar10 = fcn.10002dd0(*puStack28);\n    fcn.10003160(uVar10);\n    fcn.10003160(unaff_ESI);\n    fcn.10007a60();\n    *(*(param_1 + 0x5c) + unaff_EDI * 4) = unaff_ESI;\n    goto code_r0x100064cd;\ncode_r0x1000658d:\n    if (*(param_1 + 0xa8) == ':') {\n        fcn.10002d20();\n    }\n    else if ((*(param_1 + 0xa8) != '(') || (*(param_1 + 0xac) != 1)) {\n        *param_2 = uStack56;\n        uStack92 = 0x100065b6;\n        unaff_ESI = fcn.10003c50();\n        goto code_r0x10006846;\n    }\n    uStack92 = 0x100065d4;\n    unaff_ESI = fcn.10002dd0(uStack56);\n    goto code_r0x10006846;\n}\n",
        "token_count": 6118
    },
    "1000fbbb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.1000fbbb(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.1000b394();\n    var_4h = 0;\n    if (*0x100399a8 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x100399a8 = fcn.1000b322(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x100399ac = fcn.1000b322(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x100399b0 = fcn.1000b322(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x100399b8 = fcn.1000b322(uVar3);\n        if (*0x100399b8 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x100399b4 = fcn.1000b322(uVar3);\n        }\n    }\n    if ((*0x100399b4 != iVar1) && (*0x100399b8 != iVar1)) {\n        pcVar4 = fcn.1000b39d(*0x100399b4);\n        pcVar5 = fcn.1000b39d(*0x100399b8);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x1000fcfd;\n        }\n    }\n    if ((((*0x100399ac != iVar1) && (pcVar4 = fcn.1000b39d(*0x100399ac),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x100399b0 != iVar1 && (pcVar4 = fcn.1000b39d(*0x100399b0),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x1000fcfd:\n    pcVar4 = fcn.1000b39d(*0x100399a8);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 839
    },
    "10010b76": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.10010b76(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.10009af4(0x10031d58, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.10009abc();\n        *puVar2 = 0;\n        puVar2 = fcn.10009aa9();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x1004f6c4)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x1004f6e0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.10011651(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.10009aa9();\n                    *puVar2 = 9;\n                    puVar2 = fcn.10009abc();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.10010443(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.10010c48(0x10031d58);\n                goto code_r0x10010c42;\n            }\n        }\n        puVar2 = fcn.10009abc();\n        *puVar2 = 0;\n        puVar2 = fcn.10009aa9();\n        *puVar2 = 9;\n        fcn.10009a41(0, 0, 0, 0, 0);\n    }\ncode_r0x10010c42:\n    fcn.10009b39();\n    return;\n}\n",
        "token_count": 635
    },
    "1001e2c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nchar __cdecl fcn.1001e2c0(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    char cVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    float10 extraout_ST0;\n    float10 extraout_ST0_00;\n    float10 extraout_ST0_01;\n    float10 fVar11;\n    uint32_t uStack32;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    double dStack16;\n    \n    if (*0x10035490 - *0x10035468 == 0x28) {\n        iVar2 = -*0x100354d0;\n    }\n    else {\n        *0x1003549c = *0x1003549c + -0x43 + *0x100354d0 + *0x10035460;\n        iVar2 = -*0x10035460;\n    }\n    *0x10035460 = iVar2 + 9;\n    iVar2 = fcn.10011b00(*0x100354c8);\n    if (*0x100354d0 <= *0x10035460) {\n        *0x100354a4 = *0x100354a4 + *0x1003545c;\n        *0x10035460 = *0x1003545c + 9 + *0x100354d0;\n        *0x100354d0 = (*0x1003545c - 1) + *0x10035460;\n    }\n    *0x1004dafc = 0x1003a798;\n    *0x10035460 = *0x10035460 + ((9 - *0x10035464) - arg_8h);\n    *0x100354cc = *0x10035460 + iVar2 + -1;\n    *0x10035464 = fcn.10011d60();\n    if (*0x100354a8 == 0xa65) {\n        *0x100354d0 = (*0x100354d0 - *0x10035494) * 2 - 0x145ce;\n    }\n    *0x10035460 = 9 - *0x100354d0;\n    uVar8 = iVar2 - 0x3a;\n    *0x100354c8 = uVar8;\n    *0x10035464 = fcn.10011b00(uVar8);\n    *0x100354cc = (uVar8 - *0x10035460) + -0x60;\n    *0x10035464 = fcn.10011c30();\n    *0x10035460 = *0x100354d0 + *0x10035460 * 2;\n    if (*0x100354d0 <= uVar8) {\n        *0x100354a4 = *0x100354a4 + *0x10035464;\n        uVar8 = *0x10035464 + 9 + *0x100354d0;\n        *0x100354d0 = *0x10035464 + -1 + uVar8;\n        *0x100354c8 = uVar8;\n    }\n    fcn.1001dee0(uVar8);\n    uVar8 = *0x100354c8;\n    *0x100354cc = (*0x10035460 + *0x100354c8) - 1;\n    *0x10035464 = fcn.10011b00(*0x100354c8);\n    if (*0x1003546c <= *0x1003545c) {\n        *0x10035498 = *0x100354d0;\n        *0x100354d0 = (*0x100354d0 - 0x145ce) + *0x10035460 + *0x1003545c * 2;\n    }\n    *0x10035460 = 9 - *0x100354d0;\n    dStack16 = *0x10030c90;\n    if (*0x100354d0 <= uVar8) {\n        *0x100354a4 = *0x100354a4 + *0x10035464;\n        uVar8 = *0x10035464 + 9 + *0x100354d0;\n        *0x100354d0 = *0x10035464 + -1 + uVar8;\n    }\n    *0x100354c8 = (uVar8 - 0x43) + *0x100354cc + *0x10035460;\n    piVar3 = 0x1003546c;\n    do {\n        if (*0x100354d0 != *0x10035468) {\n            *0x10035460 = *0x10035460 * *piVar3;\n            *0x100354d0 = (*0x10035460 - *0x1003545c) - 0x60;\n            if (*0x100354d0 == *0x10035470) break;\n        }\n        piVar3 = piVar3 + 2;\n    } while (piVar3 < 0x10035494);\n    *0x10035464 = fcn.10011c30();\n    iVar2 = (*0x100354d0 - 0x43) + *0x10035460 * 2;\n    uStack20 = 0xb;\n    uStack24 = 0x80;\n    *0x100354cc = (*0x1003545c + iVar2) - 1;\n    piVar3 = 0x1003546c;\n    do {\n        if (*0x100354d0 != *0x10035468) {\n            iVar2 = iVar2 * *piVar3;\n            *0x100354d0 = (iVar2 - *0x1003545c) - 0x60;\n            if (*0x100354d0 == *0x10035470) break;\n        }\n        piVar3 = piVar3 + 2;\n    } while (piVar3 < 0x10035494);\n    *0x10035460 = iVar2 * 3 + 0xcfb + *0x100354d0;\n    uStack32 = 0xbc;\n    fVar11 = extraout_ST0;\n    if (*0x10035474 == 4) {\n        *0x10035464 = (*0x100354cc - 1) + *0x100354d0;\n    }\n    else {\n        *0x100354cc = *0x100354cc + *0x10035464 + '2';\n    }\n    while( true ) {\n        uVar8 = *0x100354d0;\n        *0x100354c8 = *0x100354cc * '@' + *0x10035460;\n        if (*0x1003546c <= *0x1003545c) {\n            *0x100354d0 = (*0x100354d0 - 0x145ce) + *0x10035460 + *0x1003545c * 2;\n            *0x10035498 = uVar8;\n        }\n        if (*0x1003546c <= *0x10035464) {\n            uVar8 = (*0x100354d0 - 0x145ce) + *0x100354cc + *0x10035464 * 2;\n            *0x100354cc = (*0x100354cc * '\\x02' + uVar8 + *0x10035464) - 5;\n            *0x10035498 = *0x100354d0;\n            *0x100354d0 = uVar8;\n        }\n        bVar10 = *0x10035464 == 0;\n        uVar8 = bVar10;\n        if (uVar8 != 0) {\n            *0x100354cc = (bVar10 + *0x100354c8) - 1;\n        }\n        if (*0x10035490 - *0x10035468 == 0x28) {\n            cVar7 = (*0x100354d0 - *0x10035464) + -0x3a;\n        }\n        else {\n            *0x1003549c = *0x1003549c + -0x43 + *0x10035464 + *0x100354d0;\n            cVar7 = *0x100354d0 * -2 + '\\t';\n        }\n        *0x100354cc = *0x100354cc + cVar7;\n        uVar9 = uVar8 * 3 + 0xcfb + *0x100354d0;\n        if ((uVar8 != 0) && (*0x10035474 == 4)) {\n            *0x100354d0 = ((*0x1003545c - *0x100354cc) - uVar9) + 8 + uVar8;\n        }\n        *0x100354c8 = uVar9 == 0;\n        if ((*0x100354c8 != 0) && (*0x100354c8 = *0x100354cc * 0x40 + uVar9,  *0x100354a8 == 0xa65)) {\n            *0x1003545c = (*0x1003545c - *0x10035494) * 2 - 0x145ce;\n        }\n        *0x10035460 = uVar9;\n        if (*0x1003546c <= *0x100354d0) {\n            *0x10035460 = (uVar9 - 0x145ce) + *0x100354c8 + *0x100354d0 * 2;\n            *0x100354c8 = *0x100354d0 + *0x100354c8 * 2 + 0xcfb + *0x10035460;\n            *0x10035498 = uVar9;\n        }\n        if (((1 < fVar11) << 8 | (1 == fVar11) << 0xe) == 0) break;\n        if (*0x10035464 < *0x10035460) {\n            iVar2 = *0x10035460 - *0x100354d0;\n            *0x10035460 = (*0x100354d0 - 0x43) + *0x10035460 * 2;\n            *0x1003545c = iVar2 - 0x60;\n            *0x100354cc = *0x100354cc + *0x10035460 + *0x100354c8;\n            if (uVar8 != 0) {\n                *0x100354cc = *0x100354cc + *0x10035460 + bVar10;\n            }\n            *0x100354c8 = *0x10035464 * 0x40 + *0x1003545c;\n        }\n        fcn.10001000();\n        uVar8 = *0x100354cc;\n        if (*0x10035490 - *0x10035468 == 0x28) {\n            uVar9 = (*0x100354c8 - 0x3a) + (uVar8 - *0x10035460);\n        }\n        else {\n            *0x1003549c = *0x1003549c + -0x43 + uVar8 + *0x10035460;\n            uVar9 = *0x100354c8 + uVar8 * -2 + 9;\n        }\n        if (0x10a7b < uVar9) {\n            iVar2 = *0x10035464 + 9 + *0x100354d0;\n            *0x100354d0 = fcn.10011d60();\n            uVar8 = *0x100354cc;\n            uVar9 = uVar8 + iVar2 * 2 + 0xcfb + *0x10035460;\n            *0x10035460 = *0x10035460 + (-0x60 - *0x100354d0);\n        }\n        fVar11 = dStack16 - 1;\n        uVar9 = (uVar9 - 0x3a) + (*0x100354d0 - *0x1003545c);\n        dStack16 = fVar11;\n        if (uVar9 < *0x10035460) {\n            *0x100354cc = *0x100354cc + *0x10035460 + '2';\n            uVar8 = *0x100354cc;\n            iVar2 = 9 - uVar8;\n            uVar4 = *0x10035460;\ncode_r0x1001e895:\n            iVar2 = uVar9 + (iVar2 - uVar4);\n        }\n        else {\n            if (*0x10035490 - *0x10035468 != 0x28) {\n                *0x1003549c = *0x1003549c + -0x43 + *0x10035464 + *0x100354d0;\n                uVar4 = *0x100354d0 * 2;\n                iVar2 = 9;\n                goto code_r0x1001e895;\n            }\n            iVar2 = (uVar9 - 0x3a) + (*0x100354d0 - *0x10035464);\n        }\n        if (*0x10035474 == 4) {\n            *0x10035460 = (uVar8 - 1) + iVar2;\n        }\n    }\n    *0x100354cc = (*0x100354c8 - *0x10035460) + 0xa0;\n    uVar8 = *0x100354c8;\n    if (*0x10035460 < *0x100354c8) {\n        iVar2 = (9 - *0x100354cc) - *0x10035460;\n        *0x10035460 = *0x10035460 * 3 + 0xcfb + *0x100354d0;\n        uVar8 = *0x100354c8 + iVar2;\n        *0x100354cc = *0x100354cc + *0x10035460 + uVar8;\n        if (*0x1003546c <= *0x100354d0) {\n            uVar9 = (*0x1003545c - 0x145ce) + uVar8 + *0x100354d0 * 2;\n            *0x10035498 = *0x1003545c;\n            uVar8 = uVar9 + uVar8 * 2 + 0xcfb + *0x100354d0;\n            *0x1003545c = uVar9;\n        }\n    }\n    *0x10035460 = (*0x10035460 - 0x145ce) + *0x100354d0;\n    dStack16 = *0x10030c90;\n    uVar8 = (uVar8 - 1) + *0x100354d0;\n    if (*0x100354cc <= *0x10035460) {\n        *0x100354c6 = *0x100354c6 + *0x1003545c;\n        *0x10035460 = *0x100354cc + 9 + *0x1003545c;\n        *0x100354cc = (*0x1003545c + *0x10035460) - 1;\n    }\n    *0x100354cc = *0x100354cc - 0x10;\n    *0x100354d0 = fcn.10011d60();\n    *0x100354cc = 0x60;\n    *0x10035460 = 0x2002fa30;\n    if (*0x100354a8 >> 0x10 < 0x2002fa9a) {\n        *0x100354c0 = 0x60;\n        *0x100354cc = 0xf4;\n        *0x10035460 = 0x6008fce8;\n    }\n    *0x1003545c = *0x100354cc * 0x40 + *0x10035460;\n    *0x10035464 = uVar8;\n    fVar11 = extraout_ST0_00;\n    if (*0x100354ae == 4) {\n        *0x10035460 = *0x100354cc + 0x3002dd38;\n    }\n    while( true ) {\n        uVar9 = *0x10035470;\n        uVar8 = *0x10035464 * 0x40 + *0x100354d0;\n        if ((0x16447 < uVar8) && (*0x10035464 = (uVar8 - 1) + *0x100354d0,  *0x1003546c <= *0x10035460)) {\n            *0x10035498 = *0x100354cc;\n            *0x100354cc = *0x100354cc + (*0x10035460 + '\\x19') * '\\x02' + uVar8;\n            uVar8 = *0x100354cc + *0x10035460 + 0xcfb + uVar8 * 2;\n        }\n        uVar4 = *0x10035460;\n        if (*0x1003546c <= *0x100354d0) {\n            uVar4 = (*0x10035460 - 0x145ce) + uVar8 + *0x100354d0 * 2;\n            uVar8 = *0x100354d0 + uVar8 * 2 + 0xcfb + uVar4;\n            *0x10035498 = *0x10035460;\n        }\n        *0x10035460 = uVar4;\n        if (*0x1003545c <= uVar8) {\n            *0x100354a4 = *0x100354a4 + *0x100354d0;\n            uVar8 = *0x1003545c + 9 + *0x100354d0;\n            *0x1003545c = (uVar8 - 1) + *0x100354d0;\n        }\n        if (fVar11 <= 0) break;\n        iVar2 = (uVar8 - *0x100354d0) + -0x60;\n        if (*0x10035474 == 4) {\n            *0x10035460 = (*0x100354cc - 1) + uVar8;\n        }\n        else {\n            uVar8 = (uVar8 - 0x145ce) + *0x10035460;\n        }\n        if (uStack24 < 3) {\n            uStack24 = uStack24 - 1;\n            *0x1003545c = (*0x1003545c - 0x43) + uStack24 + iVar2;\n            uVar8 = iVar2 + uVar8 * 2 + 0xcfb + *0x100354d0;\n        }\n        *0x100354c8 = (uVar8 - 0x43) + iVar2 + *0x100354d0;\n        if (*0x10035474 == 4) {\n            *0x10035460 = (*0x100354cc - 1) + *0x100354c8;\n        }\n        else {\n            *0x100354c8 = (*0x100354c8 - 0x145ce) + *0x10035460;\n        }\n        if (*0x10035460 <= *0x100354c8) {\n            *0x100354a4 = *0x100354a4 + *0x100354d0;\n            *0x100354c8 = *0x100354d0 + 9 + *0x10035460;\n            *0x10035460 = (*0x100354c8 - 1) + *0x100354d0;\n        }\n        iVar2 = *0x1003545c - uStack32;\n        uVar8 = iVar2 - 0x60;\n        *0x10035464 = uVar8;\n        if (0x1319 < uVar8) {\n            *0x100354c8 = uVar8 + *0x100354c8 * 2 + 0xcfb + *0x100354d0;\n            if (*0x1003545c == *0x10035460) {\n                if (*0x10035490 - *0x10035468 != 0x28) {\n                    *0x1003549c = *0x1003549c + -0x43 + *0x100354cc + *0x10035460;\n                }\n                *0x100354c8 = fcn.10011d60();\n                uVar9 = *0x100354cc;\n                if (*0x1003546c <= uVar9) {\n                    *0x10035498 = *0x10035460;\n                    *0x10035460 = (*0x10035460 - 0x145ce) + *0x100354d0 + uVar9 * 2;\n                    *0x100354d0 = uVar9 + *0x100354d0 * 2 + 0xcfb + *0x10035460;\n                }\n                *0x100354cc = *0x100354cc + *0x10035460 + '2';\n                fVar11 = extraout_ST0_01;\n            }\n            if (*0x10035474 == 4) {\n                *0x100354d0 = (*0x100354c8 - 1) + *0x10035460;\n            }\n            else {\n                *0x100354c8 = (*0x100354c8 - 0x145ce) + *0x100354d0;\n            }\n        }\n        if (uStack32 < 10) {\n            if (uVar8 <= *0x100354c8) {\n                *0x100354a4 = *0x100354a4 + *0x100354d0;\n                *0x100354c8 = iVar2 + -0x57 + *0x100354d0;\n                uVar8 = (*0x100354c8 - 1) + *0x100354d0;\n                *0x10035464 = uVar8;\n            }\n            if (*0x1003546c <= *0x100354c8) {\n                uVar9 = (*0x100354d0 - 0x145ce) + *0x1003545c + *0x100354c8 * 2;\n                *0x1003545c = *0x100354c8 + *0x1003545c * 2 + 0xcfb + uVar9;\n                *0x10035498 = *0x100354d0;\n                *0x100354d0 = uVar9;\n            }\n            uStack32 = uStack32 - 1;\n        }\n        if (*0x1003546c <= uVar8) {\n            uVar9 = (*0x100354d0 - 0x145ce) + *0x100354c8 + uVar8 * 2;\n            *0x100354c8 = uVar8 + *0x100354c8 * 2 + 0xcfb + uVar9;\n            *0x10035498 = *0x100354d0;\n            *0x100354d0 = uVar9;\n        }\n        if (*0x100354a8 == 0xa65) {\n            uVar8 = (uVar8 - *0x10035494) * 2 - 0x145ce;\n            *0x10035464 = uVar8;\n        }\n        uVar9 = *0x10035460;\n        if (*0x1003546c <= *0x100354d0) {\n            uVar9 = (*0x10035460 - 0x145ce) + *0x100354c8 + *0x100354d0 * 2;\n            *0x100354c8 = *0x100354d0 + *0x100354c8 * 2 + 0xcfb + uVar9;\n            *0x10035498 = *0x10035460;\n        }\n        *0x10035460 = (*0x100354d0 - 0x43) + uVar9 * 2;\n        if (fVar11 < *0x10030c80) {\n            if (*0x100354a8 == 0xa65) {\n                *0x10035460 = (*0x10035460 - *0x10035494) * 2 + -0x145ce;\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(0x7f);\n            *0x10035460 = *0x10035460 + (-0x60 - *0x100354d0);\n            uVar8 = (*0x10035460 - *0x100354c8) - 0x60;\n            *0x10035464 = uVar8;\n        }\n        if (*0x10035490 - *0x10035468 == 0x28) {\n            *0x100354c8 = (*0x100354c8 - 0x3a) + (*0x100354d0 - uVar8);\n        }\n        else {\n            *0x1003549c = *0x1003549c + -0x43 + uVar8 + *0x100354d0;\n            *0x100354c8 = *0x100354c8 + *0x100354d0 * -2 + 9;\n        }\n        fcn.10001000();\n        if (*0x10035490 - *0x10035468 == 0x28) {\n            iVar2 = *0x10035460 + -0x3a + (*0x100354d0 - *0x10035464);\n        }\n        else {\n            *0x1003549c = *0x1003549c + -0x43 + *0x10035464 + *0x100354d0;\n            iVar2 = *0x10035460 + *0x100354d0 * -2 + 9;\n        }\n        uVar8 = iVar2 + -0x145ce + *0x100354d0;\n        fVar11 = dStack16 - *0x10030c88;\n        *0x1003545c = uVar8 + 9 + uStack20;\n        dStack16 = fVar11;\n        if (uStack20 < 3) {\n            if (*0x10035490 - *0x10035468 != 0x28) {\n                *0x1003549c = *0x1003549c + -0x43 + *0x10035464 + *0x100354d0;\n            }\n            uStack20 = uStack20 - 1;\n            if (*0x1003546c <= *0x100354d0) {\n                *0x10035498 = uVar8;\n            }\n            *0x1003545c = *0x10035464 + *0x1003545c * 2 + 0xcfb + uStack20;\n        }\n        *0x10035460 = *0x100354d0 + 3;\n    }\n    *0x10035464 = (*0x10035464 - 0x145ce) + *0x100354d0;\n    iVar2 = (*0x10035464 - arg_8h) + -0x60;\n    if (*0x100354cc <= *0x100354d0) {\n        *0x100354a4 = *0x100354a4 + iVar2;\n        *0x100354d0 = *0x100354cc + 9 + iVar2;\n        *0x100354cc = (*0x100354d0 + iVar2) - 1;\n    }\n    iVar2 = *0x100354d0 * 0x40;\n    pcVar6 = 0x1003546c;\n    do {\n        if (*0x100354d0 != *0x10035468) {\n            *0x100354cc = *pcVar6 * *0x100354cc;\n            *0x100354d0 = (*0x100354cc - *0x10035464) - 0x60;\n            if (*0x100354d0 == *0x10035470) break;\n        }\n        pcVar6 = pcVar6 + 8;\n    } while (pcVar6 < 0x10035494);\n    *0x100354c8 = (iVar2 + 0xa48) * 0x40 + *0x100354d0 * 0x41;\n    *0x10035460 = (*0x10035464 - *0x100354c8) - 0x60;\n    *0x100354d0 = fcn.1001e0c0(*0x100354c8);\n    uVar8 = *0x100354a4;\n    if (*0x100354c8 == 0xa65) {\n        *0x100354cc = ((*0x100354cc - *0x100354be) + '\\x19') * '\\x02';\n    }\n    uVar4 = uVar9 & 0xffffff00 | *0x100354cc;\n    uVar9 = *0x1003545c;\n    if (*0x100354c8 == 0x1676c308) {\n        uVar5 = (*0x10035460 - *0x1003545c) - 0x60;\n        bVar10 = *0x10035460 < uVar5;\n        if (!bVar10) {\n            *0x100354a4 = *0x100354a4 + *0x1003545c;\n            uVar5 = *0x1003545c + 9 + uVar5;\n            uVar9 = (*0x1003545c - 1) + uVar5;\n            *0x10035460 = uVar5;\n        }\n        uVar1 = -(bVar10 || CARRY4(uVar8, *0x1003545c));\n        *(uVar4 + 0x354743d) = *(uVar4 + 0x354743d) + '\\x10';\n        uVar4 = *0x100354cc;\n        *0x100354d0 = (uVar9 - 1) + *0x10035460;\n        if ((uVar5 & 0xffffff00 | uVar1 + 0x8b) + 0x1003545c + (0x74 < uVar1) == 0) {\n            uVar9 = *0x100354d0 + -1 + *0x10035460;\n            *0x1003545c = uVar9;\n        }\n        else {\n            *0x10035460 = (uVar9 - 0x145ce) + *0x10035460;\n        }\n    }\n    *0x100354cc = uVar4 + uVar9 + *0x10035460;\n    if (*0x100354a8 == 0xa65) {\n        *0x100354d0 = (*0x100354d0 - *0x10035494) * 2 + -0x145ce;\n    }\n    *0x10035464 = *0x100354c8 + 9 + *0x10035460;\n    return *0x100354cc;\n}\n",
        "token_count": 7120
    },
    "1001f030": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.1001f030(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    uint16_t uVar8;\n    int32_t *unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack20;\n    uint uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x10024330;\n    piStack12 = *in_FS_OFFSET;\n    uVar4 = *0x10034058 ^ &stack0xffffffd0;\n    *in_FS_OFFSET = &piStack12;\n    *0x100354d0 = *0x100354d0 + -0x1434c;\n    if ((*0x1004f6ac & 1) == 0) {\n        *0x1004f6ac = *0x1004f6ac | 1;\n        uStack4 = 0;\n        fcn.100015b0(uVar4);\n        fcn.10008cd2(0x10024470);\n    }\n    uVar3 = *0x100354cc;\n    uVar4 = *0x1003545c;\n    uStack4 = 0xffffffff;\n    piVar6 = 0x1003549c;\n    do {\n        if (*0x100354d0 != *0x10035484) {\n            *piVar6 = *piVar6 + uVar3;\n            *0x100354d0 = uVar3 * 3 + uVar4 * 3 + 0xd0d;\n        }\n        piVar6 = piVar6 + -2;\n    } while (0x10035474 < piVar6);\n    (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 7, 5, 0);\n    uVar4 = piStack12 + 0x281U & 0xffff;\n    if (uVar4 <= *0x1003545c) {\n        *0x1003545c = uVar4 + 0x28b;\n        *0x100354c6 = *0x100354c6 + 0x282;\n        uVar4 = uVar4 + 0x50c & 0xffff;\n    }\n    piVar7 = 0x1003546c;\n    piVar6 = piStack12;\n    do {\n        if (piVar6 != *0x10035468) {\n            *0x100354d0 = *0x100354d0 * *piVar7;\n            piVar6 = (*0x100354d0 - uVar4) + -0x60;\n            if (piVar6 == *0x10035470) break;\n        }\n        piVar7 = piVar7 + 2;\n    } while (piVar7 < 0x10035494);\n    if (*0x100354bc - *0x100354a8 == 0x28) {\n        *0x1003545c = (*0x1003545c - 700) + uVar4;\n    }\n    else {\n        *0x100354c2 = *0x100354c2 + uVar4 + 0x23f;\n        *0x1003545c = *0x1003545c + uVar4 * -2 + 9;\n    }\n    fcn.10001650(&stack0xffffffd0);\n    if (*0x100354ae != 4) {\n        *0x1003545c = *0x1003545c + -0x1434c;\n    }\n    iVar5 = fcn.1001e2c0(*0x1003545c);\n    *0x1003545c = fcn.10011960(iVar5);\n    uVar8 = *0x100354cc;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uStack16);\n    piVar7 = 0x1003546c;\n    do {\n        if (piVar6 != *0x10035468) {\n            *0x100354d0 = *0x100354d0 * *piVar7;\n            piVar6 = (*0x100354d0 - (uVar4 * 2 + uVar8 + *0x100354d0 + 0xcfb)) + -0x60;\n            if (piVar6 == *0x10035470) break;\n        }\n        piVar7 = piVar7 + 2;\n    } while (piVar7 < 0x10035494);\n    *0x1003545c = *0x10035460 + (*0x100354cc - iVar5) + 0x195a;\n    iVar1 = iStack20 + 0x19fd + iVar5;\n    iVar2 = (*0x100354cc - iVar5) + -0x1462e + iVar1;\n    *0x100354cc = iVar2 * '@' + iVar1;\n    *0x100354d0 = iVar2 + -0x145ce + iVar5;\n    *0x10035460 = *0x1003545c;\n    if (unaff_ESI != 0) {\n        fcn.1000896a(unaff_ESI);\n    }\n    *in_FS_OFFSET = unaff_EBX;\n    return 1;\n}\n",
        "token_count": 1229
    },
    "1002104d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.1002104d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x10034058 ^ &stack0xfffffffc;\n    fcn.10008279(arg_10h);\n    var_14h = fcn.10021fa3(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.1002151b(&var_10h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x100210a6:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x100210e6;\n        }\n        if (iVar1 != 2) {\ncode_r0x100210d8:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x100210e6;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x100210d8;\n        goto code_r0x100210a6;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x100210e6:\n    fcn.100081be(unaff_EBX);\n    return;\n}\n",
        "token_count": 496
    },
    "100210f5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.100210f5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x10034058 ^ &stack0xfffffffc;\n    fcn.10008279(arg_10h);\n    var_14h = fcn.10021fa3(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.10021a5f(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x1002114e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x1002118e;\n        }\n        if (iVar1 != 2) {\ncode_r0x10021180:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x1002118e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x10021180;\n        goto code_r0x1002114e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x1002118e:\n    fcn.100081be(unaff_EBX);\n    return;\n}\n",
        "token_count": 500
    },
    "1002269b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Removing unreachable block (ram,0x10022bd6)\n// WARNING: Removing unreachable block (ram,0x10022be0)\n// WARNING: Removing unreachable block (ram,0x10022be5)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.1002269b(uint32_t arg_8h, uint32_t noname_1, uint32_t noname_2, int32_t noname_3, uint32_t noname_4, \n            int16_t *arg_1ch)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    uint16_t uVar8;\n    uint16_t uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    uint16_t uVar12;\n    uint32_t uVar13;\n    char cVar14;\n    uint32_t uVar15;\n    int16_t *piVar16;\n    int16_t *piVar17;\n    uint16_t uVar18;\n    uint16_t uVar19;\n    uint32_t uVar20;\n    uint *puVar21;\n    char *pcVar22;\n    uint var_74h;\n    uint var_70h;\n    uint16_t *var_6ch;\n    int32_t *var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint16_t *var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint16_t uStack60;\n    uint16_t uStack58;\n    int32_t iStack56;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_20h;\n    uint16_t var_1ch;\n    uint32_t var_1ah;\n    uint var_16h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x10034058 ^ &stack0xfffffffc;\n    var_10h._0_1_ = arg_8h;\n    var_10h._1_1_ = arg_8h >> 8;\n    var_10h._2_2_ = arg_8h >> 0x10;\n    var_ch._0_2_ = noname_1;\n    var_ch._2_2_ = noname_1 >> 0x10;\n    var_8h._0_2_ = uVar8;\n    uVar8 = uVar8 & 0x8000;\n    uVar13 = noname_2 & 0x7fff;\n    var_30h = 0xcccccccc;\n    var_2ch = 0xcccccccc;\n    var_28h = 0xcc;\n    var_27h = 0xcc;\n    var_26h = 0xfb;\n    var_25h = 0x3f;\n    if ((noname_2 & 0x8000) == 0) {\n        *(arg_1ch + 1) = 0x20;\n    }\n    else {\n        *(arg_1ch + 1) = 0x2d;\n    }\n    if (((uVar13 == 0) && (noname_1 == 0)) && (arg_8h == 0)) {\n        *arg_1ch = 0;\n        *(arg_1ch + 1) = ((uVar8 != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 2) = 0x30;\n        *(arg_1ch + 5) = 0;\n        goto code_r0x10022f73;\n    }\n    if (uVar13 == 0x7fff) {\n        *arg_1ch = 1;\n        var_ch = noname_1;\n        if (((noname_1 == 0x80000000) && (arg_8h == 0)) || ((noname_1 & 0x40000000) != 0)) {\n            if (((noname_2 & 0x8000) == 0) || (noname_1 != 0xc0000000)) {\n                if ((noname_1 != 0x80000000) || (arg_8h != 0)) goto code_r0x100227d1;\n                pcVar22 = \"1#INF\";\n            }\n            else {\n                if (arg_8h != 0) {\ncode_r0x100227d1:\n                    pcVar22 = \"1#QNAN\";\n                    goto code_r0x100227d6;\n                }\n                pcVar22 = \"1#IND\";\n            }\n            iVar6 = fcn.1000f47b(arg_1ch + 2, 0x16, pcVar22);\n            if (iVar6 != 0) {\n                fcn.10009919(0, 0, 0, 0, 0);\n            }\n            *(arg_1ch + 3) = 5;\n            noname_1 = var_ch;\n        }\n        else {\n            pcVar22 = \"1#SNAN\";\ncode_r0x100227d6:\n            iVar6 = fcn.1000f47b(arg_1ch + 2, 0x16, pcVar22);\n            noname_1 = var_ch;\n            if (iVar6 != 0) {\n                fcn.10009919(0, 0, 0, 0, 0);\n                noname_1 = var_ch;\n            }\n            *(arg_1ch + 3) = 6;\n        }\n        goto code_r0x10022f73;\n    }\n    var_4ch._0_2_ = ((uVar13 >> 8) + (noname_1 >> 0x18) * 2) * 0x4d + -0x134312f4 + uVar13 * 0x4d10 >> 0x10;\n    uVar15 = var_4ch;\n    var_20h._0_2_ = 0;\n    var_16h._0_1_ = uVar13;\n    var_16h._1_1_ = uVar13 >> 8;\n    var_1ah._0_2_ = var_ch;\n    var_1ah._2_2_ = var_ch._2_2_;\n    var_20h._2_2_ = arg_8h;\n    var_64h = 0x10038cb0;\n    var_1ch = var_10h._2_2_;\n    var_1ah = noname_1;\n    if (-uVar15 != 0) {\n        uVar13 = -uVar15;\n        uVar11 = arg_8h;\n        if (0 < uVar15) {\n            var_64h = 0x10038e10;\n            uVar13 = uVar15;\n        }\njoined_r0x10022864:\n        var_1ch = uVar11 >> 0x10;\n        arg_8h = uVar11 & 0xffff | var_10h._2_2_ << 0x10;\n        if (uVar13 != 0) {\n            var_64h = var_64h + 0x54;\n            uVar15 = uVar13 & 7;\n            uVar13 = uVar13 >> 3;\n            if (uVar15 != 0) {\n                piVar10 = uVar15 * 0xc + var_64h;\n                if (0x7fff < *piVar10) {\n                    var_3ch._0_2_ = *piVar10;\n                    var_3ch._2_2_ = *piVar10 >> 0x10;\n                    piVar2 = piVar10 + 2;\n                    uStack60 = piVar10[1];\n                    uStack58 = piVar10[1] >> 0x10;\n                    piVar10 = &var_3ch;\n                    iStack56 = *piVar2;\n                    iVar6 = CONCAT22(uStack60, var_3ch._2_2_) + -1;\n                    var_3ch._2_2_ = iVar6;\n                    uStack60 = iVar6 >> 0x10;\n                }\n                var_54h = 0;\n                var_10h._0_1_ = 0;\n                var_10h._1_1_ = 0;\n                var_10h._2_2_ = 0;\n                var_ch._0_2_ = 0;\n                var_ch._2_2_ = 0;\n                var_8h._0_2_ = 0;\n                var_8h._2_2_ = 0;\n                uVar18 = (*(piVar10 + 10) ^ CONCAT11(var_16h._1_1_, var_16h)) & 0x8000;\n                uVar9 = CONCAT11(var_16h._1_1_, var_16h) & 0x7fff;\n                uVar12 = *(piVar10 + 10) & 0x7fff;\n                uVar19 = uVar12 + uVar9;\n                if (((uVar9 < 0x7fff) && (uVar12 < 0x7fff)) && (uVar19 < 0xbffe)) {\n                    if (0x3fbf < uVar19) {\n                        if (((uVar9 == 0) &&\n                            (uVar19 = uVar19 + 1, \n                            (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah >> 0x10)) & 0x7fffffff) == 0)) &&\n                           ((CONCAT22(var_1ah, var_1ch) == 0 && (CONCAT22(uVar11, var_20h) == 0)))) {\n                            var_16h._0_1_ = 0;\n                            var_16h._1_1_ = 0;\n                            noname_1 = 0;\n                            goto joined_r0x10022864;\n                        }\n                        if ((((uVar12 != 0) || (uVar19 = uVar19 + 1,  (piVar10[2] & 0x7fffffffU) != 0)) ||\n                            (piVar10[1] != 0)) || (*piVar10 != 0)) {\n                            var_58h = 0;\n                            puVar21 = &var_ch;\n                            var_40h = 5;\n                            do {\n                                var_50h = var_40h;\n                                if (0 < var_40h) {\n                                    var_6ch = &var_20h + var_58h * 2;\n                                    var_68h = piVar10 + 2;\n                                    do {\n                                        bVar5 = false;\n                                        uVar15 = puVar21[-1] + *var_6ch * *var_68h;\n                                        if ((uVar15 < puVar21[-1]) || (uVar15 < *var_6ch * *var_68h)) {\n                                            bVar5 = true;\n                                        }\n                                        puVar21[-1] = uVar15;\n                                        if (bVar5) {\n                                            *puVar21 = *puVar21 + 1;\n                                        }\n                                        var_6ch = var_6ch + 1;\n                                        var_68h = var_68h + -2;\n                                        var_50h = var_50h + -1;\n                                    } while (0 < var_50h);\n                                }\n                                puVar21 = puVar21 + 2;\n                                var_58h = var_58h + 1;\n                                var_40h = var_40h + -1;\n                            } while (0 < var_40h);\n                            uVar19 = uVar19 + 0xc002;\n                            if (uVar19 < 1) {\ncode_r0x10022a17:\n                                uVar19 = uVar19 - 1;\n                                if (uVar19 < 0) {\n                                    uVar15 = -uVar19;\n                                    uVar19 = 0;\n                                    do {\n                                        if ((var_10h & 1) != 0) {\n                                            var_54h = var_54h + 1;\n                                        }\n                                        iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                                        uVar11 = CONCAT22(var_ch._2_2_, var_ch);\n                                        iVar6 = CONCAT22(var_ch._2_2_, var_ch);\n                                        var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                                        var_8h._2_2_ = var_8h._2_2_ >> 1;\n                                        var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                                        uVar20 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                                        var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar6 << 0x1f) >> 0x10;\n                                        uVar15 = uVar15 - 1;\n                                        var_ch._0_2_ = uVar11 >> 1;\n                                        var_10h._0_1_ = uVar20;\n                                        var_10h._1_1_ = uVar20 >> 8;\n                                    } while (uVar15 != 0);\n                                    if (var_54h != 0) {\n                                        var_10h._0_1_ = var_10h | 1;\n                                    }\n                                }\n                            }\n                            else {\n                                do {\n                                    uVar12 = var_ch._2_2_;\n                                    uVar9 = var_10h._2_2_;\n                                    if ((var_8h._2_2_ & 0x8000) != 0) break;\n                                    iVar6 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                                    var_10h._0_1_ = iVar6;\n                                    var_10h._1_1_ = iVar6 >> 8;\n                                    var_10h._2_2_ = iVar6 >> 0x10;\n                                    iVar6 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                                    var_ch._0_2_ = iVar6 | uVar9 >> 0xf;\n                                    var_ch._2_2_ = iVar6 >> 0x10;\n                                    iVar6 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                                    var_8h._0_2_ = iVar6 | uVar12 >> 0xf;\n                                    uVar19 = uVar19 - 1;\n                                    var_8h._2_2_ = iVar6 >> 0x10;\n                                } while (0 < uVar19);\n                                if (uVar19 < 1) goto code_r0x10022a17;\n                            }\n                            if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                               ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                                if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                                    var_10h._2_2_ = 0;\n                                    var_ch._0_2_ = 0;\n                                    if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                                        var_ch._2_2_ = 0;\n                                        var_8h._0_2_ = 0;\n                                        if (var_8h._2_2_ == 0xffff) {\n                                            var_8h._2_2_ = 0x8000;\n                                            uVar19 = uVar19 + 1;\n                                        }\n                                        else {\n                                            var_8h._2_2_ = var_8h._2_2_ + 1;\n                                        }\n                                    }\n                                    else {\n                                        iVar6 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                                        var_ch._2_2_ = iVar6;\n                                        var_8h._0_2_ = iVar6 >> 0x10;\n                                    }\n                                }\n                                else {\n                                    iVar6 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                                    var_10h._2_2_ = iVar6;\n                                    var_ch._0_2_ = iVar6 >> 0x10;\n                                }\n                            }\n                            noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                            if (uVar19 < 0x7fff) {\n                                var_16h._1_1_ = uVar19 >> 8 | uVar18 >> 8;\n                                var_20h._0_2_ = var_10h._2_2_;\n                                var_20h._2_2_ = var_ch;\n                                var_1ch = var_ch._2_2_;\n                                uVar11 = CONCAT22(var_ch._2_2_, var_ch);\n                                var_1ah._0_2_ = var_8h;\n                                var_1ah._2_2_ = var_8h._2_2_;\n                                var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                                var_16h._0_1_ = uVar19;\n                            }\n                            else {\n                                var_1ch = 0;\n                                var_1ah._0_2_ = 0;\n                                var_20h._0_2_ = 0;\n                                var_20h._2_2_ = 0;\n                                uVar11 = 0;\n                                iVar6 = ((uVar18 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                                var_1ah._2_2_ = iVar6;\n                                var_1ah = 0x80000000;\n                                var_16h._0_1_ = iVar6 >> 0x10;\n                                var_16h._1_1_ = iVar6 >> 0x18;\n                                noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                            }\n                            goto joined_r0x10022864;\n                        }\n                    }\n                    var_1ah._2_2_ = 0;\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                }\n                else {\n                    iVar6 = ((uVar18 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah._2_2_ = iVar6;\n                    var_16h._0_1_ = iVar6 >> 0x10;\n                    var_16h._1_1_ = iVar6 >> 0x18;\n                }\n                var_1ch = 0;\n                var_1ah._0_2_ = 0;\n                var_1ah = var_1ah._2_2_ << 0x10;\n                var_20h._0_2_ = 0;\n                var_20h._2_2_ = 0;\n                uVar11 = 0;\n                noname_1 = 0;\n            }\n            goto joined_r0x10022864;\n        }\n    }\n    var_1ah._2_2_ = var_1ah >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    uVar13 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n    if (0x3ffe < uVar13 >> 0x10) {\n        var_4ch._0_2_ = var_4ch + 1;\n        var_50h = 0;\n        var_10h._0_1_ = 0;\n        var_10h._1_1_ = 0;\n        var_10h._2_2_ = 0;\n        arg_8h = arg_8h & 0xffff;\n        var_ch._0_2_ = 0;\n        var_ch._2_2_ = 0;\n        var_8h._0_2_ = 0;\n        var_8h._2_2_ = 0;\n        uVar13 = uVar13 >> 0x10 & 0x7fff;\n        iVar6 = uVar13 + 0x3ffb;\n        if ((uVar13 < 0x7fff) && (iVar6 < 0xbffe)) {\n            if (0x3fbf < iVar6) {\n                if ((((uVar13 == 0) &&\n                     (iVar6 = uVar13 + 0x3ffc, \n                     (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) & 0x7fffffff) == 0)) &&\n                    (CONCAT22(var_1ah, var_1ch) == 0)) && (CONCAT22(var_20h._2_2_, var_20h) == 0)) {\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                    noname_1 = 0;\n                    goto code_r0x10022dab;\n                }\n                var_58h = 0;\n                puVar21 = &var_ch;\n                var_40h = 5;\n                do {\n                    var_54h = var_40h;\n                    if (0 < var_40h) {\n                        var_48h = &var_28h;\n                        puVar7 = &var_20h + var_58h * 2;\n                        do {\n                            bVar5 = false;\n                            uVar13 = puVar21[-1] + *var_48h * *puVar7;\n                            if ((uVar13 < puVar21[-1]) || (uVar13 < *var_48h * *puVar7)) {\n                                bVar5 = true;\n                            }\n                            puVar21[-1] = uVar13;\n                            if (bVar5) {\n                                *puVar21 = *puVar21 + 1;\n                            }\n                            var_48h = var_48h + -1;\n                            puVar7 = puVar7 + 1;\n                            var_54h = var_54h + -1;\n                        } while (0 < var_54h);\n                    }\n                    puVar21 = puVar21 + 2;\n                    var_58h = var_58h + 1;\n                    var_40h = var_40h + -1;\n                } while (0 < var_40h);\n                iVar6 = iVar6 + 0xc002;\n                if (iVar6 < 1) {\ncode_r0x10022ca4:\n                    uVar19 = iVar6 + 0xffff;\n                    if (uVar19 < 0) {\n                        uVar13 = -(iVar6 + 0xffff) & 0xffff;\n                        uVar19 = uVar19 + uVar13;\n                        do {\n                            if ((var_10h & 1) != 0) {\n                                var_50h = var_50h + 1;\n                            }\n                            iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                            uVar15 = CONCAT22(var_ch._2_2_, var_ch);\n                            iVar6 = CONCAT22(var_ch._2_2_, var_ch);\n                            var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                            var_8h._2_2_ = var_8h._2_2_ >> 1;\n                            var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                            uVar11 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                            var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar6 << 0x1f) >> 0x10;\n                            uVar13 = uVar13 - 1;\n                            var_ch._0_2_ = uVar15 >> 1;\n                            var_10h._0_1_ = uVar11;\n                            var_10h._1_1_ = uVar11 >> 8;\n                        } while (uVar13 != 0);\n                        if (var_50h != 0) {\n                            var_10h._0_1_ = var_10h | 1;\n                        }\n                    }\n                }\n                else {\n                    do {\n                        uVar9 = var_ch._2_2_;\n                        uVar19 = var_10h._2_2_;\n                        if (var_8h._2_2_ < 0) break;\n                        iVar3 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                        var_10h._0_1_ = iVar3;\n                        var_10h._1_1_ = iVar3 >> 8;\n                        var_10h._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                        var_ch._0_2_ = iVar3 | uVar19 >> 0xf;\n                        var_ch._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                        var_8h._0_2_ = iVar3 | uVar9 >> 0xf;\n                        iVar6 = iVar6 + 0xffff;\n                        var_8h._2_2_ = iVar3 >> 0x10;\n                    } while (0 < iVar6);\n                    uVar19 = iVar6;\n                    if (uVar19 < 1) goto code_r0x10022ca4;\n                }\n                if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                   ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                    if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                        var_10h._2_2_ = 0;\n                        var_ch._0_2_ = 0;\n                        if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                            var_ch._2_2_ = 0;\n                            var_8h._0_2_ = 0;\n                            if (var_8h._2_2_ == 0xffff) {\n                                var_8h._2_2_ = 0x8000;\n                                uVar19 = uVar19 + 1;\n                            }\n                            else {\n                                var_8h._2_2_ = var_8h._2_2_ + 1;\n                            }\n                        }\n                        else {\n                            iVar6 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                            var_ch._2_2_ = iVar6;\n                            var_8h._0_2_ = iVar6 >> 0x10;\n                        }\n                    }\n                    else {\n                        iVar6 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                        var_10h._2_2_ = iVar6;\n                        var_ch._0_2_ = iVar6 >> 0x10;\n                    }\n                }\n                noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                if (uVar19 < 0x7fff) {\n                    var_16h._1_1_ = uVar19 >> 8 | var_16h._1_1_ & 0x80;\n                    var_20h._0_2_ = var_10h._2_2_;\n                    arg_8h = CONCAT22(var_10h._2_2_, var_ch);\n                    var_1ch = var_ch._2_2_;\n                    var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                    var_16h._0_1_ = uVar19;\n                }\n                else {\n                    var_1ch = 0;\n                    var_20h._0_2_ = 0;\n                    arg_8h = var_10h._2_2_ << 0x10;\n                    iVar6 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah = 0x80000000;\n                    var_16h._0_1_ = iVar6 >> 0x10;\n                    var_16h._1_1_ = iVar6 >> 0x18;\n                    noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                }\n                goto code_r0x10022dab;\n            }\n            iVar6 = 0;\n        }\n        else {\n            iVar6 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n        }\n        var_1ch = 0;\n        arg_8h = 0;\n        var_20h._0_2_ = 0;\n        var_1ah = iVar6 << 0x10;\n        var_16h._0_1_ = iVar6 >> 0x10;\n        var_16h._1_1_ = iVar6 >> 0x18;\n        noname_1 = 0;\n    }\ncode_r0x10022dab:\n    var_10h._2_2_ = arg_8h >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    *arg_1ch = var_4ch;\n    if (((noname_4 & 1) == 0) || (noname_3 = noname_3 + var_4ch,  0 < noname_3)) {\n        if (0x15 < noname_3) {\n            noname_3 = 0x15;\n        }\n        iVar6 = CONCAT11(var_16h._1_1_, var_16h) - 0x3ffe;\n        var_16h._0_1_ = 0;\n        var_16h._1_1_ = 0;\n        var_44h = 8;\n        do {\n            uVar19 = var_20h._2_2_;\n            var_1ah._2_2_ = var_1ah >> 0x10;\n            iVar3 = CONCAT22(var_20h._2_2_, var_20h) << 1;\n            var_20h._0_2_ = iVar3;\n            var_20h._2_2_ = iVar3 >> 0x10;\n            iVar3 = CONCAT22(var_1ah, var_1ch) * 2;\n            var_1ch = iVar3 | uVar19 >> 0xf;\n            iVar4 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2;\n            var_1ah._2_2_ = iVar4 | var_1ah >> 0xf;\n            var_44h = var_44h + -1;\n            var_1ah._0_2_ = iVar3 >> 0x10;\n            var_16h._0_1_ = iVar4 >> 0x10;\n            var_16h._1_1_ = iVar4 >> 0x18;\n        } while (var_44h != 0);\n        if ((iVar6 < 0) && (uVar13 = -iVar6 & 0xff,  uVar13 != 0)) {\n            do {\n                iVar3 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n                uVar11 = CONCAT22(var_1ah, var_1ch);\n                iVar6 = CONCAT22(var_1ah, var_1ch);\n                uVar15 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) >> 1;\n                var_1ah._2_2_ = uVar15;\n                var_16h._0_1_ = uVar15 >> 0x10;\n                var_16h._1_1_ = var_16h._1_1_ >> 1;\n                var_1ah._0_2_ = var_1ah >> 1 | (iVar3 << 0x1f) >> 0x10;\n                uVar15 = CONCAT22(var_20h._2_2_, var_20h);\n                var_20h._2_2_ = var_20h._2_2_ >> 1 | (iVar6 << 0x1f) >> 0x10;\n                uVar13 = uVar13 - 1;\n                var_1ch = uVar11 >> 1;\n                var_20h._0_2_ = uVar15 >> 1;\n            } while (0 < uVar13);\n        }\n        piVar1 = arg_1ch + 2;\n        piVar16 = piVar1;\n        uVar19 = var_20h;\n        uVar9 = var_20h._2_2_;\n        uVar12 = var_1ch;\n        uVar18 = var_1ah;\n        for (noname_3 = noname_3 + 1; var_1ah = CONCAT22(var_1ah._2_2_, uVar18),  0 < noname_3; noname_3 = noname_3 + -1\n            ) {\n            iStack56 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n            uVar15 = CONCAT22(uVar9, uVar19) * 4;\n            uVar13 = CONCAT22(uVar18, uVar12) * 2;\n            uVar11 = (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2 | uVar18 >> 0xf) * 2 |\n                     uVar13 >> 0x1f;\n            uVar20 = (uVar13 | uVar9 >> 0xf) * 2 | (CONCAT22(uVar9, uVar19) << 1) >> 0x1f;\n            uVar13 = CONCAT22(uVar9, uVar19) + uVar15;\n            if ((uVar13 < uVar15) || (uVar15 = uVar20,  uVar13 < CONCAT22(uVar9, uVar19))) {\n                uVar15 = uVar20 + 1;\n                bVar5 = false;\n                if ((uVar15 < uVar20) || (uVar15 == 0)) {\n                    bVar5 = true;\n                }\n                if (bVar5) {\n                    uVar11 = uVar11 + 1;\n                }\n            }\n            uVar20 = CONCAT22(uVar18, uVar12) + uVar15;\n            if ((uVar20 < uVar15) || (uVar20 < CONCAT22(uVar18, uVar12))) {\n                uVar11 = uVar11 + 1;\n            }\n            iVar6 = (uVar11 + iStack56) * 2;\n            var_1ah._2_2_ = iVar6 | uVar20 >> 0x1f;\n            var_20h._0_2_ = uVar13 * 2;\n            var_20h._2_2_ = uVar13 * 2 >> 0x10;\n            var_16h._0_1_ = iVar6 >> 0x10;\n            var_1ch = uVar20 * 2 | uVar13 >> 0x1f;\n            *piVar16 = (iVar6 >> 0x18) + '0';\n            piVar16 = piVar16 + 1;\n            var_1ah._0_2_ = uVar20 * 2 >> 0x10;\n            var_16h._1_1_ = 0;\n            var_3ch._0_2_ = uVar19;\n            var_3ch._2_2_ = uVar9;\n            uStack60 = uVar12;\n            uStack58 = uVar18;\n            uVar19 = var_20h;\n            uVar9 = var_20h._2_2_;\n            uVar12 = var_1ch;\n            uVar18 = var_1ah;\n        }\n        piVar17 = piVar16 + -1;\n        var_20h._0_2_ = uVar19;\n        var_20h._2_2_ = uVar9;\n        var_1ch = uVar12;\n        if (*(piVar16 + -1) < '5') {\n            for (; (piVar1 <= piVar17 && (*piVar17 == '0')); piVar17 = piVar17 + -1) {\n            }\n            if (piVar17 < piVar1) {\n                *arg_1ch = 0;\n                *(arg_1ch + 3) = 1;\n                *(arg_1ch + 1) = ((uVar8 != 0x8000) - 1U & 0xd) + 0x20;\n                *piVar1 = 0x30;\n                *(arg_1ch + 5) = 0;\n                goto code_r0x10022f73;\n            }\n        }\n        else {\n            for (; (piVar1 <= piVar17 && (*piVar17 == '9')); piVar17 = piVar17 + -1) {\n                *piVar17 = 0x30;\n            }\n            if (piVar17 < piVar1) {\n                piVar17 = piVar17 + 1;\n                *arg_1ch = *arg_1ch + 1;\n            }\n            *piVar17 = *piVar17 + '\\x01';\n        }\n        cVar14 = (piVar17 - arg_1ch) + -3;\n        *(arg_1ch + 3) = cVar14;\n        *(cVar14 + 4 + arg_1ch) = 0;\n    }\n    else {\n        *arg_1ch = 0;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 1) = ((uVar8 != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 2) = 0x30;\n        *(arg_1ch + 5) = 0;\n    }\ncode_r0x10022f73:\n    var_ch = noname_1;\n    fcn.100081be(1);\n    return;\n}\n",
        "token_count": 8964
    },
    "10022d8c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.10022d8c(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    bool bVar5;\n    int16_t iVar6;\n    uint32_t uVar7;\n    char cVar8;\n    int16_t unaff_BX;\n    int16_t *piVar9;\n    int16_t *piVar10;\n    int32_t unaff_EBP;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    uint var_74h;\n    uint var_70h;\n    uint var_60h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x18) = ((unaff_BX == 0) - 1 & 0x80000000) + 0x7fff8000;\n    uVar2 = *(unaff_EBP + 0x18);\n    piVar9 = *(unaff_EBP + -0x60);\n    iVar15 = *(unaff_EBP + 0x14);\n    iVar6 = *(unaff_EBP + -0x4c);\n    *piVar9 = iVar6;\n    if (((uVar2 & 1) == 0) || (iVar15 = iVar15 + iVar6,  0 < iVar15)) {\n        if (0x15 < iVar15) {\n            iVar15 = 0x15;\n        }\n        iVar11 = (*(unaff_EBP + -0x18) >> 0x10) - 0x3ffe;\n        *(unaff_EBP + -0x16) = 0;\n        *(unaff_EBP + -0x44) = 8;\n        do {\n            uVar12 = *(unaff_EBP + -0x20);\n            uVar13 = *(unaff_EBP + -0x1c);\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) << 1;\n            piVar1 = unaff_EBP + -0x44;\n            *piVar1 = *piVar1 + -1;\n            *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) * 2 | uVar12 >> 0x1f;\n            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) * 2 | uVar13 >> 0x1f;\n        } while (*piVar1 != 0);\n        if ((iVar11 < 0) && (uVar12 = -iVar11 & 0xff,  uVar12 != 0)) {\n            do {\n                iVar11 = *(unaff_EBP + -0x18);\n                iVar3 = *(unaff_EBP + -0x1c);\n                *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) >> 1;\n                uVar12 = uVar12 - 1;\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) >> 1 | iVar11 << 0x1f;\n                *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) >> 1 | iVar3 << 0x1f;\n            } while (0 < uVar12);\n        }\n        iVar15 = iVar15 + 1;\n        piVar9 = piVar9 + 2;\n        *(unaff_EBP + -0x40) = piVar9;\n        *(unaff_EBP + -0x4c) = iVar15;\n        while (0 < iVar15) {\n            uVar12 = *(unaff_EBP + -0x20);\n            *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x20);\n            *(unaff_EBP + -0x38) = *(unaff_EBP + -0x1c);\n            *(unaff_EBP + -0x34) = *(unaff_EBP + -0x18);\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) << 1;\n            uVar13 = *(unaff_EBP + -0x20);\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) << 1;\n            uVar14 = *(unaff_EBP + -0x1c) * 2;\n            uVar7 = (*(unaff_EBP + -0x18) * 2 | *(unaff_EBP + -0x1c) >> 0x1f) * 2 | uVar14 >> 0x1f;\n            uVar13 = (uVar14 | uVar12 >> 0x1f) * 2 | uVar13 >> 0x1f;\n            uVar12 = *(unaff_EBP + -0x3c) + *(unaff_EBP + -0x20);\n            if ((uVar12 < *(unaff_EBP + -0x20)) || (uVar14 = uVar13,  uVar12 < *(unaff_EBP + -0x3c))) {\n                uVar14 = uVar13 + 1;\n                bVar5 = false;\n                if ((uVar14 < uVar13) || (uVar14 == 0)) {\n                    bVar5 = true;\n                }\n                if (bVar5) {\n                    uVar7 = uVar7 + 1;\n                }\n            }\n            uVar13 = *(unaff_EBP + -0x38) + uVar14;\n            *(unaff_EBP + -0x44) = uVar13;\n            if ((uVar13 < uVar14) || (uVar13 < *(unaff_EBP + -0x38))) {\n                uVar7 = uVar7 + 1;\n            }\n            uVar14 = (uVar7 + *(unaff_EBP + -0x34)) * 2;\n            *(unaff_EBP + -0x20) = uVar12 * 2;\n            iVar11 = *(unaff_EBP + -0x44);\n            *(unaff_EBP + -0x18) = uVar14 | uVar13 >> 0x1f;\n            *piVar9 = (uVar14 >> 0x18) + '0';\n            piVar9 = piVar9 + 1;\n            *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + -1;\n            iVar15 = *(unaff_EBP + -0x4c);\n            *(unaff_EBP + -0x1c) = iVar11 * 2 | uVar12 >> 0x1f;\n            *(unaff_EBP + -0x15) = 0;\n        }\n        piVar10 = piVar9 + -1;\n        if (*(piVar9 + -1) < '5') {\n            piVar4 = *(unaff_EBP + -0x40);\n            for (; (piVar4 <= piVar10 && (*piVar10 == '0')); piVar10 = piVar10 + -1) {\n            }\n            piVar9 = *(unaff_EBP + -0x60);\n            if (piVar10 < piVar4) {\n                *piVar9 = 0;\n                iVar6 = *(unaff_EBP + -0x70);\n                *(piVar9 + 3) = 1;\n                *(piVar9 + 1) = ((iVar6 != -0x8000) - 1U & 0xd) + 0x20;\n                *piVar4 = 0x30;\n                *(piVar9 + 5) = 0;\n                goto code_r0x10022f73;\n            }\n        }\n        else {\n            for (; (*(unaff_EBP + -0x40) <= piVar10 && (*piVar10 == '9')); piVar10 = piVar10 + -1) {\n                *piVar10 = 0x30;\n            }\n            piVar9 = *(unaff_EBP + -0x60);\n            if (piVar10 < *(unaff_EBP + -0x40)) {\n                piVar10 = piVar10 + 1;\n                *piVar9 = *piVar9 + 1;\n            }\n            *piVar10 = *piVar10 + '\\x01';\n        }\n        cVar8 = (piVar10 - piVar9) + -3;\n        *(piVar9 + 3) = cVar8;\n        *(cVar8 + 4 + piVar9) = 0;\n    }\n    else {\n        *piVar9 = 0;\n        iVar6 = *(unaff_EBP + -0x70);\n        *(piVar9 + 3) = 1;\n        *(piVar9 + 1) = ((iVar6 != -0x8000) - 1U & 0xd) + 0x20;\n        *(piVar9 + 2) = 0x30;\n        *(piVar9 + 5) = 0;\n    }\ncode_r0x10022f73:\n    fcn.100081be(noname_1);\n    return;\n}\n",
        "token_count": 2216
    },
    "100031b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x1000347d)\n// WARNING: Removing unreachable block (ram,0x100033c0)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.100031b0(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, \n            uint noname_31, uint noname_32, uint noname_33, uint arg_90h, uint arg_94h, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint arg_a8h, uint noname_41, uint noname_42, uint noname_43, uint arg_b8h, \n            uint noname_45, uint noname_46, uint noname_47, uint arg_c8h, uint arg_cch, uint arg_d0h, uint arg_d4h, \n            uint arg_d8h, uint arg_dch, uint arg_e0h, uint arg_e4h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char cVar7;\n    int32_t iVar8;\n    char cVar9;\n    uint var_4h;\n    int32_t iStack20;\n    uint uStack16;\n    \n    uVar2 = uStack16;\n    iVar6 = *(noname_0 + 0xd8);\n    iVar5 = *(noname_0 + 0x94);\n    if (iVar5 <= iVar6) {\n        uStack16 = uStack16 & 0xffffff00;\n        *(noname_0 + 200) = uStack16;\n        *(noname_0 + 0xcc) = 1;\n        *(noname_0 + 0xd0) = iVar6;\n        *(noname_0 + 0xd4) = 0;\n        return 1;\n    }\n    iVar8 = 1;\n    iStack20 = 1;\n    if (iVar6 < *(noname_0 + 0x94)) {\n        uVar3 = *(iVar6 + *(noname_0 + 0x90));\n    }\n    else {\n        uVar3 = 0;\n    }\n    if (*(noname_0 + 0xe0) != 0) {\n        if (((uVar3 == 0x5c) && (iVar6 + 1 < *(noname_0 + 0x94))) && (*(*(noname_0 + 0x90) + iVar6 + 1) == 'E')) {\n            *(noname_0 + 0xe4) = 0;\n            *(noname_0 + 0xe0) = 0;\n            *(noname_0 + 0xd8) = iVar6 + 2;\n            return 0;\n        }\n        if (*(noname_0 + 0xe4) == NULL) {\n            uStack16 = uStack16 & 0xffffff00 | uVar3;\n        }\n        else {\n            uVar3 = (**(noname_0 + 0xe4))(uVar3);\n            uStack16 = uStack16 & 0xffffff00 | uVar3;\n        }\n        *(noname_0 + 200) = uStack16;\n        *(noname_0 + 0xcc) = 0;\n        *(noname_0 + 0xd8) = *(noname_0 + 0xd8) + 1;\n        *(noname_0 + 0xd0) = iVar6;\n        *(noname_0 + 0xd4) = 1;\n        return 1;\n    }\n    // switch table (126 cases) at 0x1000396c\n    switch(uVar3) {\n    case 9:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0x20:\n        if ((*(noname_0 + 4) & 0x20) != 0) {\n            *(noname_0 + 0xd8) = iVar6 + 1;\n            return 0;\n        }\n        break;\n    case 0x23:\n        if ((*(noname_0 + 4) & 0x20) != 0) {\n            iVar6 = iVar6 + 1;\n            *(noname_0 + 0xd8) = iVar6;\n            if (iVar6 < iVar5) {\n                do {\n                    if (iVar6 < *(noname_0 + 0x94)) {\n                        if (*(*(noname_0 + 0x90) + iVar6) == '\\n') {\n                            return 0;\n                        }\n                        if ((iVar6 < *(noname_0 + 0x94)) && (*(*(noname_0 + 0x90) + iVar6) == '\\r')) {\n                            return 0;\n                        }\n                    }\n                    iVar6 = iVar6 + 1;\n                    *(noname_0 + 0xd8) = iVar6;\n                } while (iVar6 < *(noname_0 + 0x94));\n            }\n            return 0;\n        }\n        break;\n    case 0x24:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n    case 0x2e:\n    case 0x3f:\n    case 0x7b:\n    case 0x7c:\n    case 0x7d:\n        iVar1 = *(noname_0 + 0xdc);\n        uStack16 = uStack16 & 0xffffff00 | uVar3;\n        *(noname_0 + 200) = uStack16;\n        goto joined_r0x100036d0;\n    case 0x28:\n        if (iVar6 + 1 < *(noname_0 + 0x94)) {\n            cVar9 = *(iVar6 + 1 + *(noname_0 + 0x90));\n        }\n        else {\n            cVar9 = '\\0';\n        }\n        iVar8 = iVar6 + 2;\n        if (iVar8 < *(noname_0 + 0x94)) {\n            cVar7 = *(iVar8 + *(noname_0 + 0x90));\n        }\n        else {\n            cVar7 = '\\0';\n        }\n        if ((cVar9 == '?') && (cVar7 == '#')) {\n            *(noname_0 + 0xd8) = iVar8;\n            if (iVar8 < iVar5) {\n                do {\n                    iVar6 = *(noname_0 + 0xd8);\n                    if ((iVar6 < *(noname_0 + 0x94)) && (*(*(noname_0 + 0x90) + iVar6) == ')')) break;\n                    *(noname_0 + 0xd8) = iVar6 + 1;\n                } while (iVar6 + 1 < *(noname_0 + 0x94));\n            }\n            iVar6 = *(noname_0 + 0xd8);\n            if ((iVar6 < *(noname_0 + 0x94)) && (*(*(noname_0 + 0x90) + iVar6) == ')')) {\n                *(noname_0 + 0xd8) = iVar6 + 1;\n                return 0;\n            }\n            goto code_r0x1000367c;\n        }\n        uStack16 = uStack16 & 0xffffff00 | uVar3;\n        *(noname_0 + 200) = uStack16;\n        if (*(noname_0 + 0xdc) < 1) goto code_r0x100038c8;\ncode_r0x1000379e:\n        iVar8 = 1;\n        iVar5 = 0;\n        goto code_r0x1000366a;\n    case 0x2d:\n        iVar1 = *(noname_0 + 0xdc);\n        uStack16 = uStack16 & 0xffffff00 | uVar3;\n        *(noname_0 + 200) = uStack16;\njoined_r0x100036d0:\n        iVar5 = iVar8;\n        if (iVar1 < 1) {\ncode_r0x100036b8:\n            iVar5 = 0;\n        }\n        goto code_r0x1000366a;\n    case 0x3a:\n        iVar5 = fcn.10003140();\n        uStack16 = uStack16 & 0xffffff00 | uVar3;\n        *(noname_0 + 200) = uStack16;\n        if (iVar5 == 0) goto code_r0x1000379e;\ncode_r0x100038c8:\n        iVar8 = 1;\n        iVar5 = iVar8;\n        goto code_r0x1000366a;\n    case 0x5b:\n        if ((*(noname_0 + 0xdc) == 0) ||\n           ((iVar6 + 1 < *(noname_0 + 0x94) && (*(iVar6 + 1 + *(noname_0 + 0x90)) == ':')))) {\n            *(noname_0 + 0xdc) = *(noname_0 + 0xdc) + 1;\n            goto code_r0x1000385a;\n        }\n        break;\n    case 0x5c:\n        iVar8 = iVar6 + 1;\n        if (iVar8 < *(noname_0 + 0x94)) {\n            uVar4 = *(iVar8 + *(noname_0 + 0x90));\n            if (uVar4 - 0x30 < 10) goto code_r0x1000385a;\n        }\n        else {\n            uVar4 = 0;\n        }\n        iStack20 = 2;\n    // switch table (123 cases) at 0x10003a1c\n        switch(uVar4) {\n        case 0:\n            if (iVar5 <= iVar8) goto code_r0x1000365a;\n        default:\n            uStack16 = uStack16 & 0xffffff00 | uVar4;\n            iVar5 = 0;\n            iVar8 = 2;\n            break;\n        case 0x41:\n        case 0x42:\n        case 0x44:\n        case 0x53:\n        case 0x57:\n        case 0x5a:\n        case 100:\n        case 0x67:\n        case 0x6b:\n        case 0x73:\n        case 0x77:\n        case 0x7a:\n            goto code_r0x10003326;\n        case 0x45:\n            *(noname_0 + 0xe4) = 0;\n            *(noname_0 + 0xe0) = 0;\n            *(noname_0 + 0xd8) = iVar6 + 2;\n            return 0;\n        case 0x47:\n            if (0 < *(noname_0 + 0xdc)) {\n                *(noname_0 + 0xd8) = iVar6 + 2;\n                return 0;\n            }\n            goto code_r0x10003326;\n        case 0x4c:\n            if (*(noname_0 + 0xe4) != 0) goto code_r0x1000360d;\n            *(noname_0 + 0xe4) = fcn.10008dfe;\n        case 0x55:\n            if (*(noname_0 + 0xe4) == 0) {\n                *(noname_0 + 0xe4) = fcn.10008f75;\n            }\ncode_r0x1000360d:\n            *(noname_0 + 0xe0) = 1;\n            *(noname_0 + 0xd8) = iVar6 + 2;\n            return 0;\n        case 0x51:\n            goto code_r0x1000360d;\n        case 0x61:\n            iVar5 = 0;\n            uStack16 = CONCAT31(uStack16._1_3_, 7);\n            iVar8 = 2;\n            break;\n        case 0x62:\n            iVar8 = 2;\n            if (*(noname_0 + 0xdc) < 1) {\n                uStack16 = uStack16 & 0xffffff00 | uVar4;\n                iVar5 = 1;\n            }\n            else {\n                uStack16 = CONCAT31(uStack16._1_3_, 8);\n                iVar5 = 0;\n            }\n            break;\n        case 0x65:\n            iVar5 = 0;\n            uStack16 = CONCAT31(uStack16._1_3_, 0x1b);\n            iVar8 = 2;\n            break;\n        case 0x66:\n            iVar5 = 0;\n            uStack16 = CONCAT31(uStack16._1_3_, 0xc);\n            iVar8 = 2;\n            break;\n        case 0x6e:\n            iVar5 = 0;\n            uStack16 = CONCAT31(uStack16._1_3_, 10);\n            iVar8 = 2;\n            break;\n        case 0x72:\n            iVar5 = 0;\n            uStack16 = CONCAT31(uStack16._1_3_, 0xd);\n            iVar8 = 2;\n            break;\n        case 0x74:\n            iVar5 = 0;\n            uStack16 = CONCAT31(uStack16._1_3_, 9);\n            iVar8 = 2;\n            break;\n        case 0x75:\ncode_r0x1000341c:\n            if ((*(noname_0 + 0x94) <= iVar6 + 2) || (*(*(noname_0 + 0x90) + iVar6 + 2) != '{')) {\n                fcn.100043f0();\n                iVar6 = *(noname_0 + 0xd8);\n                goto code_r0x100033ed;\n            }\n            uVar3 = fcn.100043f0();\n            iStack20 = 2;\n            iVar6 = *(noname_0 + 0xd8) + 2;\n            if (iVar6 < *(noname_0 + 0x94)) {\n                do {\n                    if ((iVar6 < *(noname_0 + 0x94)) && (*(iVar6 + *(noname_0 + 0x90)) == '}')) break;\n                    iStack20 = iStack20 + 1;\n                    iVar6 = iVar6 + 1;\n                } while (*(noname_0 + 0xd8) + iStack20 < *(noname_0 + 0x94));\n            }\n            uStack16 = uStack16 & 0xffffff00 | uVar3;\n            iVar8 = iStack20 + 1;\n            *(noname_0 + 200) = uStack16;\n            *(noname_0 + 0xcc) = 0;\n            iVar6 = *(noname_0 + 0xd8);\n            *(noname_0 + 0xd0) = iVar6;\n            iStack20 = iVar8;\n            goto code_r0x10003676;\n        case 0x76:\n            iVar5 = 0;\n            uStack16 = CONCAT31(uStack16._1_3_, 0xb);\n            iVar8 = 2;\n            break;\n        case 0x78:\n            if ((iVar6 + 2 < *(noname_0 + 0x94)) && (*(*(noname_0 + 0x90) + iVar6 + 2) == '{')) goto code_r0x1000341c;\n            fcn.100043f0();\n            iVar6 = *(noname_0 + 0xd8);\ncode_r0x100033ed:\n            iStack20 = 2;\n            uStack16 = uStack16 & 0xffffff00 | uVar4;\n            *(noname_0 + 200) = uStack16;\n            *(noname_0 + 0xcc) = 0;\n            *(noname_0 + 0xd0) = *(noname_0 + 0xd8);\n            iVar8 = iStack20;\n            goto code_r0x10003676;\n        }\n        goto code_r0x10003660;\n    case 0x5d:\n        uStack16 = uStack16 & 0xffffff00 | uVar3;\n        *(noname_0 + 200) = uStack16;\n        if (0 < *(noname_0 + 0xdc)) {\n            *(noname_0 + 0xdc) = *(noname_0 + 0xdc) + -1;\n            iVar5 = 1;\n            goto code_r0x1000366a;\n        }\n        goto code_r0x100036b8;\n    case 0x5e:\n        if (*(noname_0 + 0xdc) != 0) {\n            uStack16 = CONCAT31(uStack16._1_3_, 0x5b);\n            iVar5 = fcn.10003140();\n            if (iVar5 == 0) {\n                uStack16 = uVar2 & 0xffffff00;\n                iVar5 = fcn.10003140();\n                if (iVar5 != 0) {\n                    uStack16._1_3_ = uStack16 >> 8;\n                    uStack16 = CONCAT31(uStack16._1_3_, 0x3a);\n                    iVar5 = fcn.10003140();\n                    if (iVar5 != 0) goto code_r0x1000385a;\n                }\n                break;\n            }\n        }\ncode_r0x1000385a:\n        iVar5 = 1;\n        goto code_r0x1000365c;\n    }\ncode_r0x1000365a:\n    iVar5 = 0;\ncode_r0x1000365c:\n    iStack20 = 1;\n    iVar8 = 1;\n    uStack16 = uStack16 & 0xffffff00 | uVar3;\n    goto code_r0x10003660;\ncode_r0x10003326:\n    uStack16 = uStack16 & 0xffffff00 | uVar4;\n    iVar5 = 1;\n    iVar8 = 2;\ncode_r0x10003660:\n    *(noname_0 + 200) = uStack16;\ncode_r0x1000366a:\n    *(noname_0 + 0xcc) = iVar5;\n    *(noname_0 + 0xd0) = iVar6;\ncode_r0x10003676:\n    *(noname_0 + 0xd4) = iVar8;\ncode_r0x1000367c:\n    *(noname_0 + 0xd8) = iVar6 + iStack20;\n    return 1;\n}\n",
        "token_count": 4329
    },
    "100015b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.100015b0(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t **in_FS_OFFSET;\n    code *pcStack24;\n    char *pcStack20;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x100242ed;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x10034058 ^ &pcStack24;\n    *in_FS_OFFSET = &piStack12;\n    fcn.10001f20(uVar2);\n    pcStack24 = vtable.CBufferRefT_char_.0;\n    pcStack20 = \"Tool oil \";\n    piVar3 = NULL;\n    do {\n        piStack16 = piVar3 + 1;\n        iVar1 = piVar3 + 1;\n        piVar3 = piStack16;\n    } while (\"Tool oil \"[iVar1] != '\\0');\n    uStack4 = 1;\n    fcn.10002130(piStack16);\n    *in_FS_OFFSET = piStack16;\n    return 0x1004f580;\n}\n",
        "token_count": 281
    },
    "10001650": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.10001650(uint param_1)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    int32_t *piVar4;\n    \n    uStack8 = 0x100242c2;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x10034058 ^ &stack0xffffffdc;\n    *in_FS_OFFSET = &piStack12;\n    piVar4 = NULL;\n    do {\n        piVar3 = piVar4 + 1;\n        pcVar1 = piVar4 + 0x10030a71;\n        piVar4 = piVar3;\n    } while (*pcVar1 != '\\0');\n    uStack4 = 1;\n    fcn.100021b0(param_1, uVar2);\n    *in_FS_OFFSET = piVar3;\n    return param_1;\n}\n",
        "token_count": 230
    },
    "10002dd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.10002dd0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t unaff_EBX;\n    int32_t iVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack36;\n    int32_t *piStack24;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x100241cb;\n    piStack20 = *in_FS_OFFSET;\n    uVar1 = *0x10034058 ^ &stack0xffffffd0;\n    *in_FS_OFFSET = &piStack20;\n    if ((*(unaff_EBX + 0xa8) == '\\0') && (*(unaff_EBX + 0xac) == 1)) {\n        uVar1 = fcn.10003c50(0);\n        *in_FS_OFFSET = piStack24;\n        return uVar1;\n    }\n    uVar2 = fcn.10003ae0();\n    if ((*(unaff_EBX + 0xa8) == '|') && (*(unaff_EBX + 0xac) == 1)) {\n        piStack36 = fcn.100092cc(0x18);\n        piStack20 = NULL;\n        if (piStack36 == NULL) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.10004290(piStack36);\n        }\n        if (*(unaff_EBX + 0x24) <= *(unaff_EBX + 0x1c)) {\n            iVar6 = *(unaff_EBX + 0x24) * 2;\n            if (iVar6 < 8) {\n                iVar6 = 8;\n            }\n            uVar4 = fcn.10008ff6(*(unaff_EBX + 0x20), iVar6 * 4);\n            *(unaff_EBX + 0x20) = uVar4;\n            *(unaff_EBX + 0x18) = uVar4;\n            *(unaff_EBX + 0x24) = iVar6;\n        }\n        *(*(unaff_EBX + 0x20) + *(unaff_EBX + 0x1c) * 4) = iVar3;\n        *(unaff_EBX + 0x1c) = *(unaff_EBX + 0x1c) + 1;\n        fcn.10003160(uVar1);\n        while ((uVar2 = uVar1,  *(unaff_EBX + 0xa8) == '|' && (*(unaff_EBX + 0xac) == 1))) {\n            fcn.10002d20();\n            uVar4 = fcn.10003ae0();\n            if (*(iVar3 + 0x14) <= *(iVar3 + 0xc)) {\n                iVar6 = *(iVar3 + 0x14) * 2;\n                if (iVar6 < 8) {\n                    iVar6 = 8;\n                }\n                uVar5 = fcn.10008ff6(*(iVar3 + 0x10), iVar6 * 4);\n                *(iVar3 + 0x10) = uVar5;\n                *(iVar3 + 8) = uVar5;\n                *(iVar3 + 0x14) = iVar6;\n            }\n            *(*(iVar3 + 0x10) + *(iVar3 + 0xc) * 4) = uVar4;\n            *(iVar3 + 0xc) = *(iVar3 + 0xc) + 1;\n        }\n    }\n    *in_FS_OFFSET = piStack36;\n    return uVar2;\n}\n",
        "token_count": 839
    },
    "10003ae0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.10003ae0(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n                 uint param_8, uint param_9, uint param_10, uint param_11, uint param_12, uint param_13, uint param_14, \n                 uint param_15, uint param_16, uint param_17, uint param_18, uint param_19, uint param_20, uint param_21\n                 , uint param_22, uint param_23, uint param_24, uint param_25, uint param_26)\n\n{\n    char *pcVar1;\n    uint32_t noname_2;\n    uint noname_2_00;\n    int32_t iVar2;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint32_t *unaff_retaddr;\n    unkbyte3 Var4;\n    uint noname_7;\n    uint in_stack_ffffffe0;\n    uint noname_8;\n    uint in_stack_ffffffe4;\n    uint noname_9;\n    uint in_stack_ffffffe8;\n    uint noname_10;\n    uint in_stack_ffffffec;\n    int32_t in_stack_fffffff0;\n    uint noname_13;\n    uint noname_14;\n    uint noname_15;\n    \n    noname_14 = 0x1002419b;\n    iVar2 = *in_FS_OFFSET;\n    noname_2 = *0x10034058 ^ &stack0xffffffd0;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    pcVar1 = param_1 + 0xa8;\n    if ((((*pcVar1 == '\\0') && (*(param_1 + 0xac) == 1)) || ((*pcVar1 == '|' && (*(param_1 + 0xac) == 1)))) ||\n       ((*pcVar1 == ')' && (*(param_1 + 0xac) == 1)))) {\n        uVar3 = fcn.10003c50(0);\n    }\n    else {\n        noname_2_00 = fcn.10004450(param_1, param_2, noname_2, unaff_EDI, unaff_ESI, unaff_EBP, unaff_EBX, \n                                   in_stack_ffffffe0, in_stack_ffffffe4, in_stack_ffffffe8, in_stack_ffffffec, \n                                   in_stack_fffffff0, iVar2, 0x1002419b, 0xffffffff, unaff_retaddr, param_1, param_2, \n                                   param_3, param_4, param_5, param_6, param_7, param_8, param_9, param_10, param_11, \n                                   param_12, param_13, param_14, param_15, param_16, param_17, param_18, param_19, \n                                   param_20, param_21, param_22, param_23, param_24, param_25, param_26);\n        uVar3 = noname_2_00;\n        if ((*pcVar1 != '\\0') || (*(param_1 + 0xac) != 1)) {\n            Var4 = unaff_EBX >> 8;\n            iVar2 = fcn.100043c0();\n            if (iVar2 != 0) {\n                noname_7 = CONCAT31(Var4, 0x29);\n                noname_8 = 1;\n                noname_9 = 0;\n                noname_10 = 0;\n                iVar2 = fcn.100043c0();\n                if (iVar2 != 0) {\n                    iVar2 = fcn.100092cc(0x1c);\n                    noname_13 = 0;\n                    if (iVar2 != 0) {\n                        fcn.10004790(iVar2, *unaff_retaddr & 0x10);\n                    }\n                    noname_15 = 0xffffffff;\n                    uVar3 = fcn.100040f0();\n                    while ((((fcn.10003160(),  *pcVar1 != '\\0' || (*(param_1 + 0xac) != 1)) &&\n                            ((*pcVar1 != '|' || (*(param_1 + 0xac) != 1)))) &&\n                           ((*pcVar1 != ')' || (*(param_1 + 0xac) != 1))))) {\n                        noname_2_00 = fcn.10004450(unaff_retaddr, param_1, noname_2_00, noname_2, unaff_EDI, unaff_ESI, \n                                                   iVar2, noname_7, noname_8, noname_9, noname_10, in_stack_ffffffec, \n                                                   in_stack_fffffff0, noname_13, noname_14, noname_15, unaff_retaddr, \n                                                   param_1, param_2, param_3, param_4, param_5, param_6, param_7, \n                                                   param_8, param_9, param_10, param_11, param_12, param_13, param_14, \n                                                   param_15, param_16, param_17, param_18, param_19, param_20, param_21\n                                                   , param_22, param_23, param_24, param_25);\n                    }\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffff0;\n    return uVar3;\n}\n",
        "token_count": 1246
    },
    "10003c50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.10003c50(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x10023d4b;\n    iStack12 = *in_FS_OFFSET;\n    uVar1 = *0x10034058 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    while ((param_1 < 0 || (0x10 < param_1))) {\n        param_1 = 0;\n    }\n    if (*(unaff_EDI + 0xe8 + param_1 * 4) != 0) goto code_r0x10004082;\n    // switch table (17 cases) at 0x100040a0\n    switch(param_1) {\n    case 0:\n        iVar2 = fcn.100092cc(4);\n        uStack4 = 0;\n        if (iVar2 != 0) {\n            fcn.10004840(iVar2);\n        }\n        goto code_r0x10003cc6;\n    case 1:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 3;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 0, 0, uVar1);\n        }\n        goto code_r0x10003cc6;\n    case 2:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 4;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 0, 0, uVar1);\n        }\n        goto code_r0x10003dd0;\n    case 3:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 1;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 0, 1, uVar1);\n        }\n        break;\n    case 4:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 2;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 0, 0, uVar1);\n        }\n        break;\n    case 5:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 5;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 0, 1, uVar1);\n        }\n        goto code_r0x10003e15;\n    case 6:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 6;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 0, 0, uVar1);\n        }\ncode_r0x10003e15:\n        uVar3 = fcn.100040f0();\n        fcn.10004a80();\n        fcn.10004a80(9);\n        fcn.10004a80(0xd);\n        uVar4 = 10;\n        goto code_r0x10004076;\n    case 7:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 7;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 0, 1, uVar1);\n        }\n        goto code_r0x10004057;\n    case 8:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 8;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 0, 0, uVar1);\n        }\n        goto code_r0x10004057;\n    case 9:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 0xb;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 1, 0, uVar1);\n        }\ncode_r0x10003cc6:\n        iStack12 = 0xffffffff;\n        uVar3 = fcn.100040f0();\n        *(unaff_EDI + 0xe8 + param_1 * 4) = uVar3;\n        goto code_r0x10004082;\n    case 10:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 0xc;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 1, 0, uVar1);\n        }\ncode_r0x10003dd0:\n        uStack8 = 0xffffffff;\n        uVar3 = fcn.100040f0();\n        uVar4 = 10;\n        goto code_r0x10004076;\n    case 0xb:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 9;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 1, 1, uVar1);\n        }\n        break;\n    case 0xc:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 10;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 1, 0, uVar1);\n        }\n        break;\n    case 0xd:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 0xd;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 1, 1, uVar1);\n        }\n        goto code_r0x10003fa3;\n    case 0xe:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 0xe;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 1, 0, uVar1);\n        }\ncode_r0x10003fa3:\n        uVar3 = fcn.100040f0();\n        fcn.10004a80();\n        unaff_EBP = 9;\n        fcn.10004a80();\n        fcn.10004a80();\n        fcn.10004a80(10);\n        fcn.10004a80(0xc);\n        uVar4 = 0xb;\n        goto code_r0x10004076;\n    case 0xf:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 0xf;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 1, 1, uVar1);\n        }\n        goto code_r0x10004057;\n    case 0x10:\n        iVar2 = fcn.100092cc(0x48);\n        uStack4 = 0x10;\n        if (iVar2 != 0) {\n            fcn.100049a0(iVar2, 1, 0, uVar1);\n        }\ncode_r0x10004057:\n        uStack4 = 0xffffffff;\n        uVar3 = fcn.100040f0();\n        fcn.10004a80(0x30);\n        uVar4 = 0x39;\n        goto code_r0x10004076;\n    default:\n        goto code_r0x10004082;\n    }\n    iStack12 = 0x10003d1c;\n    uVar3 = fcn.100040f0();\n    iStack12 = 0x41;\n    fcn.10004a80();\n    fcn.10004a80();\n    unaff_EBP = 0x61;\n    fcn.10004a80();\n    fcn.10004a80();\n    fcn.10004a80(0x30);\n    fcn.10004a80(0x39);\n    uVar4 = 0x5f;\ncode_r0x10004076:\n    fcn.10004a80(uVar4);\n    *(unaff_EDI + 0xe8 + param_1 * 4) = uVar3;\ncode_r0x10004082:\n    uVar3 = *(unaff_EDI + 0xe8 + param_1 * 4);\n    *in_FS_OFFSET = unaff_EBP;\n    return uVar3;\n}\n",
        "token_count": 1974
    },
    "10004310": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10004310(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    \n    if (*(param_2 + 0x1c) <= *in_EAX) {\n        *in_EAX = *(param_2 + 0x1c) + -4;\n    }\n    if (-1 < *in_EAX) {\n        iVar1 = *(param_2 + 0x20);\n        iVar2 = *(param_3 + 4);\n        do {\n            if (*(iVar1 + *in_EAX * 4) == iVar2) {\n                return 1;\n            }\n            iVar3 = *in_EAX + -4;\n            *in_EAX = iVar3;\n        } while (-1 < iVar3);\n    }\n    return 0;\n}\n",
        "token_count": 208
    },
    "10004450": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.10004450(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, \n            uint noname_31, uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, \n            uint noname_37, uint noname_38, uint noname_39, uint arg_a8h, uint arg_ach)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint32_t unaff_retaddr;\n    uint uVar3;\n    uchar auStack36 [8];\n    char *pcStack28;\n    int32_t *piStack20;\n    int32_t *piStack12;\n    uint uStack8;\n    char *pcStack4;\n    \n    pcStack4 = 0xffffffff;\n    uStack8 = 0x10024174;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x10034058 ^ &stack0xffffffc8;\n    *in_FS_OFFSET = &piStack12;\n    uVar1 = fcn.10004bf0(noname_1, uVar1);\n    if (*(noname_0 + 0xac) == 0) goto code_r0x1000470c;\n    // switch table (82 cases) at 0x10004724\n    switch(*(noname_0 + 0xa8)) {\n    case 0x2a:\n        break;\n    case 0x2b:\n        break;\n    default:\n        goto code_r0x1000470c;\n    case 0x3f:\n        break;\n    case 0x7b:\n        fcn.10004fb0(auStack36);\n        piStack12 = NULL;\n        fcn.10002d20();\n        while (((*(noname_0 + 0xa8) != '\\0' || (*(noname_0 + 0xac) != 1)) &&\n               ((*(noname_0 + 0xa8) != '}' || (*(noname_0 + 0xac) != 1))))) {\n            pcStack4 = pcStack4 & 0xffffff00 | *(noname_0 + 0xa8);\n            fcn.10006fb0();\n            fcn.10002d20();\n        }\n        fcn.10002d20();\n        pcStack4 = pcStack28;\n        if (pcStack28 == NULL) {\n            pcStack4 = 0x10030adf;\n        }\n        iVar2 = fcn.10004b50();\n        if (iVar2 == 0) {\ncode_r0x1000454f:\n            uVar1 = unaff_retaddr;\n            if (iVar2 == 2) {\ncode_r0x1000455a:\n                uVar1 = 0x7fffffff;\n                goto code_r0x1000455f;\n            }\n        }\n        else {\n            if (*pcStack4 != ',') {\n                iVar2 = 1;\n                goto code_r0x1000454f;\n            }\n            pcStack4 = pcStack4 + 1;\n            iVar2 = fcn.10004b50();\n            if (iVar2 == 0) goto code_r0x1000455a;\ncode_r0x1000455f:\n            if (uVar1 < unaff_retaddr) {\n                uVar1 = unaff_retaddr;\n            }\n        }\n        piStack12 = 0xffffffff;\n        fcn.10001a20();\n        if (uVar1 == 0) {\n            fcn.10003c50(0);\n            goto code_r0x1000470c;\n        }\n        if (unaff_retaddr != uVar1) goto code_r0x100045d9;\n        if (((*(noname_0 + 0xa8) == '?') && (*(noname_0 + 0xac) == 1)) ||\n           ((*(noname_0 + 0xa8) == '+' && (*(noname_0 + 0xac) == 1)))) {\n            fcn.10002d20();\n        }\n        pcStack4 = fcn.100092cc(0xc);\n        piStack12 = 0x1;\n        if (pcStack4 != NULL) {\n            fcn.10005050(pcStack4);\n        }\n        goto code_r0x100046fb;\n    }\n    fcn.10002d20();\ncode_r0x100045d9:\n    if ((*(noname_0 + 0xa8) == '?') && (*(noname_0 + 0xac) == 1)) {\n        fcn.10002d20();\n        uVar3 = 0x10;\n        pcStack4 = fcn.100092cc(0x10);\n        piStack12 = 0x2;\n        if (pcStack4 != NULL) {\n            fcn.100051a0(uVar3, pcStack4);\n        }\n    }\n    else if ((*(noname_0 + 0xa8) == '+') && (*(noname_0 + 0xac) == 1)) {\n        fcn.10002d20();\n        uVar3 = 0x10;\n        pcStack4 = fcn.100092cc(0x10);\n        piStack12 = 0x3;\n        if (pcStack4 != NULL) {\n            fcn.10005480(uVar3, pcStack4);\n        }\n    }\n    else {\n        uVar3 = 0x10;\n        pcStack4 = fcn.100092cc(0x10);\n        piStack12 = 0x4;\n        if (pcStack4 != NULL) {\n            fcn.100052c0(uVar3, pcStack4);\n        }\n    }\ncode_r0x100046fb:\n    piStack12 = 0xffffffff;\n    fcn.100040f0();\ncode_r0x1000470c:\n    *in_FS_OFFSET = piStack20;\n    return;\n}\n",
        "token_count": 1498
    },
    "10004b50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.10004b50(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *unaff_EBX;\n    uint32_t uVar4;\n    char **unaff_EDI;\n    \n    uVar4 = 0;\n    cVar2 = **unaff_EDI;\n    while ((cVar2 != '\\0' && (iVar3 = fcn.100085da((*unaff_EDI)[uVar4]),  iVar3 != 0))) {\n        uVar4 = uVar4 + 1;\n        cVar2 = (*unaff_EDI)[uVar4];\n    }\n    if (('/' < (*unaff_EDI)[uVar4]) && ((*unaff_EDI)[uVar4] < ':')) {\n        uVar1 = uVar4 + 3;\n        *unaff_EBX = 0;\n        for (; ((uVar4 < uVar1 && (cVar2 = (*unaff_EDI)[uVar4],  '/' < cVar2)) && (cVar2 < ':')); uVar4 = uVar4 + 1) {\n            *unaff_EBX = cVar2 + -0x30 + *unaff_EBX * 10;\n        }\n        cVar2 = (*unaff_EDI)[uVar4];\n        while ((cVar2 != '\\0' && (iVar3 = fcn.100085da((*unaff_EDI)[uVar4]),  iVar3 != 0))) {\n            uVar4 = uVar4 + 1;\n            cVar2 = (*unaff_EDI)[uVar4];\n        }\n        *unaff_EDI = *unaff_EDI + uVar4;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 394
    },
    "10004bf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.10004bf0(int32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uchar uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t **in_FS_OFFSET;\n    bool bVar9;\n    uint32_t auStack40 [2];\n    code *pcStack32;\n    int32_t iStack28;\n    uint uStack24;\n    int32_t iStack20;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x1002411b;\n    piStack12 = *in_FS_OFFSET;\n    uVar4 = *0x10034058 ^ &stack0xffffffc4;\n    *in_FS_OFFSET = &piStack12;\n    iStack28 = 0;\n    uStack24 = 0;\n    pcStack32 = vtable.CBufferT_char_.0;\n    piStack16 = NULL;\n    iStack20 = 0;\n    uStack4 = 1;\n    while( true ) {\n        while( true ) {\n            if ((*(param_1 + 0xa8) == '\\0') && (*(param_1 + 0xac) == 1)) goto code_r0x10004ecb;\n            if (*(param_1 + 0xac) == 0) break;\n            if (*(param_1 + 0xac) == 1) {\n                cVar3 = *(param_1 + 0xa8);\n                if ((cVar3 == ')') || (cVar3 == '|')) goto code_r0x10004ecb;\n                if (0 < uStack24) goto code_r0x10004ed6;\n                if (cVar3 == '(') {\n                    uVar6 = fcn.10005c10(param_2, uVar4);\n                    goto code_r0x10004f76;\n                }\n                if ((((cVar3 == '[') || (cVar3 == '.')) || (cVar3 == 'w')) ||\n                   (((cVar3 == 'W' || (cVar3 == 's')) || ((cVar3 == 'S' || ((cVar3 == 'd' || (cVar3 == 'D')))))))) {\n                    uVar6 = fcn.10005660(param_2);\n                    goto code_r0x10004f76;\n                }\n                if (((((cVar3 == '^') || (cVar3 == '$')) || (cVar3 == 'A')) || ((cVar3 == 'Z' || (cVar3 == 'z')))) ||\n                   ((cVar3 == 'b' || ((cVar3 == 'B' || (cVar3 == 'G')))))) {\n                    uVar6 = fcn.10006920(param_2);\n                    goto code_r0x10004f76;\n                }\n                if (((cVar3 == '\\\\') || (cVar3 == 'k')) || (cVar3 == 'g')) {\n                    uVar6 = fcn.10006c30(param_2);\n                    goto code_r0x10004f76;\n                }\n                piVar7 = piStack16;\n                if (piStack16 < 8) {\n                    piVar7 = 0x8;\n                }\n                piVar1 = uStack24 + 2;\n                piVar8 = piVar7;\n                if ((piVar7 < piVar1) &&\n                   (piVar8 = piVar7 * 2,  piVar1 != piVar8 && SBORROW4(piVar1, piVar8) == piVar1 + piVar7 * -2 < 0)) {\n                    uVar5 = uStack24 + 0xdU & 0x80000007;\n                    if (uVar5 < 0) {\n                        uVar5 = (uVar5 - 1 | 0xfffffff8) + 1;\n                    }\n                    piVar8 = (uStack24 + 0xdU) - uVar5;\n                }\n                if (piStack16 < piVar8) {\n                    iStack28 = fcn.10008ff6(iStack20, piVar8);\n                    iStack20 = iStack28;\n                    piStack16 = piVar8;\n                }\n                *(iStack20 + uStack24) = cVar3;\n                uStack24 = uStack24 + 1;\n                *(iStack20 + uStack24) = 0;\n                fcn.10002d20();\n            }\n        }\n        if ((((*(param_1 + 0xb8) == '{') && (*(param_1 + 0xbc) == 1)) ||\n            ((*(param_1 + 0xb8) == '?' && (*(param_1 + 0xbc) == 1)))) ||\n           (((*(param_1 + 0xb8) == '*' && (*(param_1 + 0xbc) == 1)) ||\n            ((*(param_1 + 0xb8) == '+' && (*(param_1 + 0xbc) == 1)))))) break;\n        uVar2 = *(param_1 + 0xa8);\n        piVar7 = piStack16;\n        if (piStack16 < 8) {\n            piVar7 = 0x8;\n        }\n        piVar1 = uStack24 + 2;\n        piVar8 = piVar7;\n        if ((piVar7 < piVar1) &&\n           (piVar8 = piVar7 * 2,  piVar1 != piVar8 && SBORROW4(piVar1, piVar8) == piVar1 + piVar7 * -2 < 0)) {\n            uVar5 = uStack24 + 0xdU & 0x80000007;\n            if (uVar5 < 0) {\n                uVar5 = (uVar5 - 1 | 0xfffffff8) + 1;\n            }\n            piVar8 = (uStack24 + 0xdU) - uVar5;\n        }\n        if (piStack16 < piVar8) {\n            iStack28 = fcn.10008ff6(iStack20, piVar8);\n            iStack20 = iStack28;\n            piStack16 = piVar8;\n        }\n        *(iStack20 + uStack24) = uVar2;\n        uStack24 = uStack24 + 1;\n        *(iStack20 + uStack24) = 0;\n        fcn.10002d20();\n    }\n    bVar9 = uStack24 == 0;\n    if (!bVar9) goto code_r0x10004ed0;\n    auStack40[0] = auStack40[0] & 0xffffff00 | *(param_1 + 0xa8);\n    fcn.10006fb0(auStack40);\n    fcn.10002d20();\ncode_r0x10004ecb:\n    bVar9 = uStack24 == 0;\ncode_r0x10004ed0:\n    if (bVar9 || uStack24 < 0) {\n        uVar6 = fcn.10003c50(0);\n    }\n    else {\ncode_r0x10004ed6:\n        auStack40[0] = fcn.100092cc(0x20);\n        uVar4 = uStack8;\n        uStack8 = CONCAT31(uStack8._1_3_, 2);\n        if (auStack40[0] == 0) {\n            uStack8 = uVar4 & 0xffffff00 | 1;\n            uVar6 = fcn.100040f0();\n        }\n        else {\n            fcn.100070f0();\n            uStack24 = CONCAT31(uStack24._1_3_, 1);\n            uVar6 = fcn.100040f0();\n        }\n    }\ncode_r0x10004f76:\n    uStack8 = 0xffffffff;\n    fcn.10001a20();\n    *in_FS_OFFSET = piStack16;\n    return uVar6;\n}\n",
        "token_count": 1812
    },
    "1000591b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.1000591b(void)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint8_t *unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_00000020;\n    uchar uStack00000024;\n    int32_t iStack00000028;\n    uint uStack00000030;\n    uint in_stack_0000003c;\n    uint8_t *in_stack_0000004c;\n    \ncode_r0x1000591b:\n    uStack00000024 = 0x3a;\n    iStack00000028 = unaff_ESI;\n    uStack00000030 = in_EAX;\n    iVar4 = fcn.10003140();\n    if (iVar4 == 0) goto code_r0x10005955;\ncode_r0x1000593b:\n    uVar5 = fcn.10005660(in_stack_0000004c);\n    fcn.10003160(uVar5);\n    do {\n        unaff_ESI = 1;\n        if (((*unaff_EBP == 0) && (*(unaff_EBP + 4) == 1)) || ((*unaff_EBP == 0x5d && (*(unaff_EBP + 4) == 1)))) {\n            fcn.10002d20();\n            if ((*in_stack_0000004c & 8) != 0) {\n                iVar4 = *(in_stack_0000001c + 0xc) / 2;\n                iVar7 = 0;\n                if (0 < iVar4) {\n                    do {\n                        cVar3 = *(*(in_stack_0000001c + 0x10) + iVar7 * 2);\n                        if ((cVar3 < '[') && ('@' < *(*(in_stack_0000001c + 0x10) + iVar7 * 2 + 1))) {\n                            if (cVar3 < 'A') {\n                                cVar3 = 'A';\n                            }\n                            uVar2 = fcn.10008dfe(cVar3);\n                            cVar3 = *(*(in_stack_0000001c + 0x10) + 1 + iVar7 * 2);\n                            in_stack_0000004c = in_stack_0000004c & 0xffffff00 | uVar2;\n                            if ('Z' < cVar3) {\n                                cVar3 = 'Z';\n                            }\n                            cVar3 = fcn.10008dfe(cVar3);\n                            pcVar1 = *(in_stack_0000001c + 0x10) + iVar7 * 2;\n                            if ((uVar2 < *pcVar1) || (pcVar1[1] < cVar3)) {\n                                fcn.10004a80(in_stack_0000004c);\n                                fcn.10004a80();\n                            }\n                        }\n                        cVar3 = *(*(in_stack_0000001c + 0x10) + iVar7 * 2);\n                        if ((cVar3 < '{') && ('`' < *(*(in_stack_0000001c + 0x10) + iVar7 * 2 + 1))) {\n                            if (cVar3 < 'a') {\n                                cVar3 = 'a';\n                            }\n                            uVar2 = fcn.10008f75(cVar3);\n                            cVar3 = *(*(in_stack_0000001c + 0x10) + 1 + iVar7 * 2);\n                            in_stack_0000004c = in_stack_0000004c & 0xffffff00 | uVar2;\n                            if ('z' < cVar3) {\n                                cVar3 = 'z';\n                            }\n                            cVar3 = fcn.10008f75(cVar3);\n                            pcVar1 = *(in_stack_0000001c + 0x10) + iVar7 * 2;\n                            if ((uVar2 < *pcVar1) || (pcVar1[1] < cVar3)) {\n                                fcn.10004a80(in_stack_0000004c);\n                                fcn.10004a80();\n                            }\n                        }\n                        iVar7 = iVar7 + 1;\n                    } while (iVar7 < iVar4);\n                }\n                iVar4 = *(in_stack_0000001c + 0x20);\n                if (0 < iVar4) {\n                    iVar7 = 0;\n                    do {\n                        iVar6 = fcn.100083d7(*(*(in_stack_0000001c + 0x24) + iVar7));\n                        if (iVar6 != 0) {\n                            fcn.10008dfe(*(*(in_stack_0000001c + 0x24) + iVar7));\n                            iVar6 = fcn.10007850();\n                            if (iVar6 == 0) {\n                                uVar5 = fcn.10008dfe(*(*(in_stack_0000001c + 0x24) + iVar7));\n                                fcn.10004a80(uVar5);\n                            }\n                        }\n                        iVar6 = fcn.10008456(*(*(in_stack_0000001c + 0x24) + iVar7));\n                        if (iVar6 != 0) {\n                            fcn.10008f75(*(*(in_stack_0000001c + 0x24) + iVar7));\n                            iVar6 = fcn.10007850();\n                            if (iVar6 == 0) {\n                                fcn.10008f75(*(*(in_stack_0000001c + 0x24) + iVar7));\n                                fcn.10004a80();\n                            }\n                        }\n                        iVar7 = iVar7 + 1;\n                    } while (iVar7 < iVar4);\n                }\n            }\n            *in_FS_OFFSET = in_stack_0000003c;\n            return in_stack_0000001c;\n        }\n        uVar2 = *unaff_EBP;\n        in_stack_00000020 = in_stack_00000020 & 0xffffff00 | uVar2;\n        if (*(unaff_EDI + 0xac) == 1) {\n            if (((((uVar2 == 0x2e) || (uVar2 == 0x77)) || (uVar2 == 0x57)) || ((uVar2 == 0x73 || (uVar2 == 0x53)))) ||\n               ((uVar2 == 100 || (uVar2 == 0x44)))) goto code_r0x1000593b;\n            if (uVar2 == 0x5b) {\n                in_EAX = 0;\n                goto code_r0x1000591b;\n            }\n        }\ncode_r0x10005955:\n        if (((*(unaff_EDI + 0xb8) == '-') && (*(unaff_EDI + 0xbc) == unaff_ESI)) && (*(unaff_EDI + 0xcc) == 0)) {\n            fcn.10004a80(in_stack_00000020);\n            fcn.10004a80(*(unaff_EDI + 200));\n            fcn.10002d20();\n            fcn.10002d20();\n            fcn.10002d20();\n        }\n        else {\n            fcn.10004a80(in_stack_00000020);\n            fcn.10002d20();\n        }\n    } while( true );\n}\n",
        "token_count": 1679
    },
    "100081be": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.100081be(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x10034058) {\n        return;\n    }\n    *0x10039140 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                  (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                  ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                  (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x10039144 = &arg_8h;\n    *0x10039080 = 0x10001;\n    *0x10039028 = 0xc0000409;\n    *0x1003902c = 1;\n    var_328h = *0x10034058;\n    var_324h = *0x1003405c;\n    *0x10039034 = unaff_retaddr;\n    *0x1003910c = in_GS;\n    *0x10039110 = in_FS;\n    *0x10039114 = in_ES;\n    *0x10039118 = in_DS;\n    *0x1003911c = unaff_EDI;\n    *0x10039120 = unaff_ESI;\n    *0x10039124 = unaff_EBX;\n    *0x10039128 = in_EDX;\n    *0x1003912c = in_ECX;\n    *0x10039130 = in_EAX;\n    *0x10039134 = unaff_EBP;\n    *0x10039138 = unaff_retaddr;\n    *0x1003913c = in_CS;\n    *0x10039148 = in_SS;\n    *0x10039078 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.1000e287(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x100251e4);\n    if (*0x10039078 == 0) {\n        fcn.1000e287(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 832
    },
    "1000d885": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.1000d885(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.1000896a(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "1000c870": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x1000c963: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x1000c968)\n// WARNING: Removing unreachable block (ram,0x1000c996)\n// WARNING: Removing unreachable block (ram,0x1000c96e)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.1000c870(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.10009af4(0x10031b90, 0x18);\n    fcn.1000bc05(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x10039534 != 1) {\n        *0x10039530 = 1;\n        *0x1003952c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.1000b39d(*0x1004f7e8);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.1000b39d(*0x1004f7e4);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.1000b394();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.1000b39d(*piVar2);\n                        iVar3 = fcn.1000b394();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.1000b39d(*0x1004f7e8);\n                        piVar1 = fcn.1000b39d(*0x1004f7e4);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.1000c7aa(0x1002518c);\n        }\n        fcn.1000c7aa(0x10025194);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.1000bb2b(8);\n    }\n    return;\n}\n",
        "token_count": 822
    },
    "1000fb70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1000fb70(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.1000bb2b(0);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "10011e00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.10011e00(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t iVar4;\n    int32_t extraout_ECX_02;\n    int32_t unaff_EBX;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    bool bVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int32_t iStack00000017;\n    ulong in_stack_00000014;\n    int32_t iStack00000027;\n    ulong in_stack_00000024;\n    int32_t in_stack_00000034;\n    uchar *in_stack_00000038;\n    int32_t in_stack_00000058;\n    \n    uVar6 = (**0x13feadc)();\n    uVar1 = uVar6 - 1;\n    uVar6 = uVar6 & 0xffffffff00000000 | uVar1;\n    if (uVar1 != 0) {\n        uVar6 = func_0x0fcec8ec();\n    }\n    iVar3 = in_stack_00000014 >> 0x20;\n    iVar4 = iVar3;\n    if (in_stack_00000034 == 0x40000000) {\ncode_r0x10011f8e:\n        uVar6 = uVar6 & 0xffffffff00000000 | uVar6 - 2;\n        bVar5 = iVar3 != 0;\n        iVar3 = unaff_EDI;\n        if (bVar5) {\n            uVar6 = (**0x13fe566)();\n            iVar4 = extraout_ECX_01;\n        }\ncode_r0x10011f9f:\n        uVar1 = uVar6 - 1;\n        uVar7 = uVar6 & 0xffffffff00000000 | uVar1;\n        if (unaff_ESI + 1 < &stack0xfffffff8) {\n            iVar2 = iVar4 + -1 + unaff_EBX + -0x42;\n            if (*0x10035474 != 4) {\n                uVar1 = uVar6 + -0x145cf + iVar3;\n            }\n            *0x100354d0 = unaff_ESI + (iVar2 - unaff_EBX) + -0x60;\n            *0x10035460 = unaff_ESI + ((9 - *0x100354d0) - uVar1) * 2 + iVar2;\n            *0x100354cc = (iVar4 + -1) * '@' + unaff_EBX;\n            return *0x10035460;\n        }\n    }\n    else {\n        uVar6 = (**0x13fec09)();\n        uVar1 = uVar6 - 1;\n        uVar6 = uVar6 & 0xffffffff00000000 | uVar1;\n        if (uVar1 != 0) {\n            uVar6 = func_0x0fcec8ec();\n        }\n        uVar6 = uVar6 & 0xffffffff00000000 | uVar6 - 1;\n        if (in_stack_00000058 == 0) goto code_r0x10011f8e;\n        if (unaff_ESI != NULL) {\ncode_r0x10011eb9:\n            func_0x1044aa4c();\n            uVar6 = func_0x1063bc6c();\n            if (uVar6 == '\\0') {\n                uVar6 = uVar6 & 0xffffffff00000000 | uVar6 - 2;\n                if (iVar3 != 0) {\n                    uVar6 = (**0x13fe5fa)();\n                    iVar4 = extraout_ECX;\n                }\n            }\n            else {\n                iVar2 = func_0x1063cdbc();\n                if (iVar2 == 0) {\n                    *unaff_ESI = 0;\n                    if (iStack00000017 != 0) {\n                        (**0x13fe50d)();\n                    }\n                    if (iStack00000027 != 0) {\n                        (**0x13fe4fc)();\n                    }\n                    goto code_r0x1001200e;\n                }\n                uVar6 = func_0x1063cdbc();\n                if (((uVar6 == 0) || (uVar6 = func_0x1063cdbc(),  uVar6 == 0)) ||\n                   (uVar6 = func_0x1063cdbc(),  uVar6 == 0)) {\n                    *unaff_ESI = 1;\n                }\n                else if (2 < *unaff_ESI) {\n                    *unaff_ESI = 2;\n                }\n                uVar6 = uVar6 & 0xffffffff00000000 | uVar6 - 2;\n                if (iVar3 != 0) {\n                    uVar6 = (**0x13fe579)();\n                    iVar4 = extraout_ECX_00;\n                }\n            }\n            goto code_r0x10011f9f;\n        }\n        func_0x104496fc();\n        uVar6 = func_0x1063bc6c();\n        if ((uVar6 != '\\0') && (uVar6 = func_0x1063cdbc(),  uVar6 == 0)) goto code_r0x10011eb9;\n        uVar7 = uVar6 & 0xffffffff00000000 | uVar6 - 2;\n        if (iVar3 != 0) {\n            uVar7 = (**0x13fe548)();\n        }\n    }\n    iVar3 = in_stack_00000024 >> 0x20;\n    uVar6 = uVar7 & 0xffffffff00000000 | uVar7 - 3;\n    if (iVar3 != 0) {\n        uVar6 = (**0x13fe532)();\n        iVar3 = extraout_ECX_02;\n    }\n    if (&stack0xfffffffd < in_stack_00000038) {\n        *0x10035460 = iVar3 + -1;\n        *0x10035464 = uVar6 >> 0x20;\n        return uVar6;\n    }\ncode_r0x1001200e:\n    if (unaff_EBX != 0) {\n        (**0x13fe4e8)();\n    }\n    iVar3 = func_0x10870b7c();\n    return iVar3 + -1;\n}\n",
        "token_count": 1440
    },
    "1001dee0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.1001dee0(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t unaff_EBX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iStack12;\n    \n    if (*0x10035474 != 4) {\n        *0x10035460 = *0x10035460 - 0x145ba;\n    }\n    *0x100354d0 = *0x100354cc + *0x100354d0 * 2 + 0xcfb + *0x10035460;\n    fcn.10011b00(*0x100354cc);\n    if (*0x100354cc <= *0x10035460) {\n        *0x100354c6 = *0x100354c6 + *0x1003545c;\n        *0x10035460 = *0x100354cc + 9 + *0x1003545c;\n        *0x100354cc = (*0x10035460 + *0x1003545c) - 1;\n    }\n    *0x10035460 = fcn.10011d60();\n    if (*0x100354a8 == 0xa65) {\n        *0x100354cc = ((*0x100354cc - *0x10035494) + '\\x19') * '\\x02';\n    }\n    uVar4 = *0x100354cc;\n    iVar5 = *0x10035460 * 0x40 + *0x100354d0;\n    iVar1 = *0x10035460;\n    fcn.1000d350(0x1003a798, 0x10026ca0, 0x4140);\n    do {\n        if (uVar4 <= iVar5 + iVar1 * 0x40) {\n            *0x100354a4 = *0x100354a4 + iVar5;\n            uVar4 = uVar4 + iVar5 * '\\x02' + 8;\n        }\n        iVar6 = iVar5;\n        iVar2 = fcn.10011190();\n        iVar2 = iVar2 + unaff_EBX;\n        if (*0x10035474 == 4) {\n            iVar2 = ((iVar2 + 0xcb8 + (*0x10035460 + iStack12) * 2 + iVar6 & 0xffff) - 1) + uVar4;\n        }\n    } while (iVar6 != 0);\n    *0x100354cc = uVar4;\n    uVar3 = fcn.10011c30();\n    uVar3 = uVar3 & 0xffff;\n    if (*0x10035474 == 4) {\n        iVar2 = (*0x100354cc - 1) + uVar3;\n    }\n    else {\n        uVar3 = (uVar3 - 0x45ce) + iVar2;\n    }\n    *0x10035460 = ((uVar3 & 0xffff) - iVar2) + -0x60;\n    return 0x1003a798;\n}\n",
        "token_count": 702
    },
    "1001e0c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.1001e0c0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint lpAddress;\n    \n    pcVar2 = *0x1004dafc;\n    *0x1004f560 = *0x1004dafc;\n    iVar1 = *0x10035460 + 0xd03;\n    *0x10035460 = *0x10035460 + 0xb43cf + *0x100354cc + arg_8h;\n    uVar4 = iVar1 + arg_8h & 0xffff;\n    if (*0x1003546c < 3) {\n        *0x10035498 = *0x100354d0;\n        *0x100354d0 = (*0x100354d0 - 0x145ca) + *0x1003545c;\n        *0x1003545c = *0x100354d0 + 0xcfd + *0x1003545c * 2;\n    }\n    iVar1 = (*0x100354d0 - 0x41) + *0x10035460;\n    fcn.1001d7d0(iVar1, *0x10035460);\n    *0x100354cc = (*0x10035460 - iVar1) + 0xa0;\n    if (*0x100354a8 == 0xa65) {\n        *0x10035460 = (*0x10035460 - *0x10035494) * 2 + -0x145ce;\n    }\n    if (*0x100354cd != '\\0') {\n        piVar3 = 0x1003546c;\n        do {\n            if (uVar4 != *0x10035468) {\n                uVar4 = 0xffa0;\n                *0x10035460 = *0x10035460 * *piVar3;\n                if (*0x10035470 == 0xffa0) break;\n            }\n            piVar3 = piVar3 + 2;\n        } while (piVar3 < 0x10035494);\n        (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(0xffffffff, pcVar2, 0x304b, 0x40, 0x1004daf8);\n        *0x100354cd = '\\0';\n        if (*0x10035490 - *0x10035468 != 0x28) {\n            *0x1003549c = *0x1003549c + -0x43 + uVar4 + *0x10035460;\n        }\n    }\n    *0x10035460 = (uVar4 - 1) + arg_8h;\n    (**0x1004f560)();\n    iVar5 = *0x100354cc * 0x40 + iVar1;\n    if (*0x100354a8 == 0xa65) {\n        iVar5 = (iVar5 - *0x10035494) * 2 + -0x145ce;\n    }\n    if (*0x100354d0 <= *0x1003545c) {\n        *0x100354a4 = *0x100354a4 + iVar1;\n        *0x1003545c = *0x100354d0 + 9 + iVar1;\n        *0x100354d0 = (*0x1003545c - 1) + iVar1;\n    }\n    *0x100354cc = iVar1 * '\\x03' + 0x31;\n    *0x10035460 = iVar5 + arg_8h * 3 + -0x145ce + (iVar5 + 9 + arg_8h & 0xffffU) * 2;\n    return (*0x100354cc - 0x43) + iVar1 * 2;\n}\n",
        "token_count": 882
    },
    "1001f3db": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.1001f3db(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x1001f486;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.1001f4b2;\n        uStack36 = *0x10034058 ^ &fcn.1001f3db::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.1001f3db::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.1000b5e9();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.1001f3db::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 732
    },
    "1001f846": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.1001f846(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.10009af4(0x10032ae0, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.1000b5e9();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.1000f951();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.10020410(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.1001f90c();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.1000f951();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.10009b39();\n    return;\n}\n",
        "token_count": 570
    },
    "1001f90c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1001f90c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.1000b5e9();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.1000b5e9();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "1001fbd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1001fbd4(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.1001f619(*(unaff_EBP + -0x28));\n    iVar1 = fcn.1000b5e9();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.1000b5e9();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.1001f5f2(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.1001f96c(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "1002151b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1002151b(uint16_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint32_t *in_stack_00000008;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x10021a1c;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x10021650;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x10021657;\ncode_r0x10021650:\n                        do {\n                            var_4h = 1;\ncode_r0x10021657:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x10021665;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x10021665:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x10038ce4 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x10038ce4 < iVar12) {\n                if (iVar12 < *0x10038ce0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x10038ce0;\n                    uVar5 = 1;\n                }\n                goto code_r0x10021a1c;\n            }\n            var_10h = *0x10038ce4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x10021808;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x10021808:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x10021a1c:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        in_stack_00000008[1] = var_20h;\n        *in_stack_00000008 = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *in_stack_00000008 = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3681
    },
    "10021784": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.10021784(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    char *in_EAX;\n    int32_t iVar4;\n    uint8_t in_CL;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    uint32_t *unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    *in_EAX = *in_EAX + in_EAX;\n    uVar6 = *(unaff_EBP + -0x20 + in_EAX * 4) & ~(-1 << (in_CL & 0x1f));\n    while (uVar6 == 0) {\n        in_EAX = in_EAX + 1;\n        if (2 < in_EAX) goto code_r0x10021808;\n        uVar6 = *(unaff_EBP + -0x20 + in_EAX * 4);\n    }\n    iVar4 = unaff_ESI + (unaff_ESI >> 0x1f & 0x1fU) >> 5;\n    *(unaff_EBP + 8) = 0;\n    uVar8 = 1 << (0x1f - (unaff_ESI & 0x1f) & 0x1f);\n    puVar1 = unaff_EBP + -0x20 + iVar4 * 4;\n    uVar2 = *puVar1;\n    uVar6 = uVar2 + uVar8;\n    if ((uVar6 < uVar2) || (uVar6 < uVar8)) {\n        *(unaff_EBP + 8) = 1;\n    }\n    *puVar1 = uVar6;\n    iVar5 = *(unaff_EBP + 8);\n    while ((iVar4 = iVar4 + -1,  -1 < iVar4 && (iVar5 != 0))) {\n        puVar1 = unaff_EBP + -0x20 + iVar4 * 4;\n        uVar2 = *puVar1;\n        uVar6 = uVar2 + 1;\n        iVar5 = 0;\n        if ((uVar6 < uVar2) || (uVar6 == 0)) {\n            iVar5 = 1;\n        }\n        *puVar1 = uVar6;\n    }\ncode_r0x10021808:\n    *unaff_EBX = *unaff_EBX & -1 << (*(unaff_EBP + -0x10) & 0x1f);\n    iVar4 = *(unaff_EBP + -0xc) + 1;\n    if (iVar4 < 3) {\n        puVar7 = unaff_EBP + -0x20 + iVar4 * 4;\n        for (iVar5 = 3 - iVar4; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n    }\n    uVar6 = *0x10038cec + 1;\n    iVar4 = uVar6 + (uVar6 >> 0x1f & 0x1fU) >> 5;\n    uVar6 = uVar6 & 0x8000001f;\n    if (uVar6 < 0) {\n        uVar6 = (uVar6 - 1 | 0xffffffe0) + 1;\n    }\n    *(unaff_EBP + -0xc) = 0;\n    *(unaff_EBP + 8) = 0;\n    *(unaff_EBP + -4) = 0x20;\n    *(unaff_EBP + -4) = *(unaff_EBP + -4) - uVar6;\n    do {\n        puVar1 = unaff_EBP + -0x20 + *(unaff_EBP + 8) * 4;\n        uVar2 = *puVar1;\n        *(unaff_EBP + -0x10) = uVar2 & ~(-1 << (uVar6 & 0x1f));\n        uVar3 = *(unaff_EBP + -4);\n        *puVar1 = uVar2 >> (uVar6 & 0x1f) | *(unaff_EBP + -0xc);\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) + 1;\n        *(unaff_EBP + -0xc) = *(unaff_EBP + -0x10) << (uVar3 & 0x1f);\n    } while (*(unaff_EBP + 8) < 3);\n    iVar5 = 2;\n    puVar7 = unaff_EBP + -0x18 + iVar4 * -4;\n    do {\n        if (iVar5 < iVar4) {\n            *(unaff_EBP + -0x20 + iVar5 * 4) = 0;\n        }\n        else {\n            *(unaff_EBP + -0x20 + iVar5 * 4) = *puVar7;\n        }\n        iVar5 = iVar5 + -1;\n        puVar7 = puVar7 + -1;\n    } while (-1 < iVar5);\n    uVar6 = 0 << (0x1fU - *0x10038cec & 0x1f) | -(*(unaff_EBP + -0x14) != 0) & 0x80000000 | *(unaff_EBP + -0x20);\n    if (*0x10038cf0 == 0x40) {\n        puVar7 = *(unaff_EBP + 0xc);\n        uVar3 = *(unaff_EBP + -0x1c);\n        puVar7[1] = uVar6;\n        *puVar7 = uVar3;\n    }\n    else if (*0x10038cf0 == 0x20) {\n        **(unaff_EBP + 0xc) = uVar6;\n    }\n    return 2;\n}\n",
        "token_count": 1402
    },
    "10021a5f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.10021a5f(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x10021f60;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x10038d00 - 1;\n        iVar4 = *0x10038d00 + (*0x10038d00 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x10038d00 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x10021b94;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x10021b9b;\ncode_r0x10021b94:\n                        do {\n                            var_4h = 1;\ncode_r0x10021b9b:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x10021ba9;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x10021ba9:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x10038cfc - *0x10038d00) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x10038cfc < iVar12) {\n                if (iVar12 < *0x10038cf8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x10038d0c;\n                    iVar4 = *0x10038d04 + (*0x10038d04 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x10038d04 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x10038d04 + (*0x10038d04 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x10038d04 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x10038d0c + *0x10038cf8;\n                    uVar5 = 1;\n                }\n                goto code_r0x10021f60;\n            }\n            var_10h = *0x10038cfc - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x10038d00 - 1;\n            iVar12 = *0x10038d00 + (*0x10038d00 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x10038d00 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x10021d4c;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x10021d4c:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x10038d04 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x10021f60:\n    var_20h = iVar12 << (0x1fU - *0x10038d04 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x10038d08 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x10038d08 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3671
    },
    "10002450": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.10002450(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    \n    *0x1004f610 = *(in_EAX + 4);\n    *0x1004f614 = *(in_EAX + 8);\n    *0x1004f658 = 0;\n    *0x1004f65c = 0;\n    *0x1004f588 = 0;\n    *0x1004f58c = 0;\n    *0x1004f584 = 0;\n    *0x1004f660 = 0;\n    *0x1004f664 = 0;\n    *0x1004f5b0 = 0;\n    *0x1004f5c4 = 0;\n    *0x1004f5d8 = 0;\n    *0x1004f5ec = 0;\n    *0x1004f600 = 0;\n    iVar7 = 3;\n    do {\n        fcn.10002d20();\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    *0x1004f580 = fcn.10002dd0(0);\n    if (*0x1004f5b8 < 1) {\n        if ((*0x1004f5b8 < 8) || (iVar7 = *0x1004f5b8 * 2,  iVar7 < 1)) {\n            iVar7 = 8;\n        }\n        *0x1004f5ac = fcn.10008ff6(*0x1004f5b4, iVar7 * 4);\n        *0x1004f5b4 = *0x1004f5ac;\n        *0x1004f5b8 = iVar7;\n    }\n    if (*0x1004f5b0 < 1) {\n        fcn.1000e560(*0x1004f5b4 + *0x1004f5b0, 0, (1 - *0x1004f5b0) * 4);\n        *0x1004f5b0 = 1;\n    }\n    **0x1004f5b4 = *0x1004f580;\n    iVar7 = *0x1004f5d8 + 1 + *0x1004f588;\n    *0x1004f590 = *0x1004f5b0;\n    if (*0x1004f5b8 < iVar7) {\n        iVar8 = *0x1004f5b8;\n        if (*0x1004f5b8 < 8) {\n            iVar8 = 8;\n        }\n        iVar9 = iVar8;\n        if ((iVar8 < iVar7) && (iVar9 = iVar8 * 2,  iVar7 != iVar9 && SBORROW4(iVar7, iVar9) == iVar7 + iVar8 * -2 < 0))\n        {\n            uVar5 = iVar7 + 0xbU & 0x80000007;\n            if (uVar5 < 0) {\n                uVar5 = (uVar5 - 1 | 0xfffffff8) + 1;\n            }\n            iVar9 = (iVar7 + 0xbU) - uVar5;\n        }\n        *0x1004f5ac = fcn.10008ff6(*0x1004f5b4, iVar9 * 4);\n        *0x1004f5b4 = *0x1004f5ac;\n        *0x1004f5b8 = iVar9;\n    }\n    if (*0x1004f5b0 < iVar7) {\n        fcn.1000e560(*0x1004f5b4 + *0x1004f5b0, 0, (iVar7 - *0x1004f5b0) * 4);\n        *0x1004f5b0 = iVar7;\n    }\n    iVar7 = 0;\n    if (0 < *0x1004f5d8) {\n        do {\n            piVar1 = *(*(*0x1004f5dc + iVar7 * 4) + 0x10);\n            iVar8 = *piVar1;\n            iVar9 = piVar1[2];\n            puVar4 = *0x1004f5b4 + *0x1004f590;\n            *0x1004f590 = *0x1004f590 + 1;\n            *puVar4 = *(*0x1004f5dc + iVar7 * 4);\n            if (*(iVar8 + 4) < 1) {\n                iVar2 = fcn.10002cb0(iVar8 + 0xc);\n                if (iVar2 < 0) {\n                    *0x1004f588 = *0x1004f588 + 1;\n                    *(iVar8 + 4) = *0x1004f588;\n                    *(iVar9 + 4) = *0x1004f588;\n                }\n                else {\n                    *(iVar8 + 4) = iVar2;\n                    *(iVar9 + 4) = iVar2;\n                }\n            }\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < *0x1004f5d8);\n    }\n    iVar7 = 1;\n    if (1 < *0x1004f590) {\n        do {\n            iVar8 = *(**((*0x1004f5b4)[iVar7] + 0x10) + 4);\n            if (*0x1004f588 < iVar8) {\n                *0x1004f588 = iVar8;\n            }\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < *0x1004f590);\n    }\n    iVar8 = 0;\n    puVar4 = *0x1004f5b4;\n    iVar7 = *0x1004f5b0;\n    if (0 < *0x1004f5c4) {\n        do {\n            iVar9 = *(*0x1004f5c8 + iVar8 * 4);\n            piVar1 = *0x1004f5c8 + iVar8 * 4;\n            if (*(iVar9 + 8) == -3) {\n                uVar3 = fcn.10002cb0(iVar9 + 0xc);\n                *(*piVar1 + 8) = uVar3;\n                puVar4 = *0x1004f5b4;\n                iVar7 = *0x1004f5b0;\n            }\n            iVar9 = *(*0x1004f5c8 + iVar8 * 4);\n            iVar2 = *(iVar9 + 8);\n            if ((-1 < iVar2) && (iVar2 <= *0x1004f588)) {\n                if (iVar2 == 0) {\n                    *(iVar9 + 4) = *0x1004f580;\n                    puVar4 = *0x1004f5b4;\n                    iVar7 = *0x1004f5b0;\n                }\n                else {\n                    iVar6 = 1;\n                    if (1 < iVar7) {\n                        do {\n                            if (iVar2 == *(**(puVar4[iVar6] + 0x10) + 4)) {\n                                *(iVar9 + 4) = puVar4[iVar6];\n                                puVar4 = *0x1004f5b4;\n                                iVar7 = *0x1004f5b0;\n                                break;\n                            }\n                            iVar6 = iVar6 + 1;\n                        } while (iVar6 < iVar7);\n                    }\n                }\n            }\n            iVar8 = iVar8 + 1;\n        } while (iVar8 < *0x1004f5c4);\n    }\n    iVar7 = 0;\n    if (0 < *0x1004f5ec) {\n        do {\n            piVar1 = *0x1004f5f0 + iVar7 * 4;\n            uVar3 = fcn.10002cb0(*(*0x1004f5f0 + iVar7 * 4) + 0x10);\n            iVar7 = iVar7 + 1;\n            *(*piVar1 + 4) = uVar3;\n        } while (iVar7 < *0x1004f5ec);\n    }\n    iVar7 = 0;\n    if (0 < *0x1004f600) {\n        do {\n            iVar8 = fcn.10002cb0(*(*0x1004f604 + iVar7 * 4) + 8);\n            if (-1 < iVar8) {\n                *(*(*0x1004f604 + iVar7 * 4) + 4) = iVar8;\n                *(*(*0x1004f604 + iVar7 * 4) + 0x1c) = 0;\n            }\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < *0x1004f600);\n    }\n    return *0x1004f580;\n}\n",
        "token_count": 2067
    },
    "10006c30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __thiscall fcn.10006c30(int32_t param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint unaff_EDI;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t arg_ch;\n    int32_t iVar8;\n    int32_t iVar9;\n    char **in_FS_OFFSET;\n    char *pcStack36;\n    int32_t iStack32;\n    char *pcStack28;\n    char *pcStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x10023ab6;\n    pcStack12 = *in_FS_OFFSET;\n    uVar2 = *0x10034058 ^ &stack0xffffffcc;\n    *in_FS_OFFSET = &pcStack12;\n    fcn.10002d20(uVar2);\n    if ((*(param_1 + 0xa8) == '<') || (*(param_1 + 0xa8) == '\\'')) {\n        iVar6 = fcn.100092cc(0x24);\n        uStack4 = 0;\n        if (iVar6 == 0) {\n            iVar6 = 0;\n        }\n        else {\n            iVar6 = fcn.10007f40(iVar6, 0xffffffff, *param_2 & 0x10, *param_2 & 8);\n        }\n        if (*(param_1 + 0x24) <= *(param_1 + 0x1c)) {\n            iVar5 = *(param_1 + 0x24) * 2;\n            if (iVar5 < 8) {\n                iVar5 = 8;\n            }\n            uVar3 = fcn.10008ff6(*(param_1 + 0x20), iVar5 * 4);\n            *(param_1 + 0x20) = uVar3;\n            *(param_1 + 0x18) = uVar3;\n            *(param_1 + 0x24) = iVar5;\n        }\n        *(*(param_1 + 0x20) + *(param_1 + 0x1c) * 4) = iVar6;\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) + 1;\n        fcn.10002d20();\n        iVar5 = 0;\n        iStack32 = 0;\n        pcStack36 = NULL;\n        cVar1 = *(param_1 + 0xa8);\n        while ((cVar1 != '\\0' && (cVar1 != pcStack12))) {\n            iVar8 = *(iVar6 + 0x20);\n            iVar7 = iVar8;\n            if (iVar8 < 8) {\n                iVar7 = 8;\n            }\n            iVar9 = *(iVar6 + 0x18) + 2;\n            arg_ch = iVar7;\n            if ((iVar7 < iVar9) &&\n               (arg_ch = iVar7 * 2,  iVar9 != arg_ch && SBORROW4(iVar9, arg_ch) == iVar9 + iVar7 * -2 < 0)) {\n                uVar2 = *(iVar6 + 0x18) + 0xd;\n                uVar4 = uVar2 & 0x80000007;\n                if (uVar4 < 0) {\n                    uVar4 = (uVar4 - 1 | 0xfffffff8) + 1;\n                }\n                arg_ch = uVar2 - uVar4;\n            }\n            if (iVar8 < arg_ch) {\n                uVar3 = fcn.10008ff6(*(iVar6 + 0x1c), arg_ch);\n                *(iVar6 + 0x1c) = uVar3;\n                *(iVar6 + 0x14) = uVar3;\n                *(iVar6 + 0x20) = arg_ch;\n            }\n            *(*(iVar6 + 0x18) + *(iVar6 + 0x1c)) = cVar1;\n            *(iVar6 + 0x18) = *(iVar6 + 0x18) + 1;\n            *(*(iVar6 + 0x18) + *(iVar6 + 0x1c)) = 0;\n            cVar1 = *(param_1 + 0xa8);\n            iVar8 = iStack32;\n            if (iStack32 < 8) {\n                iVar8 = 8;\n            }\n            iVar7 = iVar5 + 2;\n            iVar9 = iVar8;\n            if ((iVar8 < iVar7) &&\n               (iVar9 = iVar8 * 2,  iVar7 != iVar9 && SBORROW4(iVar7, iVar9) == iVar7 + iVar8 * -2 < 0)) {\n                uVar2 = iVar5 + 0xdU & 0x80000007;\n                if (uVar2 < 0) {\n                    uVar2 = (uVar2 - 1 | 0xfffffff8) + 1;\n                }\n                iVar9 = (iVar5 + 0xdU) - uVar2;\n            }\n            if (iStack32 < iVar9) {\n                pcStack36 = fcn.10008ff6(pcStack36, iVar9);\n                iStack32 = iVar9;\n            }\n            pcStack36[iVar5] = cVar1;\n            iVar5 = iVar5 + 1;\n            pcStack36[iVar5] = '\\0';\n            fcn.10002d20();\n            cVar1 = *(param_1 + 0xa8);\n        }\n        fcn.10002d20();\n        pcStack12 = pcStack36;\n        if (pcStack36 == NULL) {\n            pcStack12 = 0x10030adf;\n        }\n        iVar5 = fcn.10004b50();\n        if ((iVar5 == 0) || (*pcStack12 != '\\0')) {\n            if (*(param_1 + 0x74) <= *(param_1 + 0x6c)) {\n                iVar5 = *(param_1 + 0x74) * 2;\n                if (iVar5 < 8) {\n                    iVar5 = 8;\n                }\n                uVar3 = fcn.10008ff6(*(param_1 + 0x70), iVar5 * 4);\n                *(param_1 + 0x70) = uVar3;\n                *(param_1 + 0x68) = uVar3;\n                *(param_1 + 0x74) = iVar5;\n            }\n            *(*(param_1 + 0x70) + *(param_1 + 0x6c) * 4) = iVar6;\n            *(param_1 + 0x6c) = *(param_1 + 0x6c) + 1;\n        }\n        else {\n            *(iVar6 + 4) = unaff_EDI;\n            iVar5 = *(iVar6 + 0x1c);\n            *(iVar6 + 0x1c) = 0;\n            *(iVar6 + 0x14) = 0;\n            *(iVar6 + 0x20) = 0;\n            *(iVar6 + 0x18) = 0;\n            if (iVar5 != 0) {\n                fcn.1000896a(iVar5);\n            }\n        }\n        fcn.10001a20();\n    }\n    else {\n        iVar6 = 0;\n        iVar5 = 0;\n        do {\n            cVar1 = *(param_1 + 0xa8);\n            if ((cVar1 < '0') || ('9' < cVar1)) break;\n            iVar6 = cVar1 + -0x30 + iVar6 * 10;\n            fcn.10002d20(uVar2);\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < 3);\n        iVar5 = fcn.100092cc(0x24);\n        uStack4 = 3;\n        if (iVar5 == 0) {\n            iVar6 = 0;\n        }\n        else {\n            iVar6 = fcn.10007f40(iVar5, iVar6, *param_2 & 0x10, *param_2 & 8);\n        }\n        if (*(param_1 + 0x24) <= *(param_1 + 0x1c)) {\n            iVar5 = *(param_1 + 0x24) * 2;\n            if (iVar5 < 8) {\n                iVar5 = 8;\n            }\n            uVar3 = fcn.10008ff6(*(param_1 + 0x20), iVar5 * 4);\n            *(param_1 + 0x20) = uVar3;\n            *(param_1 + 0x18) = uVar3;\n            *(param_1 + 0x24) = iVar5;\n        }\n        *(*(param_1 + 0x20) + *(param_1 + 0x1c) * 4) = iVar6;\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) + 1;\n    }\n    *in_FS_OFFSET = pcStack28;\n    return iVar6;\n}\n",
        "token_count": 2074
    },
    "100043f0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9"
        ],
        "decompiled_code": "\nint32_t fcn.100043f0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    iVar2 = 0;\n    *unaff_ESI = 0;\n    if (0 < unaff_EBX) {\n        do {\n            cVar1 = *(*unaff_ESI + unaff_EDI);\n            if ((cVar1 < '0') || ('9' < cVar1)) {\n                if ((cVar1 < 'A') || ('F' < cVar1)) {\n                    if (cVar1 < 'a') {\n                        return iVar2;\n                    }\n                    if ('f' < cVar1) {\n                        return iVar2;\n                    }\n                    iVar2 = iVar2 * 0x10 + -0x57 + cVar1;\n                }\n                else {\n                    iVar2 = iVar2 * 0x10 + -0x37 + cVar1;\n                }\n            }\n            else {\n                iVar2 = iVar2 * 0x10 + -0x30 + cVar1;\n            }\n            iVar3 = *unaff_ESI + 1;\n            *unaff_ESI = iVar3;\n        } while (iVar3 < unaff_EBX);\n    }\n    return iVar2;\n}\n",
        "token_count": 306
    },
    "10007640": {
        "rules": [
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b",
            "search for credit card data/ac143e9ae29c414184a69c9308e24693"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.10007640(code *param_1, int32_t param_2, code **param_3)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x100236a8;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    *param_3 = vtable.ElxInterface.0;\n    uStack4 = 0;\n    *param_3 = vtable.CPosixElxT_char_.0;\n    param_3[2] = param_1;\n    if (*(param_2 + 1) == '^') {\n        param_3[3] = NULL;\n        param_2 = param_2 + 2;\n    }\n    else {\n        param_3[3] = 0x1;\n        param_2 = param_2 + 1;\n    }\n    iVar1 = fcn.100088aa(param_2, \"alnum:\", 6);\n    if (iVar1 == 0) {\n        param_3[1] = fcn.100086dd;\n    }\n    else {\n        iVar1 = fcn.100088aa(param_2, \"alpha:\", 6);\n        if (iVar1 == 0) {\n            param_3[1] = fcn.10008356;\n        }\n        else {\n            iVar1 = fcn.100088aa(param_2, \"ascii:\", 6);\n            if (iVar1 == 0) {\n                param_3[1] = fcn.10008898;\n            }\n            else {\n                iVar1 = fcn.100088aa(param_2, \"cntrl:\", 6);\n                if (iVar1 == 0) {\n                    param_3[1] = fcn.1000886a;\n                }\n                else {\n                    iVar1 = fcn.100088aa(param_2, \"digit:\", 6);\n                    if (iVar1 == 0) {\n                        param_3[1] = fcn.100084d5;\n                    }\n                    else {\n                        iVar1 = fcn.100088aa(param_2, \"graph:\", 6);\n                        if (iVar1 == 0) {\n                            param_3[1] = fcn.100087e9;\n                        }\n                        else {\n                            iVar1 = fcn.100088aa(param_2, \"lower:\", 6);\n                            if (iVar1 == 0) {\n                                param_3[1] = fcn.10008456;\n                            }\n                            else {\n                                iVar1 = fcn.100088aa(param_2, \"print:\", 6);\n                                if (iVar1 == 0) {\n                                    param_3[1] = fcn.10008763;\n                                }\n                                else {\n                                    iVar1 = fcn.100088aa(param_2, \"punct:\", 6);\n                                    if (iVar1 == 0) {\n                                        param_3[1] = fcn.10008659;\n                                    }\n                                    else {\n                                        iVar1 = fcn.100088aa(param_2, \"space:\", 6);\n                                        if (iVar1 == 0) {\n                                            param_3[1] = fcn.100085da;\n                                        }\n                                        else {\n                                            iVar1 = fcn.100088aa(param_2, \"upper:\", 6);\n                                            if (iVar1 == 0) {\n                                                param_3[1] = fcn.100083d7;\n                                            }\n                                            else {\n                                                iVar1 = fcn.100088aa(param_2, \"xdigit:\", 7);\n                                                if (iVar1 == 0) {\n                                                    param_3[1] = fcn.10008559;\n                                                }\n                                                else {\n                                                    iVar1 = fcn.100088aa(param_2, \"blank:\", 6);\n                                                    param_3[1] = ~-(iVar1 != 0) & 0x10001170;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = piStack12;\n    return param_3;\n}\n",
        "token_count": 915
    },
    "10006920": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.10006920(int32_t param_1, uint8_t *param_2)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *unaff_EBX;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x10024008;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x10034058 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    uVar1 = *(param_1 + 0xa8);\n    fcn.10002d20(uVar2);\n    // switch table (87 cases) at 0x10006bac\n    switch(uVar1) {\n    case 0x24:\n        iVar3 = fcn.100092cc(0xc);\n        uStack4 = 1;\n        if (iVar3 != 0) {\n            fcn.10007e60(iVar3);\n            uStack8 = 0xffffffff;\n            fcn.100040f0();\n            goto code_r0x10006b93;\n        }\n        break;\n    default:\ncode_r0x10006b8a:\n        fcn.10003c50(0);\n        goto code_r0x10006b93;\n    case 0x41:\n        iVar3 = fcn.100092cc(0xc);\n        uStack4 = 4;\n        if (iVar3 != 0) {\n            fcn.10007e60(iVar3);\n            uStack8 = 0xffffffff;\n            fcn.100040f0();\n            goto code_r0x10006b93;\n        }\n        break;\n    case 0x42:\n        iVar3 = fcn.100092cc(0xc);\n        uStack4 = 3;\n        if (iVar3 != 0) {\n            fcn.10007e60(iVar3);\n            uStack8 = 0xffffffff;\n            fcn.100040f0();\n            goto code_r0x10006b93;\n        }\n        break;\n    case 0x47:\n        if ((*param_2 & 4) == 0) goto code_r0x10006b8a;\n        iVar3 = fcn.100092cc(4);\n        uStack4 = 7;\n        if (iVar3 != 0) {\n            fcn.10007ee0(iVar3);\n            uStack8 = 0xffffffff;\n            fcn.100040f0();\n            goto code_r0x10006b93;\n        }\n        break;\n    case 0x5a:\n        iVar3 = fcn.100092cc(0xc);\n        uStack4 = 5;\n        if (iVar3 != 0) {\n            fcn.10007e60(iVar3);\n            uStack8 = 0xffffffff;\n            fcn.100040f0();\n            goto code_r0x10006b93;\n        }\n        break;\n    case 0x5e:\n        iVar3 = fcn.100092cc(0xc);\n        uStack4 = 0;\n        if (iVar3 != 0) {\n            fcn.10007e60(iVar3);\n            uStack8 = 0xffffffff;\n            fcn.100040f0();\n            goto code_r0x10006b93;\n        }\n        break;\n    case 0x62:\n        iVar3 = fcn.100092cc(0xc);\n        uStack4 = 2;\n        if (iVar3 != 0) {\n            fcn.10007e60(iVar3);\n            uStack8 = 0xffffffff;\n            fcn.100040f0();\n            goto code_r0x10006b93;\n        }\n        break;\n    case 0x7a:\n        iVar3 = fcn.100092cc(0xc);\n        uStack4 = 6;\n        if (iVar3 != 0) {\n            fcn.10007e60(iVar3);\n            uStack8 = 0xffffffff;\n            fcn.100040f0();\n            goto code_r0x10006b93;\n        }\n    }\n    uStack4 = 0xffffffff;\n    fcn.100040f0();\ncode_r0x10006b93:\n    *in_FS_OFFSET = unaff_EBX;\n    return;\n}\n",
        "token_count": 983
    },
    "10001000": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.10001000(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iStack12;\n    int32_t iStack4;\n    \n    // [00] -r-x section size 147456 named .text\n    uVar7 = *0x1003545c + 9 + *0x10035460;\n    iStack4 = 0;\n    uVar6 = uVar7;\n    if (*0x1003546c <= *0x10035460) {\n        uVar2 = *0x10035460 * 2;\n        uVar4 = (*0x10035460 - 0x145ce) + uVar2;\n        uVar6 = uVar7 + uVar4;\n        iStack4 = (*0x10035460 * 2 >> 0x20) + CARRY4(*0x10035460 - 0x145ce, uVar2) + CARRY4(uVar7, uVar4);\n        *0x10035460 = *0x10035460 * 3 + 0xcfb + uVar6;\n        *0x10035498 = uVar7;\n    }\n    iStack12 = 0x44;\n    iVar3 = *0x100354d0;\n    piVar5 = *0x1004dafc;\n    do {\n        uVar7 = uVar6;\n        if (*0x1003546c <= *0x10035460) {\n            uVar2 = *0x10035460 * 2;\n            uVar4 = (*0x10035460 - 0x145ce) + uVar2;\n            uVar7 = uVar6 + uVar4;\n            iStack4 = iStack4 + (*0x10035460 * 2 >> 0x20) + CARRY4(*0x10035460 - 0x145ce, uVar2) + CARRY4(uVar6, uVar4);\n            *0x10035460 = *0x10035460 * 3 + 0xcfb + uVar7;\n            iVar3 = *0x100354d0;\n            *0x10035498 = uVar6;\n        }\n        *0x1003545c = *0x100354cc + 9 + iVar3;\n        *0x100354cc = *0x100354cc + *0x10035460 + '2';\n        iVar1 = *piVar5;\n        *piVar5 = iVar1 + 0x10bf978;\n        *0x100354c8 = iVar3 + 9 + *0x10035460;\n        piVar5 = piVar5 + 1;\n        iStack12 = iStack12 + -1;\n        uVar6 = uVar7;\n    } while (iStack12 != 0);\n    *0x10035460 = *0x10035460 + *0x1003545c + uVar7;\n    if ((iStack4 == 0) && (uVar7 <= *0x100354c8)) {\n        *0x100354a4 = *0x100354a4 + *0x10035460;\n        *0x100354c8 = *0x10035460 + 9 + uVar7;\n        uVar7 = (*0x100354c8 - 1) + *0x10035460;\n        iStack4 = 0;\n    }\n    if ((iStack4 == 0) && (uVar7 <= *0x100354c8)) {\n        *0x100354a4 = *0x100354a4 + iVar3;\n        *0x100354c8 = iVar3 + 9 + uVar7;\n    }\n    *0x1004f564 = iVar1 + 0x10bf978;\n    return;\n}\n",
        "token_count": 889
    },
    "100021b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\ncode ** fcn.100021b0(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    uint uStack100;\n    uchar auStack96 [68];\n    int32_t *piStack28;\n    uchar uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x10024254;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x10034058 ^ &stack0xffffff94;\n    *in_FS_OFFSET = &piStack12;\n    uStack100 = 0;\n    if (*0x1004f580 == 0) {\n        *param_1 = vtable.CBufferRefT_int_.0;\n        param_1[1] = NULL;\n        param_1[2] = NULL;\n        *param_1 = vtable.CBufferT_int_.0;\n        param_1[4] = NULL;\n        param_1[3] = NULL;\n    }\n    else {\n        fcn.10002290(auStack96, uVar1);\n        uStack8 = 3;\n        fcn.10002aa0(&uStack100);\n        fcn.100027d0(param_1);\n        uStack16 = 0;\n        fcn.10002350(&stack0xffffff94);\n    }\n    *in_FS_OFFSET = piStack28;\n    return param_1;\n}\n",
        "token_count": 332
    },
    "100027d0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "PEB access",
            "contain loop"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.100027d0(int32_t param_1, code **param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **in_FS_OFFSET;\n    uint var_4h;\n    code **var_8h;\n    uint var_ch;\n    uint var_10h;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x10023dda;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x10034058 ^ &stack0xffffffd8;\n    *in_FS_OFFSET = &piStack12;\n    if (*0x1004f580 == NULL) {\n        *var_8h = vtable.CBufferRefT_int_.0;\n        var_8h[1] = NULL;\n        var_8h[2] = NULL;\n        *var_8h = vtable.CBufferT_int_.0;\n        var_8h[4] = NULL;\n        var_8h[3] = NULL;\n    }\n    else {\n        if ((*0x1004f584 & 0x10) == 0) {\n            iVar2 = *(param_1 + 0x50) + 1;\n        }\n        else {\n            iVar2 = -1;\n        }\n        if (*(param_1 + 0x3c) != iVar2) {\n            do {\n                *(param_1 + 0x30) = 0;\n                *(param_1 + 8) = 0;\n                *(param_1 + 0x1c) = 0;\n                iVar2 = *(param_1 + 0x38);\n                iVar7 = *0x1004f588 + 1;\n                if (iVar2 < iVar7) {\n                    if (iVar2 < 8) {\n                        iVar2 = 8;\n                    }\n                    iVar6 = iVar2;\n                    if ((iVar2 < iVar7) &&\n                       (iVar6 = iVar2 * 2,  iVar7 != iVar6 && SBORROW4(iVar7, iVar6) == iVar7 + iVar2 * -2 < 0)) {\n                        uVar5 = *0x1004f588 + 0xcU & 0x80000007;\n                        if (uVar5 < 0) {\n                            uVar5 = (uVar5 - 1 | 0xfffffff8) + 1;\n                        }\n                        iVar6 = (*0x1004f588 + 0xcU) - uVar5;\n                    }\n                    uVar3 = fcn.10008ff6(*(param_1 + 0x34), iVar6 * 4);\n                    *(param_1 + 0x34) = uVar3;\n                    *(param_1 + 0x2c) = uVar3;\n                    *(param_1 + 0x38) = iVar6;\n                }\n                iVar2 = *(param_1 + 0x30);\n                if (iVar2 < iVar7) {\n                    fcn.1000e560(*(param_1 + 0x34) + iVar2 * 4, 0xffffffff, (iVar7 - iVar2) * 4, uVar1);\n                    *(param_1 + 0x30) = iVar7;\n                }\n                **(param_1 + 0x34) = 0;\n                if (*(param_1 + 0x24) <= *(param_1 + 0x1c)) {\n                    iVar2 = *(param_1 + 0x24) * 2;\n                    if (iVar2 < 8) {\n                        iVar2 = 8;\n                    }\n                    uVar3 = fcn.10008ff6(*(param_1 + 0x20), iVar2 * 4);\n                    *(param_1 + 0x20) = uVar3;\n                    *(param_1 + 0x18) = uVar3;\n                    *(param_1 + 0x24) = iVar2;\n                }\n                *(*(param_1 + 0x20) + *(param_1 + 0x1c) * 4) = 0;\n                *(param_1 + 0x1c) = *(param_1 + 0x1c) + 1;\n                uVar3 = *(param_1 + 0x3c);\n                if (*(param_1 + 0x24) <= *(param_1 + 0x1c)) {\n                    iVar2 = *(param_1 + 0x24) * 2;\n                    if (iVar2 < 8) {\n                        iVar2 = 8;\n                    }\n                    uVar4 = fcn.10008ff6(*(param_1 + 0x20), iVar2 * 4);\n                    *(param_1 + 0x20) = uVar4;\n                    *(param_1 + 0x18) = uVar4;\n                    *(param_1 + 0x24) = iVar2;\n                }\n                *(*(param_1 + 0x20) + *(param_1 + 0x1c) * 4) = uVar3;\n                *(param_1 + 0x1c) = *(param_1 + 0x1c) + 1;\n                if (*(param_1 + 0x24) <= *(param_1 + 0x1c)) {\n                    iVar2 = *(param_1 + 0x24) * 2;\n                    if (iVar2 < 8) {\n                        iVar2 = 8;\n                    }\n                    uVar3 = fcn.10008ff6(*(param_1 + 0x20), iVar2 * 4);\n                    *(param_1 + 0x20) = uVar3;\n                    *(param_1 + 0x18) = uVar3;\n                    *(param_1 + 0x24) = iVar2;\n                }\n                *(*(param_1 + 0x20) + *(param_1 + 0x1c) * 4) = 0xffffffff;\n                *(param_1 + 0x1c) = *(param_1 + 0x1c) + 1;\n                if (*(param_1 + 0x24) <= *(param_1 + 0x1c)) {\n                    iVar2 = *(param_1 + 0x24) * 2;\n                    if (iVar2 < 8) {\n                        iVar2 = 8;\n                    }\n                    uVar3 = fcn.10008ff6(*(param_1 + 0x20), iVar2 * 4);\n                    *(param_1 + 0x20) = uVar3;\n                    *(param_1 + 0x18) = uVar3;\n                    *(param_1 + 0x24) = iVar2;\n                }\n                *(*(param_1 + 0x20) + *(param_1 + 0x1c) * 4) = 0xffffffff;\n                *(param_1 + 0x1c) = *(param_1 + 0x1c) + 1;\n                iVar2 = (****0x1004f580)(param_1);\n                if (iVar2 != 0) {\n                    *(*(param_1 + 0x20) + 8) = *(param_1 + 0x3c);\n                    if (*(param_1 + 0x40) == *(param_1 + 0x3c)) {\n                        *(param_1 + 0x3c) = *(param_1 + 0x3c) + piStack12;\n                    }\n                    *(param_1 + 0x44) = *(param_1 + 0x40);\n                    *(param_1 + 0x40) = *(param_1 + 0x3c);\n                    fcn.10002b60(var_8h);\n                    goto code_r0x10002a49;\n                }\n                *(param_1 + 0x3c) = *(param_1 + 0x3c) + piStack12;\n            } while (*(param_1 + 0x3c) != 0);\n        }\n        *var_8h = vtable.CBufferRefT_int_.0;\n        var_8h[1] = NULL;\n        var_8h[2] = NULL;\n        *var_8h = vtable.CBufferT_int_.0;\n        var_8h[4] = NULL;\n        var_8h[3] = NULL;\n    }\ncode_r0x10002a49:\n    *in_FS_OFFSET = piStack12;\n    return var_8h;\n}\n",
        "token_count": 1941
    },
    "10011960": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.10011960(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = *0x100354cc;\n    if (*0x10035490 - *0x10035468 == 0x28) {\n        *0x10035464 = *0x10035464 + -0x3a + (uVar1 - param_1);\n    }\n    else {\n        *0x1003549c = *0x1003549c + -0x43 + uVar1 + param_1;\n        *0x10035464 = *0x10035464 + uVar1 * -2 + 9;\n    }\n    uVar2 = uVar1;\n    if (*0x1003546c <= param_1) {\n        *0x100354cc = *0x100354cc + (param_1 + '\\x19') * '\\x02' + *0x10035464;\n        uVar2 = *0x100354cc;\n        *0x10035464 = uVar2 + *0x10035464 * 2 + 0xcfb + param_1;\n        *0x10035498 = uVar1;\n    }\n    *0x100354d0 = (uVar2 - 1) + *0x10035464;\n    *0x100354d0 = *0x100354d0 + *0x100354c8 + (*0x100354d0 + 9 + *0x100354c8 & 0xffffU);\n    *0x100354cc = *0x100354cc * '\\x02' + *0x100354d0 + *0x10035464 + -5;\n    if (*0x100354a8 == 0xa65) {\n        *0x100354cc = ((*0x100354cc - *0x10035494) + '\\x19') * '\\x02';\n    }\n    return;\n}\n",
        "token_count": 443
    },
    "10011a40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.10011a40(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = *0x100354d0 + *0x100354cc + *0x10035464;\n    piVar1 = 0x1003549c;\n    *0x100354d0 = iVar2;\n    do {\n        if (*0x10035464 != *0x10035484) {\n            *piVar1 = *piVar1 + param_1;\n            *0x10035464 = *0x100354cc * 3 + param_1 * 3 + 0xd0d;\n        }\n        piVar1 = piVar1 + -2;\n    } while (0x10035474 < piVar1);\n    *0x10035460 = iVar2 * 0x3f + 9;\n    *0x100354cc = iVar2 + *0x10035464 + '\\t';\n    return param_1;\n}\n",
        "token_count": 231
    },
    "10011b00": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t fcn.10011b00(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = *0x100354cc;\n    iVar4 = uVar3 + param_1 * 2 + 0xcfb + *0x100354d0;\n    piVar2 = 0x1003546c;\n    do {\n        if (*0x100354d0 != *0x10035468) {\n            iVar4 = iVar4 * *piVar2;\n            *0x100354d0 = (iVar4 - *0x1003545c) - 0x60;\n            if (*0x100354d0 == *0x10035470) break;\n        }\n        piVar2 = piVar2 + 2;\n    } while (piVar2 < 0x10035494);\n    *0x1004f56c = 1;\n    do {\n        if (uVar3 != *0x10035468) {\n            *0x10035464 = *0x10035464 * *(*0x1004f56c * 4 + 0x10035468);\n            *0x100354cc = (*0x10035464 - param_1) + 0xa0;\n            uVar3 = *0x100354cc;\n            if (uVar3 == *0x10035470) break;\n        }\n        *0x1004f56c = *0x1004f56c + 2;\n    } while (*0x1004f56c < 0xb);\n    iVar1 = (*0x100354d0 - 0x145ce) + iVar4;\n    if (*0x10035474 == 4) {\n        param_1 = (*0x100354cc - 1) + *0x10035464;\n    }\n    else {\n        *0x10035464 = *0x10035464 + -0x145ce + param_1;\n    }\n    *0x10035460 = *0x10035460 + ((9 - iVar1) - iVar4);\n    *0x100354d0 = iVar1;\n    if (*0x1003546c <= param_1) {\n        *0x100354d0 = iVar1 + -0x145ce + *0x10035464 + param_1 * 2;\n        *0x10035464 = *0x100354d0 + *0x10035464 * 2 + 0xcfb + param_1;\n        *0x10035498 = iVar1;\n    }\n    *0x100354cc = *0x100354cc + *0x100354d0 + *0x10035464 + -0x43;\n    return *0x10035460;\n}\n",
        "token_count": 637
    },
    "10011c30": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.10011c30(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    uVar2 = *0x100354d0 + *0x10035464 + 9;\n    if (uVar2 <= *0x10035464) {\n        *0x100354a4 = *0x100354a4 + param_1;\n        *0x10035464 = uVar2 + 9 + param_1;\n    }\n    *0x100354cc = *0x100354c8 + *0x100354d0 + 9;\n    if (*0x10035474 == 4) {\n        param_1 = (*0x100354cc - 1) + *0x10035464;\n    }\n    else {\n        *0x10035464 = (*0x10035464 - 0x145ce) + param_1;\n    }\n    if (*0x1003546c <= param_1) {\n        *0x10035498 = *0x100354d0;\n        *0x10035464 = (*0x10035464 + param_1) * 3 + -0x138d3 + *0x100354d0;\n    }\n    uVar2 = *0x100354cc;\n    iVar1 = (uVar2 - 1) + *0x10035464;\n    piVar3 = 0x1003549c;\n    *0x100354d0 = iVar1;\n    do {\n        if (*0x10035464 != *0x10035484) {\n            *piVar3 = *piVar3 + param_1;\n            *0x10035464 = uVar2 * 3 + param_1 * 3 + 0xd0d;\n        }\n        piVar3 = piVar3 + -2;\n    } while (0x10035474 < piVar3);\n    piVar3 = 0x1003549c;\n    do {\n        if (*0x10035464 != *0x10035484) {\n            *piVar3 = *piVar3 + param_1;\n            *0x10035464 = iVar1 * 3 + param_1 * 3 + 0xd0d;\n        }\n        piVar3 = piVar3 + -2;\n    } while (0x10035474 < piVar3);\n    if (*0x10035490 - *0x10035468 == 0x28) {\n        *0x10035460 = *0x100354c8 + 9 + iVar1;\n        *0x10035464 = (*0x10035464 - 0x3a) + (uVar2 - param_1);\n        return;\n    }\n    *0x10035460 = *0x100354c8 + 9 + iVar1;\n    *0x10035464 = *0x10035464 + uVar2 * -2 + 9;\n    *0x1003549c = *0x1003549c + -0x43 + uVar2 + param_1;\n    return;\n}\n",
        "token_count": 703
    },
    "10011d60": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.10011d60(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EDI;\n    \n    uVar2 = *0x100354cc + *0x100354d0 + param_1 + -0x43;\n    if (*0x10035490 - *0x10035468 == 0x28) {\n        iVar3 = (uVar2 - unaff_EDI) + 0x70f;\n    }\n    else {\n        *0x1003549c = *0x1003549c + -0x43 + uVar2 + unaff_EDI;\n        iVar3 = (0x3a9 - uVar2) * 2;\n    }\n    iVar1 = *0x10035460 + -0x43 + *0x100354d0 + param_1;\n    if (*0x10035474 != 4) {\n        iVar3 = iVar3 + -0x145ce + unaff_EDI;\n    }\n    iVar4 = (iVar1 - param_1) + -0x60;\n    *0x10035460 = iVar1 + ((9 - iVar4) - iVar3) * 2;\n    *0x100354cc = *0x100354d0 * '@' + param_1;\n    *0x100354d0 = iVar4;\n    return;\n}\n",
        "token_count": 330
    },
    "1001d7d0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.1001d7d0(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    if (*0x1003546c <= arg_8h) {\n        *0x10035498 = *0x10035460;\n        *0x10035460 = *0x100354d0 + arg_8h * 2 + -0x145ce + *0x10035460;\n        *0x100354d0 = arg_8h + 0xcfb + *0x10035460 + *0x100354d0 * 2;\n    }\n    *0x10035460 = *0x10035460 - (var_ch + -9 + *0x100354cc);\n    if (*0x10035474 != 4) {\n        *0x10035464 = var_ch + (arg_8h - 0x28b9c) + *0x10035464;\n    }\n    if (*0x100354cc <= *0x100354d0) {\n        *0x100354d0 = *0x100354cc + 9 + *0x10035460;\n        *0x100354a4 = *0x100354a4 + *0x10035460;\n        *0x100354cc = *0x100354d0 + -1 + *0x10035460;\n    }\n    if (*0x10035474 == 4) {\n        *0x10035460 = (*0x100354d0 - 1) + *0x100354cc;\n        *0x1003545c = (*0x100354d0 - 1) + *0x10035460;\n    }\n    else {\n        *0x100354d0 = *0x1003545c + *0x10035460 * 2 + (*0x100354d0 - 0x3d16a);\n    }\n    if (*0x1003546c <= *0x10035460) {\n        *0x10035498 = *0x100354cc;\n        *0x100354cc = *0x10035460 * '\\x02' + '2' + *0x100354cc + *0x100354d0;\n        *0x100354d0 = *0x10035460 + 0xcfb + *0x100354cc + *0x100354d0 * 2;\n    }\n    if (*0x10035490 - *0x10035468 == 0x28) {\n        *0x100354d0 = (*0x100354cc + *0x100354d0 + -0x43 + *0x100354cc) - ((*0x10035460 - 9) + *0x100354cc);\n    }\n    else {\n        *0x1003549c = (*0x100354cc - 0x43) + *0x10035460 + *0x1003549c;\n        *0x100354d0 = *0x100354d0 - ((*0x100354cc - 9) + *0x100354cc);\n    }\n    if (*0x10035490 - *0x10035468 == 0x28) {\n        *0x100354d0 = ((*0x10035460 - 0x43) + *0x100354d0) - (*0x1003545c + -9);\n    }\n    else {\n        *0x1003549c = (*0x10035460 - 0x43) + *0x1003545c + *0x1003549c;\n        *0x100354d0 = *0x100354d0 + *0x10035460 * -2 + 9;\n    }\n    if (*0x100354a8 == 0xa65) {\n        *0x100354cc = (*0x100354cc - *0x10035494) * '\\x02' + 0x32;\n    }\n    if (*0x10035474 == 4) {\n        *0x1003545c = *0x100354d0 + -1 + *0x10035460;\n    }\n    else {\n        *0x100354d0 = *0x1003545c + -0x145ce + *0x100354d0;\n    }\n    if (*0x100354a8 == 0xa65) {\n        *0x100354cc = (*0x100354cc - *0x10035494) * '\\x02' + 0x32;\n    }\n    *0x100354d4 = var_ch + -1 + arg_ch;\n    return *0x10035460;\n}\n",
        "token_count": 1099
    },
    "10001190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10001190(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x100238b8;\n    uStack12 = *in_FS_OFFSET;\n    uVar1 = *0x10034058 ^ &uStack12;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0xffffffff;\n    fcn.100011f0(uVar1);\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 131
    },
    "100011f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.100011f0(code **param_1)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x10023888;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CBufferT_int_.0;\n    uStack4 = 0;\n    if (param_1[3] != NULL) {\n        fcn.1000896a(param_1[3]);\n    }\n    *param_1 = vtable.CBufferRefT_int_.0;\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 164
    },
    "10001270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.10001270(code **param_1)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x10023858;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CBufferT_class_ElxInterface__.0;\n    uStack4 = 0;\n    if (param_1[3] != NULL) {\n        fcn.1000896a(param_1[3]);\n    }\n    *param_1 = vtable.CBufferRefT_class_ElxInterface__.0;\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 169
    },
    "100012f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.100012f0(code **param_1)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x10023828;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CBufferT_class_CListElxT_0___.0;\n    uStack4 = 0;\n    if (param_1[3] != NULL) {\n        fcn.1000896a(param_1[3]);\n    }\n    *param_1 = vtable.CBufferRefT_class_CListElxT_0___.0;\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 180
    },
    "10001370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.10001370(code **param_1)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x100237f8;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CBufferT_class_CDelegateElxT_char___.0;\n    uStack4 = 0;\n    if (param_1[3] != NULL) {\n        fcn.1000896a(param_1[3]);\n    }\n    *param_1 = vtable.CBufferRefT_class_CDelegateElxT_char___.0;\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 178
    },
    "100013f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.100013f0(code **param_1)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x100237c8;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CBufferT_class_CBackrefElxT_char___.0;\n    uStack4 = 0;\n    if (param_1[3] != NULL) {\n        fcn.1000896a(param_1[3]);\n    }\n    *param_1 = vtable.CBufferRefT_class_CBackrefElxT_char___.0;\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 181
    },
    "10001470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.10001470(code **param_1)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x10023798;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CBufferT_class_CConditionElxT_char___.0;\n    uStack4 = 0;\n    if (param_1[3] != NULL) {\n        fcn.1000896a(param_1[3]);\n    }\n    *param_1 = vtable.CBufferRefT_class_CConditionElxT_char___.0;\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 177
    },
    "100014f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.100014f0(void)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    uint uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x10023f90;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x10034058 ^ &uStack16;\n    *in_FS_OFFSET = &piStack12;\n    uStack16 = 0x1004f580;\n    uStack4 = 6;\n    fcn.10001ea0(uVar1);\n    uStack4._1_3_ = uStack4 >> 8;\n    *0x1004f60c = vtable.CBufferRefT_char_.0;\n    uStack4._0_1_ = 4;\n    fcn.10001470();\n    uStack4._0_1_ = 3;\n    fcn.100013f0();\n    uStack4._0_1_ = 2;\n    fcn.100012f0();\n    uStack4._0_1_ = 1;\n    fcn.10001370();\n    uStack4 = uStack4._1_3_ << 8;\n    fcn.10001270();\n    uStack4 = 0xffffffff;\n    fcn.10001270();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 330
    },
    "10001a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.10001a20(code **param_1)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x10023768;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CBufferT_char_.0;\n    uStack4 = 0;\n    if (param_1[3] != NULL) {\n        fcn.1000896a(param_1[3]);\n    }\n    *param_1 = vtable.CBufferRefT_char_.0;\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 164
    },
    "10001ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10001ea0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < *0x1004f59c) {\n        do {\n            piVar1 = *(*0x1004f5a0 + iVar2 * 4);\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 8))(1);\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *0x1004f59c);\n    }\n    *0x1004f59c = 0;\n    *0x1004f580 = 0;\n    *0x1004f588 = 0;\n    fcn.1000e560(0x1004f668, 0, 0x44);\n    return;\n}\n",
        "token_count": 192
    },
    "10001f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with lookup table/f2e93a0d9a164553a93d71878df6b782"
        ],
        "decompiled_code": "\nuint fcn.10001f20(void)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x10023f20;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x10034058 ^ &uStack20;\n    *in_FS_OFFSET = &piStack12;\n    uStack20 = 0x1004f580;\n    *0x1004f598 = 0;\n    *0x1004f59c = 0;\n    *0x1004f594 = vtable.CBufferT_class_ElxInterface__.0;\n    *0x1004f5a4 = 0;\n    *0x1004f5a0 = 0;\n    *0x1004f5ac = 0;\n    *0x1004f5b0 = 0;\n    *0x1004f5a8 = vtable.CBufferT_class_ElxInterface__.0;\n    *0x1004f5b8 = 0;\n    *0x1004f5b4 = 0;\n    *0x1004f5c0 = 0;\n    *0x1004f5c4 = 0;\n    *0x1004f5bc = vtable.CBufferT_class_CDelegateElxT_char___.0;\n    *0x1004f5cc = 0;\n    *0x1004f5c8 = 0;\n    *0x1004f5d4 = 0;\n    *0x1004f5d8 = 0;\n    *0x1004f5d0 = vtable.CBufferT_class_CListElxT_0___.0;\n    *0x1004f5e0 = 0;\n    *0x1004f5dc = 0;\n    *0x1004f5e8 = 0;\n    *0x1004f5ec = 0;\n    *0x1004f5e4 = vtable.CBufferT_class_CBackrefElxT_char___.0;\n    *0x1004f5f4 = 0;\n    *0x1004f5f0 = 0;\n    uStack16 = 0x1004f5f8;\n    *0x1004f5fc = 0;\n    *0x1004f600 = 0;\n    *0x1004f5f8 = vtable.CBufferT_class_CConditionElxT_char___.0;\n    *0x1004f608 = 0;\n    *0x1004f604 = 0;\n    *0x1004f60c = vtable.CBufferRefT_char_.0;\n    *0x1004f610 = 0;\n    *0x1004f614 = 0;\n    uStack4 = 0xc;\n    *0x1004f618 = 0;\n    *0x1004f61c = 0;\n    *0x1004f620 = 0;\n    *0x1004f624 = 0;\n    *0x1004f628 = 0;\n    *0x1004f62c = 0;\n    *0x1004f630 = 0;\n    *0x1004f634 = 0;\n    *0x1004f638 = 0;\n    *0x1004f63c = 0;\n    *0x1004f640 = 0;\n    *0x1004f644 = 0;\n    *0x1004f648 = 0;\n    *0x1004f64c = 0;\n    *0x1004f650 = 0;\n    *0x1004f654 = 0;\n    fcn.10001ea0(uVar1);\n    *in_FS_OFFSET = piStack12;\n    return 0x1004f580;\n}\n",
        "token_count": 899
    },
    "10002130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10002130(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    code *pcStack24;\n    char *pcStack20;\n    uint uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x10024278;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x10034058 ^ &pcStack24;\n    *in_FS_OFFSET = &piStack12;\n    fcn.10001ea0(uVar1);\n    pcStack24 = vtable.CBufferRefT_char_.0;\n    pcStack20 = \"Tool oil \";\n    uStack16 = param_1;\n    uStack4 = 0;\n    fcn.10002450();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 207
    },
    "10002290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.10002290(code **param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_1 = vtable.CBufferRefT_int_.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    *param_1 = vtable.CBufferT_int_.0;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = vtable.CBufferRefT_int_.0;\n    param_1[6] = NULL;\n    param_1[7] = NULL;\n    param_1[5] = vtable.CBufferT_int_.0;\n    param_1[9] = NULL;\n    param_1[8] = NULL;\n    param_1[10] = vtable.CBufferRefT_int_.0;\n    param_1[0xb] = NULL;\n    param_1[0xc] = NULL;\n    param_1[10] = vtable.CBufferT_int_.0;\n    param_1[0xe] = NULL;\n    param_1[0xd] = NULL;\n    *in_FS_OFFSET = iVar1;\n    return;\n}\n",
        "token_count": 297
    },
    "10002350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.10002350(void)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack8 = 0x10023e1e;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x10034058 ^ &stack0xfffffff0;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 1;\n    fcn.100011f0(uVar1);\n    uStack4 = uStack4 & 0xffffff00;\n    fcn.100011f0();\n    uStack4 = 0xffffffff;\n    fcn.100011f0();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 181
    },
    "100023f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.100023f0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t iVar4;\n    int32_t unaff_EDI;\n    \n    iVar4 = 0;\n    if (0 < *(unaff_EDI + 8)) {\n        do {\n            cVar1 = *(iVar4 + *(unaff_EDI + 4));\n            if (cVar1 != *(iVar4 + unaff_EBX)) {\n                iVar2 = fcn.10008f75(cVar1);\n                iVar3 = fcn.10008f75(*(iVar4 + unaff_EBX));\n                if (iVar2 != iVar3) {\n                    return *(iVar4 + *(unaff_EDI + 4)) - *(iVar4 + unaff_EBX);\n                }\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < *(unaff_EDI + 8));\n    }\n    return 0;\n}\n",
        "token_count": 228
    },
    "10002b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.10002b60(code **param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    int32_t iVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x10023d80;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x10034058 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    iVar5 = 0;\n    *param_1 = vtable.CBufferRefT_int_.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    *param_1 = vtable.CBufferT_int_.0;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    uStack4 = 1;\n    if (unaff_EBX != 0) {\n        fcn.10002c30(uVar2);\n        *param_1[3] = 1;\n        *(param_1[3] + 4) = param_2;\n        if (-1 < param_2) {\n            do {\n                iVar1 = *(*(unaff_EBX + 0x34) + iVar5 * 4);\n                if (-1 < iVar1) {\n                    iVar3 = *(*(unaff_EBX + 0x20) + 4 + iVar1 * 4);\n                    iVar1 = *(*(unaff_EBX + 0x20) + 8 + iVar1 * 4);\n                    iVar4 = iVar3;\n                    if (iVar1 <= iVar3) {\n                        iVar4 = iVar1;\n                    }\n                    *(param_1[3] + iVar5 * 8 + 8) = iVar4;\n                    if (iVar3 < iVar1) {\n                        iVar3 = iVar1;\n                    }\n                    *(param_1[3] + iVar5 * 8 + 0xc) = iVar3;\n                }\n                iVar5 = iVar5 + 1;\n            } while (iVar5 <= param_2);\n        }\n    }\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 523
    },
    "10002c30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10002c30(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EDI;\n    \n    iVar4 = *(unaff_EDI + 0x10);\n    iVar3 = in_EAX + 1;\n    if (iVar4 < iVar3) {\n        if (iVar4 < 8) {\n            iVar4 = 8;\n        }\n        iVar5 = iVar4;\n        if ((iVar4 < iVar3) && (iVar5 = iVar4 * 2,  iVar3 != iVar5 && SBORROW4(iVar3, iVar5) == iVar3 + iVar4 * -2 < 0))\n        {\n            uVar1 = in_EAX + 0xcU & 0x80000007;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffff8) + 1;\n            }\n            iVar5 = (in_EAX + 0xcU) - uVar1;\n        }\n        uVar2 = fcn.10008ff6(*(unaff_EDI + 0xc), iVar5 * 4);\n        *(unaff_EDI + 0xc) = uVar2;\n        *(unaff_EDI + 4) = uVar2;\n        *(unaff_EDI + 0x10) = iVar5;\n    }\n    iVar4 = *(unaff_EDI + 8);\n    if (iVar4 < iVar3) {\n        fcn.1000e560(*(unaff_EDI + 0xc) + iVar4 * 4, 0xffffffff, (iVar3 - iVar4) * 4);\n        *(unaff_EDI + 8) = iVar3;\n    }\n    return;\n}\n",
        "token_count": 418
    },
    "10002cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.10002cb0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if (0 < *0x1004f5d8) {\n        do {\n            if ((*(**(*(*0x1004f5dc + iVar2 * 4) + 0x10) + 0x14) == *(arg_8h + 8)) &&\n               (iVar1 = fcn.100023f0(),  iVar1 == 0)) {\n                return *(**(*(*0x1004f5dc + iVar2 * 4) + 0x10) + 4);\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *0x1004f5d8);\n    }\n    return 0xfffffffd;\n}\n",
        "token_count": 202
    },
    "10003160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10003160(uint param_1)\n\n{\n    uint uVar1;\n    int32_t unaff_ESI;\n    int32_t iVar2;\n    \n    if (*(unaff_ESI + 0x10) <= *(unaff_ESI + 8)) {\n        iVar2 = *(unaff_ESI + 0x10) * 2;\n        if (iVar2 < 8) {\n            iVar2 = 8;\n        }\n        uVar1 = fcn.10008ff6(*(unaff_ESI + 0xc), iVar2 * 4);\n        *(unaff_ESI + 0x10) = iVar2;\n        *(unaff_ESI + 0xc) = uVar1;\n        *(unaff_ESI + 4) = uVar1;\n    }\n    *(*(unaff_ESI + 0xc) + *(unaff_ESI + 8) * 4) = param_1;\n    *(unaff_ESI + 8) = *(unaff_ESI + 8) + 1;\n    return;\n}\n",
        "token_count": 235
    },
    "100040f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.100040f0(void)\n\n{\n    uint uVar1;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar2;\n    \n    if (*(unaff_ESI + 0x24) <= *(unaff_ESI + 0x1c)) {\n        iVar2 = *(unaff_ESI + 0x24) * 2;\n        if (iVar2 < 8) {\n            iVar2 = 8;\n        }\n        uVar1 = fcn.10008ff6(*(unaff_ESI + 0x20), iVar2 * 4);\n        *(unaff_ESI + 0x24) = iVar2;\n        *(unaff_ESI + 0x20) = uVar1;\n        *(unaff_ESI + 0x18) = uVar1;\n    }\n    *(*(unaff_ESI + 0x20) + *(unaff_ESI + 0x1c) * 4) = unaff_EBX;\n    *(unaff_ESI + 0x1c) = *(unaff_ESI + 0x1c) + 1;\n    return;\n}\n",
        "token_count": 258
    },
    "10004290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10004290(code **param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_1 = vtable.ElxInterface.0;\n    *param_1 = vtable.CAlternativeElxT_0_.0;\n    param_1[1] = vtable.CBufferRefT_class_ElxInterface__.0;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[1] = vtable.CBufferT_class_ElxInterface__.0;\n    param_1[5] = NULL;\n    param_1[4] = NULL;\n    *in_FS_OFFSET = iVar1;\n    return;\n}\n",
        "token_count": 185
    },
    "10004790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10004790(code **param_1, code *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_1 = vtable.ElxInterface.0;\n    *param_1 = vtable.CListElxT_0_.0;\n    param_1[1] = vtable.CBufferRefT_class_ElxInterface__.0;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[1] = vtable.CBufferT_class_ElxInterface__.0;\n    param_1[5] = NULL;\n    param_1[4] = NULL;\n    param_1[6] = param_2;\n    *in_FS_OFFSET = iVar1;\n    return;\n}\n",
        "token_count": 203
    },
    "10004840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10004840(code **param_1)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_1 = vtable.ElxInterface.0;\n    *param_1 = vtable.CEmptyElxT_0_.0;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 103
    },
    "100049a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.100049a0(code **param_1, code *param_2, code *param_3)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_1 = vtable.ElxInterface.0;\n    *param_1 = vtable.CRangeElxT_char_.0;\n    param_1[1] = vtable.CBufferRefT_char_.0;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[1] = vtable.CBufferT_char_.0;\n    param_1[5] = NULL;\n    param_1[4] = NULL;\n    param_1[6] = vtable.CBufferRefT_char_.0;\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    param_1[6] = vtable.CBufferT_char_.0;\n    param_1[10] = NULL;\n    param_1[9] = NULL;\n    param_1[0xb] = vtable.CBufferRefT_class_ElxInterface__.0;\n    param_1[0xc] = NULL;\n    param_1[0xd] = NULL;\n    param_1[0xb] = vtable.CBufferT_class_ElxInterface__.0;\n    param_1[0xf] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0x10] = param_2;\n    param_1[0x11] = param_3;\n    *in_FS_OFFSET = iVar1;\n    return;\n}\n",
        "token_count": 381
    },
    "10004a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10004a80(uchar param_1)\n\n{\n    uint uVar1;\n    int32_t unaff_ESI;\n    int32_t arg_ch;\n    \n    if (*(unaff_ESI + 0x10) <= *(unaff_ESI + 8)) {\n        arg_ch = *(unaff_ESI + 0x10) * 2;\n        if (arg_ch < 8) {\n            arg_ch = 8;\n        }\n        uVar1 = fcn.10008ff6(*(unaff_ESI + 0xc), arg_ch);\n        *(unaff_ESI + 0x10) = arg_ch;\n        *(unaff_ESI + 0xc) = uVar1;\n        *(unaff_ESI + 4) = uVar1;\n    }\n    *(*(unaff_ESI + 0xc) + *(unaff_ESI + 8)) = param_1;\n    *(unaff_ESI + 8) = *(unaff_ESI + 8) + 1;\n    return;\n}\n",
        "token_count": 230
    },
    "10004ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.10004ae0(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x10023b99;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x10034058 ^ &stack0xfffffff0;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 2;\n    fcn.10001270(uVar1);\n    uStack4._0_1_ = 1;\n    fcn.10001a20();\n    uStack4 = uStack4._1_3_ << 8;\n    fcn.10001a20();\n    *param_1 = vtable.ElxInterface.0;\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 213
    },
    "10004fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.10004fb0(code **param_1)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_1 = vtable.CBufferRefT_char_.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    *param_1 = vtable.CBufferT_char_.0;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 143
    },
    "10005050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.10005050(code *param_1, code *param_2, code **param_3)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_3 = vtable.ElxInterface.0;\n    *param_3 = vtable.CRepeatElxT_0_.0;\n    param_3[1] = param_1;\n    param_3[2] = param_2;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 141
    },
    "100051a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.100051a0(int32_t param_1, code *param_2, code **param_3)\n\n{\n    uint uVar1;\n    code *unaff_ESI;\n    uint *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_3 = vtable.ElxInterface.0;\n    *param_3 = vtable.CRepeatElxT_0_.0;\n    param_3[1] = unaff_ESI;\n    param_3[2] = param_2;\n    *param_3 = vtable.CReluctantElxT_0_.0;\n    param_3[3] = param_1 - param_2;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 188
    },
    "100052c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.100052c0(int32_t param_1, code *param_2, code **param_3)\n\n{\n    uint uVar1;\n    code *unaff_ESI;\n    uint *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_3 = vtable.ElxInterface.0;\n    *param_3 = vtable.CRepeatElxT_0_.0;\n    param_3[1] = unaff_ESI;\n    param_3[2] = param_2;\n    *param_3 = vtable.CGreedyElxT_0_.0;\n    param_3[3] = param_1 - param_2;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 187
    },
    "10005480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.10005480(int32_t param_1, code *param_2, code **param_3)\n\n{\n    uint uVar1;\n    code *unaff_ESI;\n    uint *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_3 = vtable.ElxInterface.0;\n    *param_3 = vtable.CRepeatElxT_0_.0;\n    param_3[1] = unaff_ESI;\n    param_3[2] = param_2;\n    *param_3 = vtable.CGreedyElxT_0_.0;\n    param_3[3] = param_1 - param_2;\n    *param_3 = vtable.CPossessiveElxT_0_.0;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 206
    },
    "10005560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10005560(code **param_1)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_1 = vtable.ElxInterface.0;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 85
    },
    "10005610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10005610(code **param_1)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_1 = vtable.ElxInterface.0;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 85
    },
    "10006fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10006fb0(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar5;\n    int32_t arg_ch;\n    \n    iVar2 = *(unaff_ESI + 0x10);\n    iVar5 = iVar2;\n    if (iVar2 < 8) {\n        iVar5 = 8;\n    }\n    iVar1 = unaff_EBX + 1 + *(unaff_ESI + 8);\n    arg_ch = iVar5;\n    if ((iVar5 < iVar1) && (arg_ch = iVar5 * 2,  iVar1 != arg_ch && SBORROW4(iVar1, arg_ch) == iVar1 + iVar5 * -2 < 0))\n    {\n        uVar4 = iVar1 + 0xbU & 0x80000007;\n        if (uVar4 < 0) {\n            uVar4 = (uVar4 - 1 | 0xfffffff8) + 1;\n        }\n        arg_ch = (iVar1 + 0xbU) - uVar4;\n    }\n    if (iVar2 < arg_ch) {\n        uVar3 = fcn.10008ff6(*(unaff_ESI + 0xc), arg_ch);\n        *(unaff_ESI + 0xc) = uVar3;\n        *(unaff_ESI + 4) = uVar3;\n        *(unaff_ESI + 0x10) = arg_ch;\n    }\n    fcn.1000d350(*(unaff_ESI + 0xc) + *(unaff_ESI + 8), param_1, unaff_EBX);\n    *(unaff_ESI + 8) = *(unaff_ESI + 8) + unaff_EBX;\n    *(*(unaff_ESI + 8) + *(unaff_ESI + 0xc)) = 0;\n    return;\n}\n",
        "token_count": 451
    },
    "100070f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.100070f0(uint param_1, code **param_2, int32_t *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    code *unaff_retaddr;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x10023a73;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x10034058 ^ &stack0xfffffff0;\n    *in_FS_OFFSET = &piStack12;\n    *param_2 = vtable.ElxInterface.0;\n    uStack4 = 0;\n    *param_2 = vtable.CStringElxT_char_.0;\n    fcn.100074f0(param_2 + 1, param_1, param_3, uVar1);\n    param_2[6] = unaff_retaddr;\n    param_2[7] = param_2;\n    *in_FS_OFFSET = param_3;\n    return param_2;\n}\n",
        "token_count": 241
    },
    "10007230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10007230(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar2 = *(in_EAX + 0x3c);\n    iVar4 = 0;\n    if (0 < *(in_EAX + 8)) {\n        iVar4 = *(in_EAX + 8) + -1;\n        *(in_EAX + 8) = iVar4;\n        iVar4 = *(*(in_EAX + 0xc) + iVar4 * 4);\n    }\n    if ((iVar4 < *(param_1 + 0xc)) && (iVar1 = (****(param_1 + 4))(),  iVar1 != 0)) {\n        if (*(in_EAX + 0x3c) == iVar2) {\n            do {\n                iVar1 = (**(**(param_1 + 4) + 4))();\n                if (iVar1 == 0) break;\n            } while (*(in_EAX + 0x3c) == iVar2);\n            if (*(in_EAX + 0x3c) == iVar2) goto joined_r0x10007298;\n        }\n        fcn.10003160(iVar2);\n        fcn.10003160(iVar4 + 1);\n        return 1;\n    }\njoined_r0x10007298:\n    do {\n        if (iVar4 < 1) {\n            return 0;\n        }\n        if (0 < *(in_EAX + 8)) {\n            iVar2 = *(in_EAX + 8) + -1;\n            *(in_EAX + 8) = iVar2;\n            iVar2 = *(*(in_EAX + 0xc) + iVar2 * 4);\n        }\n        iVar1 = (**(**(param_1 + 4) + 4))();\n        while (iVar1 != 0) {\n            if (*(in_EAX + 0x3c) != iVar2) {\n                if (*(in_EAX + 0x10) <= *(in_EAX + 8)) {\n                    iVar1 = *(in_EAX + 0x10) * 2;\n                    if (iVar1 < 8) {\n                        iVar1 = 8;\n                    }\n                    uVar3 = fcn.10008ff6(*(in_EAX + 0xc), iVar1 * 4);\n                    *(in_EAX + 0xc) = uVar3;\n                    *(in_EAX + 4) = uVar3;\n                    *(in_EAX + 0x10) = iVar1;\n                }\n                *(*(in_EAX + 0xc) + *(in_EAX + 8) * 4) = iVar2;\n                *(in_EAX + 8) = *(in_EAX + 8) + 1;\n                if (*(in_EAX + 0x10) <= *(in_EAX + 8)) {\n                    iVar2 = *(in_EAX + 0x10) * 2;\n                    if (iVar2 < 8) {\n                        iVar2 = 8;\n                    }\n                    uVar3 = fcn.10008ff6(*(in_EAX + 0xc), iVar2 * 4);\n                    *(in_EAX + 0xc) = uVar3;\n                    *(in_EAX + 4) = uVar3;\n                    *(in_EAX + 0x10) = iVar2;\n                }\n                *(*(in_EAX + 0xc) + *(in_EAX + 8) * 4) = iVar4;\n                *(in_EAX + 8) = *(in_EAX + 8) + 1;\n                return 1;\n            }\n            iVar1 = (**(**(param_1 + 4) + 4))();\n        }\n        iVar4 = iVar4 + -1;\n    } while( true );\n}\n",
        "token_count": 860
    },
    "10007370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10007370(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBX;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = *(unaff_ESI + 0x3c);\n    if (0 < *(unaff_EBX + 0xc)) {\n        do {\n            iVar1 = (****(unaff_EBX + 4))();\n            if (iVar1 == 0) break;\n            iVar1 = *(unaff_ESI + 0x3c);\n            if (iVar1 == iVar4) {\n                do {\n                    iVar1 = (**(**(unaff_EBX + 4) + 4))();\n                    if (iVar1 == 0) break;\n                } while (*(unaff_ESI + 0x3c) == iVar4);\n                iVar1 = *(unaff_ESI + 0x3c);\n                if (iVar1 == iVar4) break;\n            }\n            iVar3 = iVar3 + 1;\n            iVar4 = iVar1;\n        } while (iVar3 < *(unaff_EBX + 0xc));\n    }\n    if (*(unaff_ESI + 0x10) <= *(unaff_ESI + 8)) {\n        iVar4 = *(unaff_ESI + 0x10) * 2;\n        if (iVar4 < 8) {\n            iVar4 = 8;\n        }\n        uVar2 = fcn.10008ff6(*(unaff_ESI + 0xc), iVar4 * 4);\n        *(unaff_ESI + 0xc) = uVar2;\n        *(unaff_ESI + 4) = uVar2;\n        *(unaff_ESI + 0x10) = iVar4;\n    }\n    *(*(unaff_ESI + 0xc) + *(unaff_ESI + 8) * 4) = iVar3;\n    *(unaff_ESI + 8) = *(unaff_ESI + 8) + 1;\n    return;\n}\n",
        "token_count": 467
    },
    "10007400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10007400(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_ESI;\n    \n    if (0 < *(unaff_ESI + 8)) {\n        iVar1 = *(unaff_ESI + 8) + -1;\n        *(unaff_ESI + 8) = iVar1;\n        iVar1 = *(*(unaff_ESI + 0xc) + iVar1 * 4);\n        if (iVar1 != 0) {\n            iVar2 = (**(**(param_2 + 4) + 4))();\n            if (iVar2 == 0) {\n                iVar1 = iVar1 + -1;\n            }\n            if (*(unaff_ESI + 0x10) <= *(unaff_ESI + 8)) {\n                iVar2 = *(unaff_ESI + 0x10) * 2;\n                if (iVar2 < 8) {\n                    iVar2 = 8;\n                }\n                uVar3 = fcn.10008ff6(*(unaff_ESI + 0xc), iVar2 * 4);\n                *(unaff_ESI + 0x10) = iVar2;\n                *(unaff_ESI + 0xc) = uVar3;\n                *(unaff_ESI + 4) = uVar3;\n            }\n            *(*(unaff_ESI + 0xc) + *(unaff_ESI + 8) * 4) = iVar1;\n            *(unaff_ESI + 8) = *(unaff_ESI + 8) + 1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 380
    },
    "100074f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.100074f0(code **param_1, uint param_2, code *param_3)\n\n{\n    code *arg_8h;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x100236d8;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CBufferRefT_char_.0;\n    param_1[1] = NULL;\n    param_1[2] = param_3;\n    uStack4 = 0;\n    *param_1 = vtable.CBufferT_char_.0;\n    param_1[4] = param_1[2] + 1;\n    arg_8h = fcn.10008a47(param_1[2] + 1);\n    param_1[3] = arg_8h;\n    param_1[1] = arg_8h;\n    fcn.1000d350(arg_8h, param_2, param_1[2]);\n    param_1[2][param_1[3]] = 0x0;\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 288
    },
    "10007850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.10007850(uint param_1, char param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t unaff_EDI;\n    \n    bVar1 = false;\n    iVar2 = 0;\n    do {\n        if (*(unaff_EDI + 0xc) <= iVar2) break;\n        pcVar3 = *(unaff_EDI + 0x10) + iVar2;\n        if ((*pcVar3 == param_2 || *pcVar3 < param_2) && (param_2 <= pcVar3[1])) {\n            bVar1 = true;\n        }\n        iVar2 = iVar2 + 2;\n    } while (!bVar1);\n    iVar2 = 0;\n    if (!bVar1) {\n        do {\n            if (*(unaff_EDI + 0x20) <= iVar2) {\n                return;\n            }\n            if (*(iVar2 + *(unaff_EDI + 0x24)) == param_2) {\n                bVar1 = true;\n            }\n            iVar2 = iVar2 + 1;\n        } while (!bVar1);\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "10007970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.10007970(code *param_1, code *param_2, code **param_3)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_3 = vtable.ElxInterface.0;\n    *param_3 = vtable.CAssertElxT_0_.0;\n    param_3[1] = param_1;\n    param_3[2] = param_2;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 141
    },
    "100079d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.100079d0(code **param_1, code *param_2, code *param_3)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_1 = vtable.ElxInterface.0;\n    *param_1 = vtable.CBracketElxT_char_.0;\n    param_1[3] = vtable.CBufferRefT_char_.0;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[3] = vtable.CBufferT_char_.0;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    param_1[1] = param_2;\n    param_1[2] = param_3;\n    *in_FS_OFFSET = iVar1;\n    return;\n}\n",
        "token_count": 215
    },
    "10007a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10007a60(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EDI;\n    \n    iVar4 = *(unaff_EDI + 0x10);\n    iVar3 = in_EAX + 1;\n    if (iVar4 < iVar3) {\n        if (iVar4 < 8) {\n            iVar4 = 8;\n        }\n        iVar5 = iVar4;\n        if ((iVar4 < iVar3) && (iVar5 = iVar4 * 2,  iVar3 != iVar5 && SBORROW4(iVar3, iVar5) == iVar3 + iVar4 * -2 < 0))\n        {\n            uVar1 = in_EAX + 0xcU & 0x80000007;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffff8) + 1;\n            }\n            iVar5 = (in_EAX + 0xcU) - uVar1;\n        }\n        uVar2 = fcn.10008ff6(*(unaff_EDI + 0xc), iVar5 * 4);\n        *(unaff_EDI + 0xc) = uVar2;\n        *(unaff_EDI + 4) = uVar2;\n        *(unaff_EDI + 0x10) = iVar5;\n    }\n    iVar4 = *(unaff_EDI + 8);\n    if (iVar4 < iVar3) {\n        fcn.1000e560(*(unaff_EDI + 0xc) + iVar4 * 4, 0, (iVar3 - iVar4) * 4);\n        *(unaff_EDI + 8) = iVar3;\n    }\n    return;\n}\n",
        "token_count": 417
    },
    "10007ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.10007ba0(code *param_1, code **param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_2 = vtable.ElxInterface.0;\n    *param_2 = vtable.CIndependentElxT_0_.0;\n    param_2[1] = param_1;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 125
    },
    "10007c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10007c00(code **param_1, code *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_1 = vtable.ElxInterface.0;\n    *param_1 = vtable.CDelegateElxT_char_.0;\n    param_1[3] = vtable.CBufferRefT_char_.0;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[3] = vtable.CBufferT_char_.0;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    param_1[1] = NULL;\n    param_1[2] = param_2;\n    *in_FS_OFFSET = iVar1;\n    return;\n}\n",
        "token_count": 207
    },
    "10007c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10007c90(code **param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_1 = vtable.ElxInterface.0;\n    *param_1 = vtable.CConditionElxT_char_.0;\n    param_1[2] = vtable.CBufferRefT_char_.0;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = vtable.CBufferT_char_.0;\n    param_1[6] = NULL;\n    param_1[5] = NULL;\n    param_1[1] = 0xffffffff;\n    *in_FS_OFFSET = iVar1;\n    return;\n}\n",
        "token_count": 191
    },
    "10007e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.10007e60(code *param_1, code *param_2, code **param_3)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_3 = vtable.ElxInterface.0;\n    *param_3 = vtable.CBoundaryElxT_char_.0;\n    param_3[1] = param_1;\n    param_3[2] = param_2;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 141
    },
    "10007ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10007ee0(code **param_1)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_1 = vtable.ElxInterface.0;\n    *param_1 = vtable.CGlobalElxT_0_.0;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 104
    },
    "10007f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10007f40(code **param_1, code *param_2, code *param_3, code *param_4)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uchar auStack12 [12];\n    \n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack12;\n    *param_1 = vtable.ElxInterface.0;\n    *param_1 = vtable.CBackrefElxT_char_.0;\n    param_1[4] = vtable.CBufferRefT_char_.0;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    param_1[4] = vtable.CBufferT_char_.0;\n    param_1[8] = NULL;\n    param_1[7] = NULL;\n    param_1[1] = param_2;\n    param_1[2] = param_3;\n    param_1[3] = param_4;\n    *in_FS_OFFSET = iVar1;\n    return;\n}\n",
        "token_count": 234
    },
    "100081cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.100081cd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.10009af4(0x100319b0, 0x10);\n    iVar1 = fcn.10009685();\n    iVar1 = iVar1 + 0x20;\n    *(unaff_EBP + -0x1c) = iVar1;\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar2 = fcn.10009aa9();\n        *puVar2 = 0x16;\n        fcn.10009a41(0, 0, 0, 0, 0);\n    }\n    else {\n        fcn.1000975c(iVar1);\n        *(unaff_EBP + -4) = 0;\n        arg_8h_00 = fcn.1000983a(iVar1);\n        uVar3 = (**(unaff_EBP + 8))(iVar1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar3;\n        fcn.100098d6(arg_8h_00, iVar1);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.10008255();\n    }\n    fcn.10009b39();\n    return;\n}\n",
        "token_count": 440
    },
    "1000825d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1000825d(uint arg_8h, uint arg_ch)\n\n{\n    fcn.100081cd(fcn.10009d82, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "1000e024": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x1000e038)\n// WARNING: Removing unreachable block (ram,0x1000e03e)\n// WARNING: Removing unreachable block (ram,0x1000e040)\n\nvoid fcn.1000e024(void)\n\n{\n    return;\n}\n",
        "token_count": 65
    },
    "1001f372": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1001f372(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.10020321(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "10011781": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.10011781(void)\n\n{\n    *0x10034f54 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 61
    },
    "100023c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.100023c0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    \n    if (0 < *(param_2 + 8)) {\n        iVar1 = 0;\n        do {\n            if (*(*(param_2 + 4) + iVar1) != *(iVar1 + unaff_EDI)) {\n                return *(*(param_2 + 4) + iVar1) - *(iVar1 + unaff_EDI);\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_2 + 8));\n    }\n    return 0;\n}\n",
        "token_count": 153
    },
    "10002d20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.10002d20(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n                 uint param_8, uint param_9, uint param_10, uint param_11, uint param_12, uint param_13, uint param_14, \n                 uint param_15, uint param_16, uint param_17, uint param_18, uint param_19, uint param_20, uint param_21\n                 , uint param_22, uint param_23, uint param_24, uint param_25, uint param_26, uint param_27, \n                 uint param_28, uint param_29, uint param_30, uint param_31, uint param_32, uint param_33, uint param_34\n                 , uint param_35, uint param_36, uint param_37, uint param_38, uint param_39, uint param_40, \n                 uint param_41, uint param_42, uint param_43, uint param_44, uint param_45, uint param_46, uint param_47\n                 , uint param_48, uint param_49, uint param_50, uint param_51, uint param_52)\n\n{\n    int32_t iVar1;\n    uint unaff_EBP;\n    int32_t unaff_ESI;\n    uint unaff_retaddr;\n    \n    *(unaff_ESI + 0x98) = *(unaff_ESI + 0xa8);\n    *(unaff_ESI + 0x9c) = *(unaff_ESI + 0xac);\n    *(unaff_ESI + 0xa0) = *(unaff_ESI + 0xb0);\n    *(unaff_ESI + 0xa8) = *(unaff_ESI + 0xb8);\n    *(unaff_ESI + 0xa4) = *(unaff_ESI + 0xb4);\n    *(unaff_ESI + 0xac) = *(unaff_ESI + 0xbc);\n    *(unaff_ESI + 0xb0) = *(unaff_ESI + 0xc0);\n    *(unaff_ESI + 0xb8) = *(unaff_ESI + 200);\n    *(unaff_ESI + 0xb4) = *(unaff_ESI + 0xc4);\n    *(unaff_ESI + 0xbc) = *(unaff_ESI + 0xcc);\n    *(unaff_ESI + 0xc0) = *(unaff_ESI + 0xd0);\n    *(unaff_ESI + 0xc4) = *(unaff_ESI + 0xd4);\n    do {\n        iVar1 = fcn.100031b0(unaff_ESI, unaff_ESI, unaff_EBP, unaff_retaddr, param_1, param_2, param_3, param_4, param_5\n                             , param_6, param_7, param_8, param_9, param_10, param_11, param_12, param_13, param_14, \n                             param_15, param_16, param_17, param_18, param_19, param_20, param_21, param_22, param_23, \n                             param_24, param_25, param_26, param_27, param_28, param_29, param_30, param_31, param_32, \n                             param_33, param_34, param_35, param_36, param_37, param_38, param_39, param_40, param_41, \n                             param_42, param_43, param_44, param_45, param_46, param_47, param_48, param_49, param_50, \n                             param_51, param_52);\n    } while (iVar1 == 0);\n    return;\n}\n",
        "token_count": 865
    },
    "10007170": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.10007170(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    if (*(unaff_EDI + 8) == 0) {\n        return 1;\n    }\n    iVar2 = 0;\n    if (0 < *(unaff_EDI + 8)) {\n        do {\n            iVar1 = (****(unaff_EDI + 4))();\n            if (iVar1 == 0) {\n                do {\n                    iVar2 = iVar2 + -1;\n                    if (iVar2 < 0) {\n                        return 0;\n                    }\n                    iVar1 = (**(**(unaff_EDI + 4) + 4))();\n                } while (iVar1 == 0);\n                if (iVar2 < 0) {\n                    return 0;\n                }\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(unaff_EDI + 8));\n    }\n    return 1;\n}\n",
        "token_count": 222
    },
    "100071c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.100071c0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    \n    iVar2 = *(unaff_EDI + 8);\n    if (iVar2 == 0) {\n        return iVar2;\n    }\n    do {\n        iVar3 = iVar2;\n        iVar2 = iVar3 + -1;\n        if (iVar2 < 0) {\n            return 0;\n        }\n        iVar1 = (**(**(unaff_EDI + 4) + 4))();\n    } while (iVar1 == 0);\n    if (iVar2 < 0) {\n        return 0;\n    }\n    if (iVar3 < *(unaff_EDI + 8)) {\n        do {\n            iVar2 = (****(unaff_EDI + 4))();\n            if (iVar2 == 0) {\n                iVar3 = iVar3 + -1;\n                if (iVar3 < 0) {\n                    return 0;\n                }\n                while (iVar2 = (**(**(unaff_EDI + 4) + 4))(),  iVar2 == 0) {\n                    iVar3 = iVar3 + -1;\n                    if (iVar3 < 0) {\n                        return 0;\n                    }\n                }\n                if (iVar3 < 0) {\n                    return 0;\n                }\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(unaff_EDI + 8));\n    }\n    return 1;\n}\n",
        "token_count": 343
    },
    "1000d6b5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.1000d6b5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.10009af4(0x10031bd0, 0xc);\n    fcn.1000bc05(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x1003986c;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x10039868;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x1000d6f9;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.1000896a(arg_8h_00);\ncode_r0x1000d6f9:\n        fcn.1000896a(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.1000d71c();\n    fcn.10009b39();\n    return;\n}\n",
        "token_count": 406
    }
}