{
    "0041a9e4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0041a9e4(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iStack80;\n    int32_t iStack44;\n    uint var_ch;\n    \n    iStack80 = 0;\n    if (arg_14h == 0 && arg_18h != 0) {\n        do {\n            if ((arg_18h - arg_14h) * (arg_18h - arg_14h) -\n                (arg_18h * arg_18h + arg_18h * arg_14h * -2 + arg_14h * arg_14h) != 0) {\n                (*_sym.imp.RPCRT4.dll_RpcBindingSetAuthInfoExA)(0, 0, 0x41cb1d48, 0x3b78dcbc, 0, 0xe27af70, 0);\n                return;\n            }\n            *(arg_8h + iStack80) = *(arg_ch + iStack80);\n            iStack80 = iStack80 + 1;\n        } while (iStack80 != arg_18h);\n    }\n    iVar1 = *(arg_10h + 0xc);\n    iVar2 = *(arg_10h + 0x10);\n    iVar3 = *(arg_10h + 0x14);\n    iStack44 = 0;\n    if (iVar2 != 0) {\n        do {\n            if (arg_18h * -2 * arg_18h + arg_18h * arg_18h + arg_18h * arg_18h != 0) {\n                return;\n            }\n            *(iStack44 + arg_8h + iVar1) = *(arg_ch + iVar3 + iStack44);\n            iStack44 = iStack44 + 1;\n        } while (iStack44 != iVar2);\n    }\n    return;\n}\n",
        "token_count": 478
    },
    "0041c16a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint fcn.0041c16a(void)\n\n{\n    bool bVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t in_FS_OFFSET;\n    bool bVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iStack108;\n    uchar auStack76 [8];\n    int32_t *piStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    int32_t *piStack56;\n    int32_t iStack52;\n    uint32_t uStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_bp_ch;\n    \n    uStack28 = 0;\n    uStack32 = 0x28e7b6e0;\n    iStack52 = 0;\n    piStack56 = 0x6f217666;\n    iVar7 = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    (*_sym.imp.ADVAPI32.dll_RegDisablePredefinedCacheEx)();\n    uVar6 = 0x240;\n    (*_sym.imp.GDI32.dll_CreateSolidBrush)();\ncode_r0x0041c27d:\n    if (5 < *(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0xa4)) goto code_r0x0041c2bb;\n    goto code_r0x0041c1d0;\ncode_r0x0041c2bb:\n    iVar7 = fcn.00434c74(uVar6, iVar7);\n    uVar4 = iStack60 + -1 + (0x4a6f108d < uStack64);\n    piStack68 = iVar7 + *(iVar7 + 0x3c);\n    iVar7 = uStack64 + 0x38bd3d31;\n    bVar5 = iStack60 + (0xa03707b1 < uStack64) != 0;\n    bVar1 = 0x270bbb1c < uStack64 + 0x5fc8f84e && iVar7 != 0;\n    if (bVar5) {\n        bVar1 = bVar5;\n    }\n    uVar6 = uVar6 & 0xffffff | bVar1 << 0x18;\n    if (bVar1 == false) {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegDisablePredefinedCacheEx)();\n        return uVar2;\n    }\n    iStack52 = iStack108 + -0x274a59b1;\n    uVar3 = iStack36 + (0xefbb2dc3 < uStack40);\n    bVar1 = uStack40 + 0x1044d23c < uStack64 + 0xb590ef72;\n    if (uVar3 != uVar4) {\n        bVar1 = uVar3 < uVar4;\n    }\n    if (!bVar1) {\n        piStack56 = NULL;\n        if (*piStack68 == 0x4550) {\n            piStack56 = piStack68;\n        }\n        if ((5 < *(piStack56 + 0x12)) && (*(piStack56 + 0x12) != 6 || *(piStack56 + 0x4a) != 0)) {\n            fcn.00434fb0();\n            return 1;\n        }\ncode_r0x0041c1d0:\n        (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(auStack76);\n    }\n    goto code_r0x0041c27d;\n}\n",
        "token_count": 816
    },
    "00434911": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.00434911(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int16_t iVar3;\n    int32_t in_FS_OFFSET;\n    bool bVar4;\n    uint32_t uStack96;\n    uint var_ch;\n    \n    iVar1 = *(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0xc);\n    puVar2 = *(iVar1 + 0x14);\n    while( true ) {\n        if (puVar2 == iVar1 + 0x14) {\n            return NULL;\n        }\n        if (arg_ch != NULL && puVar2[4] == arg_ch) break;\n        uStack96 = 0;\n        if (*(puVar2 + 9) >> 1 != 0) {\n            do {\n                iVar3 = *(puVar2[10] + uStack96 * 2);\n                if (iVar3 - 0x41U < 0x1a) {\n                    iVar3 = iVar3 + 0x20;\n                }\n                bVar4 = *(arg_8h + uStack96 * 2) == iVar3;\n                uStack96 = uStack96 + 1;\n            } while ((bVar4 && iVar3 != 0) && uStack96 < *(puVar2 + 9) >> 1);\n            if (bVar4) {\n                return puVar2[4];\n            }\n        }\n        puVar2 = *puVar2;\n    }\n    return puVar2 + -2;\n}\n",
        "token_count": 364
    },
    "00434e43": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00434e7f)\n\nuint fcn.00434e43(void)\n\n{\n    uint64_t uVar1;\n    uint uVar2;\n    uchar auVar3 [12];\n    uchar auVar5 [16];\n    uint64_t auStack156 [4];\n    int32_t iStack124;\n    uint uStack120;\n    uint64_t *puStack116;\n    uint uStack112;\n    uint uStack108;\n    uchar *puStack104;\n    uint32_t uStack100;\n    int32_t iStack96;\n    uint32_t uStack92;\n    uchar auStack88 [72];\n    int32_t iStack16;\n    uint uStack12;\n    uchar auVar4 [13];\n    uchar uVar6;\n    \n    iStack16 = 0x1d5775e9;\n    uStack108 = 0;\n    uStack112 = 0x2da75101;\n    puStack116 = auStack156;\n    puStack104 = auStack88;\n    uStack92 = 0;\n    do {\n        uStack100 = uStack92;\n        iStack124 = 0;\n        do {\n            *(auStack156 + iStack124) = *(iStack124 + 0x41a871) - *(iStack124 + 0x41a923);\n            iStack124 = iStack124 + 1;\n        } while (iStack124 != 0xe);\n        if ((uStack100 & 1) != 0) {\n            iStack96 = 0;\n            if (iStack16 + 0xe2a88a19U < uStack100) {\n                uVar2 = fcn.00434911(auStack88, 0);\n                return uVar2;\n            }\n            do {\n                uVar1 = *(auStack156 + iStack96);\n                uVar6 = SUB141(ZEXT814(uVar1) >> 0x30, 0);\n                auVar4 = ZEXT813(uVar1);\n                auVar3 = ZEXT812(uVar1);\n                auVar5 = psraw(CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(SUB1610\n                                                            (CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(\n                                                            SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313(SUB163(\n                                                            CONCAT214(SUB162(CONCAT115(SUB161(ZEXT816(uVar1) >> 0x38, 0)\n                                                                                       , CONCAT114(SUB151(ZEXT815(uVar1)\n                                                                                                          >> 0x38, 0), \n                                                                                                   ZEXT814(uVar1))) >>\n                                                                             0x70, 0), CONCAT113(uVar6, auVar4)) >> 0x68\n                                                            , 0), CONCAT112(uVar6, auVar3)) >> 0x60, 0), \n                                                            CONCAT111(SUB131(auVar4 >> 0x28, 0), ZEXT811(uVar1))) >>\n                                                            0x58, 0), CONCAT110(SUB121(auVar3 >> 0x28, 0), uVar1)) >>\n                                                            0x50, 0), CONCAT19(SUB131(auVar4 >> 0x20, 0), uVar1)) >>\n                                                            0x48, 0), CONCAT18(SUB121(auVar3 >> 0x20, 0), uVar1)) >>\n                                                            0x40, 0), (uVar1 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (uVar1 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (uVar1 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (uVar1 >> 0x10) << 0x20) >> 0x20, 0), (uVar1 >> 8) << 0x18)\n                                                            >> 0x18, 0), (uVar1 >> 8) << 0x10) >> 0x10, 0), \n                                         uVar1 & 0xff | uVar1 << 8), 8);\n                *(auStack88 + iStack96 * 2) = auVar5;\n                iStack96 = iStack96 + 8;\n            } while (iStack96 != 0x20);\n        }\n        uStack92 = uStack100 + 1;\n        uStack120 = 0;\n    } while (uStack100 + 1 != 5);\n    return 0;\n}\n",
        "token_count": 1052
    },
    "004351cf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.004351cf(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uStack88;\n    uint16_t *puStack76;\n    uint32_t uStack56;\n    uint var_bp_ch;\n    \n    iVar3 = fcn.00434c74();\n    iVar4 = 0;\n    if (*(iVar3 + *(iVar3 + 0x3c)) == 0x4550) {\n        iVar4 = iVar3 + *(iVar3 + 0x3c);\n    }\n    iVar4 = *(iVar4 + 0x78) + iVar3;\n    if (*(iVar4 + 0x18) != 0) {\n        puStack76 = *(iVar4 + 0x24) + iVar3;\n        uStack88 = 0;\n        do {\n            uStack56 = 0;\n            do {\n                cVar1 = *(arg_8h + uStack56);\n                cVar2 = *(iVar3 + *(iVar3 + *(iVar4 + 0x20) + uStack88 * 4) + uStack56);\n                if (cVar2 == '\\0') break;\n                uStack56 = uStack56 + 1;\n            } while ((cVar2 == cVar1 && cVar1 != '\\0') && uStack56 < 0x20);\n            if (cVar2 == cVar1) {\n                return iVar3 + *(iVar3 + *(iVar4 + 0x1c) + *puStack76 * 4);\n            }\n            puStack76 = puStack76 + 1;\n            uStack88 = uStack88 + 1;\n        } while (uStack88 < *(iVar4 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 423
    },
    "00435555": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0043562d)\n\nvoid __cdecl fcn.00435555(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iStack64;\n    uint32_t uStack44;\n    uint var_ch;\n    \n    if (arg_8h != 0 && arg_ch != 0) {\n        iVar1 = 0;\n        if (*(arg_ch + *(arg_ch + 0x3c)) == 0x4550) {\n            iVar1 = arg_ch + *(arg_ch + 0x3c);\n        }\n        if (*(iVar1 + 6) != 0) {\n            iStack64 = iVar1 + *(iVar1 + 0x14) + 0x18;\n            uStack44 = 0;\n            do {\n                fcn.0041a9e4(arg_8h, arg_ch, iStack64, uStack44, *(iVar1 + 0x54));\n                uStack44 = uStack44 + 1;\n                iStack64 = iStack64 + 0x28;\n            } while (uStack44 < *(iVar1 + 6));\n        }\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "0041ac3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041ac3e(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_14h;\n    uint var_10h;\n    \n    var_14h = 0;\n    var_20h = 0xffffffff;\n    var_1ch = 0xffffffff;\n    if (arg_ch != 0) {\n        do {\n            do {\n                iVar3 = var_14h;\n                uVar2 = var_20h;\n                iVar4 = arg_ch * arg_ch;\n                uVar6 = iVar4 * iVar4 * iVar4;\n                uVar5 = iVar4 * arg_ch * iVar4 * arg_ch;\n                puVar1 = arg_8h + var_14h;\n                var_14h = 0xc7ecd18;\n                var_20h = 0x30859d57;\n            } while (uVar5 <= uVar6 && uVar6 - uVar5 != 0);\n            var_14h = iVar3 + 1;\n            var_20h = (*puVar1 ^ uVar2) * uVar2;\n            var_1ch = var_20h;\n        } while (var_14h != arg_ch);\n    }\n    return var_1ch;\n}\n",
        "token_count": 374
    },
    "00434822": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00434822(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    if (arg_8h != NULL) {\n        cVar1 = *arg_8h;\n        var_1ch = 1;\n        var_14h = 0;\n        while (iVar2 = var_1ch,  cVar1 != '\\0') {\n            var_1ch = iVar2 + 1;\n            var_14h = iVar2;\n            cVar1 = arg_8h[iVar2];\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 206
    },
    "00434b8d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nint16_t * __cdecl fcn.00434b8d(int32_t arg_8h)\n\n{\n    code *pcStack44;\n    int16_t *piStack40;\n    uint var_bp_4h;\n    \n    pcStack44 = fcn.00434b2a;\n    if (arg_8h == 0) {\n        for (; (piStack40 = pcStack44,  *pcStack44 != 0x5a4d || (*(pcStack44 + *(pcStack44 + 0x3c)) != 0x4550));\n            pcStack44 = pcStack44 + -0x1000 & 0xfffff000) {\n        }\n    }\n    else {\n        piStack40 = fcn.00434911(arg_8h, 0);\n    }\n    return piStack40;\n}\n",
        "token_count": 198
    },
    "00434fb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuchar * fcn.00434fb0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    code *pcStack204;\n    uint auStack180 [2];\n    uint uStack172;\n    uchar auStack164 [52];\n    uint uStack112;\n    uint uStack108;\n    int16_t *piStack88;\n    uint uStack84;\n    int32_t iStack64;\n    uint uStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uint uStack48;\n    int16_t iStack42;\n    uint32_t uStack40;\n    int32_t iStack36;\n    int32_t iStack28;\n    int32_t iStack24;\n    uint var_bp_ch;\n    \n    iStack28 = 0x794f8b2e;\n    iStack42 = 0xc87;\n    fcn.0043588e(auStack180);\n    uStack112 = auStack180[0];\n    uStack108 = 0x11600;\n    if (*0x44227c != 0) {\n        iStack56 = *0x44227c;\n    }\n    uStack52 = *0x442284;\n    uStack48 = *0x442280;\n    uStack60 = *0x442288;\n    pcStack204 = fcn.00434b2a;\n    iVar3 = iStack24 * 2;\n    if (*0x442278 != 0) {\n        pcStack204 = fcn.00434b2a;\n        iStack64 = *0x442278;\n        iVar3 = iStack24 * 0x48fa7a3d;\n    }\n    for (; (iStack24 = iVar3,  *pcStack204 != 0x66d4 - iStack42 || (*(pcStack204 + *(pcStack204 + 0x3c)) != 0x4550));\n        pcStack204 = pcStack204 + iStack28 + -0x794f9b2e & 0x794f7b2eU - iStack28) {\n        iVar3 = iStack24;\n    }\n    piStack88 = pcStack204;\n    uStack84 = *(pcStack204 + *(pcStack204 + 0x3c) + 0x50);\n    pcVar4 = fcn.004356f5(auStack164, uStack172);\n    iStack36 = uStack40 * iStack36;\n    uVar1 = uStack40;\n    uVar2 = uStack40;\n    uStack40 = uVar1 * uVar2;\n    iStack36 = (uVar1 * uVar2 >> 0x20) + iStack36 * 2;\n    (*pcVar4)(auStack164);\n    return auStack164;\n}\n",
        "token_count": 642
    },
    "004353dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nuint __cdecl fcn.004353dc(uint arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint32_t uStack116;\n    uint uStack112;\n    uint32_t uStack108;\n    uint uStack104;\n    uint32_t uStack92;\n    ushort uStack76;\n    ushort uStack74;\n    char *pcStack72;\n    uint uStack68;\n    char acStack64 [42];\n    uint16_t uStack22;\n    uint32_t uStack20;\n    uint var_bp_8h;\n    \n    uStack22 = 0xfe62;\n    uStack92 = 0;\n    do {\n        acStack64[uStack92] = *(uStack92 + 0x41a87f) - *((uStack92 & 0xf) + 0x41a923);\n        uStack20 = uStack20 | 0x742e8282;\n        uStack92 = uStack92 + 1;\n    } while (uStack92 != 0x18);\n    uStack112 = 0;\n    if (arg_ch != NULL) {\n        pcVar2 = fcn.004351cf(acStack64);\n        pcStack72 = arg_ch;\n        cVar1 = *arg_ch;\n        uStack108 = 0;\n        uStack116 = 1;\n        while (cVar1 != '\\0') {\n            cVar1 = arg_ch[uStack116];\n            uStack108 = uStack116;\n            uStack116 = uStack116 + 1;\n        }\n        uStack76 = uStack108;\n        uStack104 = 0;\n        if ((uStack108 & 0xffff) != 0) {\n            uStack68 = 0;\n            uStack74 = uStack76;\n            (*pcVar2)(arg_8h, &uStack76, uStack22 ^ 0xfe62, &uStack68, &uStack76);\n            uStack104 = uStack68;\n        }\n        uStack112 = uStack104;\n    }\n    return uStack112;\n}\n",
        "token_count": 473
    },
    "004356f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004356f5(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    code *pcVar1;\n    int32_t arg_8h_01;\n    uint var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    \n    var_10h = 0x69cd3050;\n    var_54h = 0;\n    while( true ) {\n        (&var_20h)[var_54h] = *(var_54h * 4 + 0x41a898);\n        var_64h = 0;\n        do {\n            *(&var_40h + var_64h) = *(var_64h + 0x41a8a8) - *(var_64h + 0x41a923);\n            var_64h = var_64h + 1;\n        } while (var_64h != 0xe);\n        arg_8h_00 = fcn.00434e43();\n        pcVar1 = fcn.004353dc(arg_8h_00, &var_40h);\n        if (pcVar1 == NULL) break;\n        var_54h = var_54h + (var_10h ^ 0x69cd3051);\n        if (var_54h == 4) {\n            var_ch = var_ch | 0x3c5b873b;\n            arg_8h_01 = (*pcVar1)(0, var_20h, var_1ch, var_18h);\n            fcn.00435555(arg_8h_01, arg_ch);\n            *(arg_8h + 0x54) = arg_8h_01;\n            *(arg_8h + 0x58) = arg_8h_01 + -0x400000;\n            return arg_8h_01 + 0x28b1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 536
    },
    "0043588e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00435a32)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043588e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iStack184;\n    uint uStack164;\n    uint32_t uStack160;\n    uint uStack152;\n    uint32_t uStack132;\n    int32_t iStack128;\n    char acStack116 [28];\n    int32_t iStack88;\n    int32_t iStack84;\n    code *pcStack80;\n    int32_t iStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint uStack40;\n    int32_t iStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint var_ch;\n    \n    iStack36 = 0x29d758f0;\n    uStack132 = 0;\n    uStack152 = 0;\n    uStack164 = 0;\n    iStack128 = 0;\n    do {\n        uStack68 = uStack164;\n        uStack64 = uStack152;\n        iStack76 = *(iStack128 * 0xc4 + 0x4360b8);\n        iVar1 = *(iStack128 * 0xc4 + 0x4360c0);\n        uStack40 = 0xcf49b336;\n        iStack84 = 0x29d758f0 - iStack36;\n        do {\n            uVar3 = 0x1e415624 << (uStack32 & 0x1f);\n            uVar2 = uStack32 & 0x20;\n            uStack32 = uVar3;\n            uStack28 = 0 << (uStack32 & 0x1f) | 0x1e415624U >> 0x20 - (uStack32 & 0x1f);\n            if (uVar2 != 0) {\n                uStack32 = 0;\n                uStack28 = uVar3;\n            }\n            (&stack0xffffff8c)[iStack84] = *(iStack84 + 0x41a8a8) - *(iStack84 + 0x41a923);\n            iStack84 = iStack84 + 1;\n        } while (iStack84 != 0xe);\n        uStack52 = iVar1 + uStack132 + iStack76;\n        arg_8h_00 = fcn.00434e43();\n        pcStack80 = fcn.004353dc(arg_8h_00, &stack0xffffff8c);\n        uStack164 = 4;\n        uStack152 = 0x1000;\n        if (pcStack80 == NULL) {\n            uStack152 = uStack64;\n            uStack164 = uStack68;\n        }\n        iStack128 = iStack128 + 1;\n        uStack132 = uStack52;\n        uStack48 = uStack164;\n    } while (iStack128 != 0xfe);\n    uStack28 = 0;\n    uStack32 = 0;\n    iStack88 = (*pcStack80)(0, uStack52, uStack152, uStack164);\n    iStack72 = 0;\n    iStack184 = 0;\n    do {\n        iStack60 = iStack184;\n        iStack56 = iStack56 * 0x299d759f;\n        iVar1 = *(iStack184 * 0xc4 + 0x4360bc);\n        uVar3 = *(iStack184 * 0xc4 + 0x4360c0) + *(iStack184 * 0xc4 + 0x4360b8);\n        iStack76 = iStack72 + iStack88;\n        uStack160 = 0;\n        uVar2 = uStack52 ^ 0x29d758f0;\n        while (uVar3 != uVar2) {\n            *(iStack76 + uStack160) = *(iVar1 + uStack160);\n            uStack160 = uStack160 + 1;\n            uVar2 = uStack160;\n        }\n        iStack72 = uVar3 + iStack72;\n        iStack184 = iStack184 + 1;\n    } while (iStack184 != 0xfe);\n    fcn.00435809(iStack88, iStack88, uStack68);\n    *0x435c18 = iStack88 + 0x46d6;\n    *0x435c1c = 0x11600;\n    *0x435c20 = iStack88 + 0x563;\n    *0x435c24 = 0x4140;\n    return 0;\n}\n",
        "token_count": 1106
    },
    "00435c54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00435d02)\n\nvoid __cdecl fcn.00435c54(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uStack40;\n    uint var_bp_ch;\n    \n    uStack40 = 0;\n    if (arg_10h != 0) {\n        do {\n            *(arg_8h + uStack40) = *(arg_ch + uStack40) - *((uStack40 & 0xf) + 0x41a923);\n            uStack40 = uStack40 + 1;\n        } while (uStack40 != arg_10h);\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "0041a9c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041a9c4(void)\n\n{\n    uint var_4h;\n    \n    return 0x436000;\n}\n",
        "token_count": 31
    },
    "0041ad4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041adfe)\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.0041ad4f(void)\n\n{\n    uint32_t auStack552 [124];\n    uint32_t *puStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack32;\n    uint uStack28;\n    uint uStack20;\n    uint var_8h;\n    \n    uStack20 = 0x2cbc8113;\n    uStack44 = 0;\n    uStack48 = 0x6e3faea0;\n    puStack56 = auStack552;\n    uStack52 = 0;\n    do {\n        uStack32 = 0x4416a800;\n        uStack28 = 0;\n        auStack552[uStack52 % 0x7b] = auStack552[uStack52] ^ uStack52;\n        uStack52 = uStack52 + 1;\n    } while (uStack52 != 1000);\n    return;\n}\n",
        "token_count": 242
    },
    "0041ae7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041ae7e(void)\n\n{\n    uint uVar1;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint *unaff_ESI;\n    uchar *unaff_EDI;\n    \n    (*_sym.imp.SHLWAPI.dll_SHCopyKeyW)();\n    *0xd9bca6d9 = *0xd9bca6d9 & unaff_EBX >> 8;\n    *(unaff_EDI + 0x21) = *(unaff_EDI + 0x21) + extraout_ECX;\n    uVar1 = *unaff_ESI;\n    *unaff_EDI = *(unaff_ESI + 1);\n    return uVar1;\n}\n",
        "token_count": 160
    },
    "0041c13d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c13d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    *0x442288 = arg_ch;\n    *0x442278 = arg_10h;\n    *0x442280 = arg_8h;\n    fcn.0041c16a();\n    return;\n}\n",
        "token_count": 85
    },
    "0041c35d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041c35d(void)\n\n{\n    uint unaff_EBX;\n    uint unaff_EBP;\n    \n    *0x442280 = unaff_EBX;\n    *0x442288 = unaff_EBP;\n    fcn.0041c13d(unaff_EBX, unaff_EBP, &stack0x00000004);\n    return;\n}\n",
        "token_count": 83
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint entry0(void)\n\n{\n    bool bVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t in_FS_OFFSET;\n    bool bVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iStack116;\n    uchar auStack84 [8];\n    int32_t *piStack76;\n    uint32_t uStack72;\n    int32_t iStack68;\n    int32_t *piStack64;\n    int32_t iStack60;\n    uint32_t uStack48;\n    int32_t iStack44;\n    uint uStack40;\n    uint uStack36;\n    uint var_bp_ch;\n    uint var_4h;\n    \n    uVar2 = fcn.0041c35d();\n    *0x442280 = unaff_EBX;\n    *(unaff_EBP + -4) = uVar2;\n    *0x442278 = *0x442278 + 4;\n    uStack36 = 0;\n    uStack40 = 0x28e7b6e0;\n    iStack60 = 0;\n    piStack64 = 0x6f217666;\n    iVar7 = 0;\n    *0x44227c = unaff_ESI;\n    *0x442284 = unaff_EDI;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    (*_sym.imp.ADVAPI32.dll_RegDisablePredefinedCacheEx)();\n    uVar6 = 0x240;\n    (*_sym.imp.GDI32.dll_CreateSolidBrush)();\ncode_r0x0041c27d:\n    if (5 < *(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0xa4)) goto code_r0x0041c2bb;\n    goto code_r0x0041c1d0;\ncode_r0x0041c2bb:\n    iVar7 = fcn.00434c74(uVar6, iVar7);\n    uVar4 = iStack68 + -1 + (0x4a6f108d < uStack72);\n    piStack76 = iVar7 + *(iVar7 + 0x3c);\n    iVar7 = uStack72 + 0x38bd3d31;\n    bVar5 = iStack68 + (0xa03707b1 < uStack72) != 0;\n    bVar1 = 0x270bbb1c < uStack72 + 0x5fc8f84e && iVar7 != 0;\n    if (bVar5) {\n        bVar1 = bVar5;\n    }\n    uVar6 = uVar6 & 0xffffff | bVar1 << 0x18;\n    if (bVar1 == false) {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegDisablePredefinedCacheEx)();\n        return uVar2;\n    }\n    iStack60 = iStack116 + -0x274a59b1;\n    uVar3 = iStack44 + (0xefbb2dc3 < uStack48);\n    bVar1 = uStack48 + 0x1044d23c < uStack72 + 0xb590ef72;\n    if (uVar3 != uVar4) {\n        bVar1 = uVar3 < uVar4;\n    }\n    if (!bVar1) {\n        piStack64 = NULL;\n        if (*piStack76 == 0x4550) {\n            piStack64 = piStack76;\n        }\n        if ((5 < *(piStack64 + 0x12)) && (*(piStack64 + 0x12) != 6 || *(piStack64 + 0x4a) != 0)) {\n            fcn.00434fb0();\n            return 1;\n        }\ncode_r0x0041c1d0:\n        (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(auStack84);\n    }\n    goto code_r0x0041c27d;\n}\n",
        "token_count": 945
    },
    "0043479d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.0043479d(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iStack52;\n    uint var_bp_ch;\n    \n    iStack52 = 0;\n    if (arg_10h != 0) {\n        do {\n            *(arg_8h + iStack52) = *(arg_ch + iStack52);\n            iStack52 = iStack52 + 1;\n        } while (iStack52 != arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 144
    },
    "00434c74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00434e41)\n\nvoid fcn.00434c74(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uchar auVar6 [12];\n    uchar auVar8 [16];\n    uchar auStack148 [64];\n    uint32_t uStack84;\n    int32_t iStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uint64_t auStack68 [4];\n    uint32_t uStack36;\n    uint32_t uStack32;\n    int32_t iStack28;\n    uint32_t uStack24;\n    uint var_bp_ch;\n    uchar auVar7 [13];\n    uchar uVar9;\n    \n    iVar3 = iStack28;\n    uVar2 = uStack32;\n    uStack36 = uStack36 | 0x44fb9750;\n    uStack24 = 0xdd0856b;\n    uStack72 = 0xbefdbb0;\n    uStack32 = uStack32 & 0x3af3496e;\n    iStack28 = 0;\n    uStack76 = 0;\n    do {\n        uStack84 = uStack76;\n        uVar5 = uStack24 ^ 0xdd08560;\n        iStack28 = iVar3 + -1 + (0x68ca3fa3 < uVar2);\n        uStack32 = uVar2 + 0x9735c05c;\n        uVar4 = uStack24 ^ 0xdd0856a;\n        *(auStack68 + uStack76) = *(uStack76 + 0x41a866) - *(uStack76 + 0x41a923);\n        uStack76 = uVar4 + uStack76;\n        iStack80 = 0;\n    } while (uStack76 != uVar5);\n    do {\n        uVar1 = *(auStack68 + iStack80);\n        uVar9 = SUB141(ZEXT814(uVar1) >> 0x30, 0);\n        auVar7 = ZEXT813(uVar1);\n        auVar6 = ZEXT812(uVar1);\n        auVar8 = psraw(CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(SUB1610(\n                                                            CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(\n                                                            SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313(SUB163(\n                                                            CONCAT214(SUB162(CONCAT115(SUB161(ZEXT816(uVar1) >> 0x38, 0)\n                                                                                       , CONCAT114(SUB151(ZEXT815(uVar1)\n                                                                                                          >> 0x38, 0), \n                                                                                                   ZEXT814(uVar1))) >>\n                                                                             0x70, 0), CONCAT113(uVar9, auVar7)) >> 0x68\n                                                            , 0), CONCAT112(uVar9, auVar6)) >> 0x60, 0), \n                                                            CONCAT111(SUB131(auVar7 >> 0x28, 0), ZEXT811(uVar1))) >>\n                                                            0x58, 0), CONCAT110(SUB121(auVar6 >> 0x28, 0), uVar1)) >>\n                                                            0x50, 0), CONCAT19(SUB131(auVar7 >> 0x20, 0), uVar1)) >>\n                                                            0x48, 0), CONCAT18(SUB121(auVar6 >> 0x20, 0), uVar1)) >>\n                                                            0x40, 0), (uVar1 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (uVar1 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (uVar1 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (uVar1 >> 0x10) << 0x20) >> 0x20, 0), (uVar1 >> 8) << 0x18)\n                                                           >> 0x18, 0), (uVar1 >> 8) << 0x10) >> 0x10, 0), \n                                 uVar1 & 0xff | uVar1 << 8), 8);\n        iVar3 = 0xdd08573 - uStack24;\n        *(auStack148 + iStack80 * 2) = auVar8;\n        iStack80 = iStack80 + iVar3;\n    } while (iStack80 != 0x20);\n    fcn.00434911(auStack148, 0);\n    return;\n}\n",
        "token_count": 1098
    },
    "00434f85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00434f85(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = 0;\n    if (*(arg_8h + *(arg_8h + 0x3c)) == 0x4550) {\n        iVar1 = arg_8h + *(arg_8h + 0x3c);\n    }\n    return iVar1;\n}\n",
        "token_count": 101
    },
    "00435537": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435537(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00434e43();\n    fcn.004353dc(arg_8h_00, arg_8h);\n    return;\n}\n",
        "token_count": 73
    },
    "00435809": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435809(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = 0;\n    do {\n        for (uVar1 = *(var_1ch * 4 + 0x442290); uVar1 < arg_10h; uVar1 = uVar1 + 0x58) {\n            *(arg_8h + uVar1) = *(arg_ch + uVar1) - *(*0x44228c + uVar1 % 0x6c);\n        }\n        var_1ch = var_1ch + 1;\n    } while (var_1ch != 0x58);\n    return;\n}\n",
        "token_count": 222
    },
    "004348fa": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.004348fa(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return *(*(in_FS_OFFSET + 0x18) + 0x30);\n}\n",
        "token_count": 40
    }
}